{"version":3,"sources":["components/Field/Input.tsx","lib/utils/manupulateURL.js","lib/connector.js","lib/converter.js","hooks/useFetch.ts","hooks/useHandleFetch.ts","pages/auth/login/Login.tsx","pages/auth/login/index.ts","state/utils/createReducer.js","state/utils/fetch.js","state/ducks/globalState/reducers.js","state/ducks/globalState/types.js","state/ducks/globalState/actions.js","state/ducks/globalState/index.js","utils/index.ts","layout/sider/Sider.tsx","layout/sider/index.ts","components/Empty/index.ts","components/Empty/Empty.tsx","layout/header/Header.tsx","layout/header/index.ts","pages/overview/ApiVisits.tsx","pages/overview/OrderOverView.tsx","pages/overview/PlatformVisits.tsx","pages/overview/PageVisits.tsx","pages/overview/Overview.tsx","components/Field/TextArea.tsx","components/MediaLibrary/MediaLibrary.tsx","components/MediaLibrary/index.ts","pages/category/MetaTags.tsx","pages/category/CategoryNewQuickEdit.tsx","components/Placeholders/DataTableSkeleton.tsx","pages/category/CategoryList.tsx","pages/category/AddNewCategory.tsx","pages/category/QuickEdit.tsx","pages/category/CategoryNewEdit.tsx","pages/category/NewCategoryDetail.tsx","components/Field/InputSmall.tsx","components/Notification/Notification.tsx","pages/product/Tags.tsx","pages/product/Brands.tsx","pages/product/Categories.tsx","pages/productBundle/ProductBundleQuickEdit.tsx","pages/productBundle/SelectProducts.tsx","pages/order/AddNewOrderProductItem.tsx","pages/productBundle/SelectedProductItems.tsx","pages/productBundle/AddNewProductBundle.tsx","pages/productBundle/ProductBundleList.tsx","pages/productBundle/ProductBundleEdit.tsx","pages/coupon/CouponProducts.tsx","pages/productBundle/ProductBundleDetail.tsx","pages/brand/AddNewBrand.tsx","pages/brand/BrandQuickEdit.tsx","pages/brand/BrandList.tsx","pages/brand/BrandEdit.tsx","pages/brand/NewBrandDetail.tsx","pages/product/Attributes.tsx","pages/product/Pricing.tsx","pages/product/AddNewProduct.tsx","pages/product/ProductQuickEdit.tsx","pages/product/ProductList.tsx","pages/product/ProductEdit.tsx","pages/product/NewProductDetail.tsx","pages/tag/TagQuickEdit.tsx","pages/tag/AddNewTag.tsx","pages/tag/TagList.tsx","pages/tag/TagEdit.tsx","pages/tag/NewTagDetail.tsx","pages/coupon/OrderedProductsSelectProducts.tsx","pages/coupon/OrderedProductsSelectedProductItems.tsx","pages/coupon/CouponEdit.tsx","pages/coupon/CouponDetail.tsx","pages/coupon/CouponQuickEdit.tsx","pages/coupon/AddNewCoupon.tsx","pages/coupon/CouponList.tsx","pages/customer/AddNewCustomer.tsx","pages/customer/QuickEdit.tsx","pages/customer/CustomerList.tsx","pages/customer/CustomerEdit.tsx","pages/customer/CustomerDetail.tsx","pages/pages/PagesList.tsx","pages/pages/PageDetail.tsx","pages/pages/AddNewPage.tsx","pages/pages/PageEdit.tsx","pages/attribute/QuickEdit.tsx","pages/attribute/AddAttributeValues.tsx","pages/attribute/AttributeList.tsx","pages/order/OrderInvoice.jsx","pages/order/productItemForOrderDetail.tsx","pages/order/QuickEdit.tsx","pages/order/OrderList.tsx","pages/order/AddNewOrderSummary.tsx","pages/order/CustomersId.tsx","pages/order/AddProducts.tsx","pages/order/AddNewOrder.tsx","pages/order/OrderEdit.tsx","pages/order/OrderNoteEdit.tsx","pages/order/OrderDetail.tsx","pages/order/orderAnalytics/ThisMonthOrderReport.tsx","pages/order/orderAnalytics/ThisWeekOrderReport.tsx","pages/order/orderAnalytics/DateOrderReport.tsx","pages/order/orderAnalytics/HourOrderReport.tsx","pages/order/orderAnalytics/MonthOrderReport.tsx","pages/order/orderAnalytics/YearOrderReport.tsx","pages/order/orderAnalytics/DeliveryRegionReport.tsx","pages/order/orderAnalytics/index.ts","pages/order/orderAnalytics/OrderOverviewReport.tsx","pages/order/ConfigOrderStatus.tsx","pages/settings/ComponentItem.tsx","pages/settings/AddNewComponent.tsx","pages/settings/ComponentListComponentItem.tsx","pages/settings/AddNewComponentItem.tsx","pages/settings/Component.tsx","pages/settings/AddNewTheme.tsx","pages/settings/ManageThemes.tsx","pages/settings/Image.tsx","pages/settings/Invoice.tsx","pages/settings/AdminSiteInfo.tsx","pages/settings/SiteInfoInvoice.tsx","pages/settings/SiteSeo.tsx","pages/settings/ChangeAdminPassword.tsx","pages/settings/SiteInfo.tsx","pages/delivery/CitySelectForDeliveryRegion.tsx","pages/delivery/DeliveryCharge.tsx","pages/delivery/AddNewRegion.tsx","pages/delivery/QuickEdit.tsx","pages/delivery/Delivery.tsx","pages/sms/ConfigureSMS.tsx","pages/sms/NewCustomerTemplate.tsx","pages/sms/NewDealerAutoEventsTemplate.tsx","pages/sms/OrderStatusTemplateAutoEmail.tsx","pages/sms/OrderTemplateAutoEmail.tsx","pages/sms/ConfigureAutoEmail.tsx","pages/sms/ComposeCustomSMS.tsx","pages/sms/InboxEmailDetails.tsx","pages/sms/Inbox.tsx","pages/sms/Sms.tsx","pages/sms/index.ts","pages/email/ConfigureSTMP.tsx","pages/email/NewCustomerTemplate.tsx","pages/email/NewDealerAutoEventsTemplate.tsx","pages/email/OrderStatusTemplateAutoEmail.tsx","pages/email/OrderTemplateAutoEmail.tsx","pages/email/ConfigureAutoEmail.tsx","pages/email/ComposeCustomEmail.tsx","pages/email/InboxEmailDetails.tsx","pages/email/Inbox.tsx","pages/email/Email.tsx","pages/notification/NotificationList.tsx","pages/admins/AccessCheckbox.tsx","state/ducks/credentials/reducers.js","state/ducks/credentials/types.js","state/ducks/credentials/actions.js","state/ducks/credentials/index.js","pages/admins/QuickEdit.tsx","pages/admins/AddNewAdmin.tsx","pages/admins/AdminList.tsx","pages/admins/AdminEdit.tsx","pages/admins/AdminDetail.tsx","pages/post/Tags.tsx","pages/post/Categories.tsx","pages/post/SelectProducts.tsx","pages/post/SelectedProductItems.tsx","pages/post/PostQuickEdit.tsx","pages/post/AddNewPost.tsx","pages/post/PostList.tsx","pages/post/PostEdit.tsx","pages/post/PostDetail.tsx","pages/post/postTags/QuickEdit.tsx","pages/post/postTags/AddNewPostTag.tsx","pages/post/postTags/PostTagList.tsx","pages/post/postTags/TagEdit.tsx","pages/post/postTags/NewPostTagDetail.tsx","pages/post/postCategory/MetaTags.tsx","pages/post/postCategory/QuickEdit.tsx","pages/post/postCategory/AddNewPostCategory.tsx","pages/post/postCategory/PostCategoryList.tsx","pages/post/postCategory/PostCategoryEdit.tsx","pages/post/postCategory/NewPostCategoryDetail.tsx","components/Field/DatePicker.tsx","pages/staff/AddNewStaff.tsx","pages/staff/QuickEdit.tsx","pages/staff/StaffList.tsx","pages/staff/StaffEdit.tsx","pages/staff/StaffDetail.tsx","pages/staff/salaryReport/ComponentItem.tsx","pages/staff/salaryReport/AddNewSalaryReport.tsx","pages/staff/salaryReport/SalaryReportList.tsx","pages/staff/salaryReport/SalaryReportDetail.tsx","pages/expense/QuickEdit.tsx","pages/expense/AddNewExpense.tsx","pages/expense/ExpenseList.tsx","pages/expense/ExpenseEdit.tsx","pages/expense/ExpenseDetail.tsx","pages/dealer/Areas.tsx","pages/dealer/AddNewDealer.tsx","pages/dealer/QuickEdit.tsx","pages/dealer/DealerList.tsx","pages/dealer/DealerEdit.tsx","pages/dealer/DealerDetail.tsx","pages/dealer/Area/AreaQuickEdit.tsx","pages/dealer/Area/AddNewArea.tsx","pages/dealer/Area/AreaList.tsx","pages/dealer/Area/AreaEdit.tsx","pages/dealer/Area/AreaDetail.tsx","layout/content/Content.tsx","layout/content/index.ts","App.tsx","state/ducks/busy/utils.js","state/ducks/busy/reducers.js","state/ducks/busy/index.js","state/ducks/cart/utils.js","state/ducks/cart/selectors.js","state/ducks/cart/index.js","state/ducks/cart/reducers.js","state/ducks/cart/types.js","state/ducks/wishList/utils.js","state/ducks/wishList/index.js","state/ducks/wishList/reducers.js","state/ducks/wishList/types.js","state/ducks/checkout/selectors.js","state/ducks/checkout/index.js","state/ducks/checkout/reducers.js","state/ducks/checkout/types.js","state/ducks/checkout/utils.js","state/ducks/search/types.js","state/ducks/search/utils.js","state/ducks/search/index.js","state/ducks/search/reducers.js","state/ducks/product/reducers.js","state/ducks/product/types.js","state/ducks/product/index.js","state/ducks/session/reducers.js","state/ducks/session/types.js","state/ducks/session/index.js","state/ducks/category/reducers.js","state/ducks/category/types.js","state/ducks/category/index.js","state/ducks/cache/reducers.js","state/ducks/cache/types.js","state/ducks/cache/index.js","state/ducks/brand/reducers.js","state/ducks/brand/types.js","state/ducks/brand/index.js","state/ducks/tag/reducers.js","state/ducks/tag/types.js","state/ducks/tag/index.js","state/middlewares/apiService.js","state/middlewares/logger.js","state/store.js","index.tsx"],"names":["Demo","Input","TextArea","required","addonBefore","label","type","value","defaultValue","onChange","disabled","isError","errorString","name","placeHolder","min","className","Item","validateStatus","help","onKeyDown","event","key","preventDefault","style","borderRadius","placeholder","isObjectEmpty","Object","keys","length","manupulateURL","url","urlOptions","params","placeHolders","console","log","split","map","currentValue","includes","actualPlaceholderValue","replace","fuckValue","item","join","param","slice","indexOf","converter","resData","data","formatedData","category","id","_id","description","productCount","parent","cover","config","thumbnail","icon","image","img","medium","added","title","labels","alt","caption","subCount","subCategory","children","subCat","original","notiData","forEach","not","read","push","noti","heading","text","link","page","next","convertedData","product","regularPrice","price","offerPrice","unit","pricing","date","time","venue","brand","tags","parseInt","available","minimum","cartItems","items","cartItem","quantity","cartKey","updated","status","avalable","isNext","post","body","preparationTime","servingSize","cookingTime","requiredProducts","detail","category2","cat","anotherPrice","startDate","endDate","actualPrice","products","visit","count","itemId","firstName","lastName","country","city","email","phone","address1","address2","created","code","minimumOrder","maximumOrder","freeProducts","orderedProductsCount","orderedProducts","freeProductsCount","amountType","amount","freeDelivery","maxUsePerUser","tag","recipient","subject","html","sms","success","msg","succes","customer","dealerName","dealer","address","commission","depositMoney","theme","components","component","region","pickUpLocation","countryCode","countryName","charge","availableStock","minimumStock","primaryCategory","inserted","staff","topic","order","shippingAddress","shortCode","total","totalPrice","deliveryCharge","deliveryRegion","deliveryName","deliveryPickUpLocation","deliveryCountryName","date_created","paymentMethod","paymentStatus","payment","customerId","billingAddress","generalFormat","dataMap","line_items","paymentItems","number","src","target","navLinkItems","sliderItems","images","sliderRightItems","servicesItems","accountItems","aboutUsItems","Connector","this","options","getUrlOptions","getUrl","api","method","limitNumber","format","apiMap","server","credentials","headers","Headers","JSON","stringify","fetch","baseURL","res","formattedData","error","connector","dataFetchReducer","state","action","isLoading","done","payload","Error","useFetch","dependencies","initialData","initialState","useReducer","dispatch","useEffect","didCancel","a","request","fetchData","useHandleFetch","validationSchema","Yup","shape","username","password","initialValues","Login","loginState","handleLoginFetch","handleSubmit","values","actions","setSubmitting","getisSubmitButtonDisabled","isValid","onSubmit","validateOnBlur","enableReinitialize","handleChange","errors","isSubmitting","touched","setFieldTouched","handleBlur","handleReset","maxWidth","margin","e","onClick","loading","reducerMap","reducer","Accept","isomorphicFetch","then","Promise","resolve","reject","response","parseStatus","json","globalState","createReducer","roles","saveRoles","isAccess","role","adminRoles","Sider","Layout","Header","Content","Footer","SubMenu","Menu","mapDispathToProps","glboalOperations","connect","useState","collapsed","setcollapsed","width","boxShadow","border","collapsible","onCollapse","selectable","mode","PieChartOutlined","to","GoldOutlined","RadarChartOutlined","TagsOutlined","TagOutlined","BranchesOutlined","FireOutlined","CarOutlined","ShoppingCartOutlined","UserOutlined","MailOutlined","MessageOutlined","FileOutlined","FileSearchOutlined","FileAddOutlined","SettingOutlined","UserAddOutlined","SlidersOutlined","BgColorsOutlined","Empty","height","display","justifyContent","alignItems","PRESENTED_IMAGE_SIMPLE","props","history","useHistory","getAllNotificationState","handleGetAllNOticationFetch","handleMarkNotificationAsReadFetch","handleMarkAllNotificationAsReadFetch","notificationList","setnotificationList","sortItem","sortOrderValue","getAllNotification","handleNotificationAsRead","handleAllNotificationAsRead","notification","message","CheckCircleOutlined","color","typeIcon","background","zIndex","transition","alignContent","marginTop","marginLeft","cursor","marginRight","placement","overlay","backgroundColor","padding","textAlign","fontSize","href","index","moment","overflowCount","showZero","TwitterSquareFilled","fontWeight","BellOutlined","LogoutOutlined","Option","Select","RangePicker","DatePicker","MONTHS","TooltipContainerStyles","ApiVisits","selectedApiValue","setSelectedApiValue","setStartDate","setEndDate","demoGraphicVisitsState","handleDemoGraphicVisitsStateFetch","userData","setuserData","metricType","startDateValue","endDateValue","uservisitsDataRes","getDemoGraphicVisitsValue","Date","thisMonth","getMonth","bordered","showSearch","optionFilterProp","filterOption","input","option","toLowerCase","size","x1","y1","x2","y2","offset","stopColor","vertical","strokeDasharray","stroke","dataKey","tickFormatter","orientation","axisLine","tickLine","contentStyle","formatter","fill","showTime","picker","orderAnalyticsVisitsState","handleOrderAnalyticsVisitsStateFetch","orderData","setorderData","ordersDataRes","getAnalyticsOrders","localOptions","COLORS","PlatformVisits","demographicData","setdemographicData","RADIAN","Math","PI","marginBottom","outerRadius","innerRadius","nameKey","cx","cy","midAngle","percent","radius","x","cos","y","sin","dominantBaseline","toFixed","labelLine","entry","CalendarOutlined","Column","Table","ColumnGroup","PageVisits","pageVisitsState","handlePageVisitsStateFetch","visitType","getPageVisitsValue","pagination","defaultPageSize","dataSource","tableLayout","onHeaderRow","column","dataIndex","render","record","textTransform","Overview","handleAnalyticsProductVisitCountFetch","handleAnalyticsCategoryVisitCountFetch","handleGetTotalUserCountFetch","getTotalUserCount","getProductVisitCount","getCategoryVisitCount","OrderOverView","rows","Dragger","Upload","TabPane","Tabs","openSuccessNotification","MediaLibrary","visible","setvisible","setmyImages","isModalOpenForImages","myImages","isModalOpenForThumbnail","setmyThumbnailImage","myThumbnailImage","mediaLibTagActiveKey","setmediaLibTagActiveKey","fileList","setfileList","uploading","setuploading","selectedimages","setselectedImages","activeImageItem","setactiveImageItem","updateMediaLibrary","handleUpdateMediaLibraryFetch","imageListFromLibraryState","handleImageListFromLibraryFetch","handleDeleteImageFromLibraryFetch","localImageList","setLocalImageList","isDoneOk","setisDoneOk","handleDeleteImageFromImageLibrary","deleteImageLibraryItemRes","newImageList","filter","getImageList","imageListRes","handleUpload","formData","FormData","file","append","reqwest","processData","withCredentials","uploadProps","multiple","onRemove","filelist","newFileList","splice","beforeUpload","xflelist","handleAddToSelectedList","find","newselectedImages","handleUpdateSubmit","updateImageLibraryItemRes","positionInImageList","updatedItem","assign","updateImageList","openErrorNotification","InfoCircleOutlined","getisUpdateSubmitButtonDisabled","top","onOk","onCancel","bodyStyle","okText","activeKey","tab","listType","FileImageOutlined","ArrowUpOutlined","lenght","CloseOutlined","CheckOutlined","DeleteOutlined","ImageItemMenu","EllipsisOutlined","onConfirm","cancelText","MetaTags","inputVisible","inputValue","editInputIndex","editInputValue","handleClose","removedTag","setTags","showInput","setState","focus","handleInputChange","handleInputConfirm","handleEditInputChange","handleEditInputConfirm","newTags","saveInputRef","saveEditInputRef","editInput","ref","onBlur","onPressEnter","isLongTag","tagElem","closable","onClose","onDoubleClick","PlusOutlined","React","Component","bnName","bnDescription","metaTitle","bnMetaTitle","metaDescription","bnMetaDescription","metaTags","bnMetaTags","displayOrder","ModalChildComponent","addNewCategoryVisible","setAddNewCategoryVisible","categoryList","setcategoryList","categoryDetailData","categoryList2","addCategoryState","handleAddCategoryFetch","categoryDetailState","handleCategoryDetailFetch","handleUpdateCategoryIconFetch","handleUpdateCategoryThumbnailFetch","isparentCategoryChecked","setisparentcategoryChecked","setisModalOpenForThumbnail","setisModalOpenForImages","selectedParentId","setselectedParentId","imageFile","setImagefile","imageUrl","setImageUrl","thumbnailImageFile","setThumbnailImagefile","thumbnailImageUrl","setThumbnailImageUrl","loadingThumnail","setLoadingThumbnail","bnTags","setBnTags","coverImageId","setCoverImageId","handleAttachImageToItemMultipleFetch","handleAttachImageToItemSingleFetch","handleDetachImageFromItemSingleFetch","handleSetImageAsThumbnailToItemFetch","getProductDetail","mahImages","handleSetImageAsThumnail","handleDetachSingleImage","imageId","collection","thumbnailRes","imagesIds","trim","aboutToUpdatedImageIds","bn","addCategoryRes","getCover","positionInTag","updateTagList","resetForm","err","i","onSwitchChange","checked","onChangeSelect","getBase64","callback","reader","FileReader","addEventListener","result","readAsDataURL","setNewIcon","beforeThumbnailUpload","iconUrl","uploadButton","LoadingOutlined","defaultChecked","showUploadList","newImages","handleImagesDelete","FileImageFilled","AddNewCategory","destroyOnClose","footer","okButtonProps","htmlType","DataTable","speed","viewBox","foregroundColor","rx","ry","r","metadata","github","filename","Search","MyTable","data2","activeCategoryForEdit","setactiveCategoryForEdit","handleDeleteCategoryFetch","handleDeleteCategory","deleteCategoryRes","newCategoryList","align","EditOutlined","CategoryNewQuickEdit","withRouter","categoryState","handleCategoryListFetch","setcategoryList2","isSubCategory","productCountValue","categories","setCategories","enterButton","handleSearch","DataTableSkeleton","bnData","bnFormData","get","handleCancel","setcategoryDetailData","CoolInput","categoryProductsState","handleCategoryProductsFetch","useParams","categoryId","categoryEditVisible","setCategoryEditVisible","categoryDetail","setcategoryDetail","categoryDetailDataRes","getCategoryDetail","getCategoryProducts","row","imgs","columns","localIndex","columnNumber","getImagesInCollumn","CategoryNewEdit","avatar","paragraph","paddingTop","overflow","objectFit","allowClear","ExclamationCircleOutlined","CheckableTag","Tag","Tags","setTagIds","setSelectedTags","selectedTags","setoptions","tagState","handleTagListFetch","searchValue","setsearchValue","selectedCategoryName","selectedcategory","tagListRes","tagOptions","borderColor","onSearch","categoryNames","newOptions","nextSelectedTags","t","selectedCategoryIds","Brands","setBrandId","brandId","productDetailState","setSelectedBrandId","brandState","brandListRes","brandOptions","setBrands","onFocus","val","Categories","setcategoryIds","categoryOptions","setCategoryOptions","categoryListRes","checkable","checkedKeys","onSelect","selectedKeys","info","onCheck","checkedIds","treeData","defaultExpandAll","checkStrictly","bundlePrice","AddNewProduct","bundleList","productList","setBundleList","setProductList","productDetailData","updateProductState","handleProductDetailFetch","categoryids","tagIds","setPricing","setDateFeild","setTimeFeild","setDescription","setBNDescription","setMetaTags","setBnMetaTags","productIds","setProductIds","addProductState","handleAddProductFetch","regular","offer","setPrice","variation","model","metaUnit","addProductRes","positionInAttribute","updateProductList","newProductList","isTrue","categoryIds","editor","ClassicEditor","onInit","getData","InputSmall","selectedOpions","setselectedOptions","isProductIdsfirstTime","selectItems","o","CartOverLayCartItem","productId","handleProductFetch","setProduct","setIsLoading","modifiedPrice","setModifiedPrice","selectedVariationId","setSelectedVariationId","getAndSetProduct","handleChangeQuantity","updateAttributeList","convertAttributeValuesToStringValue","attribute","attributeValue","pricingOptions","pricingItem","pricingOption","getPricingOptions","priceItem","getPriceByVariationId","tagId","handleAttributeChange","AddNewOrderSummary","flexDirection","AddNewOrderProductItem","SelectProducts","SelectedProductItems","setTagList","handleDeleteTagFetch","handleDeleteTag","deleteTagRes","newtagList","ProductBundleQuickEdit","TagList","tagList","productType","newTagList","AddNewProductBundle","CouponProducts","NewBrandDetail","productEditVisible","setProductEditVisible","ProductBundleEdit","AddNewBrand","brandList","setBrandList","updateBrandState","handleUpdateBrandFetch","visibleMedia","setvisibleMedia","addBrandRes","ModalComponentChildItem","brandDetailData","setBrandEditVisible","brandEditVisible","brandDetailState","handleBrandDetailFetch","myGoddamnImages","setMyGoddamnImages","getBrandDetail","updateBrandRes","handleDeleteBrandFetch","handleDeleteBrand","deleteBrandRes","newBrandList","BrandQuickEdit","handlebrandListFetch","brands","setBrandDetailData","brandProductsState","handleBrandProductsFetch","brandDetailRes","getBrandProducts","BrandEdit","Complete","setAttributeList","attributeList","suggestedOptions","setsuggesteOptions","attributeLisState","attributeItem","setAttributeITem","manupulatedOptions","suggestedOption","toUpperCase","Pricing","handleAddPricing","handleUpdatePricing","isPricingEditActive","setprice","stock","setStock","attributeListItems","attributeKey","handlePriceChange","handleStockChange","Attributes","minHeight","purchaseLimit","bnUnit","editpricingItem","setEditPricingItem","pricingTagActiveKey","setpricingTagActiveKey","seTisPricingEditActive","updatePricingList","animated","tabPosition","handleEditPricing","newPricing","handleDeletePricing","textDecoration","handleUpdateProductFetch","selectedTagNames","selectedTagIds","updatedProductRes","handleDeleteProductFetch","handleUpdateOrderStatusFetch","handleDeleteProduct","deleteProductRes","handleUpdateOrderStatus","newStatus","inStock","updateOrderStatusRes","updateOrderList","StatusItemMenu","DownOutlined","ProductQuickEdit","productState","handleProductListFetch","setProducts","setProductDetailData","productDetailRes","ProductEdit","QuickEdit","tagEditVisible","setTagEditVisible","tagDetailData","updateTagState","handleUpdateCategoryFetch","updateTagRes","addTagState","handleAddTagFetch","addTagRes","TagQuickEdit","AddNewTag","setTagDetailData","tagDetailState","handleTagDetailFetch","tagProductsState","handleTagProductsFetch","tagDetailRes","getTagProducts","TagEdit","selecttedOptions","addCouponState","handleAddCouponStateFetch","couponDetailState","handleCouponDetailFetch","freeProductIds","freeProductList","setFreeProductList","handleStartEndDateRangeDate","undefined","OrderedProductsSelectProducts","OrderedProductsSelectedProductItems","CouponEdit","CouponQuickEdit","Couponlist","AddNewCoupon","zipCode","dealerCode","customerList","setCustomerList","addCustomerState","handleAddCustomerFetch","selectedCountryValue","setselectedCountryValue","selectedCityValue","setselectedCityValue","countryOptions","setcountryOptions","cityOptions","setcityOptions","countryListState","handleCountryListFetch","cityListState","handleCityListFetch","toggleReferralCode","settoggleReferralCode","addCustomerRes","onChangeCity","onChangeCountry","CountryListRes","setCountries","cityListRes","setCities","notFoundContent","updateCustomerState","handleUpdateCustomerFetch","updateCustomerRes","handleDeleteCustomerFetch","handleDeleteCustomer","deleteCustomerRes","newCustomerList","customerState","handleCustomerListFetch","orderStatusFilterValue","setorderStatusFilterValue","getSorttingvalue","customers","setCustomers","AddNewCustomer","setCustomerDetailData","customerDetailState","handleCustomerDetailFetch","orderListState","handleOrderListFetch","customerDetailData","customerDetailDataRes","getCustomerDetail","getOrderList","CustomerEdit","handleDeletePageFetch","handleDeletePage","deletePageRes","pageList","setPageList","pageState","handlePagsListFetch","pages","setPages","ReactHtmlParser","Steps","Step","content","bnContent","AddNewPage","addPageState","handleAddPageFetch","setContent","setBnContent","handleAddPageSubmit","addOrderRes","updateCategoryState","EditableTagGroup","AttributeList","AddAttributeValues","ComponentToPrint","orderDetailState","invoiceSettingsState","anotherRef","cellPadding","cellSpacing","bgcolor","borderBottom","paddingBottom","lineHeight","verticalAlign","colSpan","unitPrice","whiteSpace","OrderInvoice","setShowInvoice","showInvoice","handleOrderDetailFetch","componentRef","useRef","createRef","handlSiteInvoiceSettingsFetch","getSiteSettings","getOrderDetail","window","print","targetRef","toPdf","FilePdfOutlined","documentTitle","trigger","PrinterOutlined","current","setOrderList","orderList","updateOrderState","handleUpdateOrderFetch","addRegionRes","updateRegionList","newOrderstatus","orderState","deliveryRegionNameValue","setdeliveryRegionNameValue","statusValue","regions","setOrders","regionList","setRegionList","handleRegionListFetch","regionListOptions","setRegions","joiningDate","Status","newOrderList","DownloadOutlined","memo","ShopOutlined","setCustomerId","setSelectedCustomerData","customerData","productListState","productOptions","additionalInfo","steps","AddNewOrder","addOrderState","handleOrderFetch","selectedCustomerData","setCurrent","customerListState","handleDeliveryRegionFetch","deliveryRegionName","setDeliveryRegionName","setSelectedRegion","regionDeliveryCharge","setregionDeliveryCharge","isDeliveryChargeExists","cityName","deliveryRegionState","getAndSetShippingDeliveryCharge","selectedRegion","handleCheckoutSubmit","delivery","CustomersId","AddProducts","Group","flexWrap","deliveryRegionItem","handleDeviliveryRegionChange","ClockCircleOutlined","CaretRightOutlined","CaretLeftOutlined","summary","note","setOrderNotes","orderNotes","activeNote","orderDetailNotesState","handleOrderDetailNotesFetch","handleDeleteOrderNoteFetch","activeOrderNote","setActiveOrderNote","isOrderNoteEdit","setIsOrderNoteEdit","isInvoiceShow","setIsInvoiceShow","handleDeleteOrderNote","newOrderNoteList","OrderNoteEdit","OrderEdit","EyeOutlined","flex","minWidth","noteItem","getMonthNameByOrder","WEEEK","getWeekNameByOrder","getHourFormatter","DeliveryRegionReport","OrderOverviewReport","ThisWeekOrderReport","ThisMonthOrderReport","DateOrderReport","HourOrderReport","MonthOrderReport","YearOrderReport","ConfigOrderStatus","setItemsList","itemsList","componentItem","localComponentItem","setlocalComponentItem","handleComponentItemsChange","updateComponentList","groupName","componentList","setComponentList","addComponentState","handleAddComponentFetch","addComponentRes","handleAddComponentItem","itemComponent","ComponentItem","componentUpdate","isLoadingUpdate","Set","SaveOutlined","updateComponentByAddingItem","componentId","Panel","Collapse","genExtra","updateComponentByDeleting","stopPropagation","genExtraForGroup","setitemVisible","handleDeleteComponent","setComponentId","groupVisible","setgroupVisible","itemVisible","componentState","handleComponentListFetch","handleDeleteComponentFetch","updateComponentState","handleUpdateComponentFetch","imageValue","setComponents","deleteComponentRes","newComponentList","positionInItemsOfComponent","componentIndex","positionInComponents","itemIndex","manupulatedLocalComponentForTheReq","componentItems","imgItem","updatedItems","manupulatedUpdatedItems","manupulatedUpdatedItem","updateComponentRes","accordion","expandIconPosition","expandIcon","isActive","rotate","header","extra","ComponentListComponentItem","AddNewComponent","AddNewComponentItem","themeList","setThemeList","addThemeState","handleAddthemeFetch","setselectedThemeTypeValue","setname","thumbnailFile","setThumbnailFile","addThemeRes","path","InboxOutlined","themeState","handleThemeListFetch","handleActiveThemeFetch","handleDeleteThemeFetch","themes","setThemes","handleActiveTheme","activeThemeRes","handleDeleteTheme","deleteThemeRes","newThemeList","danger","AddNewTheme","Image","Invoice","adminEmail","adminName","adminPhone","UpdateSiteinfo","UpdateSiteSettingsState","handleUpdateSiteSettingsFetch","siteSettingsState","handlSiteSettingsFetch","addSiteInfoRes","invoiceTitle","additionalText","updateInfovSettingsState","handleUpdateInvoiceSettingsFetch","InvoiceSettingsState","updateInvoiceRes","UpdateSiteSEO","newPassword","newPassword2","oneOf","newPass","ChangeAdminPassword","newPassRepeat","paddingRight","SiteInfo","handleUpdateSiteLogoAndIconFetch","iconimageUrl","setIconImageUrl","loadingIcon","setloadingIcon","appLogo","setAppLogo","loadingAppLogo","setloadingAppLogo","iconUploadButton","appIconUploadButton","defaultActiveKey","AdminSiteInfo","onError","SiteSeo","SiteInfoInvoice","AccessCheckbox","checkedList","setCheckedList","plainOptions","checkAll","setCheckAll","setPlainOptions","setInterminate","checkedCities","accessItem","span","DeliveryCharge","deliveryChargeItem","setdeliveryChargeList","deliveryChargeList","handleDeliveryChargeChange","updatedValue","handleAttributeDelete","AddNewRegion","addRegionState","handleRegionFetch","accesscheckedList","setAccessCheckedList","floor","random","handleAddDeliveryCharge","CitySelectForDeliveryRegion","updateRegionState","handleUpdateRegionFetch","deliveryChargeListFromRegionDetail","chargeKey","handleDeleteRegioFetch","handleDeleteRegion","deleteRegionRes","newRegionList","charges","regionState","ConfigureSTMP","getEmailConfigurationState","handleGetEmailConfigurationFetch","emailConfigurationState","handleEmailConfigurationFetch","isAuthenticated","setIsAuthenticated","isArraySupport","setIsArraySupport","configurationData","setConfigurationData","setMethod","protocol","setProtocol","getEmailConfiguration","authentication","parameters","recipientKey","arraySupport","separator","textKey","mask","maskKey","maskValue","usernameKey","usernameValue","passwordKey","passwordValue","additional","MsgType","additionalMsgType","handleAuthenticatedChange","prottocolOptions","methodOptions","handleMethodChange","handleProtocolChange","setVisible","autoEmailTemplate","handleAutoEmailTemplateFetch","handleGetConfigureAutoEmailTemplateFetch","setcustomer","admin","setadmin","getConfigurationAutoEmailTemplateRes","eventName","getCustomerAutoEmail","overflowY","user","ConfigureAutoEmail","getAutoEmailConfigurationState","handleGetAutoEmailConfigurationFetch","configureAutoEmailConfigurationState","handleAutoEmailConfigurationFetch","isnewCustomerAdmin","setnewCustomerAdmin","isnewCustomerCustomer","setnewCustomerCustomer","isnewDealerAdmin","setnewDealerAdmin","isnewDealer","setnewDealerDealer","isorderAdmin","setorderAdmin","isorderStatusAdmin","setorderStatusAdmin","isorderCustomer","setorderCustomer","isorderStatusCustomer","setIsorderStatusCustomer","newcustomermodal","setnewcustomermodal","newDealermodal","setnewDealermodal","ordermodal","setordermodal","orderStatusmodal","setorderStatusmodal","autoEmailData","setAutoEmailData","getAutoEmailConfiguration","handleUpdateAutoEmail","newCustomer","orderStatus","newDealer","updateAutoEmailRes","NewCustomerTemplate","NewDealerAutoEventsTemplate","OrderStatusTemplateAutoEmail","OrderTemplateAutoEmail","ComposeCustomEmail","sendCustomerEmailState","handleSendCustomEmailFetch","setText","setrecipient","handleMsgSend","tokenSeparators","SendOutlined","InboxEmailDetails","setSelectedEmailId","getEmailDetailState","handleGetEmailListFetch","LeftOutlined","Inbox","emailList","getEmailListState","setEmailList","selectedEmailId","substring","Sms","limitCount","sortItemValue","PlusCircleOutlined","SMS","fromEmail","fromName","host","encryption","port","smtpUsername","smtpPassword","sethtml","NotificationList","saveCredentials","credentialsOperations","access","password2","passwordConfirmation","AddNewAdminRoles","deleteTagState","AddNewAdmin","AdminEdit","bnBody","bnPreparationTime","bnServingSize","bnCookingTime","ModalComponentChild","setBody","setBnBody","tagsOne","categoryOne","tagNames","setPostDetailData","postDetailData","AddNewPostCategory","DatePickerComponent","withTime","salary","designation","fatherName","motherName","NID","handleTimeChange","dateString","StaffQuickEdit","AddNewStaff","setCustomer","customerDetail","setCustomerDetail","StaffEdit","month","setMonthFeild","convertedYear","convertedMonth","convertedStaffs","bonus","convince","negative","year","handleMonthChange","UsergroupAddOutlined","months","totalSalary","totalBonus","totalConvince","totalExtra","totalNegative","AddNewExpense","ExpenseEdit","max","dealerArea","Areas","area","areas","registeredCustomerListState","handleRegisteredCustomerListFetch","getRegisteredOrderList","hasSider","exact","NewCategoryDetail","BrandList","NewProductDetail","ProductBundleList","ProductBundleDetail","CouponList","PostList","PostTagList","PostCategoryList","PostDetail","NewPostTagDetail","NewPostCategoryDetail","CouponDetail","NewTagDetail","OrderList","OrderDetail","DealerList","AreaList","AreaDetail","DealerDetail","StaffList","SalaryReportList","SalaryReportDetail","StaffDetail","ExpenseList","ExpenseDetail","CustomerDetail","PagesList","PageEdit","PageDetail","Delivery","ManageThemes","AdminList","AdminDetail","Email","handleAdminCredentCialsFetch","getCredenCials","actionShouldBlock","meta","async","blocking","actionFinished","utils","productPositionInCart","cart","newCartItem","isSelectedForCheckout","tempArrayWithOutOldProduct","productPositionInWishList","wishList","wishlist","ADD","queryPositionInQueryList","queryList","query","types","currentItem","oldQuery","tempArrayWithOutOldQueries","detailsReducer","listReducer","combineReducers","details","list","authReducer","redirectAfterLoginReducer","redirectUrl","redirectAfterLogin","cartReducer","baseUrl","document","apiService","handleResponse","handleErrors","rootReducer","reducers","persistConfig","storage","pReducer","persistReducer","store","createStore","compose","applyMiddleware","__REDUX_DEVTOOLS_EXTENSION__","f","persistStore","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.810fa026.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Form, Input } from 'antd';\r\n\r\nconst { TextArea } = Input;\r\n\r\ninterface Props {\r\n  label?: string;\r\n  type?: string;\r\n  defaultValue?: string;\r\n  value?: string;\r\n  onChange?: any;\r\n  disabled?: boolean;\r\n  isError?: boolean;\r\n  errorString?: string;\r\n  name?: string;\r\n  addonBefore?: string;\r\n  required?: boolean;\r\n  placeHolder?: string;\r\n  min?: any;\r\n}\r\n\r\nconst Demo = ({\r\n  required,\r\n  addonBefore,\r\n  label,\r\n  type,\r\n  defaultValue,\r\n  value,\r\n  onChange,\r\n  disabled,\r\n  isError,\r\n  errorString,\r\n  name,\r\n  placeHolder,\r\n  min,\r\n}: Props) => {\r\n  return (\r\n    <>\r\n      {label && <h3 className='inputFieldLabel'>{label}</h3>}\r\n\r\n      <Form.Item\r\n        // hasFeedback={true}\r\n        validateStatus={isError ? 'error' : ''}\r\n        // hasFeedback validateStatus=\"success\"\r\n        help={errorString}\r\n        // rules={[{ required: true }]}\r\n      >\r\n        <Input\r\n          onKeyDown={(event) => {\r\n            if (type === 'number') {\r\n              if (event.key === 'e' || event.key === '-') {\r\n                event.preventDefault();\r\n              }\r\n            }\r\n          }}\r\n          min={min}\r\n          required={required}\r\n          type={type}\r\n          addonBefore={addonBefore}\r\n          style={{\r\n            borderRadius: '0',\r\n          }}\r\n          name={name}\r\n          disabled={disabled}\r\n          value={value}\r\n          onChange={onChange}\r\n          className='inputclassName'\r\n          placeholder={placeHolder}\r\n        />\r\n      </Form.Item>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Demo;\r\n","const isObjectEmpty = (value) => {\r\n  return !value || !Object.keys(value).length > 0;\r\n};\r\n\r\nconst manupulateURL = (url, urlOptions = {}) => {\r\n  if (isObjectEmpty(urlOptions)) return url;\r\n\r\n  const params = urlOptions.params || {};\r\n  const placeHolders = urlOptions.placeHolders || {};\r\n\r\n  console.log('99fsdfads', urlOptions);\r\n  return url\r\n    .split('/')\r\n    .map((currentValue) => {\r\n      if (\r\n        currentValue.includes(':') &&\r\n        !isObjectEmpty(placeHolders) &&\r\n        !currentValue.includes('?')\r\n      ) {\r\n        console.log('currentValue', currentValue);\r\n        let actualPlaceholderValue =\r\n          placeHolders[currentValue.replace(':', '')];\r\n        console.log('actualPlaceholderValue', actualPlaceholderValue);\r\n        currentValue = actualPlaceholderValue;\r\n      }\r\n\r\n      if (\r\n        currentValue.includes(':') &&\r\n        !isObjectEmpty(placeHolders) &&\r\n        currentValue.includes('?')\r\n      ) {\r\n        let fuckValue = currentValue.split('?');\r\n        if (fuckValue && fuckValue.length > 0) {\r\n          fuckValue = fuckValue.map((item) => {\r\n            return placeHolders[item.replace(':', '')]\r\n              ? placeHolders[item.replace(':', '')]\r\n              : item;\r\n          });\r\n        }\r\n        console.log('fuckValue', fuckValue);\r\n        let actualPlaceholderValue = fuckValue.join('?');\r\n        console.log(\r\n          'actualPlaceholderValue',\r\n          actualPlaceholderValue,\r\n          'currentVAlue',\r\n          currentValue\r\n        );\r\n        console.log('placeHolders', placeHolders);\r\n        currentValue = actualPlaceholderValue;\r\n      }\r\n\r\n      if (currentValue.includes('?')) {\r\n        currentValue = currentValue\r\n          .split('&')\r\n          .map((currentValue) => {\r\n            const param = currentValue.slice(currentValue.indexOf('=') + 1);\r\n            return currentValue.replace(param, params[param] || '');\r\n          })\r\n          .join('&');\r\n      }\r\n      return currentValue;\r\n    })\r\n    .join('/');\r\n};\r\n\r\nexport default manupulateURL;\r\n","import config from '../config.json';\r\nimport apiMap from '../apiMap.json';\r\nimport Converter from './converter.js';\r\n\r\n// import utils\r\nimport { manupulateURL } from './utils';\r\n\r\nlet converter = new Converter();\r\n\r\nclass Connector {\r\n  //TODO\r\n  constructor() {\r\n    this.options = {};\r\n  }\r\n\r\n  /**\r\n   * @method request sends request to server\r\n   * this function determines api url and method from config.json\r\n   * and sends request and converts recieved data to general format\r\n   * @param {String} item\r\n   * @param {String} format\r\n   * @param {Object} data optional\r\n   * @returns {Object}  converted data\r\n   */\r\n\r\n  async request(item, format = 'json', options = {}) {\r\n    let api = apiMap[config.server][item]; //api url & method\r\n\r\n    // configuring options for fetch request\r\n\r\n    this.options = {\r\n      ...this.options,\r\n      method: api.method,\r\n      credentials: 'include',\r\n      headers: new Headers({\r\n        ...(format === 'json' && {\r\n          'Content-Type': 'application/json',\r\n        }),\r\n        ...(options.headers && {\r\n          ...options.headers,\r\n        }),\r\n      }),\r\n\r\n      ...(format === 'json'\r\n        ? {\r\n            body: api.method !== 'get' ? JSON.stringify(options.body) : null,\r\n          }\r\n        : {\r\n            body: api.method !== 'get' ? options.body : null,\r\n          }),\r\n    };\r\n\r\n    function getUrlOptions(urlOptions) {\r\n      if (api.method === 'get') {\r\n        const params = {\r\n          limitNumber: 100000000000,\r\n        };\r\n        return {\r\n          ...(urlOptions && {\r\n            ...urlOptions,\r\n          }),\r\n          params: {\r\n            ...(urlOptions &&\r\n              urlOptions.params && {\r\n                ...urlOptions.params,\r\n              }),\r\n            ...params,\r\n          },\r\n        };\r\n      }\r\n      return urlOptions;\r\n    }\r\n\r\n    function getUrl(url) {\r\n      if (url && api.method === 'get') {\r\n        return url.includes('?')\r\n          ? url + '&limit=limitNumber'\r\n          : url + '?limit=limitNumber';\r\n      }\r\n      return url;\r\n    }\r\n\r\n    //*replace variable parts in url with actual data if params exists |or| just return the url\r\n\r\n    console.log('myUrl', getUrl(api.url), getUrlOptions(options.urlOptions));\r\n\r\n    const url = manupulateURL(\r\n      getUrl(api.url),\r\n      getUrlOptions(options.urlOptions)\r\n    );\r\n\r\n    console.log('myUrl', url);\r\n\r\n    // change the formate to text if the server is wooCommerce\r\n    if (config['server'] === 'wooCommerce') {\r\n      // format = 'text';\r\n    }\r\n\r\n    try {\r\n      let res = await fetch(config.baseURL + url, this.options);\r\n\r\n      if (res.status >= 200 && res.status < 300) {\r\n        let formattedData = await res['json'](); //await res.json(), res.text()\r\n        if (formattedData.status === 'error') {\r\n          throw formattedData.error;\r\n        }\r\n\r\n        let convertedData = await converter[item || ''](formattedData); //convert recieved data to app general format\r\n        return convertedData;\r\n      } else {\r\n        let error = await res['json']();\r\n\r\n        throw error;\r\n      }\r\n    } catch (err) {\r\n      throw err;\r\n      //TODO: breakdown errors\r\n    }\r\n  }\r\n}\r\n\r\nexport default Connector;\r\n","import config from '../config.json';\r\nimport dataMap from '../dataMap.json';\r\nimport moment from 'moment';\r\n\r\nclass Converter {\r\n  /**\r\n   * @public\r\n   * @method categoryList convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n  async categoryList(resData) {\r\n    const data = resData.data || [];\r\n\r\n    const formatedData =\r\n      data.length > 0 &&\r\n      data.map((category) => {\r\n        return {\r\n          ...category,\r\n          id: category._id || '',\r\n          key: category._id || '',\r\n          name: category.name && category.name,\r\n          description: category.description && category.description,\r\n          productCount: category.productCount || 0,\r\n          parent: category.parent || '',\r\n          cover: category.cover\r\n            ? `${config['baseURL']}${category.cover.thumbnail}`\r\n            : null,\r\n          icon: category.icon ? `${config['baseURL']}${category.icon}` : null,\r\n          thumbnail: category.thumbnail ? `${config['baseURL']}${category.thumbnail}` : null,\r\n          image:\r\n            (data.image &&\r\n              data.image.length > 0 &&\r\n              data.image.map((img) => {\r\n                return {\r\n                  id: img._id || '',\r\n                  name: img.name && img.name,\r\n                  cover: `${config['baseURL']}${img.medium}`,\r\n                  added: img.added,\r\n                  title: img.title,\r\n                  labels: img.labels,\r\n                  alt: img.alt,\r\n                  caption: img.caption,\r\n                };\r\n              })) ||\r\n            [],\r\n          subCount:\r\n            category.subCategory.length === 1\r\n              ? category.subCategory[0] && category.subCategory[0].name\r\n                ? category.subCategory.length\r\n                : 0\r\n              : category.subCategory.length,\r\n          ...(category.subCategory &&\r\n            category.subCategory.length > 0 &&\r\n            category.subCategory[0] &&\r\n            category.subCategory[0]['name'] && {\r\n              children: category.subCategory.map((subCat) => {\r\n                return {\r\n                  id: subCat._id || '',\r\n                  key: subCat._id,\r\n                  name: subCat.name && subCat.name,\r\n                  description: subCat.description && subCat.description,\r\n                  cover: subCat.cover\r\n                    ? `${config['baseURL']}${subCat.cover.thumbnail}`\r\n                    : '',\r\n                };\r\n              }),\r\n            }),\r\n        };\r\n      });\r\n\r\n    return formatedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method postCategoryList convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n  async postCategoryList(resData) {\r\n    const data = resData.data && resData.data ? resData.data : [];\r\n\r\n    const formatedData =\r\n      data.length > 0 &&\r\n      data.map((category) => {\r\n        return {\r\n          id: category._id || '',\r\n          key: category._id || '',\r\n          name: category.name && category.name,\r\n          description: category.description && category.description,\r\n          cover: category.cover\r\n            ? `${config['baseURL']}${category.cover.thumbnail}`\r\n            : null,\r\n          icon: category.icon ? `${config['baseURL']}${category.icon}` : null,\r\n        };\r\n      });\r\n\r\n    return formatedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method postCategoryDetail convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n  async postCategoryDetail(resData) {\r\n    const data = resData;\r\n\r\n    if (Object.keys(data).length > 0) {\r\n      return {\r\n        ...data,\r\n        id: data._id || '',\r\n        name: data.name && data.name,\r\n        cover: {\r\n          cover: `${config['baseURL']}${\r\n            data.cover ? data.cover.original && data.cover.original : ''\r\n          }`,\r\n          id: data.cover ? data.cover._id : '',\r\n        },\r\n        url: data.url,\r\n        image:\r\n          (data.image &&\r\n            data.image.length > 0 &&\r\n            data.image.map((img) => {\r\n              return {\r\n                id: img._id || '',\r\n                name: img.name && img.name,\r\n                cover: `${config['baseURL']}${img.original}`,\r\n                added: img.added,\r\n                title: img.title,\r\n                labels: img.labels,\r\n                alt: img.alt,\r\n                caption: img.caption,\r\n              };\r\n            })) ||\r\n          [],\r\n      };\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method getAllNotification convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n  async getAllNotification(resData) {\r\n    const data = resData.data || [];\r\n\r\n    let notiData = [];\r\n    if (data && data.length > 0) {\r\n      data.forEach((not) => {\r\n        if (!not.read) {\r\n          notiData.push(not);\r\n        }\r\n      });\r\n    }\r\n\r\n    return notiData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method getAllNotificationPage convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n  async getAllNotificationPage(resData) {\r\n    const data = resData.data || [];\r\n    const formatedData =\r\n      data.length > 0 &&\r\n      data.map((noti) => {\r\n        return {\r\n          id: noti._id || '',\r\n          key: noti._id || '',\r\n          heading: noti.heading && noti.heading,\r\n          text: noti.text && noti.text,\r\n          type: noti.type,\r\n          link: noti.link || '',\r\n          added: noti.added || '',\r\n          read: noti.read,\r\n        };\r\n      });\r\n\r\n    return formatedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method categorySelectist convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n  async categorySelectist(resData) {\r\n    const data = resData.data || [];\r\n\r\n    const formatedData =\r\n      data.length > 0 &&\r\n      data.map((category) => {\r\n        return {\r\n          id: category._id || '',\r\n          key: category._id || '',\r\n          title: category.name && category.name,\r\n          ...(category.subCategory &&\r\n            category.subCategory.length > 0 &&\r\n            category.subCategory[0] &&\r\n            category.subCategory[0]['name'] && {\r\n              children: category.subCategory.map((subCat) => {\r\n                return {\r\n                  id: subCat._id || '',\r\n                  key: subCat._id,\r\n                  title: subCat.name && subCat.name,\r\n                  cover: subCat.cover\r\n                    ? `${config['baseURL']}${\r\n                        subCat.cover.thumbnail ? subCat.cover.thumbnail : ''\r\n                      }`\r\n                    : '',\r\n                };\r\n              }),\r\n            }),\r\n        };\r\n      });\r\n\r\n    return formatedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method categorySelectist convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n  async postSelectCategoryList(resData) {\r\n    const data = resData.data;\r\n\r\n    const formatedData =\r\n      data.length > 0 &&\r\n      data.map((category) => {\r\n        return {\r\n          id: category._id || '',\r\n          key: category._id || '',\r\n          title: category.name && category.name,\r\n        };\r\n      });\r\n\r\n    return formatedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method categoryProducts convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n  async categoryProducts(resData) {\r\n    const data = resData.data || [];\r\n    const isNext = resData.page.next;\r\n\r\n    const convertedData =\r\n      data.length > 0 &&\r\n      data.map((product) => {\r\n        return {\r\n          id: product._id || '',\r\n          name: product.name && product.name,\r\n          description: product.description && product.description,\r\n          cover: `${config['baseURL']}${\r\n            (product.cover && product.cover['thumbnail']) || ''\r\n          }`,\r\n          regularPrice: product.price && product.price['regular'],\r\n          offerPrice: product.price && product.price['offer'],\r\n          url: product.url,\r\n          unit: product.unit,\r\n          category: product.category,\r\n          pricing: product.pricing,\r\n          date: product.date,\r\n          time: product.time,\r\n          venue: product.venue,\r\n          brand: product.brand,\r\n          tags: product.tags,\r\n          price:\r\n            parseInt(product.price['offer']) >\r\n            parseInt(product.price['regular'])\r\n              ? product.price['offer']\r\n              : product.price['regular'],\r\n          available:\r\n            product.pricing && product.pricing.length > 0\r\n              ? product.pricing[0]['stock'] &&\r\n                product.pricing[0]['stock']['available']\r\n              : 0,\r\n          minimum:\r\n            product.pricing && product.pricing.length > 0\r\n              ? product.pricing[0]['stock'] &&\r\n                product.pricing[0]['stock']['minimum']\r\n              : 0,\r\n        };\r\n      });\r\n\r\n    // return {\r\n    // \tdata: convertedData,\r\n    // \tisNext: isNext\r\n    // };\r\n\r\n    return convertedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method getCart convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n  async getCart(resData) {\r\n    const cartItems = resData.items || [];\r\n    const convertedData =\r\n      cartItems.length > 0 &&\r\n      cartItems.map((cartItem) => {\r\n        return {\r\n          id: cartItem._id || '',\r\n          name: cartItem.name && cartItem.name,\r\n          cover: `${config['baseURL']}${cartItem.cover.medium}`,\r\n          regularPrice: cartItem.price && cartItem.price['regular'],\r\n          offerPrice: cartItem.price && cartItem.price['offer'],\r\n          quantity: cartItem.quantity,\r\n          url: cartItem.url,\r\n          cartKey: cartItem.cartKey,\r\n        };\r\n      });\r\n\r\n    return convertedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method addtoCart convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n  async addtoCart(resData) {\r\n    let data = false;\r\n\r\n    if (resData['inserted']) {\r\n      data = {\r\n        id: resData['inserted']._id || '',\r\n        name: resData['inserted'].name && resData['inserted'].name,\r\n        cover: `${config['baseURL']}${resData['inserted'].cover.medium}`,\r\n        regularPrice:\r\n          resData['inserted'].price && resData['inserted'].price['regular'],\r\n        offerPrice:\r\n          resData['inserted'].price && resData['inserted'].price['offer'],\r\n        quantity: resData['inserted'].quantity,\r\n        url: resData['inserted'].url,\r\n        cartKey: resData['inserted'].cartKey,\r\n      };\r\n    }\r\n\r\n    const convertedData = data;\r\n\r\n    return convertedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method removeFromCart convert api data from API to general format based on config server\r\n   * @param {Object} resData response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n  async removeFromCart(resData) {\r\n    let convertedData = false;\r\n    if (resData) {\r\n      convertedData = true;\r\n    }\r\n    return convertedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method updateCartItem convert api data from API to general format based on config server\r\n   * @param {Object} resData response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n  async updateCartItem(resData) {\r\n    let convertedData = false;\r\n    if (resData['updated']) {\r\n      convertedData = {\r\n        quantity: resData.updated['quantity'],\r\n      };\r\n    }\r\n    return convertedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method clearCart convert api data from API to general format based on config server\r\n   * @param {Object} resData response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n  async clearCart(data) {\r\n    if (data && data['msg']) {\r\n      return {\r\n        status: 'ok',\r\n      };\r\n    }\r\n    return data;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method getWishlist convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n  async getWishlist(resData) {\r\n    // const cartItems = resData.items || [];\r\n    const convertedData = resData;\r\n\r\n    return convertedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method addWishlist convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n  async addWishlist(resData) {\r\n    if (resData && resData['msg'] === 'wishlist updated') {\r\n      return {\r\n        status: 'ok',\r\n      };\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method removeFromWishlist convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n  async removeFromWishlist(resData) {\r\n    if (resData && resData['msg'] === 'wishlist updated') {\r\n      return {\r\n        status: 'ok',\r\n      };\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method removeAllWishlist convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n  async removeAllWishlist(resData) {\r\n    if (resData && resData['msg'] === 'wishlist updated') {\r\n      return {\r\n        status: 'ok',\r\n      };\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method tagProducts convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n  async tagProducts(resData) {\r\n    const data = resData.data || [];\r\n    const isNext = resData.page.next;\r\n\r\n    const convertedData =\r\n      data.length > 0 &&\r\n      data.map((product) => {\r\n        return {\r\n          id: product._id || '',\r\n          name: product.name && product.name,\r\n          description: product.description && product.description,\r\n          cover: `${config['baseURL']}${\r\n            (product.cover && product.cover['thumbnail']) || ''\r\n          }`,\r\n          regularPrice: product.price && product.price['regular'],\r\n          offerPrice: product.price && product.price['offer'],\r\n          url: product.url,\r\n          unit: product.unit,\r\n          category: product.category,\r\n          pricing: product.pricing,\r\n          date: product.date,\r\n          time: product.time,\r\n          venue: product.venue,\r\n          brand: product.brand,\r\n          tags: product.tags,\r\n          price:\r\n            parseInt(product.price['offer']) >\r\n            parseInt(product.price['regular'])\r\n              ? product.price['offer']\r\n              : product.price['regular'],\r\n          avalable:\r\n            product.pricing && product.pricing.length > 0\r\n              ? product.pricing[0]['stock'] &&\r\n                product.pricing[0]['stock']['available']\r\n              : 0,\r\n          minimum:\r\n            product.pricing && product.pricing.length > 0\r\n              ? product.pricing[0]['stock'] &&\r\n                product.pricing[0]['stock']['minimum']\r\n              : 0,\r\n        };\r\n      });\r\n\r\n    // return {\r\n    // \tdata: convertedData,\r\n    // \tisNext: isNext\r\n    // };\r\n\r\n    return convertedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method brandProducts convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n  async brandProducts(resData) {\r\n    const data = resData.data || [];\r\n    const isNext = resData.page.next;\r\n\r\n    const convertedData =\r\n      data.length > 0 &&\r\n      data.map((product) => {\r\n        return {\r\n          id: product._id || '',\r\n          name: product.name && product.name,\r\n          description: product.description && product.description,\r\n          cover: `${config['baseURL']}${\r\n            (product.cover && product.cover['thumbnail']) || ''\r\n          }`,\r\n          regularPrice: product.price && product.price['regular'],\r\n          offerPrice: product.price && product.price['offer'],\r\n          url: product.url,\r\n          unit: product.unit,\r\n          category: product.category,\r\n          pricing: product.pricing,\r\n          date: product.date,\r\n          time: product.time,\r\n          venue: product.venue,\r\n          brand: product.brand,\r\n          tags: product.tags,\r\n          price:\r\n            parseInt(product.price['offer']) >\r\n            parseInt(product.price['regular'])\r\n              ? product.price['offer']\r\n              : product.price['regular'],\r\n          avalable:\r\n            product.pricing && product.pricing.length > 0\r\n              ? product.pricing[0]['stock'] &&\r\n                product.pricing[0]['stock']['available']\r\n              : 0,\r\n          minimum:\r\n            product.pricing && product.pricing.length > 0\r\n              ? product.pricing[0]['stock'] &&\r\n                product.pricing[0]['stock']['minimum']\r\n              : 0,\r\n        };\r\n      });\r\n\r\n    // return {\r\n    // \tdata: convertedData,\r\n    // \tisNext: isNext\r\n    // };\r\n\r\n    return convertedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method productSearch convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async productSearch(resData) {\r\n    const data = resData.data || [];\r\n    const isNext = resData.page.next;\r\n\r\n    const convertedData =\r\n      (data.length > 0 &&\r\n        data.map((product) => {\r\n          return {\r\n            id: product._id || '',\r\n            name: product.name && product.name,\r\n            description: product.description && product.description,\r\n            cover: `${config['baseURL']}${product.cover.thumbnail}`,\r\n            regularPrice: product.price && product.price['regular'],\r\n            offerPrice: product.price && product.price['offer'],\r\n            url: product.url,\r\n            unit: product.unit,\r\n            date: product.date,\r\n            venue: product.venue,\r\n            pricing: product.pricing,\r\n          };\r\n        })) ||\r\n      [];\r\n\r\n    return {\r\n      data: convertedData,\r\n      isNext,\r\n    };\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method productList convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async productList(resData) {\r\n    const data = resData.data || [];\r\n    const isNext = resData.page.next;\r\n\r\n    let convertedData =\r\n      data.length > 0 &&\r\n      data.map((product) => {\r\n        return {\r\n          ...product,\r\n          id: product._id || '',\r\n          name: product.name && product.name,\r\n          description: product.description && product.description,\r\n          cover: product.cover\r\n            ? `${config['baseURL']}${\r\n                (product.cover && product.cover['thumbnail']) || ''\r\n              }`\r\n            : product.cover,\r\n          regularPrice: product.price && product.price['regular'],\r\n          offerPrice: product.price && product.price['offer'],\r\n          url: product.url,\r\n          unit: product.unit,\r\n          category: product.category,\r\n          image:\r\n            (data.image &&\r\n              data.image.length > 0 &&\r\n              data.image.map((img) => {\r\n                return {\r\n                  id: img._id || '',\r\n                  name: img.name && img.name,\r\n                  cover: `${config['baseURL']}${img.original}`,\r\n                  added: img.added,\r\n                  title: img.title,\r\n                  labels: img.labels,\r\n                  alt: img.alt,\r\n                  caption: img.caption,\r\n                };\r\n              })) ||\r\n            [],\r\n          pricing: product.pricing,\r\n          date: product.date,\r\n          time: product.time,\r\n          venue: product.venue,\r\n          brand: product.brand,\r\n          tags: product.tags,\r\n          price:\r\n            parseInt(product.price['offer']) >\r\n            parseInt(product.price['regular'])\r\n              ? product.price['offer']\r\n              : product.price['regular'],\r\n          available:\r\n            product.pricing && product.pricing.length > 0\r\n              ? product.pricing[0]['stock'] &&\r\n                product.pricing[0]['stock']['available']\r\n              : 0,\r\n          minimum:\r\n            product.pricing && product.pricing.length > 0\r\n              ? product.pricing[0]['stock'] &&\r\n                product.pricing[0]['stock']['minimum']\r\n              : 0,\r\n        };\r\n      });\r\n\r\n    // convertedData = {\r\n    // \tdata: convertedData,\r\n    // \tisNext\r\n    // };\r\n\r\n    return convertedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method postList convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async postList(resData) {\r\n    const data = resData.data;\r\n    // const isNext = resData.page.next;\r\n\r\n    let convertedData =\r\n      data.length > 0 &&\r\n      data.map((post) => {\r\n        return {\r\n          ...post,\r\n          id: post._id || '',\r\n          name: post.name && post.name,\r\n          body: post.body && post.body,\r\n          preparationTime: post.preparationTime && post.preparationTime,\r\n          servingSize: post.servingSize && post.servingSize,\r\n          cookingTime: post.cookingTime && post.cookingTime,\r\n          cover: post.cover\r\n            ? `${config['baseURL']}${\r\n                (post.cover && post.cover['thumbnail']) || ''\r\n              }`\r\n            : null,\r\n          url: post.url,\r\n          category: post.category,\r\n          tags: post.tags,\r\n        };\r\n      });\r\n\r\n    // convertedData = {\r\n    // \tdata: convertedData,\r\n    // \tisNext\r\n    // };\r\n\r\n    return convertedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method tagPostList convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async tagPostList(resData) {\r\n    const data = resData.data;\r\n    // const isNext = resData.page.next;\r\n\r\n    let convertedData =\r\n      data.length > 0 &&\r\n      data.map((post) => {\r\n        return {\r\n          ...post,\r\n          id: post._id || '',\r\n          name: post.name && post.name,\r\n          body: post.body && post.body,\r\n          preparationTime: post.preparationTime && post.preparationTime,\r\n          servingSize: post.servingSize && post.servingSize,\r\n          cookingTime: post.cookingTime && post.cookingTime,\r\n          cover: `${config['baseURL']}${\r\n            (post.cover && post.cover['thumbnail']) || ''\r\n          }`,\r\n          url: post.url,\r\n          category: post.category,\r\n          tags: post.tags,\r\n        };\r\n      });\r\n\r\n    // convertedData = {\r\n    // \tdata: convertedData,\r\n    // \tisNext\r\n    // };\r\n\r\n    return convertedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method categoryPostList convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async categoryPostList(resData) {\r\n    const data = resData.data;\r\n    // const isNext = resData.page.next;\r\n\r\n    let convertedData =\r\n      data.length > 0 &&\r\n      data.map((post) => {\r\n        return {\r\n          ...post,\r\n          id: post._id || '',\r\n          name: post.name && post.name,\r\n          body: post.body && post.body,\r\n          preparationTime: post.preparationTime && post.preparationTime,\r\n          servingSize: post.servingSize && post.servingSize,\r\n          cookingTime: post.cookingTime && post.cookingTime,\r\n          cover: `${config['baseURL']}${\r\n            (post.cover && post.cover['thumbnail']) || ''\r\n          }`,\r\n          url: post.url,\r\n          category: post.category,\r\n          tags: post.tags,\r\n        };\r\n      });\r\n\r\n    return convertedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method postDetail convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async postDetail(resData) {\r\n    const data = resData;\r\n    // const isNext = resData.page.next;\r\n\r\n    console.log('upconvertedpostDetail', resData);\r\n\r\n    if (Object.keys(data).length > 0) {\r\n      return {\r\n        ...data,\r\n        id: data._id || '',\r\n        name: data.name && data.name,\r\n        body: data.body && data.body,\r\n        preparationTime: data.preparationTime && data.preparationTime,\r\n        servingSize: data.servingSize && data.servingSize,\r\n        cookingTime: data.cookingTime && data.cookingTime,\r\n        cover: `${config['baseURL']}${\r\n          (data.cover && data.cover['medium']) || ''\r\n        }`,\r\n        url: data.url,\r\n        requiredProducts:\r\n          data.requiredProducts && data.requiredProducts.length > 0\r\n            ? data.requiredProducts.map((item) => {\r\n                return {\r\n                  ...item,\r\n                  id: item.id,\r\n                  ...(item.detail &&\r\n                    Object.keys(item.detail).length > 0 && {\r\n                      ...item.detail,\r\n                      cover: {\r\n                        cover: `${config['baseURL']}${\r\n                          item.detail.cover\r\n                            ? item.detail.cover.original &&\r\n                              item.detail.cover.original\r\n                            : ''\r\n                        }`,\r\n                        id: item.detail.cover ? item.detail.cover._id : '',\r\n                      },\r\n                      price:\r\n                        parseInt(item.detail.price['offer']) >\r\n                        parseInt(item.detail.price['regular'])\r\n                          ? item.detail.price['offer']\r\n                          : item.detail.price['regular'],\r\n                      image:\r\n                        (item.detail.image &&\r\n                          item.detail.image.length > 0 &&\r\n                          item.detail.image.map((img) => {\r\n                            return {\r\n                              id: img._id || '',\r\n                              name: img.name && img.name,\r\n                              cover: `${config['baseURL']}${img.original}`,\r\n                              added: img.added,\r\n                              title: img.title,\r\n                              labels: img.labels,\r\n                              alt: img.alt,\r\n                              caption: img.caption,\r\n                            };\r\n                          })) ||\r\n                        [],\r\n                    }),\r\n                };\r\n              })\r\n            : [],\r\n        category2:\r\n          (data.category &&\r\n            data.category.length > 0 &&\r\n            data.category.map((cat) => {\r\n              return {\r\n                id: cat._id,\r\n                name: cat.name,\r\n              };\r\n            })) ||\r\n          data.category,\r\n        category:\r\n          (data.category &&\r\n            data.category.length > 0 &&\r\n            data.category.map((cat) => {\r\n              return cat._id;\r\n            })) ||\r\n          data.category,\r\n        tags: data.tags && data.tags.length > 0 ? data.tags : [],\r\n        image:\r\n          (data.image &&\r\n            data.image.length > 0 &&\r\n            data.image.map((img) => {\r\n              return {\r\n                id: img._id || '',\r\n                name: img.name && img.name,\r\n                cover: `${config['baseURL']}${img.original}`,\r\n                added: img.added,\r\n                title: img.title,\r\n                labels: img.labels,\r\n                alt: img.alt,\r\n                caption: img.caption,\r\n              };\r\n            })) ||\r\n          [],\r\n      };\r\n    } else return {};\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method postDetailEdit convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async postDetailEdit(resData) {\r\n    const data = resData;\r\n    // const isNext = resData.page.next;\r\n\r\n    console.log('upconvertedpostDetail', resData);\r\n\r\n    if (Object.keys(data).length > 0) {\r\n      return {\r\n        ...data,\r\n        id: data._id || '',\r\n        name: data.name && data.name,\r\n        body: data.body && data.body,\r\n        preparationTime: data.preparationTime && data.preparationTime,\r\n        servingSize: data.servingSize && data.servingSize,\r\n        cookingTime: data.cookingTime && data.cookingTime,\r\n        cover: `${config['baseURL']}${\r\n          (data.cover && data.cover['medium']) || ''\r\n        }`,\r\n        url: data.url,\r\n        requiredProducts:\r\n          data.requiredProducts && data.requiredProducts.length > 0\r\n            ? data.requiredProducts.map((item) => {\r\n                return {\r\n                  ...item,\r\n                  id: item.id,\r\n                  ...(item.detail &&\r\n                    Object.keys(item.detail).length > 0 && {\r\n                      ...item.detail,\r\n                      cover: {\r\n                        cover: `${config['baseURL']}${\r\n                          item.detail.cover\r\n                            ? item.detail.cover.original &&\r\n                              item.detail.cover.original\r\n                            : ''\r\n                        }`,\r\n                        id: item.detail.cover ? item.detail.cover._id : '',\r\n                      },\r\n                      price:\r\n                        parseInt(item.detail.price['offer']) >\r\n                        parseInt(item.detail.price['regular'])\r\n                          ? item.detail.price['offer']\r\n                          : item.detail.price['regular'],\r\n                      image:\r\n                        (item.detail.image &&\r\n                          item.detail.image.length > 0 &&\r\n                          item.detail.image.map((img) => {\r\n                            return {\r\n                              id: img._id || '',\r\n                              name: img.name && img.name,\r\n                              cover: `${config['baseURL']}${img.original}`,\r\n                              added: img.added,\r\n                              title: img.title,\r\n                              labels: img.labels,\r\n                              alt: img.alt,\r\n                              caption: img.caption,\r\n                            };\r\n                          })) ||\r\n                        [],\r\n                    }),\r\n                };\r\n              })\r\n            : [],\r\n        category: data.category,\r\n        tags: data.tags && data.tags.length > 0 ? data.tags : [],\r\n        image:\r\n          (data.image &&\r\n            data.image.length > 0 &&\r\n            data.image.map((img) => {\r\n              return {\r\n                id: img._id || '',\r\n                name: img.name && img.name,\r\n                cover: `${config['baseURL']}${img.original}`,\r\n                added: img.added,\r\n                title: img.title,\r\n                labels: img.labels,\r\n                alt: img.alt,\r\n                caption: img.caption,\r\n              };\r\n            })) ||\r\n          [],\r\n      };\r\n    } else return {};\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method bundleList convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async bundleList(resData) {\r\n    const data = resData.data || [];\r\n\r\n    let convertedData =\r\n      data.length > 0 &&\r\n      data.map((product) => {\r\n        return {\r\n          ...product,\r\n          anotherPrice: product.price,\r\n          id: product._id || '',\r\n          name: product.name && product.name,\r\n          description: product.description && product.description,\r\n          cover: product.cover\r\n            ? `${config['baseURL']}${\r\n                (product.cover && product.cover['thumbnail']) || ''\r\n              }`\r\n            : product.cover,\r\n          regularPrice: product.price && product.price['regular'],\r\n          offerPrice: product.price && product.price['offer'],\r\n          url: product.url,\r\n          startDate: product.startDate,\r\n          endDate: product.endDate,\r\n          actualPrice: product.actualPrice,\r\n          unit: product.unit,\r\n          category: product.category,\r\n          pricing: product.pricing,\r\n          date: product.date,\r\n          time: product.time,\r\n          venue: product.venue,\r\n          brand: product.brand,\r\n          tags: product.tags,\r\n          product: product['product'],\r\n          productCount: product['product'].length,\r\n          price:\r\n            parseInt(product.price['offer']) >\r\n            parseInt(product.price['regular'])\r\n              ? product.price['offer']\r\n              : product.price['regular'],\r\n        };\r\n      });\r\n\r\n    // convertedData = {\r\n    // \tdata: convertedData,\r\n    // \tisNext\r\n    // };\r\n\r\n    return convertedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method bundleDetail convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async bundleDetail(resData) {\r\n    const data = resData || {};\r\n\r\n    if (Object.keys(data).length > 0) {\r\n      return {\r\n        id: data._id || '',\r\n        name: data.name && data.name,\r\n        description: data.description && data.description,\r\n        cover: data.cover\r\n          ? `${config['baseURL']}${\r\n              (data.cover && data.cover['thumbnail']) || ''\r\n            }`\r\n          : '',\r\n        regularPrice: data.price && data.price['regular'],\r\n        offerPrice: data.price && data.price['offer'],\r\n        url: data.url,\r\n        startDate: data.startDate,\r\n        endDate: data.endDate,\r\n        actualPrice: data.actualPrice,\r\n        unit: data.unit,\r\n        category: data.category,\r\n        pricing: data.pricing,\r\n        date: data.date,\r\n        time: data.time,\r\n        venue: data.venue,\r\n        brand: data.brand,\r\n        tags: data.tags,\r\n        products: data.product,\r\n        productCount: data['product'].length,\r\n        price:\r\n          parseInt(data.price['offer']) > parseInt(data.price['regular'])\r\n            ? data.price['offer']\r\n            : data.price['regular'],\r\n        image:\r\n          (data.image &&\r\n            data.image.length > 0 &&\r\n            data.image.map((img) => {\r\n              return {\r\n                id: img._id || '',\r\n                name: img.name && img.name,\r\n                cover: `${config['baseURL']}${img.original}`,\r\n                added: img.added,\r\n                title: img.title,\r\n                labels: img.labels,\r\n                alt: img.alt,\r\n                caption: img.caption,\r\n              };\r\n            })) ||\r\n          [],\r\n      };\r\n    } else return data;\r\n\r\n    // convertedData = {\r\n    // \tdata: convertedData,\r\n    // \tisNext\r\n    // };\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method getAnalyticsPageVisits convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async getAnalyticsPageVisits(resData) {\r\n    const data = resData && resData.data ? resData.data : [];\r\n\r\n    console.log('getAnalyticsPageVisits', resData);\r\n\r\n    let convertedData =\r\n      data.length > 0 &&\r\n      data.map((item) => {\r\n        return {\r\n          id: item._id || '',\r\n          visit: item.count || '',\r\n          name:\r\n            item['detail'] && item['detail'][0] && item['detail'][0]['name'],\r\n          url: item['detail'] && item['detail'][0] && item['detail'][0]['url'],\r\n          itemId:\r\n            item['detail'] && item['detail'][0] && item['detail'][0]['_id'],\r\n        };\r\n      });\r\n\r\n    // convertedData = {\r\n    // \tdata: convertedData,\r\n    // \tisNext\r\n    // };\r\n\r\n    return convertedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method getAnalyticsPageVisitCount convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async getAnalyticsPageVisitCount(resData) {\r\n    return resData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method getAnalyticsDemographicVisits convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async getAnalyticsDemographicVisits(resData) {\r\n    const data = resData && resData.data ? resData.data : [];\r\n    if (data) {\r\n      return data;\r\n    } else return [];\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method getAnalyticsOrders convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async getAnalyticsOrders(resData) {\r\n    const data = resData.data || [];\r\n    return data;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method getAnalyticsTotalUserCount convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async getAnalyticsTotalUserCount(resData) {\r\n    return resData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method customerDetail convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async customerDetail(resData) {\r\n    if (resData) {\r\n      return {\r\n        ...resData,\r\n        id: resData._id || '',\r\n        key: resData._id || '',\r\n        firstName: resData.firstName || '',\r\n        lastName: resData.lastName || '',\r\n        name: resData.firstName + ' ' + resData.lastName,\r\n        country: resData.country || '',\r\n        city: resData.city || '',\r\n        email: resData.email || '',\r\n        phone: resData.phone || '',\r\n        address1: resData.address1 || '',\r\n        address2: resData.address2 || '',\r\n        created: resData.created || '',\r\n      };\r\n    } else return resData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method couponList convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async couponList(resData) {\r\n    const data = resData || [];\r\n\r\n    let convertedData =\r\n      data.length > 0 &&\r\n      data.map((product) => {\r\n        return {\r\n          ...data,\r\n          id: product._id || '',\r\n          name: product.name && product.name,\r\n          code: product.code,\r\n          cover: product.cover\r\n            ? `${config['baseURL']}${\r\n                (product.cover && product.cover['thumbnail']) || ''\r\n              }`\r\n            : null,\r\n          minimumOrder: product.minimumOrder,\r\n          maximumOrder: product.maximumOrder,\r\n          offerPrice: product.price && product.price['offer'],\r\n          freeProducts: product.freeProducts,\r\n          orderedProductsCount:\r\n            product.orderedProducts && product.orderedProducts.length,\r\n          freeProductsCount:\r\n            product.freeProducts && product.freeProducts.length,\r\n          amountType: product.amountType,\r\n          amount: product.amount,\r\n          freeDelivery: product.freeDelivery,\r\n          startDate: product.startDate,\r\n          endDate: product.endDate,\r\n          maxUsePerUser: product.maxUsePerUser,\r\n          actualPrice: product.actualPrice,\r\n          unit: product.unit,\r\n          category: product.category,\r\n          pricing: product.pricing,\r\n          date: product.date,\r\n          time: product.time,\r\n        };\r\n      });\r\n\r\n    console.log('convertedCouponData55', convertedData);\r\n\r\n    // convertedData = {\r\n    // \tdata: convertedData,\r\n    // \tisNext\r\n    // };\r\n\r\n    return convertedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method tagList convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n  async tagList(resData) {\r\n    const data = resData.data || [];\r\n\r\n    const convertedData =\r\n      data.length > 0 &&\r\n      data.map((tag) => {\r\n        return {\r\n          ...tag,\r\n          id: tag._id || '',\r\n          key: tag._id || '',\r\n          name: tag.name && tag.name,\r\n          description: tag.description && tag.description,\r\n        };\r\n      });\r\n\r\n    return convertedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method getSetEmailList convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n  async getSetEmailList(resData) {\r\n    const data = resData.data || [];\r\n\r\n    const convertedData =\r\n      data.length > 0 &&\r\n      data.map((email) => {\r\n        return {\r\n          ...email,\r\n          id: email._id || '',\r\n          key: email._id || '',\r\n          recipient: email.recipient,\r\n          subject: email.subject,\r\n          html: email.html,\r\n          text: email.text,\r\n          time: email.time,\r\n          event: email.event,\r\n        };\r\n      });\r\n\r\n    return convertedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method getSentSMSList convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n  async getSentSMSList(resData) {\r\n    const data = resData.data || [];\r\n\r\n    const convertedData =\r\n      data.length > 0 &&\r\n      data.map((sms) => {\r\n        return {\r\n          ...sms,\r\n          id: sms._id || '',\r\n          key: sms._id || '',\r\n          recipient: sms.recipient,\r\n          text: sms.text,\r\n          time: sms.time,\r\n          event: sms.event,\r\n        };\r\n      });\r\n\r\n    return convertedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method postTagList convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n  async postTagList(resData) {\r\n    const data = resData.data;\r\n\r\n    const convertedData =\r\n      data.length > 0 &&\r\n      data.map((tag) => {\r\n        return {\r\n          id: tag._id || '',\r\n          key: tag._id || '',\r\n          name: tag.name && tag.name,\r\n          description: tag.description && tag.description,\r\n        };\r\n      });\r\n\r\n    return convertedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method postTagDetail convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n  async postTagDetail(resData) {\r\n    const data = resData;\r\n\r\n    if (Object.keys(data).length > 0) {\r\n      return {\r\n        ...data,\r\n        id: data._id || '',\r\n        key: data._id || '',\r\n        name: data.name && data.name,\r\n        description: data.description && data.description,\r\n      };\r\n    } else return {};\r\n  }\r\n\r\n  /**\r\n   * @public\r\n\t\r\n   * @method dealerAreaDetail convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n  async dealerAreaDetail(resData) {\r\n    const data = resData;\r\n\r\n    if (Object.keys(data).length > 0) {\r\n      return {\r\n        ...data,\r\n        id: data._id || '',\r\n        key: data._id || '',\r\n        name: data.name && data.name,\r\n      };\r\n    } else return {};\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method brandList convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n  async brandList(resData) {\r\n    const data = resData.data || [];\r\n\r\n    const convertedData =\r\n      data.length > 0 &&\r\n      data.map((brand) => {\r\n        return {\r\n          ...brand,\r\n          id: brand._id || '',\r\n          key: brand._id || '',\r\n          name: brand.name && brand.name,\r\n          description: brand.description && brand.description,\r\n          cover: brand.cover\r\n            ? `${config['baseURL']}${brand.cover ? brand.cover.thumbnail : ''}`\r\n            : null,\r\n        };\r\n      });\r\n\r\n    return convertedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method setImageAsThumbnailToItem convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n  async setImageAsThumbnailToItem(resData) {\r\n    if (resData.success) {\r\n      return {\r\n        status: 'ok',\r\n      };\r\n    }\r\n    return {};\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method deleteAdmin convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n  async deleteAdmin(resData) {\r\n    if (resData.success) {\r\n      return {\r\n        status: 'ok',\r\n      };\r\n    }\r\n    return {};\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method markAllNotificationAsRead convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n  async markAllNotificationAsRead(resData) {\r\n    if (resData.success) {\r\n      return {\r\n        status: 'ok',\r\n      };\r\n    }\r\n    return {};\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method configureEmailSTMP convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n  async configureEmailSTMP(resData) {\r\n    if (resData.success) {\r\n      return {\r\n        status: 'ok',\r\n      };\r\n    }\r\n    return {};\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method configureSMS convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n  async configureSMS(resData) {\r\n    if (resData.success) {\r\n      return {\r\n        status: 'ok',\r\n      };\r\n    }\r\n    return {};\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method getEmailConfiguration convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n  async getEmailConfiguration(resData) {\r\n    if (resData && Object.keys(resData).length > 0) {\r\n      return {\r\n        ...resData,\r\n        status: 'ok',\r\n      };\r\n    }\r\n    return {};\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method getSMSConfiguration convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n  async getSMSConfiguration(resData) {\r\n    if (resData && Object.keys(resData).length > 0) {\r\n      return {\r\n        ...resData,\r\n        status: 'ok',\r\n      };\r\n    }\r\n    return {};\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method sendCustomEmail convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n  async sendCustomEmail(resData) {\r\n    if (resData && resData.msg) {\r\n      return {\r\n        status: 'ok',\r\n      };\r\n    }\r\n    return {};\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method configureAutoEmailTemplate convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n  async configureAutoEmailTemplate(resData) {\r\n    if (resData && resData.success) {\r\n      return {\r\n        status: 'ok',\r\n      };\r\n    }\r\n    return {};\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method getConfigureAutoEmailTemplate convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n  async getConfigureAutoEmailTemplate(resData) {\r\n    if (resData && Object.keys(resData).length > 0) {\r\n      return {\r\n        ...resData,\r\n        id: resData._id,\r\n      };\r\n    }\r\n    return {};\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method getConfigureAutoSMSTemplate convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n  async getConfigureAutoSMSTemplate(resData) {\r\n    if (resData && Object.keys(resData).length > 0) {\r\n      return {\r\n        ...resData,\r\n        id: resData._id,\r\n      };\r\n    }\r\n    return {};\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method sendCustomSMS convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n  async sendCustomSMS(resData) {\r\n    if (resData && resData.success) {\r\n      return {\r\n        status: 'ok',\r\n      };\r\n    }\r\n    return {};\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method updateSiteLogoAndIcon convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n  async updateSiteLogoAndIcon(resData) {\r\n    if (resData.success) {\r\n      return {\r\n        status: 'ok',\r\n      };\r\n    }\r\n    return {};\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method updateStock convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n  async updateStock(resData) {\r\n    if (resData.succes) {\r\n      return {\r\n        status: 'ok',\r\n      };\r\n    }\r\n    return {};\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method brandDetail convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n  async brandDetail(resData) {\r\n    const data = Object.keys(resData).length > 0 ? resData : null;\r\n    if (data) {\r\n      return {\r\n        ...data,\r\n        id: data._id || '',\r\n        key: data._id || '',\r\n        name: data.name && data.name,\r\n        description: data.description && data.description,\r\n        url: data.url && data.url,\r\n        cover: {\r\n          cover: `${config['baseURL']}${\r\n            data.cover ? data.cover.original && data.cover.original : ''\r\n          }`,\r\n          id: data.cover ? data.cover._id : '',\r\n        },\r\n        image:\r\n          (data.image &&\r\n            data.image.length > 0 &&\r\n            data.image.map((img) => {\r\n              return {\r\n                id: img._id || '',\r\n                name: img.name && img.name,\r\n                cover: `${config['baseURL']}${img.thumbnail}`,\r\n                added: img.added,\r\n                title: img.title,\r\n                labels: img.labels,\r\n                alt: img.alt,\r\n                caption: img.caption,\r\n              };\r\n            })) ||\r\n          [],\r\n      };\r\n    }\r\n\r\n    return {};\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method tagDetail convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n  async tagDetail(resData) {\r\n    const data = Object.keys(resData).length > 0 ? resData : null;\r\n    if (data) {\r\n      return {\r\n        ...data,\r\n        id: data._id || '',\r\n        key: data._id || '',\r\n        name: data.name && data.name,\r\n        url: data.url && data.url,\r\n        description: data.description && data.description,\r\n      };\r\n    }\r\n\r\n    return {};\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method customerList convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n  async customerList(resData) {\r\n    const data = resData.data || [];\r\n\r\n    const convertedData =\r\n      data.length > 0 &&\r\n      data.map((customer) => {\r\n        return {\r\n          ...customer,\r\n          id: customer._id || '',\r\n          key: customer._id || '',\r\n          firstName: customer.firstName || '',\r\n          lastName: customer.lastName || '',\r\n          name: customer.firstName + ' ' + customer.lastName,\r\n          dealerName:\r\n            customer.dealer && Object.keys(customer.dealer).length > 0\r\n              ? customer['dealer'].firstName + ' ' + customer['dealer'].lastName\r\n              : 'None',\r\n          country: customer.country || '',\r\n          city: customer.city || '',\r\n          email: customer.email || '',\r\n          phone: customer.phone || '',\r\n          address1: customer.address1 || '',\r\n          address2: customer.address2 || '',\r\n          created: customer.added || '',\r\n        };\r\n      });\r\n\r\n    return convertedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method staffList convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n  async staffList(resData) {\r\n    const data = resData.data || [];\r\n\r\n    const convertedData =\r\n      data.length > 0 &&\r\n      data.map((customer) => {\r\n        return {\r\n          ...customer,\r\n          id: customer._id || '',\r\n          key: customer._id || '',\r\n          firstName: customer.firstName || '',\r\n          lastName: customer.lastName || '',\r\n          name: customer.firstName + ' ' + customer.lastName,\r\n          country: customer.country || '',\r\n          city: customer.city || '',\r\n          email: customer.email || '',\r\n          phone: customer.phone || '',\r\n          address: customer.address || '',\r\n        };\r\n      });\r\n\r\n    return convertedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method dealerRegisteredCustomerList convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n  async dealerRegisteredCustomerList(resData) {\r\n    const data = resData.data || [];\r\n\r\n    const convertedData =\r\n      data.length > 0 &&\r\n      data.map((customer) => {\r\n        return {\r\n          ...customer,\r\n          id: customer._id || '',\r\n          key: customer._id || '',\r\n          firstName: customer.firstName || '',\r\n          lastName: customer.lastName || '',\r\n          name: customer.firstName + ' ' + customer.lastName,\r\n          dealerName:\r\n            customer.dealer && Object.keys(customer.dealer).length > 0\r\n              ? customer['dealer'].firstName + ' ' + customer['dealer'].lastName\r\n              : 'None',\r\n          country: customer.country || '',\r\n          city: customer.city || '',\r\n          email: customer.email || '',\r\n          phone: customer.phone || '',\r\n          address1: customer.address1 || '',\r\n          address2: customer.address2 || '',\r\n          created: customer.added || '',\r\n        };\r\n      });\r\n\r\n    return convertedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method dealerList convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n  async dealerList(resData) {\r\n    const data = resData.data || [];\r\n\r\n    const convertedData =\r\n      data.length > 0 &&\r\n      data.map((customer) => {\r\n        return {\r\n          ...customer,\r\n          id: customer._id || '',\r\n          key: customer._id || '',\r\n          code: customer.code || '',\r\n          commission: customer.commission || '',\r\n          depositMoney: customer.depositMoney || '',\r\n          name: customer.firstName + ' ' + customer.lastName,\r\n          country: customer.country || '',\r\n          city: customer.city || '',\r\n          email: customer.email || '',\r\n          phone: customer.phone || '',\r\n          address1: customer.address1 || '',\r\n          address2: customer.address2 || '',\r\n          created: customer.added || '',\r\n        };\r\n      });\r\n\r\n    return convertedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method dealerListByArea convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n  async dealerListByArea(resData) {\r\n    const data = resData || [];\r\n\r\n    const convertedData =\r\n      data.length > 0 &&\r\n      data.map((customer) => {\r\n        return {\r\n          ...customer,\r\n          id: customer._id || '',\r\n          key: customer._id || '',\r\n          code: customer.code || '',\r\n          commission: customer.commission || '',\r\n          depositMoney: customer.depositMoney || '',\r\n          name: customer.firstName + ' ' + customer.lastName,\r\n          country: customer.country || '',\r\n          city: customer.city || '',\r\n          email: customer.email || '',\r\n          phone: customer.phone || '',\r\n          address1: customer.address1 || '',\r\n          address2: customer.address2 || '',\r\n          created: customer.added || '',\r\n        };\r\n      });\r\n\r\n    return convertedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method dealerDetail convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async dealerDetail(resData) {\r\n    if (resData) {\r\n      return {\r\n        ...resData,\r\n        id: resData._id || '',\r\n        key: resData._id || '',\r\n        code: resData.code || '',\r\n        commission: resData.commission || '',\r\n        depositMoney: resData.depositMoney || '',\r\n        name: resData.firstName + ' ' + resData.lastName,\r\n        country: resData.country || '',\r\n        city: resData.city || '',\r\n        email: resData.email || '',\r\n        phone: resData.phone || '',\r\n        address1: resData.address1 || '',\r\n        address2: resData.address2 || '',\r\n        created: resData.added || '',\r\n      };\r\n    } else return resData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method pageList convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n  async pageList(resData) {\r\n    const data = resData.data || [];\r\n\r\n    const convertedData =\r\n      data.length > 0 &&\r\n      data.map((page) => {\r\n        return {\r\n          ...page,\r\n          id: page._id || '',\r\n          key: page._id || '',\r\n          name: page.name && page.name,\r\n          description: page.description && page.description,\r\n          cover: page.cover\r\n            ? `${config['baseURL']}${page.cover ? page.cover.thumbnail : ''}`\r\n            : null,\r\n        };\r\n      });\r\n\r\n    return convertedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method themeList convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n  async themeList(resData) {\r\n    const data = resData || [];\r\n\r\n    const convertedData =\r\n      data.length > 0 &&\r\n      data.map((theme) => {\r\n        return {\r\n          id: theme._id || '',\r\n          key: theme._id || '',\r\n          name: theme.name || '',\r\n          added: theme.added || '',\r\n          thumbnail: `${config['baseURL']}${\r\n            theme.thumbnail ? theme.thumbnail : ''\r\n          }`,\r\n        };\r\n      });\r\n\r\n    return convertedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method componentList convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n  async componentList(resData) {\r\n    const components = resData.components || {};\r\n\r\n    if (components && components.length > 0) {\r\n      const convertedData =\r\n        components.length > 0 &&\r\n        components.map((component) => {\r\n          return {\r\n            id: component._id || '',\r\n            key: component._id || '',\r\n            name: component.name || '',\r\n            items:\r\n              component.items.length > 0\r\n                ? component.items.map((item) => {\r\n                    return {\r\n                      ...item,\r\n                      image:\r\n                        item.image.length > 0\r\n                          ? item.image.map((img) => {\r\n                              return {\r\n                                cover: `${config['baseURL']}${\r\n                                  img.thumbnail ? img.thumbnail : ''\r\n                                }`,\r\n                                id: img._id,\r\n                                name: img.name && img.name,\r\n                                added: img.added,\r\n                                title: img.title,\r\n                                labels: img.labels,\r\n                                alt: img.alt,\r\n                                caption: img.caption,\r\n                              };\r\n                            })\r\n                          : [],\r\n                    };\r\n                  })\r\n                : [],\r\n          };\r\n        });\r\n\r\n      return convertedData;\r\n    }\r\n\r\n    return [];\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method regionList convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n  async regionList(data) {\r\n    const convertedData =\r\n      data.length > 0 &&\r\n      data.map((region) => {\r\n        return {\r\n          id: region._id || '',\r\n          key: region._id || '',\r\n          name: region.name || '',\r\n          pickUpLocation: region.pickUpLocation || '',\r\n          country: region.country || '',\r\n          countryCode: region.countryCode || '',\r\n          countryName: region.countryName || '',\r\n          city: region.city || '',\r\n          time: region.time || '',\r\n          charge: region.charge || {},\r\n        };\r\n      });\r\n\r\n    return convertedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method attributeList convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n  async attributeList(data) {\r\n    const convertedData = Object.keys(data).length > 0 && data;\r\n    return convertedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method ImageListFromLibrary convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n  async ImageListFromLibrary(resData) {\r\n    const data = resData.data || [];\r\n\r\n    const convertedData =\r\n      data.length > 0 &&\r\n      data.map((image) => {\r\n        return {\r\n          id: image._id || '',\r\n          name: image.name && image.name,\r\n          cover: `${config['baseURL']}${image.thumbnail}`,\r\n          added: image.added,\r\n          title: image.title,\r\n          labels: image.labels,\r\n          alt: image.alt,\r\n          caption: image.caption,\r\n        };\r\n      });\r\n\r\n    return convertedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method countryList convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n  async countryList(resData) {\r\n    const data = resData || [];\r\n\r\n    const convertedData =\r\n      data.length > 0 &&\r\n      data.map((country) => {\r\n        return {\r\n          id: country._id || '',\r\n          name: country.name && country.name,\r\n        };\r\n      });\r\n\r\n    return convertedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method getDeliveryRegion convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\r\n  async getDeliveryRegion(data) {\r\n    const convertedData = data;\r\n\r\n    return convertedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method cityList convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n  async cityList(resData) {\r\n    const data = resData || [];\r\n\r\n    const convertedData =\r\n      data.length > 0 &&\r\n      data.map((city) => {\r\n        return {\r\n          id: city._id || '',\r\n          name: city.name && city.name,\r\n        };\r\n      });\r\n\r\n    return convertedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method forAnalytics convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n  async forAnalytics(resData) {\r\n    return resData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method productDetail convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\r\n  async productDetail(data) {\r\n    const convertedData =\r\n      (Object.keys(data).length > 0 && {\r\n        ...data,\r\n        id: data._id || data.id || '',\r\n        name: data.name || '',\r\n        description: data.description.replace(/<[^>]+>/g, '') || '',\r\n        regularPrice: data.price && data.price['regular'],\r\n        offerPrice: data.price && data.price['offer'],\r\n        url: data.url,\r\n        availableStock: data.availableStock,\r\n        minimumStock: data.minimumStock,\r\n        unit: data.unit,\r\n        date: data.date,\r\n        venue: data.venue,\r\n        brand:\r\n          data.brand && Object.key(data.brand).length > 0\r\n            ? {\r\n                id: data.brand.id,\r\n                name: data.brand.name,\r\n              }\r\n            : {},\r\n        price:\r\n          parseInt(data.price['offer']) > parseInt(data.price['regular'])\r\n            ? data.price['offer']\r\n            : data.price['regular'],\r\n        pricing: data.pricing,\r\n        category:\r\n          (data.category &&\r\n            data.category.length > 0 &&\r\n            data.category.map((cat) => {\r\n              return {\r\n                id: cat._id,\r\n                name: cat.name,\r\n              };\r\n            })) ||\r\n          data.category,\r\n        tags: data.tags && data.tags.length > 0 ? data.tags : [],\r\n\r\n        cover: {\r\n          cover: `${config['baseURL']}${\r\n            data.cover ? data.cover.original && data.cover.original : ''\r\n          }`,\r\n          id: data.cover ? data.cover._id : '',\r\n        },\r\n        image:\r\n          (data.image &&\r\n            data.image.length > 0 &&\r\n            data.image.map((img) => {\r\n              return {\r\n                id: img._id || '',\r\n                name: img.name && img.name,\r\n                cover: `${config['baseURL']}${img.original}`,\r\n                added: img.added,\r\n                title: img.title,\r\n                labels: img.labels,\r\n                alt: img.alt,\r\n                caption: img.caption,\r\n              };\r\n            })) ||\r\n          [],\r\n        available:\r\n          data.pricing && data.pricing.length > 0\r\n            ? data.pricing[0]['stock'] && data.pricing[0]['stock']['available']\r\n            : 0,\r\n        minimum:\r\n          data.pricing && data.pricing.length > 0\r\n            ? data.pricing[0]['stock'] && data.pricing[0]['stock']['minimum']\r\n            : 0,\r\n      }) ||\r\n      {};\r\n\r\n    return convertedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method couponDetail convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\r\n  async couponDetail(data) {\r\n    const convertedData =\r\n      (Object.keys(data).length > 0 && {\r\n        ...data,\r\n        id: data._id || '',\r\n        name: data.name && data.name,\r\n        cover: {\r\n          cover: `${config['baseURL']}${\r\n            data.cover ? data.cover.original && data.cover.original : ''\r\n          }`,\r\n          id: data.cover ? data.cover._id : '',\r\n        },\r\n        code: data.code,\r\n        minimumOrder: data.minimumOrder,\r\n        maximumOrder: data.maximumOrder,\r\n        freeProducts: data.freeProducts || [],\r\n        orderedProducts:\r\n          data.orderedProducts && data.orderedProducts.length > 0\r\n            ? data.orderedProducts.map((item) => {\r\n                console.log('fuckingOrderProduct', item);\r\n                return {\r\n                  ...item,\r\n                  id: item.id,\r\n                  ...(item.detail &&\r\n                    Object.keys(item.detail).length > 0 && {\r\n                      ...item.detail,\r\n                      cover: {\r\n                        cover: `${config['baseURL']}${\r\n                          item.detail.cover\r\n                            ? item.detail.cover.original &&\r\n                              item.detail.cover.original\r\n                            : ''\r\n                        }`,\r\n                        id: item.detail.cover ? item.detail.cover._id : '',\r\n                      },\r\n                      price:\r\n                        parseInt(item.detail.price['offer']) >\r\n                        parseInt(item.detail.price['regular'])\r\n                          ? item.detail.price['offer']\r\n                          : item.detail.price['regular'],\r\n                    }),\r\n                };\r\n              })\r\n            : [],\r\n        freeProductsCount: data.freeProducts && data.orderedProducts.length,\r\n        amountType: data.amountType,\r\n        amount: data.amount,\r\n        freeDelivery: data.freeDelivery,\r\n        startDate: data.startDate,\r\n        endDate: data.endDate,\r\n        maxUsePerUser: data.maxUsePerUser,\r\n        actualPrice: data.actualPrice,\r\n        unit: data.unit,\r\n        category: data.category,\r\n        pricing: data.pricing,\r\n        date: data.date,\r\n        time: data.time,\r\n        venue: data.venue,\r\n        brand: data.brand,\r\n        tags: data.tags,\r\n      }) ||\r\n      {};\r\n\r\n    console.log('fuckingOrderProduct', convertedData);\r\n\r\n    return convertedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method productDetailById convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n  async productDetailById(data) {\r\n    const convertedData =\r\n      (Object.keys(data).length > 0 && {\r\n        ...data,\r\n        id: data._id || data.id || '',\r\n        name: data.name || '',\r\n        description: data.description.replace(/<[^>]+>/g, '') || '',\r\n        regularPrice: data.price && data.price['regular'],\r\n        offerPrice: data.price && data.price['offer'],\r\n        url: data.url,\r\n        unit: data.unit,\r\n        date: data.date,\r\n        venue: data.venue,\r\n        pricing: data.pricing,\r\n        price:\r\n          parseInt(data.price['offer']) > parseInt(data.price['regular'])\r\n            ? data.price['offer']\r\n            : data.price['regular'],\r\n        category:\r\n          (data.category &&\r\n            data.category.length > 0 &&\r\n            data.category.map((cat) => {\r\n              return {\r\n                id: cat._id,\r\n                name: cat.name,\r\n                cover: `${config['baseURL']}${\r\n                  cat.cover ? cat.cover.original && cat.cover.original : ''\r\n                }`,\r\n              };\r\n            })) ||\r\n          data.category,\r\n        brand:\r\n          data.brand && Object.keys(data.brand).length > 0\r\n            ? {\r\n                id: data.brand._id,\r\n                name: data.brand.name,\r\n                cover: `${config['baseURL']}${\r\n                  data.brand.cover\r\n                    ? data.brand.cover.original && data.brand.cover.original\r\n                    : ''\r\n                }`,\r\n              }\r\n            : data.brand,\r\n        primaryCategory:\r\n          data.primaryCategory && Object.keys(data.primaryCategory).length > 0\r\n            ? {\r\n                id: data.primaryCategory._id,\r\n                name: data.primaryCategory.name,\r\n                cover: `${config['baseURL']}${\r\n                  data.primaryCategory.cover\r\n                    ? data.primaryCategory.cover.original &&\r\n                      data.primaryCategory.cover.original\r\n                    : ''\r\n                }`,\r\n              }\r\n            : data.primaryCategory,\r\n        tags: data.tags && data.tags.length > 0 ? data.tags : [],\r\n        availableStock: data.availableStock,\r\n        cover: {\r\n          cover: `${config['baseURL']}${\r\n            data.cover ? data.cover.original && data.cover.original : ''\r\n          }`,\r\n          id: data.cover ? data.cover._id : '',\r\n        },\r\n        image:\r\n          (data.image &&\r\n            data.image.length > 0 &&\r\n            data.image.map((img) => {\r\n              return {\r\n                id: img._id || '',\r\n                name: img.name && img.name,\r\n                cover: `${config['baseURL']}${img.original}`,\r\n                added: img.added,\r\n                title: img.title,\r\n                labels: img.labels,\r\n                alt: img.alt,\r\n                caption: img.caption,\r\n              };\r\n            })) ||\r\n          [],\r\n      }) ||\r\n      {};\r\n\r\n    return convertedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method updateProduct convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async updateProduct(data) {\r\n    const convertedData = data;\r\n\r\n    if (data && data.updated && Object.keys(data.updated).length > 0) {\r\n      return {\r\n        ...data.updated,\r\n        id: data.updated._id || data.updated.id || '',\r\n        name: data.updated.name || '',\r\n        description: data.updated.description.replace(/<[^>]+>/g, '') || '',\r\n        regularPrice: data.updated.price && data.updated.price['regular'],\r\n        offerPrice: data.updated.price && data.updated.price['offer'],\r\n        url: data.updated.url,\r\n        availableStock: data.updated.availableStock,\r\n        minimumStock: data.updated.minimumStock,\r\n        unit: data.updated.unit,\r\n        date: data.updated.date,\r\n        venue: data.updated.venue,\r\n        brand:\r\n          data.updated.brand && Object.keys(data.updated.brand).length > 0\r\n            ? {\r\n                id: data.updated.brand.id,\r\n                name: data.updated.brand.name,\r\n              }\r\n            : {},\r\n        price:\r\n          parseInt(data.updated.price['offer']) >\r\n          parseInt(data.updated.price['regular'])\r\n            ? data.updated.price['offer']\r\n            : data.updated.price['regular'],\r\n        pricing: data.updated.pricing,\r\n        category:\r\n          (data.updated.category &&\r\n            data.updated.category.length > 0 &&\r\n            data.updated.category.map((cat) => {\r\n              return {\r\n                id: cat._id,\r\n                name: cat.name,\r\n              };\r\n            })) ||\r\n          data.updated.category,\r\n        tags:\r\n          data.updated.tags && data.updated.tags.length > 0\r\n            ? data.updated.tags\r\n            : [],\r\n\r\n        cover: {\r\n          cover: `${config['baseURL']}${\r\n            data.updated.cover\r\n              ? data.updated.cover.original && data.updated.cover.original\r\n              : ''\r\n          }`,\r\n          id: data.updated.cover ? data.updated.cover._id : '',\r\n        },\r\n        image:\r\n          (data.updated.image &&\r\n            data.updated.image.length > 0 &&\r\n            data.updated.image.map((img) => {\r\n              return {\r\n                id: img._id || '',\r\n                name: img.name && img.name,\r\n                cover: `${config['baseURL']}${img.original}`,\r\n                added: img.added,\r\n                title: img.title,\r\n                labels: img.labels,\r\n                alt: img.alt,\r\n                caption: img.caption,\r\n              };\r\n            })) ||\r\n          [],\r\n        status: 'ok',\r\n      };\r\n    }\r\n\r\n    return convertedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method updatePost convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n  async updatePost(data) {\r\n    const convertedData = data;\r\n\r\n    if (data && data.updated && data.updated[0]) {\r\n      console.log('dataUpdate', data.updated);\r\n      return {\r\n        ...data.updated[0],\r\n        id: data.updated[0]._id || data.updated[0].id || '',\r\n        name: data.updated[0].name || '',\r\n        url: data.updated[0].url,\r\n        category: data.updated[0].category,\r\n        tags:\r\n          data.updated[0].tags && data.updated[0].tags.length > 0\r\n            ? data.updated[0].tags\r\n            : [],\r\n\r\n        cover: {\r\n          cover: `${config['baseURL']}${\r\n            data.updated[0].cover\r\n              ? data.updated[0].cover.original && data.updated[0].cover.original\r\n              : ''\r\n          }`,\r\n          id: data.updated[0].cover ? data.updated[0].cover._id : '',\r\n        },\r\n        image:\r\n          (data.updated[0].image &&\r\n            data.updated[0].image.length > 0 &&\r\n            data.updated[0].image.map((img) => {\r\n              return {\r\n                id: img._id || '',\r\n                name: img.name && img.name,\r\n                cover: `${config['baseURL']}${img.original}`,\r\n                added: img.added,\r\n                title: img.title,\r\n                labels: img.labels,\r\n                alt: img.alt,\r\n                caption: img.caption,\r\n              };\r\n            })) ||\r\n          [],\r\n        status: 'ok',\r\n      };\r\n    }\r\n\r\n    return convertedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method updateComponent convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async updateComponent(data) {\r\n    const convertedData = data;\r\n\r\n    if (data && data.updated) {\r\n      return {\r\n        ...data.updated,\r\n        status: 'ok',\r\n      };\r\n    }\r\n\r\n    return convertedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method updateCoupon convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async updateCoupon(data) {\r\n    const convertedData = data;\r\n\r\n    if (data && data.updated) {\r\n      return {\r\n        ...data.updated,\r\n        status: 'ok',\r\n      };\r\n    }\r\n\r\n    return convertedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method categoryUpdateIcon convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async categoryUpdateIcon(data) {\r\n    const convertedData = data;\r\n\r\n    if (data && data.updated) {\r\n      return {\r\n        ...data.updated,\r\n        status: 'ok',\r\n      };\r\n    }\r\n\r\n    return convertedData;\r\n  }\r\n\r\n\r\n    /**\r\n   * @public\r\n   * @method categoryUpdateThumbnail convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async categoryUpdateThumbnail(data) {\r\n    const convertedData = data;\r\n\r\n    if (data && data.updated) {\r\n      return {\r\n        ...data.updated,\r\n        status: 'ok',\r\n      };\r\n    }\r\n\r\n    return convertedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method updateImageFromLibrary convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async updateImageFromLibrary(data) {\r\n    const convertedData = data;\r\n\r\n    if (data && data.updated) {\r\n      return {\r\n        ...data.updated,\r\n        status: 'ok',\r\n      };\r\n    }\r\n\r\n    return convertedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method updateTag convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async updateTag(data) {\r\n    const convertedData = data;\r\n\r\n    if (data && data.updated) {\r\n      return {\r\n        ...data.updated,\r\n        status: 'ok',\r\n      };\r\n    }\r\n\r\n    return convertedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method updateDealerArea convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async updateDealerArea(data) {\r\n    const convertedData = data;\r\n\r\n    if (data && data.updated) {\r\n      return {\r\n        ...data.updated,\r\n        status: 'ok',\r\n      };\r\n    }\r\n\r\n    return convertedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method updateDealer convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async updateDealer(data) {\r\n    const convertedData = data;\r\n\r\n    if (data && data.updated) {\r\n      return {\r\n        ...data.updated,\r\n        status: 'ok',\r\n      };\r\n    }\r\n\r\n    return convertedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method updatePage convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async updatePage(data) {\r\n    const convertedData = data;\r\n\r\n    if (data && data.updated) {\r\n      return {\r\n        ...data.updated,\r\n        status: 'ok',\r\n      };\r\n    }\r\n\r\n    return convertedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method updateBrand convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async updateBrand(data) {\r\n    const convertedData = data;\r\n\r\n    if (data && data.updated) {\r\n      return {\r\n        ...data.updated,\r\n        status: 'ok',\r\n      };\r\n    }\r\n\r\n    return convertedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method updateBundle convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async updateBundle(data) {\r\n    const convertedData = data;\r\n\r\n    if (data && Object.keys(data).length > 0) {\r\n      return {\r\n        ...data,\r\n        status: 'ok',\r\n      };\r\n    }\r\n\r\n    return convertedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method updateCategory convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async updateCategory(data) {\r\n    const convertedData = data;\r\n\r\n    if (data && data.updated) {\r\n      return {\r\n        ...data.updated,\r\n        status: 'ok',\r\n      };\r\n    }\r\n\r\n    return convertedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method updateCustomer convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async updateCustomer(data) {\r\n    const convertedData = data;\r\n\r\n    if (data && data.updated) {\r\n      return {\r\n        ...data.updated,\r\n        status: 'ok',\r\n      };\r\n    }\r\n\r\n    return convertedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method updateStaff convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async updateStaff(data) {\r\n    const convertedData = data;\r\n\r\n    if (data && Object.keys(data).length > 0) {\r\n      return {\r\n        ...convertedData,\r\n        status: 'ok',\r\n      };\r\n    }\r\n\r\n    return convertedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method updateRegion convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async updateRegion(data) {\r\n    const convertedData = data;\r\n\r\n    if (data && data.updated) {\r\n      return {\r\n        ...data.updated,\r\n        status: 'ok',\r\n      };\r\n    }\r\n\r\n    return convertedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method deleteProduct convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async deleteProduct(data) {\r\n    const convertedData = data;\r\n    if (data && data.success) {\r\n      return {\r\n        status: 'ok',\r\n      };\r\n    }\r\n\r\n    return convertedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method deleteExpense convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async deleteExpense(data) {\r\n    const convertedData = data;\r\n    if (data && data.success) {\r\n      return {\r\n        status: 'ok',\r\n      };\r\n    }\r\n\r\n    return convertedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method postCategoryDelete convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async postCategoryDelete(data) {\r\n    const convertedData = data;\r\n    if (data && data.success) {\r\n      return {\r\n        status: 'ok',\r\n      };\r\n    }\r\n\r\n    return convertedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method deletePost convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async deletePost(data) {\r\n    const convertedData = data;\r\n    if (data && data.success) {\r\n      return {\r\n        status: 'ok',\r\n      };\r\n    }\r\n\r\n    return convertedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method deleteBundle convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async deleteBundle(data) {\r\n    const convertedData = data;\r\n    if (data && data.success) {\r\n      return {\r\n        status: 'ok',\r\n      };\r\n    }\r\n\r\n    return convertedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method deleteCoupon convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async deleteCoupon(data) {\r\n    const convertedData = data;\r\n    if (data && data.success) {\r\n      return {\r\n        status: 'ok',\r\n      };\r\n    }\r\n\r\n    return convertedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method pageDetail convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async pageDetail(data) {\r\n    const convertedData = data;\r\n    if (convertedData && Object.keys(convertedData).length > 0) {\r\n      return {\r\n        ...convertedData,\r\n        id: convertedData._id,\r\n        cover: {\r\n          cover: `${config['baseURL']}${\r\n            convertedData.cover\r\n              ? convertedData.cover.original && convertedData.cover.original\r\n              : ''\r\n          }`,\r\n          id: convertedData.cover ? convertedData.cover._id : '',\r\n        },\r\n      };\r\n    }\r\n    return convertedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method updateOrderStatus convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async updateOrderStatus(data) {\r\n    const convertedData = data;\r\n    if (data && data.success) {\r\n      return {\r\n        ...data,\r\n        status: 'ok',\r\n      };\r\n    }\r\n\r\n    return convertedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method postUpdateTag convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async postUpdateTag(data) {\r\n    const convertedData = data;\r\n    if (data && data.updated) {\r\n      return {\r\n        ...data.updated,\r\n\r\n        name: data.updated.name && data.updated.name,\r\n        description: data.updated.description && data.updated.description,\r\n        status: 'ok',\r\n      };\r\n    }\r\n\r\n    return convertedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method updateExpense convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async updateExpense(data) {\r\n    const convertedData = data;\r\n    if (data && Object.keys(convertedData).length > 0) {\r\n      return {\r\n        ...data,\r\n        status: 'ok',\r\n      };\r\n    }\r\n\r\n    return convertedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method deleteImageFromLibrary convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async deleteImageFromLibrary(data) {\r\n    const convertedData = data;\r\n    if (data && data.success) {\r\n      return {\r\n        status: 'ok',\r\n      };\r\n    }\r\n\r\n    return convertedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method deletePage convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async deletePage(data) {\r\n    const convertedData = data;\r\n    if (data && data.msg) {\r\n      return {\r\n        status: 'ok',\r\n      };\r\n    }\r\n\r\n    return convertedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method addTag convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async addTag(data) {\r\n    const convertedData = data;\r\n    if (data && data[0]) {\r\n      return {\r\n        ...data[0],\r\n        status: 'ok',\r\n      };\r\n    }\r\n\r\n    return convertedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method addExpense convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async addExpense(data) {\r\n    const convertedData = data;\r\n    if (data && data.inserted) {\r\n      return {\r\n        ...data.inserted[0],\r\n        status: 'ok',\r\n      };\r\n    }\r\n\r\n    return convertedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method addStaff convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async addStaff(data) {\r\n    const convertedData = data;\r\n    if (data && data.inserted && data.inserted) {\r\n      return {\r\n        ...data.inserted[0],\r\n        status: 'ok',\r\n      };\r\n    }\r\n\r\n    return convertedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method generateSalaryReport convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async generateSalaryReport(data) {\r\n    const convertedData = data;\r\n    if (data && data && data[0]) {\r\n      return {\r\n        ...data[0],\r\n        status: 'ok',\r\n      };\r\n    }\r\n\r\n    return convertedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method getSalaryReport convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async getSalaryReport(resData) {\r\n    const data = resData.data || [];\r\n\r\n    const convertedData =\r\n      data.length > 0 &&\r\n      data.map((customer) => {\r\n        return {\r\n          ...customer,\r\n          id: customer._id || '',\r\n        };\r\n      });\r\n\r\n    return convertedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method getSalaryReportDetail convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async getSalaryReportDetail(resData) {\r\n    const data = resData || [];\r\n\r\n    if (data && Object.keys(data).length > 0) {\r\n      return {\r\n        ...data,\r\n        id: data._id || '',\r\n        staff:\r\n          data.staff && data.staff.length > 0\r\n            ? data.staff.map((customer) => {\r\n                return {\r\n                  ...customer,\r\n                  id: customer._id || '',\r\n                  key: customer._id || '',\r\n                  firstName: customer.firstName || '',\r\n                  lastName: customer.lastName || '',\r\n                  name: customer.firstName + ' ' + customer.lastName,\r\n                  country: customer.country || '',\r\n                  city: customer.city || '',\r\n                  email: customer.email || '',\r\n                  phone: customer.phone || '',\r\n                  address: customer.address || '',\r\n                };\r\n              })\r\n            : [],\r\n      };\r\n    } else return {};\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method staffDetail convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async staffDetail(data) {\r\n    const convertedData = data;\r\n    if (convertedData && Object.keys(convertedData).length > 0) {\r\n      return {\r\n        ...convertedData,\r\n        id: convertedData._id || '',\r\n        key: convertedData._id || '',\r\n        firstName: convertedData.firstName || '',\r\n        lastName: convertedData.lastName || '',\r\n        name: convertedData.firstName + ' ' + convertedData.lastName,\r\n        country: convertedData.country || '',\r\n        city: convertedData.city || '',\r\n        email: convertedData.email || '',\r\n        phone: convertedData.phone || '',\r\n        address: convertedData.address || '',\r\n      };\r\n    }\r\n\r\n    return convertedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method expenseDetail convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async expenseDetail(data) {\r\n    const convertedData = data;\r\n    if (convertedData && Object.keys(convertedData).length > 0) {\r\n      return {\r\n        ...convertedData,\r\n        id: convertedData._id || '',\r\n        key: convertedData._id || '',\r\n      };\r\n    }\r\n\r\n    return convertedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method addDealerArea convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async addDealerArea(data) {\r\n    const convertedData = data;\r\n    if (data && data[0]) {\r\n      return {\r\n        ...data[0],\r\n        status: 'ok',\r\n      };\r\n    }\r\n\r\n    return convertedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method postAddCategory convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async postAddCategory(data) {\r\n    const convertedData = data;\r\n    if (data && data[0]) {\r\n      return {\r\n        ...data[0],\r\n        cover: data[0].cover\r\n          ? `${config['baseURL']}${\r\n              data[0].cover ? data[0].cover.thumbnail : ''\r\n            }`\r\n          : '',\r\n        status: 'ok',\r\n      };\r\n    }\r\n\r\n    return convertedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method postCategoryUpdate convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async postCategoryUpdate(data) {\r\n    const convertedData = data;\r\n    if (data && data.updated) {\r\n      return {\r\n        ...data['updated'],\r\n        cover: data['updated'].cover\r\n          ? `${config['baseURL']}${\r\n              data['updated'].cover ? data['updated'].cover.thumbnail : ''\r\n            }`\r\n          : '',\r\n        status: 'ok',\r\n      };\r\n    }\r\n\r\n    return convertedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method dealerAreaList convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async dealerAreaList(resData) {\r\n    const data = resData || [];\r\n\r\n    const convertedData =\r\n      data.length > 0 &&\r\n      data.map((tag) => {\r\n        return {\r\n          ...tag,\r\n          id: tag._id || '',\r\n          key: tag._id || '',\r\n          name: tag.name && tag.name,\r\n        };\r\n      });\r\n\r\n    return convertedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method expenseList convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async expenseList(resData) {\r\n    const data = resData.data || [];\r\n\r\n    console.log('expenseList', data);\r\n    const convertedData =\r\n      data.length > 0 &&\r\n      data.map((tag) => {\r\n        return {\r\n          ...tag,\r\n          id: tag._id || '',\r\n          key: tag._id || '',\r\n          topic: tag.topic && tag.topic,\r\n          amount: tag.amount && tag.amount,\r\n        };\r\n      });\r\n\r\n    return convertedData;\r\n  }\r\n  tag;\r\n  /**\r\n   * @public\r\n   * @method addDealer convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async addDealer(data) {\r\n    const convertedData = data;\r\n    if (data && data.inserted) {\r\n      return {\r\n        ...data.inserted[0],\r\n        status: 'ok',\r\n      };\r\n    }\r\n\r\n    return convertedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method addCategory convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\r\n  async addCategory(data) {\r\n    const convertedData = data;\r\n    if (data && data.inserted) {\r\n      return {\r\n        ...data.inserted[0],\r\n        status: 'ok',\r\n        cover: data.inserted[0].cover\r\n          ? `${config['baseURL']}${\r\n              data.inserted[0].cover ? data.inserted[0].cover.thumbnail : ''\r\n            }`\r\n          : '',\r\n      };\r\n    }\r\n\r\n    return convertedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method postAddCategory convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async postAddCategory(data) {\r\n    const convertedData = data;\r\n    if (data && data.inserted) {\r\n      return {\r\n        ...data.inserted[0],\r\n        status: 'ok',\r\n      };\r\n    }\r\n\r\n    return convertedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method addProduct convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\r\n  async addProduct(data) {\r\n    const convertedData = data;\r\n    if (data && data.inserted) {\r\n      return {\r\n        ...data.inserted[0],\r\n        status: 'ok',\r\n        cover: data.inserted[0].cover\r\n          ? `${config['baseURL']}${\r\n              data.inserted[0].cover ? data.inserted[0].cover.thumbnail : ''\r\n            }`\r\n          : '',\r\n      };\r\n    }\r\n\r\n    return convertedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method addPost convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\r\n  async addPost(data) {\r\n    const convertedData = data;\r\n    if (data && data.inserted) {\r\n      return {\r\n        ...data.inserted[0],\r\n        status: 'ok',\r\n        cover: data.inserted[0].cover\r\n          ? `${config['baseURL']}${\r\n              data.inserted[0].cover ? data.inserted[0].cover.thumbnail : ''\r\n            }`\r\n          : '',\r\n      };\r\n    }\r\n    return convertedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method addOrderNote convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\r\n  async addOrderNote(data) {\r\n    const convertedData = data;\r\n    if (data && data[0]) {\r\n      return {\r\n        ...data[0],\r\n        status: 'ok',\r\n      };\r\n    }\r\n    return convertedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method updateOrderNote convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\r\n  async updateOrderNote(data) {\r\n    const convertedData = data;\r\n    if (data && data['updated']) {\r\n      return {\r\n        ...data['updated'],\r\n        status: 'ok',\r\n      };\r\n    }\r\n    return convertedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method updateAdminRole convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\r\n  async updateAdminRole(data) {\r\n    const convertedData = data;\r\n    if (data && data.updated) {\r\n      return {\r\n        ...data.updated,\r\n        status: 'ok',\r\n      };\r\n    }\r\n    return convertedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method postAddTag convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\r\n  async postAddTag(data) {\r\n    const convertedData = data;\r\n    if (data && data.inserted) {\r\n      return {\r\n        ...data.inserted[0],\r\n        status: 'ok',\r\n      };\r\n    }\r\n    return convertedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method addOrder convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\r\n  async addOrder(data) {\r\n    const convertedData = data;\r\n    if (data && data.inserted) {\r\n      return {\r\n        ...data.inserted[0],\r\n        status: 'ok',\r\n      };\r\n    }\r\n    return convertedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method getOrderNote convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\r\n  async getOrderNote(data) {\r\n    const convertedData = data;\r\n    return convertedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method addTheme convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async addTheme(data) {\r\n    const convertedData = data;\r\n    if (data && data.success) {\r\n      return {\r\n        ...data.inserted[0],\r\n        status: 'ok',\r\n      };\r\n    }\r\n\r\n    return convertedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method postDeleteTag convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async postDeleteTag(data) {\r\n    const convertedData = data;\r\n    if (data && data.success) {\r\n      return {\r\n        status: 'ok',\r\n      };\r\n    }\r\n\r\n    return convertedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method deleteSalaryReport convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async deleteSalaryReport(data) {\r\n    const convertedData = data;\r\n    if (data && data.success) {\r\n      return {\r\n        status: 'ok',\r\n      };\r\n    }\r\n\r\n    return convertedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method deleteOrderNote convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async deleteOrderNote(data) {\r\n    const convertedData = data;\r\n    if (data && data.success) {\r\n      return {\r\n        status: 'ok',\r\n      };\r\n    }\r\n\r\n    return convertedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method addPage convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async addPage(data) {\r\n    const convertedData = data;\r\n    if (data && data[0]) {\r\n      return {\r\n        ...data[0],\r\n        status: 'ok',\r\n      };\r\n    }\r\n\r\n    return convertedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method addBrand convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async addBrand(data) {\r\n    const convertedData = data;\r\n    if (data && data.inserted) {\r\n      return {\r\n        ...data.inserted[0],\r\n        status: 'ok',\r\n        cover: data.inserted[0].cover\r\n          ? `${config['baseURL']}${\r\n              data.inserted[0].cover ? data.inserted[0].cover.thumbnail : ''\r\n            }`\r\n          : '',\r\n      };\r\n    }\r\n\r\n    return convertedData;\r\n  }\r\n  /**\r\n   * @public\r\n   * @method addComponent convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async addComponent(data) {\r\n    const convertedData = data;\r\n    if (data && data.inserted) {\r\n      return {\r\n        ...data.inserted[0],\r\n        status: 'ok',\r\n      };\r\n    }\r\n\r\n    return convertedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method addCustomer convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async addCustomer(data) {\r\n    const convertedData = data;\r\n    if (data && data.inserted) {\r\n      return {\r\n        ...data.inserted[0],\r\n        status: 'ok',\r\n      };\r\n    }\r\n\r\n    return convertedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method addRegion convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async addRegion(data) {\r\n    const convertedData = data;\r\n    if (data && data.inserted) {\r\n      return {\r\n        ...data.inserted[0],\r\n        status: 'ok',\r\n      };\r\n    }\r\n\r\n    return convertedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method deleteTag convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async deleteTag(data) {\r\n    const convertedData = data;\r\n    if (data && data.success) {\r\n      return {\r\n        status: 'ok',\r\n      };\r\n    }\r\n\r\n    return convertedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method deleteDealerArea convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async deleteDealerArea(data) {\r\n    const convertedData = data;\r\n    if (data && data.success) {\r\n      return {\r\n        status: 'ok',\r\n      };\r\n    }\r\n\r\n    return convertedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method deleteDealer convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async deleteDealer(data) {\r\n    const convertedData = data;\r\n    if (data && data.success) {\r\n      return {\r\n        status: 'ok',\r\n      };\r\n    }\r\n\r\n    return convertedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method logout convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async logout(data) {\r\n    const convertedData = data;\r\n    if (data && data.success) {\r\n      return {\r\n        status: 'ok',\r\n      };\r\n    }\r\n\r\n    return convertedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method activeTheme convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async activeTheme(data) {\r\n    const convertedData = data;\r\n    if (data && data.success) {\r\n      return {\r\n        status: 'ok',\r\n      };\r\n    }\r\n\r\n    return convertedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method deletetheme convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async deletetheme(data) {\r\n    const convertedData = data;\r\n    if (data && data.success) {\r\n      return {\r\n        status: 'ok',\r\n      };\r\n    }\r\n\r\n    return convertedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method deleteCustomer convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async deleteCustomer(data) {\r\n    const convertedData = data;\r\n    if (data && data.success) {\r\n      return {\r\n        status: 'ok',\r\n      };\r\n    }\r\n\r\n    return convertedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method deleteStaff convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async deleteStaff(data) {\r\n    const convertedData = data;\r\n    if (data && data.success) {\r\n      return {\r\n        status: 'ok',\r\n      };\r\n    }\r\n\r\n    return convertedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method deleteComponent convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async deleteComponent(data) {\r\n    const convertedData = data;\r\n    if (data && data.success) {\r\n      return {\r\n        status: 'ok',\r\n      };\r\n    }\r\n\r\n    return convertedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method deleteBrand convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async deleteBrand(data) {\r\n    const convertedData = data;\r\n    if (data && data.success) {\r\n      return {\r\n        status: 'ok',\r\n      };\r\n    }\r\n\r\n    return convertedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method deleteCategory convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async deleteCategory(data) {\r\n    const convertedData = data;\r\n    if (data && data.success) {\r\n      return {\r\n        status: 'ok',\r\n      };\r\n    }\r\n\r\n    return convertedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method deleteRegion convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async deleteRegion(data) {\r\n    const convertedData = data;\r\n    if (data && data.success) {\r\n      return {\r\n        status: 'ok',\r\n      };\r\n    }\r\n\r\n    return convertedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method siteSettings convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async siteSettings(resData) {\r\n    const convertedData = resData;\r\n\r\n    if (resData.data) {\r\n      return {\r\n        ...resData.data,\r\n      };\r\n    }\r\n\r\n    return convertedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method getSiteSEO convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async getSiteSEO(resData) {\r\n    const convertedData = resData;\r\n\r\n    if (resData.data) {\r\n      return {\r\n        ...resData.data,\r\n      };\r\n    }\r\n\r\n    return convertedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method getAdminCredential convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async getAdminCredential(resData) {\r\n    const convertedData = resData;\r\n\r\n    if (resData.data) {\r\n      return {\r\n        ...resData.data,\r\n      };\r\n    }\r\n\r\n    return convertedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method updateSiteSettings convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async updateSiteSettings(data) {\r\n    if (data['updated']) {\r\n      return {\r\n        status: 'ok',\r\n      };\r\n    }\r\n\r\n    return data;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method updateSiteSEO convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async updateSiteSEO(data) {\r\n    if (data['updated']) {\r\n      return {\r\n        ...data['updated'],\r\n        status: 'ok',\r\n      };\r\n    }\r\n\r\n    return data;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method updateAdminCredential convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async updateAdminCredential(data) {\r\n    if (data && Object.keys(data).length > 0) {\r\n      return {\r\n        ...data,\r\n        status: 'ok',\r\n      };\r\n    }\r\n\r\n    return data;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method adminUpdatePassword convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async adminUpdatePassword(data) {\r\n    if (data['updated']) {\r\n      return {\r\n        ...data['updated'],\r\n        status: 'ok',\r\n      };\r\n    }\r\n\r\n    return data;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method updateInvoiceSettings convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async updateInvoiceSettings(data) {\r\n    if (data['updated']) {\r\n      return {\r\n        status: 'ok',\r\n      };\r\n    }\r\n\r\n    return data;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method invoiceSettingsDetail convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async invoiceSettingsDetail(resData) {\r\n    const convertedData = resData;\r\n\r\n    if (resData.data) {\r\n      return {\r\n        ...resData.data,\r\n      };\r\n    }\r\n\r\n    return convertedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method categoryDetail convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async categoryDetail(data) {\r\n    const convertedData = {\r\n      ...data,\r\n      id: data.id || data._id || '',\r\n      name: data.name && data.name,\r\n      description: data.description && data.description,\r\n      productCount: data.productCount || 0,\r\n      icon: data.icon ? `${config['baseURL']}${data.icon}` : '',\r\n      thumbnail: data.thumbnail ? `${config['baseURL']}${data.thumbnail}` : null,\r\n      type:\r\n        data.subCategory.length > 0 &&\r\n        data.subCategory[0] &&\r\n        data.subCategory[0]['name']\r\n          ? 'Top category'\r\n          : 'Child category',\r\n      url: data.url || '',\r\n      subCategory:\r\n        data.subCategory.length > 0 &&\r\n        data.subCategory[0] &&\r\n        data.subCategory[0]['name']\r\n          ? data.subCategory.map((subCat) => {\r\n              return {\r\n                id: subCat._id || '',\r\n                name: subCat.name && subCat.name,\r\n                description: subCat.description && subCat.description,\r\n                cover: subCat.cover\r\n                  ? `${config['baseURL']}${subCat.cover.medium}`\r\n                  : '',\r\n              };\r\n            })\r\n          : [],\r\n      cover: {\r\n        cover: `${config['baseURL']}${\r\n          data.cover ? data.cover.original && data.cover.original : ''\r\n        }`,\r\n        id: data.cover ? data.cover._id : '',\r\n      },\r\n      image:\r\n        (data.image &&\r\n          data.image.length > 0 &&\r\n          data.image.map((img) => {\r\n            return {\r\n              id: img._id || '',\r\n              name: img.name && img.name,\r\n              cover: `${config['baseURL']}${img.medium}`,\r\n              added: img.added,\r\n              title: img.title,\r\n              labels: img.labels,\r\n              alt: img.alt,\r\n              caption: img.caption,\r\n            };\r\n          })) ||\r\n        [],\r\n    };\r\n\r\n    return convertedData;\r\n  }\r\n  /**\r\n   * @public\r\n   * @method createOrder convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async createOrder(data) {\r\n    //map props\r\n\r\n    const formatedData = {\r\n      ...data,\r\n    };\r\n\r\n    return formatedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method adminRoleRegister convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async adminRoleRegister(data) {\r\n    //map props\r\n\r\n    if (data && data.length > 0) {\r\n      return {\r\n        status: 'ok',\r\n        ...data[0],\r\n      };\r\n    } else return {};\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method adminList convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\r\n  async adminList(resData) {\r\n    //map props\r\n    return resData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method adminDetail convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async adminDetail(resData) {\r\n    //map props\r\n\r\n    return resData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method orderDetail convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async orderDetail(data) {\r\n    //map props\r\n    const order = data.order || false;\r\n    if (order) {\r\n      return {\r\n        ...order,\r\n        id: order.id || order._id,\r\n        shippingAddress: order.shippingAddress,\r\n        name:\r\n          order.shippingAddress['firstName'] +\r\n          ' ' +\r\n          order.shippingAddress['lastName'],\r\n        country: order.shippingAddress['country'],\r\n        city: order.shippingAddress['city'],\r\n        address: order.shippingAddress['address'],\r\n        phone: order.shippingAddress['phone'],\r\n        email: order.shippingAddress['email'],\r\n        shortCode: order.shortCode || '',\r\n        status:\r\n          typeof order.status === 'string'\r\n            ? order.status\r\n            : order.status && Object.keys(order.status).length > 0\r\n            ? order.status['name']\r\n            : 'pending',\r\n        total: order.totalPrice,\r\n        deliveryCharge: order.totalPrice,\r\n        deliveryRegion: order.deliveryRegion,\r\n        deliveryName: order.deliveryRegion && order.deliveryRegion['name'],\r\n        deliveryPickUpLocation:\r\n          order.deliveryRegion && order.deliveryRegion['pickUpLocation'],\r\n        deliveryCountryName:\r\n          order.deliveryRegion && order.deliveryRegion['countryName'],\r\n        products:\r\n          order.products && order.products.length > 0\r\n            ? order.products.map((product) => {\r\n                return {\r\n                  ...product,\r\n                  id: product._id || '',\r\n                  name: product.name && product.name,\r\n                  description: product.description && product.description,\r\n                  cover: `${config['baseURL']}${\r\n                    (product.cover && product.cover['thumbnail']) || ''\r\n                  }`,\r\n                  regularPrice: product.price && product.price['regular'],\r\n                  offerPrice: product.price && product.price['offer'],\r\n                  url: product.url,\r\n                  unit: product.unit,\r\n                  category: product.category,\r\n                  pricing: product.pricing,\r\n                  date: product.date,\r\n                  time: product.time,\r\n                  venue: product.venue,\r\n                  brand: product.brand,\r\n                  tags: product.tags,\r\n                  price: product.price,\r\n                  available:\r\n                    product.pricing && product.pricing.length > 0\r\n                      ? product.pricing[0]['stock'] &&\r\n                        product.pricing[0]['stock']['available']\r\n                      : 0,\r\n                  minimum:\r\n                    product.pricing && product.pricing.length > 0\r\n                      ? product.pricing[0]['stock'] &&\r\n                        product.pricing[0]['stock']['minimum']\r\n                      : 0,\r\n                };\r\n              })\r\n            : [],\r\n        date_created: order.added,\r\n        paymentMethod: order['payment']['paymentMethod'],\r\n        paymentStatus: order['payment']['status'],\r\n        payment: order['payment'],\r\n        customerId: order['customer'] ? order['customer']['_id'] : '',\r\n      };\r\n    } else return {};\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method signup convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async signup(data) {\r\n    return {\r\n      status: 'ok',\r\n    };\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method signin convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async signin(data) {\r\n    if (data['msg']) {\r\n      return {\r\n        status: 'ok',\r\n      };\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method login convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async login(data) {\r\n    if (data['msg']) {\r\n      return {\r\n        status: 'ok',\r\n      };\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method addImageToLibrary convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async addImageToLibrary(data) {\r\n    return data;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method getCurrentUserData convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async getCurrentCustomerData(data) {\r\n    //map props\r\n    // let generalFormat = dataMap[config['server']]['getCurrentUserData']; //get genereal format from dataMap\r\n\r\n    const formatedData = {\r\n      ...data,\r\n    };\r\n\r\n    return formatedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method getAutoEmailConfiguration convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async getAutoEmailConfiguration(data) {\r\n    const formatedData = {\r\n      ...data,\r\n    };\r\n\r\n    return formatedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method getAutoSMSConfiguration convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async getAutoSMSConfiguration(data) {\r\n    const formatedData = {\r\n      ...data,\r\n    };\r\n\r\n    return formatedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method getEmailDetails convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async getEmailDetails(data) {\r\n    const formatedData = {\r\n      ...data,\r\n    };\r\n\r\n    return formatedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method getSMSDetails convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async getSMSDetails(data) {\r\n    const formatedData = {\r\n      ...data,\r\n    };\r\n\r\n    return formatedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method currentCustomerData convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async currentCustomerData(data) {\r\n    //map props\r\n    // let generalFormat = dataMap[config['server']]['currentCustomerData']; //get genereal format from dataMap\r\n\r\n    const convertedData = {\r\n      ...data,\r\n    };\r\n\r\n    return convertedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method updateCurrentCustomerData convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async updateCurrentCustomerData(data) {\r\n    //map props\r\n    // let generalFormat = dataMap[config['server']]['updateCurrentCustomerData']; //get genereal format from dataMap\r\n\r\n    const convertedData = {\r\n      status: 'ok',\r\n    };\r\n\r\n    return convertedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method changePassword convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async changePassword(data) {\r\n    if (data['success']) {\r\n      return {\r\n        status: 'ok',\r\n      };\r\n    }\r\n\r\n    return data;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method configureAutoEmail convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async configureAutoEmail(data) {\r\n    if (data['success']) {\r\n      return {\r\n        status: 'ok',\r\n      };\r\n    }\r\n    return data;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method configureAutoSMS convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async configureAutoSMS(data) {\r\n    if (data['success']) {\r\n      return {\r\n        status: 'ok',\r\n      };\r\n    }\r\n    return data;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method getCurrentUserOrders convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async getCurrentUserOrders(resData) {\r\n    const data = resData.data || [];\r\n    const isNext = resData.page.next;\r\n\r\n    let convertedData =\r\n      (data.length > 0 &&\r\n        data.map((item) => {\r\n          return {\r\n            ...item,\r\n            id: item.id || item._id,\r\n            billingAddress: item.billingAddress,\r\n            status: item.status,\r\n            total: item.totalPrice,\r\n            products: item.products,\r\n            date_created: item.date,\r\n            paymentMethod: item['payment']['paymentMethod'],\r\n            customerId: item.customer['_id'],\r\n          };\r\n        })) ||\r\n      [];\r\n\r\n    convertedData = {\r\n      data: convertedData,\r\n      isNext,\r\n    };\r\n\r\n    return convertedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method orderList convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async orderList(resData) {\r\n    const data = resData.data || [];\r\n    // const isNext = resData.page.next;\r\n\r\n    console.log('orderListDAta', data);\r\n\r\n    let convertedData =\r\n      (data.length > 0 &&\r\n        data.map((item) => {\r\n          return {\r\n            ...item,\r\n            id: item.id || item._id,\r\n            shippingAddress: item.billingAddress,\r\n            shortCode: item.shortCode || '',\r\n            name:\r\n              item.shippingAddress &&\r\n              item.shippingAddress['firstName'] &&\r\n              item.shippingAddress['firstName'] + ' ' + item.shippingAddress &&\r\n              item.shippingAddress['lastName'] &&\r\n              item.shippingAddress['lastName'],\r\n            country:\r\n              item.shippingAddress &&\r\n              item.shippingAddress['country'] &&\r\n              item.shippingAddress['country'],\r\n            city:\r\n              item.shippingAddress &&\r\n              item.shippingAddress['city'] &&\r\n              item.shippingAddress['city'],\r\n            status:\r\n              typeof item.status === 'string'\r\n                ? item.status\r\n                : item.status && Object.keys(item.status).length > 0\r\n                ? item.status['name']\r\n                : 'pending',\r\n            total: item.totalPrice,\r\n            products: item.products,\r\n            date_created: item.added,\r\n            paymentMethod: item['payment'] && item['payment']['paymentMethod'],\r\n            paymentStatus: item['payment'] && item['payment']['status'],\r\n            payment: item['payment'],\r\n            customerId: item['customer'] ? item['customer']['_id'] : '',\r\n            deliveryName:\r\n              item.deliveryRegion && Object.keys(item.deliveryRegion).length > 0\r\n                ? `${item.deliveryRegion['name']}`\r\n                : '',\r\n          };\r\n        })) ||\r\n      [];\r\n\r\n    // convertedData = {\r\n    // \tdata: convertedData,\r\n    // \tisNext\r\n    // };\r\n\r\n    return convertedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method dealerOrderList convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async dealerOrderList(resData) {\r\n    const data = resData.data || [];\r\n    // const isNext = resData.page.next;\r\n\r\n    console.log('orderListDAta', data);\r\n\r\n    let convertedData =\r\n      (data.length > 0 &&\r\n        data.map((item) => {\r\n          return {\r\n            ...item,\r\n            id: item.id || item._id,\r\n            shippingAddress: item.billingAddress,\r\n            shortCode: item.shortCode || '',\r\n            name:\r\n              item.shippingAddress &&\r\n              item.shippingAddress['firstName'] &&\r\n              item.shippingAddress['firstName'] + ' ' + item.shippingAddress &&\r\n              item.shippingAddress['lastName'] &&\r\n              item.shippingAddress['lastName'],\r\n            country:\r\n              item.shippingAddress &&\r\n              item.shippingAddress['country'] &&\r\n              item.shippingAddress['country'],\r\n            city:\r\n              item.shippingAddress &&\r\n              item.shippingAddress['city'] &&\r\n              item.shippingAddress['city'],\r\n            status:\r\n              typeof item.status === 'string'\r\n                ? item.status\r\n                : item.status && Object.keys(item.status).length > 0\r\n                ? item.status['name']\r\n                : 'pending',\r\n            total: item.totalPrice,\r\n            products: item.products,\r\n            date_created: item.added,\r\n            paymentMethod: item['payment'] && item['payment']['paymentMethod'],\r\n            paymentStatus: item['payment'] && item['payment']['status'],\r\n            payment: item['payment'],\r\n            customerId: item['customer'] ? item['customer']['_id'] : '',\r\n          };\r\n        })) ||\r\n      [];\r\n\r\n    // convertedData = {\r\n    // \tdata: convertedData,\r\n    // \tisNext\r\n    // };\r\n\r\n    return convertedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method orderListForCustomer convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async orderListForCustomer(resData) {\r\n    const data = resData.data || [];\r\n    // const isNext = resData.page.next;\r\n\r\n    let convertedData =\r\n      (data.length > 0 &&\r\n        data.map((item) => {\r\n          return {\r\n            id: item.id || item._id,\r\n            shortCode: item.shortCode || '',\r\n            shippingAddress: item.billingAddress,\r\n            status:\r\n              typeof item.status === 'string'\r\n                ? item.status\r\n                : item.status && Object.keys(item.status).length > 0\r\n                ? item.status['name']\r\n                : 'pending',\r\n            name:\r\n              item.shippingAddress &&\r\n              item.shippingAddress['firstName'] &&\r\n              item.shippingAddress['firstName'] + ' ' + item.shippingAddress &&\r\n              item.shippingAddress['lastName'] &&\r\n              item.shippingAddress['lastName'],\r\n            country:\r\n              item.shippingAddress &&\r\n              item.shippingAddress['country'] &&\r\n              item.shippingAddress['country'],\r\n            city:\r\n              item.shippingAddress &&\r\n              item.shippingAddress['city'] &&\r\n              item.shippingAddress['city'],\r\n            total: item.totalPrice,\r\n            products: item.products,\r\n            date_created: item.added,\r\n            paymentMethod: item['payment'] && item['payment']['paymentMethod'],\r\n            paymentStatus: item['payment'] && item['payment']['status'],\r\n            payment: item['payment'],\r\n            customerId: item['customer'] ? item['customer']['_id'] : '',\r\n            deliveryName:\r\n              item.deliveryRegion && Object.keys(item.deliveryRegion).length > 0\r\n                ? `${item.deliveryRegion['name']}`\r\n                : '',\r\n          };\r\n        })) ||\r\n      [];\r\n\r\n    // convertedData = {\r\n    // \tdata: convertedData,\r\n    // \tisNext\r\n    // };\r\n\r\n    return convertedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method currentUserOrders convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async currentUserOrders(data) {\r\n    //map props\r\n    let generalFormat = dataMap[config['server']]['currentUserOrders']; //get genereal format from dataMap\r\n\r\n    const convertedData =\r\n      (data.length > 0 &&\r\n        data.map((item) => {\r\n          return {\r\n            ...generalFormat,\r\n            id: item.id,\r\n            status: item.status,\r\n            total: item.total,\r\n            line_items: item.line_items,\r\n            date_created: item.date_created,\r\n          };\r\n        })) ||\r\n      [];\r\n\r\n    return convertedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method payment convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\r\n  async payment(data) {\r\n    const paymentItems = data.items;\r\n    if (!paymentItems.length > 0) {\r\n      return paymentItems;\r\n    }\r\n\r\n    const items = paymentItems.map((item) => {\r\n      return {\r\n        name: item.name || '',\r\n        number: item.text || '',\r\n      };\r\n    });\r\n    return items;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method welcome convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n  async welcome(data) {\r\n    return {\r\n      text: data.text,\r\n    };\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method logo convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n  async logo(data) {\r\n    const src =\r\n      data.image && data.image.length > 0\r\n        ? `${config['baseURL']}${data.image[0]['original']}`\r\n        : '';\r\n    return {\r\n      src,\r\n      target: data.target,\r\n    };\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method hotline convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n  async hotline(data) {\r\n    return {\r\n      text: data.text,\r\n    };\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method navLinks convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async navLinks(data) {\r\n    const navLinkItems = data.items;\r\n    if (!navLinkItems.length > 0) {\r\n      return [];\r\n    }\r\n\r\n    const items = navLinkItems.map((item) => {\r\n      return {\r\n        text: item.name || item.text,\r\n        target: item.target,\r\n      };\r\n    });\r\n\r\n    return items;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method slider convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async slider(data) {\r\n    const sliderItems = data.items;\r\n    if (!sliderItems.length > 0) {\r\n      return sliderItems;\r\n    }\r\n\r\n    const images = sliderItems.map((item) => {\r\n      return {\r\n        target: item.target,\r\n        src: `${config['baseURL']}${item.image[0]['medium']}`,\r\n      };\r\n    });\r\n    return images;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method sliderRight convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n  async sliderRight(data) {\r\n    const sliderRightItems = data.items;\r\n    if (!sliderRightItems.length > 0) {\r\n      return sliderRightItems;\r\n    }\r\n\r\n    const images = sliderRightItems.map((item) => {\r\n      return {\r\n        target: item.target,\r\n        src: `${config['baseURL']}${item.image[0]['medium']}`,\r\n      };\r\n    });\r\n    return images;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method address convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n  async address(data) {\r\n    return {\r\n      name: data.name,\r\n      text: data.text,\r\n    };\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method Links convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async Links(data) {\r\n    const servicesItems = data.items;\r\n    if (!servicesItems.length > 0) {\r\n      return servicesItems;\r\n    }\r\n\r\n    const items = servicesItems.map((item) => {\r\n      return {\r\n        target: item.target,\r\n        name: item.name || item.text,\r\n      };\r\n    });\r\n    return items;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method Account convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async Account(data) {\r\n    const accountItems = data.items;\r\n    if (!accountItems.length > 0) {\r\n      return accountItems;\r\n    }\r\n\r\n    const items = accountItems.map((item) => {\r\n      return {\r\n        target: item.target,\r\n        name: item.name || item.text,\r\n      };\r\n    });\r\n    return items;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method 'About Us' convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async 'About Us'(data) {\r\n    const aboutUsItems = data.items;\r\n    if (!aboutUsItems.length > 0) {\r\n      return aboutUsItems;\r\n    }\r\n\r\n    const items = aboutUsItems.map((item) => {\r\n      return {\r\n        target: item.target,\r\n        name: item.name || item.text,\r\n      };\r\n    });\r\n    return items;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method 'getTotalUserCount Us' convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async getTotalUserCount(data) {\r\n    return data;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method addCoupon Us' convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async addCoupon(data) {\r\n    if (data && data[0]) {\r\n      return {\r\n        status: 'ok',\r\n        ...data[0],\r\n        cover: data[0].cover\r\n          ? `${config['baseURL']}${\r\n              data[0].cover ? data[0].cover.thumbnail : ''\r\n            }`\r\n          : '',\r\n      };\r\n    }\r\n    return {};\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method addBundle Us convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async addBundle(data) {\r\n    if (data && data[0]) {\r\n      return {\r\n        status: 'ok',\r\n        ...data[0],\r\n        price:\r\n          parseInt(data[0].price['offer']) > parseInt(data[0].price['regular'])\r\n            ? data[0].price['offer']\r\n            : data[0].price['regular'],\r\n        cover: data[0].cover\r\n          ? `${config['baseURL']}${\r\n              data[0].cover ? data[0].cover.thumbnail : ''\r\n            }`\r\n          : '',\r\n      };\r\n    }\r\n    return {};\r\n  }\r\n}\r\n\r\nexport default Converter;\r\n","import { useEffect, useReducer } from 'react';\r\nimport Connector from '../lib/connector.js';\r\n\r\ntype TInitialData = any;\r\ntype Tdependecies = any[] | [];\r\ntype TItem = string;\r\ntype IFormat = string | undefined;\r\n\r\ntype Actions = {\r\n  type: string;\r\n  payload?: any;\r\n};\r\n\r\ninterface IState {\r\n  readonly isLoading: boolean;\r\n  readonly error: object;\r\n  readonly data: TInitialData;\r\n  readonly done: boolean;\r\n}\r\n\r\nconst connector = new Connector();\r\n\r\nconst dataFetchReducer = (state: IState, action: Actions) => {\r\n  switch (action.type) {\r\n    case 'FETCH_INIT':\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n        error: {\r\n          isError: false,\r\n          error: {},\r\n        },\r\n        done: false,\r\n      };\r\n    case 'FETCH_SUCCESS':\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        data: action.payload,\r\n        done: true,\r\n      };\r\n    case 'FETCH_FAILURE':\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        error: {\r\n          isError: true,\r\n          error: action.payload,\r\n          done: true,\r\n        },\r\n      };\r\n    default:\r\n      throw new Error();\r\n  }\r\n};\r\n\r\nconst useFetch = (\r\n  dependencies: Tdependecies = [],\r\n  initialData: TInitialData,\r\n  item: TItem,\r\n  options?: any,\r\n  format?: IFormat\r\n): IState => {\r\n  const initialState: IState = {\r\n    isLoading: false,\r\n    error: {\r\n      isError: false,\r\n      error: {},\r\n    },\r\n    data: initialData,\r\n    done: false,\r\n  };\r\n  const [state, dispatch] = useReducer(dataFetchReducer, initialState);\r\n\r\n  useEffect(() => {\r\n    let didCancel = false;\r\n    const fetchData = async () => {\r\n      dispatch({ type: 'FETCH_INIT' });\r\n      try {\r\n        // @ts-ignore\r\n        let data = await connector.request(item, format, options);\r\n        if (!didCancel) {\r\n          dispatch({ type: 'FETCH_SUCCESS', payload: data });\r\n        }\r\n      } catch (error) {\r\n        if (!didCancel) {\r\n          dispatch({ type: 'FETCH_FAILURE', payload: error });\r\n        }\r\n      }\r\n    };\r\n    fetchData();\r\n    return () => {\r\n      didCancel = true;\r\n    };\r\n  }, dependencies);\r\n\r\n  return state;\r\n};\r\n\r\nexport default useFetch;\r\n","import { useReducer } from 'react';\r\nimport Connector from '../lib/connector.js';\r\n\r\ntype TInitialData = any;\r\ntype TItem = string;\r\n\r\ntype Actions = {\r\n  type: string;\r\n  payload?: any;\r\n};\r\n\r\ninterface IState {\r\n  readonly isLoading: boolean;\r\n  readonly error: object;\r\n  readonly data: TInitialData;\r\n  readonly done: boolean;\r\n}\r\n\r\nconst connector = new Connector();\r\n\r\nconst dataFetchReducer = (state: IState, action: Actions) => {\r\n  switch (action.type) {\r\n    case 'FETCH_INIT':\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n        error: {\r\n          isError: false,\r\n          error: {},\r\n        },\r\n        done: false,\r\n      };\r\n    case 'FETCH_SUCCESS':\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        data: action.payload,\r\n        done: true,\r\n      };\r\n    case 'FETCH_FAILURE':\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        error: {\r\n          isError: true,\r\n          error: action.payload,\r\n        },\r\n        done: true,\r\n      };\r\n    default:\r\n      throw new Error();\r\n  }\r\n};\r\n\r\nconst useHandleFetch = (\r\n  initialData: TInitialData,\r\n  item: TItem,\r\n  format?: string\r\n): [IState, (values: any) => void] => {\r\n  const initialState: IState = {\r\n    isLoading: false,\r\n    error: {\r\n      isError: false,\r\n      error: {},\r\n    },\r\n    data: initialData,\r\n    done: false,\r\n  };\r\n\r\n  const [state, dispatch] = useReducer(dataFetchReducer, initialState);\r\n\r\n  const handlePost = async (options: any) => {\r\n    dispatch({ type: 'FETCH_INIT' });\r\n\r\n    try {\r\n      // @ts-ignore\r\n      let data = await connector.request(item, format || 'json', options);\r\n      dispatch({ type: 'FETCH_SUCCESS', payload: data });\r\n      return data;\r\n    } catch (error) {\r\n      dispatch({ type: 'FETCH_FAILURE', payload: error });\r\n      return initialData;\r\n    }\r\n  };\r\n\r\n  return [state, handlePost];\r\n};\r\n\r\nexport default useHandleFetch;\r\n","import React, { useState } from 'react';\r\nimport { Button } from 'antd';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n// import components\r\nimport Input from '../../../components/Field/Input';\r\nimport TextArea from '../../../components/Field/TextArea';\r\nimport { useHandleFetch } from '../../../hooks';\r\n\r\nconst validationSchema = Yup.object().shape({\r\n\tusername: Yup.string()\r\n\t\t.label('Username')\r\n\t\t.required('Username is required')\r\n\t\t.min(3, 'Username must have at least 3 characters'),\r\n\r\n\tpassword: Yup.string().label('Password').required('Password is required'),\r\n});\r\n\r\nconst initialValues = {\r\n\tusername: '',\r\n\tpassword: '',\r\n};\r\n\r\ninterface Props {\r\n\r\n}\r\n\r\nconst QuickEdit = ({ }: Props) => {\r\n\tconst [loginState, handleLoginFetch] = useHandleFetch({}, 'login');\r\n\r\n\tconst handleSubmit = async (values: any, actions: any) => {\r\n\t\tconst updateCategoryRes = await handleLoginFetch({\r\n\t\t\tbody: {\r\n\t\t\t\tusername: values.username,\r\n\t\t\t\tpassword: values.password,\r\n\t\t\t},\r\n\t\t});\r\n\r\n\t\tactions.setSubmitting(false);\r\n\t};\r\n\r\n\r\n\r\n\r\n\tconst getisSubmitButtonDisabled = (values, isValid) => {\r\n\t\tif (!values.username || !values.password || !isValid) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\treturn (\r\n\t\t<Formik\r\n\t\t\tonSubmit={(values, actions) => handleSubmit(values, actions)}\r\n\t\t\tvalidationSchema={validationSchema}\r\n\t\t\tvalidateOnBlur={false}\r\n\t\t\tenableReinitialize={true}\r\n\t\t\tinitialValues={\r\n\t\t\t\t{ ...initialValues }\r\n\t\t\t}\r\n\t\t>\r\n\t\t\t{({\r\n\t\t\t\thandleChange,\r\n\t\t\t\tvalues,\r\n\t\t\t\thandleSubmit,\r\n\t\t\t\terrors,\r\n\t\t\t\tisValid,\r\n\t\t\t\tisSubmitting,\r\n\t\t\t\ttouched,\r\n\t\t\t\thandleBlur,\r\n\t\t\t\tsetFieldTouched,\r\n\t\t\t\thandleReset,\r\n\t\t\t}) => (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\tmaxWidth: '400px',\r\n\t\t\t\t\t\t\tmargin: '20px'\r\n\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\tlabel='Username'\r\n\t\t\t\t\t\t\t\tvalue={values.username}\r\n\t\t\t\t\t\t\t\tname='username'\r\n\t\t\t\t\t\t\t\tisError={(touched.username && errors.username) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && loginState.error['error']['username'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.username && errors.username) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && loginState.error['error']['username'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('username');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\tlabel='Password'\r\n\t\t\t\t\t\t\t\tvalue={values.password}\r\n\t\t\t\t\t\t\t\tname='password'\r\n\t\t\t\t\t\t\t\tisError={(touched.password && errors.password) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && loginState.error['error']['password'])}\r\n\t\t\t\t\t\t\t\terrorString={(touched.password && errors.password) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && loginState.error['error']['password'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('password');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\ttype='primary'\r\n\t\t\t\t\t\t\t\tonClick={(e: any) => handleSubmit(e)}\r\n\t\t\t\t\t\t\t\tdisabled={getisSubmitButtonDisabled(values, isValid)}\r\n\t\t\t\t\t\t\t\tloading={isSubmitting}\r\n\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t// marginTop: '20px'\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\tLogin\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</>\r\n\t\t\t\t)}\r\n\t\t</Formik>\r\n\t);\r\n};\r\n\r\n\r\nexport default QuickEdit;\r\n","import Login from './Login';\r\nexport default Login;\r\n","export default ( initialState ) => ( reducerMap ) => ( state = initialState, action ) => {\r\n    const reducer = reducerMap[ action.type ];\r\n    return reducer ? reducer( state, action ) : state;\r\n};\r\n","import isomorphicFetch from 'isomorphic-fetch';\r\n\r\nexport default (url, method, body) => {\r\n\tconst options = {\r\n\t\tmethod,\r\n\t\theaders: requestHeaders(),\r\n\t\tbody: method !== 'GET' ? JSON.stringify(body) : null\r\n\t};\r\n\r\n\treturn isomorphicFetch(url, options).then(res =>\r\n\t\tparseStatus(res.status, res.json())\r\n\t);\r\n};\r\n\r\nfunction parseStatus(status, res) {\r\n\treturn new Promise((resolve, reject) => {\r\n\t\tif (status >= 200 && status < 300) {\r\n\t\t\tres.then(response => resolve(response));\r\n\t\t} else {\r\n\t\t\tres.then(response => reject({ status, response }));\r\n\t\t}\r\n\t});\r\n}\r\n\r\nfunction requestHeaders() {\r\n\treturn {\r\n\t\tAccept: 'application/json',\r\n\t\t'Content-Type': 'application/json'\r\n\t};\r\n}\r\n","import { combineReducers } from 'redux';\r\nimport * as types from './types';\r\nimport { createReducer } from '../../utils';\r\n\r\n/* State shape\r\n{\r\n    isAuthenticated: bool,\r\n    redirectAfterLogin: string\r\n}\r\n*/\r\n\r\nconst globalState = createReducer([])({\r\n  [types.SAVE_ROLES]: (state, action) => {\r\n    const roles = action.payload;\r\n    return [...roles];\r\n  },\r\n});\r\n\r\nexport default globalState; ","export const SAVE_ROLES = \"session/SAVE_ROLES\";\r\n","import * as types from \"./types\";\r\n\r\nexport const saveRoles = (roles) => ({\r\n    type: types.SAVE_ROLES,\r\n    payload: roles\r\n});\r\n","import reducer from \"./reducers\";\r\n\r\nimport * as glboalOperations from \"./operations\";\r\n\r\nexport {\r\n    glboalOperations,\r\n};\r\n\r\nexport default reducer;\r\n","import getDeliveryChargeTotal from './getDeliveryChargeTotal';\r\n\r\nconst allRoles = [\r\n  'getCatalogue',\r\n  'postCatalogue',\r\n  'getDelivery',\r\n  'postDelivery',\r\n  'getOrder',\r\n  'postOrder',\r\n  'getBlog',\r\n  'postBlog',\r\n  'getPage',\r\n  'postPage',\r\n  'analytics',\r\n  'accounts',\r\n  'getDealer',\r\n  'postDealer',\r\n];\r\n\r\nconst isAccess = (role, adminRoles) => {\r\n  if (!adminRoles || !adminRoles[0]) return false;\r\n  if (adminRoles.includes('superAdmin')) return true;\r\n  return adminRoles.includes(role);\r\n};\r\n\r\nexport { getDeliveryChargeTotal, isAccess };\r\n","import React, { useState } from 'react';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Link,\r\n  Switch,\r\n  withRouter,\r\n} from 'react-router-dom';\r\nimport { Layout, Menu, Upload, message } from 'antd';\r\n\r\nimport {\r\n  PieChartOutlined,\r\n  FileOutlined,\r\n  TeamOutlined,\r\n  TagOutlined,\r\n  BranchesOutlined,\r\n  GoldOutlined,\r\n  FilterOutlined,\r\n  TagsOutlined,\r\n  CarOutlined,\r\n  ShoppingCartOutlined,\r\n  MailOutlined,\r\n  SettingOutlined,\r\n  InboxOutlined,\r\n  SlidersOutlined,\r\n  DesktopOutlined,\r\n  RadarChartOutlined,\r\n  MessageOutlined,\r\n  UserOutlined,\r\n  FileAddOutlined,\r\n  FileSearchOutlined,\r\n  BgColorsOutlined,\r\n  BankOutlined,\r\n  FireOutlined,\r\n  MailTwoTone,\r\n  UserAddOutlined,\r\n  GlobalOutlined,\r\n  CalculatorOutlined,\r\n  UsergroupAddOutlined,\r\n  MoneyCollectOutlined,\r\n} from '@ant-design/icons';\r\n\r\n// import state\r\nimport { glboalOperations } from '../../state/ducks/globalState';\r\nimport { isAccess } from '../../utils';\r\nimport { connect } from 'react-redux';\r\n\r\nconst { Header, Content, Footer, Sider } = Layout;\r\nconst { SubMenu } = Menu;\r\n\r\nconst SiderComponent = ({ roles }: any) => {\r\n  const [collapsed, setcollapsed] = useState(false);\r\n  const onCollapse = (collapsed: any) => {\r\n    // console.log(collapsed);\r\n    setcollapsed(collapsed);\r\n  };\r\n\r\n  return (\r\n    <Sider\r\n      width={260}\r\n      style={{\r\n        boxShadow: '7px 0 60px rgba(0,0,0,.05)',\r\n        border: 'none',\r\n      }}\r\n      collapsible\r\n      collapsed={collapsed}\r\n      onCollapse={onCollapse}\r\n      theme='light'\r\n    >\r\n      <Menu selectable={true} mode='inline'>\r\n        {isAccess('analytics', roles) && (\r\n          <Menu.Item key='1' icon={<PieChartOutlined />}>\r\n            <Link to='/admin'>Dashboard</Link>\r\n          </Menu.Item>\r\n        )}\r\n\r\n        {isAccess('getCatalogue', roles) && (\r\n          <SubMenu\r\n            key='sub3'\r\n            icon={<GoldOutlined />}\r\n            title='Product'\r\n            // onTitleClick={() => props.history.push('/product')}\r\n          >\r\n            <Menu.Item icon={<RadarChartOutlined />} key='6'>\r\n              <Link to='/admin/product'>Products</Link>\r\n            </Menu.Item>\r\n\r\n            {/* <Menu.Item\r\n                      icon={<BankOutlined />}\r\n                      key='2222'>\r\n                      <Link to='/admin/bundle'>Bundle</Link>\r\n                  </Menu.Item> */}\r\n\r\n            <Menu.Item key='9' icon={<TagsOutlined />}>\r\n              <Link to='/admin/tag'>Tags</Link>\r\n            </Menu.Item>\r\n\r\n            <Menu.Item key='2' icon={<TagOutlined />}>\r\n              <Link to='/admin/category'>Categories</Link>\r\n            </Menu.Item>\r\n\r\n            <Menu.Item key='5' icon={<BranchesOutlined />}>\r\n              <Link to='/admin/brand'>Brand</Link>\r\n            </Menu.Item>\r\n          </SubMenu>\r\n        )}\r\n\r\n        {/* <SubMenu\r\n          key='sub333'\r\n          icon={<GoldOutlined />}\r\n          title='Recipes'\r\n          // onTitleClick={() => props.history.push('/product')}\r\n        >\r\n          <Menu.Item icon={<RadarChartOutlined />} key='655'>\r\n            <Link to='/admin/posts'>List Recipe</Link>\r\n          </Menu.Item>\r\n\r\n          <Menu.Item icon={<TagOutlined />} key='2222444'>\r\n            <Link to='/admin/posts/category'>Recipe Category</Link>\r\n          </Menu.Item>\r\n\r\n          <Menu.Item key='955' icon={<TagsOutlined />}>\r\n            <Link to='/admin/posts/tag'>Recipe Tags</Link>\r\n          </Menu.Item>\r\n        </SubMenu> */}\r\n\r\n        {/* <Menu.Item key='1012' icon={<FileExcelOutlined />}>\r\n                    <Link to='/admin/posts'>\r\n                        Recipies\r\n                    </Link>\r\n                </Menu.Item> */}\r\n\r\n        <Menu.Item key='1011' icon={<FireOutlined />}>\r\n          <Link to='/admin/coupon'>Coupon</Link>\r\n        </Menu.Item>\r\n\r\n        {isAccess('getDelivery', roles) && (\r\n          <Menu.Item key='10' icon={<CarOutlined />}>\r\n            <Link to='/admin/delivery'>Delivery</Link>\r\n          </Menu.Item>\r\n        )}\r\n\r\n        {/* {isAccess('accounts', roles) && (\r\n          <SubMenu key='sub33' icon={<CalculatorOutlined />} title='Accounting'>\r\n            <SubMenu key='sub3355' icon={<CalculatorOutlined />} title='Staff'>\r\n              <Menu.Item icon={<UsergroupAddOutlined />} key='66'>\r\n                <Link to='/admin/staff'>Staffs</Link>\r\n              </Menu.Item>\r\n              <Menu.Item icon={<MoneyCollectOutlined />} key='65257'>\r\n                <Link to='/admin/salaryReport'>Salary report</Link>\r\n              </Menu.Item>\r\n            </SubMenu>\r\n\r\n            <Menu.Item icon={<MoneyCollectOutlined />} key='67'>\r\n              <Link to='/admin/expense'>Expense</Link>\r\n            </Menu.Item>\r\n\r\n            <Menu.Item key='675454'>\r\n              <Link to='/admin/acccounting/overview'>Order report</Link>\r\n            </Menu.Item>\r\n          </SubMenu>\r\n        )} */}\r\n\r\n        {isAccess('getOrder', roles) && (\r\n          <SubMenu key='sub4' icon={<ShoppingCartOutlined />} title='Orders'>\r\n            <Menu.Item key='11'>\r\n              <Link to='/admin/order'>List Orders</Link>\r\n            </Menu.Item>\r\n            <Menu.Item key='11222'>\r\n              <Link to='/admin/order/overview'>Order Analytics</Link>\r\n            </Menu.Item>\r\n            <Menu.Item key='12'>\r\n              <Link to='/admin/order/new'>Add Order</Link>\r\n            </Menu.Item>\r\n            {/* <Menu.Item key='12'>\r\n                          <Link to='/admin/order/config'>\r\n                              Configure order status\r\n                          </Link>\r\n                      </Menu.Item> */}\r\n          </SubMenu>\r\n        )}\r\n\r\n        {/* {isAccess('getDealer', roles) && (\r\n          <SubMenu\r\n            key='sub5553'\r\n            icon={<TeamOutlined />}\r\n            title='Dealer'\r\n            // onTitleClick={() => props.history.push('/product')}\r\n          >\r\n            <Menu.Item icon={<TeamOutlined />} key='666655'>\r\n              <Link to='/admin/dealer'>List dealer</Link>\r\n            </Menu.Item>\r\n\r\n            <Menu.Item icon={<GlobalOutlined />} key='22534522444'>\r\n              <Link to='/admin/dealer/area'>Dealer Areas</Link>\r\n            </Menu.Item>\r\n          </SubMenu>\r\n        )} */}\r\n\r\n        <Menu.Item key='13' icon={<UserOutlined />}>\r\n          <Link to='/admin/customer'>Customer</Link>\r\n        </Menu.Item>\r\n        <Menu.Item key='1888' icon={<MailOutlined />}>\r\n          <Link to='/admin/email'>Email</Link>\r\n        </Menu.Item>\r\n        <Menu.Item key='199' icon={<MessageOutlined />}>\r\n          <Link to='/admin/sms'>SMS</Link>\r\n        </Menu.Item>\r\n\r\n        {isAccess('getDealer', roles) && (\r\n          <SubMenu key='sub6' icon={<FileOutlined />} title='Pages'>\r\n            <Menu.Item key='18' icon={<FileSearchOutlined />}>\r\n              <Link to='/admin/page'> List Pages</Link>\r\n            </Menu.Item>\r\n            <Menu.Item icon={<FileAddOutlined />} key='17'>\r\n              <Link to='/admin/page/new'> Add new Page</Link>\r\n            </Menu.Item>\r\n          </SubMenu>\r\n        )}\r\n\r\n        <SubMenu key='sub7' icon={<SettingOutlined />} title='Settings'>\r\n          <Menu.Item icon={<UserOutlined />} key='19'>\r\n            <Link to='/admin/settings/siteInfo'>Site information</Link>\r\n          </Menu.Item>\r\n\r\n          <Menu.Item icon={<UserAddOutlined />} key='19999'>\r\n            <Link to='/admin/settings/admins'>Admins</Link>\r\n          </Menu.Item>\r\n\r\n          <Menu.Item key='23' icon={<SlidersOutlined />}>\r\n            <Link to='/admin/settings/components'>Components</Link>\r\n          </Menu.Item>\r\n\r\n          <Menu.Item icon={<BgColorsOutlined />} key='20'>\r\n            <Link to='/admin/settings/themes'>Themes</Link>\r\n          </Menu.Item>\r\n\r\n          {/* <Menu.Item key='21'>\r\n\t\t\t\t\t\t<Link to='/settings/image'>Image</Link>\r\n\t\t\t\t\t</Menu.Item> */}\r\n          {/* <Menu.Item key='22'>\r\n                        <Link to='/admin/settings/invoice'>Invoice</Link>\r\n                    </Menu.Item> */}\r\n        </SubMenu>\r\n      </Menu>\r\n    </Sider>\r\n  );\r\n};\r\n\r\nconst mapDispathToProps = {\r\n  saveRoles: glboalOperations.saveRoles,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  roles: state.globalState,\r\n});\r\n\r\n// @ts-ignore\r\nexport default connect(mapStateToProps, mapDispathToProps)(SiderComponent);\r\n\r\n/* \r\ngit checkout commit3 && git checkout -b newBranch && git cherry-pick 20ead887\r\naf2f73c541465d9067c3c6c70c398ac2\r\n*/\r\n","import Sider from \"./Sider\";\r\nexport default Sider; ","import Empty from \"./Empty\";\r\nexport default Empty; ","import React from 'react'\r\nimport { Empty } from 'antd';\r\n\r\n\r\ninterface Props {\r\n    title?: string;\r\n    height?: number\r\n}\r\n\r\nconst EmptyComponent = ({\r\n    title = 'No Data found',\r\n    height = 300\r\n}: Props) => {\r\n    return (\r\n        <div style={{\r\n            height: height,\r\n            display: 'flex',\r\n            justifyContent: 'center',\r\n            alignItems: 'center'\r\n        }}>\r\n            <Empty description={title} image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EmptyComponent\r\n","// @ts-nocheck\r\n\r\nimport React, { useEffect, useState } from 'react';\r\n\r\n// import hooks\r\nimport { useHandleFetch } from '../../hooks';\r\n\r\n// import components\r\n// import { openSuccessNotification, openErrorNotification } from \"../../components/Notification\";\r\nimport Empty from '../../components/Empty';\r\n\r\n// import libraries\r\nimport { useHistory } from 'react-router';\r\nimport {\r\n  LogoutOutlined,\r\n  BellOutlined,\r\n  OrderedListOutlined,\r\n  TwitterSquareFilled,\r\n  ShoppingCartOutlined,\r\n  CheckCircleOutlined,\r\n  UserOutlined,\r\n} from '@ant-design/icons';\r\nimport Moment from 'react-moment';\r\nimport { Layout, Badge, Dropdown, Menu, Spin, notification } from 'antd';\r\nimport moment from 'moment';\r\nconst { Header } = Layout;\r\n\r\n// import styles\r\n\r\nconst openSuccessNotification = (msg?: any) => {\r\n  notification.success({\r\n    message: msg || 'Product Deleted',\r\n    description: '',\r\n    icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n  });\r\n};\r\n\r\ninterface Props {}\r\n\r\nconst HeaderComponent = (props: Props) => {\r\n  const history = useHistory();\r\n\r\n  const [getAllNotificationState, handleGetAllNOticationFetch] = useHandleFetch(\r\n    {},\r\n    'getAllNotification'\r\n  );\r\n  const [\r\n    getMarkNotificationAsReadState,\r\n    handleMarkNotificationAsReadFetch,\r\n  ] = useHandleFetch({}, 'markNotificationAsRead');\r\n  const [\r\n    getMarkAllNotificationAsReadState,\r\n    handleMarkAllNotificationAsReadFetch,\r\n  ] = useHandleFetch({}, 'markAllNotificationAsRead');\r\n\r\n  const [notificationList, setnotificationList] = useState({});\r\n\r\n  const handleMenuClick = (e) => {\r\n    if (e.key === '3') {\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const getAllNotification = async () => {\r\n      const res = await handleGetAllNOticationFetch({\r\n        urlOptions: {\r\n          params: {\r\n            sortItem: 'added',\r\n            sortOrderValue: '-1',\r\n            limitNumber: 100000,\r\n          },\r\n        },\r\n      });\r\n\r\n      // @ts-ignore\r\n      if (res) {\r\n        // @ts-ignore\r\n        setnotificationList(res);\r\n      }\r\n    };\r\n\r\n    getAllNotification();\r\n  }, []);\r\n\r\n  const handleNotificationAsRead = async (id) => {\r\n    await handleMarkNotificationAsReadFetch({\r\n      body: {\r\n        id: [id],\r\n      },\r\n    });\r\n  };\r\n\r\n  const handleAllNotificationAsRead = async () => {\r\n    const res = await handleMarkAllNotificationAsReadFetch({});\r\n    // @ts-ignore\r\n    if (res && res.status === 'ok') {\r\n      openSuccessNotification('Notification cleared!');\r\n      setnotificationList([]);\r\n    }\r\n  };\r\n\r\n  console.log('getAllNotificationState', getAllNotificationState);\r\n\r\n  const typeIcon = {\r\n    customer: <UserOutlined />,\r\n    order: <ShoppingCartOutlined />,\r\n  };\r\n\r\n  const menu = () => {\r\n    if (getAllNotificationState.isLoading)\r\n      return (\r\n        <div\r\n          style={{\r\n            height: '100%',\r\n            display: 'flex',\r\n            justifyContent: 'center',\r\n            alignItems: 'center',\r\n            backgroundColor: '#fff',\r\n            padding: '0 50px',\r\n          }}\r\n        >\r\n          <Spin />\r\n        </div>\r\n      );\r\n\r\n    if (\r\n      getAllNotificationState.done &&\r\n      notificationList &&\r\n      !notificationList[0]\r\n    ) {\r\n      return (\r\n        <div\r\n          className='notificationListItemContainer'\r\n          style={{\r\n            height: '100%',\r\n            display: 'flex',\r\n            justifyContent: 'center',\r\n            alignItems: 'center',\r\n            backgroundColor: '#fff',\r\n            padding: '0 50px',\r\n          }}\r\n        >\r\n          <Empty title='No Notification found' />\r\n        </div>\r\n      );\r\n    }\r\n    return (\r\n      <div style={{}} className='notificationListItemContainer'>\r\n        {getAllNotificationState.done && notificationList[0] && (\r\n          <div style={{}}>\r\n            <div\r\n              style={{\r\n                width: '100%',\r\n                display: 'flex',\r\n                justifyContent: 'space-around',\r\n              }}\r\n            >\r\n              <a\r\n                onClick={() => handleAllNotificationAsRead()}\r\n                style={{\r\n                  textAlign: 'center',\r\n                  backgroundColor: '#f7f7f7',\r\n                  padding: '10px',\r\n                  width: '50%',\r\n                  fontSize: '13px',\r\n                }}\r\n                href='##'\r\n              >\r\n                CLEAR ALL\r\n              </a>\r\n              <a\r\n                onClick={() => history.push('/admin/notification')}\r\n                style={{\r\n                  textAlign: 'center',\r\n                  backgroundColor: '#eee',\r\n                  padding: '10px',\r\n                  width: '50%',\r\n                  fontSize: '13px',\r\n                }}\r\n                href='##'\r\n              >\r\n                SEE ALL\r\n              </a>\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        {getAllNotificationState.done &&\r\n          notificationList[0] &&\r\n          notificationList.map((item, index) => {\r\n            console.log('notificationItem', item);\r\n            return (\r\n              <div\r\n                onClick={() => {\r\n                  handleNotificationAsRead(item._id);\r\n                  history.push(`/admin/${item.type}/${item._id}`);\r\n                }}\r\n                className={\r\n                  !item.read\r\n                    ? 'notificationListItemContainer__item notificationListItemContainer__item-active'\r\n                    : 'notificationListItemContainer__item'\r\n                }\r\n              >\r\n                <span className='notificationListItemContainer__item-icon'>\r\n                  {typeIcon[item['type']]}\r\n                </span>\r\n                <div className='notificationListItemContainer__item-info'>\r\n                  <h3>{item.heading}</h3>\r\n                  <h4>{item.text}</h4>\r\n                  <h2>\r\n                    {item.added &&\r\n                      moment(item.added).format('MMMM Do YYYY, h:mm a')}\r\n                  </h2>\r\n                </div>\r\n              </div>\r\n            );\r\n          })}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  console.log('notificationList', notificationList);\r\n\r\n  return (\r\n    <Header\r\n      style={{\r\n        background: '#fff',\r\n        height: '60px',\r\n        display: 'flex',\r\n        justifyContent: 'space-between',\r\n        boxShadow:\r\n          '0 0.46875rem 2.1875rem rgba(8,10,37,.01), 0 0.9375rem 1.40625rem rgba(8,10,37,.01), 0 0.25rem 0.53125rem rgba(8,10,37,.02), 0 0.125rem 0.1875rem rgba(8,10,37,.01)',\r\n        zIndex: 10,\r\n        transition: ' all .2s',\r\n        alignItems: 'center',\r\n        alignContent: 'center',\r\n      }}\r\n    >\r\n      <h2\r\n        onClick={() => history.push('/admin')}\r\n        style={{\r\n          color: '#0072EA',\r\n          marginTop: '10px',\r\n          marginLeft: '-20px',\r\n          cursor: 'pointer',\r\n        }}\r\n      >\r\n        Admin\r\n      </h2>\r\n\r\n      <div\r\n        style={{\r\n          marginRight: '-28px',\r\n        }}\r\n      >\r\n        <Dropdown\r\n          placement='bottomLeft'\r\n          overlay={menu}\r\n          // visible={this.state.visible}\r\n        >\r\n          <a\r\n            style={{\r\n              marginRight: '10px',\r\n            }}\r\n            href='###'\r\n            className='notificationIconContainer'\r\n          >\r\n            <Badge\r\n              overflowCount={100}\r\n              // @ts-ignore\r\n              showZero={TwitterSquareFilled}\r\n              count={\r\n                getAllNotificationState.done && !notificationList\r\n                  ? 0\r\n                  : notificationList && notificationList.length\r\n                  ? notificationList.length\r\n                  : 0\r\n              }\r\n            >\r\n              <span\r\n                style={{\r\n                  marginLeft: '10px',\r\n                  fontWeight: 600,\r\n                  borderRadius: '25px',\r\n                  color: '#1890ff',\r\n                  padding: '2px 20px',\r\n                  cursor: 'pointer',\r\n                  marginRight: '-5px',\r\n                }}\r\n              >\r\n                <BellOutlined />\r\n              </span>\r\n            </Badge>\r\n          </a>\r\n        </Dropdown>\r\n\r\n        <a href='/admin/auth/logout'>\r\n          <span\r\n            style={{\r\n              marginLeft: '10px',\r\n              fontWeight: 600,\r\n              borderRadius: '25px',\r\n              color: '#1890ff',\r\n              padding: '2px 20px',\r\n              cursor: 'pointer',\r\n            }}\r\n          >\r\n            <LogoutOutlined />\r\n            <span\r\n              style={{\r\n                marginLeft: '10px',\r\n              }}\r\n            >\r\n              logout\r\n            </span>\r\n          </span>\r\n        </a>\r\n      </div>\r\n    </Header>\r\n  );\r\n};\r\n\r\nexport default HeaderComponent;\r\n","import Header from \"./Header\";\r\nexport default Header; ","import React, { useState, useEffect } from 'react'\r\n\r\n\r\n\r\n// import libraries \r\nimport {\r\n    ResponsiveContainer,\r\n    AreaChart,\r\n    CartesianGrid,\r\n    XAxis,\r\n    YAxis,\r\n    Tooltip,\r\n    Legend,\r\n    Area,\r\n    Line\r\n} from \"recharts\";\r\n\r\nimport {\r\n    DeleteOutlined,\r\n    FileAddOutlined,\r\n    CheckCircleOutlined,\r\n    FileImageFilled,\r\n    FileImageOutlined,\r\n    FileImageTwoTone,\r\n    PlusOutlined,\r\n    PlusCircleOutlined,\r\n    CloseOutlined,\r\n    CheckOutlined,\r\n    InfoCircleOutlined,\r\n    UserOutlined,\r\n    CalendarOutlined,\r\n    GoldOutlined,\r\n    ShoppingCartOutlined,\r\n    TagOutlined\r\n} from '@ant-design/icons';\r\n\r\n\r\nimport { useHandleFetch } from \"../../hooks\";\r\n\r\n\r\n\r\nimport { Select, Button, Spin, Empty,DatePicker } from 'antd';\r\nimport Moment from \"react-moment\";\r\nimport moment from 'moment'; \r\n\r\nconst { Option } = Select;\r\n\r\nconst { RangePicker } = DatePicker;\r\n\r\n\r\n\r\n\r\n\r\nexport const RAINFALL = {\r\n    \"2018\": [\r\n        {\r\n            month: 1,\r\n            rainfall: 65.4\r\n        },\r\n        {\r\n            month: 2,\r\n            rainfall: 1.6\r\n        },\r\n        {\r\n            month: 3,\r\n            rainfall: 23\r\n        },\r\n        {\r\n            month: 4,\r\n            rainfall: 16.4\r\n        },\r\n        {\r\n            month: 5,\r\n            rainfall: 65.6\r\n        },\r\n        {\r\n            month: 6,\r\n            rainfall: 43.2\r\n        },\r\n        {\r\n            month: 7,\r\n            rainfall: 19.4\r\n        },\r\n        {\r\n            month: 8,\r\n            rainfall: 42.8\r\n        },\r\n        {\r\n            month: 9,\r\n            rainfall: 16.4\r\n        },\r\n        {\r\n            month: 11,\r\n            rainfall: 97.8\r\n        },\r\n        {\r\n            month: 12,\r\n            rainfall: 104.8\r\n        }\r\n    ],\r\n    \"2019\": [\r\n        {\r\n            month: 1,\r\n            rainfall: 11.2\r\n        },\r\n        {\r\n            month: 2,\r\n            rainfall: 18.6\r\n        },\r\n        {\r\n            month: 3,\r\n            rainfall: 12\r\n        },\r\n        {\r\n            month: 4,\r\n            rainfall: 7.2\r\n        },\r\n        {\r\n            month: 5,\r\n            rainfall: 53.4\r\n        },\r\n        {\r\n            month: 6,\r\n            rainfall: 49.8\r\n        },\r\n        {\r\n            month: 7,\r\n            rainfall: 45.2\r\n        },\r\n        {\r\n            month: 8,\r\n            rainfall: 51.4\r\n        },\r\n        {\r\n            month: 9,\r\n            rainfall: 41\r\n        },\r\n        {\r\n            month: 10,\r\n            rainfall: 24\r\n        },\r\n        {\r\n            month: 11,\r\n            rainfall: 54.4\r\n        },\r\n        {\r\n            month: 12,\r\n            rainfall: 6.2\r\n        }\r\n    ]\r\n};\r\n\r\n\r\nconst MONTHS = [\r\n    \"Jan\",\r\n    \"Feb\",\r\n    \"Mar\",\r\n    \"Apr\",\r\n    \"May\",\r\n    \"Jun\",\r\n    \"Jul\",\r\n    \"Aug\",\r\n    \"Sep\",\r\n    \"Oct\",\r\n    \"Nov\",\r\n    \"Dec\"\r\n];\r\n\r\n\r\n\r\n\r\nexport const TooltipContainerStyles = {\r\n    border: 0,\r\n    borderRadius: \"8px\",\r\n    fontSize: 14,\r\n    boxShadow: \"2px 2px 5px 3px rgba(0,0,0,0.15)\"\r\n};\r\n\r\n\r\n\r\n\r\ninterface Props {\r\n\r\n}\r\n\r\nconst localOptions = [\r\n    {\r\n        value: 'category',\r\n        name: 'Category'\r\n    }, {\r\n        value: 'product',\r\n        name: 'Product'\r\n    }\r\n\r\n]\r\n\r\nconst ApiVisits = (props: Props) => {\r\n    const [selectedApiValue, setSelectedApiValue] = useState('date');\r\n    const [startDate,setStartDate] = useState('');\r\n    const [endDate,setEndDate] = useState('');\r\n\r\n\r\n\r\n    \r\n\r\n    const [demoGraphicVisitsState, handleDemoGraphicVisitsStateFetch] = useHandleFetch({}, 'getAnalyticsDemographicVisits');\r\n\r\n\r\n    const [userData, setuserData] = useState([]);\r\n\r\n    useEffect(()=>{\r\n        const getDemoGraphicVisitsValue = async () => {\r\n            const uservisitsDataRes =  await handleDemoGraphicVisitsStateFetch({\r\n                urlOptions: {\r\n                    params: {\r\n                        metricType: selectedApiValue,\r\n                        startDateValue: startDate,\r\n                        endDateValue: endDate\r\n                    }\r\n                }\r\n            }); \r\n\r\n           console.log('uservisitsData',uservisitsDataRes); \r\n\r\n           // @ts-ignore\r\n           if(uservisitsDataRes){\r\n            // @ts-ignore\r\n            setuserData(uservisitsDataRes)\r\n           }\r\n\r\n\r\n           };\r\n\r\n\r\n           getDemoGraphicVisitsValue(); \r\n\r\n    },[selectedApiValue,startDate,endDate])\r\n\r\n\r\n    console.log('demoGraphicVisitsState',demoGraphicVisitsState);\r\n\r\n\r\n\r\n    \r\n    const options = [\r\n        {\r\n            value: 'date',\r\n            name: 'Date'\r\n        },\r\n        {\r\n            value: 'hour',\r\n            name: 'Hour'\r\n        },\r\n        {\r\n            value: 'dayOfWeek',\r\n            name: 'Day of week'\r\n        },\r\n        {\r\n            value: 'dayOfMonth',\r\n            name: 'Day of month'\r\n        },\r\n         {\r\n            value: 'month',\r\n            name: 'Month'\r\n        },\r\n        {\r\n            value: 'year',\r\n            name: 'Year'\r\n        }\r\n    ]\r\n\r\n    \r\n\r\n    const date = new Date();\r\n    const thisMonth = MONTHS[date.getMonth()]\r\n    \r\n\r\n\r\n    const getFormateDateValue = (order) => {\r\n\r\n        if(selectedApiValue === 'day'){\r\n            return order ? moment(order).format('MMMM Do YYYY, h:mm:ss a') : order;\r\n        }\r\n        else if (selectedApiValue === 'date'){\r\n            return order ? moment(order).format('MMMM Do YYYY') : order;\r\n        }\r\n        else if (selectedApiValue === 'month'){\r\n            return order ? MONTHS[order - 1] : order; ;\r\n        }\r\n        return order; \r\n    }\r\n    \r\n\r\n    const onChange = (value) => {\r\n        setSelectedApiValue(value);\r\n    }\r\n\r\n\r\n    const handleStartEndDateRangeDate = (e) => {\r\n       if(e && e[0]){\r\n        const startDate = new Date(moment(e[0]).format()); \r\n        const endDate = new Date(moment(e[1]).format()); \r\n        // @ts-ignore\r\n        setStartDate(startDate);\r\n        // @ts-ignore\r\n        setEndDate(endDate);\r\n       }\r\n      \r\n    }; \r\n\r\n\r\n\r\n    return (\r\n        <div className='overviewContainer__userVisits'>\r\n            <div className='overviewContainer__body-apiVisits-header'>\r\n                <div className='overviewContainer__body-apiVisits-header-info'>\r\n                    <h2>\r\n                        Users \r\n                    </h2>\r\n\r\n                        <h3>\r\n                          All users that visited\r\n                        </h3>\r\n                </div>\r\n\r\n\r\n                <div className='overviewContainer__body-apiVisits-header-controller'>\r\n                <Select\r\n                    bordered={false}\r\n                    showSearch\r\n                    style={{ width: '130px', borderRadius: '6px', color: '#1890ff' }}\r\n                    placeholder='Select an api'\r\n                    optionFilterProp='children'\r\n                    onChange={onChange}\r\n                    defaultValue={selectedApiValue}\r\n                    filterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n                >\r\n                    {\r\n                        options.map((option) => {\r\n                            return <Option value={option.value}>{option.name}</Option>;\r\n                        })}\r\n                </Select>\r\n            </div>\r\n            </div>\r\n\r\n            <div className='overviewContainer__body-body'>\r\n            {demoGraphicVisitsState.isLoading && (\r\n            <>\r\n            <div style={{\r\n                margin:'100px 0',\r\n                display:'flex',\r\n                justifyContent:'center',\r\n                alignItems:\"center\"\r\n            }}>\r\n              <Spin size='large' />\r\n            </div>\r\n\r\n            </>\r\n        )}\r\n                {demoGraphicVisitsState.done && !(demoGraphicVisitsState.data.length > 0) && (\r\n                    <div style={{\r\n                        marginTop: '00px'\r\n                    }}>\r\n                        <Empty description={`No User visited`} image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n                    </div>\r\n                )}\r\n\r\n\r\n               {demoGraphicVisitsState.done && userData && userData.length > 0 && (\r\n                    <ResponsiveContainer width=\"100%\" height={300}>\r\n                    <AreaChart data={userData} fontSize={12}>\r\n                        <defs>\r\n                            <linearGradient id=\"rainGradient\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\r\n                                <stop offset=\"0%\" stopColor=\"#1890ff\" />\r\n                                <stop offset=\"100%\" stopColor=\"#3066BE22\" />\r\n                            </linearGradient>\r\n                        </defs>\r\n                        <CartesianGrid\r\n                            vertical={false}\r\n                            strokeDasharray=\"3 3\"\r\n                            stroke=\"#d6d9da\"\r\n                        />\r\n                        <XAxis dataKey={selectedApiValue} \r\n                        tickFormatter={getFormateDateValue}\r\n                         />\r\n                        <YAxis\r\n                            orientation=\"left\"\r\n                            width={20}\r\n                            axisLine={false}\r\n                            tickLine={false}\r\n                        />\r\n                        <Tooltip\r\n                            cursor={false}\r\n                            contentStyle={TooltipContainerStyles}\r\n                            formatter={(value, name) => [`${value}`, `${name}`]}\r\n                        />\r\n                        <Area\r\n                            dataKey=\"count\"\r\n                            name=\"Count\"\r\n                            type=\"basis\"\r\n                            unit={selectedApiValue === 'month' ? thisMonth : ''}\r\n                            fill=\"url(#rainGradient)\"\r\n                        />\r\n                    </AreaChart>\r\n                </ResponsiveContainer>\r\n               )}\r\n\r\n\r\n            </div>\r\n            <div className=\"overviewContainer__body-footer\">\r\n                  <RangePicker \r\n                  showTime={true}\r\n                  onChange={handleStartEndDateRangeDate}\r\n                  bordered={false}\r\n                  picker=\"date\" />\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ApiVisits\r\n","import React, { useState, useEffect } from 'react';\r\n\r\n// import libraries\r\nimport {\r\n  ResponsiveContainer,\r\n  AreaChart,\r\n  CartesianGrid,\r\n  XAxis,\r\n  YAxis,\r\n  Tooltip,\r\n  Area,\r\n} from 'recharts';\r\n\r\nimport {\r\n  DeleteOutlined,\r\n  FileAddOutlined,\r\n  CheckCircleOutlined,\r\n  FileImageFilled,\r\n  FileImageOutlined,\r\n  FileImageTwoTone,\r\n  PlusOutlined,\r\n  PlusCircleOutlined,\r\n  CloseOutlined,\r\n  CheckOutlined,\r\n  InfoCircleOutlined,\r\n  UserOutlined,\r\n  CalendarOutlined,\r\n  GoldOutlined,\r\n  ShoppingCartOutlined,\r\n  TagOutlined,\r\n} from '@ant-design/icons';\r\n\r\nimport { useHandleFetch } from '../../hooks';\r\n\r\nimport { Select, Button, Spin, Empty, DatePicker } from 'antd';\r\nimport moment from 'moment';\r\n\r\nconst { Option } = Select;\r\n\r\nconst { RangePicker } = DatePicker;\r\n\r\nexport const RAINFALL = {\r\n  '2018': [\r\n    {\r\n      month: 1,\r\n      rainfall: 65.4,\r\n    },\r\n    {\r\n      month: 2,\r\n      rainfall: 1.6,\r\n    },\r\n    {\r\n      month: 3,\r\n      rainfall: 23,\r\n    },\r\n    {\r\n      month: 4,\r\n      rainfall: 16.4,\r\n    },\r\n    {\r\n      month: 5,\r\n      rainfall: 65.6,\r\n    },\r\n    {\r\n      month: 6,\r\n      rainfall: 43.2,\r\n    },\r\n    {\r\n      month: 7,\r\n      rainfall: 19.4,\r\n    },\r\n    {\r\n      month: 8,\r\n      rainfall: 42.8,\r\n    },\r\n    {\r\n      month: 9,\r\n      rainfall: 16.4,\r\n    },\r\n    {\r\n      month: 11,\r\n      rainfall: 97.8,\r\n    },\r\n    {\r\n      month: 12,\r\n      rainfall: 104.8,\r\n    },\r\n  ],\r\n  '2019': [\r\n    {\r\n      month: 1,\r\n      rainfall: 11.2,\r\n    },\r\n    {\r\n      month: 2,\r\n      rainfall: 18.6,\r\n    },\r\n    {\r\n      month: 3,\r\n      rainfall: 12,\r\n    },\r\n    {\r\n      month: 4,\r\n      rainfall: 7.2,\r\n    },\r\n    {\r\n      month: 5,\r\n      rainfall: 53.4,\r\n    },\r\n    {\r\n      month: 6,\r\n      rainfall: 49.8,\r\n    },\r\n    {\r\n      month: 7,\r\n      rainfall: 45.2,\r\n    },\r\n    {\r\n      month: 8,\r\n      rainfall: 51.4,\r\n    },\r\n    {\r\n      month: 9,\r\n      rainfall: 41,\r\n    },\r\n    {\r\n      month: 10,\r\n      rainfall: 24,\r\n    },\r\n    {\r\n      month: 11,\r\n      rainfall: 54.4,\r\n    },\r\n    {\r\n      month: 12,\r\n      rainfall: 6.2,\r\n    },\r\n  ],\r\n};\r\n\r\nconst MONTHS = [\r\n  'Jan',\r\n  'Feb',\r\n  'Mar',\r\n  'Apr',\r\n  'May',\r\n  'Jun',\r\n  'Jul',\r\n  'Aug',\r\n  'Sep',\r\n  'Oct',\r\n  'Nov',\r\n  'Dec',\r\n];\r\n\r\nexport const getMonthNameByOrder = (order: number): string | undefined =>\r\n  MONTHS[order - 1];\r\n\r\nexport const TooltipContainerStyles = {\r\n  border: 0,\r\n  borderRadius: '8px',\r\n  fontSize: 14,\r\n  boxShadow: '2px 2px 5px 3px rgba(0,0,0,0.15)',\r\n};\r\n\r\ninterface Props {}\r\n\r\nconst localOptions = [\r\n  {\r\n    value: 'category',\r\n    name: 'Category',\r\n  },\r\n  {\r\n    value: 'product',\r\n    name: 'Product',\r\n  },\r\n];\r\n\r\nconst ApiVisits = (props: Props) => {\r\n  const [selectedApiValue, setSelectedApiValue] = useState('date');\r\n  const [\r\n    orderAnalyticsVisitsState,\r\n    handleOrderAnalyticsVisitsStateFetch,\r\n  ] = useHandleFetch({}, 'getAnalyticsOrders');\r\n  const [orderData, setorderData] = useState([]);\r\n  const [startDate, setStartDate] = useState('');\r\n  const [endDate, setEndDate] = useState('');\r\n\r\n  useEffect(() => {\r\n    const getAnalyticsOrders = async () => {\r\n      const ordersDataRes = await handleOrderAnalyticsVisitsStateFetch({\r\n        urlOptions: {\r\n          params: {\r\n            metricType: selectedApiValue,\r\n            startDateValue: startDate,\r\n            endDateValue: endDate,\r\n          },\r\n        },\r\n      });\r\n\r\n      console.log('ordersDataRes', ordersDataRes);\r\n\r\n      // @ts-ignore\r\n      if (ordersDataRes) {\r\n        // @ts-ignore\r\n        setorderData(ordersDataRes);\r\n      }\r\n    };\r\n    getAnalyticsOrders();\r\n  }, [selectedApiValue, startDate, endDate]);\r\n\r\n  console.log('orderAnalyticsVisitsState', orderAnalyticsVisitsState);\r\n\r\n  const onChange = (value) => {\r\n    setSelectedApiValue(value);\r\n  };\r\n\r\n  const options = [\r\n    {\r\n      value: 'date',\r\n      name: 'Date',\r\n    },\r\n    {\r\n      value: 'hour',\r\n      name: 'Hour',\r\n    },\r\n    {\r\n      value: 'dayOfWeek',\r\n      name: 'Day of week',\r\n    },\r\n    {\r\n      value: 'dayOfMonth',\r\n      name: 'Day of month',\r\n    },\r\n    {\r\n      value: 'month',\r\n      name: 'Month',\r\n    },\r\n    {\r\n      value: 'year',\r\n      name: 'Year',\r\n    },\r\n  ];\r\n\r\n  const date = new Date();\r\n  const thisMonth = MONTHS[date.getMonth()];\r\n\r\n  const getFormateDateValue = (order) => {\r\n    if (selectedApiValue === 'day') {\r\n      return order ? moment(order).format('MMMM Do YYYY, h:mm:ss a') : order;\r\n    } else if (selectedApiValue === 'date') {\r\n      return order ? moment(order).format('MMMM Do YYYY') : order;\r\n    } else if (selectedApiValue === 'month') {\r\n      return MONTHS[order - 1];\r\n    }\r\n    return order;\r\n  };\r\n\r\n  const getDatePickerValue = () => {\r\n    if (selectedApiValue === 'hour') {\r\n      return 'time';\r\n    }\r\n    if (selectedApiValue === 'month') {\r\n      return 'month';\r\n    } else if (selectedApiValue === 'dayOfWeek') {\r\n      return 'week';\r\n    } else if (selectedApiValue === 'year') {\r\n      return 'year';\r\n    }\r\n\r\n    return 'date';\r\n  };\r\n\r\n  const handleStartEndDateRangeDate = (e) => {\r\n    console.log('dateOrder', moment(e[0]).format());\r\n    console.log('dateOff', moment(e[1]).format());\r\n    const startDate = new Date(moment(e[0]).format());\r\n    const endDate = new Date(moment(e[1]).format());\r\n    // @ts-ignore\r\n    setStartDate(startDate);\r\n    // @ts-ignore\r\n    setEndDate(endDate);\r\n  };\r\n\r\n  return (\r\n    <div className='overviewContainer__userVisits'>\r\n      <div className='overviewContainer__body-apiVisits-header'>\r\n        <div className='overviewContainer__body-apiVisits-header-info'>\r\n          <h2>Orders</h2>\r\n\r\n          <h3>All orders that visited</h3>\r\n        </div>\r\n\r\n        <div className='overviewContainer__body-apiVisits-header-controller'>\r\n          <Select\r\n            bordered={false}\r\n            showSearch\r\n            style={{ width: '130px', borderRadius: '6px', color: '#1890ff' }}\r\n            placeholder='Select an api'\r\n            optionFilterProp='children'\r\n            onChange={onChange}\r\n            defaultValue={selectedApiValue}\r\n            filterOption={(input, option) =>\r\n              option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\r\n            }\r\n          >\r\n            {options.map((option) => {\r\n              return <Option value={option.value}>{option.name}</Option>;\r\n            })}\r\n          </Select>\r\n        </div>\r\n      </div>\r\n\r\n      <div className='overviewContainer__body-body'>\r\n        {orderAnalyticsVisitsState.isLoading && (\r\n          <>\r\n            <div\r\n              style={{\r\n                margin: '100px 0',\r\n                display: 'flex',\r\n                justifyContent: 'center',\r\n                alignItems: 'center',\r\n              }}\r\n            >\r\n              <Spin size='large' />\r\n            </div>\r\n          </>\r\n        )}\r\n        {orderAnalyticsVisitsState.done &&\r\n          !(orderAnalyticsVisitsState.data.length > 0) && (\r\n            <div\r\n              style={{\r\n                marginTop: '00px',\r\n              }}\r\n            >\r\n              <Empty\r\n                description={`No Orders Created`}\r\n                image={Empty.PRESENTED_IMAGE_SIMPLE}\r\n              />\r\n            </div>\r\n          )}\r\n\r\n        {orderAnalyticsVisitsState.done && orderData && orderData.length > 0 && (\r\n          <ResponsiveContainer width='100%' height={300}>\r\n            <AreaChart data={orderData} fontSize={12}>\r\n              <defs>\r\n                <linearGradient id='rainGradient' x1='0' y1='0' x2='0' y2='1'>\r\n                  <stop offset='0%' stopColor='#1890ff' />\r\n                  <stop offset='100%' stopColor='#3066BE22' />\r\n                </linearGradient>\r\n              </defs>\r\n              <CartesianGrid\r\n                vertical={false}\r\n                strokeDasharray='3 3'\r\n                stroke='#d6d9da'\r\n              />\r\n              <XAxis\r\n                dataKey={selectedApiValue}\r\n                tickFormatter={getFormateDateValue}\r\n              />\r\n              <YAxis\r\n                // unit=\"ml\"\r\n                orientation='left'\r\n                width={20}\r\n                axisLine={false}\r\n                tickLine={false}\r\n              />\r\n              <Tooltip\r\n                cursor={false}\r\n                contentStyle={TooltipContainerStyles}\r\n                formatter={(value, name) => [`${value}`, `${name}`]}\r\n              />\r\n              <Area\r\n                dataKey='count'\r\n                name='Count'\r\n                unit={selectedApiValue === 'month' ? thisMonth : ''}\r\n                type='basis'\r\n                fill='url(#rainGradient)'\r\n              />\r\n            </AreaChart>\r\n          </ResponsiveContainer>\r\n        )}\r\n      </div>\r\n      <div className='overviewContainer__body-footer'>\r\n        <RangePicker\r\n          showTime={true}\r\n          onChange={handleStartEndDateRangeDate}\r\n          picker={'date'}\r\n          bordered={false}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ApiVisits;\r\n","import React, { useState, useEffect } from 'react'\r\n\r\n\r\n\r\n\r\n// import lib \r\n\r\nimport { ResponsiveContainer, PieChart, Tooltip, Pie, Cell } from \"recharts\";\r\n\r\n\r\n// import hooks\r\nimport { useHandleFetch } from \"../../hooks\";\r\n\r\nimport {\r\n    DeleteOutlined,\r\n    FileAddOutlined,\r\n    CheckCircleOutlined,\r\n    FileImageFilled,\r\n    FileImageOutlined,\r\n    FileImageTwoTone,\r\n    PlusOutlined,\r\n    PlusCircleOutlined,\r\n    CloseOutlined,\r\n    CheckOutlined,\r\n    InfoCircleOutlined,\r\n    UserOutlined,\r\n    CalendarOutlined,\r\n    GoldOutlined,\r\n    ShoppingCartOutlined,\r\n    TagOutlined\r\n} from '@ant-design/icons';\r\n\r\nimport { Select, Button, Spin, Empty } from 'antd';\r\n\r\nconst { Option } = Select;\r\n\r\n\r\n\r\n\r\ninterface Props {\r\n\r\n}\r\n\r\nconst localOptions = [\r\n    {\r\n        value: 'browser',\r\n        name: 'Browser'\r\n    },\r\n    {\r\n        value: 'device',\r\n        name: 'Device'\r\n    },\r\n    {\r\n        value: 'os',\r\n        name: 'OS'\r\n    }, {\r\n        value: 'platform',\r\n        name: 'Platform'\r\n    },\r\n  \r\n\r\n];\r\n\r\n\r\nexport const AGE_GROUP = [\r\n    {\r\n        device: \"18-24\",\r\n        percentage: 14\r\n    },\r\n    {\r\n        device: \"25-34\",\r\n        percentage: 24\r\n    },\r\n    {\r\n        device: \"35-44\",\r\n        percentage: 22\r\n    },\r\n    {\r\n        device: \"45-54\",\r\n        percentage: 18\r\n    },\r\n    {\r\n        device: \"55-64\",\r\n        percentage: 16\r\n    },\r\n    {\r\n        device: \"65+\",\r\n        percentage: 6\r\n    }\r\n];\r\n\r\nexport const COLORS = [\r\n    '#1890ff',\r\n    '#20A39E',\r\n    '#61D095',\r\n    '#FFBA49',\r\n    '#EF5B5B',\r\n    '#A4036F',\r\n];\r\n\r\n\r\n\r\n\r\nexport const TooltipContainerStyles = {\r\n    border: 0,\r\n    borderRadius: \"8px\",\r\n    fontSize: 14,\r\n    boxShadow: \"2px 2px 5px 3px rgba(0,0,0,0.15)\"\r\n};\r\n\r\n\r\n\r\n\r\nconst PlatformVisits = (props: Props) => {\r\n    const [options, setoptions] = useState(localOptions);\r\n    const [selectedApiValue, setSelectedApiValue] = useState('browser');\r\n\r\n\r\n    const [demoGraphicVisitsState, handleDemoGraphicVisitsStateFetch] = useHandleFetch({}, 'getAnalyticsDemographicVisits');\r\n\r\n\r\n    const [demographicData, setdemographicData] = useState([]);\r\n\r\n    useEffect(()=>{\r\n        const getDemoGraphicVisitsValue = async () => {\r\n            const demograpicVisitsDataRes =  await handleDemoGraphicVisitsStateFetch({\r\n                urlOptions: {\r\n                    params: {\r\n                        metricType: selectedApiValue,\r\n                    }\r\n                }\r\n            }); \r\n           };\r\n\r\n           getDemoGraphicVisitsValue(); \r\n\r\n    },[selectedApiValue])\r\n\r\n\r\n\r\n    useEffect(()=>{\r\n        if(demoGraphicVisitsState.done && demoGraphicVisitsState.data){\r\n            setdemographicData(demoGraphicVisitsState.data); \r\n        }; \r\n    },[demoGraphicVisitsState])\r\n\r\n\r\n\r\n    console.log('demoGraphicVisitsState',demoGraphicVisitsState)\r\n    console.log('demographicData',demographicData)\r\n\r\n\r\n    const onChange = (value) => {\r\n        setSelectedApiValue(value);\r\n    }\r\n\r\n    const RADIAN = Math.PI / 180;\r\n\r\n\r\n    const renderCustomizedLabel = ({\r\n        cx,\r\n        cy,\r\n        midAngle,\r\n        innerRadius,\r\n        outerRadius,\r\n        value,\r\n        name,\r\n        index,\r\n        percent,\r\n    }) => {\r\n        const radius = innerRadius + (outerRadius - innerRadius) * 0.5;\r\n        const x = cx + radius * Math.cos(-midAngle * RADIAN) - 10;\r\n        const y = cy + radius * Math.sin(-midAngle * RADIAN);\r\n\r\n        console.log('percent..',percent);\r\n        return (\r\n            <text x={x} y={y} fill=\"white\" fontSize={12} dominantBaseline=\"central\">\r\n                {`${(percent * 100).toFixed(0)}%`}\r\n            </text>\r\n        );\r\n    };\r\n\r\n\r\n\r\n    return (\r\n        <div className='overviewContainer__body-platformVisits'>\r\n            <div className='overviewContainer__body-platformVisits-header'>\r\n                <div className='overviewContainer__body-platformVisits-header-info'>\r\n                    <h2>\r\n                        Demographic\r\n                        </h2>\r\n                    <h3>\r\n                       {selectedApiValue} demography\r\n                        </h3>\r\n                </div>\r\n                <div className='overviewContainer__body-platformVisits-header-controller'>\r\n                    <Select\r\n                        bordered={false}\r\n                        showSearch\r\n                        style={{ width: '130px', borderRadius: '6px', color: '#1890ff' }}\r\n                        placeholder='Select Type'\r\n                        optionFilterProp='children'\r\n                        onChange={onChange}\r\n                        defaultValue={'browser'}\r\n                        filterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n                    >\r\n                        {\r\n                            options.map((option) => {\r\n                                return <Option value={option.value}>{option.name}</Option>;\r\n                            })}\r\n                    </Select>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"overviewContainer__body-body\">\r\n\r\n            {demoGraphicVisitsState.isLoading && (\r\n            <>\r\n                <div style={{\r\n                    display:'flex',\r\n                    justifyContent:'center',\r\n                    alignItems:\"center\",\r\n                    marginTop:'100px',\r\n                    marginBottom:'100px',\r\n                }}>\r\n                <Spin\r\n                size='large'\r\n                />\r\n                </div>\r\n\r\n            </>\r\n        )}\r\n                {demoGraphicVisitsState.done && !(demoGraphicVisitsState.data.length > 0) && (\r\n                    <div style={{\r\n                        marginTop: '00px'\r\n                    }}>\r\n                        <Empty description={`No Visits for ${selectedApiValue}`} image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n                    </div>\r\n                )}\r\n\r\n\r\n                    {demoGraphicVisitsState.done && demographicData && demographicData.length > 0 && (\r\n                        <ResponsiveContainer width=\"100%\" height={300}>\r\n                        <PieChart fontSize={14}>\r\n                            <Tooltip\r\n                                cursor={false}\r\n                                contentStyle={TooltipContainerStyles}\r\n                                formatter={(value, name) => [`${value}`, `${name}`]}\r\n                            />\r\n\r\n                            <Pie\r\n                                dataKey=\"count\"\r\n                                data={demographicData}\r\n                                outerRadius={100}\r\n                                innerRadius={40}\r\n                                name={selectedApiValue}\r\n                                nameKey={selectedApiValue}\r\n                                unit=\"%\"\r\n                                label={renderCustomizedLabel}\r\n                                labelLine={false}\r\n                            >\r\n                                {demographicData && demographicData.map((entry, index) => (\r\n                                    <Cell\r\n                                        key={`cell-${index}`}\r\n                                        fill={COLORS[index % COLORS.length]}\r\n                                    />\r\n                                ))}\r\n                            </Pie>\r\n                            </PieChart>\r\n                        </ResponsiveContainer>\r\n                    )}\r\n            </div>\r\n\r\n            <div className=\"overviewContainer__body-footer\">\r\n                <h3>\r\n                    <span>\r\n                        <CalendarOutlined />\r\n                    </span>\r\n\r\n\t\t\t\t\t\t\t\tIn the last month\r\n\t\t\t\t\t     </h3>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PlatformVisits\r\n\r\n\r\n// http://localhost:5000/admin/analytics/user?metric=day?start=date&end=datae\r\n// /http://localhost:5000/admin/analytics/item?type=product&item=534534534534&metric=day","import React,{useState, useEffect} from 'react'\r\n\r\n\r\n// import hooks\r\nimport { useHandleFetch } from \"../../hooks\";\r\n\r\n// import components\r\nimport { DataTableSkeleton } from \"../../components/Placeholders\";\r\n\r\n// \r\n\r\n\r\n// import lib\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {\r\n    FileOutlined,\r\n    InboxOutlined,\r\n    RadiusUpleftOutlined,\r\n    RadiusUprightOutlined,\r\n    RadiusBottomleftOutlined,\r\n    RadiusBottomrightOutlined,\r\n    PlusOutlined,\r\n    DeleteOutlined,\r\n    EditOutlined,\r\n    CheckCircleOutlined,\r\n    CalendarOutlined\r\n} from '@ant-design/icons';\r\n\r\nimport { Skeleton, Empty, Popconfirm, Upload, message, Switch, Select, Button, notification, Table, Space, Input as CoolInput, Tooltip, Modal, Spin } from 'antd';\r\n\r\n\r\nconst { Option } = Select;\r\n\r\nconst { Column, ColumnGroup } = Table;\r\n\r\n\r\n\r\ninterface Props {\r\n    \r\n}\r\n\r\nconst localOptions = [\r\n    {\r\n        value: 'category',\r\n        name: 'Category'\r\n    },\r\n     {\r\n        value: 'product',\r\n        name: 'Product'\r\n    }\r\n\r\n]\r\n\r\n\r\nconst PageVisits = (props: Props) => {\r\n\r\n    const history = useHistory(); \r\n\r\n\r\n    const [options, setoptions] = useState(localOptions);\r\n    const [selectedApiValue, setSelectedApiValue] = useState('product');\r\n    const [pageVisitsState, handlePageVisitsStateFetch] = useHandleFetch({}, 'getAnalyticsPageVisits');\r\n\r\n\r\n    useEffect(()=>{\r\n        const getPageVisitsValue = async () => {\r\n            const pageVisitsDataRes =  await handlePageVisitsStateFetch({\r\n                urlOptions: {\r\n                    params: {\r\n                        visitType: selectedApiValue,\r\n                        item: 'item',\r\n                    }\r\n                }\r\n            }); \r\n           };\r\n\r\n           getPageVisitsValue(); \r\n\r\n    },[selectedApiValue])\r\n\r\n    const onChange = (value) => {\r\n        setSelectedApiValue(value);\r\n    }\r\n\r\n\r\n    console.log('pageVisitsState',pageVisitsState)\r\n\r\n\r\n    return (\r\n\r\n        <div className='overviewContainer__body-apiVisits'>\r\n        <div className='overviewContainer__body-apiVisits-header'>\r\n            <div className='overviewContainer__body-apiVisits-header-info'>\r\n                <h2>\r\n                    Popularity\r\n                    </h2>\r\n                <h3>\r\n                      All {selectedApiValue} that were visited\r\n                    </h3>\r\n            </div>\r\n            <div className='overviewContainer__body-apiVisits-header-controller'>\r\n                <Select\r\n                    bordered={false}\r\n                    showSearch\r\n                    style={{ width: '130px', borderRadius: '6px', color: '#1890ff' }}\r\n                    placeholder='Select an api'\r\n                    optionFilterProp='children'\r\n                    onChange={onChange}\r\n                    defaultValue={selectedApiValue}\r\n                    filterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n                >\r\n                    {\r\n                        options.map((option) => {\r\n                            return <Option value={option.value}>{option.name}</Option>;\r\n                        })}\r\n                </Select>\r\n            </div>\r\n        </div>\r\n\r\n        <div className='overviewContainer__body-body'>    \r\n        {pageVisitsState.isLoading && (\r\n            <>\r\n            <div style={{\r\n                display:'flex',\r\n                justifyContent:'center',\r\n                alignItems:\"center\"\r\n            }}>\r\n            <Spin\r\n            size='large'\r\n             />\r\n                </div>\r\n\r\n            </>\r\n        )}\r\n                {pageVisitsState.done && !(pageVisitsState.data.length > 0) && (\r\n                    <div style={{\r\n                        marginTop: '00px'\r\n                    }}>\r\n                        <Empty description={`No Visits for ${selectedApiValue}`} image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n                    </div>\r\n                )}\r\n\r\n                {pageVisitsState.done && pageVisitsState.data && pageVisitsState.data.length > 0 && (\r\n                    <>\r\n                        <Table\r\n                        pagination={{ defaultPageSize: 6}}\r\n                            style={{\r\n                            }}\r\n                            // expandable={{\r\n                            //     expandedRowRender: record => <p style={{ margin: 0 }}>{record.name}</p>,\r\n                            //     rowExpandable: record => record.name !== 'Not Expandable',\r\n                            //   }}\r\n                            // bordered={true}\r\n                            size='small'\r\n                            // pagination={false}\r\n                            dataSource={pageVisitsState.data}\r\n                            tableLayout={'auto'}\r\n                            onHeaderRow={column => {\r\n                                return {\r\n                                    style: {\r\n                                        color: 'red !important'\r\n                                    }\r\n\r\n                                };\r\n                            }}\r\n                        >\r\n                \r\n\r\n                            <Column\r\n                                title=\"Name\"\r\n                                dataIndex=\"name\"\r\n                                key=\"id\"\r\n                                className='classnameofthecolumn'\r\n                                render={(text, record: any) => (\r\n                                    <>\r\n                                       <a href='##'>\r\n                                       <h4\r\n                                            onClick={() => {\r\n                                                history.push(`/admin/${selectedApiValue && selectedApiValue.toLowerCase()}/${record.itemId}`)\r\n                                            }}  \r\n                                            style={{\r\n                                                fontWeight: 400,\r\n                                                color: '#555',\r\n                                                textTransform:'uppercase',\r\n                                                cursor: 'pointer'\r\n                                            }}>\r\n                                            {text || `${selectedApiValue} Deleted`}\r\n                                        </h4>\r\n                                       </a>\r\n                                    </>\r\n                                )}\r\n                            />\r\n\r\n                            <Column\r\n                                title=\"Count\"\r\n                                dataIndex=\"visit\"\r\n                                key=\"id\"\r\n                                className='classnameofthecolumn'\r\n\r\n                            />\r\n\r\n\r\n                        </Table>\r\n                    </>\r\n                )}\r\n\r\n        </div>\r\n        <div className=\"overviewContainer__body-footer\">\r\n            <h3>\r\n                <span>\r\n                    <CalendarOutlined />\r\n                </span>\r\n\r\n                            In the last month\r\n                     </h3>\r\n        </div>\r\n\r\n    </div>\r\n\r\n    )\r\n}\r\n\r\nexport default PageVisits\r\n","import React, { useEffect, useState } from 'react';\r\n\r\n// import components \r\nimport ApiVisits from \"./ApiVisits\";\r\nimport OrderOverView from \"./OrderOverView\";\r\nimport PlatformVisits from \"./PlatformVisits\";\r\nimport PageVisits from \"./PageVisits\";\r\n\r\n// import lib \r\nimport { message, Tooltip, Modal, Tabs, Empty, Badge } from 'antd';\r\n\r\nimport {\r\n\tDeleteOutlined,\r\n\tFileAddOutlined,\r\n\tCheckCircleOutlined,\r\n\tFileImageFilled,\r\n\tFileImageOutlined,\r\n\tFileImageTwoTone,\r\n\tPlusOutlined,\r\n\tPlusCircleOutlined,\r\n\tCloseOutlined,\r\n\tCheckOutlined,\r\n\tInfoCircleOutlined,\r\n\tUserOutlined,\r\n\tCalendarOutlined,\r\n\tGoldOutlined,\r\n\tShoppingCartOutlined,\r\n\tTagOutlined\r\n} from '@ant-design/icons';\r\n\r\n// import hooks\r\nimport { useHandleFetch } from \"../../hooks\";\r\n\r\n\r\ninterface Props { }\r\n\r\nconst Overview = (props: Props) => {\r\n\tconst [analyticsProductVisitCountState, handleAnalyticsProductVisitCountFetch] = useHandleFetch({}, 'getAnalyticsPageVisitCount');\r\n\tconst [analyticsCategoryVisitCountState, handleAnalyticsCategoryVisitCountFetch] = useHandleFetch({}, 'getAnalyticsPageVisitCount');\r\n\tconst [totalUserCountState, handleGetTotalUserCountFetch] = useHandleFetch({}, 'getAnalyticsTotalUserCount');\r\n\r\n\r\n\r\n\tuseEffect(() => {\r\n\r\n\t\tconst getTotalUserCount = async () => {\r\n\t\t\tawait handleGetTotalUserCountFetch({});\r\n\t\t}\r\n\r\n\t\tgetTotalUserCount();\r\n\t}, []);\r\n\r\n\r\n\t\r\n\tuseEffect(()=>{\r\n\t\tconst getProductVisitCount = async () => {\r\n\t\t\tawait handleAnalyticsProductVisitCountFetch({\r\n\t\t\t\tparams: 'product'\r\n\t\t\t})\r\n\t\t}; \r\n\t\tgetProductVisitCount();\r\n\t},[])\r\n\r\n\r\n\r\n\tuseEffect(()=>{\r\n\t\tconst getCategoryVisitCount = async () => {\r\n\t\t\tawait handleAnalyticsCategoryVisitCountFetch({\r\n\t\t\t\tparams: 'category'\r\n\t\t\t})\r\n\t\t}; \r\n\t\tgetCategoryVisitCount();\r\n\t},[])\r\n\r\n\r\n\r\n\r\n\r\n\r\n\treturn (\r\n\t\t<div className='overviewContainer'>\r\n\t\t\t{/* <div className=\"overviewContainer__header\">\r\n\r\n\t\t\t\t{totalUserCountState.done && totalUserCountState.data && (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t<div className=\"overviewContainer__header-card\">\r\n\t\t\t\t\t<div className=\"overviewContainer__header-card-body\">\r\n\t\t\t\t\t\t<div className='overviewContainer__header-card-body-iconbox'>\r\n\t\t\t\t\t\t\t<UserOutlined />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className='overviewContainer__header-card-body-info'>\r\n\t\t\t\t\t\t\t<h3>\r\n\t\t\t\t\t\t\t\t+ Users\r\n\t\t\t\t\t\t\t</h3>\r\n\t\t\t\t\t\t\t<h2>\r\n\t\t\t\t\t\t\t\t{totalUserCountState.data['totalIndex'] || 0}\r\n\t\t\t\t\t\t\t</h2>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"overviewContainer__header-card-footer\">\r\n\t\t\t\t\t\t<h3>\r\n\t\t\t\t\t\t\t<span>\r\n\t\t\t\t\t\t\t\t<CalendarOutlined />\r\n\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\tIn the last month\r\n\t\t\t\t\t     </h3>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t\t</>\r\n\t\t\t\t)}\r\n\r\n\r\n\t\t\t\t{analyticsProductVisitCountState.done && analyticsProductVisitCountState.data && (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t<div className=\"overviewContainer__header-card\">\r\n\t\t\t\t\t<div className=\"overviewContainer__header-card-body\">\r\n\t\t\t\t\t\t<div className='overviewContainer__header-card-body-iconbox'>\r\n\t\t\t\t\t\t\t<UserOutlined />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className='overviewContainer__header-card-body-info'>\r\n\t\t\t\t\t\t\t<h3>\r\n\t\t\t\t\t\t\t\t+ Products\r\n\t\t\t\t\t\t\t</h3>\r\n\t\t\t\t\t\t\t<h2>\r\n\t\t\t\t\t\t\t\t{analyticsProductVisitCountState.data['totalIndex'] || 0}\r\n\t\t\t\t\t\t\t</h2>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"overviewContainer__header-card-footer\">\r\n\t\t\t\t\t\t<h3>\r\n\t\t\t\t\t\t\t<span>\r\n\t\t\t\t\t\t\t\t<CalendarOutlined />\r\n\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\tIn the last month\r\n\t\t\t\t\t     </h3>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t\t</>\r\n\t\t\t\t)}\r\n\r\n\r\n\r\n\r\n\t\t\t\t{analyticsCategoryVisitCountState.done && analyticsCategoryVisitCountState.data && (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t<div className=\"overviewContainer__header-card\">\r\n\t\t\t\t\t<div className=\"overviewContainer__header-card-body\">\r\n\t\t\t\t\t\t<div className='overviewContainer__header-card-body-iconbox'>\r\n\t\t\t\t\t\t\t<UserOutlined />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className='overviewContainer__header-card-body-info'>\r\n\t\t\t\t\t\t\t<h3>\r\n\t\t\t\t\t\t\t\t+ Category\r\n\t\t\t\t\t\t\t</h3>\r\n\t\t\t\t\t\t\t<h2>\r\n\t\t\t\t\t\t\t\t{analyticsCategoryVisitCountState.data['totalIndex'] || 0}\r\n\t\t\t\t\t\t\t</h2>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"overviewContainer__header-card-footer\">\r\n\t\t\t\t\t\t<h3>\r\n\t\t\t\t\t\t\t<span>\r\n\t\t\t\t\t\t\t\t<CalendarOutlined />\r\n\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\tIn the last month\r\n\t\t\t\t\t     </h3>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t\t</>\r\n\t\t\t\t)}\r\n\r\n\r\n\r\n\t\t\t\t<div className=\"overviewContainer__header-card\">\r\n\t\t\t\t\t<div className=\"overviewContainer__header-card-body\">\r\n\t\t\t\t\t\t<div className='overviewContainer__header-card-body-iconbox'>\r\n\t\t\t\t\t\t\t<ShoppingCartOutlined />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className='overviewContainer__header-card-body-info'>\r\n\t\t\t\t\t\t\t<h3>\r\n\t\t\t\t\t\t\t\t+ Orders\r\n\t\t\t\t\t\t\t</h3>\r\n\t\t\t\t\t\t\t<h2>\r\n\t\t\t\t\t\t\t\t8503\r\n\t\t\t\t\t\t\t</h2>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"overviewContainer__header-card-footer\">\r\n\t\t\t\t\t\t<h3>\r\n\t\t\t\t\t\t\t<span>\r\n\t\t\t\t\t\t\t\t<CalendarOutlined />\r\n\t\t\t\t\t\t\t</span>\r\n\r\n\t\t\t\t\t\t\t\tIn the last month\r\n\t\t\t\t\t     </h3>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\r\n\r\n\t\t\t</div>\r\n */}\r\n\r\n\t\t\t<div className=\"overviewContainer__body\">\r\n\t\t\t\t<PageVisits />\r\n\t\t\t\t<PlatformVisits />\r\n\t\t\t</div>\r\n\t\t\t<div className=\"overviewContainer__body\">\r\n\t\t\t</div>\r\n\t\t\t<OrderOverView />\r\n\t\t\t<ApiVisits />\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Overview;\r\n","import React from 'react';\r\nimport { Form, Input } from 'antd';\r\n\r\nconst { TextArea } = Input;\r\n\r\n\r\n\r\ninterface Props {\r\n    label?: string;\r\n    type?: string;\r\n    defaultValue?: string;\r\n    value?: string;\r\n    onChange?: any;\r\n    disabled?: boolean;\r\n    isError?: boolean;\r\n    errorString?: string;\r\n    name?: string;\r\n    rows?: number\r\n    placeholder?:any; \r\n}\r\n\r\nconst Demo = ({ label, type, defaultValue, value, \r\n    onChange, disabled, isError,\r\n     errorString, name, rows = 4,\r\n     placeholder\r\n     }: Props) => {\r\n    return (\r\n        <>\r\n            {label && (\r\n                <h3 className='inputFieldLabel'>\r\n                    {label}\r\n                </h3>\r\n            )}\r\n\r\n            <Form.Item\r\n                validateStatus={isError ? \"error\" : \"\"}\r\n                help={errorString}\r\n            // rules={[{ required: true }]}\r\n            >\r\n                <TextArea\r\n                    disabled={disabled}\r\n                    onChange={onChange}\r\n                    value={value}\r\n                    name={name}\r\n                    className='inputclassName'\r\n                    rows={rows} \r\n                    placeholder={placeholder}\r\n                    />\r\n\r\n            </Form.Item>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Demo; ","// @ts-nocheck\r\nimport React, { useState, useEffect } from 'react';\r\n\r\n// import libraries\r\nimport {\r\n  Upload,\r\n  Button,\r\n  Modal,\r\n  Tabs,\r\n  message,\r\n  notification,\r\n  Popconfirm,\r\n  Menu,\r\n  Dropdown,\r\n  Spin,\r\n} from 'antd';\r\nimport reqwest from 'reqwest';\r\nimport { Formik } from 'formik';\r\nimport moment from 'moment';\r\n// import * as Yup from 'yup';\r\n\r\nimport {\r\n  CheckOutlined,\r\n  ArrowUpOutlined,\r\n  CheckCircleOutlined,\r\n  EllipsisOutlined,\r\n  FileImageOutlined,\r\n  DeleteOutlined,\r\n  CloseOutlined,\r\n  InfoCircleOutlined,\r\n} from '@ant-design/icons';\r\n\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport Empty from '../../components/Empty';\r\n\r\n// import hooks\r\nimport { useHandleFetch } from '../../hooks';\r\n\r\n// import configs\r\nimport config from '../../config.json';\r\n\r\nconst { Dragger } = Upload;\r\nconst { TabPane } = Tabs;\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n  notification.success({\r\n    message: message || 'Category Updated',\r\n    description: '',\r\n    icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n  });\r\n};\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n  notification.success({\r\n    message: message || 'Something Went Wrong',\r\n    description: '',\r\n    icon: <InfoCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n  });\r\n};\r\n\r\ninterface Props {\r\n  visible: boolean;\r\n  setvisible: (isVisible: any) => void;\r\n  setmyImages?: any;\r\n  setmyThumbnailImage?: any;\r\n  isModalOpenForThumbnail?: boolean;\r\n  isModalOpenForImages?: boolean;\r\n  myImages?: any;\r\n  myThumbnailImage?: any;\r\n  setMyGoddamnImages?: any;\r\n  myGoddamnImages?: any;\r\n}\r\n\r\nconst MediaLibrary = ({\r\n  visible,\r\n  setvisible,\r\n  setmyImages,\r\n  isModalOpenForImages,\r\n  isModalOpenForThumbnail,\r\n  setmyThumbnailImage,\r\n  myImages,\r\n  myThumbnailImage,\r\n  ...rest\r\n}: Props) => {\r\n  const [mediaLibTagActiveKey, setmediaLibTagActiveKey] = useState('2');\r\n  const [fileList, setfileList] = useState([]);\r\n  const [uploading, setuploading] = useState(false);\r\n  const [selectedimages, setselectedImages] = useState([]);\r\n  const [activeImageItem, setactiveImageItem] = useState(false);\r\n  const [updateMediaLibrary, handleUpdateMediaLibraryFetch] = useHandleFetch(\r\n    {},\r\n    'updateImageFromLibrary'\r\n  );\r\n  const [\r\n    imageListFromLibraryState,\r\n    handleImageListFromLibraryFetch,\r\n  ] = useHandleFetch({}, 'ImageListFromLibrary');\r\n  const [\r\n    deleteImageFromLibraryFetchState,\r\n    handleDeleteImageFromLibraryFetch,\r\n  ] = useHandleFetch({}, 'deleteImageFromLibrary');\r\n  const [localImageList, setLocalImageList] = useState([]);\r\n  const [isDoneOk, setisDoneOk] = useState(false);\r\n\r\n  const handleDeleteImageFromImageLibrary = async (id) => {\r\n    const deleteImageLibraryItemRes = await handleDeleteImageFromLibraryFetch({\r\n      urlOptions: {\r\n        placeHolders: {\r\n          id,\r\n        },\r\n      },\r\n    });\r\n\r\n    // @ts-ignore\r\n    if (\r\n      deleteImageLibraryItemRes &&\r\n      deleteImageLibraryItemRes.status === 'ok'\r\n    ) {\r\n      openSuccessNotification('Imaged Deleted');\r\n      const newImageList = localImageList.filter((item) => item.id !== id);\r\n      setLocalImageList(newImageList);\r\n    }\r\n  };\r\n\r\n  const getImageList = async () => {\r\n    const imageListRes = await handleImageListFromLibraryFetch({\r\n      urlOptions: {\r\n        params: {\r\n          limitNumber: 10000,\r\n          sortItem: 'added',\r\n          sortOrderValue: '-1',\r\n        },\r\n      },\r\n    });\r\n\r\n    // @ts-ignore\r\n    if (imageListRes) {\r\n      // @ts-ignore\r\n      setLocalImageList(imageListRes);\r\n    }\r\n\r\n    // console.log('imageListRes', imageListRes);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getImageList();\r\n  }, []);\r\n\r\n  const handleUpload = async () => {\r\n    const formData = new FormData();\r\n    fileList.forEach((file) => {\r\n      formData.append('images', file, file.name);\r\n    });\r\n\r\n    setuploading(true);\r\n\r\n    //  const addImageToLibraryRes = awAddait handleMediaLibraryFetch({\r\n    // \tbody: formData\r\n    //   });\r\n\r\n    //   console.log('addImageToLibraryRes',addImageToLibraryRes)\r\n\r\n    // You can use any AJAX library you like\r\n    reqwest({\r\n      url: `${config.baseURL}/admin/api/image/add`,\r\n      method: 'post',\r\n      processData: false,\r\n      data: formData,\r\n      withCredentials: true,\r\n      success: (res) => {\r\n        console.log('successResOfMediaLib', res);\r\n        setfileList([]);\r\n        setuploading(false);\r\n        getImageList();\r\n        message.success('upload successfully.');\r\n\r\n        if (res && res.inserted && res.inserted[0]) {\r\n          setactiveImageItem({\r\n            cover: `${config['baseURL']}${\r\n              res.inserted[0].thumbnail && res.inserted[0].thumbnail\r\n            }`,\r\n            ...res.inserted[0],\r\n          });\r\n        }\r\n        setmediaLibTagActiveKey('2');\r\n\r\n        /* \r\n\t\tadded: \"2020-09-22T07:53:43.710Z\"\r\n\t\talt: \"\"\r\n\t\tcaption: \"\"\r\n\t\tcover: \"http://localhost:5000\\images\\library\\thumbnail\\24582-group-2497.jpg\"\r\n\t\tid: \"5f69ad8786d83f2becfe2d10\"\r\n\t\tlabels: []\r\n\t\tname: \"Group 2497.png\"\r\n\t\ttitle: \"\"\r\n\t\t\r\n\t\t*/\r\n      },\r\n      error: () => {\r\n        setuploading(false);\r\n        message.error('upload failed.');\r\n      },\r\n    });\r\n  };\r\n\r\n  const handleOk = (e: any) => {\r\n    if (isModalOpenForImages) {\r\n      setmyImages(selectedimages);\r\n      setisDoneOk(true);\r\n    } else {\r\n      console.log('');\r\n      console.log('selectedimages,,,', selectedimages[0]);\r\n      setmyImages(\r\n        selectedimages && selectedimages[0] ? [selectedimages[0]] : []\r\n      );\r\n      setisDoneOk(true);\r\n    }\r\n    setvisible(false);\r\n  };\r\n\r\n  const handleCancel = (e: any) => {\r\n    setvisible(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (myImages && myImages.length > 0) setselectedImages([...myImages]);\r\n  }, [myImages]);\r\n\r\n  useEffect(() => {\r\n    if (isDoneOk && isModalOpenForImages && myImages) {\r\n      setselectedImages([...myImages]);\r\n    }\r\n  }, [myImages, isDoneOk]);\r\n\r\n  useEffect(() => {\r\n    if (isDoneOk) {\r\n      // console.log('myThumbnail', myThumbnailImage)\r\n      // setselectedImages([...myThumbnailImage]);\r\n    }\r\n  }, [myThumbnailImage, isDoneOk]);\r\n\r\n  const uploadProps = {\r\n    //  listType: 'picture',\r\n    multiple: true,\r\n    onRemove: (file) => {\r\n      setfileList((filelist) => {\r\n        const index = fileList.indexOf(file);\r\n        const newFileList = fileList.slice();\r\n        newFileList.splice(index, 1);\r\n        return newFileList;\r\n      });\r\n    },\r\n    beforeUpload: (file) => {\r\n      setfileList((filelist) => {\r\n        const xflelist = filelist;\r\n        return [...xflelist, file];\r\n      });\r\n      return false;\r\n    },\r\n    fileList,\r\n  };\r\n\r\n  const handleAddToSelectedList = (image, id) => {\r\n    if (selectedimages && selectedimages.length > 0) {\r\n      const isImageExist = selectedimages.find((image) => image.id === id);\r\n      if (!isImageExist) {\r\n        setselectedImages([image, ...selectedimages]);\r\n        setactiveImageItem(image);\r\n      } else {\r\n        const newselectedImages = selectedimages.filter(\r\n          (image) => image.id !== id\r\n        );\r\n        setselectedImages(newselectedImages);\r\n      }\r\n    } else {\r\n      setselectedImages([image, ...selectedimages]);\r\n      setactiveImageItem(image);\r\n    }\r\n  };\r\n\r\n  const getisSelectedImage = (id) => {\r\n    if (selectedimages && selectedimages.length > 0) {\r\n      const isImageExist = selectedimages.find((image) => image.id === id);\r\n      if (isImageExist) {\r\n        return true;\r\n      }\r\n      return false;\r\n    } else {\r\n      return false;\r\n    }\r\n  };\r\n\r\n  const handleUpdateSubmit = async (values, actions) => {\r\n    const updateImageLibraryItemRes = await handleUpdateMediaLibraryFetch({\r\n      body: {\r\n        id: values.id,\r\n        alt: values.alt,\r\n        title: values.title,\r\n        caption: values.caption,\r\n        labels: values.labels,\r\n      },\r\n    });\r\n\r\n    // @ts-ignore\r\n    if (\r\n      updateImageLibraryItemRes &&\r\n      updateImageLibraryItemRes.status === 'ok'\r\n    ) {\r\n      openSuccessNotification('Image Updated');\r\n\r\n      const positionInImageList = () => {\r\n        return localImageList.map((item) => item.id).indexOf(values.id);\r\n      };\r\n\r\n      const index = positionInImageList();\r\n\r\n      // @ts-ignore\r\n      const updatedItem = Object.assign({}, localImageList[index], {\r\n        ...updateImageLibraryItemRes,\r\n      });\r\n      const updateImageList = [\r\n        ...localImageList.slice(0, index),\r\n        updatedItem,\r\n        ...localImageList.slice(index + 1),\r\n      ];\r\n      setLocalImageList(updateImageList);\r\n    } else {\r\n      openErrorNotification();\r\n    }\r\n\r\n    actions.setSubmitting(false);\r\n  };\r\n\r\n  const getisUpdateSubmitButtonDisabled = (values, isValid) => {\r\n    // if(!values.alt || !values.title || !values.title || !values.caption || !isValid){\r\n    // \treturn true;\r\n    // }\r\n    if (!isValid) {\r\n      return true;\r\n    }\r\n    return false;\r\n  };\r\n\r\n  // console.log('selectedimages', selectedimages)\r\n\r\n  const ImageItemMenu = (\r\n    handleDeleteImageFromImageLibrary,\r\n    id,\r\n    handleAddToSelectedList,\r\n    image\r\n  ) => {\r\n    return (\r\n      <Menu>\r\n        <Menu.Item\r\n          onClick={() => handleAddToSelectedList(image, id)}\r\n          key='1'\r\n          icon={<CheckOutlined />}\r\n        >\r\n          Select\r\n        </Menu.Item>\r\n\r\n        <Menu.Item\r\n          onClick={() => handleDeleteImageFromImageLibrary(id)}\r\n          key='1'\r\n          icon={<DeleteOutlined color='red' />}\r\n        >\r\n          Delete\r\n        </Menu.Item>\r\n      </Menu>\r\n    );\r\n  };\r\n\r\n  console.log('imageListFromLibraryState', imageListFromLibraryState);\r\n  console.log('activeImageItem', activeImageItem);\r\n\r\n  return (\r\n    <>\r\n      <Modal\r\n        style={{\r\n          top: '40px',\r\n        }}\r\n        title='Media Library'\r\n        visible={visible}\r\n        onOk={handleOk}\r\n        onCancel={handleCancel}\r\n        width={'80vw'}\r\n        bodyStyle={{\r\n          margin: '0',\r\n          padding: '0',\r\n        }}\r\n        okText='Done'\r\n      >\r\n        <div className='mediaLibraryBodyContainer'>\r\n          <div className='mediaLibraryBodyContainer-left'>\r\n            <Tabs\r\n              onChange={(value) => {\r\n                setmediaLibTagActiveKey(`${value}`);\r\n              }}\r\n              activeKey={mediaLibTagActiveKey}\r\n              type='card'\r\n              size='middle'\r\n            >\r\n              <TabPane tab='Upload New Media' key='1'>\r\n                <div className='mediaLibraryBodyContainer-left-header'>\r\n                  <div>\r\n                    <Dragger\r\n                      className='upload-list-inline'\r\n                      listType='picture'\r\n                      style={{\r\n                        background: '#fff',\r\n                        borderRadius: '8px',\r\n                      }}\r\n                      {...uploadProps}\r\n                    >\r\n                      <p className='ant-upload-drag-icon'>\r\n                        <FileImageOutlined />\r\n                      </p>\r\n                      <p className='ant-upload-text'>\r\n                        Click or drag file to this area to upload\r\n                      </p>\r\n                      <p className='ant-upload-hint'>\r\n                        Support for a single or bulk upload.\r\n                      </p>\r\n                    </Dragger>\r\n                  </div>\r\n                </div>\r\n\r\n                <Button\r\n                  className='btnPrimaryClassNameoutline'\r\n                  type='primary'\r\n                  onClick={handleUpload}\r\n                  disabled={fileList.length === 0}\r\n                  loading={uploading}\r\n                  icon={<ArrowUpOutlined />}\r\n                  style={{\r\n                    marginTop: '20px',\r\n                    marginBottom: '10px',\r\n                  }}\r\n                >\r\n                  Upload\r\n                </Button>\r\n              </TabPane>\r\n              <TabPane tab='Media Library' key='2'>\r\n                <>\r\n                  {myImages && myImages.lenght > 0 && (\r\n                    <>\r\n                      <h3 className='inputFieldLabel'>Selected Items</h3>\r\n                      <div className='mediaLibraryBodyContainer-selectedImages'>\r\n                        {imageListFromLibraryState.done &&\r\n                          myImages.length > 0 &&\r\n                          myImages.map((image) => {\r\n                            return (\r\n                              <div\r\n                                key={image.id}\r\n                                className='mediaLibraryBodyContainer-selectedImages-imageListContainer-item'\r\n                              >\r\n                                <div\r\n                                  onClick={() => {\r\n                                    handleAddToSelectedList(image, image.id);\r\n                                  }}\r\n                                  className='mediaLibraryBodyContainer-selectedImages-imageListContainer-item-menu'\r\n                                >\r\n                                  <CloseOutlined />\r\n                                </div>\r\n\r\n                                <div className='mediaLibraryBodyContainer-selectedImages-imgContainer'>\r\n                                  <img src={image.cover} alt='img' />\r\n                                </div>\r\n                              </div>\r\n                            );\r\n                          })}\r\n                      </div>\r\n                    </>\r\n                  )}\r\n                </>\r\n\r\n                <div className='mediaLibraryBodyContainer-left-imageListContainer'>\r\n                  {imageListFromLibraryState.done &&\r\n                    localImageList.length > 0 &&\r\n                    localImageList.map((image) => {\r\n                      return (\r\n                        <div\r\n                          key={image.id}\r\n                          className='mediaLibraryBodyContainer-left-imageListContainer-item'\r\n                        >\r\n                          {getisSelectedImage(image.id) ? (\r\n                            <div className='mediaLibraryBodyContainer-left-imageListContainer-item-icon'>\r\n                              <CheckOutlined />\r\n                            </div>\r\n                          ) : (\r\n                            ''\r\n                          )}\r\n\r\n                          <Dropdown\r\n                            overlay={() =>\r\n                              ImageItemMenu(\r\n                                handleDeleteImageFromImageLibrary,\r\n                                image.id,\r\n                                handleAddToSelectedList,\r\n                                image\r\n                              )\r\n                            }\r\n                            placement='bottomRight'\r\n                          >\r\n                            <div className='mediaLibraryBodyContainer-left-imageListContainer-item-menu'>\r\n                              <EllipsisOutlined />\r\n                            </div>\r\n                          </Dropdown>\r\n\r\n                          <img\r\n                            onClick={() => {\r\n                              handleAddToSelectedList(image, image.id);\r\n                            }}\r\n                            src={image.cover}\r\n                            alt='img'\r\n                          />\r\n                        </div>\r\n                      );\r\n                    })}\r\n\r\n                  {imageListFromLibraryState.done &&\r\n                    !(localImageList.length > 0) && (\r\n                      <div\r\n                        style={{\r\n                          display: 'flex',\r\n                          justifyContent: 'center',\r\n                          width: '100%',\r\n                        }}\r\n                      >\r\n                        <Empty title='No Image Found in the library' />\r\n                      </div>\r\n                    )}\r\n\r\n                  {imageListFromLibraryState.isLoading && (\r\n                    <div\r\n                      style={{\r\n                        display: 'flex',\r\n                        justifyContent: 'center',\r\n                        width: '100%',\r\n                        margin: '100px 0 50px 0',\r\n                      }}\r\n                    >\r\n                      <Spin size='large' />\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              </TabPane>\r\n            </Tabs>\r\n          </div>\r\n          <div className='mediaLibraryBodyContainer-right'>\r\n            {activeImageItem && (\r\n              <>\r\n                <Formik\r\n                  onSubmit={(values, actions) =>\r\n                    handleUpdateSubmit(values, actions)\r\n                  }\r\n                  validateOnBlur={false}\r\n                  enableReinitialize={true}\r\n                  initialValues={\r\n                    // @ts-ignore\r\n                    { ...activeImageItem }\r\n                  }\r\n                >\r\n                  {({\r\n                    handleChange,\r\n                    values,\r\n                    handleSubmit,\r\n                    errors,\r\n                    isValid,\r\n                    isSubmitting,\r\n                    touched,\r\n                    handleBlur,\r\n                    setFieldTouched,\r\n                    handleReset,\r\n                  }) => (\r\n                    <>\r\n                      <h4>Attachment Details</h4>\r\n                      <div className='mediaLibraryBodyContainer-right-ImageDetails'>\r\n                        <div className='mediaLibraryBodyContainer-right-ImageDetails-imageContainer'>\r\n                          <img src={activeImageItem['cover']} alt='img' />\r\n                        </div>\r\n                        <div className='mediaLibraryBodyContainer-right-ImageDetails-infoContainer'>\r\n                          <h5 className='imageLibnameText'>\r\n                            {activeImageItem['name']}\r\n                          </h5>\r\n                          <h5>\r\n                            {activeImageItem['added'] &&\r\n                              moment(activeImageItem['added']).format(\r\n                                'MMMM Do YYYY, h:mm a'\r\n                              )}\r\n                          </h5>\r\n                          {/* <h5>\r\n\t\t\t\t\t\t\t\t\t\t5000 X 500\r\n\t\t\t\t\t\t\t\t\t</h5> */}\r\n\r\n                          <Popconfirm\r\n                            onConfirm={() =>\r\n                              handleDeleteImageFromImageLibrary(\r\n                                activeImageItem['id']\r\n                              )\r\n                            }\r\n                            title='Are you sure？'\r\n                            okText='Yes'\r\n                            cancelText='No'\r\n                          >\r\n                            <h5 className='imageLibdeleteText'>\r\n                              Delete parmanently\r\n                            </h5>\r\n                          </Popconfirm>\r\n                        </div>\r\n                      </div>\r\n\r\n                      <Input\r\n                        label='Alternate Text'\r\n                        value={values.alt}\r\n                        name='alt'\r\n                        isError={\r\n                          (touched.alt && errors.alt) ||\r\n                          (!isSubmitting &&\r\n                            updateMediaLibrary.error['error']['alt'])\r\n                        }\r\n                        errorString={\r\n                          (touched.alt && errors.alt) ||\r\n                          (!isSubmitting &&\r\n                            updateMediaLibrary.error['error']['alt'])\r\n                        }\r\n                        onChange={(e: any) => {\r\n                          handleChange(e);\r\n                          setFieldTouched('alt');\r\n                        }}\r\n                      />\r\n\r\n                      <Input\r\n                        label='Title'\r\n                        value={values.title}\r\n                        name='title'\r\n                        isError={\r\n                          (touched.title && errors.title) ||\r\n                          (!isSubmitting &&\r\n                            updateMediaLibrary.error['error']['title'])\r\n                        }\r\n                        errorString={\r\n                          (touched.title && errors.title) ||\r\n                          (!isSubmitting &&\r\n                            updateMediaLibrary.error['error']['title'])\r\n                        }\r\n                        onChange={(e: any) => {\r\n                          handleChange(e);\r\n                          setFieldTouched('title');\r\n                        }}\r\n                      />\r\n\r\n                      <Input\r\n                        label='Caption'\r\n                        value={values.caption}\r\n                        name='caption'\r\n                        isError={\r\n                          (touched.caption && errors.caption) ||\r\n                          (!isSubmitting &&\r\n                            updateMediaLibrary.error['error']['caption'])\r\n                        }\r\n                        errorString={\r\n                          (touched.caption && errors.caption) ||\r\n                          (!isSubmitting &&\r\n                            updateMediaLibrary.error['error']['caption'])\r\n                        }\r\n                        onChange={(e: any) => {\r\n                          handleChange(e);\r\n                          setFieldTouched('caption');\r\n                        }}\r\n                      />\r\n\r\n                      <Button\r\n                        type='default'\r\n                        onClick={(e: any) => handleSubmit(e)}\r\n                        disabled={getisUpdateSubmitButtonDisabled(\r\n                          values,\r\n                          isValid\r\n                        )}\r\n                        loading={isSubmitting}\r\n                        style={\r\n                          {\r\n                            // marginTop: '20px'\r\n                          }\r\n                        }\r\n                      >\r\n                        Update\r\n                      </Button>\r\n                    </>\r\n                  )}\r\n                </Formik>\r\n              </>\r\n            )}\r\n\r\n            {!activeImageItem && (\r\n              <div\r\n                style={{\r\n                  height: '100%',\r\n                  display: 'flex',\r\n                  justifyContent: 'center',\r\n                  alignItems: 'center',\r\n                }}\r\n              >\r\n                <h4\r\n                  style={{\r\n                    textAlign: 'center',\r\n                    fontSize: '13px',\r\n                    color: '#8888',\r\n                  }}\r\n                >\r\n                  Select an image to preview details\r\n                </h4>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MediaLibrary;\r\n","import MediaLibrary from './MediaLibrary';\r\nexport default MediaLibrary;\r\n","// @ts-nocheck\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Tag, Input, Tooltip } from 'antd';\r\nimport { PlusOutlined } from '@ant-design/icons';\r\n\r\nclass MetaTags extends React.Component {\r\n  state = {\r\n    tags: [],\r\n    inputVisible: false,\r\n    inputValue: '',\r\n    editInputIndex: -1,\r\n    editInputValue: '',\r\n  };\r\n\r\n  handleClose = (removedTag) => {\r\n    const { setTags, tags } = this.props;\r\n    const localTags = tags.filter((tag) => tag !== removedTag);\r\n    setTags(localTags);\r\n  };\r\n\r\n  showInput = () => {\r\n    this.setState({ inputVisible: true }, () => this.input.focus());\r\n  };\r\n\r\n  handleInputChange = (e) => {\r\n    this.setState({ inputValue: e.target.value });\r\n  };\r\n\r\n  handleInputConfirm = () => {\r\n    console.log('handleInputConfirm', this.props);\r\n    const { inputValue } = this.state;\r\n    let { tags, setTags } = this.props;\r\n    if (inputValue && tags && tags.indexOf(inputValue) === -1) {\r\n      tags = [...tags, inputValue];\r\n    }\r\n    setTags(tags);\r\n    this.setState({\r\n      inputVisible: false,\r\n      inputValue: '',\r\n    });\r\n  };\r\n\r\n  handleEditInputChange = (e) => {\r\n    this.setState({ editInputValue: e.target.value });\r\n    console.log('tagValue', e.target.value);\r\n  };\r\n\r\n  handleEditInputConfirm = () => {\r\n    this.setState(({ editInputIndex, editInputValue }) => {\r\n      return {\r\n        editInputIndex: -1,\r\n        editInputValue: '',\r\n      };\r\n    });\r\n\r\n    const newTags = [...this.props.tags];\r\n    newTags[editInputIndex] = editInputValue;\r\n    this.props.setTags(newTags);\r\n  };\r\n\r\n  saveInputRef = (input) => {\r\n    this.input = input;\r\n  };\r\n\r\n  saveEditInputRef = (input) => {\r\n    this.editInput = input;\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      inputVisible,\r\n      inputValue,\r\n      editInputIndex,\r\n      editInputValue,\r\n    } = this.state;\r\n    const { placeholder, tags } = this.props;\r\n\r\n    return (\r\n      <>\r\n        {tags &&\r\n          tags.length > 0 &&\r\n          tags.map((tag, index) => {\r\n            if (editInputIndex === index) {\r\n              return (\r\n                <Input\r\n                  ref={this.saveEditInputRef}\r\n                  key={tag}\r\n                  size='small'\r\n                  placeholder={placeholder}\r\n                  className='tag-input'\r\n                  value={editInputValue}\r\n                  onChange={this.handleEditInputChange}\r\n                  onBlur={this.handleEditInputConfirm}\r\n                  onPressEnter={this.handleEditInputConfirm}\r\n                />\r\n              );\r\n            }\r\n\r\n            const isLongTag = tag.length > 20;\r\n\r\n            const tagElem = (\r\n              <Tag\r\n                className='edit-tag'\r\n                key={tag}\r\n                closable={true}\r\n                onClose={() => this.handleClose(tag)}\r\n              >\r\n                <span\r\n                  onDoubleClick={(e) => {\r\n                    if (index !== 0) {\r\n                      this.setState(\r\n                        { editInputIndex: index, editInputValue: tag },\r\n                        () => {\r\n                          this.editInput.focus();\r\n                        }\r\n                      );\r\n                      e.preventDefault();\r\n                    }\r\n                  }}\r\n                >\r\n                  {isLongTag ? `${tag.slice(0, 20)}...` : tag}\r\n                </span>\r\n              </Tag>\r\n            );\r\n            return isLongTag ? (\r\n              <Tooltip title={tag} key={tag}>\r\n                {tagElem}\r\n              </Tooltip>\r\n            ) : (\r\n              tagElem\r\n            );\r\n          })}\r\n        {inputVisible && (\r\n          <Input\r\n            style={{\r\n              margin: '10px 0',\r\n            }}\r\n            ref={this.saveInputRef}\r\n            type='text'\r\n            size='small'\r\n            className='tag-input'\r\n            value={inputValue}\r\n            onChange={this.handleInputChange}\r\n            onBlur={this.handleInputConfirm}\r\n            onPressEnter={this.handleInputConfirm}\r\n          />\r\n        )}\r\n        {!inputVisible && (\r\n          <Tag className='site-tag-plus edit-tag' onClick={this.showInput}>\r\n            <PlusOutlined /> New Value\r\n          </Tag>\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MetaTags;\r\n","// @ts-nocheck\r\nimport React, { useState, useEffect } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\nimport { useHandleFetch } from '../../hooks';\r\n// import third party ui lib\r\nimport {\r\n  Switch,\r\n  Select,\r\n  notification,\r\n  Modal,\r\n  Tooltip,\r\n  Upload,\r\n  message,\r\n  Button,\r\n  Spin,\r\n} from 'antd';\r\n\r\nimport {\r\n  DeleteOutlined,\r\n  FileAddOutlined,\r\n  FileImageFilled,\r\n  PlusOutlined,\r\n  CheckCircleOutlined,\r\n  CloseOutlined,\r\n  CheckOutlined,\r\n  InfoCircleOutlined,\r\n  LoadingOutlined,\r\n} from '@ant-design/icons';\r\n\r\n// import ReactQuill from 'react-quill';\r\n// import 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport MediaLibrary from '../../components/MediaLibrary';\r\nimport MetaTags from './MetaTags';\r\n\r\nconst validationSchema = Yup.object().shape({\r\n  //   name: Yup.string()\r\n  //     .label('Name')\r\n  //     .required('Name is required')\r\n  //     .min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n  notification.success({\r\n    message: message || 'Category Updated',\r\n    description: '',\r\n    icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n  });\r\n};\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n  notification.error({\r\n    message: message || 'Something Went Wrong',\r\n    description: '',\r\n    icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n  });\r\n};\r\n\r\nconst initialValues = {\r\n  name: '',\r\n  bnName: '',\r\n  description: '',\r\n  bnDescription: '',\r\n  metaTitle: '',\r\n  bnMetaTitle: '',\r\n  metaDescription: '',\r\n  bnMetaDescription: '',\r\n  metaTags: '',\r\n  bnMetaTags: '',\r\n  image: [],\r\n  url: '',\r\n  cover: '',\r\n  displayOrder: null,\r\n};\r\n\r\nconst { Option } = Select;\r\n\r\ninterface Props {\r\n  addNewCategoryVisible: any;\r\n  setAddNewCategoryVisible: any;\r\n  categoryList?: any;\r\n  setcategoryList?: any;\r\n  categoryDetailData?: any;\r\n  categoryList2?:any; \r\n}\r\n\r\nconst ModalChildComponent = ({\r\n  addNewCategoryVisible,\r\n  setAddNewCategoryVisible,\r\n  categoryList,\r\n  setcategoryList,\r\n  categoryDetailData,\r\n  categoryList2\r\n}) => {\r\n  const [addCategoryState, handleAddCategoryFetch] = useHandleFetch(\r\n    {},\r\n    'updateCategory'\r\n  );\r\n  const [categoryDetailState, handleCategoryDetailFetch] = useHandleFetch(\r\n    {},\r\n    'categoryDetail'\r\n  );\r\n\r\n  const [\r\n    updateCategoryIconState,\r\n    handleUpdateCategoryIconFetch,\r\n  ] = useHandleFetch({}, 'categoryUpdateIcon', 'form');\r\n\r\n  const [\r\n    updateCategoryThumbnailState,\r\n    handleUpdateCategoryThumbnailFetch,\r\n  ] = useHandleFetch({}, 'categoryUpdateThumbnail', 'form');\r\n\r\n\r\n  const [visible, setvisible] = useState(false);\r\n  const [myImages, setmyImages] = useState(false);\r\n  const [myThumbnailImage, setmyThumbnailImage] = useState(false);\r\n  const [isparentCategoryChecked, setisparentcategoryChecked] = useState(true);\r\n  const [isModalOpenForThumbnail, setisModalOpenForThumbnail] = useState(false);\r\n  const [isModalOpenForImages, setisModalOpenForImages] = useState(false);\r\n  const [selectedParentId, setselectedParentId] = useState('');\r\n  const [imageFile, setImagefile] = useState('');\r\n  const [imageUrl, setImageUrl] = useState('');\r\n  const [thumbnailImageFile, setThumbnailImagefile] = useState('');\r\n  const [thumbnailImageUrl, setThumbnailImageUrl] = useState('');\r\n  const [loadingThumnail, setLoadingThumbnail] = useState(false);\r\n  const [tags, setTags] = useState([]);\r\n  const [bnTags, setBnTags] = useState([]);\r\n  const [visibleMedia, setvisibleMedia] = useState(false);\r\n  const [coverImageId, setCoverImageId] = useState('');\r\n  const [myGoddamnImages, setMyGoddamnImages] = useState([]);\r\n\r\n  const [\r\n    attachImageToItemMultipleState,\r\n    handleAttachImageToItemMultipleFetch,\r\n  ] = useHandleFetch({}, 'attachImageToItemMultiple');\r\n  const [\r\n    attachImageToItemSingleState,\r\n    handleAttachImageToItemSingleFetch,\r\n  ] = useHandleFetch({}, 'attachImageToItemSingle');\r\n  const [\r\n    detachImageFromItemMultipleState,\r\n    handleDetachImageFromItemMultipleFetch,\r\n  ] = useHandleFetch({}, 'detachImageFromItemMultiple');\r\n  const [\r\n    detachImageFromItemSingleState,\r\n    handleDetachImageFromItemSingleFetch,\r\n  ] = useHandleFetch({}, 'detachImageFromItemSingle');\r\n  const [\r\n    setImageAsThumbnailToItemState,\r\n    handleSetImageAsThumbnailToItemFetch,\r\n  ] = useHandleFetch({}, 'setImageAsThumbnailToItem');\r\n\r\n  useEffect(() => {\r\n    const getProductDetail = async () => {\r\n      await handleCategoryDetailFetch({\r\n        urlOptions: {\r\n          placeHolders: {\r\n            id: categoryDetailData.id,\r\n          },\r\n        },\r\n      });\r\n    };\r\n\r\n    getProductDetail();\r\n  }, [categoryDetailData]);\r\n\r\n  useEffect(() => {\r\n    if (\r\n      categoryDetailState.done &&\r\n      Object.keys(categoryDetailState).length > 0\r\n    ) {\r\n      const images = categoryDetailState.data.image;\r\n      let mahImages = [];\r\n\r\n      if (images && images.length > 0) {\r\n        mahImages = images;\r\n      }\r\n\r\n      if (\r\n        categoryDetailState.data.cover &&\r\n        categoryDetailState.data.cover['id']\r\n      ) {\r\n        const ixists = images.find(\r\n          (item) => item.id === categoryDetailState.data.cover['id']\r\n        );\r\n        if (!ixists) {\r\n          mahImages = [categoryDetailState.data.cover, ...mahImages];\r\n        }\r\n\r\n        setCoverImageId(categoryDetailState.data.cover['id']);\r\n      }\r\n\r\n      // @ts-ignore\r\n      setmyImages(mahImages);\r\n    }\r\n  }, [categoryDetailState.done]);\r\n\r\n  useEffect(() => {\r\n    console.log('thumnail', myImages);\r\n    // @ts-ignore\r\n    if (myImages && myImages[0] && myImages.length < 2) {\r\n      console.log('thumnail2', myImages);\r\n\r\n      if (coverImageId !== myImages[0].id) {\r\n        setCoverImageId(myImages[0].id);\r\n        handleSetImageAsThumnail(myImages[0]);\r\n      }\r\n    }\r\n  }, [myImages]);\r\n\r\n  const handleDetachSingleImage = async (id) => {\r\n    await handleDetachImageFromItemSingleFetch({\r\n      urlOptions: {\r\n        placeHolders: {\r\n          imageId: id,\r\n          collection: 'category',\r\n          itemId: categoryDetailData.id,\r\n        },\r\n      },\r\n    });\r\n  };\r\n\r\n  const handleSetImageAsThumnail = async (image) => {\r\n    const thumbnailRes = await handleSetImageAsThumbnailToItemFetch({\r\n      urlOptions: {\r\n        placeHolders: {\r\n          imageId: image.id,\r\n          collection: 'category',\r\n          itemId: categoryDetailData.id,\r\n        },\r\n      },\r\n    });\r\n\r\n    // @ts-ignore\r\n    if (thumbnailRes && thumbnailRes.status === 'ok') {\r\n      openSuccessNotification('Set as thumbnail!');\r\n    } else {\r\n      openErrorNotification(\"Couldn't set as thumbnail, Something went wrong\");\r\n    }\r\n  };\r\n\r\n  const handleImagesDelete = (id) => {\r\n    // @ts-ignore\r\n    const newImages =\r\n      myImages &&\r\n      myImages.filter((image) => {\r\n        return image.id !== id;\r\n      });\r\n\r\n    setmyImages(newImages);\r\n  };\r\n\r\n  const handleSubmit = async (values: any, actions: any) => {\r\n    // @ts-ignore\r\n    const imagesIds = myImages\r\n      ? myImages.map((image) => {\r\n          return image.id;\r\n        })\r\n      : [];\r\n\r\n    const formData = new FormData();\r\n\r\n    formData.append('name', values.name?.trim());\r\n    formData.append('description', values.description);\r\n    formData.append('image', JSON.stringify(imagesIds));\r\n    formData.append('cover', coverImageId || imagesIds[0] ? imagesIds[0] : '');\r\n    formData.append('parent', selectedParentId);\r\n    formData.append('icon', imageFile);\r\n    formData.append('thumbnail', thumbnailImageFile);\r\n\r\n    console.log('categoryDetailData', categoryDetailData);\r\n\r\n    if (categoryDetailData && Object.keys(categoryDetailData).length > 0) {\r\n      const aboutToUpdatedImageIds = [];\r\n\r\n      if (imagesIds && imagesIds.length > 0) {\r\n        imagesIds.forEach((imageId) => {\r\n          if (categoryDetailData && categoryDetailData['image']) {\r\n            if (!categoryDetailData['image'].includes(imageId)) {\r\n              aboutToUpdatedImageIds.push(imageId);\r\n            }\r\n          }\r\n        });\r\n      }\r\n\r\n      if (aboutToUpdatedImageIds[0] && aboutToUpdatedImageIds.length > 1) {\r\n        await handleAttachImageToItemMultipleFetch({\r\n          urlOptions: {\r\n            placeHolders: {\r\n              collection: 'category',\r\n              itemId: categoryDetailData.id,\r\n            },\r\n          },\r\n          body: {\r\n            image: aboutToUpdatedImageIds,\r\n          },\r\n        });\r\n      } else if (\r\n        aboutToUpdatedImageIds[0] &&\r\n        aboutToUpdatedImageIds.length < 1\r\n      ) {\r\n        await handleAttachImageToItemSingleFetch({\r\n          urlOptions: {\r\n            placeHolders: {\r\n              imageId: aboutToUpdatedImageIds[0].id,\r\n              collection: 'category',\r\n              itemId: categoryDetailData.id,\r\n            },\r\n          },\r\n        });\r\n      }\r\n    }\r\n\r\n    const addCategoryRes = await handleAddCategoryFetch({\r\n      urlOptions: {\r\n        placeHolders: {\r\n          id: categoryDetailData.id,\r\n        },\r\n      },\r\n      body: {\r\n        name: values.name?.trim(),\r\n        description: values.description,\r\n        displayOrder: values.displayOrder,\r\n        image: imagesIds,\r\n        cover: coverImageId || imagesIds[0] ? imagesIds[0] : '',\r\n        parent: selectedParentId,\r\n        icon: imageFile,\r\n        metaTitle: values.metaTitle,\r\n        metaDescription: values.metaDescription,\r\n        metaTags: tags && tags.length > 0 ? tags.join(',') : '',\r\n        bn: {\r\n          metaTitle: values.bnMetaTitle,\r\n          metaDescription: values.bnMetaDescription,\r\n          metaTags: bnTags && bnTags.length > 0 ? bnTags.join(',') : '',\r\n          name: values.bnName?.trim(),\r\n          description: values.bnDescription,\r\n        },\r\n      },\r\n    });\r\n\r\n    // @ts-ignore\r\n    if (addCategoryRes && addCategoryRes.status === 'ok') {\r\n      openSuccessNotification('Category Updated!');\r\n      setAddNewCategoryVisible(false);\r\n      const positionInTag = () => {\r\n        return categoryList.map((item) => item.id).indexOf(values.id);\r\n      };\r\n\r\n      const getCover = (id) => {\r\n        if (!id || !myImages || !myImages[0]) {\r\n          return '';\r\n        } else {\r\n          if (myImages && myImages.length > 0) {\r\n            const item = myImages.find((item) => item.id === id);\r\n            if (item) {\r\n              return item.cover;\r\n            }\r\n          }\r\n        }\r\n      };\r\n\r\n      const index = positionInTag();\r\n\r\n      // @ts-ignore\r\n      const updatedItem = Object.assign({}, categoryList[index], {\r\n        name: addCategoryRes['name'] || '',\r\n        description: addCategoryRes['description'] || '',\r\n        id: categoryDetailData.id,\r\n        key: categoryDetailData['id'] || '',\r\n        // @ts-ignore\r\n        ...addCategoryRes,\r\n        cover: getCover(coverImageId),\r\n      });\r\n      const updateTagList = [\r\n        ...categoryList.slice(0, index),\r\n        updatedItem,\r\n        ...categoryList.slice(index + 1),\r\n      ];\r\n      setcategoryList(updateTagList);\r\n\r\n      actions.resetForm();\r\n      // @ts-ignore\r\n      setmyImages([]);\r\n      setCoverImageId('');\r\n      setselectedParentId('');\r\n      setisparentcategoryChecked(true);\r\n      setImageUrl('');\r\n      setThumbnailImageUrl('');\r\n    } else {\r\n      openErrorNotification();\r\n    }\r\n\r\n    actions.setSubmitting(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!addCategoryState['isLoading']) {\r\n      const error = addCategoryState['error'];\r\n      if (error['isError'] && Object.keys(error['error']).length > 0) {\r\n        const errors =\r\n          Object.values(error['error']).length > 0\r\n            ? Object.values(error['error'])\r\n            : [];\r\n        errors.forEach((err, i) => {\r\n          if (typeof err === 'string') {\r\n            openErrorNotification(err);\r\n          } else if (typeof err === 'object') {\r\n            if (err && Object.keys(err).length > 0) {\r\n              const errs = Object.values(err);\r\n              errs.forEach((err) => {\r\n                openErrorNotification(err);\r\n              });\r\n            }\r\n          }\r\n        });\r\n      }\r\n    }\r\n  }, [addCategoryState]);\r\n\r\n  const onSwitchChange = (checked: any) => {\r\n    setisparentcategoryChecked(checked);\r\n  };\r\n\r\n  const handleCancel = (e: any) => {\r\n    setTags([]);\r\n    setBnTags([]);\r\n    setAddNewCategoryVisible(false);\r\n    setImagefile('');\r\n    setCoverImageId('');\r\n    setselectedParentId('');\r\n    setmyImages(false);\r\n  };\r\n\r\n  const onChangeSelect = (value) => {\r\n    setselectedParentId(value);\r\n  };\r\n\r\n  function getBase64(img, callback) {\r\n    const reader = new FileReader();\r\n    reader.addEventListener('load', () => callback(reader.result));\r\n    reader.readAsDataURL(img);\r\n  }\r\n\r\n  function beforeUpload(file) {\r\n    const isJpgOrPng = file.type === 'image/jpeg' || file.type === 'image/png';\r\n    if (!isJpgOrPng) {\r\n      message.error('You can only upload JPG/PNG file!');\r\n    }\r\n    const isLt2M = file.size / 1024 / 1024 < 2;\r\n    if (!isLt2M) {\r\n      message.error('Image must smaller than 2MB!');\r\n    }\r\n\r\n    getBase64(file, (imageUrl) => {\r\n      setImageUrl(imageUrl);\r\n      setImagefile(file);\r\n      const setNewIcon = async () => {\r\n        const formData = new FormData();\r\n        formData.append('icon', file);\r\n        // const addCategoryRes = await handleAddCategoryFetch({\r\n        // \tbody: formData,\r\n        // });\r\n        const res = await handleUpdateCategoryIconFetch({\r\n          urlOptions: {\r\n            placeHolders: {\r\n              id: categoryDetailData.id,\r\n            },\r\n          },\r\n          body: formData,\r\n        });\r\n\r\n        // @ts-ignore\r\n        if (res && res.status === 'ok') {\r\n          openSuccessNotification('Category Icon updated!');\r\n        } else {\r\n          openErrorNotification(\r\n            \"Couldn't update category icon, Something went wrong\"\r\n          );\r\n        }\r\n      };\r\n\r\n      setNewIcon();\r\n      setLoadingThumbnail(false);\r\n    });\r\n\r\n    return false;\r\n  }\r\n\r\n\r\n  function beforeThumbnailUpload(file) {\r\n    const isJpgOrPng = file.type === 'image/jpeg' || file.type === 'image/png';\r\n    if (!isJpgOrPng) {\r\n      message.error('You can only upload JPG/PNG file!');\r\n    }\r\n    const isLt2M = file.size / 1024 / 1024 < 2;\r\n    if (!isLt2M) {\r\n      message.error('Image must smaller than 2MB!');\r\n    }\r\n\r\n    getBase64(file, (imageUrl) => {\r\n      setThumbnailImageUrl(imageUrl)\r\n      setThumbnailImagefile(file)\r\n      const setNewIcon = async () => {\r\n        const formData = new FormData();\r\n        formData.append('thumbnail', file);\r\n        // const addCategoryRes = await handleAddCategoryFetch({\r\n        // \tbody: formData,\r\n        // });\r\n        const res = await handleUpdateCategoryThumbnailFetch({\r\n          urlOptions: {\r\n            placeHolders: {\r\n              id: categoryDetailData.id,\r\n            },\r\n          },\r\n          body: formData,\r\n        });\r\n\r\n        // @ts-ignore\r\n        if (res && res.status === 'ok') {\r\n          openSuccessNotification('Category Thumbnail updated!');\r\n        } else {\r\n          openErrorNotification(\r\n            \"Couldn't update category Thumbnail, Something went wrong\"\r\n          );\r\n        }\r\n      };\r\n\r\n      setNewIcon();\r\n      setLoadingThumbnail(false);\r\n    });\r\n\r\n    return false;\r\n  }\r\n\r\n\r\n\r\n  \r\n  useEffect(() => {\r\n    if (categoryDetailData && Object.keys(categoryDetailData).length > 0) {\r\n      const iconUrl = categoryDetailData.icon && categoryDetailData.icon;\r\n\r\n      setImageUrl(iconUrl);\r\n    }\r\n  }, []);\r\n\r\n\r\n  useEffect(() => {\r\n    if (categoryDetailData && Object.keys(categoryDetailData).length > 0) {\r\n      const thumbnailImageUrl = categoryDetailData.thumbnail && categoryDetailData.thumbnail;\r\n      setThumbnailImageUrl(thumbnailImageUrl);\r\n    }\r\n  }, []);\r\n\r\n\r\n  const uploadButton = (\r\n    <div>\r\n      {loadingThumnail ? <LoadingOutlined /> : <PlusOutlined />}\r\n      <div className='ant-upload-text'>Upload</div>\r\n    </div>\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (categoryDetailData && Object.keys(categoryDetailData).length > 0) {\r\n      const metaTags =\r\n        categoryDetailData.metaTags && categoryDetailData.metaTags.split(',');\r\n\r\n      console.log('localMetaTags', metaTags);\r\n\r\n      const bnMetaTags =\r\n        categoryDetailData.bn &&\r\n        categoryDetailData.bn['metaTags'] &&\r\n        categoryDetailData.bn['metaTags'].split(',');\r\n      setTags(metaTags || []);\r\n      setBnTags(bnMetaTags || []);\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <Formik\r\n        onSubmit={(values, actions) => handleSubmit(values, actions)}\r\n        validationSchema={validationSchema}\r\n        validateOnBlur={false}\r\n        enableReinitialize={true}\r\n        initialValues={{\r\n          ...initialValues,\r\n          ...categoryDetailData,\r\n          ...(categoryDetailData &&\r\n            Object.keys(categoryDetailData).length > 0 && {\r\n              bnMetaTitle:\r\n                categoryDetailData['bn'] &&\r\n                categoryDetailData['bn'].metaTitle &&\r\n                categoryDetailData['bn'].metaTitle,\r\n              bnMetaDescription:\r\n                categoryDetailData['bn'] &&\r\n                categoryDetailData['bn'].metaDescription &&\r\n                categoryDetailData['bn'].metaDescription,\r\n              bnName:\r\n                categoryDetailData['bn'] &&\r\n                categoryDetailData['bn'].name &&\r\n                categoryDetailData['bn'].name,\r\n              bnDescription:\r\n                categoryDetailData['bn'] &&\r\n                categoryDetailData['bn'].description &&\r\n                categoryDetailData['bn'].description,\r\n            }),\r\n        }}\r\n      >\r\n        {({\r\n          handleChange,\r\n          values,\r\n          handleSubmit,\r\n          errors,\r\n          isValid,\r\n          isSubmitting,\r\n          touched,\r\n          handleBlur,\r\n          setFieldTouched,\r\n          handleReset,\r\n        }) => (\r\n          <>\r\n            <section className='addProductGridContainer'>\r\n              <div className='addProductGridContainer__left'>\r\n                <div className='addProductGridContainer__name'>\r\n                  <div className='addProductGridContainer__item-header'>\r\n                    <h3>Category Information *</h3>\r\n                    <div\r\n                      className={\r\n                        values.name && values.name.length > 2\r\n                          ? 'checkicon-active'\r\n                          : 'checkicon'\r\n                      }\r\n                    >\r\n                      <CheckCircleOutlined />\r\n                    </div>\r\n                  </div>\r\n                  <div className='addProductGridContainer__item-body'>\r\n                    <Input\r\n                      label='Name *'\r\n                      value={values.name}\r\n                      placeHolder={'grocery,fashion'}\r\n                      name='name'\r\n                      isError={\r\n                        (touched.name && errors.name) ||\r\n                        (!isSubmitting &&\r\n                          addCategoryState.error['error']['name'])\r\n                      }\r\n                      errorString={\r\n                        (touched.name && errors.name) ||\r\n                        (!isSubmitting &&\r\n                          addCategoryState.error['error']['name'])\r\n                      }\r\n                      onChange={(e: any) => {\r\n                        handleChange(e);\r\n                        setFieldTouched('name');\r\n                      }}\r\n                    />\r\n\r\n                    <Input\r\n                      label='BN Name'\r\n                      value={values.bnName}\r\n                      placeHolder={'মুদিখানা,ফ্যাশন'}\r\n                      name='bnName'\r\n                      isError={\r\n                        (touched.bnName && errors.bnName) ||\r\n                        (!isSubmitting &&\r\n                          addCategoryState.error['error']['bnName'])\r\n                      }\r\n                      errorString={\r\n                        (touched.bnName && errors.bnName) ||\r\n                        (!isSubmitting &&\r\n                          addCategoryState.error['error']['bnName'])\r\n                      }\r\n                      onChange={(e: any) => {\r\n                        handleChange(e);\r\n                        setFieldTouched('bnName');\r\n                      }}\r\n                    />\r\n\r\n                    <TextArea\r\n                      label='Description'\r\n                      value={values.description}\r\n                      placeholder={'This category...'}\r\n                      name='description'\r\n                      isError={\r\n                        (touched.description && errors.description) ||\r\n                        (!isSubmitting &&\r\n                          addCategoryState.error['error']['description'])\r\n                      }\r\n                      errorString={\r\n                        (touched.description && errors.description) ||\r\n                        (!isSubmitting &&\r\n                          addCategoryState.error['error']['description'])\r\n                      }\r\n                      onChange={(e: any) => {\r\n                        handleChange(e);\r\n                        setFieldTouched('description');\r\n                      }}\r\n                    />\r\n\r\n                    <TextArea\r\n                      label='BN Description'\r\n                      value={values.bnDescription}\r\n                      placeholder={'এই ক্যাটাগড়ি...'}\r\n                      name='bnDescription'\r\n                      isError={\r\n                        (touched.bnDescription && errors.bnDescription) ||\r\n                        (!isSubmitting &&\r\n                          addCategoryState.error['error']['bnDescription'])\r\n                      }\r\n                      errorString={\r\n                        (touched.bnDescription && errors.bnDescription) ||\r\n                        (!isSubmitting &&\r\n                          addCategoryState.error['error']['bnDescription'])\r\n                      }\r\n                      onChange={(e: any) => {\r\n                        handleChange(e);\r\n                        setFieldTouched('bnDescription');\r\n                      }}\r\n                    />\r\n\r\n                    <Input\r\n                      label='Display Order'\r\n                      value={values.displayOrder}\r\n                      placeHolder={'1,3,7'}\r\n                      name='displayOrder'\r\n                      type='number'\r\n                      isError={\r\n                        (touched.displayOrder && errors.displayOrder) ||\r\n                        (!isSubmitting &&\r\n                          addCategoryState.error['error']['displayOrder'])\r\n                      }\r\n                      errorString={\r\n                        (touched.displayOrder && errors.displayOrder) ||\r\n                        (!isSubmitting &&\r\n                          addCategoryState.error['error']['displayOrder'])\r\n                      }\r\n                      onChange={(e: any) => {\r\n                        handleChange(e);\r\n                        setFieldTouched('displayOrder');\r\n                      }}\r\n                    />\r\n\r\n                    <div\r\n                      style={{\r\n                        marginTop: '25px',\r\n                      }}\r\n                    ></div>\r\n\r\n                    <div className='switchLabelContainer'>\r\n                      <Switch\r\n                        checked={isparentCategoryChecked}\r\n                        defaultChecked\r\n                        onChange={onSwitchChange}\r\n                      />\r\n                      <div className='switchLabelContainer-textContainer'>\r\n                        <h5>Top level Category</h5>\r\n                        <h5 className='switchLabelContainer-desc'>\r\n                          Disable to select a Parent Category\r\n                        </h5>\r\n                      </div>\r\n                    </div>\r\n\r\n                    {!isparentCategoryChecked && (\r\n                      <>\r\n                        <h3 className='inputFieldLabel'>Parent Category</h3>\r\n                        <Select\r\n                          showSearch\r\n                          style={{ width: 300 }}\r\n                          placeholder='Select a Parent Category'\r\n                          optionFilterProp='children'\r\n                          onChange={onChangeSelect}\r\n                          // onFocus={onFocus}\r\n                          // onBlur={onBlur}\r\n                          // onSearch={onSearch}\r\n                          filterOption={(input, option: any) =>\r\n                            option.children\r\n                              .toLowerCase()\r\n                              .indexOf(input.toLowerCase()) >= 0\r\n                          }\r\n                        >\r\n                          {categoryList2.length > 0 &&\r\n                            categoryList2.map((category) => {\r\n                              return (\r\n                                <Option value={category.id}>\r\n                                  {category.name}\r\n                                </Option>\r\n                              );\r\n                            })}\r\n                        </Select>\r\n                      </>\r\n                    )}\r\n\r\n                    <div\r\n                      style={{\r\n                        marginTop: '20px',\r\n                      }}\r\n                    />\r\n\r\n                    <div className='addproductSection-left-header'>\r\n                      <h3 className='inputFieldLabel'>Icon </h3>\r\n                      <Tooltip\r\n                        placement='left'\r\n                        title={'Add Icon image for this category'}\r\n                      >\r\n                        <a href='###'>\r\n                          <InfoCircleOutlined />\r\n                        </a>\r\n                      </Tooltip>\r\n                    </div>\r\n\r\n                    <Upload\r\n                      style={{\r\n                        borderRadius: '8px',\r\n                      }}\r\n                      name='avatar'\r\n                      listType='picture-card'\r\n                      className='avatar-uploader'\r\n                      showUploadList={false}\r\n                      beforeUpload={beforeUpload}\r\n                      multiple={false}\r\n                    >\r\n                      {imageUrl ? (\r\n                        <img\r\n                          src={imageUrl}\r\n                          alt='avatar'\r\n                          style={{ width: '100%' }}\r\n                        />\r\n                      ) : (\r\n                        uploadButton\r\n                      )}\r\n                    </Upload>\r\n\r\n\r\n                    \r\n                    <div\r\n                      style={{\r\n                        marginTop: '20px',\r\n                      }}\r\n                    />\r\n\r\n                    <div className='addproductSection-left-header'>\r\n                      <h3 className='inputFieldLabel'>Thumbnail</h3>\r\n                      <Tooltip\r\n                        placement='left'\r\n                        title={'Add thumbnail image for this category'}\r\n                      >\r\n                        <a href='###'>\r\n                          <InfoCircleOutlined />\r\n                        </a>\r\n                      </Tooltip>\r\n                    </div>\r\n\r\n                    <Upload\r\n                      style={{\r\n                        borderRadius: '8px',\r\n                      }}\r\n                      name='avatar'\r\n                      listType='picture-card'\r\n                      className='avatar-uploader'\r\n                      showUploadList={false}\r\n                      beforeUpload={beforeThumbnailUpload}\r\n                      multiple={false}\r\n                    >\r\n                      {thumbnailImageUrl ? (\r\n                        <img\r\n                          src={thumbnailImageUrl}\r\n                          alt='avatar'\r\n                          style={{ width: '100%' }}\r\n                        />\r\n                      ) : (\r\n                        uploadButton\r\n                      )}\r\n                    </Upload>\r\n\r\n\r\n                  </div>\r\n                </div>\r\n\r\n                <div className='addProductGridContainer__image'>\r\n                  <div className='addProductGridContainer__item-header'>\r\n                    <h3>Image</h3>\r\n\r\n                    <Tooltip\r\n                      placement='left'\r\n                      title={\r\n                        'Click on the image to select cover image, By default 1st image is selected as cover'\r\n                      }\r\n                    >\r\n                      <a href='###'>\r\n                        <InfoCircleOutlined />\r\n                      </a>\r\n                    </Tooltip>\r\n                  </div>\r\n\r\n                  <div\r\n                    style={{\r\n                      padding: '10px',\r\n                    }}\r\n                    className='aboutToUploadImagesContainer'\r\n                  >\r\n                    {categoryDetailState.isLoading && (\r\n                      <div\r\n                        style={{\r\n                          padding: '20px 0',\r\n                        }}\r\n                      >\r\n                        <Spin />\r\n                      </div>\r\n                    )}\r\n                    {categoryDetailState.done && (\r\n                      <>\r\n                        {myImages &&\r\n                          // @ts-ignore\r\n                          myImages.length > 0 &&\r\n                          myImages.map((image, index) => {\r\n                            return (\r\n                              <div className='aboutToUploadImagesContainer__item'>\r\n                                <div\r\n                                  className='aboutToUploadImagesContainer__item-imgContainer'\r\n                                  onClick={() => {\r\n                                    setCoverImageId(image.id);\r\n                                    handleSetImageAsThumnail(image);\r\n                                  }}\r\n                                >\r\n                                  <img src={image.cover} alt={image.alt} />\r\n                                </div>\r\n\r\n                                <span\r\n                                  onClick={() => {\r\n                                    handleImagesDelete(image.id);\r\n                                    handleDetachSingleImage(image.id);\r\n                                  }}\r\n                                  className='aboutToUploadImagesContainer__item-remove'\r\n                                >\r\n                                  <CloseOutlined />\r\n                                </span>\r\n\r\n                                {coverImageId === image.id ? (\r\n                                  <span className='aboutToUploadImagesContainer__item-cover'>\r\n                                    <CheckOutlined />\r\n                                  </span>\r\n                                ) : (\r\n                                  !coverImageId &&\r\n                                  index === 0 && (\r\n                                    <span className='aboutToUploadImagesContainer__item-cover'>\r\n                                      <CheckOutlined />\r\n                                    </span>\r\n                                  )\r\n                                )}\r\n                              </div>\r\n                            );\r\n                          })}\r\n\r\n                        <Tooltip title={'Attach images'}>\r\n                          <div\r\n                            onClick={() => {\r\n                              setvisible(true);\r\n                              setisModalOpenForImages(true);\r\n                              setisModalOpenForThumbnail(false);\r\n                            }}\r\n                            className='aboutToUploadImagesContainer__uploadItem'\r\n                          >\r\n                            {/* <FileAddOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FileImageTwoTone />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FileImageOutlined /> */}\r\n                            <FileImageFilled />\r\n                            {/* <h5>\r\n\t\t\t\t\t\t\t\t\t\t\t\t     Select From Library\r\n\t\t\t\t\t\t\t\t\t\t\t<     /h5> */}\r\n                            <span className='aboutToUploadImagesContainer__uploadItem-plus'>\r\n                              <PlusOutlined />\r\n                            </span>\r\n                          </div>\r\n                        </Tooltip>\r\n                      </>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className='addProductGridContainer__right'>\r\n                <div className='addProductGridContainer__category'>\r\n                  <div className='addProductGridContainer-rightItemContainer'>\r\n                    <div className='addProductGridContainer-rightItemContainer-header'>\r\n                      <h3>Meta Tags</h3>\r\n\r\n                      <Tooltip\r\n                        placement='left'\r\n                        title={\r\n                          \"Meta data will be used to make the user's easy and for search engine optimization.\"\r\n                        }\r\n                      >\r\n                        <a href='###'>\r\n                          <InfoCircleOutlined />\r\n                        </a>\r\n                      </Tooltip>\r\n\r\n                      {/* <Tooltip\r\n                        color='red'\r\n                        visible={\r\n                          addCategoryState.error['error']['category'] &&\r\n                          !(categoryids.length > 0)\r\n                        }\r\n                        placement='left'\r\n                        title={'Select at least one category'}\r\n                      >\r\n                        <div\r\n                          className={\r\n                            !(categoryids.length > 0) &&\r\n                            !addCategoryState.error['error']['category']\r\n                              ? 'checkicon'\r\n                              : addCategoryState.error['error']['category']\r\n                              ? 'checkicon-error'\r\n                              : 'checkicon-active'\r\n                          }\r\n                        >\r\n                          <CheckCircleOutlined />\r\n                        </div>\r\n                      </Tooltip> */}\r\n                    </div>\r\n                    <div className='addProductGridContainer-rightItemContainer-body'>\r\n                      <Input\r\n                        label='Meta title'\r\n                        value={values.metaTitle}\r\n                        placeHolder={'...'}\r\n                        name='metaTitle'\r\n                        isError={\r\n                          (touched.metaTitle && errors.metaTitle) ||\r\n                          (!isSubmitting &&\r\n                            addCategoryState.error['error']['metaTitle'])\r\n                        }\r\n                        errorString={\r\n                          (touched.metaTitle && errors.metaTitle) ||\r\n                          (!isSubmitting &&\r\n                            addCategoryState.error['error']['metaTitle'])\r\n                        }\r\n                        onChange={(e: any) => {\r\n                          handleChange(e);\r\n                          setFieldTouched('metaTitle');\r\n                        }}\r\n                      />\r\n\r\n                      <Input\r\n                        label='BN Meta title'\r\n                        value={values.bnMetaTitle}\r\n                        placeHolder={'...'}\r\n                        name='bnMetaTitle'\r\n                        isError={\r\n                          (touched.bnMetaTitle && errors.bnMetaTitle) ||\r\n                          (!isSubmitting &&\r\n                            addCategoryState.error['error']['bnMetaTitle'])\r\n                        }\r\n                        errorString={\r\n                          (touched.bnMetaTitle && errors.bnMetaTitle) ||\r\n                          (!isSubmitting &&\r\n                            addCategoryState.error['error']['bnMetaTitle'])\r\n                        }\r\n                        onChange={(e: any) => {\r\n                          handleChange(e);\r\n                          setFieldTouched('bnMetaTitle');\r\n                        }}\r\n                      />\r\n\r\n                      <TextArea\r\n                        label='Meta description'\r\n                        value={values.metaDescription}\r\n                        placeholder={'meta...'}\r\n                        name='metaDescription'\r\n                        isError={\r\n                          (touched.metaDescription && errors.metaDescription) ||\r\n                          (!isSubmitting &&\r\n                            addCategoryState.error['error']['metaDescription'])\r\n                        }\r\n                        errorString={\r\n                          (touched.metaDescription && errors.metaDescription) ||\r\n                          (!isSubmitting &&\r\n                            addCategoryState.error['error']['metaDescription'])\r\n                        }\r\n                        onChange={(e: any) => {\r\n                          handleChange(e);\r\n                          setFieldTouched('metaDescription');\r\n                        }}\r\n                      />\r\n\r\n                      <TextArea\r\n                        label='BN Meta Description'\r\n                        value={values.bnMetaDescription}\r\n                        placeholder={'এইয় মেট...'}\r\n                        name='bnMetaDescription'\r\n                        isError={\r\n                          (touched.bnMetaDescription &&\r\n                            errors.bnMetaDescription) ||\r\n                          (!isSubmitting &&\r\n                            addCategoryState.error['error'][\r\n                              'bnMetaDescription'\r\n                            ])\r\n                        }\r\n                        errorString={\r\n                          (touched.bnMetaDescription &&\r\n                            errors.bnMetaDescription) ||\r\n                          (!isSubmitting &&\r\n                            addCategoryState.error['error'][\r\n                              'bnMetaDescription'\r\n                            ])\r\n                        }\r\n                        onChange={(e: any) => {\r\n                          handleChange(e);\r\n                          setFieldTouched('bnMetaDescription');\r\n                        }}\r\n                      />\r\n\r\n                      <h3 className='inputFieldLabel'>Meta Tags </h3>\r\n\r\n                      <MetaTags\r\n                        // @ts-ignore\r\n                        setTags={setTags}\r\n                        tags={tags}\r\n                      />\r\n\r\n                      <div\r\n                        style={{\r\n                          marginTop: '15px',\r\n                        }}\r\n                      ></div>\r\n\r\n                      <h3 className='inputFieldLabel'>BN Meta Tags </h3>\r\n\r\n                      <MetaTags\r\n                        // @ts-ignore\r\n                        setTags={setBnTags}\r\n                        tags={bnTags}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </section>\r\n\r\n            <div\r\n              style={{\r\n                padding: '15px',\r\n                display: 'flex',\r\n                justifyContent: 'flex-end',\r\n              }}\r\n            >\r\n              <Button\r\n                style={{\r\n                  color: '#555',\r\n                  marginRight: '10px',\r\n                }}\r\n                className='btnPrimaryClassNameoutline-cancle'\r\n                onClick={() => setAddNewCategoryVisible(false)}\r\n                type='default'\r\n              >\r\n                Cancel\r\n              </Button>\r\n\r\n              <Button\r\n                className='btnPrimaryClassNameoutline'\r\n                onClick={handleSubmit}\r\n                loading={addCategoryState.isLoading}\r\n                type='link'\r\n                icon={<CheckOutlined />}\r\n              >\r\n                Update\r\n              </Button>\r\n            </div>\r\n\r\n            <MediaLibrary\r\n              setvisible={setvisible}\r\n              visible={visible}\r\n              setmyImages={setmyImages}\r\n              myImages={myImages}\r\n              setmyThumbnailImage={setmyThumbnailImage}\r\n              isModalOpenForThumbnail={isModalOpenForThumbnail}\r\n              isModalOpenForImages={isModalOpenForImages}\r\n            />\r\n          </>\r\n        )}\r\n      </Formik>\r\n    </>\r\n  );\r\n};\r\n\r\nconst AddNewCategory = ({\r\n  addNewCategoryVisible,\r\n  setAddNewCategoryVisible,\r\n  categoryList,\r\n  setcategoryList,\r\n  categoryDetailData,\r\n}: Props) => {\r\n  const handleCancel = () => {\r\n    setAddNewCategoryVisible(false);\r\n  };\r\n  return (\r\n    <Modal\r\n      destroyOnClose={true}\r\n      style={{\r\n        top: '40px',\r\n      }}\r\n      bodyStyle={{\r\n        margin: 0,\r\n        padding: 0,\r\n      }}\r\n      title='Edit Category'\r\n      visible={addNewCategoryVisible}\r\n      onCancel={handleCancel}\r\n      footer={false}\r\n      okText='Update'\r\n      width={'70vw'}\r\n      okButtonProps={{\r\n        // loading: isSubmitting,\r\n        htmlType: 'submit',\r\n      }}\r\n    >\r\n      <ModalChildComponent\r\n        addNewCategoryVisible={addNewCategoryVisible}\r\n        setAddNewCategoryVisible={setAddNewCategoryVisible}\r\n        categoryList={categoryList}\r\n        setcategoryList={setcategoryList}\r\n        categoryDetailData={categoryDetailData}\r\n      />\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default AddNewCategory;\r\n","import React from 'react';\r\nimport ContentLoader from 'react-content-loader';\r\n\r\nconst DataTable = (props: any) => (\r\n\t<ContentLoader\r\n\t\tspeed={0.5}\r\n\t\twidth={1300}\r\n\t\theight={400}\r\n\t\tviewBox='0 0 1300 400'\r\n\t\tbackgroundColor='#f3f3f3'\r\n\t\tforegroundColor='#ecebeb'\r\n\t\t{...props}\r\n\t>\r\n\t\t<rect x='27' y='139' rx='4' ry='4' width='20' height='20' />\r\n\t\t<rect x='67' y='140' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='188' y='141' rx='10' ry='10' width='169' height='19' />\r\n\t\t<rect x='402' y='140' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='523' y='141' rx='10' ry='10' width='169' height='19' />\r\n\t\t<rect x='731' y='139' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='852' y='138' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='1424' y='137' rx='10' ry='10' width='68' height='19' />\r\n\t\t<rect x='26' y='196' rx='4' ry='4' width='20' height='20' />\r\n\t\t<rect x='66' y='197' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='187' y='198' rx='10' ry='10' width='169' height='19' />\r\n\t\t<rect x='401' y='197' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='522' y='198' rx='10' ry='10' width='169' height='19' />\r\n\t\t<rect x='730' y='196' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='851' y='195' rx='10' ry='10' width='85' height='19' />\r\n\t\t<circle cx='1456' cy='203' r='12' />\r\n\t\t<rect x='26' y='258' rx='4' ry='4' width='20' height='20' />\r\n\t\t<rect x='66' y='259' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='187' y='260' rx='10' ry='10' width='169' height='19' />\r\n\t\t<rect x='401' y='259' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='522' y='260' rx='10' ry='10' width='169' height='19' />\r\n\t\t<rect x='730' y='258' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='851' y='257' rx='10' ry='10' width='85' height='19' />\r\n\t\t<circle cx='1456' cy='265' r='12' />\r\n\t\t<rect x='26' y='316' rx='4' ry='4' width='20' height='20' />\r\n\t\t<rect x='66' y='317' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='187' y='318' rx='10' ry='10' width='169' height='19' />\r\n\t\t<rect x='401' y='317' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='522' y='318' rx='10' ry='10' width='169' height='19' />\r\n\t\t<rect x='730' y='316' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='851' y='315' rx='10' ry='10' width='85' height='19' />\r\n\t\t<circle cx='1456' cy='323' r='12' />\r\n\t\t<rect x='26' y='379' rx='4' ry='4' width='20' height='20' />\r\n\t\t<rect x='66' y='380' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='187' y='381' rx='10' ry='10' width='169' height='19' />\r\n\t\t<rect x='401' y='380' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='522' y='381' rx='10' ry='10' width='169' height='19' />\r\n\t\t<rect x='730' y='379' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='851' y='378' rx='10' ry='10' width='85' height='19' />\r\n\t\t<circle cx='1456' cy='386' r='12' />\r\n\t\t<rect x='978' y='138' rx='10' ry='10' width='169' height='19' />\r\n\t\t<rect x='977' y='195' rx='10' ry='10' width='169' height='19' />\r\n\t\t<rect x='977' y='257' rx='10' ry='10' width='169' height='19' />\r\n\t\t<rect x='977' y='315' rx='10' ry='10' width='169' height='19' />\r\n\t\t<rect x='977' y='378' rx='10' ry='10' width='169' height='19' />\r\n\t\t<rect x='1183' y='139' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='1182' y='196' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='1182' y='258' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='1182' y='316' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='1182' y='379' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='1305' y='137' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='1304' y='194' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='1304' y='256' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='1304' y='314' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='1304' y='377' rx='10' ry='10' width='85' height='19' />\r\n\t\t<circle cx='37' cy='97' r='11' />\r\n\t\t<rect x='26' y='23' rx='5' ry='5' width='153' height='30' />\r\n\t\t<circle cx='1316' cy='88' r='11' />\r\n\t\t<rect x='1337' y='94' rx='0' ry='0' width='134' height='3' />\r\n\t\t<circle cx='77' cy='96' r='11' />\r\n\t</ContentLoader>\r\n);\r\n\r\nDataTable.metadata = {\r\n\tname: 'Mohd Arif Un',\r\n\tgithub: 'arif-un',\r\n\tdescription: 'Data Table skeleton',\r\n\tfilename: 'DataTable'\r\n};\r\n\r\nexport default DataTable;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport {\r\n  Table,\r\n  notification,\r\n  Space,\r\n  Tag,\r\n  Button,\r\n  Input,\r\n  Tooltip,\r\n  Popconfirm,\r\n} from 'antd';\r\nimport {\r\n  PlusOutlined,\r\n  EditOutlined,\r\n  DeleteOutlined,\r\n  CheckCircleOutlined,\r\n} from '@ant-design/icons';\r\n\r\nimport { AddNewCategory, QuickEdit } from '../category';\r\nimport CategoryNewQuickEdit from './CategoryNewQuickEdit';\r\n\r\n/// import hooks\r\nimport { useFetch, useHandleFetch } from '../../hooks';\r\n\r\n// import components\r\nimport { DataTableSkeleton } from '../../components/Placeholders';\r\nimport Empty from '../../components/Empty';\r\n\r\n// import state\r\nimport { isAccess } from '../../utils';\r\nimport { connect } from 'react-redux';\r\n\r\nconst { Column, ColumnGroup } = Table;\r\nconst { Search } = Input;\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n  notification.success({\r\n    message: message || 'Category Created',\r\n    description: '',\r\n    icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n  });\r\n};\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n  notification.success({\r\n    message: message || 'Something Went Wrong',\r\n    description: '',\r\n    icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n  });\r\n};\r\n\r\ninterface myTableProps {\r\n  data: any;\r\n  setcategoryList?: any;\r\n  history?: any;\r\n  roles?: any;\r\n  data2?:any; \r\n}\r\n\r\nconst MyTable = ({ data, setcategoryList, history, roles,data2 }: myTableProps) => {\r\n  const [visible, setvisible] = useState(false);\r\n  const [activeCategoryForEdit, setactiveCategoryForEdit] = useState(false);\r\n  const [deleteCategoryState, handleDeleteCategoryFetch] = useHandleFetch(\r\n    {},\r\n    'deleteCategory'\r\n  );\r\n  // console.log('activeCategoryForEdit',activeCategoryForEdit);\r\n\r\n  const handleDeleteCategory = async (id) => {\r\n    const deleteCategoryRes = await handleDeleteCategoryFetch({\r\n      urlOptions: {\r\n        placeHolders: {\r\n          id,\r\n        },\r\n      },\r\n    });\r\n\r\n    // @ts-ignore\r\n    if (deleteCategoryRes && deleteCategoryRes.status === 'ok') {\r\n      openSuccessNotification('Deleted Category');\r\n      const newCategoryList = data.filter((item) => item.id !== id);\r\n      setcategoryList(newCategoryList);\r\n    }\r\n  };\r\n\r\n  const getCover = (record: any) => {\r\n    if (record.cover) {\r\n      return record.cover;\r\n    } else if (!record.cover && record.icon) {\r\n      return record.icon;\r\n    } else return '';\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Table\r\n        // expandable={{\r\n        //     expandedRowRender: record => <p style={{ margin: 0 }}>{record.name}</p>,\r\n        //     rowExpandable: record => record.name !== 'Not Expandable',\r\n        //   }}\r\n        // bordered={true}\r\n        size='small'\r\n        // pagination={false}\r\n        dataSource={data}\r\n      >\r\n        <Column\r\n          title=''\r\n          dataIndex='cover'\r\n          key='id'\r\n          width={'80px'}\r\n          className='classnameofthecolumn'\r\n          render={(cover, record: any) => (\r\n            <>\r\n              <div\r\n                className='listCoverImage'\r\n                onClick={() => {\r\n                  history.push(`/admin/category/${record.id}`);\r\n                  setactiveCategoryForEdit(record);\r\n                }}\r\n              >\r\n                <img src={getCover(record)} alt='' />\r\n              </div>\r\n            </>\r\n          )}\r\n        />\r\n        <Column\r\n          title='Name'\r\n          dataIndex='name'\r\n          key='id'\r\n          className='classnameofthecolumn'\r\n          render={(text, record: any) => (\r\n            <>\r\n              <h4\r\n                onClick={() => {\r\n                  history.push(`/admin/category/${record.id}`);\r\n                  // setcategoryDetailVisible(true);\r\n                  setactiveCategoryForEdit(record);\r\n                }}\r\n                style={{\r\n                  fontWeight: 400,\r\n                  color: '#555',\r\n                  cursor: 'pointer',\r\n                }}\r\n              >\r\n                {text}\r\n              </h4>\r\n            </>\r\n          )}\r\n        />\r\n\r\n        <Column\r\n          title='Sub Cateogory'\r\n          dataIndex='subCount'\r\n          key='id'\r\n          className='classnameofthecolumn'\r\n        />\r\n\r\n        <Column\r\n          title='Product'\r\n          dataIndex='productCount'\r\n          key='id'\r\n          className='classnameofthecolumn'\r\n        />\r\n\r\n        {/* <Column \r\n          \r\n          className='classnameofthecolumn'\r\n\r\n          title=\"Product\" dataIndex=\"product\" key=\"product\" /> */}\r\n\r\n        {/* <Column \r\n          \r\n          className='classnameofthecolumn'\r\n\r\n          title=\"Sub Category\" dataIndex=\"subCategory\" key=\"subCategory\" /> */}\r\n\r\n        {/* <Column\r\n          title=\"Tags\"\r\n          dataIndex=\"tags\"\r\n          key=\"tags\"\r\n          render={tags => (\r\n            <>\r\n              {tags.map((tag : any) => (\r\n                <Tag color=\"blue\" key={tag}>\r\n                  {tag}\r\n                </Tag>\r\n              ))}\r\n            </>\r\n          )}\r\n        /> */}\r\n\r\n        {isAccess('postCatalogue', roles) && (\r\n          <Column\r\n            className='classnameofthecolumn'\r\n            title=''\r\n            key='action'\r\n            align='right'\r\n            render={(text, record: any) => (\r\n              <Space size='middle'>\r\n                <a href='##'>\r\n                  <Tooltip placement='top' title='Edit Category'>\r\n                    <span\r\n                      className='iconSize'\r\n                      onClick={() => {\r\n                        setvisible(true);\r\n                        setactiveCategoryForEdit(record);\r\n                      }}\r\n                    >\r\n                      <EditOutlined />\r\n                    </span>\r\n                  </Tooltip>\r\n                </a>\r\n                <Popconfirm\r\n                  onConfirm={() => handleDeleteCategory(record.id)}\r\n                  title='Are you sure？'\r\n                  okText='Yes'\r\n                  cancelText='No'\r\n                >\r\n                  <span className='iconSize iconSize-danger'>\r\n                    <DeleteOutlined />\r\n                  </span>\r\n                </Popconfirm>\r\n              </Space>\r\n            )}\r\n          />\r\n        )}\r\n      </Table>\r\n\r\n      {activeCategoryForEdit && (\r\n        <CategoryNewQuickEdit\r\n          categoryDetailData={activeCategoryForEdit}\r\n          setcategoryList={setcategoryList}\r\n          categoryList={data}\r\n          setAddNewCategoryVisible={setvisible}\r\n          addNewCategoryVisible={visible}\r\n          categoryList2={data2}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\ninterface Props {\r\n  history: any;\r\n  roles?: any;\r\n}\r\n\r\nconst CategoryList = ({ history, roles }: Props) => {\r\n  const [categoryState, handleCategoryListFetch] = useHandleFetch(\r\n    {},\r\n    'categoryList'\r\n  );\r\n  const [categoryList, setcategoryList] = useState([]);\r\n  const [categoryList2, setcategoryList2] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const setCategories = async () => {\r\n      const categories = await handleCategoryListFetch({\r\n        urlOptions: {\r\n          params: {\r\n            isSubCategory: true,\r\n            productCountValue: true,\r\n            sortItem: 'added',\r\n            sortOrderValue: '-1',\r\n            limitNumber: 5000000,\r\n          },\r\n        },\r\n      });\r\n      // @ts-ignore\r\n      setcategoryList(categories);\r\n      // @ts-ignore\r\n      setcategoryList2(categories)\r\n    };\r\n    setCategories();\r\n  }, []);\r\n\r\n  const [addNewCategoryVisible, setAddNewCategoryVisible] = useState(false);\r\n\r\n  const handleOkAddNewCategory = (e: any) => {\r\n    setAddNewCategoryVisible(false);\r\n  };\r\n\r\n  const handleCancelAddNewCategory = (e: any) => {\r\n    setAddNewCategoryVisible(false);\r\n  };\r\n\r\n  // console.log('categoryState',categoryState);\r\n\r\n  const handleSearch = (value) => {\r\n    if (categoryState.data.length > 0) {\r\n      const newCategoryList = categoryState.data.filter((item) =>\r\n        item.name.toLowerCase().includes(value.toLowerCase())\r\n      );\r\n      setcategoryList(newCategoryList);\r\n    }\r\n  };\r\n\r\n  console.log('categoryList22', categoryList);\r\n\r\n  return (\r\n    <>\r\n      {/* <h2 className='containerPageTitle'>\r\n      Categories\r\n    </h2> */}\r\n      <div className='categoryListContainer'>\r\n        <div className='categoryListContainer__header'>\r\n          <div className='categoryListContainer__header-searchBar'>\r\n            <h2 className='categoryListContainer__header-title'>Categories</h2>\r\n\r\n            <Search\r\n              enterButton={false}\r\n              className='searchbarClassName'\r\n              placeholder='search categories..'\r\n              onChange={(e) => handleSearch(e.target.value)}\r\n            />\r\n          </div>\r\n\r\n          {isAccess('postCatalogue', roles) && (\r\n            <Button\r\n              // type=\"primary\"\r\n              className='btnPrimaryClassNameoutline'\r\n              icon={<PlusOutlined />}\r\n              onClick={() => {\r\n                setAddNewCategoryVisible(true)\r\n              }}\r\n            >\r\n              Add New\r\n            </Button>\r\n          )}\r\n        </div>\r\n\r\n        <div className='categoryListContainer__afterHeader'>\r\n          {/* <Search\r\n      placeholder=\"search categories..\"\r\n      size=\"large\"\r\n      onSearch={value => console.log(value)}\r\n      style={{ width: 300 }}\r\n    /> */}\r\n        </div>\r\n\r\n        <div className='categoryListContainer__categoryList'>\r\n          {categoryState.done && categoryList.length > 0 && (\r\n            <MyTable\r\n              roles={roles}\r\n              history={history}\r\n              setcategoryList={setcategoryList}\r\n              data={categoryList}\r\n              data2={categoryList2}\r\n            />\r\n          )}\r\n          {categoryState.isLoading && <DataTableSkeleton />}\r\n\r\n          {categoryState.done && !(categoryList.length > 0) && (\r\n            <div\r\n              style={{\r\n                marginTop: '50px',\r\n              }}\r\n            >\r\n              <Empty title='No Category found' />\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      {categoryState.done && (\r\n        <AddNewCategory\r\n          addNewCategoryVisible={addNewCategoryVisible}\r\n          setAddNewCategoryVisible={setAddNewCategoryVisible}\r\n          categoryList={categoryList}\r\n          setcategoryList={setcategoryList}\r\n          categoryList2={categoryList2}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  roles: state.globalState,\r\n});\r\n\r\n// @ts-ignore\r\nexport default connect(mapStateToProps, null)(withRouter(CategoryList));\r\n","// @ts-nocheck\r\nimport React, { useState, useEffect } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\nimport { useHandleFetch } from '../../hooks';\r\n// import third party ui lib\r\nimport {\r\n  Switch,\r\n  Select,\r\n  notification,\r\n  Modal,\r\n  Tooltip,\r\n  Upload,\r\n  message,\r\n} from 'antd';\r\n\r\nimport {\r\n  DeleteOutlined,\r\n  FileAddOutlined,\r\n  FileImageFilled,\r\n  PlusOutlined,\r\n  CheckCircleOutlined,\r\n  CloseOutlined,\r\n  CheckOutlined,\r\n  InfoCircleOutlined,\r\n  LoadingOutlined,\r\n} from '@ant-design/icons';\r\n\r\n// import ReactQuill from 'react-quill';\r\n// import 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport MediaLibrary from '../../components/MediaLibrary';\r\nimport MetaTags from './MetaTags';\r\n\r\nconst validationSchema = Yup.object().shape({\r\n  // name: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n  notification.success({\r\n    message: message || 'Category Updated',\r\n    description: '',\r\n    icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n  });\r\n};\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n  notification.error({\r\n    message: message || 'Something Went Wrong',\r\n    description: '',\r\n    icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n  });\r\n};\r\n\r\nconst initialValues = {\r\n  name: '',\r\n  bnName: '',\r\n  description: '',\r\n  bnDescription: '',\r\n  metaTitle: '',\r\n  bnMetaTitle: '',\r\n  metaDescription: '',\r\n  bnMetaDescription: '',\r\n  metaTags: '',\r\n  bnMetaTags: '',\r\n  image: [],\r\n  url: '',\r\n  cover: '',\r\n  displayOrder: null,\r\n};\r\n\r\nconst { Option } = Select;\r\n\r\ninterface Props {\r\n  addNewCategoryVisible: any;\r\n  setAddNewCategoryVisible: any;\r\n  categoryList?: any;\r\n  setcategoryList?: any;\r\n  categoryList2?:any; \r\n}\r\n\r\nconst AddNewCategory = ({\r\n  addNewCategoryVisible,\r\n  setAddNewCategoryVisible,\r\n  categoryList,\r\n  setcategoryList,\r\n  categoryList2\r\n}: Props) => {\r\n  const [addCategoryState, handleAddCategoryFetch] = useHandleFetch(\r\n    {},\r\n    'addCategory',\r\n    'form'\r\n  );\r\n  const [visible, setvisible] = useState(false);\r\n  const [myImages, setmyImages] = useState(false);\r\n  const [myThumbnailImage, setmyThumbnailImage] = useState(false);\r\n  const [isparentCategoryChecked, setisparentcategoryChecked] = useState(true);\r\n  const [isModalOpenForThumbnail, setisModalOpenForThumbnail] = useState(false);\r\n  const [isModalOpenForImages, setisModalOpenForImages] = useState(false);\r\n  const [coverImageId, setCoverImageId] = useState('');\r\n  const [selectedParentId, setselectedParentId] = useState('');\r\n  const [imageUrl, setImageUrl] = useState('');\r\n  const [thumbnailImageUrl, setThumbnailImageUrl] = useState('');\r\n  const [loadingThumnail, setLoadingThumbnail] = useState(false);\r\n  const [imageFile, setImagefile] = useState('');\r\n  const [thumbnailImageFile, setThumbnailImagefile] = useState('');\r\n  const [tags, setTags] = useState([]);\r\n  const [bnTags, setBnTags] = useState([]);\r\n\r\n  const handleSubmit = async (values: any, actions: any) => {\r\n    // @ts-ignore\r\n    const imagesIds = myImages\r\n      ? myImages.map((image) => {\r\n          return image.id;\r\n        })\r\n      : [];\r\n\r\n    const formData = new FormData();\r\n\r\n    const bn = {\r\n      metaTitle: values.bnMetaTitle,\r\n      metaDescription: values.bnMetaDescription,\r\n      metaTags: bnTags.join(','),\r\n      name: values.bnName?.trim(),\r\n      description: values.bnDescription,\r\n    };\r\n\r\n    formData.append('name', values.name?.trim());\r\n    formData.append('description', values.description);\r\n    formData.append('image', JSON.stringify(imagesIds));\r\n    formData.append('cover', coverImageId || imagesIds[0] ? imagesIds[0] : '');\r\n    formData.append('parent', selectedParentId);\r\n    formData.append('icon', imageFile);\r\n    formData.append('thumbnail', thumbnailImageFile);\r\n    formData.append('metaTitle', values.metaTitle);\r\n    formData.append('displayOrder', values.displayOrder);\r\n    formData.append('metaDescription', values.metaDescription);\r\n    formData.append('metaTags', tags);\r\n\r\n    const bnData = JSON.stringify(bn);\r\n    const bnFormData = new FormData();\r\n    bnFormData.append('bn', bnData);\r\n\r\n    formData.append('bn', bnFormData.get('bn'));\r\n\r\n    console.log('addcategoryREsBody', {\r\n      ...formData,\r\n      // ...bnFormData\r\n    });\r\n\r\n    const addCategoryRes = await handleAddCategoryFetch({\r\n      body: formData,\r\n    });\r\n\r\n    // @ts-ignore\r\n    if (addCategoryRes && addCategoryRes.status === 'ok') {\r\n      openSuccessNotification('Category Created!');\r\n      setAddNewCategoryVisible(false);\r\n\r\n      setcategoryList([\r\n        {\r\n          id: addCategoryRes['_id'] || '',\r\n          key: addCategoryRes['_id'] || '',\r\n          name: addCategoryRes['name'] || '',\r\n          description: addCategoryRes['description'] || '',\r\n          cover: addCategoryRes['cover'] || '',\r\n          // @ts-ignore\r\n          ...addCategoryRes,\r\n        },\r\n        ...categoryList,\r\n      ]);\r\n\r\n      actions.resetForm();\r\n      // @ts-ignore\r\n      setmyImages([]);\r\n      setCoverImageId('');\r\n      setselectedParentId('');\r\n      setisparentcategoryChecked(true);\r\n      setImageUrl('');\r\n      setThumbnailImageUrl('');\r\n    } else {\r\n      openErrorNotification();\r\n    }\r\n\r\n    actions.setSubmitting(false);\r\n  };\r\n\r\n  console.log('addCategoryState', addCategoryState);\r\n\r\n  useEffect(() => {\r\n    if (!addCategoryState['isLoading']) {\r\n      const error = addCategoryState['error'];\r\n      if (error['isError'] && Object.keys(error['error']).length > 0) {\r\n        const errors =\r\n          Object.values(error['error']).length > 0\r\n            ? Object.values(error['error'])\r\n            : [];\r\n        errors.forEach((err, i) => {\r\n          if (typeof err === 'string') {\r\n            openErrorNotification(err);\r\n          } else if (typeof err === 'object') {\r\n            if (err && Object.keys(err).length > 0) {\r\n              const errs = Object.values(err);\r\n              errs.forEach((err) => {\r\n                openErrorNotification(err);\r\n              });\r\n            }\r\n          }\r\n        });\r\n      }\r\n    }\r\n  }, [addCategoryState]);\r\n\r\n  const onSwitchChange = (checked: any) => {\r\n    setisparentcategoryChecked(checked);\r\n  };\r\n\r\n  const handleCancel = (e: any) => {\r\n    setAddNewCategoryVisible(false);\r\n  };\r\n\r\n  const getisSubmitButtonDisabled = (values, isValid) => {\r\n    if (!values.name || !isValid) {\r\n      return true;\r\n    }\r\n    return false;\r\n  };\r\n\r\n  const handleImagesDelete = (id) => {\r\n    // @ts-ignore\r\n    const newImages =\r\n      myImages &&\r\n      myImages.filter((image) => {\r\n        return image.id !== id;\r\n      });\r\n\r\n    setmyImages(newImages);\r\n  };\r\n\r\n  const handleThumbnailImageDelete = (id) => {\r\n    // @ts-ignore\r\n    const newImages =\r\n      myThumbnailImage &&\r\n      myThumbnailImage.filter((image) => {\r\n        return image.id !== id;\r\n      });\r\n\r\n    if (newImages.length > 0) {\r\n      setmyThumbnailImage(newImages);\r\n    } else setmyThumbnailImage(false);\r\n  };\r\n\r\n  const onChangeSelect = (value) => {\r\n    setselectedParentId(value);\r\n  };\r\n\r\n  function getBase64(img, callback) {\r\n    const reader = new FileReader();\r\n    reader.addEventListener('load', () => callback(reader.result));\r\n    reader.readAsDataURL(img);\r\n  }\r\n\r\n  function beforeUpload(file) {\r\n    const isJpgOrPng = file.type === 'image/jpeg' || file.type === 'image/png';\r\n    if (!isJpgOrPng) {\r\n      message.error('You can only upload JPG/PNG file!');\r\n    }\r\n    const isLt2M = file.size / 1024 / 1024 < 2;\r\n    if (!isLt2M) {\r\n      message.error('Image must smaller than 2MB!');\r\n    }\r\n\r\n    getBase64(file, (imageUrl) => {\r\n      setImageUrl(imageUrl);\r\n      setImagefile(file);\r\n      setLoadingThumbnail(false);\r\n    });\r\n\r\n    return false;\r\n  }\r\n\r\n  function beforeThumbnailUpload(file) {\r\n    const isJpgOrPng = file.type === 'image/jpeg' || file.type === 'image/png';\r\n    if (!isJpgOrPng) {\r\n      message.error('You can only upload JPG/PNG file!');\r\n    }\r\n    const isLt2M = file.size / 1024 / 1024 < 2;\r\n    if (!isLt2M) {\r\n      message.error('Image must smaller than 2MB!');\r\n    }\r\n\r\n    getBase64(file, (imageUrl) => {\r\n      setThumbnailImageUrl(imageUrl);\r\n      setThumbnailImagefile(file); \r\n      setLoadingThumbnail(false);\r\n    });\r\n\r\n    return false;\r\n  }\r\n\r\n\r\n  \r\n\r\n  const uploadButton = (\r\n    <div>\r\n      {loadingThumnail ? <LoadingOutlined /> : <PlusOutlined />}\r\n      <div className='ant-upload-text'>Upload</div>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <Formik\r\n      onSubmit={(values, actions) => handleSubmit(values, actions)}\r\n      validationSchema={validationSchema}\r\n      validateOnBlur={false}\r\n      enableReinitialize={true}\r\n      initialValues={{ ...initialValues }}\r\n    >\r\n      {({\r\n        handleChange,\r\n        values,\r\n        handleSubmit,\r\n        errors,\r\n        isValid,\r\n        isSubmitting,\r\n        touched,\r\n        handleBlur,\r\n        setFieldTouched,\r\n        handleReset,\r\n      }) => (\r\n        <>\r\n          <Modal\r\n            style={{\r\n              top: '40px',\r\n            }}\r\n            title='Add New Category'\r\n            visible={addNewCategoryVisible}\r\n            onOk={(e: any) => handleSubmit(e)}\r\n            onCancel={handleCancel}\r\n            okText='Create'\r\n            okButtonProps={{\r\n              loading: isSubmitting,\r\n              htmlType: 'submit',\r\n            }}\r\n          >\r\n            <Input\r\n              label='Name *'\r\n              value={values.name}\r\n              placeHolder={''}\r\n              name='name'\r\n              isError={\r\n                (touched.name && errors.name) ||\r\n                (!isSubmitting && addCategoryState.error['error']['name'])\r\n              }\r\n              errorString={\r\n                (touched.name && errors.name) ||\r\n                (!isSubmitting && addCategoryState.error['error']['name'])\r\n              }\r\n              onChange={(e: any) => {\r\n                handleChange(e);\r\n                setFieldTouched('name');\r\n              }}\r\n            />\r\n\r\n            <Input\r\n              label='BN Name'\r\n              value={values.bnName}\r\n              placeHolder={''}\r\n              name='bnName'\r\n              isError={\r\n                (touched.bnName && errors.bnName) ||\r\n                (!isSubmitting && addCategoryState.error['error']['bnName'])\r\n              }\r\n              errorString={\r\n                (touched.bnName && errors.bnName) ||\r\n                (!isSubmitting && addCategoryState.error['error']['bnName'])\r\n              }\r\n              onChange={(e: any) => {\r\n                handleChange(e);\r\n                setFieldTouched('bnName');\r\n              }}\r\n            />\r\n\r\n            <TextArea\r\n              label='Description'\r\n              value={values.description}\r\n              placeholder={'This category...'}\r\n              name='description'\r\n              isError={\r\n                (touched.description && errors.description) ||\r\n                (!isSubmitting &&\r\n                  addCategoryState.error['error']['description'])\r\n              }\r\n              errorString={\r\n                (touched.description && errors.description) ||\r\n                (!isSubmitting &&\r\n                  addCategoryState.error['error']['description'])\r\n              }\r\n              onChange={(e: any) => {\r\n                handleChange(e);\r\n                setFieldTouched('description');\r\n              }}\r\n            />\r\n\r\n            <TextArea\r\n              label='BN Description'\r\n              value={values.bnDescription}\r\n              placeholder={'এই ক্যাটাগড়ি...'}\r\n              name='bnDescription'\r\n              isError={\r\n                (touched.bnDescription && errors.bnDescription) ||\r\n                (!isSubmitting &&\r\n                  addCategoryState.error['error']['bnDescription'])\r\n              }\r\n              errorString={\r\n                (touched.bnDescription && errors.bnDescription) ||\r\n                (!isSubmitting &&\r\n                  addCategoryState.error['error']['bnDescription'])\r\n              }\r\n              onChange={(e: any) => {\r\n                handleChange(e);\r\n                setFieldTouched('bnDescription');\r\n              }}\r\n            />\r\n\r\n            <Input\r\n              label='Display Order'\r\n              value={values.displayOrder}\r\n              placeHolder={'1,3,7'}\r\n              name='displayOrder'\r\n              type='number'\r\n              isError={\r\n                (touched.displayOrder && errors.displayOrder) ||\r\n                (!isSubmitting &&\r\n                  addCategoryState.error['error']['displayOrder'])\r\n              }\r\n              errorString={\r\n                (touched.displayOrder && errors.displayOrder) ||\r\n                (!isSubmitting &&\r\n                  addCategoryState.error['error']['displayOrder'])\r\n              }\r\n              onChange={(e: any) => {\r\n                handleChange(e);\r\n                setFieldTouched('displayOrder');\r\n              }}\r\n            />\r\n\r\n            <div\r\n              style={{\r\n                marginTop: '25px',\r\n              }}\r\n            ></div>\r\n\r\n            <div className='switchLabelContainer'>\r\n              <Switch\r\n                checked={isparentCategoryChecked}\r\n                defaultChecked\r\n                onChange={onSwitchChange}\r\n              />\r\n              <div className='switchLabelContainer-textContainer'>\r\n                <h5>Top level Category</h5>\r\n                <h5 className='switchLabelContainer-desc'>\r\n                  Disable to select a Parent Category\r\n                </h5>\r\n              </div>\r\n            </div>\r\n\r\n            {!isparentCategoryChecked && (\r\n              <>\r\n                <h3 className='inputFieldLabel'>Parent Category</h3>\r\n                <Select\r\n                  showSearch\r\n                  style={{ width: 300 }}\r\n                  placeholder='Select a Parent Category'\r\n                  optionFilterProp='children'\r\n                  onChange={onChangeSelect}\r\n                  // onFocus={onFocus}\r\n                  // onBlur={onBlur}\r\n                  // onSearch={onSearch}\r\n                  filterOption={(input, option: any) =>\r\n                    option.children\r\n                      .toLowerCase()\r\n                      .indexOf(input.toLowerCase()) >= 0\r\n                  }\r\n                >\r\n                  {categoryList2.length > 0 &&\r\n                    categoryList2.map((category) => {\r\n                      return (\r\n                        <Option value={category.id}>{category.name}</Option>\r\n                      );\r\n                    })}\r\n                </Select>\r\n              </>\r\n            )}\r\n\r\n            <div\r\n              style={{\r\n                marginTop: '20px',\r\n              }}\r\n            />\r\n\r\n            <div className='addproductSection-left-header'>\r\n              <h3 className='inputFieldLabel'>Icon </h3>\r\n              <Tooltip\r\n                placement='left'\r\n                title={'Add Icon image for this category'}\r\n              >\r\n                <a href='###'>\r\n                  <InfoCircleOutlined />\r\n                </a>\r\n              </Tooltip>\r\n            </div>\r\n\r\n            <Upload\r\n              style={{\r\n                borderRadius: '8px',\r\n              }}\r\n              name='avatar'\r\n              listType='picture-card'\r\n              className='avatar-uploader'\r\n              showUploadList={false}\r\n              beforeUpload={beforeUpload}\r\n              multiple={false}\r\n            >\r\n              {imageUrl ? (\r\n                <img src={imageUrl} alt='avatar' style={{ width: '100%' }} />\r\n              ) : (\r\n                uploadButton\r\n              )}\r\n            </Upload>\r\n\r\n            <div\r\n              style={{\r\n                marginTop: '20px',\r\n              }}\r\n            />\r\n            <div className='addproductSection-left-header'>\r\n              <h3 className='inputFieldLabel'>Thumbnail</h3>\r\n              <Tooltip\r\n                placement='left'\r\n                title={'Add thumbnail image for this category'}\r\n              >\r\n                <a href='###'>\r\n                  <InfoCircleOutlined />\r\n                </a>\r\n              </Tooltip>\r\n            </div>\r\n\r\n            <Upload\r\n              style={{\r\n                borderRadius: '8px',\r\n              }}\r\n              name='avatar'\r\n              listType='picture-card'\r\n              className='avatar-uploader'\r\n              showUploadList={false}\r\n              beforeUpload={beforeThumbnailUpload}\r\n              multiple={false}\r\n            >\r\n              {thumbnailImageUrl ? (\r\n                <img src={thumbnailImageUrl} alt='avatar' style={{ width: '100%' }} />\r\n              ) : (\r\n                uploadButton\r\n              )}\r\n            </Upload>\r\n\r\n            <div\r\n              style={{\r\n                marginTop: '10px',\r\n              }}\r\n            />\r\n\r\n            <div\r\n              className='addproductSection-left-header'\r\n              style={{\r\n                marginBottom: '-5px',\r\n              }}\r\n            >\r\n              <h3 className='inputFieldLabel'>Images</h3>\r\n              <Tooltip\r\n                placement='left'\r\n                title={\r\n                  'Click on the image to select cover image, By default 1st image is selected as cover'\r\n                }\r\n              >\r\n                <a href='###'>\r\n                  <InfoCircleOutlined />\r\n                </a>\r\n              </Tooltip>\r\n            </div>\r\n            <div className='aboutToUploadImagesContainer'>\r\n              {myImages &&\r\n                // @ts-ignore\r\n                myImages.length > 0 &&\r\n                myImages.map((image, index) => {\r\n                  return (\r\n                    <div className='aboutToUploadImagesContainer__item'>\r\n                      <div\r\n                        className='aboutToUploadImagesContainer__item-imgContainer'\r\n                        onClick={() => setCoverImageId(image.id)}\r\n                      >\r\n                        <img src={image.cover} alt={image.alt} />\r\n                      </div>\r\n\r\n                      <span\r\n                        onClick={() => handleImagesDelete(image.id)}\r\n                        className='aboutToUploadImagesContainer__item-remove'\r\n                      >\r\n                        <CloseOutlined />\r\n                      </span>\r\n\r\n                      {coverImageId === image.id ? (\r\n                        <span className='aboutToUploadImagesContainer__item-cover'>\r\n                          <CheckOutlined />\r\n                        </span>\r\n                      ) : (\r\n                        !coverImageId &&\r\n                        index === 0 && (\r\n                          <span className='aboutToUploadImagesContainer__item-cover'>\r\n                            <CheckOutlined />\r\n                          </span>\r\n                        )\r\n                      )}\r\n                    </div>\r\n                  );\r\n                })}\r\n\r\n              <Tooltip title={'Attach images'}>\r\n                <div\r\n                  onClick={() => {\r\n                    setvisible(true);\r\n                    setisModalOpenForImages(true);\r\n                    setisModalOpenForThumbnail(false);\r\n                  }}\r\n                  className='aboutToUploadImagesContainer__uploadItem'\r\n                >\r\n                  {/* <FileAddOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FileImageTwoTone />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FileImageOutlined /> */}\r\n                  <FileImageFilled />\r\n                  {/* <h5>\r\n\t\t\t\t\t\t\t\t\t\t\t\t     Select From Library\r\n\t\t\t\t\t\t\t\t\t\t\t<     /h5> */}\r\n                  <span className='aboutToUploadImagesContainer__uploadItem-plus'>\r\n                    <PlusOutlined />\r\n                  </span>\r\n                </div>\r\n              </Tooltip>\r\n            </div>\r\n\r\n            <Input\r\n              label='Meta title'\r\n              value={values.metaTitle}\r\n              placeHolder={'...'}\r\n              name='metaTitle'\r\n              isError={\r\n                (touched.metaTitle && errors.metaTitle) ||\r\n                (!isSubmitting && addCategoryState.error['error']['metaTitle'])\r\n              }\r\n              errorString={\r\n                (touched.metaTitle && errors.metaTitle) ||\r\n                (!isSubmitting && addCategoryState.error['error']['metaTitle'])\r\n              }\r\n              onChange={(e: any) => {\r\n                handleChange(e);\r\n                setFieldTouched('metaTitle');\r\n              }}\r\n            />\r\n\r\n            <Input\r\n              label='BN Meta title'\r\n              value={values.bnMetaTitle}\r\n              placeHolder={'...'}\r\n              name='bnMetaTitle'\r\n              isError={\r\n                (touched.bnMetaTitle && errors.bnMetaTitle) ||\r\n                (!isSubmitting &&\r\n                  addCategoryState.error['error']['bnMetaTitle'])\r\n              }\r\n              errorString={\r\n                (touched.bnMetaTitle && errors.bnMetaTitle) ||\r\n                (!isSubmitting &&\r\n                  addCategoryState.error['error']['bnMetaTitle'])\r\n              }\r\n              onChange={(e: any) => {\r\n                handleChange(e);\r\n                setFieldTouched('bnMetaTitle');\r\n              }}\r\n            />\r\n\r\n            <TextArea\r\n              label='Meta description'\r\n              value={values.metaDescription}\r\n              placeholder={'meta...'}\r\n              name='metaDescription'\r\n              isError={\r\n                (touched.metaDescription && errors.metaDescription) ||\r\n                (!isSubmitting &&\r\n                  addCategoryState.error['error']['metaDescription'])\r\n              }\r\n              errorString={\r\n                (touched.metaDescription && errors.metaDescription) ||\r\n                (!isSubmitting &&\r\n                  addCategoryState.error['error']['metaDescription'])\r\n              }\r\n              onChange={(e: any) => {\r\n                handleChange(e);\r\n                setFieldTouched('metaDescription');\r\n              }}\r\n            />\r\n\r\n            <TextArea\r\n              label='BN Meta Description'\r\n              value={values.bnMetaDescription}\r\n              placeholder={'এইয় মেট...'}\r\n              name='bnMetaDescription'\r\n              isError={\r\n                (touched.bnMetaDescription && errors.bnMetaDescription) ||\r\n                (!isSubmitting &&\r\n                  addCategoryState.error['error']['bnMetaDescription'])\r\n              }\r\n              errorString={\r\n                (touched.bnMetaDescription && errors.bnMetaDescription) ||\r\n                (!isSubmitting &&\r\n                  addCategoryState.error['error']['bnMetaDescription'])\r\n              }\r\n              onChange={(e: any) => {\r\n                handleChange(e);\r\n                setFieldTouched('bnMetaDescription');\r\n              }}\r\n            />\r\n\r\n            <h3 className='inputFieldLabel'>Meta Tags</h3>\r\n\r\n            <MetaTags\r\n              // @ts-ignore\r\n              setTags={setTags}\r\n              tags={tags}\r\n            />\r\n\r\n            <div\r\n              style={{\r\n                marginTop: '15px',\r\n              }}\r\n            ></div>\r\n\r\n            <h3 className='inputFieldLabel'>BN Meta Tags</h3>\r\n\r\n            <MetaTags\r\n              // @ts-ignore\r\n              setTags={setBnTags}\r\n              tags={bnTags}\r\n            />\r\n          </Modal>\r\n\r\n          <MediaLibrary\r\n            setvisible={setvisible}\r\n            visible={visible}\r\n            setmyImages={setmyImages}\r\n            myImages={myImages}\r\n            setmyThumbnailImage={setmyThumbnailImage}\r\n            isModalOpenForThumbnail={isModalOpenForThumbnail}\r\n            isModalOpenForImages={isModalOpenForImages}\r\n          />\r\n        </>\r\n      )}\r\n    </Formik>\r\n  );\r\n};\r\n\r\nexport default AddNewCategory;\r\n","import React, { useState } from 'react';\r\nimport { Modal, notification } from 'antd';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport { useHandleFetch } from '../../hooks';\r\n\r\nimport { CheckCircleOutlined, PlusOutlined, EditOutlined, DeleteOutlined, EditFilled } from '@ant-design/icons';\r\n\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n\tname: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\n\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t\tmessage: message || 'Category Updated',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t\tmessage: message || 'Something Went Wrong',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n};\r\n\r\n\r\n\r\n\r\n\r\ninterface Props {\r\n\tcategory: any;\r\n\tsetvisible: any;\r\n\tvisible: any;\r\n\tsetcategoryList?: any;\r\n\tcategoryList?: any;\r\n}\r\n\r\nconst QuickEdit = ({ category, setvisible, visible, categoryList, setcategoryList }: Props) => {\r\n\tconst [updateCategoryState, handleUpdateCategoryFetch] = useHandleFetch({}, 'updateCategory');\r\n\r\n\tconst handleSubmit = async (values: any, actions: any) => {\r\n\t\tconst updateCategoryRes = await handleUpdateCategoryFetch({\r\n\t\t\turlOptions: {\r\n\t\t\t\tplaceHolders: {\r\n\t\t\t\t\tid: values.id,\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tbody: {\r\n\t\t\t\tname: values.name,\r\n\t\t\t\tdescription: values.description,\r\n\t\t\t},\r\n\t\t});\r\n\r\n\t\t//   console.log('updateCategoryRes',updateCategoryRes); \r\n\r\n\t\t// @ts-ignore\r\n\t\tif (updateCategoryRes && updateCategoryRes.status === 'ok') {\r\n\t\t\topenSuccessNotification();\r\n\r\n\t\t\tconst positionInTag = () => {\r\n\t\t\t\treturn categoryList.map(item => item.id).indexOf(category.id);\r\n\t\t\t}\r\n\r\n\t\t\tconst index = positionInTag();\r\n\r\n\t\t\t// @ts-ignore\r\n\t\t\tconst updatedItem = Object.assign({}, categoryList[index], { ...updateCategoryRes });\r\n\t\t\tconst updateCategoryList = [...categoryList.slice(0, index), updatedItem, ...categoryList.slice(index + 1)];\r\n\t\t\tsetcategoryList(updateCategoryList);\r\n\r\n\t\t}\r\n\t\telse {\r\n\t\t\topenErrorNotification();\r\n\t\t}\r\n\r\n\t\tactions.setSubmitting(false);\r\n\t\tsetvisible(false)\r\n\r\n\t};\r\n\r\n\r\n\tconst handleCancel = (e: any) => {\r\n\t\tsetvisible(false);\r\n\t};\r\n\r\n\r\n\r\n\tconst getisSubmitButtonDisabled = (values, isValid) => {\r\n\t\tif (!values.name || !isValid) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\treturn (\r\n\t\t<Formik\r\n\t\t\tonSubmit={(values, actions) => handleSubmit(values, actions)}\r\n\t\t\tvalidationSchema={validationSchema}\r\n\t\t\tvalidateOnBlur={false}\r\n\t\t\tenableReinitialize={true}\r\n\t\t\tinitialValues={\r\n\t\t\t\t{ ...category }\r\n\t\t\t}\r\n\t\t>\r\n\t\t\t{({\r\n\t\t\t\thandleChange,\r\n\t\t\t\tvalues,\r\n\t\t\t\thandleSubmit,\r\n\t\t\t\terrors,\r\n\t\t\t\tisValid,\r\n\t\t\t\tisSubmitting,\r\n\t\t\t\ttouched,\r\n\t\t\t\thandleBlur,\r\n\t\t\t\tsetFieldTouched,\r\n\t\t\t\thandleReset,\r\n\t\t\t}) => (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<Modal\r\n\t\t\t\t\t\t\ttitle=\"Quick Edit\"\r\n\t\t\t\t\t\t\tvisible={visible}\r\n\t\t\t\t\t\t\tonOk={(e: any) => handleSubmit(e)}\r\n\t\t\t\t\t\t\tonCancel={handleCancel}\r\n\t\t\t\t\t\t\tokText='Update'\r\n\t\t\t\t\t\t\tokButtonProps={{\r\n\t\t\t\t\t\t\t\tloading: isSubmitting,\r\n\t\t\t\t\t\t\t\thtmlType: \"submit\",\r\n\t\t\t\t\t\t\t\tdisabled: getisSubmitButtonDisabled(values, isValid)\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\tlabel='Title'\r\n\t\t\t\t\t\t\t\tvalue={values.name}\r\n\t\t\t\t\t\t\t\tname='name'\r\n\t\t\t\t\t\t\t\tisError={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateCategoryState.error['error']['name'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateCategoryState.error['error']['name'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('name');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\tlabel='Description'\r\n\t\t\t\t\t\t\t\tvalue={values.description}\r\n\t\t\t\t\t\t\t\tname='description'\r\n\t\t\t\t\t\t\t\tisError={(touched.description && errors.description) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateCategoryState.error['error']['description'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.description && errors.description) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateCategoryState.error['error']['description'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('description');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</Modal>\r\n\r\n\t\t\t\t\t</>\r\n\t\t\t\t)}\r\n\t\t</Formik>\r\n\t);\r\n};\r\n\r\n\r\nexport default QuickEdit;\r\n","// @ts-nocheck\r\nimport React, { useState, useEffect } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\nimport { useHandleFetch } from '../../hooks';\r\n// import third party ui lib\r\nimport {\r\n  Switch,\r\n  Select,\r\n  notification,\r\n  Modal,\r\n  Tooltip,\r\n  Upload,\r\n  message,\r\n  Button,\r\n  Spin,\r\n} from 'antd';\r\n\r\nimport {\r\n  DeleteOutlined,\r\n  FileAddOutlined,\r\n  FileImageFilled,\r\n  PlusOutlined,\r\n  CheckCircleOutlined,\r\n  CloseOutlined,\r\n  CheckOutlined,\r\n  InfoCircleOutlined,\r\n  LoadingOutlined,\r\n} from '@ant-design/icons';\r\n\r\n// import ReactQuill from 'react-quill';\r\n// import 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport MediaLibrary from '../../components/MediaLibrary';\r\nimport MetaTags from './MetaTags';\r\n\r\nconst validationSchema = Yup.object().shape({\r\n  //   name: Yup.string()\r\n  //     .label('Name')\r\n  //     .required('Name is required')\r\n  //     .min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n  notification.success({\r\n    message: message || 'Category Updated',\r\n    description: '',\r\n    icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n  });\r\n};\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n  notification.error({\r\n    message: message || 'Something Went Wrong',\r\n    description: '',\r\n    icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n  });\r\n};\r\n\r\nconst initialValues = {\r\n  name: '',\r\n  bnName: '',\r\n  description: '',\r\n  bnDescription: '',\r\n  metaTitle: '',\r\n  bnMetaTitle: '',\r\n  metaDescription: '',\r\n  bnMetaDescription: '',\r\n  metaTags: '',\r\n  bnMetaTags: '',\r\n  image: [],\r\n  url: '',\r\n  cover: '',\r\n  displayOrder: null,\r\n};\r\n\r\nconst { Option } = Select;\r\n\r\ninterface Props {\r\n  addNewCategoryVisible: any;\r\n  setAddNewCategoryVisible: any;\r\n  setcategoryDetailData?: any;\r\n  categoryDetailData?: any;\r\n  categoryList?: any;\r\n}\r\n\r\nconst ModalChildComponent = ({\r\n  setAddNewCategoryVisible,\r\n  categoryList,\r\n  categoryDetailData,\r\n  setcategoryDetailData,\r\n}) => {\r\n  const [addCategoryState, handleAddCategoryFetch] = useHandleFetch(\r\n    {},\r\n    'updateCategory'\r\n  );\r\n  const [categoryDetailState, handleCategoryDetailFetch] = useHandleFetch(\r\n    {},\r\n    'categoryDetail'\r\n  );\r\n\r\n  const [\r\n    updateCategoryIconState,\r\n    handleUpdateCategoryIconFetch,\r\n  ] = useHandleFetch({}, 'categoryUpdateIcon', 'form');\r\n\r\n  \r\n  const [\r\n    updateCategoryThumbnailState,\r\n    handleUpdateCategoryThumbnailFetch,\r\n  ] = useHandleFetch({}, 'categoryUpdateThumbnail', 'form');\r\n\r\n\r\n  const [visible, setvisible] = useState(false);\r\n  const [myImages, setmyImages] = useState(false);\r\n  const [myThumbnailImage, setmyThumbnailImage] = useState(false);\r\n  const [isparentCategoryChecked, setisparentcategoryChecked] = useState(true);\r\n  const [isModalOpenForThumbnail, setisModalOpenForThumbnail] = useState(false);\r\n  const [isModalOpenForImages, setisModalOpenForImages] = useState(false);\r\n  const [selectedParentId, setselectedParentId] = useState('');\r\n  const [imageUrl, setImageUrl] = useState('');\r\n  const [loadingThumnail, setLoadingThumbnail] = useState(false);\r\n  const [imageFile, setImagefile] = useState('');\r\n  const [thumbnailImageFile, setThumbnailImagefile] = useState('');\r\n  const [thumbnailImageUrl, setThumbnailImageUrl] = useState('');\r\n  const [tags, setTags] = useState([]);\r\n  const [bnTags, setBnTags] = useState([]);\r\n  const [visibleMedia, setvisibleMedia] = useState(false);\r\n  const [coverImageId, setCoverImageId] = useState('');\r\n  const [myGoddamnImages, setMyGoddamnImages] = useState([]);\r\n\r\n  const [\r\n    attachImageToItemMultipleState,\r\n    handleAttachImageToItemMultipleFetch,\r\n  ] = useHandleFetch({}, 'attachImageToItemMultiple');\r\n  const [\r\n    attachImageToItemSingleState,\r\n    handleAttachImageToItemSingleFetch,\r\n  ] = useHandleFetch({}, 'attachImageToItemSingle');\r\n  const [\r\n    detachImageFromItemMultipleState,\r\n    handleDetachImageFromItemMultipleFetch,\r\n  ] = useHandleFetch({}, 'detachImageFromItemMultiple');\r\n  const [\r\n    detachImageFromItemSingleState,\r\n    handleDetachImageFromItemSingleFetch,\r\n  ] = useHandleFetch({}, 'detachImageFromItemSingle');\r\n  const [\r\n    setImageAsThumbnailToItemState,\r\n    handleSetImageAsThumbnailToItemFetch,\r\n  ] = useHandleFetch({}, 'setImageAsThumbnailToItem');\r\n\r\n  useEffect(() => {\r\n    const getProductDetail = async () => {\r\n      await handleCategoryDetailFetch({\r\n        urlOptions: {\r\n          placeHolders: {\r\n            id: categoryDetailData.id,\r\n          },\r\n        },\r\n      });\r\n    };\r\n\r\n    getProductDetail();\r\n  }, [categoryDetailData]);\r\n\r\n  useEffect(() => {\r\n    if (\r\n      categoryDetailState.done &&\r\n      Object.keys(categoryDetailState).length > 0\r\n    ) {\r\n      const images = categoryDetailState.data.image;\r\n      let mahImages = [];\r\n\r\n      if (images && images.length > 0) {\r\n        mahImages = images;\r\n      }\r\n\r\n      if (\r\n        categoryDetailState.data.cover &&\r\n        categoryDetailState.data.cover['id']\r\n      ) {\r\n        const ixists = images.find(\r\n          (item) => item.id === categoryDetailState.data.cover['id']\r\n        );\r\n        if (!ixists) {\r\n          mahImages = [categoryDetailState.data.cover, ...mahImages];\r\n        }\r\n\r\n        setCoverImageId(categoryDetailState.data.cover['id']);\r\n      }\r\n\r\n      // @ts-ignore\r\n      setmyImages(mahImages);\r\n    }\r\n  }, [categoryDetailState.done]);\r\n\r\n  useEffect(() => {\r\n    console.log('thumnail', myImages);\r\n    // @ts-ignore\r\n    if (myImages && myImages[0] && myImages.length < 2) {\r\n      console.log('thumnail2', myImages);\r\n\r\n      if (coverImageId !== myImages[0].id) {\r\n        setCoverImageId(myImages[0].id);\r\n        handleSetImageAsThumnail(myImages[0]);\r\n      }\r\n    }\r\n  }, [myImages]);\r\n\r\n  const handleDetachSingleImage = async (id) => {\r\n    await handleDetachImageFromItemSingleFetch({\r\n      urlOptions: {\r\n        placeHolders: {\r\n          imageId: id,\r\n          collection: 'category',\r\n          itemId: categoryDetailData.id,\r\n        },\r\n      },\r\n    });\r\n  };\r\n\r\n  const handleSetImageAsThumnail = async (image) => {\r\n    const thumbnailRes = await handleSetImageAsThumbnailToItemFetch({\r\n      urlOptions: {\r\n        placeHolders: {\r\n          imageId: image.id,\r\n          collection: 'category',\r\n          itemId: categoryDetailData.id,\r\n        },\r\n      },\r\n    });\r\n\r\n    // @ts-ignore\r\n    if (thumbnailRes && thumbnailRes.status === 'ok') {\r\n      openSuccessNotification('Set as thumbnail!');\r\n    } else {\r\n      openErrorNotification(\"Couldn't set as thumbnail, Something went wrong\");\r\n    }\r\n  };\r\n\r\n  const handleImagesDelete = (id) => {\r\n    // @ts-ignore\r\n    const newImages =\r\n      myImages &&\r\n      myImages.filter((image) => {\r\n        return image.id !== id;\r\n      });\r\n\r\n    setmyImages(newImages);\r\n  };\r\n\r\n  const handleSubmit = async (values: any, actions: any) => {\r\n    // @ts-ignore\r\n    const imagesIds = myImages\r\n      ? myImages.map((image) => {\r\n          return image.id;\r\n        })\r\n      : [];\r\n\r\n    const formData = new FormData();\r\n\r\n    formData.append('name', values.name?.trim());\r\n    formData.append('description', values.description);\r\n    formData.append('image', JSON.stringify(imagesIds));\r\n    formData.append('cover', coverImageId || imagesIds[0] ? imagesIds[0] : '');\r\n    formData.append('parent', selectedParentId);\r\n    formData.append('icon', imageFile);\r\n    formData.append('thumbnail', thumbnailImageFile);\r\n\r\n    console.log('categoryDetailData', categoryDetailData);\r\n\r\n    if (categoryDetailData && Object.keys(categoryDetailData).length > 0) {\r\n      const aboutToUpdatedImageIds = [];\r\n\r\n      if (imagesIds && imagesIds.length > 0) {\r\n        imagesIds.forEach((imageId) => {\r\n          if (categoryDetailData && categoryDetailData['image']) {\r\n            if (!categoryDetailData['image'].includes(imageId)) {\r\n              aboutToUpdatedImageIds.push(imageId);\r\n            }\r\n          }\r\n        });\r\n      }\r\n\r\n      if (aboutToUpdatedImageIds[0] && aboutToUpdatedImageIds.length > 1) {\r\n        await handleAttachImageToItemMultipleFetch({\r\n          urlOptions: {\r\n            placeHolders: {\r\n              collection: 'category',\r\n              itemId: categoryDetailData.id,\r\n            },\r\n          },\r\n          body: {\r\n            image: aboutToUpdatedImageIds,\r\n          },\r\n        });\r\n      } else if (\r\n        aboutToUpdatedImageIds[0] &&\r\n        aboutToUpdatedImageIds.length < 1\r\n      ) {\r\n        await handleAttachImageToItemSingleFetch({\r\n          urlOptions: {\r\n            placeHolders: {\r\n              imageId: aboutToUpdatedImageIds[0].id,\r\n              collection: 'category',\r\n              itemId: categoryDetailData.id,\r\n            },\r\n          },\r\n        });\r\n      }\r\n    }\r\n\r\n    const addCategoryRes = await handleAddCategoryFetch({\r\n      urlOptions: {\r\n        placeHolders: {\r\n          id: categoryDetailData.id,\r\n        },\r\n      },\r\n      body: {\r\n        name: values.name?.trim(),\r\n        description: values.description,\r\n        displayOrder: values.displayOrder,\r\n        image: imagesIds,\r\n        cover: coverImageId || imagesIds[0] ? imagesIds[0] : '',\r\n        parent: selectedParentId,\r\n        icon: imageFile,\r\n        metaTitle: values.metaTitle,\r\n        metaDescription: values.metaDescription,\r\n        metaTags: tags && tags.length > 0 ? tags.join(',') : '',\r\n        bn: {\r\n          metaTitle: values.bnMetaTitle,\r\n          metaDescription: values.bnMetaDescription,\r\n          metaTags: bnTags && bnTags.length > 0 ? bnTags.join(',') : '',\r\n          name: values.bnName?.trim(),\r\n          description: values.bnDescription,\r\n        },\r\n      },\r\n    });\r\n\r\n    // @ts-ignore\r\n    if (addCategoryRes && addCategoryRes.status === 'ok') {\r\n      openSuccessNotification('Category Updated!');\r\n      setAddNewCategoryVisible(false);\r\n\r\n      setcategoryDetailData({\r\n        name: addCategoryRes['name'] || '',\r\n        description: addCategoryRes['description'] || '',\r\n        cover: categoryDetailData['cover'] || '',\r\n        id: categoryDetailData.id,\r\n        key: categoryDetailData['id'] || '',\r\n        // @ts-ignore\r\n        ...addCategoryRes,\r\n      });\r\n\r\n      actions.resetForm();\r\n      // @ts-ignore\r\n      setmyImages([]);\r\n      setCoverImageId('');\r\n      setselectedParentId('');\r\n      setisparentcategoryChecked(true);\r\n      setImageUrl('');\r\n      setThumbnailImageUrl('');\r\n    } else {\r\n      openErrorNotification();\r\n    }\r\n\r\n    actions.setSubmitting(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!addCategoryState['isLoading']) {\r\n      const error = addCategoryState['error'];\r\n      if (error['isError'] && Object.keys(error['error']).length > 0) {\r\n        const errors =\r\n          Object.values(error['error']).length > 0\r\n            ? Object.values(error['error'])\r\n            : [];\r\n        errors.forEach((err, i) => {\r\n          if (typeof err === 'string') {\r\n            openErrorNotification(err);\r\n          } else if (typeof err === 'object') {\r\n            if (err && Object.keys(err).length > 0) {\r\n              const errs = Object.values(err);\r\n              errs.forEach((err) => {\r\n                openErrorNotification(err);\r\n              });\r\n            }\r\n          }\r\n        });\r\n      }\r\n    }\r\n  }, [addCategoryState]);\r\n\r\n  const onSwitchChange = (checked: any) => {\r\n    setisparentcategoryChecked(checked);\r\n  };\r\n\r\n  const handleCancel = (e: any) => {\r\n    setTags([]);\r\n    setBnTags([]);\r\n    setAddNewCategoryVisible(false);\r\n    setImagefile('');\r\n    setCoverImageId('');\r\n    setselectedParentId('');\r\n    setmyImages(false);\r\n  };\r\n\r\n  const onChangeSelect = (value) => {\r\n    setselectedParentId(value);\r\n  };\r\n\r\n  function getBase64(img, callback) {\r\n    const reader = new FileReader();\r\n    reader.addEventListener('load', () => callback(reader.result));\r\n    reader.readAsDataURL(img);\r\n  }\r\n\r\n  function beforeUpload(file) {\r\n    const isJpgOrPng = file.type === 'image/jpeg' || file.type === 'image/png';\r\n    if (!isJpgOrPng) {\r\n      message.error('You can only upload JPG/PNG file!');\r\n    }\r\n    const isLt2M = file.size / 1024 / 1024 < 2;\r\n    if (!isLt2M) {\r\n      message.error('Image must smaller than 2MB!');\r\n    }\r\n\r\n    getBase64(file, (imageUrl) => {\r\n      setImageUrl(imageUrl);\r\n      setImagefile(file);\r\n      const setNewIcon = async () => {\r\n        const formData = new FormData();\r\n        formData.append('icon', file);\r\n        // const addCategoryRes = await handleAddCategoryFetch({\r\n        // \tbody: formData,\r\n        // });\r\n        const res = await handleUpdateCategoryIconFetch({\r\n          urlOptions: {\r\n            placeHolders: {\r\n              id: categoryDetailData.id,\r\n            },\r\n          },\r\n          body: formData,\r\n        });\r\n\r\n        // @ts-ignore\r\n        if (res && res.status === 'ok') {\r\n          openSuccessNotification('Category Icon updated!');\r\n        } else {\r\n          openErrorNotification(\r\n            \"Couldn't update category icon, Something went wrong\"\r\n          );\r\n        }\r\n      };\r\n\r\n      setNewIcon();\r\n      setLoadingThumbnail(false);\r\n    });\r\n\r\n    return false;\r\n  }\r\n\r\n\r\n\r\n  \r\n  function beforeThumbnailUpload(file) {\r\n    const isJpgOrPng = file.type === 'image/jpeg' || file.type === 'image/png';\r\n    if (!isJpgOrPng) {\r\n      message.error('You can only upload JPG/PNG file!');\r\n    }\r\n    const isLt2M = file.size / 1024 / 1024 < 2;\r\n    if (!isLt2M) {\r\n      message.error('Image must smaller than 2MB!');\r\n    }\r\n\r\n    getBase64(file, (imageUrl) => {\r\n      setThumbnailImageUrl(imageUrl)\r\n      setThumbnailImagefile(file)\r\n      const setNewIcon = async () => {\r\n        const formData = new FormData();\r\n        formData.append('thumbnail', file);\r\n        // const addCategoryRes = await handleAddCategoryFetch({\r\n        // \tbody: formData,\r\n        // });\r\n        const res = await handleUpdateCategoryThumbnailFetch({\r\n          urlOptions: {\r\n            placeHolders: {\r\n              id: categoryDetailData.id,\r\n            },\r\n          },\r\n          body: formData,\r\n        });\r\n\r\n        // @ts-ignore\r\n        if (res && res.status === 'ok') {\r\n          openSuccessNotification('Category Thumbnail updated!');\r\n        } else {\r\n          openErrorNotification(\r\n            \"Couldn't update category Thumbnail, Something went wrong\"\r\n          );\r\n        }\r\n      };\r\n\r\n      setNewIcon();\r\n      setLoadingThumbnail(false);\r\n    });\r\n\r\n    return false;\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    if (categoryDetailData && Object.keys(categoryDetailData).length > 0) {\r\n      const iconUrl = categoryDetailData.icon && categoryDetailData.icon;\r\n\r\n      setImageUrl(iconUrl);\r\n    }\r\n  }, []);\r\n\r\n\r\n  \r\n  useEffect(() => {\r\n    if (categoryDetailData && Object.keys(categoryDetailData).length > 0) {\r\n      const thumbnailImageUrl = categoryDetailData.thumbnail && categoryDetailData.thumbnail;\r\n      setThumbnailImageUrl(thumbnailImageUrl);\r\n    }\r\n  }, []);\r\n\r\n\r\n\r\n  const uploadButton = (\r\n    <div>\r\n      {loadingThumnail ? <LoadingOutlined /> : <PlusOutlined />}\r\n      <div className='ant-upload-text'>Upload</div>\r\n    </div>\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (categoryDetailData && Object.keys(categoryDetailData).length > 0) {\r\n      const metaTags =\r\n        categoryDetailData.metaTags && categoryDetailData.metaTags.split(',');\r\n\r\n      console.log('localMetaTags', metaTags);\r\n\r\n      const bnMetaTags =\r\n        categoryDetailData.bn &&\r\n        categoryDetailData.bn['metaTags'] &&\r\n        categoryDetailData.bn['metaTags'].split(',');\r\n      setTags(metaTags || []);\r\n      setBnTags(bnMetaTags || []);\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <Formik\r\n        onSubmit={(values, actions) => handleSubmit(values, actions)}\r\n        validationSchema={validationSchema}\r\n        validateOnBlur={false}\r\n        enableReinitialize={true}\r\n        initialValues={{\r\n          ...initialValues,\r\n          ...categoryDetailData,\r\n          ...(categoryDetailData &&\r\n            Object.keys(categoryDetailData).length > 0 && {\r\n              bnMetaTitle:\r\n                categoryDetailData['bn'] &&\r\n                categoryDetailData['bn'].metaTitle &&\r\n                categoryDetailData['bn'].metaTitle,\r\n              bnMetaDescription:\r\n                categoryDetailData['bn'] &&\r\n                categoryDetailData['bn'].metaDescription &&\r\n                categoryDetailData['bn'].metaDescription,\r\n              bnName:\r\n                categoryDetailData['bn'] &&\r\n                categoryDetailData['bn'].name &&\r\n                categoryDetailData['bn'].name,\r\n              bnDescription:\r\n                categoryDetailData['bn'] &&\r\n                categoryDetailData['bn'].description &&\r\n                categoryDetailData['bn'].description,\r\n            }),\r\n        }}\r\n      >\r\n        {({\r\n          handleChange,\r\n          values,\r\n          handleSubmit,\r\n          errors,\r\n          isValid,\r\n          isSubmitting,\r\n          touched,\r\n          handleBlur,\r\n          setFieldTouched,\r\n          handleReset,\r\n        }) => (\r\n          <>\r\n            <section className='addProductGridContainer'>\r\n              <div className='addProductGridContainer__left'>\r\n                <div className='addProductGridContainer__name'>\r\n                  <div className='addProductGridContainer__item-header'>\r\n                    <h3>Category Information *</h3>\r\n                    <div\r\n                      className={\r\n                        values.name && values.name.length > 2\r\n                          ? 'checkicon-active'\r\n                          : 'checkicon'\r\n                      }\r\n                    >\r\n                      <CheckCircleOutlined />\r\n                    </div>\r\n                  </div>\r\n                  <div className='addProductGridContainer__item-body'>\r\n                    <Input\r\n                      label='Name *'\r\n                      value={values.name}\r\n                      placeHolder={''}\r\n                      name='name'\r\n                      isError={\r\n                        (touched.name && errors.name) ||\r\n                        (!isSubmitting &&\r\n                          addCategoryState.error['error']['name'])\r\n                      }\r\n                      errorString={\r\n                        (touched.name && errors.name) ||\r\n                        (!isSubmitting &&\r\n                          addCategoryState.error['error']['name'])\r\n                      }\r\n                      onChange={(e: any) => {\r\n                        handleChange(e);\r\n                        setFieldTouched('name');\r\n                      }}\r\n                    />\r\n\r\n                    <Input\r\n                      label='BN Name'\r\n                      value={values.bnName}\r\n                      placeHolder={''}\r\n                      name='bnName'\r\n                      isError={\r\n                        (touched.bnName && errors.bnName) ||\r\n                        (!isSubmitting &&\r\n                          addCategoryState.error['error']['bnName'])\r\n                      }\r\n                      errorString={\r\n                        (touched.bnName && errors.bnName) ||\r\n                        (!isSubmitting &&\r\n                          addCategoryState.error['error']['bnName'])\r\n                      }\r\n                      onChange={(e: any) => {\r\n                        handleChange(e);\r\n                        setFieldTouched('bnName');\r\n                      }}\r\n                    />\r\n\r\n                    <TextArea\r\n                      label='Description'\r\n                      value={values.description}\r\n                      placeholder={'This category...'}\r\n                      name='description'\r\n                      isError={\r\n                        (touched.description && errors.description) ||\r\n                        (!isSubmitting &&\r\n                          addCategoryState.error['error']['description'])\r\n                      }\r\n                      errorString={\r\n                        (touched.description && errors.description) ||\r\n                        (!isSubmitting &&\r\n                          addCategoryState.error['error']['description'])\r\n                      }\r\n                      onChange={(e: any) => {\r\n                        handleChange(e);\r\n                        setFieldTouched('description');\r\n                      }}\r\n                    />\r\n\r\n                    <TextArea\r\n                      label='BN Description'\r\n                      value={values.bnDescription}\r\n                      placeholder={'এই ক্যাটাগড়ি...'}\r\n                      name='bnDescription'\r\n                      isError={\r\n                        (touched.bnDescription && errors.bnDescription) ||\r\n                        (!isSubmitting &&\r\n                          addCategoryState.error['error']['bnDescription'])\r\n                      }\r\n                      errorString={\r\n                        (touched.bnDescription && errors.bnDescription) ||\r\n                        (!isSubmitting &&\r\n                          addCategoryState.error['error']['bnDescription'])\r\n                      }\r\n                      onChange={(e: any) => {\r\n                        handleChange(e);\r\n                        setFieldTouched('bnDescription');\r\n                      }}\r\n                    />\r\n\r\n                    <Input\r\n                      label='Display Order'\r\n                      value={values.displayOrder}\r\n                      placeHolder={'1,3,7'}\r\n                      name='displayOrder'\r\n                      type='number'\r\n                      isError={\r\n                        (touched.displayOrder && errors.displayOrder) ||\r\n                        (!isSubmitting &&\r\n                          addCategoryState.error['error']['displayOrder'])\r\n                      }\r\n                      errorString={\r\n                        (touched.displayOrder && errors.displayOrder) ||\r\n                        (!isSubmitting &&\r\n                          addCategoryState.error['error']['displayOrder'])\r\n                      }\r\n                      onChange={(e: any) => {\r\n                        handleChange(e);\r\n                        setFieldTouched('displayOrder');\r\n                      }}\r\n                    />\r\n\r\n                    <div\r\n                      style={{\r\n                        marginTop: '25px',\r\n                      }}\r\n                    ></div>\r\n\r\n                    <div className='switchLabelContainer'>\r\n                      <Switch\r\n                        checked={isparentCategoryChecked}\r\n                        defaultChecked\r\n                        onChange={onSwitchChange}\r\n                      />\r\n                      <div className='switchLabelContainer-textContainer'>\r\n                        <h5>Top level Category</h5>\r\n                        <h5 className='switchLabelContainer-desc'>\r\n                          Disable to select a Parent Category\r\n                        </h5>\r\n                      </div>\r\n                    </div>\r\n\r\n                    {!isparentCategoryChecked && (\r\n                      <>\r\n                        <h3 className='inputFieldLabel'>Parent Category</h3>\r\n                        <Select\r\n                          showSearch\r\n                          style={{ width: 300 }}\r\n                          placeholder='Select a Parent Category'\r\n                          optionFilterProp='children'\r\n                          onChange={onChangeSelect}\r\n                          // onFocus={onFocus}\r\n                          // onBlur={onBlur}\r\n                          // onSearch={onSearch}\r\n                          filterOption={(input, option: any) =>\r\n                            option.children\r\n                              .toLowerCase()\r\n                              .indexOf(input.toLowerCase()) >= 0\r\n                          }\r\n                        >\r\n                          {categoryList.length > 0 &&\r\n                            categoryList.map((category) => {\r\n                              return (\r\n                                <Option value={category.id}>\r\n                                  {category.name}\r\n                                </Option>\r\n                              );\r\n                            })}\r\n                        </Select>\r\n                      </>\r\n                    )}\r\n\r\n                    <div\r\n                      style={{\r\n                        marginTop: '20px',\r\n                      }}\r\n                    />\r\n\r\n                    <div className='addproductSection-left-header'>\r\n                      <h3 className='inputFieldLabel'>Icon </h3>\r\n                      <Tooltip\r\n                        placement='left'\r\n                        title={'Add Icon image for this category'}\r\n                      >\r\n                        <a href='###'>\r\n                          <InfoCircleOutlined />\r\n                        </a>\r\n                      </Tooltip>\r\n                    </div>\r\n\r\n                    <Upload\r\n                      style={{\r\n                        borderRadius: '8px',\r\n                      }}\r\n                      name='avatar'\r\n                      listType='picture-card'\r\n                      className='avatar-uploader'\r\n                      showUploadList={false}\r\n                      beforeUpload={beforeUpload}\r\n                      multiple={false}\r\n                    >\r\n                      {imageUrl ? (\r\n                        <img\r\n                          src={imageUrl}\r\n                          alt='avatar'\r\n                          style={{ width: '100%' }}\r\n                        />\r\n                      ) : (\r\n                        uploadButton\r\n                      )}\r\n                    </Upload>\r\n\r\n\r\n                    <div\r\n                      style={{\r\n                        marginTop: '20px',\r\n                      }}\r\n                    />\r\n\r\n                    <div className='addproductSection-left-header'>\r\n                      <h3 className='inputFieldLabel'>Thumbnail</h3>\r\n                      <Tooltip\r\n                        placement='left'\r\n                        title={'Add thumbnail image for this category'}\r\n                      >\r\n                        <a href='###'>\r\n                          <InfoCircleOutlined />\r\n                        </a>\r\n                      </Tooltip>\r\n                    </div>\r\n\r\n                    <Upload\r\n                      style={{\r\n                        borderRadius: '8px',\r\n                      }}\r\n                      name='avatar'\r\n                      listType='picture-card'\r\n                      className='avatar-uploader'\r\n                      showUploadList={false}\r\n                      beforeUpload={beforeThumbnailUpload}\r\n                      multiple={false}\r\n                    >\r\n                      {thumbnailImageUrl ? (\r\n                        <img\r\n                          src={thumbnailImageUrl}\r\n                          alt='avatar'\r\n                          style={{ width: '100%' }}\r\n                        />\r\n                      ) : (\r\n                        uploadButton\r\n                      )}\r\n                    </Upload>\r\n\r\n\r\n\r\n\r\n                  </div>\r\n                </div>\r\n\r\n                <div className='addProductGridContainer__image'>\r\n                  <div className='addProductGridContainer__item-header'>\r\n                    <h3>Image</h3>\r\n\r\n                    <Tooltip\r\n                      placement='left'\r\n                      title={\r\n                        'Click on the image to select cover image, By default 1st image is selected as cover'\r\n                      }\r\n                    >\r\n                      <a href='###'>\r\n                        <InfoCircleOutlined />\r\n                      </a>\r\n                    </Tooltip>\r\n                  </div>\r\n\r\n                  <div\r\n                    style={{\r\n                      padding: '10px',\r\n                    }}\r\n                    className='aboutToUploadImagesContainer'\r\n                  >\r\n                    {categoryDetailState.isLoading && (\r\n                      <div\r\n                        style={{\r\n                          padding: '20px 0',\r\n                        }}\r\n                      >\r\n                        <Spin />\r\n                      </div>\r\n                    )}\r\n                    {categoryDetailState.done && (\r\n                      <>\r\n                        {myImages &&\r\n                          // @ts-ignore\r\n                          myImages.length > 0 &&\r\n                          myImages.map((image, index) => {\r\n                            return (\r\n                              <div className='aboutToUploadImagesContainer__item'>\r\n                                <div\r\n                                  className='aboutToUploadImagesContainer__item-imgContainer'\r\n                                  onClick={() => {\r\n                                    setCoverImageId(image.id);\r\n                                    handleSetImageAsThumnail(image);\r\n                                  }}\r\n                                >\r\n                                  <img src={image.cover} alt={image.alt} />\r\n                                </div>\r\n\r\n                                <span\r\n                                  onClick={() => {\r\n                                    handleImagesDelete(image.id);\r\n                                    handleDetachSingleImage(image.id);\r\n                                  }}\r\n                                  className='aboutToUploadImagesContainer__item-remove'\r\n                                >\r\n                                  <CloseOutlined />\r\n                                </span>\r\n\r\n                                {coverImageId === image.id ? (\r\n                                  <span className='aboutToUploadImagesContainer__item-cover'>\r\n                                    <CheckOutlined />\r\n                                  </span>\r\n                                ) : (\r\n                                  !coverImageId &&\r\n                                  index === 0 && (\r\n                                    <span className='aboutToUploadImagesContainer__item-cover'>\r\n                                      <CheckOutlined />\r\n                                    </span>\r\n                                  )\r\n                                )}\r\n                              </div>\r\n                            );\r\n                          })}\r\n\r\n                        <Tooltip title={'Attach images'}>\r\n                          <div\r\n                            onClick={() => {\r\n                              setvisible(true);\r\n                              setisModalOpenForImages(true);\r\n                              setisModalOpenForThumbnail(false);\r\n                            }}\r\n                            className='aboutToUploadImagesContainer__uploadItem'\r\n                          >\r\n                            {/* <FileAddOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FileImageTwoTone />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FileImageOutlined /> */}\r\n                            <FileImageFilled />\r\n                            {/* <h5>\r\n\t\t\t\t\t\t\t\t\t\t\t\t     Select From Library\r\n\t\t\t\t\t\t\t\t\t\t\t<     /h5> */}\r\n                            <span className='aboutToUploadImagesContainer__uploadItem-plus'>\r\n                              <PlusOutlined />\r\n                            </span>\r\n                          </div>\r\n                        </Tooltip>\r\n                      </>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className='addProductGridContainer__right'>\r\n                <div className='addProductGridContainer__category'>\r\n                  <div className='addProductGridContainer-rightItemContainer'>\r\n                    <div className='addProductGridContainer-rightItemContainer-header'>\r\n                      <h3>Meta Tags</h3>\r\n\r\n                      <Tooltip\r\n                        placement='left'\r\n                        title={\r\n                          \"Meta data will be used to make the user's easy and for search engine optimization.\"\r\n                        }\r\n                      >\r\n                        <a href='###'>\r\n                          <InfoCircleOutlined />\r\n                        </a>\r\n                      </Tooltip>\r\n\r\n                      {/* <Tooltip\r\n                        color='red'\r\n                        visible={\r\n                          addCategoryState.error['error']['category'] &&\r\n                          !(categoryids.length > 0)\r\n                        }\r\n                        placement='left'\r\n                        title={'Select at least one category'}\r\n                      >\r\n                        <div\r\n                          className={\r\n                            !(categoryids.length > 0) &&\r\n                            !addCategoryState.error['error']['category']\r\n                              ? 'checkicon'\r\n                              : addCategoryState.error['error']['category']\r\n                              ? 'checkicon-error'\r\n                              : 'checkicon-active'\r\n                          }\r\n                        >\r\n                          <CheckCircleOutlined />\r\n                        </div>\r\n                      </Tooltip> */}\r\n                    </div>\r\n                    <div className='addProductGridContainer-rightItemContainer-body'>\r\n                      <Input\r\n                        label='Meta title'\r\n                        value={values.metaTitle}\r\n                        placeHolder={'...'}\r\n                        name='metaTitle'\r\n                        isError={\r\n                          (touched.metaTitle && errors.metaTitle) ||\r\n                          (!isSubmitting &&\r\n                            addCategoryState.error['error']['metaTitle'])\r\n                        }\r\n                        errorString={\r\n                          (touched.metaTitle && errors.metaTitle) ||\r\n                          (!isSubmitting &&\r\n                            addCategoryState.error['error']['metaTitle'])\r\n                        }\r\n                        onChange={(e: any) => {\r\n                          handleChange(e);\r\n                          setFieldTouched('metaTitle');\r\n                        }}\r\n                      />\r\n\r\n                      <Input\r\n                        label='BN Meta title'\r\n                        value={values.bnMetaTitle}\r\n                        placeHolder={'...'}\r\n                        name='bnMetaTitle'\r\n                        isError={\r\n                          (touched.bnMetaTitle && errors.bnMetaTitle) ||\r\n                          (!isSubmitting &&\r\n                            addCategoryState.error['error']['bnMetaTitle'])\r\n                        }\r\n                        errorString={\r\n                          (touched.bnMetaTitle && errors.bnMetaTitle) ||\r\n                          (!isSubmitting &&\r\n                            addCategoryState.error['error']['bnMetaTitle'])\r\n                        }\r\n                        onChange={(e: any) => {\r\n                          handleChange(e);\r\n                          setFieldTouched('bnMetaTitle');\r\n                        }}\r\n                      />\r\n\r\n                      <TextArea\r\n                        label='Meta description'\r\n                        value={values.metaDescription}\r\n                        placeholder={'meta...'}\r\n                        name='metaDescription'\r\n                        isError={\r\n                          (touched.metaDescription && errors.metaDescription) ||\r\n                          (!isSubmitting &&\r\n                            addCategoryState.error['error']['metaDescription'])\r\n                        }\r\n                        errorString={\r\n                          (touched.metaDescription && errors.metaDescription) ||\r\n                          (!isSubmitting &&\r\n                            addCategoryState.error['error']['metaDescription'])\r\n                        }\r\n                        onChange={(e: any) => {\r\n                          handleChange(e);\r\n                          setFieldTouched('metaDescription');\r\n                        }}\r\n                      />\r\n\r\n                      <TextArea\r\n                        label='BN Meta Description'\r\n                        value={values.bnMetaDescription}\r\n                        placeholder={'এইয় মেট...'}\r\n                        name='bnMetaDescription'\r\n                        isError={\r\n                          (touched.bnMetaDescription &&\r\n                            errors.bnMetaDescription) ||\r\n                          (!isSubmitting &&\r\n                            addCategoryState.error['error'][\r\n                              'bnMetaDescription'\r\n                            ])\r\n                        }\r\n                        errorString={\r\n                          (touched.bnMetaDescription &&\r\n                            errors.bnMetaDescription) ||\r\n                          (!isSubmitting &&\r\n                            addCategoryState.error['error'][\r\n                              'bnMetaDescription'\r\n                            ])\r\n                        }\r\n                        onChange={(e: any) => {\r\n                          handleChange(e);\r\n                          setFieldTouched('bnMetaDescription');\r\n                        }}\r\n                      />\r\n\r\n                      <h3 className='inputFieldLabel'>Meta Tags </h3>\r\n\r\n                      <MetaTags\r\n                        // @ts-ignore\r\n                        setTags={setTags}\r\n                        tags={tags}\r\n                      />\r\n\r\n                      <div\r\n                        style={{\r\n                          marginTop: '15px',\r\n                        }}\r\n                      ></div>\r\n\r\n                      <h3 className='inputFieldLabel'>BN Meta Tags </h3>\r\n\r\n                      <MetaTags\r\n                        // @ts-ignore\r\n                        setTags={setBnTags}\r\n                        tags={bnTags}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </section>\r\n\r\n            <div\r\n              style={{\r\n                padding: '15px',\r\n                display: 'flex',\r\n                justifyContent: 'flex-end',\r\n              }}\r\n            >\r\n              <Button\r\n                style={{\r\n                  color: '#555',\r\n                  marginRight: '10px',\r\n                }}\r\n                className='btnPrimaryClassNameoutline-cancle'\r\n                onClick={() => setAddNewCategoryVisible(false)}\r\n                type='default'\r\n              >\r\n                Cancel\r\n              </Button>\r\n\r\n              <Button\r\n                className='btnPrimaryClassNameoutline'\r\n                onClick={handleSubmit}\r\n                loading={addCategoryState.isLoading}\r\n                type='link'\r\n                icon={<CheckOutlined />}\r\n              >\r\n                Update\r\n              </Button>\r\n            </div>\r\n\r\n            <MediaLibrary\r\n              setvisible={setvisible}\r\n              visible={visible}\r\n              setmyImages={setmyImages}\r\n              myImages={myImages}\r\n              setmyThumbnailImage={setmyThumbnailImage}\r\n              isModalOpenForThumbnail={isModalOpenForThumbnail}\r\n              isModalOpenForImages={isModalOpenForImages}\r\n            />\r\n          </>\r\n        )}\r\n      </Formik>\r\n    </>\r\n  );\r\n};\r\n\r\nconst AddNewCategory = ({\r\n  setAddNewCategoryVisible,\r\n  addNewCategoryVisible,\r\n  categoryList,\r\n  categoryDetailData,\r\n  setcategoryDetailData,\r\n}: Props) => {\r\n  const handleCancel = () => {\r\n    setAddNewCategoryVisible(false);\r\n  };\r\n  return (\r\n    <Modal\r\n      destroyOnClose={true}\r\n      style={{\r\n        top: '40px',\r\n      }}\r\n      bodyStyle={{\r\n        margin: 0,\r\n        padding: 0,\r\n      }}\r\n      title='Edit Category'\r\n      visible={addNewCategoryVisible}\r\n      onCancel={handleCancel}\r\n      footer={false}\r\n      okText='Update'\r\n      width={'70vw'}\r\n      okButtonProps={{\r\n        // loading: isSubmitting,\r\n        htmlType: 'submit',\r\n      }}\r\n    >\r\n      <ModalChildComponent\r\n        setAddNewCategoryVisible={setAddNewCategoryVisible}\r\n        categoryList={categoryList}\r\n        categoryDetailData={categoryDetailData}\r\n        setcategoryDetailData={setcategoryDetailData}\r\n      />\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default AddNewCategory;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useParams, useHistory } from 'react-router';\r\n\r\n// import hooks\r\nimport { useHandleFetch } from '../../hooks';\r\n\r\n// import lib\r\nimport { EditOutlined } from '@ant-design/icons';\r\n\r\nimport {\r\n  Skeleton,\r\n  Empty,\r\n  Button,\r\n  Table,\r\n  Space,\r\n  Input as CoolInput,\r\n  Tooltip,\r\n  Modal,\r\n} from 'antd';\r\n\r\n// import state\r\nimport { isAccess } from '../../utils';\r\nimport { connect } from 'react-redux';\r\n\r\n// import components\r\nimport { DataTableSkeleton } from '../../components/Placeholders';\r\nimport CategoryEdit from './CategoryEdit';\r\nimport CategoryNewEdit from './CategoryNewEdit';\r\n\r\nconst { Column, ColumnGroup } = Table;\r\nconst { Search } = CoolInput;\r\n\r\ninterface Props {\r\n  roles?: any;\r\n}\r\n\r\nconst NewBrandDetail = ({ roles }: Props) => {\r\n  const [categoryDetailState, handleCategoryDetailFetch] = useHandleFetch(\r\n    {},\r\n    'categoryDetail'\r\n  );\r\n  const [categoryProductsState, handleCategoryProductsFetch] = useHandleFetch(\r\n    {},\r\n    'categoryProducts'\r\n  );\r\n\r\n  const [categoryState, handleCategoryListFetch] = useHandleFetch(\r\n    {},\r\n    'categoryList'\r\n  );\r\n  const [categoryList, setcategoryList] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const setCategories = async () => {\r\n      const categories = await handleCategoryListFetch({\r\n        urlOptions: {\r\n          params: {\r\n            isSubCategory: true,\r\n            productCountValue: true,\r\n            sortItem: 'added',\r\n            sortOrderValue: '-1',\r\n            limitNumber: 5000000,\r\n          },\r\n        },\r\n      });\r\n      // @ts-ignore\r\n      setcategoryList(categories);\r\n    };\r\n    setCategories();\r\n  }, []);\r\n\r\n  const params = useParams();\r\n  const history = useHistory();\r\n  const categoryId = params['id'];\r\n  const [categoryEditVisible, setCategoryEditVisible] = useState(false);\r\n  const [categoryDetail, setcategoryDetail] = useState({});\r\n\r\n  useEffect(() => {\r\n    const getCategoryDetail = async () => {\r\n      const categoryDetailDataRes = await handleCategoryDetailFetch({\r\n        urlOptions: {\r\n          placeHolders: {\r\n            id: categoryId,\r\n          },\r\n        },\r\n      });\r\n\r\n      // @ts-ignore\r\n      if (categoryDetailDataRes) {\r\n        // @ts-ignore\r\n        setcategoryDetail(categoryDetailDataRes);\r\n      }\r\n    };\r\n\r\n    getCategoryDetail();\r\n  }, [categoryId]);\r\n\r\n  useEffect(() => {\r\n    const getCategoryProducts = async () => {\r\n      await handleCategoryProductsFetch({\r\n        urlOptions: {\r\n          placeHolders: {\r\n            id: categoryId,\r\n          },\r\n        },\r\n      });\r\n    };\r\n\r\n    getCategoryProducts();\r\n  }, [categoryId]);\r\n\r\n  console.log('categoryProductsState', categoryProductsState);\r\n\r\n  console.log('brandParams', params);\r\n\r\n  const getImagesInCollumn = (imgs) => {\r\n    if (!imgs[0]) return false;\r\n    imgs = imgs.map((item) => item.cover);\r\n    const columns = {};\r\n\r\n    let localIndex = 0;\r\n    let columnNumber = 0;\r\n\r\n    imgs.forEach((item, index) => {\r\n      if (localIndex < 3) {\r\n        if (columns[columnNumber]) {\r\n          columns[columnNumber] = [...columns[columnNumber], item];\r\n        } else columns[columnNumber] = [item];\r\n\r\n        localIndex = localIndex + 1;\r\n        columnNumber = columnNumber + 1;\r\n      } else {\r\n        localIndex = 0;\r\n        columnNumber = 0;\r\n        console.log('localIndex', localIndex);\r\n      }\r\n    });\r\n\r\n    return columns;\r\n  };\r\n\r\n  const row =\r\n    categoryDetailState.done && categoryDetail && categoryDetail['image']\r\n      ? getImagesInCollumn(categoryDetail['image'])\r\n      : [];\r\n\r\n  return (\r\n    <div className='brandDetailContainer'>\r\n      <div className='brandDetailContainer__heading'>\r\n        <h3>Category Detail</h3>\r\n\r\n        {categoryDetailState.done &&\r\n          categoryDetail &&\r\n          Object.keys(categoryDetail).length > 0 && (\r\n            <>\r\n              <CategoryNewEdit\r\n                addNewCategoryVisible={categoryEditVisible}\r\n                setAddNewCategoryVisible={setCategoryEditVisible}\r\n                categoryDetailData={categoryDetail}\r\n                setcategoryDetailData={setcategoryDetail}\r\n                categoryList={categoryList}\r\n              />\r\n\r\n              {isAccess('postCatalogue', roles) && (\r\n                <Button\r\n                  onClick={() => setCategoryEditVisible(true)}\r\n                  type='link'\r\n                  icon={<EditOutlined />}\r\n                >\r\n                  Edit\r\n                </Button>\r\n              )}\r\n            </>\r\n          )}\r\n      </div>\r\n      <Skeleton\r\n        avatar\r\n        paragraph={{ rows: 3 }}\r\n        loading={categoryDetailState.isLoading}\r\n      >\r\n        {categoryDetailState.done &&\r\n          categoryDetail &&\r\n          !(Object.keys(categoryDetail).length > 0) && (\r\n            <Empty\r\n              description='No Category found'\r\n              image={Empty.PRESENTED_IMAGE_SIMPLE}\r\n            />\r\n          )}\r\n\r\n        {categoryDetailState.done &&\r\n          categoryDetail &&\r\n          Object.keys(categoryDetail).length > 0 && (\r\n            <>\r\n              <div className='brandDetailContainer__header'>\r\n                <div className='brandDetailContainer__header-coverContainer brandDetailContainer__header-coverContainer-category'>\r\n                  <img\r\n                    src={\r\n                      categoryDetail['cover'] &&\r\n                      categoryDetail['cover']['cover']\r\n                    }\r\n                    alt=''\r\n                  />\r\n                </div>\r\n                <div className='brandDetailContainer__header-info'>\r\n                  <h2>{categoryDetail['name']}</h2>\r\n                  <h3>{categoryDetail['description']}</h3>\r\n                  <h3>\r\n                    Category type: <span>{categoryDetail['type']}</span>\r\n                  </h3>\r\n\r\n                  {categoryDetail['url'] && (\r\n                    <h3>\r\n                      URL:\r\n                      <span>{categoryDetail['url']}</span>\r\n                    </h3>\r\n                  )}\r\n                </div>\r\n              </div>\r\n\r\n              {categoryDetail['icon'] && (\r\n                <>\r\n                  <div className='brandDetailContainer__heading'>\r\n                    <h3>Icon</h3>\r\n                  </div>\r\n\r\n                  <div className='brandDetailContainer__inlineBox'>\r\n                    <div className='brandDetailContainer__header-coverContainer brandDetailContainer__header-coverContainer-icon'>\r\n                      <img\r\n                        src={categoryDetail['icon'] && categoryDetail['icon']}\r\n                        alt=''\r\n                      />\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div\r\n                    style={{\r\n                      marginBottom: '25px',\r\n                    }}\r\n                  ></div>\r\n                </>\r\n              )}\r\n\r\n\r\n          {categoryDetail['thumbnail'] && (\r\n                <>\r\n                  <div className='brandDetailContainer__heading'>\r\n                    <h3>Thumbnail</h3>\r\n                  </div>\r\n\r\n                  <div className='brandDetailContainer__inlineBox'>\r\n                    <div className='brandDetailContainer__header-coverContainer brandDetailContainer__header-coverContainer-thumbnail'>\r\n                      <img\r\n                        src={categoryDetail['thumbnail'] && categoryDetail['thumbnail']}\r\n                        alt=''\r\n                      />\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div\r\n                    style={{\r\n                      marginBottom: '25px',\r\n                    }}\r\n                  ></div>\r\n                </>\r\n              )}\r\n\r\n\r\n\r\n              {categoryDetail['image'] && categoryDetail['image'].length > 0 && (\r\n                <>\r\n                  <div className='brandDetailContainer__heading'>\r\n                    <h3>Image Gallary</h3>\r\n                  </div>\r\n\r\n                  <div className='brandDetailContainer__imageGallary'>\r\n                    <div className='imgGallaryContainer'>\r\n                      <div className='imgGallary-row'>\r\n                        {row &&\r\n                          Object.keys(row).map((column) => {\r\n                            return (\r\n                              <div className='imgGallary-column'>\r\n                                {row[column] &&\r\n                                  row[column].map((img) => {\r\n                                    return (\r\n                                      <img\r\n                                        alt='..'\r\n                                        src={img}\r\n                                        style={{\r\n                                          width: '100%',\r\n                                        }}\r\n                                      />\r\n                                    );\r\n                                  })}\r\n                              </div>\r\n                            );\r\n                          })}\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div\r\n                    style={{\r\n                      marginBottom: '25px',\r\n                    }}\r\n                  ></div>\r\n                </>\r\n              )}\r\n\r\n              {categoryDetail['subCategory'] &&\r\n                categoryDetail['subCategory'].length > 0 && (\r\n                  <>\r\n                    <div className='brandDetailContainer__heading'>\r\n                      <h3>Child Categories</h3>\r\n                    </div>\r\n\r\n                    <div className='smallcatCardContainer'>\r\n                      {categoryDetail['subCategory'].map((subCat) => {\r\n                        return (\r\n                          <div\r\n                            onClick={() =>\r\n                              history.push(`/admin/category/${subCat.id}`)\r\n                            }\r\n                            className='smallcatCardContainer__card'\r\n                          >\r\n                            <div className='smallcatCardContainer__card-coverbox'>\r\n                              <img src={subCat.cover} alt='' />\r\n                            </div>\r\n                            <div className='smallcatCardContainer__card-info'>\r\n                              <h3>{subCat.name}</h3>\r\n                            </div>\r\n                          </div>\r\n                        );\r\n                      })}\r\n                    </div>\r\n\r\n                    <div\r\n                      style={{\r\n                        marginBottom: '25px',\r\n                      }}\r\n                    ></div>\r\n                  </>\r\n                )}\r\n            </>\r\n          )}\r\n      </Skeleton>\r\n\r\n      <div className='brandDetailContainer__heading'>\r\n        <h3>Products</h3>\r\n      </div>\r\n      <div className='brandDetailContainer__body'>\r\n        {categoryProductsState.isLoading && <DataTableSkeleton />}\r\n        {categoryProductsState.done &&\r\n          !(categoryProductsState.data.length > 0) && (\r\n            <div\r\n              style={{\r\n                marginTop: '100px',\r\n              }}\r\n            >\r\n              <Empty\r\n                description='No Products exists in this category'\r\n                image={Empty.PRESENTED_IMAGE_SIMPLE}\r\n              />\r\n            </div>\r\n          )}\r\n\r\n        {categoryProductsState.done &&\r\n          categoryProductsState.data &&\r\n          categoryProductsState.data.length > 0 && (\r\n            <>\r\n              <Table\r\n                style={{\r\n                  paddingTop: '10px',\r\n                  borderRadius: '5px !important',\r\n                  overflow: 'hidden',\r\n                  boxShadow:\r\n                    '0 0.125rem 0.625rem rgba(227, 231, 250, 0.3), 0 0.0625rem 0.125rem rgba(206, 220, 233, 0.4)',\r\n                }}\r\n                size='small'\r\n                dataSource={categoryProductsState.data}\r\n                tableLayout={'auto'}\r\n                onHeaderRow={(column) => {\r\n                  return {\r\n                    style: {\r\n                      color: 'red !important',\r\n                    },\r\n                  };\r\n                }}\r\n              >\r\n                <Column\r\n                  title=''\r\n                  dataIndex='cover'\r\n                  key='id'\r\n                  width={'80px'}\r\n                  className='classnameofthecolumn'\r\n                  render={(cover, record: any) => (\r\n                    <>\r\n                      <img\r\n                        onClick={() => {\r\n                          history.push(`/admin/product/${record.id}`);\r\n                          // go to product detail\r\n                        }}\r\n                        src={cover}\r\n                        alt='cover img'\r\n                        style={{\r\n                          height: '40px',\r\n                          width: '40px',\r\n                          objectFit: 'contain',\r\n                          borderRadius: '3px',\r\n                          cursor: 'pointer',\r\n                        }}\r\n                      />\r\n                    </>\r\n                  )}\r\n                />\r\n\r\n                <Column\r\n                  title='Name'\r\n                  dataIndex='name'\r\n                  key='id'\r\n                  className='classnameofthecolumn'\r\n                  render={(text, record: any) => (\r\n                    <>\r\n                      <h4\r\n                        onClick={() => {\r\n                          history.push(`/admin/product/${record.id}`);\r\n                        }}\r\n                        style={{\r\n                          fontWeight: 400,\r\n                          color: '#555',\r\n                          cursor: 'pointer',\r\n                        }}\r\n                      >\r\n                        {text}\r\n                      </h4>\r\n                    </>\r\n                  )}\r\n                />\r\n\r\n                <Column\r\n                  title='Offer Price'\r\n                  dataIndex='offerPrice'\r\n                  key='id'\r\n                  className='classnameofthecolumn'\r\n                />\r\n\r\n                <Column\r\n                  title='Price'\r\n                  dataIndex='price'\r\n                  key='id'\r\n                  className='classnameofthecolumn'\r\n                />\r\n\r\n                <Column\r\n                  title='Available'\r\n                  dataIndex='available'\r\n                  key='id'\r\n                  className='classnameofthecolumn'\r\n                />\r\n\r\n                <Column\r\n                  title='Minimum'\r\n                  dataIndex='minimum'\r\n                  key='id'\r\n                  className='classnameofthecolumn'\r\n                />\r\n              </Table>\r\n            </>\r\n          )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  roles: state.globalState,\r\n});\r\n\r\n// @ts-ignore\r\nexport default connect(mapStateToProps, null)(NewBrandDetail);\r\n","import React from 'react';\r\nimport { Form, Input } from 'antd';\r\n\r\ninterface Props {\r\n  label?: string;\r\n  type?: string;\r\n  defaultValue?: string;\r\n  value?: string;\r\n  onChange?: any;\r\n  disabled?: boolean;\r\n  isError?: boolean;\r\n  errorString?: string;\r\n  name?: string;\r\n  size?: any;\r\n  min?: any;\r\n}\r\n\r\nconst Demo = ({\r\n  min,\r\n  label,\r\n  type,\r\n  defaultValue,\r\n  value,\r\n  onChange,\r\n  disabled,\r\n  isError,\r\n  errorString,\r\n  name,\r\n  size = 'middle',\r\n}: Props) => {\r\n  return (\r\n    <>\r\n      {label && <h3 className='inputFieldLabel-small'>{label}</h3>}\r\n\r\n      <Form.Item\r\n        validateStatus={isError ? 'error' : ''}\r\n        // hasFeedback validateStatus=\"success\"\r\n        help={errorString}\r\n        // rules={[{ required: true }]}\r\n      >\r\n        <Input\r\n          onKeyDown={(event) => {\r\n            if (type === 'number') {\r\n              if (event.key === 'e' || event.key === '-') {\r\n                event.preventDefault();\r\n              }\r\n            }\r\n          }}\r\n          min={min}\r\n          type={type}\r\n          size={size}\r\n          allowClear\r\n          name={name}\r\n          disabled={disabled}\r\n          value={value}\r\n          onChange={onChange}\r\n          className='inputclassName-small'\r\n        />\r\n      </Form.Item>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Demo;\r\n","import React from 'react';\r\nimport { notification } from 'antd';\r\n\r\nimport {\r\n    CheckCircleOutlined,\r\n    ExclamationCircleOutlined\r\n} from '@ant-design/icons';\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Succeed',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n    notification.error({\r\n        message: message || 'Something Went Wrong',\r\n        description: '',\r\n        icon: <ExclamationCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n    });\r\n};\r\n\r\n\r\nexport {\r\n    openSuccessNotification,\r\n    openErrorNotification\r\n}","import React, { useEffect, useState } from 'react';\r\n\r\n// import hooks\r\nimport { useHandleFetch } from '../../hooks';\r\n\r\n// import components\r\nimport Empty from '../../components/Empty';\r\n\r\n// import libraries\r\nimport { Button, Tag, Input, Spin } from 'antd';\r\nimport { PlusOutlined } from '@ant-design/icons';\r\n\r\nconst { CheckableTag } = Tag;\r\nconst { Search } = Input;\r\n\r\ninterface Props {\r\n  setTagIds?: any;\r\n  selectedTags?: any;\r\n  setSelectedTags?: any;\r\n}\r\n\r\nconst Tags = ({ setTagIds, setSelectedTags, selectedTags }: Props) => {\r\n  const [options, setoptions] = useState([]);\r\n  const [selectedOpions, setselectedOptions] = useState([]);\r\n  const [tagState, handleTagListFetch] = useHandleFetch({}, 'tagList');\r\n  const [searchValue, setsearchValue] = useState('');\r\n\r\n  const handleChange = (tag, checked) => {\r\n    const nextSelectedTags = checked\r\n      ? [...selectedTags, tag]\r\n      : selectedTags.filter((t) => t !== tag);\r\n    setSelectedTags(nextSelectedTags);\r\n\r\n    if (\r\n      tagState.done &&\r\n      tagState.data.length > 0 &&\r\n      nextSelectedTags.length > 0\r\n    ) {\r\n      const selectedCategoryIds = nextSelectedTags.map((item) => {\r\n        const selectedcategory = tagState.data.find(\r\n          (cat) => cat.name.toLowerCase() === item.toLowerCase()\r\n        );\r\n        if (selectedcategory) {\r\n          return selectedcategory.id;\r\n        }\r\n      });\r\n      setTagIds(selectedCategoryIds);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (tagState.done && tagState.data.length > 0 && selectedTags.length > 0) {\r\n      const selectedCategoryName = selectedTags.map((item) => {\r\n        const selectedcategory = tagState.data.find((cat) => cat.name === item);\r\n        if (selectedcategory) {\r\n          return selectedcategory.name;\r\n        }\r\n      });\r\n\r\n      const selectedCategoryIds = selectedTags.map((item) => {\r\n        const selectedcategory = tagState.data.find((cat) => cat.name === item);\r\n        if (selectedcategory) {\r\n          return selectedcategory.id;\r\n        }\r\n      });\r\n\r\n      setSelectedTags(selectedCategoryName);\r\n      // setTagIds(selectedCategoryIds);\r\n    }\r\n  }, [tagState]);\r\n\r\n  useEffect(() => {\r\n    const setTags = async () => {\r\n      const tagListRes = await handleTagListFetch({\r\n        urlOptions: {\r\n          params: {\r\n            isSubCategory: false,\r\n          },\r\n        },\r\n      });\r\n\r\n      // @ts-ignoref\r\n      if (tagListRes && tagListRes.length > 0) {\r\n        // @ts-ignore\r\n        const tagOptions = tagListRes.map((tag) => {\r\n          return tag.name;\r\n        });\r\n        setoptions(tagOptions);\r\n      }\r\n    };\r\n\r\n    setTags();\r\n  }, []);\r\n\r\n  // const handleChange = (selectItems) => {\r\n  //   setselectedOptions(selectItems)\r\n\r\n  //   if (tagState.done && tagState.data.length > 0 && selectItems.length > 0) {\r\n  //     const selectedCategoryIds = selectItems.map((item) => {\r\n  //       const selectedcategory = tagState.data.find(\r\n  //         (cat) => cat.name.toLowerCase() === item.toLowerCase()\r\n  //       );\r\n  //       if (selectedcategory) {\r\n  //         return selectedcategory.id;\r\n  //       }\r\n  //     });\r\n  //     setTagIds(selectedCategoryIds);\r\n  //   }\r\n\r\n  // }\r\n\r\n  const onSearchChange = (e) => {\r\n    setsearchValue(e.target.value);\r\n\r\n    if (e.target.value === '') {\r\n      if (tagState.data && tagState.data.length > 0) {\r\n        // @ts-ignore\r\n        const categoryNames = tagState.data.map((cat) => cat.name);\r\n        setoptions(categoryNames);\r\n      }\r\n    } else {\r\n      const newOptions =\r\n        options.length > 0\r\n          ? options.filter((option) => {\r\n              return option.toLowerCase().includes(searchValue.toLowerCase());\r\n            })\r\n          : [];\r\n\r\n      setoptions(newOptions);\r\n    }\r\n  };\r\n\r\n  console.log('selectedTags', selectedTags);\r\n\r\n  return (\r\n    <>\r\n      {tagState.isLoading && (\r\n        <div\r\n          style={{\r\n            padding: '15px 0',\r\n            width: '100%',\r\n            height: '100%',\r\n            display: 'flex',\r\n            justifyContent: 'center',\r\n            alignItems: 'center',\r\n          }}\r\n        >\r\n          <Spin />\r\n        </div>\r\n      )}\r\n\r\n      {tagState.done && (\r\n        <div className='addProduct__categoryBoxContainer-searchBox'>\r\n          <Search\r\n            width={'90%'}\r\n            style={{\r\n              height: '30px',\r\n              borderRadius: '3px !important',\r\n              borderColor: '#eee !important',\r\n            }}\r\n            size='middle'\r\n            placeholder='top, hot'\r\n            onSearch={(value) => console.log(value)}\r\n            onChange={onSearchChange}\r\n          />\r\n        </div>\r\n      )}\r\n\r\n      {tagState.done && !(options.length > 0) && (\r\n        <div\r\n          style={{\r\n            width: '100%',\r\n            height: '100%',\r\n            display: 'flex',\r\n            justifyContent: 'center',\r\n            alignItems: 'center',\r\n          }}\r\n        >\r\n          <Empty title='No Tags found' height={100} />\r\n        </div>\r\n      )}\r\n\r\n      {/* \r\n      {tagState.done && tagState.data.length > 0 && options.length > 0 && <Select\r\n        mode=\"multiple\"\r\n        placeholder=\"search tags\"\r\n        value={selectedOpions}\r\n        onChange={handleChange}\r\n        style={{ width: '100%' }}\r\n      >\r\n        {options.filter(o => !selectedOpions.includes(o)).map(item => (\r\n          <Select.Option key={item} value={item}>\r\n            {item}\r\n          </Select.Option>\r\n        ))}\r\n      </Select>} */}\r\n\r\n      {tagState.done && tagState.data.length > 0 && options.length > 0 && (\r\n        <>\r\n          {options.map((tag) => (\r\n            <>\r\n              <CheckableTag\r\n                key={tag}\r\n                checked={selectedTags.indexOf(tag) > -1}\r\n                onChange={(checked) => handleChange(tag, checked)}\r\n              >\r\n                {tag}\r\n              </CheckableTag>\r\n            </>\r\n          ))}\r\n        </>\r\n      )}\r\n\r\n      {/* \r\n      <div style={{\r\n        marginTop: '15px'\r\n      }}>\r\n\r\n      </div>\r\n      <Button\r\n\r\n        // type=\"primary\"\r\n        className='btnSecondaryPlusOutline'\r\n        icon={<PlusOutlined />}\r\n      >\r\n        Add New\r\n      </Button> */}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Tags;\r\n","import React, { useEffect, useState } from 'react';\r\n\r\n// import hooks\r\nimport { useHandleFetch } from '../../hooks';\r\n\r\n// import components\r\nimport Empty from '../../components/Empty';\r\n\r\n// import libraries\r\nimport { Select, Button, Spin } from 'antd';\r\nimport { PlusOutlined } from '@ant-design/icons';\r\n\r\ninterface Props {\r\n  setBrandId?: any;\r\n  brandId?: any;\r\n  productDetailState?: any;\r\n}\r\n\r\nconst { Option } = Select;\r\n\r\nconst Brands = ({ setBrandId, brandId, productDetailState }: Props) => {\r\n  const [options, setoptions] = useState([]);\r\n  const [selectedBrandId, setSelectedBrandId] = useState('');\r\n  const [brandState, handleTagListFetch] = useHandleFetch({}, 'brandList');\r\n\r\n  function onChange(value) {\r\n    setSelectedBrandId(value);\r\n    setBrandId(value);\r\n    // console.log(`selected ${value}`);\r\n  }\r\n\r\n  function onBlur() {\r\n    // console.log('blur');\r\n  }\r\n\r\n  function onFocus() {\r\n    // console.log('focus');\r\n  }\r\n\r\n  function onSearch(val) {\r\n    // console.log('search:', val);\r\n  }\r\n\r\n  useEffect(() => {\r\n    const setBrands = async () => {\r\n      const brandListRes = await handleTagListFetch({});\r\n\r\n      // @ts-ignore\r\n      if (brandListRes && brandListRes.length > 0) {\r\n        // @ts-ignore\r\n        const brandOptions = brandListRes.map((brand) => {\r\n          return {\r\n            value: brand.id,\r\n            name: brand.name,\r\n          };\r\n        });\r\n        setoptions(brandOptions);\r\n      }\r\n    };\r\n\r\n    setBrands();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <div></div>\r\n\r\n      {brandState.isLoading && (\r\n        <div\r\n          style={{\r\n            padding: '15px 0',\r\n            width: '100%',\r\n            height: '100%',\r\n            display: 'flex',\r\n            justifyContent: 'center',\r\n            alignItems: 'center',\r\n          }}\r\n        >\r\n          <Spin />\r\n        </div>\r\n      )}\r\n\r\n      {brandState.done && !(brandState.data.length > 0) && (\r\n        <div\r\n          style={{\r\n            width: '100%',\r\n            height: '100%',\r\n            display: 'flex',\r\n            justifyContent: 'center',\r\n            alignItems: 'center',\r\n          }}\r\n        >\r\n          <Empty title='No Brand found' height={100} />\r\n        </div>\r\n      )}\r\n\r\n      {brandState.done &&\r\n        brandState.data &&\r\n        brandState.data.length > 0 &&\r\n        options.length > 0 && (\r\n          <Select\r\n            showSearch\r\n            style={{ width: '210px', borderRadius: '6px' }}\r\n            placeholder='Select a Brand'\r\n            optionFilterProp='children'\r\n            onChange={onChange}\r\n            onFocus={onFocus}\r\n            onBlur={onBlur}\r\n            onSearch={onSearch}\r\n            value={brandId}\r\n            filterOption={(input, option) =>\r\n              option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\r\n            }\r\n          >\r\n            {brandState.done &&\r\n              brandState.data.length > 0 &&\r\n              options.map((option) => {\r\n                return <Option value={option.value}>{option.name}</Option>;\r\n              })}\r\n          </Select>\r\n        )}\r\n\r\n      {/* \r\n\t\t\t<div style={{\r\n\t\t\t\tmarginTop: '15px'\r\n\t\t\t}}>\r\n\r\n\t\t\t</div>\r\n\t\t\t<Button\r\n\r\n\t\t\t\t// type=\"primary\"\r\n\t\t\t\tclassName='btnSecondaryPlusOutline'\r\n\t\t\t\ticon={<PlusOutlined />}\r\n\t\t\t>\r\n\t\t\t\tAdd New\r\n      </Button> */}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Brands;\r\n","import React, { useState, useEffect } from 'react';\r\n\r\n// import components\r\nimport Empty from '../../components/Empty';\r\n\r\n// import hoooks\r\nimport { useHandleFetch } from '../../hooks';\r\n\r\n// import libraries\r\nimport { Input, Tree, Button, Spin } from 'antd';\r\nimport { PlusOutlined } from '@ant-design/icons';\r\n\r\nconst { Search } = Input;\r\n\r\ninterface Props {\r\n  setcategoryIds?: any;\r\n  categoryOptions?: any;\r\n  setCategoryOptions?: any;\r\n}\r\n\r\nconst Categories = ({\r\n  setcategoryIds,\r\n  categoryOptions,\r\n  setCategoryOptions,\r\n}: Props) => {\r\n  const [options, setoptions] = useState([]);\r\n  const [searchValue, setsearchValue] = useState('');\r\n\r\n  const [categoryState, handleCategoryListFetch] = useHandleFetch(\r\n    {},\r\n    'categorySelectist'\r\n  );\r\n\r\n  useEffect(() => {\r\n    const setCategories = async () => {\r\n      const categoryListRes = await handleCategoryListFetch({\r\n        urlOptions: {\r\n          params: {\r\n            isSubCategory: true,\r\n            productCountValue: true,\r\n            sortItem: 'added',\r\n            sortOrderValue: '-1',\r\n            limitNumber: 5000000,\r\n          }\r\n        }\r\n      });\r\n\r\n      // @ts-ignore\r\n      if (categoryListRes && categoryListRes.length > 0) {\r\n        // @ts-ignore\r\n        setoptions(categoryListRes);\r\n      }\r\n    };\r\n\r\n    setCategories();\r\n  }, []);\r\n\r\n  const onSelect = (selectedKeys, info) => {\r\n    // console.log('selectedKeys', selectedKeys, info);\r\n  };\r\n\r\n  const onCheck = (checkedKeys, info) => {\r\n    const checkedIds = checkedKeys.checked || [];\r\n    setcategoryIds(checkedIds);\r\n    setCategoryOptions(checkedIds);\r\n  };\r\n\r\n  const onSearchChange = (e) => {\r\n    setsearchValue(e.target.value);\r\n\r\n    if (e.target.value === '') {\r\n      if (categoryState.data && categoryState.data.length > 0) {\r\n        // @ts-ignore\r\n        const categoryNames = categoryState.data.map((cat) => {\r\n          return {\r\n            ...cat,\r\n          };\r\n        });\r\n        setoptions(categoryNames);\r\n      }\r\n    } else {\r\n      const newOptions =\r\n        options.length > 0\r\n          ? options.filter((option) => {\r\n              return (\r\n                option &&\r\n                option.title.toLowerCase().includes(searchValue.toLowerCase())\r\n              );\r\n            })\r\n          : [];\r\n\r\n      setoptions(newOptions);\r\n    }\r\n  };\r\n\r\n  console.log('categoryState', categoryState);\r\n  console.log('optionsCat', options);\r\n\r\n  return (\r\n    <div className='addProduct__categoryBoxContainer'>\r\n      {categoryState.isLoading && (\r\n        <div\r\n          style={{\r\n            padding: '15px 0',\r\n            width: '100%',\r\n            height: '100%',\r\n            display: 'flex',\r\n            justifyContent: 'center',\r\n            alignItems: 'center',\r\n          }}\r\n        >\r\n          <Spin />\r\n        </div>\r\n      )}\r\n\r\n      {categoryState.done && (\r\n        <div className='addProduct__categoryBoxContainer-searchBox'>\r\n          <Search\r\n            width={'100%'}\r\n            style={{\r\n              height: '30px',\r\n              borderRadius: '3px !important',\r\n              borderColor: '#eee !important',\r\n            }}\r\n            size='middle'\r\n            placeholder=''\r\n            onSearch={(value) => console.log(value)}\r\n            onChange={onSearchChange}\r\n          />\r\n        </div>\r\n      )}\r\n\r\n      {categoryState.done &&\r\n        categoryState.data.length > 0 &&\r\n        options.length > 0 && (\r\n          <>\r\n            <div\r\n              style={\r\n                {\r\n                  // marginLeft: \"-20px\",\r\n                }\r\n              }\r\n            >\r\n              {options.length > 0 && (\r\n                <Tree\r\n                  checkable\r\n                  checkedKeys={categoryOptions}\r\n                  onSelect={onSelect}\r\n                  onCheck={onCheck}\r\n                  treeData={options}\r\n                  defaultExpandAll={true}\r\n                  checkStrictly={true}\r\n                />\r\n              )}\r\n            </div>\r\n          </>\r\n        )}\r\n\r\n      {categoryState.done && !(options.length > 0) && (\r\n        <div\r\n          style={{\r\n            width: '100%',\r\n            height: '100%',\r\n            display: 'flex',\r\n            justifyContent: 'center',\r\n            alignItems: 'center',\r\n          }}\r\n        >\r\n          <Empty title='No category found' height={100} />\r\n        </div>\r\n      )}\r\n\r\n      {/* <div style={{\r\n\t\t\t\tmarginTop: '15px'\r\n\t\t\t}}>\r\n\r\n\t\t\t</div>\r\n\t\t\t<Button\r\n\r\n\t\t\t\t// type=\"primary\"\r\n\t\t\t\tclassName='btnSecondaryPlusOutline'\r\n\t\t\t\ticon={<PlusOutlined />}\r\n\t\t\t>\r\n\t\t\t\tAdd New\r\n      </Button> */}\r\n\r\n      {/* <CheckboxGroup options={options} value={checkedList} onChange={onChange} /> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Categories;\r\n","import React, { useState, useEffect } from 'react';\r\n\r\n// import hooks \r\nimport { useHandleFetch } from '../../hooks';\r\n\r\n\r\n// import libraries \r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { message, Tooltip, Modal, Tabs, Spin  } from 'antd';\r\nimport CKEditor from '@ckeditor/ckeditor5-react';\r\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\r\n\r\n\r\nimport {\r\n    CheckCircleOutlined,\r\n    FileImageFilled,\r\n    PlusOutlined,\r\n    CloseOutlined,\r\n    CheckOutlined,\r\n    InfoCircleOutlined\r\n} from '@ant-design/icons';\r\n\r\n\r\n\r\n// import ReactQuill from 'react-quill';\r\n// import 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport InputSmall from '../../components/Field/InputSmall';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport MediaLibrary from \"../../components/MediaLibrary\";\r\nimport DatePicker from \"../../components/Field/DatePicker\";\r\nimport { openSuccessNotification, openErrorNotification } from \"../../components/Notification\";\r\nimport Tags from \"../product/Tags\";\r\nimport Brands from \"../product/Brands\";\r\nimport Categories from \"../product/Categories\";\r\nimport Pricing from \"../product/Pricing\";\r\nimport SelectProducts from \"./SelectProducts\";\r\nimport SelectedProductItems from \"./SelectedProductItems\";\r\nimport MetaTags from \"../category/MetaTags\";\r\n\r\nconst { TabPane } = Tabs;\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    name: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\n\r\nconst initialValues = {\r\n    name: \"\",\r\n    bundlePrice: null,\r\n    startDate: \"\",\r\n    endDate: \"\",\r\n    description: '',\r\n    bnName: '',\r\n\tbnDescription: '',\r\n\tmetaTitle: '',\r\n\tbnMetaTitle: '',\r\n\tmetaDescription: '',\r\n\tbnMetaDescription: '',\r\n\tmetaTags: '',\r\n\tbnMetaTags: '',\r\n}\r\n\r\n\r\n\r\ninterface Props {\r\n    addNewCategoryVisible: any;\r\n    setAddNewCategoryVisible: any;\r\n    productList?: any;\r\n    setProductList?: any;\r\n    productDetailData?:any; \r\n}\r\n\r\nconst AddNewProduct = ({ addNewCategoryVisible, setAddNewCategoryVisible, productList: bundleList, setProductList: setBundleList, productDetailData }: Props) => {\r\n\r\n  \r\n\r\n    const [updateProductState, handleUpdateProductFetch] = useHandleFetch({}, 'updateProduct');\r\n    const [productDetailState, handleProductDetailFetch] = useHandleFetch({}, 'bundleDetail');\r\n    const [attachImageToItemMultipleState, handleAttachImageToItemMultipleFetch] = useHandleFetch({}, 'attachImageToItemMultiple');\r\n    const [attachImageToItemSingleState, handleAttachImageToItemSingleFetch] = useHandleFetch({}, 'attachImageToItemSingle');\r\n    const [detachImageFromItemMultipleState, handleDetachImageFromItemMultipleFetch] = useHandleFetch({}, 'detachImageFromItemMultiple');\r\n    const [detachImageFromItemSingleState, handleDetachImageFromItemSingleFetch] = useHandleFetch({}, 'detachImageFromItemSingle');\r\n    const [setImageAsThumbnailToItemState, handleSetImageAsThumbnailToItemFetch] = useHandleFetch({}, 'setImageAsThumbnailToItem');\r\n\r\n\r\n    const [productList,setProductList] = useState([]);\r\n    const [visible, setvisible] = useState(false);\r\n    const [myImages, setmyImages] = useState(false);\r\n    const [myThumbnailImage, setmyThumbnailImage] = useState(false);\r\n    const [isModalOpenForThumbnail, setisModalOpenForThumbnail] = useState(false);\r\n    const [isModalOpenForImages, setisModalOpenForImages] = useState(false);\r\n    const [categoryids, setcategoryIds] = useState([]);\r\n    const [tagIds, setTagIds] = useState([]);\r\n    const [brandId, setBrandId] = useState('');\r\n    const [pricing, setPricing] = useState([]);\r\n    const [coverImageId, setCoverImageId] = useState('');\r\n    const [categoryOptions, setCategoryOptions] = useState([]);\r\n    const [selectedTags, setSelectedTags] = useState([]);\r\n    const [date, setDateFeild] = useState('');\r\n    const [time, setTimeFeild] = useState('');\r\n    const [description, setDescription] = useState('');\r\n\tconst [bnDescription, setBNDescription] = useState('');\r\n\tconst [metaTags,setMetaTags] = useState([]);\r\n\tconst [bnMetaTags,setBnMetaTags] = useState([]);\r\n\tconst [editpricingItem,setEditPricingItem] = useState({}); \r\n\tconst [pricingTagActiveKey,setpricingTagActiveKey] = useState('2');\r\n\tconst [isPricingEditActive, seTisPricingEditActive] = useState(false); \r\n\r\n    const [productIds,setProductIds] = useState([]); \r\n\r\n\r\n\r\n    const [addProductState, handleAddProductFetch] = useHandleFetch({}, 'updateBundle');\r\n\r\n    useEffect(() => {\r\n        const getProductDetail = async () => {\r\n            await handleProductDetailFetch({\r\n                urlOptions: {\r\n                    placeHolders: {\r\n                        id: productDetailData.id\r\n                    }\r\n                }\r\n            })\r\n        };\r\n\r\n        getProductDetail();\r\n\r\n    }, [productDetailData]);\r\n\r\n\r\n    const [price, setPrice] = useState({\r\n        regular: null,\r\n        offer: null,\r\n    });\r\n\r\n\r\n\r\n\r\n    const handleSubmit = async (values: any, actions: any) => {\r\n        // @ts-ignore\r\n        const imagesIds = myImages ? myImages.map(image => {\r\n            return image.id;\r\n        }) : [];\r\n\r\n        console.log('productList',productList);\r\n\r\n        const products = productList.length > 0 ? productList.map(product => {\r\n            return {\r\n                _id: product._id,\r\n                variation: product.variation,\r\n                quantity: product.quantity,\r\n            }\r\n        }) : [];\r\n\r\n    \r\n            if (productDetailData && Object.keys(productDetailData).length > 0) {\r\n                const aboutToUpdatedImageIds = []; \r\n    \r\n                if(imagesIds && imagesIds.length > 0){\r\n                    imagesIds.forEach(imageId => {\r\n                        if(productDetailData && productDetailData['image']){\r\n                            if(!productDetailData['image'].includes(imageId)){\r\n                                aboutToUpdatedImageIds.push(imageId)\r\n                            }\r\n                        }\r\n                    });\r\n                }\r\n    \r\n          \r\n                if (aboutToUpdatedImageIds[0] && aboutToUpdatedImageIds.length > 1) {\r\n                    await handleAttachImageToItemMultipleFetch({\r\n                        urlOptions: {\r\n                            placeHolders: {\r\n                                collection: 'product',\r\n                                itemId: productDetailData.id\r\n                            }\r\n                        },\r\n                        body: {\r\n                            image: aboutToUpdatedImageIds\r\n                        }\r\n                    });\r\n                }\r\n                else if (aboutToUpdatedImageIds[0] && aboutToUpdatedImageIds.length < 1) {\r\n                    await handleAttachImageToItemSingleFetch({\r\n                        urlOptions: {\r\n                            placeHolders: {\r\n                                imageId: aboutToUpdatedImageIds[0].id,\r\n                                collection: 'product',\r\n                                itemId: productDetailData.id\r\n                            }\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n        \r\n            \r\n\r\n\r\n\r\n        const addProductRes = await handleAddProductFetch({\r\n            urlOptions: {\r\n                placeHolders: {\r\n                    id: productDetailData.id\r\n                }\r\n            },\r\n            body: {\r\n                name: values.name.trim(),\r\n                category: categoryids,\r\n                tags: tagIds,\r\n                brand: brandId,\r\n                price: price,\r\n                description: description,\r\n                model: values.model,\r\n                unit: values.unit,\r\n                image: imagesIds,\r\n                products,\r\n\r\n                metaTitle: values.metaTitle,\r\n\t\t\t\tmetaDescription: values.metaDescription,\r\n\t\t\t\tmetaTags: metaTags.join(','),\r\n\r\n\t\t\t\t\r\n\t\t\t\tbn: {\r\n\t\t\t\t\tmetaTitle: values.bnMetaTitle,\r\n\t\t\t\t\tmetaDescription: values.bnMetaDescription,\r\n\t\t\t\t\tmetaTags: bnMetaTags.join(','),\r\n\t\t\t\t\tname: values.bnName.trim(),\r\n\t\t\t\t\tunit: values.metaUnit,\r\n\t\t\t\t\tdescription: values.bnDescription,\r\n                }\r\n                \r\n\r\n                // startDate, endDate,\r\n            }\r\n        });\r\n\r\n\r\n        // @ts-ignore\r\n        if (addProductRes && addProductRes.status === 'ok') {\r\n            openSuccessNotification('Bundle Updated');\r\n  \r\n\r\n            setAddNewCategoryVisible(false)\r\n\r\n\r\n            const positionInAttribute = () => {\r\n\t\t\t\treturn bundleList.map(item => item.id).indexOf(productDetailData.id);\r\n\t\t\t}\r\n\r\n\t\t\tconst index = positionInAttribute();\r\n\r\n\t\t\t// @ts-ignore\r\n\t\t\tconst updatedItem = Object.assign({}, bundleList[index], { ...productDetailData, ...addProductRes });\r\n\t\t\tconst updateProductList = [...bundleList.slice(0, index), updatedItem, ...bundleList.slice(index + 1)];\r\n            setBundleList(updateProductList);\r\n            \r\n\r\n\r\n\r\n\r\n            // @ts-ignore\r\n            setmyImages([]);\r\n            setCoverImageId('');\r\n            setPricing([]);\r\n            setTagIds([]);\r\n            setSelectedTags([]);\r\n            setBrandId(\"\");\r\n            setcategoryIds([]);\r\n            setCategoryOptions([]);\r\n            actions.resetForm();\r\n        }\r\n        else {\r\n            // openErrorNotification();\r\n        }\r\n\r\n        actions.setSubmitting(false);\r\n\r\n\r\n    };\r\n\r\n\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        if (!addProductState['isLoading']) {\r\n            const error = addProductState['error'];\r\n            if (error['isError'] && Object.keys(error['error']).length > 0) {\r\n\r\n\r\n                const errors =\r\n                    Object.values(error['error']).length > 0\r\n                        ? Object.values(error['error'])\r\n                        : [];\r\n                errors.forEach((err, i) => {\r\n                    if (typeof err === 'string') {\r\n                        openErrorNotification(err)\r\n                    }\r\n                    else if (typeof err === 'object') {\r\n                        if (err && Object.keys(err).length > 0) {\r\n                            const errs = Object.values(err);\r\n                            errs.forEach(err => {\r\n                                openErrorNotification(err)\r\n                            })\r\n\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n        }\r\n    }, [addProductState])\r\n\r\n\r\n\r\n    useEffect(()=>{\r\n        if(productDetailState['data'] && productDetailState['data']['products'] && productDetailState['data']['products'].length > 0){\r\n            const productIds = productDetailState['data']['products'].map(item => {\r\n              return {\r\n                ...item,\r\n                id: item._id,\r\n              }\r\n            }); \r\n            setProductIds(productIds); \r\n            const productList = productDetailState['data'].products.map(item => {\r\n                return {\r\n                    _id: item._id,\r\n                    variation: item.variation,\r\n                    quantity: item.quantity,\r\n                    totalPrice: item.totalPrice \r\n                }\r\n            }); \r\n           setProductList(productList); \r\n\r\n        }; \r\n        \r\n        console.log(\"productDetailState['data']\",productDetailState['data']);\r\n    },[productDetailState['done']])\r\n\r\n\r\n\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        if (productIds && productIds.length > 0 && productList) {\r\n            if (productIds.length > productList.length) {\r\n                const variation = productIds[productIds.length - 1]['pricing'] && productIds[productIds.length - 1]['pricing'].length > 0 && productIds[productIds.length - 1]['pricing'][0]['_id'];\r\n                console.log('variation', variation)\r\n\r\n                setProductList([...productList, {\r\n                    ...productIds[productIds.length - 1],\r\n                    _id: productIds[productIds.length - 1]['id'],\r\n                    variation: variation,\r\n                    quantity: 1\r\n                }]);\r\n            }\r\n\r\n\r\n            else if (productIds.length < productList.length) {\r\n                console.log('productIds', productIds);\r\n                console.log('productList', productList);\r\n\r\n                const newProductList = productList.filter(item => {\r\n                    let isTrue = false;\r\n                    productIds.forEach(product => {\r\n                        if (product.id === item._id) {\r\n                            isTrue = true;\r\n                        }\r\n                    });\r\n                    return isTrue;\r\n                })\r\n                setProductList(newProductList);\r\n            }\r\n\r\n        }\r\n        else {\r\n            setProductList([]);\r\n        }\r\n        // console.log('productIds', productIds)\r\n\r\n    }, [productIds])\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        if (productDetailData && productDetailData.brand) {\r\n            setBrandId(productDetailData.brand['id']);\r\n        }\r\n        else {\r\n            setBrandId('');\r\n        }\r\n        if (productDetailData && productDetailData.tags && productDetailData.tags.length > 0) {\r\n            // const tagIds = productDetailData.tags.map(item => item.id);\r\n            setSelectedTags(productDetailData.tags);\r\n        }\r\n        else {\r\n            setSelectedTags([]);\r\n\r\n        }\r\n        if (productDetailData && productDetailData.category && productDetailData.category.length > 0) {\r\n            // const categoryIds = productDetailData.category.map(item => item.id);\r\n\r\n            const categoryIds = productDetailData.category;\r\n            setCategoryOptions(categoryIds);\r\n            setcategoryIds(categoryIds); \r\n        }\r\n        else {\r\n            setCategoryOptions([]);\r\n        }\r\n\r\n        if (productDetailData && productDetailData.anotherPrice && productDetailData.anotherPrice) {\r\n            setPrice(productDetailData.anotherPrice); \r\n        }\r\n        else {\r\n            setPricing([]);\r\n\r\n        }\r\n\r\n\r\n        if (productDetailData && productDetailData.date && productDetailData.date) {\r\n            setDateFeild(productDetailData.date)\r\n        }\r\n        else {\r\n            setDateFeild('');\r\n\r\n        }\r\n\r\n        if (productDetailData && productDetailData.time && productDetailData.time) {\r\n            setTimeFeild(productDetailData.time);\r\n        }\r\n        else {\r\n            setTimeFeild('');\r\n        }\r\n\r\n\r\n\r\n    }, [productDetailData]);\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        if (productDetailState.done && Object.keys(productDetailState).length > 0) {\r\n\r\n            const images = productDetailState.data.image;\r\n            if (images && images.length > 0) {\r\n                setmyImages(images);\r\n            }\r\n\r\n            if (productDetailState.data.cover && productDetailState.data.cover['id']) {\r\n                // @ts-ignore\r\n                setmyImages([productDetailState.data.cover, ...images]);\r\n                console.log('catcat', [productDetailState.data.cover, ...images]);\r\n                setCoverImageId(productDetailState.data.cover['id']);\r\n            }\r\n        }\r\n    }, [productDetailState])\r\n\r\n\r\n    useEffect(() => {\r\n        console.log('thumnail', myImages);\r\n        // @ts-ignore\r\n        if (myImages && myImages[0] && myImages.length < 2) {\r\n            console.log('thumnail2', myImages);\r\n\r\n            if (coverImageId !== myImages[0].id) {\r\n                setCoverImageId(myImages[0].id);\r\n                handleSetImageAsThumnail(myImages[0]);\r\n            }\r\n\r\n        }\r\n\r\n    }, [myImages])\r\n\r\n\r\n    const handleDetachSingleImage = async id => {\r\n        await handleDetachImageFromItemSingleFetch({\r\n            urlOptions: {\r\n                placeHolders: {\r\n                    imageId: id,\r\n                    collection: 'product',\r\n                    itemId: productDetailData.id\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n\r\n\r\n    const handleSetImageAsThumnail = async image => {\r\n\r\n        const thumbnailRes = await handleSetImageAsThumbnailToItemFetch({\r\n            urlOptions: {\r\n                placeHolders: {\r\n                    imageId: image.id,\r\n                    collection: 'product',\r\n                    itemId: productDetailData.id\r\n                }\r\n            }\r\n        });\r\n\r\n        console.log('thumbnailRes', thumbnailRes);\r\n\r\n        // @ts-ignore\r\n        if (thumbnailRes && thumbnailRes.status === 'ok') {\r\n            openSuccessNotification('Set as thumbnail!')\r\n            // const positionInBrand = () => {\r\n            //     return productList.map(item => item.id).indexOf(productDetailData.id);\r\n            // }\r\n\r\n            // const index = positionInBrand();\r\n\r\n            // const prevItem = productList.find(item => item.id === productDetailData.id);\r\n\r\n            // if (prevItem) {\r\n            //     console.log('prevItem--', prevItem, 'image--', image);\r\n            //     const updatedItem = Object.assign({}, productList[index], { ...prevItem, cover: image.cover });\r\n            //     const updateProductList = [...productList.slice(0, index), updatedItem, ...productList.slice(index + 1)];\r\n            //     setProductList(updateProductList);\r\n\r\n            // }\r\n        }\r\n        else {\r\n            openErrorNotification(\"Couldn't set as thumbnail, Something went wrong\")\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        if (!updateProductState['isLoading']) {\r\n            const error = updateProductState['error'];\r\n            if (error['isError'] && Object.keys(error['error']).length > 0) {\r\n\r\n\r\n                const errors =\r\n                    Object.values(error['error']).length > 0\r\n                        ? Object.values(error['error'])\r\n                        : [];\r\n                errors.forEach((err, i) => {\r\n                    if (typeof err === 'string') {\r\n                        openErrorNotification(err)\r\n                    }\r\n                    else if (typeof err === 'object') {\r\n                        if (err && Object.keys(err).length > 0) {\r\n                            const errs = Object.values(err);\r\n                            errs.forEach(err => {\r\n                                openErrorNotification(err)\r\n                            })\r\n\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n        }\r\n    }, [updateProductState])\r\n\r\n\r\n    const handleCancel = (e: any) => {\r\n        setAddNewCategoryVisible(false);\r\n    };\r\n\r\n\r\n    const getisSubmitButtonDisabled = (values, isValid) => {\r\n        if (!values.name || !(pricing.length > 0) || !(categoryOptions.length > 0) || !isValid) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n\r\n    const handleImagesDelete = (id) => {\r\n        // @ts-ignore\r\n        const newImages = myImages && myImages.filter(image => {\r\n            return image.id !== id;\r\n        })\r\n\r\n        setmyImages(newImages);\r\n    }\r\n\r\n    const handleDeleteFromSelectedImage = () => {\r\n\r\n    };\r\n\r\n    const handleThumbnailImageDelete = (id) => {\r\n        // @ts-ignore\r\n        const newImages = myThumbnailImage && myThumbnailImage.filter(image => {\r\n            return image.id !== id;\r\n        })\r\n\r\n        if (newImages.length > 0) {\r\n            setmyThumbnailImage(newImages);\r\n\r\n        }\r\n        else setmyThumbnailImage(false);\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    useEffect(()=>{\r\n\r\n        if(productDetailState.data && Object.keys(productDetailState.data).length > 0 && productDetailState.data.metaTags){\r\n            const metaTags = productDetailState.data.metaTags.split(','); \r\n\r\n            console.log('localMetaTags',metaTags);\r\n           \r\n            const bnMetaTags = productDetailState.data.bn['metaTags'].split(','); \r\n            setMetaTags(metaTags)\r\n            setBnMetaTags(bnMetaTags)\r\n        }\r\n\r\n    },[productDetailState['done']])\r\n\r\n\r\n\r\n\r\n    return (\r\n        <Formik\r\n            onSubmit={(values, actions) => handleSubmit(values, actions)}\r\n            validationSchema={validationSchema}\r\n            validateOnBlur={false}\r\n            enableReinitialize={true}\r\n            initialValues={\r\n                { ...initialValues,\r\n                    ...{\r\n                    ...productDetailData,\r\n                    ...( productDetailState['data'] && Object.keys(productDetailState['data']).length > 0 && productDetailState['data']['bn'] && {\r\n                        bnMetaTitle: productDetailState['data']['bn'].metaTitle,\r\n                        bnMetaDescription: productDetailState['data']['bn'].metaDescription,\r\n                        bnName: productDetailState['data']['bn'].name,\r\n                        metaUnit: productDetailState['data']['bn'].unit,\r\n                        bnDescription: productDetailState['data']['bn'].description,\r\n                      }),\r\n                } }\r\n            }\r\n        >\r\n            {({\r\n                handleChange,\r\n                values,\r\n                handleSubmit,\r\n                errors,\r\n                isValid,\r\n                isSubmitting,\r\n                touched,\r\n                handleBlur,\r\n                setFieldTouched,\r\n                handleReset,\r\n            }) => (\r\n                    <>\r\n                        <Modal\r\n                            style={{\r\n                                top: '40px',\r\n\r\n                            }}\r\n                            bodyStyle={{\r\n                                margin: 0,\r\n                                padding: 0,\r\n                            }}\r\n                            width={'70vw'}\r\n                            title=\"Add New Bundle\"\r\n                            visible={addNewCategoryVisible}\r\n                            onOk={(e: any) => handleSubmit(e)}\r\n                            onCancel={handleCancel}\r\n                            okText='Update'\r\n                            okButtonProps={{\r\n                                loading: isSubmitting,\r\n                                htmlType: \"submit\",\r\n                            }}\r\n                        >\r\n\r\n\r\n                            <section className='addProductGridContainer'>\r\n                                <div className='addProductGridContainer__left'>\r\n                                    <div className='addProductGridContainer__name'>\r\n                                        <div className='addProductGridContainer__item-header'>\r\n                                            <h3>\r\n                                                Bundle Information *\r\n\t\t\t                                </h3>\r\n\r\n                                            <div className={values.name && values.name.length > 2 ? 'checkicon-active' : 'checkicon'}>\r\n                                                <CheckCircleOutlined />\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className='addProductGridContainer__item-body'>\r\n                                        <Input\r\n\t\t\t\t\t\t\t\t\t\t\t\tlabel='Name'\r\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.name}\r\n\t\t\t\t\t\t\t\t\t\t\t\tplaceHolder={'Rafty ox'}\r\n\t\t\t\t\t\t\t\t\t\t\t\tname='name'\r\n\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['name'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['name'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('name');\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\tlabel='BN Name'\r\n\t\t\t\t\t\t\t\t\t\t\tvalue={values.bnName}\r\n\t\t\t\t\t\t\t\t\t\t\tplaceHolder={'রাফতি অক্স'}\r\n\t\t\t\t\t\t\t\t\t\t\tname='bnName'\r\n\t\t\t\t\t\t\t\t\t\t\tisError={(touched.bnName && errors.bnName) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['bnName'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.bnName && errors.bnName) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['bnName'])}\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('bnName');\r\n\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\r\n\r\n\r\n                                    \r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\t\t\t\t\t\tDescription\r\n                                             </h3>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\twidth: '100%',\r\n\t\t\t\t\t\t\t\t\t\t\t\tmaxWidth: '100%'\r\n\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<CKEditor\r\n\t\t\t\t\t\t\t\t\t\t\t\t\teditor={ClassicEditor}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tdata={description}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonInit={editor => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t// You can store the \"editor\" and use when it is needed.\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tconsole.log('Editor is ready to use!', editor);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(event, editor) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tconst data = editor.getData();\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetDescription(data);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonBlur={(event, editor) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tconsole.log('Blur.', editor);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonFocus={(event, editor) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tconsole.log('Focus.', editor);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tmarginTop:\"15px\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}></div>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\t\t\t\t\t\tBN Description\r\n                                             </h3>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\twidth: '100%',\r\n\t\t\t\t\t\t\t\t\t\t\t\tmaxWidth: '100%'\r\n\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<CKEditor\r\n\t\t\t\t\t\t\t\t\t\t\t\t\teditor={ClassicEditor}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tdata={bnDescription}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonInit={editor => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t// You can store the \"editor\" and use when it is needed.\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tconsole.log('Editor is ready to use!', editor);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(event, editor) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tconst data = editor.getData();\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetBNDescription(data);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonBlur={(event, editor) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tconsole.log('Blur.', editor);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonFocus={(event, editor) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tconsole.log('Focus.', editor);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n                                            {/* <div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\tdisplay: 'flex',\r\n\t\t\t\t\t\t\t\t\t\t\t\tjustifyContent: 'space-between'\r\n\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\twidth: '48%',\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<DatePicker\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabel='Date'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={handleDateChange} />\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\twidth: '48%'\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<DatePicker\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tdate={date}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\twithTime={true}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder='Select time'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabel='Time'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={handleTimeChange} />\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t</div> */}\r\n                                            <div style={{\r\n                                                marginBottom: '15px'\r\n                                            }}></div>\r\n                                            {/* \r\n\t\t\t\t\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\t\t\t\t\trows={1}\r\n\t\t\t\t\t\t\t\t\t\t\t\tlabel='Venue'\r\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.venue}\r\n\t\t\t\t\t\t\t\t\t\t\t\tname='venue'\r\n\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.venue && errors.venue) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['venue'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.venue && errors.venue) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['venue'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('venue');\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\t\tlabel='Purchase Limit'\r\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.purchaseLimit}\r\n\t\t\t\t\t\t\t\t\t\t\t\ttype='number'\r\n\t\t\t\t\t\t\t\t\t\t\t\tname='purchaseLimit'\r\n\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.purchaseLimit && errors.purchaseLimit) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['purchaseLimit'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.purchaseLimit && errors.purchaseLimit) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['purchaseLimit'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('purchaseLimit');\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t/> */}\r\n\r\n                                            <div className='addProductGridContainer__item-body-variationCard-item'>\r\n                                                <h4>\r\n                                                    Price *\r\n\t\t\t                                \t</h4>\r\n                                                <div className='addProductGridContainer__item-body-variationCard-item-container'>\r\n                                                    <div className='addProductGridContainer__item-body-variationCard-item-container-left'>\r\n                                                        <InputSmall\r\n                                                            label='Regular'\r\n                                                            value={price.regular}\r\n                                                            name='regular'\r\n                                                            onChange={(e) => setPrice({\r\n                                                                ...price,\r\n                                                                regular: e.target.value\r\n                                                            })}\r\n                                                        />\r\n\r\n\r\n                                                    </div>\r\n                                                    <div className='addProductGridContainer__item-body-variationCard-item-container-right'>\r\n\r\n                                                        <InputSmall\r\n                                                            label='Offer'\r\n                                                            value={price.offer}\r\n                                                            name='offer'\r\n                                                            onChange={(e) => setPrice({\r\n                                                                ...price,\r\n                                                                offer: e.target.value\r\n                                                            })}\r\n                                                        />\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n\r\n\r\n\r\n                                            {/* <div style={{\r\n                                                display: 'flex',\r\n                                                justifyContent: 'space-between'\r\n                                            }}>\r\n                                                <div style={{\r\n                                                    width: '48%',\r\n                                                }}>\r\n                                                    <DatePicker\r\n                                                        date={startDate}\r\n                                                        label='Start Date'\r\n                                                        onChange={handleStartDataChange} />\r\n\r\n                                                </div>\r\n                                                <div style={{\r\n                                                    width: '48%'\r\n                                                }}>\r\n\r\n                                                    <DatePicker\r\n                                                        date={endDate}\r\n                                                        label='End Date'\r\n                                                        onChange={handleEndDataChange} />\r\n\r\n                                                </div>\r\n                                            </div> */}\r\n\r\n\r\n                                        </div>\r\n\r\n\r\n\r\n                                    </div>\r\n\r\n                                    {/* <div className='addProductGridContainer__price'>\r\n                                        <div className='addProductGridContainer__item-header'>\r\n                                            <h3>\r\n                                                Products\r\n\t\t                                    </h3>\r\n\r\n                                            <div className={pricing && pricing.length > 0 ? 'checkicon-active' : 'checkicon'}>\r\n                                                <CheckCircleOutlined />\r\n                                            </div>\r\n                                        </div>\r\n\r\n\r\n                                        <div className='addProductGridContainer__item-body'>\r\n\r\n                                            <h3 className='inputFieldLabel'>\r\n                                                Products\r\n                                            </h3>\r\n                                            <SelectProducts\r\n                                                setProductIds={setProductIds}\r\n                                                productIds={productIds}\r\n                                            />\r\n\r\n                                            <div style={{\r\n                                                marginTop: \"15px\"\r\n                                            }}></div>\r\n\r\n                                            <h3 className='inputFieldLabel'>\r\n                                                Selcted Products\r\n                                            </h3>\r\n\r\n                                            <SelectedProductItems\r\n                                                productList={productList}\r\n                                                setProductList={setProductList}\r\n                                            />\r\n                                        </div>\r\n                                    </div> */}\r\n\r\n\r\n                                    <div className='addProductGridContainer__image'>\r\n\r\n                                <div className='addProductGridContainer__item-header'>\r\n                                    <h3>\r\n                                        Image\r\n                                </h3>\r\n\r\n                                    <Tooltip\r\n                                        placement=\"left\" title={'Click on the image to select cover image, By default 1st image is selected as cover'}>\r\n                                        <a href='###'>\r\n                                            <InfoCircleOutlined />\r\n                                        </a>\r\n                                    </Tooltip>\r\n</div>\r\n\r\n<div\r\n    style={{\r\n        padding: \"10px\"\r\n    }}\r\n    className='aboutToUploadImagesContainer'>\r\n    {productDetailState.isLoading && (\r\n        <div style={{\r\n            padding: '20px 0'\r\n        }}>\r\n            <Spin />\r\n        </div>\r\n    )}\r\n    {productDetailState.done && (\r\n        <>\r\n            {myImages &&\r\n                // @ts-ignore\r\n                myImages.length > 0 && myImages.map((image, index) => {\r\n                    return (\r\n                        <div className='aboutToUploadImagesContainer__item'>\r\n                            <div\r\n                                className='aboutToUploadImagesContainer__item-imgContainer'\r\n                                onClick={() => {\r\n                                    setCoverImageId(image.id);\r\n                                    handleSetImageAsThumnail(image);\r\n                                }}\r\n                            >\r\n                                <img src={image.cover} alt={image.alt} />\r\n                            </div>\r\n\r\n                            <span\r\n                                onClick={() => {\r\n                                    handleImagesDelete(image.id)\r\n                                    handleDetachSingleImage(image.id)\r\n                                }\r\n\r\n                                }\r\n                                className='aboutToUploadImagesContainer__item-remove'>\r\n                                <CloseOutlined />\r\n                            </span>\r\n\r\n\r\n                            {coverImageId === image.id ? (\r\n                                <span className='aboutToUploadImagesContainer__item-cover'>\r\n                                    <CheckOutlined />\r\n                                </span>\r\n                            ) : !coverImageId && index === 0 && (\r\n                                <span className='aboutToUploadImagesContainer__item-cover'>\r\n                                    <CheckOutlined />\r\n                                </span>\r\n                            )}\r\n\r\n\r\n                        </div>\r\n                    )\r\n                })}\r\n\r\n\r\n            <Tooltip\r\n                title={'Attach images'}>\r\n\r\n                <div\r\n                    onClick={() => {\r\n                        setvisible(true);\r\n                        setisModalOpenForImages(true);\r\n                        setisModalOpenForThumbnail(false);\r\n                    }}\r\n                    className='aboutToUploadImagesContainer__uploadItem'>\r\n                    {/* <FileAddOutlined />\r\n            <FileImageTwoTone />\r\n            <FileImageOutlined /> */}\r\n                    <FileImageFilled />\r\n                    {/* <h5>\r\n             Select From Library\r\n    <     /h5> */}\r\n                    <span className='aboutToUploadImagesContainer__uploadItem-plus'>\r\n                        <PlusOutlined />\r\n                    </span>\r\n                </div>\r\n            </Tooltip>\r\n        </>\r\n    )}\r\n\r\n</div>\r\n</div>\r\n\r\n\r\n<div className='addProductGridContainer__image'>\r\n\r\n<div className='addProductGridContainer__item-header'>\r\n    <h3>\r\n    Meta Data\r\n</h3>\r\n\r\n    <Tooltip\r\n        placement=\"left\" title={\"Meta data will be used to make the user's easy and for search engine optimization.\"}>\r\n        <a href='###'>\r\n            <InfoCircleOutlined />\r\n        </a>\r\n    </Tooltip>\r\n</div>\r\n<div className='addProductGridContainer__item-body'>\r\n\r\n                \r\n<Input\r\nlabel='Meta title'\r\nvalue={values.metaTitle}\r\nplaceHolder={'category...'}\r\nname='metaTitle'\r\nisError={(touched.metaTitle && errors.metaTitle) ||\r\n(!isSubmitting && addProductState.error['error']['metaTitle'])}\r\n\r\nerrorString={(touched.metaTitle && errors.metaTitle) ||\r\n(!isSubmitting && addProductState.error['error']['metaTitle'])}\r\nonChange={(e: any) => {\r\nhandleChange(e);\r\nsetFieldTouched('metaTitle')\r\n}}\r\n/>\r\n\r\n<Input\r\nlabel='BN Meta title'\r\nvalue={values.bnMetaTitle}\r\nplaceHolder={'ক্যাটাগড়ি...'}\r\nname='bnMetaTitle'\r\nisError={(touched.bnMetaTitle && errors.bnMetaTitle) ||\r\n(!isSubmitting && addProductState.error['error']['bnMetaTitle'])}\r\n\r\nerrorString={(touched.bnMetaTitle && errors.bnMetaTitle) ||\r\n(!isSubmitting && addProductState.error['error']['bnMetaTitle'])}\r\nonChange={(e: any) => {\r\nhandleChange(e);\r\nsetFieldTouched('bnMetaTitle');\r\n}}\r\n/>\r\n\r\n<TextArea\r\nlabel='Meta description'\r\nvalue={values.metaDescription}\r\nplaceholder={'meta...'}\r\nname='metaDescription'\r\nisError={(touched.metaDescription && errors.metaDescription) ||\r\n(!isSubmitting && addProductState.error['error']['metaDescription'])}\r\n\r\nerrorString={(touched.metaDescription && errors.metaDescription) ||\r\n(!isSubmitting && addProductState.error['error']['metaDescription'])}\r\nonChange={(e: any) => {\r\nhandleChange(e);\r\nsetFieldTouched('metaDescription');\r\n}}\r\n/>\r\n\r\n<TextArea\r\nlabel='BN Meta Description'\r\nvalue={values.bnMetaDescription}\r\nplaceholder={'এইয় মেট...'}\r\nname='bnMetaDescription'\r\nisError={(touched.bnMetaDescription && errors.bnMetaDescription) ||\r\n(!isSubmitting && addProductState.error['error']['bnMetaDescription'])}\r\n\r\nerrorString={(touched.bnMetaDescription && errors.bnMetaDescription) ||\r\n(!isSubmitting && addProductState.error['error']['bnMetaDescription'])}\r\nonChange={(e: any) => {\r\nhandleChange(e);\r\nsetFieldTouched('bnMetaDescription');\r\n}}\r\n/>\r\n\r\n<h3 className='inputFieldLabel'>\r\nMeta Tags (grocery,fashion)\r\n</h3>\r\n\r\n<MetaTags\r\n// @ts-ignore\r\nsetTags={setMetaTags}\r\ntags={metaTags}\r\n/>\r\n\r\n<div style={{\r\nmarginTop:'15px'\r\n}}></div>\r\n\r\n<h3 className='inputFieldLabel'>\r\nBN Meta Tags (মুদিখানা,ফ্যাশন)\r\n</h3>\r\n\r\n<MetaTags\r\n// @ts-ignore\r\nsetTags={setBnMetaTags}\r\ntags={bnMetaTags}\r\n/>\r\n</div>\r\n</div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n                                </div>\r\n                                <div className='addProductGridContainer__right'>\r\n                                    <div className='addProductGridContainer__category'>\r\n\r\n                                        <div className='addProductGridContainer-rightItemContainer'>\r\n                                            <div className='addProductGridContainer-rightItemContainer-header'>\r\n                                                <h3>\r\n                                                    Categories *\r\n\t\t\t                                \t</h3>\r\n\r\n                                                <Tooltip\r\n                                                    color='red'\r\n                                                    visible={addProductState.error['error']['category'] && !(categoryids.length > 0)}\r\n                                                    placement=\"left\" title={'Select at least one category'}>\r\n                                                    <div className={!(categoryids.length > 0)\r\n                                                        && !addProductState.error['error']['category'] ? 'checkicon' : addProductState.error['error']['category'] ? 'checkicon-error' : 'checkicon-active'}>\r\n                                                        <CheckCircleOutlined />\r\n                                                    </div>\r\n                                                </Tooltip>\r\n\r\n                                            </div>\r\n                                            <div className='addProductGridContainer-rightItemContainer-body'>\r\n                                                <Categories\r\n                                                    setCategoryOptions={setCategoryOptions}\r\n                                                    categoryOptions={categoryOptions}\r\n                                                    setcategoryIds={setcategoryIds} />\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                    </div>\r\n\r\n                                    <div className='addProductGridContainer__tag'>\r\n                                        <div className='addProductGridContainer-rightItemContainer'>\r\n                                            <div className='addProductGridContainer-rightItemContainer-header'>\r\n                                                <h3>\r\n                                                    Tags\r\n\t\t\t\t</h3>\r\n                                            </div>\r\n                                            <div className='addProductGridContainer-rightItemContainer-body'>\r\n                                                <Tags\r\n                                                    setSelectedTags={setSelectedTags}\r\n                                                    selectedTags={selectedTags}\r\n                                                    setTagIds={setTagIds} />\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                    </div>\r\n                                    <div className='addProductGridContainer__brand'>\r\n                                        <div className='addProductGridContainer-rightItemContainer'>\r\n                                            <div className='addProductGridContainer-rightItemContainer-header'>\r\n                                                <h3>\r\n                                                    Brand\r\n\t\t\t\t</h3>\r\n                                            </div>\r\n                                            <div className='addProductGridContainer-rightItemContainer-body'>\r\n                                                <Brands setBrandId={setBrandId} />\r\n                                            </div>\r\n                                        </div>\r\n\r\n\r\n                                    </div>\r\n\r\n                                </div>\r\n                            </section>\r\n\r\n\r\n                        </Modal>\r\n\r\n                        <MediaLibrary\r\n                            setvisible={setvisible}\r\n                            visible={visible}\r\n                            setmyImages={setmyImages}\r\n                            myImages={myImages}\r\n                            setmyThumbnailImage={setmyThumbnailImage}\r\n                            isModalOpenForThumbnail={isModalOpenForThumbnail}\r\n                            isModalOpenForImages={isModalOpenForImages}\r\n\r\n                        />\r\n                    </>\r\n                )}\r\n        </Formik>\r\n\r\n\r\n\r\n\r\n    );\r\n};\r\n\r\nexport default AddNewProduct;\r\n\r\n\r\n\r\n\r\n/*\r\n\r\n\r\nProduct variation ---->\r\n\r\nPrice [title]\r\n\t[regular input field] [offer inputfield]\r\n\r\nStock [title]\r\n\t[available input field] [minimum inputfield]\r\n\r\ndefault [default can be set to true]\r\n\r\nattributes [title]\r\n\t[add attributes name]\r\n\t\t[add attrubutes value]\r\n\r\n\t[add attributes name]\r\n\t\t[add attrubutes value\r\n\r\n*///","import React, { useEffect, useState } from 'react';\r\nimport { useHandleFetch } from '../../hooks';\r\nimport { Select, Skeleton } from 'antd';\r\n\r\n\r\ninterface Props {\r\n    setProductIds?: any;\r\n    productIds?: any;\r\n}\r\n\r\n\r\nconst Tags = ({\r\n    setProductIds,\r\n    productIds\r\n}: Props) => {\r\n    const [options, setoptions] = useState([]);\r\n    const [selectedOpions, setselectedOptions] = useState([]);\r\n    const [tagState, handleTagListFetch] = useHandleFetch({}, 'productList');\r\n    const [isProductIdsfirstTime,setProductIdsfirstTime] = useState(false); \r\n\r\n    useEffect(() => {\r\n        const setTags = async () => {\r\n            const tagListRes = await handleTagListFetch({\r\n                urlOptions: {\r\n                    params: {\r\n                        sortItem: 'added',\r\n                        sortOrderValue: '-1'\r\n                    }\r\n                }\r\n            });\r\n\r\n            // @ts-ignore\r\n            if (tagListRes && tagListRes.length > 0) {\r\n                // @ts-ignore\r\n                const tagOptions = tagListRes.map((tag) => {\r\n                    return tag.name\r\n                });\r\n                setoptions(tagOptions);\r\n            }\r\n\r\n        };\r\n\r\n        setTags();\r\n    }, []);\r\n\r\n\r\n\r\n    useEffect(()=>{\r\n\r\n        if(productIds && productIds.length > 0 && !isProductIdsfirstTime){\r\n            const selectItems = productIds.map((tag) => {\r\n                return tag.id\r\n            });\r\n\r\n            setselectedOptions(selectItems);\r\n            // setoptions(tagOptions);\r\n        }; \r\n\r\n    },[productIds])\r\n\r\n\r\n    const handleChange = (selectItems) => {\r\n        setselectedOptions(selectItems);\r\n        console.log('selectItems',selectItems); \r\n\r\n        if (tagState.done && tagState.data.length > 0 && selectItems.length > 0) {\r\n            const selectedCategoryIds = selectItems.map((item) => {\r\n                const selectedcategory = tagState.data.find(\r\n                    (cat) => cat.name.toLowerCase() === item.toLowerCase()\r\n                );\r\n                if (selectedcategory) {\r\n                    return selectedcategory;\r\n                }\r\n            });\r\n\r\n            setProductIds(selectedCategoryIds);\r\n        }\r\n        else {\r\n            setProductIds([])\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <Skeleton loading={tagState.isLoading}>\r\n                {tagState.done && tagState.data.length > 0 && <Select\r\n                    mode=\"multiple\"\r\n                    placeholder=\"search products\"\r\n                    value={selectedOpions}\r\n                    onChange={handleChange}\r\n                    style={{ width: '100%' }}\r\n                >\r\n                    {options.filter(o => !selectedOpions.includes(o)).map(item => (\r\n                        <Select.Option key={item} value={item}>\r\n                            {item}\r\n                        </Select.Option>\r\n                    ))}\r\n                </Select>}\r\n            </Skeleton>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Tags\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useHandleFetch } from '../../hooks';\r\n\r\n\r\n// import lib \r\n\r\n\r\n\r\n\r\ninterface Props {\r\n    setProductList?: any;\r\n    productList?: any;\r\n    productId?: any;\r\n    quantity?: any;\r\n    item?: any\r\n    variation?: any;\r\n}\r\n\r\nconst CartOverLayCartItem = ({\r\n    productList,\r\n    setProductList,\r\n    productId,\r\n    quantity,\r\n    item,\r\n    variation\r\n}: Props) => {\r\n\r\n\r\n    const [productDetailState, handleProductFetch] = useHandleFetch(\r\n        {},\r\n        'productDetailById'\r\n    );\r\n    const [product, setProduct] = useState({});\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [modifiedPrice, setModifiedPrice] = useState('');\r\n    const [selectedVariationId, setSelectedVariationId] = useState(variation);\r\n\r\n\r\n\r\n    console.log('productDetailStateByOrder',productDetailState); \r\n    \r\n    useEffect(() => {\r\n        setIsLoading(true);\r\n        const getAndSetProduct = async () => {\r\n            const product = await handleProductFetch({\r\n                urlOptions: {\r\n                    placeHolders: {\r\n                        id: productId,\r\n                    },\r\n                },\r\n            });\r\n\r\n            // @ts-ignore\r\n            setProduct(product);\r\n            setIsLoading(false);\r\n        };\r\n        getAndSetProduct()\r\n    }, []);\r\n\r\n\r\n\r\n    // useEffect(() => {\r\n    //     const positionInAttribute = () => {\r\n    //         return attributeList.map(item => item.id).indexOf(attribute.id);\r\n    //     }\r\n\r\n    //     const index = positionInAttribute();\r\n\r\n    //     const updatedItem = Object.assign({}, attributeList[index], { ...attributeItem });\r\n    //     const updateProductList = [...attributeList.slice(0, index), updatedItem, ...attributeList.slice(index + 1)];\r\n    //     setProductList(updateProductList);\r\n\r\n    // }, [attributeItem])\r\n\r\n\r\n    const handleAttributeDelete = () => {\r\n\r\n        const updateProductList = productList.filter(item => item._id !== productId);\r\n        setProductList(updateProductList);\r\n    }\r\n\r\n\r\n    const handleChangeQuantity = async (value) => {\r\n        if (value === 'minus') {\r\n            if (quantity === 1) {\r\n                return;\r\n            }\r\n\r\n            const positionInAttribute = () => {\r\n                return productList.map(item => item._id).indexOf(productId);\r\n            }\r\n\r\n            const index = positionInAttribute();\r\n\r\n            const updatedItem = Object.assign({}, productList[index], { ...item, quantity: --quantity });\r\n            const updateAttributeList = [...productList.slice(0, index), updatedItem, ...productList.slice(index + 1)];\r\n            setProductList(updateAttributeList);\r\n\r\n\r\n        } else {\r\n            const positionInAttribute = () => {\r\n                return productList.map(item => item._id).indexOf(productId);\r\n            }\r\n\r\n            const index = positionInAttribute();\r\n\r\n            const updatedItem = Object.assign({}, productList[index], { ...item, quantity: ++quantity });\r\n            const updateAttributeList = [...productList.slice(0, index), updatedItem, ...productList.slice(index + 1)];\r\n            setProductList(updateAttributeList)\r\n\r\n        }\r\n    };\r\n\r\n\r\n    const convertAttributeValuesToStringValue = (attribute) => {\r\n        const value = [];\r\n\r\n        let attributeValues = Object.values(attribute);\r\n        attributeValues.forEach(attributeValue => {\r\n            // @ts-ignore\r\n            value.push(attributeValue)\r\n        })\r\n\r\n        return value.join(',');\r\n    };\r\n\r\n\r\n\r\n\r\n    const getPricingOptions = (pricing) => {\r\n        if (pricing && pricing.length > 0) {\r\n            const pricingOptions = [];\r\n\r\n            pricing.forEach(pricingItem => {\r\n\r\n                if (Object.values(pricingItem.attribute).length > 0 && pricingItem._id) {\r\n                    let pricingOption = {\r\n                        value: pricingItem._id,\r\n                        label: `${convertAttributeValuesToStringValue(pricingItem.attribute) || ''}`\r\n                    }\r\n                    // @ts-ignore\r\n                    pricingOptions.push(pricingOption)\r\n                }\r\n\r\n            })\r\n\r\n            return pricingOptions;\r\n        }\r\n        else return false\r\n    };\r\n\r\n    const pricingOptions = item && Object.keys(item).length > 0 ? getPricingOptions(item.pricing) : [];\r\n\r\n\r\n    console.log('pricingOptions', pricingOptions);\r\n\r\n    const handleAttributeChange = (tagId) => {\r\n        setSelectedVariationId(tagId);\r\n\r\n        const positionInAttribute = () => {\r\n            return productList.map(item => item._id).indexOf(productId);\r\n        }\r\n\r\n        const index = positionInAttribute();\r\n\r\n        const updatedItem = Object.assign({}, productList[index], { ...item, quantity: 1 });\r\n        const updateAttributeList = [...productList.slice(0, index), updatedItem, ...productList.slice(index + 1)];\r\n        setProductList(updateAttributeList);\r\n\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        const getPriceByVariationId = (id) => {\r\n            const pricing = item && Object.keys(item).length > 0 ? item.pricing : false;\r\n            if (pricing) {\r\n                const priceItem = pricing.find(pricingItem => pricingItem._id === id);\r\n                console.log('priceItem', id);\r\n\r\n                if (priceItem && priceItem.price.regular) {\r\n                    return priceItem.price.offer\r\n                        && parseInt(priceItem.price.offer)\r\n                        ? priceItem.price.offer : priceItem.price.regular\r\n                }\r\n                else return false;\r\n            }\r\n        }\r\n\r\n        if (selectedVariationId) {\r\n            const price = getPriceByVariationId(selectedVariationId);\r\n            setModifiedPrice(price);\r\n        }\r\n\r\n    }, [selectedVariationId]);\r\n\r\n\r\n\r\n    console.log('modifiedPrice', modifiedPrice);\r\n    return (\r\n        <>\r\n\r\n            {item && Object.keys(item).length > 0 && (\r\n                <div className='cart-item' key={''}>\r\n                    <div className='cart-item-quantityCounter'>\r\n                        <i\r\n                            onClick={() => {\r\n                                handleChangeQuantity('plus');\r\n                            }}\r\n                            className='fa fa-chevron-up'\r\n\r\n                        ></i>\r\n                        <p className='item-amount'>{quantity}</p>\r\n                        <i\r\n                            onClick={() => {\r\n                                handleChangeQuantity('minus');\r\n                            }}\r\n                            className='fa fa-chevron-down'\r\n\r\n                        ></i>\r\n                    </div>\r\n\r\n\r\n                    <img\r\n\r\n                        src={item['cover'] && item['cover']}\r\n                        alt='Img'\r\n                        style={{\r\n                            cursor: 'pointer',\r\n                        }}\r\n                    />\r\n                    <div className='cart-item-info'>\r\n                        <h4\r\n\r\n                        >\r\n                            {item['name']}\r\n                        </h4>\r\n                        <h5\r\n                        >\r\n                            {modifiedPrice || item['price']}\r\n                        </h5>\r\n\r\n\r\n                        {pricingOptions && pricingOptions.length > 0 && pricingOptions.map(tag => (\r\n                            <>\r\n                                <span\r\n                                    onClick={() => handleAttributeChange(tag.value)}\r\n                                    className={selectedVariationId === tag.value ? 'product-attributeTag product-attributeTag-active' : 'product-attributeTag'}>\r\n                                    {tag.label}\r\n                                </span>\r\n                            </>\r\n                        ))}\r\n\r\n                        {/* <span\r\n             style={{\r\n               display: 'inline-block',\r\n               background: '#fafafa',\r\n               padding: '3px 3px',\r\n               borderRadius: 1,\r\n               fontSize: '12px',\r\n               marginRight: '5px',\r\n               color: '#777',\r\n               marginTop: '5px'\r\n             }}\r\n           >\r\n             15KG\r\n             </span> */}\r\n\r\n                    </div>\r\n                    {/* <span\r\n                        onClick={handleAttributeDelete}\r\n                        className='remove-item' >\r\n                        <i className='fa fa-times'></i>\r\n                    </span> */}\r\n\r\n                </div>\r\n            )}\r\n        </>\r\n    );\r\n};\r\n\r\n// @ts-ignore\r\nexport default CartOverLayCartItem;\r\n","import React from 'react'\r\n\r\n\r\n// import components\r\nimport AddNewOrderProductItem from \"../order/AddNewOrderProductItem\";\r\nimport Empty from \"../../components/Empty\";\r\n\r\nimport {\r\n    ShopOutlined\r\n} from '@ant-design/icons';\r\n\r\n\r\ninterface Props {\r\n    productList?: any;\r\n    setProductList?: any;\r\n}\r\n\r\nconst AddNewOrderSummary = ({\r\n    setProductList,\r\n    productList\r\n}: Props) => {\r\n    return (\r\n        <div\r\n            style={{\r\n                // @ts-ignore\r\n                flexDirection: 'flex'\r\n            }}\r\n            className='addOrderContainer__container-orderSummary'>\r\n            <div className='addOrderContainer__container-productItemContainer'>\r\n                {productList && productList.length > 0 && productList.map(item => {\r\n                    return <AddNewOrderProductItem\r\n                        setProductList={setProductList}\r\n                        productList={productList}\r\n                        productId={item._id}\r\n                        quantity={item.quantity}\r\n                        item={item}\r\n                        variation={item.variation}\r\n                    />;\r\n                })}\r\n\r\n                {!(productList.length > 0) && (\r\n                    <div style={{\r\n                        marginLeft: '32px'\r\n                    }}>\r\n                        <Empty title='No Product Added' height={150} />\r\n                    </div>\r\n                )}\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddNewOrderSummary\r\n","import React, { useState, useEffect } from 'react';\r\n\r\n// import hooks \r\nimport { useHandleFetch } from '../../hooks';\r\n\r\n\r\n// import libraries \r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { message, Tooltip, Modal, Tabs  } from 'antd';\r\nimport CKEditor from '@ckeditor/ckeditor5-react';\r\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\r\n\r\n\r\nimport {\r\n    CheckCircleOutlined,\r\n    FileImageFilled,\r\n    PlusOutlined,\r\n    CloseOutlined,\r\n    CheckOutlined,\r\n    InfoCircleOutlined\r\n} from '@ant-design/icons';\r\n\r\n\r\n\r\n// import ReactQuill from 'react-quill';\r\n// import 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport InputSmall from '../../components/Field/InputSmall';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport MediaLibrary from \"../../components/MediaLibrary\";\r\nimport DatePicker from \"../../components/Field/DatePicker\";\r\nimport { openSuccessNotification, openErrorNotification } from \"../../components/Notification\";\r\nimport Tags from \"../product/Tags\";\r\nimport Brands from \"../product/Brands\";\r\nimport Categories from \"../product/Categories\";\r\nimport Pricing from \"../product/Pricing\";\r\nimport SelectProducts from \"./SelectProducts\";\r\nimport SelectedProductItems from \"./SelectedProductItems\";\r\nimport MetaTags from \"../category/MetaTags\";\r\n\r\nconst { TabPane } = Tabs;\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    name: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\n\r\nconst initialValues = {\r\n    name: \"\",\r\n    bundlePrice: null,\r\n    startDate: \"\",\r\n    endDate: \"\",\r\n    description: '',\r\n    bnName: '',\r\n\tbnDescription: '',\r\n\tmetaTitle: '',\r\n\tbnMetaTitle: '',\r\n\tmetaDescription: '',\r\n\tbnMetaDescription: '',\r\n\tmetaTags: '',\r\n\tbnMetaTags: '',\r\n}\r\n\r\n\r\n\r\ninterface Props {\r\n    addNewCategoryVisible: any;\r\n    setAddNewCategoryVisible: any;\r\n    productList?: any;\r\n    setProductList?: any;\r\n}\r\n\r\nconst AddNewProduct = ({ addNewCategoryVisible, setAddNewCategoryVisible, productList: bundleList, setProductList: setBundleList }: Props) => {\r\n\r\n    const [addProductState, handleAddProductFetch] = useHandleFetch({}, 'addBundle');\r\n    const [visible, setvisible] = useState(false);\r\n    const [myImages, setmyImages] = useState(false);\r\n    const [myThumbnailImage, setmyThumbnailImage] = useState(false);\r\n    const [isModalOpenForThumbnail, setisModalOpenForThumbnail] = useState(false);\r\n    const [isModalOpenForImages, setisModalOpenForImages] = useState(false);\r\n    const [categoryids, setcategoryIds] = useState([]);\r\n    const [tagIds, setTagIds] = useState([]);\r\n    const [brandId, setBrandId] = useState('');\r\n    const [pricing, setPricing] = useState([]);\r\n    const [coverImageId, setCoverImageId] = useState('');\r\n    const [categoryOptions, setCategoryOptions] = useState([]);\r\n    const [selectedTags, setSelectedTags] = useState([]);\r\n    const [startDate, setStartDate] = useState('');\r\n    const [endDate, setEndDate] = useState('');\r\n    const [description, setDescription] = useState('');\r\n\tconst [bnDescription, setBNDescription] = useState('');\r\n    const [productIds, setProductIds] = useState([]);\r\n    const [productList, setProductList] = useState([]);\r\n\tconst [metaTags,setMetaTags] = useState([]);\r\n\tconst [bnMetaTags,setBnMetaTags] = useState([]);\r\n\r\n    const [price, setPrice] = useState({\r\n        regular: null,\r\n        offer: null,\r\n    });\r\n\r\n\r\n    const makeEmptyCategoryOptions = (setEmpty) => {\r\n        setEmpty([]);\r\n    }\r\n\r\n    const handleSubmit = async (values: any, actions: any) => {\r\n        // @ts-ignore\r\n        const imagesIds = myImages ? myImages.map(image => {\r\n            return image.id;\r\n        }) : [];\r\n\r\n        console.log('productList',productList);\r\n\r\n        const products = productList.length > 0 ? productList.map(product => {\r\n            return {\r\n                _id: product._id,\r\n                variation: product.variation,\r\n                quantity: product.quantity,\r\n            }\r\n        }) : [];\r\n\r\n\r\n        const addProductRes = await handleAddProductFetch({\r\n            body: {\r\n                name: values.name.trim(),\r\n                category: categoryids,\r\n                tags: tagIds,\r\n                brand: brandId,\r\n                price: price,\r\n                description: description,\r\n                model: values.model,\r\n                unit: values.unit,\r\n                image: imagesIds,\r\n                products,\r\n                // startDate, endDate,\r\n                metaTitle: values.metaTitle,\r\n\t\t\t\tmetaDescription: values.metaDescription,\r\n\t\t\t\tmetaTags: metaTags.join(','),\r\n\r\n\t\t\t\t\r\n\t\t\t\tbn: {\r\n\t\t\t\t\tmetaTitle: values.bnMetaTitle,\r\n\t\t\t\t\tmetaDescription: values.bnMetaDescription,\r\n\t\t\t\t\tmetaTags: bnMetaTags.join(','),\r\n\t\t\t\t\tname: values.bnName.trim(),\r\n\t\t\t\t\tunit: values.metaUnit,\r\n\t\t\t\t\tdescription: values.bnDescription,\r\n                }\r\n                \r\n\r\n            }\r\n        });\r\n\r\n\r\n        // @ts-ignore\r\n        if (addProductRes && addProductRes.status === 'ok') {\r\n            openSuccessNotification('Bundle Created');\r\n            console.log('addProductBundleRes',addProductRes);\r\n\r\n            setBundleList([{\r\n                id: addProductRes['_id'] || '',\r\n                key: addProductRes['_id'] || '',\r\n                name: addProductRes['name'] || '',\r\n                description: addProductRes['description'] || '',\r\n                // @ts-ignore\r\n                ...addProductRes\r\n            },...bundleList])\r\n            setAddNewCategoryVisible(false)\r\n            // @ts-ignore\r\n            setmyImages([]);\r\n            setCoverImageId('');\r\n            setPricing([]);\r\n            setTagIds([]);\r\n            setSelectedTags([]);\r\n            setBrandId(\"\");\r\n            setcategoryIds([]);\r\n            setCategoryOptions([]);\r\n            actions.resetForm();\r\n        }\r\n        else {\r\n            // openErrorNotification();\r\n        }\r\n\r\n        actions.setSubmitting(false);\r\n\r\n\r\n    };\r\n\r\n\r\n    console.log('productlistbundle',productList)\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        if (!addProductState['isLoading']) {\r\n            const error = addProductState['error'];\r\n            if (error['isError'] && Object.keys(error['error']).length > 0) {\r\n\r\n\r\n                const errors =\r\n                    Object.values(error['error']).length > 0\r\n                        ? Object.values(error['error'])\r\n                        : [];\r\n                errors.forEach((err, i) => {\r\n                    if (typeof err === 'string') {\r\n                        openErrorNotification(err)\r\n                    }\r\n                    else if (typeof err === 'object') {\r\n                        if (err && Object.keys(err).length > 0) {\r\n                            const errs = Object.values(err);\r\n                            errs.forEach(err => {\r\n                                openErrorNotification(err)\r\n                            })\r\n\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n        }\r\n    }, [addProductState])\r\n\r\n\r\n\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        if (productIds && productIds.length > 0 && productList) {\r\n            if (productIds.length > productList.length) {\r\n                const variation = productIds[productIds.length - 1]['pricing'] && productIds[productIds.length - 1]['pricing'].length > 0 && productIds[productIds.length - 1]['pricing'][0]['_id'];\r\n                console.log('variation', variation)\r\n\r\n                setProductList([...productList, {\r\n                    ...productIds[productIds.length - 1],\r\n                    _id: productIds[productIds.length - 1]['id'],\r\n                    variation: variation,\r\n                    quantity: 1\r\n                }]);\r\n            }\r\n\r\n\r\n            else if (productIds.length < productList.length) {\r\n                console.log('productIds', productIds);\r\n                console.log('productList', productList);\r\n\r\n                const newProductList = productList.filter(item => {\r\n                    let isTrue = false;\r\n                    productIds.forEach(product => {\r\n                        if (product.id === item._id) {\r\n                            isTrue = true;\r\n                        }\r\n                    });\r\n                    return isTrue;\r\n                })\r\n                setProductList(newProductList);\r\n\r\n            }\r\n\r\n        }\r\n        else {\r\n            setProductList([]);\r\n        }\r\n        // console.log('productIds', productIds)\r\n\r\n\r\n    }, [productIds])\r\n\r\n\r\n\r\n\r\n\r\n\r\n    const handleCancel = (e: any) => {\r\n        setAddNewCategoryVisible(false);\r\n    };\r\n\r\n\r\n    const getisSubmitButtonDisabled = (values, isValid) => {\r\n        if (!values.name || !(pricing.length > 0) || !isValid) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n\r\n    const handleImagesDelete = (id) => {\r\n        // @ts-ignore\r\n        const newImages = myImages && myImages.filter(image => {\r\n            return image.id !== id;\r\n        })\r\n\r\n        setmyImages(newImages);\r\n    }\r\n\r\n    const handleDeleteFromSelectedImage = () => {\r\n\r\n    };\r\n\r\n    const handleThumbnailImageDelete = (id) => {\r\n        // @ts-ignore\r\n        const newImages = myThumbnailImage && myThumbnailImage.filter(image => {\r\n            return image.id !== id;\r\n        })\r\n\r\n        if (newImages.length > 0) {\r\n            setmyThumbnailImage(newImages);\r\n\r\n        }\r\n        else setmyThumbnailImage(false);\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    const handleAddPricing = (priceItem) => {\r\n        setPricing([{\r\n            ...priceItem,\r\n            id: pricing.length\r\n        }, ...pricing])\r\n        message.info('Product Pricing Added');\r\n    }\r\n\r\n\r\n    const handleDeletePricing = (id) => {\r\n        const newPricing = pricing.filter(item => item.id !== id);\r\n        setPricing(newPricing);\r\n        message.info('Product Pricing Deleted');\r\n    }\r\n\r\n\r\n\r\n    const isCategoryInValid = () => {\r\n        if (addProductState.error['error']['category'] && !categoryids && categoryids.length) {\r\n            return true;\r\n        }\r\n        else if (categoryids && categoryids.length > 0) {\r\n            return false;\r\n        }\r\n    }\r\n\r\n\r\n    const handleStartDataChange = (date, dateString) => {\r\n        setStartDate(dateString);\r\n        // console.log('date', date, dateString);\r\n    }\r\n\r\n    const handleEndDataChange = (date, dateString) => {\r\n        setEndDate(dateString);\r\n        // console.log('date', date, dateString);\r\n    }\r\n\r\n\r\n    \r\n\r\n\r\n\r\n\r\n    return (\r\n        <Formik\r\n            onSubmit={(values, actions) => handleSubmit(values, actions)}\r\n            validationSchema={validationSchema}\r\n            validateOnBlur={false}\r\n            enableReinitialize={true}\r\n            initialValues={\r\n                { ...initialValues }\r\n            }\r\n        >\r\n            {({\r\n                handleChange,\r\n                values,\r\n                handleSubmit,\r\n                errors,\r\n                isValid,\r\n                isSubmitting,\r\n                touched,\r\n                handleBlur,\r\n                setFieldTouched,\r\n                handleReset,\r\n            }) => (\r\n                    <>\r\n                        <Modal\r\n                            style={{\r\n                                top: '40px',\r\n\r\n                            }}\r\n                            bodyStyle={{\r\n                                margin: 0,\r\n                                padding: 0,\r\n                            }}\r\n                            width={'70vw'}\r\n                            title=\"Add New Bundle\"\r\n                            visible={addNewCategoryVisible}\r\n                            onOk={(e: any) => handleSubmit(e)}\r\n                            onCancel={handleCancel}\r\n                            okText='Create'\r\n                            okButtonProps={{\r\n                                loading: isSubmitting,\r\n                                htmlType: \"submit\",\r\n                            }}\r\n                        >\r\n\r\n\r\n                            <section className='addProductGridContainer'>\r\n                                <div className='addProductGridContainer__left'>\r\n                                    <div className='addProductGridContainer__name'>\r\n                                        <div className='addProductGridContainer__item-header'>\r\n                                            <h3>\r\n                                                Bundle Information *\r\n\t\t\t                                </h3>\r\n\r\n                                            <div className={values.name && values.name.length > 2 ? 'checkicon-active' : 'checkicon'}>\r\n                                                <CheckCircleOutlined />\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className='addProductGridContainer__item-body'>\r\n                                        <Input\r\n\t\t\t\t\t\t\t\t\t\t\t\tlabel='Name'\r\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.name}\r\n\t\t\t\t\t\t\t\t\t\t\t\tplaceHolder={'Rafty ox'}\r\n\t\t\t\t\t\t\t\t\t\t\t\tname='name'\r\n\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['name'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['name'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('name');\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\tlabel='BN Name'\r\n\t\t\t\t\t\t\t\t\t\t\tvalue={values.bnName}\r\n\t\t\t\t\t\t\t\t\t\t\tplaceHolder={'রাফতি অক্স'}\r\n\t\t\t\t\t\t\t\t\t\t\tname='bnName'\r\n\t\t\t\t\t\t\t\t\t\t\tisError={(touched.bnName && errors.bnName) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['bnName'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.bnName && errors.bnName) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['bnName'])}\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('bnName');\r\n\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\r\n\r\n\r\n                                    \r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\t\t\t\t\t\tDescription\r\n                                             </h3>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\twidth: '100%',\r\n\t\t\t\t\t\t\t\t\t\t\t\tmaxWidth: '100%'\r\n\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<CKEditor\r\n\t\t\t\t\t\t\t\t\t\t\t\t\teditor={ClassicEditor}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tdata={description}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonInit={editor => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t// You can store the \"editor\" and use when it is needed.\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tconsole.log('Editor is ready to use!', editor);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(event, editor) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tconst data = editor.getData();\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetDescription(data);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonBlur={(event, editor) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tconsole.log('Blur.', editor);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonFocus={(event, editor) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tconsole.log('Focus.', editor);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tmarginTop:\"15px\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}></div>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\t\t\t\t\t\tBN Description\r\n                                             </h3>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\twidth: '100%',\r\n\t\t\t\t\t\t\t\t\t\t\t\tmaxWidth: '100%'\r\n\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<CKEditor\r\n\t\t\t\t\t\t\t\t\t\t\t\t\teditor={ClassicEditor}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tdata={bnDescription}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonInit={editor => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t// You can store the \"editor\" and use when it is needed.\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tconsole.log('Editor is ready to use!', editor);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(event, editor) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tconst data = editor.getData();\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetBNDescription(data);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonBlur={(event, editor) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tconsole.log('Blur.', editor);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonFocus={(event, editor) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tconsole.log('Focus.', editor);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n                                            {/* <div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\tdisplay: 'flex',\r\n\t\t\t\t\t\t\t\t\t\t\t\tjustifyContent: 'space-between'\r\n\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\twidth: '48%',\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<DatePicker\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabel='Date'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={handleDateChange} />\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\twidth: '48%'\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<DatePicker\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tdate={date}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\twithTime={true}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder='Select time'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabel='Time'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={handleTimeChange} />\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t</div> */}\r\n                                            <div style={{\r\n                                                marginBottom: '15px'\r\n                                            }}></div>\r\n                                            {/* \r\n\t\t\t\t\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\t\t\t\t\trows={1}\r\n\t\t\t\t\t\t\t\t\t\t\t\tlabel='Venue'\r\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.venue}\r\n\t\t\t\t\t\t\t\t\t\t\t\tname='venue'\r\n\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.venue && errors.venue) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['venue'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.venue && errors.venue) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['venue'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('venue');\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\t\tlabel='Purchase Limit'\r\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.purchaseLimit}\r\n\t\t\t\t\t\t\t\t\t\t\t\ttype='number'\r\n\t\t\t\t\t\t\t\t\t\t\t\tname='purchaseLimit'\r\n\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.purchaseLimit && errors.purchaseLimit) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['purchaseLimit'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.purchaseLimit && errors.purchaseLimit) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['purchaseLimit'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('purchaseLimit');\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t/> */}\r\n\r\n                                            <div className='addProductGridContainer__item-body-variationCard-item'>\r\n                                                <h4>\r\n                                                    Price *\r\n\t\t\t                                \t</h4>\r\n                                                <div className='addProductGridContainer__item-body-variationCard-item-container'>\r\n                                                    <div className='addProductGridContainer__item-body-variationCard-item-container-left'>\r\n                                                        <InputSmall\r\n                                                            label='Regular'\r\n                                                            value={price.regular}\r\n                                                            name='regular'\r\n                                                            onChange={(e) => setPrice({\r\n                                                                ...price,\r\n                                                                regular: e.target.value\r\n                                                            })}\r\n                                                        />\r\n\r\n\r\n                                                    </div>\r\n                                                    <div className='addProductGridContainer__item-body-variationCard-item-container-right'>\r\n\r\n                                                        <InputSmall\r\n                                                            label='Offer'\r\n                                                            value={price.offer}\r\n                                                            name='offer'\r\n                                                            onChange={(e) => setPrice({\r\n                                                                ...price,\r\n                                                                offer: e.target.value\r\n                                                            })}\r\n                                                        />\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n\r\n\r\n\r\n                                            {/* <div style={{\r\n                                                display: 'flex',\r\n                                                justifyContent: 'space-between'\r\n                                            }}>\r\n                                                <div style={{\r\n                                                    width: '48%',\r\n                                                }}>\r\n                                                    <DatePicker\r\n                                                        date={startDate}\r\n                                                        label='Start Date'\r\n                                                        onChange={handleStartDataChange} />\r\n\r\n                                                </div>\r\n                                                <div style={{\r\n                                                    width: '48%'\r\n                                                }}>\r\n\r\n                                                    <DatePicker\r\n                                                        date={endDate}\r\n                                                        label='End Date'\r\n                                                        onChange={handleEndDataChange} />\r\n\r\n                                                </div>\r\n                                            </div> */}\r\n\r\n\r\n                                        </div>\r\n\r\n\r\n\r\n                                    </div>\r\n\r\n                                    <div className='addProductGridContainer__price'>\r\n                                        <div className='addProductGridContainer__item-header'>\r\n                                            <h3>\r\n                                                Products\r\n\t\t                                    </h3>\r\n\r\n                                            <div className={pricing && pricing.length > 0 ? 'checkicon-active' : 'checkicon'}>\r\n                                                <CheckCircleOutlined />\r\n                                            </div>\r\n                                        </div>\r\n\r\n\r\n                                        <div className='addProductGridContainer__item-body'>\r\n\r\n                                            <h3 className='inputFieldLabel'>\r\n                                                Products\r\n                                            </h3>\r\n                                            <SelectProducts\r\n                                                setProductIds={setProductIds}\r\n                                                productIds={productIds}\r\n                                            />\r\n\r\n                                            <div style={{\r\n                                                marginTop: \"15px\"\r\n                                            }}></div>\r\n\r\n                                            <h3 className='inputFieldLabel'>\r\n                                                Selcted Products\r\n                                            </h3>\r\n\r\n                                            <SelectedProductItems\r\n                                                productList={productList}\r\n                                                setProductList={setProductList}\r\n                                            />\r\n                                        </div>\r\n                                    </div>\r\n\r\n\r\n\r\n\r\n                                    <div className='addProductGridContainer__image'>\r\n\r\n                                        <div className='addProductGridContainer__item-header'>\r\n                                            <h3>\r\n                                                Image\r\n                                            </h3>\r\n\r\n                                            <Tooltip\r\n                                                placement=\"left\" title={'Click on the image to select cover image, By default 1st image is selected as cover'}>\r\n                                                <a href='###'>\r\n                                                    <InfoCircleOutlined />\r\n                                                </a>\r\n                                            </Tooltip>\r\n                                        </div>\r\n                                        <div className='addProductGridContainer__item-body'>\r\n                                            <div className='aboutToUploadImagesContainer'>\r\n                                                {myImages &&\r\n                                                    // @ts-ignore\r\n                                                    myImages.length > 0 && myImages.map((image, index) => {\r\n                                                        return (\r\n                                                            <div className='aboutToUploadImagesContainer__item'>\r\n                                                                <div\r\n                                                                    className='aboutToUploadImagesContainer__item-imgContainer'\r\n                                                                    onClick={() => setCoverImageId(image.id)}\r\n                                                                >\r\n                                                                    <img src={image.cover} alt={image.alt} />\r\n                                                                </div>\r\n\r\n                                                                <span\r\n                                                                    onClick={() => handleImagesDelete(image.id)}\r\n                                                                    className='aboutToUploadImagesContainer__item-remove'>\r\n                                                                    <CloseOutlined />\r\n                                                                </span>\r\n\r\n\r\n                                                                {coverImageId === image.id ? (\r\n                                                                    <span className='aboutToUploadImagesContainer__item-cover'>\r\n                                                                        <CheckOutlined />\r\n                                                                    </span>\r\n                                                                ) : !coverImageId && index === 0 && (\r\n                                                                    <span className='aboutToUploadImagesContainer__item-cover'>\r\n                                                                        <CheckOutlined />\r\n                                                                    </span>\r\n                                                                )}\r\n                                                            </div>\r\n                                                        )\r\n                                                    })}\r\n\r\n\r\n                                                <Tooltip\r\n                                                    title={'Attach images'}>\r\n\r\n                                                    <div\r\n                                                        onClick={() => {\r\n                                                            setvisible(true);\r\n                                                            setisModalOpenForImages(true);\r\n                                                            setisModalOpenForThumbnail(false);\r\n                                                        }}\r\n                                                        className='aboutToUploadImagesContainer__uploadItem'>\r\n                                                        {/* <FileAddOutlined />\r\n                                                            <FileImageTwoTone />\r\n                                                            <FileImageOutlined /> */}\r\n                                                        <FileImageFilled />\r\n                                                        {/* <h5>\r\n                                                                Select From Library\r\n                                                        <     /h5> */}\r\n                                                        <span className='aboutToUploadImagesContainer__uploadItem-plus'>\r\n                                                            <PlusOutlined />\r\n                                                        </span>\r\n                                                    </div>\r\n                                                </Tooltip>\r\n\r\n\r\n\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n\r\n\r\n\r\n                                    <div className='addProductGridContainer__image'>\r\n\r\n<div className='addProductGridContainer__item-header'>\r\n    <h3>\r\n    Meta Data\r\n</h3>\r\n\r\n    <Tooltip\r\n        placement=\"left\" title={\"Meta data will be used to make the user's easy and for search engine optimization.\"}>\r\n        <a href='###'>\r\n            <InfoCircleOutlined />\r\n        </a>\r\n    </Tooltip>\r\n</div>\r\n<div className='addProductGridContainer__item-body'>\r\n\r\n                \r\n<Input\r\nlabel='Meta title'\r\nvalue={values.metaTitle}\r\nplaceHolder={'category...'}\r\nname='metaTitle'\r\nisError={(touched.metaTitle && errors.metaTitle) ||\r\n(!isSubmitting && addProductState.error['error']['metaTitle'])}\r\n\r\nerrorString={(touched.metaTitle && errors.metaTitle) ||\r\n(!isSubmitting && addProductState.error['error']['metaTitle'])}\r\nonChange={(e: any) => {\r\nhandleChange(e);\r\nsetFieldTouched('metaTitle')\r\n}}\r\n/>\r\n\r\n<Input\r\nlabel='BN Meta title'\r\nvalue={values.bnMetaTitle}\r\nplaceHolder={'ক্যাটাগড়ি...'}\r\nname='bnMetaTitle'\r\nisError={(touched.bnMetaTitle && errors.bnMetaTitle) ||\r\n(!isSubmitting && addProductState.error['error']['bnMetaTitle'])}\r\n\r\nerrorString={(touched.bnMetaTitle && errors.bnMetaTitle) ||\r\n(!isSubmitting && addProductState.error['error']['bnMetaTitle'])}\r\nonChange={(e: any) => {\r\nhandleChange(e);\r\nsetFieldTouched('bnMetaTitle');\r\n}}\r\n/>\r\n\r\n<TextArea\r\nlabel='Meta description'\r\nvalue={values.metaDescription}\r\nplaceholder={'meta...'}\r\nname='metaDescription'\r\nisError={(touched.metaDescription && errors.metaDescription) ||\r\n(!isSubmitting && addProductState.error['error']['metaDescription'])}\r\n\r\nerrorString={(touched.metaDescription && errors.metaDescription) ||\r\n(!isSubmitting && addProductState.error['error']['metaDescription'])}\r\nonChange={(e: any) => {\r\nhandleChange(e);\r\nsetFieldTouched('metaDescription');\r\n}}\r\n/>\r\n\r\n<TextArea\r\nlabel='BN Meta Description'\r\nvalue={values.bnMetaDescription}\r\nplaceholder={'এইয় মেট...'}\r\nname='bnMetaDescription'\r\nisError={(touched.bnMetaDescription && errors.bnMetaDescription) ||\r\n(!isSubmitting && addProductState.error['error']['bnMetaDescription'])}\r\n\r\nerrorString={(touched.bnMetaDescription && errors.bnMetaDescription) ||\r\n(!isSubmitting && addProductState.error['error']['bnMetaDescription'])}\r\nonChange={(e: any) => {\r\nhandleChange(e);\r\nsetFieldTouched('bnMetaDescription');\r\n}}\r\n/>\r\n\r\n<h3 className='inputFieldLabel'>\r\nMeta Tags (grocery,fashion)\r\n</h3>\r\n\r\n<MetaTags\r\n// @ts-ignore\r\nsetTags={setMetaTags}\r\ntags={metaTags}\r\n/>\r\n\r\n<div style={{\r\nmarginTop:'15px'\r\n}}></div>\r\n\r\n<h3 className='inputFieldLabel'>\r\nBN Meta Tags (মুদিখানা,ফ্যাশন)\r\n</h3>\r\n\r\n<MetaTags\r\n// @ts-ignore\r\nsetTags={setBnMetaTags}\r\ntags={bnMetaTags}\r\n/>\r\n</div>\r\n</div>\r\n\r\n\r\n\r\n                                </div>\r\n                                <div className='addProductGridContainer__right'>\r\n                                    <div className='addProductGridContainer__category'>\r\n\r\n                                        <div className='addProductGridContainer-rightItemContainer'>\r\n                                            <div className='addProductGridContainer-rightItemContainer-header'>\r\n                                                <h3>\r\n                                                    Categories *\r\n\t\t\t                                \t</h3>\r\n\r\n                                                <Tooltip\r\n                                                    color='red'\r\n                                                    visible={addProductState.error['error']['category'] && !(categoryids.length > 0)}\r\n                                                    placement=\"left\" title={'Select at least one category'}>\r\n                                                    <div className={!(categoryids.length > 0)\r\n                                                        && !addProductState.error['error']['category'] ? 'checkicon' : addProductState.error['error']['category'] ? 'checkicon-error' : 'checkicon-active'}>\r\n                                                        <CheckCircleOutlined />\r\n                                                    </div>\r\n                                                </Tooltip>\r\n\r\n                                            </div>\r\n                                            <div className='addProductGridContainer-rightItemContainer-body'>\r\n                                                <Categories\r\n                                                    setCategoryOptions={setCategoryOptions}\r\n                                                    categoryOptions={categoryOptions}\r\n                                                    setcategoryIds={setcategoryIds} />\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                    </div>\r\n\r\n                                    <div className='addProductGridContainer__tag'>\r\n                                        <div className='addProductGridContainer-rightItemContainer'>\r\n                                            <div className='addProductGridContainer-rightItemContainer-header'>\r\n                                                <h3>\r\n                                                    Tags\r\n\t\t\t\t</h3>\r\n                                            </div>\r\n                                            <div className='addProductGridContainer-rightItemContainer-body'>\r\n                                                <Tags\r\n                                                    setSelectedTags={setSelectedTags}\r\n                                                    selectedTags={selectedTags}\r\n                                                    setTagIds={setTagIds} />\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                    </div>\r\n                                    <div className='addProductGridContainer__brand'>\r\n                                        <div className='addProductGridContainer-rightItemContainer'>\r\n                                            <div className='addProductGridContainer-rightItemContainer-header'>\r\n                                                <h3>\r\n                                                    Brand\r\n\t\t\t\t</h3>\r\n                                            </div>\r\n                                            <div className='addProductGridContainer-rightItemContainer-body'>\r\n                                                <Brands setBrandId={setBrandId} />\r\n                                            </div>\r\n                                        </div>\r\n\r\n\r\n                                    </div>\r\n\r\n                                </div>\r\n                            </section>\r\n\r\n\r\n                        </Modal>\r\n\r\n                        <MediaLibrary\r\n                            setvisible={setvisible}\r\n                            visible={visible}\r\n                            setmyImages={setmyImages}\r\n                            myImages={myImages}\r\n                            setmyThumbnailImage={setmyThumbnailImage}\r\n                            isModalOpenForThumbnail={isModalOpenForThumbnail}\r\n                            isModalOpenForImages={isModalOpenForImages}\r\n\r\n                        />\r\n                    </>\r\n                )}\r\n        </Formik>\r\n\r\n\r\n\r\n\r\n    );\r\n};\r\n\r\nexport default AddNewProduct;\r\n\r\n\r\n\r\n\r\n/*\r\n\r\n\r\nProduct variation ---->\r\n\r\nPrice [title]\r\n\t[regular input field] [offer inputfield]\r\n\r\nStock [title]\r\n\t[available input field] [minimum inputfield]\r\n\r\ndefault [default can be set to true]\r\n\r\nattributes [title]\r\n\t[add attributes name]\r\n\t\t[add attrubutes value]\r\n\r\n\t[add attributes name]\r\n\t\t[add attrubutes value\r\n\r\n*///","import React, { useState, useEffect } from 'react';\r\n\r\n// import third party ui lib\r\nimport { Empty, Popconfirm, Upload, message, Switch, Select, Button, notification, Table, Space, Input as CoolInput, Tooltip, Modal } from 'antd';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { useHistory } from 'react-router';\r\nimport Moment from 'react-moment';\r\n\r\n\r\n\r\nimport {\r\n    FileOutlined,\r\n    InboxOutlined,\r\n    RadiusUpleftOutlined,\r\n    RadiusUprightOutlined,\r\n    RadiusBottomleftOutlined,\r\n    RadiusBottomrightOutlined,\r\n    PlusOutlined,\r\n    DeleteOutlined,\r\n    EditOutlined,\r\n    CheckCircleOutlined\r\n} from '@ant-design/icons';\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n\r\n\r\n/// import hooks\r\nimport { useFetch, useHandleFetch } from \"../../hooks\";\r\n\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport { DataTableSkeleton } from \"../../components/Placeholders\";\r\nimport ProductBundleQuickEdit from \"./ProductBundleQuickEdit\"\r\nimport AddNewProductBundle from \"./AddNewProductBundle\"\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Bundle Created',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n    notification.error({\r\n        message: message || 'Something Went Wrong',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n    });\r\n};\r\n\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    name: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\n\r\nconst initialValues = {\r\n    name: '',\r\n    description: ''\r\n}\r\n\r\n\r\nconst { Column, ColumnGroup } = Table;\r\nconst { Search } = CoolInput;\r\n\r\n\r\n\r\nconst MyTable = ({ data, setTagList }) => {\r\n    const [visible, setvisible] = useState(false);\r\n    const [activeCategoryForEdit, setactiveCategoryForEdit] = useState(false);\r\n    const [deleteTagState, handleDeleteTagFetch] = useHandleFetch({}, 'deleteBundle');\r\n\r\n    const history = useHistory();\r\n\r\n\r\n    const handleDeleteTag = async (id) => {\r\n        const deleteTagRes = await handleDeleteTagFetch({\r\n            urlOptions: {\r\n                placeHolders: {\r\n                    id,\r\n                }\r\n            }\r\n        });\r\n\r\n\r\n\r\n        // @ts-ignore\r\n        if (deleteTagRes && deleteTagRes.status === 'ok') {\r\n            openSuccessNotification('Deleted Bundle');\r\n            const newtagList = data.filter(item => item.id !== id);\r\n            setTagList(newtagList);\r\n        }\r\n\r\n\r\n    }\r\n\r\n\r\n    const handleOk = (e: any) => {\r\n        setvisible(false);\r\n\r\n    };\r\n\r\n    const handleCancel = (e: any) => {\r\n        setvisible(false);\r\n    };\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <Table\r\n                // expandable={{\r\n                //     expandedRowRender: record => <p style={{ margin: 0 }}>{record.name}</p>,\r\n                //     rowExpandable: record => record.name !== 'Not Expandable',\r\n                //   }}\r\n                // bordered={true}\r\n                size='small'\r\n                // pagination={false}\r\n                dataSource={data}\r\n            >\r\n\r\n                <Column\r\n                    title=\"\"\r\n                    dataIndex=\"cover\"\r\n                    key=\"id\"\r\n                    width={'80px'}\r\n\r\n                    className='classnameofthecolumn'\r\n\r\n                    render={(cover, record: any) => (\r\n                        <>\r\n                            <img\r\n                                onClick={() => {\r\n                                    history.push(`/admin/bundle/${record.id}`)\r\n                                    setactiveCategoryForEdit(record)\r\n                                }}\r\n                                src={cover} alt='cover img' style={{\r\n                                    height: '40px',\r\n                                    width: '40px',\r\n                                    objectFit: \"contain\",\r\n                                    borderRadius: '3px',\r\n                                    cursor: 'pointer'\r\n                                }} />\r\n                        </>\r\n                    )}\r\n                />\r\n\r\n                <Column\r\n                    title=\"Name\"\r\n                    dataIndex=\"name\"\r\n                    key=\"id\"\r\n                    className='classnameofthecolumn'\r\n                    render={(text, record: any) => (\r\n                        <>\r\n\r\n                            <h4\r\n                                onClick={() => {\r\n                                    history.push(`/admin/bundle/${record.id}`)\r\n                                    // setBrandDetailVisible(true);\r\n                                    setactiveCategoryForEdit(record)\r\n                                }}\r\n                                style={{\r\n                                    fontWeight: 400,\r\n                                    color: '#555',\r\n                                    cursor: 'pointer'\r\n                                }}>\r\n                                {text}\r\n                            </h4>\r\n\r\n\r\n                        </>\r\n                    )}\r\n                />\r\n\r\n                <Column\r\n                    title=\"Price\"\r\n                    dataIndex=\"price\"\r\n                    key=\"id\"\r\n                    className='classnameofthecolumn'\r\n\r\n                />\r\n\r\n\r\n                <Column\r\n                    title=\"Product\"\r\n                    dataIndex=\"productCount\"\r\n                    key=\"id\"\r\n                    className='classnameofthecolumn'\r\n                />\r\n\r\n                {/* <Column\r\n                    title=\"Start Date\"\r\n                    dataIndex=\"startDate\"\r\n                    key=\"id\"\r\n                    className='classnameofthecolumn'\r\n                    render={(text, record: any) => (\r\n                        <>\r\n                            <h4\r\n                                style={{\r\n                                    fontWeight: 400,\r\n                                    color: '#555',\r\n                                    cursor: 'pointer'\r\n                                }}>\r\n                                <Moment >\r\n                                    {text}\r\n                                </Moment>\r\n\r\n                            </h4>\r\n                        </>\r\n                    )}\r\n\r\n                />\r\n\r\n                <Column\r\n                    title=\"End Date\"\r\n                    dataIndex=\"endDate\"\r\n                    key=\"id\"\r\n                    className='classnameofthecolumn'\r\n\r\n                /> */}\r\n\r\n                <Column\r\n\r\n                    className='classnameofthecolumn'\r\n                    title=\"\"\r\n                    key=\"action\"\r\n                    align='right'\r\n                    render={(text, record: any) => (\r\n                        <Space size=\"middle\">\r\n                            <a href='##'>\r\n                                <Tooltip placement=\"top\" title='Quick Edit Bundle'>\r\n                                    <span className='iconSize' onClick={() => {\r\n                                        setvisible(true)\r\n                                        setactiveCategoryForEdit(record);\r\n                                    }}>\r\n                                        <EditOutlined />\r\n                                    </span>\r\n                                </Tooltip>\r\n                            </a>\r\n\r\n\r\n\r\n                            <Popconfirm\r\n                                onConfirm={() => handleDeleteTag(record.id)}\r\n                                title=\"Are you sure？\" okText=\"Yes\" cancelText=\"No\">\r\n                                <span\r\n                                    className='iconSize iconSize-danger'\r\n                                >\r\n                                    <DeleteOutlined />\r\n                                </span>\r\n                            </Popconfirm>\r\n                        </Space>\r\n                    )}\r\n                />\r\n            </Table>\r\n\r\n\r\n\r\n\r\n\r\n\r\n            {activeCategoryForEdit && <ProductBundleQuickEdit\r\n             productList={data}\r\n             setProductList={setTagList}\r\n             setAddNewCategoryVisible={setvisible}\r\n             addNewCategoryVisible={visible}\r\n             productDetailData={activeCategoryForEdit} />}\r\n        </>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\ninterface Props { }\r\n\r\nconst TagList = ({ }: Props) => {\r\n\r\n\r\n    const [tagList, setTagList] = useState([]);\r\n\r\n    const [tagState, handleTagListFetch] = useHandleFetch({}, 'bundleList');\r\n\r\n\r\n    useEffect(() => {\r\n        const setTags = async () => {\r\n            const tags = await handleTagListFetch({\r\n                urlOptions:{\r\n                    params: {\r\n                      sortItem: 'added',\r\n                      sortOrderValue: '-1',\r\n                      productType: 'bundle'\r\n                    }\r\n                    }\r\n            });\r\n            // @ts-ignore\r\n            setTagList(tags);\r\n        }\r\n        setTags();\r\n    }, [])\r\n\r\n\r\n\r\n    const [addNewCategoryVisible, setAddNewCategoryVisible] = useState(false);\r\n\r\n    const getisSubmitButtonDisabled = (values, isValid) => {\r\n        if (!values.name || !isValid) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n\r\n    const handleOkAddNewCategory = (e: any) => {\r\n        setAddNewCategoryVisible(false);\r\n\r\n    };\r\n\r\n    const handleCancelAddNewCategory = (e: any) => {\r\n        setAddNewCategoryVisible(false);\r\n    };\r\n\r\n    const handleSearch = (value) => {\r\n        if (tagState.data.length > 0) {\r\n            const newTagList = tagState.data.filter(item => item.name.toLowerCase().includes(value.toLowerCase()));\r\n            setTagList(newTagList);\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <>\r\n\r\n            <div className='categoryListContainer'>\r\n                <div className='categoryListContainer__header'>\r\n                    <div className='categoryListContainer__header-searchBar-tag'>\r\n                        <h2 className='categoryListContainer__header-title'>\r\n                            Bundles\r\n                       </h2>\r\n\r\n                        <Search\r\n                            enterButton={false}\r\n                            className='searchbarClassName'\r\n                            placeholder=\"search bundles..\"\r\n                            onChange={e => handleSearch(e.target.value)}\r\n                        />\r\n                    </div>\r\n                    <Button\r\n                        // type=\"primary\"\r\n                        className='btnPrimaryClassNameoutline'\r\n                        icon={<PlusOutlined />}\r\n                        onClick={() => setAddNewCategoryVisible(true)}\r\n                    >\r\n                        Add New\r\n\t\t\t\t\t</Button>\r\n                </div>\r\n                <div className='categoryListContainer__categoryList'>\r\n                    {tagState.done && tagList.length > 0 && <MyTable\r\n                        setTagList={setTagList}\r\n                        data={tagList} />}\r\n                    {tagState.isLoading && <DataTableSkeleton />}\r\n\r\n\r\n                    {tagState.done && !(tagList.length > 0) && (\r\n                        <div style={{\r\n                            marginTop: '200px'\r\n                        }}>\r\n                            <Empty description='No Bundle found' image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            </div>\r\n\r\n            <AddNewProductBundle\r\n                productList={tagList}\r\n                setProductList={setTagList}\r\n                addNewCategoryVisible={addNewCategoryVisible}\r\n                setAddNewCategoryVisible={setAddNewCategoryVisible}\r\n\r\n            />\r\n        </>\r\n    );\r\n};\r\n\r\nexport default TagList;\r\n","import React, { useState, useEffect } from 'react';\r\n\r\n// import hooks \r\nimport { useHandleFetch } from '../../hooks';\r\n\r\n\r\n// import libraries \r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { message, Tooltip, Modal, Tabs, Spin  } from 'antd';\r\nimport CKEditor from '@ckeditor/ckeditor5-react';\r\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\r\n\r\n\r\nimport {\r\n    CheckCircleOutlined,\r\n    FileImageFilled,\r\n    PlusOutlined,\r\n    CloseOutlined,\r\n    CheckOutlined,\r\n    InfoCircleOutlined\r\n} from '@ant-design/icons';\r\n\r\n\r\n\r\n// import ReactQuill from 'react-quill';\r\n// import 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport InputSmall from '../../components/Field/InputSmall';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport MediaLibrary from \"../../components/MediaLibrary\";\r\nimport DatePicker from \"../../components/Field/DatePicker\";\r\nimport { openSuccessNotification, openErrorNotification } from \"../../components/Notification\";\r\nimport Tags from \"../product/Tags\";\r\nimport Brands from \"../product/Brands\";\r\nimport Categories from \"../product/Categories\";\r\nimport Pricing from \"../product/Pricing\";\r\nimport SelectProducts from \"./SelectProducts\";\r\nimport SelectedProductItems from \"./SelectedProductItems\";\r\nimport MetaTags from \"../category/MetaTags\";\r\n\r\nconst { TabPane } = Tabs;\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    name: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\n\r\nconst initialValues = {\r\n    name: \"\",\r\n    bundlePrice: null,\r\n    startDate: \"\",\r\n    endDate: \"\",\r\n    description: '',\r\n    bnName: '',\r\n\tbnDescription: '',\r\n\tmetaTitle: '',\r\n\tbnMetaTitle: '',\r\n\tmetaDescription: '',\r\n\tbnMetaDescription: '',\r\n\tmetaTags: '',\r\n\tbnMetaTags: '',\r\n}\r\n\r\n\r\n\r\ninterface Props {\r\n    addNewCategoryVisible: any;\r\n    setAddNewCategoryVisible: any;\r\n    productDetailData?:any; \r\n}\r\n\r\nconst AddNewProduct = ({ addNewCategoryVisible, setAddNewCategoryVisible, productDetailData }: Props) => {\r\n\r\n  \r\n\r\n    const [updateProductState, handleUpdateProductFetch] = useHandleFetch({}, 'updateProduct');\r\n    const [productDetailState, handleProductDetailFetch] = useHandleFetch({}, 'bundleDetail');\r\n    const [attachImageToItemMultipleState, handleAttachImageToItemMultipleFetch] = useHandleFetch({}, 'attachImageToItemMultiple');\r\n    const [attachImageToItemSingleState, handleAttachImageToItemSingleFetch] = useHandleFetch({}, 'attachImageToItemSingle');\r\n    const [detachImageFromItemMultipleState, handleDetachImageFromItemMultipleFetch] = useHandleFetch({}, 'detachImageFromItemMultiple');\r\n    const [detachImageFromItemSingleState, handleDetachImageFromItemSingleFetch] = useHandleFetch({}, 'detachImageFromItemSingle');\r\n    const [setImageAsThumbnailToItemState, handleSetImageAsThumbnailToItemFetch] = useHandleFetch({}, 'setImageAsThumbnailToItem');\r\n\r\n\r\n    const [productList,setProductList] = useState([]);\r\n    const [visible, setvisible] = useState(false);\r\n    const [myImages, setmyImages] = useState(false);\r\n    const [myThumbnailImage, setmyThumbnailImage] = useState(false);\r\n    const [isModalOpenForThumbnail, setisModalOpenForThumbnail] = useState(false);\r\n    const [isModalOpenForImages, setisModalOpenForImages] = useState(false);\r\n    const [categoryids, setcategoryIds] = useState([]);\r\n    const [tagIds, setTagIds] = useState([]);\r\n    const [brandId, setBrandId] = useState('');\r\n    const [pricing, setPricing] = useState([]);\r\n    const [coverImageId, setCoverImageId] = useState('');\r\n    const [categoryOptions, setCategoryOptions] = useState([]);\r\n    const [selectedTags, setSelectedTags] = useState([]);\r\n    const [date, setDateFeild] = useState('');\r\n    const [time, setTimeFeild] = useState('');\r\n    const [description, setDescription] = useState('');\r\n\tconst [bnDescription, setBNDescription] = useState('');\r\n\tconst [metaTags,setMetaTags] = useState([]);\r\n\tconst [bnMetaTags,setBnMetaTags] = useState([]);\r\n\tconst [editpricingItem,setEditPricingItem] = useState({}); \r\n\tconst [pricingTagActiveKey,setpricingTagActiveKey] = useState('2');\r\n\tconst [isPricingEditActive, seTisPricingEditActive] = useState(false); \r\n\r\n    const [productIds,setProductIds] = useState([]); \r\n\r\n\r\n\r\n    const [addProductState, handleAddProductFetch] = useHandleFetch({}, 'updateBundle');\r\n\r\n    useEffect(() => {\r\n        const getProductDetail = async () => {\r\n            await handleProductDetailFetch({\r\n                urlOptions: {\r\n                    placeHolders: {\r\n                        id: productDetailData.id\r\n                    }\r\n                }\r\n            })\r\n        };\r\n\r\n        getProductDetail();\r\n\r\n    }, [productDetailData]);\r\n\r\n\r\n    const [price, setPrice] = useState({\r\n        regular: null,\r\n        offer: null,\r\n    });\r\n\r\n\r\n\r\n\r\n    const handleSubmit = async (values: any, actions: any) => {\r\n        // @ts-ignore\r\n        const imagesIds = myImages ? myImages.map(image => {\r\n            return image.id;\r\n        }) : [];\r\n\r\n        console.log('productList',productList);\r\n\r\n        const products = productList.length > 0 ? productList.map(product => {\r\n            return {\r\n                _id: product._id,\r\n                variation: product.variation,\r\n                quantity: product.quantity,\r\n            }\r\n        }) : [];\r\n\r\n    \r\n            if (productDetailData && Object.keys(productDetailData).length > 0) {\r\n                const aboutToUpdatedImageIds = []; \r\n    \r\n                if(imagesIds && imagesIds.length > 0){\r\n                    imagesIds.forEach(imageId => {\r\n                        if(productDetailData && productDetailData['image']){\r\n                            if(!productDetailData['image'].includes(imageId)){\r\n                                aboutToUpdatedImageIds.push(imageId)\r\n                            }\r\n                        }\r\n                    });\r\n                }\r\n    \r\n          \r\n                if (aboutToUpdatedImageIds[0] && aboutToUpdatedImageIds.length > 1) {\r\n                    await handleAttachImageToItemMultipleFetch({\r\n                        urlOptions: {\r\n                            placeHolders: {\r\n                                collection: 'product',\r\n                                itemId: productDetailData.id\r\n                            }\r\n                        },\r\n                        body: {\r\n                            image: aboutToUpdatedImageIds\r\n                        }\r\n                    });\r\n                }\r\n                else if (aboutToUpdatedImageIds[0] && aboutToUpdatedImageIds.length < 1) {\r\n                    await handleAttachImageToItemSingleFetch({\r\n                        urlOptions: {\r\n                            placeHolders: {\r\n                                imageId: aboutToUpdatedImageIds[0].id,\r\n                                collection: 'product',\r\n                                itemId: productDetailData.id\r\n                            }\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n        \r\n            \r\n\r\n\r\n\r\n        const addProductRes = await handleAddProductFetch({\r\n            urlOptions: {\r\n                placeHolders: {\r\n                    id: productDetailData.id\r\n                }\r\n            },\r\n            body: {\r\n                name: values.name.trim(),\r\n                category: categoryids,\r\n                tags: tagIds,\r\n                brand: brandId,\r\n                price: price,\r\n                description: description,\r\n                model: values.model,\r\n                unit: values.unit,\r\n                image: imagesIds,\r\n                products,\r\n\r\n                metaTitle: values.metaTitle,\r\n\t\t\t\tmetaDescription: values.metaDescription,\r\n\t\t\t\tmetaTags: metaTags.join(','),\r\n\r\n\t\t\t\t\r\n\t\t\t\tbn: {\r\n\t\t\t\t\tmetaTitle: values.bnMetaTitle,\r\n\t\t\t\t\tmetaDescription: values.bnMetaDescription,\r\n\t\t\t\t\tmetaTags: bnMetaTags.join(','),\r\n\t\t\t\t\tname: values.bnName.trim(),\r\n\t\t\t\t\tunit: values.metaUnit,\r\n\t\t\t\t\tdescription: values.bnDescription,\r\n                }\r\n                \r\n                \r\n                // startDate, endDate,\r\n            }\r\n        });\r\n\r\n\r\n        // @ts-ignore\r\n        if (addProductRes && addProductRes.status === 'ok') {\r\n            openSuccessNotification('Bundle Updated');\r\n  \r\n\r\n            setAddNewCategoryVisible(false)\r\n\r\n\r\n            // updat bundle detail data\r\n\r\n\r\n\r\n\r\n            // @ts-ignore\r\n            setmyImages([]);\r\n            setCoverImageId('');\r\n            setPricing([]);\r\n            setTagIds([]);\r\n            setSelectedTags([]);\r\n            setBrandId(\"\");\r\n            setcategoryIds([]);\r\n            setCategoryOptions([]);\r\n            actions.resetForm();\r\n        }\r\n        else {\r\n            // openErrorNotification();\r\n        }\r\n\r\n        actions.setSubmitting(false);\r\n\r\n\r\n    };\r\n\r\n\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        if (!addProductState['isLoading']) {\r\n            const error = addProductState['error'];\r\n            if (error['isError'] && Object.keys(error['error']).length > 0) {\r\n\r\n\r\n                const errors =\r\n                    Object.values(error['error']).length > 0\r\n                        ? Object.values(error['error'])\r\n                        : [];\r\n                errors.forEach((err, i) => {\r\n                    if (typeof err === 'string') {\r\n                        openErrorNotification(err)\r\n                    }\r\n                    else if (typeof err === 'object') {\r\n                        if (err && Object.keys(err).length > 0) {\r\n                            const errs = Object.values(err);\r\n                            errs.forEach(err => {\r\n                                openErrorNotification(err)\r\n                            })\r\n\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n        }\r\n    }, [addProductState])\r\n\r\n\r\n\r\n    useEffect(()=>{\r\n        if(productDetailState['data'] && productDetailState['data']['products'] && productDetailState['data']['products'].length > 0){\r\n            const productIds = productDetailState['data']['products'].map(item => {\r\n              return {\r\n                ...item,\r\n                id: item._id,\r\n              }\r\n            }); \r\n            setProductIds(productIds); \r\n            const productList = productDetailState['data'].products.map(item => {\r\n                return {\r\n                    _id: item._id,\r\n                    variation: item.variation,\r\n                    quantity: item.quantity,\r\n                    totalPrice: item.totalPrice \r\n                }\r\n            }); \r\n           setProductList(productList); \r\n\r\n        }; \r\n        \r\n        console.log(\"productDetailState['data']\",productDetailState['data']);\r\n    },[productDetailState['done']])\r\n\r\n\r\n\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        if (productIds && productIds.length > 0 && productList) {\r\n            if (productIds.length > productList.length) {\r\n                const variation = productIds[productIds.length - 1]['pricing'] && productIds[productIds.length - 1]['pricing'].length > 0 && productIds[productIds.length - 1]['pricing'][0]['_id'];\r\n                console.log('variation', variation)\r\n\r\n                setProductList([...productList, {\r\n                    ...productIds[productIds.length - 1],\r\n                    _id: productIds[productIds.length - 1]['id'],\r\n                    variation: variation,\r\n                    quantity: 1\r\n                }]);\r\n            }\r\n\r\n\r\n            else if (productIds.length < productList.length) {\r\n                console.log('productIds', productIds);\r\n                console.log('productList', productList);\r\n\r\n                const newProductList = productList.filter(item => {\r\n                    let isTrue = false;\r\n                    productIds.forEach(product => {\r\n                        if (product.id === item._id) {\r\n                            isTrue = true;\r\n                        }\r\n                    });\r\n                    return isTrue;\r\n                })\r\n                setProductList(newProductList);\r\n            }\r\n\r\n        }\r\n        else {\r\n            setProductList([]);\r\n        }\r\n        // console.log('productIds', productIds)\r\n\r\n    }, [productIds])\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        if (productDetailData && productDetailData.brand) {\r\n            setBrandId(productDetailData.brand['id']);\r\n        }\r\n        else {\r\n            setBrandId('');\r\n        }\r\n        if (productDetailData && productDetailData.tags && productDetailData.tags.length > 0) {\r\n            // const tagIds = productDetailData.tags.map(item => item.id);\r\n            setSelectedTags(productDetailData.tags);\r\n        }\r\n        else {\r\n            setSelectedTags([]);\r\n\r\n        }\r\n        if (productDetailData && productDetailData.category && productDetailData.category.length > 0) {\r\n            // const categoryIds = productDetailData.category.map(item => item.id);\r\n\r\n            const categoryIds = productDetailData.category;\r\n            setCategoryOptions(categoryIds);\r\n            setcategoryIds(categoryIds); \r\n        }\r\n        else {\r\n            setCategoryOptions([]);\r\n        }\r\n\r\n        if (productDetailData && productDetailData.anotherPrice && productDetailData.anotherPrice) {\r\n            setPrice(productDetailData.anotherPrice); \r\n        }\r\n        else {\r\n            setPricing([]);\r\n\r\n        }\r\n\r\n\r\n        if (productDetailData && productDetailData.date && productDetailData.date) {\r\n            setDateFeild(productDetailData.date)\r\n        }\r\n        else {\r\n            setDateFeild('');\r\n\r\n        }\r\n\r\n        if (productDetailData && productDetailData.time && productDetailData.time) {\r\n            setTimeFeild(productDetailData.time);\r\n        }\r\n        else {\r\n            setTimeFeild('');\r\n        }\r\n\r\n\r\n\r\n    }, [productDetailData]);\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        if (productDetailState.done && Object.keys(productDetailState).length > 0) {\r\n\r\n            const images = productDetailState.data.image;\r\n            if (images && images.length > 0) {\r\n                setmyImages(images);\r\n            }\r\n\r\n            if (productDetailState.data.cover && productDetailState.data.cover['id']) {\r\n                // @ts-ignore\r\n                setmyImages([productDetailState.data.cover, ...images]);\r\n                console.log('catcat', [productDetailState.data.cover, ...images]);\r\n                setCoverImageId(productDetailState.data.cover['id']);\r\n            }\r\n        }\r\n    }, [productDetailState])\r\n\r\n\r\n    useEffect(() => {\r\n        console.log('thumnail', myImages);\r\n        // @ts-ignore\r\n        if (myImages && myImages[0] && myImages.length < 2) {\r\n            console.log('thumnail2', myImages);\r\n\r\n            if (coverImageId !== myImages[0].id) {\r\n                setCoverImageId(myImages[0].id);\r\n                handleSetImageAsThumnail(myImages[0]);\r\n            }\r\n\r\n        }\r\n\r\n    }, [myImages])\r\n\r\n\r\n    const handleDetachSingleImage = async id => {\r\n        await handleDetachImageFromItemSingleFetch({\r\n            urlOptions: {\r\n                placeHolders: {\r\n                    imageId: id,\r\n                    collection: 'product',\r\n                    itemId: productDetailData.id\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n\r\n\r\n    const handleSetImageAsThumnail = async image => {\r\n\r\n        const thumbnailRes = await handleSetImageAsThumbnailToItemFetch({\r\n            urlOptions: {\r\n                placeHolders: {\r\n                    imageId: image.id,\r\n                    collection: 'product',\r\n                    itemId: productDetailData.id\r\n                }\r\n            }\r\n        });\r\n\r\n        console.log('thumbnailRes', thumbnailRes);\r\n\r\n        // @ts-ignore\r\n        if (thumbnailRes && thumbnailRes.status === 'ok') {\r\n            openSuccessNotification('Set as thumbnail!')\r\n            // const positionInBrand = () => {\r\n            //     return productList.map(item => item.id).indexOf(productDetailData.id);\r\n            // }\r\n\r\n            // const index = positionInBrand();\r\n\r\n            // const prevItem = productList.find(item => item.id === productDetailData.id);\r\n\r\n            // if (prevItem) {\r\n            //     console.log('prevItem--', prevItem, 'image--', image);\r\n            //     const updatedItem = Object.assign({}, productList[index], { ...prevItem, cover: image.cover });\r\n            //     const updateProductList = [...productList.slice(0, index), updatedItem, ...productList.slice(index + 1)];\r\n            //     setProductList(updateProductList);\r\n\r\n            // }\r\n        }\r\n        else {\r\n            openErrorNotification(\"Couldn't set as thumbnail, Something went wrong\")\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        if (!updateProductState['isLoading']) {\r\n            const error = updateProductState['error'];\r\n            if (error['isError'] && Object.keys(error['error']).length > 0) {\r\n\r\n\r\n                const errors =\r\n                    Object.values(error['error']).length > 0\r\n                        ? Object.values(error['error'])\r\n                        : [];\r\n                errors.forEach((err, i) => {\r\n                    if (typeof err === 'string') {\r\n                        openErrorNotification(err)\r\n                    }\r\n                    else if (typeof err === 'object') {\r\n                        if (err && Object.keys(err).length > 0) {\r\n                            const errs = Object.values(err);\r\n                            errs.forEach(err => {\r\n                                openErrorNotification(err)\r\n                            })\r\n\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n        }\r\n    }, [updateProductState])\r\n\r\n\r\n    const handleCancel = (e: any) => {\r\n        setAddNewCategoryVisible(false);\r\n    };\r\n\r\n\r\n    const getisSubmitButtonDisabled = (values, isValid) => {\r\n        if (!values.name || !(pricing.length > 0) || !(categoryOptions.length > 0) || !isValid) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n\r\n    const handleImagesDelete = (id) => {\r\n        // @ts-ignore\r\n        const newImages = myImages && myImages.filter(image => {\r\n            return image.id !== id;\r\n        })\r\n\r\n        setmyImages(newImages);\r\n    }\r\n\r\n    const handleDeleteFromSelectedImage = () => {\r\n\r\n    };\r\n\r\n    const handleThumbnailImageDelete = (id) => {\r\n        // @ts-ignore\r\n        const newImages = myThumbnailImage && myThumbnailImage.filter(image => {\r\n            return image.id !== id;\r\n        })\r\n\r\n        if (newImages.length > 0) {\r\n            setmyThumbnailImage(newImages);\r\n\r\n        }\r\n        else setmyThumbnailImage(false);\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    useEffect(()=>{\r\n\r\n        if(productDetailState.data && Object.keys(productDetailState.data).length > 0 && productDetailState.data.metaTags){\r\n            const metaTags = productDetailState.data.metaTags.split(','); \r\n\r\n            console.log('localMetaTags',metaTags);\r\n           \r\n            const bnMetaTags = productDetailState.data.bn['metaTags'].split(','); \r\n            setMetaTags(metaTags)\r\n            setBnMetaTags(bnMetaTags)\r\n        }\r\n\r\n    },[productDetailState['done']])\r\n\r\n\r\n\r\n\r\n    return (\r\n        <Formik\r\n            onSubmit={(values, actions) => handleSubmit(values, actions)}\r\n            validationSchema={validationSchema}\r\n            validateOnBlur={false}\r\n            enableReinitialize={true}\r\n            initialValues={\r\n                { ...initialValues,\r\n                    ...{\r\n                    ...productDetailData,\r\n                    ...( productDetailState['data'] && Object.keys(productDetailState['data']).length > 0 && productDetailState['data']['bn'] && {\r\n                        bnMetaTitle: productDetailState['data']['bn'].metaTitle,\r\n                        bnMetaDescription: productDetailState['data']['bn'].metaDescription,\r\n                        bnName: productDetailState['data']['bn'].name,\r\n                        metaUnit: productDetailState['data']['bn'].unit,\r\n                        bnDescription: productDetailState['data']['bn'].description,\r\n                      }),\r\n                } }\r\n            }\r\n        >\r\n            {({\r\n                handleChange,\r\n                values,\r\n                handleSubmit,\r\n                errors,\r\n                isValid,\r\n                isSubmitting,\r\n                touched,\r\n                handleBlur,\r\n                setFieldTouched,\r\n                handleReset,\r\n            }) => (\r\n                    <>\r\n                        <Modal\r\n                            style={{\r\n                                top: '40px',\r\n\r\n                            }}\r\n                            bodyStyle={{\r\n                                margin: 0,\r\n                                padding: 0,\r\n                            }}\r\n                            width={'70vw'}\r\n                            title=\"Add New Bundle\"\r\n                            visible={addNewCategoryVisible}\r\n                            onOk={(e: any) => handleSubmit(e)}\r\n                            onCancel={handleCancel}\r\n                            okText='Update'\r\n                            okButtonProps={{\r\n                                loading: isSubmitting,\r\n                                htmlType: \"submit\",\r\n                            }}\r\n                        >\r\n\r\n\r\n                            <section className='addProductGridContainer'>\r\n                                <div className='addProductGridContainer__left'>\r\n                                    <div className='addProductGridContainer__name'>\r\n                                        <div className='addProductGridContainer__item-header'>\r\n                                            <h3>\r\n                                                Bundle Information *\r\n\t\t\t                                </h3>\r\n\r\n                                            <div className={values.name && values.name.length > 2 ? 'checkicon-active' : 'checkicon'}>\r\n                                                <CheckCircleOutlined />\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className='addProductGridContainer__item-body'>\r\n                                        <Input\r\n\t\t\t\t\t\t\t\t\t\t\t\tlabel='Name'\r\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.name}\r\n\t\t\t\t\t\t\t\t\t\t\t\tplaceHolder={'Rafty ox'}\r\n\t\t\t\t\t\t\t\t\t\t\t\tname='name'\r\n\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['name'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['name'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('name');\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\tlabel='BN Name'\r\n\t\t\t\t\t\t\t\t\t\t\tvalue={values.bnName}\r\n\t\t\t\t\t\t\t\t\t\t\tplaceHolder={'রাফতি অক্স'}\r\n\t\t\t\t\t\t\t\t\t\t\tname='bnName'\r\n\t\t\t\t\t\t\t\t\t\t\tisError={(touched.bnName && errors.bnName) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['bnName'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.bnName && errors.bnName) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['bnName'])}\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('bnName');\r\n\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\r\n\r\n\r\n                                    \r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\t\t\t\t\t\tDescription\r\n                                             </h3>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\twidth: '100%',\r\n\t\t\t\t\t\t\t\t\t\t\t\tmaxWidth: '100%'\r\n\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<CKEditor\r\n\t\t\t\t\t\t\t\t\t\t\t\t\teditor={ClassicEditor}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tdata={description}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonInit={editor => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t// You can store the \"editor\" and use when it is needed.\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tconsole.log('Editor is ready to use!', editor);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(event, editor) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tconst data = editor.getData();\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetDescription(data);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonBlur={(event, editor) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tconsole.log('Blur.', editor);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonFocus={(event, editor) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tconsole.log('Focus.', editor);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tmarginTop:\"15px\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}></div>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\t\t\t\t\t\tBN Description\r\n                                             </h3>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\twidth: '100%',\r\n\t\t\t\t\t\t\t\t\t\t\t\tmaxWidth: '100%'\r\n\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<CKEditor\r\n\t\t\t\t\t\t\t\t\t\t\t\t\teditor={ClassicEditor}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tdata={bnDescription}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonInit={editor => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t// You can store the \"editor\" and use when it is needed.\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tconsole.log('Editor is ready to use!', editor);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(event, editor) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tconst data = editor.getData();\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetBNDescription(data);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonBlur={(event, editor) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tconsole.log('Blur.', editor);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonFocus={(event, editor) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tconsole.log('Focus.', editor);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n                                            {/* <div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\tdisplay: 'flex',\r\n\t\t\t\t\t\t\t\t\t\t\t\tjustifyContent: 'space-between'\r\n\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\twidth: '48%',\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<DatePicker\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabel='Date'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={handleDateChange} />\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\twidth: '48%'\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<DatePicker\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tdate={date}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\twithTime={true}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder='Select time'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabel='Time'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={handleTimeChange} />\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t</div> */}\r\n                                            <div style={{\r\n                                                marginBottom: '15px'\r\n                                            }}></div>\r\n                                            {/* \r\n\t\t\t\t\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\t\t\t\t\trows={1}\r\n\t\t\t\t\t\t\t\t\t\t\t\tlabel='Venue'\r\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.venue}\r\n\t\t\t\t\t\t\t\t\t\t\t\tname='venue'\r\n\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.venue && errors.venue) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['venue'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.venue && errors.venue) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['venue'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('venue');\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\t\tlabel='Purchase Limit'\r\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.purchaseLimit}\r\n\t\t\t\t\t\t\t\t\t\t\t\ttype='number'\r\n\t\t\t\t\t\t\t\t\t\t\t\tname='purchaseLimit'\r\n\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.purchaseLimit && errors.purchaseLimit) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['purchaseLimit'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.purchaseLimit && errors.purchaseLimit) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['purchaseLimit'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('purchaseLimit');\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t/> */}\r\n\r\n                                            <div className='addProductGridContainer__item-body-variationCard-item'>\r\n                                                <h4>\r\n                                                    Price *\r\n\t\t\t                                \t</h4>\r\n                                                <div className='addProductGridContainer__item-body-variationCard-item-container'>\r\n                                                    <div className='addProductGridContainer__item-body-variationCard-item-container-left'>\r\n                                                        <InputSmall\r\n                                                            label='Regular'\r\n                                                            value={price.regular}\r\n                                                            name='regular'\r\n                                                            onChange={(e) => setPrice({\r\n                                                                ...price,\r\n                                                                regular: e.target.value\r\n                                                            })}\r\n                                                        />\r\n\r\n\r\n                                                    </div>\r\n                                                    <div className='addProductGridContainer__item-body-variationCard-item-container-right'>\r\n\r\n                                                        <InputSmall\r\n                                                            label='Offer'\r\n                                                            value={price.offer}\r\n                                                            name='offer'\r\n                                                            onChange={(e) => setPrice({\r\n                                                                ...price,\r\n                                                                offer: e.target.value\r\n                                                            })}\r\n                                                        />\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n\r\n\r\n\r\n                                            {/* <div style={{\r\n                                                display: 'flex',\r\n                                                justifyContent: 'space-between'\r\n                                            }}>\r\n                                                <div style={{\r\n                                                    width: '48%',\r\n                                                }}>\r\n                                                    <DatePicker\r\n                                                        date={startDate}\r\n                                                        label='Start Date'\r\n                                                        onChange={handleStartDataChange} />\r\n\r\n                                                </div>\r\n                                                <div style={{\r\n                                                    width: '48%'\r\n                                                }}>\r\n\r\n                                                    <DatePicker\r\n                                                        date={endDate}\r\n                                                        label='End Date'\r\n                                                        onChange={handleEndDataChange} />\r\n\r\n                                                </div>\r\n                                            </div> */}\r\n\r\n\r\n                                        </div>\r\n\r\n\r\n\r\n                                    </div>\r\n\r\n                                    {/* <div className='addProductGridContainer__price'>\r\n                                        <div className='addProductGridContainer__item-header'>\r\n                                            <h3>\r\n                                                Products\r\n\t\t                                    </h3>\r\n\r\n                                            <div className={pricing && pricing.length > 0 ? 'checkicon-active' : 'checkicon'}>\r\n                                                <CheckCircleOutlined />\r\n                                            </div>\r\n                                        </div>\r\n\r\n\r\n                                        <div className='addProductGridContainer__item-body'>\r\n\r\n                                            <h3 className='inputFieldLabel'>\r\n                                                Products\r\n                                            </h3>\r\n                                            <SelectProducts\r\n                                                setProductIds={setProductIds}\r\n                                                productIds={productIds}\r\n                                            />\r\n\r\n                                            <div style={{\r\n                                                marginTop: \"15px\"\r\n                                            }}></div>\r\n\r\n                                            <h3 className='inputFieldLabel'>\r\n                                                Selcted Products\r\n                                            </h3>\r\n\r\n                                            <SelectedProductItems\r\n                                                productList={productList}\r\n                                                setProductList={setProductList}\r\n                                            />\r\n                                        </div>\r\n                                    </div> */}\r\n\r\n\r\n                                    <div className='addProductGridContainer__image'>\r\n\r\n                                <div className='addProductGridContainer__item-header'>\r\n                                    <h3>\r\n                                        Image\r\n                                </h3>\r\n\r\n                                    <Tooltip\r\n                                        placement=\"left\" title={'Click on the image to select cover image, By default 1st image is selected as cover'}>\r\n                                        <a href='###'>\r\n                                            <InfoCircleOutlined />\r\n                                        </a>\r\n                                    </Tooltip>\r\n</div>\r\n\r\n<div\r\n    style={{\r\n        padding: \"10px\"\r\n    }}\r\n    className='aboutToUploadImagesContainer'>\r\n    {productDetailState.isLoading && (\r\n        <div style={{\r\n            padding: '20px 0'\r\n        }}>\r\n            <Spin />\r\n        </div>\r\n    )}\r\n    {productDetailState.done && (\r\n        <>\r\n            {myImages &&\r\n                // @ts-ignore\r\n                myImages.length > 0 && myImages.map((image, index) => {\r\n                    return (\r\n                        <div className='aboutToUploadImagesContainer__item'>\r\n                            <div\r\n                                className='aboutToUploadImagesContainer__item-imgContainer'\r\n                                onClick={() => {\r\n                                    setCoverImageId(image.id);\r\n                                    handleSetImageAsThumnail(image);\r\n                                }}\r\n                            >\r\n                                <img src={image.cover} alt={image.alt} />\r\n                            </div>\r\n\r\n                            <span\r\n                                onClick={() => {\r\n                                    handleImagesDelete(image.id)\r\n                                    handleDetachSingleImage(image.id)\r\n                                }\r\n\r\n                                }\r\n                                className='aboutToUploadImagesContainer__item-remove'>\r\n                                <CloseOutlined />\r\n                            </span>\r\n\r\n\r\n                            {coverImageId === image.id ? (\r\n                                <span className='aboutToUploadImagesContainer__item-cover'>\r\n                                    <CheckOutlined />\r\n                                </span>\r\n                            ) : !coverImageId && index === 0 && (\r\n                                <span className='aboutToUploadImagesContainer__item-cover'>\r\n                                    <CheckOutlined />\r\n                                </span>\r\n                            )}\r\n\r\n\r\n                        </div>\r\n                    )\r\n                })}\r\n\r\n\r\n            <Tooltip\r\n                title={'Attach images'}>\r\n\r\n                <div\r\n                    onClick={() => {\r\n                        setvisible(true);\r\n                        setisModalOpenForImages(true);\r\n                        setisModalOpenForThumbnail(false);\r\n                    }}\r\n                    className='aboutToUploadImagesContainer__uploadItem'>\r\n                    {/* <FileAddOutlined />\r\n            <FileImageTwoTone />\r\n            <FileImageOutlined /> */}\r\n                    <FileImageFilled />\r\n                    {/* <h5>\r\n             Select From Library\r\n    <     /h5> */}\r\n                    <span className='aboutToUploadImagesContainer__uploadItem-plus'>\r\n                        <PlusOutlined />\r\n                    </span>\r\n                </div>\r\n            </Tooltip>\r\n        </>\r\n    )}\r\n\r\n</div>\r\n</div>\r\n\r\n\r\n\r\n\r\n<div className='addProductGridContainer__image'>\r\n\r\n<div className='addProductGridContainer__item-header'>\r\n    <h3>\r\n    Meta Data\r\n</h3>\r\n\r\n    <Tooltip\r\n        placement=\"left\" title={\"Meta data will be used to make the user's easy and for search engine optimization.\"}>\r\n        <a href='###'>\r\n            <InfoCircleOutlined />\r\n        </a>\r\n    </Tooltip>\r\n</div>\r\n<div className='addProductGridContainer__item-body'>\r\n\r\n                \r\n<Input\r\nlabel='Meta title'\r\nvalue={values.metaTitle}\r\nplaceHolder={'category...'}\r\nname='metaTitle'\r\nisError={(touched.metaTitle && errors.metaTitle) ||\r\n(!isSubmitting && addProductState.error['error']['metaTitle'])}\r\n\r\nerrorString={(touched.metaTitle && errors.metaTitle) ||\r\n(!isSubmitting && addProductState.error['error']['metaTitle'])}\r\nonChange={(e: any) => {\r\nhandleChange(e);\r\nsetFieldTouched('metaTitle')\r\n}}\r\n/>\r\n\r\n<Input\r\nlabel='BN Meta title'\r\nvalue={values.bnMetaTitle}\r\nplaceHolder={'ক্যাটাগড়ি...'}\r\nname='bnMetaTitle'\r\nisError={(touched.bnMetaTitle && errors.bnMetaTitle) ||\r\n(!isSubmitting && addProductState.error['error']['bnMetaTitle'])}\r\n\r\nerrorString={(touched.bnMetaTitle && errors.bnMetaTitle) ||\r\n(!isSubmitting && addProductState.error['error']['bnMetaTitle'])}\r\nonChange={(e: any) => {\r\nhandleChange(e);\r\nsetFieldTouched('bnMetaTitle');\r\n}}\r\n/>\r\n\r\n<TextArea\r\nlabel='Meta description'\r\nvalue={values.metaDescription}\r\nplaceholder={'meta...'}\r\nname='metaDescription'\r\nisError={(touched.metaDescription && errors.metaDescription) ||\r\n(!isSubmitting && addProductState.error['error']['metaDescription'])}\r\n\r\nerrorString={(touched.metaDescription && errors.metaDescription) ||\r\n(!isSubmitting && addProductState.error['error']['metaDescription'])}\r\nonChange={(e: any) => {\r\nhandleChange(e);\r\nsetFieldTouched('metaDescription');\r\n}}\r\n/>\r\n\r\n<TextArea\r\nlabel='BN Meta Description'\r\nvalue={values.bnMetaDescription}\r\nplaceholder={'এইয় মেট...'}\r\nname='bnMetaDescription'\r\nisError={(touched.bnMetaDescription && errors.bnMetaDescription) ||\r\n(!isSubmitting && addProductState.error['error']['bnMetaDescription'])}\r\n\r\nerrorString={(touched.bnMetaDescription && errors.bnMetaDescription) ||\r\n(!isSubmitting && addProductState.error['error']['bnMetaDescription'])}\r\nonChange={(e: any) => {\r\nhandleChange(e);\r\nsetFieldTouched('bnMetaDescription');\r\n}}\r\n/>\r\n\r\n<h3 className='inputFieldLabel'>\r\nMeta Tags (grocery,fashion)\r\n</h3>\r\n\r\n<MetaTags\r\n// @ts-ignore\r\nsetTags={setMetaTags}\r\ntags={metaTags}\r\n/>\r\n\r\n<div style={{\r\nmarginTop:'15px'\r\n}}></div>\r\n\r\n<h3 className='inputFieldLabel'>\r\nBN Meta Tags (মুদিখানা,ফ্যাশন)\r\n</h3>\r\n\r\n<MetaTags\r\n// @ts-ignore\r\nsetTags={setBnMetaTags}\r\ntags={bnMetaTags}\r\n/>\r\n</div>\r\n</div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n                                </div>\r\n                                <div className='addProductGridContainer__right'>\r\n                                    <div className='addProductGridContainer__category'>\r\n\r\n                                        <div className='addProductGridContainer-rightItemContainer'>\r\n                                            <div className='addProductGridContainer-rightItemContainer-header'>\r\n                                                <h3>\r\n                                                    Categories *\r\n\t\t\t                                \t</h3>\r\n\r\n                                                <Tooltip\r\n                                                    color='red'\r\n                                                    visible={addProductState.error['error']['category'] && !(categoryids.length > 0)}\r\n                                                    placement=\"left\" title={'Select at least one category'}>\r\n                                                    <div className={!(categoryids.length > 0)\r\n                                                        && !addProductState.error['error']['category'] ? 'checkicon' : addProductState.error['error']['category'] ? 'checkicon-error' : 'checkicon-active'}>\r\n                                                        <CheckCircleOutlined />\r\n                                                    </div>\r\n                                                </Tooltip>\r\n\r\n                                            </div>\r\n                                            <div className='addProductGridContainer-rightItemContainer-body'>\r\n                                                <Categories\r\n                                                    setCategoryOptions={setCategoryOptions}\r\n                                                    categoryOptions={categoryOptions}\r\n                                                    setcategoryIds={setcategoryIds} />\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                    </div>\r\n\r\n                                    <div className='addProductGridContainer__tag'>\r\n                                        <div className='addProductGridContainer-rightItemContainer'>\r\n                                            <div className='addProductGridContainer-rightItemContainer-header'>\r\n                                                <h3>\r\n                                                    Tags\r\n\t\t\t\t</h3>\r\n                                            </div>\r\n                                            <div className='addProductGridContainer-rightItemContainer-body'>\r\n                                                <Tags\r\n                                                    setSelectedTags={setSelectedTags}\r\n                                                    selectedTags={selectedTags}\r\n                                                    setTagIds={setTagIds} />\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                    </div>\r\n                                    <div className='addProductGridContainer__brand'>\r\n                                        <div className='addProductGridContainer-rightItemContainer'>\r\n                                            <div className='addProductGridContainer-rightItemContainer-header'>\r\n                                                <h3>\r\n                                                    Brand\r\n\t\t\t\t</h3>\r\n                                            </div>\r\n                                            <div className='addProductGridContainer-rightItemContainer-body'>\r\n                                                <Brands setBrandId={setBrandId} />\r\n                                            </div>\r\n                                        </div>\r\n\r\n\r\n                                    </div>\r\n\r\n                                </div>\r\n                            </section>\r\n\r\n\r\n                        </Modal>\r\n\r\n                        <MediaLibrary\r\n                            setvisible={setvisible}\r\n                            visible={visible}\r\n                            setmyImages={setmyImages}\r\n                            myImages={myImages}\r\n                            setmyThumbnailImage={setmyThumbnailImage}\r\n                            isModalOpenForThumbnail={isModalOpenForThumbnail}\r\n                            isModalOpenForImages={isModalOpenForImages}\r\n\r\n                        />\r\n                    </>\r\n                )}\r\n        </Formik>\r\n\r\n\r\n\r\n\r\n    );\r\n};\r\n\r\nexport default AddNewProduct;\r\n\r\n\r\n\r\n\r\n/*\r\n\r\n\r\nProduct variation ---->\r\n\r\nPrice [title]\r\n\t[regular input field] [offer inputfield]\r\n\r\nStock [title]\r\n\t[available input field] [minimum inputfield]\r\n\r\ndefault [default can be set to true]\r\n\r\nattributes [title]\r\n\t[add attributes name]\r\n\t\t[add attrubutes value]\r\n\r\n\t[add attributes name]\r\n\t\t[add attrubutes value\r\n\r\n*///","import React, { useEffect } from 'react';\r\n\r\n// import hooks\r\nimport { useHandleFetch } from \"../../hooks\";\r\n\r\n// import lib\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport { Skeleton, Empty, Button, notification, Table, Space, Input as CoolInput, Tooltip, Modal } from 'antd';\r\n\r\n\r\n\r\ninterface Props {\r\n    productId?: any;\r\n    quantity?: any;\r\n}\r\n\r\n\r\n\r\nconst CouponProducts = ({\r\n    productId,\r\n    quantity\r\n}: Props) => {\r\n\r\n    const history = useHistory();\r\n\r\n    const [productDetailState, handleProductFetch] = useHandleFetch(\r\n        {},\r\n        'productDetailById'\r\n    );\r\n\r\n    useEffect(() => {\r\n        const getAndSetProduct = async () => {\r\n            await handleProductFetch({\r\n                urlOptions: {\r\n                    placeHolders: {\r\n                        id: productId,\r\n                    },\r\n                },\r\n            });\r\n\r\n        };\r\n        getAndSetProduct();\r\n    }, []);\r\n\r\n\r\n    console.log('productDetailStatecoupon', productDetailState)\r\n\r\n\r\n    return (\r\n        <Skeleton\r\n            paragraph={{ rows: 2 }}\r\n            loading={productDetailState.isLoading}>\r\n            {productDetailState.data && Object.keys(productDetailState.data).length > 0 && (\r\n                <>\r\n                    <div className='couponDetailProductItem'>\r\n                        <div\r\n                            onClick={() => history.push(`/admin/product/${productId}`)}\r\n                            className='couponDetailProductItem__cover'>\r\n                            <img src={productDetailState.data.cover && productDetailState.data.cover['cover']} alt=\"\" />\r\n                        </div>\r\n                        <div className='couponDetailProductItem__info'>\r\n                            <h2\r\n                                onClick={() => history.push(`/admin/product/${productId}`)}\r\n                            >\r\n                                {productDetailState.data.name}\r\n                            </h2>\r\n                            <h3>\r\n                                {productDetailState.data.price}\r\n                            </h3>\r\n                            <h3>\r\n                                Quantity: {quantity}\r\n                            </h3>\r\n                        </div>\r\n                    </div>\r\n                </>\r\n            )}\r\n\r\n        </Skeleton>\r\n    )\r\n}\r\n\r\n\r\nexport default CouponProducts; ","import React, { useEffect, useState } from 'react';\r\nimport { useParams, useHistory } from \"react-router\";\r\n\r\n\r\n// import hooks\r\nimport { useHandleFetch } from \"../../hooks\";\r\n\r\n// import lib\r\nimport {\r\n    EditOutlined,\r\n    DeleteOutlined\r\n} from '@ant-design/icons';\r\n\r\nimport { Skeleton, Empty, Button, notification, Table, Space, Input as CoolInput, Tooltip, Modal, Badge } from 'antd';\r\n\r\n\r\n// import moment\r\nimport Moment from \"react-moment\";\r\n\r\n// import components\r\nimport { DataTableSkeleton } from \"../../components/Placeholders\";\r\nimport ProductBundleEdit from \"./ProductBundleEdit\";\r\nimport CouponProducts from \"../coupon/CouponProducts\";\r\n\r\n\r\nconst { Column, ColumnGroup } = Table;\r\nconst { Search } = CoolInput;\r\n\r\n\r\ninterface Props {\r\n    productRecord?: any;\r\n}\r\n\r\nconst NewBrandDetail = (props: Props) => {\r\n    const [productDetailState, handleProductDetailFetch] = useHandleFetch({}, 'bundleDetail');\r\n\r\n    const params = useParams();\r\n    const history = useHistory();\r\n    const productId = params['id'];\r\n    const [productEditVisible, setProductEditVisible] = useState(false);\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        const getProductDetail = async () => {\r\n            await handleProductDetailFetch({\r\n                urlOptions: {\r\n                    placeHolders: {\r\n                        id: productId\r\n                    }\r\n                }\r\n            })\r\n        };\r\n\r\n        getProductDetail();\r\n\r\n    }, [productId]);\r\n\r\n\r\n\r\n\r\n    console.log('productDetailState', productDetailState);\r\n\r\n    console.log('brandParams', params);\r\n\r\n    const getImagesInCollumn = (imgs) => {\r\n        if (!imgs[0]) return false;\r\n        imgs = imgs.map(item => item.cover);\r\n        const columns = {};\r\n\r\n        let localIndex = 0;\r\n        let columnNumber = 0;\r\n\r\n\r\n        imgs.forEach((item, index) => {\r\n            if (localIndex < 3) {\r\n                if (columns[columnNumber]) {\r\n                    columns[columnNumber] = [...columns[columnNumber], item]\r\n                }\r\n                else columns[columnNumber] = [item];\r\n\r\n                localIndex = localIndex + 1;\r\n                columnNumber = columnNumber + 1;\r\n\r\n            }\r\n            else {\r\n                localIndex = 0;\r\n                columnNumber = 0;\r\n                console.log('localIndex', localIndex)\r\n            }\r\n        });\r\n\r\n        return columns;\r\n    }\r\n\r\n\r\n    const row = productDetailState.done && productDetailState.data && productDetailState.data['image'] ? getImagesInCollumn(productDetailState.data['image']) : [];\r\n\r\n\r\n    console.log('bundleDetail', productDetailState);\r\n    return (\r\n        <div className='brandDetailContainer'>\r\n\r\n            <div className='brandDetailContainer__heading'>\r\n                <h3>\r\n                    Bundle Detail\r\n                </h3>\r\n\r\n                {productDetailState.done && productDetailState.data && (Object.keys(productDetailState.data).length > 0) && (\r\n                    <>\r\n                     <ProductBundleEdit\r\n                          setAddNewCategoryVisible={setProductEditVisible}\r\n                         addNewCategoryVisible={productEditVisible}\r\n                            productDetailData={productDetailState.data}\r\n\r\n                        /> \r\n                         <Button\r\n                            onClick={() => setProductEditVisible(true)}\r\n                            type='link'\r\n                            icon={<EditOutlined />}\r\n                        >\r\n                            Edit\r\n                      </Button> \r\n                    </>\r\n                )}\r\n\r\n            </div>\r\n            <Skeleton\r\n                avatar paragraph={{ rows: 3 }}\r\n                loading={productDetailState.isLoading}>\r\n                {productDetailState.done && productDetailState.data && !(Object.keys(productDetailState.data).length > 0) && (\r\n                    <Empty description='No Bundle Product found' image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n                )}\r\n\r\n                {productDetailState.done && productDetailState.data && (Object.keys(productDetailState.data).length > 0) && (\r\n                    <>\r\n                        <div className='brandDetailContainer__header'>\r\n                            <div className='brandDetailContainer__header-coverContainer brandDetailContainer__header-coverContainer-product'>\r\n                                <img src={productDetailState.data['cover'] && productDetailState.data['cover']['cover']} alt=\"\" />\r\n                            </div>\r\n                            <div className='brandDetailContainer__header-info'>\r\n                                <h2>\r\n                                    {productDetailState.data['name']}\r\n                                </h2>\r\n                                <h4>\r\n                                    {productDetailState.data['price']}\r\n                                </h4>\r\n\r\n                                {productDetailState.data['description'] && (\r\n                                    <h3>\r\n                                    {productDetailState.data['description']}\r\n                                    </h3>\r\n                                )}\r\n                              \r\n\r\n                                {/* {productDetailState.data['startDate'] && (\r\n                                    <h3>\r\n                                        START DATE:\r\n                                        <span>\r\n                                            {productDetailState.data['startDate']}\r\n                                        </span>\r\n\r\n                                    </h3>\r\n                                )}\r\n\r\n                                {productDetailState.data['endDate'] && (\r\n                                    <h3>\r\n                                        END DATE:\r\n                                        <span>\r\n                                            {productDetailState.data['endDate']}\r\n                                        </span>\r\n\r\n                                    </h3>\r\n                                )} */}\r\n\r\n\r\n\r\n                                {productDetailState.data['url'] && (\r\n                                    <h3>\r\n                                        URL:\r\n                                        <span>\r\n                                            {productDetailState.data['url']}\r\n                                        </span>\r\n\r\n                                    </h3>\r\n                                )}\r\n                                {/* \r\n                                {productDetailState.data['tags'] && productDetailState.data['tags'].length > 0 &&\r\n                                    (<>\r\n                                        <h3>\r\n                                            TAGS:\r\n                                        {productDetailState.data['tags'].map(tag => {\r\n                                            return (\r\n                                                <span>\r\n                                                    {tag.name}\r\n                                                </span>\r\n                                            )\r\n                                        })}\r\n                                        </h3>\r\n\r\n                                    </>)\r\n                                } */}\r\n\r\n                                {productDetailState.data['category'] && productDetailState.data['category'].length > 0 &&\r\n                                    (<>\r\n                                        <h3>\r\n                                            CATEGORIES:\r\n                                        {productDetailState.data['category'].map(cat => {\r\n                                            return (\r\n                                                <span\r\n                                                    onClick={() => history.push(`/admin/category/${cat.id}`)}\r\n\r\n                                                >\r\n                                                    {cat.name}\r\n                                                </span>\r\n                                            )\r\n                                        })}\r\n                                        </h3>\r\n\r\n                                    </>)\r\n                                }\r\n\r\n                            </div>\r\n                        </div>\r\n\r\n\r\n                        {productDetailState.data['icon'] && (\r\n                            <>\r\n                                <div className='brandDetailContainer__heading'>\r\n                                    <h3>\r\n                                        Icon\r\n                            </h3>\r\n                                </div>\r\n\r\n                                <div className='brandDetailContainer__inlineBox'>\r\n                                    <div className='brandDetailContainer__header-coverContainer brandDetailContainer__header-coverContainer-icon'>\r\n                                        <img src={productDetailState.data['icon'] && productDetailState.data['icon']} alt=\"\" />\r\n                                    </div>\r\n\r\n                                </div>\r\n\r\n                                <div style={{\r\n                                    marginBottom: \"25px\"\r\n                                }}></div>\r\n                            </>\r\n                        )}\r\n\r\n\r\n                        {productDetailState.data['image'] && productDetailState.data['image'].length > 0 && (\r\n                            <>\r\n                                <div className='brandDetailContainer__heading'>\r\n                                    <h3>\r\n                                        Image Gallary\r\n                                   </h3>\r\n                                </div>\r\n\r\n                                <div className='brandDetailContainer__imageGallary'>\r\n                                    <div className='imgGallaryContainer'>\r\n\r\n                                        <div className=\"imgGallary-row\">\r\n                                            {row && Object.keys(row).map(column => {\r\n                                                return (\r\n                                                    <div className=\"imgGallary-column\">\r\n                                                        {row[column] && row[column].map(img => {\r\n                                                            return <img src={img} style={{\r\n                                                                width: '100%'\r\n                                                            }} />\r\n                                                        })}\r\n\r\n                                                    </div>\r\n                                                )\r\n                                            })}\r\n\r\n\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                </div>\r\n\r\n                                <div style={{\r\n                                    marginBottom: \"25px\"\r\n                                }}></div>\r\n                            </>\r\n                        )}\r\n\r\n                        {productDetailState.data['brand'] && Object.keys(productDetailState.data['brand']).length > 0 && (\r\n                            <>\r\n                                <div className='brandDetailContainer__heading'>\r\n                                    <h3>\r\n                                        Brand\r\n                                   </h3>\r\n                                </div>\r\n\r\n                                <div\r\n                                    onClick={() => history.push(`/admin/brand/${productDetailState.data['brand']['id']}`)}\r\n\r\n                                    className='brandDetailContainer__brand'>\r\n                                    <div className='brandDetailContainer__brand-coverbox'>\r\n                                        <img src={productDetailState.data['brand']['cover'] && productDetailState.data['brand']['cover']} alt=\"\" />\r\n                                    </div>\r\n                                    <div className='brandDetailContainer__brand-info'>\r\n                                        <h2>\r\n                                            {productDetailState.data['brand']['name']}\r\n                                        </h2>\r\n                                        <h3>\r\n                                            {productDetailState.data['brand']['description']}\r\n                                        </h3>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div style={{\r\n                                    marginBottom: \"25px\"\r\n                                }}></div>\r\n                            </>\r\n                        )}\r\n\r\n\r\n                        {productDetailState.data['primaryCategory'] && Object.keys(productDetailState.data['primaryCategory']).length > 0 && (\r\n                            <>\r\n                                <div className='brandDetailContainer__heading'>\r\n                                    <h3>\r\n                                        Primary Category\r\n                                   </h3>\r\n                                </div>\r\n\r\n                                <div\r\n                                    onClick={() => history.push(`/admin/category/${productDetailState.data['primaryCategory']['id']}`)}\r\n                                    className='brandDetailContainer__brand'>\r\n                                    <div className='brandDetailContainer__brand-coverbox'>\r\n                                        <img src={productDetailState.data['primaryCategory']['cover'] && productDetailState.data['primaryCategory']['cover']} alt=\"\" />\r\n                                    </div>\r\n                                    <div className='brandDetailContainer__brand-info'>\r\n                                        <h2>\r\n                                            {productDetailState.data['primaryCategory']['name']}\r\n                                        </h2>\r\n                                        <h3>\r\n                                            {productDetailState.data['primaryCategory']['description']}\r\n                                        </h3>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div style={{\r\n                                    marginBottom: \"25px\"\r\n                                }}></div>\r\n                            </>\r\n                        )}\r\n\r\n\r\n\r\n\r\n                        \r\n\r\n\r\n                    {productDetailState.done && productDetailState.data && Object.keys(productDetailState.data).length > 0 && productDetailState.data['products'] && (\r\n                            <div className='brandDetailContainer__heading'>\r\n                                <h3>\r\n                                    Products\r\n                       </h3>\r\n                            </div>\r\n                        )\r\n                        }\r\n\r\n\r\n                        <div className='brandDetailContainer__body'>\r\n                            {productDetailState.done && productDetailState.data && productDetailState.data['products'] && !(productDetailState.data['products'].length > 0) && (\r\n                                <div style={{\r\n                                    marginTop: '100px'\r\n                                }}>\r\n                                    <Empty description='No Products exists for this Bundle' image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n                                </div>\r\n                            )}\r\n\r\n                            {productDetailState.done && productDetailState.data && Object.keys(productDetailState.data).length > 0 && (\r\n                                <>\r\n                                    {productDetailState.data['products'] && productDetailState.data['products'].length > 0 &&\r\n                                        productDetailState.data['products'].map(product => {\r\n                                            return (\r\n                                                <CouponProducts\r\n                                                    quantity={product.quantity}\r\n                                                    productId={product['_id']} />\r\n                                            )\r\n                                        })}\r\n                                </>\r\n                            )}\r\n                        </div>\r\n\r\n\r\n\r\n                    </>\r\n\r\n                )}\r\n\r\n            </Skeleton>\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NewBrandDetail\r\n","// @ts-nocheck\r\nimport React, { useState, useEffect } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\nimport { useHandleFetch } from '../../hooks';\r\n// import third party ui lib\r\nimport {\r\n  Upload,\r\n  message,\r\n  Switch,\r\n  Select,\r\n  Button,\r\n  notification,\r\n  Modal,\r\n  Tooltip,\r\n} from 'antd';\r\n\r\nimport {\r\n  FileOutlined,\r\n  InboxOutlined,\r\n  FileAddOutlined,\r\n  DeleteOutlined,\r\n  CheckCircleOutlined,\r\n  CloseOutlined,\r\n  CheckOutlined,\r\n  InfoCircleOutlined,\r\n  PlusOutlined,\r\n  FileImageFilled,\r\n} from '@ant-design/icons';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport MediaLibrary from '../../components/MediaLibrary';\r\n\r\nimport MetaTags from '../../pages/category/MetaTags';\r\nconst validationSchema = Yup.object().shape({\r\n  //   name: Yup.string()\r\n  //     .label('Name')\r\n  //     .required('Name is required')\r\n  //     .min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n  notification.success({\r\n    message: message || 'Brand Created',\r\n    description: '',\r\n    icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n  });\r\n};\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n  notification.error({\r\n    message: message || 'Something Went Wrong',\r\n    description: '',\r\n    icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n  });\r\n};\r\n\r\nconst initialValues = {\r\n  name: '',\r\n  bnName: '',\r\n  description: '',\r\n  bnDescription: '',\r\n  metaTitle: '',\r\n  bnMetaTitle: '',\r\n  metaDescription: '',\r\n  bnMetaDescription: '',\r\n  metaTags: '',\r\n  bnMetaTags: '',\r\n  image: [],\r\n  url: '',\r\n  cover: '',\r\n};\r\n\r\ninterface Props {\r\n  addNewCategoryVisible?: any;\r\n  setAddNewCategoryVisible?: any;\r\n  brandList?: any;\r\n  setBrandList?: any;\r\n}\r\n\r\nconst AddNewBrand = ({\r\n  addNewCategoryVisible,\r\n  setAddNewCategoryVisible,\r\n  brandList,\r\n  setBrandList,\r\n}: Props) => {\r\n  const [updateBrandState, handleUpdateBrandFetch] = useHandleFetch(\r\n    {},\r\n    'addBrand'\r\n  );\r\n  const [myImages, setmyImages] = useState(false);\r\n  const [visibleMedia, setvisibleMedia] = useState(false);\r\n  const [coverImageId, setCoverImageId] = useState('');\r\n  const [tags, setTags] = useState([]);\r\n  const [bnTags, setBnTags] = useState([]);\r\n\r\n  console.log('brandImages', myImages);\r\n  const handleSubmit = async (values: any, actions: any) => {\r\n    // @ts-ignore\r\n    const imagesIds = myImages\r\n      ? myImages.map((image) => {\r\n          return image.id;\r\n        })\r\n      : [];\r\n\r\n    const addBrandRes = await handleUpdateBrandFetch({\r\n      body: {\r\n        name: values.name.trim(),\r\n        description: values.description,\r\n        type: values.type,\r\n        image: imagesIds,\r\n        cover: coverImageId || imagesIds[0] ? imagesIds[0] : '',\r\n        metaTitle: values.metaTitle,\r\n        metaDescription: values.metaDescription,\r\n        metaTags: tags.join(','),\r\n\r\n        bn: {\r\n          metaTitle: values.bnMetaTitle,\r\n          metaDescription: values.bnMetaDescription,\r\n          metaTags: bnTags.join(','),\r\n          name: values.bnName.trim(),\r\n          description: values.bnDescription,\r\n        },\r\n      },\r\n    });\r\n\r\n    // @ts-ignore\r\n    if (addBrandRes && addBrandRes.status === 'ok') {\r\n      openSuccessNotification();\r\n\r\n      setBrandList([\r\n        {\r\n          id: addBrandRes['_id'] || '',\r\n          key: addBrandRes['_id'] || '',\r\n          name: addBrandRes['name'] || '',\r\n          description: addBrandRes['description'] || '',\r\n          cover: addBrandRes['cover'] || '',\r\n          // @ts-ignore\r\n          ...addBrandRes,\r\n        },\r\n        ...brandList,\r\n      ]);\r\n\r\n      actions.resetForm();\r\n      setAddNewCategoryVisible(false);\r\n    } else {\r\n      openErrorNotification();\r\n    }\r\n\r\n    actions.setSubmitting(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!updateBrandState['isLoading']) {\r\n      const error = updateBrandState['error'];\r\n      if (error['isError'] && Object.keys(error['error']).length > 0) {\r\n        const errors =\r\n          Object.values(error['error']).length > 0\r\n            ? Object.values(error['error'])\r\n            : [];\r\n        errors.forEach((err, i) => {\r\n          if (typeof err === 'string') {\r\n            openErrorNotification(err);\r\n          } else if (typeof err === 'object') {\r\n            if (err && Object.keys(err).length > 0) {\r\n              const errs = Object.values(err);\r\n              errs.forEach((err) => {\r\n                openErrorNotification(err);\r\n              });\r\n            }\r\n          }\r\n        });\r\n      }\r\n    }\r\n  }, [updateBrandState]);\r\n\r\n  useEffect(() => {\r\n    console.log('thumnail', myImages);\r\n    // @ts-ignore\r\n    if (myImages && myImages[0] && myImages.length < 2) {\r\n      console.log('thumnail2', myImages);\r\n\r\n      if (coverImageId !== myImages[0].id) {\r\n        setCoverImageId(myImages[0].id);\r\n        // set thumbnail with server for edits\r\n        // handleSetImageAsThumnail(myImages[0]);\r\n      }\r\n    }\r\n  }, [myImages]);\r\n\r\n  const onSwitchChange = (checked: any) => {\r\n    // console.log(checked);\r\n  };\r\n\r\n  const handleCancel = (e: any) => {\r\n    setAddNewCategoryVisible(false);\r\n  };\r\n\r\n  const getisSubmitButtonDisabled = (values, isValid) => {\r\n    if (!values.name || !isValid) {\r\n      return true;\r\n    }\r\n    return false;\r\n  };\r\n\r\n  const handleImagesDelete = (id) => {\r\n    // @ts-ignore\r\n    const newImages =\r\n      myImages &&\r\n      myImages.filter((image) => {\r\n        return image.id !== id;\r\n      });\r\n\r\n    setmyImages(newImages);\r\n  };\r\n\r\n  return (\r\n    <Formik\r\n      onSubmit={(values, actions) => handleSubmit(values, actions)}\r\n      validationSchema={validationSchema}\r\n      validateOnBlur={false}\r\n      enableReinitialize={true}\r\n      initialValues={{ ...initialValues }}\r\n    >\r\n      {({\r\n        handleChange,\r\n        values,\r\n        handleSubmit,\r\n        errors,\r\n        isValid,\r\n        isSubmitting,\r\n        touched,\r\n        handleBlur,\r\n        setFieldTouched,\r\n        handleReset,\r\n      }) => (\r\n        <>\r\n          <Modal\r\n            style={{\r\n              top: '40px',\r\n            }}\r\n            title='Add New Brand'\r\n            visible={addNewCategoryVisible}\r\n            onOk={(e: any) => handleSubmit(e)}\r\n            onCancel={handleCancel}\r\n            okText='Create'\r\n            okButtonProps={{\r\n              loading: isSubmitting,\r\n              htmlType: 'submit',\r\n            }}\r\n          >\r\n            <Input\r\n              label='Name *'\r\n              value={values.name}\r\n              name='name'\r\n              placeHolder={''}\r\n              isError={\r\n                (touched.name && errors.name) ||\r\n                (!isSubmitting && updateBrandState.error['error']['name'])\r\n              }\r\n              errorString={\r\n                (touched.name && errors.name) ||\r\n                (!isSubmitting && updateBrandState.error['error']['name'])\r\n              }\r\n              onChange={(e: any) => {\r\n                handleChange(e);\r\n                setFieldTouched('name');\r\n              }}\r\n            />\r\n\r\n            <Input\r\n              label='BN Name'\r\n              value={values.bnName}\r\n              placeHolder={''}\r\n              name='bnName'\r\n              isError={\r\n                (touched.bnName && errors.bnName) ||\r\n                (!isSubmitting && updateBrandState.error['error']['bnName'])\r\n              }\r\n              errorString={\r\n                (touched.bnName && errors.bnName) ||\r\n                (!isSubmitting && updateBrandState.error['error']['bnName'])\r\n              }\r\n              onChange={(e: any) => {\r\n                handleChange(e);\r\n                setFieldTouched('bnName');\r\n              }}\r\n            />\r\n\r\n            <TextArea\r\n              label='Description'\r\n              value={values.description}\r\n              name='description'\r\n              placeholder={'This brand...'}\r\n              isError={\r\n                (touched.description && errors.description) ||\r\n                (!isSubmitting &&\r\n                  updateBrandState.error['error']['description'])\r\n              }\r\n              errorString={\r\n                (touched.description && errors.description) ||\r\n                (!isSubmitting &&\r\n                  updateBrandState.error['error']['description'])\r\n              }\r\n              onChange={(e: any) => {\r\n                handleChange(e);\r\n                setFieldTouched('description');\r\n              }}\r\n            />\r\n\r\n            <TextArea\r\n              label='BN Description'\r\n              value={values.bnDescription}\r\n              placeholder={'এই ব্র্যান্ড...'}\r\n              name='bnDescription'\r\n              isError={\r\n                (touched.bnDescription && errors.bnDescription) ||\r\n                (!isSubmitting &&\r\n                  updateBrandState.error['error']['bnDescription'])\r\n              }\r\n              errorString={\r\n                (touched.bnDescription && errors.bnDescription) ||\r\n                (!isSubmitting &&\r\n                  updateBrandState.error['error']['bnDescription'])\r\n              }\r\n              onChange={(e: any) => {\r\n                handleChange(e);\r\n                setFieldTouched('bnDescription');\r\n              }}\r\n            />\r\n\r\n            <div\r\n              style={{\r\n                marginTop: '20px',\r\n              }}\r\n            />\r\n\r\n            <div\r\n              className='addproductSection-left-header'\r\n              style={{\r\n                marginBottom: '-5px',\r\n              }}\r\n            >\r\n              <h3 className='inputFieldLabel'>Cover</h3>\r\n            </div>\r\n\r\n            <div className='aboutToUploadImagesContainer'>\r\n              {myImages &&\r\n                // @ts-ignore\r\n                myImages.length > 0 &&\r\n                myImages.map((image, index) => {\r\n                  return (\r\n                    <div className='aboutToUploadImagesContainer__item'>\r\n                      <div\r\n                        className='aboutToUploadImagesContainer__item-imgContainer'\r\n                        onClick={() => {\r\n                          // setCoverImageId(image.id);\r\n                          setvisibleMedia(true);\r\n                        }}\r\n                      >\r\n                        <img src={image.cover} alt={image.alt} />\r\n                      </div>\r\n\r\n                      <span\r\n                        onClick={() => handleImagesDelete(image.id)}\r\n                        className='aboutToUploadImagesContainer__item-remove'\r\n                      >\r\n                        <CloseOutlined />\r\n                      </span>\r\n\r\n                      {/* {coverImageId === image.id ? (\r\n                        <span className='aboutToUploadImagesContainer__item-cover'>\r\n                          <CheckOutlined />\r\n                        </span>\r\n                      ) : (\r\n                        !coverImageId &&\r\n                        index === 0 && (\r\n                          <span className='aboutToUploadImagesContainer__item-cover'>\r\n                            <CheckOutlined />\r\n                          </span>\r\n                        )\r\n                      )} */}\r\n                    </div>\r\n                  );\r\n                })}\r\n\r\n              {!myImages ||\r\n              // @ts-ignore\r\n              (myImages && !(myImages && myImages.length > 0)) ? (\r\n                <>\r\n                  <Tooltip title={'Attach images'}>\r\n                    <div\r\n                      onClick={() => {\r\n                        setvisibleMedia(true);\r\n                      }}\r\n                      className='aboutToUploadImagesContainer__uploadItem'\r\n                    >\r\n                      <FileImageFilled />\r\n                      <span className='aboutToUploadImagesContainer__uploadItem-plus'>\r\n                        <PlusOutlined />\r\n                      </span>\r\n                    </div>\r\n                  </Tooltip>\r\n                </>\r\n              ) : (\r\n                ''\r\n              )}\r\n            </div>\r\n\r\n            <Input\r\n              label='Meta title'\r\n              value={values.metaTitle}\r\n              placeHolder={'...'}\r\n              name='metaTitle'\r\n              isError={\r\n                (touched.metaTitle && errors.metaTitle) ||\r\n                (!isSubmitting && updateBrandState.error['error']['metaTitle'])\r\n              }\r\n              errorString={\r\n                (touched.metaTitle && errors.metaTitle) ||\r\n                (!isSubmitting && updateBrandState.error['error']['metaTitle'])\r\n              }\r\n              onChange={(e: any) => {\r\n                handleChange(e);\r\n                setFieldTouched('metaTitle');\r\n              }}\r\n            />\r\n\r\n            <Input\r\n              label='BN Meta title'\r\n              value={values.bnMetaTitle}\r\n              placeHolder={'...'}\r\n              name='bnMetaTitle'\r\n              isError={\r\n                (touched.bnMetaTitle && errors.bnMetaTitle) ||\r\n                (!isSubmitting &&\r\n                  updateBrandState.error['error']['bnMetaTitle'])\r\n              }\r\n              errorString={\r\n                (touched.bnMetaTitle && errors.bnMetaTitle) ||\r\n                (!isSubmitting &&\r\n                  updateBrandState.error['error']['bnMetaTitle'])\r\n              }\r\n              onChange={(e: any) => {\r\n                handleChange(e);\r\n                setFieldTouched('bnMetaTitle');\r\n              }}\r\n            />\r\n\r\n            <TextArea\r\n              label='Meta description'\r\n              value={values.metaDescription}\r\n              placeholder={'meta...'}\r\n              name='metaDescription'\r\n              isError={\r\n                (touched.metaDescription && errors.metaDescription) ||\r\n                (!isSubmitting &&\r\n                  updateBrandState.error['error']['metaDescription'])\r\n              }\r\n              errorString={\r\n                (touched.metaDescription && errors.metaDescription) ||\r\n                (!isSubmitting &&\r\n                  updateBrandState.error['error']['metaDescription'])\r\n              }\r\n              onChange={(e: any) => {\r\n                handleChange(e);\r\n                setFieldTouched('metaDescription');\r\n              }}\r\n            />\r\n\r\n            <TextArea\r\n              label='BN Meta Description'\r\n              value={values.bnMetaDescription}\r\n              placeholder={'এইয় মেট...'}\r\n              name='bnMetaDescription'\r\n              isError={\r\n                (touched.bnMetaDescription && errors.bnMetaDescription) ||\r\n                (!isSubmitting &&\r\n                  updateBrandState.error['error']['bnMetaDescription'])\r\n              }\r\n              errorString={\r\n                (touched.bnMetaDescription && errors.bnMetaDescription) ||\r\n                (!isSubmitting &&\r\n                  updateBrandState.error['error']['bnMetaDescription'])\r\n              }\r\n              onChange={(e: any) => {\r\n                handleChange(e);\r\n                setFieldTouched('bnMetaDescription');\r\n              }}\r\n            />\r\n\r\n            <h3 className='inputFieldLabel'>Meta Tags </h3>\r\n\r\n            <MetaTags\r\n              // @ts-ignore\r\n              setTags={setTags}\r\n              tags={tags}\r\n            />\r\n\r\n            <div\r\n              style={{\r\n                marginTop: '15px',\r\n              }}\r\n            ></div>\r\n\r\n            <h3 className='inputFieldLabel'>BN Meta Tags </h3>\r\n\r\n            <MetaTags\r\n              // @ts-ignore\r\n              setTags={setBnTags}\r\n              tags={bnTags}\r\n            />\r\n          </Modal>\r\n\r\n          <MediaLibrary\r\n            setvisible={setvisibleMedia}\r\n            visible={visibleMedia}\r\n            setmyImages={setmyImages}\r\n            myImages={myImages}\r\n            isModalOpenForImages={false}\r\n          />\r\n        </>\r\n      )}\r\n    </Formik>\r\n  );\r\n};\r\n\r\nexport default AddNewBrand;\r\n","// @ts-nocheck\r\nimport React, { useState, useEffect } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\nimport { useHandleFetch } from '../../hooks';\r\n// import third party ui lib\r\nimport {\r\n  Upload,\r\n  message,\r\n  Switch,\r\n  Select,\r\n  Button,\r\n  notification,\r\n  Modal,\r\n  Tooltip,\r\n  Spin,\r\n} from 'antd';\r\n\r\nimport {\r\n  FileOutlined,\r\n  InboxOutlined,\r\n  FileAddOutlined,\r\n  DeleteOutlined,\r\n  CheckCircleOutlined,\r\n  CloseOutlined,\r\n  CheckOutlined,\r\n  InfoCircleOutlined,\r\n  PlusOutlined,\r\n  FileImageFilled,\r\n} from '@ant-design/icons';\r\n\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport MediaLibrary from '../../components/MediaLibrary';\r\nimport MetaTags from '../category/MetaTags';\r\n\r\nconst validationSchema = Yup.object().shape({\r\n  // name: Yup.string()\r\n  //   .label('Name')\r\n  //   .required('Name is required')\r\n  //   .min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n  notification.success({\r\n    message: message || 'Brand Updated',\r\n    description: '',\r\n    icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n  });\r\n};\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n  notification.error({\r\n    message: message || 'Something Went Wrong',\r\n    description: '',\r\n    icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n  });\r\n};\r\n\r\nconst initialValues = {\r\n  name: '',\r\n  bnName: '',\r\n  description: '',\r\n  bnDescription: '',\r\n  metaTitle: '',\r\n  bnMetaTitle: '',\r\n  metaDescription: '',\r\n  bnMetaDescription: '',\r\n  metaTags: '',\r\n  bnMetaTags: '',\r\n  image: [],\r\n  url: '',\r\n  cover: '',\r\n};\r\n\r\ninterface Props {\r\n  brandDetailData?: any;\r\n  brandEditVisible?: any;\r\n  setBrandEditVisible?: any;\r\n  brandList?: any;\r\n  setBrandList?: any;\r\n}\r\n\r\nconst ModalComponentChildItem = ({\r\n  brandDetailData,\r\n  brandEditVisible,\r\n  setBrandEditVisible,\r\n  brandList,\r\n  setBrandList,\r\n}) => {\r\n  const [updateBrandState, handleUpdateBrandFetch] = useHandleFetch(\r\n    {},\r\n    'updateBrand'\r\n  );\r\n  const [brandDetailState, handleBrandDetailFetch] = useHandleFetch(\r\n    {},\r\n    'brandDetail'\r\n  );\r\n\r\n  const [\r\n    attachImageToItemMultipleState,\r\n    handleAttachImageToItemMultipleFetch,\r\n  ] = useHandleFetch({}, 'attachImageToItemMultiple');\r\n  const [\r\n    attachImageToItemSingleState,\r\n    handleAttachImageToItemSingleFetch,\r\n  ] = useHandleFetch({}, 'attachImageToItemSingle');\r\n  const [\r\n    detachImageFromItemMultipleState,\r\n    handleDetachImageFromItemMultipleFetch,\r\n  ] = useHandleFetch({}, 'detachImageFromItemMultiple');\r\n  const [\r\n    detachImageFromItemSingleState,\r\n    handleDetachImageFromItemSingleFetch,\r\n  ] = useHandleFetch({}, 'detachImageFromItemSingle');\r\n  const [\r\n    setImageAsThumbnailToItemState,\r\n    handleSetImageAsThumbnailToItemFetch,\r\n  ] = useHandleFetch({}, 'setImageAsThumbnailToItem');\r\n\r\n  const [myImages, setmyImages]: any = useState(false);\r\n  const [visibleMedia, setvisibleMedia] = useState(false);\r\n  const [coverImageId, setCoverImageId] = useState('');\r\n  const [myGoddamnImages, setMyGoddamnImages] = useState([]);\r\n  const [tags, setTags] = useState([]);\r\n  const [bnTags, setBnTags] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const getBrandDetail = async () => {\r\n      const brandDetailRes = await handleBrandDetailFetch({\r\n        urlOptions: {\r\n          placeHolders: {\r\n            id: brandDetailData.id,\r\n          },\r\n        },\r\n      });\r\n    };\r\n\r\n    getBrandDetail();\r\n  }, [brandDetailData]);\r\n\r\n  useEffect(() => {\r\n    if (\r\n      brandDetailState.data &&\r\n      Object.keys(brandDetailState.data).length > 0\r\n    ) {\r\n      const images = brandDetailState.data.image;\r\n      if (images && images.length > 0) {\r\n        setmyImages(images);\r\n        setMyGoddamnImages(images);\r\n      }\r\n\r\n      if (brandDetailState.data.cover && brandDetailState.data.cover['id']) {\r\n        // @ts-ignore\r\n        setmyImages([brandDetailState.data.cover]);\r\n        setCoverImageId(brandDetailState.data.cover['id']);\r\n      }\r\n    }\r\n  }, [brandDetailState.data]);\r\n\r\n  const handleDetachSingleImage = async (id) => {\r\n    await handleDetachImageFromItemSingleFetch({\r\n      urlOptions: {\r\n        placeHolders: {\r\n          imageId: id,\r\n          collection: 'brand',\r\n          itemId: brandDetailData.id,\r\n        },\r\n      },\r\n    });\r\n  };\r\n\r\n  const handleSetImageAsThumnail = async (image) => {\r\n    const thumbnailRes = await handleSetImageAsThumbnailToItemFetch({\r\n      urlOptions: {\r\n        placeHolders: {\r\n          imageId: image.id,\r\n          collection: 'brand',\r\n          itemId: brandDetailData.id,\r\n        },\r\n      },\r\n    });\r\n\r\n    // @ts-ignore\r\n    if (thumbnailRes && thumbnailRes.status === 'ok') {\r\n      openSuccessNotification('Set as thumbnail!');\r\n      // const positionInBrand = () => {\r\n      //     return brandList.map(item => item.id).indexOf(brandDetailData.id);\r\n      // }\r\n\r\n      // const index = positionInBrand();\r\n\r\n      // const prevItem = brandList.find(item => item.id === productRecord.id);\r\n\r\n      // if (prevItem) {\r\n      //     const updatedItem = Object.assign({}, brandList[index], { ...prevItem, cover: image.cover });\r\n      //     const updateBrandList = [...brandList.slice(0, index), updatedItem, ...brandList.slice(index + 1)];\r\n      //     setBrandList(updateBrandList);\r\n      // }\r\n    } else {\r\n      openErrorNotification(\"Couldn't set as thumbnail, Something went wrong\");\r\n    }\r\n  };\r\n\r\n  const handleSubmit = async (values: any, actions: any) => {\r\n    console.log('myReadyToGoImages', myImages);\r\n\r\n    if (brandDetailData && Object.keys(brandDetailData).length > 0) {\r\n      // @ts-ignore\r\n      const images =\r\n        myImages && myImages.length > 0 ? myImages.map((item) => item.id) : [];\r\n\r\n      if (images[0] && images.length > 1) {\r\n        await handleAttachImageToItemMultipleFetch({\r\n          urlOptions: {\r\n            placeHolders: {\r\n              collection: 'brand',\r\n              itemId: brandDetailData.id,\r\n            },\r\n          },\r\n          body: {\r\n            image: images,\r\n          },\r\n        });\r\n      } else if (images[0] && images.length < 1) {\r\n        await handleAttachImageToItemSingleFetch({\r\n          urlOptions: {\r\n            placeHolders: {\r\n              imageId: images[0].id,\r\n              collection: 'brand',\r\n              itemId: brandDetailData.id,\r\n            },\r\n          },\r\n        });\r\n      }\r\n    }\r\n\r\n    const updateBrandRes = await handleUpdateBrandFetch({\r\n      urlOptions: {\r\n        placeHolders: {\r\n          id: brandDetailData.id,\r\n        },\r\n      },\r\n      body: {\r\n        name: values.name,\r\n        description: values.description,\r\n        metaTitle: values.metaTitle,\r\n        metaDescription: values.metaDescription,\r\n        metaTags: tags && tags.length > 0 ? tags.join(',') : '',\r\n        bn: {\r\n          metaTitle: values.bnMetaTitle,\r\n          metaDescription: values.bnMetaDescription,\r\n          metaTags: bnTags && bnTags.length > 0 ? bnTags.join(',') : '',\r\n          name: values.bnName,\r\n          description: values.bnDescription,\r\n        },\r\n      },\r\n    });\r\n\r\n    // @ts-ignore\r\n    if (updateBrandRes && updateBrandRes.status === 'ok') {\r\n      console.log('updateBrandRes', updateBrandRes);\r\n\r\n      const positionInTag = () => {\r\n        return brandList.map((item) => item.id).indexOf(values.id);\r\n      };\r\n\r\n      const index = positionInTag();\r\n\r\n      const getCover = (id) => {\r\n        if (!id || !myImages || !myImages[0]) {\r\n          return '';\r\n        } else {\r\n          if (myImages && myImages.length > 0) {\r\n            const item = myImages.find((item) => item.id === id);\r\n            if (item) {\r\n              return item.cover;\r\n            }\r\n          }\r\n        }\r\n      };\r\n\r\n      // @ts-ignore\r\n      const updatedItem = Object.assign({}, brandList[index], {\r\n        ...brandDetailData,\r\n        id: brandDetailData['id'] || '',\r\n        key: brandDetailData['id'] || '',\r\n        name: updateBrandRes['name'] || '',\r\n        description: updateBrandRes['description'] || '',\r\n        // @ts-ignore\r\n        ...updateBrandRes,\r\n        cover: getCover(coverImageId),\r\n      });\r\n      const updateTagList = [\r\n        ...brandList.slice(0, index),\r\n        updatedItem,\r\n        ...brandList.slice(index + 1),\r\n      ];\r\n      setBrandList(updateTagList);\r\n\r\n      openSuccessNotification('Brand Updated!');\r\n      setBrandEditVisible(false);\r\n\r\n      // const positionInBrand = () => {\r\n      //     return brandList.map(item => item.id).indexOf(productRecord.id);\r\n      // }\r\n\r\n      // const index = positionInBrand();\r\n      // const updatedItem = Object.assign({}, brandList[index], { ...updateBrandRes });\r\n      // console.log('updateBrandList', updatedItem)\r\n\r\n      // const updateBrandList = [...brandList.slice(0, index), updatedItem, ...brandList.slice(index + 1)];\r\n\r\n      // setBrandList(updateBrandList);\r\n\r\n      actions.resetForm();\r\n    } else {\r\n      openErrorNotification();\r\n    }\r\n\r\n    actions.setSubmitting(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!updateBrandState['isLoading']) {\r\n      const error = updateBrandState['error'];\r\n      if (error['isError'] && Object.keys(error['error']).length > 0) {\r\n        const errors =\r\n          Object.values(error['error']).length > 0\r\n            ? Object.values(error['error'])\r\n            : [];\r\n        errors.forEach((err, i) => {\r\n          if (typeof err === 'string') {\r\n            openErrorNotification(err);\r\n          } else if (typeof err === 'object') {\r\n            if (err && Object.keys(err).length > 0) {\r\n              const errs = Object.values(err);\r\n              errs.forEach((err) => {\r\n                openErrorNotification(err);\r\n              });\r\n            }\r\n          }\r\n        });\r\n      }\r\n    }\r\n  }, [updateBrandState]);\r\n\r\n  const onSwitchChange = (checked: any) => {\r\n    // console.log(checked);\r\n  };\r\n\r\n  const handleCancel = (e: any) => {\r\n    setBrandEditVisible(false);\r\n    setBnTags([]);\r\n    setTags([]);\r\n    setCoverImageId('');\r\n    setvisibleMedia(false);\r\n    setmyImages(false);\r\n  };\r\n\r\n  const getisSubmitButtonDisabled = (values, isValid) => {\r\n    if (!values.name || !isValid) {\r\n      return true;\r\n    }\r\n    return false;\r\n  };\r\n\r\n  const handleImagesDelete = (id) => {\r\n    // @ts-ignore\r\n    const newImages =\r\n      myImages &&\r\n      myImages.filter((image) => {\r\n        return image.id !== id;\r\n      });\r\n\r\n    setmyImages(newImages);\r\n  };\r\n\r\n  console.log('myImages', myImages);\r\n\r\n  useEffect(() => {\r\n    if (brandDetailData && Object.keys(brandDetailData).length > 0) {\r\n      const metaTags =\r\n        brandDetailData.metaTags && brandDetailData.metaTags.split(',');\r\n\r\n      console.log('localMetaTags', metaTags);\r\n\r\n      const bnMetaTags =\r\n        brandDetailData.bn &&\r\n        brandDetailData.bn['metaTags'] &&\r\n        brandDetailData.bn['metaTags'].split(',');\r\n      setTags(metaTags || []);\r\n      setBnTags(bnMetaTags || []);\r\n    }\r\n  }, []);\r\n\r\n  console.log('brandEdit', brandDetailData);\r\n\r\n  useEffect(() => {\r\n    console.log('thumnail', myImages);\r\n    // @ts-ignore\r\n    if (myImages && myImages[0] && myImages.length < 2) {\r\n      console.log('thumnail2', myImages);\r\n\r\n      if (coverImageId !== myImages[0].id) {\r\n        setCoverImageId(myImages[0].id);\r\n        // set thumbnail with server for edits\r\n        handleSetImageAsThumnail(myImages[0]);\r\n      }\r\n    }\r\n  }, [myImages]);\r\n\r\n  useEffect(() => {\r\n    if (brandDetailData && Object.keys(brandDetailData).length > 0) {\r\n      const metaTags =\r\n        brandDetailData.metaTags && brandDetailData.metaTags.split(',');\r\n\r\n      console.log('localMetaTags', metaTags);\r\n\r\n      const bnMetaTags =\r\n        brandDetailData.bn &&\r\n        brandDetailData.bn['metaTags'] &&\r\n        brandDetailData.bn['metaTags'].split(',');\r\n      setTags(metaTags || []);\r\n      setBnTags(bnMetaTags || []);\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <Formik\r\n        onSubmit={(values, actions) => handleSubmit(values, actions)}\r\n        validationSchema={validationSchema}\r\n        validateOnBlur={false}\r\n        enableReinitialize={true}\r\n        initialValues={{\r\n          ...initialValues,\r\n          ...brandDetailData,\r\n          ...(brandDetailData &&\r\n            Object.keys(brandDetailData).length > 0 && {\r\n              bnMetaTitle:\r\n                brandDetailData['bn'] &&\r\n                brandDetailData['bn'].metaTitle &&\r\n                brandDetailData['bn'].metaTitle,\r\n              bnMetaDescription:\r\n                brandDetailData['bn'] &&\r\n                brandDetailData['bn'].metaDescription &&\r\n                brandDetailData['bn'].metaDescription,\r\n              bnName:\r\n                brandDetailData['bn'] &&\r\n                brandDetailData['bn'].name &&\r\n                brandDetailData['bn'].name,\r\n              bnDescription:\r\n                brandDetailData['bn'] &&\r\n                brandDetailData['bn'].description &&\r\n                brandDetailData['bn'].description,\r\n            }),\r\n        }}\r\n      >\r\n        {({\r\n          handleChange,\r\n          values,\r\n          handleSubmit,\r\n          errors,\r\n          isValid,\r\n          isSubmitting,\r\n          touched,\r\n          handleBlur,\r\n          setFieldTouched,\r\n          handleReset,\r\n        }) => (\r\n          <>\r\n            <section className='addProductGridContainer'>\r\n              <div className='addProductGridContainer__left'>\r\n                <div className='addProductGridContainer__name'>\r\n                  <div className='addProductGridContainer__item-header'>\r\n                    <h3>Brand Information *</h3>\r\n                    <div\r\n                      className={\r\n                        values.name && values.name.length > 2\r\n                          ? 'checkicon-active'\r\n                          : 'checkicon'\r\n                      }\r\n                    >\r\n                      <CheckCircleOutlined />\r\n                    </div>\r\n                  </div>\r\n                  <div className='addProductGridContainer__item-body'>\r\n                    <Input\r\n                      label='Name *'\r\n                      value={values.name}\r\n                      name='name'\r\n                      placeHolder={''}\r\n                      isError={\r\n                        (touched.name && errors.name) ||\r\n                        (!isSubmitting &&\r\n                          updateBrandState.error['error']['name'])\r\n                      }\r\n                      errorString={\r\n                        (touched.name && errors.name) ||\r\n                        (!isSubmitting &&\r\n                          updateBrandState.error['error']['name'])\r\n                      }\r\n                      onChange={(e: any) => {\r\n                        handleChange(e);\r\n                        setFieldTouched('name');\r\n                      }}\r\n                    />\r\n\r\n                    <Input\r\n                      label='BN Name'\r\n                      value={values.bnName}\r\n                      placeHolder={''}\r\n                      name='bnName'\r\n                      isError={\r\n                        (touched.bnName && errors.bnName) ||\r\n                        (!isSubmitting &&\r\n                          updateBrandState.error['error']['bnName'])\r\n                      }\r\n                      errorString={\r\n                        (touched.bnName && errors.bnName) ||\r\n                        (!isSubmitting &&\r\n                          updateBrandState.error['error']['bnName'])\r\n                      }\r\n                      onChange={(e: any) => {\r\n                        handleChange(e);\r\n                        setFieldTouched('bnName');\r\n                      }}\r\n                    />\r\n\r\n                    <TextArea\r\n                      label='Description'\r\n                      value={values.description}\r\n                      name='description'\r\n                      placeholder={'This brand...'}\r\n                      isError={\r\n                        (touched.description && errors.description) ||\r\n                        (!isSubmitting &&\r\n                          updateBrandState.error['error']['description'])\r\n                      }\r\n                      errorString={\r\n                        (touched.description && errors.description) ||\r\n                        (!isSubmitting &&\r\n                          updateBrandState.error['error']['description'])\r\n                      }\r\n                      onChange={(e: any) => {\r\n                        handleChange(e);\r\n                        setFieldTouched('description');\r\n                      }}\r\n                    />\r\n\r\n                    <TextArea\r\n                      label='BN Description'\r\n                      value={values.bnDescription}\r\n                      placeholder={'এই ব্র্যান্ড...'}\r\n                      name='bnDescription'\r\n                      isError={\r\n                        (touched.bnDescription && errors.bnDescription) ||\r\n                        (!isSubmitting &&\r\n                          updateBrandState.error['error']['bnDescription'])\r\n                      }\r\n                      errorString={\r\n                        (touched.bnDescription && errors.bnDescription) ||\r\n                        (!isSubmitting &&\r\n                          updateBrandState.error['error']['bnDescription'])\r\n                      }\r\n                      onChange={(e: any) => {\r\n                        handleChange(e);\r\n                        setFieldTouched('bnDescription');\r\n                      }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n\r\n                <div className='addProductGridContainer__image'>\r\n                  <div className='addProductGridContainer__item-header'>\r\n                    <h3>Cover</h3>\r\n\r\n                    <Tooltip\r\n                      placement='left'\r\n                      title={\r\n                        'Click on the image to select cover image, By default 1st image is selected as cover'\r\n                      }\r\n                    >\r\n                      <a href='###'>\r\n                        <InfoCircleOutlined />\r\n                      </a>\r\n                    </Tooltip>\r\n                  </div>\r\n\r\n                  <div\r\n                    style={{\r\n                      padding: '10px',\r\n                    }}\r\n                    className='aboutToUploadImagesContainer'\r\n                  >\r\n                    {brandDetailState.isLoading && (\r\n                      <div\r\n                        style={{\r\n                          padding: '20px 0',\r\n                        }}\r\n                      >\r\n                        <Spin />\r\n                      </div>\r\n                    )}\r\n                    {brandDetailState.done && (\r\n                      <>\r\n                        {myImages &&\r\n                          // @ts-ignore\r\n                          myImages.length > 0 &&\r\n                          myImages.map((image, index) => {\r\n                            return (\r\n                              <div className='aboutToUploadImagesContainer__item'>\r\n                                <div\r\n                                  className='aboutToUploadImagesContainer__item-imgContainer'\r\n                                  onClick={() => {\r\n                                    // setCoverImageId(image.id);\r\n                                    // handleSetImageAsThumnail(image);\r\n                                    setvisibleMedia(true);\r\n                                  }}\r\n                                >\r\n                                  <img src={image.cover} alt={image.alt} />\r\n                                </div>\r\n\r\n                                <span\r\n                                  onClick={() => {\r\n                                    handleImagesDelete(image.id);\r\n                                    handleDetachSingleImage(image.id);\r\n                                  }}\r\n                                  className='aboutToUploadImagesContainer__item-remove'\r\n                                >\r\n                                  <CloseOutlined />\r\n                                </span>\r\n\r\n                                {/* {coverImageId === image.id ? (\r\n                            <span className='aboutToUploadImagesContainer__item-cover'>\r\n                              <CheckOutlined />\r\n                            </span>\r\n                          ) : (\r\n                            !coverImageId &&\r\n                            index === 0 && (\r\n                              <span className='aboutToUploadImagesContainer__item-cover'>\r\n                                <CheckOutlined />\r\n                              </span>\r\n                            )\r\n                          )} */}\r\n                              </div>\r\n                            );\r\n                          })}\r\n\r\n                        {!myImages ||\r\n                        // @ts-ignore\r\n                        (myImages && !(myImages && myImages.length > 0)) ? (\r\n                          <>\r\n                            <Tooltip title={'Attach images'}>\r\n                              <div\r\n                                onClick={() => {\r\n                                  setvisibleMedia(true);\r\n                                }}\r\n                                className='aboutToUploadImagesContainer__uploadItem'\r\n                              >\r\n                                <FileImageFilled />\r\n                                <span className='aboutToUploadImagesContainer__uploadItem-plus'>\r\n                                  <PlusOutlined />\r\n                                </span>\r\n                              </div>\r\n                            </Tooltip>\r\n                          </>\r\n                        ) : (\r\n                          ''\r\n                        )}\r\n                      </>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className='addProductGridContainer__right'>\r\n                <div className='addProductGridContainer__category'>\r\n                  <div className='addProductGridContainer-rightItemContainer'>\r\n                    <div className='addProductGridContainer-rightItemContainer-header'>\r\n                      <h3>Meta Tags</h3>\r\n\r\n                      <Tooltip\r\n                        placement='left'\r\n                        title={\r\n                          \"Meta data will be used to make the user's easy and for search engine optimization.\"\r\n                        }\r\n                      >\r\n                        <a href='###'>\r\n                          <InfoCircleOutlined />\r\n                        </a>\r\n                      </Tooltip>\r\n\r\n                      {/* <Tooltip\r\n                        color='red'\r\n                        visible={\r\n                          addCategoryState.error['error']['category'] &&\r\n                          !(categoryids.length > 0)\r\n                        }\r\n                        placement='left'\r\n                        title={'Select at least one category'}\r\n                      >\r\n                        <div\r\n                          className={\r\n                            !(categoryids.length > 0) &&\r\n                            !addCategoryState.error['error']['category']\r\n                              ? 'checkicon'\r\n                              : addCategoryState.error['error']['category']\r\n                              ? 'checkicon-error'\r\n                              : 'checkicon-active'\r\n                          }\r\n                        >\r\n                          <CheckCircleOutlined />\r\n                        </div>\r\n                      </Tooltip> */}\r\n                    </div>\r\n                    <div className='addProductGridContainer-rightItemContainer-body'>\r\n                      <Input\r\n                        label='Meta title'\r\n                        value={values.metaTitle}\r\n                        placeHolder={'...'}\r\n                        name='metaTitle'\r\n                        isError={\r\n                          (touched.metaTitle && errors.metaTitle) ||\r\n                          (!isSubmitting &&\r\n                            updateBrandState.error['error']['metaTitle'])\r\n                        }\r\n                        errorString={\r\n                          (touched.metaTitle && errors.metaTitle) ||\r\n                          (!isSubmitting &&\r\n                            updateBrandState.error['error']['metaTitle'])\r\n                        }\r\n                        onChange={(e: any) => {\r\n                          handleChange(e);\r\n                          setFieldTouched('metaTitle');\r\n                        }}\r\n                      />\r\n\r\n                      <Input\r\n                        label='BN Meta title'\r\n                        value={values.bnMetaTitle}\r\n                        placeHolder={'...'}\r\n                        name='bnMetaTitle'\r\n                        isError={\r\n                          (touched.bnMetaTitle && errors.bnMetaTitle) ||\r\n                          (!isSubmitting &&\r\n                            updateBrandState.error['error']['bnMetaTitle'])\r\n                        }\r\n                        errorString={\r\n                          (touched.bnMetaTitle && errors.bnMetaTitle) ||\r\n                          (!isSubmitting &&\r\n                            updateBrandState.error['error']['bnMetaTitle'])\r\n                        }\r\n                        onChange={(e: any) => {\r\n                          handleChange(e);\r\n                          setFieldTouched('bnMetaTitle');\r\n                        }}\r\n                      />\r\n\r\n                      <TextArea\r\n                        label='Meta description'\r\n                        value={values.metaDescription}\r\n                        placeholder={'meta...'}\r\n                        name='metaDescription'\r\n                        isError={\r\n                          (touched.metaDescription && errors.metaDescription) ||\r\n                          (!isSubmitting &&\r\n                            updateBrandState.error['error']['metaDescription'])\r\n                        }\r\n                        errorString={\r\n                          (touched.metaDescription && errors.metaDescription) ||\r\n                          (!isSubmitting &&\r\n                            updateBrandState.error['error']['metaDescription'])\r\n                        }\r\n                        onChange={(e: any) => {\r\n                          handleChange(e);\r\n                          setFieldTouched('metaDescription');\r\n                        }}\r\n                      />\r\n\r\n                      <TextArea\r\n                        label='BN Meta Description'\r\n                        value={values.bnMetaDescription}\r\n                        placeholder={'এইয় মেট...'}\r\n                        name='bnMetaDescription'\r\n                        isError={\r\n                          (touched.bnMetaDescription &&\r\n                            errors.bnMetaDescription) ||\r\n                          (!isSubmitting &&\r\n                            updateBrandState.error['error'][\r\n                              'bnMetaDescription'\r\n                            ])\r\n                        }\r\n                        errorString={\r\n                          (touched.bnMetaDescription &&\r\n                            errors.bnMetaDescription) ||\r\n                          (!isSubmitting &&\r\n                            updateBrandState.error['error'][\r\n                              'bnMetaDescription'\r\n                            ])\r\n                        }\r\n                        onChange={(e: any) => {\r\n                          handleChange(e);\r\n                          setFieldTouched('bnMetaDescription');\r\n                        }}\r\n                      />\r\n\r\n                      <h3 className='inputFieldLabel'>Meta Tags </h3>\r\n\r\n                      <MetaTags\r\n                        // @ts-ignore\r\n                        setTags={setTags}\r\n                        tags={tags}\r\n                      />\r\n\r\n                      <div\r\n                        style={{\r\n                          marginTop: '15px',\r\n                        }}\r\n                      ></div>\r\n\r\n                      <h3 className='inputFieldLabel'>BN Meta Tags </h3>\r\n\r\n                      <MetaTags\r\n                        // @ts-ignore\r\n                        setTags={setBnTags}\r\n                        tags={bnTags}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </section>\r\n\r\n            <div\r\n              style={{\r\n                padding: '15px',\r\n                display: 'flex',\r\n                justifyContent: 'flex-end',\r\n              }}\r\n            >\r\n              <Button\r\n                style={{\r\n                  color: '#555',\r\n                  marginRight: '10px',\r\n                }}\r\n                className='btnPrimaryClassNameoutline-cancle'\r\n                onClick={() => setBrandEditVisible(false)}\r\n                type='default'\r\n              >\r\n                Cancel\r\n              </Button>\r\n\r\n              <Button\r\n                className='btnPrimaryClassNameoutline'\r\n                onClick={handleSubmit}\r\n                loading={updateBrandState.isLoading}\r\n                type='link'\r\n                icon={<CheckOutlined />}\r\n              >\r\n                Update\r\n              </Button>\r\n            </div>\r\n\r\n            <MediaLibrary\r\n              setvisible={setvisibleMedia}\r\n              visible={visibleMedia}\r\n              setmyImages={setmyImages}\r\n              myImages={myImages}\r\n              myGoddamnImages={myGoddamnImages}\r\n              setMyGoddamnImages={setMyGoddamnImages}\r\n              isModalOpenForImages={false}\r\n            />\r\n          </>\r\n        )}\r\n      </Formik>\r\n    </>\r\n  );\r\n};\r\n\r\nconst AddNewBrand = ({\r\n  brandDetailData,\r\n  brandEditVisible,\r\n  setBrandEditVisible,\r\n  brandList,\r\n  setBrandList,\r\n}: Props) => {\r\n  const handleCancel = () => {\r\n    setBrandEditVisible(false);\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      style={{\r\n        top: '40px',\r\n      }}\r\n      width={'70vw'}\r\n      bodyStyle={{\r\n        margin: 0,\r\n        padding: 0,\r\n      }}\r\n      title='Brand Edit'\r\n      destroyOnClose={true}\r\n      visible={brandEditVisible}\r\n      onCancel={handleCancel}\r\n      footer={false}\r\n    >\r\n      <ModalComponentChildItem\r\n        brandDetailData={brandDetailData}\r\n        brandEditVisible={brandEditVisible}\r\n        setBrandEditVisible={setBrandEditVisible}\r\n        brandList={brandList}\r\n        setBrandList={setBrandList}\r\n      />\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default AddNewBrand;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { withRouter, useHistory } from 'react-router-dom';\r\nimport {\r\n  Table,\r\n  Empty,\r\n  Popconfirm,\r\n  Space,\r\n  Button,\r\n  Input,\r\n  Tooltip,\r\n  notification,\r\n} from 'antd';\r\nimport {\r\n  PlusOutlined,\r\n  EditOutlined,\r\n  DeleteOutlined,\r\n  CheckCircleOutlined,\r\n} from '@ant-design/icons';\r\n\r\n/// import hooks\r\nimport { useHandleFetch } from '../../hooks';\r\n\r\n// import components\r\nimport { DataTableSkeleton } from '../../components/Placeholders';\r\nimport AddNewBrand from './AddNewBrand';\r\n\r\n// @ts-ignore\r\nimport BrandQuickEdit from './BrandQuickEdit';\r\n\r\n// import state\r\nimport { isAccess } from '../../utils';\r\nimport { connect } from 'react-redux';\r\n\r\nconst { Column } = Table;\r\nconst { Search } = Input;\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n  notification.success({\r\n    message: message || 'Brand Created',\r\n    description: '',\r\n    icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n  });\r\n};\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n  notification.error({\r\n    message: message || 'Something Went Wrong',\r\n    description: '',\r\n    icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n  });\r\n};\r\n\r\ninterface myTableProps {\r\n  data: any;\r\n  setBrandList: any;\r\n  roles?: any;\r\n}\r\n\r\nconst MyTable = ({ data, setBrandList, roles }: myTableProps) => {\r\n  const [visible, setvisible] = useState(false);\r\n  const [activeCategoryForEdit, setactiveCategoryForEdit] = useState(false);\r\n  const [deleteBrandState, handleDeleteBrandFetch] = useHandleFetch(\r\n    {},\r\n    'deleteBrand'\r\n  );\r\n  const [brandDetailVisible, setBrandDetailVisible] = useState(false);\r\n  const history = useHistory();\r\n\r\n  const handleDeleteBrand = async (id) => {\r\n    const deleteBrandRes = await handleDeleteBrandFetch({\r\n      urlOptions: {\r\n        placeHolders: {\r\n          id,\r\n        },\r\n      },\r\n    });\r\n\r\n    // @ts-ignore\r\n    if (deleteBrandRes && deleteBrandRes.status === 'ok') {\r\n      openSuccessNotification('Deleted Brand');\r\n      const newBrandList = data.filter((item) => item.id !== id);\r\n      setBrandList(newBrandList);\r\n    }\r\n  };\r\n\r\n  const getCover = (record: any) => {\r\n    if (record.cover) {\r\n      return record.cover;\r\n    } else return '';\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Table\r\n        // expandable={{\r\n        //     expandedRowRender: record => <p style={{ margin: 0 }}>{record.name}</p>,\r\n        //     rowExpandable: record => record.name !== 'Not Expandable',\r\n        //   }}\r\n        // bordered={true}\r\n        size='small'\r\n        // pagination={false}\r\n        dataSource={data}\r\n      >\r\n        <Column\r\n          title=''\r\n          dataIndex='cover'\r\n          key='id'\r\n          width={'80px'}\r\n          className='classnameofthecolumn'\r\n          render={(cover, record: any) => (\r\n            <>\r\n              <div\r\n                className='listCoverImage'\r\n                onClick={() => {\r\n                  history.push(`/admin/brand/${record.id}`);\r\n                  setactiveCategoryForEdit(record);\r\n                }}\r\n              >\r\n                <img src={getCover(record)} alt='' />\r\n              </div>\r\n            </>\r\n          )}\r\n        />\r\n        <Column\r\n          title='Name'\r\n          dataIndex='name'\r\n          key='id'\r\n          className='classnameofthecolumn'\r\n          render={(text, record: any) => (\r\n            <>\r\n              <h4\r\n                onClick={() => {\r\n                  history.push(`/admin/brand/${record.id}`);\r\n                  // setBrandDetailVisible(true);\r\n                  setactiveCategoryForEdit(record);\r\n                }}\r\n                style={{\r\n                  fontWeight: 400,\r\n                  color: '#555',\r\n                  cursor: 'pointer',\r\n                }}\r\n              >\r\n                {text}\r\n              </h4>\r\n            </>\r\n          )}\r\n        />\r\n\r\n        <Column\r\n          title='Description'\r\n          dataIndex='description'\r\n          key='id'\r\n          className='classnameofthecolumn'\r\n        />\r\n\r\n        {/* <Column\r\n           title=\"Product\" \r\n           dataIndex=\"productCount\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n         \r\n            /> */}\r\n        {/* <Column \r\n          \r\n          className='classnameofthecolumn'\r\n\r\n          title=\"Product\" dataIndex=\"product\" key=\"product\" /> */}\r\n\r\n        {/* <Column \r\n          \r\n          className='classnameofthecolumn'\r\n\r\n          title=\"Sub Category\" dataIndex=\"subCategory\" key=\"subCategory\" /> */}\r\n\r\n        {/* <Column\r\n          title=\"Tags\"\r\n          dataIndex=\"tags\"\r\n          key=\"tags\"\r\n          render={tags => (\r\n            <>\r\n              {tags.map((tag : any) => (\r\n                <Tag color=\"blue\" key={tag}>\r\n                  {tag}\r\n                </Tag>\r\n              ))}\r\n            </>\r\n          )}\r\n        /> */}\r\n\r\n        {isAccess('postCatalogue', roles) && (\r\n          <Column\r\n            className='classnameofthecolumn'\r\n            title=''\r\n            key='action'\r\n            align='right'\r\n            render={(text, record: any) => (\r\n              <Space size='middle'>\r\n                <a href='##'>\r\n                  <Tooltip placement='top' title='Edit Brand'>\r\n                    <span\r\n                      className='iconSize'\r\n                      onClick={() => {\r\n                        setvisible(true);\r\n                        setactiveCategoryForEdit(record);\r\n                      }}\r\n                    >\r\n                      <EditOutlined />\r\n                    </span>\r\n                  </Tooltip>\r\n                </a>\r\n\r\n                <Popconfirm\r\n                  onConfirm={() => handleDeleteBrand(record.id)}\r\n                  title='Are you sure？'\r\n                  okText='Yes'\r\n                  cancelText='No'\r\n                >\r\n                  <span className='iconSize iconSize-danger'>\r\n                    <DeleteOutlined />\r\n                  </span>\r\n                </Popconfirm>\r\n              </Space>\r\n            )}\r\n          />\r\n        )}\r\n      </Table>\r\n\r\n      {activeCategoryForEdit && (\r\n        <BrandQuickEdit\r\n          brandList={data}\r\n          setBrandList={setBrandList}\r\n          setBrandEditVisible={setvisible}\r\n          brandEditVisible={visible}\r\n          brandDetailData={activeCategoryForEdit}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\ninterface Props {\r\n  roles: any;\r\n}\r\n\r\nconst CategoryList = ({ roles }: Props) => {\r\n  const [brandList, setBrandList] = useState([]);\r\n\r\n  const [brandState, handlebrandListFetch] = useHandleFetch({}, 'brandList');\r\n\r\n  useEffect(() => {\r\n    const setBrands = async () => {\r\n      const brands = await handlebrandListFetch({\r\n        urlOptions: {\r\n          params: {\r\n            sortItem: 'added',\r\n            sortOrderValue: '-1',\r\n          },\r\n        },\r\n      });\r\n      // @ts-ignore\r\n      setBrandList(brands);\r\n    };\r\n    setBrands();\r\n  }, []);\r\n\r\n  const [addNewCategoryVisible, setAddNewCategoryVisible] = useState(false);\r\n\r\n  const handleOkAddNewCategory = (e: any) => {\r\n    setAddNewCategoryVisible(false);\r\n  };\r\n\r\n  const handleCancelAddNewCategory = (e: any) => {\r\n    setAddNewCategoryVisible(false);\r\n  };\r\n\r\n  const handleSearch = (value) => {\r\n    if (brandState.data.length > 0) {\r\n      const newBrandList = brandState.data.filter((item) =>\r\n        item.name.toLowerCase().includes(value.toLowerCase())\r\n      );\r\n      setBrandList(newBrandList);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {/* <h2 className='containerPageTitle'>\r\n      Categories\r\n    </h2> */}\r\n      <div className='categoryListContainer'>\r\n        <div className='categoryListContainer__header'>\r\n          <div className='categoryListContainer__header-searchBar'>\r\n            <h2 className='categoryListContainer__header-title'>Brand</h2>\r\n\r\n            <Search\r\n              enterButton={false}\r\n              className='searchbarClassName'\r\n              placeholder='search brand..'\r\n              onChange={(e) => handleSearch(e.target.value)}\r\n              // style={{ width: 300 }}\r\n            />\r\n          </div>\r\n\r\n          {isAccess('postCatalogue', roles) && (\r\n            <Button\r\n              // type=\"primary\"\r\n              className='btnPrimaryClassNameoutline'\r\n              icon={<PlusOutlined />}\r\n              onClick={() => setAddNewCategoryVisible(true)}\r\n            >\r\n              Add New\r\n            </Button>\r\n          )}\r\n        </div>\r\n\r\n        <div className='categoryListContainer__afterHeader'>\r\n          {/* <Search\r\n      placeholder=\"search categories..\"\r\n      size=\"large\"\r\n      onSearch={value => console.log(value)}\r\n      style={{ width: 300 }}\r\n    /> */}\r\n        </div>\r\n\r\n        <div className='categoryListContainer__categoryList'>\r\n          {brandState.done && brandList.length > 0 && (\r\n            <MyTable\r\n              roles={roles}\r\n              setBrandList={setBrandList}\r\n              data={brandList}\r\n            />\r\n          )}\r\n          {brandState.isLoading && <DataTableSkeleton />}\r\n          {brandState.done && !(brandList.length > 0) && (\r\n            <div\r\n              style={{\r\n                marginTop: '200px',\r\n              }}\r\n            >\r\n              <Empty\r\n                description='No Brand found'\r\n                image={Empty.PRESENTED_IMAGE_SIMPLE}\r\n              />\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <AddNewBrand\r\n        addNewCategoryVisible={addNewCategoryVisible}\r\n        setAddNewCategoryVisible={setAddNewCategoryVisible}\r\n        setBrandList={setBrandList}\r\n        brandList={brandList}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  roles: state.globalState,\r\n});\r\n\r\n// @ts-ignore\r\nexport default connect(mapStateToProps, null)(CategoryList);\r\n","// @ts-nocheck\r\nimport React, { useState, useEffect } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\nimport { useHandleFetch } from '../../hooks';\r\n// import third party ui lib\r\nimport {\r\n  Upload,\r\n  message,\r\n  Switch,\r\n  Select,\r\n  Button,\r\n  notification,\r\n  Modal,\r\n  Tooltip,\r\n  Spin,\r\n} from 'antd';\r\n\r\nimport {\r\n  FileOutlined,\r\n  InboxOutlined,\r\n  FileAddOutlined,\r\n  DeleteOutlined,\r\n  CheckCircleOutlined,\r\n  CloseOutlined,\r\n  CheckOutlined,\r\n  InfoCircleOutlined,\r\n  PlusOutlined,\r\n  FileImageFilled,\r\n} from '@ant-design/icons';\r\n\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport MediaLibrary from '../../components/MediaLibrary';\r\nimport MetaTags from '../category/MetaTags';\r\n\r\nconst validationSchema = Yup.object().shape({\r\n  // name: Yup.string()\r\n  //   .label('Name')\r\n  //   .required('Name is required')\r\n  //   .min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n  notification.success({\r\n    message: message || 'Brand Updated',\r\n    description: '',\r\n    icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n  });\r\n};\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n  notification.error({\r\n    message: message || 'Something Went Wrong',\r\n    description: '',\r\n    icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n  });\r\n};\r\n\r\nconst initialValues = {\r\n  name: '',\r\n  bnName: '',\r\n  description: '',\r\n  bnDescription: '',\r\n  metaTitle: '',\r\n  bnMetaTitle: '',\r\n  metaDescription: '',\r\n  bnMetaDescription: '',\r\n  metaTags: '',\r\n  bnMetaTags: '',\r\n  image: [],\r\n  url: '',\r\n  cover: '',\r\n};\r\n\r\ninterface Props {\r\n  brandDetailData?: any;\r\n  brandEditVisible?: any;\r\n  setBrandEditVisible?: any;\r\n  setBrandDetailData?: any;\r\n}\r\n\r\nconst ModalComponentChildItem = ({\r\n  brandDetailData,\r\n  brandEditVisible,\r\n  setBrandEditVisible,\r\n  setBrandDetailData,\r\n}) => {\r\n  const [updateBrandState, handleUpdateBrandFetch] = useHandleFetch(\r\n    {},\r\n    'updateBrand'\r\n  );\r\n  const [brandDetailState, handleBrandDetailFetch] = useHandleFetch(\r\n    {},\r\n    'brandDetail'\r\n  );\r\n\r\n  const [\r\n    attachImageToItemMultipleState,\r\n    handleAttachImageToItemMultipleFetch,\r\n  ] = useHandleFetch({}, 'attachImageToItemMultiple');\r\n  const [\r\n    attachImageToItemSingleState,\r\n    handleAttachImageToItemSingleFetch,\r\n  ] = useHandleFetch({}, 'attachImageToItemSingle');\r\n  const [\r\n    detachImageFromItemMultipleState,\r\n    handleDetachImageFromItemMultipleFetch,\r\n  ] = useHandleFetch({}, 'detachImageFromItemMultiple');\r\n  const [\r\n    detachImageFromItemSingleState,\r\n    handleDetachImageFromItemSingleFetch,\r\n  ] = useHandleFetch({}, 'detachImageFromItemSingle');\r\n  const [\r\n    setImageAsThumbnailToItemState,\r\n    handleSetImageAsThumbnailToItemFetch,\r\n  ] = useHandleFetch({}, 'setImageAsThumbnailToItem');\r\n\r\n  const [myImages, setmyImages]: any = useState(false);\r\n  const [visibleMedia, setvisibleMedia] = useState(false);\r\n  const [coverImageId, setCoverImageId] = useState('');\r\n  const [myGoddamnImages, setMyGoddamnImages] = useState([]);\r\n  const [tags, setTags] = useState([]);\r\n  const [bnTags, setBnTags] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const getBrandDetail = async () => {\r\n      const brandDetailRes = await handleBrandDetailFetch({\r\n        urlOptions: {\r\n          placeHolders: {\r\n            id: brandDetailData.id,\r\n          },\r\n        },\r\n      });\r\n    };\r\n\r\n    getBrandDetail();\r\n  }, [brandDetailData]);\r\n\r\n  useEffect(() => {\r\n    if (\r\n      brandDetailState.data &&\r\n      Object.keys(brandDetailState.data).length > 0\r\n    ) {\r\n      const images = brandDetailState.data.image;\r\n      if (images && images.length > 0) {\r\n        setmyImages(images);\r\n        setMyGoddamnImages(images);\r\n      }\r\n\r\n      if (brandDetailState.data.cover && brandDetailState.data.cover['id']) {\r\n        // @ts-ignore\r\n        setmyImages([brandDetailState.data.cover]);\r\n        setCoverImageId(brandDetailState.data.cover['id']);\r\n      }\r\n    }\r\n  }, [brandDetailState.data]);\r\n\r\n  const handleDetachSingleImage = async (id) => {\r\n    await handleDetachImageFromItemSingleFetch({\r\n      urlOptions: {\r\n        placeHolders: {\r\n          imageId: id,\r\n          collection: 'brand',\r\n          itemId: brandDetailData.id,\r\n        },\r\n      },\r\n    });\r\n  };\r\n\r\n  const handleSetImageAsThumnail = async (image) => {\r\n    const thumbnailRes = await handleSetImageAsThumbnailToItemFetch({\r\n      urlOptions: {\r\n        placeHolders: {\r\n          imageId: image.id,\r\n          collection: 'brand',\r\n          itemId: brandDetailData.id,\r\n        },\r\n      },\r\n    });\r\n\r\n    // @ts-ignore\r\n    if (thumbnailRes && thumbnailRes.status === 'ok') {\r\n      openSuccessNotification('Set as thumbnail!');\r\n      // const positionInBrand = () => {\r\n      //     return brandList.map(item => item.id).indexOf(brandDetailData.id);\r\n      // }\r\n\r\n      // const index = positionInBrand();\r\n\r\n      // const prevItem = brandList.find(item => item.id === productRecord.id);\r\n\r\n      // if (prevItem) {\r\n      //     const updatedItem = Object.assign({}, brandList[index], { ...prevItem, cover: image.cover });\r\n      //     const updateBrandList = [...brandList.slice(0, index), updatedItem, ...brandList.slice(index + 1)];\r\n      //     setBrandList(updateBrandList);\r\n      // }\r\n    } else {\r\n      openErrorNotification(\"Couldn't set as thumbnail, Something went wrong\");\r\n    }\r\n  };\r\n\r\n  const handleSubmit = async (values: any, actions: any) => {\r\n    console.log('myReadyToGoImages', myImages);\r\n\r\n    if (brandDetailData && Object.keys(brandDetailData).length > 0) {\r\n      // @ts-ignore\r\n      const images =\r\n        myImages && myImages.length > 0 ? myImages.map((item) => item.id) : [];\r\n\r\n      if (images[0] && images.length > 1) {\r\n        await handleAttachImageToItemMultipleFetch({\r\n          urlOptions: {\r\n            placeHolders: {\r\n              collection: 'brand',\r\n              itemId: brandDetailData.id,\r\n            },\r\n          },\r\n          body: {\r\n            image: images,\r\n          },\r\n        });\r\n      } else if (images[0] && images.length < 1) {\r\n        await handleAttachImageToItemSingleFetch({\r\n          urlOptions: {\r\n            placeHolders: {\r\n              imageId: images[0].id,\r\n              collection: 'brand',\r\n              itemId: brandDetailData.id,\r\n            },\r\n          },\r\n        });\r\n      }\r\n    }\r\n\r\n    const updateBrandRes = await handleUpdateBrandFetch({\r\n      urlOptions: {\r\n        placeHolders: {\r\n          id: brandDetailData.id,\r\n        },\r\n      },\r\n      body: {\r\n        name: values.name,\r\n        description: values.description,\r\n        metaTitle: values.metaTitle,\r\n        metaDescription: values.metaDescription,\r\n        metaTags: tags && tags.length > 0 ? tags.join(',') : '',\r\n        bn: {\r\n          metaTitle: values.bnMetaTitle,\r\n          metaDescription: values.bnMetaDescription,\r\n          metaTags: bnTags && bnTags.length > 0 ? bnTags.join(',') : '',\r\n          name: values.bnName,\r\n          description: values.bnDescription,\r\n        },\r\n      },\r\n    });\r\n\r\n    // @ts-ignore\r\n    if (updateBrandRes && updateBrandRes.status === 'ok') {\r\n      setBrandDetailData({\r\n        ...brandDetailData,\r\n        id: brandDetailData['id'] || '',\r\n        key: brandDetailData['id'] || '',\r\n        name: updateBrandRes['name'] || '',\r\n        description: updateBrandRes['description'] || '',\r\n        // @ts-ignore\r\n        ...updateBrandRes,\r\n      });\r\n\r\n      openSuccessNotification('Brand Updated!');\r\n      setBrandEditVisible(false);\r\n\r\n      // const positionInBrand = () => {\r\n      //     return brandList.map(item => item.id).indexOf(productRecord.id);\r\n      // }\r\n\r\n      // const index = positionInBrand();\r\n      // const updatedItem = Object.assign({}, brandList[index], { ...updateBrandRes });\r\n      // console.log('updateBrandList', updatedItem)\r\n\r\n      // const updateBrandList = [...brandList.slice(0, index), updatedItem, ...brandList.slice(index + 1)];\r\n\r\n      // setBrandList(updateBrandList);\r\n\r\n      actions.resetForm();\r\n    } else {\r\n      openErrorNotification();\r\n    }\r\n\r\n    actions.setSubmitting(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!updateBrandState['isLoading']) {\r\n      const error = updateBrandState['error'];\r\n      if (error['isError'] && Object.keys(error['error']).length > 0) {\r\n        const errors =\r\n          Object.values(error['error']).length > 0\r\n            ? Object.values(error['error'])\r\n            : [];\r\n        errors.forEach((err, i) => {\r\n          if (typeof err === 'string') {\r\n            openErrorNotification(err);\r\n          } else if (typeof err === 'object') {\r\n            if (err && Object.keys(err).length > 0) {\r\n              const errs = Object.values(err);\r\n              errs.forEach((err) => {\r\n                openErrorNotification(err);\r\n              });\r\n            }\r\n          }\r\n        });\r\n      }\r\n    }\r\n  }, [updateBrandState]);\r\n\r\n  const onSwitchChange = (checked: any) => {\r\n    // console.log(checked);\r\n  };\r\n\r\n  const handleCancel = (e: any) => {\r\n    setBrandEditVisible(false);\r\n    setBnTags([]);\r\n    setTags([]);\r\n    setCoverImageId('');\r\n    setvisibleMedia(false);\r\n    setmyImages(false);\r\n  };\r\n\r\n  const getisSubmitButtonDisabled = (values, isValid) => {\r\n    if (!values.name || !isValid) {\r\n      return true;\r\n    }\r\n    return false;\r\n  };\r\n\r\n  const handleImagesDelete = (id) => {\r\n    // @ts-ignore\r\n    const newImages =\r\n      myImages &&\r\n      myImages.filter((image) => {\r\n        return image.id !== id;\r\n      });\r\n\r\n    setmyImages(newImages);\r\n  };\r\n\r\n  console.log('myImages', myImages);\r\n\r\n  useEffect(() => {\r\n    if (brandDetailData && Object.keys(brandDetailData).length > 0) {\r\n      const metaTags =\r\n        brandDetailData.metaTags && brandDetailData.metaTags.split(',');\r\n\r\n      console.log('localMetaTags', metaTags);\r\n\r\n      const bnMetaTags =\r\n        brandDetailData.bn &&\r\n        brandDetailData.bn['metaTags'] &&\r\n        brandDetailData.bn['metaTags'].split(',');\r\n      setTags(metaTags || []);\r\n      setBnTags(bnMetaTags || []);\r\n    }\r\n  }, []);\r\n\r\n  console.log('brandEdit', brandDetailData);\r\n\r\n  useEffect(() => {\r\n    console.log('thumnail', myImages);\r\n    // @ts-ignore\r\n    if (myImages && myImages[0] && myImages.length < 2) {\r\n      console.log('thumnail2', myImages);\r\n\r\n      if (coverImageId !== myImages[0].id) {\r\n        setCoverImageId(myImages[0].id);\r\n        // set thumbnail with server for edits\r\n        handleSetImageAsThumnail(myImages[0]);\r\n      }\r\n    }\r\n  }, [myImages]);\r\n\r\n  useEffect(() => {\r\n    if (brandDetailData && Object.keys(brandDetailData).length > 0) {\r\n      const metaTags =\r\n        brandDetailData.metaTags && brandDetailData.metaTags.split(',');\r\n\r\n      console.log('localMetaTags', metaTags);\r\n\r\n      const bnMetaTags =\r\n        brandDetailData.bn &&\r\n        brandDetailData.bn['metaTags'] &&\r\n        brandDetailData.bn['metaTags'].split(',');\r\n      setTags(metaTags || []);\r\n      setBnTags(bnMetaTags || []);\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <Formik\r\n        onSubmit={(values, actions) => handleSubmit(values, actions)}\r\n        validationSchema={validationSchema}\r\n        validateOnBlur={false}\r\n        enableReinitialize={true}\r\n        initialValues={{\r\n          ...initialValues,\r\n          ...brandDetailData,\r\n          ...(brandDetailData &&\r\n            Object.keys(brandDetailData).length > 0 && {\r\n              bnMetaTitle:\r\n                brandDetailData['bn'] &&\r\n                brandDetailData['bn'].metaTitle &&\r\n                brandDetailData['bn'].metaTitle,\r\n              bnMetaDescription:\r\n                brandDetailData['bn'] &&\r\n                brandDetailData['bn'].metaDescription &&\r\n                brandDetailData['bn'].metaDescription,\r\n              bnName:\r\n                brandDetailData['bn'] &&\r\n                brandDetailData['bn'].name &&\r\n                brandDetailData['bn'].name,\r\n              bnDescription:\r\n                brandDetailData['bn'] &&\r\n                brandDetailData['bn'].description &&\r\n                brandDetailData['bn'].description,\r\n            }),\r\n        }}\r\n      >\r\n        {({\r\n          handleChange,\r\n          values,\r\n          handleSubmit,\r\n          errors,\r\n          isValid,\r\n          isSubmitting,\r\n          touched,\r\n          handleBlur,\r\n          setFieldTouched,\r\n          handleReset,\r\n        }) => (\r\n          <>\r\n            <section className='addProductGridContainer'>\r\n              <div className='addProductGridContainer__left'>\r\n                <div className='addProductGridContainer__name'>\r\n                  <div className='addProductGridContainer__item-header'>\r\n                    <h3>Brand Information *</h3>\r\n                    <div\r\n                      className={\r\n                        values.name && values.name.length > 2\r\n                          ? 'checkicon-active'\r\n                          : 'checkicon'\r\n                      }\r\n                    >\r\n                      <CheckCircleOutlined />\r\n                    </div>\r\n                  </div>\r\n                  <div className='addProductGridContainer__item-body'>\r\n                    <Input\r\n                      label='Name *'\r\n                      value={values.name}\r\n                      name='name'\r\n                      placeHolder={''}\r\n                      isError={\r\n                        (touched.name && errors.name) ||\r\n                        (!isSubmitting &&\r\n                          updateBrandState.error['error']['name'])\r\n                      }\r\n                      errorString={\r\n                        (touched.name && errors.name) ||\r\n                        (!isSubmitting &&\r\n                          updateBrandState.error['error']['name'])\r\n                      }\r\n                      onChange={(e: any) => {\r\n                        handleChange(e);\r\n                        setFieldTouched('name');\r\n                      }}\r\n                    />\r\n\r\n                    <Input\r\n                      label='BN Name'\r\n                      value={values.bnName}\r\n                      placeHolder={''}\r\n                      name='bnName'\r\n                      isError={\r\n                        (touched.bnName && errors.bnName) ||\r\n                        (!isSubmitting &&\r\n                          updateBrandState.error['error']['bnName'])\r\n                      }\r\n                      errorString={\r\n                        (touched.bnName && errors.bnName) ||\r\n                        (!isSubmitting &&\r\n                          updateBrandState.error['error']['bnName'])\r\n                      }\r\n                      onChange={(e: any) => {\r\n                        handleChange(e);\r\n                        setFieldTouched('bnName');\r\n                      }}\r\n                    />\r\n\r\n                    <TextArea\r\n                      label='Description'\r\n                      value={values.description}\r\n                      name='description'\r\n                      placeholder={'This brand...'}\r\n                      isError={\r\n                        (touched.description && errors.description) ||\r\n                        (!isSubmitting &&\r\n                          updateBrandState.error['error']['description'])\r\n                      }\r\n                      errorString={\r\n                        (touched.description && errors.description) ||\r\n                        (!isSubmitting &&\r\n                          updateBrandState.error['error']['description'])\r\n                      }\r\n                      onChange={(e: any) => {\r\n                        handleChange(e);\r\n                        setFieldTouched('description');\r\n                      }}\r\n                    />\r\n\r\n                    <TextArea\r\n                      label='BN Description'\r\n                      value={values.bnDescription}\r\n                      placeholder={'এই ব্র্যান্ড...'}\r\n                      name='bnDescription'\r\n                      isError={\r\n                        (touched.bnDescription && errors.bnDescription) ||\r\n                        (!isSubmitting &&\r\n                          updateBrandState.error['error']['bnDescription'])\r\n                      }\r\n                      errorString={\r\n                        (touched.bnDescription && errors.bnDescription) ||\r\n                        (!isSubmitting &&\r\n                          updateBrandState.error['error']['bnDescription'])\r\n                      }\r\n                      onChange={(e: any) => {\r\n                        handleChange(e);\r\n                        setFieldTouched('bnDescription');\r\n                      }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n\r\n                <div className='addProductGridContainer__image'>\r\n                  <div className='addProductGridContainer__item-header'>\r\n                    <h3>Cover</h3>\r\n\r\n                    <Tooltip\r\n                      placement='left'\r\n                      title={\r\n                        'Click on the image to select cover image, By default 1st image is selected as cover'\r\n                      }\r\n                    >\r\n                      <a href='###'>\r\n                        <InfoCircleOutlined />\r\n                      </a>\r\n                    </Tooltip>\r\n                  </div>\r\n\r\n                  <div\r\n                    style={{\r\n                      padding: '10px',\r\n                    }}\r\n                    className='aboutToUploadImagesContainer'\r\n                  >\r\n                    {brandDetailState.isLoading && (\r\n                      <div\r\n                        style={{\r\n                          padding: '20px 0',\r\n                        }}\r\n                      >\r\n                        <Spin />\r\n                      </div>\r\n                    )}\r\n                    {brandDetailState.done && (\r\n                      <>\r\n                        {myImages &&\r\n                          // @ts-ignore\r\n                          myImages.length > 0 &&\r\n                          myImages.map((image, index) => {\r\n                            return (\r\n                              <div className='aboutToUploadImagesContainer__item'>\r\n                                <div\r\n                                  className='aboutToUploadImagesContainer__item-imgContainer'\r\n                                  onClick={() => {\r\n                                    // setCoverImageId(image.id);\r\n                                    // handleSetImageAsThumnail(image);\r\n                                    setvisibleMedia(true);\r\n                                  }}\r\n                                >\r\n                                  <img src={image.cover} alt={image.alt} />\r\n                                </div>\r\n\r\n                                <span\r\n                                  onClick={() => {\r\n                                    handleImagesDelete(image.id);\r\n                                    handleDetachSingleImage(image.id);\r\n                                  }}\r\n                                  className='aboutToUploadImagesContainer__item-remove'\r\n                                >\r\n                                  <CloseOutlined />\r\n                                </span>\r\n\r\n                                {/* {coverImageId === image.id ? (\r\n                            <span className='aboutToUploadImagesContainer__item-cover'>\r\n                              <CheckOutlined />\r\n                            </span>\r\n                          ) : (\r\n                            !coverImageId &&\r\n                            index === 0 && (\r\n                              <span className='aboutToUploadImagesContainer__item-cover'>\r\n                                <CheckOutlined />\r\n                              </span>\r\n                            )\r\n                          )} */}\r\n                              </div>\r\n                            );\r\n                          })}\r\n\r\n                        {!myImages ||\r\n                        // @ts-ignore\r\n                        (myImages && !(myImages && myImages.length > 0)) ? (\r\n                          <>\r\n                            <Tooltip title={'Attach images'}>\r\n                              <div\r\n                                onClick={() => {\r\n                                  setvisibleMedia(true);\r\n                                }}\r\n                                className='aboutToUploadImagesContainer__uploadItem'\r\n                              >\r\n                                <FileImageFilled />\r\n                                <span className='aboutToUploadImagesContainer__uploadItem-plus'>\r\n                                  <PlusOutlined />\r\n                                </span>\r\n                              </div>\r\n                            </Tooltip>\r\n                          </>\r\n                        ) : (\r\n                          ''\r\n                        )}\r\n                      </>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className='addProductGridContainer__right'>\r\n                <div className='addProductGridContainer__category'>\r\n                  <div className='addProductGridContainer-rightItemContainer'>\r\n                    <div className='addProductGridContainer-rightItemContainer-header'>\r\n                      <h3>Meta Tags</h3>\r\n\r\n                      <Tooltip\r\n                        placement='left'\r\n                        title={\r\n                          \"Meta data will be used to make the user's easy and for search engine optimization.\"\r\n                        }\r\n                      >\r\n                        <a href='###'>\r\n                          <InfoCircleOutlined />\r\n                        </a>\r\n                      </Tooltip>\r\n\r\n                      {/* <Tooltip\r\n                        color='red'\r\n                        visible={\r\n                          addCategoryState.error['error']['category'] &&\r\n                          !(categoryids.length > 0)\r\n                        }\r\n                        placement='left'\r\n                        title={'Select at least one category'}\r\n                      >\r\n                        <div\r\n                          className={\r\n                            !(categoryids.length > 0) &&\r\n                            !addCategoryState.error['error']['category']\r\n                              ? 'checkicon'\r\n                              : addCategoryState.error['error']['category']\r\n                              ? 'checkicon-error'\r\n                              : 'checkicon-active'\r\n                          }\r\n                        >\r\n                          <CheckCircleOutlined />\r\n                        </div>\r\n                      </Tooltip> */}\r\n                    </div>\r\n                    <div className='addProductGridContainer-rightItemContainer-body'>\r\n                      <Input\r\n                        label='Meta title'\r\n                        value={values.metaTitle}\r\n                        placeHolder={'...'}\r\n                        name='metaTitle'\r\n                        isError={\r\n                          (touched.metaTitle && errors.metaTitle) ||\r\n                          (!isSubmitting &&\r\n                            updateBrandState.error['error']['metaTitle'])\r\n                        }\r\n                        errorString={\r\n                          (touched.metaTitle && errors.metaTitle) ||\r\n                          (!isSubmitting &&\r\n                            updateBrandState.error['error']['metaTitle'])\r\n                        }\r\n                        onChange={(e: any) => {\r\n                          handleChange(e);\r\n                          setFieldTouched('metaTitle');\r\n                        }}\r\n                      />\r\n\r\n                      <Input\r\n                        label='BN Meta title'\r\n                        value={values.bnMetaTitle}\r\n                        placeHolder={'...'}\r\n                        name='bnMetaTitle'\r\n                        isError={\r\n                          (touched.bnMetaTitle && errors.bnMetaTitle) ||\r\n                          (!isSubmitting &&\r\n                            updateBrandState.error['error']['bnMetaTitle'])\r\n                        }\r\n                        errorString={\r\n                          (touched.bnMetaTitle && errors.bnMetaTitle) ||\r\n                          (!isSubmitting &&\r\n                            updateBrandState.error['error']['bnMetaTitle'])\r\n                        }\r\n                        onChange={(e: any) => {\r\n                          handleChange(e);\r\n                          setFieldTouched('bnMetaTitle');\r\n                        }}\r\n                      />\r\n\r\n                      <TextArea\r\n                        label='Meta description'\r\n                        value={values.metaDescription}\r\n                        placeholder={'meta...'}\r\n                        name='metaDescription'\r\n                        isError={\r\n                          (touched.metaDescription && errors.metaDescription) ||\r\n                          (!isSubmitting &&\r\n                            updateBrandState.error['error']['metaDescription'])\r\n                        }\r\n                        errorString={\r\n                          (touched.metaDescription && errors.metaDescription) ||\r\n                          (!isSubmitting &&\r\n                            updateBrandState.error['error']['metaDescription'])\r\n                        }\r\n                        onChange={(e: any) => {\r\n                          handleChange(e);\r\n                          setFieldTouched('metaDescription');\r\n                        }}\r\n                      />\r\n\r\n                      <TextArea\r\n                        label='BN Meta Description'\r\n                        value={values.bnMetaDescription}\r\n                        placeholder={'এইয় মেট...'}\r\n                        name='bnMetaDescription'\r\n                        isError={\r\n                          (touched.bnMetaDescription &&\r\n                            errors.bnMetaDescription) ||\r\n                          (!isSubmitting &&\r\n                            updateBrandState.error['error'][\r\n                              'bnMetaDescription'\r\n                            ])\r\n                        }\r\n                        errorString={\r\n                          (touched.bnMetaDescription &&\r\n                            errors.bnMetaDescription) ||\r\n                          (!isSubmitting &&\r\n                            updateBrandState.error['error'][\r\n                              'bnMetaDescription'\r\n                            ])\r\n                        }\r\n                        onChange={(e: any) => {\r\n                          handleChange(e);\r\n                          setFieldTouched('bnMetaDescription');\r\n                        }}\r\n                      />\r\n\r\n                      <h3 className='inputFieldLabel'>Meta Tags </h3>\r\n\r\n                      <MetaTags\r\n                        // @ts-ignore\r\n                        setTags={setTags}\r\n                        tags={tags}\r\n                      />\r\n\r\n                      <div\r\n                        style={{\r\n                          marginTop: '15px',\r\n                        }}\r\n                      ></div>\r\n\r\n                      <h3 className='inputFieldLabel'>BN Meta Tags </h3>\r\n\r\n                      <MetaTags\r\n                        // @ts-ignore\r\n                        setTags={setBnTags}\r\n                        tags={bnTags}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </section>\r\n\r\n            <div\r\n              style={{\r\n                padding: '15px',\r\n                display: 'flex',\r\n                justifyContent: 'flex-end',\r\n              }}\r\n            >\r\n              <Button\r\n                style={{\r\n                  color: '#555',\r\n                  marginRight: '10px',\r\n                }}\r\n                className='btnPrimaryClassNameoutline-cancle'\r\n                onClick={() => setBrandEditVisible(false)}\r\n                type='default'\r\n              >\r\n                Cancel\r\n              </Button>\r\n\r\n              <Button\r\n                className='btnPrimaryClassNameoutline'\r\n                onClick={handleSubmit}\r\n                loading={updateBrandState.isLoading}\r\n                type='link'\r\n                icon={<CheckOutlined />}\r\n              >\r\n                Update\r\n              </Button>\r\n            </div>\r\n\r\n            <MediaLibrary\r\n              setvisible={setvisibleMedia}\r\n              visible={visibleMedia}\r\n              setmyImages={setmyImages}\r\n              myImages={myImages}\r\n              myGoddamnImages={myGoddamnImages}\r\n              setMyGoddamnImages={setMyGoddamnImages}\r\n              isModalOpenForImages={false}\r\n            />\r\n          </>\r\n        )}\r\n      </Formik>\r\n    </>\r\n  );\r\n};\r\n\r\nconst AddNewBrand = ({\r\n  brandDetailData,\r\n  brandEditVisible,\r\n  setBrandEditVisible,\r\n  setBrandDetailData,\r\n}: Props) => {\r\n  const handleCancel = () => {\r\n    setBrandEditVisible(false);\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      style={{\r\n        top: '40px',\r\n      }}\r\n      width={'70vw'}\r\n      bodyStyle={{\r\n        margin: 0,\r\n        padding: 0,\r\n      }}\r\n      title='Brand Edit'\r\n      destroyOnClose={true}\r\n      visible={brandEditVisible}\r\n      onCancel={handleCancel}\r\n      footer={false}\r\n    >\r\n      <ModalComponentChildItem\r\n        brandDetailData={brandDetailData}\r\n        brandEditVisible={brandEditVisible}\r\n        setBrandEditVisible={setBrandEditVisible}\r\n        setBrandDetailData={setBrandDetailData}\r\n      />\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default AddNewBrand;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useParams, useHistory } from 'react-router';\r\n\r\n// import hooks\r\nimport { useHandleFetch } from '../../hooks';\r\n\r\n// import lib\r\nimport {\r\n  FileOutlined,\r\n  InboxOutlined,\r\n  RadiusUpleftOutlined,\r\n  RadiusUprightOutlined,\r\n  RadiusBottomleftOutlined,\r\n  RadiusBottomrightOutlined,\r\n  PlusOutlined,\r\n  DeleteOutlined,\r\n  EditOutlined,\r\n  CheckCircleOutlined,\r\n} from '@ant-design/icons';\r\n\r\nimport {\r\n  Skeleton,\r\n  Empty,\r\n  Popconfirm,\r\n  Upload,\r\n  message,\r\n  Switch,\r\n  Select,\r\n  Button,\r\n  notification,\r\n  Table,\r\n  Space,\r\n  Input as CoolInput,\r\n  Tooltip,\r\n  Modal,\r\n} from 'antd';\r\n\r\n// import components\r\nimport { DataTableSkeleton } from '../../components/Placeholders';\r\nimport BrandEdit from './BrandEdit';\r\n\r\n// import state\r\nimport { isAccess } from '../../utils';\r\nimport { connect } from 'react-redux';\r\n\r\nconst { Column, ColumnGroup } = Table;\r\nconst { Search } = CoolInput;\r\n\r\ninterface Props {\r\n  roles?: any;\r\n}\r\n\r\nconst NewBrandDetail = ({ roles }: Props) => {\r\n  const [brandDetailState, handleBrandDetailFetch] = useHandleFetch(\r\n    {},\r\n    'brandDetail'\r\n  );\r\n  const [brandProductsState, handleBrandProductsFetch] = useHandleFetch(\r\n    {},\r\n    'brandProducts'\r\n  );\r\n\r\n  const params = useParams();\r\n  const history = useHistory();\r\n  const brandId = params['id'];\r\n  const [brandEditVisible, setBrandEditVisible] = useState(false);\r\n  const [brandDetailData, setBrandDetailData] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const getBrandDetail = async () => {\r\n      const brandDetailRes = await handleBrandDetailFetch({\r\n        urlOptions: {\r\n          placeHolders: {\r\n            id: brandId,\r\n          },\r\n        },\r\n      });\r\n\r\n      // @ts-ignore\r\n      if (brandDetailRes) {\r\n        // @ts-ignore\r\n        setBrandDetailData(brandDetailRes);\r\n      }\r\n\r\n      console.log('brandDetailRes', brandDetailRes);\r\n    };\r\n\r\n    getBrandDetail();\r\n  }, [brandId]);\r\n\r\n  useEffect(() => {\r\n    const getBrandProducts = async () => {\r\n      await handleBrandProductsFetch({\r\n        urlOptions: {\r\n          placeHolders: {\r\n            id: brandId,\r\n          },\r\n        },\r\n      });\r\n    };\r\n\r\n    getBrandProducts();\r\n  }, [brandId]);\r\n\r\n  console.log('brandProductsState', brandProductsState);\r\n\r\n  console.log('brandParams', params);\r\n\r\n  return (\r\n    <div className='brandDetailContainer'>\r\n      <div className='brandDetailContainer__heading'>\r\n        <h3>Brand Detail</h3>\r\n\r\n        {brandDetailState.done &&\r\n          brandDetailData &&\r\n          Object.keys(brandDetailData).length > 0 && (\r\n            <>\r\n              <BrandEdit\r\n                brandEditVisible={brandEditVisible}\r\n                setBrandEditVisible={setBrandEditVisible}\r\n                brandDetailData={brandDetailData}\r\n                setBrandDetailData={setBrandDetailData}\r\n              />\r\n\r\n              {isAccess('postCatalogue', roles) && (\r\n                <Button\r\n                  onClick={() => setBrandEditVisible(true)}\r\n                  type='link'\r\n                  icon={<EditOutlined />}\r\n                >\r\n                  Edit\r\n                </Button>\r\n              )}\r\n            </>\r\n          )}\r\n      </div>\r\n      <Skeleton\r\n        avatar\r\n        paragraph={{ rows: 3 }}\r\n        loading={brandDetailState.isLoading}\r\n      >\r\n        {brandDetailState.done &&\r\n          brandDetailData &&\r\n          !(Object.keys(brandDetailData).length > 0) && (\r\n            <Empty\r\n              description='No Brand found'\r\n              image={Empty.PRESENTED_IMAGE_SIMPLE}\r\n            />\r\n          )}\r\n\r\n        {brandDetailState.done &&\r\n          brandDetailData &&\r\n          Object.keys(brandDetailData).length > 0 && (\r\n            <div className='brandDetailContainer__header'>\r\n              <div className='brandDetailContainer__header-coverContainer'>\r\n                <img\r\n                  src={\r\n                    brandDetailData['cover'] &&\r\n                    brandDetailData['cover']['cover']\r\n                  }\r\n                  alt=''\r\n                />\r\n              </div>\r\n              <div className='brandDetailContainer__header-info'>\r\n                <h2>{brandDetailData['name']}</h2>\r\n                <h3>{brandDetailData['description']}</h3>\r\n\r\n                {brandDetailData['url'] && (\r\n                  <h3>\r\n                    URL:\r\n                    <span>{brandDetailData['url']}</span>\r\n                  </h3>\r\n                )}\r\n              </div>\r\n            </div>\r\n          )}\r\n      </Skeleton>\r\n\r\n      <div className='brandDetailContainer__heading'>\r\n        <h3>Products</h3>\r\n      </div>\r\n      <div className='brandDetailContainer__body'>\r\n        {brandProductsState.isLoading && <DataTableSkeleton />}\r\n        {brandProductsState.done && !(brandProductsState.data.length > 0) && (\r\n          <div\r\n            style={{\r\n              marginTop: '100px',\r\n            }}\r\n          >\r\n            <Empty\r\n              description='No Products exists for this brand'\r\n              image={Empty.PRESENTED_IMAGE_SIMPLE}\r\n            />\r\n          </div>\r\n        )}\r\n\r\n        {brandProductsState.done &&\r\n          brandProductsState.data &&\r\n          brandProductsState.data.length > 0 && (\r\n            <>\r\n              <Table\r\n                style={{\r\n                  paddingTop: '10px',\r\n                  borderRadius: '5px !important',\r\n                  overflow: 'hidden',\r\n                  boxShadow:\r\n                    '0 0.125rem 0.625rem rgba(227, 231, 250, 0.3), 0 0.0625rem 0.125rem rgba(206, 220, 233, 0.4)',\r\n                }}\r\n                // expandable={{\r\n                //     expandedRowRender: record => <p style={{ margin: 0 }}>{record.name}</p>,\r\n                //     rowExpandable: record => record.name !== 'Not Expandable',\r\n                //   }}\r\n                // bordered={true}\r\n                size='small'\r\n                // pagination={false}\r\n                dataSource={brandProductsState.data}\r\n                tableLayout={'auto'}\r\n                onHeaderRow={(column) => {\r\n                  return {\r\n                    style: {\r\n                      color: 'red !important',\r\n                    },\r\n                  };\r\n                }}\r\n              >\r\n                <Column\r\n                  title=''\r\n                  dataIndex='cover'\r\n                  key='id'\r\n                  width={'80px'}\r\n                  className='classnameofthecolumn'\r\n                  render={(cover, record: any) => (\r\n                    <>\r\n                      <img\r\n                        onClick={() => {\r\n                          history.push(`/admin/product/${record.id}`);\r\n                        }}\r\n                        src={cover}\r\n                        alt='cover img'\r\n                        style={{\r\n                          height: '40px',\r\n                          width: '40px',\r\n                          objectFit: 'contain',\r\n                          borderRadius: '3px',\r\n                          cursor: 'pointer',\r\n                        }}\r\n                      />\r\n                    </>\r\n                  )}\r\n                />\r\n\r\n                <Column\r\n                  title='Name'\r\n                  dataIndex='name'\r\n                  key='id'\r\n                  className='classnameofthecolumn'\r\n                  render={(text, record: any) => (\r\n                    <>\r\n                      <h4\r\n                        onClick={() => {\r\n                          history.push(`/admin/product/${record.id}`);\r\n                        }}\r\n                        style={{\r\n                          fontWeight: 400,\r\n                          color: '#555',\r\n                          cursor: 'pointer',\r\n                        }}\r\n                      >\r\n                        {text}\r\n                      </h4>\r\n                    </>\r\n                  )}\r\n                />\r\n\r\n                <Column\r\n                  title='Offer Price'\r\n                  dataIndex='offerPrice'\r\n                  key='id'\r\n                  className='classnameofthecolumn'\r\n                />\r\n\r\n                <Column\r\n                  title='Price'\r\n                  dataIndex='price'\r\n                  key='id'\r\n                  className='classnameofthecolumn'\r\n                />\r\n\r\n                <Column\r\n                  title='Available'\r\n                  dataIndex='available'\r\n                  key='id'\r\n                  className='classnameofthecolumn'\r\n                />\r\n\r\n                <Column\r\n                  title='Minimum'\r\n                  dataIndex='minimum'\r\n                  key='id'\r\n                  className='classnameofthecolumn'\r\n                />\r\n              </Table>\r\n            </>\r\n          )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  roles: state.globalState,\r\n});\r\n\r\n// @ts-ignore\r\nexport default connect(mapStateToProps, null)(NewBrandDetail);\r\n","import React, { useState, useEffect } from 'react';\r\nimport { AutoComplete } from 'antd';\r\n\r\nimport InputSmall from '../../components/Field/InputSmall';\r\nimport { useFetch } from '../../hooks';\r\nimport { DeleteOutlined } from '@ant-design/icons';\r\n\r\nconst Complete = ({ setAttributeList, attributeList, attribute }) => {\r\n  const [suggestedOptions, setsuggesteOptions] = useState([]);\r\n  const attributeLisState = useFetch([], [], 'attributeList', {});\r\n\r\n  const [attributeItem, setAttributeITem] = useState({\r\n    name: attribute.name,\r\n    value: attribute.value,\r\n  });\r\n\r\n  useEffect(() => {\r\n    const positionInAttribute = () => {\r\n      return attributeList.map((item) => item.id).indexOf(attribute.id);\r\n    };\r\n\r\n    const index = positionInAttribute();\r\n\r\n    const updatedItem = Object.assign({}, attributeList[index], {\r\n      ...attributeItem,\r\n    });\r\n    const updateAttributeList = [\r\n      ...attributeList.slice(0, index),\r\n      updatedItem,\r\n      ...attributeList.slice(index + 1),\r\n    ];\r\n    setAttributeList(updateAttributeList);\r\n  }, [attributeItem]);\r\n\r\n  const handleAttributeDelete = () => {\r\n    const updateAttributeList = attributeList.filter(\r\n      (item) => item.id !== attribute.id\r\n    );\r\n    setAttributeList(updateAttributeList);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (\r\n      attributeLisState.data &&\r\n      Object.keys(attributeLisState.data).length > 0\r\n    ) {\r\n      const options = Object.keys(attributeLisState.data);\r\n      const manupulatedOptions = options.map((option) => {\r\n        return {\r\n          value: option,\r\n        };\r\n      });\r\n      setsuggesteOptions(manupulatedOptions);\r\n    }\r\n  }, [attributeLisState.data]);\r\n\r\n  const handleAttributeSelect = (value) => {\r\n    if (attributeLisState && Object.keys(attributeLisState.data).length > 0) {\r\n      if (attributeLisState.data[value]) {\r\n        setAttributeITem({\r\n          ...attribute,\r\n          name: value,\r\n          value: attributeLisState.data[value],\r\n        });\r\n      }\r\n    } else {\r\n      setAttributeITem({\r\n        ...attribute,\r\n        name: value,\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleAttributeValueChange = (e) => {\r\n    setAttributeITem({\r\n      ...attribute,\r\n      value: e.target.value,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div\r\n        key={attribute.id}\r\n        className='addProductGridContainer__item-body-variationCard-item-attribute-item'\r\n      >\r\n        <div\r\n          onClick={handleAttributeDelete}\r\n          className='addProductGridContainer__item-body-variationCard-item-attribute-item-delete'\r\n        >\r\n          <DeleteOutlined />\r\n        </div>\r\n\r\n        <h3 className='inputFieldLabel-small'>Name</h3>\r\n        <AutoComplete\r\n          value={attribute.name}\r\n          style={{ width: '100%' }}\r\n          options={suggestedOptions}\r\n          placeholder='attribute'\r\n          onChange={handleAttributeSelect}\r\n          filterOption={(inputValue, suggestedOption) =>\r\n            suggestedOption.value\r\n              .toUpperCase()\r\n              .indexOf(inputValue.toUpperCase()) !== -1\r\n          }\r\n        />\r\n\r\n        {attribute.name && (\r\n          <>\r\n            <div style={{ marginTop: '10px' }}></div>\r\n            <InputSmall\r\n              label='Value'\r\n              value={attribute.value}\r\n              name='value'\r\n              onChange={handleAttributeValueChange}\r\n            />\r\n          </>\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Complete;\r\n","import React, { useState, useEffect } from 'react';\r\nimport Attributes from './Attributes';\r\nimport AddAttributeValues from '../attribute/AddAttributeValues';\r\nimport InputSmall from '../../components/Field/InputSmall';\r\nimport { Button } from 'antd';\r\nimport { PlusOutlined, CheckOutlined } from '@ant-design/icons';\r\n\r\ninterface Props {\r\n  handleAddPricing: any;\r\n  pricingItem?: any;\r\n  handleUpdatePricing?: any;\r\n  isPricingEditActive?: any;\r\n}\r\n\r\nconst Pricing = ({\r\n  handleAddPricing,\r\n  pricingItem,\r\n  handleUpdatePricing,\r\n  isPricingEditActive,\r\n}: Props) => {\r\n  const [price, setprice] = useState({\r\n    regular: '',\r\n    offer: '',\r\n  });\r\n  const [stock, setStock] = useState({\r\n    available: '',\r\n    minimum: '',\r\n  });\r\n\r\n  const [attributeList, setAttributeList] = useState([]);\r\n\r\n  useEffect(() => {\r\n    if (pricingItem && Object.keys(pricingItem).length > 0) {\r\n      setprice({\r\n        ...price,\r\n        ...pricingItem['price'],\r\n      });\r\n\r\n      setStock({\r\n        ...stock,\r\n        ...pricingItem['stock'],\r\n      });\r\n\r\n      const attributeListItems = [];\r\n      if (\r\n        pricingItem.attribute &&\r\n        Object.keys(pricingItem.attribute).length > 0\r\n      ) {\r\n        const attributeKeys = Object.keys(pricingItem.attribute);\r\n        attributeKeys.forEach((attributeKey, index) => {\r\n          attributeListItems.push({\r\n            name: attributeKey,\r\n            value: pricingItem.attribute[attributeKey],\r\n            id: index,\r\n          });\r\n        });\r\n      }\r\n\r\n      setAttributeList(attributeListItems);\r\n    }\r\n  }, [pricingItem]);\r\n\r\n  console.log('pricingItem', pricingItem);\r\n  console.log('attributeList', attributeList);\r\n\r\n  const handlePriceChange = (e) => {\r\n    const name = e.target.name;\r\n    const value = e.target.value;\r\n\r\n    setprice({\r\n      ...price,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  const handleStockChange = (e) => {\r\n    const name = e.target.name;\r\n    const value = e.target.value;\r\n\r\n    setStock({\r\n      ...stock,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  const handleSavePricing = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (attributeList.length > 0) {\r\n      const attribute = {};\r\n\r\n      for (let item of attributeList) {\r\n        console.log('itemofattribute', item);\r\n        if (item['value'] && item['name']) {\r\n          attribute[item['name']] = item['value'];\r\n        }\r\n      }\r\n\r\n      const priceItem = {\r\n        price: price,\r\n        stock: stock,\r\n        attribute: attribute,\r\n      };\r\n\r\n      setprice({\r\n        regular: '',\r\n        offer: '',\r\n      });\r\n      setStock({ available: '', minimum: '' });\r\n      handleAddPricing(priceItem);\r\n      setAttributeList([]);\r\n    } else {\r\n      const priceItem = {\r\n        price: price,\r\n        stock: stock,\r\n        attribute: {},\r\n      };\r\n\r\n      setprice({\r\n        regular: '',\r\n        offer: '',\r\n      });\r\n      setStock({ available: '', minimum: '' });\r\n      setAttributeList([]);\r\n      handleAddPricing(priceItem);\r\n    }\r\n  };\r\n\r\n  const handleUpdatePricingItem = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (attributeList.length > 0) {\r\n      const attribute = {};\r\n\r\n      for (let item of attributeList) {\r\n        console.log('itemofattribute', item);\r\n        if (item['value'] && item['name']) {\r\n          attribute[item['name']] = item['value'];\r\n        }\r\n      }\r\n\r\n      const priceItem = {\r\n        price: price,\r\n        stock: stock,\r\n        attribute: attribute,\r\n        id: pricingItem.id,\r\n      };\r\n\r\n      setprice({\r\n        regular: '',\r\n        offer: '',\r\n      });\r\n      setStock({ available: '', minimum: '' });\r\n      handleUpdatePricing(priceItem);\r\n      setAttributeList([]);\r\n    } else {\r\n      const priceItem = {\r\n        price: price,\r\n        stock: stock,\r\n        attribute: {},\r\n        id: pricingItem.id,\r\n      };\r\n\r\n      setprice({\r\n        regular: '',\r\n        offer: '',\r\n      });\r\n      setStock({ available: '', minimum: '' });\r\n      setAttributeList([]);\r\n      handleUpdatePricing(priceItem);\r\n    }\r\n  };\r\n\r\n  const handleAddAttribute = () => {\r\n    setAttributeList([\r\n      ...attributeList,\r\n      {\r\n        name: '',\r\n        value: '',\r\n        id: `${attributeList.length}`,\r\n      },\r\n    ]);\r\n  };\r\n\r\n  const getiCreatePricingIsDisabled = () => {\r\n    if (!price.regular) {\r\n      return true;\r\n    } else return false;\r\n  };\r\n\r\n  // console.log('attributeList', attributeList);\r\n\r\n  return (\r\n    <>\r\n      <div className='addProductGridContainer__item-body-variationCard'>\r\n        <div className='addProductGridContainer__item-body-variationCard-left'>\r\n          <div className='addProductGridContainer__item-body-variationCard-item'>\r\n            <h4>Price</h4>\r\n            <div className='addProductGridContainer__item-body-variationCard-item-container'>\r\n              <div className='addProductGridContainer__item-body-variationCard-item-container-left'>\r\n                <InputSmall\r\n                  min={0}\r\n                  type='number'\r\n                  label='Regular  *'\r\n                  value={price.regular}\r\n                  name='regular'\r\n                  onChange={handlePriceChange}\r\n                />\r\n              </div>\r\n              <div className='addProductGridContainer__item-body-variationCard-item-container-right'>\r\n                <InputSmall\r\n                  min={0}\r\n                  type='number'\r\n                  size='small'\r\n                  label='Offer'\r\n                  value={price.offer}\r\n                  name='offer'\r\n                  onChange={handlePriceChange}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className='addProductGridContainer__item-body-variationCard-right'>\r\n            <div className='addProductGridContainer__item-body-variationCard-item'>\r\n              <h4>Attributes</h4>\r\n              <div className='addProductGridContainer__item-body-variationCard-item-attribute'>\r\n                {attributeList.map((attribute) => {\r\n                  return (\r\n                    <Attributes\r\n                      attribute={attribute}\r\n                      attributeList={attributeList}\r\n                      setAttributeList={setAttributeList}\r\n                    />\r\n                  );\r\n                })}\r\n                <Button\r\n                  size='small'\r\n                  onClick={handleAddAttribute}\r\n                  style={{\r\n                    width: '180px',\r\n                    minHeight: '75px',\r\n                    marginTop: '0px',\r\n                    borderRadius: '8px',\r\n                  }}\r\n                  type='dashed'\r\n                  icon={<PlusOutlined />}\r\n                >\r\n                  Add Attribute\r\n                </Button>\r\n              </div>\r\n            </div>\r\n\r\n            <div\r\n              style={{\r\n                marginTop: '25px',\r\n              }}\r\n              className='addProductGridContainer__item-body-variationCard-item'\r\n            >\r\n              <h4>Stock</h4>\r\n              <div className='addProductGridContainer__item-body-variationCard-item-container'>\r\n                <div className='addProductGridContainer__item-body-variationCard-item-container-left'>\r\n                  <InputSmall\r\n                    min={0}\r\n                    type='number'\r\n                    label='Available'\r\n                    value={stock.available}\r\n                    name='available'\r\n                    onChange={handleStockChange}\r\n                  />\r\n                </div>\r\n                <div className='addProductGridContainer__item-body-variationCard-item-container-right'>\r\n                  <InputSmall\r\n                    min={0}\r\n                    type='number'\r\n                    label='Minimum'\r\n                    value={stock.minimum}\r\n                    name='minimum'\r\n                    onChange={handleStockChange}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* <Button\r\n          // type=\"primary\"\r\n         \r\n          icon={<PlusOutlined />}\r\n          onClick={() => setAddNewCategoryVisible(true)}\r\n        >\r\n        Add New\r\n      </Button> */}\r\n\r\n      <Button\r\n        style={{\r\n          marginLeft: '10px',\r\n        }}\r\n        onClick={\r\n          isPricingEditActive ? handleUpdatePricingItem : handleSavePricing\r\n        }\r\n        disabled={getiCreatePricingIsDisabled()}\r\n        className='btnAddToPrice'\r\n        icon={<CheckOutlined />}\r\n      >\r\n        {isPricingEditActive ? 'Update Pricing' : 'Add To Pricing'}\r\n      </Button>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Pricing;\r\n","// @ts-nocheck\r\nimport React, { useState, useEffect } from 'react';\r\n\r\n// import hooks\r\nimport { useHandleFetch } from '../../hooks';\r\n\r\n// import libraries\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { message, Tooltip, Modal, Tabs, Empty, Badge } from 'antd';\r\nimport CKEditor from '@ckeditor/ckeditor5-react';\r\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\r\n\r\nimport {\r\n  DeleteOutlined,\r\n  FileAddOutlined,\r\n  CheckCircleOutlined,\r\n  FileImageFilled,\r\n  FileImageOutlined,\r\n  FileImageTwoTone,\r\n  PlusOutlined,\r\n  PlusCircleOutlined,\r\n  CloseOutlined,\r\n  CheckOutlined,\r\n  InfoCircleOutlined,\r\n  EditOutlined,\r\n} from '@ant-design/icons';\r\n\r\n// import ReactQuill from 'react-quill';\r\n// import 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport MediaLibrary from '../../components/MediaLibrary';\r\nimport DatePicker from '../../components/Field/DatePicker';\r\nimport {\r\n  openSuccessNotification,\r\n  openErrorNotification,\r\n} from '../../components/Notification';\r\nimport Tags from './Tags';\r\nimport Brands from './Brands';\r\nimport Categories from './Categories';\r\nimport Pricing from './Pricing';\r\nimport MetaTags from '../category/MetaTags';\r\n\r\nconst { TabPane } = Tabs;\r\n\r\nconst validationSchema = Yup.object().shape({\r\n  // name: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\nconst initialValues = {\r\n  name: '',\r\n  description: '',\r\n  model: '',\r\n  unit: '',\r\n  regular: '',\r\n  offer: '',\r\n  available: '',\r\n  minimum: '',\r\n  image: [],\r\n  url: '',\r\n  cover: '',\r\n  pricing: [],\r\n  venue: '',\r\n  date: '',\r\n  time: '',\r\n  purchaseLimit: null,\r\n  bnUnit: '',\r\n  bnName: '',\r\n  bnDescription: '',\r\n  metaTitle: '',\r\n  bnMetaTitle: '',\r\n  metaDescription: '',\r\n  bnMetaDescription: '',\r\n  metaTags: '',\r\n  bnMetaTags: '',\r\n};\r\n\r\ninterface Props {\r\n  addNewCategoryVisible: any;\r\n  setAddNewCategoryVisible: any;\r\n  productList?: any;\r\n  setProductList?: any;\r\n}\r\n\r\nconst AddNewProduct = ({\r\n  addNewCategoryVisible,\r\n  setAddNewCategoryVisible,\r\n  productList,\r\n  setProductList,\r\n}: Props) => {\r\n  const [addProductState, handleAddProductFetch] = useHandleFetch(\r\n    {},\r\n    'addProduct'\r\n  );\r\n  const [visible, setvisible] = useState(false);\r\n  const [myImages, setmyImages] = useState(false);\r\n  const [myThumbnailImage, setmyThumbnailImage] = useState(false);\r\n  const [isModalOpenForThumbnail, setisModalOpenForThumbnail] = useState(false);\r\n  const [isModalOpenForImages, setisModalOpenForImages] = useState(false);\r\n  const [categoryids, setcategoryIds] = useState([]);\r\n  const [tagIds, setTagIds] = useState([]);\r\n  const [brandId, setBrandId] = useState('');\r\n  const [pricing, setPricing] = useState([]);\r\n  const [coverImageId, setCoverImageId] = useState('');\r\n  const [categoryOptions, setCategoryOptions] = useState([]);\r\n  const [selectedTags, setSelectedTags] = useState([]);\r\n  const [date, setDateFeild] = useState('');\r\n  const [time, setTimeFeild] = useState('');\r\n  const [description, setDescription] = useState('');\r\n  const [bnDescription, setBNDescription] = useState('');\r\n  const [metaTags, setMetaTags] = useState([]);\r\n  const [bnMetaTags, setBnMetaTags] = useState([]);\r\n  const [editpricingItem, setEditPricingItem] = useState({});\r\n  const [pricingTagActiveKey, setpricingTagActiveKey] = useState('1');\r\n  const [isPricingEditActive, seTisPricingEditActive] = useState(false);\r\n\r\n  const makeEmptyCategoryOptions = (setEmpty) => {\r\n    setEmpty([]);\r\n  };\r\n\r\n  const handleSubmit = async (values: any, actions: any) => {\r\n    // @ts-ignore\r\n    const imagesIds = myImages\r\n      ? myImages.map((image) => {\r\n          return image.id;\r\n        })\r\n      : [];\r\n\r\n    const addProductRes = await handleAddProductFetch({\r\n      body: {\r\n        name: values.name.trim(),\r\n        description: description,\r\n        model: values.model,\r\n        unit: values.unit,\r\n        category: categoryids,\r\n        tags: tagIds,\r\n        brand: brandId,\r\n        image: imagesIds,\r\n        cover: coverImageId || imagesIds[0] ? imagesIds[0] : '',\r\n        pricing: pricing,\r\n        metaTitle: values.metaTitle,\r\n        metaDescription: values.metaDescription,\r\n        metaTags: metaTags.join(','),\r\n\r\n        bn: {\r\n          metaTitle: values.bnMetaTitle,\r\n          metaDescription: values.bnMetaDescription,\r\n          metaTags: bnMetaTags.join(','),\r\n          name: values.bnName.trim(),\r\n          unit: values.metaUnit,\r\n          description: bnDescription,\r\n        },\r\n      },\r\n    });\r\n\r\n    // @ts-ignore\r\n    if (addProductRes && addProductRes.status === 'ok') {\r\n      openSuccessNotification('Product Created');\r\n      setAddNewCategoryVisible(false);\r\n\r\n      console.log('addProductRes22', addProductRes);\r\n      setProductList([\r\n        {\r\n          // @ts-ignore\r\n          ...addProductRes,\r\n          id: addProductRes['_id'] || '',\r\n          key: addProductRes['_id'] || '',\r\n          name: addProductRes['name'] || '',\r\n          description: addProductRes['description'] || '',\r\n          cover: addProductRes['cover'] || '',\r\n        },\r\n        ...productList,\r\n      ]);\r\n      // @ts-ignore\r\n      setmyImages([]);\r\n      setCoverImageId('');\r\n      setPricing([]);\r\n      setTagIds([]);\r\n      setSelectedTags([]);\r\n      setBrandId('');\r\n      setcategoryIds([]);\r\n      setCategoryOptions([]);\r\n      actions.resetForm();\r\n    } else {\r\n      // openErrorNotification();\r\n    }\r\n\r\n    actions.setSubmitting(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!addProductState['isLoading']) {\r\n      const error = addProductState['error'];\r\n      if (error['isError'] && Object.keys(error['error']).length > 0) {\r\n        const errors =\r\n          Object.values(error['error']).length > 0\r\n            ? Object.values(error['error'])\r\n            : [];\r\n        errors.forEach((err, i) => {\r\n          if (typeof err === 'string') {\r\n            openErrorNotification(err);\r\n          } else if (typeof err === 'object') {\r\n            if (err && Object.keys(err).length > 0) {\r\n              const errs = Object.values(err);\r\n              errs.forEach((err) => {\r\n                openErrorNotification(err);\r\n              });\r\n            }\r\n          }\r\n        });\r\n      }\r\n    }\r\n  }, [addProductState]);\r\n\r\n  const handleCancel = (e: any) => {\r\n    setAddNewCategoryVisible(false);\r\n  };\r\n\r\n  const getisSubmitButtonDisabled = (values, isValid) => {\r\n    if (\r\n      !values.name ||\r\n      !(pricing.length > 0) ||\r\n      !(categoryids.length > 0) ||\r\n      !isValid\r\n    ) {\r\n      return true;\r\n    }\r\n    return false;\r\n  };\r\n\r\n  const handleImagesDelete = (id) => {\r\n    // @ts-ignore\r\n    const newImages =\r\n      myImages &&\r\n      myImages.filter((image) => {\r\n        return image.id !== id;\r\n      });\r\n\r\n    setmyImages(newImages);\r\n  };\r\n\r\n  const handleDeleteFromSelectedImage = () => {};\r\n\r\n  const handleThumbnailImageDelete = (id) => {\r\n    // @ts-ignore\r\n    const newImages =\r\n      myThumbnailImage &&\r\n      myThumbnailImage.filter((image) => {\r\n        return image.id !== id;\r\n      });\r\n\r\n    if (newImages.length > 0) {\r\n      setmyThumbnailImage(newImages);\r\n    } else setmyThumbnailImage(false);\r\n  };\r\n\r\n  const handleAddPricing = (priceItem) => {\r\n    setPricing([\r\n      {\r\n        ...priceItem,\r\n        id: pricing.length,\r\n      },\r\n      ...pricing,\r\n    ]);\r\n    message.info('Product Pricing Added');\r\n  };\r\n\r\n  const handleUpdatePricing = (priceItem) => {\r\n    const positionInPricing = () => {\r\n      return pricing.map((item) => item.id).indexOf(priceItem.id);\r\n    };\r\n\r\n    const index = positionInPricing();\r\n\r\n    // @ts-ignore\r\n    const updatedItem = Object.assign({}, pricing[index], { ...priceItem });\r\n    const updatePricingList = [\r\n      ...pricing.slice(0, index),\r\n      updatedItem,\r\n      ...pricing.slice(index + 1),\r\n    ];\r\n\r\n    setPricing(updatePricingList);\r\n\r\n    message.info('Product Pricing Updated');\r\n    seTisPricingEditActive(true);\r\n    setpricingTagActiveKey('2');\r\n  };\r\n\r\n  const handleEditPricing = (id) => {\r\n    seTisPricingEditActive(true);\r\n    const pricingItem = pricing.find((item) => item.id === id);\r\n    if (pricingItem) {\r\n      setEditPricingItem(pricingItem);\r\n    }\r\n  };\r\n\r\n  const handleDeletePricing = (id) => {\r\n    const newPricing = pricing.filter((item) => item.id !== id);\r\n    setPricing(newPricing);\r\n    message.info('Product Pricing Deleted');\r\n  };\r\n\r\n  const isCategoryInValid = () => {\r\n    if (\r\n      addProductState.error['error']['category'] &&\r\n      !categoryids &&\r\n      categoryids.length\r\n    ) {\r\n      return true;\r\n    } else if (categoryids && categoryids.length > 0) {\r\n      return false;\r\n    }\r\n  };\r\n\r\n  const handleDateChange = (date, dateString) => {\r\n    setDateFeild(dateString);\r\n    // console.log('date', date, dateString);\r\n  };\r\n\r\n  const handleTimeChange = (date, dateString) => {\r\n    setTimeFeild(dateString);\r\n    // console.log('date', date, dateString);\r\n  };\r\n\r\n  console.log('pricingingi', pricing);\r\n\r\n  return (\r\n    <Formik\r\n      onSubmit={(values, actions) => handleSubmit(values, actions)}\r\n      validationSchema={validationSchema}\r\n      validateOnBlur={false}\r\n      enableReinitialize={true}\r\n      initialValues={{ ...initialValues }}\r\n    >\r\n      {({\r\n        handleChange,\r\n        values,\r\n        handleSubmit,\r\n        errors,\r\n        isValid,\r\n        isSubmitting,\r\n        touched,\r\n        handleBlur,\r\n        setFieldTouched,\r\n        handleReset,\r\n      }) => (\r\n        <>\r\n          <Modal\r\n            style={{\r\n              top: '40px',\r\n            }}\r\n            bodyStyle={{\r\n              margin: 0,\r\n              padding: 0,\r\n            }}\r\n            width={'70vw'}\r\n            title='Add New Product'\r\n            visible={addNewCategoryVisible}\r\n            onOk={(e: any) => handleSubmit(e)}\r\n            onCancel={handleCancel}\r\n            okText='Create'\r\n            okButtonProps={{\r\n              loading: isSubmitting,\r\n              htmlType: 'submit',\r\n            }}\r\n          >\r\n            <section className='addProductGridContainer'>\r\n              <div className='addProductGridContainer__left'>\r\n                <div className='addProductGridContainer__name'>\r\n                  <div className='addProductGridContainer__item-header'>\r\n                    <h3>Product Information *</h3>\r\n\r\n                    <div\r\n                      className={\r\n                        values.name && values.name.length > 2\r\n                          ? 'checkicon-active'\r\n                          : 'checkicon'\r\n                      }\r\n                    >\r\n                      <CheckCircleOutlined />\r\n                    </div>\r\n                  </div>\r\n                  <div className='addProductGridContainer__item-body'>\r\n                    <Input\r\n                      label='Name *'\r\n                      value={values.name}\r\n                      placeHolder={'Rafty ox'}\r\n                      name='name'\r\n                      isError={\r\n                        (touched.name && errors.name) ||\r\n                        (!isSubmitting &&\r\n                          addProductState.error['error']['name'])\r\n                      }\r\n                      errorString={\r\n                        (touched.name && errors.name) ||\r\n                        (!isSubmitting &&\r\n                          addProductState.error['error']['name'])\r\n                      }\r\n                      onChange={(e: any) => {\r\n                        handleChange(e);\r\n                        setFieldTouched('name');\r\n                      }}\r\n                    />\r\n\r\n                    <Input\r\n                      label='BN Name'\r\n                      value={values.bnName}\r\n                      placeHolder={'রাফতি অক্স'}\r\n                      name='bnName'\r\n                      isError={\r\n                        (touched.bnName && errors.bnName) ||\r\n                        (!isSubmitting &&\r\n                          addProductState.error['error']['bnName'])\r\n                      }\r\n                      errorString={\r\n                        (touched.bnName && errors.bnName) ||\r\n                        (!isSubmitting &&\r\n                          addProductState.error['error']['bnName'])\r\n                      }\r\n                      onChange={(e: any) => {\r\n                        handleChange(e);\r\n                        setFieldTouched('bnName');\r\n                      }}\r\n                    />\r\n\r\n                    {/* <div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\tdisplay: 'flex',\r\n\t\t\t\t\t\t\t\t\t\t\t\tjustifyContent: 'space-between'\r\n\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\twidth: '48%',\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<DatePicker\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabel='Date'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={handleDateChange} />\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\twidth: '48%'\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<DatePicker\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tdate={date}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\twithTime={true}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder='Select time'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabel='Time'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={handleTimeChange} />\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t</div> */}\r\n\r\n                    {/* \r\n\t\t\t\t\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\t\t\t\t\trows={1}\r\n\t\t\t\t\t\t\t\t\t\t\t\tlabel='Venue'\r\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.venue}\r\n\t\t\t\t\t\t\t\t\t\t\t\tname='venue'\r\n\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.venue && errors.venue) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['venue'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.venue && errors.venue) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['venue'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('venue');\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\t\tlabel='Purchase Limit'\r\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.purchaseLimit}\r\n\t\t\t\t\t\t\t\t\t\t\t\ttype='number'\r\n\t\t\t\t\t\t\t\t\t\t\t\tname='purchaseLimit'\r\n\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.purchaseLimit && errors.purchaseLimit) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['purchaseLimit'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.purchaseLimit && errors.purchaseLimit) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['purchaseLimit'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('purchaseLimit');\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t/> */}\r\n\r\n                    <Input\r\n                      label='Unit'\r\n                      value={values.unit}\r\n                      name='unit'\r\n                      placeHolder={'KG,POUND,GM'}\r\n                      isError={\r\n                        (touched.unit && errors.unit) ||\r\n                        (!isSubmitting &&\r\n                          addProductState.error['error']['unit'])\r\n                      }\r\n                      errorString={\r\n                        (touched.unit && errors.unit) ||\r\n                        (!isSubmitting &&\r\n                          addProductState.error['error']['unit'])\r\n                      }\r\n                      onChange={(e: any) => {\r\n                        handleChange(e);\r\n                        setFieldTouched('unit');\r\n                      }}\r\n                    />\r\n\r\n                    <Input\r\n                      label='BN Unit'\r\n                      value={values.bnUnit}\r\n                      placeHolder={'কেজি,গ্রাম'}\r\n                      name='bnUnit'\r\n                      isError={\r\n                        (touched.bnUnit && errors.bnUnit) ||\r\n                        (!isSubmitting &&\r\n                          addProductState.error['error']['bnUnit'])\r\n                      }\r\n                      errorString={\r\n                        (touched.bnUnit && errors.bnUnit) ||\r\n                        (!isSubmitting &&\r\n                          addProductState.error['error']['bnUnit'])\r\n                      }\r\n                      onChange={(e: any) => {\r\n                        handleChange(e);\r\n                        setFieldTouched('bnUnit');\r\n                      }}\r\n                    />\r\n\r\n                    <Input\r\n                      label='Model Number'\r\n                      value={values.model}\r\n                      name='model'\r\n                      isError={\r\n                        (touched.model && errors.model) ||\r\n                        (!isSubmitting &&\r\n                          addProductState.error['error']['model'])\r\n                      }\r\n                      errorString={\r\n                        (touched.model && errors.model) ||\r\n                        (!isSubmitting &&\r\n                          addProductState.error['error']['model'])\r\n                      }\r\n                      onChange={(e: any) => {\r\n                        handleChange(e);\r\n                        setFieldTouched('model');\r\n                      }}\r\n                    />\r\n\r\n                    <h3 className='inputFieldLabel'>Description</h3>\r\n\r\n                    <div\r\n                      style={{\r\n                        width: '100%',\r\n                        maxWidth: '100%',\r\n                      }}\r\n                    >\r\n                      <CKEditor\r\n                        editor={ClassicEditor}\r\n                        data={description}\r\n                        onInit={(editor) => {\r\n                          // You can store the \"editor\" and use when it is needed.\r\n                          console.log('Editor is ready to use!', editor);\r\n                        }}\r\n                        onChange={(event, editor) => {\r\n                          const data = editor.getData();\r\n                          setDescription(data);\r\n                        }}\r\n                        onBlur={(event, editor) => {\r\n                          console.log('Blur.', editor);\r\n                        }}\r\n                        onFocus={(event, editor) => {\r\n                          console.log('Focus.', editor);\r\n                        }}\r\n                      />\r\n                    </div>\r\n\r\n                    <div\r\n                      style={{\r\n                        marginTop: '15px',\r\n                      }}\r\n                    ></div>\r\n\r\n                    <h3 className='inputFieldLabel'>BN Description</h3>\r\n\r\n                    <div\r\n                      style={{\r\n                        width: '100%',\r\n                        maxWidth: '100%',\r\n                      }}\r\n                    >\r\n                      <CKEditor\r\n                        editor={ClassicEditor}\r\n                        data={bnDescription}\r\n                        onInit={(editor) => {\r\n                          // You can store the \"editor\" and use when it is needed.\r\n                          console.log('Editor is ready to use!', editor);\r\n                        }}\r\n                        onChange={(event, editor) => {\r\n                          const data = editor.getData();\r\n                          setBNDescription(data);\r\n                        }}\r\n                        onBlur={(event, editor) => {\r\n                          console.log('Blur.', editor);\r\n                        }}\r\n                        onFocus={(event, editor) => {\r\n                          console.log('Focus.', editor);\r\n                        }}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                <div className='addProductGridContainer__price'>\r\n                  <div className='addProductGridContainer__item-header'>\r\n                    <h3>Product Pricing *</h3>\r\n\r\n                    <div\r\n                      className={\r\n                        pricing && pricing.length > 0\r\n                          ? 'checkicon-active'\r\n                          : 'checkicon'\r\n                      }\r\n                    >\r\n                      <CheckCircleOutlined />\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className='addProductGridContainer__item-body'>\r\n                    <Tabs\r\n                      animated={true}\r\n                      tabPosition='top'\r\n                      type='card'\r\n                      activeKey={pricingTagActiveKey}\r\n                      onChange={(value) => {\r\n                        setpricingTagActiveKey(`${value}`);\r\n                      }}\r\n                    >\r\n                      <TabPane tab='Add Variation' key='1'>\r\n                        <Pricing\r\n                          handleAddPricing={handleAddPricing}\r\n                          pricingItem={editpricingItem}\r\n                          handleUpdatePricing={handleUpdatePricing}\r\n                          isPricingEditActive={isPricingEditActive}\r\n                        />\r\n                      </TabPane>\r\n                      <TabPane tab='Pricing List' key='2'>\r\n                        <div className='addProductGridContainer__item-body-pricingContainer'>\r\n                          {pricing.length > 0 &&\r\n                            pricing.map((item) => {\r\n                              return (\r\n                                <div className='addProductGridContainer__item-body-pricingContainer-item'>\r\n                                  <div className='addProductGridContainer__item-body-pricingContainer-item-edit'>\r\n                                    {/* <span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<EditOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</span> */}\r\n                                    <span\r\n                                      className='pricingEditIcon'\r\n                                      onClick={() => {\r\n                                        handleEditPricing(item.id);\r\n                                        setpricingTagActiveKey('1');\r\n                                      }}\r\n                                    >\r\n                                      <EditOutlined />\r\n                                    </span>\r\n                                    <span\r\n                                      className='pricingDeleteIcon'\r\n                                      onClick={() =>\r\n                                        handleDeletePricing(item.id)\r\n                                      }\r\n                                    >\r\n                                      <DeleteOutlined />\r\n                                    </span>\r\n                                  </div>\r\n                                  <div className='addProductGridContainer__item-body-pricingContainer-item-two'>\r\n                                    <div>\r\n                                      <h3>Price</h3>\r\n                                      <div className='addProductGridContainer__item-body-pricingContainer-item-body'>\r\n                                        {item.price.offer ? (\r\n                                          <>\r\n                                            <h4>{item.price.offer}</h4>/\r\n                                            <h5\r\n                                              style={{\r\n                                                textDecoration: 'line-through',\r\n                                              }}\r\n                                            >\r\n                                              {item.price.regular}\r\n                                            </h5>\r\n                                          </>\r\n                                        ) : (\r\n                                          <h4>{item.price.regular}</h4>\r\n                                        )}\r\n                                      </div>\r\n                                    </div>\r\n\r\n                                    {item.stock && item.stock['available'] && (\r\n                                      <div>\r\n                                        <Badge\r\n                                          overflowCount={999}\r\n                                          count={item.stock.available}\r\n                                        >\r\n                                          <h3>Stock</h3>\r\n                                        </Badge>\r\n                                        {item.stock['minimum'] && (\r\n                                          <>\r\n                                            <div className='addProductGridContainer__item-body-pricingContainer-item-body'>\r\n                                              <div>\r\n                                                <h6>\r\n                                                  min\r\n                                                  <Badge\r\n                                                    className='site-badge-count-4'\r\n                                                    overflowCount={999}\r\n                                                    count={item.stock.minimum}\r\n                                                  />\r\n                                                </h6>\r\n                                              </div>\r\n                                            </div>\r\n                                          </>\r\n                                        )}\r\n                                      </div>\r\n                                    )}\r\n                                  </div>\r\n\r\n                                  {item.attribute &&\r\n                                    Object.values(item.attribute).length >\r\n                                      0 && (\r\n                                      <>\r\n                                        <h3>Attributes</h3>\r\n                                        <div className='addProductGridContainer__item-body-pricingContainer-item-body'>\r\n                                          {item.attribute &&\r\n                                            Object.keys(item.attribute).length >\r\n                                              0 &&\r\n                                            Object.keys(item.attribute).map(\r\n                                              (attributeItem) => {\r\n                                                return (\r\n                                                  <div>\r\n                                                    <h6>{attributeItem}</h6>\r\n                                                    <h4>\r\n                                                      {\r\n                                                        item.attribute[\r\n                                                          attributeItem\r\n                                                        ]\r\n                                                      }\r\n                                                    </h4>\r\n                                                  </div>\r\n                                                );\r\n                                              }\r\n                                            )}\r\n                                        </div>\r\n                                      </>\r\n                                    )}\r\n                                </div>\r\n                              );\r\n                            })}\r\n\r\n                          {!(pricing.length > 0) && (\r\n                            <div\r\n                              style={{\r\n                                width: '100%',\r\n                                display: 'flex',\r\n                                justifyContent: 'center',\r\n                              }}\r\n                            >\r\n                              <Empty\r\n                                description='No Pricing added'\r\n                                image={Empty.PRESENTED_IMAGE_SIMPLE}\r\n                              />\r\n                            </div>\r\n                          )}\r\n                        </div>\r\n                      </TabPane>\r\n                    </Tabs>\r\n\r\n                    <div className='addProductGridContainer__item-body-container'></div>\r\n                  </div>\r\n                </div>\r\n\r\n                <div className='addProductGridContainer__image'>\r\n                  <div className='addProductGridContainer__item-header'>\r\n                    <h3>Image</h3>\r\n\r\n                    <Tooltip\r\n                      placement='left'\r\n                      title={\r\n                        'Click on the image to select cover image, By default 1st image is selected as cover'\r\n                      }\r\n                    >\r\n                      <a href='###'>\r\n                        <InfoCircleOutlined />\r\n                      </a>\r\n                    </Tooltip>\r\n                  </div>\r\n                  <div className='addProductGridContainer__item-body'>\r\n                    <div className='aboutToUploadImagesContainer'>\r\n                      {myImages &&\r\n                        // @ts-ignore\r\n                        myImages.length > 0 &&\r\n                        myImages.map((image, index) => {\r\n                          return (\r\n                            <div className='aboutToUploadImagesContainer__item'>\r\n                              <div\r\n                                className='aboutToUploadImagesContainer__item-imgContainer'\r\n                                onClick={() => setCoverImageId(image.id)}\r\n                              >\r\n                                <img src={image.cover} alt={image.alt} />\r\n                              </div>\r\n\r\n                              <span\r\n                                onClick={() => handleImagesDelete(image.id)}\r\n                                className='aboutToUploadImagesContainer__item-remove'\r\n                              >\r\n                                <CloseOutlined />\r\n                              </span>\r\n\r\n                              {coverImageId === image.id ? (\r\n                                <span className='aboutToUploadImagesContainer__item-cover'>\r\n                                  <CheckOutlined />\r\n                                </span>\r\n                              ) : (\r\n                                !coverImageId &&\r\n                                index === 0 && (\r\n                                  <span className='aboutToUploadImagesContainer__item-cover'>\r\n                                    <CheckOutlined />\r\n                                  </span>\r\n                                )\r\n                              )}\r\n                            </div>\r\n                          );\r\n                        })}\r\n\r\n                      <Tooltip title={'Attach images'}>\r\n                        <div\r\n                          onClick={() => {\r\n                            setvisible(true);\r\n                            setisModalOpenForImages(true);\r\n                            setisModalOpenForThumbnail(false);\r\n                          }}\r\n                          className='aboutToUploadImagesContainer__uploadItem'\r\n                        >\r\n                          {/* <FileAddOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FileImageTwoTone />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FileImageOutlined /> */}\r\n                          <FileImageFilled />\r\n                          {/* <h5>\r\n\t\t\t\t\t\t\t\t\t\t\t\t     Select From Library\r\n\t\t\t\t\t\t\t\t\t\t\t<     /h5> */}\r\n                          <span className='aboutToUploadImagesContainer__uploadItem-plus'>\r\n                            <PlusOutlined />\r\n                          </span>\r\n                        </div>\r\n                      </Tooltip>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                <div className='addProductGridContainer__image'>\r\n                  <div className='addProductGridContainer__item-header'>\r\n                    <h3>Meta Data</h3>\r\n\r\n                    <Tooltip\r\n                      placement='left'\r\n                      title={\r\n                        \"Meta data will be used to make the user's easy and for search engine optimization.\"\r\n                      }\r\n                    >\r\n                      <a href='###'>\r\n                        <InfoCircleOutlined />\r\n                      </a>\r\n                    </Tooltip>\r\n                  </div>\r\n                  <div className='addProductGridContainer__item-body'>\r\n                    <Input\r\n                      label='Meta title'\r\n                      value={values.metaTitle}\r\n                      placeHolder={'...'}\r\n                      name='metaTitle'\r\n                      isError={\r\n                        (touched.metaTitle && errors.metaTitle) ||\r\n                        (!isSubmitting &&\r\n                          addProductState.error['error']['metaTitle'])\r\n                      }\r\n                      errorString={\r\n                        (touched.metaTitle && errors.metaTitle) ||\r\n                        (!isSubmitting &&\r\n                          addProductState.error['error']['metaTitle'])\r\n                      }\r\n                      onChange={(e: any) => {\r\n                        handleChange(e);\r\n                        setFieldTouched('metaTitle');\r\n                      }}\r\n                    />\r\n\r\n                    <Input\r\n                      label='BN Meta title'\r\n                      value={values.bnMetaTitle}\r\n                      placeHolder={'...'}\r\n                      name='bnMetaTitle'\r\n                      isError={\r\n                        (touched.bnMetaTitle && errors.bnMetaTitle) ||\r\n                        (!isSubmitting &&\r\n                          addProductState.error['error']['bnMetaTitle'])\r\n                      }\r\n                      errorString={\r\n                        (touched.bnMetaTitle && errors.bnMetaTitle) ||\r\n                        (!isSubmitting &&\r\n                          addProductState.error['error']['bnMetaTitle'])\r\n                      }\r\n                      onChange={(e: any) => {\r\n                        handleChange(e);\r\n                        setFieldTouched('bnMetaTitle');\r\n                      }}\r\n                    />\r\n\r\n                    <TextArea\r\n                      label='Meta description'\r\n                      value={values.metaDescription}\r\n                      placeholder={'meta...'}\r\n                      name='metaDescription'\r\n                      isError={\r\n                        (touched.metaDescription && errors.metaDescription) ||\r\n                        (!isSubmitting &&\r\n                          addProductState.error['error']['metaDescription'])\r\n                      }\r\n                      errorString={\r\n                        (touched.metaDescription && errors.metaDescription) ||\r\n                        (!isSubmitting &&\r\n                          addProductState.error['error']['metaDescription'])\r\n                      }\r\n                      onChange={(e: any) => {\r\n                        handleChange(e);\r\n                        setFieldTouched('metaDescription');\r\n                      }}\r\n                    />\r\n\r\n                    <TextArea\r\n                      label='BN Meta Description'\r\n                      value={values.bnMetaDescription}\r\n                      placeholder={'এইয় মেট...'}\r\n                      name='bnMetaDescription'\r\n                      isError={\r\n                        (touched.bnMetaDescription &&\r\n                          errors.bnMetaDescription) ||\r\n                        (!isSubmitting &&\r\n                          addProductState.error['error']['bnMetaDescription'])\r\n                      }\r\n                      errorString={\r\n                        (touched.bnMetaDescription &&\r\n                          errors.bnMetaDescription) ||\r\n                        (!isSubmitting &&\r\n                          addProductState.error['error']['bnMetaDescription'])\r\n                      }\r\n                      onChange={(e: any) => {\r\n                        handleChange(e);\r\n                        setFieldTouched('bnMetaDescription');\r\n                      }}\r\n                    />\r\n\r\n                    <h3 className='inputFieldLabel'>\r\n                      Meta Tags (grocery,fashion)\r\n                    </h3>\r\n\r\n                    <MetaTags\r\n                      // @ts-ignore\r\n                      setTags={setMetaTags}\r\n                      tags={metaTags}\r\n                    />\r\n\r\n                    <div\r\n                      style={{\r\n                        marginTop: '15px',\r\n                      }}\r\n                    ></div>\r\n\r\n                    <h3 className='inputFieldLabel'>\r\n                      BN Meta Tags (মুদিখানা,ফ্যাশন)\r\n                    </h3>\r\n\r\n                    <MetaTags\r\n                      // @ts-ignore\r\n                      setTags={setBnMetaTags}\r\n                      tags={bnMetaTags}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className='addProductGridContainer__right'>\r\n                <div className='addProductGridContainer__category'>\r\n                  <div className='addProductGridContainer-rightItemContainer'>\r\n                    <div className='addProductGridContainer-rightItemContainer-header'>\r\n                      <h3>Categories *</h3>\r\n\r\n                      <Tooltip\r\n                        color='red'\r\n                        visible={\r\n                          addProductState.error['error']['category'] &&\r\n                          !(categoryids.length > 0)\r\n                        }\r\n                        placement='left'\r\n                        title={'Select at least one category'}\r\n                      >\r\n                        <div\r\n                          className={\r\n                            !(categoryids.length > 0) &&\r\n                            !addProductState.error['error']['category']\r\n                              ? 'checkicon'\r\n                              : addProductState.error['error']['category']\r\n                              ? 'checkicon-error'\r\n                              : 'checkicon-active'\r\n                          }\r\n                        >\r\n                          <CheckCircleOutlined />\r\n                        </div>\r\n                      </Tooltip>\r\n                    </div>\r\n                    <div className='addProductGridContainer-rightItemContainer-body'>\r\n                      <Categories\r\n                        setCategoryOptions={setCategoryOptions}\r\n                        categoryOptions={categoryOptions}\r\n                        setcategoryIds={setcategoryIds}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                <div className='addProductGridContainer__tag'>\r\n                  <div className='addProductGridContainer-rightItemContainer'>\r\n                    <div className='addProductGridContainer-rightItemContainer-header'>\r\n                      <h3>Tags</h3>\r\n                    </div>\r\n                    <div className='addProductGridContainer-rightItemContainer-body'>\r\n                      <Tags\r\n                        setSelectedTags={setSelectedTags}\r\n                        selectedTags={selectedTags}\r\n                        setTagIds={setTagIds}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div className='addProductGridContainer__brand'>\r\n                  <div className='addProductGridContainer-rightItemContainer'>\r\n                    <div className='addProductGridContainer-rightItemContainer-header'>\r\n                      <h3>Brand</h3>\r\n                    </div>\r\n                    <div className='addProductGridContainer-rightItemContainer-body'>\r\n                      <Brands setBrandId={setBrandId} />\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </section>\r\n          </Modal>\r\n\r\n          <MediaLibrary\r\n            setvisible={setvisible}\r\n            visible={visible}\r\n            setmyImages={setmyImages}\r\n            myImages={myImages}\r\n            setmyThumbnailImage={setmyThumbnailImage}\r\n            isModalOpenForThumbnail={isModalOpenForThumbnail}\r\n            isModalOpenForImages={isModalOpenForImages}\r\n          />\r\n        </>\r\n      )}\r\n    </Formik>\r\n  );\r\n};\r\n\r\nexport default AddNewProduct;\r\n\r\n/*\r\n\r\n\r\nProduct variation ---->\r\n\r\nPrice [title]\r\n\t[regular input field] [offer inputfield]\r\n\r\nStock [title]\r\n\t[available input field] [minimum inputfield]\r\n\r\ndefault [default can be set to true]\r\n\r\nattributes [title]\r\n\t[add attributes name]\r\n\t\t[add attrubutes value]\r\n\r\n\t[add attributes name]\r\n\t\t[add attrubutes value\r\n\r\n*/ //\r\n","// @ts-nocheck\r\nimport React, { useState, useEffect } from 'react';\r\n\r\n// import hooks\r\nimport { useHandleFetch } from '../../hooks';\r\n\r\n// import libraries\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport {\r\n  message,\r\n  Tooltip,\r\n  Modal,\r\n  Tabs,\r\n  Empty,\r\n  Badge,\r\n  Spin,\r\n  Button,\r\n} from 'antd';\r\n\r\nimport {\r\n  DeleteOutlined,\r\n  FileAddOutlined,\r\n  CheckCircleOutlined,\r\n  FileImageFilled,\r\n  FileImageOutlined,\r\n  FileImageTwoTone,\r\n  PlusOutlined,\r\n  PlusCircleOutlined,\r\n  CloseOutlined,\r\n  CheckOutlined,\r\n  InfoCircleOutlined,\r\n  EditOutlined,\r\n} from '@ant-design/icons';\r\nimport CKEditor from '@ckeditor/ckeditor5-react';\r\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\r\n\r\n// import ReactQuill from 'react-quill';\r\n// import 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport MediaLibrary from '../../components/MediaLibrary';\r\nimport DatePicker from '../../components/Field/DatePicker';\r\nimport {\r\n  openSuccessNotification,\r\n  openErrorNotification,\r\n} from '../../components/Notification';\r\nimport Tags from './Tags';\r\nimport Brands from './Brands';\r\nimport Categories from './Categories';\r\nimport Pricing from './Pricing';\r\nimport MetaTags from '../category/MetaTags';\r\n\r\nconst { TabPane } = Tabs;\r\n\r\nconst validationSchema = Yup.object().shape({\r\n  // name: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\nconst initialValues = {\r\n  name: '',\r\n  description: '',\r\n  model: '',\r\n  unit: '',\r\n  regular: '',\r\n  offer: '',\r\n  available: '',\r\n  minimum: '',\r\n  image: [],\r\n  url: '',\r\n  cover: '',\r\n  pricing: [],\r\n  venue: '',\r\n  date: '',\r\n  time: '',\r\n  purchaseLimit: null,\r\n  bnUnit: '',\r\n  bnName: '',\r\n  bnDescription: '',\r\n  metaTitle: '',\r\n  bnMetaTitle: '',\r\n  metaDescription: '',\r\n  bnMetaDescription: '',\r\n  metaTags: '',\r\n  bnMetaTags: '',\r\n};\r\n\r\ninterface Props {\r\n  productEditVisible?: any;\r\n  setProductEditVisible?: any;\r\n  productDetailData?: any;\r\n  productList?: any;\r\n  setProductList?: any;\r\n}\r\n\r\nconst ModalChildComponent = ({\r\n  productEditVisible,\r\n  setProductEditVisible,\r\n  productDetailData,\r\n  setProductList,\r\n  productList,\r\n}) => {\r\n  const [updateProductState, handleUpdateProductFetch] = useHandleFetch(\r\n    {},\r\n    'updateProduct'\r\n  );\r\n  const [productDetailState, handleProductDetailFetch] = useHandleFetch(\r\n    {},\r\n    'productDetailById'\r\n  );\r\n  const [\r\n    attachImageToItemMultipleState,\r\n    handleAttachImageToItemMultipleFetch,\r\n  ] = useHandleFetch({}, 'attachImageToItemMultiple');\r\n  const [\r\n    attachImageToItemSingleState,\r\n    handleAttachImageToItemSingleFetch,\r\n  ] = useHandleFetch({}, 'attachImageToItemSingle');\r\n  const [\r\n    detachImageFromItemMultipleState,\r\n    handleDetachImageFromItemMultipleFetch,\r\n  ] = useHandleFetch({}, 'detachImageFromItemMultiple');\r\n  const [\r\n    detachImageFromItemSingleState,\r\n    handleDetachImageFromItemSingleFetch,\r\n  ] = useHandleFetch({}, 'detachImageFromItemSingle');\r\n  const [\r\n    setImageAsThumbnailToItemState,\r\n    handleSetImageAsThumbnailToItemFetch,\r\n  ] = useHandleFetch({}, 'setImageAsThumbnailToItem');\r\n\r\n  const [visible, setvisible] = useState(false);\r\n  const [myImages, setmyImages] = useState(false);\r\n  const [myThumbnailImage, setmyThumbnailImage] = useState(false);\r\n  const [isModalOpenForThumbnail, setisModalOpenForThumbnail] = useState(false);\r\n  const [isModalOpenForImages, setisModalOpenForImages] = useState(false);\r\n  const [categoryids, setcategoryIds] = useState([]);\r\n  const [tagIds, setTagIds] = useState([]);\r\n  const [brandId, setBrandId] = useState('');\r\n  const [pricing, setPricing] = useState([]);\r\n  const [coverImageId, setCoverImageId] = useState('');\r\n  const [categoryOptions, setCategoryOptions] = useState([]);\r\n  const [selectedTags, setSelectedTags] = useState([]);\r\n  const [date, setDateFeild] = useState('');\r\n  const [time, setTimeFeild] = useState('');\r\n  const [description, setDescription] = useState('');\r\n  const [bnDescription, setBNDescription] = useState('');\r\n  const [metaTags, setMetaTags] = useState([]);\r\n  const [bnMetaTags, setBnMetaTags] = useState([]);\r\n  const [editpricingItem, setEditPricingItem] = useState({});\r\n  const [pricingTagActiveKey, setpricingTagActiveKey] = useState('2');\r\n  const [isPricingEditActive, seTisPricingEditActive] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const getProductDetail = async () => {\r\n      await handleProductDetailFetch({\r\n        urlOptions: {\r\n          placeHolders: {\r\n            id: productDetailData.id,\r\n          },\r\n        },\r\n      });\r\n    };\r\n\r\n    getProductDetail();\r\n  }, [productDetailData]);\r\n\r\n  console.log('tagIds', tagIds);\r\n  console.log('selectedtagIds', selectedTags);\r\n\r\n  useEffect(() => {\r\n    if (\r\n      productDetailState.done &&\r\n      productDetailState.data &&\r\n      Object.keys(productDetailState.data).length > 0\r\n    ) {\r\n      const productDetailData = productDetailState.data;\r\n\r\n      if (productDetailData.brand) {\r\n        setBrandId(productDetailData.brand['id']);\r\n      } else {\r\n        setBrandId('');\r\n      }\r\n      if (\r\n        productDetailData &&\r\n        productDetailData.tags &&\r\n        productDetailData.tags.length > 0\r\n      ) {\r\n        const selectedTagNames = productDetailData.tags.map(\r\n          (item) => item.name\r\n        );\r\n\r\n        const selectedTagIds = productDetailData.tags.map((item) => item._id);\r\n\r\n        setSelectedTags(selectedTagNames);\r\n        console.log('selectedTagIds55', selectedTagIds);\r\n        setTagIds(selectedTagIds);\r\n      } else {\r\n        setTagIds([]);\r\n        setSelectedTags([]);\r\n      }\r\n      if (\r\n        productDetailData &&\r\n        productDetailData.category &&\r\n        productDetailData.category.length > 0\r\n      ) {\r\n        const categoryIds = productDetailData.category.map((item) => item.id);\r\n        setCategoryOptions(categoryIds);\r\n      } else {\r\n        setCategoryOptions([]);\r\n      }\r\n\r\n      if (\r\n        productDetailData &&\r\n        productDetailData.pricing &&\r\n        productDetailData.pricing\r\n      ) {\r\n        setPricing(productDetailData.pricing);\r\n      } else {\r\n        setPricing([]);\r\n      }\r\n\r\n      if (\r\n        productDetailData &&\r\n        productDetailData.date &&\r\n        productDetailData.date\r\n      ) {\r\n        setDateFeild(productDetailData.date);\r\n      } else {\r\n        setDateFeild('');\r\n      }\r\n\r\n      if (\r\n        productDetailData &&\r\n        productDetailData.time &&\r\n        productDetailData.time\r\n      ) {\r\n        setTimeFeild(productDetailData.time);\r\n      } else {\r\n        setTimeFeild('');\r\n      }\r\n\r\n      if (productDetailData && productDetailData.description) {\r\n        setDescription(productDetailData.description);\r\n      } else {\r\n        setDescription('');\r\n      }\r\n\r\n      if (\r\n        productDetailData &&\r\n        productDetailData.bn &&\r\n        productDetailData.bn['description']\r\n      ) {\r\n        setBNDescription(productDetailData.bn['description']);\r\n      } else {\r\n        setBNDescription('');\r\n      }\r\n    }\r\n\r\n    console.log('runnedBitch');\r\n  }, [productDetailState.done]);\r\n\r\n  useEffect(() => {\r\n    if (productDetailState.done && Object.keys(productDetailState).length > 0) {\r\n      const images = productDetailState.data.image;\r\n      let mahImages = [];\r\n\r\n      if (images && images.length > 0) {\r\n        mahImages = images;\r\n      }\r\n\r\n      if (\r\n        productDetailState.data.cover &&\r\n        productDetailState.data.cover['id']\r\n      ) {\r\n        const ixists = images.find(\r\n          (item) => item.id === productDetailState.data.cover['id']\r\n        );\r\n        if (!ixists) {\r\n          mahImages = [productDetailState.data.cover, ...mahImages];\r\n        }\r\n\r\n        setCoverImageId(productDetailState.data.cover['id']);\r\n      }\r\n\r\n      // @ts-ignore\r\n      setmyImages(mahImages);\r\n    }\r\n  }, [productDetailState.done]);\r\n\r\n  useEffect(() => {\r\n    console.log('thumnail', myImages);\r\n    // @ts-ignore\r\n    if (myImages && myImages[0] && myImages.length < 2) {\r\n      console.log('thumnail2', myImages);\r\n\r\n      if (coverImageId !== myImages[0].id) {\r\n        setCoverImageId(myImages[0].id);\r\n        handleSetImageAsThumnail(myImages[0]);\r\n      }\r\n    }\r\n  }, [myImages]);\r\n\r\n  const handleDetachSingleImage = async (id) => {\r\n    await handleDetachImageFromItemSingleFetch({\r\n      urlOptions: {\r\n        placeHolders: {\r\n          imageId: id,\r\n          collection: 'product',\r\n          itemId: productDetailData.id,\r\n        },\r\n      },\r\n    });\r\n  };\r\n\r\n  const handleSetImageAsThumnail = async (image) => {\r\n    const thumbnailRes = await handleSetImageAsThumbnailToItemFetch({\r\n      urlOptions: {\r\n        placeHolders: {\r\n          imageId: image.id,\r\n          collection: 'product',\r\n          itemId: productDetailData.id,\r\n        },\r\n      },\r\n    });\r\n\r\n    console.log('thumbnailRes', thumbnailRes);\r\n\r\n    // @ts-ignore\r\n    if (thumbnailRes && thumbnailRes.status === 'ok') {\r\n      openSuccessNotification('Set as thumbnail!');\r\n      // const positionInBrand = () => {\r\n      //     return productList.map(item => item.id).indexOf(productDetailData.id);\r\n      // }\r\n\r\n      // const index = positionInBrand();\r\n\r\n      // const prevItem = productList.find(item => item.id === productDetailData.id);\r\n\r\n      // if (prevItem) {\r\n      //     console.log('prevItem--', prevItem, 'image--', image);\r\n      //     const updatedItem = Object.assign({}, productList[index], { ...prevItem, cover: image.cover });\r\n      //     const updateProductList = [...productList.slice(0, index), updatedItem, ...productList.slice(index + 1)];\r\n      //     setProductList(updateProductList);\r\n\r\n      // }\r\n    } else {\r\n      openErrorNotification(\"Couldn't set as thumbnail, Something went wrong\");\r\n    }\r\n  };\r\n\r\n  const makeEmptyCategoryOptions = (setEmpty) => {\r\n    setEmpty([]);\r\n  };\r\n\r\n  const handleSubmit = async (values: any, actions: any) => {\r\n    // @ts-ignore\r\n    const imagesIds = myImages\r\n      ? myImages.map((image) => {\r\n          return image.id;\r\n        })\r\n      : [];\r\n\r\n    if (productDetailData && Object.keys(productDetailData).length > 0) {\r\n      const aboutToUpdatedImageIds = [];\r\n\r\n      if (imagesIds && imagesIds.length > 0) {\r\n        imagesIds.forEach((imageId) => {\r\n          if (productDetailData && productDetailData['image']) {\r\n            if (!productDetailData['image'].includes(imageId)) {\r\n              aboutToUpdatedImageIds.push(imageId);\r\n            }\r\n          }\r\n        });\r\n      }\r\n\r\n      if (aboutToUpdatedImageIds[0] && aboutToUpdatedImageIds.length > 1) {\r\n        await handleAttachImageToItemMultipleFetch({\r\n          urlOptions: {\r\n            placeHolders: {\r\n              collection: 'product',\r\n              itemId: productDetailData.id,\r\n            },\r\n          },\r\n          body: {\r\n            image: aboutToUpdatedImageIds,\r\n          },\r\n        });\r\n      } else if (\r\n        aboutToUpdatedImageIds[0] &&\r\n        aboutToUpdatedImageIds.length < 1\r\n      ) {\r\n        await handleAttachImageToItemSingleFetch({\r\n          urlOptions: {\r\n            placeHolders: {\r\n              imageId: aboutToUpdatedImageIds[0].id,\r\n              collection: 'product',\r\n              itemId: productDetailData.id,\r\n            },\r\n          },\r\n        });\r\n      }\r\n    }\r\n\r\n    const updatedProductRes = await handleUpdateProductFetch({\r\n      urlOptions: {\r\n        placeHolders: {\r\n          id: productDetailData.id,\r\n        },\r\n      },\r\n      body: {\r\n        name: values.name.trim(),\r\n        description: description,\r\n        model: values.model,\r\n        unit: values.unit,\r\n        category: categoryOptions,\r\n        tags: tagIds,\r\n        brand: brandId,\r\n        image: imagesIds,\r\n        cover: coverImageId || imagesIds[0] ? imagesIds[0] : '',\r\n        pricing: pricing,\r\n        metaTitle: values.metaTitle,\r\n        metaDescription: values.metaDescription,\r\n        metaTags: metaTags && metaTags.length > 0 ? metaTags.join(',') : '',\r\n\r\n        bn: {\r\n          metaTitle: values.bnMetaTitle,\r\n          metaDescription: values.bnMetaDescription,\r\n          metaTags:\r\n            bnMetaTags && bnMetaTags.length > 0 ? bnMetaTags.join(',') : '',\r\n          name: values.bnName.trim(),\r\n          unit: values.metaUnit,\r\n          description: bnDescription,\r\n        },\r\n      },\r\n    });\r\n\r\n    // @ts-ignore\r\n    if (updatedProductRes && updatedProductRes.status === 'ok') {\r\n      openSuccessNotification('Product Updated');\r\n\r\n      const positionInAttribute = () => {\r\n        return productList.map((item) => item.id).indexOf(productDetailData.id);\r\n      };\r\n\r\n      const index = positionInAttribute();\r\n\r\n      function getCover(id) {\r\n        if (!id || !myImages || !myImages[0]) {\r\n          return '';\r\n        } else {\r\n          if (myImages && myImages.length > 0) {\r\n            const item = myImages.find((item) => item.id === id);\r\n            if (item) {\r\n              return item.cover;\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      // @ts-ignore\r\n      const updatedItem = Object.assign({}, productList[index], {\r\n        ...productDetailData,\r\n        ...updatedProductRes,\r\n        id: productDetailData.id,\r\n        cover: getCover(coverImageId),\r\n      });\r\n      const updateProductList = [\r\n        ...productList.slice(0, index),\r\n        updatedItem,\r\n        ...productList.slice(index + 1),\r\n      ];\r\n      setProductList(updateProductList);\r\n\r\n      setProductEditVisible(false);\r\n\r\n      // setProductDetailData({\r\n      //     // @ts-ignore\r\n      //     ...updatedProductRes,\r\n      //     category: productDetailData.category,\r\n      //     brand: productDetailData.brand,\r\n      //     tags: productDetailData.tags,\r\n      //     cover: productDetailData.cover,\r\n      //     image: productDetailData.image,\r\n      // });\r\n\r\n      // console.log('updatedProductRes', updatedProductRes);\r\n      // setProductList([...productList, {\r\n      //     id: updatedProductRes['id'] || '',\r\n      //     key: updatedProductRes['id'] || '',\r\n      //     name: updatedProductRes['name'] || '',\r\n      //     description: updatedProductRes['description'] || '',\r\n      //     // @ts-ignore\r\n      //     ...updatedProductRes\r\n      // }])\r\n      // @ts-ignore\r\n      //   setmyImages([]);\r\n      //   setCoverImageId('');\r\n      //   setPricing([]);\r\n      //   setTagIds([]);\r\n      //   setSelectedTags([]);\r\n      //   setBrandId('');\r\n      //   setcategoryIds([]);\r\n      //   setCategoryOptions([]);\r\n      //   actions.resetForm();\r\n    } else {\r\n      // openErrorNotification();\r\n    }\r\n\r\n    actions.setSubmitting(false);\r\n  };\r\n\r\n  console.log('updateProductStaet', updateProductState);\r\n  useEffect(() => {\r\n    if (!updateProductState['isLoading']) {\r\n      const error = updateProductState['error'];\r\n      if (error['isError'] && Object.keys(error['error']).length > 0) {\r\n        const errors =\r\n          Object.values(error['error']).length > 0\r\n            ? Object.values(error['error'])\r\n            : [];\r\n        errors.forEach((err, i) => {\r\n          if (typeof err === 'string') {\r\n            openErrorNotification(err);\r\n          } else if (typeof err === 'object') {\r\n            if (err && Object.keys(err).length > 0) {\r\n              const errs = Object.values(err);\r\n              errs.forEach((err) => {\r\n                openErrorNotification(err);\r\n              });\r\n            }\r\n          }\r\n        });\r\n      }\r\n    }\r\n  }, [updateProductState]);\r\n\r\n  const handleCancel = (e: any) => {\r\n    setProductEditVisible(false);\r\n    // setmyImages(false);\r\n    // setCoverImageId('');\r\n    // setPricing([]);\r\n    // setTagIds([]);\r\n    // setSelectedTags([]);\r\n    // setBrandId('');\r\n    // setcategoryIds([]);\r\n    // setCategoryOptions([]);\r\n    // setMetaTags([]);\r\n    // setBnMetaTags([]);\r\n  };\r\n\r\n  const getisSubmitButtonDisabled = (values, isValid) => {\r\n    if (\r\n      !values.name ||\r\n      !(pricing.length > 0) ||\r\n      !(categoryOptions.length > 0) ||\r\n      !isValid\r\n    ) {\r\n      return true;\r\n    }\r\n    return false;\r\n  };\r\n\r\n  const handleImagesDelete = (id) => {\r\n    // @ts-ignore\r\n    const newImages =\r\n      myImages &&\r\n      myImages.filter((image) => {\r\n        return image.id !== id;\r\n      });\r\n\r\n    setmyImages(newImages);\r\n  };\r\n\r\n  const handleDeleteFromSelectedImage = () => {};\r\n\r\n  const handleThumbnailImageDelete = (id) => {\r\n    // @ts-ignore\r\n    const newImages =\r\n      myThumbnailImage &&\r\n      myThumbnailImage.filter((image) => {\r\n        return image.id !== id;\r\n      });\r\n\r\n    if (newImages.length > 0) {\r\n      setmyThumbnailImage(newImages);\r\n    } else setmyThumbnailImage(false);\r\n  };\r\n\r\n  const handleUpdatePricing = (priceItem) => {\r\n    const positionInPricing = () => {\r\n      return pricing.map((item) => item.id).indexOf(priceItem.id);\r\n    };\r\n\r\n    const index = positionInPricing();\r\n\r\n    // @ts-ignore\r\n    const updatedItem = Object.assign({}, pricing[index], { ...priceItem });\r\n    const updatePricingList = [\r\n      ...pricing.slice(0, index),\r\n      updatedItem,\r\n      ...pricing.slice(index + 1),\r\n    ];\r\n\r\n    setPricing(updatePricingList);\r\n\r\n    message.info('Product Pricing Updated');\r\n    seTisPricingEditActive(true);\r\n    setpricingTagActiveKey('2');\r\n  };\r\n\r\n  const handleAddPricing = (priceItem) => {\r\n    setPricing([\r\n      {\r\n        ...priceItem,\r\n        id: pricing.length,\r\n      },\r\n      ...pricing,\r\n    ]);\r\n    message.info('Product Pricing Added');\r\n  };\r\n\r\n  const handleDeletePricing = (id) => {\r\n    const newPricing = pricing.filter((item) => item.id !== id);\r\n    setPricing(newPricing);\r\n    message.info('Product Pricing Deleted');\r\n  };\r\n\r\n  const handleEditPricing = (id) => {\r\n    seTisPricingEditActive(true);\r\n    const pricingItem = pricing.find((item) => item.id === id);\r\n    if (pricingItem) {\r\n      setEditPricingItem(pricingItem);\r\n    }\r\n  };\r\n\r\n  const isCategoryInValid = () => {\r\n    if (\r\n      updateProductState.error['error']['category'] &&\r\n      !categoryids &&\r\n      categoryids.length\r\n    ) {\r\n      return true;\r\n    } else if (categoryids && categoryids.length > 0) {\r\n      return false;\r\n    }\r\n  };\r\n\r\n  const handleDateChange = (date, dateString) => {\r\n    setDateFeild(dateString);\r\n    // console.log('date', date, dateString);\r\n  };\r\n\r\n  const handleTimeChange = (date, dateString) => {\r\n    setTimeFeild(dateString);\r\n    // console.log('date', date, dateString);\r\n  };\r\n\r\n  console.log('productDetailData', productDetailData);\r\n  console.log('productDetailState', productDetailState);\r\n\r\n  useEffect(() => {\r\n    if (\r\n      productDetailState.data &&\r\n      Object.keys(productDetailState.data).length > 0 &&\r\n      productDetailState.data.metaTags\r\n    ) {\r\n      const metaTags = productDetailState.data.metaTags.split(',');\r\n\r\n      console.log('localMetaTags', metaTags);\r\n\r\n      const bnMetaTags = productDetailState.data.bn['metaTags'].split(',');\r\n      setMetaTags(metaTags || []);\r\n      setBnMetaTags(bnMetaTags || []);\r\n    }\r\n  }, [productDetailState['done']]);\r\n\r\n  console.log('productDetailData');\r\n\r\n  return (\r\n    <>\r\n      <Formik\r\n        onSubmit={(values, actions) => handleSubmit(values, actions)}\r\n        validationSchema={validationSchema}\r\n        validateOnBlur={false}\r\n        enableReinitialize={true}\r\n        initialValues={{\r\n          ...initialValues,\r\n          ...{\r\n            ...productDetailData,\r\n            ...(productDetailState['data'] &&\r\n              Object.keys(productDetailState['data']).length > 0 &&\r\n              productDetailState['data']['bn'] && {\r\n                bnMetaTitle: productDetailState['data']['bn'].metaTitle,\r\n                bnMetaDescription:\r\n                  productDetailState['data']['bn'].metaDescription,\r\n                bnName: productDetailState['data']['bn'].name,\r\n                metaUnit: productDetailState['data']['bn'].unit,\r\n                bnDescription: productDetailState['data']['bn'].description,\r\n              }),\r\n          },\r\n        }}\r\n      >\r\n        {({\r\n          handleChange,\r\n          values,\r\n          handleSubmit,\r\n          errors,\r\n          isValid,\r\n          isSubmitting,\r\n          touched,\r\n          handleBlur,\r\n          setFieldTouched,\r\n          handleReset,\r\n        }) => (\r\n          <>\r\n            <section className='addProductGridContainer'>\r\n              <div className='addProductGridContainer__left'>\r\n                <div className='addProductGridContainer__name'>\r\n                  <div className='addProductGridContainer__item-header'>\r\n                    <h3>Product Information *</h3>\r\n                    <div\r\n                      className={\r\n                        values.name && values.name.length > 2\r\n                          ? 'checkicon-active'\r\n                          : 'checkicon'\r\n                      }\r\n                    >\r\n                      <CheckCircleOutlined />\r\n                    </div>\r\n                  </div>\r\n                  <div className='addProductGridContainer__item-body'>\r\n                    <Input\r\n                      label='Name *'\r\n                      value={values.name}\r\n                      placeHolder={'Rafty ox'}\r\n                      name='name'\r\n                      isError={\r\n                        (touched.name && errors.name) ||\r\n                        (!isSubmitting &&\r\n                          updateProductState.error['error']['name'])\r\n                      }\r\n                      errorString={\r\n                        (touched.name && errors.name) ||\r\n                        (!isSubmitting &&\r\n                          updateProductState.error['error']['name'])\r\n                      }\r\n                      onChange={(e: any) => {\r\n                        handleChange(e);\r\n                        setFieldTouched('name');\r\n                      }}\r\n                    />\r\n\r\n                    <Input\r\n                      label='BN Name'\r\n                      value={values.bnName}\r\n                      placeHolder={'রাফতি অক্স'}\r\n                      name='bnName'\r\n                      isError={\r\n                        (touched.bnName && errors.bnName) ||\r\n                        (!isSubmitting &&\r\n                          updateProductState.error['error']['bnName'])\r\n                      }\r\n                      errorString={\r\n                        (touched.bnName && errors.bnName) ||\r\n                        (!isSubmitting &&\r\n                          updateProductState.error['error']['bnName'])\r\n                      }\r\n                      onChange={(e: any) => {\r\n                        handleChange(e);\r\n                        setFieldTouched('bnName');\r\n                      }}\r\n                    />\r\n\r\n                    {/* <div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\tdisplay: 'flex',\r\n\t\t\t\t\t\t\t\t\t\t\t\tjustifyContent: 'space-between'\r\n\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\twidth: '48%',\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<DatePicker\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabel='Date'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={handleDateChange} />\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\twidth: '48%'\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<DatePicker\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tdate={date}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\twithTime={true}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder='Select time'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabel='Time'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={handleTimeChange} />\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t</div> */}\r\n\r\n                    {/* \r\n\t\t\t\t\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\t\t\t\t\trows={1}\r\n\t\t\t\t\t\t\t\t\t\t\t\tlabel='Venue'\r\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.venue}\r\n\t\t\t\t\t\t\t\t\t\t\t\tname='venue'\r\n\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.venue && errors.venue) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateProductState.error['error']['venue'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.venue && errors.venue) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateProductState.error['error']['venue'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('venue');\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\t\tlabel='Purchase Limit'\r\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.purchaseLimit}\r\n\t\t\t\t\t\t\t\t\t\t\t\ttype='number'\r\n\t\t\t\t\t\t\t\t\t\t\t\tname='purchaseLimit'\r\n\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.purchaseLimit && errors.purchaseLimit) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateProductState.error['error']['purchaseLimit'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.purchaseLimit && errors.purchaseLimit) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateProductState.error['error']['purchaseLimit'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('purchaseLimit');\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t/> */}\r\n\r\n                    <Input\r\n                      label='Unit'\r\n                      value={values.unit}\r\n                      name='unit'\r\n                      placeHolder={'KG,POUND,GM'}\r\n                      isError={\r\n                        (touched.unit && errors.unit) ||\r\n                        (!isSubmitting &&\r\n                          updateProductState.error['error']['unit'])\r\n                      }\r\n                      errorString={\r\n                        (touched.unit && errors.unit) ||\r\n                        (!isSubmitting &&\r\n                          updateProductState.error['error']['unit'])\r\n                      }\r\n                      onChange={(e: any) => {\r\n                        handleChange(e);\r\n                        setFieldTouched('unit');\r\n                      }}\r\n                    />\r\n\r\n                    <Input\r\n                      label='BN Unit'\r\n                      value={values.bnUnit}\r\n                      placeHolder={'কেজি,গ্রাম'}\r\n                      name='bnUnit'\r\n                      isError={\r\n                        (touched.bnUnit && errors.bnUnit) ||\r\n                        (!isSubmitting &&\r\n                          updateProductState.error['error']['bnUnit'])\r\n                      }\r\n                      errorString={\r\n                        (touched.bnUnit && errors.bnUnit) ||\r\n                        (!isSubmitting &&\r\n                          updateProductState.error['error']['bnUnit'])\r\n                      }\r\n                      onChange={(e: any) => {\r\n                        handleChange(e);\r\n                        setFieldTouched('bnUnit');\r\n                      }}\r\n                    />\r\n\r\n                    <Input\r\n                      label='Model Number'\r\n                      value={values.model}\r\n                      name='model'\r\n                      isError={\r\n                        (touched.model && errors.model) ||\r\n                        (!isSubmitting &&\r\n                          updateProductState.error['error']['model'])\r\n                      }\r\n                      errorString={\r\n                        (touched.model && errors.model) ||\r\n                        (!isSubmitting &&\r\n                          updateProductState.error['error']['model'])\r\n                      }\r\n                      onChange={(e: any) => {\r\n                        handleChange(e);\r\n                        setFieldTouched('model');\r\n                      }}\r\n                    />\r\n\r\n                    <h3 className='inputFieldLabel'>Description</h3>\r\n\r\n                    <div\r\n                      style={{\r\n                        width: '100%',\r\n                        maxWidth: '100%',\r\n                      }}\r\n                    >\r\n                      <CKEditor\r\n                        editor={ClassicEditor}\r\n                        data={description}\r\n                        onInit={(editor) => {\r\n                          // You can store the \"editor\" and use when it is needed.\r\n                          console.log('Editor is ready to use!', editor);\r\n                        }}\r\n                        onChange={(event, editor) => {\r\n                          const data = editor.getData();\r\n                          setDescription(data);\r\n                        }}\r\n                        onBlur={(event, editor) => {\r\n                          console.log('Blur.', editor);\r\n                        }}\r\n                        onFocus={(event, editor) => {\r\n                          console.log('Focus.', editor);\r\n                        }}\r\n                      />\r\n                    </div>\r\n\r\n                    <div\r\n                      style={{\r\n                        marginTop: '15px',\r\n                      }}\r\n                    ></div>\r\n\r\n                    <h3 className='inputFieldLabel'>BN Description</h3>\r\n\r\n                    <div\r\n                      style={{\r\n                        width: '100%',\r\n                        maxWidth: '100%',\r\n                      }}\r\n                    >\r\n                      <CKEditor\r\n                        editor={ClassicEditor}\r\n                        data={bnDescription}\r\n                        onInit={(editor) => {\r\n                          // You can store the \"editor\" and use when it is needed.\r\n                          console.log('Editor is ready to use!', editor);\r\n                        }}\r\n                        onChange={(event, editor) => {\r\n                          const data = editor.getData();\r\n                          setBNDescription(data);\r\n                        }}\r\n                        onBlur={(event, editor) => {\r\n                          console.log('Blur.', editor);\r\n                        }}\r\n                        onFocus={(event, editor) => {\r\n                          console.log('Focus.', editor);\r\n                        }}\r\n                      />\r\n                    </div>\r\n\r\n                    <div\r\n                      style={{\r\n                        marginTop: '15px',\r\n                      }}\r\n                    >\r\n                      {' '}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                <div className='addProductGridContainer__price'>\r\n                  <div className='addProductGridContainer__item-header'>\r\n                    <h3>Product Pricing *</h3>\r\n\r\n                    <div\r\n                      className={\r\n                        pricing && pricing.length > 0\r\n                          ? 'checkicon-active'\r\n                          : 'checkicon'\r\n                      }\r\n                    >\r\n                      <CheckCircleOutlined />\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className='addProductGridContainer__item-body'>\r\n                    <Tabs\r\n                      animated={true}\r\n                      tabPosition='top'\r\n                      type='card'\r\n                      activeKey={pricingTagActiveKey}\r\n                      onChange={(value) => {\r\n                        setpricingTagActiveKey(`${value}`);\r\n                      }}\r\n                    >\r\n                      <TabPane tab='Add Variation' key='1'>\r\n                        <Pricing\r\n                          handleAddPricing={handleAddPricing}\r\n                          pricingItem={editpricingItem}\r\n                          handleUpdatePricing={handleUpdatePricing}\r\n                          isPricingEditActive={isPricingEditActive}\r\n                        />\r\n                      </TabPane>\r\n                      <TabPane tab='Pricing List' key='2'>\r\n                        <div className='addProductGridContainer__item-body-pricingContainer'>\r\n                          {pricing.length > 0 &&\r\n                            pricing.map((item) => {\r\n                              return (\r\n                                <div className='addProductGridContainer__item-body-pricingContainer-item'>\r\n                                  <div className='addProductGridContainer__item-body-pricingContainer-item-edit'>\r\n                                    {/* <span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<EditOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</span> */}\r\n                                    <span\r\n                                      className='pricingEditIcon'\r\n                                      onClick={() => {\r\n                                        handleEditPricing(item.id);\r\n                                        setpricingTagActiveKey('1');\r\n                                      }}\r\n                                    >\r\n                                      <EditOutlined />\r\n                                    </span>\r\n                                    <span\r\n                                      className='pricingDeleteIcon'\r\n                                      onClick={() =>\r\n                                        handleDeletePricing(item.id)\r\n                                      }\r\n                                    >\r\n                                      <DeleteOutlined />\r\n                                    </span>\r\n                                  </div>\r\n                                  <div className='addProductGridContainer__item-body-pricingContainer-item-two'>\r\n                                    <div>\r\n                                      <h3>Price</h3>\r\n                                      <div className='addProductGridContainer__item-body-pricingContainer-item-body'>\r\n                                        {item.price.offer ? (\r\n                                          <>\r\n                                            <h4>{item.price.offer}</h4>/\r\n                                            <h5\r\n                                              style={{\r\n                                                textDecoration: 'line-through',\r\n                                              }}\r\n                                            >\r\n                                              {item.price.regular}\r\n                                            </h5>\r\n                                          </>\r\n                                        ) : (\r\n                                          <h4>{item.price.regular}</h4>\r\n                                        )}\r\n                                      </div>\r\n                                    </div>\r\n\r\n                                    {item.stock && item.stock['available'] && (\r\n                                      <div>\r\n                                        <Badge\r\n                                          overflowCount={999}\r\n                                          count={item.stock.available}\r\n                                        >\r\n                                          <h3>Stock</h3>\r\n                                        </Badge>\r\n                                        {item.stock['minimum'] && (\r\n                                          <>\r\n                                            <div className='addProductGridContainer__item-body-pricingContainer-item-body'>\r\n                                              <div>\r\n                                                <h6>\r\n                                                  min\r\n                                                  <Badge\r\n                                                    className='site-badge-count-4'\r\n                                                    overflowCount={999}\r\n                                                    count={item.stock.minimum}\r\n                                                  />\r\n                                                </h6>\r\n                                              </div>\r\n                                            </div>\r\n                                          </>\r\n                                        )}\r\n                                      </div>\r\n                                    )}\r\n                                  </div>\r\n\r\n                                  {item.attribute &&\r\n                                    Object.values(item.attribute).length >\r\n                                      0 && (\r\n                                      <>\r\n                                        <h3>Attributes</h3>\r\n                                        <div className='addProductGridContainer__item-body-pricingContainer-item-body'>\r\n                                          {item.attribute &&\r\n                                            Object.keys(item.attribute).length >\r\n                                              0 &&\r\n                                            Object.keys(item.attribute).map(\r\n                                              (attributeItem) => {\r\n                                                return (\r\n                                                  <div>\r\n                                                    <h6>{attributeItem}</h6>\r\n                                                    <h4>\r\n                                                      {\r\n                                                        item.attribute[\r\n                                                          attributeItem\r\n                                                        ]\r\n                                                      }\r\n                                                    </h4>\r\n                                                  </div>\r\n                                                );\r\n                                              }\r\n                                            )}\r\n                                        </div>\r\n                                      </>\r\n                                    )}\r\n                                </div>\r\n                              );\r\n                            })}\r\n\r\n                          {!(pricing.length > 0) && (\r\n                            <div\r\n                              style={{\r\n                                width: '100%',\r\n                                display: 'flex',\r\n                                justifyContent: 'center',\r\n                              }}\r\n                            >\r\n                              <Empty\r\n                                description='No Pricing added'\r\n                                image={Empty.PRESENTED_IMAGE_SIMPLE}\r\n                              />\r\n                            </div>\r\n                          )}\r\n                        </div>\r\n                      </TabPane>\r\n                    </Tabs>\r\n\r\n                    <div className='addProductGridContainer__item-body-container'></div>\r\n                  </div>\r\n                </div>\r\n\r\n                <div className='addProductGridContainer__image'>\r\n                  <div className='addProductGridContainer__item-header'>\r\n                    <h3>Image</h3>\r\n\r\n                    <Tooltip\r\n                      placement='left'\r\n                      title={\r\n                        'Click on the image to select cover image, By default 1st image is selected as cover'\r\n                      }\r\n                    >\r\n                      <a href='###'>\r\n                        <InfoCircleOutlined />\r\n                      </a>\r\n                    </Tooltip>\r\n                  </div>\r\n\r\n                  <div\r\n                    style={{\r\n                      padding: '10px',\r\n                    }}\r\n                    className='aboutToUploadImagesContainer'\r\n                  >\r\n                    {productDetailState.isLoading && (\r\n                      <div\r\n                        style={{\r\n                          padding: '20px 0',\r\n                        }}\r\n                      >\r\n                        <Spin />\r\n                      </div>\r\n                    )}\r\n                    {productDetailState.done && (\r\n                      <>\r\n                        {myImages &&\r\n                          // @ts-ignore\r\n                          myImages.length > 0 &&\r\n                          myImages.map((image, index) => {\r\n                            return (\r\n                              <div className='aboutToUploadImagesContainer__item'>\r\n                                <div\r\n                                  className='aboutToUploadImagesContainer__item-imgContainer'\r\n                                  onClick={() => {\r\n                                    setCoverImageId(image.id);\r\n                                    handleSetImageAsThumnail(image);\r\n                                  }}\r\n                                >\r\n                                  <img src={image.cover} alt={image.alt} />\r\n                                </div>\r\n\r\n                                <span\r\n                                  onClick={() => {\r\n                                    handleImagesDelete(image.id);\r\n                                    handleDetachSingleImage(image.id);\r\n                                  }}\r\n                                  className='aboutToUploadImagesContainer__item-remove'\r\n                                >\r\n                                  <CloseOutlined />\r\n                                </span>\r\n\r\n                                {coverImageId === image.id ? (\r\n                                  <span className='aboutToUploadImagesContainer__item-cover'>\r\n                                    <CheckOutlined />\r\n                                  </span>\r\n                                ) : (\r\n                                  !coverImageId &&\r\n                                  index === 0 && (\r\n                                    <span className='aboutToUploadImagesContainer__item-cover'>\r\n                                      <CheckOutlined />\r\n                                    </span>\r\n                                  )\r\n                                )}\r\n                              </div>\r\n                            );\r\n                          })}\r\n\r\n                        <Tooltip title={'Attach images'}>\r\n                          <div\r\n                            onClick={() => {\r\n                              setvisible(true);\r\n                              setisModalOpenForImages(true);\r\n                              setisModalOpenForThumbnail(false);\r\n                            }}\r\n                            className='aboutToUploadImagesContainer__uploadItem'\r\n                          >\r\n                            {/* <FileAddOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FileImageTwoTone />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FileImageOutlined /> */}\r\n                            <FileImageFilled />\r\n                            {/* <h5>\r\n\t\t\t\t\t\t\t\t\t\t\t\t     Select From Library\r\n\t\t\t\t\t\t\t\t\t\t\t<     /h5> */}\r\n                            <span className='aboutToUploadImagesContainer__uploadItem-plus'>\r\n                              <PlusOutlined />\r\n                            </span>\r\n                          </div>\r\n                        </Tooltip>\r\n                      </>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className='addProductGridContainer__right'>\r\n                <div className='addProductGridContainer__category'>\r\n                  <div className='addProductGridContainer-rightItemContainer'>\r\n                    <div className='addProductGridContainer-rightItemContainer-header'>\r\n                      <h3>Categories *</h3>\r\n\r\n                      {/* <Tooltip\r\n                        color='red'\r\n                        visible={\r\n                          updateProductState.error['error']['category'] &&\r\n                          !(categoryids.length > 0)\r\n                        }\r\n                        placement='left'\r\n                        title={'Select at least one category'}\r\n                      >\r\n                        <div\r\n                          className={\r\n                            !(categoryids.length > 0) &&\r\n                            !updateProductState.error['error']['category']\r\n                              ? 'checkicon'\r\n                              : updateProductState.error['error']['category']\r\n                              ? 'checkicon-error'\r\n                              : 'checkicon-active'\r\n                          }\r\n                        >\r\n                          <CheckCircleOutlined />\r\n                        </div>\r\n                      </Tooltip> */}\r\n                      <div\r\n                        className={\r\n                          !(categoryids.length > 0) &&\r\n                          !updateProductState.error['error']['category']\r\n                            ? 'checkicon'\r\n                            : updateProductState.error['error']['category']\r\n                            ? 'checkicon-error'\r\n                            : 'checkicon-active'\r\n                        }\r\n                      >\r\n                        <CheckCircleOutlined />\r\n                      </div>\r\n                    </div>\r\n                    <div className='addProductGridContainer-rightItemContainer-body'>\r\n                      <Categories\r\n                        setCategoryOptions={setCategoryOptions}\r\n                        categoryOptions={categoryOptions}\r\n                        setcategoryIds={setcategoryIds}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                <div className='addProductGridContainer__tag'>\r\n                  <div className='addProductGridContainer-rightItemContainer'>\r\n                    <div className='addProductGridContainer-rightItemContainer-header'>\r\n                      <h3>Tags</h3>\r\n                    </div>\r\n                    <div className='addProductGridContainer-rightItemContainer-body'>\r\n                      <Tags\r\n                        setSelectedTags={setSelectedTags}\r\n                        selectedTags={selectedTags}\r\n                        setTagIds={setTagIds}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div className='addProductGridContainer__brand'>\r\n                  <div className='addProductGridContainer-rightItemContainer'>\r\n                    <div className='addProductGridContainer-rightItemContainer-header'>\r\n                      <h3>Brand</h3>\r\n                    </div>\r\n                    <div className='addProductGridContainer-rightItemContainer-body'>\r\n                      <Brands\r\n                        productDetailState={productDetailState}\r\n                        brandId={brandId}\r\n                        setBrandId={setBrandId}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                <div\r\n                  className='addProductGridContainer__brand'\r\n                  style={{\r\n                    marginTop: '10px',\r\n                  }}\r\n                >\r\n                  <div className='addProductGridContainer-rightItemContainer'>\r\n                    <div className='addProductGridContainer-rightItemContainer-header'>\r\n                      <h3>Meta Tags</h3>\r\n\r\n                      <Tooltip\r\n                        placement='left'\r\n                        title={\r\n                          \"Meta data will be used to make the user's easy and for search engine optimization.\"\r\n                        }\r\n                      >\r\n                        <a href='###'>\r\n                          <InfoCircleOutlined />\r\n                        </a>\r\n                      </Tooltip>\r\n                    </div>\r\n                    <div className='addProductGridContainer-rightItemContainer-body'>\r\n                      <Input\r\n                        label='Meta title'\r\n                        value={values.metaTitle}\r\n                        placeHolder={'...'}\r\n                        name='metaTitle'\r\n                        isError={\r\n                          (touched.metaTitle && errors.metaTitle) ||\r\n                          (!isSubmitting &&\r\n                            updateProductState.error['error']['metaTitle'])\r\n                        }\r\n                        errorString={\r\n                          (touched.metaTitle && errors.metaTitle) ||\r\n                          (!isSubmitting &&\r\n                            updateProductState.error['error']['metaTitle'])\r\n                        }\r\n                        onChange={(e: any) => {\r\n                          handleChange(e);\r\n                          setFieldTouched('metaTitle');\r\n                        }}\r\n                      />\r\n\r\n                      <Input\r\n                        label='BN Meta title'\r\n                        value={values.bnMetaTitle}\r\n                        placeHolder={'...'}\r\n                        name='bnMetaTitle'\r\n                        isError={\r\n                          (touched.bnMetaTitle && errors.bnMetaTitle) ||\r\n                          (!isSubmitting &&\r\n                            updateProductState.error['error']['bnMetaTitle'])\r\n                        }\r\n                        errorString={\r\n                          (touched.bnMetaTitle && errors.bnMetaTitle) ||\r\n                          (!isSubmitting &&\r\n                            updateProductState.error['error']['bnMetaTitle'])\r\n                        }\r\n                        onChange={(e: any) => {\r\n                          handleChange(e);\r\n                          setFieldTouched('bnMetaTitle');\r\n                        }}\r\n                      />\r\n\r\n                      <TextArea\r\n                        label='Meta description'\r\n                        value={values.metaDescription}\r\n                        placeholder={'meta...'}\r\n                        name='metaDescription'\r\n                        isError={\r\n                          (touched.metaDescription && errors.metaDescription) ||\r\n                          (!isSubmitting &&\r\n                            updateProductState.error['error'][\r\n                              'metaDescription'\r\n                            ])\r\n                        }\r\n                        errorString={\r\n                          (touched.metaDescription && errors.metaDescription) ||\r\n                          (!isSubmitting &&\r\n                            updateProductState.error['error'][\r\n                              'metaDescription'\r\n                            ])\r\n                        }\r\n                        onChange={(e: any) => {\r\n                          handleChange(e);\r\n                          setFieldTouched('metaDescription');\r\n                        }}\r\n                      />\r\n\r\n                      <TextArea\r\n                        label='BN Meta Description'\r\n                        value={values.bnMetaDescription}\r\n                        placeholder={'এইয় মেট...'}\r\n                        name='bnMetaDescription'\r\n                        isError={\r\n                          (touched.bnMetaDescription &&\r\n                            errors.bnMetaDescription) ||\r\n                          (!isSubmitting &&\r\n                            updateProductState.error['error'][\r\n                              'bnMetaDescription'\r\n                            ])\r\n                        }\r\n                        errorString={\r\n                          (touched.bnMetaDescription &&\r\n                            errors.bnMetaDescription) ||\r\n                          (!isSubmitting &&\r\n                            updateProductState.error['error'][\r\n                              'bnMetaDescription'\r\n                            ])\r\n                        }\r\n                        onChange={(e: any) => {\r\n                          handleChange(e);\r\n                          setFieldTouched('bnMetaDescription');\r\n                        }}\r\n                      />\r\n\r\n                      <h3 className='inputFieldLabel'>Meta Tags</h3>\r\n\r\n                      <MetaTags\r\n                        // @ts-ignore\r\n                        setTags={setMetaTags}\r\n                        tags={metaTags}\r\n                      />\r\n\r\n                      <div\r\n                        style={{\r\n                          marginTop: '15px',\r\n                        }}\r\n                      ></div>\r\n\r\n                      <h3 className='inputFieldLabel'>BN Meta Tags</h3>\r\n\r\n                      <MetaTags\r\n                        // @ts-ignore\r\n                        setTags={setBnMetaTags}\r\n                        tags={bnMetaTags}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </section>\r\n\r\n            <div\r\n              style={{\r\n                padding: '15px',\r\n                display: 'flex',\r\n                justifyContent: 'flex-end',\r\n              }}\r\n            >\r\n              <Button\r\n                style={{\r\n                  color: '#555',\r\n                  marginRight: '10px',\r\n                }}\r\n                className='btnPrimaryClassNameoutline-cancle'\r\n                onClick={() => setProductEditVisible(false)}\r\n                type='default'\r\n              >\r\n                Cancel\r\n              </Button>\r\n\r\n              <Button\r\n                className='btnPrimaryClassNameoutline'\r\n                onClick={handleSubmit}\r\n                loading={updateProductState.isLoading}\r\n                type='link'\r\n                icon={<CheckOutlined />}\r\n              >\r\n                Update\r\n              </Button>\r\n            </div>\r\n\r\n            <MediaLibrary\r\n              setvisible={setvisible}\r\n              visible={visible}\r\n              setmyImages={setmyImages}\r\n              myImages={myImages}\r\n              setmyThumbnailImage={setmyThumbnailImage}\r\n              isModalOpenForThumbnail={isModalOpenForThumbnail}\r\n              isModalOpenForImages={isModalOpenForImages}\r\n            />\r\n          </>\r\n        )}\r\n      </Formik>\r\n    </>\r\n  );\r\n};\r\n\r\nconst AddNewProduct = ({\r\n  productEditVisible,\r\n  setProductEditVisible,\r\n  productDetailData,\r\n  setProductList,\r\n  productList,\r\n}: Props) => {\r\n  const handleCancel = () => {\r\n    setProductEditVisible(false);\r\n  };\r\n  return (\r\n    <Modal\r\n      style={{\r\n        top: '40px',\r\n      }}\r\n      bodyStyle={{\r\n        margin: 0,\r\n        padding: 0,\r\n      }}\r\n      width={'70vw'}\r\n      title='Product Edit'\r\n      visible={productEditVisible}\r\n      // onOk={(e: any) => handleSubmit(e)}\r\n      onCancel={handleCancel}\r\n      destroyOnClose={true}\r\n      okText='Update'\r\n      footer={false}\r\n      okButtonProps={{\r\n        //   loading: isSubmitting,\r\n        htmlType: 'submit',\r\n      }}\r\n    >\r\n      <ModalChildComponent\r\n        productList={productList}\r\n        setProductList={setProductList}\r\n        setProductEditVisible={setProductEditVisible}\r\n        productEditVisible={productEditVisible}\r\n        productDetailData={productDetailData}\r\n        handleCancel={handleCancel}\r\n      />\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default AddNewProduct;\r\n\r\n/*\r\n\r\n\r\nProduct variation ---->\r\n\r\nPrice [title]\r\n\t[regular input field] [offer inputfield]\r\n\r\nStock [title]\r\n\t[available input field] [minimum inputfield]\r\n\r\ndefault [default can be set to true]\r\n\r\nattributes [title]\r\n\t[add attributes name]\r\n\t\t[add attrubutes value]\r\n\r\n\t[add attributes name]\r\n\t\t[add attrubutes value\r\n\r\n*/ //\r\n","import React, { useState, useEffect } from 'react';\r\nimport { withRouter, useHistory } from 'react-router-dom';\r\nimport {\r\n  notification,\r\n  Empty,\r\n  Table,\r\n  Badge,\r\n  Menu,\r\n  Dropdown,\r\n  Space,\r\n  Tag,\r\n  Button,\r\n  Input,\r\n  Tooltip,\r\n  Popconfirm,\r\n} from 'antd';\r\nimport {\r\n  CheckCircleOutlined,\r\n  DownOutlined,\r\n  PlusOutlined,\r\n  EditOutlined,\r\n  DeleteOutlined,\r\n  CheckOutlined,\r\n} from '@ant-design/icons';\r\n\r\n/// import hooks\r\nimport { useHandleFetch } from '../../hooks';\r\n\r\n// import components\r\nimport { DataTableSkeleton } from '../../components/Placeholders';\r\nimport AddNewProduct from './AddNewProduct';\r\nimport ProductQuickEdit from './ProductQuickEdit';\r\n// import QuickEdit from './QuickEdit';\r\n\r\n// import state\r\nimport { isAccess } from '../../utils';\r\nimport { connect } from 'react-redux';\r\n\r\nconst { Column, ColumnGroup } = Table;\r\nconst { Search } = Input;\r\n\r\nconst openSuccessNotification = (msg?: any) => {\r\n  notification.success({\r\n    message: msg || 'Product Deleted',\r\n    description: '',\r\n    icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n  });\r\n};\r\n\r\ninterface myTableProps {\r\n  data: any;\r\n  setProductList: any;\r\n  roles: any;\r\n}\r\n\r\nconst MyTable = ({ data, setProductList, roles }: myTableProps) => {\r\n  const [visible, setvisible] = useState(false);\r\n  const [activeCategoryForEdit, setactiveCategoryForEdit] = useState(false);\r\n  const [deleteProductState, handleDeleteProductFetch] = useHandleFetch(\r\n    {},\r\n    'deleteProduct'\r\n  );\r\n  const [productDetailVisible, setproductDetailVisible] = useState(false);\r\n  const [updateOrderStatusState, handleUpdateOrderStatusFetch] = useHandleFetch(\r\n    {},\r\n    'updateStock'\r\n  );\r\n\r\n  const history = useHistory();\r\n\r\n  const handleDeleteProduct = async (id) => {\r\n    const deleteProductRes = await handleDeleteProductFetch({\r\n      urlOptions: {\r\n        placeHolders: {\r\n          id,\r\n        },\r\n      },\r\n    });\r\n\r\n    // @ts-ignore\r\n    if (deleteProductRes && deleteProductRes.status === 'ok') {\r\n      openSuccessNotification();\r\n      const newProductList = data.filter((item) => item.id !== id);\r\n      setProductList(newProductList);\r\n    }\r\n\r\n    // console.log('deleteProductRes', deleteProductRes)\r\n  };\r\n\r\n  const handleUpdateOrderStatus = async (record, id, newStatus) => {\r\n    const updateOrderStatusRes = await handleUpdateOrderStatusFetch({\r\n      body: {\r\n        inStock: newStatus,\r\n      },\r\n      urlOptions: {\r\n        placeHolders: {\r\n          id,\r\n        },\r\n      },\r\n    });\r\n\r\n    // @ts-ignore\r\n    if (updateOrderStatusRes && updateOrderStatusRes.status === 'ok') {\r\n      openSuccessNotification('Updated Stock');\r\n\r\n      const positionInTag = () => {\r\n        return data.map((item) => item.id).indexOf(id);\r\n      };\r\n\r\n      const index = positionInTag();\r\n      console.log('recordis', record, index);\r\n\r\n      // @ts-ignore\r\n      const updatedItem = Object.assign({}, data[index], {\r\n        inStock: newStatus,\r\n      });\r\n      const updateOrderList = [\r\n        ...data.slice(0, index),\r\n        updatedItem,\r\n        ...data.slice(index + 1),\r\n      ];\r\n      console.log('updateOrderList', updateOrderList, '-----', setProductList);\r\n      setProductList(updateOrderList);\r\n    }\r\n  };\r\n\r\n  const StatusItemMenu = (record, id) => {\r\n    return (\r\n      <Menu>\r\n        <Menu.Item\r\n          onClick={() => handleUpdateOrderStatus(record, id, true)}\r\n          key='1'\r\n          icon={<CheckOutlined />}\r\n        >\r\n          In stock\r\n        </Menu.Item>\r\n\r\n        <Menu.Item\r\n          onClick={() => handleUpdateOrderStatus(record, id, false)}\r\n          key='1'\r\n          icon={<CheckOutlined />}\r\n        >\r\n          Out of stock\r\n        </Menu.Item>\r\n\r\n        {/* <Menu.Item\r\n                      onClick={() => handleUpdateOrderStatus(record,id,'deliver')}\r\n                      key=\"1\" icon={<CheckOutlined />}>\r\n                      Delivered\r\n                    </Menu.Item>\r\n              */}\r\n      </Menu>\r\n    );\r\n  };\r\n\r\n  const getCover = (record: any) => {\r\n    if (record.cover) {\r\n      return record.cover;\r\n    } else return '';\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Table\r\n        style={{\r\n          paddingTop: '10px',\r\n          borderRadius: '5px !important',\r\n          overflow: 'hidden',\r\n          boxShadow:\r\n            '0 0.125rem 0.625rem rgba(227, 231, 250, 0.3), 0 0.0625rem 0.125rem rgba(206, 220, 233, 0.4)',\r\n        }}\r\n        // expandable={{\r\n        //     expandedRowRender: record => <p style={{ margin: 0 }}>{record.name}</p>,\r\n        //     rowExpandable: record => record.name !== 'Not Expandable',\r\n        //   }}\r\n        // bordered={true}\r\n        size='small'\r\n        // pagination={false}\r\n        dataSource={data}\r\n        tableLayout={'auto'}\r\n        onHeaderRow={(column) => {\r\n          return {\r\n            style: {\r\n              color: 'red !important',\r\n            },\r\n          };\r\n        }}\r\n      >\r\n        <Column\r\n          title=''\r\n          dataIndex='cover'\r\n          key='id'\r\n          width={'80px'}\r\n          className='classnameofthecolumn'\r\n          render={(cover, record: any) => (\r\n            <>\r\n              <div\r\n                className='listCoverImage'\r\n                onClick={() => {\r\n                  history.push(`/admin/product/${record.id}`);\r\n                  setactiveCategoryForEdit(record);\r\n                }}\r\n              >\r\n                <img src={getCover(record)} alt='' />\r\n              </div>\r\n            </>\r\n          )}\r\n        />\r\n\r\n        <Column\r\n          title='Name'\r\n          dataIndex='name'\r\n          key='id'\r\n          className='classnameofthecolumn'\r\n          render={(text, record: any) => (\r\n            <>\r\n              <h4\r\n                onClick={() => {\r\n                  history.push(`/admin/product/${record.id}`);\r\n                  setactiveCategoryForEdit(record);\r\n                }}\r\n                style={{\r\n                  fontWeight: 400,\r\n                  color: '#555',\r\n                  cursor: 'pointer',\r\n                }}\r\n              >\r\n                {text}\r\n              </h4>\r\n            </>\r\n          )}\r\n        />\r\n\r\n        <Column\r\n          title='Offer Price'\r\n          dataIndex='offerPrice'\r\n          key='id'\r\n          className='classnameofthecolumn'\r\n        />\r\n\r\n        <Column\r\n          title='Price'\r\n          dataIndex='price'\r\n          key='id'\r\n          className='classnameofthecolumn'\r\n        />\r\n\r\n        <Column\r\n          title='Available'\r\n          dataIndex='available'\r\n          key='id'\r\n          className='classnameofthecolumn'\r\n        />\r\n\r\n        <Column\r\n          align='right'\r\n          title='Stock'\r\n          dataIndex='inStock'\r\n          key='id'\r\n          className='classnameofthecolumn'\r\n          render={(text, record: any) => (\r\n            <>\r\n              {isAccess('postCatalogue', roles) ? (\r\n                <Dropdown\r\n                  overlay={() => StatusItemMenu(record, record.id)}\r\n                  placement='bottomRight'\r\n                >\r\n                  <a href='##'>\r\n                    <span\r\n                      // className={'product-attributeTag'}\r\n                      style={{\r\n                        fontSize: '12px',\r\n                      }}\r\n                    >\r\n                      {text ? 'In Stock' : 'Out of stock'}\r\n                      <span\r\n                        style={{\r\n                          marginLeft: '5px',\r\n                          fontSize: '10px',\r\n                        }}\r\n                      >\r\n                        <DownOutlined />\r\n                      </span>\r\n                    </span>\r\n                  </a>\r\n                </Dropdown>\r\n              ) : (\r\n                <a href='##'>\r\n                  <span\r\n                    // className={'product-attributeTag'}\r\n                    style={{\r\n                      fontSize: '12px',\r\n                    }}\r\n                  >\r\n                    {text ? 'In Stock' : 'Out of stock'}\r\n                    <span\r\n                      style={{\r\n                        marginLeft: '5px',\r\n                        fontSize: '10px',\r\n                      }}\r\n                    ></span>\r\n                  </span>\r\n                </a>\r\n              )}\r\n            </>\r\n          )}\r\n        />\r\n\r\n        {/* <Column\r\n          title=\"Unit\"\r\n          dataIndex=\"unit\"\r\n          key=\"id\"\r\n          className='classnameofthecolumn'\r\n\r\n        /> */}\r\n        {/* <Column \r\n          \r\n          className='classnameofthecolumn'\r\n\r\n          title=\"Product\" dataIndex=\"product\" key=\"product\" /> */}\r\n\r\n        {/* <Column \r\n          \r\n          className='classnameofthecolumn'\r\n\r\n          title=\"Sub Category\" dataIndex=\"subCategory\" key=\"subCategory\" /> */}\r\n\r\n        {/* <Column\r\n          title=\"Tags\"\r\n          dataIndex=\"tags\"\r\n          key=\"tags\"\r\n          render={tags => (\r\n            <>\r\n              {tags.map((tag : any) => (\r\n                <Tag color=\"blue\" key={tag}>\r\n                  {tag}\r\n                </Tag>\r\n              ))}\r\n            </>\r\n          )}\r\n        /> */}\r\n\r\n        {isAccess('postCatalogue', roles) && (\r\n          <Column\r\n            className='classnameofthecolumn'\r\n            title=''\r\n            key='action'\r\n            align='right'\r\n            render={(text, record: any) => (\r\n              <Space size='middle'>\r\n                <a href='##'>\r\n                  <Tooltip placement='top' title='Edit Product'>\r\n                    <span\r\n                      className='iconSize'\r\n                      onClick={() => {\r\n                        setvisible(true);\r\n                        setactiveCategoryForEdit(record);\r\n                      }}\r\n                    >\r\n                      <EditOutlined />\r\n                    </span>\r\n                  </Tooltip>\r\n                </a>\r\n\r\n                <Popconfirm\r\n                  onConfirm={() => handleDeleteProduct(record.id)}\r\n                  title='Are you sure？'\r\n                  okText='Yes'\r\n                  cancelText='No'\r\n                >\r\n                  <span className='iconSize iconSize-danger'>\r\n                    <DeleteOutlined />\r\n                  </span>\r\n                </Popconfirm>\r\n              </Space>\r\n            )}\r\n          />\r\n        )}\r\n      </Table>\r\n\r\n      {activeCategoryForEdit && (\r\n        <ProductQuickEdit\r\n          productList={data}\r\n          setProductList={setProductList}\r\n          setProductEditVisible={setvisible}\r\n          productEditVisible={visible}\r\n          productDetailData={activeCategoryForEdit}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\ninterface Props {\r\n  roles?: any;\r\n}\r\n\r\nconst ProductList = ({ roles }: Props) => {\r\n  const [productList, setProductList] = useState([]);\r\n\r\n  const [productState, handleProductListFetch] = useHandleFetch(\r\n    {},\r\n    'productList'\r\n  );\r\n\r\n  useEffect(() => {\r\n    const setProducts = async () => {\r\n      const products = await handleProductListFetch({\r\n        urlOptions: {\r\n          params: {\r\n            sortItem: 'added',\r\n            sortOrderValue: '-1',\r\n            productType: 'product',\r\n            limitNumber: 5000000,\r\n          },\r\n        },\r\n      });\r\n      // @ts-ignore\r\n      setProductList(products);\r\n    };\r\n    setProducts();\r\n  }, []);\r\n\r\n  console.log('myFuckingProductList', productList);\r\n\r\n  const [addNewCategoryVisible, setAddNewCategoryVisible] = useState(false);\r\n\r\n  // console.log('productState', productState)\r\n\r\n  const handleSearch = (value) => {\r\n    if (productState.data.length > 0) {\r\n      const newProductList = productState.data.filter((item) =>\r\n        item.name.toLowerCase().includes(value.toLowerCase())\r\n      );\r\n      setProductList(newProductList);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {/* <h2 className='containerPageTitle'>\r\n      Categories\r\n    </h2> */}\r\n      <div className='categoryListContainer'>\r\n        <div className='categoryListContainer__header'>\r\n          <div className='categoryListContainer__header-searchBar'>\r\n            <h2 className='categoryListContainer__header-title'>Products</h2>\r\n\r\n            <Search\r\n              enterButton={false}\r\n              className='searchbarClassName'\r\n              placeholder='search products..'\r\n              onChange={(e) => handleSearch(e.target.value)}\r\n              // style={{ width: 300 }}\r\n            />\r\n          </div>\r\n\r\n          {isAccess('postCatalogue', roles) && (\r\n            <Button\r\n              // type=\"primary\"\r\n              className='btnPrimaryClassNameoutline'\r\n              icon={<PlusOutlined />}\r\n              onClick={() => setAddNewCategoryVisible(true)}\r\n            >\r\n              Add New\r\n            </Button>\r\n          )}\r\n        </div>\r\n\r\n        <div className='categoryListContainer__afterHeader'>\r\n          {/* <Search\r\n      placeholder=\"search categories..\"\r\n      size=\"large\"\r\n      onSearch={value => console.log(value)}\r\n      style={{ width: 300 }}\r\n    /> */}\r\n        </div>\r\n\r\n        <div className='categoryListContainer__categoryList'>\r\n          {productState.done && productList.length > 0 && (\r\n            <MyTable\r\n              roles={roles}\r\n              setProductList={setProductList}\r\n              data={productList}\r\n            />\r\n          )}\r\n          {productState.isLoading && <DataTableSkeleton />}\r\n          {productState.done && !(productList.length > 0) && (\r\n            <div\r\n              style={{\r\n                marginTop: '200px',\r\n              }}\r\n            >\r\n              <Empty\r\n                description='No Products found'\r\n                image={Empty.PRESENTED_IMAGE_SIMPLE}\r\n              />\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      {productState.done && (\r\n        <AddNewProduct\r\n          addNewCategoryVisible={addNewCategoryVisible}\r\n          setAddNewCategoryVisible={setAddNewCategoryVisible}\r\n          productList={productState.data}\r\n          setProductList={setProductList}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  roles: state.globalState,\r\n});\r\n\r\n// @ts-ignore\r\nexport default connect(mapStateToProps, null)(ProductList);\r\n","// @ts-nocheck\r\nimport React, { useState, useEffect } from 'react';\r\n\r\n// import hooks\r\nimport { useHandleFetch } from '../../hooks';\r\n\r\n// import libraries\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport {\r\n  message,\r\n  Tooltip,\r\n  Modal,\r\n  Tabs,\r\n  Empty,\r\n  Badge,\r\n  Spin,\r\n  Button,\r\n} from 'antd';\r\n\r\nimport {\r\n  DeleteOutlined,\r\n  FileAddOutlined,\r\n  CheckCircleOutlined,\r\n  FileImageFilled,\r\n  FileImageOutlined,\r\n  FileImageTwoTone,\r\n  PlusOutlined,\r\n  PlusCircleOutlined,\r\n  CloseOutlined,\r\n  CheckOutlined,\r\n  InfoCircleOutlined,\r\n  EditOutlined,\r\n} from '@ant-design/icons';\r\nimport CKEditor from '@ckeditor/ckeditor5-react';\r\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\r\n\r\n// import ReactQuill from 'react-quill';\r\n// import 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport MediaLibrary from '../../components/MediaLibrary';\r\nimport DatePicker from '../../components/Field/DatePicker';\r\nimport {\r\n  openSuccessNotification,\r\n  openErrorNotification,\r\n} from '../../components/Notification';\r\nimport Tags from './Tags';\r\nimport Brands from './Brands';\r\nimport Categories from './Categories';\r\nimport Pricing from './Pricing';\r\nimport MetaTags from '../category/MetaTags';\r\n\r\nconst { TabPane } = Tabs;\r\n\r\nconst validationSchema = Yup.object().shape({\r\n  // name: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\nconst initialValues = {\r\n  name: '',\r\n  description: '',\r\n  model: '',\r\n  unit: '',\r\n  regular: '',\r\n  offer: '',\r\n  available: '',\r\n  minimum: '',\r\n  image: [],\r\n  url: '',\r\n  cover: '',\r\n  pricing: [],\r\n  venue: '',\r\n  date: '',\r\n  time: '',\r\n  purchaseLimit: null,\r\n  bnUnit: '',\r\n  bnName: '',\r\n  bnDescription: '',\r\n  metaTitle: '',\r\n  bnMetaTitle: '',\r\n  metaDescription: '',\r\n  bnMetaDescription: '',\r\n  metaTags: '',\r\n  bnMetaTags: '',\r\n};\r\n\r\ninterface Props {\r\n  productEditVisible?: any;\r\n  setProductEditVisible?: any;\r\n  productDetailData?: any;\r\n  setProductDetailData?: any;\r\n}\r\n\r\nconst ModalChildComponent = ({\r\n  productEditVisible,\r\n  setProductEditVisible,\r\n  productDetailData,\r\n  setProductDetailData,\r\n}) => {\r\n  const [updateProductState, handleUpdateProductFetch] = useHandleFetch(\r\n    {},\r\n    'updateProduct'\r\n  );\r\n  const [productDetailState, handleProductDetailFetch] = useHandleFetch(\r\n    {},\r\n    'productDetailById'\r\n  );\r\n  const [\r\n    attachImageToItemMultipleState,\r\n    handleAttachImageToItemMultipleFetch,\r\n  ] = useHandleFetch({}, 'attachImageToItemMultiple');\r\n  const [\r\n    attachImageToItemSingleState,\r\n    handleAttachImageToItemSingleFetch,\r\n  ] = useHandleFetch({}, 'attachImageToItemSingle');\r\n  const [\r\n    detachImageFromItemMultipleState,\r\n    handleDetachImageFromItemMultipleFetch,\r\n  ] = useHandleFetch({}, 'detachImageFromItemMultiple');\r\n  const [\r\n    detachImageFromItemSingleState,\r\n    handleDetachImageFromItemSingleFetch,\r\n  ] = useHandleFetch({}, 'detachImageFromItemSingle');\r\n  const [\r\n    setImageAsThumbnailToItemState,\r\n    handleSetImageAsThumbnailToItemFetch,\r\n  ] = useHandleFetch({}, 'setImageAsThumbnailToItem');\r\n\r\n  const [visible, setvisible] = useState(false);\r\n  const [myImages, setmyImages] = useState(false);\r\n  const [myThumbnailImage, setmyThumbnailImage] = useState(false);\r\n  const [isModalOpenForThumbnail, setisModalOpenForThumbnail] = useState(false);\r\n  const [isModalOpenForImages, setisModalOpenForImages] = useState(false);\r\n  const [categoryids, setcategoryIds] = useState([]);\r\n  const [tagIds, setTagIds] = useState([]);\r\n  const [brandId, setBrandId] = useState('');\r\n  const [pricing, setPricing] = useState([]);\r\n  const [coverImageId, setCoverImageId] = useState('');\r\n  const [categoryOptions, setCategoryOptions] = useState([]);\r\n  const [selectedTags, setSelectedTags] = useState([]);\r\n  const [date, setDateFeild] = useState('');\r\n  const [time, setTimeFeild] = useState('');\r\n  const [description, setDescription] = useState('');\r\n  const [bnDescription, setBNDescription] = useState('');\r\n  const [metaTags, setMetaTags] = useState([]);\r\n  const [bnMetaTags, setBnMetaTags] = useState([]);\r\n  const [editpricingItem, setEditPricingItem] = useState({});\r\n  const [pricingTagActiveKey, setpricingTagActiveKey] = useState('2');\r\n  const [isPricingEditActive, seTisPricingEditActive] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const getProductDetail = async () => {\r\n      await handleProductDetailFetch({\r\n        urlOptions: {\r\n          placeHolders: {\r\n            id: productDetailData.id,\r\n          },\r\n        },\r\n      });\r\n    };\r\n\r\n    getProductDetail();\r\n  }, [productDetailData]);\r\n\r\n  console.log('tagIds', tagIds);\r\n  console.log('selectedtagIds', selectedTags);\r\n\r\n  useEffect(() => {\r\n    if (\r\n      productDetailState.done &&\r\n      productDetailState.data &&\r\n      Object.keys(productDetailState.data).length > 0\r\n    ) {\r\n      const productDetailData = productDetailState.data;\r\n\r\n      if (productDetailData.brand) {\r\n        setBrandId(productDetailData.brand['id']);\r\n      } else {\r\n        setBrandId('');\r\n      }\r\n      if (\r\n        productDetailData &&\r\n        productDetailData.tags &&\r\n        productDetailData.tags.length > 0\r\n      ) {\r\n        const selectedTagNames = productDetailData.tags.map(\r\n          (item) => item.name\r\n        );\r\n\r\n        const selectedTagIds = productDetailData.tags.map((item) => item._id);\r\n\r\n        setSelectedTags(selectedTagNames);\r\n        console.log('selectedTagIds55', selectedTagIds);\r\n        setTagIds(selectedTagIds);\r\n      } else {\r\n        setTagIds([]);\r\n        setSelectedTags([]);\r\n      }\r\n      if (\r\n        productDetailData &&\r\n        productDetailData.category &&\r\n        productDetailData.category.length > 0\r\n      ) {\r\n        const categoryIds = productDetailData.category.map((item) => item.id);\r\n        setCategoryOptions(categoryIds);\r\n      } else {\r\n        setCategoryOptions([]);\r\n      }\r\n\r\n      if (\r\n        productDetailData &&\r\n        productDetailData.pricing &&\r\n        productDetailData.pricing\r\n      ) {\r\n        setPricing(productDetailData.pricing);\r\n      } else {\r\n        setPricing([]);\r\n      }\r\n\r\n      if (\r\n        productDetailData &&\r\n        productDetailData.date &&\r\n        productDetailData.date\r\n      ) {\r\n        setDateFeild(productDetailData.date);\r\n      } else {\r\n        setDateFeild('');\r\n      }\r\n\r\n      if (\r\n        productDetailData &&\r\n        productDetailData.time &&\r\n        productDetailData.time\r\n      ) {\r\n        setTimeFeild(productDetailData.time);\r\n      } else {\r\n        setTimeFeild('');\r\n      }\r\n\r\n      if (productDetailData && productDetailData.description) {\r\n        setDescription(productDetailData.description);\r\n      } else {\r\n        setDescription('');\r\n      }\r\n\r\n      if (\r\n        productDetailData &&\r\n        productDetailData.bn &&\r\n        productDetailData.bn['description']\r\n      ) {\r\n        setBNDescription(productDetailData.bn['description']);\r\n      } else {\r\n        setBNDescription('');\r\n      }\r\n    }\r\n\r\n    console.log('runnedBitch');\r\n  }, [productDetailState.done]);\r\n\r\n  useEffect(() => {\r\n    if (productDetailState.done && Object.keys(productDetailState).length > 0) {\r\n      const images = productDetailState.data.image;\r\n      let mahImages = [];\r\n\r\n      if (images && images.length > 0) {\r\n        mahImages = images;\r\n      }\r\n\r\n      if (\r\n        productDetailState.data.cover &&\r\n        productDetailState.data.cover['id']\r\n      ) {\r\n        const ixists = images.find(\r\n          (item) => item.id === productDetailState.data.cover['id']\r\n        );\r\n        if (!ixists) {\r\n          mahImages = [productDetailState.data.cover, ...mahImages];\r\n        }\r\n\r\n        setCoverImageId(productDetailState.data.cover['id']);\r\n      }\r\n\r\n      // @ts-ignore\r\n      setmyImages(mahImages);\r\n    }\r\n  }, [productDetailState.done]);\r\n\r\n  useEffect(() => {\r\n    console.log('thumnail', myImages);\r\n    // @ts-ignore\r\n    if (myImages && myImages[0] && myImages.length < 2) {\r\n      console.log('thumnail2', myImages);\r\n\r\n      if (coverImageId !== myImages[0].id) {\r\n        setCoverImageId(myImages[0].id);\r\n        handleSetImageAsThumnail(myImages[0]);\r\n      }\r\n    }\r\n  }, [myImages]);\r\n\r\n  const handleDetachSingleImage = async (id) => {\r\n    await handleDetachImageFromItemSingleFetch({\r\n      urlOptions: {\r\n        placeHolders: {\r\n          imageId: id,\r\n          collection: 'product',\r\n          itemId: productDetailData.id,\r\n        },\r\n      },\r\n    });\r\n  };\r\n\r\n  const handleSetImageAsThumnail = async (image) => {\r\n    const thumbnailRes = await handleSetImageAsThumbnailToItemFetch({\r\n      urlOptions: {\r\n        placeHolders: {\r\n          imageId: image.id,\r\n          collection: 'product',\r\n          itemId: productDetailData.id,\r\n        },\r\n      },\r\n    });\r\n\r\n    console.log('thumbnailRes', thumbnailRes);\r\n\r\n    // @ts-ignore\r\n    if (thumbnailRes && thumbnailRes.status === 'ok') {\r\n      openSuccessNotification('Set as thumbnail!');\r\n      // const positionInBrand = () => {\r\n      //     return productList.map(item => item.id).indexOf(productDetailData.id);\r\n      // }\r\n\r\n      // const index = positionInBrand();\r\n\r\n      // const prevItem = productList.find(item => item.id === productDetailData.id);\r\n\r\n      // if (prevItem) {\r\n      //     console.log('prevItem--', prevItem, 'image--', image);\r\n      //     const updatedItem = Object.assign({}, productList[index], { ...prevItem, cover: image.cover });\r\n      //     const updateProductList = [...productList.slice(0, index), updatedItem, ...productList.slice(index + 1)];\r\n      //     setProductList(updateProductList);\r\n\r\n      // }\r\n    } else {\r\n      openErrorNotification(\"Couldn't set as thumbnail, Something went wrong\");\r\n    }\r\n  };\r\n\r\n  const makeEmptyCategoryOptions = (setEmpty) => {\r\n    setEmpty([]);\r\n  };\r\n\r\n  const handleSubmit = async (values: any, actions: any) => {\r\n    // @ts-ignore\r\n    const imagesIds = myImages\r\n      ? myImages.map((image) => {\r\n          return image.id;\r\n        })\r\n      : [];\r\n\r\n    if (productDetailData && Object.keys(productDetailData).length > 0) {\r\n      const aboutToUpdatedImageIds = [];\r\n\r\n      if (imagesIds && imagesIds.length > 0) {\r\n        imagesIds.forEach((imageId) => {\r\n          if (productDetailData && productDetailData['image']) {\r\n            if (!productDetailData['image'].includes(imageId)) {\r\n              aboutToUpdatedImageIds.push(imageId);\r\n            }\r\n          }\r\n        });\r\n      }\r\n\r\n      if (aboutToUpdatedImageIds[0] && aboutToUpdatedImageIds.length > 1) {\r\n        await handleAttachImageToItemMultipleFetch({\r\n          urlOptions: {\r\n            placeHolders: {\r\n              collection: 'product',\r\n              itemId: productDetailData.id,\r\n            },\r\n          },\r\n          body: {\r\n            image: aboutToUpdatedImageIds,\r\n          },\r\n        });\r\n      } else if (\r\n        aboutToUpdatedImageIds[0] &&\r\n        aboutToUpdatedImageIds.length < 1\r\n      ) {\r\n        await handleAttachImageToItemSingleFetch({\r\n          urlOptions: {\r\n            placeHolders: {\r\n              imageId: aboutToUpdatedImageIds[0].id,\r\n              collection: 'product',\r\n              itemId: productDetailData.id,\r\n            },\r\n          },\r\n        });\r\n      }\r\n    }\r\n\r\n    const updatedProductRes = await handleUpdateProductFetch({\r\n      urlOptions: {\r\n        placeHolders: {\r\n          id: productDetailData.id,\r\n        },\r\n      },\r\n      body: {\r\n        name: values.name.trim(),\r\n        description: description,\r\n        model: values.model,\r\n        unit: values.unit,\r\n        category: categoryOptions,\r\n        tags: tagIds,\r\n        brand: brandId,\r\n        image: imagesIds,\r\n        cover: coverImageId || imagesIds[0] ? imagesIds[0] : '',\r\n        pricing: pricing,\r\n        metaTitle: values.metaTitle,\r\n        metaDescription: values.metaDescription,\r\n        metaTags: metaTags && metaTags.length > 0 ? metaTags.join(',') : '',\r\n\r\n        bn: {\r\n          metaTitle: values.bnMetaTitle,\r\n          metaDescription: values.bnMetaDescription,\r\n          metaTags:\r\n            bnMetaTags && bnMetaTags.length > 0 ? bnMetaTags.join(',') : '',\r\n          name: values.bnName.trim(),\r\n          unit: values.metaUnit,\r\n          description: bnDescription,\r\n        },\r\n      },\r\n    });\r\n\r\n    // @ts-ignore\r\n    if (updatedProductRes && updatedProductRes.status === 'ok') {\r\n      openSuccessNotification('Product Updated');\r\n\r\n      setProductEditVisible(false);\r\n\r\n      setProductEditVisible(false);\r\n      setProductDetailData({\r\n        // @ts-ignore\r\n        ...updatedProductRes,\r\n        category: productDetailData.category,\r\n        brand: productDetailData.brand,\r\n        tags: productDetailData.tags,\r\n        cover: productDetailData.cover,\r\n        image: productDetailData.image,\r\n      });\r\n\r\n      // setProductDetailData({\r\n      //     // @ts-ignore\r\n      //     ...updatedProductRes,\r\n      //     category: productDetailData.category,\r\n      //     brand: productDetailData.brand,\r\n      //     tags: productDetailData.tags,\r\n      //     cover: productDetailData.cover,\r\n      //     image: productDetailData.image,\r\n      // });\r\n\r\n      // console.log('updatedProductRes', updatedProductRes);\r\n      // setProductList([...productList, {\r\n      //     id: updatedProductRes['id'] || '',\r\n      //     key: updatedProductRes['id'] || '',\r\n      //     name: updatedProductRes['name'] || '',\r\n      //     description: updatedProductRes['description'] || '',\r\n      //     // @ts-ignore\r\n      //     ...updatedProductRes\r\n      // }])\r\n      // @ts-ignore\r\n      //   setmyImages([]);\r\n      //   setCoverImageId('');\r\n      //   setPricing([]);\r\n      //   setTagIds([]);\r\n      //   setSelectedTags([]);\r\n      //   setBrandId('');\r\n      //   setcategoryIds([]);\r\n      //   setCategoryOptions([]);\r\n      //   actions.resetForm();\r\n    } else {\r\n      // openErrorNotification();\r\n    }\r\n\r\n    actions.setSubmitting(false);\r\n  };\r\n\r\n  console.log('updateProductStaet', updateProductState);\r\n  useEffect(() => {\r\n    if (!updateProductState['isLoading']) {\r\n      const error = updateProductState['error'];\r\n      if (error['isError'] && Object.keys(error['error']).length > 0) {\r\n        const errors =\r\n          Object.values(error['error']).length > 0\r\n            ? Object.values(error['error'])\r\n            : [];\r\n        errors.forEach((err, i) => {\r\n          if (typeof err === 'string') {\r\n            openErrorNotification(err);\r\n          } else if (typeof err === 'object') {\r\n            if (err && Object.keys(err).length > 0) {\r\n              const errs = Object.values(err);\r\n              errs.forEach((err) => {\r\n                openErrorNotification(err);\r\n              });\r\n            }\r\n          }\r\n        });\r\n      }\r\n    }\r\n  }, [updateProductState]);\r\n\r\n  const handleCancel = (e: any) => {\r\n    setProductEditVisible(false);\r\n    // setmyImages(false);\r\n    // setCoverImageId('');\r\n    // setPricing([]);\r\n    // setTagIds([]);\r\n    // setSelectedTags([]);\r\n    // setBrandId('');\r\n    // setcategoryIds([]);\r\n    // setCategoryOptions([]);\r\n    // setMetaTags([]);\r\n    // setBnMetaTags([]);\r\n  };\r\n\r\n  const getisSubmitButtonDisabled = (values, isValid) => {\r\n    if (\r\n      !values.name ||\r\n      !(pricing.length > 0) ||\r\n      !(categoryOptions.length > 0) ||\r\n      !isValid\r\n    ) {\r\n      return true;\r\n    }\r\n    return false;\r\n  };\r\n\r\n  const handleImagesDelete = (id) => {\r\n    // @ts-ignore\r\n    const newImages =\r\n      myImages &&\r\n      myImages.filter((image) => {\r\n        return image.id !== id;\r\n      });\r\n\r\n    setmyImages(newImages);\r\n  };\r\n\r\n  const handleDeleteFromSelectedImage = () => {};\r\n\r\n  const handleThumbnailImageDelete = (id) => {\r\n    // @ts-ignore\r\n    const newImages =\r\n      myThumbnailImage &&\r\n      myThumbnailImage.filter((image) => {\r\n        return image.id !== id;\r\n      });\r\n\r\n    if (newImages.length > 0) {\r\n      setmyThumbnailImage(newImages);\r\n    } else setmyThumbnailImage(false);\r\n  };\r\n\r\n  const handleUpdatePricing = (priceItem) => {\r\n    const positionInPricing = () => {\r\n      return pricing.map((item) => item.id).indexOf(priceItem.id);\r\n    };\r\n\r\n    const index = positionInPricing();\r\n\r\n    // @ts-ignore\r\n    const updatedItem = Object.assign({}, pricing[index], { ...priceItem });\r\n    const updatePricingList = [\r\n      ...pricing.slice(0, index),\r\n      updatedItem,\r\n      ...pricing.slice(index + 1),\r\n    ];\r\n\r\n    setPricing(updatePricingList);\r\n\r\n    message.info('Product Pricing Updated');\r\n    seTisPricingEditActive(true);\r\n    setpricingTagActiveKey('2');\r\n  };\r\n\r\n  const handleAddPricing = (priceItem) => {\r\n    setPricing([\r\n      {\r\n        ...priceItem,\r\n        id: pricing.length,\r\n      },\r\n      ...pricing,\r\n    ]);\r\n    message.info('Product Pricing Added');\r\n  };\r\n\r\n  const handleDeletePricing = (id) => {\r\n    const newPricing = pricing.filter((item) => item.id !== id);\r\n    setPricing(newPricing);\r\n    message.info('Product Pricing Deleted');\r\n  };\r\n\r\n  const handleEditPricing = (id) => {\r\n    seTisPricingEditActive(true);\r\n    const pricingItem = pricing.find((item) => item.id === id);\r\n    if (pricingItem) {\r\n      setEditPricingItem(pricingItem);\r\n    }\r\n  };\r\n\r\n  const isCategoryInValid = () => {\r\n    if (\r\n      updateProductState.error['error']['category'] &&\r\n      !categoryids &&\r\n      categoryids.length\r\n    ) {\r\n      return true;\r\n    } else if (categoryids && categoryids.length > 0) {\r\n      return false;\r\n    }\r\n  };\r\n\r\n  const handleDateChange = (date, dateString) => {\r\n    setDateFeild(dateString);\r\n    // console.log('date', date, dateString);\r\n  };\r\n\r\n  const handleTimeChange = (date, dateString) => {\r\n    setTimeFeild(dateString);\r\n    // console.log('date', date, dateString);\r\n  };\r\n\r\n  console.log('productDetailData', productDetailData);\r\n  console.log('productDetailState', productDetailState);\r\n\r\n  useEffect(() => {\r\n    if (\r\n      productDetailState.data &&\r\n      Object.keys(productDetailState.data).length > 0 &&\r\n      productDetailState.data.metaTags\r\n    ) {\r\n      const metaTags = productDetailState.data.metaTags.split(',');\r\n\r\n      console.log('localMetaTags', metaTags);\r\n\r\n      const bnMetaTags = productDetailState.data.bn['metaTags'].split(',');\r\n      setMetaTags(metaTags || []);\r\n      setBnMetaTags(bnMetaTags || []);\r\n    }\r\n  }, [productDetailState['done']]);\r\n\r\n  console.log('productDetailData');\r\n\r\n  return (\r\n    <>\r\n      <Formik\r\n        onSubmit={(values, actions) => handleSubmit(values, actions)}\r\n        validationSchema={validationSchema}\r\n        validateOnBlur={false}\r\n        enableReinitialize={true}\r\n        initialValues={{\r\n          ...initialValues,\r\n          ...{\r\n            ...productDetailData,\r\n            ...(productDetailState['data'] &&\r\n              Object.keys(productDetailState['data']).length > 0 &&\r\n              productDetailState['data']['bn'] && {\r\n                bnMetaTitle: productDetailState['data']['bn'].metaTitle,\r\n                bnMetaDescription:\r\n                  productDetailState['data']['bn'].metaDescription,\r\n                bnName: productDetailState['data']['bn'].name,\r\n                metaUnit: productDetailState['data']['bn'].unit,\r\n                bnDescription: productDetailState['data']['bn'].description,\r\n              }),\r\n          },\r\n        }}\r\n      >\r\n        {({\r\n          handleChange,\r\n          values,\r\n          handleSubmit,\r\n          errors,\r\n          isValid,\r\n          isSubmitting,\r\n          touched,\r\n          handleBlur,\r\n          setFieldTouched,\r\n          handleReset,\r\n        }) => (\r\n          <>\r\n            <section className='addProductGridContainer'>\r\n              <div className='addProductGridContainer__left'>\r\n                <div className='addProductGridContainer__name'>\r\n                  <div className='addProductGridContainer__item-header'>\r\n                    <h3>Product Information *</h3>\r\n                    <div\r\n                      className={\r\n                        values.name && values.name.length > 2\r\n                          ? 'checkicon-active'\r\n                          : 'checkicon'\r\n                      }\r\n                    >\r\n                      <CheckCircleOutlined />\r\n                    </div>\r\n                  </div>\r\n                  <div className='addProductGridContainer__item-body'>\r\n                    <Input\r\n                      label='Name *'\r\n                      value={values.name}\r\n                      placeHolder={'Rafty ox'}\r\n                      name='name'\r\n                      isError={\r\n                        (touched.name && errors.name) ||\r\n                        (!isSubmitting &&\r\n                          updateProductState.error['error']['name'])\r\n                      }\r\n                      errorString={\r\n                        (touched.name && errors.name) ||\r\n                        (!isSubmitting &&\r\n                          updateProductState.error['error']['name'])\r\n                      }\r\n                      onChange={(e: any) => {\r\n                        handleChange(e);\r\n                        setFieldTouched('name');\r\n                      }}\r\n                    />\r\n\r\n                    <Input\r\n                      label='BN Name'\r\n                      value={values.bnName}\r\n                      placeHolder={'রাফতি অক্স'}\r\n                      name='bnName'\r\n                      isError={\r\n                        (touched.bnName && errors.bnName) ||\r\n                        (!isSubmitting &&\r\n                          updateProductState.error['error']['bnName'])\r\n                      }\r\n                      errorString={\r\n                        (touched.bnName && errors.bnName) ||\r\n                        (!isSubmitting &&\r\n                          updateProductState.error['error']['bnName'])\r\n                      }\r\n                      onChange={(e: any) => {\r\n                        handleChange(e);\r\n                        setFieldTouched('bnName');\r\n                      }}\r\n                    />\r\n\r\n                    {/* <div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\tdisplay: 'flex',\r\n\t\t\t\t\t\t\t\t\t\t\t\tjustifyContent: 'space-between'\r\n\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\twidth: '48%',\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<DatePicker\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabel='Date'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={handleDateChange} />\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\twidth: '48%'\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<DatePicker\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tdate={date}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\twithTime={true}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder='Select time'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabel='Time'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={handleTimeChange} />\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t</div> */}\r\n\r\n                    {/* \r\n\t\t\t\t\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\t\t\t\t\trows={1}\r\n\t\t\t\t\t\t\t\t\t\t\t\tlabel='Venue'\r\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.venue}\r\n\t\t\t\t\t\t\t\t\t\t\t\tname='venue'\r\n\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.venue && errors.venue) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateProductState.error['error']['venue'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.venue && errors.venue) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateProductState.error['error']['venue'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('venue');\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\t\tlabel='Purchase Limit'\r\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.purchaseLimit}\r\n\t\t\t\t\t\t\t\t\t\t\t\ttype='number'\r\n\t\t\t\t\t\t\t\t\t\t\t\tname='purchaseLimit'\r\n\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.purchaseLimit && errors.purchaseLimit) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateProductState.error['error']['purchaseLimit'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.purchaseLimit && errors.purchaseLimit) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateProductState.error['error']['purchaseLimit'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('purchaseLimit');\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t/> */}\r\n\r\n                    <Input\r\n                      label='Unit'\r\n                      value={values.unit}\r\n                      name='unit'\r\n                      placeHolder={'KG,POUND,GM'}\r\n                      isError={\r\n                        (touched.unit && errors.unit) ||\r\n                        (!isSubmitting &&\r\n                          updateProductState.error['error']['unit'])\r\n                      }\r\n                      errorString={\r\n                        (touched.unit && errors.unit) ||\r\n                        (!isSubmitting &&\r\n                          updateProductState.error['error']['unit'])\r\n                      }\r\n                      onChange={(e: any) => {\r\n                        handleChange(e);\r\n                        setFieldTouched('unit');\r\n                      }}\r\n                    />\r\n\r\n                    <Input\r\n                      label='BN Unit'\r\n                      value={values.bnUnit}\r\n                      placeHolder={'কেজি,গ্রাম'}\r\n                      name='bnUnit'\r\n                      isError={\r\n                        (touched.bnUnit && errors.bnUnit) ||\r\n                        (!isSubmitting &&\r\n                          updateProductState.error['error']['bnUnit'])\r\n                      }\r\n                      errorString={\r\n                        (touched.bnUnit && errors.bnUnit) ||\r\n                        (!isSubmitting &&\r\n                          updateProductState.error['error']['bnUnit'])\r\n                      }\r\n                      onChange={(e: any) => {\r\n                        handleChange(e);\r\n                        setFieldTouched('bnUnit');\r\n                      }}\r\n                    />\r\n\r\n                    <Input\r\n                      label='Model Number'\r\n                      value={values.model}\r\n                      name='model'\r\n                      isError={\r\n                        (touched.model && errors.model) ||\r\n                        (!isSubmitting &&\r\n                          updateProductState.error['error']['model'])\r\n                      }\r\n                      errorString={\r\n                        (touched.model && errors.model) ||\r\n                        (!isSubmitting &&\r\n                          updateProductState.error['error']['model'])\r\n                      }\r\n                      onChange={(e: any) => {\r\n                        handleChange(e);\r\n                        setFieldTouched('model');\r\n                      }}\r\n                    />\r\n\r\n                    <h3 className='inputFieldLabel'>Description</h3>\r\n\r\n                    <div\r\n                      style={{\r\n                        width: '100%',\r\n                        maxWidth: '100%',\r\n                      }}\r\n                    >\r\n                      <CKEditor\r\n                        editor={ClassicEditor}\r\n                        data={description}\r\n                        onInit={(editor) => {\r\n                          // You can store the \"editor\" and use when it is needed.\r\n                          console.log('Editor is ready to use!', editor);\r\n                        }}\r\n                        onChange={(event, editor) => {\r\n                          const data = editor.getData();\r\n                          setDescription(data);\r\n                        }}\r\n                        onBlur={(event, editor) => {\r\n                          console.log('Blur.', editor);\r\n                        }}\r\n                        onFocus={(event, editor) => {\r\n                          console.log('Focus.', editor);\r\n                        }}\r\n                      />\r\n                    </div>\r\n\r\n                    <div\r\n                      style={{\r\n                        marginTop: '15px',\r\n                      }}\r\n                    ></div>\r\n\r\n                    <h3 className='inputFieldLabel'>BN Description</h3>\r\n\r\n                    <div\r\n                      style={{\r\n                        width: '100%',\r\n                        maxWidth: '100%',\r\n                      }}\r\n                    >\r\n                      <CKEditor\r\n                        editor={ClassicEditor}\r\n                        data={bnDescription}\r\n                        onInit={(editor) => {\r\n                          // You can store the \"editor\" and use when it is needed.\r\n                          console.log('Editor is ready to use!', editor);\r\n                        }}\r\n                        onChange={(event, editor) => {\r\n                          const data = editor.getData();\r\n                          setBNDescription(data);\r\n                        }}\r\n                        onBlur={(event, editor) => {\r\n                          console.log('Blur.', editor);\r\n                        }}\r\n                        onFocus={(event, editor) => {\r\n                          console.log('Focus.', editor);\r\n                        }}\r\n                      />\r\n                    </div>\r\n\r\n                    <div\r\n                      style={{\r\n                        marginTop: '15px',\r\n                      }}\r\n                    >\r\n                      {' '}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                <div className='addProductGridContainer__price'>\r\n                  <div className='addProductGridContainer__item-header'>\r\n                    <h3>Product Pricing *</h3>\r\n\r\n                    <div\r\n                      className={\r\n                        pricing && pricing.length > 0\r\n                          ? 'checkicon-active'\r\n                          : 'checkicon'\r\n                      }\r\n                    >\r\n                      <CheckCircleOutlined />\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className='addProductGridContainer__item-body'>\r\n                    <Tabs\r\n                      animated={true}\r\n                      tabPosition='top'\r\n                      type='card'\r\n                      activeKey={pricingTagActiveKey}\r\n                      onChange={(value) => {\r\n                        setpricingTagActiveKey(`${value}`);\r\n                      }}\r\n                    >\r\n                      <TabPane tab='Add Variation' key='1'>\r\n                        <Pricing\r\n                          handleAddPricing={handleAddPricing}\r\n                          pricingItem={editpricingItem}\r\n                          handleUpdatePricing={handleUpdatePricing}\r\n                          isPricingEditActive={isPricingEditActive}\r\n                        />\r\n                      </TabPane>\r\n                      <TabPane tab='Pricing List' key='2'>\r\n                        <div className='addProductGridContainer__item-body-pricingContainer'>\r\n                          {pricing.length > 0 &&\r\n                            pricing.map((item) => {\r\n                              return (\r\n                                <div className='addProductGridContainer__item-body-pricingContainer-item'>\r\n                                  <div className='addProductGridContainer__item-body-pricingContainer-item-edit'>\r\n                                    {/* <span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<EditOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</span> */}\r\n                                    <span\r\n                                      className='pricingEditIcon'\r\n                                      onClick={() => {\r\n                                        handleEditPricing(item.id);\r\n                                        setpricingTagActiveKey('1');\r\n                                      }}\r\n                                    >\r\n                                      <EditOutlined />\r\n                                    </span>\r\n                                    <span\r\n                                      className='pricingDeleteIcon'\r\n                                      onClick={() =>\r\n                                        handleDeletePricing(item.id)\r\n                                      }\r\n                                    >\r\n                                      <DeleteOutlined />\r\n                                    </span>\r\n                                  </div>\r\n                                  <div className='addProductGridContainer__item-body-pricingContainer-item-two'>\r\n                                    <div>\r\n                                      <h3>Price</h3>\r\n                                      <div className='addProductGridContainer__item-body-pricingContainer-item-body'>\r\n                                        {item.price.offer ? (\r\n                                          <>\r\n                                            <h4>{item.price.offer}</h4>/\r\n                                            <h5\r\n                                              style={{\r\n                                                textDecoration: 'line-through',\r\n                                              }}\r\n                                            >\r\n                                              {item.price.regular}\r\n                                            </h5>\r\n                                          </>\r\n                                        ) : (\r\n                                          <h4>{item.price.regular}</h4>\r\n                                        )}\r\n                                      </div>\r\n                                    </div>\r\n\r\n                                    {item.stock && item.stock['available'] && (\r\n                                      <div>\r\n                                        <Badge\r\n                                          overflowCount={999}\r\n                                          count={item.stock.available}\r\n                                        >\r\n                                          <h3>Stock</h3>\r\n                                        </Badge>\r\n                                        {item.stock['minimum'] && (\r\n                                          <>\r\n                                            <div className='addProductGridContainer__item-body-pricingContainer-item-body'>\r\n                                              <div>\r\n                                                <h6>\r\n                                                  min\r\n                                                  <Badge\r\n                                                    className='site-badge-count-4'\r\n                                                    overflowCount={999}\r\n                                                    count={item.stock.minimum}\r\n                                                  />\r\n                                                </h6>\r\n                                              </div>\r\n                                            </div>\r\n                                          </>\r\n                                        )}\r\n                                      </div>\r\n                                    )}\r\n                                  </div>\r\n\r\n                                  {item.attribute &&\r\n                                    Object.values(item.attribute).length >\r\n                                      0 && (\r\n                                      <>\r\n                                        <h3>Attributes</h3>\r\n                                        <div className='addProductGridContainer__item-body-pricingContainer-item-body'>\r\n                                          {item.attribute &&\r\n                                            Object.keys(item.attribute).length >\r\n                                              0 &&\r\n                                            Object.keys(item.attribute).map(\r\n                                              (attributeItem) => {\r\n                                                return (\r\n                                                  <div>\r\n                                                    <h6>{attributeItem}</h6>\r\n                                                    <h4>\r\n                                                      {\r\n                                                        item.attribute[\r\n                                                          attributeItem\r\n                                                        ]\r\n                                                      }\r\n                                                    </h4>\r\n                                                  </div>\r\n                                                );\r\n                                              }\r\n                                            )}\r\n                                        </div>\r\n                                      </>\r\n                                    )}\r\n                                </div>\r\n                              );\r\n                            })}\r\n\r\n                          {!(pricing.length > 0) && (\r\n                            <div\r\n                              style={{\r\n                                width: '100%',\r\n                                display: 'flex',\r\n                                justifyContent: 'center',\r\n                              }}\r\n                            >\r\n                              <Empty\r\n                                description='No Pricing added'\r\n                                image={Empty.PRESENTED_IMAGE_SIMPLE}\r\n                              />\r\n                            </div>\r\n                          )}\r\n                        </div>\r\n                      </TabPane>\r\n                    </Tabs>\r\n\r\n                    <div className='addProductGridContainer__item-body-container'></div>\r\n                  </div>\r\n                </div>\r\n\r\n                <div className='addProductGridContainer__image'>\r\n                  <div className='addProductGridContainer__item-header'>\r\n                    <h3>Image</h3>\r\n\r\n                    <Tooltip\r\n                      placement='left'\r\n                      title={\r\n                        'Click on the image to select cover image, By default 1st image is selected as cover'\r\n                      }\r\n                    >\r\n                      <a href='###'>\r\n                        <InfoCircleOutlined />\r\n                      </a>\r\n                    </Tooltip>\r\n                  </div>\r\n\r\n                  <div\r\n                    style={{\r\n                      padding: '10px',\r\n                    }}\r\n                    className='aboutToUploadImagesContainer'\r\n                  >\r\n                    {productDetailState.isLoading && (\r\n                      <div\r\n                        style={{\r\n                          padding: '20px 0',\r\n                        }}\r\n                      >\r\n                        <Spin />\r\n                      </div>\r\n                    )}\r\n                    {productDetailState.done && (\r\n                      <>\r\n                        {myImages &&\r\n                          // @ts-ignore\r\n                          myImages.length > 0 &&\r\n                          myImages.map((image, index) => {\r\n                            return (\r\n                              <div className='aboutToUploadImagesContainer__item'>\r\n                                <div\r\n                                  className='aboutToUploadImagesContainer__item-imgContainer'\r\n                                  onClick={() => {\r\n                                    setCoverImageId(image.id);\r\n                                    handleSetImageAsThumnail(image);\r\n                                  }}\r\n                                >\r\n                                  <img src={image.cover} alt={image.alt} />\r\n                                </div>\r\n\r\n                                <span\r\n                                  onClick={() => {\r\n                                    handleImagesDelete(image.id);\r\n                                    handleDetachSingleImage(image.id);\r\n                                  }}\r\n                                  className='aboutToUploadImagesContainer__item-remove'\r\n                                >\r\n                                  <CloseOutlined />\r\n                                </span>\r\n\r\n                                {coverImageId === image.id ? (\r\n                                  <span className='aboutToUploadImagesContainer__item-cover'>\r\n                                    <CheckOutlined />\r\n                                  </span>\r\n                                ) : (\r\n                                  !coverImageId &&\r\n                                  index === 0 && (\r\n                                    <span className='aboutToUploadImagesContainer__item-cover'>\r\n                                      <CheckOutlined />\r\n                                    </span>\r\n                                  )\r\n                                )}\r\n                              </div>\r\n                            );\r\n                          })}\r\n\r\n                        <Tooltip title={'Attach images'}>\r\n                          <div\r\n                            onClick={() => {\r\n                              setvisible(true);\r\n                              setisModalOpenForImages(true);\r\n                              setisModalOpenForThumbnail(false);\r\n                            }}\r\n                            className='aboutToUploadImagesContainer__uploadItem'\r\n                          >\r\n                            {/* <FileAddOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FileImageTwoTone />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FileImageOutlined /> */}\r\n                            <FileImageFilled />\r\n                            {/* <h5>\r\n\t\t\t\t\t\t\t\t\t\t\t\t     Select From Library\r\n\t\t\t\t\t\t\t\t\t\t\t<     /h5> */}\r\n                            <span className='aboutToUploadImagesContainer__uploadItem-plus'>\r\n                              <PlusOutlined />\r\n                            </span>\r\n                          </div>\r\n                        </Tooltip>\r\n                      </>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className='addProductGridContainer__right'>\r\n                <div className='addProductGridContainer__category'>\r\n                  <div className='addProductGridContainer-rightItemContainer'>\r\n                    <div className='addProductGridContainer-rightItemContainer-header'>\r\n                      <h3>Categories *</h3>\r\n\r\n                      {/* <Tooltip\r\n                        color='red'\r\n                        visible={\r\n                          updateProductState.error['error']['category'] &&\r\n                          !(categoryids.length > 0)\r\n                        }\r\n                        placement='left'\r\n                        title={'Select at least one category'}\r\n                      >\r\n                        <div\r\n                          className={\r\n                            !(categoryids.length > 0) &&\r\n                            !updateProductState.error['error']['category']\r\n                              ? 'checkicon'\r\n                              : updateProductState.error['error']['category']\r\n                              ? 'checkicon-error'\r\n                              : 'checkicon-active'\r\n                          }\r\n                        >\r\n                          <CheckCircleOutlined />\r\n                        </div>\r\n                      </Tooltip> */}\r\n                      <div\r\n                        className={\r\n                          !(categoryids.length > 0) &&\r\n                          !updateProductState.error['error']['category']\r\n                            ? 'checkicon'\r\n                            : updateProductState.error['error']['category']\r\n                            ? 'checkicon-error'\r\n                            : 'checkicon-active'\r\n                        }\r\n                      >\r\n                        <CheckCircleOutlined />\r\n                      </div>\r\n                    </div>\r\n                    <div className='addProductGridContainer-rightItemContainer-body'>\r\n                      <Categories\r\n                        setCategoryOptions={setCategoryOptions}\r\n                        categoryOptions={categoryOptions}\r\n                        setcategoryIds={setcategoryIds}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                <div className='addProductGridContainer__tag'>\r\n                  <div className='addProductGridContainer-rightItemContainer'>\r\n                    <div className='addProductGridContainer-rightItemContainer-header'>\r\n                      <h3>Tags</h3>\r\n                    </div>\r\n                    <div className='addProductGridContainer-rightItemContainer-body'>\r\n                      <Tags\r\n                        setSelectedTags={setSelectedTags}\r\n                        selectedTags={selectedTags}\r\n                        setTagIds={setTagIds}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div className='addProductGridContainer__brand'>\r\n                  <div className='addProductGridContainer-rightItemContainer'>\r\n                    <div className='addProductGridContainer-rightItemContainer-header'>\r\n                      <h3>Brand</h3>\r\n                    </div>\r\n                    <div className='addProductGridContainer-rightItemContainer-body'>\r\n                      <Brands\r\n                        productDetailState={productDetailState}\r\n                        brandId={brandId}\r\n                        setBrandId={setBrandId}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                <div\r\n                  className='addProductGridContainer__brand'\r\n                  style={{\r\n                    marginTop: '10px',\r\n                  }}\r\n                >\r\n                  <div className='addProductGridContainer-rightItemContainer'>\r\n                    <div className='addProductGridContainer-rightItemContainer-header'>\r\n                      <h3>Meta Tags</h3>\r\n\r\n                      <Tooltip\r\n                        placement='left'\r\n                        title={\r\n                          \"Meta data will be used to make the user's easy and for search engine optimization.\"\r\n                        }\r\n                      >\r\n                        <a href='###'>\r\n                          <InfoCircleOutlined />\r\n                        </a>\r\n                      </Tooltip>\r\n                    </div>\r\n                    <div className='addProductGridContainer-rightItemContainer-body'>\r\n                      <Input\r\n                        label='Meta title'\r\n                        value={values.metaTitle}\r\n                        placeHolder={'...'}\r\n                        name='metaTitle'\r\n                        isError={\r\n                          (touched.metaTitle && errors.metaTitle) ||\r\n                          (!isSubmitting &&\r\n                            updateProductState.error['error']['metaTitle'])\r\n                        }\r\n                        errorString={\r\n                          (touched.metaTitle && errors.metaTitle) ||\r\n                          (!isSubmitting &&\r\n                            updateProductState.error['error']['metaTitle'])\r\n                        }\r\n                        onChange={(e: any) => {\r\n                          handleChange(e);\r\n                          setFieldTouched('metaTitle');\r\n                        }}\r\n                      />\r\n\r\n                      <Input\r\n                        label='BN Meta title'\r\n                        value={values.bnMetaTitle}\r\n                        placeHolder={'...'}\r\n                        name='bnMetaTitle'\r\n                        isError={\r\n                          (touched.bnMetaTitle && errors.bnMetaTitle) ||\r\n                          (!isSubmitting &&\r\n                            updateProductState.error['error']['bnMetaTitle'])\r\n                        }\r\n                        errorString={\r\n                          (touched.bnMetaTitle && errors.bnMetaTitle) ||\r\n                          (!isSubmitting &&\r\n                            updateProductState.error['error']['bnMetaTitle'])\r\n                        }\r\n                        onChange={(e: any) => {\r\n                          handleChange(e);\r\n                          setFieldTouched('bnMetaTitle');\r\n                        }}\r\n                      />\r\n\r\n                      <TextArea\r\n                        label='Meta description'\r\n                        value={values.metaDescription}\r\n                        placeholder={'meta...'}\r\n                        name='metaDescription'\r\n                        isError={\r\n                          (touched.metaDescription && errors.metaDescription) ||\r\n                          (!isSubmitting &&\r\n                            updateProductState.error['error'][\r\n                              'metaDescription'\r\n                            ])\r\n                        }\r\n                        errorString={\r\n                          (touched.metaDescription && errors.metaDescription) ||\r\n                          (!isSubmitting &&\r\n                            updateProductState.error['error'][\r\n                              'metaDescription'\r\n                            ])\r\n                        }\r\n                        onChange={(e: any) => {\r\n                          handleChange(e);\r\n                          setFieldTouched('metaDescription');\r\n                        }}\r\n                      />\r\n\r\n                      <TextArea\r\n                        label='BN Meta Description'\r\n                        value={values.bnMetaDescription}\r\n                        placeholder={'এইয় মেট...'}\r\n                        name='bnMetaDescription'\r\n                        isError={\r\n                          (touched.bnMetaDescription &&\r\n                            errors.bnMetaDescription) ||\r\n                          (!isSubmitting &&\r\n                            updateProductState.error['error'][\r\n                              'bnMetaDescription'\r\n                            ])\r\n                        }\r\n                        errorString={\r\n                          (touched.bnMetaDescription &&\r\n                            errors.bnMetaDescription) ||\r\n                          (!isSubmitting &&\r\n                            updateProductState.error['error'][\r\n                              'bnMetaDescription'\r\n                            ])\r\n                        }\r\n                        onChange={(e: any) => {\r\n                          handleChange(e);\r\n                          setFieldTouched('bnMetaDescription');\r\n                        }}\r\n                      />\r\n\r\n                      <h3 className='inputFieldLabel'>Meta Tags</h3>\r\n\r\n                      <MetaTags\r\n                        // @ts-ignore\r\n                        setTags={setMetaTags}\r\n                        tags={metaTags}\r\n                      />\r\n\r\n                      <div\r\n                        style={{\r\n                          marginTop: '15px',\r\n                        }}\r\n                      ></div>\r\n\r\n                      <h3 className='inputFieldLabel'>BN Meta Tags</h3>\r\n\r\n                      <MetaTags\r\n                        // @ts-ignore\r\n                        setTags={setBnMetaTags}\r\n                        tags={bnMetaTags}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </section>\r\n\r\n            <div\r\n              style={{\r\n                padding: '15px',\r\n                display: 'flex',\r\n                justifyContent: 'flex-end',\r\n              }}\r\n            >\r\n              <Button\r\n                style={{\r\n                  color: '#555',\r\n                  marginRight: '10px',\r\n                }}\r\n                className='btnPrimaryClassNameoutline-cancle'\r\n                onClick={() => setProductEditVisible(false)}\r\n                type='default'\r\n              >\r\n                Cancel\r\n              </Button>\r\n\r\n              <Button\r\n                className='btnPrimaryClassNameoutline'\r\n                onClick={handleSubmit}\r\n                loading={updateProductState.isLoading}\r\n                type='link'\r\n                icon={<CheckOutlined />}\r\n              >\r\n                Update\r\n              </Button>\r\n            </div>\r\n\r\n            <MediaLibrary\r\n              setvisible={setvisible}\r\n              visible={visible}\r\n              setmyImages={setmyImages}\r\n              myImages={myImages}\r\n              setmyThumbnailImage={setmyThumbnailImage}\r\n              isModalOpenForThumbnail={isModalOpenForThumbnail}\r\n              isModalOpenForImages={isModalOpenForImages}\r\n            />\r\n          </>\r\n        )}\r\n      </Formik>\r\n    </>\r\n  );\r\n};\r\n\r\nconst AddNewProduct = ({\r\n  productEditVisible,\r\n  setProductEditVisible,\r\n  productDetailData,\r\n  setProductDetailData,\r\n}: Props) => {\r\n  const handleCancel = () => {\r\n    setProductEditVisible(false);\r\n  };\r\n  return (\r\n    <Modal\r\n      style={{\r\n        top: '40px',\r\n      }}\r\n      bodyStyle={{\r\n        margin: 0,\r\n        padding: 0,\r\n      }}\r\n      width={'70vw'}\r\n      title='Product Edit'\r\n      visible={productEditVisible}\r\n      // onOk={(e: any) => handleSubmit(e)}\r\n      onCancel={handleCancel}\r\n      destroyOnClose={true}\r\n      okText='Update'\r\n      footer={false}\r\n      okButtonProps={{\r\n        //   loading: isSubmitting,\r\n        htmlType: 'submit',\r\n      }}\r\n    >\r\n      <ModalChildComponent\r\n        setProductEditVisible={setProductEditVisible}\r\n        productEditVisible={productEditVisible}\r\n        setProductDetailData={setProductDetailData}\r\n        productDetailData={productDetailData}\r\n        handleCancel={handleCancel}\r\n      />\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default AddNewProduct;\r\n\r\n/*\r\n\r\n\r\nProduct variation ---->\r\n\r\nPrice [title]\r\n\t[regular input field] [offer inputfield]\r\n\r\nStock [title]\r\n\t[available input field] [minimum inputfield]\r\n\r\ndefault [default can be set to true]\r\n\r\nattributes [title]\r\n\t[add attributes name]\r\n\t\t[add attrubutes value]\r\n\r\n\t[add attributes name]\r\n\t\t[add attrubutes value\r\n\r\n*/ //\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useParams, useHistory } from 'react-router';\r\n\r\n// import hooks\r\nimport { useHandleFetch } from '../../hooks';\r\n\r\n// import lib\r\nimport { EditOutlined } from '@ant-design/icons';\r\n\r\nimport {\r\n  Skeleton,\r\n  Empty,\r\n  Button,\r\n  notification,\r\n  Table,\r\n  Space,\r\n  Input as CoolInput,\r\n  Tooltip,\r\n  Modal,\r\n  Badge,\r\n} from 'antd';\r\n\r\n// import components\r\nimport { DataTableSkeleton } from '../../components/Placeholders';\r\nimport ProductEdit from './ProductEdit';\r\n\r\n// import state\r\nimport { isAccess } from '../../utils';\r\nimport { connect } from 'react-redux';\r\n\r\nconst { Column, ColumnGroup } = Table;\r\nconst { Search } = CoolInput;\r\n\r\ninterface Props {\r\n  roles: any;\r\n}\r\n\r\nconst NewBrandDetail = ({ roles }: Props) => {\r\n  const [productDetailState, handleProductDetailFetch] = useHandleFetch(\r\n    {},\r\n    'productDetailById'\r\n  );\r\n\r\n  const params = useParams();\r\n  const history = useHistory();\r\n  const productId = params['id'];\r\n  const [productEditVisible, setProductEditVisible] = useState(false);\r\n  const [productDetailData, setProductDetailData] = useState({});\r\n\r\n  useEffect(() => {\r\n    const getProductDetail = async () => {\r\n      const productDetailRes = await handleProductDetailFetch({\r\n        urlOptions: {\r\n          placeHolders: {\r\n            id: productId,\r\n          },\r\n        },\r\n      });\r\n\r\n      // @ts-ignore\r\n      if (productDetailRes) {\r\n        // @ts-ignore\r\n        setProductDetailData(productDetailRes);\r\n      }\r\n\r\n      console.log('productDetailRes', productDetailRes);\r\n    };\r\n\r\n    getProductDetail();\r\n  }, [productId]);\r\n\r\n  console.log('productDetailState', productDetailState);\r\n\r\n  console.log('brandParams', params);\r\n\r\n  const getImagesInCollumn = (imgs) => {\r\n    if (!imgs[0]) return false;\r\n    imgs = imgs.map((item) => item.cover);\r\n    const columns = {};\r\n\r\n    let localIndex = 0;\r\n    let columnNumber = 0;\r\n\r\n    imgs.forEach((item, index) => {\r\n      if (localIndex < 3) {\r\n        if (columns[columnNumber]) {\r\n          columns[columnNumber] = [...columns[columnNumber], item];\r\n        } else columns[columnNumber] = [item];\r\n\r\n        localIndex = localIndex + 1;\r\n        columnNumber = columnNumber + 1;\r\n      } else {\r\n        localIndex = 0;\r\n        columnNumber = 0;\r\n        console.log('localIndex', localIndex);\r\n      }\r\n    });\r\n\r\n    return columns;\r\n  };\r\n\r\n  const row =\r\n    productDetailState.done && productDetailData && productDetailData['image']\r\n      ? getImagesInCollumn(productDetailData['image'])\r\n      : [];\r\n\r\n  return (\r\n    <div className='brandDetailContainer'>\r\n      <div className='brandDetailContainer__heading'>\r\n        <h3>Product Detail</h3>\r\n\r\n        {productDetailState.done &&\r\n          productDetailData &&\r\n          Object.keys(productDetailData).length > 0 && (\r\n            <>\r\n              <ProductEdit\r\n                productEditVisible={productEditVisible}\r\n                setProductEditVisible={setProductEditVisible}\r\n                productDetailData={productDetailData}\r\n                setProductDetailData={setProductDetailData}\r\n              />\r\n              {isAccess('postCatalogue', roles) && (\r\n                <Button\r\n                  onClick={() => setProductEditVisible(true)}\r\n                  type='link'\r\n                  icon={<EditOutlined />}\r\n                >\r\n                  Edit\r\n                </Button>\r\n              )}\r\n            </>\r\n          )}\r\n      </div>\r\n      <Skeleton\r\n        avatar\r\n        paragraph={{ rows: 3 }}\r\n        loading={productDetailState.isLoading}\r\n      >\r\n        {productDetailState.done &&\r\n          productDetailData &&\r\n          !(Object.keys(productDetailData).length > 0) && (\r\n            <Empty\r\n              description='No Product found'\r\n              image={Empty.PRESENTED_IMAGE_SIMPLE}\r\n            />\r\n          )}\r\n\r\n        {productDetailState.done &&\r\n          productDetailData &&\r\n          Object.keys(productDetailData).length > 0 && (\r\n            <>\r\n              <div className='brandDetailContainer__header'>\r\n                <div className='brandDetailContainer__header-coverContainer brandDetailContainer__header-coverContainer-product'>\r\n                  <img\r\n                    src={\r\n                      productDetailData['cover'] &&\r\n                      productDetailData['cover']['cover']\r\n                    }\r\n                    alt=''\r\n                  />\r\n                </div>\r\n                <div className='brandDetailContainer__header-info'>\r\n                  <h2>{productDetailData['name']}</h2>\r\n                  <h4>{productDetailData['price']}</h4>\r\n                  <h3>{productDetailData['description']}</h3>\r\n\r\n                  {productDetailData['url'] && (\r\n                    <h3>\r\n                      URL:\r\n                      <span>{productDetailData['url']}</span>\r\n                    </h3>\r\n                  )}\r\n\r\n                  {/* \r\n                                {productDetailData['tags'] && productDetailData['tags'].length > 0 &&\r\n                                    (<>\r\n                                        <h3>\r\n                                            TAGS:\r\n                                        {productDetailData['tags'].map(tag => {\r\n                                            return (\r\n                                                <span>\r\n                                                    {tag.name}\r\n                                                </span>\r\n                                            )\r\n                                        })}\r\n                                        </h3>\r\n\r\n                                    </>)\r\n                                } */}\r\n\r\n                  {productDetailData['category'] &&\r\n                    productDetailData['category'].length > 0 && (\r\n                      <>\r\n                        <h3>\r\n                          CATEGORIES:\r\n                          {productDetailData['category'].map((cat) => {\r\n                            return (\r\n                              <span\r\n                                onClick={() =>\r\n                                  history.push(`/admin/category/${cat.id}`)\r\n                                }\r\n                              >\r\n                                {cat.name}\r\n                              </span>\r\n                            );\r\n                          })}\r\n                        </h3>\r\n                      </>\r\n                    )}\r\n\r\n                  {productDetailData['tags'] &&\r\n                    productDetailData['tags'].length > 0 && (\r\n                      <>\r\n                        <h3>\r\n                          TAGS:\r\n                          {productDetailData['tags'].map((cat) => {\r\n                            return (\r\n                              <span\r\n                                onClick={() =>\r\n                                  history.push(`/admin/tag/${cat._id}`)\r\n                                }\r\n                              >\r\n                                {cat.name}\r\n                              </span>\r\n                            );\r\n                          })}\r\n                        </h3>\r\n                      </>\r\n                    )}\r\n                </div>\r\n              </div>\r\n\r\n              {productDetailData['icon'] && (\r\n                <>\r\n                  <div className='brandDetailContainer__heading'>\r\n                    <h3>Icon</h3>\r\n                  </div>\r\n\r\n                  <div className='brandDetailContainer__inlineBox'>\r\n                    <div className='brandDetailContainer__header-coverContainer brandDetailContainer__header-coverContainer-icon'>\r\n                      <img\r\n                        src={\r\n                          productDetailData['icon'] && productDetailData['icon']\r\n                        }\r\n                        alt=''\r\n                      />\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div\r\n                    style={{\r\n                      marginBottom: '25px',\r\n                    }}\r\n                  ></div>\r\n                </>\r\n              )}\r\n\r\n              {productDetailData['pricing'] &&\r\n                productDetailData['pricing'].length > 0 && (\r\n                  <>\r\n                    <div className='brandDetailContainer__heading'>\r\n                      <h3>Pricing</h3>\r\n                    </div>\r\n\r\n                    <div className='brandDetailContainer__pricing'>\r\n                      <div className='addProductGridContainer__item-body-pricingContainer'>\r\n                        {productDetailData['pricing'].map((item) => {\r\n                          return (\r\n                            <div className='addProductGridContainer__item-body-pricingContainer-item'>\r\n                              <div className='addProductGridContainer__item-body-pricingContainer-item-two'>\r\n                                <div>\r\n                                  <h3>Price</h3>\r\n                                  <div className='addProductGridContainer__item-body-pricingContainer-item-body'>\r\n                                    {item.price.offer ? (\r\n                                      <>\r\n                                        <h4>{item.price.offer}</h4>/\r\n                                        <h5\r\n                                          style={{\r\n                                            textDecoration: 'line-through',\r\n                                          }}\r\n                                        >\r\n                                          {item.price.regular}\r\n                                        </h5>\r\n                                      </>\r\n                                    ) : (\r\n                                      <h4>{item.price.regular}</h4>\r\n                                    )}\r\n                                  </div>\r\n                                </div>\r\n\r\n                                {item.stock && (\r\n                                  <div>\r\n                                    <Badge\r\n                                      overflowCount={999}\r\n                                      count={item.stock.available}\r\n                                    >\r\n                                      <h3>Stock</h3>\r\n                                    </Badge>\r\n                                    <div className='addProductGridContainer__item-body-pricingContainer-item-body'>\r\n                                      <div>\r\n                                        <h6>\r\n                                          min\r\n                                          <Badge\r\n                                            className='site-badge-count-4'\r\n                                            overflowCount={999}\r\n                                            count={item.stock.minimum}\r\n                                          />\r\n                                        </h6>\r\n                                      </div>\r\n                                    </div>\r\n                                  </div>\r\n                                )}\r\n                              </div>\r\n\r\n                              {item.attribute &&\r\n                                Object.values(item.attribute).length > 0 && (\r\n                                  <>\r\n                                    <h3>Attributes</h3>\r\n                                    <div className='addProductGridContainer__item-body-pricingContainer-item-body'>\r\n                                      {item.attribute &&\r\n                                        Object.keys(item.attribute).length >\r\n                                          0 &&\r\n                                        Object.keys(item.attribute).map(\r\n                                          (attributeItem) => {\r\n                                            return (\r\n                                              <div>\r\n                                                <h6>{attributeItem}</h6>\r\n                                                <h4>\r\n                                                  {\r\n                                                    item.attribute[\r\n                                                      attributeItem\r\n                                                    ]\r\n                                                  }\r\n                                                </h4>\r\n                                              </div>\r\n                                            );\r\n                                          }\r\n                                        )}\r\n                                    </div>\r\n                                  </>\r\n                                )}\r\n                            </div>\r\n                          );\r\n                        })}\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div\r\n                      style={{\r\n                        marginBottom: '25px',\r\n                      }}\r\n                    ></div>\r\n                  </>\r\n                )}\r\n\r\n              {productDetailData['image'] &&\r\n                productDetailData['image'].length > 0 && (\r\n                  <>\r\n                    <div className='brandDetailContainer__heading'>\r\n                      <h3>Image Gallary</h3>\r\n                    </div>\r\n\r\n                    <div className='brandDetailContainer__imageGallary'>\r\n                      <div className='imgGallaryContainer'>\r\n                        <div className='imgGallary-row'>\r\n                          {row &&\r\n                            Object.keys(row).map((column) => {\r\n                              return (\r\n                                <div className='imgGallary-column'>\r\n                                  {row[column] &&\r\n                                    row[column].map((img) => {\r\n                                      return (\r\n                                        <img\r\n                                          src={img}\r\n                                          style={{\r\n                                            width: '100%',\r\n                                          }}\r\n                                        />\r\n                                      );\r\n                                    })}\r\n                                </div>\r\n                              );\r\n                            })}\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div\r\n                      style={{\r\n                        marginBottom: '25px',\r\n                      }}\r\n                    ></div>\r\n                  </>\r\n                )}\r\n\r\n              {productDetailData['brand'] &&\r\n                Object.keys(productDetailData['brand']).length > 0 && (\r\n                  <>\r\n                    <div className='brandDetailContainer__heading'>\r\n                      <h3>Brand</h3>\r\n                    </div>\r\n\r\n                    <div\r\n                      onClick={() =>\r\n                        history.push(\r\n                          `/admin/brand/${productDetailData['brand']['id']}`\r\n                        )\r\n                      }\r\n                      className='brandDetailContainer__brand'\r\n                    >\r\n                      <div className='brandDetailContainer__brand-coverbox'>\r\n                        <img\r\n                          src={\r\n                            productDetailData['brand']['cover'] &&\r\n                            productDetailData['brand']['cover']\r\n                          }\r\n                          alt=''\r\n                        />\r\n                      </div>\r\n                      <div className='brandDetailContainer__brand-info'>\r\n                        <h2>{productDetailData['brand']['name']}</h2>\r\n                        <h3>{productDetailData['brand']['description']}</h3>\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div\r\n                      style={{\r\n                        marginBottom: '25px',\r\n                      }}\r\n                    ></div>\r\n                  </>\r\n                )}\r\n\r\n              {productDetailData['primaryCategory'] &&\r\n                Object.keys(productDetailData['primaryCategory']).length >\r\n                  0 && (\r\n                  <>\r\n                    <div className='brandDetailContainer__heading'>\r\n                      <h3>Primary Category</h3>\r\n                    </div>\r\n\r\n                    <div\r\n                      onClick={() =>\r\n                        history.push(\r\n                          `/admin/category/${productDetailData['primaryCategory']['id']}`\r\n                        )\r\n                      }\r\n                      className='brandDetailContainer__brand'\r\n                    >\r\n                      <div className='brandDetailContainer__brand-coverbox'>\r\n                        <img\r\n                          src={\r\n                            productDetailData['primaryCategory']['cover'] &&\r\n                            productDetailData['primaryCategory']['cover']\r\n                          }\r\n                          alt=''\r\n                        />\r\n                      </div>\r\n                      <div className='brandDetailContainer__brand-info'>\r\n                        <h2>{productDetailData['primaryCategory']['name']}</h2>\r\n                        <h3>\r\n                          {productDetailData['primaryCategory']['description']}\r\n                        </h3>\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div\r\n                      style={{\r\n                        marginBottom: '25px',\r\n                      }}\r\n                    ></div>\r\n                  </>\r\n                )}\r\n            </>\r\n          )}\r\n      </Skeleton>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  roles: state.globalState,\r\n});\r\n\r\n// @ts-ignore\r\nexport default connect(mapStateToProps, null)(NewBrandDetail);\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Modal, notification } from 'antd';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport { useHandleFetch } from '../../hooks';\r\nimport {\r\n  CheckCircleOutlined,\r\n  PlusOutlined,\r\n  EditOutlined,\r\n  DeleteOutlined,\r\n  EditFilled,\r\n  InfoCircleOutlined,\r\n} from '@ant-design/icons';\r\nimport MetaTags from '../../pages/category/MetaTags';\r\n\r\nconst validationSchema = Yup.object().shape({\r\n  name: Yup.string()\r\n    .label('Name')\r\n    .required('Name is required')\r\n    .min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n  notification.success({\r\n    message: message || 'Tag Updated',\r\n    description: '',\r\n    icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n  });\r\n};\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n  notification.success({\r\n    message: message || 'Something Went Wrong',\r\n    description: '',\r\n    icon: <InfoCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n  });\r\n};\r\n\r\nconst initialValues = {\r\n  name: '',\r\n  bnName: '',\r\n  description: '',\r\n  bnDescription: '',\r\n  metaTitle: '',\r\n  bnMetaTitle: '',\r\n  metaDescription: '',\r\n  bnMetaDescription: '',\r\n  metaTags: '',\r\n  bnMetaTags: '',\r\n};\r\n\r\nconst ModalChildComponent = ({}) => {\r\n  return <></>;\r\n};\r\n\r\ninterface Props {\r\n  tagEditVisible?: any;\r\n  setTagEditVisible?: any;\r\n  tagDetailData?: any;\r\n  setTagList?: any;\r\n  tagList?: any;\r\n}\r\n\r\nconst QuickEdit = ({\r\n  tagEditVisible,\r\n  setTagEditVisible,\r\n  tagDetailData,\r\n  setTagList,\r\n  tagList,\r\n}: Props) => {\r\n  const [updateTagState, handleUpdateCategoryFetch] = useHandleFetch(\r\n    {},\r\n    'updateTag'\r\n  );\r\n  const [tags, setTags] = useState([]);\r\n  const [bnTags, setBnTags] = useState([]);\r\n\r\n  useEffect(() => {\r\n    console.log('mounted11');\r\n  }, []);\r\n  const handleSubmit = async (values: any, actions: any) => {\r\n    const updateTagRes = await handleUpdateCategoryFetch({\r\n      urlOptions: {\r\n        placeHolders: {\r\n          id: values.id,\r\n        },\r\n      },\r\n      body: {\r\n        name: values.name,\r\n        description: values.description,\r\n        metaTitle: values.metaTitle,\r\n        metaDescription: values.metaDescription,\r\n        metaTags: tags.join(','),\r\n\r\n        bn: {\r\n          metaTitle: values.bnMetaTitle,\r\n          metaDescription: values.bnMetaDescription,\r\n          metaTags: bnTags.join(','),\r\n          name: values.bnName.trim(),\r\n          description: values.bnDescription,\r\n        },\r\n      },\r\n    });\r\n\r\n    // @ts-ignore\r\n    if (updateTagRes && updateTagRes.status === 'ok') {\r\n      const positionInTag = () => {\r\n        return tagList.map((item) => item.id).indexOf(values.id);\r\n      };\r\n\r\n      const index = positionInTag();\r\n\r\n      // @ts-ignore\r\n      const updatedItem = Object.assign({}, tagList[index], {\r\n        // @ts-ignore\r\n        ...updateTagRes,\r\n      });\r\n      const updateTagList = [\r\n        ...tagList.slice(0, index),\r\n        updatedItem,\r\n        ...tagList.slice(index + 1),\r\n      ];\r\n      setTagList(updateTagList);\r\n\r\n      console.log('categoryupdateTagRes', updateTagRes);\r\n      openSuccessNotification();\r\n      setTagEditVisible(false);\r\n\r\n      // const positionInTag = () => {\r\n      //     return tagList.map(item => item.id).indexOf(category.id);\r\n      // }\r\n\r\n      // const index = positionInTag();\r\n\r\n      // const updatedItem = Object.assign({}, tagList[index], { ...updateTagRes });\r\n      // const updateTagList = [...tagList.slice(0, index), updatedItem, ...tagList.slice(index + 1)];\r\n      // setTagList(updateTagList);\r\n    } else {\r\n      openErrorNotification();\r\n    }\r\n\r\n    actions.setSubmitting(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!updateTagState['isLoading']) {\r\n      const error = updateTagState['error'];\r\n      if (error['isError'] && Object.keys(error['error']).length > 0) {\r\n        const errors =\r\n          Object.values(error['error']).length > 0\r\n            ? Object.values(error['error'])\r\n            : [];\r\n        errors.forEach((err, i) => {\r\n          if (typeof err === 'string') {\r\n            openErrorNotification(err);\r\n          } else if (typeof err === 'object') {\r\n            if (err && Object.keys(err).length > 0) {\r\n              const errs = Object.values(err);\r\n              errs.forEach((err) => {\r\n                openErrorNotification(err);\r\n              });\r\n            }\r\n          }\r\n        });\r\n      }\r\n    }\r\n  }, [updateTagState]);\r\n\r\n  const handleCancel = (e: any) => {\r\n    setTagEditVisible(false);\r\n  };\r\n\r\n  const getisSubmitButtonDisabled = (values, isValid) => {\r\n    if (!values.name || !isValid) {\r\n      return true;\r\n    }\r\n    return false;\r\n  };\r\n\r\n  // useEffect(()=>{\r\n\r\n  //     if(tagDetailData && Object.keys(tagDetailData).length > 0){\r\n  //         const metaTags = tagDetailData.metaTags.split(',');\r\n\r\n  //         console.log('localMetaTags',metaTags);\r\n\r\n  //         const bnMetaTags = tagDetailData.bn['metaTags'].split(',');\r\n\r\n  //         setTags(metaTags)\r\n  //         setBnTags(bnMetaTags)\r\n  //     }\r\n\r\n  // },[]);\r\n\r\n  console.log('tagDetailData', tagDetailData);\r\n\r\n  return (\r\n    <Formik\r\n      onSubmit={(values, actions) => handleSubmit(values, actions)}\r\n      validationSchema={validationSchema}\r\n      validateOnBlur={false}\r\n      enableReinitialize={true}\r\n      initialValues={{\r\n        ...initialValues,\r\n        ...tagDetailData,\r\n        ...(tagDetailData &&\r\n          Object.keys(tagDetailData).length > 0 && {\r\n            bnMetaTitle:\r\n              tagDetailData['bn'] &&\r\n              tagDetailData['bn'].metaTitle &&\r\n              tagDetailData['bn'].metaTitle,\r\n            bnMetaDescription:\r\n              tagDetailData['bn'] &&\r\n              tagDetailData['bn'].metaDescription &&\r\n              tagDetailData['bn'].metaDescription,\r\n            bnName:\r\n              tagDetailData['bn'] &&\r\n              tagDetailData['bn'].name &&\r\n              tagDetailData['bn'].name,\r\n            bnDescription:\r\n              tagDetailData['bn'] &&\r\n              tagDetailData['bn'].description &&\r\n              tagDetailData['bn'].description,\r\n          }),\r\n      }}\r\n    >\r\n      {({\r\n        handleChange,\r\n        values,\r\n        handleSubmit,\r\n        errors,\r\n        isValid,\r\n        isSubmitting,\r\n        touched,\r\n        handleBlur,\r\n        setFieldTouched,\r\n        handleReset,\r\n      }) => (\r\n        <>\r\n          <Modal\r\n            style={{\r\n              top: '40px',\r\n            }}\r\n            title='Tag Edit'\r\n            visible={tagEditVisible}\r\n            onOk={(e: any) => handleSubmit(e)}\r\n            onCancel={handleCancel}\r\n            okText='Update'\r\n            okButtonProps={{\r\n              loading: isSubmitting,\r\n              htmlType: 'submit',\r\n            }}\r\n          >\r\n            <Input\r\n              label='Name *'\r\n              value={values.name}\r\n              name='name'\r\n              placeHolder={'new,fresh'}\r\n              isError={\r\n                (touched.name && errors.name) ||\r\n                (!isSubmitting && updateTagState.error['error']['name'])\r\n              }\r\n              errorString={\r\n                (touched.name && errors.name) ||\r\n                (!isSubmitting && updateTagState.error['error']['name'])\r\n              }\r\n              onChange={(e: any) => {\r\n                handleChange(e);\r\n                setFieldTouched('name');\r\n              }}\r\n            />\r\n\r\n            <Input\r\n              label='BN Name'\r\n              value={values.bnName}\r\n              placeHolder={'নতুন,ফ্রেশ'}\r\n              name='bnName'\r\n              isError={\r\n                (touched.bnName && errors.bnName) ||\r\n                (!isSubmitting && updateTagState.error['error']['bnName'])\r\n              }\r\n              errorString={\r\n                (touched.bnName && errors.bnName) ||\r\n                (!isSubmitting && updateTagState.error['error']['bnName'])\r\n              }\r\n              onChange={(e: any) => {\r\n                handleChange(e);\r\n                setFieldTouched('bnName');\r\n              }}\r\n            />\r\n\r\n            <TextArea\r\n              label='Description'\r\n              value={values.description}\r\n              name='description'\r\n              placeholder={'This tag...'}\r\n              isError={\r\n                (touched.description && errors.description) ||\r\n                (!isSubmitting && updateTagState.error['error']['description'])\r\n              }\r\n              errorString={\r\n                (touched.description && errors.description) ||\r\n                (!isSubmitting && updateTagState.error['error']['description'])\r\n              }\r\n              onChange={(e: any) => {\r\n                handleChange(e);\r\n                setFieldTouched('description');\r\n              }}\r\n            />\r\n\r\n            <TextArea\r\n              label='BN Description'\r\n              value={values.bnDescription}\r\n              placeholder={'এই ট্যাগ...'}\r\n              name='bnDescription'\r\n              isError={\r\n                (touched.bnDescription && errors.bnDescription) ||\r\n                (!isSubmitting &&\r\n                  updateTagState.error['error']['bnDescription'])\r\n              }\r\n              errorString={\r\n                (touched.bnDescription && errors.bnDescription) ||\r\n                (!isSubmitting &&\r\n                  updateTagState.error['error']['bnDescription'])\r\n              }\r\n              onChange={(e: any) => {\r\n                handleChange(e);\r\n                setFieldTouched('bnDescription');\r\n              }}\r\n            />\r\n\r\n            <Input\r\n              label='Meta title'\r\n              value={values.metaTitle}\r\n              placeHolder={'...'}\r\n              name='metaTitle'\r\n              isError={\r\n                (touched.metaTitle && errors.metaTitle) ||\r\n                (!isSubmitting && updateTagState.error['error']['metaTitle'])\r\n              }\r\n              errorString={\r\n                (touched.metaTitle && errors.metaTitle) ||\r\n                (!isSubmitting && updateTagState.error['error']['metaTitle'])\r\n              }\r\n              onChange={(e: any) => {\r\n                handleChange(e);\r\n                setFieldTouched('metaTitle');\r\n              }}\r\n            />\r\n\r\n            <Input\r\n              label='BN Meta title'\r\n              value={values.bnMetaTitle}\r\n              placeHolder={'...'}\r\n              name='bnMetaTitle'\r\n              isError={\r\n                (touched.bnMetaTitle && errors.bnMetaTitle) ||\r\n                (!isSubmitting && updateTagState.error['error']['bnMetaTitle'])\r\n              }\r\n              errorString={\r\n                (touched.bnMetaTitle && errors.bnMetaTitle) ||\r\n                (!isSubmitting && updateTagState.error['error']['bnMetaTitle'])\r\n              }\r\n              onChange={(e: any) => {\r\n                handleChange(e);\r\n                setFieldTouched('bnMetaTitle');\r\n              }}\r\n            />\r\n\r\n            <TextArea\r\n              label='Meta description'\r\n              value={values.metaDescription}\r\n              placeholder={'meta...'}\r\n              name='metaDescription'\r\n              isError={\r\n                (touched.metaDescription && errors.metaDescription) ||\r\n                (!isSubmitting &&\r\n                  updateTagState.error['error']['metaDescription'])\r\n              }\r\n              errorString={\r\n                (touched.metaDescription && errors.metaDescription) ||\r\n                (!isSubmitting &&\r\n                  updateTagState.error['error']['metaDescription'])\r\n              }\r\n              onChange={(e: any) => {\r\n                handleChange(e);\r\n                setFieldTouched('metaDescription');\r\n              }}\r\n            />\r\n\r\n            <TextArea\r\n              label='BN Meta Description'\r\n              value={values.bnMetaDescription}\r\n              placeholder={'এইয় মেট...'}\r\n              name='bnMetaDescription'\r\n              isError={\r\n                (touched.bnMetaDescription && errors.bnMetaDescription) ||\r\n                (!isSubmitting &&\r\n                  updateTagState.error['error']['bnMetaDescription'])\r\n              }\r\n              errorString={\r\n                (touched.bnMetaDescription && errors.bnMetaDescription) ||\r\n                (!isSubmitting &&\r\n                  updateTagState.error['error']['bnMetaDescription'])\r\n              }\r\n              onChange={(e: any) => {\r\n                handleChange(e);\r\n                setFieldTouched('bnMetaDescription');\r\n              }}\r\n            />\r\n\r\n            <h3 className='inputFieldLabel'>Meta Tags (grocery,fashion)</h3>\r\n\r\n            <MetaTags\r\n              // @ts-ignore\r\n              setTags={setTags}\r\n              tags={tags}\r\n            />\r\n\r\n            <div\r\n              style={{\r\n                marginTop: '15px',\r\n              }}\r\n            ></div>\r\n\r\n            <h3 className='inputFieldLabel'>BN Meta Tags (মুদিখানা,ফ্যাশন)</h3>\r\n\r\n            <MetaTags\r\n              // @ts-ignore\r\n              setTags={setBnTags}\r\n              tags={bnTags}\r\n            />\r\n          </Modal>\r\n        </>\r\n      )}\r\n    </Formik>\r\n  );\r\n};\r\n\r\nexport default QuickEdit;\r\n","// @ts-nocheck\r\nimport React, { useState, useEffect } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\nimport { useHandleFetch } from '../../hooks';\r\n// import third party ui lib\r\nimport {\r\n  Upload,\r\n  message,\r\n  Switch,\r\n  Select,\r\n  Button,\r\n  notification,\r\n  Modal,\r\n  Tooltip,\r\n} from 'antd';\r\n\r\nimport {\r\n  FileOutlined,\r\n  InboxOutlined,\r\n  FileAddOutlined,\r\n  DeleteOutlined,\r\n  CheckCircleOutlined,\r\n  CloseOutlined,\r\n  CheckOutlined,\r\n  InfoCircleOutlined,\r\n  PlusOutlined,\r\n  FileImageFilled,\r\n} from '@ant-design/icons';\r\n\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport MediaLibrary from '../../components/MediaLibrary';\r\nimport MetaTags from '../../pages/category/MetaTags';\r\n\r\nconst validationSchema = Yup.object().shape({\r\n  //   name: Yup.string()\r\n  //     .label('Name')\r\n  //     .required('Name is required')\r\n  //     .min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n  notification.success({\r\n    message: message || 'Tag Created',\r\n    description: '',\r\n    icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n  });\r\n};\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n  notification.error({\r\n    message: message || 'Something Went Wrong',\r\n    description: '',\r\n    icon: <InfoCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n  });\r\n};\r\n\r\nconst initialValues = {\r\n  name: '',\r\n  bnName: '',\r\n  description: '',\r\n  bnDescription: '',\r\n  metaTitle: '',\r\n  bnMetaTitle: '',\r\n  metaDescription: '',\r\n  bnMetaDescription: '',\r\n  metaTags: '',\r\n  bnMetaTags: '',\r\n};\r\n\r\ninterface Props {\r\n  addNewCategoryVisible?: any;\r\n  setAddNewCategoryVisible?: any;\r\n  tagList?: any;\r\n  setTagList?: any;\r\n}\r\n\r\nconst AddNewBrand = ({\r\n  addNewCategoryVisible,\r\n  setAddNewCategoryVisible,\r\n  tagList,\r\n  setTagList,\r\n}: Props) => {\r\n  const [addTagState, handleAddTagFetch] = useHandleFetch({}, 'addTag');\r\n  const [myImages, setmyImages] = useState(false);\r\n  const [visibleMedia, setvisibleMedia] = useState(false);\r\n  const [tags, setTags] = useState([]);\r\n  const [bnTags, setBnTags] = useState([]);\r\n\r\n  const handleSubmit = async (values: any, actions: any) => {\r\n    const addTagRes = await handleAddTagFetch({\r\n      urlOptions: {\r\n        placeHolders: {\r\n          id: values.id,\r\n        },\r\n      },\r\n      body: {\r\n        name: values.name.trim(),\r\n        description: values.description,\r\n        metaTitle: values.metaTitle,\r\n        metaDescription: values.metaDescription,\r\n        metaTags: tags.join(','),\r\n\r\n        bn: {\r\n          metaTitle: values.bnMetaTitle,\r\n          metaDescription: values.bnMetaDescription,\r\n          metaTags: bnTags.join(','),\r\n          name: values.bnName.trim(),\r\n          description: values.bnDescription,\r\n        },\r\n      },\r\n    });\r\n\r\n    // @ts-ignore\r\n    if (addTagRes && addTagRes.status === 'ok') {\r\n      openSuccessNotification();\r\n\r\n      setTagList([\r\n        {\r\n          id: addTagRes['_id'] || '',\r\n          key: addTagRes['_id'] || '',\r\n          name: addTagRes['name'] || '',\r\n          description: addTagRes['description'] || '',\r\n        },\r\n        ...tagList,\r\n      ]);\r\n      actions.resetForm();\r\n      setAddNewCategoryVisible(false);\r\n    } else {\r\n      openErrorNotification();\r\n    }\r\n\r\n    actions.setSubmitting(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!addTagState['isLoading']) {\r\n      const error = addTagState['error'];\r\n      if (error['isError'] && Object.keys(error['error']).length > 0) {\r\n        const errors =\r\n          Object.values(error['error']).length > 0\r\n            ? Object.values(error['error'])\r\n            : [];\r\n        errors.forEach((err, i) => {\r\n          if (typeof err === 'string') {\r\n            openErrorNotification(err);\r\n          } else if (typeof err === 'object') {\r\n            if (err && Object.keys(err).length > 0) {\r\n              const errs = Object.values(err);\r\n              errs.forEach((err) => {\r\n                openErrorNotification(err);\r\n              });\r\n            }\r\n          }\r\n        });\r\n      }\r\n    }\r\n  }, [addTagState]);\r\n\r\n  const handleCancel = (e: any) => {\r\n    setAddNewCategoryVisible(false);\r\n  };\r\n\r\n  const getisSubmitButtonDisabled = (values, isValid) => {\r\n    if (!values.name || !isValid) {\r\n      return true;\r\n    }\r\n    return false;\r\n  };\r\n\r\n  const handleImagesDelete = (id) => {\r\n    // @ts-ignore\r\n    const newImages =\r\n      myImages &&\r\n      myImages.filter((image) => {\r\n        return image.id !== id;\r\n      });\r\n\r\n    setmyImages(newImages);\r\n  };\r\n\r\n  return (\r\n    <Formik\r\n      onSubmit={(values, actions) => handleSubmit(values, actions)}\r\n      validationSchema={validationSchema}\r\n      validateOnBlur={false}\r\n      enableReinitialize={true}\r\n      initialValues={{ ...initialValues }}\r\n    >\r\n      {({\r\n        handleChange,\r\n        values,\r\n        handleSubmit,\r\n        errors,\r\n        isValid,\r\n        isSubmitting,\r\n        touched,\r\n        handleBlur,\r\n        setFieldTouched,\r\n        handleReset,\r\n      }) => (\r\n        <>\r\n          <Modal\r\n            style={{\r\n              top: '40px',\r\n            }}\r\n            title='Add New Tag'\r\n            visible={addNewCategoryVisible}\r\n            onOk={(e: any) => handleSubmit(e)}\r\n            onCancel={handleCancel}\r\n            okText='Create'\r\n            okButtonProps={{\r\n              loading: isSubmitting,\r\n              htmlType: 'submit',\r\n            }}\r\n          >\r\n            <Input\r\n              label='Name *'\r\n              value={values.name}\r\n              name='name'\r\n              placeHolder={'new,fresh'}\r\n              isError={\r\n                (touched.name && errors.name) ||\r\n                (!isSubmitting && addTagState.error['error']['name'])\r\n              }\r\n              errorString={\r\n                (touched.name && errors.name) ||\r\n                (!isSubmitting && addTagState.error['error']['name'])\r\n              }\r\n              onChange={(e: any) => {\r\n                handleChange(e);\r\n                setFieldTouched('name');\r\n              }}\r\n            />\r\n\r\n            <Input\r\n              label='BN Name'\r\n              value={values.bnName}\r\n              placeHolder={'নতুন,ফ্রেশ'}\r\n              name='bnName'\r\n              isError={\r\n                (touched.bnName && errors.bnName) ||\r\n                (!isSubmitting && addTagState.error['error']['bnName'])\r\n              }\r\n              errorString={\r\n                (touched.bnName && errors.bnName) ||\r\n                (!isSubmitting && addTagState.error['error']['bnName'])\r\n              }\r\n              onChange={(e: any) => {\r\n                handleChange(e);\r\n                setFieldTouched('bnName');\r\n              }}\r\n            />\r\n\r\n            <TextArea\r\n              label='Description'\r\n              value={values.description}\r\n              name='description'\r\n              placeholder={'This tag...'}\r\n              isError={\r\n                (touched.description && errors.description) ||\r\n                (!isSubmitting && addTagState.error['error']['description'])\r\n              }\r\n              errorString={\r\n                (touched.description && errors.description) ||\r\n                (!isSubmitting && addTagState.error['error']['description'])\r\n              }\r\n              onChange={(e: any) => {\r\n                handleChange(e);\r\n                setFieldTouched('description');\r\n              }}\r\n            />\r\n\r\n            <TextArea\r\n              label='BN Description'\r\n              value={values.bnDescription}\r\n              placeholder={'এই ট্যাগ...'}\r\n              name='bnDescription'\r\n              isError={\r\n                (touched.bnDescription && errors.bnDescription) ||\r\n                (!isSubmitting && addTagState.error['error']['bnDescription'])\r\n              }\r\n              errorString={\r\n                (touched.bnDescription && errors.bnDescription) ||\r\n                (!isSubmitting && addTagState.error['error']['bnDescription'])\r\n              }\r\n              onChange={(e: any) => {\r\n                handleChange(e);\r\n                setFieldTouched('bnDescription');\r\n              }}\r\n            />\r\n\r\n            <Input\r\n              label='Meta title'\r\n              value={values.metaTitle}\r\n              placeHolder={'...'}\r\n              name='metaTitle'\r\n              isError={\r\n                (touched.metaTitle && errors.metaTitle) ||\r\n                (!isSubmitting && addTagState.error['error']['metaTitle'])\r\n              }\r\n              errorString={\r\n                (touched.metaTitle && errors.metaTitle) ||\r\n                (!isSubmitting && addTagState.error['error']['metaTitle'])\r\n              }\r\n              onChange={(e: any) => {\r\n                handleChange(e);\r\n                setFieldTouched('metaTitle');\r\n              }}\r\n            />\r\n\r\n            <Input\r\n              label='BN Meta title'\r\n              value={values.bnMetaTitle}\r\n              placeHolder={'...'}\r\n              name='bnMetaTitle'\r\n              isError={\r\n                (touched.bnMetaTitle && errors.bnMetaTitle) ||\r\n                (!isSubmitting && addTagState.error['error']['bnMetaTitle'])\r\n              }\r\n              errorString={\r\n                (touched.bnMetaTitle && errors.bnMetaTitle) ||\r\n                (!isSubmitting && addTagState.error['error']['bnMetaTitle'])\r\n              }\r\n              onChange={(e: any) => {\r\n                handleChange(e);\r\n                setFieldTouched('bnMetaTitle');\r\n              }}\r\n            />\r\n\r\n            <TextArea\r\n              label='Meta description'\r\n              value={values.metaDescription}\r\n              placeholder={'meta...'}\r\n              name='metaDescription'\r\n              isError={\r\n                (touched.metaDescription && errors.metaDescription) ||\r\n                (!isSubmitting && addTagState.error['error']['metaDescription'])\r\n              }\r\n              errorString={\r\n                (touched.metaDescription && errors.metaDescription) ||\r\n                (!isSubmitting && addTagState.error['error']['metaDescription'])\r\n              }\r\n              onChange={(e: any) => {\r\n                handleChange(e);\r\n                setFieldTouched('metaDescription');\r\n              }}\r\n            />\r\n\r\n            <TextArea\r\n              label='BN Meta Description'\r\n              value={values.bnMetaDescription}\r\n              placeholder={'এইয় মেট...'}\r\n              name='bnMetaDescription'\r\n              isError={\r\n                (touched.bnMetaDescription && errors.bnMetaDescription) ||\r\n                (!isSubmitting &&\r\n                  addTagState.error['error']['bnMetaDescription'])\r\n              }\r\n              errorString={\r\n                (touched.bnMetaDescription && errors.bnMetaDescription) ||\r\n                (!isSubmitting &&\r\n                  addTagState.error['error']['bnMetaDescription'])\r\n              }\r\n              onChange={(e: any) => {\r\n                handleChange(e);\r\n                setFieldTouched('bnMetaDescription');\r\n              }}\r\n            />\r\n\r\n            <h3 className='inputFieldLabel'>Meta Tags</h3>\r\n\r\n            <MetaTags\r\n              // @ts-ignore\r\n              setTags={setTags}\r\n              tags={tags}\r\n            />\r\n\r\n            <div\r\n              style={{\r\n                marginTop: '15px',\r\n              }}\r\n            ></div>\r\n\r\n            <h3 className='inputFieldLabel'>BN Meta Tags</h3>\r\n\r\n            <MetaTags\r\n              // @ts-ignore\r\n              setTags={setBnTags}\r\n              tags={bnTags}\r\n            />\r\n          </Modal>\r\n\r\n          <MediaLibrary\r\n            setvisible={setvisibleMedia}\r\n            visible={visibleMedia}\r\n            setmyImages={setmyImages}\r\n            myImages={myImages}\r\n            isModalOpenForImages={true}\r\n          />\r\n        </>\r\n      )}\r\n    </Formik>\r\n  );\r\n};\r\n\r\nexport default AddNewBrand;\r\n","import React, { useState, useEffect } from 'react';\r\n\r\n// import third party ui lib\r\nimport {\r\n  Empty,\r\n  Popconfirm,\r\n  Upload,\r\n  message,\r\n  Switch,\r\n  Select,\r\n  Button,\r\n  notification,\r\n  Table,\r\n  Space,\r\n  Input as CoolInput,\r\n  Tooltip,\r\n  Modal,\r\n} from 'antd';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { useHistory } from 'react-router';\r\n\r\nimport {\r\n  FileOutlined,\r\n  InboxOutlined,\r\n  RadiusUpleftOutlined,\r\n  RadiusUprightOutlined,\r\n  RadiusBottomleftOutlined,\r\n  RadiusBottomrightOutlined,\r\n  PlusOutlined,\r\n  DeleteOutlined,\r\n  EditOutlined,\r\n  CheckCircleOutlined,\r\n  InfoCircleOutlined,\r\n} from '@ant-design/icons';\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n// import state\r\nimport { isAccess } from '../../utils';\r\nimport { connect } from 'react-redux';\r\n\r\n/// import hooks\r\nimport { useFetch, useHandleFetch } from '../../hooks';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport { DataTableSkeleton } from '../../components/Placeholders';\r\nimport QuickEdit from './QuickEdit';\r\nimport TagQuickEdit from './TagQuickEdit';\r\nimport AddNewTag from './AddNewTag';\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n  notification.success({\r\n    message: message || 'Tag Created',\r\n    description: '',\r\n    icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n  });\r\n};\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n  notification.error({\r\n    message: message || 'Something Went Wrong',\r\n    description: '',\r\n    icon: <InfoCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n  });\r\n};\r\n\r\nconst validationSchema = Yup.object().shape({\r\n  name: Yup.string()\r\n    .label('Name')\r\n    .required('Name is required')\r\n    .min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\nconst initialValues = {\r\n  name: '',\r\n  description: '',\r\n};\r\n\r\nconst { Column, ColumnGroup } = Table;\r\nconst { Search } = CoolInput;\r\n\r\nconst MyTable = ({ data, setTagList, roles }) => {\r\n  const [visible, setvisible] = useState(false);\r\n  const [activeCategoryForEdit, setactiveCategoryForEdit] = useState(false);\r\n  const [deleteTagState, handleDeleteTagFetch] = useHandleFetch(\r\n    {},\r\n    'deleteTag'\r\n  );\r\n\r\n  const history = useHistory();\r\n\r\n  const handleDeleteTag = async (id) => {\r\n    const deleteTagRes = await handleDeleteTagFetch({\r\n      urlOptions: {\r\n        placeHolders: {\r\n          id,\r\n        },\r\n      },\r\n    });\r\n\r\n    // @ts-ignore\r\n    if (deleteTagRes && deleteTagRes.status === 'ok') {\r\n      openSuccessNotification('Deleted Tag');\r\n      const newtagList = data.filter((item) => item.id !== id);\r\n      setTagList(newtagList);\r\n    }\r\n  };\r\n\r\n  const handleOk = (e: any) => {\r\n    setvisible(false);\r\n  };\r\n\r\n  const handleCancel = (e: any) => {\r\n    setvisible(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Table\r\n        // expandable={{\r\n        //     expandedRowRender: record => <p style={{ margin: 0 }}>{record.name}</p>,\r\n        //     rowExpandable: record => record.name !== 'Not Expandable',\r\n        //   }}\r\n        // bordered={true}\r\n        size='small'\r\n        // pagination={false}\r\n        dataSource={data}\r\n      >\r\n        <Column\r\n          title='Name'\r\n          dataIndex='name'\r\n          key='id'\r\n          className='classnameofthecolumn'\r\n          render={(text, record: any) => (\r\n            <>\r\n              <h4\r\n                onClick={() => {\r\n                  history.push(`/admin/tag/${record.id}`);\r\n                  // setBrandDetailVisible(true);\r\n                  setactiveCategoryForEdit(record);\r\n                }}\r\n                style={{\r\n                  fontWeight: 400,\r\n                  color: '#555',\r\n                  cursor: 'pointer',\r\n                }}\r\n              >\r\n                {text}\r\n              </h4>\r\n            </>\r\n          )}\r\n        />\r\n\r\n        <Column\r\n          title='Description'\r\n          dataIndex='description'\r\n          key='id'\r\n          className='classnameofthecolumn'\r\n        />\r\n\r\n        {/* <Column\r\n\t\t\t\t\ttitle=\"Product\"\r\n\t\t\t\t\tdataIndex=\"productCount\"\r\n\t\t\t\t\tkey=\"id\"\r\n\t\t\t\t\tclassName='classnameofthecolumn'\r\n\t\t\t\t/> */}\r\n\r\n        {isAccess('postCatalogue', roles) && (\r\n          <Column\r\n            className='classnameofthecolumn'\r\n            title=''\r\n            key='action'\r\n            align='right'\r\n            render={(text, record: any) => (\r\n              <Space size='middle'>\r\n                <a href='##'>\r\n                  <Tooltip placement='top' title='Quick Edit Tag'>\r\n                    <span\r\n                      className='iconSize'\r\n                      onClick={() => {\r\n                        setvisible(true);\r\n                        setactiveCategoryForEdit(record);\r\n                      }}\r\n                    >\r\n                      <EditOutlined />\r\n                    </span>\r\n                  </Tooltip>\r\n                </a>\r\n\r\n                <Popconfirm\r\n                  onConfirm={() => handleDeleteTag(record.id)}\r\n                  title='Are you sure？'\r\n                  okText='Yes'\r\n                  cancelText='No'\r\n                >\r\n                  <span className='iconSize iconSize-danger'>\r\n                    <DeleteOutlined />\r\n                  </span>\r\n                </Popconfirm>\r\n              </Space>\r\n            )}\r\n          />\r\n        )}\r\n      </Table>\r\n\r\n      {activeCategoryForEdit && (\r\n        <TagQuickEdit\r\n          tagList={data}\r\n          setTagList={setTagList}\r\n          tagEditVisible={visible}\r\n          setTagEditVisible={setvisible}\r\n          tagDetailData={activeCategoryForEdit}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\ninterface Props {\r\n  roles?: any;\r\n}\r\n\r\nconst TagList = ({ roles }: Props) => {\r\n  const [tagList, setTagList] = useState([]);\r\n\r\n  const [tagState, handleTagListFetch] = useHandleFetch({}, 'tagList');\r\n\r\n  useEffect(() => {\r\n    const setTags = async () => {\r\n      const tags = await handleTagListFetch({\r\n        urlOptions: {\r\n          params: {\r\n            sortItem: 'added',\r\n            sortOrderValue: '-1',\r\n          },\r\n        },\r\n      });\r\n      // @ts-ignore\r\n      setTagList(tags);\r\n    };\r\n    setTags();\r\n  }, []);\r\n\r\n  const [addTagState, handleAddTagFetch] = useHandleFetch({}, 'addTag');\r\n  const [addNewCategoryVisible, setAddNewCategoryVisible] = useState(false);\r\n\r\n  const getisSubmitButtonDisabled = (values, isValid) => {\r\n    if (!values.name || !isValid) {\r\n      return true;\r\n    }\r\n    return false;\r\n  };\r\n\r\n  const handleOkAddNewCategory = (e: any) => {\r\n    setAddNewCategoryVisible(false);\r\n  };\r\n\r\n  const handleCancelAddNewCategory = (e: any) => {\r\n    setAddNewCategoryVisible(false);\r\n  };\r\n\r\n  const handleSearch = (value) => {\r\n    if (tagState.data.length > 0) {\r\n      const newTagList = tagState.data.filter((item) =>\r\n        item.name.toLowerCase().includes(value.toLowerCase())\r\n      );\r\n      setTagList(newTagList);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className='categoryListContainer'>\r\n        <div className='categoryListContainer__header'>\r\n          <div className='categoryListContainer__header-searchBar-tag'>\r\n            <h2 className='categoryListContainer__header-title'>Tags</h2>\r\n\r\n            <Search\r\n              enterButton={false}\r\n              className='searchbarClassName'\r\n              placeholder='search tags..'\r\n              onChange={(e) => handleSearch(e.target.value)}\r\n            />\r\n          </div>\r\n\r\n          {isAccess('postCatalogue', roles) && (\r\n            <Button\r\n              // type=\"primary\"\r\n              className='btnPrimaryClassNameoutline'\r\n              icon={<PlusOutlined />}\r\n              onClick={() => setAddNewCategoryVisible(true)}\r\n            >\r\n              Add New\r\n            </Button>\r\n          )}\r\n        </div>\r\n        <div className='categoryListContainer__categoryList'>\r\n          {tagState.done && tagList.length > 0 && (\r\n            <MyTable roles={roles} setTagList={setTagList} data={tagList} />\r\n          )}\r\n          {tagState.isLoading && <DataTableSkeleton />}\r\n\r\n          {tagState.done && !(tagList.length > 0) && (\r\n            <div\r\n              style={{\r\n                marginTop: '200px',\r\n              }}\r\n            >\r\n              <Empty\r\n                description='No Tags found'\r\n                image={Empty.PRESENTED_IMAGE_SIMPLE}\r\n              />\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <AddNewTag\r\n        tagList={tagList}\r\n        setTagList={setTagList}\r\n        addNewCategoryVisible={addNewCategoryVisible}\r\n        setAddNewCategoryVisible={setAddNewCategoryVisible}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  roles: state.globalState,\r\n});\r\n\r\n// @ts-ignore\r\nexport default connect(mapStateToProps, null)(TagList);\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Modal, notification } from 'antd';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport { useHandleFetch } from '../../hooks';\r\nimport {\r\n  CheckCircleOutlined,\r\n  PlusOutlined,\r\n  EditOutlined,\r\n  DeleteOutlined,\r\n  EditFilled,\r\n  InfoCircleOutlined,\r\n} from '@ant-design/icons';\r\nimport MetaTags from '../../pages/category/MetaTags';\r\n\r\nconst validationSchema = Yup.object().shape({\r\n  name: Yup.string()\r\n    .label('Name')\r\n    .required('Name is required')\r\n    .min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n  notification.success({\r\n    message: message || 'Tag Updated',\r\n    description: '',\r\n    icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n  });\r\n};\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n  notification.success({\r\n    message: message || 'Something Went Wrong',\r\n    description: '',\r\n    icon: <InfoCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n  });\r\n};\r\n\r\nconst initialValues = {\r\n  name: '',\r\n  bnName: '',\r\n  description: '',\r\n  bnDescription: '',\r\n  metaTitle: '',\r\n  bnMetaTitle: '',\r\n  metaDescription: '',\r\n  bnMetaDescription: '',\r\n  metaTags: '',\r\n  bnMetaTags: '',\r\n};\r\n\r\ninterface Props {\r\n  tagEditVisible?: any;\r\n  setTagEditVisible?: any;\r\n  tagDetailData?: any;\r\n  setTagDetailData?: any;\r\n}\r\n\r\nconst QuickEdit = ({\r\n  tagEditVisible,\r\n  setTagEditVisible,\r\n  tagDetailData,\r\n  setTagDetailData,\r\n}: Props) => {\r\n  const [updateTagState, handleUpdateCategoryFetch] = useHandleFetch(\r\n    {},\r\n    'updateTag'\r\n  );\r\n  const [tags, setTags] = useState([]);\r\n  const [bnTags, setBnTags] = useState([]);\r\n\r\n  const handleSubmit = async (values: any, actions: any) => {\r\n    const updateTagRes = await handleUpdateCategoryFetch({\r\n      urlOptions: {\r\n        placeHolders: {\r\n          id: values.id,\r\n        },\r\n      },\r\n      body: {\r\n        name: values.name,\r\n        description: values.description,\r\n        metaTitle: values.metaTitle,\r\n        metaDescription: values.metaDescription,\r\n        metaTags: tags.join(','),\r\n\r\n        bn: {\r\n          metaTitle: values.bnMetaTitle,\r\n          metaDescription: values.bnMetaDescription,\r\n          metaTags: bnTags.join(','),\r\n          name: values.bnName.trim(),\r\n          description: values.bnDescription,\r\n        },\r\n      },\r\n    });\r\n\r\n    // @ts-ignore\r\n    if (updateTagRes && updateTagRes.status === 'ok') {\r\n      setTagDetailData({\r\n        id: values.id,\r\n        key: values.id,\r\n        name: values.name,\r\n        description: values.description,\r\n      });\r\n      console.log('categoryupdateTagRes', updateTagRes);\r\n      openSuccessNotification();\r\n      setTagEditVisible(false);\r\n\r\n      // const positionInTag = () => {\r\n      //     return tagList.map(item => item.id).indexOf(category.id);\r\n      // }\r\n\r\n      // const index = positionInTag();\r\n\r\n      // const updatedItem = Object.assign({}, tagList[index], { ...updateTagRes });\r\n      // const updateTagList = [...tagList.slice(0, index), updatedItem, ...tagList.slice(index + 1)];\r\n      // setTagList(updateTagList);\r\n    } else {\r\n      openErrorNotification();\r\n    }\r\n\r\n    actions.setSubmitting(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!updateTagState['isLoading']) {\r\n      const error = updateTagState['error'];\r\n      if (error['isError'] && Object.keys(error['error']).length > 0) {\r\n        const errors =\r\n          Object.values(error['error']).length > 0\r\n            ? Object.values(error['error'])\r\n            : [];\r\n        errors.forEach((err, i) => {\r\n          if (typeof err === 'string') {\r\n            openErrorNotification(err);\r\n          } else if (typeof err === 'object') {\r\n            if (err && Object.keys(err).length > 0) {\r\n              const errs = Object.values(err);\r\n              errs.forEach((err) => {\r\n                openErrorNotification(err);\r\n              });\r\n            }\r\n          }\r\n        });\r\n      }\r\n    }\r\n  }, [updateTagState]);\r\n\r\n  const handleCancel = (e: any) => {\r\n    setTagEditVisible(false);\r\n  };\r\n\r\n  const getisSubmitButtonDisabled = (values, isValid) => {\r\n    if (!values.name || !isValid) {\r\n      return true;\r\n    }\r\n    return false;\r\n  };\r\n\r\n  // useEffect(()=>{\r\n\r\n  //     if(tagDetailData && Object.keys(tagDetailData).length > 0){\r\n  //         const metaTags = tagDetailData.metaTags.split(',');\r\n\r\n  //         console.log('localMetaTags',metaTags);\r\n\r\n  //         const bnMetaTags = tagDetailData.bn['metaTags'].split(',');\r\n\r\n  //         setTags(metaTags)\r\n  //         setBnTags(bnMetaTags)\r\n  //     }\r\n\r\n  // },[]);\r\n\r\n  console.log('tagDetailData', tagDetailData);\r\n\r\n  return (\r\n    <Formik\r\n      onSubmit={(values, actions) => handleSubmit(values, actions)}\r\n      validationSchema={validationSchema}\r\n      validateOnBlur={false}\r\n      enableReinitialize={true}\r\n      initialValues={{\r\n        ...initialValues,\r\n        ...tagDetailData,\r\n        ...(tagDetailData &&\r\n          Object.keys(tagDetailData).length > 0 && {\r\n            bnMetaTitle:\r\n              tagDetailData['bn'] &&\r\n              tagDetailData['bn'].metaTitle &&\r\n              tagDetailData['bn'].metaTitle,\r\n            bnMetaDescription:\r\n              tagDetailData['bn'] &&\r\n              tagDetailData['bn'].metaDescription &&\r\n              tagDetailData['bn'].metaDescription,\r\n            bnName:\r\n              tagDetailData['bn'] &&\r\n              tagDetailData['bn'].name &&\r\n              tagDetailData['bn'].name,\r\n            bnDescription:\r\n              tagDetailData['bn'] &&\r\n              tagDetailData['bn'].description &&\r\n              tagDetailData['bn'].description,\r\n          }),\r\n      }}\r\n    >\r\n      {({\r\n        handleChange,\r\n        values,\r\n        handleSubmit,\r\n        errors,\r\n        isValid,\r\n        isSubmitting,\r\n        touched,\r\n        handleBlur,\r\n        setFieldTouched,\r\n        handleReset,\r\n      }) => (\r\n        <>\r\n          <Modal\r\n            style={{\r\n              top: '40px',\r\n            }}\r\n            title='Tag Edit'\r\n            visible={tagEditVisible}\r\n            onOk={(e: any) => handleSubmit(e)}\r\n            onCancel={handleCancel}\r\n            okText='Update'\r\n            okButtonProps={{\r\n              loading: isSubmitting,\r\n              htmlType: 'submit',\r\n            }}\r\n          >\r\n            <Input\r\n              label='Name *'\r\n              value={values.name}\r\n              name='name'\r\n              placeHolder={'new,fresh'}\r\n              isError={\r\n                (touched.name && errors.name) ||\r\n                (!isSubmitting && updateTagState.error['error']['name'])\r\n              }\r\n              errorString={\r\n                (touched.name && errors.name) ||\r\n                (!isSubmitting && updateTagState.error['error']['name'])\r\n              }\r\n              onChange={(e: any) => {\r\n                handleChange(e);\r\n                setFieldTouched('name');\r\n              }}\r\n            />\r\n\r\n            <Input\r\n              label='BN Name'\r\n              value={values.bnName}\r\n              placeHolder={'নতুন,ফ্রেশ'}\r\n              name='bnName'\r\n              isError={\r\n                (touched.bnName && errors.bnName) ||\r\n                (!isSubmitting && updateTagState.error['error']['bnName'])\r\n              }\r\n              errorString={\r\n                (touched.bnName && errors.bnName) ||\r\n                (!isSubmitting && updateTagState.error['error']['bnName'])\r\n              }\r\n              onChange={(e: any) => {\r\n                handleChange(e);\r\n                setFieldTouched('bnName');\r\n              }}\r\n            />\r\n\r\n            <TextArea\r\n              label='Description'\r\n              value={values.description}\r\n              name='description'\r\n              placeholder={'This tag...'}\r\n              isError={\r\n                (touched.description && errors.description) ||\r\n                (!isSubmitting && updateTagState.error['error']['description'])\r\n              }\r\n              errorString={\r\n                (touched.description && errors.description) ||\r\n                (!isSubmitting && updateTagState.error['error']['description'])\r\n              }\r\n              onChange={(e: any) => {\r\n                handleChange(e);\r\n                setFieldTouched('description');\r\n              }}\r\n            />\r\n\r\n            <TextArea\r\n              label='BN Description'\r\n              value={values.bnDescription}\r\n              placeholder={'এই ট্যাগ...'}\r\n              name='bnDescription'\r\n              isError={\r\n                (touched.bnDescription && errors.bnDescription) ||\r\n                (!isSubmitting &&\r\n                  updateTagState.error['error']['bnDescription'])\r\n              }\r\n              errorString={\r\n                (touched.bnDescription && errors.bnDescription) ||\r\n                (!isSubmitting &&\r\n                  updateTagState.error['error']['bnDescription'])\r\n              }\r\n              onChange={(e: any) => {\r\n                handleChange(e);\r\n                setFieldTouched('bnDescription');\r\n              }}\r\n            />\r\n\r\n            <Input\r\n              label='Meta title'\r\n              value={values.metaTitle}\r\n              placeHolder={'...'}\r\n              name='metaTitle'\r\n              isError={\r\n                (touched.metaTitle && errors.metaTitle) ||\r\n                (!isSubmitting && updateTagState.error['error']['metaTitle'])\r\n              }\r\n              errorString={\r\n                (touched.metaTitle && errors.metaTitle) ||\r\n                (!isSubmitting && updateTagState.error['error']['metaTitle'])\r\n              }\r\n              onChange={(e: any) => {\r\n                handleChange(e);\r\n                setFieldTouched('metaTitle');\r\n              }}\r\n            />\r\n\r\n            <Input\r\n              label='BN Meta title'\r\n              value={values.bnMetaTitle}\r\n              placeHolder={'...'}\r\n              name='bnMetaTitle'\r\n              isError={\r\n                (touched.bnMetaTitle && errors.bnMetaTitle) ||\r\n                (!isSubmitting && updateTagState.error['error']['bnMetaTitle'])\r\n              }\r\n              errorString={\r\n                (touched.bnMetaTitle && errors.bnMetaTitle) ||\r\n                (!isSubmitting && updateTagState.error['error']['bnMetaTitle'])\r\n              }\r\n              onChange={(e: any) => {\r\n                handleChange(e);\r\n                setFieldTouched('bnMetaTitle');\r\n              }}\r\n            />\r\n\r\n            <TextArea\r\n              label='Meta description'\r\n              value={values.metaDescription}\r\n              placeholder={'meta...'}\r\n              name='metaDescription'\r\n              isError={\r\n                (touched.metaDescription && errors.metaDescription) ||\r\n                (!isSubmitting &&\r\n                  updateTagState.error['error']['metaDescription'])\r\n              }\r\n              errorString={\r\n                (touched.metaDescription && errors.metaDescription) ||\r\n                (!isSubmitting &&\r\n                  updateTagState.error['error']['metaDescription'])\r\n              }\r\n              onChange={(e: any) => {\r\n                handleChange(e);\r\n                setFieldTouched('metaDescription');\r\n              }}\r\n            />\r\n\r\n            <TextArea\r\n              label='BN Meta Description'\r\n              value={values.bnMetaDescription}\r\n              placeholder={'এইয় মেট...'}\r\n              name='bnMetaDescription'\r\n              isError={\r\n                (touched.bnMetaDescription && errors.bnMetaDescription) ||\r\n                (!isSubmitting &&\r\n                  updateTagState.error['error']['bnMetaDescription'])\r\n              }\r\n              errorString={\r\n                (touched.bnMetaDescription && errors.bnMetaDescription) ||\r\n                (!isSubmitting &&\r\n                  updateTagState.error['error']['bnMetaDescription'])\r\n              }\r\n              onChange={(e: any) => {\r\n                handleChange(e);\r\n                setFieldTouched('bnMetaDescription');\r\n              }}\r\n            />\r\n\r\n            <h3 className='inputFieldLabel'>Meta Tags (grocery,fashion)</h3>\r\n\r\n            <MetaTags\r\n              // @ts-ignore\r\n              setTags={setTags}\r\n              tags={tags}\r\n            />\r\n\r\n            <div\r\n              style={{\r\n                marginTop: '15px',\r\n              }}\r\n            ></div>\r\n\r\n            <h3 className='inputFieldLabel'>BN Meta Tags (মুদিখানা,ফ্যাশন)</h3>\r\n\r\n            <MetaTags\r\n              // @ts-ignore\r\n              setTags={setBnTags}\r\n              tags={bnTags}\r\n            />\r\n          </Modal>\r\n        </>\r\n      )}\r\n    </Formik>\r\n  );\r\n};\r\n\r\nexport default QuickEdit;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useParams, useHistory } from \"react-router\";\r\n\r\n\r\n// import hooks\r\nimport { useHandleFetch } from \"../../hooks\";\r\n\r\n// import lib\r\nimport {\r\n    FileOutlined,\r\n    InboxOutlined,\r\n    RadiusUpleftOutlined,\r\n    RadiusUprightOutlined,\r\n    RadiusBottomleftOutlined,\r\n    RadiusBottomrightOutlined,\r\n    PlusOutlined,\r\n    DeleteOutlined,\r\n    EditOutlined,\r\n    CheckCircleOutlined\r\n} from '@ant-design/icons';\r\n\r\nimport { Skeleton, Empty, Popconfirm, Upload, message, Switch, Select, Button, notification, Table, Space, Input as CoolInput, Tooltip, Modal } from 'antd';\r\n\r\n\r\n// import components\r\nimport { DataTableSkeleton } from \"../../components/Placeholders\";\r\nimport TagEdit from \"./TagEdit\";\r\n\r\n\r\n// import state\r\nimport { isAccess } from \"../../utils\";\r\nimport { connect } from \"react-redux\";\r\n\r\n\r\n\r\nconst { Column, ColumnGroup } = Table;\r\nconst { Search } = CoolInput;\r\n\r\n\r\ninterface Props {\r\n    roles?: any;\r\n}\r\n\r\nconst NewBrandDetail = ({roles}: Props) => {\r\n    const [tagDetailState, handleTagDetailFetch] = useHandleFetch({}, 'tagDetail');\r\n    const [tagProductsState, handleTagProductsFetch] = useHandleFetch({}, 'tagProducts');\r\n    const [tagEditVisible, setTagEditVisible] = useState(false);\r\n    const [tagDetailData,setTagDetailData] = useState({}); \r\n\r\n\r\n    const params = useParams();\r\n    const history = useHistory();\r\n    const tagId = params['id'];\r\n\r\n    useEffect(() => {\r\n\r\n        const getBrandDetail = async () => {\r\n            const tagDetailRes =  await handleTagDetailFetch({\r\n                urlOptions: {\r\n                    placeHolders: {\r\n                        id: tagId\r\n                    }\r\n                }\r\n            }); \r\n\r\n            // @ts-ignore\r\n            if(tagDetailRes){\r\n                console.log('tagDetailRes',tagDetailRes);\r\n                // @ts-ignore\r\n                setTagDetailData(tagDetailRes);\r\n            }\r\n        };\r\n\r\n        getBrandDetail();\r\n\r\n    }, [tagId]);\r\n\r\n    useEffect(() => {\r\n        const getTagProducts = async () => {\r\n            await handleTagProductsFetch({\r\n                urlOptions: {\r\n                    placeHolders: {\r\n                        id: tagId\r\n                    }\r\n                }\r\n            })\r\n        };\r\n\r\n        getTagProducts();\r\n\r\n    }, [tagId]);\r\n\r\n\r\n\r\n\r\n    console.log('tagProductsState', tagProductsState);\r\n\r\n    console.log('brandParams', params);\r\n\r\n\r\n    return (\r\n        <div className='brandDetailContainer'>\r\n            <div className='brandDetailContainer__heading'>\r\n                <h3>\r\n                    Tag Detail\r\n                </h3>\r\n\r\n                {tagDetailState.done && tagDetailData && (Object.keys(tagDetailData).length > 0) && (\r\n                    <>\r\n                        <TagEdit\r\n                            tagEditVisible={tagEditVisible}\r\n                            setTagEditVisible={setTagEditVisible}\r\n                            tagDetailData={tagDetailData}\r\n                            setTagDetailData={setTagDetailData}\r\n                        />\r\n\r\n                        \r\n\t\t\t\t\t{isAccess('postCatalogue',roles) && (\r\n\t\t\t\t\t  <Button\r\n                      onClick={() => setTagEditVisible(true)}\r\n                      type='link'\r\n                      icon={<EditOutlined />}\r\n                  >\r\n                      Edit\r\n                </Button>\r\n                 )}\r\n                    </>\r\n                )}\r\n\r\n                \r\n            </div>\r\n            <Skeleton\r\n                paragraph={{ rows: 2 }}\r\n                loading={tagDetailState.isLoading}>\r\n                {tagDetailState.done && tagDetailData && !(Object.keys(tagDetailData).length > 0) && (\r\n                    <Empty description='No Tag found' image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n                )}\r\n\r\n                {tagDetailState.done && tagDetailData && (Object.keys(tagDetailData).length > 0) && (\r\n                    <div className='brandDetailContainer__header'>\r\n\r\n                        <div className='brandDetailContainer__header-info'>\r\n                            <h2>\r\n                                {tagDetailData['name']}\r\n                            </h2>\r\n                            <h3>\r\n                                {tagDetailData['description']}\r\n                            </h3>\r\n                            {tagDetailData['url'] && (\r\n                                <h3>\r\n                                    URL:\r\n                                    <span>\r\n                                        {tagDetailData['url']}\r\n                                    </span>\r\n\r\n                                </h3>\r\n                            )}\r\n                        </div>\r\n                    </div>\r\n                )}\r\n\r\n            </Skeleton>\r\n\r\n            <div className='brandDetailContainer__heading'>\r\n                <h3>\r\n                    Products\r\n                </h3>\r\n            </div>\r\n            <div className='brandDetailContainer__body'>\r\n                {tagProductsState.isLoading && <DataTableSkeleton />}\r\n                {tagProductsState.done && !(tagProductsState.data.length > 0) && (\r\n                    <div style={{\r\n                        marginTop: '100px'\r\n                    }}>\r\n                        <Empty description='No Products exists for this tag' image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n                    </div>\r\n                )}\r\n\r\n                {tagProductsState.done && tagProductsState.data && tagProductsState.data.length > 0 && (\r\n                    <>\r\n                        <Table\r\n                            style={{\r\n                                paddingTop: '10px',\r\n                                borderRadius: '5px !important',\r\n                                overflow: 'hidden',\r\n                                boxShadow: '0 0.125rem 0.625rem rgba(227, 231, 250, 0.3), 0 0.0625rem 0.125rem rgba(206, 220, 233, 0.4)'\r\n                            }}\r\n                            // expandable={{\r\n                            //     expandedRowRender: record => <p style={{ margin: 0 }}>{record.name}</p>,\r\n                            //     rowExpandable: record => record.name !== 'Not Expandable',\r\n                            //   }}\r\n                            // bordered={true}\r\n                            size='small'\r\n                            // pagination={false}\r\n                            dataSource={tagProductsState.data}\r\n                            tableLayout={'auto'}\r\n                            onHeaderRow={column => {\r\n                                return {\r\n                                    style: {\r\n                                        color: 'red !important'\r\n                                    }\r\n\r\n                                };\r\n                            }}\r\n                        >\r\n                            <Column\r\n                                title=\"\"\r\n                                dataIndex=\"cover\"\r\n                                key=\"id\"\r\n                                width={'80px'}\r\n\r\n                                className='classnameofthecolumn'\r\n\r\n                                render={(cover, record: any) => (\r\n                                    <>\r\n                                        <img\r\n                                            onClick={() => {\r\n                                                history.push(`/admin/product/${record.id}`)\r\n                                            }}\r\n                                            src={cover} alt='cover img' style={{\r\n                                                height: '40px',\r\n                                                width: '40px',\r\n                                                objectFit: \"contain\",\r\n                                                borderRadius: '3px',\r\n                                                cursor: 'pointer'\r\n                                            }} />\r\n\r\n\r\n\r\n\r\n                                    </>\r\n                                )}\r\n                            />\r\n\r\n                            <Column\r\n                                title=\"Name\"\r\n                                dataIndex=\"name\"\r\n                                key=\"id\"\r\n                                className='classnameofthecolumn'\r\n                                render={(text, record: any) => (\r\n                                    <>\r\n                                        <h4\r\n                                            onClick={() => {\r\n                                                history.push(`/admin/product/${record.id}`)\r\n                                            }}\r\n                                            style={{\r\n                                                fontWeight: 400,\r\n                                                color: '#555',\r\n                                                cursor: 'pointer'\r\n\r\n                                            }}>\r\n                                            {text}\r\n                                        </h4>\r\n\r\n\r\n                                    </>\r\n                                )}\r\n\r\n                            />\r\n\r\n                            <Column\r\n                                title=\"Offer Price\"\r\n                                dataIndex=\"offerPrice\"\r\n                                key=\"id\"\r\n                                className='classnameofthecolumn'\r\n\r\n                            />\r\n\r\n\r\n                            <Column\r\n                                title=\"Price\"\r\n                                dataIndex=\"price\"\r\n                                key=\"id\"\r\n                                className='classnameofthecolumn'\r\n\r\n                            />\r\n\r\n\r\n                            <Column\r\n                                title=\"Available\"\r\n                                dataIndex=\"available\"\r\n                                key=\"id\"\r\n                                className='classnameofthecolumn'\r\n\r\n                            />\r\n\r\n\r\n                            <Column\r\n                                title=\"Minimum\"\r\n                                dataIndex=\"minimum\"\r\n                                key=\"id\"\r\n                                className='classnameofthecolumn'\r\n\r\n                            />\r\n\r\n                        </Table>\r\n                    </>\r\n                )}\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}; \r\n\r\nconst mapStateToProps = state => ({\r\n    roles: state.globalState,\r\n  })\r\n  \r\n  // @ts-ignore\r\n  export default connect(mapStateToProps, null)(NewBrandDetail);\r\n  \r\n  \r\n  \r\n\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useHandleFetch } from '../../hooks';\r\nimport { Select, Skeleton } from 'antd';\r\nimport Empty from \"../../components/Empty\";\r\n\r\n\r\ninterface Props {\r\n    setProductIds?: any;\r\n    productIds?: any;\r\n}\r\n\r\n\r\nconst Tags = ({\r\n    setProductIds,\r\n    productIds\r\n}: Props) => {\r\n    const [options, setoptions] = useState([]);\r\n    const [selectedOpions, setselectedOptions] = useState([]);\r\n    const [tagState, handleTagListFetch] = useHandleFetch({}, 'productList');\r\n\r\n    useEffect(() => {\r\n        const setTags = async () => {\r\n            const tagListRes = await handleTagListFetch({\r\n                urlOptions: {\r\n                    params: {\r\n                        isSubCategory: false\r\n                    }\r\n                }\r\n            });\r\n\r\n            // @ts-ignore\r\n            if (tagListRes && tagListRes.length > 0) {\r\n                // @ts-ignore\r\n                const tagOptions = tagListRes.map((tag) => {\r\n                    return tag.name\r\n                });\r\n                setoptions(tagOptions);\r\n            }\r\n\r\n        };\r\n\r\n        setTags();\r\n    }, []);\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        if(productIds && productIds.length > 0){\r\n            console.log('shippingRunning')\r\n            const selecttedOptions = productIds.map(item => item.name); \r\n            setselectedOptions(selecttedOptions)\r\n        }\r\n    },[productIds]); \r\n\r\n    console.log('OrderProudctItemsProductIds',productIds); \r\n\r\n\r\n\r\n\r\n    const handleChange = (selectItems) => {\r\n        setselectedOptions(selectItems);\r\n\r\n        console.log('selectedProducts', selectItems);\r\n\r\n        if (tagState.done && tagState.data.length > 0 && selectItems.length > 0) {\r\n            const selectedCategoryIds = selectItems.map((item) => {\r\n                const selectedcategory = tagState.data.find(\r\n                    (cat) => cat.name.toLowerCase() === item.toLowerCase()\r\n                );\r\n                if (selectedcategory) {\r\n                    return selectedcategory;\r\n                }\r\n            });\r\n            console.log('selectedCategoryIds', selectedCategoryIds);\r\n            setProductIds(selectedCategoryIds);\r\n        }\r\n        else {\r\n            setProductIds([])\r\n        }\r\n\r\n\r\n    }\r\n\r\n\r\n    // console.log('selectedOpions', selectedOpions);\r\n\r\n\r\n    return (\r\n        <>\r\n\r\n            <Skeleton loading={tagState.isLoading}>\r\n                {tagState.done && tagState.data.length > 0 && <Select\r\n                    mode=\"multiple\"\r\n                    placeholder=\"search products\"\r\n                    value={selectedOpions}\r\n                    onChange={handleChange}\r\n                    style={{ width: '100%' }}\r\n                >\r\n                    {options.filter(o => !selectedOpions.includes(o)).map(item => (\r\n                        <Select.Option key={item} value={item}>\r\n                            {item}\r\n                        </Select.Option>\r\n                    ))}\r\n                </Select>}\r\n                {tagState.done && tagState.data && !(tagState.data.length > 0) && (\r\n                    <div style={{\r\n                        marginLeft: '32px'\r\n                    }}>\r\n                        <Empty title='No Product Found' height={150} />\r\n                    </div>\r\n                )}\r\n\r\n            </Skeleton>\r\n\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Tags\r\n","import React from 'react'\r\n\r\n\r\n// import components\r\nimport AddNewOrderProductItem from \"../order/AddNewOrderProductItem\";\r\nimport Empty from \"../../components/Empty\";\r\n\r\nimport {\r\n    ShopOutlined\r\n} from '@ant-design/icons';\r\n\r\n\r\ninterface Props {\r\n    productList?: any;\r\n    setProductList?: any;\r\n}\r\n\r\nconst AddNewOrderSummary = ({\r\n    setProductList,\r\n    productList\r\n}: Props) => {\r\n    return (\r\n        <div\r\n            style={{\r\n                // @ts-ignore\r\n                flexDirection: 'flex'\r\n            }}\r\n            className='addOrderContainer__container-orderSummary'>\r\n            <div className='addOrderContainer__container-productItemContainer'>\r\n                {productList && productList.length > 0 && productList.map(item => {\r\n                    return <AddNewOrderProductItem\r\n                        setProductList={setProductList}\r\n                        productList={productList}\r\n                        productId={item._id}\r\n                        quantity={item.quantity}\r\n                        item={item}\r\n                        variation={item.variation}\r\n                    />;\r\n                })}\r\n\r\n                {!(productList.length > 0) && (\r\n                    <div style={{\r\n                        marginLeft: '32px'\r\n                    }}>\r\n                        <Empty title='No Product Added' height={150} />\r\n                    </div>\r\n                )}\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddNewOrderSummary\r\n","// @ts-nocheck\r\nimport React, { useState, useEffect } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\nimport { useHandleFetch } from '../../hooks';\r\n\r\n// import third party ui lib\r\nimport { notification, Modal, Tooltip, DatePicker } from 'antd';\r\n\r\nimport {\r\n  FileOutlined,\r\n  InboxOutlined,\r\n  FileAddOutlined,\r\n  DeleteOutlined,\r\n  CheckCircleOutlined,\r\n  CloseOutlined,\r\n  CheckOutlined,\r\n  InfoCircleOutlined,\r\n  PlusOutlined,\r\n  FileImageFilled,\r\n} from '@ant-design/icons';\r\n\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport MediaLibrary from '../../components/MediaLibrary';\r\nimport OrderedProductsSelectProducts from './OrderedProductsSelectProducts';\r\nimport OrderedProductsSelectedProductItems from './OrderedProductsSelectedProductItems';\r\nimport FreeSelectProducts from './FreeSelectProducts';\r\nimport FreeSelectedProductItems from './FreeSelectedProductItems';\r\n\r\nimport moment from 'moment';\r\n\r\nconst { RangePicker } = DatePicker;\r\n\r\nconst validationSchema = Yup.object().shape({\r\n  name: Yup.string()\r\n    .label('Name')\r\n    .required('Name is required')\r\n    .min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n  notification.success({\r\n    message: message || 'Coupon Updated',\r\n    description: '',\r\n    icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n  });\r\n};\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n  notification.error({\r\n    message: message || 'Something Went Wrong',\r\n    description: '',\r\n    icon: <InfoCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n  });\r\n};\r\n\r\nconst initialValues = {\r\n  name: '',\r\n  code: '',\r\n  minimumOrder: null,\r\n  amount: '',\r\n  amountType: '',\r\n  orderedProducts: [],\r\n  freeDelivery: true,\r\n  freeProducts: [],\r\n};\r\n\r\ninterface Props {\r\n  addNewCategoryVisible?: any;\r\n  setAddNewCategoryVisible?: any;\r\n  category?: any;\r\n  setTagDetailData?: any;\r\n}\r\n\r\nconst AddNewBrand = ({\r\n  addNewCategoryVisible,\r\n  setAddNewCategoryVisible,\r\n  category,\r\n  setTagDetailData,\r\n}: Props) => {\r\n  const [addCouponState, handleAddCouponStateFetch] = useHandleFetch(\r\n    {},\r\n    'updateCoupon'\r\n  );\r\n  const [couponDetailState, handleCouponDetailFetch] = useHandleFetch(\r\n    {},\r\n    'couponDetail'\r\n  );\r\n  const [myImages, setmyImages] = useState(false);\r\n  const [visibleMedia, setvisibleMedia] = useState(false);\r\n  const [coverImageId, setCoverImageId] = useState('');\r\n  const [productIds, setProductIds] = useState([]);\r\n  const [productList, setProductList] = useState([]);\r\n  const [freeProductIds, setFreeProductIds] = useState([]);\r\n  const [freeProductList, setFreeProductList] = useState([]);\r\n  const [startDate, setStartDate] = useState('');\r\n  const [endDate, setEndDate] = useState('');\r\n\r\n  useEffect(() => {\r\n    const getProductDetail = async () => {\r\n      await handleCouponDetailFetch({\r\n        urlOptions: {\r\n          placeHolders: {\r\n            id: category.id,\r\n          },\r\n        },\r\n      });\r\n    };\r\n\r\n    getProductDetail();\r\n  }, [category]);\r\n\r\n  useEffect(() => {\r\n    if (\r\n      couponDetailState.data &&\r\n      Object.keys(couponDetailState.data).length > 0\r\n    ) {\r\n      const images = couponDetailState.data.image;\r\n      if (images && images.length > 0) {\r\n        setmyImages(images);\r\n      }\r\n\r\n      if (couponDetailState.data.cover && couponDetailState.data.cover['id']) {\r\n        // @ts-ignore\r\n        setmyImages([couponDetailState.data.cover]);\r\n        setCoverImageId(couponDetailState.data.cover['id']);\r\n      }\r\n    }\r\n  }, [couponDetailState.data]);\r\n\r\n  useEffect(() => {\r\n    // @ts-ignore\r\n    if (myImages && myImages[0] && myImages.length < 2) {\r\n      if (coverImageId !== myImages[0].id) {\r\n        setCoverImageId(myImages[0].id);\r\n      }\r\n    }\r\n  }, [myImages]);\r\n\r\n  const handleSubmit = async (values: any, actions: any) => {\r\n    // @ts-ignore\r\n    const imagesIds = myImages\r\n      ? myImages.map((image) => {\r\n          return image.id;\r\n        })\r\n      : [];\r\n\r\n    const orderedProducts =\r\n      productList.length > 0\r\n        ? productList.map((product) => {\r\n            return {\r\n              _id: product._id,\r\n              variation: product.variation,\r\n              quantity: product.quantity,\r\n            };\r\n          })\r\n        : [];\r\n\r\n    // const freeProducts = freeProductList.length > 0 ? freeProductList.map(product => {\r\n    //     return {\r\n    //         _id: product._id,\r\n    //         variation: product.variation,\r\n    //         quantity: product.quantity,\r\n    //     }\r\n    // }) : [];\r\n\r\n    const addTagRes = await handleAddCouponStateFetch({\r\n      urlOptions: {\r\n        placeHolders: {\r\n          id: values.id,\r\n        },\r\n      },\r\n      body: {\r\n        name: values.name.trim(),\r\n        code: values.code,\r\n        minimumOrder: values.minimumOrder,\r\n        amount: values.amount,\r\n        amountType: values.amountType,\r\n        // freeDelivery: false,\r\n        orderedProducts: orderedProducts,\r\n        // freeProducts: freeProducts,\r\n        cover: coverImageId || imagesIds[0] ? imagesIds[0] : '',\r\n        startDate,\r\n        endDate,\r\n      },\r\n    });\r\n\r\n    // @ts-ignore\r\n    if (addTagRes && addTagRes.status === 'ok') {\r\n      openSuccessNotification();\r\n      setAddNewCategoryVisible(false);\r\n\r\n      setTagDetailData({\r\n        ...category,\r\n        // @ts-ignore\r\n        ...addTagRes,\r\n      });\r\n\r\n      //   actions.resetForm();\r\n    } else {\r\n      openErrorNotification();\r\n    }\r\n\r\n    actions.setSubmitting(false);\r\n  };\r\n\r\n  const handleCancel = (e: any) => {\r\n    setAddNewCategoryVisible(false);\r\n  };\r\n\r\n  const getisSubmitButtonDisabled = (values, isValid) => {\r\n    if (!values.name || !isValid) {\r\n      return true;\r\n    }\r\n    return false;\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (category && Object.keys(category).length > 0) {\r\n      const images = category.image;\r\n      if (images && images.length > 0) {\r\n        setmyImages(images);\r\n      }\r\n\r\n      if (category.cover && category.cover['id']) {\r\n        // @ts-ignore\r\n        setmyImages([category.cover]);\r\n        setCoverImageId(category.cover['id']);\r\n      }\r\n    }\r\n  }, [category]);\r\n\r\n  useEffect(() => {\r\n    if (!addCouponState['isLoading']) {\r\n      const error = addCouponState['error'];\r\n      if (error['isError'] && Object.keys(error['error']).length > 0) {\r\n        const errors =\r\n          Object.values(error['error']).length > 0\r\n            ? Object.values(error['error'])\r\n            : [];\r\n        errors.forEach((err, i) => {\r\n          if (typeof err === 'string') {\r\n            openErrorNotification(err);\r\n          } else if (typeof err === 'object') {\r\n            if (err && Object.keys(err).length > 0) {\r\n              const errs = Object.values(err);\r\n              errs.forEach((err) => {\r\n                openErrorNotification(err);\r\n              });\r\n            }\r\n          }\r\n        });\r\n      }\r\n    }\r\n  }, [addCouponState]);\r\n\r\n  useEffect(() => {\r\n    if (\r\n      couponDetailState.done &&\r\n      couponDetailState['data'] &&\r\n      Object.keys(couponDetailState['data']).length > 0 && [\r\n        'orderedProducts',\r\n      ] &&\r\n      couponDetailState['data']['orderedProducts'].length > 0\r\n    ) {\r\n      const productIds = couponDetailState['data']['orderedProducts'].map(\r\n        (item) => item\r\n      );\r\n      setProductIds(productIds);\r\n      const productList = couponDetailState['data']['orderedProducts'].map(\r\n        (item) => {\r\n          return {\r\n            ...item,\r\n            _id: item._id,\r\n            variation: item.variation,\r\n            quantity: item.quantity,\r\n          };\r\n        }\r\n      );\r\n      setProductList(productList);\r\n    }\r\n  }, [couponDetailState]);\r\n\r\n  console.log('couponDetialQuickEdit', couponDetailState);\r\n\r\n  useEffect(() => {\r\n    if (productIds.length > 0) {\r\n      if (productIds.length > productList.length) {\r\n        const variation =\r\n          productIds[productIds.length - 1]['pricing'].length > 0 &&\r\n          productIds[productIds.length - 1]['pricing'][0]['_id'];\r\n        console.log('variation', variation);\r\n\r\n        setProductList([\r\n          ...productList,\r\n          {\r\n            ...productIds[productIds.length - 1],\r\n            _id: productIds[productIds.length - 1]['id'],\r\n            variation: variation,\r\n            quantity: 1,\r\n          },\r\n        ]);\r\n      } else if (productIds.length < productList.length) {\r\n        console.log('productIds', productIds);\r\n        console.log('productList', productList);\r\n\r\n        const newProductList = productList.filter((item) => {\r\n          let isTrue = false;\r\n          productIds.forEach((product) => {\r\n            if (product.id === item._id) {\r\n              isTrue = true;\r\n            }\r\n          });\r\n          return isTrue;\r\n        });\r\n        setProductList(newProductList);\r\n      }\r\n    } else {\r\n      setProductList([]);\r\n    }\r\n    // console.log('productIds', productIds)\r\n  }, [productIds]);\r\n\r\n  useEffect(() => {\r\n    if (freeProductIds.length > 0) {\r\n      if (freeProductIds.length > freeProductList.length) {\r\n        const variation =\r\n          freeProductIds[freeProductIds.length - 1]['pricing'].length > 0 &&\r\n          freeProductIds[freeProductIds.length - 1]['pricing'][0]['_id'];\r\n        console.log('variation', variation);\r\n\r\n        setFreeProductList([\r\n          ...freeProductList,\r\n          {\r\n            ...freeProductIds[freeProductIds.length - 1],\r\n            _id: freeProductIds[freeProductIds.length - 1]['id'],\r\n            variation: variation,\r\n            quantity: 1,\r\n          },\r\n        ]);\r\n      } else if (freeProductIds.length < freeProductList.length) {\r\n        console.log('freeProductIds', freeProductIds);\r\n        console.log('productList', productList);\r\n\r\n        const newProductList = freeProductList.filter((item) => {\r\n          let isTrue = false;\r\n          freeProductIds.forEach((product) => {\r\n            if (product.id === item._id) {\r\n              isTrue = true;\r\n            }\r\n          });\r\n          return isTrue;\r\n        });\r\n        setFreeProductList(newProductList);\r\n      }\r\n    } else {\r\n      setFreeProductList([]);\r\n    }\r\n    // console.log('freeProductIds', freeProductIds)\r\n  }, [freeProductIds]);\r\n\r\n  const handleImagesDelete = (id) => {\r\n    // @ts-ignore\r\n    const newImages =\r\n      myImages &&\r\n      myImages.filter((image) => {\r\n        return image.id !== id;\r\n      });\r\n\r\n    setmyImages(newImages);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (category && Object.keys(category).length > 0) {\r\n      console.log('hsit');\r\n\r\n      let startDate = category.startDate;\r\n      let endDate = category.endDate;\r\n\r\n      startDate = startDate && new Date(moment(startDate).format());\r\n      endDate = endDate && new Date(moment(endDate).format());\r\n\r\n      console.log('CategorydateStart', startDate);\r\n      console.log('CategorydateStart', endDate);\r\n\r\n      // @ts-ignore\r\n      setStartDate(startDate);\r\n      // @ts-ignore\r\n      setEndDate(endDate);\r\n    }\r\n  }, [category]);\r\n\r\n  const handleStartEndDateRangeDate = (e) => {\r\n    const startDate = e[0] && new Date(moment(e[0]).format());\r\n    const endDate = e[1] && new Date(moment(e[1]).format());\r\n    // @ts-ignore\r\n    setStartDate(startDate);\r\n    // @ts-ignore\r\n    setEndDate(endDate);\r\n  };\r\n\r\n  const dateFormat = 'YYYY-MM-DD';\r\n\r\n  return (\r\n    <Formik\r\n      onSubmit={(values, actions) => handleSubmit(values, actions)}\r\n      validationSchema={validationSchema}\r\n      validateOnBlur={false}\r\n      enableReinitialize={true}\r\n      initialValues={{ ...initialValues, ...category }}\r\n    >\r\n      {({\r\n        handleChange,\r\n        values,\r\n        handleSubmit,\r\n        errors,\r\n        isValid,\r\n        isSubmitting,\r\n        touched,\r\n        handleBlur,\r\n        setFieldTouched,\r\n        handleReset,\r\n      }) => (\r\n        <>\r\n          <Modal\r\n            width={'45vw'}\r\n            style={{\r\n              top: '40px',\r\n            }}\r\n            title='Edit Coupon'\r\n            visible={addNewCategoryVisible}\r\n            onOk={(e: any) => handleSubmit(e)}\r\n            onCancel={handleCancel}\r\n            okText='Update'\r\n            okButtonProps={{\r\n              loading: isSubmitting,\r\n              htmlType: 'submit',\r\n              disabled: getisSubmitButtonDisabled(values, isValid),\r\n            }}\r\n          >\r\n            <div className='dubbleRowInputs'>\r\n              <div className='dubbleRowInputs__item'>\r\n                <Input\r\n                  label='Name'\r\n                  value={values.name}\r\n                  name='name'\r\n                  isError={\r\n                    (touched.name && errors.name) ||\r\n                    (!isSubmitting && addCouponState.error['error']['name'])\r\n                  }\r\n                  errorString={\r\n                    (touched.name && errors.name) ||\r\n                    (!isSubmitting && addCouponState.error['error']['name'])\r\n                  }\r\n                  onChange={(e: any) => {\r\n                    handleChange(e);\r\n                    setFieldTouched('name');\r\n                  }}\r\n                />\r\n              </div>\r\n              <div className='dubbleRowInputs__item'>\r\n                <Input\r\n                  label='Code'\r\n                  value={values.code}\r\n                  name='code'\r\n                  isError={\r\n                    (touched.code && errors.code) ||\r\n                    (!isSubmitting && addCouponState.error['error']['code'])\r\n                  }\r\n                  errorString={\r\n                    (touched.code && errors.code) ||\r\n                    (!isSubmitting && addCouponState.error['error']['code'])\r\n                  }\r\n                  onChange={(e: any) => {\r\n                    handleChange(e);\r\n                    setFieldTouched('code');\r\n                  }}\r\n                />\r\n              </div>\r\n            </div>\r\n\r\n            <Input\r\n              label='Minimum Order'\r\n              value={values.minimumOrder}\r\n              name='minimumOrder'\r\n              isError={\r\n                (touched.minimumOrder && errors.minimumOrder) ||\r\n                (!isSubmitting && addCouponState.error['error']['minimumOrder'])\r\n              }\r\n              errorString={\r\n                (touched.minimumOrder && errors.minimumOrder) ||\r\n                (!isSubmitting && addCouponState.error['error']['minimumOrder'])\r\n              }\r\n              onChange={(e: any) => {\r\n                handleChange(e);\r\n                setFieldTouched('minimumOrder');\r\n              }}\r\n            />\r\n\r\n            <div className='dubbleRowInputs'>\r\n              <div className='dubbleRowInputs__item'>\r\n                <Input\r\n                  label='Discount Amount'\r\n                  value={values.amount}\r\n                  name='amount'\r\n                  isError={\r\n                    (touched.amount && errors.amount) ||\r\n                    (!isSubmitting && addCouponState.error['error']['amount'])\r\n                  }\r\n                  errorString={\r\n                    (touched.amount && errors.amount) ||\r\n                    (!isSubmitting && addCouponState.error['error']['amount'])\r\n                  }\r\n                  onChange={(e: any) => {\r\n                    handleChange(e);\r\n                    setFieldTouched('amount');\r\n                  }}\r\n                />\r\n              </div>\r\n              <div className='dubbleRowInputs__item'>\r\n                <Input\r\n                  label='Discount Amount Type'\r\n                  value={values.amountType}\r\n                  name='amountType'\r\n                  isError={\r\n                    (touched.amountType && errors.amountType) ||\r\n                    (!isSubmitting &&\r\n                      addCouponState.error['error']['amountType'])\r\n                  }\r\n                  errorString={\r\n                    (touched.amountType && errors.amountType) ||\r\n                    (!isSubmitting &&\r\n                      addCouponState.error['error']['amountType'])\r\n                  }\r\n                  onChange={(e: any) => {\r\n                    handleChange(e);\r\n                    setFieldTouched('amountType');\r\n                  }}\r\n                />\r\n              </div>\r\n            </div>\r\n\r\n            {true && (\r\n              <div\r\n                style={{\r\n                  marginBottom: '15px',\r\n                }}\r\n              >\r\n                <h3 className='inputFieldLabel'>Start and end date</h3>\r\n                <RangePicker\r\n                  style={{\r\n                    borderRadius: '8px',\r\n                    borderColor: '#eee',\r\n                    width: '100%',\r\n                  }}\r\n                  value={[\r\n                    moment(startDate, dateFormat).isValid()\r\n                      ? moment(startDate, dateFormat)\r\n                      : undefined,\r\n                    moment(endDate, dateFormat).isValid()\r\n                      ? moment(endDate, dateFormat)\r\n                      : undefined,\r\n                  ]}\r\n                  showTime={true}\r\n                  onChange={handleStartEndDateRangeDate}\r\n                  picker={'date'}\r\n                />\r\n              </div>\r\n            )}\r\n\r\n            <div\r\n              className='addproductSection-left-header'\r\n              style={{\r\n                marginBottom: '-5px',\r\n              }}\r\n            >\r\n              <h3 className='inputFieldLabel'>Cover</h3>\r\n            </div>\r\n\r\n            <div className='aboutToUploadImagesContainer'>\r\n              {myImages &&\r\n                // @ts-ignore\r\n                myImages.length > 0 &&\r\n                myImages.map((image, index) => {\r\n                  return (\r\n                    <div className='aboutToUploadImagesContainer__item'>\r\n                      <div\r\n                        className='aboutToUploadImagesContainer__item-imgContainer'\r\n                        onClick={() => {\r\n                          setvisibleMedia(true);\r\n                        }}\r\n                      >\r\n                        <img src={image.cover} alt={image.alt} />\r\n                      </div>\r\n\r\n                      <span\r\n                        onClick={() => handleImagesDelete(image.id)}\r\n                        className='aboutToUploadImagesContainer__item-remove'\r\n                      >\r\n                        <CloseOutlined />\r\n                      </span>\r\n                      {/* \r\n                      {coverImageId === image.id ? (\r\n                        <span className='aboutToUploadImagesContainer__item-cover'>\r\n                          <CheckOutlined />\r\n                        </span>\r\n                      ) : (\r\n                        !coverImageId &&\r\n                        index === 0 && (\r\n                          <span className='aboutToUploadImagesContainer__item-cover'>\r\n                            <CheckOutlined />\r\n                          </span>\r\n                        )\r\n                      )} */}\r\n                    </div>\r\n                  );\r\n                })}\r\n\r\n              {!myImages ||\r\n              // @ts-ignore\r\n              (myImages && !(myImages && myImages.length > 0)) ? (\r\n                <>\r\n                  <Tooltip title={'Attach images'}>\r\n                    <div\r\n                      onClick={() => {\r\n                        setvisibleMedia(true);\r\n                      }}\r\n                      className='aboutToUploadImagesContainer__uploadItem'\r\n                    >\r\n                      <FileImageFilled />\r\n                      <span className='aboutToUploadImagesContainer__uploadItem-plus'>\r\n                        <PlusOutlined />\r\n                      </span>\r\n                    </div>\r\n                  </Tooltip>\r\n                </>\r\n              ) : (\r\n                ''\r\n              )}\r\n            </div>\r\n\r\n            <h3 className='inputFieldLabel'>Ordered Products</h3>\r\n\r\n            <OrderedProductsSelectProducts\r\n              setProductIds={setProductIds}\r\n              productIds={productIds}\r\n            />\r\n\r\n            <div\r\n              style={{\r\n                marginTop: '15px',\r\n              }}\r\n            ></div>\r\n\r\n            <h3 className='inputFieldLabel'>Selected Ordered Products</h3>\r\n\r\n            <OrderedProductsSelectedProductItems\r\n              productList={productList}\r\n              setProductList={setProductList}\r\n            />\r\n\r\n            {/* <h3 className='inputFieldLabel'>\r\n                                Free Products\r\n                                </h3>\r\n\r\n                            <OrderedProductsSelectProducts\r\n                                setProductIds={setFreeProductIds}\r\n                                productIds={freeProductIds}\r\n                            />\r\n\r\n                            <div style={{\r\n                                marginTop: \"15px\"\r\n                            }}></div>\r\n\r\n                            <h3 className='inputFieldLabel'>\r\n                                Selected Free Products\r\n                                </h3>\r\n\r\n                            <OrderedProductsSelectedProductItems\r\n                                productList={freeProductList}\r\n                                setProductList={setFreeProductList}\r\n                            /> */}\r\n          </Modal>\r\n\r\n          <MediaLibrary\r\n            setvisible={setvisibleMedia}\r\n            visible={visibleMedia}\r\n            setmyImages={setmyImages}\r\n            myImages={myImages}\r\n            isModalOpenForImages={false}\r\n          />\r\n        </>\r\n      )}\r\n    </Formik>\r\n  );\r\n};\r\n\r\nexport default AddNewBrand;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useParams, useHistory } from \"react-router\";\r\n\r\n\r\n// import hooks\r\nimport { useHandleFetch } from \"../../hooks\";\r\n\r\n// import lib\r\nimport {\r\n    FileOutlined,\r\n    InboxOutlined,\r\n    RadiusUpleftOutlined,\r\n    RadiusUprightOutlined,\r\n    RadiusBottomleftOutlined,\r\n    RadiusBottomrightOutlined,\r\n    PlusOutlined,\r\n    DeleteOutlined,\r\n    EditOutlined,\r\n    CheckCircleOutlined\r\n} from '@ant-design/icons';\r\n\r\nimport { Skeleton, Empty, Button, notification, Table, Space, Input as CoolInput, Tooltip, Modal } from 'antd';\r\n\r\n\r\n// import components\r\nimport { DataTableSkeleton } from \"../../components/Placeholders\";\r\nimport CouponEdit from \"./CouponEdit\";\r\nimport CouponProducts from \"./CouponProducts\";\r\nimport  moment from 'moment'\r\n\r\n\r\nconst { Column, ColumnGroup } = Table;\r\nconst { Search } = CoolInput;\r\n\r\n\r\ninterface Props {\r\n    productRecord?: any;\r\n}\r\n\r\nconst NewBrandDetail = (props: Props) => {\r\n    const [tagDetailState, handleTagDetailFetch] = useHandleFetch({}, 'couponDetail');\r\n    const [tagProductsState, handleTagProductsFetch] = useHandleFetch({}, 'tagProducts');\r\n    const [tagEditVisible, setTagEditVisible] = useState(false);\r\n    const [tagDetailData,setTagDetailData] = useState({}); \r\n\r\n    const params = useParams();\r\n    const history = useHistory();\r\n    const tagId = params['id'];\r\n\r\n    useEffect(() => {\r\n\r\n        const getBrandDetail = async () => {\r\n            const res = await handleTagDetailFetch({\r\n                urlOptions: {\r\n                    placeHolders: {\r\n                        id: tagId\r\n                    }\r\n                }\r\n            });\r\n\r\n            // @ts-ignore\r\n            if(res){\r\n                // @ts-ignore\r\n                setTagDetailData(res)\r\n            }\r\n        };\r\n\r\n        getBrandDetail();\r\n\r\n    }, [tagId]);\r\n\r\n\r\n\r\n\r\n\r\n\r\n    console.log('coupondetail', tagDetailState);\r\n\r\n    console.log('brandParams', params);\r\n\r\n\r\n    return (\r\n        <div className='brandDetailContainer'>\r\n            <div className='brandDetailContainer__heading'>\r\n                <h3>\r\n                    Coupon Detail\r\n                </h3>\r\n\r\n                {tagDetailState.done && tagDetailData && (Object.keys(tagDetailData).length > 0) && (\r\n                    <>\r\n                        <CouponEdit\r\n                            addNewCategoryVisible={tagEditVisible}\r\n                            setAddNewCategoryVisible={setTagEditVisible}\r\n                            category={tagDetailData}\r\n                            setTagDetailData={setTagDetailData}\r\n                        />\r\n                        <Button\r\n                            onClick={() => setTagEditVisible(true)}\r\n                            type='link'\r\n                            icon={<EditOutlined />}\r\n                        >\r\n                            Edit\r\n                      </Button>\r\n                    </>\r\n                )}\r\n            </div>\r\n            <Skeleton\r\n                paragraph={{ rows: 2 }}\r\n                loading={tagDetailState.isLoading}>\r\n                {tagDetailState.done && tagDetailData && !(Object.keys(tagDetailData).length > 0) && (\r\n                    <Empty description='No Coupon found' image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n                )}\r\n\r\n                {tagDetailState.done && tagDetailData && (Object.keys(tagDetailData).length > 0) && (\r\n                    <div className='brandDetailContainer__header'>\r\n                        <div className='brandDetailContainer__header-coverContainer'>\r\n                            <img src={tagDetailData['cover'] && tagDetailData['cover']['cover']} alt=\"\" />\r\n                        </div>\r\n                        <div className='brandDetailContainer__header-info'>\r\n                            <h2>\r\n                                {tagDetailData['name']}\r\n                            </h2>\r\n                            <h3>\r\n                                {tagDetailData['description']}\r\n                            </h3>\r\n                            {tagDetailData['code'] && (\r\n                                <h3>\r\n                                    CODE:\r\n                                    <span>\r\n                                        {tagDetailData['code']}\r\n                                    </span>\r\n\r\n                                </h3>\r\n                            )}\r\n                          \r\n\r\n                            {tagDetailData['amount'] && (\r\n                                <h3>\r\n                                    AMOUT:\r\n                                    <span>\r\n                                        {tagDetailData['amount']}\r\n                                    </span>\r\n\r\n                                </h3>\r\n                            )}\r\n\r\n\r\n                            {tagDetailData['startDate'] && (\r\n                                <h3>\r\n                                    START DATE:\r\n                                    <span>\r\n                                    {moment(tagDetailData['startDate']).format('MMMM Do YYYY, h:mm:ss a')}\r\n                                    </span>\r\n\r\n                                </h3>\r\n                            )}\r\n\r\n\r\n\r\n                            {tagDetailData['endDate'] && (\r\n                                <h3>\r\n                                    END DATE:\r\n                                    <span>\r\n                                    {moment(tagDetailData['endDate']).format('MMMM Do YYYY, h:mm:ss a')}\r\n                                    </span>\r\n\r\n                                </h3>\r\n                            )}\r\n                        </div>\r\n                    </div>\r\n                )}\r\n\r\n            </Skeleton>\r\n\r\n            <div className='brandDetailContainer__heading'>\r\n                <h3>\r\n                    Ordered Products\r\n                </h3>\r\n            </div>\r\n            <div className='brandDetailContainer__body'>\r\n                {tagProductsState.isLoading && <DataTableSkeleton />}\r\n                {tagDetailState.done && tagDetailData && tagDetailData['orderedProducts'] && !(tagDetailData['orderedProducts'].length > 0) && (\r\n                    <div style={{\r\n                        marginTop: '100px'\r\n                    }}>\r\n                        <Empty description='No Products exists for this coupon' image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n                    </div>\r\n\r\n                )}\r\n\r\n                {tagDetailState.done && tagDetailData && Object.keys(tagDetailData).length > 0 && (\r\n                    <>\r\n                        {tagDetailData['orderedProducts'] && tagDetailData['orderedProducts'].length > 0 &&\r\n                            tagDetailData['orderedProducts'].map(product => {\r\n                                return (\r\n                                    <CouponProducts productId={product['_id']} />\r\n                                )\r\n                            })}\r\n                    </>\r\n                )}\r\n            </div>\r\n\r\n            {/* {tagDetailState.done && tagDetailData && Object.keys(tagDetailData).length > 0 && tagDetailData['freeProducts'] && (\r\n                <div className='brandDetailContainer__heading'>\r\n                    <h3>\r\n                        Free Products\r\n                       </h3>\r\n                </div>\r\n            )\r\n            }\r\n\r\n            <div className='brandDetailContainer__body'>\r\n                {tagProductsState.isLoading && <DataTableSkeleton />}\r\n                {tagDetailState.done && tagDetailData && tagDetailData['freeProducts'] && !(tagDetailData['freeProducts'].length > 0) && (\r\n                    <div style={{\r\n                        marginTop: '100px'\r\n                    }}>\r\n                        <Empty description='No Products exists for this coupon' image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n                    </div>\r\n                )}\r\n\r\n                {tagDetailState.done && tagDetailData && Object.keys(tagDetailData).length > 0 && (\r\n                    <>\r\n                        {tagDetailData['freeProducts'] && tagDetailData['freeProducts'].length > 0 &&\r\n                            tagDetailData['freeProducts'].map(product => {\r\n                                return (\r\n                                    <CouponProducts\r\n                                        quantity={product.quantity}\r\n                                        productId={product['_id']} />\r\n                                )\r\n                            })}\r\n                    </>\r\n                )}\r\n\r\n            </div> */}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NewBrandDetail\r\n","// @ts-nocheck\r\nimport React, { useState, useEffect } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\nimport { useHandleFetch } from '../../hooks';\r\n\r\n// import third party ui lib\r\nimport { notification, Modal, Tooltip, DatePicker } from 'antd';\r\n\r\nimport {\r\n  FileOutlined,\r\n  InboxOutlined,\r\n  FileAddOutlined,\r\n  DeleteOutlined,\r\n  CheckCircleOutlined,\r\n  CloseOutlined,\r\n  CheckOutlined,\r\n  InfoCircleOutlined,\r\n  PlusOutlined,\r\n  FileImageFilled,\r\n} from '@ant-design/icons';\r\n\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport MediaLibrary from '../../components/MediaLibrary';\r\nimport OrderedProductsSelectProducts from './OrderedProductsSelectProducts';\r\nimport OrderedProductsSelectedProductItems from './OrderedProductsSelectedProductItems';\r\nimport FreeSelectProducts from './FreeSelectProducts';\r\nimport FreeSelectedProductItems from './FreeSelectedProductItems';\r\nimport moment from 'moment';\r\n\r\nconst { RangePicker } = DatePicker;\r\n\r\nconst validationSchema = Yup.object().shape({\r\n  // name: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n  notification.success({\r\n    message: message || 'Coupon Updated',\r\n    description: '',\r\n    icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n  });\r\n};\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n  notification.error({\r\n    message: message || 'Something Went Wrong',\r\n    description: '',\r\n    icon: <InfoCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n  });\r\n};\r\n\r\nconst initialValues = {\r\n  name: '',\r\n  code: '',\r\n  minimumOrder: null,\r\n  amount: '',\r\n  amountType: '',\r\n  orderedProducts: [],\r\n  freeDelivery: true,\r\n  freeProducts: [],\r\n};\r\n\r\ninterface Props {\r\n  addNewCategoryVisible?: any;\r\n  setAddNewCategoryVisible?: any;\r\n  tagList?: any;\r\n  setTagList?: any;\r\n  category?: any;\r\n}\r\n\r\nconst AddNewBrand = ({\r\n  addNewCategoryVisible,\r\n  setAddNewCategoryVisible,\r\n  tagList,\r\n  setTagList,\r\n  category,\r\n}: Props) => {\r\n  const [addCouponState, handleAddCouponStateFetch] = useHandleFetch(\r\n    {},\r\n    'updateCoupon'\r\n  );\r\n  const [couponDetailState, handleCouponDetailFetch] = useHandleFetch(\r\n    {},\r\n    'couponDetail'\r\n  );\r\n  const [myImages, setmyImages] = useState(false);\r\n  const [visibleMedia, setvisibleMedia] = useState(false);\r\n  const [coverImageId, setCoverImageId] = useState('');\r\n  const [productIds, setProductIds] = useState([]);\r\n  const [productList, setProductList] = useState([]);\r\n  const [freeProductIds, setFreeProductIds] = useState([]);\r\n  const [freeProductList, setFreeProductList] = useState([]);\r\n  const [startDate, setStartDate] = useState('');\r\n  const [endDate, setEndDate] = useState('');\r\n\r\n  useEffect(() => {\r\n    const getProductDetail = async () => {\r\n      await handleCouponDetailFetch({\r\n        urlOptions: {\r\n          placeHolders: {\r\n            id: category.id,\r\n          },\r\n        },\r\n      });\r\n    };\r\n\r\n    getProductDetail();\r\n  }, [category]);\r\n\r\n  useEffect(() => {\r\n    if (\r\n      couponDetailState.data &&\r\n      Object.keys(couponDetailState.data).length > 0\r\n    ) {\r\n      const images = couponDetailState.data.image;\r\n      if (images && images.length > 0) {\r\n        setmyImages(images);\r\n      }\r\n\r\n      if (couponDetailState.data.cover && couponDetailState.data.cover['id']) {\r\n        // @ts-ignore\r\n        setmyImages([couponDetailState.data.cover]);\r\n        setCoverImageId(couponDetailState.data.cover['id']);\r\n      }\r\n    }\r\n  }, [couponDetailState.data]);\r\n\r\n  useEffect(() => {\r\n    // @ts-ignore\r\n    if (myImages && myImages[0] && myImages.length < 2) {\r\n      if (coverImageId !== myImages[0].id) {\r\n        setCoverImageId(myImages[0].id);\r\n      }\r\n    }\r\n  }, [myImages]);\r\n\r\n  const handleSubmit = async (values: any, actions: any) => {\r\n    // @ts-ignore\r\n    const imagesIds = myImages\r\n      ? myImages.map((image) => {\r\n          return image.id;\r\n        })\r\n      : [];\r\n\r\n    const orderedProducts =\r\n      productList.length > 0\r\n        ? productList.map((product) => {\r\n            return {\r\n              _id: product._id,\r\n              variation: product.variation,\r\n              quantity: product.quantity,\r\n            };\r\n          })\r\n        : [];\r\n\r\n    // const freeProducts = freeProductList.length > 0 ? freeProductList.map(product => {\r\n    //     return {\r\n    //         _id: product._id,\r\n    //         variation: product.variation,\r\n    //         quantity: product.quantity,\r\n    //     }\r\n    // }) : [];\r\n\r\n    const addTagRes = await handleAddCouponStateFetch({\r\n      urlOptions: {\r\n        placeHolders: {\r\n          id: values.id,\r\n        },\r\n      },\r\n      body: {\r\n        name: values.name.trim(),\r\n        code: values.code,\r\n        minimumOrder: values.minimumOrder,\r\n        amount: values.amount,\r\n        amountType: values.amountType,\r\n        // freeDelivery: false,\r\n        orderedProducts: orderedProducts,\r\n        // freeProducts: freeProducts,\r\n        cover: coverImageId || imagesIds[0] ? imagesIds[0] : '',\r\n        startDate,\r\n        endDate,\r\n      },\r\n    });\r\n\r\n    // @ts-ignore\r\n    if (addTagRes && addTagRes.status === 'ok') {\r\n      openSuccessNotification();\r\n      setAddNewCategoryVisible(false);\r\n\r\n      const positionInTag = () => {\r\n        return tagList.map((item) => item.id).indexOf(values.id);\r\n      };\r\n\r\n      const index = positionInTag();\r\n\r\n      function getCover(id) {\r\n        if (!id || !myImages || !myImages[0]) {\r\n          return '';\r\n        } else {\r\n          if (myImages && myImages.length > 0) {\r\n            const item = myImages.find((item) => item.id === id);\r\n            if (item) {\r\n              return item.cover;\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      // @ts-ignore\r\n      const updatedItem = Object.assign({}, tagList[index], {\r\n        ...addTagRes,\r\n        cover: getCover(coverImageId),\r\n      });\r\n      const updateTagList = [\r\n        ...tagList.slice(0, index),\r\n        updatedItem,\r\n        ...tagList.slice(index + 1),\r\n      ];\r\n      setTagList(updateTagList);\r\n\r\n      setProductList([]);\r\n      setProductIds([]);\r\n      setStartDate('');\r\n      setEndDate('');\r\n      setmyImages(false);\r\n      setCoverImageId('');\r\n      setvisibleMedia(false);\r\n      actions.resetForm();\r\n    } else {\r\n      openErrorNotification();\r\n    }\r\n\r\n    actions.setSubmitting(false);\r\n  };\r\n\r\n  console.log('4444444', myImages);\r\n  console.log('4444444', coverImageId);\r\n  const handleCancel = (e: any) => {\r\n    setAddNewCategoryVisible(false);\r\n\r\n    setProductList([]);\r\n    setProductIds([]);\r\n    setStartDate('');\r\n    setEndDate('');\r\n    setmyImages(false);\r\n    setCoverImageId('');\r\n    setvisibleMedia(false);\r\n  };\r\n\r\n  const getisSubmitButtonDisabled = (values, isValid) => {\r\n    if (!values.name || !isValid) {\r\n      return true;\r\n    }\r\n    return false;\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (category && Object.keys(category).length > 0) {\r\n      const images = category.image;\r\n      if (images && images.length > 0) {\r\n        setmyImages(images);\r\n      }\r\n\r\n      if (category.cover && category.cover['id']) {\r\n        // @ts-ignore\r\n        setmyImages([category.cover]);\r\n        setCoverImageId(category.cover['id']);\r\n      }\r\n    }\r\n  }, [category]);\r\n\r\n  useEffect(() => {\r\n    if (category && Object.keys(category).length > 0) {\r\n      console.log('hsit');\r\n\r\n      let startDate = category.startDate;\r\n      let endDate = category.endDate;\r\n\r\n      startDate = startDate && new Date(moment(startDate).format());\r\n      endDate = endDate && new Date(moment(endDate).format());\r\n\r\n      console.log('CategorydateStart', startDate);\r\n      console.log('CategorydateStart', endDate);\r\n\r\n      // @ts-ignore\r\n      setStartDate(startDate);\r\n      // @ts-ignore\r\n      setEndDate(endDate);\r\n    }\r\n  }, [category]);\r\n\r\n  const handleStartEndDateRangeDate = (e) => {\r\n    const startDate = e[0] && new Date(moment(e[0]).format());\r\n    const endDate = e[1] && new Date(moment(e[1]).format());\r\n    // @ts-ignore\r\n    setStartDate(startDate);\r\n    // @ts-ignore\r\n    setEndDate(endDate);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!addCouponState['isLoading']) {\r\n      const error = addCouponState['error'];\r\n      if (error['isError'] && Object.keys(error['error']).length > 0) {\r\n        const errors =\r\n          Object.values(error['error']).length > 0\r\n            ? Object.values(error['error'])\r\n            : [];\r\n        errors.forEach((err, i) => {\r\n          if (typeof err === 'string') {\r\n            openErrorNotification(err);\r\n          } else if (typeof err === 'object') {\r\n            if (err && Object.keys(err).length > 0) {\r\n              const errs = Object.values(err);\r\n              errs.forEach((err) => {\r\n                openErrorNotification(err);\r\n              });\r\n            }\r\n          }\r\n        });\r\n      }\r\n    }\r\n  }, [addCouponState]);\r\n\r\n  useEffect(() => {\r\n    if (\r\n      couponDetailState.done &&\r\n      couponDetailState['data'] &&\r\n      Object.keys(couponDetailState['data']).length > 0 && [\r\n        'orderedProducts',\r\n      ] &&\r\n      couponDetailState['data']['orderedProducts'].length > 0\r\n    ) {\r\n      const productIds = couponDetailState['data']['orderedProducts'].map(\r\n        (item) => item\r\n      );\r\n      setProductIds(productIds);\r\n      const productList = couponDetailState['data']['orderedProducts'].map(\r\n        (item) => {\r\n          return {\r\n            ...item,\r\n            _id: item._id,\r\n            variation: item.variation,\r\n            quantity: item.quantity,\r\n          };\r\n        }\r\n      );\r\n      setProductList(productList);\r\n    }\r\n  }, [couponDetailState]);\r\n\r\n  console.log('couponDetialQuickEdit', couponDetailState);\r\n\r\n  useEffect(() => {\r\n    if (productIds.length > 0) {\r\n      if (productIds.length > productList.length) {\r\n        const variation =\r\n          productIds[productIds.length - 1]['pricing'].length > 0 &&\r\n          productIds[productIds.length - 1]['pricing'][0]['_id'];\r\n        console.log('variation', variation);\r\n\r\n        setProductList([\r\n          ...productList,\r\n          {\r\n            ...productIds[productIds.length - 1],\r\n            _id: productIds[productIds.length - 1]['id'],\r\n            variation: variation,\r\n            quantity: 1,\r\n          },\r\n        ]);\r\n      } else if (productIds.length < productList.length) {\r\n        console.log('productIds', productIds);\r\n        console.log('productList', productList);\r\n\r\n        const newProductList = productList.filter((item) => {\r\n          let isTrue = false;\r\n          productIds.forEach((product) => {\r\n            if (product.id === item._id) {\r\n              isTrue = true;\r\n            }\r\n          });\r\n          return isTrue;\r\n        });\r\n        setProductList(newProductList);\r\n      }\r\n    } else {\r\n      setProductList([]);\r\n    }\r\n    // console.log('productIds', productIds)\r\n  }, [productIds]);\r\n\r\n  console.log('startDate--', startDate);\r\n  console.log('endDate--', endDate);\r\n\r\n  useEffect(() => {\r\n    if (freeProductIds.length > 0) {\r\n      if (freeProductIds.length > freeProductList.length) {\r\n        const variation =\r\n          freeProductIds[freeProductIds.length - 1]['pricing'].length > 0 &&\r\n          freeProductIds[freeProductIds.length - 1]['pricing'][0]['_id'];\r\n        console.log('variation', variation);\r\n\r\n        setFreeProductList([\r\n          ...freeProductList,\r\n          {\r\n            ...freeProductIds[freeProductIds.length - 1],\r\n            _id: freeProductIds[freeProductIds.length - 1]['id'],\r\n            variation: variation,\r\n            quantity: 1,\r\n          },\r\n        ]);\r\n      } else if (freeProductIds.length < freeProductList.length) {\r\n        console.log('freeProductIds', freeProductIds);\r\n        console.log('productList', productList);\r\n\r\n        const newProductList = freeProductList.filter((item) => {\r\n          let isTrue = false;\r\n          freeProductIds.forEach((product) => {\r\n            if (product.id === item._id) {\r\n              isTrue = true;\r\n            }\r\n          });\r\n          return isTrue;\r\n        });\r\n        setFreeProductList(newProductList);\r\n      }\r\n    } else {\r\n      setFreeProductList([]);\r\n    }\r\n    // console.log('freeProductIds', freeProductIds)\r\n  }, [freeProductIds]);\r\n\r\n  const handleImagesDelete = (id) => {\r\n    // @ts-ignore\r\n    const newImages =\r\n      myImages &&\r\n      myImages.filter((image) => {\r\n        return image.id !== id;\r\n      });\r\n\r\n    setmyImages(newImages);\r\n  };\r\n\r\n  const dateFormat = 'YYYY-MM-DD';\r\n\r\n  return (\r\n    <Formik\r\n      onSubmit={(values, actions) => handleSubmit(values, actions)}\r\n      validationSchema={validationSchema}\r\n      validateOnBlur={false}\r\n      enableReinitialize={true}\r\n      initialValues={{ ...initialValues, ...category }}\r\n    >\r\n      {({\r\n        handleChange,\r\n        values,\r\n        handleSubmit,\r\n        errors,\r\n        isValid,\r\n        isSubmitting,\r\n        touched,\r\n        handleBlur,\r\n        setFieldTouched,\r\n        handleReset,\r\n      }) => (\r\n        <>\r\n          <Modal\r\n            width={'45vw'}\r\n            style={{\r\n              top: '40px',\r\n            }}\r\n            title='Edit Coupon'\r\n            visible={addNewCategoryVisible}\r\n            onOk={(e: any) => handleSubmit(e)}\r\n            onCancel={handleCancel}\r\n            // destroyOnClose={true}\r\n            okText='Update'\r\n            okButtonProps={{\r\n              loading: isSubmitting,\r\n              htmlType: 'submit',\r\n              // disabled: getisSubmitButtonDisabled(values, isValid)\r\n            }}\r\n          >\r\n            <div className='dubbleRowInputs'>\r\n              <div className='dubbleRowInputs__item'>\r\n                <Input\r\n                  label='Name'\r\n                  value={values.name}\r\n                  name='name'\r\n                  isError={\r\n                    (touched.name && errors.name) ||\r\n                    (!isSubmitting && addCouponState.error['error']['name'])\r\n                  }\r\n                  errorString={\r\n                    (touched.name && errors.name) ||\r\n                    (!isSubmitting && addCouponState.error['error']['name'])\r\n                  }\r\n                  onChange={(e: any) => {\r\n                    handleChange(e);\r\n                    setFieldTouched('name');\r\n                  }}\r\n                />\r\n              </div>\r\n              <div className='dubbleRowInputs__item'>\r\n                <Input\r\n                  label='Code'\r\n                  value={values.code}\r\n                  name='code'\r\n                  isError={\r\n                    (touched.code && errors.code) ||\r\n                    (!isSubmitting && addCouponState.error['error']['code'])\r\n                  }\r\n                  errorString={\r\n                    (touched.code && errors.code) ||\r\n                    (!isSubmitting && addCouponState.error['error']['code'])\r\n                  }\r\n                  onChange={(e: any) => {\r\n                    handleChange(e);\r\n                    setFieldTouched('code');\r\n                  }}\r\n                />\r\n              </div>\r\n            </div>\r\n\r\n            <Input\r\n              label='Minimum Order'\r\n              value={values.minimumOrder}\r\n              name='minimumOrder'\r\n              isError={\r\n                (touched.minimumOrder && errors.minimumOrder) ||\r\n                (!isSubmitting && addCouponState.error['error']['minimumOrder'])\r\n              }\r\n              errorString={\r\n                (touched.minimumOrder && errors.minimumOrder) ||\r\n                (!isSubmitting && addCouponState.error['error']['minimumOrder'])\r\n              }\r\n              onChange={(e: any) => {\r\n                handleChange(e);\r\n                setFieldTouched('minimumOrder');\r\n              }}\r\n            />\r\n\r\n            <div className='dubbleRowInputs'>\r\n              <div className='dubbleRowInputs__item'>\r\n                <Input\r\n                  label='Discount Amount'\r\n                  value={values.amount}\r\n                  name='amount'\r\n                  isError={\r\n                    (touched.amount && errors.amount) ||\r\n                    (!isSubmitting && addCouponState.error['error']['amount'])\r\n                  }\r\n                  errorString={\r\n                    (touched.amount && errors.amount) ||\r\n                    (!isSubmitting && addCouponState.error['error']['amount'])\r\n                  }\r\n                  onChange={(e: any) => {\r\n                    handleChange(e);\r\n                    setFieldTouched('amount');\r\n                  }}\r\n                />\r\n              </div>\r\n              <div className='dubbleRowInputs__item'>\r\n                <Input\r\n                  label='Discount Amount Type'\r\n                  value={values.amountType}\r\n                  name='amountType'\r\n                  isError={\r\n                    (touched.amountType && errors.amountType) ||\r\n                    (!isSubmitting &&\r\n                      addCouponState.error['error']['amountType'])\r\n                  }\r\n                  errorString={\r\n                    (touched.amountType && errors.amountType) ||\r\n                    (!isSubmitting &&\r\n                      addCouponState.error['error']['amountType'])\r\n                  }\r\n                  onChange={(e: any) => {\r\n                    handleChange(e);\r\n                    setFieldTouched('amountType');\r\n                  }}\r\n                />\r\n              </div>\r\n            </div>\r\n\r\n            {true && (\r\n              <div\r\n                style={{\r\n                  marginBottom: '15px',\r\n                }}\r\n              >\r\n                <h3 className='inputFieldLabel'>Start and end date</h3>\r\n                <RangePicker\r\n                  style={{\r\n                    borderRadius: '8px',\r\n                    borderColor: '#eee',\r\n                    width: '100%',\r\n                  }}\r\n                  value={[\r\n                    moment(startDate, dateFormat).isValid()\r\n                      ? moment(startDate, dateFormat)\r\n                      : undefined,\r\n                    moment(endDate, dateFormat).isValid()\r\n                      ? moment(endDate, dateFormat)\r\n                      : undefined,\r\n                  ]}\r\n                  showTime={true}\r\n                  onChange={handleStartEndDateRangeDate}\r\n                  picker={'date'}\r\n                />\r\n              </div>\r\n            )}\r\n\r\n            <div\r\n              className='addproductSection-left-header'\r\n              style={{\r\n                marginBottom: '-5px',\r\n              }}\r\n            >\r\n              <h3 className='inputFieldLabel'>Cover</h3>\r\n            </div>\r\n\r\n            <div className='aboutToUploadImagesContainer'>\r\n              {myImages &&\r\n                // @ts-ignore\r\n                myImages.length > 0 &&\r\n                myImages.map((image, index) => {\r\n                  return (\r\n                    <div className='aboutToUploadImagesContainer__item'>\r\n                      <div\r\n                        className='aboutToUploadImagesContainer__item-imgContainer'\r\n                        onClick={() => {\r\n                          setvisibleMedia(true);\r\n                        }}\r\n                      >\r\n                        <img src={image.cover} alt={image.alt} />\r\n                      </div>\r\n\r\n                      <span\r\n                        onClick={() => handleImagesDelete(image.id)}\r\n                        className='aboutToUploadImagesContainer__item-remove'\r\n                      >\r\n                        <CloseOutlined />\r\n                      </span>\r\n\r\n                      {/* {coverImageId === image.id ? (\r\n                        <span className='aboutToUploadImagesContainer__item-cover'>\r\n                          <CheckOutlined />\r\n                        </span>\r\n                      ) : (\r\n                        !coverImageId &&\r\n                        index === 0 && (\r\n                          <span className='aboutToUploadImagesContainer__item-cover'>\r\n                            <CheckOutlined />\r\n                          </span>\r\n                        )\r\n                      )} */}\r\n                    </div>\r\n                  );\r\n                })}\r\n\r\n              {!myImages ||\r\n              // @ts-ignore\r\n              (myImages && !(myImages && myImages.length > 0)) ? (\r\n                <>\r\n                  <Tooltip title={'Attach images'}>\r\n                    <div\r\n                      onClick={() => {\r\n                        setvisibleMedia(true);\r\n                      }}\r\n                      className='aboutToUploadImagesContainer__uploadItem'\r\n                    >\r\n                      <FileImageFilled />\r\n                      <span className='aboutToUploadImagesContainer__uploadItem-plus'>\r\n                        <PlusOutlined />\r\n                      </span>\r\n                    </div>\r\n                  </Tooltip>\r\n                </>\r\n              ) : (\r\n                ''\r\n              )}\r\n            </div>\r\n\r\n            <h3 className='inputFieldLabel'>Ordered Products</h3>\r\n\r\n            <OrderedProductsSelectProducts\r\n              setProductIds={setProductIds}\r\n              productIds={productIds}\r\n            />\r\n\r\n            <div\r\n              style={{\r\n                marginTop: '15px',\r\n              }}\r\n            ></div>\r\n\r\n            <h3 className='inputFieldLabel'>Selected Ordered Products</h3>\r\n\r\n            <OrderedProductsSelectedProductItems\r\n              productList={productList}\r\n              setProductList={setProductList}\r\n            />\r\n\r\n            {/* <h3 className='inputFieldLabel'>\r\n                                Free Products\r\n                                </h3>\r\n\r\n                            <OrderedProductsSelectProducts\r\n                                setProductIds={setFreeProductIds}\r\n                                productIds={freeProductIds}\r\n                            />\r\n\r\n                            <div style={{\r\n                                marginTop: \"15px\"\r\n                            }}></div>\r\n\r\n                            <h3 className='inputFieldLabel'>\r\n                                Selected Free Products\r\n                                </h3>\r\n\r\n                            <OrderedProductsSelectedProductItems\r\n                                productList={freeProductList}\r\n                                setProductList={setFreeProductList}\r\n                            /> */}\r\n          </Modal>\r\n\r\n          <MediaLibrary\r\n            setvisible={setvisibleMedia}\r\n            visible={visibleMedia}\r\n            setmyImages={setmyImages}\r\n            myImages={myImages}\r\n            isModalOpenForImages={false}\r\n          />\r\n        </>\r\n      )}\r\n    </Formik>\r\n  );\r\n};\r\n\r\nexport default AddNewBrand;\r\n","// @ts-nocheck\r\nimport React, { useState, useEffect } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\nimport { useHandleFetch } from '../../hooks';\r\n\r\nimport moment from 'moment';\r\n// import third party ui lib\r\nimport { notification, Modal, Tooltip, DatePicker } from 'antd';\r\n\r\nimport {\r\n  FileOutlined,\r\n  InboxOutlined,\r\n  FileAddOutlined,\r\n  DeleteOutlined,\r\n  CheckCircleOutlined,\r\n  CloseOutlined,\r\n  CheckOutlined,\r\n  InfoCircleOutlined,\r\n  PlusOutlined,\r\n  FileImageFilled,\r\n} from '@ant-design/icons';\r\n\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport MediaLibrary from '../../components/MediaLibrary';\r\nimport OrderedProductsSelectProducts from './OrderedProductsSelectProducts';\r\nimport OrderedProductsSelectedProductItems from './OrderedProductsSelectedProductItems';\r\nimport FreeSelectProducts from './FreeSelectProducts';\r\nimport FreeSelectedProductItems from './FreeSelectedProductItems';\r\n\r\nconst { RangePicker } = DatePicker;\r\n\r\nconst validationSchema = Yup.object().shape({\r\n  //   name: Yup.string()\r\n  //     .label('Name')\r\n  //     .required('Name is required')\r\n  //     .min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n  notification.success({\r\n    message: message || 'Coupon Created',\r\n    description: '',\r\n    icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n  });\r\n};\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n  notification.error({\r\n    message: message || 'Something Went Wrong',\r\n    description: '',\r\n    icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n  });\r\n};\r\n\r\nconst initialValues = {\r\n  name: '',\r\n  code: '',\r\n  minimumOrder: null,\r\n  amount: '',\r\n  amountType: '',\r\n  orderedProducts: [],\r\n  freeDelivery: true,\r\n  freeProducts: [],\r\n};\r\n\r\ninterface Props {\r\n  addNewCategoryVisible?: any;\r\n  setAddNewCategoryVisible?: any;\r\n  tagList?: any;\r\n  setTagList?: any;\r\n}\r\n\r\nconst AddNewBrand = ({\r\n  addNewCategoryVisible,\r\n  setAddNewCategoryVisible,\r\n  tagList,\r\n  setTagList,\r\n}: Props) => {\r\n  const [addCouponState, handleAddCouponStateFetch] = useHandleFetch(\r\n    {},\r\n    'addCoupon'\r\n  );\r\n  const [myImages, setmyImages] = useState(false);\r\n  const [visibleMedia, setvisibleMedia] = useState(false);\r\n  const [coverImageId, setCoverImageId] = useState('');\r\n  const [productIds, setProductIds] = useState([]);\r\n  const [productList, setProductList] = useState([]);\r\n  const [freeProductIds, setFreeProductIds] = useState([]);\r\n  const [freeProductList, setFreeProductList] = useState([]);\r\n  const [startDate, setStartDate] = useState('');\r\n  const [endDate, setEndDate] = useState('');\r\n\r\n  const handleSubmit = async (values: any, actions: any) => {\r\n    // @ts-ignore\r\n    const imagesIds = myImages\r\n      ? myImages.map((image) => {\r\n          return image.id;\r\n        })\r\n      : [];\r\n\r\n    const orderedProducts =\r\n      productList.length > 0\r\n        ? productList.map((product) => {\r\n            return {\r\n              _id: product._id,\r\n              variation: product.variation,\r\n              quantity: product.quantity,\r\n            };\r\n          })\r\n        : [];\r\n\r\n    // const freeProducts = freeProductList.length > 0 ? freeProductList.map(product => {\r\n    //     return {\r\n    //         _id: product._id,\r\n    //         variation: product.variation,\r\n    //         quantity: product.quantity,\r\n    //     }\r\n    // }) : [];\r\n\r\n    const addTagRes = await handleAddCouponStateFetch({\r\n      urlOptions: {\r\n        placeHolders: {\r\n          id: values.id,\r\n        },\r\n      },\r\n      body: {\r\n        name: values.name.trim(),\r\n        code: values.code,\r\n        minimumOrder: values.minimumOrder,\r\n        amount: values.amount,\r\n        amountType: values.amountType,\r\n        // freeDelivery: false,\r\n        orderedProducts: orderedProducts,\r\n        // freeProducts: freeProducts,\r\n        cover: coverImageId || imagesIds[0] ? imagesIds[0] : '',\r\n        startDate,\r\n        endDate,\r\n      },\r\n    });\r\n\r\n    // @ts-ignore\r\n    if (addTagRes && addTagRes.status === 'ok') {\r\n      openSuccessNotification();\r\n      setAddNewCategoryVisible(false);\r\n\r\n      setTagList([\r\n        {\r\n          // @ts-ignore\r\n          ...addTagRes,\r\n          id: addTagRes['_id'] || '',\r\n          key: addTagRes['_id'] || '',\r\n          name: addTagRes['name'] || '',\r\n        },\r\n        ...tagList,\r\n      ]);\r\n\r\n      actions.resetForm();\r\n    } else {\r\n      openErrorNotification();\r\n    }\r\n\r\n    actions.setSubmitting(false);\r\n  };\r\n\r\n  const handleCancel = (e: any) => {\r\n    setAddNewCategoryVisible(false);\r\n  };\r\n\r\n  const getisSubmitButtonDisabled = (values, isValid) => {\r\n    if (!values.name || !isValid) {\r\n      return true;\r\n    }\r\n    return false;\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!addCouponState['isLoading']) {\r\n      const error = addCouponState['error'];\r\n      if (error['isError'] && Object.keys(error['error']).length > 0) {\r\n        const errors =\r\n          Object.values(error['error']).length > 0\r\n            ? Object.values(error['error'])\r\n            : [];\r\n        errors.forEach((err, i) => {\r\n          if (typeof err === 'string') {\r\n            openErrorNotification(err);\r\n          } else if (typeof err === 'object') {\r\n            if (err && Object.keys(err).length > 0) {\r\n              const errs = Object.values(err);\r\n              errs.forEach((err) => {\r\n                openErrorNotification(err);\r\n              });\r\n            }\r\n          }\r\n        });\r\n      }\r\n    }\r\n  }, [addCouponState]);\r\n\r\n  useEffect(() => {\r\n    if (productIds.length > 0) {\r\n      if (productIds.length > productList.length) {\r\n        const variation =\r\n          productIds[productIds.length - 1]['pricing'].length > 0 &&\r\n          productIds[productIds.length - 1]['pricing'][0]['_id'];\r\n        console.log('variation', variation);\r\n\r\n        setProductList([\r\n          ...productList,\r\n          {\r\n            ...productIds[productIds.length - 1],\r\n            _id: productIds[productIds.length - 1]['id'],\r\n            variation: variation,\r\n            quantity: 1,\r\n          },\r\n        ]);\r\n      } else if (productIds.length < productList.length) {\r\n        console.log('productIds', productIds);\r\n        console.log('productList', productList);\r\n\r\n        const newProductList = productList.filter((item) => {\r\n          let isTrue = false;\r\n          productIds.forEach((product) => {\r\n            if (product.id === item._id) {\r\n              isTrue = true;\r\n            }\r\n          });\r\n          return isTrue;\r\n        });\r\n        setProductList(newProductList);\r\n      }\r\n    } else {\r\n      setProductList([]);\r\n    }\r\n    // console.log('productIds', productIds)\r\n  }, [productIds]);\r\n\r\n  useEffect(() => {\r\n    if (freeProductIds.length > 0) {\r\n      if (freeProductIds.length > freeProductList.length) {\r\n        const variation =\r\n          freeProductIds[freeProductIds.length - 1]['pricing'].length > 0 &&\r\n          freeProductIds[freeProductIds.length - 1]['pricing'][0]['_id'];\r\n        console.log('variation', variation);\r\n\r\n        setFreeProductList([\r\n          ...freeProductList,\r\n          {\r\n            ...freeProductIds[freeProductIds.length - 1],\r\n            _id: freeProductIds[freeProductIds.length - 1]['id'],\r\n            variation: variation,\r\n            quantity: 1,\r\n          },\r\n        ]);\r\n      } else if (freeProductIds.length < freeProductList.length) {\r\n        console.log('freeProductIds', freeProductIds);\r\n        console.log('productList', productList);\r\n\r\n        const newProductList = freeProductList.filter((item) => {\r\n          let isTrue = false;\r\n          freeProductIds.forEach((product) => {\r\n            if (product.id === item._id) {\r\n              isTrue = true;\r\n            }\r\n          });\r\n          return isTrue;\r\n        });\r\n        setFreeProductList(newProductList);\r\n      }\r\n    } else {\r\n      setFreeProductList([]);\r\n    }\r\n    // console.log('freeProductIds', freeProductIds)\r\n  }, [freeProductIds]);\r\n\r\n  const handleImagesDelete = (id) => {\r\n    // @ts-ignore\r\n    const newImages =\r\n      myImages &&\r\n      myImages.filter((image) => {\r\n        return image.id !== id;\r\n      });\r\n\r\n    setmyImages(newImages);\r\n  };\r\n\r\n  const handleStartEndDateRangeDate = (e) => {\r\n    const startDate = new Date(moment(e[0]).format());\r\n    const endDate = new Date(moment(e[1]).format());\r\n    // @ts-ignore\r\n    setStartDate(startDate);\r\n    // @ts-ignore\r\n    setEndDate(endDate);\r\n  };\r\n\r\n  return (\r\n    <Formik\r\n      onSubmit={(values, actions) => handleSubmit(values, actions)}\r\n      validationSchema={validationSchema}\r\n      validateOnBlur={false}\r\n      enableReinitialize={true}\r\n      initialValues={{ ...initialValues }}\r\n    >\r\n      {({\r\n        handleChange,\r\n        values,\r\n        handleSubmit,\r\n        errors,\r\n        isValid,\r\n        isSubmitting,\r\n        touched,\r\n        handleBlur,\r\n        setFieldTouched,\r\n        handleReset,\r\n      }) => (\r\n        <>\r\n          <Modal\r\n            width={'45vw'}\r\n            style={{\r\n              top: '40px',\r\n            }}\r\n            title='Add New Coupon'\r\n            visible={addNewCategoryVisible}\r\n            onOk={(e: any) => handleSubmit(e)}\r\n            onCancel={handleCancel}\r\n            okText='Create'\r\n            okButtonProps={{\r\n              loading: isSubmitting,\r\n              htmlType: 'submit',\r\n              //   disabled: getisSubmitButtonDisabled(values, isValid),\r\n            }}\r\n          >\r\n            <div className='dubbleRowInputs'>\r\n              <div className='dubbleRowInputs__item'>\r\n                <Input\r\n                  label='Name'\r\n                  value={values.name}\r\n                  name='name'\r\n                  isError={\r\n                    (touched.name && errors.name) ||\r\n                    (!isSubmitting && addCouponState.error['error']['name'])\r\n                  }\r\n                  errorString={\r\n                    (touched.name && errors.name) ||\r\n                    (!isSubmitting && addCouponState.error['error']['name'])\r\n                  }\r\n                  onChange={(e: any) => {\r\n                    handleChange(e);\r\n                    setFieldTouched('name');\r\n                  }}\r\n                />\r\n              </div>\r\n              <div className='dubbleRowInputs__item'>\r\n                <Input\r\n                  label='Code'\r\n                  value={values.code}\r\n                  name='code'\r\n                  isError={\r\n                    (touched.code && errors.code) ||\r\n                    (!isSubmitting && addCouponState.error['error']['code'])\r\n                  }\r\n                  errorString={\r\n                    (touched.code && errors.code) ||\r\n                    (!isSubmitting && addCouponState.error['error']['code'])\r\n                  }\r\n                  onChange={(e: any) => {\r\n                    handleChange(e);\r\n                    setFieldTouched('code');\r\n                  }}\r\n                />\r\n              </div>\r\n            </div>\r\n\r\n            <Input\r\n              label='Minimum Order'\r\n              value={values.minimumOrder}\r\n              name='minimumOrder'\r\n              isError={\r\n                (touched.minimumOrder && errors.minimumOrder) ||\r\n                (!isSubmitting && addCouponState.error['error']['minimumOrder'])\r\n              }\r\n              errorString={\r\n                (touched.minimumOrder && errors.minimumOrder) ||\r\n                (!isSubmitting && addCouponState.error['error']['minimumOrder'])\r\n              }\r\n              onChange={(e: any) => {\r\n                handleChange(e);\r\n                setFieldTouched('minimumOrder');\r\n              }}\r\n            />\r\n\r\n            <div className='dubbleRowInputs'>\r\n              <div className='dubbleRowInputs__item'>\r\n                <Input\r\n                  label='Discount Amount'\r\n                  value={values.amount}\r\n                  name='amount'\r\n                  isError={\r\n                    (touched.amount && errors.amount) ||\r\n                    (!isSubmitting && addCouponState.error['error']['amount'])\r\n                  }\r\n                  errorString={\r\n                    (touched.amount && errors.amount) ||\r\n                    (!isSubmitting && addCouponState.error['error']['amount'])\r\n                  }\r\n                  onChange={(e: any) => {\r\n                    handleChange(e);\r\n                    setFieldTouched('amount');\r\n                  }}\r\n                />\r\n              </div>\r\n              <div className='dubbleRowInputs__item'>\r\n                <Input\r\n                  label='Discount Amount Type'\r\n                  value={values.amountType}\r\n                  name='amountType'\r\n                  isError={\r\n                    (touched.amountType && errors.amountType) ||\r\n                    (!isSubmitting &&\r\n                      addCouponState.error['error']['amountType'])\r\n                  }\r\n                  errorString={\r\n                    (touched.amountType && errors.amountType) ||\r\n                    (!isSubmitting &&\r\n                      addCouponState.error['error']['amountType'])\r\n                  }\r\n                  onChange={(e: any) => {\r\n                    handleChange(e);\r\n                    setFieldTouched('amountType');\r\n                  }}\r\n                />\r\n              </div>\r\n            </div>\r\n\r\n            <div\r\n              style={{\r\n                marginBottom: '15px',\r\n              }}\r\n            >\r\n              <h3 className='inputFieldLabel'>Start and end date</h3>\r\n              <RangePicker\r\n                style={{\r\n                  borderRadius: '8px',\r\n                  borderColor: '#eee',\r\n                  width: '100%',\r\n                }}\r\n                showTime={true}\r\n                onChange={handleStartEndDateRangeDate}\r\n                picker={'date'}\r\n              />\r\n            </div>\r\n\r\n            <div\r\n              className='addproductSection-left-header'\r\n              style={{\r\n                marginBottom: '-5px',\r\n              }}\r\n            >\r\n              <h3 className='inputFieldLabel'>Cover</h3>\r\n            </div>\r\n\r\n            <div className='aboutToUploadImagesContainer'>\r\n              {myImages &&\r\n                // @ts-ignore\r\n                myImages.length > 0 &&\r\n                myImages.map((image, index) => {\r\n                  return (\r\n                    <div className='aboutToUploadImagesContainer__item'>\r\n                      <div\r\n                        className='aboutToUploadImagesContainer__item-imgContainer'\r\n                        onClick={() => {\r\n                          setvisibleMedia(true);\r\n                        }}\r\n                      >\r\n                        <img src={image.cover} alt={image.alt} />\r\n                      </div>\r\n\r\n                      <span\r\n                        onClick={() => handleImagesDelete(image.id)}\r\n                        className='aboutToUploadImagesContainer__item-remove'\r\n                      >\r\n                        <CloseOutlined />\r\n                      </span>\r\n\r\n                      {/* {coverImageId === image.id ? (\r\n                        <span className='aboutToUploadImagesContainer__item-cover'>\r\n                          <CheckOutlined />\r\n                        </span>\r\n                      ) : (\r\n                        !coverImageId &&\r\n                        index === 0 && (\r\n                          <span className='aboutToUploadImagesContainer__item-cover'>\r\n                            <CheckOutlined />\r\n                          </span>\r\n                        )\r\n                      )} */}\r\n                    </div>\r\n                  );\r\n                })}\r\n\r\n              {!myImages ||\r\n              // @ts-ignore\r\n              (myImages && !(myImages && myImages.length > 0)) ? (\r\n                <>\r\n                  <Tooltip title={'Attach images'}>\r\n                    <div\r\n                      onClick={() => {\r\n                        setvisibleMedia(true);\r\n                      }}\r\n                      className='aboutToUploadImagesContainer__uploadItem'\r\n                    >\r\n                      <FileImageFilled />\r\n                      <span className='aboutToUploadImagesContainer__uploadItem-plus'>\r\n                        <PlusOutlined />\r\n                      </span>\r\n                    </div>\r\n                  </Tooltip>\r\n                </>\r\n              ) : (\r\n                ''\r\n              )}\r\n            </div>\r\n\r\n            <h3 className='inputFieldLabel'>Ordered Products</h3>\r\n\r\n            <OrderedProductsSelectProducts\r\n              setProductIds={setProductIds}\r\n              productIds={productIds}\r\n            />\r\n\r\n            <div\r\n              style={{\r\n                marginTop: '15px',\r\n              }}\r\n            ></div>\r\n\r\n            <h3 className='inputFieldLabel'>Selected Ordered Products</h3>\r\n\r\n            <OrderedProductsSelectedProductItems\r\n              productList={productList}\r\n              setProductList={setProductList}\r\n            />\r\n\r\n            {/* <h3 className='inputFieldLabel'>\r\n                                Free Products\r\n                                </h3>\r\n\r\n                            <OrderedProductsSelectProducts\r\n                                setProductIds={setFreeProductIds}\r\n                                productIds={freeProductIds}\r\n                            />\r\n\r\n                            <div style={{\r\n                                marginTop: \"15px\"\r\n                            }}></div>\r\n\r\n                            <h3 className='inputFieldLabel'>\r\n                                Selected Free Products\r\n                                </h3>\r\n\r\n                            <OrderedProductsSelectedProductItems\r\n                                productList={freeProductList}\r\n                                setProductList={setFreeProductList}\r\n                            /> */}\r\n          </Modal>\r\n\r\n          <MediaLibrary\r\n            setvisible={setvisibleMedia}\r\n            visible={visibleMedia}\r\n            setmyImages={setmyImages}\r\n            myImages={myImages}\r\n            isModalOpenForImages={false}\r\n          />\r\n        </>\r\n      )}\r\n    </Formik>\r\n  );\r\n};\r\n\r\nexport default AddNewBrand;\r\n","import React, { useState, useEffect } from 'react';\r\n\r\n// import third party ui lib\r\nimport {\r\n  Empty,\r\n  Popconfirm,\r\n  Upload,\r\n  message,\r\n  Switch,\r\n  Select,\r\n  Button,\r\n  notification,\r\n  Table,\r\n  Space,\r\n  Input as CoolInput,\r\n  Tooltip,\r\n  Modal,\r\n} from 'antd';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { useHistory } from 'react-router';\r\nimport Moment from 'react-moment';\r\n\r\nimport {\r\n  FileOutlined,\r\n  InboxOutlined,\r\n  RadiusUpleftOutlined,\r\n  RadiusUprightOutlined,\r\n  RadiusBottomleftOutlined,\r\n  RadiusBottomrightOutlined,\r\n  PlusOutlined,\r\n  DeleteOutlined,\r\n  EditOutlined,\r\n  CheckCircleOutlined,\r\n} from '@ant-design/icons';\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n/// import hooks\r\nimport { useFetch, useHandleFetch } from '../../hooks';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport { DataTableSkeleton } from '../../components/Placeholders';\r\nimport CouponQuickEdit from './CouponQuickEdit';\r\nimport AddNewCoupon from './AddNewCoupon';\r\nimport moment from 'moment';\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n  notification.success({\r\n    message: message || 'Coupon Created',\r\n    description: '',\r\n    icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n  });\r\n};\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n  notification.error({\r\n    message: message || 'Something Went Wrong',\r\n    description: '',\r\n    icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n  });\r\n};\r\n\r\nconst validationSchema = Yup.object().shape({\r\n  name: Yup.string()\r\n    .label('Name')\r\n    .required('Name is required')\r\n    .min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\nconst initialValues = {\r\n  name: '',\r\n  description: '',\r\n};\r\n\r\nconst { Column, ColumnGroup } = Table;\r\nconst { Search } = CoolInput;\r\n\r\nconst MyTable = ({ data, setTagList }) => {\r\n  const [visible, setvisible] = useState(false);\r\n  const [activeCategoryForEdit, setactiveCategoryForEdit] = useState(false);\r\n  const [deleteTagState, handleDeleteTagFetch] = useHandleFetch(\r\n    {},\r\n    'deleteCoupon'\r\n  );\r\n\r\n  const history = useHistory();\r\n\r\n  const handleDeleteTag = async (id) => {\r\n    const deleteTagRes = await handleDeleteTagFetch({\r\n      urlOptions: {\r\n        placeHolders: {\r\n          id,\r\n        },\r\n      },\r\n    });\r\n\r\n    // @ts-ignore\r\n    if (deleteTagRes && deleteTagRes.status === 'ok') {\r\n      openSuccessNotification('Deleted Coupon');\r\n      const newtagList = data.filter((item) => item.id !== id);\r\n      setTagList(newtagList);\r\n    }\r\n  };\r\n\r\n  const handleOk = (e: any) => {\r\n    setvisible(false);\r\n  };\r\n\r\n  const handleCancel = (e: any) => {\r\n    setvisible(false);\r\n  };\r\n\r\n  const getCover = (record: any) => {\r\n    if (record.cover) {\r\n      return record.cover;\r\n    } else return '';\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Table\r\n        // expandable={{\r\n        //     expandedRowRender: record => <p style={{ margin: 0 }}>{record.name}</p>,\r\n        //     rowExpandable: record => record.name !== 'Not Expandable',\r\n        //   }}\r\n        // bordered={true}\r\n        size='small'\r\n        // pagination={false}\r\n        dataSource={data}\r\n      >\r\n        <Column\r\n          title=''\r\n          dataIndex='cover'\r\n          key='id'\r\n          width={'80px'}\r\n          className='classnameofthecolumn'\r\n          render={(cover, record: any) => (\r\n            <>\r\n              <div\r\n                className='listCoverImage'\r\n                onClick={() => {\r\n                  history.push(`/admin/coupon/${record.id}`);\r\n                  setactiveCategoryForEdit(record);\r\n                }}\r\n              >\r\n                <img src={getCover(record)} alt='' />\r\n              </div>\r\n            </>\r\n          )}\r\n        />\r\n\r\n        <Column\r\n          title='Name'\r\n          dataIndex='name'\r\n          key='id'\r\n          className='classnameofthecolumn'\r\n          render={(text, record: any) => (\r\n            <>\r\n              <h4\r\n                onClick={() => {\r\n                  history.push(`/admin/coupon/${record.id}`);\r\n                  // setBrandDetailVisible(true);\r\n                  setactiveCategoryForEdit(record);\r\n                }}\r\n                style={{\r\n                  fontWeight: 400,\r\n                  color: '#555',\r\n                  cursor: 'pointer',\r\n                }}\r\n              >\r\n                {text}\r\n              </h4>\r\n            </>\r\n          )}\r\n        />\r\n\r\n        <Column\r\n          title='Code'\r\n          dataIndex='code'\r\n          key='id'\r\n          className='classnameofthecolumn'\r\n        />\r\n\r\n        <Column\r\n          title='Discount'\r\n          dataIndex='amount'\r\n          key='id'\r\n          className='classnameofthecolumn'\r\n        />\r\n\r\n        {/* <Column\r\n                    title=\"Order Products\"\r\n                    dataIndex=\"orderedProductsCount\"\r\n                    key=\"id\"\r\n                    className='classnameofthecolumn'\r\n\r\n                /> */}\r\n\r\n        <Column\r\n          title='Order Products'\r\n          dataIndex='orderedProductsCount'\r\n          key='id'\r\n          className='classnameofthecolumn'\r\n        />\r\n\r\n        {/* <Column\r\n                    title=\"Free Products\"\r\n                    dataIndex=\"freeProductsCount\"\r\n                    key=\"id\"\r\n                    className='classnameofthecolumn'\r\n                /> */}\r\n\r\n        <Column\r\n          width={150}\r\n          title='Start Date'\r\n          dataIndex='startDate'\r\n          key='id'\r\n          className='classnameofthecolumn'\r\n          render={(text, record: any) => (\r\n            <>\r\n              <h4\r\n                style={{\r\n                  fontWeight: 400,\r\n                  color: '#555',\r\n                  cursor: 'pointer',\r\n                  fontSize: '13px',\r\n                }}\r\n              >\r\n                {text && moment(text).format('MMMM Do YYYY, h:mm a')}\r\n              </h4>\r\n            </>\r\n          )}\r\n        />\r\n\r\n        <Column\r\n          width={150}\r\n          title='End Date'\r\n          dataIndex='endDate'\r\n          key='id'\r\n          className='classnameofthecolumn'\r\n          render={(text, record: any) => (\r\n            <>\r\n              <h4\r\n                style={{\r\n                  fontWeight: 400,\r\n                  color: '#555',\r\n                  cursor: 'pointer',\r\n                }}\r\n              >\r\n                {text && moment(text).format('MMMM Do YYYY, h:mm a')}\r\n              </h4>\r\n            </>\r\n          )}\r\n        />\r\n\r\n        <Column\r\n          className='classnameofthecolumn'\r\n          title=''\r\n          key='action'\r\n          align='right'\r\n          render={(text, record: any) => (\r\n            <Space size='middle'>\r\n              <a href='##'>\r\n                <Tooltip placement='top' title='Edit Coupon'>\r\n                  <span\r\n                    className='iconSize'\r\n                    onClick={() => {\r\n                      setvisible(true);\r\n                      setactiveCategoryForEdit(record);\r\n                    }}\r\n                  >\r\n                    <EditOutlined />\r\n                  </span>\r\n                </Tooltip>\r\n              </a>\r\n\r\n              <Popconfirm\r\n                onConfirm={() => handleDeleteTag(record.id)}\r\n                title='Are you sure？'\r\n                okText='Yes'\r\n                cancelText='No'\r\n              >\r\n                <span className='iconSize iconSize-danger'>\r\n                  <DeleteOutlined />\r\n                </span>\r\n              </Popconfirm>\r\n            </Space>\r\n          )}\r\n        />\r\n      </Table>\r\n\r\n      {activeCategoryForEdit && (\r\n        <CouponQuickEdit\r\n          tagList={data}\r\n          setTagList={setTagList}\r\n          setAddNewCategoryVisible={setvisible}\r\n          addNewCategoryVisible={visible}\r\n          category={activeCategoryForEdit}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\ninterface Props {}\r\n\r\nconst Couponlist = ({}: Props) => {\r\n  const [tagList, setTagList] = useState([]);\r\n\r\n  const [tagState, handleTagListFetch] = useHandleFetch({}, 'couponList');\r\n\r\n  useEffect(() => {\r\n    const setTags = async () => {\r\n      const tags = await handleTagListFetch({\r\n        urlOptions: {\r\n          params: {\r\n            sortItem: 'added',\r\n            sortOrderValue: '-1',\r\n          },\r\n        },\r\n      });\r\n      // @ts-ignore\r\n      setTagList(tags);\r\n    };\r\n    setTags();\r\n  }, []);\r\n\r\n  console.log('couponList', tagState);\r\n\r\n  const [addNewCategoryVisible, setAddNewCategoryVisible] = useState(false);\r\n\r\n  const getisSubmitButtonDisabled = (values, isValid) => {\r\n    if (!values.name || !isValid) {\r\n      return true;\r\n    }\r\n    return false;\r\n  };\r\n\r\n  const handleOkAddNewCategory = (e: any) => {\r\n    setAddNewCategoryVisible(false);\r\n  };\r\n\r\n  const handleCancelAddNewCategory = (e: any) => {\r\n    setAddNewCategoryVisible(false);\r\n  };\r\n\r\n  const handleSearch = (value) => {\r\n    if (tagState.data.length > 0) {\r\n      const newTagList = tagState.data.filter((item) =>\r\n        item.name.toLowerCase().includes(value.toLowerCase())\r\n      );\r\n      setTagList(newTagList);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className='categoryListContainer'>\r\n        <div className='categoryListContainer__header'>\r\n          <div className='categoryListContainer__header-searchBar-tag'>\r\n            <h2 className='categoryListContainer__header-title'>Coupons</h2>\r\n\r\n            <Search\r\n              enterButton={false}\r\n              className='searchbarClassName'\r\n              placeholder='search coupon..'\r\n              onChange={(e) => handleSearch(e.target.value)}\r\n            />\r\n          </div>\r\n          <Button\r\n            // type=\"primary\"\r\n            className='btnPrimaryClassNameoutline'\r\n            icon={<PlusOutlined />}\r\n            onClick={() => setAddNewCategoryVisible(true)}\r\n          >\r\n            Add New\r\n          </Button>\r\n        </div>\r\n        <div className='categoryListContainer__categoryList'>\r\n          {tagState.done && tagList.length > 0 && (\r\n            <MyTable setTagList={setTagList} data={tagList} />\r\n          )}\r\n          {tagState.isLoading && <DataTableSkeleton />}\r\n\r\n          {tagState.done && !(tagList.length > 0) && (\r\n            <div\r\n              style={{\r\n                marginTop: '200px',\r\n              }}\r\n            >\r\n              <Empty\r\n                description='No Coupon found'\r\n                image={Empty.PRESENTED_IMAGE_SIMPLE}\r\n              />\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <AddNewCoupon\r\n        tagList={tagList}\r\n        setTagList={setTagList}\r\n        addNewCategoryVisible={addNewCategoryVisible}\r\n        setAddNewCategoryVisible={setAddNewCategoryVisible}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Couponlist;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\nimport { useHandleFetch } from '../../hooks';\r\n// import third party ui lib\r\nimport {\r\n  Upload,\r\n  message,\r\n  Switch,\r\n  Select,\r\n  Button,\r\n  notification,\r\n  Modal,\r\n  Empty,\r\n  Form,\r\n} from 'antd';\r\n\r\nimport {\r\n  FileOutlined,\r\n  InboxOutlined,\r\n  RadiusUpleftOutlined,\r\n  RadiusUprightOutlined,\r\n  RadiusBottomleftOutlined,\r\n  RadiusBottomrightOutlined,\r\n  DeleteOutlined,\r\n  FileAddOutlined,\r\n  CheckCircleOutlined,\r\n  InfoCircleOutlined,\r\n} from '@ant-design/icons';\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\n\r\nconst { Option } = Select;\r\n\r\nconst validationSchema = Yup.object().shape({\r\n  // firstName: Yup.string()\r\n  // \t.label('First name')\r\n  // \t.required()\r\n  // \t.min(2, 'First name must have at least 2 characters '),\r\n  // lastName: Yup.string()\r\n  // \t.label('Lastname')\r\n  // \t.required()\r\n  // \t.min(2, 'Last name must have at least 2 characters '),\r\n  // phone: Yup.string()\r\n  // \t.required('Please tell us your mobile number.')\r\n  // \t.max(13, 'Please enter a valid mobile number.'),\r\n  // password: Yup.string()\r\n  // \t.label('Password')\r\n  // \t.required()\r\n  // \t.min(6, 'Password must have at least 6 characters'),\r\n  // address1: Yup.string()\r\n  // \t.label('Address line 1')\r\n  // \t.required()\r\n  // \t.min(3, 'Address line 1 must have at least 3 characters '),\r\n  // email: Yup.string().label('Email').email('Please enter a valid email'),\r\n});\r\n\r\nconst initialValues = {\r\n  phone: '',\r\n  email: '',\r\n  firstName: '',\r\n  lastName: '',\r\n  address1: '',\r\n  address2: '',\r\n  zipCode: '',\r\n  password: '',\r\n  dealerCode: '',\r\n};\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n  notification.success({\r\n    message: message || 'Customer Created!',\r\n    description: '',\r\n    icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n  });\r\n};\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n  notification.error({\r\n    message: message || 'Something Went Wrong',\r\n    description: '',\r\n    icon: <InfoCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n  });\r\n};\r\n\r\ninterface Props {\r\n  addNewCategoryVisible: any;\r\n  setAddNewCategoryVisible: any;\r\n  customerList?: any;\r\n  setCustomerList?: any;\r\n}\r\n\r\nconst AddNewCategory = ({\r\n  addNewCategoryVisible,\r\n  setAddNewCategoryVisible,\r\n  customerList,\r\n  setCustomerList,\r\n}: Props) => {\r\n  const [addCustomerState, handleAddCustomerFetch] = useHandleFetch(\r\n    {},\r\n    'addCustomer'\r\n  );\r\n  const [selectedCountryValue, setselectedCountryValue] = useState('');\r\n  const [selectedCityValue, setselectedCityValue] = useState('');\r\n\r\n  const [countryOptions, setcountryOptions] = useState([]);\r\n  const [cityOptions, setcityOptions] = useState([]);\r\n\r\n  const [countryListState, handleCountryListFetch] = useHandleFetch(\r\n    [],\r\n    'countryList'\r\n  );\r\n\r\n  const [cityListState, handleCityListFetch] = useHandleFetch([], 'cityList');\r\n  const [toggleReferralCode, settoggleReferralCode] = useState(false);\r\n\r\n  const [countryList, setCountryList] = useState([]);\r\n  const [cityList, setCityList] = useState([]);\r\n\r\n  const handleSubmit = async (values: any, actions: any) => {\r\n    const addCustomerRes = await handleAddCustomerFetch({\r\n      body: {\r\n        phone: values.phone,\r\n        email: values.email.trim(),\r\n        password: values.password,\r\n        address1: values.address1,\r\n        address2: values.address2,\r\n        firstName: values.firstName.trim(),\r\n        lastName: values.lastName,\r\n        country: selectedCountryValue,\r\n        city: selectedCityValue,\r\n        dealerCode: values.dealerCode,\r\n      },\r\n    });\r\n\r\n    // @ts-ignore\r\n    if (addCustomerRes && addCustomerRes.status === 'ok') {\r\n      openSuccessNotification();\r\n\r\n      setCustomerList([\r\n        {\r\n          id: addCustomerRes['_id'] || '',\r\n          key: addCustomerRes['_id'] || '',\r\n          name: addCustomerRes['firstName'] + ' ' + addCustomerRes['lastName'],\r\n          // @ts-ignore\r\n          ...addCustomerRes,\r\n        },\r\n        ...customerList,\r\n      ]);\r\n      setAddNewCategoryVisible(false);\r\n      actions.resetForm();\r\n    } else {\r\n      openErrorNotification();\r\n    }\r\n\r\n    actions.setSubmitting(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!addCustomerState['isLoading']) {\r\n      const error = addCustomerState['error'];\r\n      if (error['isError'] && Object.keys(error['error']).length > 0) {\r\n        const errors =\r\n          Object.values(error['error']).length > 0\r\n            ? Object.values(error['error'])\r\n            : [];\r\n        errors.forEach((err, i) => {\r\n          if (typeof err === 'string') {\r\n            openErrorNotification(err);\r\n          } else if (typeof err === 'object') {\r\n            if (err && Object.keys(err).length > 0) {\r\n              const errs = Object.values(err);\r\n              errs.forEach((err) => {\r\n                openErrorNotification(err);\r\n              });\r\n            }\r\n          }\r\n        });\r\n      }\r\n    }\r\n  }, [addCustomerState]);\r\n\r\n  const onChangeCity = (value) => {\r\n    setselectedCityValue(value);\r\n  };\r\n\r\n  const onChangeCountry = (value) => {\r\n    setselectedCountryValue(value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const setCountries = async () => {\r\n      const CountryListRes = await handleCountryListFetch({});\r\n\r\n      // @ts-ignore\r\n      if (CountryListRes && CountryListRes.length > 0) {\r\n        // @ts-ignore\r\n        const countryOptions = CountryListRes.map((country) => {\r\n          return {\r\n            value: country.name,\r\n            name: country.name,\r\n          };\r\n        });\r\n        setcountryOptions(countryOptions);\r\n      }\r\n    };\r\n\r\n    setCountries();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const setCities = async () => {\r\n      const cityListRes = await handleCityListFetch({\r\n        urlOptions: {\r\n          placeHolders: {\r\n            country: selectedCountryValue,\r\n          },\r\n        },\r\n      });\r\n\r\n      // @ts-ignore\r\n      if (cityListRes && cityListRes.length > 0) {\r\n        // @ts-ignore\r\n        const cityOptions = cityListRes.map((city) => {\r\n          return {\r\n            value: city.name,\r\n            name: city.name,\r\n          };\r\n        });\r\n        setcityOptions(cityOptions);\r\n      }\r\n    };\r\n\r\n    setCities();\r\n  }, [selectedCountryValue]);\r\n\r\n  const handleCancel = (e: any) => {\r\n    setAddNewCategoryVisible(false);\r\n  };\r\n\r\n  const getisSubmitButtonDisabled = (values, isValid) => {\r\n    if (\r\n      !isValid ||\r\n      !values.firstName ||\r\n      !values.lastName ||\r\n      !values.password ||\r\n      !values.phone ||\r\n      !values.address1\r\n    ) {\r\n      return true;\r\n    }\r\n    return false;\r\n  };\r\n\r\n  console.log('cityListState', cityListState);\r\n\r\n  return (\r\n    <Formik\r\n      onSubmit={(values, actions) => handleSubmit(values, actions)}\r\n      validationSchema={validationSchema}\r\n      validateOnBlur={false}\r\n      enableReinitialize={true}\r\n      initialValues={{ ...initialValues }}\r\n    >\r\n      {({\r\n        handleChange,\r\n        values,\r\n        handleSubmit,\r\n        errors,\r\n        isValid,\r\n        isSubmitting,\r\n        touched,\r\n        handleBlur,\r\n        setFieldTouched,\r\n        handleReset,\r\n      }) => (\r\n        <>\r\n          <Modal\r\n            style={{\r\n              top: '40px',\r\n            }}\r\n            bodyStyle={{\r\n              margin: '0',\r\n              padding: '10px',\r\n            }}\r\n            title='Add New Customer'\r\n            visible={addNewCategoryVisible}\r\n            onOk={(e: any) => handleSubmit(e)}\r\n            onCancel={handleCancel}\r\n            okText='Create'\r\n            okButtonProps={{\r\n              loading: isSubmitting,\r\n              htmlType: 'submit',\r\n              // disabled: getisSubmitButtonDisabled(values, isValid)\r\n            }}\r\n          >\r\n            <div className='dubbleRowInputs'>\r\n              <div className='dubbleRowInputs__item'>\r\n                <Input\r\n                  label='First Name *'\r\n                  value={values.firstName}\r\n                  name='firstName'\r\n                  isError={\r\n                    (touched.firstName && errors.firstName) ||\r\n                    (!isSubmitting &&\r\n                      addCustomerState.error['error']['firstName'])\r\n                  }\r\n                  errorString={\r\n                    (touched.firstName && errors.firstName) ||\r\n                    (!isSubmitting &&\r\n                      addCustomerState.error['error']['firstName'])\r\n                  }\r\n                  onChange={(e: any) => {\r\n                    handleChange(e);\r\n                    setFieldTouched('firstName');\r\n                  }}\r\n                />\r\n              </div>\r\n              <div className='dubbleRowInputs__item'>\r\n                <Input\r\n                  label='Last Name'\r\n                  value={values.lastName}\r\n                  name='lastName'\r\n                  isError={\r\n                    (touched.lastName && errors.lastName) ||\r\n                    (!isSubmitting &&\r\n                      addCustomerState.error['error']['lastName'])\r\n                  }\r\n                  errorString={\r\n                    (touched.lastName && errors.lastName) ||\r\n                    (!isSubmitting &&\r\n                      addCustomerState.error['error']['lastName'])\r\n                  }\r\n                  onChange={(e: any) => {\r\n                    handleChange(e);\r\n                    setFieldTouched('lastName');\r\n                  }}\r\n                />\r\n              </div>\r\n            </div>\r\n\r\n            <div className='dubbleRowInputs'>\r\n              <div className='dubbleRowInputs__item'>\r\n                <Input\r\n                  label='Phone *'\r\n                  value={values.phone}\r\n                  name='phone'\r\n                  isError={\r\n                    (touched.phone && errors.phone) ||\r\n                    (!isSubmitting && addCustomerState.error['error']['phone'])\r\n                  }\r\n                  errorString={\r\n                    (touched.phone && errors.phone) ||\r\n                    (!isSubmitting && addCustomerState.error['error']['phone'])\r\n                  }\r\n                  onChange={(e: any) => {\r\n                    handleChange(e);\r\n                    setFieldTouched('phone');\r\n                  }}\r\n                />\r\n              </div>\r\n              <div className='dubbleRowInputs__item'>\r\n                <Input\r\n                  label='Email'\r\n                  value={values.email}\r\n                  name='email'\r\n                  isError={\r\n                    (touched.email && errors.email) ||\r\n                    (!isSubmitting && addCustomerState.error['error']['email'])\r\n                  }\r\n                  errorString={\r\n                    (touched.email && errors.email) ||\r\n                    (!isSubmitting && addCustomerState.error['error']['email'])\r\n                  }\r\n                  onChange={(e: any) => {\r\n                    handleChange(e);\r\n                    setFieldTouched('email');\r\n                  }}\r\n                />\r\n              </div>\r\n            </div>\r\n\r\n            <div\r\n              className='dubbleRowInputs'\r\n              style={{\r\n                alignItems: 'center',\r\n                ...(!toggleReferralCode && {\r\n                  margin: '10px 0',\r\n                }),\r\n              }}\r\n            >\r\n              <div className='dubbleRowInputs__item'>\r\n                {toggleReferralCode && (\r\n                  <Input\r\n                    label='Referral Code'\r\n                    value={values.dealerCode}\r\n                    name='dealerCode'\r\n                    isError={\r\n                      (touched.dealerCode && errors.dealerCode) ||\r\n                      (!isSubmitting &&\r\n                        addCustomerState.error['error']['dealerCode'])\r\n                    }\r\n                    errorString={\r\n                      (touched.dealerCode && errors.dealerCode) ||\r\n                      (!isSubmitting &&\r\n                        addCustomerState.error['error']['dealerCode'])\r\n                    }\r\n                    onChange={(e: any) => {\r\n                      handleChange(e);\r\n                      setFieldTouched('dealerCode');\r\n                    }}\r\n                  />\r\n                )}\r\n              </div>\r\n              <div className='dubbleRowInputs__item'>\r\n                <h3\r\n                  onClick={() => settoggleReferralCode((value) => !value)}\r\n                  style={{\r\n                    color: '#1890ff',\r\n                    marginBottom: '-9px',\r\n                    marginLeft: '115px',\r\n                    cursor: 'pointer',\r\n                  }}\r\n                  className='inputFieldLabel'\r\n                >\r\n                  Add Referral Code\r\n                </h3>\r\n              </div>\r\n            </div>\r\n\r\n            <div\r\n              style={{\r\n                marginRight: '10px',\r\n              }}\r\n            >\r\n              <Input\r\n                label='Password *'\r\n                type='password'\r\n                value={values.password}\r\n                name='password'\r\n                isError={\r\n                  (touched.password && errors.password) ||\r\n                  (!isSubmitting && addCustomerState.error['error']['password'])\r\n                }\r\n                errorString={\r\n                  (touched.password && errors.password) ||\r\n                  (!isSubmitting && addCustomerState.error['error']['password'])\r\n                }\r\n                onChange={(e: any) => {\r\n                  handleChange(e);\r\n                  setFieldTouched('password');\r\n                }}\r\n              />\r\n            </div>\r\n\r\n            <div className='dubbleRowInputs'>\r\n              <div className='dubbleRowInputs__item'>\r\n                <h3 className='inputFieldLabel'>Country *</h3>\r\n\r\n                <Form.Item\r\n                  validateStatus={\r\n                    addCustomerState.error['error']['country'] ? 'error' : ''\r\n                  }\r\n                  help={addCustomerState.error['error']['country']}\r\n                  // noStyle={true}\r\n                >\r\n                  <Select\r\n                    notFoundContent={\r\n                      <Empty\r\n                        description='No Country Found'\r\n                        image={Empty.PRESENTED_IMAGE_SIMPLE}\r\n                      />\r\n                    }\r\n                    showSearch\r\n                    style={{ width: '100%' }}\r\n                    placeholder='Select a Country'\r\n                    optionFilterProp='children'\r\n                    onChange={onChangeCountry}\r\n                    filterOption={(input, option) =>\r\n                      option.children\r\n                        .toLowerCase()\r\n                        .indexOf(input.toLowerCase()) >= 0\r\n                    }\r\n                  >\r\n                    {countryListState.done &&\r\n                      countryListState.data.length > 0 &&\r\n                      countryOptions.map((option) => {\r\n                        return (\r\n                          <Option value={option.value}>{option.name}</Option>\r\n                        );\r\n                      })}\r\n                  </Select>\r\n                </Form.Item>\r\n              </div>\r\n              <div className='dubbleRowInputs__item'>\r\n                <h3 className='inputFieldLabel'>City *</h3>\r\n                <Form.Item\r\n                  // noStyle={true}\r\n                  validateStatus={\r\n                    addCustomerState.error['error']['city'] ? 'error' : ''\r\n                  }\r\n                  help={addCustomerState.error['error']['city']}\r\n                >\r\n                  <Select\r\n                    className='selectClassName'\r\n                    notFoundContent={\r\n                      <Empty\r\n                        description='First Select a Country'\r\n                        image={Empty.PRESENTED_IMAGE_SIMPLE}\r\n                      />\r\n                    }\r\n                    showSearch\r\n                    style={{ width: '100%' }}\r\n                    placeholder='Select a city'\r\n                    optionFilterProp='children'\r\n                    onChange={onChangeCity}\r\n                    filterOption={(input, option) =>\r\n                      option.children\r\n                        .toLowerCase()\r\n                        .indexOf(input.toLowerCase()) >= 0\r\n                    }\r\n                  >\r\n                    {cityListState.done &&\r\n                      cityListState.data.length > 0 &&\r\n                      cityOptions.map((option) => {\r\n                        return (\r\n                          <Option value={option.value}>{option.name}</Option>\r\n                        );\r\n                      })}\r\n                  </Select>\r\n                </Form.Item>\r\n              </div>\r\n            </div>\r\n\r\n            <div\r\n              style={{\r\n                marginRight: '10px',\r\n              }}\r\n            >\r\n              <Input\r\n                label='Address *'\r\n                value={values.address1}\r\n                name='address1'\r\n                isError={\r\n                  (touched.address1 && errors.address1) ||\r\n                  (!isSubmitting && addCustomerState.error['error']['address1'])\r\n                }\r\n                errorString={\r\n                  (touched.address1 && errors.address1) ||\r\n                  (!isSubmitting && addCustomerState.error['error']['address1'])\r\n                }\r\n                onChange={(e: any) => {\r\n                  handleChange(e);\r\n                  setFieldTouched('address1');\r\n                }}\r\n              />\r\n            </div>\r\n          </Modal>\r\n        </>\r\n      )}\r\n    </Formik>\r\n  );\r\n};\r\n\r\nexport default AddNewCategory;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Modal, Select, notification, Form, Empty } from 'antd';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\nimport {\r\n  PlusOutlined,\r\n  EditOutlined,\r\n  DeleteOutlined,\r\n  EditFilled,\r\n  CheckCircleOutlined,\r\n  InfoCircleOutlined,\r\n} from '@ant-design/icons';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport { useHandleFetch } from '../../hooks';\r\n\r\nconst { Option } = Select;\r\n\r\nconst validationSchema = Yup.object().shape({\r\n  // firstName: Yup.string()\r\n  //   .label('Firstname')\r\n  //   .required()\r\n  //   .min(2, 'First name must have at least 2 characters '),\r\n  // lastName: Yup.string()\r\n  //   .label('Lastname')\r\n  //   .required()\r\n  //   .min(2, 'Lastname must have at least 2 characters '),\r\n  // phone: Yup.string()\r\n  //   .required('Please tell us your mobile number.')\r\n  //   .max(13, 'Please enter a valid mobile number.'),\r\n  // password: Yup.string()\r\n  //   .label('Password')\r\n  //   .required()\r\n  //   .min(6, 'Password must have at least 6 characters'),\r\n  // address1: Yup.string()\r\n  //   .label('Address line 1')\r\n  //   .required()\r\n  //   .min(3, 'Address line 1 must have at least 3 characters '),\r\n  // email: Yup.string().label('Email').email('Please enter a valid email'),\r\n});\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n  notification.success({\r\n    message: message || 'Customer Updated',\r\n    description: '',\r\n    icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n  });\r\n};\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n  notification.success({\r\n    message: message || 'Something Went Wrong',\r\n    description: '',\r\n    icon: <InfoCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n  });\r\n};\r\n\r\ninterface Props {\r\n  customer: any;\r\n  setvisible: any;\r\n  visible: any;\r\n  customerList?: any;\r\n  setCustomerList?: any;\r\n}\r\n\r\nconst initialValues = {\r\n  phone: '',\r\n  email: '',\r\n  address1: '',\r\n  firstName: '',\r\n  lastName: '',\r\n  dealerCode: '',\r\n};\r\n\r\nconst QuickEdit = ({\r\n  customer,\r\n  setvisible,\r\n  visible,\r\n  customerList,\r\n  setCustomerList,\r\n}: Props) => {\r\n  const [updateCustomerState, handleUpdateCustomerFetch] = useHandleFetch(\r\n    {},\r\n    'updateCustomer'\r\n  );\r\n\r\n  const [selectedCountryValue, setselectedCountryValue] = useState('');\r\n  const [selectedCityValue, setselectedCityValue] = useState('');\r\n\r\n  const [countryOptions, setcountryOptions] = useState([]);\r\n  const [cityOptions, setcityOptions] = useState([]);\r\n\r\n  const [countryListState, handleCountryListFetch] = useHandleFetch(\r\n    [],\r\n    'countryList'\r\n  );\r\n\r\n  const [cityListState, handleCityListFetch] = useHandleFetch([], 'cityList');\r\n\r\n  const [countryList, setCountryList] = useState([]);\r\n  const [cityList, setCityList] = useState([]);\r\n\r\n  const handleSubmit = async (values: any, actions: any) => {\r\n    const updateCustomerRes = await handleUpdateCustomerFetch({\r\n      urlOptions: {\r\n        placeHolders: {\r\n          id: values.id,\r\n        },\r\n      },\r\n      body: {\r\n        phone: values.phone.trim(),\r\n        email: values.email.trim(),\r\n        password: values.password,\r\n        address1: values.address1.trim(),\r\n        firstName: values.firstName.trim(),\r\n        lastName: values.lastName,\r\n        country: selectedCountryValue || customer.country,\r\n        city: selectedCityValue || customer.city,\r\n        dealerCode: values.dealerCode.trim(),\r\n      },\r\n    });\r\n\r\n    // @ts-ignore\r\n    if (updateCustomerRes && updateCustomerRes.status === 'ok') {\r\n      openSuccessNotification();\r\n\r\n      const positionInTag = () => {\r\n        return customerList.map((item) => item.id).indexOf(customer.id);\r\n      };\r\n\r\n      const index = positionInTag();\r\n\r\n      // @ts-ignore\r\n      const updatedItem = Object.assign({}, customerList[index], {\r\n        // @ts-ignore\r\n        ...updateCustomerRes,\r\n        id: values.id,\r\n        name: updateCustomerRes.firstName + ' ' + updateCustomerRes.lastName,\r\n      });\r\n      const updateTagList = [\r\n        ...customerList.slice(0, index),\r\n        updatedItem,\r\n        ...customerList.slice(index + 1),\r\n      ];\r\n      setCustomerList(updateTagList);\r\n      setvisible(false);\r\n      setselectedCityValue('');\r\n      setselectedCountryValue('');\r\n      //   setcountryOptions([]);\r\n      //   setcityOptions([]);\r\n    } else {\r\n      openErrorNotification();\r\n    }\r\n\r\n    actions.setSubmitting(false);\r\n  };\r\n\r\n  const onChangeCity = (value) => {\r\n    setselectedCityValue(value);\r\n  };\r\n\r\n  const onChangeCountry = (value) => {\r\n    setselectedCountryValue(value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const setCountries = async () => {\r\n      const CountryListRes = await handleCountryListFetch({});\r\n\r\n      // @ts-ignore\r\n      if (CountryListRes && CountryListRes.length > 0) {\r\n        // @ts-ignore\r\n        const countryOptions = CountryListRes.map((country) => {\r\n          return {\r\n            value: country.name,\r\n            name: country.name,\r\n          };\r\n        });\r\n        setcountryOptions(countryOptions);\r\n      }\r\n    };\r\n\r\n    setCountries();\r\n  }, [customer]);\r\n\r\n  useEffect(() => {\r\n    const setCities = async () => {\r\n      const cityListRes = await handleCityListFetch({\r\n        urlOptions: {\r\n          placeHolders: {\r\n            country: selectedCountryValue || customer.country,\r\n          },\r\n        },\r\n      });\r\n\r\n      // @ts-ignore\r\n      if (cityListRes && cityListRes.length > 0) {\r\n        // @ts-ignore\r\n        const cityOptions = cityListRes.map((city) => {\r\n          return {\r\n            value: city.name,\r\n            name: city.name,\r\n          };\r\n        });\r\n        setcityOptions(cityOptions);\r\n      }\r\n    };\r\n\r\n    setCities();\r\n  }, [customer.country, selectedCountryValue]);\r\n\r\n  useEffect(() => {\r\n    if (!updateCustomerState['isLoading']) {\r\n      const error = updateCustomerState['error'];\r\n      if (error['isError'] && Object.keys(error['error']).length > 0) {\r\n        if (error['error']['registerError']) {\r\n          // setServerErrors(error['error']['registerError']);\r\n        } else if (error['error']['checkoutError']) {\r\n          // setServerErrors(error['error']['checkoutError']);\r\n        } else {\r\n          // setServerErrors(error['error']);\r\n        }\r\n\r\n        const errors =\r\n          Object.values(error['error']).length > 0\r\n            ? Object.values(error['error'])\r\n            : [];\r\n        errors.forEach((err, i) => {\r\n          if (typeof err === 'string') {\r\n            openErrorNotification(err);\r\n          } else if (typeof err === 'object') {\r\n            if (err && Object.keys(err).length > 0) {\r\n              const errs = Object.values(err);\r\n              errs.forEach((err) => {\r\n                openErrorNotification(err);\r\n              });\r\n            }\r\n          }\r\n        });\r\n      }\r\n    }\r\n\r\n    if (\r\n      !updateCustomerState['isLoading'] &&\r\n      Object.keys(updateCustomerState.data).length > 0\r\n    ) {\r\n      if (updateCustomerState['data']['status'] === 'ok') {\r\n        // openSuccessNotification('Order Created Successfully');\r\n        // history.push({\r\n        //   pathname: '/orderDetails',\r\n        //   state: checkoutState['data']\r\n        // })\r\n        // clearCart();\r\n        // setIsModalShown(true);\r\n      }\r\n    }\r\n  }, [updateCustomerState]);\r\n\r\n  const handleCancel = (e: any) => {\r\n    setvisible(false);\r\n\r\n    setselectedCityValue('');\r\n    setselectedCountryValue('');\r\n    // setcountryOptions([]);\r\n    // setcityOptions([]);\r\n  };\r\n\r\n  const getisSubmitButtonDisabled = (values, isValid) => {\r\n    if (\r\n      !isValid ||\r\n      !values.firstName ||\r\n      !values.lastName ||\r\n      !values.phone ||\r\n      !values.address1\r\n    ) {\r\n      return true;\r\n    }\r\n    return false;\r\n  };\r\n\r\n  return (\r\n    <Formik\r\n      onSubmit={(values, actions) => handleSubmit(values, actions)}\r\n      validationSchema={validationSchema}\r\n      validateOnBlur={false}\r\n      enableReinitialize={true}\r\n      initialValues={{ ...initialValues, ...customer }}\r\n    >\r\n      {({\r\n        handleChange,\r\n        values,\r\n        handleSubmit,\r\n        errors,\r\n        isValid,\r\n        isSubmitting,\r\n        touched,\r\n        handleBlur,\r\n        setFieldTouched,\r\n        handleReset,\r\n      }) => (\r\n        <>\r\n          <Modal\r\n            style={{\r\n              top: '40px',\r\n            }}\r\n            title='Customer Edit'\r\n            visible={visible}\r\n            onOk={(e: any) => handleSubmit(e)}\r\n            onCancel={handleCancel}\r\n            destroyOnClose={true}\r\n            okText='Update'\r\n            okButtonProps={{\r\n              loading: isSubmitting,\r\n              htmlType: 'submit',\r\n              // disabled: getisSubmitButtonDisabled(values, isValid)\r\n            }}\r\n            bodyStyle={{\r\n              margin: '0',\r\n              padding: '10px',\r\n            }}\r\n          >\r\n            <div className='dubbleRowInputs'>\r\n              <div className='dubbleRowInputs__item'>\r\n                <Input\r\n                  label='First Name'\r\n                  value={values.firstName}\r\n                  name='firstName'\r\n                  isError={\r\n                    (touched.firstName && errors.firstName) ||\r\n                    (!isSubmitting &&\r\n                      updateCustomerState.error['error']['firstName'])\r\n                  }\r\n                  errorString={\r\n                    (touched.firstName && errors.firstName) ||\r\n                    (!isSubmitting &&\r\n                      updateCustomerState.error['error']['firstName'])\r\n                  }\r\n                  onChange={(e: any) => {\r\n                    handleChange(e);\r\n                    setFieldTouched('firstName');\r\n                  }}\r\n                />\r\n              </div>\r\n              <div className='dubbleRowInputs__item'>\r\n                <Input\r\n                  label='Last Name'\r\n                  value={values.lastName}\r\n                  name='lastName'\r\n                  isError={\r\n                    (touched.lastName && errors.lastName) ||\r\n                    (!isSubmitting &&\r\n                      updateCustomerState.error['error']['lastName'])\r\n                  }\r\n                  errorString={\r\n                    (touched.lastName && errors.lastName) ||\r\n                    (!isSubmitting &&\r\n                      updateCustomerState.error['error']['lastName'])\r\n                  }\r\n                  onChange={(e: any) => {\r\n                    handleChange(e);\r\n                    setFieldTouched('lastName');\r\n                  }}\r\n                />\r\n              </div>\r\n            </div>\r\n\r\n            <div className='dubbleRowInputs'>\r\n              <div className='dubbleRowInputs__item'>\r\n                <Input\r\n                  label='Phone'\r\n                  value={values.phone}\r\n                  name='phone'\r\n                  isError={\r\n                    (touched.phone && errors.phone) ||\r\n                    (!isSubmitting &&\r\n                      updateCustomerState.error['error']['phone'])\r\n                  }\r\n                  errorString={\r\n                    (touched.phone && errors.phone) ||\r\n                    (!isSubmitting &&\r\n                      updateCustomerState.error['error']['phone'])\r\n                  }\r\n                  onChange={(e: any) => {\r\n                    handleChange(e);\r\n                    setFieldTouched('phone');\r\n                  }}\r\n                />\r\n              </div>\r\n              <div className='dubbleRowInputs__item'>\r\n                <Input\r\n                  label='Email'\r\n                  value={values.email}\r\n                  name='email'\r\n                  isError={\r\n                    (touched.email && errors.email) ||\r\n                    (!isSubmitting &&\r\n                      updateCustomerState.error['error']['email'])\r\n                  }\r\n                  errorString={\r\n                    (touched.email && errors.email) ||\r\n                    (!isSubmitting &&\r\n                      updateCustomerState.error['error']['email'])\r\n                  }\r\n                  onChange={(e: any) => {\r\n                    handleChange(e);\r\n                    setFieldTouched('email');\r\n                  }}\r\n                />\r\n              </div>\r\n            </div>\r\n\r\n            <div\r\n              style={{\r\n                marginRight: '10px',\r\n              }}\r\n            >\r\n              <Input\r\n                label='Referral Code'\r\n                value={values.dealerCode}\r\n                name='dealerCode'\r\n                isError={\r\n                  (touched.dealerCode && errors.dealerCode) ||\r\n                  (!isSubmitting &&\r\n                    updateCustomerState.error['error']['dealerCode'])\r\n                }\r\n                errorString={\r\n                  (touched.dealerCode && errors.dealerCode) ||\r\n                  (!isSubmitting &&\r\n                    updateCustomerState.error['error']['dealerCode'])\r\n                }\r\n                onChange={(e: any) => {\r\n                  handleChange(e);\r\n                  setFieldTouched('dealerCode');\r\n                }}\r\n              />\r\n            </div>\r\n\r\n            <div className='dubbleRowInputs'>\r\n              <div className='dubbleRowInputs__item'>\r\n                <h3 className='inputFieldLabel'>Country *</h3>\r\n\r\n                <Form.Item\r\n                  validateStatus={\r\n                    updateCustomerState.error['error']['country'] ? 'error' : ''\r\n                  }\r\n                  help={updateCustomerState.error['error']['country']}\r\n                  // noStyle={true}\r\n                >\r\n                  <Select\r\n                    notFoundContent={\r\n                      <Empty\r\n                        description='No Country Found'\r\n                        image={Empty.PRESENTED_IMAGE_SIMPLE}\r\n                      />\r\n                    }\r\n                    showSearch\r\n                    style={{ width: '100%' }}\r\n                    defaultValue={customer && customer.country}\r\n                    placeholder='Select a Country'\r\n                    optionFilterProp='children'\r\n                    onChange={onChangeCountry}\r\n                    filterOption={(input, option) =>\r\n                      option.children\r\n                        .toLowerCase()\r\n                        .indexOf(input.toLowerCase()) >= 0\r\n                    }\r\n                  >\r\n                    {countryListState.done &&\r\n                      countryListState.data.length > 0 &&\r\n                      countryOptions.map((option) => {\r\n                        return (\r\n                          <Option value={option.value}>{option.name}</Option>\r\n                        );\r\n                      })}\r\n                  </Select>\r\n                </Form.Item>\r\n              </div>\r\n              <div className='dubbleRowInputs__item'>\r\n                <h3 className='inputFieldLabel'>City *</h3>\r\n                <Form.Item\r\n                  // noStyle={true}\r\n                  validateStatus={\r\n                    updateCustomerState.error['error']['city'] ? 'error' : ''\r\n                  }\r\n                  help={updateCustomerState.error['error']['city']}\r\n                >\r\n                  <Select\r\n                    className='selectClassName'\r\n                    notFoundContent={\r\n                      <Empty\r\n                        description='First Select a Country'\r\n                        image={Empty.PRESENTED_IMAGE_SIMPLE}\r\n                      />\r\n                    }\r\n                    showSearch\r\n                    style={{ width: '100%' }}\r\n                    placeholder='Select a city'\r\n                    defaultValue={customer && customer.city}\r\n                    optionFilterProp='children'\r\n                    onChange={onChangeCity}\r\n                    filterOption={(input, option) =>\r\n                      option.children\r\n                        .toLowerCase()\r\n                        .indexOf(input.toLowerCase()) >= 0\r\n                    }\r\n                  >\r\n                    {cityListState.done &&\r\n                      cityListState.data.length > 0 &&\r\n                      cityOptions.map((option) => {\r\n                        return (\r\n                          <Option value={option.value}>{option.name}</Option>\r\n                        );\r\n                      })}\r\n                  </Select>\r\n                </Form.Item>\r\n              </div>\r\n            </div>\r\n\r\n            <div\r\n              style={{\r\n                marginRight: '10px',\r\n              }}\r\n            >\r\n              <Input\r\n                label='Address *'\r\n                value={values.address1}\r\n                name='address1'\r\n                isError={\r\n                  (touched.address1 && errors.address1) ||\r\n                  (!isSubmitting &&\r\n                    updateCustomerState.error['error']['address1'])\r\n                }\r\n                errorString={\r\n                  (touched.address1 && errors.address1) ||\r\n                  (!isSubmitting &&\r\n                    updateCustomerState.error['error']['address1'])\r\n                }\r\n                onChange={(e: any) => {\r\n                  handleChange(e);\r\n                  setFieldTouched('address1');\r\n                }}\r\n              />\r\n            </div>\r\n          </Modal>\r\n        </>\r\n      )}\r\n    </Formik>\r\n  );\r\n};\r\n\r\nexport default QuickEdit;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { withRouter, useHistory } from 'react-router-dom';\r\nimport {\r\n  Table,\r\n  Badge,\r\n  Menu,\r\n  Dropdown,\r\n  notification,\r\n  Space,\r\n  Select,\r\n  Tag,\r\n  Button,\r\n  Input,\r\n  Tooltip,\r\n  Modal,\r\n  Popconfirm,\r\n} from 'antd';\r\nimport {\r\n  PlusOutlined,\r\n  EditOutlined,\r\n  DeleteOutlined,\r\n  EditFilled,\r\n  CheckCircleOutlined,\r\n} from '@ant-design/icons';\r\nimport Moment from 'react-moment';\r\n\r\n/// import hooks\r\nimport { useFetch, useHandleFetch } from '../../hooks';\r\n\r\n// import components\r\nimport { DataTableSkeleton } from '../../components/Placeholders';\r\nimport AddNewCustomer from './AddNewCustomer';\r\nimport QuickEdit from './QuickEdit';\r\nimport Empty from '../../components/Empty';\r\nimport moment from 'moment';\r\nconst { Column, ColumnGroup } = Table;\r\nconst { Search } = Input;\r\n\r\nconst { Option } = Select;\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n  notification.success({\r\n    message: message || 'Tag Created',\r\n    description: '',\r\n    icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n  });\r\n};\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n  notification.success({\r\n    message: message || 'Something Went Wrong',\r\n    description: '',\r\n    icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n  });\r\n};\r\n\r\ninterface myTableProps {\r\n  data: any;\r\n  setCustomerList?: any;\r\n}\r\n\r\nconst MyTable = ({ data, setCustomerList }: myTableProps) => {\r\n  const [visible, setvisible] = useState(false);\r\n  const [activeCategoryForEdit, setactiveCategoryForEdit] = useState(false);\r\n\r\n  const history = useHistory();\r\n\r\n  const [deleteCustomerState, handleDeleteCustomerFetch] = useHandleFetch(\r\n    {},\r\n    'deleteCustomer'\r\n  );\r\n  const handleDeleteCustomer = async (id) => {\r\n    const deleteCustomerRes = await handleDeleteCustomerFetch({\r\n      urlOptions: {\r\n        placeHolders: {\r\n          id,\r\n        },\r\n      },\r\n    });\r\n\r\n    // @ts-ignore\r\n    if (deleteCustomerRes && deleteCustomerRes.status === 'ok') {\r\n      openSuccessNotification('Deleted Customer');\r\n      const newCustomerList = data.filter((item) => item.id !== id);\r\n      setCustomerList(newCustomerList);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Table\r\n        // expandable={{\r\n        //     expandedRowRender: record => <p style={{ margin: 0 }}>{record.name}</p>,\r\n        //     rowExpandable: record => record.name !== 'Not Expandable',\r\n        //   }}\r\n        // bordered={true}\r\n        size='small'\r\n        // pagination={false}\r\n        dataSource={data}\r\n      >\r\n        <Column\r\n          title='Name'\r\n          dataIndex='name'\r\n          key='id'\r\n          className='classnameofthecolumn'\r\n          render={(text, record: any) => (\r\n            <>\r\n              <h4\r\n                onClick={() => {\r\n                  history.push(`/admin/customer/${record.id}`);\r\n                  // setcategoryDetailVisible(true);\r\n                  setactiveCategoryForEdit(record);\r\n                }}\r\n                style={{\r\n                  fontWeight: 400,\r\n                  color: '#555',\r\n                  cursor: 'pointer',\r\n                }}\r\n              >\r\n                {text}\r\n              </h4>\r\n            </>\r\n          )}\r\n        />\r\n\r\n        <Column\r\n          title='Phone'\r\n          dataIndex='phone'\r\n          key='id'\r\n          className='classnameofthecolumn'\r\n        />\r\n\r\n        {/* <Column\r\n           title=\"City\" \r\n           dataIndex=\"city\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n            /> */}\r\n\r\n        <Column\r\n          title='Dealer'\r\n          dataIndex='dealerName'\r\n          key='id'\r\n          className='classnameofthecolumn'\r\n          render={(text, record: any) => (\r\n            <>\r\n              <h4\r\n                onClick={() => {\r\n                  // go to dealer detail\r\n                  // history.push(`/admin/dealer/${record.id}`)\r\n                }}\r\n                style={{\r\n                  fontWeight: 400,\r\n                  color: '#555',\r\n                  cursor: 'pointer',\r\n                }}\r\n              >\r\n                {text}\r\n              </h4>\r\n            </>\r\n          )}\r\n        />\r\n\r\n        <Column\r\n          title='Order'\r\n          dataIndex='orderCount'\r\n          key='id'\r\n          className='classnameofthecolumn'\r\n        />\r\n\r\n        <Column\r\n          title='Total Price'\r\n          dataIndex='totalOrderPrice'\r\n          key='id'\r\n          className='classnameofthecolumn'\r\n        />\r\n\r\n        <Column\r\n          width={150}\r\n          title='Created'\r\n          dataIndex='created'\r\n          key='id'\r\n          className='classnameofthecolumn'\r\n          render={(text, record: any) => (\r\n            <Space size='middle'>\r\n              <h5>{text && moment(text).format('MMMM Do YYYY, h:mm a')}</h5>\r\n            </Space>\r\n          )}\r\n        />\r\n\r\n        {/* <Column \r\n          \r\n          className='classnameofthecolumn'\r\n\r\n          title=\"Product\" dataIndex=\"product\" key=\"product\" /> */}\r\n\r\n        {/* <Column \r\n          \r\n          className='classnameofthecolumn'\r\n\r\n          title=\"Sub Category\" dataIndex=\"subCategory\" key=\"subCategory\" /> */}\r\n\r\n        {/* <Column\r\n          title=\"Tags\"\r\n          dataIndex=\"tags\"\r\n          key=\"tags\"\r\n          render={tags => (\r\n            <>\r\n              {tags.map((tag : any) => (\r\n                <Tag color=\"blue\" key={tag}>\r\n                  {tag}\r\n                </Tag>\r\n              ))}\r\n            </>\r\n          )}\r\n        /> */}\r\n        <Column\r\n          className='classnameofthecolumn'\r\n          title=''\r\n          key='action'\r\n          align='right'\r\n          render={(text, record: any) => (\r\n            <Space size='middle'>\r\n              <a href='##'>\r\n                <Tooltip placement='top' title='Edit Customer'>\r\n                  <span\r\n                    className='iconSize'\r\n                    onClick={() => {\r\n                      setvisible(true);\r\n                      setactiveCategoryForEdit(record);\r\n                    }}\r\n                  >\r\n                    <EditOutlined />\r\n                  </span>\r\n                </Tooltip>\r\n              </a>\r\n\r\n              <Popconfirm\r\n                onConfirm={() => handleDeleteCustomer(record.id)}\r\n                title='Are you sure？'\r\n                okText='Yes'\r\n                cancelText='No'\r\n              >\r\n                <span className='iconSize iconSize-danger'>\r\n                  <DeleteOutlined />\r\n                </span>\r\n              </Popconfirm>\r\n            </Space>\r\n          )}\r\n        />\r\n      </Table>\r\n\r\n      {activeCategoryForEdit && (\r\n        <QuickEdit\r\n          customerList={data}\r\n          setCustomerList={setCustomerList}\r\n          setvisible={setvisible}\r\n          visible={visible}\r\n          customer={activeCategoryForEdit}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\ninterface Props {\r\n  history: any;\r\n}\r\n\r\nconst CustomerList = ({ history }: Props) => {\r\n  const [customerList, setCustomerList] = useState([]);\r\n\r\n  const [customerState, handleCustomerListFetch] = useHandleFetch(\r\n    {},\r\n    'customerList'\r\n  );\r\n  const [orderStatusFilterValue, setorderStatusFilterValue] = useState('');\r\n\r\n  console.log('customerList', customerList);\r\n\r\n  useEffect(() => {\r\n    const setCustomers = async () => {\r\n      const getSorttingvalue = () => {\r\n        switch (orderStatusFilterValue) {\r\n          case 'newFirst':\r\n            return {\r\n              sortItem: 'added',\r\n              sortOrderValue: '-1',\r\n            };\r\n            break;\r\n          case 'orderCountHigh':\r\n            return {\r\n              sortItem: 'orderCount',\r\n              sortOrderValue: '-1',\r\n            };\r\n            break;\r\n          case 'orderCountLow':\r\n            return {\r\n              sortItem: 'orderCount',\r\n              sortOrderValue: '1',\r\n            };\r\n            break;\r\n\r\n          case 'totalPriceHigh':\r\n            return {\r\n              sortItem: 'totalPrice',\r\n              sortOrderValue: '-1',\r\n            };\r\n            break;\r\n\r\n          case 'totalPriceLow':\r\n            return {\r\n              sortItem: 'totalPrice',\r\n              sortOrderValue: '1',\r\n            };\r\n            break;\r\n\r\n          default:\r\n            return {\r\n              sortItem: 'added',\r\n              sortOrderValue: '-1',\r\n            };\r\n        }\r\n      };\r\n      const customers = await handleCustomerListFetch({\r\n        urlOptions: {\r\n          params: {\r\n            ...getSorttingvalue(),\r\n            limitNumber: 252423480,\r\n          },\r\n        },\r\n      });\r\n      // @ts-ignore\r\n      setCustomerList(customers);\r\n    };\r\n    setCustomers();\r\n  }, [orderStatusFilterValue]);\r\n\r\n  const handleSearch = (value) => {\r\n    if (customerState.data.length > 0) {\r\n      const newCustomerList = customerState.data.filter((item) =>\r\n        item.name.toLowerCase().includes(value.toLowerCase())\r\n      );\r\n      setCustomerList(newCustomerList);\r\n    }\r\n  };\r\n\r\n  const [addNewCategoryVisible, setAddNewCategoryVisible] = useState(false);\r\n\r\n  // console.log('customerState',customerState)\r\n\r\n  const orderFilteringOption = [\r\n    {\r\n      name: 'New first',\r\n      value: 'newFirst',\r\n    },\r\n    {\r\n      name: 'Order count (high > low)',\r\n      value: 'orderCountHigh',\r\n    },\r\n    {\r\n      name: 'Order count (low < high)',\r\n      value: 'orderCountLow',\r\n    },\r\n    {\r\n      name: 'Total price (high > low)',\r\n      value: 'totalPriceHigh',\r\n    },\r\n    {\r\n      name: 'Total price (low < high)',\r\n      value: 'totalPriceLow',\r\n    },\r\n  ];\r\n\r\n  const onOrderStatusFilterChange = (value) => {\r\n    setorderStatusFilterValue(value);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {/* <h2 className='containerPageTitle'>\r\n      Categories\r\n    </h2> */}\r\n      <div className='categoryListContainer'>\r\n        <div className='categoryListContainer__header'>\r\n          <div className='categoryListContainer__header-searchBar'>\r\n            <h2 className='categoryListContainer__header-title'>Customers</h2>\r\n\r\n            <Search\r\n              enterButton={false}\r\n              className='searchbarClassName'\r\n              placeholder='search customer..'\r\n              onChange={(e) => handleSearch(e.target.value)}\r\n              // style={{ width: 300 }}\r\n            />\r\n          </div>\r\n\r\n          <div>\r\n            <Select\r\n              style={{\r\n                borderRadius: '15px',\r\n                color: '#3fa6f9',\r\n                marginRight: '15px',\r\n                width: '200px',\r\n              }}\r\n              placeholder='Select status'\r\n              optionFilterProp='children'\r\n              onChange={onOrderStatusFilterChange}\r\n              defaultValue={'newFirst'}\r\n              bordered={false}\r\n            >\r\n              {orderFilteringOption.map((option) => {\r\n                return <Option value={option.value}>{option.name}</Option>;\r\n              })}\r\n            </Select>\r\n\r\n            <Button\r\n              // type=\"primary\"\r\n              className='btnPrimaryClassNameoutline'\r\n              icon={<PlusOutlined />}\r\n              onClick={() => setAddNewCategoryVisible(true)}\r\n            >\r\n              Add New\r\n            </Button>\r\n          </div>\r\n        </div>\r\n\r\n        <div className='categoryListContainer__afterHeader'>\r\n          {/* <Search\r\n      placeholder=\"search categories..\"\r\n      size=\"large\"\r\n      onSearch={value => console.log(value)}\r\n      style={{ width: 300 }}\r\n    /> */}\r\n        </div>\r\n\r\n        <div className='categoryListContainer__categoryList'>\r\n          {customerState.done && customerList.length > 0 && (\r\n            <MyTable setCustomerList={setCustomerList} data={customerList} />\r\n          )}\r\n          {customerState.isLoading && <DataTableSkeleton />}\r\n          {customerState.done && !(customerList.length > 0) && (\r\n            <Empty title='No Customer found' />\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      {customerState.done && (\r\n        <AddNewCustomer\r\n          setCustomerList={setCustomerList}\r\n          addNewCategoryVisible={addNewCategoryVisible}\r\n          setAddNewCategoryVisible={setAddNewCategoryVisible}\r\n          customerList={customerState.data}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default withRouter(CustomerList);\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Modal, Select, notification, Empty, Form } from 'antd';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\nimport {\r\n  PlusOutlined,\r\n  EditOutlined,\r\n  DeleteOutlined,\r\n  EditFilled,\r\n  CheckCircleOutlined,\r\n  InfoCircleOutlined,\r\n} from '@ant-design/icons';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport { useHandleFetch } from '../../hooks';\r\n\r\nconst { Option } = Select;\r\n\r\nconst validationSchema = Yup.object().shape({\r\n  // firstName: Yup.string()\r\n  //     .label('Firstname')\r\n  //     .required()\r\n  //     .min(2, 'First name must have at least 2 characters '),\r\n  // lastName: Yup.string()\r\n  //     .label('Lastname')\r\n  //     .required()\r\n  //     .min(2, 'Lastname must have at least 2 characters '),\r\n  // phone: Yup.string()\r\n  //     .required('Please tell us your mobile number.')\r\n  //     .max(13, 'Please enter a valid mobile number.'),\r\n  // address1: Yup.string()\r\n  //     .label('Address line 1')\r\n  //     .required()\r\n  //     .min(3, 'Address line 1 must have at least 3 characters '),\r\n  // email: Yup.string().label('Email').email('Please enter a valid email'),\r\n});\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n  notification.success({\r\n    message: message || 'Customer Updated',\r\n    description: '',\r\n    icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n  });\r\n};\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n  notification.success({\r\n    message: message || 'Something Went Wrong',\r\n    description: '',\r\n    icon: <InfoCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n  });\r\n};\r\n\r\ninterface Props {\r\n  customer: any;\r\n  setvisible: any;\r\n  visible: any;\r\n  setCustomerDetailData: any;\r\n}\r\n\r\nconst initialValues = {\r\n  phone: '',\r\n  email: '',\r\n  address1: '',\r\n  firstName: '',\r\n  lastName: '',\r\n  dealerCode: '',\r\n};\r\n\r\nconst QuickEdit = ({\r\n  customer,\r\n  setvisible,\r\n  visible,\r\n  setCustomerDetailData,\r\n}: Props) => {\r\n  const [updateCustomerState, handleUpdateCustomerFetch] = useHandleFetch(\r\n    {},\r\n    'updateCustomer'\r\n  );\r\n\r\n  const [selectedCountryValue, setselectedCountryValue] = useState('');\r\n  const [selectedCityValue, setselectedCityValue] = useState('');\r\n\r\n  const [countryOptions, setcountryOptions] = useState([]);\r\n  const [cityOptions, setcityOptions] = useState([]);\r\n\r\n  const [countryListState, handleCountryListFetch] = useHandleFetch(\r\n    [],\r\n    'countryList'\r\n  );\r\n\r\n  const [cityListState, handleCityListFetch] = useHandleFetch([], 'cityList');\r\n\r\n  const handleSubmit = async (values: any, actions: any) => {\r\n    const updateCustomerRes = await handleUpdateCustomerFetch({\r\n      urlOptions: {\r\n        placeHolders: {\r\n          id: values.id,\r\n        },\r\n      },\r\n      body: {\r\n        phone: values.phone.trim(),\r\n        email: values.email.trim(),\r\n        password: values.password,\r\n        address1: values.address1.trim(),\r\n        firstName: values.firstName.trim(),\r\n        lastName: values.lastName,\r\n        country: selectedCountryValue || customer.country,\r\n        city: selectedCityValue || customer.city,\r\n        dealerCode: values.dealerCode.trim(),\r\n      },\r\n    });\r\n\r\n    // @ts-ignore\r\n    if (updateCustomerRes && updateCustomerRes.status === 'ok') {\r\n      openSuccessNotification();\r\n\r\n      setCustomerDetailData({\r\n        // @ts-ignore\r\n        ...updateCustomerRes,\r\n        id: values.id,\r\n        name: updateCustomerRes.firstName + ' ' + updateCustomerRes.lastName,\r\n      });\r\n\r\n      setvisible(false);\r\n    } else {\r\n      openErrorNotification();\r\n    }\r\n\r\n    actions.setSubmitting(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!updateCustomerState['isLoading']) {\r\n      const error = updateCustomerState['error'];\r\n      if (error['isError'] && Object.keys(error['error']).length > 0) {\r\n        const errors =\r\n          Object.values(error['error']).length > 0\r\n            ? Object.values(error['error'])\r\n            : [];\r\n        errors.forEach((err, i) => {\r\n          if (typeof err === 'string') {\r\n            openErrorNotification(err);\r\n          } else if (typeof err === 'object') {\r\n            if (err && Object.keys(err).length > 0) {\r\n              const errs = Object.values(err);\r\n              errs.forEach((err) => {\r\n                openErrorNotification(err);\r\n              });\r\n            }\r\n          }\r\n        });\r\n      }\r\n    }\r\n  }, [updateCustomerState]);\r\n\r\n  const onChangeCity = (value) => {\r\n    setselectedCityValue(value);\r\n  };\r\n\r\n  const onChangeCountry = (value) => {\r\n    setselectedCountryValue(value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const setCountries = async () => {\r\n      const CountryListRes = await handleCountryListFetch({});\r\n\r\n      // @ts-ignore\r\n      if (CountryListRes && CountryListRes.length > 0) {\r\n        // @ts-ignore\r\n        const countryOptions = CountryListRes.map((country) => {\r\n          return {\r\n            value: country.name,\r\n            name: country.name,\r\n          };\r\n        });\r\n        setcountryOptions(countryOptions);\r\n      }\r\n    };\r\n\r\n    setCountries();\r\n  }, [customer]);\r\n\r\n  useEffect(() => {\r\n    const setCities = async () => {\r\n      const cityListRes = await handleCityListFetch({\r\n        urlOptions: {\r\n          placeHolders: {\r\n            country: selectedCountryValue || customer.country,\r\n          },\r\n        },\r\n      });\r\n\r\n      // @ts-ignore\r\n      if (cityListRes && cityListRes.length > 0) {\r\n        // @ts-ignore\r\n        const cityOptions = cityListRes.map((city) => {\r\n          return {\r\n            value: city.name,\r\n            name: city.name,\r\n          };\r\n        });\r\n        setcityOptions(cityOptions);\r\n      }\r\n    };\r\n\r\n    setCities();\r\n  }, [customer.country, selectedCountryValue]);\r\n\r\n  const handleCancel = (e: any) => {\r\n    setvisible(false);\r\n  };\r\n\r\n  console.log('realCustomer', customer);\r\n\r\n  const getisSubmitButtonDisabled = (values, isValid) => {\r\n    if (\r\n      !isValid ||\r\n      !values.firstName ||\r\n      !values.lastName ||\r\n      !values.phone ||\r\n      !values.address1\r\n    ) {\r\n      return true;\r\n    }\r\n    return false;\r\n  };\r\n\r\n  return (\r\n    <Formik\r\n      onSubmit={(values, actions) => handleSubmit(values, actions)}\r\n      validationSchema={validationSchema}\r\n      validateOnBlur={false}\r\n      enableReinitialize={true}\r\n      initialValues={{ ...initialValues, ...customer }}\r\n    >\r\n      {({\r\n        handleChange,\r\n        values,\r\n        handleSubmit,\r\n        errors,\r\n        isValid,\r\n        isSubmitting,\r\n        touched,\r\n        handleBlur,\r\n        setFieldTouched,\r\n        handleReset,\r\n      }) => (\r\n        <>\r\n          <Modal\r\n            style={{\r\n              top: '40px',\r\n            }}\r\n            title='Customer Edit'\r\n            visible={visible}\r\n            onOk={(e: any) => handleSubmit(e)}\r\n            onCancel={handleCancel}\r\n            okText='Update'\r\n            okButtonProps={{\r\n              loading: isSubmitting,\r\n              htmlType: 'submit',\r\n              // disabled: getisSubmitButtonDisabled(values, isValid)\r\n            }}\r\n            bodyStyle={{\r\n              margin: '0',\r\n              padding: '10px',\r\n            }}\r\n          >\r\n            <div className='dubbleRowInputs'>\r\n              <div className='dubbleRowInputs__item'>\r\n                <Input\r\n                  label='First Name *'\r\n                  value={values.firstName}\r\n                  name='firstName'\r\n                  isError={\r\n                    (touched.firstName && errors.firstName) ||\r\n                    (!isSubmitting &&\r\n                      updateCustomerState.error['error']['firstName'])\r\n                  }\r\n                  errorString={\r\n                    (touched.firstName && errors.firstName) ||\r\n                    (!isSubmitting &&\r\n                      updateCustomerState.error['error']['firstName'])\r\n                  }\r\n                  onChange={(e: any) => {\r\n                    handleChange(e);\r\n                    setFieldTouched('firstName');\r\n                  }}\r\n                />\r\n              </div>\r\n              <div className='dubbleRowInputs__item'>\r\n                <Input\r\n                  label='Last Name'\r\n                  value={values.lastName}\r\n                  name='lastName'\r\n                  isError={\r\n                    (touched.lastName && errors.lastName) ||\r\n                    (!isSubmitting &&\r\n                      updateCustomerState.error['error']['lastName'])\r\n                  }\r\n                  errorString={\r\n                    (touched.lastName && errors.lastName) ||\r\n                    (!isSubmitting &&\r\n                      updateCustomerState.error['error']['lastName'])\r\n                  }\r\n                  onChange={(e: any) => {\r\n                    handleChange(e);\r\n                    setFieldTouched('lastName');\r\n                  }}\r\n                />\r\n              </div>\r\n            </div>\r\n\r\n            <div className='dubbleRowInputs'>\r\n              <div className='dubbleRowInputs__item'>\r\n                <Input\r\n                  label='Phone *'\r\n                  value={values.phone}\r\n                  name='phone'\r\n                  isError={\r\n                    (touched.phone && errors.phone) ||\r\n                    (!isSubmitting &&\r\n                      updateCustomerState.error['error']['phone'])\r\n                  }\r\n                  errorString={\r\n                    (touched.phone && errors.phone) ||\r\n                    (!isSubmitting &&\r\n                      updateCustomerState.error['error']['phone'])\r\n                  }\r\n                  onChange={(e: any) => {\r\n                    handleChange(e);\r\n                    setFieldTouched('phone');\r\n                  }}\r\n                />\r\n              </div>\r\n              <div className='dubbleRowInputs__item'>\r\n                <Input\r\n                  label='Email'\r\n                  value={values.email}\r\n                  name='email'\r\n                  isError={\r\n                    (touched.email && errors.email) ||\r\n                    (!isSubmitting &&\r\n                      updateCustomerState.error['error']['email'])\r\n                  }\r\n                  errorString={\r\n                    (touched.email && errors.email) ||\r\n                    (!isSubmitting &&\r\n                      updateCustomerState.error['error']['email'])\r\n                  }\r\n                  onChange={(e: any) => {\r\n                    handleChange(e);\r\n                    setFieldTouched('email');\r\n                  }}\r\n                />\r\n              </div>\r\n            </div>\r\n\r\n            <div\r\n              style={{\r\n                marginRight: '10px',\r\n              }}\r\n            >\r\n              <Input\r\n                label='Referral Code'\r\n                value={values.dealerCode}\r\n                name='dealerCode'\r\n                isError={\r\n                  (touched.dealerCode && errors.dealerCode) ||\r\n                  (!isSubmitting &&\r\n                    updateCustomerState.error['error']['dealerCode'])\r\n                }\r\n                errorString={\r\n                  (touched.dealerCode && errors.dealerCode) ||\r\n                  (!isSubmitting &&\r\n                    updateCustomerState.error['error']['dealerCode'])\r\n                }\r\n                onChange={(e: any) => {\r\n                  handleChange(e);\r\n                  setFieldTouched('dealerCode');\r\n                }}\r\n              />\r\n            </div>\r\n\r\n            <div className='dubbleRowInputs'>\r\n              <div className='dubbleRowInputs__item'>\r\n                <h3 className='inputFieldLabel'>Country *</h3>\r\n\r\n                <Form.Item\r\n                  validateStatus={\r\n                    updateCustomerState.error['error']['country'] ? 'error' : ''\r\n                  }\r\n                  help={updateCustomerState.error['error']['country']}\r\n                  // noStyle={true}\r\n                >\r\n                  <Select\r\n                    notFoundContent={\r\n                      <Empty\r\n                        description='No Country Found'\r\n                        image={Empty.PRESENTED_IMAGE_SIMPLE}\r\n                      />\r\n                    }\r\n                    showSearch\r\n                    style={{ width: '100%' }}\r\n                    defaultValue={customer && customer.country}\r\n                    placeholder='Select a Country'\r\n                    optionFilterProp='children'\r\n                    onChange={onChangeCountry}\r\n                    filterOption={(input, option) =>\r\n                      option.children\r\n                        .toLowerCase()\r\n                        .indexOf(input.toLowerCase()) >= 0\r\n                    }\r\n                  >\r\n                    {countryListState.done &&\r\n                      countryListState.data.length > 0 &&\r\n                      countryOptions.map((option) => {\r\n                        return (\r\n                          <Option value={option.value}>{option.name}</Option>\r\n                        );\r\n                      })}\r\n                  </Select>\r\n                </Form.Item>\r\n              </div>\r\n              <div className='dubbleRowInputs__item'>\r\n                <h3 className='inputFieldLabel'>City *</h3>\r\n                <Form.Item\r\n                  // noStyle={true}\r\n                  validateStatus={\r\n                    updateCustomerState.error['error']['city'] ? 'error' : ''\r\n                  }\r\n                  help={updateCustomerState.error['error']['city']}\r\n                >\r\n                  <Select\r\n                    className='selectClassName'\r\n                    notFoundContent={\r\n                      <Empty\r\n                        description='First Select a Country'\r\n                        image={Empty.PRESENTED_IMAGE_SIMPLE}\r\n                      />\r\n                    }\r\n                    showSearch\r\n                    style={{ width: '100%' }}\r\n                    placeholder='Select a city'\r\n                    defaultValue={customer && customer.city}\r\n                    optionFilterProp='children'\r\n                    onChange={onChangeCity}\r\n                    filterOption={(input, option) =>\r\n                      option.children\r\n                        .toLowerCase()\r\n                        .indexOf(input.toLowerCase()) >= 0\r\n                    }\r\n                  >\r\n                    {cityListState.done &&\r\n                      cityListState.data.length > 0 &&\r\n                      cityOptions.map((option) => {\r\n                        return (\r\n                          <Option value={option.value}>{option.name}</Option>\r\n                        );\r\n                      })}\r\n                  </Select>\r\n                </Form.Item>\r\n              </div>\r\n            </div>\r\n\r\n            <div\r\n              style={{\r\n                marginRight: '10px',\r\n              }}\r\n            >\r\n              <Input\r\n                label='Address *'\r\n                value={values.address1}\r\n                name='address1'\r\n                isError={\r\n                  (touched.address1 && errors.address1) ||\r\n                  (!isSubmitting &&\r\n                    updateCustomerState.error['error']['address1'])\r\n                }\r\n                errorString={\r\n                  (touched.address1 && errors.address1) ||\r\n                  (!isSubmitting &&\r\n                    updateCustomerState.error['error']['address1'])\r\n                }\r\n                onChange={(e: any) => {\r\n                  handleChange(e);\r\n                  setFieldTouched('address1');\r\n                }}\r\n              />\r\n            </div>\r\n          </Modal>\r\n        </>\r\n      )}\r\n    </Formik>\r\n  );\r\n};\r\n\r\nexport default QuickEdit;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useParams, useHistory } from \"react-router\";\r\n\r\n\r\n// import hooks\r\nimport { useHandleFetch } from \"../../hooks\";\r\n\r\n// import \r\nimport Moment from \"react-moment\";\r\n\r\n// import lib\r\nimport {\r\n    FileOutlined,\r\n    InboxOutlined,\r\n    RadiusUpleftOutlined,\r\n    RadiusUprightOutlined,\r\n    RadiusBottomleftOutlined,\r\n    RadiusBottomrightOutlined,\r\n    PlusOutlined,\r\n    DeleteOutlined,\r\n    EditOutlined,\r\n    CheckCircleOutlined\r\n} from '@ant-design/icons';\r\n\r\nimport { Skeleton, Empty, Popconfirm, Upload, message, Switch, Select, Button, notification, Table, Space, Input as CoolInput, Tooltip, Modal } from 'antd';\r\n\r\n\r\n// import components\r\nimport { DataTableSkeleton } from \"../../components/Placeholders\";\r\nimport CustomerEdit from \"./CustomerEdit\";\r\nimport moment from \"moment\";\r\n\r\n\r\nconst { Column, ColumnGroup } = Table;\r\nconst { Search } = CoolInput;\r\n\r\ninterface Props {\r\n    productRecord?: any;\r\n}\r\n\r\nconst NewBrandDetail = (props: Props) => {\r\n    const [customerDetailState, handleCustomerDetailFetch] = useHandleFetch({}, 'customerDetail');\r\n    const [orderListState, handleOrderListFetch] = useHandleFetch({}, 'orderListForCustomer');\r\n    const [tagEditVisible, setTagEditVisible] = useState(false);\r\n    const [customerDetailData,setCustomerDetailData] = useState({}); \r\n\r\n\r\n\r\n    console.log('customerDetailData',customerDetailData); \r\n    const params = useParams();\r\n    const history = useHistory();\r\n    const customerId = params['id'];\r\n\r\n    useEffect(() => {\r\n\r\n        const getCustomerDetail = async () => {\r\n            const customerDetailDataRes = await handleCustomerDetailFetch({\r\n                urlOptions: {\r\n                    placeHolders: {\r\n                        id: customerId\r\n                    }\r\n                }\r\n            });\r\n\r\n            // @ts-ignore\r\n            if(customerDetailDataRes){\r\n                // @ts-ignore\r\n                setCustomerDetailData(customerDetailDataRes); \r\n            }\r\n\r\n            console.log('customerDetailDataRes',customerDetailDataRes)\r\n        };\r\n\r\n        getCustomerDetail();\r\n\r\n    }, [customerId]);\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        const getOrderList = async () => {\r\n            await handleOrderListFetch({\r\n                urlOptions: {\r\n                    params: {\r\n                        customerId: customerId\r\n                    }\r\n                }\r\n            })\r\n        };\r\n\r\n        getOrderList();\r\n\r\n    }, [customerId]);\r\n\r\n\r\n\r\n\r\n    console.log('customerDetailData', customerDetailData);\r\n\r\n\r\n\r\n    return (\r\n        <div className='brandDetailContainer'>\r\n            <div className='brandDetailContainer__heading'>\r\n                <h3>\r\n                    Customer Detail\r\n                </h3>\r\n\r\n                {customerDetailState.done && customerDetailData && (Object.keys(customerDetailData).length > 0) && (\r\n                    <>\r\n                        <CustomerEdit\r\n                            visible={tagEditVisible}\r\n                            setvisible={setTagEditVisible}\r\n                            customer={customerDetailData}\r\n                            setCustomerDetailData={setCustomerDetailData}\r\n                        />\r\n                        <Button\r\n                            onClick={() => setTagEditVisible(true)}\r\n                            type='link'\r\n                            icon={<EditOutlined />}\r\n                        >\r\n                            Edit\r\n                      </Button>\r\n                    </>\r\n                )}\r\n            </div>\r\n            <Skeleton\r\n                paragraph={{ rows: 2 }}\r\n                loading={customerDetailState.isLoading}>\r\n                {customerDetailState.done && customerDetailData && !(Object.keys(customerDetailData).length > 0) && (\r\n                    <Empty description='No Customer found' image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n                )}\r\n\r\n                {customerDetailState.done && customerDetailData && (Object.keys(customerDetailData).length > 0) && (\r\n                    <div className='brandDetailContainer__header'>\r\n\r\n                        <div className='brandDetailContainer__header-info'>\r\n                            <h2>\r\n                                {customerDetailData['name']}\r\n                            </h2>\r\n                            <h3>\r\n                                {customerDetailData['description']}\r\n                            </h3>\r\n\r\n                            {customerDetailData['country'] && (\r\n                                <h3>\r\n                                    COUNTRY:\r\n                                    <span>\r\n                                        {customerDetailData['country']}\r\n                                    </span>\r\n                                </h3>\r\n                            )}\r\n\r\n\r\n                            {customerDetailData['city'] && (\r\n                                <h3>\r\n                                    CITY:\r\n                                    <span>\r\n                                        {customerDetailData['city']}\r\n                                    </span>\r\n                                </h3>\r\n                            )}\r\n                        \r\n\r\n\r\n                            {customerDetailData['address1'] && (\r\n                                <h3>\r\n                                    ADDRESS:\r\n                                    <span>\r\n                                        {customerDetailData['address1']}\r\n                                    </span>\r\n                                </h3>\r\n                            )}\r\n                         \r\n\r\n                            {customerDetailData['phone'] && (\r\n                                <h3>\r\n                                    PHONE:\r\n                                    <span>\r\n                                        {customerDetailData['phone']}\r\n                                    </span>\r\n                                </h3>\r\n                            )}\r\n\r\n                             {customerDetailData['email'] && (\r\n                                <h3>\r\n                                    EMAIL:\r\n                                    <span>\r\n                                        {customerDetailData['email']}\r\n                                    </span>\r\n                                </h3>\r\n                            )}\r\n\r\n                        </div>\r\n                    </div>\r\n                )}\r\n\r\n            </Skeleton>\r\n\r\n            <div className='brandDetailContainer__heading'>\r\n                <h3>\r\n                    Orders \r\n                </h3>\r\n            </div>\r\n            <div className='brandDetailContainer__body'>\r\n                {orderListState.isLoading && <DataTableSkeleton />}\r\n                {orderListState.done && !(orderListState.data.length > 0) && (\r\n                    <div style={{\r\n                        marginTop: '100px'\r\n                    }}>\r\n                        <Empty description='No Orders exists for this Customer ' image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n                    </div>\r\n                )}\r\n\r\n                {orderListState.done && orderListState.data && orderListState.data.length > 0 && (\r\n                    <>\r\n                        <Table\r\n                            style={{\r\n                                paddingTop: '10px',\r\n                                borderRadius: '5px !important',\r\n                                overflow: 'hidden',\r\n                                boxShadow: '0 0.125rem 0.625rem rgba(227, 231, 250, 0.3), 0 0.0625rem 0.125rem rgba(206, 220, 233, 0.4)'\r\n                            }}\r\n                            // expandable={{\r\n                            //     expandedRowRender: record => <p style={{ margin: 0 }}>{record.name}</p>,\r\n                            //     rowExpandable: record => record.name !== 'Not Expandable',\r\n                            //   }}\r\n                            // bordered={true}\r\n                            size='small'\r\n                            // pagination={false}\r\n                            dataSource={orderListState.data}\r\n                            tableLayout={'auto'}\r\n                            onHeaderRow={column => {\r\n                                return {\r\n                                    style: {\r\n                                        color: 'red !important'\r\n                                    }\r\n\r\n                                };\r\n                            }}\r\n                        >\r\n                          \r\n          \r\n          \r\n\r\n        <Column\r\n          title=\"Code\"\r\n          dataIndex=\"shortCode\"\r\n          key=\"id\"\r\n          className='classnameofthecolumn'\r\n          render={(text, record: any) => (\r\n            <>\r\n\r\n              <h4\r\n                onClick={() => {\r\n                  // setvisible(true)\r\n                  history.push(`/admin/order/${record.id}`)\r\n                }}\r\n                style={{\r\n                  fontWeight: 400,\r\n                  color: '#555',\r\n                  cursor: 'pointer'\r\n\r\n                }}>\r\n                #{text}\r\n              </h4>\r\n\r\n\r\n            </>\r\n          )}\r\n\r\n        />\r\n    <Column\r\n          title=\"Name\"\r\n          dataIndex=\"name\"\r\n          key=\"id\"\r\n          className='classnameofthecolumn'\r\n          render={(text, record: any) => (\r\n            <>\r\n\r\n              <h4\r\n                onClick={() => {\r\n                  // setvisible(true)\r\n                  history.push(`/admin/order/${record.id}`)\r\n                }}\r\n                style={{\r\n                  fontWeight: 400,\r\n                  color: '#555',\r\n                  cursor: 'pointer'\r\n\r\n                }}>\r\n                {text}\r\n              </h4>\r\n\r\n\r\n            </>\r\n          )}\r\n\r\n        />\r\n\r\n\r\n                \r\n\r\n        <Column\r\n           title=\"Delivery\" \r\n           dataIndex=\"deliveryName\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n         \r\n            />\r\n\r\n\r\n\r\n          <Column\r\n           title=\"Created\" \r\n           dataIndex=\"date_created\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n           render={(text, record: any) => (\r\n            <>\r\n\r\n              <h4\r\n               \r\n                style={{\r\n                  fontWeight: 400,\r\n                  color: '#555',\r\n\r\n                }}>\r\n                  {text && moment(text).format('MMMM Do YYYY, h:mm a')}\r\n              </h4>\r\n\r\n\r\n            </>\r\n          )}\r\n            />\r\n\r\n\r\n              <Column\r\n                title=\"Total Price\" \r\n                dataIndex=\"total\" \r\n                key=\"id\" \r\n                className='classnameofthecolumn'\r\n                />\r\n\r\n\r\n\r\n\r\n          <Column\r\n            width={150}\r\n           title=\"Status\" \r\n           dataIndex=\"status\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n           render={(text, record: any) => (\r\n            <>\r\n\r\n             <a href='##'>\r\n              <span\r\n              style={{\r\n                fontSize:'12px'\r\n              }}\r\n                >\r\n                {text}\r\n             </span> \r\n            </a>\r\n            </>\r\n          )}\r\n            />\r\n\r\n\r\n                        </Table>\r\n                    </>\r\n                )}\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NewBrandDetail\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport {\r\n  Table,\r\n  Empty,\r\n  Popconfirm,\r\n  Space,\r\n  Button,\r\n  Input,\r\n  Tooltip,\r\n  notification,\r\n} from 'antd';\r\nimport {\r\n  PlusOutlined,\r\n  EditOutlined,\r\n  DeleteOutlined,\r\n  CheckCircleOutlined,\r\n} from '@ant-design/icons';\r\n\r\n/// import hooks\r\nimport { useHandleFetch } from '../../hooks';\r\n\r\n// import components\r\nimport { DataTableSkeleton } from '../../components/Placeholders';\r\n\r\n// import state\r\nimport { isAccess } from '../../utils';\r\nimport { connect } from 'react-redux';\r\nimport moment from 'moment';\r\n\r\nconst { Column } = Table;\r\nconst { Search } = Input;\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n  notification.success({\r\n    message: message || 'Page Created',\r\n    description: '',\r\n    icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n  });\r\n};\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n  notification.error({\r\n    message: message || 'Something Went Wrong',\r\n    description: '',\r\n    icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n  });\r\n};\r\n\r\ninterface myTableProps {\r\n  data: any;\r\n  setBrandList: any;\r\n  roles: any;\r\n}\r\n\r\nconst MyTable = ({ data, setBrandList, roles }: myTableProps) => {\r\n  const [activeCategoryForEdit, setactiveCategoryForEdit] = useState(false);\r\n  const [deletePageState, handleDeletePageFetch] = useHandleFetch(\r\n    {},\r\n    'deletePage'\r\n  );\r\n\r\n  const history = useHistory();\r\n\r\n  const handleDeletePage = async (id) => {\r\n    const deletePageRes = await handleDeletePageFetch({\r\n      urlOptions: {\r\n        placeHolders: {\r\n          id,\r\n        },\r\n      },\r\n    });\r\n\r\n    // @ts-ignore\r\n    if (deletePageRes && deletePageRes.status === 'ok') {\r\n      openSuccessNotification('Deleted Page');\r\n      const newBrandList = data.filter((item) => item.id !== id);\r\n      setBrandList(newBrandList);\r\n    }\r\n  };\r\n\r\n  const getCover = (record: any) => {\r\n    if (record.cover) {\r\n      return record.cover;\r\n    } else return '';\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Table\r\n        // expandable={{\r\n        //     expandedRowRender: record => <p style={{ margin: 0 }}>{record.name}</p>,\r\n        //     rowExpandable: record => record.name !== 'Not Expandable',\r\n        //   }}\r\n        // bordered={true}\r\n        size='small'\r\n        // pagination={false}\r\n        dataSource={data}\r\n      >\r\n        <Column\r\n          title=''\r\n          dataIndex='cover'\r\n          key='id'\r\n          width={'100px'}\r\n          className='classnameofthecolumn'\r\n          render={(cover, record: any) => (\r\n            <>\r\n              <div\r\n                className='listCoverImage'\r\n                onClick={() => {\r\n                  history.push(`/admin/page/${record.id}`);\r\n                  setactiveCategoryForEdit(record);\r\n                }}\r\n              >\r\n                <img src={getCover(record)} alt='' />\r\n              </div>\r\n            </>\r\n          )}\r\n        />\r\n        <Column\r\n          title='Name'\r\n          dataIndex='name'\r\n          key='id'\r\n          className='classnameofthecolumn'\r\n          render={(text, record: any) => (\r\n            <>\r\n              <h4\r\n                onClick={() => {\r\n                  // setactiveCategoryForEdit(record);\r\n                  history.push(`/admin/page/${record.id}`);\r\n                }}\r\n                style={{\r\n                  fontWeight: 400,\r\n                  color: '#555',\r\n                  cursor: 'pointer',\r\n                }}\r\n              >\r\n                {text}\r\n              </h4>\r\n            </>\r\n          )}\r\n        />\r\n\r\n        <Column\r\n          title='Last Modified'\r\n          dataIndex='lastModified'\r\n          key='id'\r\n          className='classnameofthecolumn'\r\n          render={(text, record: any) => (\r\n            <>\r\n              <h4\r\n                style={{\r\n                  fontWeight: 400,\r\n                  color: '#555',\r\n                }}\r\n              >\r\n                {text && moment(text).format('MMMM Do YYYY, h:mm a')}\r\n              </h4>\r\n            </>\r\n          )}\r\n        />\r\n\r\n        <Column\r\n          title='Created'\r\n          dataIndex='added'\r\n          key='id'\r\n          className='classnameofthecolumn'\r\n          render={(text, record: any) => (\r\n            <>\r\n              <h4\r\n                style={{\r\n                  fontWeight: 400,\r\n                  color: '#555',\r\n                }}\r\n              >\r\n                {text && moment(text).format('MMMM Do YYYY, h:mm a')}\r\n              </h4>\r\n            </>\r\n          )}\r\n        />\r\n\r\n        {/* <Column \r\n          \r\n          className='classnameofthecolumn'\r\n\r\n          title=\"Product\" dataIndex=\"product\" key=\"product\" /> */}\r\n\r\n        {/* <Column \r\n          \r\n          className='classnameofthecolumn'\r\n\r\n          title=\"Sub Category\" dataIndex=\"subCategory\" key=\"subCategory\" /> */}\r\n\r\n        {/* <Column\r\n          title=\"Tags\"\r\n          dataIndex=\"tags\"\r\n          key=\"tags\"\r\n          render={tags => (\r\n            <>\r\n              {tags.map((tag : any) => (\r\n                <Tag color=\"blue\" key={tag}>\r\n                  {tag}\r\n                </Tag>\r\n              ))}\r\n            </>\r\n          )}\r\n        /> */}\r\n\r\n        {isAccess('postPage', roles) && (\r\n          <Column\r\n            className='classnameofthecolumn'\r\n            title=''\r\n            key='action'\r\n            align='right'\r\n            render={(text, record: any) => (\r\n              <Space size='middle'>\r\n                <a href='##'>\r\n                  <Tooltip placement='top' title='Edit Page'>\r\n                    <span\r\n                      className='iconSize'\r\n                      onClick={() => {\r\n                        history.push(`/admin/page/edit/${record.id}`);\r\n                        setactiveCategoryForEdit(record);\r\n                      }}\r\n                    >\r\n                      <EditOutlined />\r\n                    </span>\r\n                  </Tooltip>\r\n                </a>\r\n\r\n                <Popconfirm\r\n                  onConfirm={() => handleDeletePage(record.id)}\r\n                  title='Are you sure？'\r\n                  okText='Yes'\r\n                  cancelText='No'\r\n                >\r\n                  <span className='iconSize iconSize-danger'>\r\n                    <DeleteOutlined />\r\n                  </span>\r\n                </Popconfirm>\r\n              </Space>\r\n            )}\r\n          />\r\n        )}\r\n      </Table>\r\n    </>\r\n  );\r\n};\r\n\r\ninterface Props {\r\n  roles: any;\r\n}\r\n\r\nconst PageList = ({ roles }: Props) => {\r\n  const [pageList, setPageList] = useState([]);\r\n  const [pageState, handlePagsListFetch] = useHandleFetch({}, 'pageList');\r\n\r\n  console.log('myPageList', pageList);\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    const setPages = async () => {\r\n      const pages = await handlePagsListFetch({\r\n        urlOptions: {\r\n          params: {\r\n            sortItem: 'added',\r\n            sortOrderValue: '-1',\r\n          },\r\n        },\r\n      });\r\n      // @ts-ignore\r\n      setPageList(pages);\r\n    };\r\n    setPages();\r\n  }, []);\r\n\r\n  const handleSearch = (value) => {\r\n    if (pageState.data.length > 0) {\r\n      const newBrandList = pageState.data.filter((item) =>\r\n        item.name.toLowerCase().includes(value.toLowerCase())\r\n      );\r\n      setPageList(newBrandList);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className='categoryListContainer'>\r\n        <div className='categoryListContainer__header'>\r\n          <div className='categoryListContainer__header-searchBar'>\r\n            <h2 className='categoryListContainer__header-title'>Pages</h2>\r\n\r\n            <Search\r\n              enterButton={false}\r\n              className='searchbarClassName'\r\n              placeholder='search pages..'\r\n              onSearch={(value) => handleSearch(value)}\r\n            />\r\n          </div>\r\n\r\n          {isAccess('postPage', roles) && (\r\n            <Button\r\n              // type=\"primary\"\r\n              className='btnPrimaryClassNameoutline'\r\n              icon={<PlusOutlined />}\r\n              onClick={() => history.push('/admin/page/new')}\r\n            >\r\n              Add New\r\n            </Button>\r\n          )}\r\n        </div>\r\n\r\n        <div className='categoryListContainer__afterHeader'>\r\n          {/* <Search\r\n      placeholder=\"search categories..\"\r\n      size=\"large\"\r\n      onSearch={value => console.log(value)}\r\n      style={{ width: 300 }}\r\n    /> */}\r\n        </div>\r\n\r\n        <div className='categoryListContainer__categoryList'>\r\n          {pageState.done && pageList.length > 0 && (\r\n            <MyTable roles={roles} setBrandList={setPageList} data={pageList} />\r\n          )}\r\n          {pageState.isLoading && <DataTableSkeleton />}\r\n          {pageState.done && !(pageList.length > 0) && (\r\n            <div\r\n              style={{\r\n                marginTop: '200px',\r\n              }}\r\n            >\r\n              <Empty\r\n                description='No Page found'\r\n                image={Empty.PRESENTED_IMAGE_SIMPLE}\r\n              />\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  roles: state.globalState,\r\n});\r\n\r\n// @ts-ignore\r\nexport default connect(mapStateToProps, null)(PageList);\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useParams, useHistory } from 'react-router';\r\n\r\n// import hooks\r\nimport { useHandleFetch } from '../../hooks';\r\nimport ReactHtmlParser from 'react-html-parser';\r\n\r\n// import state\r\nimport { isAccess } from '../../utils';\r\nimport { connect } from 'react-redux';\r\nimport moment from 'moment';\r\n\r\n// import lib\r\n// import lib\r\nimport {\r\n  FileOutlined,\r\n  InboxOutlined,\r\n  RadiusUpleftOutlined,\r\n  RadiusUprightOutlined,\r\n  RadiusBottomleftOutlined,\r\n  RadiusBottomrightOutlined,\r\n  PlusOutlined,\r\n  DeleteOutlined,\r\n  EditOutlined,\r\n  CheckCircleOutlined,\r\n} from '@ant-design/icons';\r\n\r\nimport {\r\n  Skeleton,\r\n  Empty,\r\n  Popconfirm,\r\n  Upload,\r\n  message,\r\n  Switch,\r\n  Select,\r\n  Button,\r\n  notification,\r\n  Table,\r\n  Space,\r\n  Input as CoolInput,\r\n  Tooltip,\r\n  Modal,\r\n} from 'antd';\r\n\r\n// import components\r\nimport { DataTableSkeleton } from '../../components/Placeholders';\r\n// import TagEdit from \"./TagEdit\";\r\n\r\nconst { Column, ColumnGroup } = Table;\r\nconst { Search } = CoolInput;\r\n\r\ninterface Props {\r\n  roles?: any;\r\n}\r\n\r\nconst NewBrandDetail = ({ roles }: Props) => {\r\n  const [tagProductsState, handleTagProductsFetch] = useHandleFetch(\r\n    {},\r\n    'tagProducts'\r\n  );\r\n  const [tagEditVisible, setTagEditVisible] = useState(false);\r\n  const [tagDetailState, handleTagDetailFetch] = useHandleFetch(\r\n    {},\r\n    'pageDetail'\r\n  );\r\n  const [tagDetailData, setTagDetailData] = useState({});\r\n\r\n  const params = useParams();\r\n  const history = useHistory();\r\n  const tagId = params['id'];\r\n\r\n  useEffect(() => {\r\n    const getBrandDetail = async () => {\r\n      const tagDetailRes = await handleTagDetailFetch({\r\n        urlOptions: {\r\n          placeHolders: {\r\n            id: tagId,\r\n          },\r\n        },\r\n      });\r\n\r\n      // @ts-ignore\r\n      if (tagDetailRes) {\r\n        console.log('pageDetailRes', tagDetailRes);\r\n        // @ts-ignore\r\n        setTagDetailData(tagDetailRes);\r\n      }\r\n    };\r\n\r\n    getBrandDetail();\r\n  }, [tagId]);\r\n\r\n  useEffect(() => {\r\n    const getTagProducts = async () => {\r\n      await handleTagProductsFetch({\r\n        urlOptions: {\r\n          placeHolders: {\r\n            id: tagId,\r\n          },\r\n        },\r\n      });\r\n    };\r\n\r\n    getTagProducts();\r\n  }, [tagId]);\r\n\r\n  console.log('tagProductsState', tagProductsState);\r\n\r\n  console.log('brandParams', params);\r\n\r\n  return (\r\n    <div className='brandDetailContainer'>\r\n      <div className='brandDetailContainer__heading'>\r\n        <h3>Page Detail</h3>\r\n\r\n        {tagDetailState.done &&\r\n          tagDetailData &&\r\n          Object.keys(tagDetailData).length > 0 && (\r\n            <>\r\n              {/* <TagEdit\r\n                            tagEditVisible={tagEditVisible}\r\n                            setTagEditVisible={setTagEditVisible}\r\n                            tagDetailData={tagDetailData}\r\n                            setTagDetailData={setTagDetailData}\r\n                        /> */}\r\n\r\n              {isAccess('postPage', roles) && (\r\n                <Button\r\n                  onClick={() => {\r\n                    history.push(`/admin/page/edit/${tagDetailData['_id']}`);\r\n                  }}\r\n                  type='link'\r\n                  icon={<EditOutlined />}\r\n                >\r\n                  Edit\r\n                </Button>\r\n              )}\r\n            </>\r\n          )}\r\n      </div>\r\n      <Skeleton paragraph={{ rows: 2 }} loading={tagDetailState.isLoading}>\r\n        {tagDetailState.done &&\r\n          tagDetailData &&\r\n          !(Object.keys(tagDetailData).length > 0) && (\r\n            <Empty\r\n              description='No Page found'\r\n              image={Empty.PRESENTED_IMAGE_SIMPLE}\r\n            />\r\n          )}\r\n\r\n        {tagDetailState.done &&\r\n          tagDetailData &&\r\n          Object.keys(tagDetailData).length > 0 && (\r\n            <>\r\n              <div className='brandDetailContainer__header'>\r\n                <div className='brandDetailContainer__header-coverContainer'>\r\n                  <img\r\n                    src={\r\n                      tagDetailData['cover'] && tagDetailData['cover']['cover']\r\n                    }\r\n                    alt=''\r\n                  />\r\n                </div>\r\n                <div className='brandDetailContainer__header-info'>\r\n                  <h2>{tagDetailData['name']}</h2>\r\n                  {tagDetailData['url'] && (\r\n                    <h3>\r\n                      URL:\r\n                      <span>{tagDetailData['url']}</span>\r\n                    </h3>\r\n                  )}\r\n\r\n                  {tagDetailData['lastModified'] && (\r\n                    <h3>\r\n                      LAST MODIFIED:\r\n                      <span>\r\n                        {tagDetailData['lastModified'] &&\r\n                          moment(tagDetailData['lastModified']).format(\r\n                            'MMMM Do YYYY, h:mm a'\r\n                          )}\r\n                      </span>\r\n                    </h3>\r\n                  )}\r\n\r\n                  {tagDetailData['added'] && (\r\n                    <h3>\r\n                      CREATED:\r\n                      <span>\r\n                        {tagDetailData['added'] &&\r\n                          moment(tagDetailData['added']).format(\r\n                            'MMMM Do YYYY, h:mm a'\r\n                          )}\r\n                      </span>\r\n                    </h3>\r\n                  )}\r\n                </div>\r\n              </div>\r\n\r\n              <div className='brandDetailContainer__heading'>\r\n                <h3>Content</h3>\r\n              </div>\r\n\r\n              <div\r\n                className='brandDetailContainer__header'\r\n                style={{\r\n                  display: 'block',\r\n                }}\r\n              >\r\n                {ReactHtmlParser(tagDetailData['content'])}\r\n              </div>\r\n            </>\r\n          )}\r\n      </Skeleton>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  roles: state.globalState,\r\n});\r\n\r\n// @ts-ignore\r\nexport default connect(mapStateToProps, null)(NewBrandDetail);\r\n","// @ts-nocheck\r\nimport React, { useState, useEffect } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n// import hhooks\r\nimport { useHandleFetch } from '../../hooks';\r\n\r\n// import third party ui lib\r\nimport {\r\n  Upload,\r\n  message,\r\n  Switch,\r\n  Select,\r\n  Button,\r\n  notification,\r\n  Modal,\r\n  Empty,\r\n  Steps,\r\n  Tooltip,\r\n} from 'antd';\r\n\r\nimport {\r\n  CheckCircleOutlined,\r\n  CaretRightOutlined,\r\n  CaretLeftOutlined,\r\n  CaretRightFilled,\r\n  UserOutlined,\r\n  InfoCircleOutlined,\r\n  FileOutlined,\r\n  InboxOutlined,\r\n  FileAddOutlined,\r\n  DeleteOutlined,\r\n  CloseOutlined,\r\n  CheckOutlined,\r\n  PlusOutlined,\r\n  FileImageFilled,\r\n} from '@ant-design/icons';\r\n\r\nimport CKEditor from '@ckeditor/ckeditor5-react';\r\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport MediaLibrary from '../../components/MediaLibrary';\r\nimport MetaTags from '../../pages/category/MetaTags';\r\n\r\nconst { Option } = Select;\r\nconst { Step } = Steps;\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n  notification.success({\r\n    message: message || 'Page Created',\r\n    description: '',\r\n    icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n  });\r\n};\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n  notification.error({\r\n    message: message || 'Something Went Wrong',\r\n    description: '',\r\n    icon: <InfoCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n  });\r\n};\r\n\r\nconst validationSchema = Yup.object().shape({});\r\n\r\nconst initialValues = {\r\n  name: '',\r\n  bnName: '',\r\n  content: '',\r\n  bnContent: '',\r\n  metaTitle: '',\r\n  bnMetaTitle: '',\r\n  metaDescription: '',\r\n  bnMetaDescription: '',\r\n  metaTags: '',\r\n  bnMetaTags: '',\r\n  url: '',\r\n};\r\n\r\nconst steps = [\r\n  {\r\n    title: 'Order Information',\r\n    content: '',\r\n    // description: 'Add Customer & Products'\r\n  },\r\n  {\r\n    title: 'Billing Address',\r\n  },\r\n  {\r\n    title: 'Confirm Order',\r\n    content: '',\r\n  },\r\n];\r\n\r\ninterface Props {}\r\n\r\nconst AddNewPage = ({}: Props) => {\r\n  const [addPageState, handleAddPageFetch] = useHandleFetch({}, 'addPage');\r\n  const [content, setContent] = useState('<p>Hello from the new page !</p>');\r\n  const [bnContent, setBnContent] = useState('<p>হ্যালো নতুন পেজ থেকে!</p>');\r\n  const [myImages, setmyImages] = useState(false);\r\n  const [visibleMedia, setvisibleMedia] = useState(false);\r\n  const [coverImageId, setCoverImageId] = useState('');\r\n  const [tags, setTags] = useState([]);\r\n  const [bnTags, setBnTags] = useState([]);\r\n\r\n  const handleAddPageSubmit = async (values: any, actions: any) => {\r\n    const addOrderRes = await handleAddPageFetch({\r\n      body: {\r\n        name: values.name,\r\n        content: content,\r\n        url: values.url.trim(),\r\n        cover: myImages ? myImages[0] && myImages[0].id : '',\r\n        metaTitle: values.metaTitle,\r\n        metaDescription: values.metaDescription,\r\n        metaTags: tags.join(','),\r\n\r\n        bn: {\r\n          metaTitle: values.bnMetaTitle,\r\n          metaDescription: values.bnMetaDescription,\r\n          metaTags: bnTags.join(','),\r\n          name: values.bnName.trim(),\r\n          content: bnContent,\r\n        },\r\n      },\r\n    });\r\n\r\n    // @ts-ignore\r\n    if (addOrderRes && addOrderRes.status === 'ok') {\r\n      // openSuccessNotification();\r\n      setCoverImageId('');\r\n      setBnTags([]);\r\n      setTags([]);\r\n      setContent('');\r\n      setBnContent('');\r\n      setvisibleMedia();\r\n      setmyImages([]);\r\n      actions.resetForm();\r\n    } else {\r\n      openErrorNotification(\"Couldn't create page, Something went wrong\");\r\n    }\r\n\r\n    actions.setSubmitting(false);\r\n  };\r\n\r\n  const getisSubmitButtonDisabled = (values, isValid) => {\r\n    if (!isValid || !values.name || !values.pickUpLocation || !values.time) {\r\n      return true;\r\n    }\r\n    return false;\r\n  };\r\n\r\n  const handleImagesDelete = (id) => {\r\n    // @ts-ignore\r\n    const newImages =\r\n      myImages &&\r\n      myImages.filter((image) => {\r\n        return image.id !== id;\r\n      });\r\n\r\n    setmyImages(newImages);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!addPageState['isLoading']) {\r\n      const error = addPageState['error'];\r\n      if (error['isError'] && Object.keys(error['error']).length > 0) {\r\n        if (error['error']['registerError']) {\r\n          // setServerErrors(error['error']['registerError']);\r\n        } else if (error['error']['checkoutError']) {\r\n          // setServerErrors(error['error']['checkoutError']);\r\n        } else {\r\n          // setServerErrors(error['error']);\r\n        }\r\n\r\n        const errors =\r\n          Object.values(error['error']).length > 0\r\n            ? Object.values(error['error'])\r\n            : [];\r\n        errors.forEach((err, i) => {\r\n          if (typeof err === 'string') {\r\n            openErrorNotification(err);\r\n          } else if (typeof err === 'object') {\r\n            if (err && Object.keys(err).length > 0) {\r\n              const errs = Object.values(err);\r\n              errs.forEach((err) => {\r\n                openErrorNotification(err);\r\n              });\r\n            }\r\n          }\r\n        });\r\n      }\r\n    }\r\n\r\n    if (\r\n      !addPageState['isLoading'] &&\r\n      Object.keys(addPageState.data).length > 0\r\n    ) {\r\n      if (addPageState['data']['status'] === 'ok') {\r\n        openSuccessNotification('Page Created Successfully');\r\n        // history.push({\r\n        //   pathname: '/orderDetails',\r\n        //   state: checkoutState['data']\r\n        // })\r\n\r\n        // clearCart();\r\n        // setIsModalShown(true);\r\n      }\r\n    }\r\n  }, [addPageState]);\r\n\r\n  console.log('myImagesdx', myImages);\r\n\r\n  return (\r\n    <Formik\r\n      onSubmit={(values, actions) => handleAddPageSubmit(values, actions)}\r\n      validationSchema={validationSchema}\r\n      validateOnBlur={false}\r\n      enableReinitialize={true}\r\n      initialValues={{ ...initialValues }}\r\n    >\r\n      {({\r\n        handleChange,\r\n        values,\r\n        handleSubmit,\r\n        errors,\r\n        isValid,\r\n        isSubmitting,\r\n        touched,\r\n        handleBlur,\r\n        setFieldTouched,\r\n        handleReset,\r\n      }) => (\r\n        <>\r\n          <div className='addNewPageContainer'>\r\n            <h3 className='addNewPageContainer__heading'>Add New Page</h3>\r\n\r\n            <div className='addNewPageContainer__header'>\r\n              <div className='dubbleRowInputs'>\r\n                <div className='dubbleRowInputs__item'>\r\n                  <Input\r\n                    label='Title'\r\n                    value={values.name}\r\n                    name='name'\r\n                    placeHolder='About us,Contact us'\r\n                    isError={\r\n                      (touched.name && errors.name) ||\r\n                      (!isSubmitting && addPageState.error['error']['name'])\r\n                    }\r\n                    errorString={\r\n                      (touched.name && errors.name) ||\r\n                      (!isSubmitting && addPageState.error['error']['name'])\r\n                    }\r\n                    onChange={(e: any) => {\r\n                      handleChange(e);\r\n                      setFieldTouched('name');\r\n                    }}\r\n                  />\r\n                </div>\r\n                <div className='dubbleRowInputs__item'>\r\n                  <Input\r\n                    label='BN Title'\r\n                    value={values.bnName}\r\n                    placeHolder={'ব্লগ...'}\r\n                    name='bnName'\r\n                    isError={\r\n                      (touched.bnName && errors.bnName) ||\r\n                      (!isSubmitting && addPageState.error['error']['bnName'])\r\n                    }\r\n                    errorString={\r\n                      (touched.bnName && errors.bnName) ||\r\n                      (!isSubmitting && addPageState.error['error']['bnName'])\r\n                    }\r\n                    onChange={(e: any) => {\r\n                      handleChange(e);\r\n                      setFieldTouched('bnName');\r\n                    }}\r\n                  />\r\n                </div>\r\n              </div>\r\n\r\n              <Input\r\n                label='Slug'\r\n                value={values.url}\r\n                name='url'\r\n                isError={\r\n                  (touched.url && errors.url) ||\r\n                  (!isSubmitting && addPageState.error['error']['url'])\r\n                }\r\n                errorString={\r\n                  (touched.url && errors.url) ||\r\n                  (!isSubmitting && addPageState.error['error']['url'])\r\n                }\r\n                onChange={(e: any) => {\r\n                  handleChange(e);\r\n                  setFieldTouched('url');\r\n                }}\r\n              />\r\n\r\n              <h3 className='inputFieldLabel'>Thumbnail</h3>\r\n\r\n              <div className='aboutToUploadImagesContainer'>\r\n                {myImages &&\r\n                  // @ts-ignore\r\n                  myImages.length > 0 &&\r\n                  myImages.map((image, index) => {\r\n                    return (\r\n                      <div className='aboutToUploadImagesContainer__item'>\r\n                        <div\r\n                          className='aboutToUploadImagesContainer__item-imgContainer'\r\n                          onClick={() => {\r\n                            setvisibleMedia(true);\r\n                          }}\r\n                        >\r\n                          <img src={image.cover} alt={image.alt} />\r\n                        </div>\r\n\r\n                        <span\r\n                          onClick={() => handleImagesDelete(image.id)}\r\n                          className='aboutToUploadImagesContainer__item-remove'\r\n                        >\r\n                          <CloseOutlined />\r\n                        </span>\r\n                      </div>\r\n                    );\r\n                  })}\r\n\r\n                {myImages ? (\r\n                  !myImages[0] && (\r\n                    <Tooltip title={'Attach images'}>\r\n                      <div\r\n                        onClick={() => {\r\n                          setvisibleMedia(true);\r\n                        }}\r\n                        className='aboutToUploadImagesContainer__uploadItem'\r\n                      >\r\n                        {/* <FileAddOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<FileImageTwoTone />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<FileImageOutlined /> */}\r\n                        <FileImageFilled />\r\n                        {/* <h5>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t Select From Library\r\n\t\t\t\t\t\t\t\t\t\t\t\t<     /h5> */}\r\n                        <span className='aboutToUploadImagesContainer__uploadItem-plus'>\r\n                          <PlusOutlined />\r\n                        </span>\r\n                      </div>\r\n                    </Tooltip>\r\n                  )\r\n                ) : (\r\n                  <Tooltip title={'Attach images'}>\r\n                    <div\r\n                      onClick={() => {\r\n                        setvisibleMedia(true);\r\n                      }}\r\n                      className='aboutToUploadImagesContainer__uploadItem'\r\n                    >\r\n                      {/* <FileAddOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t<FileImageTwoTone />\r\n\t\t\t\t\t\t\t\t\t\t\t\t<FileImageOutlined /> */}\r\n                      <FileImageFilled />\r\n                      {/* <h5>\r\n\t\t\t\t\t\t\t\t\t\t\t\t Select From Library\r\n\t\t\t\t\t\t\t\t\t\t<     /h5> */}\r\n                      <span className='aboutToUploadImagesContainer__uploadItem-plus'>\r\n                        <PlusOutlined />\r\n                      </span>\r\n                    </div>\r\n                  </Tooltip>\r\n                )}\r\n              </div>\r\n\r\n              <p\r\n                style={{\r\n                  color: '#ff4d4f',\r\n                  marginTop: '-15px',\r\n                }}\r\n              >\r\n                {addPageState.error['error']['cover']}\r\n              </p>\r\n            </div>\r\n            <div className='addNewPageContainer__body'>\r\n              <h3 className='inputFieldLabel'>Content</h3>\r\n\r\n              <CKEditor\r\n                editor={ClassicEditor}\r\n                data={content}\r\n                onInit={(editor) => {\r\n                  // You can store the \"editor\" and use when it is needed.\r\n                  console.log('Editor is ready to use!', editor);\r\n                }}\r\n                onChange={(event, editor) => {\r\n                  const data = editor.getData();\r\n                  setContent(data);\r\n                }}\r\n                onBlur={(event, editor) => {\r\n                  console.log('Blur.', editor);\r\n                }}\r\n                onFocus={(event, editor) => {\r\n                  console.log('Focus.', editor);\r\n                }}\r\n              />\r\n\r\n              <div\r\n                style={{\r\n                  marginTop: '15px',\r\n                }}\r\n              ></div>\r\n\r\n              <h3 className='inputFieldLabel'>BN Content</h3>\r\n\r\n              <CKEditor\r\n                editor={ClassicEditor}\r\n                data={bnContent}\r\n                onInit={(editor) => {\r\n                  // You can store the \"editor\" and use when it is needed.\r\n                  console.log('Editor is ready to use!', editor);\r\n                }}\r\n                onChange={(event, editor) => {\r\n                  const data = editor.getData();\r\n                  setBnContent(data);\r\n                }}\r\n                onBlur={(event, editor) => {\r\n                  console.log('Blur.', editor);\r\n                }}\r\n                onFocus={(event, editor) => {\r\n                  console.log('Focus.', editor);\r\n                }}\r\n              />\r\n            </div>\r\n\r\n            <div\r\n              style={{\r\n                marginTop: '20px',\r\n              }}\r\n            ></div>\r\n\r\n            <div className='addNewPageContainer__header'>\r\n              <div className='dubbleRowInputs'>\r\n                <div className='dubbleRowInputs__item'>\r\n                  <Input\r\n                    label='Meta Title'\r\n                    value={values.metaTitle}\r\n                    name='metaTitle'\r\n                    isError={\r\n                      (touched.metaTitle && errors.metaTitle) ||\r\n                      (!isSubmitting &&\r\n                        addPageState.error['error']['metaTitle'])\r\n                    }\r\n                    errorString={\r\n                      (touched.metaTitle && errors.metaTitle) ||\r\n                      (!isSubmitting &&\r\n                        addPageState.error['error']['metaTitle'])\r\n                    }\r\n                    onChange={(e: any) => {\r\n                      handleChange(e);\r\n                      setFieldTouched('metaTitle');\r\n                    }}\r\n                  />\r\n                </div>\r\n                <div className='dubbleRowInputs__item'>\r\n                  <Input\r\n                    label='BN Meta Title'\r\n                    value={values.bnMetaTitle}\r\n                    placeHolder={''}\r\n                    name='bnMetaTitle'\r\n                    isError={\r\n                      (touched.bnMetaTitle && errors.bnMetaTitle) ||\r\n                      (!isSubmitting &&\r\n                        addPageState.error['error']['bnMetaTitle'])\r\n                    }\r\n                    errorString={\r\n                      (touched.bnMetaTitle && errors.bnMetaTitle) ||\r\n                      (!isSubmitting &&\r\n                        addPageState.error['error']['bnMetaTitle'])\r\n                    }\r\n                    onChange={(e: any) => {\r\n                      handleChange(e);\r\n                      setFieldTouched('bnMetaTitle');\r\n                    }}\r\n                  />\r\n                </div>\r\n              </div>\r\n\r\n              <div className='dubbleRowInputs'>\r\n                <div className='dubbleRowInputs__item'>\r\n                  <TextArea\r\n                    label='Meta description'\r\n                    value={values.metaDescription}\r\n                    placeholder={'meta...'}\r\n                    name='metaDescription'\r\n                    isError={\r\n                      (touched.metaDescription && errors.metaDescription) ||\r\n                      (!isSubmitting &&\r\n                        addPageState.error['error']['metaDescription'])\r\n                    }\r\n                    errorString={\r\n                      (touched.metaDescription && errors.metaDescription) ||\r\n                      (!isSubmitting &&\r\n                        addPageState.error['error']['metaDescription'])\r\n                    }\r\n                    onChange={(e: any) => {\r\n                      handleChange(e);\r\n                      setFieldTouched('metaDescription');\r\n                    }}\r\n                  />\r\n                </div>\r\n                <div className='dubbleRowInputs__item'>\r\n                  <TextArea\r\n                    label='BN Meta Description'\r\n                    value={values.bnMetaDescription}\r\n                    placeholder={'এইয় মেট...'}\r\n                    name='bnMetaDescription'\r\n                    isError={\r\n                      (touched.bnMetaDescription && errors.bnMetaDescription) ||\r\n                      (!isSubmitting &&\r\n                        addPageState.error['error']['bnMetaDescription'])\r\n                    }\r\n                    errorString={\r\n                      (touched.bnMetaDescription && errors.bnMetaDescription) ||\r\n                      (!isSubmitting &&\r\n                        addPageState.error['error']['bnMetaDescription'])\r\n                    }\r\n                    onChange={(e: any) => {\r\n                      handleChange(e);\r\n                      setFieldTouched('bnMetaDescription');\r\n                    }}\r\n                  />\r\n                </div>\r\n              </div>\r\n\r\n              <div className='dubbleRowInputs'>\r\n                <div className='dubbleRowInputs__item'>\r\n                  <h3 className='inputFieldLabel'>Meta Tags</h3>\r\n\r\n                  <MetaTags\r\n                    // @ts-ignore\r\n                    setTags={setTags}\r\n                    tags={tags}\r\n                  />\r\n                </div>\r\n                <div className='dubbleRowInputs__item'>\r\n                  <h3 className='inputFieldLabel'>BN Meta Tags</h3>\r\n\r\n                  <MetaTags\r\n                    // @ts-ignore\r\n                    setTags={setBnTags}\r\n                    tags={bnTags}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div\r\n              style={{\r\n                marginTop: '20px',\r\n              }}\r\n            ></div>\r\n\r\n            <Button\r\n              loading={addPageState.isLoading}\r\n              onClick={(e: any) => handleSubmit(e)}\r\n              className='btnPrimaryClassNameoutline'\r\n            >\r\n              Create page\r\n            </Button>\r\n          </div>\r\n\r\n          <MediaLibrary\r\n            setvisible={setvisibleMedia}\r\n            visible={visibleMedia}\r\n            setmyImages={setmyImages}\r\n            myImages={myImages}\r\n            isModalOpenForImages={true}\r\n          />\r\n        </>\r\n      )}\r\n    </Formik>\r\n  );\r\n};\r\n\r\nexport default AddNewPage;\r\n\r\n/*\r\n\r\n<div className=\"addNewPageContainer\">\r\n\t\t\t<h3 className='addNewPageContainer__heading'>\r\n\t\t\t\tAdd New Order\r\n\t\t\t</h3>\r\n\t\t\t<div className='addNewPageContainer__header'>\r\n\r\n\t\t\t</div>\r\n\t\t\t<div className='addNewPageContainer__body'>\r\n\r\n\t\t\t</div>\r\n\t\t</div>\r\n\r\n\r\n*/\r\n","// @ts-nocheck\r\nimport React, { useState, useEffect } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n// import hhooks\r\nimport { useHandleFetch } from '../../hooks';\r\n\r\n// import lib\r\nimport { useParams } from 'react-router-dom';\r\n\r\n// import third party ui lib\r\nimport {\r\n  Upload,\r\n  message,\r\n  Switch,\r\n  Select,\r\n  Button,\r\n  notification,\r\n  Modal,\r\n  Empty,\r\n  Steps,\r\n  Tooltip,\r\n} from 'antd';\r\n\r\nimport {\r\n  CheckCircleOutlined,\r\n  CaretRightOutlined,\r\n  CaretLeftOutlined,\r\n  CaretRightFilled,\r\n  UserOutlined,\r\n  InfoCircleOutlined,\r\n  FileOutlined,\r\n  InboxOutlined,\r\n  FileAddOutlined,\r\n  DeleteOutlined,\r\n  CloseOutlined,\r\n  CheckOutlined,\r\n  PlusOutlined,\r\n  FileImageFilled,\r\n} from '@ant-design/icons';\r\n\r\nimport CKEditor from '@ckeditor/ckeditor5-react';\r\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport MediaLibrary from '../../components/MediaLibrary';\r\nimport MetaTags from '../../pages/category/MetaTags';\r\n\r\nconst { Option } = Select;\r\nconst { Step } = Steps;\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n  notification.success({\r\n    message: message || 'Page Updated',\r\n    description: '',\r\n    icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n  });\r\n};\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n  notification.error({\r\n    message: message || 'Something Went Wrong',\r\n    description: '',\r\n    icon: <InfoCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n  });\r\n};\r\n\r\nconst validationSchema = Yup.object().shape({});\r\n\r\nconst initialValues = {\r\n  name: '',\r\n  bnName: '',\r\n  content: '',\r\n  bnContent: '',\r\n  metaTitle: '',\r\n  bnMetaTitle: '',\r\n  metaDescription: '',\r\n  bnMetaDescription: '',\r\n  metaTags: '',\r\n  bnMetaTags: '',\r\n  url: '',\r\n};\r\n\r\nconst steps = [\r\n  {\r\n    title: 'Order Information',\r\n    content: '',\r\n    // description: 'Add Customer & Products'\r\n  },\r\n  {\r\n    title: 'Billing Address',\r\n  },\r\n  {\r\n    title: 'Confirm Order',\r\n    content: '',\r\n  },\r\n];\r\n\r\ninterface Props {}\r\n\r\nconst AddNewPage = ({}: Props) => {\r\n  const [addPageState, handleAddPageFetch] = useHandleFetch({}, 'updatePage');\r\n  const [content, setContent] = useState('');\r\n  const [bnContent, setBnContent] = useState('');\r\n  const [myImages, setmyImages] = useState(false);\r\n  const [visibleMedia, setvisibleMedia] = useState(false);\r\n  const [coverImageId, setCoverImageId] = useState('');\r\n  const [tags, setTags] = useState([]);\r\n  const [bnTags, setBnTags] = useState([]);\r\n\r\n  const [tagDetailState, handleTagDetailFetch] = useHandleFetch(\r\n    {},\r\n    'pageDetail'\r\n  );\r\n  const [tagDetailData, setTagDetailData] = useState({});\r\n  const [\r\n    setImageAsThumbnailToItemState,\r\n    handleSetImageAsThumbnailToItemFetch,\r\n  ] = useHandleFetch({}, 'setImageAsThumbnailToItem');\r\n  const [\r\n    detachImageFromItemSingleState,\r\n    handleDetachImageFromItemSingleFetch,\r\n  ] = useHandleFetch({}, 'detachImageFromItemSingle');\r\n\r\n  const params = useParams();\r\n  const tagId = params['id'];\r\n\r\n  useEffect(() => {\r\n    const getBrandDetail = async () => {\r\n      const tagDetailRes = await handleTagDetailFetch({\r\n        urlOptions: {\r\n          placeHolders: {\r\n            id: tagId,\r\n          },\r\n        },\r\n      });\r\n\r\n      // @ts-ignore\r\n      if (tagDetailRes) {\r\n        console.log('tagDetailRes', tagDetailRes);\r\n        // @ts-ignore\r\n        setTagDetailData(tagDetailRes);\r\n      }\r\n    };\r\n\r\n    getBrandDetail();\r\n  }, [tagId]);\r\n\r\n  useEffect(() => {\r\n    if (tagDetailData && Object.keys(tagDetailData).length > 0) {\r\n      if (tagDetailData.cover && tagDetailData.cover['id']) {\r\n        // @ts-ignore\r\n        setmyImages([tagDetailData.cover]);\r\n        setCoverImageId(tagDetailData.cover['id']);\r\n      }\r\n    }\r\n  }, [tagDetailData]);\r\n\r\n  useEffect(() => {\r\n    if (tagDetailData && Object.keys(tagDetailData).length > 0) {\r\n      setContent(tagDetailData['content'] || '');\r\n      setBnContent(\r\n        tagDetailData['bn'] && tagDetailData['bn']['content']\r\n          ? tagDetailData['bn']['content']\r\n          : ''\r\n      );\r\n    }\r\n  }, [tagDetailData]);\r\n\r\n  const handleAddPageSubmit = async (values: any, actions: any) => {\r\n    const url = values.url.trim()  ? values.url.replace('/page/','') : ''\r\n    const addOrderRes = await handleAddPageFetch({\r\n      urlOptions: {\r\n        placeHolders: {\r\n          id: tagDetailData._id,\r\n        },\r\n      },\r\n      body: {\r\n        name: values.name.trim(),\r\n        content: content,\r\n        url: url,\r\n        cover: myImages ? myImages[0] && myImages[0].id : '',\r\n        metaTitle: values.metaTitle,\r\n        metaDescription: values.metaDescription,\r\n        metaTags: tags && tags.length > 0 ? tags.join(',') : '',\r\n        bn: {\r\n          metaTitle: values.bnMetaTitle,\r\n          metaDescription: values.bnMetaDescription,\r\n          metaTags: bnTags && bnTags.length > 0 ? bnTags.join(',') : '',\r\n          name: values.bnName.trim(),\r\n          content: bnContent,\r\n        },\r\n      },\r\n    });\r\n\r\n    // @ts-ignore\r\n    if (addOrderRes && addOrderRes.status === 'ok') {\r\n      // openSuccessNotification();\r\n      // setCoverImageId('');\r\n      // setBnTags([]);\r\n      // setTags([]);\r\n      // setContent('');\r\n      // setBnContent('');\r\n      // setvisibleMedia();\r\n      // setmyImages([]);\r\n      // actions.resetForm();\r\n    } else {\r\n      openErrorNotification(\"Couldn't Update page, Something went wrong\");\r\n    }\r\n\r\n    actions.setSubmitting(false);\r\n  };\r\n\r\n  const getisSubmitButtonDisabled = (values, isValid) => {\r\n    if (!isValid || !values.name || !values.pickUpLocation || !values.time) {\r\n      return true;\r\n    }\r\n    return false;\r\n  };\r\n\r\n  const handleImagesDelete = (id) => {\r\n    // @ts-ignore\r\n    const newImages =\r\n      myImages &&\r\n      myImages.filter((image) => {\r\n        return image.id !== id;\r\n      });\r\n\r\n    setmyImages(newImages);\r\n  };\r\n\r\n  const handleSetImageAsThumnail = async (image) => {\r\n    const thumbnailRes = await handleSetImageAsThumbnailToItemFetch({\r\n      urlOptions: {\r\n        placeHolders: {\r\n          imageId: image.id,\r\n          collection: 'page',\r\n          itemId: tagDetailData.id,\r\n        },\r\n      },\r\n    });\r\n\r\n    // @ts-ignore\r\n    if (thumbnailRes && thumbnailRes.status === 'ok') {\r\n      openSuccessNotification('Set as thumbnail!');\r\n      // const positionInBrand = () => {\r\n      //     return brandList.map(item => item.id).indexOf(brandDetailData.id);\r\n      // }\r\n\r\n      // const index = positionInBrand();\r\n\r\n      // const prevItem = brandList.find(item => item.id === productRecord.id);\r\n\r\n      // if (prevItem) {\r\n      //     const updatedItem = Object.assign({}, brandList[index], { ...prevItem, cover: image.cover });\r\n      //     const updateBrandList = [...brandList.slice(0, index), updatedItem, ...brandList.slice(index + 1)];\r\n      //     setBrandList(updateBrandList);\r\n      // }\r\n    } else {\r\n      openErrorNotification(\"Couldn't set as thumbnail, Something went wrong\");\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    // @ts-ignore\r\n    if (myImages && myImages[0] && myImages.length < 2) {\r\n      if (coverImageId !== myImages[0].id) {\r\n        setCoverImageId(myImages[0].id);\r\n        handleSetImageAsThumnail(myImages[0]);\r\n      }\r\n    }\r\n  }, [myImages]);\r\n\r\n  useEffect(() => {\r\n    if (!addPageState['isLoading']) {\r\n      const error = addPageState['error'];\r\n      if (error['isError'] && Object.keys(error['error']).length > 0) {\r\n        if (error['error']['registerError']) {\r\n          // setServerErrors(error['error']['registerError']);\r\n        } else if (error['error']['checkoutError']) {\r\n          // setServerErrors(error['error']['checkoutError']);\r\n        } else {\r\n          // setServerErrors(error['error']);\r\n        }\r\n\r\n        const errors =\r\n          Object.values(error['error']).length > 0\r\n            ? Object.values(error['error'])\r\n            : [];\r\n        errors.forEach((err, i) => {\r\n          if (typeof err === 'string') {\r\n            openErrorNotification(err);\r\n          } else if (typeof err === 'object') {\r\n            if (err && Object.keys(err).length > 0) {\r\n              const errs = Object.values(err);\r\n              errs.forEach((err) => {\r\n                openErrorNotification(err);\r\n              });\r\n            }\r\n          }\r\n        });\r\n      }\r\n    }\r\n\r\n    if (\r\n      !addPageState['isLoading'] &&\r\n      Object.keys(addPageState.data).length > 0\r\n    ) {\r\n      if (addPageState['data']['status'] === 'ok') {\r\n        openSuccessNotification('Page Updated Successfully');\r\n        // history.push({\r\n        //   pathname: '/orderDetails',\r\n        //   state: checkoutState['data']\r\n        // })\r\n\r\n        // clearCart();\r\n        // setIsModalShown(true);\r\n      }\r\n    }\r\n  }, [addPageState]);\r\n\r\n  useEffect(() => {\r\n    if (tagDetailData && Object.keys(tagDetailData).length > 0) {\r\n      const metaTags =\r\n        tagDetailData.metaTags && tagDetailData.metaTags.split(',');\r\n\r\n      console.log('localMetaTags', metaTags);\r\n\r\n      const bnMetaTags =\r\n        tagDetailData.bn &&\r\n        tagDetailData.bn['metaTags'] &&\r\n        tagDetailData.bn['metaTags'].split(',');\r\n      setTags(metaTags || []);\r\n      setBnTags(bnMetaTags || []);\r\n    }\r\n  }, []);\r\n\r\n  const handleDetachSingleImage = async (id) => {\r\n    console.log('dure', id);\r\n    console.log('dure2', tagDetailData);\r\n    await handleDetachImageFromItemSingleFetch({\r\n      urlOptions: {\r\n        placeHolders: {\r\n          imageId: id,\r\n          collection: 'page',\r\n          itemId: tagDetailData.id,\r\n        },\r\n      },\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Formik\r\n      onSubmit={(values, actions) => handleAddPageSubmit(values, actions)}\r\n      validationSchema={validationSchema}\r\n      validateOnBlur={false}\r\n      enableReinitialize={true}\r\n      initialValues={{\r\n        ...initialValues,\r\n        ...tagDetailData,\r\n        ...(tagDetailData &&\r\n          Object.keys(tagDetailData).length > 0 && {\r\n            bnMetaTitle:\r\n              tagDetailData['bn'] &&\r\n              tagDetailData['bn'].metaTitle &&\r\n              tagDetailData['bn'].metaTitle,\r\n            bnMetaDescription:\r\n              tagDetailData['bn'] &&\r\n              tagDetailData['bn'].metaDescription &&\r\n              tagDetailData['bn'].metaDescription,\r\n            bnName:\r\n              tagDetailData['bn'] &&\r\n              tagDetailData['bn'].name &&\r\n              tagDetailData['bn'].name,\r\n            bnDescription:\r\n              tagDetailData['bn'] &&\r\n              tagDetailData['bn'].description &&\r\n              tagDetailData['bn'].description,\r\n          }),\r\n      }}\r\n    >\r\n      {({\r\n        handleChange,\r\n        values,\r\n        handleSubmit,\r\n        errors,\r\n        isValid,\r\n        isSubmitting,\r\n        touched,\r\n        handleBlur,\r\n        setFieldTouched,\r\n        handleReset,\r\n      }) => (\r\n        <>\r\n          <div className='addNewPageContainer'>\r\n            <h3 className='addNewPageContainer__heading'>Edit Page</h3>\r\n\r\n            <div className='addNewPageContainer__header'>\r\n              <div className='dubbleRowInputs'>\r\n                <div className='dubbleRowInputs__item'>\r\n                  <Input\r\n                    label='Title'\r\n                    value={values.name}\r\n                    name='name'\r\n                    placeHolder='About us,Contact us'\r\n                    isError={\r\n                      (touched.name && errors.name) ||\r\n                      (!isSubmitting && addPageState.error['error']['name'])\r\n                    }\r\n                    errorString={\r\n                      (touched.name && errors.name) ||\r\n                      (!isSubmitting && addPageState.error['error']['name'])\r\n                    }\r\n                    onChange={(e: any) => {\r\n                      handleChange(e);\r\n                      setFieldTouched('name');\r\n                    }}\r\n                  />\r\n                </div>\r\n                <div className='dubbleRowInputs__item'>\r\n                  <Input\r\n                    label='BN Title'\r\n                    value={values.bnName}\r\n                    placeHolder={'ব্লগ...'}\r\n                    name='bnName'\r\n                    isError={\r\n                      (touched.bnName && errors.bnName) ||\r\n                      (!isSubmitting && addPageState.error['error']['bnName'])\r\n                    }\r\n                    errorString={\r\n                      (touched.bnName && errors.bnName) ||\r\n                      (!isSubmitting && addPageState.error['error']['bnName'])\r\n                    }\r\n                    onChange={(e: any) => {\r\n                      handleChange(e);\r\n                      setFieldTouched('bnName');\r\n                    }}\r\n                  />\r\n                </div>\r\n              </div>\r\n\r\n              <Input\r\n                label='Slug'\r\n                value={values.url}\r\n                name='url'\r\n                isError={\r\n                  (touched.url && errors.url) ||\r\n                  (!isSubmitting && addPageState.error['error']['url'])\r\n                }\r\n                errorString={\r\n                  (touched.url && errors.url) ||\r\n                  (!isSubmitting && addPageState.error['error']['url'])\r\n                }\r\n                onChange={(e: any) => {\r\n                  handleChange(e);\r\n                  setFieldTouched('url');\r\n                }}\r\n              />\r\n\r\n              <h3 className='inputFieldLabel'>Thumbnail</h3>\r\n\r\n              <div className='aboutToUploadImagesContainer'>\r\n                {tagDetailData && Object.keys(tagDetailData).length > 0 && (\r\n                  <>\r\n                    {myImages &&\r\n                      // @ts-ignore\r\n                      myImages.length > 0 &&\r\n                      myImages.map((image, index) => {\r\n                        return (\r\n                          <div className='aboutToUploadImagesContainer__item'>\r\n                            <div\r\n                              className='aboutToUploadImagesContainer__item-imgContainer'\r\n                              onClick={() => {\r\n                                setvisibleMedia(true);\r\n                                // handleSetImageAsThumnail(image);\r\n                              }}\r\n                            >\r\n                              <img src={image.cover} alt={image.alt} />\r\n                            </div>\r\n\r\n                            <span\r\n                              onClick={() => {\r\n                                handleImagesDelete(image.id);\r\n                                handleDetachSingleImage(image.id);\r\n                              }}\r\n                              className='aboutToUploadImagesContainer__item-remove'\r\n                            >\r\n                              <CloseOutlined />\r\n                            </span>\r\n\r\n                            {/* {coverImageId === image.id ? (\r\n                              <span className='aboutToUploadImagesContainer__item-cover'>\r\n                                <CheckOutlined />\r\n                              </span>\r\n                            ) : (\r\n                              !coverImageId &&\r\n                              index === 0 && (\r\n                                <span className='aboutToUploadImagesContainer__item-cover'>\r\n                                  <CheckOutlined />\r\n                                </span>\r\n                              )\r\n                            )} */}\r\n                          </div>\r\n                        );\r\n                      })}\r\n\r\n                    {!myImages ||\r\n                    // @ts-ignore\r\n                    (myImages && !(myImages && myImages.length > 0)) ? (\r\n                      <>\r\n                        <Tooltip title={'Attach images'}>\r\n                          <div\r\n                            onClick={() => {\r\n                              setvisibleMedia(true);\r\n                            }}\r\n                            className='aboutToUploadImagesContainer__uploadItem'\r\n                          >\r\n                            <FileImageFilled />\r\n                            <span className='aboutToUploadImagesContainer__uploadItem-plus'>\r\n                              <PlusOutlined />\r\n                            </span>\r\n                          </div>\r\n                        </Tooltip>\r\n                      </>\r\n                    ) : (\r\n                      ''\r\n                    )}\r\n                  </>\r\n                )}\r\n              </div>\r\n\r\n              <p\r\n                style={{\r\n                  color: '#ff4d4f',\r\n                  marginTop: '-15px',\r\n                }}\r\n              >\r\n                {addPageState.error['error']['cover']}\r\n              </p>\r\n            </div>\r\n            <div className='addNewPageContainer__body'>\r\n              <h3 className='inputFieldLabel'>Content</h3>\r\n\r\n              <CKEditor\r\n                editor={ClassicEditor}\r\n                data={content}\r\n                onInit={(editor) => {\r\n                  // You can store the \"editor\" and use when it is needed.\r\n                  console.log('Editor is ready to use!', editor);\r\n                }}\r\n                onChange={(event, editor) => {\r\n                  const data = editor.getData();\r\n                  setContent(data);\r\n                }}\r\n                onBlur={(event, editor) => {\r\n                  console.log('Blur.', editor);\r\n                }}\r\n                onFocus={(event, editor) => {\r\n                  console.log('Focus.', editor);\r\n                }}\r\n              />\r\n\r\n              <div\r\n                style={{\r\n                  marginTop: '15px',\r\n                }}\r\n              ></div>\r\n\r\n              <h3 className='inputFieldLabel'>BN Content</h3>\r\n\r\n              <CKEditor\r\n                editor={ClassicEditor}\r\n                data={bnContent}\r\n                onInit={(editor) => {\r\n                  // You can store the \"editor\" and use when it is needed.\r\n                  console.log('Editor is ready to use!', editor);\r\n                }}\r\n                onChange={(event, editor) => {\r\n                  const data = editor.getData();\r\n                  setBnContent(data);\r\n                }}\r\n                onBlur={(event, editor) => {\r\n                  console.log('Blur.', editor);\r\n                }}\r\n                onFocus={(event, editor) => {\r\n                  console.log('Focus.', editor);\r\n                }}\r\n              />\r\n            </div>\r\n\r\n            <div\r\n              style={{\r\n                marginTop: '20px',\r\n              }}\r\n            ></div>\r\n\r\n            <div className='addNewPageContainer__header'>\r\n              <div className='dubbleRowInputs'>\r\n                <div className='dubbleRowInputs__item'>\r\n                  <Input\r\n                    label='Meta Title'\r\n                    value={values.metaTitle}\r\n                    name='metaTitle'\r\n                    isError={\r\n                      (touched.metaTitle && errors.metaTitle) ||\r\n                      (!isSubmitting &&\r\n                        addPageState.error['error']['metaTitle'])\r\n                    }\r\n                    errorString={\r\n                      (touched.metaTitle && errors.metaTitle) ||\r\n                      (!isSubmitting &&\r\n                        addPageState.error['error']['metaTitle'])\r\n                    }\r\n                    onChange={(e: any) => {\r\n                      handleChange(e);\r\n                      setFieldTouched('metaTitle');\r\n                    }}\r\n                  />\r\n                </div>\r\n                <div className='dubbleRowInputs__item'>\r\n                  <Input\r\n                    label='BN Meta Title'\r\n                    value={values.bnMetaTitle}\r\n                    placeHolder={''}\r\n                    name='bnMetaTitle'\r\n                    isError={\r\n                      (touched.bnMetaTitle && errors.bnMetaTitle) ||\r\n                      (!isSubmitting &&\r\n                        addPageState.error['error']['bnMetaTitle'])\r\n                    }\r\n                    errorString={\r\n                      (touched.bnMetaTitle && errors.bnMetaTitle) ||\r\n                      (!isSubmitting &&\r\n                        addPageState.error['error']['bnMetaTitle'])\r\n                    }\r\n                    onChange={(e: any) => {\r\n                      handleChange(e);\r\n                      setFieldTouched('bnMetaTitle');\r\n                    }}\r\n                  />\r\n                </div>\r\n              </div>\r\n\r\n              <div className='dubbleRowInputs'>\r\n                <div className='dubbleRowInputs__item'>\r\n                  <TextArea\r\n                    label='Meta description'\r\n                    value={values.metaDescription}\r\n                    placeholder={'meta...'}\r\n                    name='metaDescription'\r\n                    isError={\r\n                      (touched.metaDescription && errors.metaDescription) ||\r\n                      (!isSubmitting &&\r\n                        addPageState.error['error']['metaDescription'])\r\n                    }\r\n                    errorString={\r\n                      (touched.metaDescription && errors.metaDescription) ||\r\n                      (!isSubmitting &&\r\n                        addPageState.error['error']['metaDescription'])\r\n                    }\r\n                    onChange={(e: any) => {\r\n                      handleChange(e);\r\n                      setFieldTouched('metaDescription');\r\n                    }}\r\n                  />\r\n                </div>\r\n                <div className='dubbleRowInputs__item'>\r\n                  <TextArea\r\n                    label='BN Meta Description'\r\n                    value={values.bnMetaDescription}\r\n                    placeholder={'এইয় মেট...'}\r\n                    name='bnMetaDescription'\r\n                    isError={\r\n                      (touched.bnMetaDescription && errors.bnMetaDescription) ||\r\n                      (!isSubmitting &&\r\n                        addPageState.error['error']['bnMetaDescription'])\r\n                    }\r\n                    errorString={\r\n                      (touched.bnMetaDescription && errors.bnMetaDescription) ||\r\n                      (!isSubmitting &&\r\n                        addPageState.error['error']['bnMetaDescription'])\r\n                    }\r\n                    onChange={(e: any) => {\r\n                      handleChange(e);\r\n                      setFieldTouched('bnMetaDescription');\r\n                    }}\r\n                  />\r\n                </div>\r\n              </div>\r\n\r\n              <div className='dubbleRowInputs'>\r\n                <div className='dubbleRowInputs__item'>\r\n                  <h3 className='inputFieldLabel'>Meta Tags</h3>\r\n\r\n                  <MetaTags\r\n                    // @ts-ignore\r\n                    setTags={setTags}\r\n                    tags={tags}\r\n                  />\r\n                </div>\r\n                <div className='dubbleRowInputs__item'>\r\n                  <h3 className='inputFieldLabel'>BN Meta Tags</h3>\r\n\r\n                  <MetaTags\r\n                    // @ts-ignore\r\n                    setTags={setBnTags}\r\n                    tags={bnTags}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div\r\n              style={{\r\n                marginTop: '20px',\r\n              }}\r\n            ></div>\r\n\r\n            <Button\r\n              loading={addPageState.isLoading}\r\n              onClick={(e: any) => handleSubmit(e)}\r\n              className='btnPrimaryClassNameoutline'\r\n            >\r\n              Update page\r\n            </Button>\r\n          </div>\r\n\r\n          <MediaLibrary\r\n            setvisible={setvisibleMedia}\r\n            visible={visibleMedia}\r\n            setmyImages={setmyImages}\r\n            myImages={myImages}\r\n            isModalOpenForImages={true}\r\n          />\r\n        </>\r\n      )}\r\n    </Formik>\r\n  );\r\n};\r\n\r\nexport default AddNewPage;\r\n\r\n/*\r\n\r\n<div className=\"addNewPageContainer\">\r\n\t\t\t<h3 className='addNewPageContainer__heading'>\r\n\t\t\t\tAdd New Order\r\n\t\t\t</h3>\r\n\t\t\t<div className='addNewPageContainer__header'>\r\n\r\n\t\t\t</div>\r\n\t\t\t<div className='addNewPageContainer__body'>\r\n\r\n\t\t\t</div>\r\n\t\t</div>\r\n\r\n\r\n*/\r\n","import React,{useState} from 'react';\r\nimport { Modal  } from 'antd';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport {useHandleFetch} from '../../hooks';\r\n\r\nconst validationSchema = Yup.object().shape({\r\n\tname: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n\tdescription: Yup.string().label('Description').required('Description is required')\r\n});\r\n\r\n\r\n\r\n\r\n\r\ninterface Props {\r\n\tcategory: any;\r\n\tsetvisible: any; \r\n\tvisible: any;\r\n}\r\n\r\nconst QuickEdit = ({ category, setvisible, visible }: Props) => {\r\n\tconst [updateCategoryState, handleUpdateCategoryFetch] = useHandleFetch({}, 'updateCategory');\r\n\r\n\tconst handleSubmit = async (values : any, actions : any) => {\r\n\t  const updateCategoryRes = await handleUpdateCategoryFetch({\r\n\t\turlOptions: {\r\n\t\t\tplaceHolders: {\r\n\t\t\t  id: values.id,\r\n\t\t\t}\r\n\t\t  },\r\n\t\tbody: {\r\n\t\t\tname: values.name,\r\n\t\t\tdescription: values.description,\r\n\t\t},\r\n\t  });\r\n\t\r\n\t  actions.setSubmitting(false);\r\n\t};\r\n\t\r\n\r\n\tconst handleCancel = (e: any) => {\r\n        setvisible(false);\r\n      };\r\n\r\n\r\n\r\n\t  const getisSubmitButtonDisabled = (values,isValid) => {\r\n\t\tif(!values.name || !values.description || !isValid){\r\n\t\t\treturn true; \r\n\t\t}\r\n\t\treturn false; \r\n\t  }\r\n\r\n\treturn (\r\n\t\t<Formik\r\n\t\tonSubmit={(values, actions) => handleSubmit(values, actions)}\r\n\t\tvalidationSchema={validationSchema}\r\n\t\tvalidateOnBlur={false}\r\n\t\tenableReinitialize={true}\r\n\t\tinitialValues={\r\n\t\t  {...category}\r\n\t\t}\r\n\t  >\r\n\t\t{({\r\n\t\t  handleChange,\r\n\t\t  values,\r\n\t\t  handleSubmit,\r\n\t\t  errors,\r\n\t\t  isValid,\r\n\t\t  isSubmitting,\r\n\t\t  touched,\r\n\t\t  handleBlur,\r\n\t\t  setFieldTouched,\r\n\t\t  handleReset,\r\n\t\t}) => (\r\n\t\t\t<>\r\n\t\t\t<Modal\r\n\t\t\ttitle=\"Quick Edit\"\r\n\t\t\tvisible={visible}\r\n\t\t\tonOk={(e : any) => handleSubmit(e)}\r\n\t\t\tonCancel={handleCancel}\r\n\t\t\tokText='Update'\r\n\t\t\tokButtonProps={{\r\n\t\t\tloading: isSubmitting,\r\n\t\t\thtmlType: \"submit\",\r\n\t\t\tdisabled: getisSubmitButtonDisabled(values, isValid)\r\n\t\t\t}}\r\n  >\r\n  <Input \r\n\t\t\t   label='Title'\r\n\t\t\t   value={values.name}\r\n\t\t\t   name='name'\r\n\t\t\t   isError={(touched.name && errors.name) ||\r\n\t\t\t\t  (!isSubmitting && updateCategoryState.error['error']['name'])}\r\n\t\t\t  \r\n\t\t\t\t  errorString={(touched.name && errors.name) ||\r\n\t\t\t\t\t  (!isSubmitting && updateCategoryState.error['error']['name'])}\r\n\t\t\t   onChange={(e : any) => {\r\n\t\t\t\t  handleChange(e);\r\n\t\t\t\t  setFieldTouched('name');\r\n\t\t\t\t}}\r\n\t\t\t   />\r\n\t\t\t  <TextArea\r\n\t\t\t   label='Description' \r\n\t\t\t   value={values.description}\r\n\t\t\t   name='description'\r\n\t\t\t   isError={(touched.description && errors.description) ||\r\n\t\t\t\t  (!isSubmitting && updateCategoryState.error['error']['description'])}\r\n\t\t\t  \r\n\t\t\t\t  errorString={(touched.description && errors.description) ||\r\n\t\t\t\t\t  (!isSubmitting && updateCategoryState.error['error']['description'])}\r\n\t\t\t   onChange={(e : any) => {\r\n\t\t\t\t  handleChange(e);\r\n\t\t\t\t  setFieldTouched('description');\r\n\t\t\t\t}}\r\n\t\t\t\t />\r\n  </Modal>\r\n\t\t\t  \r\n\t\t\t</>\r\n\t\t  )}\r\n\t  </Formik>\r\n\t);\r\n};\r\n\r\n\r\nexport default QuickEdit;\r\n","// @ts-nocheck\r\n\r\nimport React from 'react'; \r\nimport { Tag, Input, Tooltip } from 'antd';\r\nimport { PlusOutlined } from '@ant-design/icons';\r\n\r\nclass EditableTagGroup extends React.Component {\r\n  state = {\r\n    tags: [],\r\n    inputVisible: false,\r\n    inputValue: '',\r\n    editInputIndex: -1,\r\n    editInputValue: '',\r\n  };\r\n\r\n  handleClose = removedTag => {\r\n    const tags = this.state.tags.filter(tag => tag !== removedTag);\r\n    this.setState({ tags });\r\n  };\r\n\r\n  showInput = () => {\r\n    this.setState({ inputVisible: true }, () => this.input.focus());\r\n  };\r\n\r\n  handleInputChange = e => {\r\n    this.setState({ inputValue: e.target.value });\r\n  };\r\n\r\n  handleInputConfirm = () => {\r\n    const { inputValue } = this.state;\r\n    let { tags } = this.state;\r\n    if (inputValue && tags.indexOf(inputValue) === -1) {\r\n      tags = [...tags, inputValue];\r\n    }\r\n    this.setState({\r\n      tags,\r\n      inputVisible: false,\r\n      inputValue: '',\r\n    });\r\n  };\r\n\r\n  handleEditInputChange = e => {\r\n    this.setState({ editInputValue: e.target.value });\r\n  };\r\n\r\n  handleEditInputConfirm = () => {\r\n    this.setState(({ tags, editInputIndex, editInputValue }) => {\r\n      const newTags = [...tags];\r\n      newTags[editInputIndex] = editInputValue;\r\n\r\n      return {\r\n        tags: newTags,\r\n        editInputIndex: -1,\r\n        editInputValue: '',\r\n      };\r\n    });\r\n  };\r\n\r\n  saveInputRef = input => {\r\n    this.input = input;\r\n  };\r\n\r\n  saveEditInputRef = input => {\r\n    this.editInput = input;\r\n  };\r\n\r\n  render() {\r\n    const { tags, inputVisible, inputValue, editInputIndex, editInputValue } = this.state;\r\n    return (\r\n      <>\r\n        {tags.map((tag, index) => {\r\n          if (editInputIndex === index) {\r\n            return (\r\n              <Input\r\n                ref={this.saveEditInputRef}\r\n                key={tag}\r\n                size=\"small\"\r\n                className=\"tag-input\"\r\n                value={editInputValue}\r\n                onChange={this.handleEditInputChange}\r\n                onBlur={this.handleEditInputConfirm}\r\n                onPressEnter={this.handleEditInputConfirm}\r\n              />\r\n            );\r\n          }\r\n\r\n          const isLongTag = tag.length > 20;\r\n\r\n          const tagElem = (\r\n            <Tag\r\n              className=\"edit-tag\"\r\n              key={tag}\r\n              closable={index !== 0}\r\n              onClose={() => this.handleClose(tag)}\r\n            >\r\n              <span\r\n                onDoubleClick={e => {\r\n                  if (index !== 0) {\r\n                    this.setState({ editInputIndex: index, editInputValue: tag }, () => {\r\n                      this.editInput.focus();\r\n                    });\r\n                    e.preventDefault();\r\n                  }\r\n                }}\r\n              >\r\n                {isLongTag ? `${tag.slice(0, 20)}...` : tag}\r\n              </span>\r\n            </Tag>\r\n          );\r\n          return isLongTag ? (\r\n            <Tooltip title={tag} key={tag}>\r\n              {tagElem}\r\n            </Tooltip>\r\n          ) : (\r\n            tagElem\r\n          );\r\n        })}\r\n        {inputVisible && (\r\n          <Input\r\n          style={{\r\n            margin: \"10px 0\"\r\n          }}\r\n            ref={this.saveInputRef}\r\n            type=\"text\"\r\n            size=\"small\"\r\n            className=\"tag-input\"\r\n            value={inputValue}\r\n            onChange={this.handleInputChange}\r\n            onBlur={this.handleInputConfirm}\r\n            onPressEnter={this.handleInputConfirm}\r\n          />\r\n        )}\r\n        {!inputVisible && (\r\n          <Tag className=\"site-tag-plus\" onClick={this.showInput}>\r\n            <PlusOutlined /> New Value\r\n          </Tag>\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EditableTagGroup","import React, {useState} from 'react';\r\n\r\n// import third party ui lib\r\nimport { Upload, message, Switch, Select, Button, notification,Table, Space, Input as CoolInput,Tooltip, Modal,\r\n\r\n} from 'antd';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n\r\n\r\nimport {\r\n\tFileOutlined,\r\n\tInboxOutlined,\r\n\tRadiusUpleftOutlined,\r\n\tRadiusUprightOutlined,\r\n\tRadiusBottomleftOutlined,\r\n\tRadiusBottomrightOutlined,\r\n\tPlusOutlined,\r\n\tDeleteOutlined,\r\n\tEditOutlined\r\n} from '@ant-design/icons';\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n\r\n\r\n/// import hooks\r\nimport { useFetch, useHandleFetch } from \"../../hooks\";\r\n\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport { DataTableSkeleton } from \"../../components/Placeholders\";\r\nimport QuickEdit from \"./QuickEdit\"\r\nimport AddAttributeValues from \"./AddAttributeValues\"\r\n\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n\tname: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n\tdescription: Yup.string().label('Description').required('Description is required')\r\n});\r\n\r\n\r\nconst initialValues = {\r\n\tname: '',\r\n\tdescription: ''\r\n}\r\n\r\n\r\nconst { Column, ColumnGroup } = Table;\r\nconst { Search } = CoolInput;\r\n\r\n\r\n\r\nconst MyTable = ({data}) => {\r\n    const [visible,setvisible] = useState(false);   \r\n\tconst [activeCategoryForEdit,setactiveCategoryForEdit] = useState(false); \r\n    const [deleteTagState, handleDeleteTagFetch] = useHandleFetch({}, 'deleteTag');\r\n\r\n\r\n\tconst handleDeleteCategory = async (id) => {\r\n        const deleteTagRes = await handleDeleteTagFetch({\r\n          urlOptions: {\r\n            placeHolders: {\r\n              id,\r\n            }\r\n            }\r\n          });\r\n      }\r\n\r\n\r\n    const handleOk = (e: any) => {\r\n        setvisible(false);\r\n      \r\n      };\r\n    \r\n      const handleCancel = (e: any) => {\r\n        setvisible(false);\r\n      };\r\n\r\n      \r\n\r\n    return (\r\n        <>\r\n         <Table \r\n        // expandable={{\r\n        //     expandedRowRender: record => <p style={{ margin: 0 }}>{record.name}</p>,\r\n        //     rowExpandable: record => record.name !== 'Not Expandable',\r\n        //   }}\r\n        // bordered={true}\r\n        size='small'\r\n        // pagination={false}\r\n        dataSource={data}\r\n        >\r\n\r\n          <Column\r\n           title=\"Name\" \r\n           dataIndex=\"name\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n         \r\n            />\r\n\r\n<Column\r\n           title=\"Description\" \r\n           dataIndex=\"description\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n         \r\n            />\r\n        <Column\r\n        \r\n        className='classnameofthecolumn'\r\n          title=\"\"\r\n          key=\"action\"\r\n          align='right'\r\n          render={(text, record : any) => (\r\n            <Space size=\"middle\">\r\n            \r\n               <Tooltip placement=\"top\" title='Quick Edit Tag'>\r\n              <span className='iconSize' onClick={() => {\r\n                setvisible(true)\r\n                setactiveCategoryForEdit(record); \r\n              }}> \r\n              <EditOutlined />\r\n            \r\n              </span>\r\n               </Tooltip>\r\n\r\n\r\n             \r\n              <Tooltip placement=\"top\" title='Delete Tag'>\r\n            \r\n\r\n             <span \r\n             className='iconSize iconSize-danger'\r\n             onClick={() => handleDeleteCategory(record.id)}\r\n             > \r\n             <DeleteOutlined/>\r\n            </span>\r\n            \r\n          </Tooltip>\r\n             \r\n            </Space>\r\n          )}\r\n        />\r\n      </Table>\r\n\r\n\r\n\r\n     \r\n\r\n\t\t{activeCategoryForEdit &&   <QuickEdit \r\n    setvisible={setvisible}\r\n    visible={visible}\r\n    category={activeCategoryForEdit}/>}\r\n    </>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\n\r\nconst props = {\r\n\tname: 'file',\r\n\tmultiple: true,\r\n\taction: 'https://www.mocky.io/v2/5cc8019d300000980a055e76',\r\n\tonChange(info: any) {\r\n\t\tconst { status } = info.file;\r\n\t\tif (status !== 'uploading') {\r\n\t\t\t// console.log(info.file, info.fileList);\r\n\t\t}\r\n\t\tif (status === 'done') {\r\n\t\t\tmessage.success(`${info.file.name} file uploaded successfully.`);\r\n\t\t} else if (status === 'error') {\r\n\t\t\tmessage.error(`${info.file.name} file upload failed.`);\r\n\t\t}\r\n\t}\r\n};\r\n\r\ninterface Props {}\r\n\r\nconst AttributeList = ({  }: Props) => {\r\n\tconst tagState = useFetch([], [], 'brandList', {\r\n\t\turlOptions: {\r\n\t\t  params: {\r\n\t\t\tisSubCategory: true,\r\n\t\t  },\r\n\t\t},\r\n\t  });\r\n\r\n\t  const [updateCategoryState, handleUpdateCategoryFetch] = useHandleFetch({}, 'updateCategory');\r\n\t  const [addNewCategoryVisible,setAddNewCategoryVisible] = useState(false);   \r\n\r\n\r\n\r\n\t  const handleSubmit = async (values : any, actions : any) => {\r\n\t\tconst updateCategoryRes = await handleUpdateCategoryFetch({\r\n\t\t  urlOptions: {\r\n\t\t\t  placeHolders: {\r\n\t\t\t\tid: values.id,\r\n\t\t\t  }\r\n\t\t\t},\r\n\t\t  body: {\r\n\t\t\t  name: values.name,\r\n\t\t\t  description: values.description,\r\n\t\t  },\r\n\t\t});\r\n\t  \r\n\t\tactions.setSubmitting(false);\r\n\t  };\r\n\t  \r\n \r\n  \r\n  \r\n  \r\n\t\tconst getisSubmitButtonDisabled = (values,isValid) => {\r\n\t\t  if(!values.name || !values.description || !isValid){\r\n\t\t\t  return true; \r\n\t\t  }\r\n\t\t  return false; \r\n\t\t}\r\n\r\n\r\n\r\n\r\n  const handleOkAddNewCategory = (e: any) => {\r\n    setAddNewCategoryVisible(false);\r\n  \r\n  };\r\n\r\n  const handleCancelAddNewCategory = (e: any) => {\r\n    setAddNewCategoryVisible(false);\r\n  };\r\n\r\n\treturn (\r\n\t\t<div className='site-layout-background' style={{ padding: '30px 20px 30px 20px', minHeight: 360 }}>\r\n\t\t\t<div className='addproductSectionTitleContainer'>\r\n\t\t\t\t<h2 className='addprouctSectionTitle'>Add Attribute</h2>\r\n\t\t\t</div>\r\n\t\t\t<div className='addproductSectionContainer addproductSectionContainer-tags'>\r\n\t\t\t\t<div className='addproductSection addproductSection-left'>\r\n\t\t\t\t<Formik\r\n\t\tonSubmit={(values, actions) => handleSubmit(values, actions)}\r\n\t\tvalidationSchema={validationSchema}\r\n\t\tvalidateOnBlur={false}\r\n\t\tenableReinitialize={true}\r\n\t\tinitialValues={\r\n\t\t  {...initialValues}\r\n\t\t}\r\n\t  >\r\n\t\t{({\r\n\t\t  handleChange,\r\n\t\t  values,\r\n\t\t  handleSubmit,\r\n\t\t  errors,\r\n\t\t  isValid,\r\n\t\t  isSubmitting,\r\n\t\t  touched,\r\n\t\t  handleBlur,\r\n\t\t  setFieldTouched,\r\n\t\t  handleReset,\r\n\t\t}) => (\r\n\t\t\t<>\r\n  <Input \r\n\t\t\t   label='Title'\r\n\t\t\t   value={values.name}\r\n\t\t\t   name='name'\r\n\t\t\t   isError={(touched.name && errors.name) ||\r\n\t\t\t\t  (!isSubmitting && updateCategoryState.error['error']['name'])}\r\n\t\t\t  \r\n\t\t\t\t  errorString={(touched.name && errors.name) ||\r\n\t\t\t\t\t  (!isSubmitting && updateCategoryState.error['error']['name'])}\r\n\t\t\t   onChange={(e : any) => {\r\n\t\t\t\t  handleChange(e);\r\n\t\t\t\t  setFieldTouched('name');\r\n\t\t\t\t}}\r\n\t\t\t   />\r\n\r\n\t\t\t   <div style={{\r\n\t\t\t\t   marginTop: '0px'\r\n\t\t\t   }}></div>\r\n\t\t\t  \r\n\r\n\t\t\t  <h3 className='inputFieldLabel'> Values</h3>\r\n\t\t\t\t\r\n\t\t\t\t<AddAttributeValues />\r\n\t\t\t\t\t  <Button \r\n\t\t\t\t\t  style={{\r\n\t\t\t\t\t\t  display: 'block',\r\n\t\t\t\t\t\t  marginTop: '20px'\r\n\t\t\t\t\t  }}\r\n\t\t\t\t\t\t\ttype='primary'\r\n\t\t\t\t\t\t\tonClick={(e: any) => handleSubmit(e)}\r\n\t\t\t\t\t\t\tdisabled={getisSubmitButtonDisabled(values,isValid)}\r\n\t\t\t\t\t\t\tloading={isSubmitting}\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t >\r\n\t\t\t\t\t\tCreate\r\n\t\t\t\t\t</Button>\r\n\t\t\t</>\r\n\t\t  )}\r\n\t  </Formik>\r\n\r\n\r\n\t\t\t\t</div>\r\n                <div className='addproductSection addproductSection-right'> \r\n\r\n\t\t\t\t<div className='categoryListContainer'>\r\n            <div className='categoryListContainer__header'>\r\n           \r\n\r\n          <div className='categoryListContainer__header-searchBar-tag'>\r\n          {/* <h2 className='categoryListContainer__header-title'>\r\n            Brand\r\n            </h2> */}\r\n\r\n\r\n          <Search\r\n            enterButton={false}\r\n            className='searchbarClassName'\r\n          placeholder=\"search categories..\"\r\n          onSearch={value => console.log(value)}\r\n          // style={{ width: 300 }}\r\n        />\r\n          </div>\r\n            {/* <Button\r\n          // type=\"primary\"\r\n          className='btnPrimaryClassNameoutline'\r\n          icon={<PlusOutlined />}\r\n          onClick={() => setAddNewCategoryVisible(true)}\r\n        >\r\n        Add New\r\n            \r\n            </Button> */}\r\n            </div>\r\n\r\n            <div className='categoryListContainer__afterHeader'>\r\n            {/* <Search\r\n      placeholder=\"search categories..\"\r\n      size=\"large\"\r\n      onSearch={value => console.log(value)}\r\n      style={{ width: 300 }}\r\n    /> */}\r\n            </div>\r\n\r\n     \r\n\t\t\t\r\n\t\t\t<div className='categoryListContainer__categoryList'>\r\n\t\t\t\t{tagState.done && tagState.data.length > 0 && <MyTable data={tagState.data} />}\r\n\t\t\t\t{tagState.isLoading && <DataTableSkeleton />}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\r\n                </div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default AttributeList;\r\n","import React, { useState, useEffect, useRef } from 'react';\r\nimport { Modal, Select, notification, Empty, Spin, Button } from 'antd';\r\nimport ReactToPdf from 'react-to-pdf';\r\n\r\nimport * as Yup from 'yup';\r\nimport {\r\n  CheckCircleOutlined,\r\n  InfoCircleOutlined,\r\n  PrinterOutlined,\r\n  FilePdfOutlined,\r\n} from '@ant-design/icons';\r\nimport ReactToPrint from 'react-to-print';\r\n\r\n// import components\r\nimport config from '../../config.json';\r\n\r\n// import components\r\nimport { useHandleFetch } from '../../hooks';\r\n\r\nimport moment from 'moment';\r\n\r\nconst { Option } = Select;\r\n\r\nclass ComponentToPrint extends React.Component {\r\n  render() {\r\n    const { orderDetailState, invoiceSettingsState, anotherRef } = this.props;\r\n\r\n    return (\r\n      <>\r\n        <div ref={anotherRef} className='invoiceContainer'>\r\n          <table\r\n            width='100%'\r\n            border={0}\r\n            cellPadding={0}\r\n            cellSpacing={0}\r\n            align='center'\r\n            className='fullTable'\r\n            bgcolor='#fff'\r\n          >\r\n            <tbody>\r\n              <tr>\r\n                <td height={20} />\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <table\r\n                    width={600}\r\n                    border={0}\r\n                    cellPadding={0}\r\n                    cellSpacing={0}\r\n                    align='center'\r\n                    className='fullTable'\r\n                    bgcolor='#ffffff'\r\n                    style={{ borderRadius: '10px 10px 0 0' }}\r\n                  >\r\n                    <tbody>\r\n                      <tr>\r\n                        <td>\r\n                          <table\r\n                            width={570}\r\n                            border={0}\r\n                            cellPadding={0}\r\n                            cellSpacing={0}\r\n                            align='center'\r\n                            className='fullPadding'\r\n                          >\r\n                            <tbody>\r\n                              <tr>\r\n                                <td>\r\n                                  <table\r\n                                    width={'100%'}\r\n                                    border={0}\r\n                                    cellPadding={0}\r\n                                    cellSpacing={0}\r\n                                    align='left'\r\n                                    className='col'\r\n                                    style={{\r\n                                      borderBottom: '1px solid #eee',\r\n                                      paddingBottom: '40px',\r\n                                      marginBottom: '40px',\r\n                                    }}\r\n                                  >\r\n                                    <tbody\r\n                                      style={{\r\n                                        marginBottom: '50px',\r\n                                      }}\r\n                                    >\r\n                                      <tr>\r\n                                        <td\r\n                                          style={{\r\n                                            fontSize: 12,\r\n                                            color: '#5b5b5b',\r\n\r\n                                            lineHeight: 1.6,\r\n                                            verticalAlign: 'top',\r\n                                            textAlign: 'left',\r\n                                          }}\r\n                                        >\r\n                                          <span\r\n                                            style={{\r\n                                              display: 'inline-block',\r\n                                              fontSize: '14px',\r\n                                              fontWeight: '600',\r\n                                              color: '#000',\r\n                                            }}\r\n                                          >\r\n                                            Bill From:\r\n                                          </span>\r\n                                          <span\r\n                                            style={{\r\n                                              display: 'block',\r\n                                              marginTop: '10px',\r\n                                              fontSize: '12px',\r\n                                              fontWeight: '500',\r\n                                              color: '#000',\r\n                                            }}\r\n                                          >\r\n                                            {orderDetailState.data['name']}\r\n                                          </span>\r\n                                          <span\r\n                                            style={{\r\n                                              display: 'block',\r\n                                              marginTop: '10px',\r\n                                              fontSize: '12px',\r\n                                              fontWeight: '500',\r\n                                              color: '#000',\r\n                                            }}\r\n                                          >\r\n                                            {orderDetailState.data['address']}\r\n                                          </span>\r\n                                          <span\r\n                                            style={{\r\n                                              display: 'block',\r\n                                              marginTop: '10px',\r\n                                              fontSize: '12px',\r\n                                              fontWeight: '500',\r\n                                              color: '#000',\r\n                                            }}\r\n                                          >\r\n                                            {orderDetailState.data['phone']}\r\n                                          </span>\r\n                                          <span\r\n                                            style={{\r\n                                              display: 'block',\r\n                                              marginTop: '10px',\r\n                                              fontSize: '12px',\r\n                                              fontWeight: '500',\r\n                                              color: '#000',\r\n                                              marginBottom: '50px',\r\n                                            }}\r\n                                          >\r\n                                            {orderDetailState.data['email']}\r\n                                          </span>\r\n                                        </td>\r\n\r\n                                        <td\r\n                                          style={{\r\n                                            verticalAlign: 'top',\r\n                                          }}\r\n                                          align='right'\r\n                                        >\r\n                                          {' '}\r\n                                          <img\r\n                                            src={`${config.baseURL}/images/logo.png`}\r\n                                            style={{\r\n                                              width: '175px'\r\n                                            }}\r\n                                            alt='logo'\r\n                                            border={0}\r\n                                          />\r\n                                        </td>\r\n                                      </tr>\r\n                                    </tbody>\r\n                                  </table>\r\n                                  <table\r\n                                    width={'100%'}\r\n                                    border={0}\r\n                                    cellPadding={0}\r\n                                    cellSpacing={0}\r\n                                    align='left'\r\n                                    className='col'\r\n                                  >\r\n                                    <tbody>\r\n                                      <tr className='visibleMobile'>\r\n                                        <td height={20} />\r\n                                      </tr>\r\n                                      <tr>\r\n                                        <td height={5} />\r\n                                      </tr>\r\n                                      <tr></tr>\r\n                                      <tr></tr>\r\n                                      <tr>\r\n                                        <td\r\n                                          style={{\r\n                                            fontSize: 12,\r\n                                            color: '#5b5b5b',\r\n\r\n                                            lineHeight: 1.6,\r\n                                            verticalAlign: 'top',\r\n                                            textAlign: 'left',\r\n                                          }}\r\n                                        >\r\n                                          <span\r\n                                            style={{\r\n                                              display: 'inline-block',\r\n                                              fontSize: '14px',\r\n                                              fontWeight: '600',\r\n                                              color: '#000',\r\n                                            }}\r\n                                          >\r\n                                            Bill To:\r\n                                          </span>\r\n                                          <span\r\n                                            style={{\r\n                                              display: 'block',\r\n                                              marginTop: '10px',\r\n                                              fontSize: '12px',\r\n                                              fontWeight: '500',\r\n                                              color: '#000',\r\n                                            }}\r\n                                          >\r\n                                            {invoiceSettingsState.done &&\r\n                                              invoiceSettingsState.data &&\r\n                                              Object.keys(\r\n                                                invoiceSettingsState.data\r\n                                              ).length > 0 &&\r\n                                              invoiceSettingsState.data[\r\n                                                'invoiceTitle'\r\n                                              ]}\r\n                                          </span>\r\n                                          <span\r\n                                            style={{\r\n                                              display: 'block',\r\n                                              marginTop: '10px',\r\n                                              fontSize: '12px',\r\n                                              fontWeight: '500',\r\n                                              color: '#000',\r\n                                            }}\r\n                                          >\r\n                                            {invoiceSettingsState.done &&\r\n                                              invoiceSettingsState.data &&\r\n                                              Object.keys(\r\n                                                invoiceSettingsState.data\r\n                                              ).length > 0 &&\r\n                                              invoiceSettingsState.data[\r\n                                                'address'\r\n                                              ]}\r\n                                          </span>\r\n                                          <span\r\n                                            style={{\r\n                                              display: 'block',\r\n                                              marginTop: '10px',\r\n                                              fontSize: '12px',\r\n                                              fontWeight: '500',\r\n                                              color: '#000',\r\n                                            }}\r\n                                          >\r\n                                            {invoiceSettingsState.done &&\r\n                                              invoiceSettingsState.data &&\r\n                                              Object.keys(\r\n                                                invoiceSettingsState.data\r\n                                              ).length > 0 &&\r\n                                              invoiceSettingsState.data[\r\n                                                'phone'\r\n                                              ]}\r\n                                          </span>\r\n                                          <span\r\n                                            style={{\r\n                                              display: 'block',\r\n                                              marginTop: '10px',\r\n                                              fontSize: '12px',\r\n                                              fontWeight: '500',\r\n                                              color: '#000',\r\n                                            }}\r\n                                          >\r\n                                            {invoiceSettingsState.done &&\r\n                                              invoiceSettingsState.data &&\r\n                                              Object.keys(\r\n                                                invoiceSettingsState.data\r\n                                              ).length > 0 &&\r\n                                              invoiceSettingsState.data[\r\n                                                'email'\r\n                                              ]}\r\n                                          </span>\r\n                                        </td>\r\n\r\n                                        <td\r\n                                          style={{\r\n                                            fontSize: 13,\r\n                                            color: '#5b5b5b',\r\n\r\n                                            lineHeight: 1.6,\r\n                                            verticalAlign: 'top',\r\n                                            textAlign: 'right',\r\n                                          }}\r\n                                        >\r\n                                          <small>ORDER</small> #\r\n                                          {orderDetailState.data['shortCode']}\r\n                                          <br />\r\n                                          <span>\r\n                                            {orderDetailState.data[\r\n                                              'date_created'\r\n                                            ] &&\r\n                                              moment(\r\n                                                orderDetailState.data[\r\n                                                  'date_created'\r\n                                                ]\r\n                                              ).format('MMMM Do YYYY, h:mm a')}\r\n                                          </span>\r\n                                        </td>\r\n                                      </tr>\r\n                                    </tbody>\r\n                                  </table>\r\n                                </td>\r\n                              </tr>\r\n                            </tbody>\r\n                          </table>\r\n                        </td>\r\n                      </tr>\r\n                    </tbody>\r\n                  </table>\r\n                </td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n          {orderDetailState.data &&\r\n            orderDetailState.data['products'] &&\r\n            orderDetailState.data['products'].length > 0 && (\r\n              <table\r\n                width='100%'\r\n                border={0}\r\n                cellPadding={0}\r\n                cellSpacing={0}\r\n                align='center'\r\n                className='fullTable'\r\n                bgcolor='#fff'\r\n              >\r\n                <tbody>\r\n                  <tr>\r\n                    <td>\r\n                      <table\r\n                        width={600}\r\n                        border={0}\r\n                        cellPadding={0}\r\n                        cellSpacing={0}\r\n                        align='center'\r\n                        className='fullTable'\r\n                        bgcolor='#ffffff'\r\n                      >\r\n                        <tbody>\r\n                          <tr></tr>\r\n                          <tr className='hiddenMobile'>\r\n                            <td height={60} />\r\n                          </tr>\r\n                          <tr className='visibleMobile'>\r\n                            <td height={40} />\r\n                          </tr>\r\n                          <tr>\r\n                            <td>\r\n                              <table\r\n                                width={570}\r\n                                border={0}\r\n                                cellPadding={0}\r\n                                cellSpacing={0}\r\n                                align='center'\r\n                                className='fullPadding'\r\n                              >\r\n                                <tbody>\r\n                                  <tr\r\n                                    style={{\r\n                                      backgroundColor: '#eee',\r\n                                    }}\r\n                                  >\r\n                                    <th\r\n                                      style={{\r\n                                        fontSize: 12,\r\n                                        color: '#5b5b5b',\r\n                                        fontWeight: 'normal',\r\n                                        lineHeight: 1.6,\r\n                                        verticalAlign: 'top',\r\n                                        padding: '5px 10px 7px 5px',\r\n                                      }}\r\n                                      width='30%'\r\n                                      align='left'\r\n                                    >\r\n                                      Name\r\n                                    </th>\r\n                                    <th\r\n                                      style={{\r\n                                        fontSize: 12,\r\n                                        color: '#5b5b5b',\r\n                                        fontWeight: 'normal',\r\n                                        lineHeight: 1.6,\r\n                                        verticalAlign: 'center',\r\n                                      }}\r\n                                      align='left'\r\n                                    >\r\n                                      Quantity\r\n                                    </th>\r\n                                    <th\r\n                                      style={{\r\n                                        fontSize: 12,\r\n                                        color: '#1e2b33',\r\n                                        fontWeight: 'normal',\r\n                                        lineHeight: 1.6,\r\n                                        verticalAlign: 'center',\r\n                                      }}\r\n                                      align='left'\r\n                                    >\r\n                                      Unit Price\r\n                                    </th>\r\n                                    <th\r\n                                      style={{\r\n                                        fontSize: 12,\r\n                                        color: '#1e2b33',\r\n                                        fontWeight: 'normal',\r\n                                        lineHeight: 1.6,\r\n                                        verticalAlign: 'center',\r\n                                      }}\r\n                                      align='left'\r\n                                    >\r\n                                      {/* Unit Price */}\r\n                                    </th>\r\n                                  </tr>\r\n\r\n                                  {orderDetailState.data['products'].map(\r\n                                    (item) => {\r\n                                      return (\r\n                                        <>\r\n                                          <tr>\r\n                                            <td\r\n                                              height={1}\r\n                                              style={{\r\n                                                background: '#bebebe',\r\n                                              }}\r\n                                              colSpan={4}\r\n                                            />\r\n                                          </tr>\r\n                                          <tr>\r\n                                            <td height={10} colSpan={4} />\r\n                                          </tr>\r\n                                          <tr>\r\n                                            <td\r\n                                              width='30%'\r\n                                              style={{\r\n                                                fontSize: 12,\r\n                                                color: '#ff0000',\r\n                                                lineHeight: 1.6,\r\n                                                verticalAlign: 'top',\r\n                                                padding: '10px 0',\r\n                                              }}\r\n                                              className='article'\r\n                                            >\r\n                                              {item.name}\r\n                                            </td>\r\n\r\n                                            <td\r\n                                              style={{\r\n                                                fontSize: 12,\r\n                                                color: '#646a6e',\r\n                                                lineHeight: 1.6,\r\n                                                verticalAlign: 'top',\r\n                                                padding: '10px 0',\r\n                                              }}\r\n                                              align='left'\r\n                                            >\r\n                                              {item.quantity}\r\n                                            </td>\r\n                                            <td\r\n                                              style={{\r\n                                                fontSize: 12,\r\n                                                color: '#1e2b33',\r\n                                                lineHeight: 1.6,\r\n                                                verticalAlign: 'top',\r\n                                                padding: '10px 0',\r\n                                              }}\r\n                                              align='left'\r\n                                            >\r\n                                              {item.unitPrice}\r\n                                            </td>\r\n\r\n                                            <td\r\n                                              style={{\r\n                                                fontSize: 12,\r\n\r\n                                                color: '#1e2b33',\r\n                                                lineHeight: 1.6,\r\n                                                verticalAlign: 'top',\r\n                                                padding: '10px 0',\r\n                                              }}\r\n                                              align='left'\r\n                                            >\r\n                                              {item.quantity * item.unitPrice}\r\n                                            </td>\r\n                                          </tr>\r\n                                        </>\r\n                                      );\r\n                                    }\r\n                                  )}\r\n                                  <tr>\r\n                                    <td\r\n                                      height={1}\r\n                                      colSpan={4}\r\n                                      style={{\r\n                                        borderBottom: '1px solid #eee',\r\n                                      }}\r\n                                    />\r\n                                  </tr>\r\n                                </tbody>\r\n                              </table>\r\n                            </td>\r\n                          </tr>\r\n                          <tr>\r\n                            <td height={20} />\r\n                          </tr>\r\n                        </tbody>\r\n                      </table>\r\n                    </td>\r\n                  </tr>\r\n                </tbody>\r\n              </table>\r\n            )}\r\n          <table\r\n            width='100%'\r\n            border={0}\r\n            cellPadding={0}\r\n            cellSpacing={0}\r\n            align='center'\r\n            className='fullTable'\r\n            bgcolor='#fff'\r\n          >\r\n            <tbody>\r\n              <tr>\r\n                <td>\r\n                  <table\r\n                    width={600}\r\n                    border={0}\r\n                    cellPadding={0}\r\n                    cellSpacing={0}\r\n                    align='center'\r\n                    className='fullTable'\r\n                    bgcolor='#ffffff'\r\n                  >\r\n                    <tbody\r\n                      style={{\r\n                        marginBottom: '20px',\r\n                      }}\r\n                    >\r\n                      <tr>\r\n                        <td>\r\n                          {/* Table Total */}\r\n                          <table\r\n                            style={{\r\n                              marginBottom: '50px',\r\n                              marginTop: '30px',\r\n                            }}\r\n                            width={570}\r\n                            border={0}\r\n                            cellPadding={0}\r\n                            cellSpacing={0}\r\n                            align='center'\r\n                            className='fullPadding'\r\n                          >\r\n                            <tbody>\r\n                              <tr>\r\n                                <td\r\n                                  style={{\r\n                                    fontSize: 12,\r\n                                    color: '#646a6e',\r\n                                    lineHeight: 1.6,\r\n                                    verticalAlign: 'top',\r\n                                    textAlign: 'right',\r\n                                  }}\r\n                                >\r\n                                  Total Price\r\n                                </td>\r\n                                <td\r\n                                  style={{\r\n                                    fontSize: 13,\r\n                                    color: '#646a6e',\r\n                                    lineHeight: 1.6,\r\n                                    verticalAlign: 'top',\r\n                                    textAlign: 'right',\r\n                                    whiteSpace: 'nowrap',\r\n                                    fontWeight: '600',\r\n                                    marginBottom: '5px',\r\n                                  }}\r\n                                  width={80}\r\n                                >\r\n                                  {orderDetailState.data['total']}\r\n                                </td>\r\n                              </tr>\r\n                              <tr>\r\n                                <td\r\n                                  style={{\r\n                                    fontSize: 12,\r\n                                    color: '#646a6e',\r\n                                    lineHeight: 1.6,\r\n                                    verticalAlign: 'top',\r\n                                    textAlign: 'right',\r\n                                  }}\r\n                                >\r\n                                  Shipping &amp; Delivery\r\n                                </td>\r\n                                <td\r\n                                  style={{\r\n                                    fontSize: 12,\r\n                                    color: '#646a6e',\r\n                                    lineHeight: 1.6,\r\n                                    verticalAlign: 'top',\r\n                                    textAlign: 'right',\r\n                                  }}\r\n                                >\r\n                                  {orderDetailState.data &&\r\n                                  orderDetailState.data['total'] > 5000\r\n                                    ? 'Free'\r\n                                    : orderDetailState.data &&\r\n                                      orderDetailState.data[\r\n                                        'deliveryCharge'\r\n                                      ] === 0\r\n                                    ? 'Free'\r\n                                    : `+${\r\n                                        orderDetailState.data &&\r\n                                        orderDetailState.data['deliveryCharge']\r\n                                      }`}\r\n                                </td>\r\n                              </tr>\r\n                              <tr>\r\n                                <td\r\n                                  style={{\r\n                                    fontSize: 12,\r\n                                    color: '#000',\r\n                                    lineHeight: 1.6,\r\n                                    verticalAlign: 'top',\r\n                                    textAlign: 'right',\r\n                                  }}\r\n                                >\r\n                                  <strong>Grand Total (Incl.Delivery)</strong>\r\n                                </td>\r\n                                <td\r\n                                  style={{\r\n                                    fontSize: 12,\r\n                                    color: '#000',\r\n                                    lineHeight: 1.6,\r\n                                    verticalAlign: 'top',\r\n                                    textAlign: 'right',\r\n                                  }}\r\n                                >\r\n                                  <strong>\r\n                                    {orderDetailState.data['total'] +\r\n                                      orderDetailState.data['deliveryCharge'] ||\r\n                                      0}\r\n                                  </strong>\r\n                                </td>\r\n                              </tr>\r\n                            </tbody>\r\n                          </table>\r\n                        </td>\r\n                      </tr>\r\n                    </tbody>\r\n                  </table>\r\n                </td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst OrderInvoice = ({ id, setShowInvoice, showInvoice }) => {\r\n  const [orderDetailState, handleOrderDetailFetch] = useHandleFetch(\r\n    {},\r\n    'orderDetail'\r\n  );\r\n  const componentRef = useRef();\r\n\r\n  const ref = React.createRef();\r\n  const options = {\r\n    orientation: 'a4',\r\n    unit: 'in',\r\n    format: [4, 2],\r\n  };\r\n\r\n  const [invoiceSettingsState, handlSiteInvoiceSettingsFetch] = useHandleFetch(\r\n    {},\r\n    'invoiceSettingsDetail'\r\n  );\r\n\r\n  useEffect(() => {\r\n    const getSiteSettings = async () => {\r\n      const invoiceSettingsRes = await handlSiteInvoiceSettingsFetch({});\r\n      // console.log('siteSettingsRes', siteSettingsRes);\r\n    };\r\n    getSiteSettings();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const getOrderDetail = async () => {\r\n      await handleOrderDetailFetch({\r\n        urlOptions: {\r\n          placeHolders: {\r\n            id,\r\n          },\r\n        },\r\n      });\r\n    };\r\n\r\n    getOrderDetail();\r\n  }, [id]);\r\n\r\n  console.log('orderDetailState', orderDetailState);\r\n\r\n  const handleOk = () => {\r\n    window.print();\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      title='Invoice'\r\n      visible={showInvoice}\r\n      bodyStyle={{\r\n        margin: '0',\r\n        padding: '10px',\r\n      }}\r\n      style={{\r\n        top: '40px',\r\n      }}\r\n      onCancel={() => setShowInvoice(false)}\r\n      width={'48vw'}\r\n      okText='Print'\r\n      onOk={() => handleOk()}\r\n      footer={false}\r\n    >\r\n      {orderDetailState.isLoading && <Spin />}\r\n      {orderDetailState.data && Object.keys(orderDetailState.data).length > 0 && (\r\n        <>\r\n          <div\r\n            style={{\r\n              display: 'flex',\r\n              width: '100%',\r\n              justifyContent: 'flex-end',\r\n              padding: '20px 20px 20px 20px',\r\n            }}\r\n          >\r\n            <ReactToPdf\r\n              targetRef={ref}\r\n              y={15}\r\n              x={25}\r\n              filename={`order-${orderDetailState.data['shortCode']}-invoice`}\r\n              options={{\r\n                orientation: 'a4',\r\n              }}\r\n            >\r\n              {({ toPdf }) => (\r\n                <Button\r\n                  style={{\r\n                    marginRight: '15px',\r\n                  }}\r\n                  onClick={toPdf}\r\n                  // type=\"primary\"\r\n                  className='btnPrimaryClassNameoutline'\r\n                  icon={<FilePdfOutlined />}\r\n                >\r\n                  Download as pdf\r\n                </Button>\r\n              )}\r\n            </ReactToPdf>\r\n            <ReactToPrint\r\n              documentTitle='Order Invoice'\r\n              trigger={() => (\r\n                <Button\r\n                  // type=\"primary\"\r\n                  className='btnPrimaryClassNameoutline'\r\n                  icon={<PrinterOutlined />}\r\n                >\r\n                  Print\r\n                </Button>\r\n              )}\r\n              content={() => componentRef.current}\r\n            />\r\n          </div>\r\n          <ComponentToPrint\r\n            ref={componentRef}\r\n            anotherRef={ref}\r\n            invoiceSettingsState={invoiceSettingsState}\r\n            orderDetailState={orderDetailState}\r\n          />\r\n        </>\r\n      )}\r\n    </Modal>\r\n  );\r\n};\r\nexport default OrderInvoice;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useHandleFetch } from '../../hooks';\r\n\r\n\r\n\r\n\r\n// import lib \r\nimport { Skeleton } from 'antd'\r\n\r\n\r\n\r\ninterface Props {\r\n    productId?: any;\r\n    quantity?: any;\r\n    item?: any\r\n    variation?: any;\r\n}\r\n\r\nconst CartOverLayCartItem = ({\r\n    productId,\r\n    quantity,\r\n    item,\r\n    variation\r\n}: Props) => {\r\n\r\n\r\n    const [productDetailState, handleProductFetch] = useHandleFetch(\r\n        {},\r\n        'productDetailById'\r\n    );\r\n    const [product, setProduct] = useState({});\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [modifiedPrice, setModifiedPrice] = useState('');\r\n    const [selectedVariationId, setSelectedVariationId] = useState(variation);\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        setIsLoading(true);\r\n        const getAndSetProduct = async () => {\r\n            const product = await handleProductFetch({\r\n                urlOptions: {\r\n                    placeHolders: {\r\n                        id: productId,\r\n                    },\r\n                },\r\n            });\r\n\r\n            // @ts-ignore\r\n            setProduct(product);\r\n            setIsLoading(false);\r\n        };\r\n        getAndSetProduct()\r\n    }, []);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    console.log('modifiedPrice', modifiedPrice);\r\n    return (\r\n        <>\r\n\r\n            <Skeleton loading={productDetailState.isLoading}>\r\n                {productDetailState.data && Object.keys(productDetailState.data).length > 0 && (\r\n                    <div className='cart-item' key={''}>\r\n\r\n\r\n                        <img\r\n\r\n                            src={productDetailState.data['cover'] && productDetailState.data['cover']['cover']}\r\n                            alt='Img'\r\n                            style={{\r\n                                cursor: 'pointer',\r\n                            }}\r\n                        />\r\n                        <div className='cart-item-info'>\r\n                            <h4\r\n\r\n                            >\r\n                                {productDetailState.data['name']}\r\n                            </h4>\r\n                            <h5\r\n                            >\r\n                                Quantity : {quantity}\r\n                            </h5>\r\n                            <h5\r\n                            >\r\n                                {item['unitPrice']}\r\n                            </h5>\r\n\r\n\r\n                            {/* {pricingOptions && pricingOptions.length > 0 && pricingOptions.map(tag => (\r\n                            <>\r\n                                <span\r\n                                    onClick={() => handleAttributeChange(tag.value)}\r\n                                    className={selectedVariationId === tag.value ? 'product-attributeTag product-attributeTag-active' : 'product-attributeTag'}>\r\n                                    {tag.label}\r\n                                </span>\r\n                            </>\r\n                        ))} */}\r\n\r\n                            {/* <span\r\n             style={{\r\n               display: 'inline-block',\r\n               background: '#fafafa',\r\n               padding: '3px 3px',\r\n               borderRadius: 1,\r\n               fontSize: '12px',\r\n               marginRight: '5px',\r\n               color: '#777',\r\n               marginTop: '5px'\r\n             }}\r\n           >\r\n             15KG\r\n             </span> */}\r\n\r\n                        </div>\r\n                        {/* <span\r\n                        onClick={handleAttributeDelete}\r\n                        className='remove-item' >\r\n                        <i className='fa fa-times'></i>\r\n                    </span> */}\r\n\r\n                    </div>\r\n                )}\r\n            </Skeleton>\r\n\r\n        </>\r\n    );\r\n};\r\n\r\n// @ts-ignore\r\nexport default CartOverLayCartItem;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Modal, Select, notification, Form, Empty, Button } from 'antd';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { CheckCircleOutlined, InfoCircleOutlined } from '@ant-design/icons';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport { useHandleFetch } from '../../hooks';\r\nimport OrderInvoice from \"./OrderInvoice.jsx\";\r\nimport ProductItemForOrderDetail from \"./productItemForOrderDetail\";\r\n\r\n\r\nconst { Option } = Select;\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    // name: Yup.string()\r\n    //     .label('Name')\r\n    //     .required()\r\n    //     .min(2, 'Name must have at least 2 characters '),\r\n    // pickUpLocation: Yup.string()\r\n    //     .label('Pick up Location')\r\n    //     .required()\r\n    //     .min(2, 'Pick up Location must have at least 2 characters '),\r\n    // time: Yup.string()\r\n    //     .label('Time')\r\n    //     .required()\r\n    //     .min(2, 'Time must have at least 2 characters '),\r\n\r\n});\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Tag Created',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n    notification.error({\r\n        message: message || 'Something Went Wrong',\r\n        description: '',\r\n        icon: <InfoCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n    });\r\n};\r\n\r\n\r\ninterface Props {\r\n    customer: any;\r\n    setvisible: any;\r\n    visible: any;\r\n    orderList?: any;\r\n    setOrderList?: any;\r\n}\r\n\r\nconst QuickEdit = ({ customer, setvisible, visible, setOrderList, orderList }: Props) => {\r\n    const [updateOrderState, handleUpdateOrderFetch] = useHandleFetch({}, 'updateOrder');\r\n\r\n    console.log('customerVie', customer);\r\n\r\n    const [selectedCountryValue, setselectedCountryValue] = useState('');\r\n    const [selectedCityValue, setselectedCityValue] = useState('');\r\n\r\n    const [countryOptions, setcountryOptions] = useState([]);\r\n    const [cityOptions, setcityOptions] = useState([]);\r\n\r\n    const [countryListState, handleCountryListFetch] = useHandleFetch(\r\n        [],\r\n        'countryList'\r\n    );\r\n\r\n    const [cityListState, handleCityListFetch] = useHandleFetch([], 'cityList');\r\n\r\n    const [countryList, setCountryList] = useState([]);\r\n    const [cityList, setCityList] = useState([]);\r\n    const [showInvoice, setShowInvoice] = useState(false);\r\n\r\n\r\n\r\n    const handleSubmit = async (values: any, actions: any) => {\r\n        // console.log('selectedCityValue', selectedCityValue); \r\n        console.log('cooles', customer)\r\n\r\n        const addRegionRes = await handleUpdateOrderFetch({\r\n            urlOptions: {\r\n                placeHolders: {\r\n                    id: customer.id,\r\n                }\r\n            },\r\n            body: {\r\n                billingAddress: {\r\n                    phone: values.phone,\r\n                    email: values.email,\r\n                    address1: values.address1,\r\n                    address2: values.address2,\r\n                    firstName: values.firstName,\r\n                    lastName: values.lastName,\r\n                    city: selectedCityValue || customer['billingAddress']['city'],\r\n                    country: selectedCountryValue || customer['billingAddress']['country'],\r\n                },\r\n                products: customer.products,\r\n                customerId: customer.customerId\r\n                // charge\r\n            },\r\n        });\r\n\r\n        // @ts-ignore\r\n        if (addRegionRes && addRegionRes.status === 'ok') {\r\n            openSuccessNotification();\r\n\r\n            const positionInTag = () => {\r\n                return orderList.map(item => item.id).indexOf(customer.id);\r\n            }\r\n\r\n            const index = positionInTag();\r\n\r\n            // @ts-ignore\r\n            const updatedItem = Object.assign({}, orderList[index], { ...addRegionRes });\r\n            const updateRegionList = [...orderList.slice(0, index), updatedItem, ...orderList.slice(index + 1)];\r\n            setOrderList(updateRegionList);\r\n\r\n        }\r\n        else {\r\n            openErrorNotification();\r\n        }\r\n\r\n        actions.setSubmitting(false);\r\n        setvisible(false)\r\n\r\n    };\r\n\r\n\r\n    const onChangeCity = (value) => {\r\n        setselectedCityValue(value);\r\n    }\r\n\r\n    const onChangeCountry = (value) => {\r\n        setselectedCountryValue(value);\r\n    }\r\n\r\n    useEffect(() => {\r\n        const setCountries = async () => {\r\n            const CountryListRes = await handleCountryListFetch({});\r\n\r\n            // @ts-ignore\r\n            if (CountryListRes && CountryListRes.length > 0) {\r\n                // @ts-ignore\r\n                const countryOptions = CountryListRes.map((country) => {\r\n                    return {\r\n                        value: country.name,\r\n                        name: country.name\r\n                    };\r\n                });\r\n                setcountryOptions(countryOptions);\r\n            }\r\n        };\r\n\r\n        setCountries();\r\n    }, []);\r\n\r\n\r\n    useEffect(() => {\r\n        const setCities = async () => {\r\n            const cityListRes = await handleCityListFetch({\r\n                urlOptions: {\r\n                    placeHolders: {\r\n                        country: selectedCountryValue,\r\n                    },\r\n                },\r\n            });\r\n\r\n            // @ts-ignore\r\n            if (cityListRes && cityListRes.length > 0) {\r\n                // @ts-ignore\r\n                const cityOptions = cityListRes.map((city) => {\r\n                    return {\r\n                        value: city.name,\r\n                        name: city.name\r\n                    };\r\n                });\r\n                setcityOptions(cityOptions);\r\n            }\r\n        };\r\n\r\n        setCities();\r\n    }, [selectedCountryValue]);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    const handleCancel = (e: any) => {\r\n        setvisible(false);\r\n    };\r\n\r\n\r\n\r\n    const getisSubmitButtonDisabled = (values, isValid) => {\r\n        if (!isValid ||\r\n            !values.firstName ||\r\n            !values.LastName) {\r\n\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    return (\r\n        <Formik\r\n            onSubmit={(values, actions) => handleSubmit(values, actions)}\r\n            validationSchema={validationSchema}\r\n            validateOnBlur={false}\r\n            enableReinitialize={true}\r\n            initialValues={\r\n                { ...customer.billingAddress ? customer.billingAddress : {} }\r\n            }\r\n        >\r\n            {({\r\n                handleChange,\r\n                values,\r\n                handleSubmit,\r\n                errors,\r\n                isValid,\r\n                isSubmitting,\r\n                touched,\r\n                handleBlur,\r\n                setFieldTouched,\r\n                handleReset,\r\n            }) => (\r\n                    <>\r\n                        <Modal\r\n                            title=\"Order detail\"\r\n                            visible={visible}\r\n                            onOk={(e: any) => handleSubmit(e)}\r\n                            onCancel={handleCancel}\r\n                            okText='Create'\r\n                            okButtonProps={{\r\n                                loading: isSubmitting,\r\n                                htmlType: \"submit\",\r\n                                // disabled: getisSubmitButtonDisabled(values, isValid)\r\n                            }}\r\n                            bodyStyle={{\r\n                                margin: '0',\r\n                                padding: '10px'\r\n                            }}\r\n                            width={'70vw'}\r\n                        >\r\n\r\n\r\n                            <div className='dubbleRowInputs'>\r\n                                <div className='dubbleRowInputs__item'>\r\n                                    <Input\r\n                                        label='First Name'\r\n                                        value={values.firstName}\r\n                                        name='firstName'\r\n                                        isError={(touched.firstName && errors.firstName) ||\r\n                                            (!isSubmitting && updateOrderState.error['error']['firstName'])}\r\n\r\n                                        errorString={(touched.firstName && errors.firstName) ||\r\n                                            (!isSubmitting && updateOrderState.error['error']['firstName'])}\r\n                                        onChange={(e: any) => {\r\n                                            handleChange(e);\r\n                                            setFieldTouched('firstName');\r\n                                        }}\r\n                                    />\r\n                                </div>\r\n                                <div className='dubbleRowInputs__item'>\r\n                                    <Input\r\n                                        label='Last Name'\r\n                                        value={values.lastName}\r\n                                        name='lastName'\r\n                                        isError={(touched.lastName && errors.lastName) ||\r\n                                            (!isSubmitting && updateOrderState.error['error']['lastName'])}\r\n\r\n                                        errorString={(touched.lastName && errors.lastName) ||\r\n                                            (!isSubmitting && updateOrderState.error['error']['lastName'])}\r\n                                        onChange={(e: any) => {\r\n                                            handleChange(e);\r\n                                            setFieldTouched('lastName');\r\n                                        }}\r\n                                    />\r\n                                </div>\r\n\r\n\r\n\r\n\r\n                            </div>\r\n\r\n\r\n\r\n                            <div className='dubbleRowInputs'>\r\n                                <div className='dubbleRowInputs__item'>\r\n                                    <Input\r\n                                        label='Phone'\r\n                                        value={values.phone}\r\n                                        name='phone'\r\n                                        isError={(touched.phone && errors.phone) ||\r\n                                            (!isSubmitting && updateOrderState.error['error']['phone'])}\r\n\r\n                                        errorString={(touched.phone && errors.phone) ||\r\n                                            (!isSubmitting && updateOrderState.error['error']['phone'])}\r\n                                        onChange={(e: any) => {\r\n                                            handleChange(e);\r\n                                            setFieldTouched('phone');\r\n                                        }}\r\n                                    />\r\n                                </div>\r\n                                <div className='dubbleRowInputs__item'>\r\n                                    <Input\r\n                                        label='Email'\r\n                                        value={values.email}\r\n                                        name='email'\r\n                                        isError={(touched.email && errors.email) ||\r\n                                            (!isSubmitting && updateOrderState.error['error']['email'])}\r\n\r\n                                        errorString={(touched.email && errors.email) ||\r\n                                            (!isSubmitting && updateOrderState.error['error']['email'])}\r\n                                        onChange={(e: any) => {\r\n                                            handleChange(e);\r\n                                            setFieldTouched('email');\r\n                                        }}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n\r\n\r\n                            <div className='dubbleRowInputs'>\r\n                                <div className='dubbleRowInputs__item'>\r\n                                    <h3 className='inputFieldLabel'>\r\n                                        Country\r\n\t\t\t\t\t\t\t\t\t</h3>\r\n\r\n\r\n                                    <Form.Item\r\n                                        validateStatus={(updateOrderState.error['error']['country']) ? \"error\" : \"\"}\r\n                                        help={updateOrderState.error['error']['country']}\r\n                                    // noStyle={true}\r\n                                    >\r\n                                        <Select\r\n                                            defaultValue={values.country}\r\n                                            notFoundContent={<Empty description='No Country Found' image={Empty.PRESENTED_IMAGE_SIMPLE} />}\r\n                                            showSearch\r\n                                            style={{ width: '100%' }}\r\n                                            placeholder='Select a Country'\r\n                                            optionFilterProp='children'\r\n                                            onChange={onChangeCountry}\r\n                                            filterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n                                        >\r\n                                            {countryListState.done &&\r\n                                                countryListState.data.length > 0 &&\r\n                                                countryOptions.map((option) => {\r\n                                                    return <Option value={option.value}>{option.name}</Option>;\r\n                                                })}\r\n                                        </Select>\r\n\r\n                                    </Form.Item>\r\n\r\n\r\n\r\n\r\n                                </div>\r\n                                <div className='dubbleRowInputs__item'>\r\n                                    <h3 className='inputFieldLabel'>\r\n                                        City\r\n                                    </h3>\r\n                                    <Form.Item\r\n                                        // noStyle={true}\r\n                                        validateStatus={(updateOrderState.error['error']['city']) ? \"error\" : \"\"}\r\n                                        help={updateOrderState.error['error']['city']}\r\n\r\n                                    >\r\n                                        <Select\r\n                                            defaultValue={values.city}\r\n                                            className='selectClassName'\r\n                                            notFoundContent={<Empty description='First Select a Country' image={Empty.PRESENTED_IMAGE_SIMPLE} />}\r\n                                            showSearch\r\n                                            style={{ width: '100%' }}\r\n                                            placeholder='Select a city'\r\n                                            optionFilterProp='children'\r\n                                            onChange={onChangeCity}\r\n                                            filterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n                                        >\r\n                                            {cityListState.done &&\r\n                                                cityListState.data.length > 0 &&\r\n                                                cityOptions.map((option) => {\r\n                                                    return <Option value={option.value}>{option.name}</Option>;\r\n                                                })}\r\n                                        </Select>\r\n                                    </Form.Item>\r\n                                </div>\r\n\r\n                            </div>\r\n\r\n                            <div style={{\r\n                                marginTop: '12px'\r\n                            }}></div>\r\n\r\n\r\n\r\n                            <div className='dubbleRowInputs'>\r\n                                <div className='dubbleRowInputs__item'>\r\n                                    <Input\r\n                                        label='Address'\r\n                                        value={values.address1}\r\n                                        name='address1'\r\n                                        isError={(touched.address1 && errors.address1) ||\r\n                                            (!isSubmitting && updateOrderState.error['error']['address1'])}\r\n\r\n                                        errorString={(touched.address1 && errors.address1) ||\r\n                                            (!isSubmitting && updateOrderState.error['error']['address1'])}\r\n                                        onChange={(e: any) => {\r\n                                            handleChange(e);\r\n                                            setFieldTouched('address1');\r\n                                        }}\r\n                                    />\r\n                                </div>\r\n                                <div className='dubbleRowInputs__item'>\r\n                                    <Input\r\n                                        label='Address 2'\r\n                                        value={values.address2}\r\n                                        name='address2'\r\n                                        isError={(touched.address2 && errors.address2) ||\r\n                                            (!isSubmitting && updateOrderState.error['error']['address2'])}\r\n\r\n                                        errorString={(touched.address2 && errors.address2) ||\r\n                                            (!isSubmitting && updateOrderState.error['error']['address2'])}\r\n                                        onChange={(e: any) => {\r\n                                            handleChange(e);\r\n                                            setFieldTouched('address2');\r\n                                        }}\r\n                                    />\r\n                                </div>\r\n\r\n                            </div>\r\n\r\n                            <div style={{\r\n                                marginTop: '12px'\r\n                            }}></div>\r\n\r\n\r\n\r\n                                    {customer.products && customer.products.length > 0 && (\r\n                                        <h3 className='inputFieldLabel'>\r\n                                        Products \r\n                                    </h3>\r\n                                    )}\r\n\r\n\r\n                            {customer.products && customer.products.length > 0 && <> \r\n                            \r\n                                {customer.products.map(item => {\r\n                    return <ProductItemForOrderDetail\r\n                        productId={item._id}\r\n                        quantity={item.quantity}\r\n                        item={item}\r\n                        variation={item.variation}\r\n                    />;\r\n                })}\r\n\r\n                            </>}\r\n\r\n\r\n                            <div style={{\r\n                                marginTop: '20px'\r\n                            }}></div>\r\n                    <Button\r\n                    onClick={() => setShowInvoice(true)}\r\n                    className='btnPrimaryClassNameoutline'\r\n                    >\r\n                        Generate Invoice\r\n                        \r\n                        </Button>\r\n\r\n            <div style={{\r\n                                marginBottom: '20px'\r\n                            }}></div>\r\n\r\n            <OrderInvoice\r\n            id={customer.id}\r\n            setShowInvoice={setShowInvoice}\r\n             showInvoice={showInvoice} \r\n            />\r\n\r\n                            \r\n\r\n\r\n                        </Modal>\r\n\r\n                    </>\r\n                )}\r\n\r\n\r\n\r\n        </Formik>\r\n    );\r\n};\r\n\r\n\r\nexport default QuickEdit;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { withRouter, useHistory } from 'react-router-dom';\r\nimport { CSVLink } from 'react-csv';\r\n\r\nimport {\r\n  Table,\r\n  Badge,\r\n  Menu,\r\n  Dropdown,\r\n  Space,\r\n  Tag,\r\n  Button,\r\n  Input,\r\n  notification,\r\n  Popconfirm,\r\n  Select,\r\n  DatePicker,\r\n} from 'antd';\r\nimport {\r\n  PlusOutlined,\r\n  EditOutlined,\r\n  DeleteOutlined,\r\n  CheckOutlined,\r\n  CheckCircleOutlined,\r\n  DownOutlined,\r\n  DownloadOutlined,\r\n} from '@ant-design/icons';\r\n\r\n/// import hooks\r\nimport { useFetch, useHandleFetch } from '../../hooks';\r\n\r\n// import components\r\nimport { DataTableSkeleton } from '../../components/Placeholders';\r\nimport AddNewOrder from './AddNewOrder';\r\nimport QuickEdit from './QuickEdit';\r\nimport Empty from '../../components/Empty';\r\n\r\n// import state\r\nimport { isAccess } from '../../utils';\r\nimport { connect } from 'react-redux';\r\n\r\n// import lib\r\nimport Moment from 'react-moment';\r\nimport moment from 'moment';\r\n\r\nconst { Column, ColumnGroup } = Table;\r\nconst { Search } = Input;\r\nconst { RangePicker } = DatePicker;\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n  notification.success({\r\n    message: message || 'Tag Created',\r\n    description: '',\r\n    icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n  });\r\n};\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n  notification.error({\r\n    message: message || 'Something Went Wrong',\r\n    description: '',\r\n    icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n  });\r\n};\r\n\r\nconst { Option } = Select;\r\n\r\ninterface myTableProps {\r\n  data: any;\r\n  setOrderList: any;\r\n  roles: any;\r\n}\r\n\r\nconst MyTable = ({ data, setOrderList, roles }: myTableProps) => {\r\n  const [visible, setvisible] = useState(false);\r\n  const [activeCategoryForEdit, setactiveCategoryForEdit] = useState(false);\r\n  const [deleteOrderState, handleDeleteOrderFetch] = useHandleFetch(\r\n    {},\r\n    'deleteOrder'\r\n  );\r\n  const [updateOrderStatusState, handleUpdateOrderStatusFetch] = useHandleFetch(\r\n    {},\r\n    'updateOrderStatus'\r\n  );\r\n\r\n  const history = useHistory();\r\n\r\n  const handleDeleteRegion = async (id) => {\r\n    const deleteOrderRes = await handleDeleteOrderFetch({\r\n      urlOptions: {\r\n        placeHolders: {\r\n          id,\r\n        },\r\n      },\r\n    });\r\n\r\n    // @ts-ignore\r\n    if (deleteOrderRes && deleteOrderRes.status === 'ok') {\r\n      openSuccessNotification('Deleted Order');\r\n      const newOrderList = data.filter((item) => item.id !== id);\r\n      setOrderList(newOrderList);\r\n    }\r\n  };\r\n\r\n  const handleUpdateOrderStatus = async (record, id, newStatus) => {\r\n    const updateOrderStatusRes = await handleUpdateOrderStatusFetch({\r\n      urlOptions: {\r\n        params: {\r\n          newOrderstatus: newStatus,\r\n        },\r\n        placeHolders: {\r\n          id,\r\n        },\r\n      },\r\n    });\r\n\r\n    // @ts-ignore\r\n    if (updateOrderStatusRes && updateOrderStatusRes.status === 'ok') {\r\n      openSuccessNotification('Updated Order Status');\r\n\r\n      const positionInTag = () => {\r\n        return data.map((item) => item.id).indexOf(id);\r\n      };\r\n\r\n      const index = positionInTag();\r\n      console.log('recordis', record, index);\r\n\r\n      // @ts-ignore\r\n      const updatedItem = Object.assign({}, data[index], { status: newStatus });\r\n      const updateOrderList = [\r\n        ...data.slice(0, index),\r\n        updatedItem,\r\n        ...data.slice(index + 1),\r\n      ];\r\n      console.log('updateOrderList', updateOrderList, '-----', setOrderList);\r\n      setOrderList(updateOrderList);\r\n    } else {\r\n      openErrorNotification(\r\n        \"Couldn't changed order status, Something went wrong\"\r\n      );\r\n    }\r\n  };\r\n\r\n  const StatusItemMenu = (record, id) => {\r\n    return (\r\n      <Menu>\r\n        <Menu.Item\r\n          onClick={() => handleUpdateOrderStatus(record, id, 'pending')}\r\n          key='1'\r\n          icon={<CheckOutlined />}\r\n        >\r\n          Pending\r\n        </Menu.Item>\r\n\r\n        <Menu.Item\r\n          onClick={() => handleUpdateOrderStatus(record, id, 'processing')}\r\n          key='1'\r\n          icon={<CheckOutlined />}\r\n        >\r\n          Processing\r\n        </Menu.Item>\r\n\r\n        <Menu.Item\r\n          onClick={() => handleUpdateOrderStatus(record, id, 'sentForDelivery')}\r\n          key='1'\r\n          icon={<CheckOutlined />}\r\n        >\r\n          Sent for delivery\r\n        </Menu.Item>\r\n\r\n        <Menu.Item\r\n          onClick={() => handleUpdateOrderStatus(record, id, 'complete')}\r\n          key='1'\r\n          icon={<CheckOutlined />}\r\n        >\r\n          Completed\r\n        </Menu.Item>\r\n\r\n        <Menu.Item\r\n          onClick={() => handleUpdateOrderStatus(record, id, 'cancel')}\r\n          key='1'\r\n          icon={<CheckOutlined />}\r\n        >\r\n          Cancel\r\n        </Menu.Item>\r\n\r\n        {/* <Menu.Item\r\n                onClick={() => handleUpdateOrderStatus(record,id,'deliver')}\r\n                key=\"1\" icon={<CheckOutlined />}>\r\n                Delivered\r\n              </Menu.Item>\r\n     */}\r\n      </Menu>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Table\r\n        // expandable={{\r\n        //     expandedRowRender: record => <p style={{ margin: 0 }}>{record.name}</p>,\r\n        //     rowExpandable: record => record.name !== 'Not Expandable',\r\n        //   }}\r\n        // bordered={true}\r\n        size='small'\r\n        // pagination={false}\r\n        dataSource={data}\r\n      >\r\n        <Column\r\n          title='Code'\r\n          dataIndex='shortCode'\r\n          key='id'\r\n          className='classnameofthecolumn'\r\n          render={(text, record: any) => (\r\n            <>\r\n              <h4\r\n                onClick={() => {\r\n                  // setvisible(true)\r\n                  history.push(`/admin/order/${record.id}`);\r\n                  setactiveCategoryForEdit(record);\r\n                }}\r\n                style={{\r\n                  fontWeight: 400,\r\n                  color: '#555',\r\n                  cursor: 'pointer',\r\n                }}\r\n              >\r\n                #{text}\r\n              </h4>\r\n            </>\r\n          )}\r\n        />\r\n\r\n        <Column\r\n          title='Name'\r\n          dataIndex='name'\r\n          key='id'\r\n          className='classnameofthecolumn'\r\n          render={(text, record: any) => (\r\n            <>\r\n              <h4\r\n                onClick={() => {\r\n                  // setvisible(true)\r\n                  history.push(`/admin/order/${record.id}`);\r\n                  setactiveCategoryForEdit(record);\r\n                }}\r\n                style={{\r\n                  fontWeight: 400,\r\n                  color: '#555',\r\n                  cursor: 'pointer',\r\n                }}\r\n              >\r\n                {text}\r\n              </h4>\r\n            </>\r\n          )}\r\n        />\r\n\r\n        <Column\r\n          title='Delivery'\r\n          dataIndex='deliveryName'\r\n          key='id'\r\n          className='classnameofthecolumn'\r\n        />\r\n\r\n        <Column\r\n          title='Created'\r\n          dataIndex='date_created'\r\n          key='id'\r\n          className='classnameofthecolumn'\r\n          render={(text, record: any) => (\r\n            <>\r\n              <h4\r\n                style={{\r\n                  fontWeight: 400,\r\n                  color: '#555',\r\n                }}\r\n              >\r\n                {text && moment(text).format('MMMM Do YYYY, h:mm a')}\r\n              </h4>\r\n            </>\r\n          )}\r\n        />\r\n\r\n        <Column\r\n          title='Total Price'\r\n          dataIndex='total'\r\n          key='id'\r\n          className='classnameofthecolumn'\r\n        />\r\n\r\n        <Column\r\n          align='right'\r\n          title='Status'\r\n          dataIndex='status'\r\n          key='id'\r\n          className='classnameofthecolumn'\r\n          render={(text, record: any) => (\r\n            <>\r\n              {isAccess('postOrder', roles) ? (\r\n                <Dropdown\r\n                  overlay={() => StatusItemMenu(record, record.id)}\r\n                  placement='bottomRight'\r\n                >\r\n                  <a href='##'>\r\n                    <span\r\n                      // className={'product-attributeTag'}\r\n                      style={{\r\n                        fontSize: '12px',\r\n                      }}\r\n                    >\r\n                      {text}\r\n                      <span\r\n                        style={{\r\n                          marginLeft: '5px',\r\n                          fontSize: '10px',\r\n                        }}\r\n                      >\r\n                        <DownOutlined />\r\n                      </span>\r\n                    </span>\r\n                  </a>\r\n                </Dropdown>\r\n              ) : (\r\n                <a href='##'>\r\n                  <span\r\n                    // className={'product-attributeTag'}\r\n                    style={{\r\n                      fontSize: '12px',\r\n                    }}\r\n                  >\r\n                    {text}\r\n                    <span\r\n                      style={{\r\n                        marginLeft: '5px',\r\n                        fontSize: '10px',\r\n                      }}\r\n                    ></span>\r\n                  </span>\r\n                </a>\r\n              )}\r\n            </>\r\n          )}\r\n        />\r\n\r\n        {/* <Column \r\n          \r\n          className='classnameofthecolumn'\r\n\r\n          title=\"Product\" dataIndex=\"product\" key=\"product\" /> */}\r\n\r\n        {/* <Column \r\n          \r\n          className='classnameofthecolumn'\r\n\r\n          title=\"Sub Category\" dataIndex=\"subCategory\" key=\"subCategory\" /> */}\r\n\r\n        {/* <Column\r\n          title=\"Tags\"\r\n          dataIndex=\"tags\"\r\n          key=\"tags\"\r\n          render={tags => (\r\n            <>\r\n              {tags.map((tag : any) => (\r\n                <Tag color=\"blue\" key={tag}>\r\n                  {tag}\r\n                </Tag>\r\n              ))}\r\n            </>\r\n          )}\r\n        /> */}\r\n        {/* <Column\r\n        \r\n        className='classnameofthecolumn'\r\n          title=\"\"\r\n          key=\"action\"\r\n          align='right'\r\n          render={(text, record : any) => (\r\n            <Space size=\"middle\">\r\n              <a href='##'>\r\n               <Tooltip placement=\"top\" title='Edit Order'>\r\n              <span className='iconSize' \r\n              onClick={() => {\r\n                setvisible(true)\r\n                setactiveCategoryForEdit(record); \r\n              }}> \r\n              <EditOutlined />\r\n              </span>\r\n\r\n               </Tooltip>\r\n               </a>\r\n            </Space>\r\n          )}\r\n        /> */}\r\n      </Table>\r\n\r\n      {activeCategoryForEdit && (\r\n        <QuickEdit\r\n          setvisible={setvisible}\r\n          visible={visible}\r\n          customer={activeCategoryForEdit}\r\n          orderList={data}\r\n          setOrderList={setOrderList}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\ninterface Props {\r\n  roles?: any;\r\n}\r\n\r\nconst CustomerList = ({ roles }: Props) => {\r\n  const [orderList, setOrderList] = useState([]);\r\n  const history = useHistory();\r\n\r\n  const [orderState, handleOrderListFetch] = useHandleFetch({}, 'orderList');\r\n  const [orderStatusFilterValue, setorderStatusFilterValue] = useState('');\r\n  const [deliveryRegionNameValue, setdeliveryRegionNameValue] = useState('');\r\n\r\n  const [startDate, setStartDate] = useState('');\r\n  const [endDate, setEndDate] = useState('');\r\n\r\n  const handleStartEndDateRangeDate = (e) => {\r\n    console.log('dateOrder', moment(e[0]).format());\r\n    console.log('dateOff', moment(e[1]).format());\r\n    const startDate = new Date(moment(e[0]).format());\r\n    const endDate = new Date(moment(e[1]).format());\r\n    // @ts-ignore\r\n    setStartDate(startDate);\r\n    // @ts-ignore\r\n    setEndDate(endDate);\r\n  };\r\n\r\n  console.log('orderState', orderState);\r\n\r\n  useEffect(() => {\r\n    const setOrders = async () => {\r\n      const regions = await handleOrderListFetch({\r\n        urlOptions: {\r\n          params: {\r\n            sortItem: 'added',\r\n            sortOrderValue: '-1',\r\n            statusValue:\r\n              orderStatusFilterValue === 'all' ? '' : orderStatusFilterValue,\r\n            startDateValue: startDate,\r\n            endDateValue: endDate,\r\n            deliveryRegionNameValue: deliveryRegionNameValue,\r\n          },\r\n        },\r\n      });\r\n      // @ts-ignore\r\n      setOrderList(regions);\r\n    };\r\n    setOrders();\r\n  }, [orderStatusFilterValue, startDate, endDate, deliveryRegionNameValue]);\r\n\r\n  const [regionList, setRegionList] = useState([]);\r\n  const [regionState, handleRegionListFetch] = useHandleFetch({}, 'regionList');\r\n\r\n  useEffect(() => {\r\n    const setRegions = async () => {\r\n      const regions = await handleRegionListFetch({\r\n        urlOptions: {\r\n          params: {\r\n            sortItem: 'added',\r\n            sortOrderValue: '-1',\r\n          },\r\n        },\r\n      });\r\n\r\n      // @ts-ignore\r\n      if (regions && regions.length > 0) {\r\n        // @ts-ignore\r\n        const regionListOptions = regions.map((item) => {\r\n          return {\r\n            name: item.name,\r\n            value: item.name,\r\n          };\r\n        });\r\n        // @ts-ignore\r\n        setRegionList(regionListOptions);\r\n      }\r\n    };\r\n    setRegions();\r\n  }, []);\r\n\r\n  console.log('regionList33', regionList);\r\n\r\n  // console.log('orderState',orderState)\r\n\r\n  const handleSearch = (value) => {\r\n    if (orderState.data.length > 0) {\r\n      const newOrderList = orderState.data.filter((item) => {\r\n        console.log('orderItem3',item)\r\n        return `#${item.shortCode.toLowerCase()}`.includes(value.toLowerCase()) ||  `${item.shortCode.toLowerCase()}`.includes(value.toLowerCase())\r\n      }\r\n        \r\n      );\r\n      setOrderList(newOrderList);\r\n    }\r\n  };\r\n\r\n  const onOrderStatusFilterChange = (value) => {\r\n    setorderStatusFilterValue(value);\r\n  };\r\n\r\n  const deliveryRegionFilterChange = (value) => {\r\n    setdeliveryRegionNameValue(value);\r\n  };\r\n\r\n  const orderFilteringOption = [\r\n    {\r\n      name: 'All',\r\n      value: 'all',\r\n    },\r\n    {\r\n      name: 'Pending',\r\n      value: 'pending',\r\n    },\r\n    {\r\n      name: 'Processing',\r\n      value: 'processing',\r\n    },\r\n    {\r\n      name: 'Sent for delivery',\r\n      value: 'sentForDelivery',\r\n    },\r\n\r\n    {\r\n      name: 'Completed',\r\n      value: 'complete',\r\n    },\r\n    {\r\n      name: 'Cancel',\r\n      value: 'cancel',\r\n    },\r\n  ];\r\n\r\n  const headers = [\r\n    { label: 'Order Code', key: 'shortCode' },\r\n    { label: 'Name', key: 'name' },\r\n    { label: 'Delivery', key: 'deliveryName' },\r\n    { label: 'Created', key: 'date_created' },\r\n    { label: 'Total Price', key: 'total' },\r\n    { label: 'Status', key: 'status' },\r\n  ];\r\n\r\n  const getData = () => {\r\n    if (orderList && orderList.length > 0) {\r\n      const csvData = orderList.map((item) => {\r\n        return {\r\n          shortCode: item.shortCode,\r\n          name: item.name,\r\n          deliveryName: item.deliveryName,\r\n          date_created: item.date_created\r\n            ? moment(item.joiningDate).format('MMMM Do YYYY, h:mm a')\r\n            : '',\r\n          Status: item.status,\r\n          total: item.total,\r\n        };\r\n      });\r\n\r\n      return csvData;\r\n    } else return [];\r\n  };\r\n\r\n  const data = getData();\r\n\r\n  return (\r\n    <>\r\n      {/* <h2 className='containerPageTitle'>\r\n      Categories\r\n    </h2> */}\r\n      <div className='categoryListContainer'>\r\n        <div className='categoryListContainer__header'>\r\n          <div className='categoryListContainer__header-searchBar'>\r\n            <h2 className='categoryListContainer__header-title'>Orders</h2>\r\n\r\n            <Search\r\n              enterButton={false}\r\n              className='searchbarClassName'\r\n              placeholder='search orders..'\r\n              onChange={(e) => handleSearch(e.target.value)}\r\n              // style={{ width: 300 }}\r\n            />\r\n          </div>\r\n\r\n          <div\r\n            style={{\r\n              display: 'flex',\r\n              alignItems: 'center',\r\n            }}\r\n          >\r\n            {orderList && orderList.length > 0 && (\r\n              <>\r\n                <div\r\n                  style={{\r\n                    display: 'flex',\r\n                    alignItems: 'center',\r\n                    marginRight: '25px',\r\n                  }}\r\n                >\r\n                  <CSVLink\r\n                    filename={'Orders.csv'}\r\n                    data={data}\r\n                    headers={headers}\r\n                  >\r\n                    Export as csv\r\n                  </CSVLink>\r\n                  <span\r\n                    style={{\r\n                      color: '#1890ff',\r\n                      marginLeft: '10px',\r\n                    }}\r\n                  >\r\n                    <DownloadOutlined />\r\n                  </span>\r\n                </div>\r\n              </>\r\n            )}\r\n\r\n            {isAccess('postOrder', roles) && (\r\n              <Button\r\n                // type=\"primary\"\r\n                className='btnPrimaryClassNameoutline'\r\n                icon={<PlusOutlined />}\r\n                onClick={() => history.push('/admin/order/new')}\r\n              >\r\n                Add New\r\n              </Button>\r\n            )}\r\n          </div>\r\n        </div>\r\n\r\n        <div\r\n          style={{\r\n            marginTop: '30px',\r\n          }}\r\n          className='categoryListContainer__header'\r\n        >\r\n          <div></div>\r\n\r\n          <div>\r\n            <RangePicker\r\n              style={{\r\n                width: 270,\r\n                color: '#3fa6f9',\r\n              }}\r\n              onChange={handleStartEndDateRangeDate}\r\n              picker={'date'}\r\n              bordered={false}\r\n            />\r\n\r\n            {regionList && regionList.length > 0 && (\r\n              <>\r\n                <Select\r\n                  showSearch\r\n                  style={{\r\n                    borderRadius: '15px',\r\n                    color: '#3fa6f9',\r\n                    width: '150px',\r\n                    marginRight: '15px',\r\n                  }}\r\n                  placeholder='Delivery Region'\r\n                  optionFilterProp='children'\r\n                  onChange={deliveryRegionFilterChange}\r\n                  // defaultValue={'pending'}\r\n                  bordered={false}\r\n                  filterOption={(input, option) =>\r\n                    option.children\r\n                      .toLowerCase()\r\n                      .indexOf(input.toLowerCase()) >= 0\r\n                  }\r\n                >\r\n                  {regionList.map((option) => {\r\n                    return <Option value={option.value}>{option.name}</Option>;\r\n                  })}\r\n                </Select>\r\n              </>\r\n            )}\r\n\r\n            <Select\r\n              style={{ borderRadius: '15px', color: '#3fa6f9', width: '100px' }}\r\n              placeholder='Select status'\r\n              optionFilterProp='children'\r\n              onChange={onOrderStatusFilterChange}\r\n              defaultValue={'all'}\r\n              bordered={false}\r\n            >\r\n              {orderFilteringOption.map((option) => {\r\n                return <Option value={option.value}>{option.name}</Option>;\r\n              })}\r\n            </Select>\r\n          </div>\r\n        </div>\r\n\r\n        <div className='categoryListContainer__afterHeader'>\r\n          {/* <Search\r\n      placeholder=\"search categories..\"\r\n      size=\"large\"\r\n      onSearch={value => console.log(value)}\r\n      style={{ width: 300 }}\r\n    /> */}\r\n        </div>\r\n\r\n        <div className='categoryListContainer__categoryList'>\r\n          {orderState.done && orderList.length > 0 && (\r\n            <MyTable\r\n              roles={roles}\r\n              setOrderList={setOrderList}\r\n              data={orderList}\r\n            />\r\n          )}\r\n          {orderState.isLoading && <DataTableSkeleton />}\r\n\r\n          {orderState.done && !(orderList.length > 0) && (\r\n            <Empty title='No Order found' />\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      {/* {orderState.done && \r\n          <AddNewOrder \r\n          addNewCategoryVisible={addNewCategoryVisible} \r\n          setAddNewCategoryVisible={setAddNewCategoryVisible}\r\n          orderList={orderState.data}\r\n          setOrderList={setOrderList}\r\n           />} */}\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  roles: state.globalState,\r\n});\r\n\r\n// @ts-ignore\r\nexport default connect(mapStateToProps, null)(CustomerList);\r\n","import React, { memo } from 'react';\r\n\r\n// import components\r\nimport AddNewOrderProductItem from '../order/AddNewOrderProductItem';\r\nimport Empty from '../../components/Empty';\r\n\r\nimport { ShopOutlined } from '@ant-design/icons';\r\n\r\ninterface Props {\r\n  productList?: any;\r\n  setProductList?: any;\r\n}\r\n\r\nconst AddNewOrderSummary = ({ setProductList, productList }: Props) => {\r\n  return (\r\n    <div\r\n      style={{\r\n        // @ts-ignore\r\n        flexDirection: 'flex',\r\n      }}\r\n      className='addOrderContainer__container-orderSummary'\r\n    >\r\n      <h3 className='addOrderContainer-sectionTitle'>\r\n        <span>\r\n          <ShopOutlined />\r\n        </span>\r\n        Selected Products\r\n      </h3>\r\n      <div className='addOrderContainer__container-productItemContainer'>\r\n        {productList &&\r\n          productList.length > 0 &&\r\n          productList.map((item) => {\r\n            return (\r\n              <AddNewOrderProductItem\r\n                setProductList={setProductList}\r\n                productList={productList}\r\n                productId={item._id}\r\n                quantity={item.quantity}\r\n                item={item}\r\n                variation={item.variation}\r\n              />\r\n            );\r\n          })}\r\n\r\n        {!(productList.length > 0) && (\r\n          <div\r\n            style={{\r\n              marginLeft: '32px',\r\n            }}\r\n          >\r\n            <Empty title='No Product Added' height={150} />\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default memo(AddNewOrderSummary);\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useHandleFetch } from '../../hooks';\r\nimport { Select, Skeleton } from 'antd';\r\n\r\ninterface Props {\r\n    setCustomerId?: any;\r\n    setSelectedCustomerData?: any;\r\n    customerListState?:any; \r\n}\r\n\r\nconst { Option } = Select;\r\n\r\nconst Brands = ({ setCustomerId, setSelectedCustomerData }: Props) => {\r\n    const [options, setoptions] = useState([]);\r\n    const [selectedBrandId, setSelectedBrandId] = useState('');\r\n    const [brandState, handleTagListFetch] = useHandleFetch({}, 'customerList');\r\n\r\n    function onChange(option) {\r\n        if (options && options.length > 0) {\r\n            const customerData = options.find(item => item.value === option);\r\n            if (customerData) {\r\n                setSelectedCustomerData(customerData);\r\n            }\r\n        }\r\n        setSelectedBrandId(option);\r\n        setCustomerId(option);\r\n        // console.log(`selected ${value}`);\r\n    }\r\n\r\n    function onBlur() {\r\n        // console.log('blur');\r\n    }\r\n\r\n    function onFocus() {\r\n        // console.log('focus');\r\n    }\r\n\r\n    function onSearch(val) {\r\n        // console.log('search:', val);\r\n    }\r\n\r\n    useEffect(() => {\r\n        const setBrands = async () => {\r\n            const brandListRes = await handleTagListFetch({\r\n                urlOptions:{\r\n                    params: {\r\n                      sortItem: 'added',\r\n                      sortOrderValue: '-1'\r\n                    }\r\n                    }\r\n            });\r\n\r\n            // @ts-ignore\r\n            if (brandListRes && brandListRes.length > 0) {\r\n                // @ts-ignore\r\n                const brandOptions = brandListRes.map((brand) => {\r\n                    return {\r\n                        ...brand,\r\n                        value: brand.id,\r\n                        name: `${brand.firstName} ${brand.lastName}`\r\n                    };\r\n                });\r\n                setoptions(brandOptions);\r\n            }\r\n        };\r\n\r\n        setBrands();\r\n    }, []);\r\n\r\n    return (\r\n        <Skeleton loading={brandState.isLoading}>\r\n            <Select\r\n                showSearch\r\n                size='middle'\r\n                style={{ width: '100%' }}\r\n                placeholder='Select a Customer'\r\n                optionFilterProp='children'\r\n                onChange={onChange}\r\n                onFocus={onFocus}\r\n                onBlur={onBlur}\r\n                onSearch={onSearch}\r\n                filterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n            >\r\n                {brandState.done &&\r\n                    brandState.data.length > 0 &&\r\n                    options.map((option) => {\r\n                        return <Option value={option.value}>{option.name}</Option>;\r\n                    })}\r\n            </Select>\r\n        </Skeleton>\r\n\r\n    );\r\n};\r\n\r\nexport default Brands;\r\n","import React, { useEffect, useState,memo } from 'react';\r\nimport { useHandleFetch } from '../../hooks';\r\nimport { Select, Skeleton } from 'antd';\r\n\r\n\r\ninterface Props {\r\n    setProductIds?: any;\r\n    productIds?: any;\r\n    productListState?:any; \r\n}\r\n\r\n\r\nconst Tags = ({\r\n    setProductIds,\r\n    productIds,\r\n    productListState\r\n}: Props) => {\r\n    const [options, setoptions] = useState([]);\r\n    const [selectedOpions, setselectedOptions] = useState([]);\r\n\r\n\r\n    useEffect(() => {\r\n        if (productListState.done && productListState.data  && productListState.data.length > 0) {\r\n            // @ts-ignore\r\n            const productOptions = productListState.data.map((product) => {\r\n                return product.name\r\n            });\r\n            setoptions(productOptions);\r\n        }\r\n\r\n    }, [productListState]);\r\n\r\n\r\n\r\n    const handleChange = (selectItems) => {\r\n        setselectedOptions(selectItems);\r\n\r\n        console.log('selectedProducts', selectItems);\r\n\r\n        if (productListState.done && productListState.data.length > 0 && selectItems.length > 0) {\r\n            const selectedCategoryIds = selectItems.map((item) => {\r\n                const selectedcategory = productListState.data.find(\r\n                    (cat) => cat.name.toLowerCase() === item.toLowerCase()\r\n                );\r\n                if (selectedcategory) {\r\n                    return selectedcategory;\r\n                }\r\n            });\r\n            console.log('selectedCategoryIds', selectedCategoryIds);\r\n            setProductIds(selectedCategoryIds);\r\n        }\r\n        else {\r\n            setProductIds([])\r\n        }\r\n    }\r\n\r\n\r\n    // console.log('selectedOpions', selectedOpions);\r\n\r\n\r\n    return (\r\n        <>\r\n            <Skeleton loading={productListState.isLoading}>\r\n                {productListState.done && productListState.data.length > 0 && <Select\r\n                    mode=\"multiple\"\r\n                    placeholder=\"search products\"\r\n                    value={selectedOpions}\r\n                    onChange={handleChange}\r\n                    style={{ width: '100%' }}\r\n                >\r\n                    {options.filter(o => !selectedOpions.includes(o)).map(item => (\r\n                        <Select.Option key={item} value={item}>\r\n                            {item}\r\n                        </Select.Option>\r\n                    ))}\r\n                </Select>}\r\n            </Skeleton>\r\n\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default memo(Tags);\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\nimport { useHandleFetch } from '../../hooks';\r\n\r\n// import third party ui lib\r\nimport {\r\n  Upload,\r\n  Radio,\r\n  message,\r\n  Select,\r\n  Button,\r\n  notification,\r\n  Empty,\r\n  Steps,\r\n  Form,\r\n} from 'antd';\r\n\r\nimport {\r\n  FileOutlined,\r\n  InboxOutlined,\r\n  RadiusUpleftOutlined,\r\n  RadiusUprightOutlined,\r\n  RadiusBottomleftOutlined,\r\n  RadiusBottomrightOutlined,\r\n  DeleteOutlined,\r\n  FileAddOutlined,\r\n  PlusOutlined,\r\n  CheckCircleOutlined,\r\n  CaretRightOutlined,\r\n  CaretLeftOutlined,\r\n  CaretRightFilled,\r\n  UserOutlined,\r\n  InfoCircleOutlined,\r\n  CarOutlined,\r\n  ClockCircleOutlined,\r\n} from '@ant-design/icons';\r\n\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport AddNewOrderSummary from './AddNewOrderSummary';\r\nimport CustomersId from './CustomersId';\r\nimport AddProducts from './AddProducts';\r\nimport { product } from '../../state/ducks';\r\n\r\n//import utils\r\nimport { getDeliveryChargeTotal } from '.././../utils';\r\n\r\nconst { Option } = Select;\r\nconst { Step } = Steps;\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n  notification.success({\r\n    message: message || 'Order Created',\r\n    description: '',\r\n    icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n  });\r\n};\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n  notification.error({\r\n    message: message || 'Something Went Wrong',\r\n    description: '',\r\n    icon: <InfoCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n  });\r\n};\r\n\r\nconst validationSchema = Yup.object().shape({});\r\n\r\nconst initialValues = {\r\n  phone: '',\r\n  email: '',\r\n  firstName: '',\r\n  lastName: '',\r\n  address1: '',\r\n  address2: '',\r\n  zipCode: '',\r\n  additionalInfo: '',\r\n  country: '',\r\n  city: '',\r\n};\r\n\r\nconst steps = [\r\n  {\r\n    title: 'Order Information',\r\n    content: '',\r\n    // description: 'Add Customer & Products'\r\n  },\r\n  {\r\n    title: 'Address',\r\n  },\r\n  {\r\n    title: 'Confirm Order',\r\n    content: '',\r\n  },\r\n];\r\n\r\ninterface Props {}\r\n\r\nconst AddNewOrder = ({}: Props) => {\r\n  const [addOrderState, handleOrderFetch] = useHandleFetch({}, 'addOrder');\r\n  const [selectedCountryValue, setselectedCountryValue] = useState('');\r\n  const [selectedCityValue, setselectedCityValue] = useState('');\r\n  const [customerId, setCustomerId] = useState([]);\r\n  const [selectedCustomerData, setSelectedCustomerData] = useState({});\r\n\r\n  const [countryOptions, setcountryOptions] = useState([]);\r\n  const [cityOptions, setcityOptions] = useState([]);\r\n\r\n  const [countryListState, handleCountryListFetch] = useHandleFetch(\r\n    [],\r\n    'countryList'\r\n  );\r\n\r\n  const [cityListState, handleCityListFetch] = useHandleFetch([], 'cityList');\r\n\r\n  const [current, setCurrent] = useState(0);\r\n  const [productIds, setProductIds] = useState([]);\r\n  const [productList, setProductList] = useState([]);\r\n\r\n  const [productListState, handleProductListFetch] = useHandleFetch(\r\n    {},\r\n    'productList'\r\n  );\r\n  const [customerListState, handleCustomerListFetch] = useHandleFetch(\r\n    {},\r\n    'customerList'\r\n  );\r\n\r\n  const [deliveryRegionState, handleDeliveryRegionFetch] = useHandleFetch(\r\n    [],\r\n    'getDeliveryRegion'\r\n  );\r\n\r\n  const [deliveryRegionName, setDeliveryRegionName] = useState('');\r\n  const [selectedRegion, setSelectedRegion] = useState({});\r\n  const [regionDeliveryCharge, setregionDeliveryCharge] = useState([]);\r\n\r\n  useEffect(() => {\r\n    if (selectedCustomerData && Object.keys(selectedCustomerData).length > 0) {\r\n      setselectedCityValue(selectedCustomerData['city']);\r\n      setselectedCountryValue(selectedCustomerData['country']);\r\n    }\r\n  }, [selectedCustomerData]);\r\n\r\n  const isDeliveryChargeExists = (regions) => {\r\n    if (!regions) {\r\n      return false;\r\n    } else return true;\r\n  };\r\n\r\n  useEffect(() => {\r\n    const getAndSetShippingDeliveryCharge = async () => {\r\n      const deliveryRegionState = await handleDeliveryRegionFetch({\r\n        urlOptions: {\r\n          placeHolders: {\r\n            cityName: selectedCityValue,\r\n          },\r\n        },\r\n      });\r\n      // @ts-ignore\r\n      setregionDeliveryCharge(deliveryRegionState);\r\n    };\r\n\r\n    getAndSetShippingDeliveryCharge();\r\n    console.log('selectedCityValue', selectedCityValue);\r\n  }, [selectedCityValue]);\r\n\r\n  const handleDeviliveryRegionChange = (value) => {\r\n    setDeliveryRegionName(value);\r\n\r\n    if (\r\n      isDeliveryChargeExists(\r\n        regionDeliveryCharge.length > 0 && regionDeliveryCharge\r\n      )\r\n    ) {\r\n      const deliveryRegions = regionDeliveryCharge;\r\n\r\n      const selectedRegion = deliveryRegions.find(\r\n        (region) => region['_id'] === value\r\n      );\r\n      if (selectedRegion) {\r\n        setSelectedRegion(selectedRegion);\r\n      }\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (\r\n      isDeliveryChargeExists(\r\n        regionDeliveryCharge.length > 0 && regionDeliveryCharge\r\n      )\r\n    ) {\r\n      const deliveryRegions = regionDeliveryCharge;\r\n\r\n      const selectedRegion = deliveryRegions.find(\r\n        (region, index) => 0 === index\r\n      );\r\n      if (selectedRegion) {\r\n        setDeliveryRegionName(selectedRegion['name']);\r\n        setSelectedRegion(selectedRegion);\r\n      }\r\n    }\r\n  }, [regionDeliveryCharge]);\r\n\r\n  useEffect(() => {\r\n    const setProducts = async () => {\r\n      const productListRes = await handleProductListFetch({\r\n        urlOptions: {\r\n          params: {\r\n            sortItem: 'added',\r\n            sortOrderValue: '-1',\r\n            productType: 'product',\r\n          },\r\n        },\r\n      });\r\n    };\r\n\r\n    setProducts();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const setCustomers = async () => {\r\n      const customerListRes = await handleCustomerListFetch({});\r\n    };\r\n    setCustomers();\r\n  }, []);\r\n\r\n  const next = () => {\r\n    const newCurrent = current + 1;\r\n    setCurrent(newCurrent);\r\n  };\r\n\r\n  const prev = () => {\r\n    const newCurrent = current - 1;\r\n    setCurrent(newCurrent);\r\n  };\r\n\r\n  const handleCheckoutSubmit = async (values: any, actions: any) => {\r\n    const products =\r\n      productList && productList.length > 0\r\n        ? productList.map((item) => {\r\n            return {\r\n              product: item._id,\r\n              quantity: item.quantity,\r\n              variation: item.variation,\r\n            };\r\n          })\r\n        : [];\r\n\r\n    const addOrderRes = await handleOrderFetch({\r\n      body: {\r\n        shippingAddress: {\r\n          phone: values.phone,\r\n          email: values.email,\r\n          address1: values.address1,\r\n          address2: values.address2,\r\n          firstName: values.firstName,\r\n          lastName: values.lastName,\r\n          city: selectedCityValue || selectedCustomerData['city'],\r\n          country: selectedCountryValue || selectedCustomerData['country'],\r\n        },\r\n        items: products,\r\n        delivery: deliveryRegionName,\r\n        customerId: customerId,\r\n        // charge\r\n      },\r\n    });\r\n\r\n    // @ts-ignore\r\n    if (addOrderRes && addOrderRes.status === 'ok') {\r\n      // openSuccessNotification();\r\n\r\n      actions.resetForm();\r\n\r\n      setCurrent(0);\r\n      setProductIds([]);\r\n      setProductList([]);\r\n      setCustomerId([]);\r\n      setselectedCityValue('');\r\n      setselectedCountryValue('');\r\n      setDeliveryRegionName('');\r\n      setSelectedRegion({});\r\n      setregionDeliveryCharge([]);\r\n      setSelectedCustomerData({});\r\n    } else {\r\n      openErrorNotification(\"Couldn't create order, Something went wrong\");\r\n    }\r\n\r\n    actions.setSubmitting(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!addOrderState['isLoading']) {\r\n      const error = addOrderState['error'];\r\n      if (error['isError'] && Object.keys(error['error']).length > 0) {\r\n        if (error['error']['registerError']) {\r\n          // setServerErrors(error['error']['registerError']);\r\n        } else if (error['error']['checkoutError']) {\r\n          // setServerErrors(error['error']['checkoutError']);\r\n        } else {\r\n          // setServerErrors(error['error']);\r\n        }\r\n\r\n        const errors =\r\n          Object.values(error['error']).length > 0\r\n            ? Object.values(error['error'])\r\n            : [];\r\n        errors.forEach((err, i) => {\r\n          if (typeof err === 'string') {\r\n            openErrorNotification(err);\r\n          } else if (typeof err === 'object') {\r\n            if (err && Object.keys(err).length > 0) {\r\n              const errs = Object.values(err);\r\n              errs.forEach((err) => {\r\n                openErrorNotification(err);\r\n              });\r\n            }\r\n          }\r\n        });\r\n      }\r\n    }\r\n\r\n    if (\r\n      !addOrderState['isLoading'] &&\r\n      Object.keys(addOrderState.data).length > 0\r\n    ) {\r\n      if (addOrderState['data']['status'] === 'ok') {\r\n        openSuccessNotification('Order Created Successfully');\r\n        // history.push({\r\n        //   pathname: '/orderDetails',\r\n        //   state: checkoutState['data']\r\n        // })\r\n\r\n        // clearCart();\r\n        // setIsModalShown(true);\r\n      }\r\n    }\r\n  }, [addOrderState]);\r\n\r\n  const onChangeCity = (value) => {\r\n    setselectedCityValue(value);\r\n  };\r\n\r\n  const onChangeCountry = (value) => {\r\n    setselectedCountryValue(value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const setCountries = async () => {\r\n      const CountryListRes = await handleCountryListFetch({});\r\n\r\n      // @ts-ignore\r\n      if (CountryListRes && CountryListRes.length > 0) {\r\n        // @ts-ignore\r\n        const countryOptions = CountryListRes.map((country) => {\r\n          return {\r\n            value: country.id,\r\n            name: country.name,\r\n          };\r\n        });\r\n        setcountryOptions(countryOptions);\r\n      }\r\n    };\r\n\r\n    setCountries();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const setCities = async () => {\r\n      const cityListRes = await handleCityListFetch({\r\n        urlOptions: {\r\n          placeHolders: {\r\n            country: selectedCountryValue,\r\n          },\r\n        },\r\n      });\r\n\r\n      // @ts-ignore\r\n      if (cityListRes && cityListRes.length > 0) {\r\n        // @ts-ignore\r\n        const cityOptions = cityListRes.map((city) => {\r\n          return {\r\n            value: city.name,\r\n            name: city.name,\r\n          };\r\n        });\r\n        setcityOptions(cityOptions);\r\n      }\r\n    };\r\n\r\n    setCities();\r\n  }, [selectedCountryValue]);\r\n\r\n  const getisSubmitButtonDisabled = (values, isValid) => {\r\n    if (!isValid || !values.name || !values.pickUpLocation || !values.time) {\r\n      return true;\r\n    }\r\n    return false;\r\n  };\r\n\r\n  const handleAddDeliveryCharge = () => {};\r\n\r\n  useEffect(() => {\r\n    if (productIds && productIds.length > 0 && productList) {\r\n      if (productIds.length > productList.length) {\r\n        const variation =\r\n          productIds[productIds.length - 1]['pricing'] &&\r\n          productIds[productIds.length - 1]['pricing'].length > 0 &&\r\n          productIds[productIds.length - 1]['pricing'][0]['_id'];\r\n\r\n        setProductList([\r\n          ...productList,\r\n          {\r\n            ...productIds[productIds.length - 1],\r\n            _id: productIds[productIds.length - 1]['id'],\r\n            variation: variation,\r\n            quantity: 1,\r\n          },\r\n        ]);\r\n      } else if (productIds.length < productList.length) {\r\n        console.log('productIds', productIds);\r\n        console.log('productList', productList);\r\n\r\n        const newProductList = productList.filter((item) => {\r\n          let isTrue = false;\r\n          productIds.forEach((product) => {\r\n            if (product.id === item._id) {\r\n              isTrue = true;\r\n            }\r\n          });\r\n          return isTrue;\r\n        });\r\n        setProductList(newProductList);\r\n      }\r\n    } else {\r\n      setProductList([]);\r\n    }\r\n    // console.log('productIds', productIds)\r\n  }, [productIds]);\r\n\r\n  // console.log('productList', productList)\r\n  console.log('selectedCustomerData', selectedCustomerData);\r\n\r\n  return (\r\n    <Formik\r\n      onSubmit={(values, actions) => handleCheckoutSubmit(values, actions)}\r\n      validationSchema={validationSchema}\r\n      validateOnBlur={false}\r\n      enableReinitialize={true}\r\n      initialValues={{ ...initialValues, ...selectedCustomerData }}\r\n    >\r\n      {({\r\n        handleChange,\r\n        values,\r\n        handleSubmit,\r\n        errors,\r\n        isValid,\r\n        isSubmitting,\r\n        touched,\r\n        handleBlur,\r\n        setFieldTouched,\r\n        handleReset,\r\n      }) => (\r\n        <>\r\n          <div className='addOrderContainer'>\r\n            <h3>Add New Order</h3>\r\n            <div className='addOrderContainer__container'>\r\n              <Steps current={current}>\r\n                {steps.map((item) => (\r\n                  <Step key={item.title} title={item.title} />\r\n                ))}\r\n              </Steps>\r\n\r\n              {current === 0 && (\r\n                <div className='addOrderContainer__container-OrderInfoContainer'>\r\n                  <div className='addOrderContainer__container-OrderInfoContainer-left'>\r\n                    <h3 style={{}} className='addOrderContainer-sectionTitle'>\r\n                      <span>\r\n                        <UserOutlined />\r\n                      </span>\r\n                      Customers And products\r\n                    </h3>\r\n\r\n                    <div\r\n                      style={{\r\n                        marginTop: '15px',\r\n                      }}\r\n                    ></div>\r\n\r\n                    <h4 className='inputFieldLabel'>Customer</h4>\r\n                    <CustomersId\r\n                      customerListState={customerListState}\r\n                      setSelectedCustomerData={setSelectedCustomerData}\r\n                      setCustomerId={setCustomerId}\r\n                    />\r\n                    <div\r\n                      style={{\r\n                        marginTop: '15px',\r\n                      }}\r\n                    ></div>\r\n                    <h4 className='inputFieldLabel'>Products</h4>\r\n                    <AddProducts\r\n                      productListState={productListState}\r\n                      productIds={productIds}\r\n                      setProductIds={setProductIds}\r\n                    />\r\n                  </div>\r\n                  <div className='addOrderContainer__container-OrderInfoContainer-right'>\r\n                    <AddNewOrderSummary\r\n                      setProductList={setProductList}\r\n                      productList={productList}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              )}\r\n\r\n              {current === 1 && (\r\n                <div className='addOrderContainer__container-address'>\r\n                  <div className='dubbleRowInputs'>\r\n                    <div className='dubbleRowInputs__item'>\r\n                      <Input\r\n                        label='First Name'\r\n                        value={values.firstName}\r\n                        name='firstName'\r\n                        isError={\r\n                          (touched.firstName && errors.firstName) ||\r\n                          (!isSubmitting &&\r\n                            addOrderState.error['error']['firstName'])\r\n                        }\r\n                        errorString={\r\n                          (touched.firstName && errors.firstName) ||\r\n                          (!isSubmitting &&\r\n                            addOrderState.error['error']['firstName'])\r\n                        }\r\n                        onChange={(e: any) => {\r\n                          handleChange(e);\r\n                          setFieldTouched('firstName');\r\n                        }}\r\n                      />\r\n                    </div>\r\n                    <div className='dubbleRowInputs__item'>\r\n                      <Input\r\n                        label='Last Name'\r\n                        value={values.lastName}\r\n                        name='lastName'\r\n                        isError={\r\n                          (touched.lastName && errors.lastName) ||\r\n                          (!isSubmitting &&\r\n                            addOrderState.error['error']['lastName'])\r\n                        }\r\n                        errorString={\r\n                          (touched.lastName && errors.lastName) ||\r\n                          (!isSubmitting &&\r\n                            addOrderState.error['error']['lastName'])\r\n                        }\r\n                        onChange={(e: any) => {\r\n                          handleChange(e);\r\n                          setFieldTouched('lastName');\r\n                        }}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className='dubbleRowInputs'>\r\n                    <div className='dubbleRowInputs__item'>\r\n                      <Input\r\n                        label='Phone'\r\n                        value={values.phone}\r\n                        name='phone'\r\n                        isError={\r\n                          (touched.phone && errors.phone) ||\r\n                          (!isSubmitting &&\r\n                            addOrderState.error['error']['phone'])\r\n                        }\r\n                        errorString={\r\n                          (touched.phone && errors.phone) ||\r\n                          (!isSubmitting &&\r\n                            addOrderState.error['error']['phone'])\r\n                        }\r\n                        onChange={(e: any) => {\r\n                          handleChange(e);\r\n                          setFieldTouched('phone');\r\n                        }}\r\n                      />\r\n                    </div>\r\n                    <div className='dubbleRowInputs__item'>\r\n                      <Input\r\n                        label='Email'\r\n                        value={values.email}\r\n                        name='email'\r\n                        isError={\r\n                          (touched.email && errors.email) ||\r\n                          (!isSubmitting &&\r\n                            addOrderState.error['error']['email'])\r\n                        }\r\n                        errorString={\r\n                          (touched.email && errors.email) ||\r\n                          (!isSubmitting &&\r\n                            addOrderState.error['error']['email'])\r\n                        }\r\n                        onChange={(e: any) => {\r\n                          handleChange(e);\r\n                          setFieldTouched('email');\r\n                        }}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className='dubbleRowInputs'>\r\n                    <div className='dubbleRowInputs__item'>\r\n                      <h3 className='inputFieldLabel'>Country</h3>\r\n\r\n                      <Form.Item\r\n                        validateStatus={\r\n                          addOrderState.error['error']['country'] ? 'error' : ''\r\n                        }\r\n                        help={addOrderState.error['error']['country']}\r\n                        // noStyle={true}\r\n                      >\r\n                        <Select\r\n                          defaultValue={values.country}\r\n                          notFoundContent={\r\n                            <Empty\r\n                              description='No Country Found'\r\n                              image={Empty.PRESENTED_IMAGE_SIMPLE}\r\n                            />\r\n                          }\r\n                          showSearch\r\n                          style={{ width: '100%' }}\r\n                          placeholder='Select a Country'\r\n                          optionFilterProp='children'\r\n                          onChange={onChangeCountry}\r\n                          filterOption={(input, option) =>\r\n                            option.children\r\n                              .toLowerCase()\r\n                              .indexOf(input.toLowerCase()) >= 0\r\n                          }\r\n                        >\r\n                          {countryListState.done &&\r\n                            countryListState.data.length > 0 &&\r\n                            countryOptions.map((option) => {\r\n                              return (\r\n                                <Option value={option.value}>\r\n                                  {option.name}\r\n                                </Option>\r\n                              );\r\n                            })}\r\n                        </Select>\r\n                      </Form.Item>\r\n                    </div>\r\n                    <div className='dubbleRowInputs__item'>\r\n                      <h3 className='inputFieldLabel'>City</h3>\r\n                      <Form.Item\r\n                        // noStyle={true}\r\n                        validateStatus={\r\n                          addOrderState.error['error']['city'] ? 'error' : ''\r\n                        }\r\n                        help={addOrderState.error['error']['city']}\r\n                      >\r\n                        <Select\r\n                          defaultValue={values.city}\r\n                          className='selectClassName'\r\n                          notFoundContent={\r\n                            <Empty\r\n                              description='First Select a Country'\r\n                              image={Empty.PRESENTED_IMAGE_SIMPLE}\r\n                            />\r\n                          }\r\n                          showSearch\r\n                          style={{ width: '100%' }}\r\n                          placeholder='Select a city'\r\n                          optionFilterProp='children'\r\n                          onChange={onChangeCity}\r\n                          filterOption={(input, option) =>\r\n                            option.children\r\n                              .toLowerCase()\r\n                              .indexOf(input.toLowerCase()) >= 0\r\n                          }\r\n                        >\r\n                          {cityListState.done &&\r\n                            cityListState.data.length > 0 &&\r\n                            cityOptions.map((option) => {\r\n                              return (\r\n                                <Option value={option.value}>\r\n                                  {option.name}\r\n                                </Option>\r\n                              );\r\n                            })}\r\n                        </Select>\r\n                      </Form.Item>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div\r\n                    style={{\r\n                      marginTop: '12px',\r\n                    }}\r\n                  ></div>\r\n\r\n                  <div className='dubbleRowInputs'>\r\n                    <div className='dubbleRowInputs__item'>\r\n                      <Input\r\n                        label='Address'\r\n                        value={values.address1}\r\n                        name='address1'\r\n                        isError={\r\n                          (touched.address1 && errors.address1) ||\r\n                          (!isSubmitting &&\r\n                            addOrderState.error['error']['address1'])\r\n                        }\r\n                        errorString={\r\n                          (touched.address1 && errors.address1) ||\r\n                          (!isSubmitting &&\r\n                            addOrderState.error['error']['address1'])\r\n                        }\r\n                        onChange={(e: any) => {\r\n                          handleChange(e);\r\n                          setFieldTouched('address1');\r\n                        }}\r\n                      />\r\n                    </div>\r\n                    <div className='dubbleRowInputs__item'>\r\n                      <Input\r\n                        label='Address 2'\r\n                        value={values.address2}\r\n                        name='address2'\r\n                        isError={\r\n                          (touched.address2 && errors.address2) ||\r\n                          (!isSubmitting &&\r\n                            addOrderState.error['error']['address2'])\r\n                        }\r\n                        errorString={\r\n                          (touched.address2 && errors.address2) ||\r\n                          (!isSubmitting &&\r\n                            addOrderState.error['error']['address2'])\r\n                        }\r\n                        onChange={(e: any) => {\r\n                          handleChange(e);\r\n                          setFieldTouched('address2');\r\n                        }}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              )}\r\n\r\n              {current === 10 && (\r\n                <div className='addOrderContainer__container-address'>\r\n                  <div className='dubbleRowInputs'>\r\n                    <div className='dubbleRowInputs__item'>\r\n                      <Input\r\n                        label='First Name'\r\n                        value={values.firstName}\r\n                        name='firstName'\r\n                        isError={\r\n                          (touched.firstName && errors.firstName) ||\r\n                          (!isSubmitting &&\r\n                            addOrderState.error['error']['firstName'])\r\n                        }\r\n                        errorString={\r\n                          (touched.firstName && errors.firstName) ||\r\n                          (!isSubmitting &&\r\n                            addOrderState.error['error']['firstName'])\r\n                        }\r\n                        onChange={(e: any) => {\r\n                          handleChange(e);\r\n                          setFieldTouched('firstName');\r\n                        }}\r\n                      />\r\n                    </div>\r\n                    <div className='dubbleRowInputs__item'>\r\n                      <Input\r\n                        label='Last Name'\r\n                        value={values.lastName}\r\n                        name='lastName'\r\n                        isError={\r\n                          (touched.lastName && errors.lastName) ||\r\n                          (!isSubmitting &&\r\n                            addOrderState.error['error']['lastName'])\r\n                        }\r\n                        errorString={\r\n                          (touched.lastName && errors.lastName) ||\r\n                          (!isSubmitting &&\r\n                            addOrderState.error['error']['lastName'])\r\n                        }\r\n                        onChange={(e: any) => {\r\n                          handleChange(e);\r\n                          setFieldTouched('lastName');\r\n                        }}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className='dubbleRowInputs'>\r\n                    <div className='dubbleRowInputs__item'>\r\n                      <Input\r\n                        label='Phone'\r\n                        value={values.phone}\r\n                        name='phone'\r\n                        isError={\r\n                          (touched.phone && errors.phone) ||\r\n                          (!isSubmitting &&\r\n                            addOrderState.error['error']['phone'])\r\n                        }\r\n                        errorString={\r\n                          (touched.phone && errors.phone) ||\r\n                          (!isSubmitting &&\r\n                            addOrderState.error['error']['phone'])\r\n                        }\r\n                        onChange={(e: any) => {\r\n                          handleChange(e);\r\n                          setFieldTouched('phone');\r\n                        }}\r\n                      />\r\n                    </div>\r\n                    <div className='dubbleRowInputs__item'>\r\n                      <Input\r\n                        label='Email'\r\n                        value={values.email}\r\n                        name='email'\r\n                        isError={\r\n                          (touched.email && errors.email) ||\r\n                          (!isSubmitting &&\r\n                            addOrderState.error['error']['email'])\r\n                        }\r\n                        errorString={\r\n                          (touched.email && errors.email) ||\r\n                          (!isSubmitting &&\r\n                            addOrderState.error['error']['email'])\r\n                        }\r\n                        onChange={(e: any) => {\r\n                          handleChange(e);\r\n                          setFieldTouched('email');\r\n                        }}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className='dubbleRowInputs'>\r\n                    <div className='dubbleRowInputs__item'>\r\n                      <h3 className='inputFieldLabel'>Country</h3>\r\n\r\n                      <Form.Item\r\n                        validateStatus={\r\n                          addOrderState.error['error']['country'] ? 'error' : ''\r\n                        }\r\n                        help={addOrderState.error['error']['country']}\r\n                        // noStyle={true}\r\n                      >\r\n                        <Select\r\n                          defaultValue={'Comoros'}\r\n                          notFoundContent={\r\n                            <Empty\r\n                              description='No Country Found'\r\n                              image={Empty.PRESENTED_IMAGE_SIMPLE}\r\n                            />\r\n                          }\r\n                          showSearch\r\n                          style={{ width: '100%' }}\r\n                          placeholder='Select a Country'\r\n                          optionFilterProp='children'\r\n                          onChange={onChangeCountry}\r\n                          filterOption={(input, option) =>\r\n                            option.children\r\n                              .toLowerCase()\r\n                              .indexOf(input.toLowerCase()) >= 0\r\n                          }\r\n                        >\r\n                          {countryListState.done &&\r\n                            countryListState.data.length > 0 &&\r\n                            countryOptions.map((option) => {\r\n                              return (\r\n                                <Option value={option.value}>\r\n                                  {option.name}\r\n                                </Option>\r\n                              );\r\n                            })}\r\n                        </Select>\r\n                      </Form.Item>\r\n                    </div>\r\n                    <div className='dubbleRowInputs__item'>\r\n                      <h3 className='inputFieldLabel'>City</h3>\r\n                      <Form.Item\r\n                        // noStyle={true}\r\n                        validateStatus={\r\n                          addOrderState.error['error']['city'] ? 'error' : ''\r\n                        }\r\n                        help={addOrderState.error['error']['city']}\r\n                      >\r\n                        <Select\r\n                          defaultValue={'Dhaka'}\r\n                          className='selectClassName'\r\n                          notFoundContent={\r\n                            <Empty\r\n                              description='First Select a Country'\r\n                              image={Empty.PRESENTED_IMAGE_SIMPLE}\r\n                            />\r\n                          }\r\n                          showSearch\r\n                          style={{ width: '100%' }}\r\n                          placeholder='Select a city'\r\n                          optionFilterProp='children'\r\n                          onChange={onChangeCity}\r\n                          filterOption={(input, option) =>\r\n                            option.children\r\n                              .toLowerCase()\r\n                              .indexOf(input.toLowerCase()) >= 0\r\n                          }\r\n                        >\r\n                          {cityListState.done &&\r\n                            cityListState.data.length > 0 &&\r\n                            cityOptions.map((option) => {\r\n                              return (\r\n                                <Option value={option.value}>\r\n                                  {option.name}\r\n                                </Option>\r\n                              );\r\n                            })}\r\n                        </Select>\r\n                      </Form.Item>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div\r\n                    style={{\r\n                      marginTop: '12px',\r\n                    }}\r\n                  ></div>\r\n\r\n                  <div className='dubbleRowInputs'>\r\n                    <div className='dubbleRowInputs__item'>\r\n                      <Input\r\n                        label='Address'\r\n                        value={values.address1}\r\n                        name='address1'\r\n                        isError={\r\n                          (touched.address1 && errors.address1) ||\r\n                          (!isSubmitting &&\r\n                            addOrderState.error['error']['address1'])\r\n                        }\r\n                        errorString={\r\n                          (touched.address1 && errors.address1) ||\r\n                          (!isSubmitting &&\r\n                            addOrderState.error['error']['address1'])\r\n                        }\r\n                        onChange={(e: any) => {\r\n                          handleChange(e);\r\n                          setFieldTouched('address1');\r\n                        }}\r\n                      />\r\n                    </div>\r\n                    <div className='dubbleRowInputs__item'>\r\n                      <Input\r\n                        label='More specific address'\r\n                        value={values.address2}\r\n                        name='address2'\r\n                        isError={\r\n                          (touched.address2 && errors.address2) ||\r\n                          (!isSubmitting &&\r\n                            addOrderState.error['error']['address2'])\r\n                        }\r\n                        errorString={\r\n                          (touched.address2 && errors.address2) ||\r\n                          (!isSubmitting &&\r\n                            addOrderState.error['error']['address2'])\r\n                        }\r\n                        onChange={(e: any) => {\r\n                          handleChange(e);\r\n                          setFieldTouched('address2');\r\n                        }}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              )}\r\n\r\n              {current === 2 && (\r\n                <div\r\n                  style={{\r\n                    display: 'flex',\r\n                    justifyContent: 'center',\r\n                    marginTop: '40px',\r\n                    alignItems: 'center',\r\n                    flexDirection: 'column',\r\n                  }}\r\n                >\r\n                  <AddNewOrderSummary\r\n                    setProductList={setProductList}\r\n                    productList={productList}\r\n                  />\r\n\r\n                  <div\r\n                    style={{\r\n                      display: 'flex',\r\n                      flexDirection: 'column',\r\n                      justifyContent: 'center',\r\n                      alignItems: 'center',\r\n                    }}\r\n                  >\r\n                    <h3\r\n                      style={{\r\n                        marginTop: '20px',\r\n                        display: 'inline-block',\r\n                        textAlign: 'center',\r\n                      }}\r\n                      className='addOrderContainer-sectionTitle'\r\n                    >\r\n                      <span>\r\n                        <CarOutlined />\r\n                      </span>\r\n                      Delivery Region List ({selectedCityValue})\r\n                    </h3>\r\n\r\n                    {regionDeliveryCharge && regionDeliveryCharge.length > 0 ? (\r\n                      <>\r\n                        <Radio.Group\r\n                          style={{\r\n                            display: 'flex',\r\n                            justifyContent: 'center',\r\n                            flexWrap: 'wrap',\r\n                          }}\r\n                          value={deliveryRegionName}\r\n                          defaultValue={deliveryRegionName}\r\n                          name='radiogroup'\r\n                        >\r\n                          {regionDeliveryCharge.map((deliveryRegionItem) => {\r\n                            return (\r\n                              <div\r\n                                onClick={() =>\r\n                                  handleDeviliveryRegionChange(\r\n                                    deliveryRegionItem._id\r\n                                  )\r\n                                }\r\n                                className='deliveryRegionLabelContainer'\r\n                              >\r\n                                <div className='deliveryRegionLabelContainer__radio'>\r\n                                  <Radio value={deliveryRegionItem._id}></Radio>\r\n                                </div>\r\n                                <div className='deliveryRegionLabelContainer__info'>\r\n                                  <h3>{deliveryRegionItem.name}</h3>\r\n                                  <h4>\r\n                                    <span>\r\n                                      <CarOutlined />\r\n                                    </span>\r\n                                    {deliveryRegionItem.pickUpLocation}\r\n                                  </h4>\r\n                                  <h4>\r\n                                    <span>\r\n                                      <ClockCircleOutlined />\r\n                                    </span>\r\n                                    {deliveryRegionItem.time}\r\n                                  </h4>\r\n                                </div>\r\n                              </div>\r\n                            );\r\n                          })}\r\n                        </Radio.Group>\r\n                      </>\r\n                    ) : (\r\n                      <>\r\n                        <h4\r\n                          style={{\r\n                            textAlign: 'center',\r\n                            color: '#777',\r\n                            marginTop: '50px',\r\n                          }}\r\n                        >\r\n                          Delivery not found\r\n                        </h4>\r\n                      </>\r\n                    )}\r\n                  </div>\r\n\r\n                  <div\r\n                    style={{\r\n                      display: 'flex',\r\n                      marginTop: '40px',\r\n                      marginBottom: '50px',\r\n                    }}\r\n                  >\r\n                    <Button\r\n                      loading={addOrderState.isLoading}\r\n                      style={{\r\n                        marginTop: '10px',\r\n                        marginLeft: '15px',\r\n                      }}\r\n                      className='btnPrimaryClassNameoutline-blue'\r\n                      onClick={(e: any) => handleSubmit(e)}\r\n                    >\r\n                      Place Order\r\n                      <CaretRightOutlined />\r\n                    </Button>\r\n                  </div>\r\n                </div>\r\n              )}\r\n\r\n              <div\r\n                style={{\r\n                  display: 'flex',\r\n                  justifyContent: 'space-between',\r\n                }}\r\n              >\r\n                {current > 0 && (\r\n                  <Button\r\n                    style={{ marginRight: '15px', marginTop: '10px' }}\r\n                    // type=\"primary\"\r\n                    className='btnPrimaryClassNameoutline'\r\n                    type='primary'\r\n                    onClick={() => prev()}\r\n                  >\r\n                    <CaretLeftOutlined /> Previous\r\n                  </Button>\r\n                )}\r\n\r\n                {current < steps.length - 1 && (\r\n                  <>\r\n                    <div>\r\n                      <Button\r\n                        style={{\r\n                          marginTop: '10px',\r\n                        }}\r\n                        className='btnPrimaryClassNameoutline'\r\n                        type='primary'\r\n                        onClick={() => {\r\n                          if (current === 1) {\r\n                            setCurrent(2);\r\n                          } else {\r\n                            next();\r\n                          }\r\n                        }}\r\n                      >\r\n                        Next\r\n                        <CaretRightOutlined />\r\n                      </Button>\r\n\r\n                      {/* {current === 1 && <Button\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tmarginTop: '10px',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tmarginLeft: '15px'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='btnPrimaryClassNameoutline'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"primary\" onClick={() => setCurrent(2)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tUse different address< CaretRightOutlined />\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t\t\t\t\t} */}\r\n                    </div>\r\n                  </>\r\n                )}\r\n\r\n                {/* {current === steps.length - 1 && (\r\n\t\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\t\t\tmarginTop: '10px',\r\n\t\t\t\t\t\t\t\t\t\t\t\tmarginLeft: '15px'\r\n\t\t\t\t\t\t\t\t\t\t\t}}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\tclassName='btnPrimaryClassNameoutline'\r\n\t\t\t\t\t\t\t\t\t\t\ttype=\"primary\" onClick={(e: any) => handleSubmit(e)}\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\tPlace Order\r\n\t\t\t\t\t\t\t\t\t\t\t<CaretRightOutlined />\r\n\r\n\t\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t\t)} */}\r\n              </div>\r\n\r\n              {/* <div className='addOrderContainer__container-left'>\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className='addOrderContainer__container-right'>\r\n\t\t\t\t\t\t\t\t\t<AddNewOrderSummary />\r\n\t\t\t\t\t\t\t\t</div> */}\r\n            </div>\r\n          </div>\r\n        </>\r\n      )}\r\n    </Formik>\r\n  );\r\n};\r\n\r\nexport default AddNewOrder;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Modal, Select, notification, Form, Empty, Button } from 'antd';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { CheckCircleOutlined, InfoCircleOutlined } from '@ant-design/icons';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport { useHandleFetch } from '../../hooks';\r\nimport OrderInvoice from \"./OrderInvoice.jsx\";\r\nimport SelectProducts from \"./OrderProductIds\";\r\nimport SelectedProductItems from \"../productBundle/SelectedProductItems\";\r\nimport TextArea from '../../components/Field/TextArea';\r\n\r\nconst { Option } = Select;\r\n\r\n\r\nconst validationSchema = Yup.object().shape({});\r\n\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Order Updated',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n    });\r\n};\r\n\r\n\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n    notification.error({\r\n        message: message || 'Something Went Wrong',\r\n        description: '',\r\n        icon: <InfoCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst initialValues = {\r\n    summary: '',\r\n    note: ''\r\n}\r\n\r\ninterface Props {\r\n    customer: any;\r\n    setTagEditVisible: any;\r\n    tagEditVisible: any;\r\n    setOrderNotes?:any; \r\n    orderNotes?:any; \r\n}\r\n\r\nconst QuickEdit = ({ customer, setTagEditVisible, tagEditVisible, setOrderNotes, orderNotes }: Props) => {\r\n    const [updateOrderState, handleUpdateOrderFetch] = useHandleFetch({}, 'addOrderNote');\r\n\r\n    const handleSubmit = async (values: any, actions: any) => {\r\n        console.log('orderValues',values); \r\n        \r\n        const addRegionRes = await handleUpdateOrderFetch({\r\n            body: {\r\n                note: values.note,\r\n                summary: values.summary,\r\n                order: customer.id,\r\n            },\r\n        });\r\n\r\n        \r\n\r\n        // @ts-ignore\r\n        if (addRegionRes && addRegionRes.status === 'ok') {\r\n            openSuccessNotification('Order Note added');\r\n            // @ts-ignore\r\n            setOrderNotes([{...addRegionRes},...orderNotes])\r\n            setTagEditVisible(false)\r\n        }\r\n        else {\r\n            openErrorNotification();\r\n        }\r\n\r\n        actions.setSubmitting(false);\r\n\r\n    };\r\n\r\n\r\n    const handleCancel = (e: any) => {\r\n        setTagEditVisible(false);\r\n    };\r\n\r\n    return (\r\n        <Formik\r\n            onSubmit={(values, actions) => handleSubmit(values, actions)}\r\n            validationSchema={validationSchema}\r\n            validateOnBlur={false}\r\n            enableReinitialize={true}\r\n            initialValues={\r\n                { ...initialValues }\r\n            }\r\n        >\r\n            {({\r\n                handleChange,\r\n                values,\r\n                handleSubmit,\r\n                errors,\r\n                isValid,\r\n                isSubmitting,\r\n                touched,\r\n                handleBlur,\r\n                setFieldTouched,\r\n                handleReset,\r\n            }) => (\r\n                    <>\r\n                        <Modal\r\n                            title=\"Add Order Note\"\r\n                            visible={tagEditVisible}\r\n                            onOk={(e: any) => handleSubmit(e)}\r\n                            onCancel={handleCancel}\r\n                            okText='Create'\r\n                            okButtonProps={{\r\n                                loading: isSubmitting,\r\n                                htmlType: \"submit\",\r\n                                // disabled: getisSubmitButtonDisabled(values, isValid)\r\n                            }}\r\n                            bodyStyle={{\r\n                                margin: '0',\r\n                                padding: '10px'\r\n                            }}\r\n                        >\r\n                            <TextArea\r\n                                rows={4}\r\n\t\t\t\t\t\t\t\tlabel='Note'\r\n\t\t\t\t\t\t\t\tvalue={values.note}\r\n\t\t\t\t\t\t\t\tname='note'\r\n\t\t\t\t\t\t\t\tisError={(touched.note && errors.note) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateOrderState.error['error']['note'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.note && errors.note) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateOrderState.error['error']['note'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('note');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n                            <TextArea\r\n                                rows={2}\r\n\t\t\t\t\t\t\t\tlabel='Summary'\r\n\t\t\t\t\t\t\t\tvalue={values.summary}\r\n\t\t\t\t\t\t\t\tname='summary'\r\n\t\t\t\t\t\t\t\tisError={(touched.summary && errors.summary) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateOrderState.error['error']['summary'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.summary && errors.summary) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateOrderState.error['error']['summary'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('summary');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n                        </Modal>\r\n                    </>\r\n                )}\r\n        </Formik>\r\n    );\r\n};\r\n\r\n\r\nexport default QuickEdit;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Modal, Select, notification, Form, Empty, Button } from 'antd';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { CheckCircleOutlined, InfoCircleOutlined } from '@ant-design/icons';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport { useHandleFetch } from '../../hooks';\r\nimport OrderInvoice from \"./OrderInvoice.jsx\";\r\nimport SelectProducts from \"./OrderProductIds\";\r\nimport SelectedProductItems from \"../productBundle/SelectedProductItems\";\r\nimport TextArea from '../../components/Field/TextArea';\r\n\r\nconst { Option } = Select;\r\n\r\n\r\nconst validationSchema = Yup.object().shape({});\r\n\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Order Note Updated',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n    });\r\n};\r\n\r\n\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n    notification.error({\r\n        message: message || 'Something Went Wrong',\r\n        description: '',\r\n        icon: <InfoCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst initialValues = {\r\n    summary: '',\r\n    note: ''\r\n}\r\n\r\ninterface Props {\r\n    customer: any;\r\n    setTagEditVisible: any;\r\n    tagEditVisible: any;\r\n    setOrderNotes?:any; \r\n    orderNotes?:any; \r\n    activeNote?:any; \r\n}\r\n\r\nconst QuickEdit = ({ customer, setTagEditVisible, tagEditVisible, setOrderNotes, orderNotes,activeNote }: Props) => {\r\n    const [updateOrderState, handleUpdateOrderFetch] = useHandleFetch({}, 'updateOrderNote');\r\n\r\n    const handleSubmit = async (values: any, actions: any) => {\r\n        console.log('orderValues',values); \r\n        \r\n        const addRegionRes = await handleUpdateOrderFetch({\r\n            urlOptions: {\r\n                placeHolders: {\r\n                    id: activeNote._id\r\n                }\r\n            }, \r\n            body: {\r\n                note: values.note,\r\n                summary: values.summary,\r\n                order: customer.id,\r\n            },\r\n        });\r\n\r\n        \r\n\r\n        // @ts-ignore\r\n        if (addRegionRes && addRegionRes.status === 'ok') {\r\n            openSuccessNotification();\r\n            const positionInTag = () => {\r\n\t\t\t\treturn orderNotes.map(item => item._id).indexOf(activeNote._id);\r\n\t\t\t}\r\n\r\n\t\t\tconst index = positionInTag();\r\n\r\n\t\t\t// @ts-ignore\r\n\t\t\tconst updatedItem = Object.assign({}, orderNotes[index], { ...addRegionRes, _id: activeNote._id });\r\n\t\t\tconst updateTagList = [...orderNotes.slice(0, index), updatedItem, ...orderNotes.slice(index + 1)];\r\n\t\t\tsetOrderNotes(updateTagList);\r\n            setTagEditVisible(false)\r\n\r\n        }\r\n        else {\r\n            openErrorNotification();\r\n        }\r\n\r\n        actions.setSubmitting(false);\r\n\r\n    };\r\n\r\n\r\n    const handleCancel = (e: any) => {\r\n        setTagEditVisible(false);\r\n    };\r\n\r\n    return (\r\n        <Formik\r\n            onSubmit={(values, actions) => handleSubmit(values, actions)}\r\n            validationSchema={validationSchema}\r\n            validateOnBlur={false}\r\n            enableReinitialize={true}\r\n            initialValues={\r\n                { ...initialValues, ...activeNote }\r\n            }\r\n        >\r\n            {({\r\n                handleChange,\r\n                values,\r\n                handleSubmit,\r\n                errors,\r\n                isValid,\r\n                isSubmitting,\r\n                touched,\r\n                handleBlur,\r\n                setFieldTouched,\r\n                handleReset,\r\n            }) => (\r\n                    <>\r\n                        <Modal\r\n                            title=\"Update Order Note\"\r\n                            visible={tagEditVisible}\r\n                            onOk={(e: any) => handleSubmit(e)}\r\n                            onCancel={handleCancel}\r\n                            okText='Update'\r\n                            okButtonProps={{\r\n                                loading: isSubmitting,\r\n                                htmlType: \"submit\",\r\n                                // disabled: getisSubmitButtonDisabled(values, isValid)\r\n                            }}\r\n                            bodyStyle={{\r\n                                margin: '0',\r\n                                padding: '10px'\r\n                            }}\r\n                        >\r\n                            <TextArea\r\n                                rows={4}\r\n\t\t\t\t\t\t\t\tlabel='Note'\r\n\t\t\t\t\t\t\t\tvalue={values.note}\r\n\t\t\t\t\t\t\t\tname='note'\r\n\t\t\t\t\t\t\t\tisError={(touched.note && errors.note) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateOrderState.error['error']['note'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.note && errors.note) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateOrderState.error['error']['note'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('note');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n                            <TextArea\r\n                                rows={2}\r\n\t\t\t\t\t\t\t\tlabel='Summary'\r\n\t\t\t\t\t\t\t\tvalue={values.summary}\r\n\t\t\t\t\t\t\t\tname='summary'\r\n\t\t\t\t\t\t\t\tisError={(touched.summary && errors.summary) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateOrderState.error['error']['summary'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.summary && errors.summary) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateOrderState.error['error']['summary'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('summary');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n                        </Modal>\r\n                    </>\r\n                )}\r\n        </Formik>\r\n    );\r\n};\r\n\r\n\r\nexport default QuickEdit;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useParams, useHistory } from 'react-router';\r\n\r\n// import hooks\r\nimport { useHandleFetch } from '../../hooks';\r\n\r\n// import lib\r\nimport {\r\n  FileOutlined,\r\n  InboxOutlined,\r\n  RadiusUpleftOutlined,\r\n  RadiusUprightOutlined,\r\n  RadiusBottomleftOutlined,\r\n  RadiusBottomrightOutlined,\r\n  PlusOutlined,\r\n  DeleteOutlined,\r\n  EditOutlined,\r\n  CheckCircleOutlined,\r\n  InfoCircleOutlined,\r\n  EyeOutlined,\r\n} from '@ant-design/icons';\r\n\r\nimport {\r\n  Skeleton,\r\n  Empty,\r\n  Popconfirm,\r\n  Upload,\r\n  message,\r\n  Switch,\r\n  Select,\r\n  Button,\r\n  notification,\r\n  Table,\r\n  Space,\r\n  Input as CoolInput,\r\n  Tooltip,\r\n  Modal,\r\n} from 'antd';\r\n\r\n// import components\r\nimport { DataTableSkeleton } from '../../components/Placeholders';\r\nimport OrderEdit from './OrderEdit';\r\nimport OrderNoteEdit from './OrderNoteEdit';\r\nimport OrderInvoice from './OrderInvoice';\r\nimport { OrderDetail } from '.';\r\n\r\n// import state\r\nimport { isAccess } from '../../utils';\r\nimport { connect } from 'react-redux';\r\n\r\nconst { Column, ColumnGroup } = Table;\r\nconst { Search } = CoolInput;\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n  notification.success({\r\n    message: message || 'Order Updated',\r\n    description: '',\r\n    icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n  });\r\n};\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n  notification.error({\r\n    message: message || 'Something Went Wrong',\r\n    description: '',\r\n    icon: <InfoCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n  });\r\n};\r\n\r\ninterface Props {\r\n  roles?: any;\r\n}\r\n\r\nconst NewBrandDetail = ({ roles }: Props) => {\r\n  const [tagDetailState, handleTagDetailFetch] = useHandleFetch(\r\n    {},\r\n    'orderDetail'\r\n  );\r\n  const [orderDetailNotesState, handleOrderDetailNotesFetch] = useHandleFetch(\r\n    {},\r\n    'getOrderNote'\r\n  );\r\n  const [tagProductsState, handleTagProductsFetch] = useHandleFetch(\r\n    {},\r\n    'tagProducts'\r\n  );\r\n  const [deleteOrderNoteState, handleDeleteOrderNoteFetch] = useHandleFetch(\r\n    {},\r\n    'deleteOrderNote'\r\n  );\r\n  const [tagEditVisible, setTagEditVisible] = useState(false);\r\n  const [activeOrderNote, setActiveOrderNote] = useState({});\r\n  const [isOrderNoteEdit, setIsOrderNoteEdit] = useState(false);\r\n  const [isInvoiceShow, setIsInvoiceShow] = useState(false);\r\n\r\n  console.log('orderDetailNotesState', orderDetailNotesState);\r\n\r\n  const params = useParams();\r\n  const history = useHistory();\r\n  const tagId = params['id'];\r\n  const [orderNotes, setOrderNotes] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const getBrandDetail = async () => {\r\n      await handleTagDetailFetch({\r\n        urlOptions: {\r\n          placeHolders: {\r\n            id: tagId,\r\n          },\r\n        },\r\n      });\r\n\r\n      const orderNotes = await handleOrderDetailNotesFetch({\r\n        urlOptions: {\r\n          placeHolders: {\r\n            id: tagId,\r\n          },\r\n        },\r\n      });\r\n\r\n      // @ts-ignore\r\n      if (orderNotes) {\r\n        // @ts-ignore\r\n        setOrderNotes(orderNotes);\r\n      }\r\n    };\r\n    getBrandDetail();\r\n  }, [tagId]);\r\n\r\n  console.log('orderDetailState', tagDetailState);\r\n\r\n  useEffect(() => {\r\n    const getTagProducts = async () => {\r\n      await handleTagProductsFetch({\r\n        urlOptions: {\r\n          placeHolders: {\r\n            id: tagId,\r\n          },\r\n        },\r\n      });\r\n    };\r\n\r\n    getTagProducts();\r\n  }, [tagId]);\r\n\r\n  console.log('orderDetailState', tagDetailState);\r\n\r\n  console.log('brandParams', params);\r\n\r\n  const handleDeleteOrderNote = async (id) => {\r\n    const res = await handleDeleteOrderNoteFetch({\r\n      urlOptions: {\r\n        placeHolders: {\r\n          id: id,\r\n        },\r\n      },\r\n    });\r\n\r\n    // @ts-ignore\r\n    if (res && res.status === 'ok') {\r\n      const newOrderNoteList =\r\n        orderNotes && orderNotes.filter((item) => item._id !== id);\r\n      setOrderNotes(newOrderNoteList);\r\n      openSuccessNotification('Order note deleted!');\r\n    }\r\n  };\r\n\r\n  console.log(\r\n    \"tagDetailState.data['products']\",\r\n    tagDetailState.data['products']\r\n  );\r\n\r\n  const getCover = (record: any) => {\r\n    if (record.cover) {\r\n      return record.cover;\r\n    } else return '';\r\n  };\r\n\r\n\r\n  return (\r\n    <div className='brandDetailContainer'>\r\n      <OrderNoteEdit\r\n        setOrderNotes={setOrderNotes}\r\n        orderNotes={orderNotes}\r\n        tagEditVisible={isOrderNoteEdit}\r\n        setTagEditVisible={setIsOrderNoteEdit}\r\n        customer={tagDetailState.data}\r\n        activeNote={activeOrderNote}\r\n      />\r\n      <div className='brandDetailContainer__heading'>\r\n        <h3>Order Detail</h3>\r\n\r\n        {tagDetailState.done &&\r\n          tagDetailState.data &&\r\n          Object.keys(tagDetailState.data).length > 0 && (\r\n            <>\r\n              <div>\r\n                <OrderInvoice\r\n                  setShowInvoice={setIsInvoiceShow}\r\n                  showInvoice={isInvoiceShow}\r\n                  id={tagDetailState['data']['id']}\r\n                />\r\n                <OrderEdit\r\n                  setOrderNotes={setOrderNotes}\r\n                  orderNotes={orderNotes}\r\n                  tagEditVisible={tagEditVisible}\r\n                  setTagEditVisible={setTagEditVisible}\r\n                  customer={tagDetailState.data}\r\n                />\r\n                <Button\r\n                  onClick={() => setIsInvoiceShow(true)}\r\n                  type='link'\r\n                  icon={<EyeOutlined />}\r\n                >\r\n                  Generate Invoice\r\n                </Button>\r\n\r\n                {isAccess('postOrder', roles) && (\r\n                  <>\r\n                    <Button\r\n                      onClick={() => setTagEditVisible(true)}\r\n                      type='link'\r\n                      icon={<PlusOutlined />}\r\n                    >\r\n                      Add note\r\n                    </Button>\r\n                  </>\r\n                )}\r\n              </div>\r\n            </>\r\n          )}\r\n      </div>\r\n      <Skeleton paragraph={{ rows: 2 }} loading={tagDetailState.isLoading}>\r\n        {tagDetailState.done &&\r\n          tagDetailState.data &&\r\n          !(Object.keys(tagDetailState.data).length > 0) && (\r\n            <Empty\r\n              description='No Order found'\r\n              image={Empty.PRESENTED_IMAGE_SIMPLE}\r\n            />\r\n          )}\r\n\r\n        {tagDetailState.done &&\r\n          tagDetailState.data &&\r\n          Object.keys(tagDetailState.data).length > 0 && (\r\n            <>\r\n              <div\r\n                style={{\r\n                  display: 'flex',\r\n                }}\r\n              >\r\n                <div\r\n                  style={{\r\n                    flex: 1,\r\n                    marginRight: '20px',\r\n                  }}\r\n                  className='brandDetailContainer__header'\r\n                >\r\n                  <div className='brandDetailContainer__header-info'>\r\n                    {tagDetailState.data['shortCode'] && (\r\n                        <h2>#{tagDetailState.data['shortCode']}</h2>\r\n                    )}\r\n                 \r\n                    <h2>{tagDetailState.data['name']}</h2>\r\n                    <h3>{tagDetailState.data['description']}</h3>\r\n                    {tagDetailState.data['url'] && (\r\n                      <h3>\r\n                        URL:\r\n                        <span>{tagDetailState.data['url']}</span>\r\n                      </h3>\r\n                    )}\r\n\r\n                    {tagDetailState['data']['country'] && (\r\n                      <h3>\r\n                        COUNTRY:\r\n                        <span>{tagDetailState['data']['country']}</span>\r\n                      </h3>\r\n                    )}\r\n\r\n                    {tagDetailState['data']['city'] && (\r\n                      <h3>\r\n                        CITY:\r\n                        <span>{tagDetailState['data']['city']}</span>\r\n                      </h3>\r\n                    )}\r\n\r\n                    {tagDetailState['data']['address1'] && (\r\n                      <h3>\r\n                        ADDRESS:\r\n                        <span>{tagDetailState['data']['address1']}</span>\r\n                      </h3>\r\n                    )}\r\n\r\n                    {tagDetailState['data']['phone'] && (\r\n                      <h3>\r\n                        PHONE:\r\n                        <span>{tagDetailState['data']['phone']}</span>\r\n                      </h3>\r\n                    )}\r\n\r\n                    {tagDetailState['data']['email'] && (\r\n                      <h3>\r\n                        EMAIL:\r\n                        <span>{tagDetailState['data']['email']}</span>\r\n                      </h3>\r\n                    )}\r\n\r\n                    {tagDetailState['data']['paymentMethod'] && (\r\n                      <h3>\r\n                        PAYMENT METHOD:\r\n                        <span>{tagDetailState['data']['paymentMethod']}</span>\r\n                      </h3>\r\n                    )}\r\n\r\n                    {tagDetailState['data']['paymentStatus'] && (\r\n                      <h3>\r\n                        PAYMENT STATUS:\r\n                        <span>{tagDetailState['data']['paymentStatus']}</span>\r\n                      </h3>\r\n                    )}\r\n\r\n                    {tagDetailState['data']['status'] && (\r\n                      <h3>\r\n                        ORDER STATUS:\r\n                        <span>{tagDetailState['data']['status']}</span>\r\n                      </h3>\r\n                    )}\r\n\r\n                    {/* \r\n                            {tagDetailState['data']['deliveryCharge'] && (\r\n                                <h3>\r\n                                    DELIVERY CHARGE:\r\n                                    <span>\r\n                                        {tagDetailState['data']['deliveryCharge']}\r\n                                    </span>\r\n                                </h3>\r\n                            )} */}\r\n\r\n                    {tagDetailState['data']['deliveryName'] && (\r\n                      <h3>\r\n                        DELIVERY LOCATION:\r\n                        <span>\r\n                          {`${tagDetailState['data']['deliveryName']}, ${tagDetailState['data']['deliveryPickUpLocation']}, ${tagDetailState['data']['deliveryCountryName']}`}\r\n                        </span>\r\n                      </h3>\r\n                    )}\r\n\r\n                    {tagDetailState['data']['total'] && (\r\n                      <h3>\r\n                        TOTAL ORDER PRICE:\r\n                        <span>{`${tagDetailState['data']['total']}`}</span>\r\n                      </h3>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n\r\n                <div\r\n                  style={{\r\n                    maxWidth: '35%',\r\n                    minWidth: '35%',\r\n                  }}\r\n                  className='brandDetailContainer__header'\r\n                >\r\n                  <div\r\n                    style={{\r\n                      width: '100%',\r\n                    }}\r\n                    className='brandDetailContainer__header-info'\r\n                  >\r\n                    <h2>Notes</h2>\r\n\r\n                    <div\r\n                      style={{\r\n                        width: '100%',\r\n                      }}\r\n                    >\r\n                      {orderDetailNotesState.done &&\r\n                        orderNotes &&\r\n                        orderNotes.length > 0 &&\r\n                        orderNotes.map((noteItem: any) => {\r\n                          return (\r\n                            <div className='OrderNoteItem'>\r\n                              <div className='OrderNoteItem__action'>\r\n                                {/* <span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<EditOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</span> */}\r\n                                <span\r\n                                  className='OrderNoteItem__action-edit'\r\n                                  onClick={() => {\r\n                                    setActiveOrderNote(noteItem);\r\n                                    setIsOrderNoteEdit(true);\r\n                                  }}\r\n                                >\r\n                                  <EditOutlined />\r\n                                </span>\r\n                                <span\r\n                                  className='OrderNoteItem__action-delete'\r\n                                  onClick={() =>\r\n                                    handleDeleteOrderNote(noteItem._id)\r\n                                  }\r\n                                >\r\n                                  <DeleteOutlined />\r\n                                </span>\r\n                              </div>\r\n                              <h4>\r\n                                <span>NOTE:</span>\r\n                                {` ${noteItem.note}`}\r\n                              </h4>\r\n\r\n                              {noteItem.summary && (\r\n                                <>\r\n                                  <h4>\r\n                                    <span>SUMMARY :</span>\r\n\r\n                                    {` ${noteItem.summary}`}\r\n                                  </h4>\r\n                                </>\r\n                              )}\r\n                            </div>\r\n                          );\r\n                        })}\r\n\r\n                      {orderDetailNotesState.done &&\r\n                        orderNotes &&\r\n                        !(Object.keys(orderNotes).length > 0) && (\r\n                          <>\r\n                            <div\r\n                              style={{\r\n                                width: '100%',\r\n                                margin: '100px 0',\r\n                                display: 'flex',\r\n                                justifyContent: 'center',\r\n                              }}\r\n                            >\r\n                              <Empty\r\n                                description='No Notes found'\r\n                                image={Empty.PRESENTED_IMAGE_SIMPLE}\r\n                              />\r\n                            </div>\r\n                          </>\r\n                        )}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                <div></div>\r\n              </div>\r\n            </>\r\n          )}\r\n      </Skeleton>\r\n\r\n      {tagDetailState.done &&\r\n        tagDetailState.data &&\r\n        Object.keys(tagDetailState.data).length > 0 && (\r\n          <>\r\n            <div className='brandDetailContainer__heading'>\r\n              <h3>Products</h3>\r\n            </div>\r\n          </>\r\n        )}\r\n\r\n      <div className='brandDetailContainer__body'>\r\n        {tagDetailState.done &&\r\n          tagDetailState.data &&\r\n          Object.keys(tagDetailState.data).length > 0 &&\r\n          tagDetailState.data['products'] &&\r\n          !(tagDetailState.data['products'].length > 0) && (\r\n            <div\r\n              style={{\r\n                marginTop: '100px',\r\n              }}\r\n            >\r\n              <Empty\r\n                description='No Products exists for this order'\r\n                image={Empty.PRESENTED_IMAGE_SIMPLE}\r\n              />\r\n            </div>\r\n          )}\r\n\r\n        {tagDetailState.done &&\r\n          tagDetailState.data &&\r\n          Object.keys(tagDetailState.data).length > 0 &&\r\n          tagDetailState.data['products'] &&\r\n          tagDetailState.data['products'].length > 0 && (\r\n            <>\r\n              <Table\r\n                style={{\r\n                  paddingTop: '10px',\r\n                  borderRadius: '5px !important',\r\n                  overflow: 'hidden',\r\n                  boxShadow:\r\n                    '0 0.125rem 0.625rem rgba(227, 231, 250, 0.3), 0 0.0625rem 0.125rem rgba(206, 220, 233, 0.4)',\r\n                }}\r\n                size='small'\r\n                dataSource={tagDetailState.data['products']}\r\n                tableLayout={'auto'}\r\n                onHeaderRow={(column) => {\r\n                  return {\r\n                    style: {\r\n                      color: 'red !important',\r\n                    },\r\n                  };\r\n                }}\r\n              >\r\n                <Column\r\n                  title=''\r\n                  dataIndex='cover'\r\n                  key='id'\r\n                  width={'80px'}\r\n                  className='classnameofthecolumn'\r\n                  render={(cover, record: any) => (\r\n                    <>\r\n                    <div\r\n                      className='listCoverImage'\r\n                      onClick={() => {\r\n                        history.push(`/admin/product/${record.id}`);\r\n                      }}\r\n                    >\r\n                      <img src={getCover(record)} alt='' />\r\n                    </div>\r\n\r\n         \r\n                    </>\r\n                  )}\r\n                />\r\n\r\n                <Column\r\n                  title='Name'\r\n                  dataIndex='name'\r\n                  key='id'\r\n                  className='classnameofthecolumn'\r\n                  render={(text, record: any) => (\r\n                    <>\r\n                      <h4\r\n                        onClick={() => {\r\n                          history.push(`/admin/product/${record.id}`);\r\n                        }}\r\n                        style={{\r\n                          fontWeight: 400,\r\n                          color: '#555',\r\n                          cursor: 'pointer',\r\n                        }}\r\n                      >\r\n                        {text}\r\n                      </h4>\r\n                    </>\r\n                  )}\r\n                />\r\n\r\n                <Column\r\n                  title='stock'\r\n                  dataIndex='inStock'\r\n                  key='id'\r\n                  className='classnameofthecolumn'\r\n                  render={(text, record: any) => (\r\n                    <>\r\n                      <h4\r\n                        style={{\r\n                          fontWeight: 400,\r\n                          color: '#555',\r\n                          cursor: 'pointer',\r\n                        }}\r\n                      >\r\n                        {text ? 'inStock' : 'out of stock'}\r\n                      </h4>\r\n                    </>\r\n                  )}\r\n                />\r\n\r\n                <Column\r\n                  title='Unit Price'\r\n                  dataIndex='unitPrice'\r\n                  key='id'\r\n                  className='classnameofthecolumn'\r\n                />\r\n\r\n                <Column\r\n                  title='Quantity'\r\n                  dataIndex='quantity'\r\n                  key='id'\r\n                  className='classnameofthecolumn'\r\n                />\r\n\r\n                <Column\r\n                  title='Total Price'\r\n                  dataIndex='price'\r\n                  key='id'\r\n                  className='classnameofthecolumn'\r\n                />\r\n              </Table>\r\n            </>\r\n          )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  roles: state.globalState,\r\n});\r\n\r\n// @ts-ignore\r\nexport default connect(mapStateToProps, null)(NewBrandDetail);\r\n","import React,{useState, useEffect} from 'react'\r\n\r\n\r\n// import hooks\r\nimport { useHandleFetch } from \"../../../hooks\";\r\n\r\n// import components\r\nimport { DataTableSkeleton } from \"../../../components/Placeholders\";\r\n\r\n// \r\n\r\n\r\n// import lib\r\nimport {\r\n    ResponsiveContainer,\r\n    AreaChart,\r\n    CartesianGrid,\r\n    XAxis,\r\n    YAxis,\r\n    Tooltip,\r\n    Legend,\r\n    Area,\r\n    Line\r\n} from \"recharts\";\r\n\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {\r\n    FileOutlined,\r\n    InboxOutlined,\r\n    RadiusUpleftOutlined,\r\n    RadiusUprightOutlined,\r\n    RadiusBottomleftOutlined,\r\n    RadiusBottomrightOutlined,\r\n    PlusOutlined,\r\n    DeleteOutlined,\r\n    EditOutlined,\r\n    CheckCircleOutlined,\r\n    CalendarOutlined\r\n} from '@ant-design/icons';\r\n\r\nimport { Skeleton, Empty, Popconfirm, Upload, message, Switch, Select, Button, notification, Table, Space, Input as CoolInput, Modal, Spin } from 'antd';\r\n\r\n\r\nconst { Option } = Select;\r\n\r\nconst { Column, ColumnGroup } = Table;\r\n\r\n\r\n\r\ninterface Props {\r\n    \r\n}\r\n\r\nconst localOptions = [\r\n    {\r\n        value: 'category',\r\n        name: 'Category'\r\n    },\r\n     {\r\n        value: 'product',\r\n        name: 'Product'\r\n    }\r\n\r\n]\r\n\r\n\r\n\r\nconst MONTHS = [\r\n    \"Jan\",\r\n    \"Feb\",\r\n    \"Mar\",\r\n    \"Apr\",\r\n    \"May\",\r\n    \"Jun\",\r\n    \"Jul\",\r\n    \"Aug\",\r\n    \"Sep\",\r\n    \"Oct\",\r\n    \"Nov\",\r\n    \"Dec\"\r\n];\r\n\r\nconst date = new Date();\r\nconst thisMonth = MONTHS[date.getMonth()]\r\n\r\n\r\nexport const getMonthNameByOrder = (order: number): string | undefined =>\r\n    `${order}${thisMonth}`;\r\n\r\n\r\nexport const TooltipContainerStyles = {\r\n    border: 0,\r\n    borderRadius: \"8px\",\r\n    fontSize: 14,\r\n    boxShadow: \"2px 2px 5px 3px rgba(0,0,0,0.15)\"\r\n};\r\n\r\n\r\n\r\n\r\n\r\nconst PageVisits = (props: Props) => {\r\n    const history = useHistory(); \r\n  \r\n    const [orderAnalyticsVisitsState, handleOrderAnalyticsVisitsStateFetch] = useHandleFetch({}, 'getAnalyticsOrders');\r\n    const [orderData, setorderData] = useState([]);\r\n\r\n\r\n    useEffect(()=>{\r\n        const getAnalyticsOrders = async () => {\r\n\r\n            const ordersDataRes =  await handleOrderAnalyticsVisitsStateFetch({\r\n                urlOptions: {\r\n                    params: {\r\n                        metricType: 'dayOfMonth',\r\n                    }\r\n                }\r\n            }); \r\n\r\n           // @ts-ignore\r\n           if(ordersDataRes){\r\n            // @ts-ignore\r\n            setorderData(ordersDataRes);\r\n           }\r\n\r\n           };\r\n           getAnalyticsOrders(); \r\n\r\n    },[]); \r\n\r\n\r\n    console.log('orderAnalyticsVisitsState',orderAnalyticsVisitsState);\r\n\r\n\r\n\r\n\r\n    return (\r\n\r\n        <div className='overviewContainer__body-apiVisits'>\r\n        <div className='overviewContainer__body-apiVisits-header'>\r\n            <div className='overviewContainer__body-apiVisits-header-info'>\r\n                <h2>\r\n                    This Month\r\n                </h2>\r\n                <h3>\r\n                      Order report by days of month \r\n                </h3>\r\n            </div>\r\n        </div>\r\n\r\n        <div className='overviewContainer__body-body'>    \r\n        {orderAnalyticsVisitsState.isLoading && (\r\n            <>\r\n            <div style={{\r\n                display:'flex',\r\n                justifyContent:'center',\r\n                alignItems:\"center\",\r\n                margin:\"100px 0\"\r\n            }}>\r\n            <Spin\r\n            size='large'\r\n             />\r\n                </div>\r\n\r\n            </>\r\n        )}\r\n\r\n        \r\n             {orderAnalyticsVisitsState.done && orderData && orderData.length > 0 && (\r\n                    <ResponsiveContainer width=\"100%\" height={300}>\r\n                    <AreaChart data={orderData} fontSize={12}>\r\n                        <defs>\r\n                            <linearGradient id=\"rainGradient\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\r\n                                <stop offset=\"0%\" stopColor=\"#1890ff\" />\r\n                                <stop offset=\"100%\" stopColor=\"#3066BE22\" />\r\n                            </linearGradient>\r\n                        </defs>\r\n                        <CartesianGrid\r\n                            vertical={false}\r\n                            strokeDasharray=\"3 3\"\r\n                            stroke=\"#d6d9da\"\r\n                        />\r\n                        <XAxis \r\n                         dataKey={'dayOfMonth'} \r\n                         tickFormatter={getMonthNameByOrder}\r\n                         />\r\n                        <YAxis\r\n                            // unit=\"ml\"\r\n                            orientation=\"left\"\r\n                            width={20}\r\n                            axisLine={false}\r\n                            tickLine={false}\r\n                        />\r\n                        <Tooltip\r\n                            cursor={false}\r\n                            contentStyle={TooltipContainerStyles}\r\n                            formatter={(value, name) => [`${value}`, `${name}`]}\r\n                        />\r\n                        <Area\r\n                            dataKey=\"count\"\r\n                            name=\"Count\"\r\n                            type=\"basis\"\r\n                            fill=\"url(#rainGradient)\"\r\n                        />\r\n                    </AreaChart>\r\n                </ResponsiveContainer>\r\n               )}\r\n\r\n\r\n                {orderAnalyticsVisitsState.done && !(orderAnalyticsVisitsState.data.length > 0) && (\r\n                    <div style={{\r\n                        marginTop: '00px'\r\n                    }}>\r\n                        <Empty description={`No Visits for this week`} image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n                    </div>\r\n                )}\r\n\r\n            \r\n\r\n        </div>\r\n        <div className=\"overviewContainer__body-footer\">\r\n            <h3>\r\n                <span>\r\n                    <CalendarOutlined />\r\n                </span>\r\n\r\n                            In the last month\r\n                     </h3>\r\n        </div>\r\n\r\n    </div>\r\n\r\n    )\r\n}\r\n\r\nexport default PageVisits\r\n","import React,{useState, useEffect} from 'react'\r\n\r\n\r\n// import hooks\r\nimport { useHandleFetch } from \"../../../hooks\";\r\n\r\n// import components\r\nimport { DataTableSkeleton } from \"../../../components/Placeholders\";\r\n\r\n// \r\n\r\n\r\n// import lib\r\nimport {\r\n    ResponsiveContainer,\r\n    AreaChart,\r\n    CartesianGrid,\r\n    XAxis,\r\n    YAxis,\r\n    Tooltip,\r\n    Legend,\r\n    Area,\r\n    Line\r\n} from \"recharts\";\r\n\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {\r\n    FileOutlined,\r\n    InboxOutlined,\r\n    RadiusUpleftOutlined,\r\n    RadiusUprightOutlined,\r\n    RadiusBottomleftOutlined,\r\n    RadiusBottomrightOutlined,\r\n    PlusOutlined,\r\n    DeleteOutlined,\r\n    EditOutlined,\r\n    CheckCircleOutlined,\r\n    CalendarOutlined\r\n} from '@ant-design/icons';\r\n\r\nimport { Skeleton, Empty, Popconfirm, Upload, message, Switch, Select, Button, notification, Table, Space, Input as CoolInput, Modal, Spin } from 'antd';\r\n\r\n\r\nconst { Option } = Select;\r\n\r\nconst { Column, ColumnGroup } = Table;\r\n\r\n\r\n\r\ninterface Props {\r\n    \r\n}\r\n\r\nconst localOptions = [\r\n    {\r\n        value: 'category',\r\n        name: 'Category'\r\n    },\r\n     {\r\n        value: 'product',\r\n        name: 'Product'\r\n    }\r\n\r\n]\r\n\r\n\r\n\r\nconst WEEEK = [\r\n    \"Sat\",\r\n    \"Sun\",\r\n    \"Mon\",\r\n    \"Tues\",\r\n    \"Wed\",\r\n    \"Thur\",\r\n    \"Fri\"\r\n];\r\n\r\n\r\nexport const getWeekNameByOrder = (order: number): string | undefined =>\r\n    WEEEK[order - 1];\r\n\r\n\r\n\r\n\r\n\r\nexport const TooltipContainerStyles = {\r\n    border: 0,\r\n    borderRadius: \"8px\",\r\n    fontSize: 14,\r\n    boxShadow: \"2px 2px 5px 3px rgba(0,0,0,0.15)\"\r\n};\r\n\r\n\r\n\r\n\r\n\r\nconst PageVisits = (props: Props) => {\r\n    const history = useHistory(); \r\n  \r\n    const [orderAnalyticsVisitsState, handleOrderAnalyticsVisitsStateFetch] = useHandleFetch({}, 'getAnalyticsOrders');\r\n    const [orderData, setorderData] = useState([]);\r\n\r\n\r\n    useEffect(()=>{\r\n        const getAnalyticsOrders = async () => {\r\n\r\n            const ordersDataRes =  await handleOrderAnalyticsVisitsStateFetch({\r\n                urlOptions: {\r\n                    params: {\r\n                        metricType: 'dayOfWeek',\r\n                    }\r\n                }\r\n            }); \r\n\r\n           // @ts-ignore\r\n           if(ordersDataRes){\r\n            // @ts-ignore\r\n            setorderData(ordersDataRes);\r\n           }\r\n\r\n           };\r\n           getAnalyticsOrders(); \r\n\r\n    },[]); \r\n\r\n\r\n    console.log('orderAnalyticsVisitsState',orderAnalyticsVisitsState);\r\n\r\n\r\n\r\n\r\n    return (\r\n\r\n        <div className='overviewContainer__body-apiVisits'>\r\n        <div className='overviewContainer__body-apiVisits-header'>\r\n            <div className='overviewContainer__body-apiVisits-header-info'>\r\n                <h2>\r\n                    This Week\r\n                </h2>\r\n                <h3>\r\n                      Order report by days of week \r\n                </h3>\r\n            </div>\r\n        </div>\r\n\r\n        <div className='overviewContainer__body-body'>    \r\n        {orderAnalyticsVisitsState.isLoading && (\r\n            <>\r\n            <div style={{\r\n                display:'flex',\r\n                justifyContent:'center',\r\n                alignItems:\"center\",\r\n                margin:\"100px 0\"\r\n            }}>\r\n            <Spin\r\n            size='large'\r\n             />\r\n                </div>\r\n\r\n            </>\r\n        )}\r\n\r\n        \r\n{orderAnalyticsVisitsState.done && orderData && orderData.length > 0 && (\r\n                    <ResponsiveContainer width=\"100%\" height={300}>\r\n                    <AreaChart data={orderData} fontSize={12}>\r\n                        <defs>\r\n                            <linearGradient id=\"rainGradient\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\r\n                                <stop offset=\"0%\" stopColor=\"#1890ff\" />\r\n                                <stop offset=\"100%\" stopColor=\"#3066BE22\" />\r\n                            </linearGradient>\r\n                        </defs>\r\n                        <CartesianGrid\r\n                            vertical={false}\r\n                            strokeDasharray=\"3 3\"\r\n                            stroke=\"#d6d9da\"\r\n                        />\r\n                        <XAxis \r\n                         dataKey={'dayOfWeek'} \r\n                         tickFormatter={getWeekNameByOrder}\r\n                         />\r\n                        <YAxis\r\n                            // unit=\"ml\"\r\n                            orientation=\"left\"\r\n                            width={20}\r\n                            axisLine={false}\r\n                            tickLine={false}\r\n                        />\r\n                        <Tooltip\r\n                            cursor={false}\r\n                            contentStyle={TooltipContainerStyles}\r\n                            formatter={(value, name) => [`${value}`, `${name}`]}\r\n                        />\r\n                        <Area\r\n                            dataKey=\"count\"\r\n                            name=\"Count\"\r\n                            type=\"basis\"\r\n                            fill=\"url(#rainGradient)\"\r\n                        />\r\n                    </AreaChart>\r\n                </ResponsiveContainer>\r\n               )}\r\n\r\n\r\n                {orderAnalyticsVisitsState.done && !(orderAnalyticsVisitsState.data.length > 0) && (\r\n                    <div style={{\r\n                        marginTop: '00px'\r\n                    }}>\r\n                        <Empty description={`No Visits for this week`} image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n                    </div>\r\n                )}\r\n\r\n            \r\n\r\n        </div>\r\n        <div className=\"overviewContainer__body-footer\">\r\n            <h3>\r\n                <span>\r\n                    <CalendarOutlined />\r\n                </span>\r\n\r\n                            In the last month\r\n                     </h3>\r\n        </div>\r\n\r\n    </div>\r\n\r\n    )\r\n}\r\n\r\nexport default PageVisits\r\n","import React,{useState, useEffect} from 'react'\r\n\r\n\r\n// import hooks\r\nimport { useHandleFetch } from \"../../../hooks\";\r\n\r\n// import components\r\nimport { DataTableSkeleton } from \"../../../components/Placeholders\";\r\n\r\n// \r\n\r\n\r\n// import lib\r\nimport {\r\n    ResponsiveContainer,\r\n    AreaChart,\r\n    CartesianGrid,\r\n    XAxis,\r\n    YAxis,\r\n    Tooltip,\r\n    Legend,\r\n    Area,\r\n    Line\r\n} from \"recharts\";\r\n\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {\r\n    FileOutlined,\r\n    InboxOutlined,\r\n    RadiusUpleftOutlined,\r\n    RadiusUprightOutlined,\r\n    RadiusBottomleftOutlined,\r\n    RadiusBottomrightOutlined,\r\n    PlusOutlined,\r\n    DeleteOutlined,\r\n    EditOutlined,\r\n    CheckCircleOutlined,\r\n    CalendarOutlined\r\n} from '@ant-design/icons';\r\n\r\nimport { Skeleton, Empty, Popconfirm, Upload, message, Switch, Select, Button, notification, Table, Space, Input as CoolInput, Modal, Spin } from 'antd';\r\n\r\n\r\nconst { Option } = Select;\r\n\r\nconst { Column, ColumnGroup } = Table;\r\n\r\n\r\n\r\ninterface Props {\r\n    \r\n}\r\n\r\nconst localOptions = [\r\n    {\r\n        value: 'category',\r\n        name: 'Category'\r\n    },\r\n     {\r\n        value: 'product',\r\n        name: 'Product'\r\n    }\r\n\r\n]\r\n\r\n\r\n\r\nconst WEEEK = [\r\n    \"Sat\",\r\n    \"Sun\",\r\n    \"Mon\",\r\n    \"Tues\",\r\n    \"Wed\",\r\n    \"Thur\",\r\n    \"Fri\"\r\n];\r\n\r\n\r\nexport const getWeekNameByOrder = (order: number): string | undefined =>\r\n    WEEEK[order - 1];\r\n\r\nexport const TooltipContainerStyles = {\r\n    border: 0,\r\n    borderRadius: \"8px\",\r\n    fontSize: 14,\r\n    boxShadow: \"2px 2px 5px 3px rgba(0,0,0,0.15)\"\r\n};\r\n\r\n\r\nconst PageVisits = (props: Props) => {\r\n    const history = useHistory(); \r\n  \r\n    const [orderAnalyticsVisitsState, handleOrderAnalyticsVisitsStateFetch] = useHandleFetch({}, 'getAnalyticsOrders');\r\n    const [orderData, setorderData] = useState([]);\r\n\r\n\r\n    useEffect(()=>{\r\n        const getAnalyticsOrders = async () => {\r\n\r\n            const ordersDataRes =  await handleOrderAnalyticsVisitsStateFetch({\r\n                urlOptions: {\r\n                    params: {\r\n                        metricType: 'date',\r\n                    }\r\n                }\r\n            }); \r\n\r\n           // @ts-ignore\r\n           if(ordersDataRes){\r\n            // @ts-ignore\r\n            setorderData(ordersDataRes);\r\n           }\r\n\r\n           };\r\n           getAnalyticsOrders(); \r\n\r\n    },[]); \r\n\r\n\r\n    console.log('orderAnalyticsVisitsState',orderAnalyticsVisitsState);\r\n\r\n\r\n    return (\r\n\r\n        <div className='overviewContainer__body-apiVisits'>\r\n        <div className='overviewContainer__body-apiVisits-header'>\r\n            <div className='overviewContainer__body-apiVisits-header-info'>\r\n                <h2>\r\n                   BY DATE\r\n                </h2>\r\n                <h3>\r\n                      Order report by date\r\n                </h3>\r\n            </div>\r\n        </div>\r\n\r\n        <div className='overviewContainer__body-body'>    \r\n        {orderAnalyticsVisitsState.isLoading && (\r\n            <>\r\n            <div style={{\r\n                display:'flex',\r\n                justifyContent:'center',\r\n                alignItems:\"center\",\r\n                margin:\"100px 0\"\r\n            }}>\r\n            <Spin\r\n            size='large'\r\n             />\r\n                </div>\r\n\r\n            </>\r\n        )}\r\n\r\n        \r\n             {orderAnalyticsVisitsState.done && orderData && orderData.length > 0 && (\r\n                    <ResponsiveContainer width=\"100%\" height={300}>\r\n                    <AreaChart data={orderData} fontSize={12}>\r\n                        <defs>\r\n                            <linearGradient id=\"rainGradient\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\r\n                                <stop offset=\"0%\" stopColor=\"#1890ff\" />\r\n                                <stop offset=\"100%\" stopColor=\"#3066BE22\" />\r\n                            </linearGradient>\r\n                        </defs>\r\n                        <CartesianGrid\r\n                            vertical={false}\r\n                            strokeDasharray=\"3 3\"\r\n                            stroke=\"#d6d9da\"\r\n                        />\r\n                        <XAxis \r\n                         dataKey={'date'} \r\n                        //  tickFormatter={getWeekNameByOrder}\r\n                         />\r\n                        <YAxis\r\n                            // unit=\"ml\"\r\n                            orientation=\"left\"\r\n                            width={20}\r\n                            axisLine={false}\r\n                            tickLine={false}\r\n                        />\r\n                        <Tooltip\r\n                            cursor={false}\r\n                            contentStyle={TooltipContainerStyles}\r\n                            formatter={(value, name) => [`${value}`, `${name}`]}\r\n                        />\r\n                        <Area\r\n                            dataKey=\"count\"\r\n                            name=\"Count\"\r\n                            type=\"basis\"\r\n                            fill=\"url(#rainGradient)\"\r\n                        />\r\n                    </AreaChart>\r\n                </ResponsiveContainer>\r\n               )}\r\n\r\n\r\n                {orderAnalyticsVisitsState.done && !(orderAnalyticsVisitsState.data.length > 0) && (\r\n                    <div style={{\r\n                        marginTop: '00px'\r\n                    }}>\r\n                        <Empty description={`No Visits for date`} image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n                    </div>\r\n                )}\r\n\r\n            \r\n\r\n        </div>\r\n        <div className=\"overviewContainer__body-footer\">\r\n            <h3>\r\n                <span>\r\n                    <CalendarOutlined />\r\n                </span>\r\n\r\n                            In the last month\r\n                     </h3>\r\n        </div>\r\n\r\n    </div>\r\n\r\n    )\r\n}\r\n\r\nexport default PageVisits\r\n","import React,{useState, useEffect} from 'react'\r\n\r\n\r\n// import hooks\r\nimport { useHandleFetch } from \"../../../hooks\";\r\n\r\n// import components\r\nimport { DataTableSkeleton } from \"../../../components/Placeholders\";\r\n\r\n// \r\n\r\n\r\n// import lib\r\nimport {\r\n    ResponsiveContainer,\r\n    AreaChart,\r\n    CartesianGrid,\r\n    XAxis,\r\n    YAxis,\r\n    Tooltip,\r\n    Legend,\r\n    Area,\r\n    Line\r\n} from \"recharts\";\r\n\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {\r\n    FileOutlined,\r\n    InboxOutlined,\r\n    RadiusUpleftOutlined,\r\n    RadiusUprightOutlined,\r\n    RadiusBottomleftOutlined,\r\n    RadiusBottomrightOutlined,\r\n    PlusOutlined,\r\n    DeleteOutlined,\r\n    EditOutlined,\r\n    CheckCircleOutlined,\r\n    CalendarOutlined\r\n} from '@ant-design/icons';\r\n\r\nimport { Skeleton, Empty, Popconfirm, Upload, message, Switch, Select, Button, notification, Table, Space, Input as CoolInput, Modal, Spin } from 'antd';\r\n\r\n\r\nconst { Option } = Select;\r\n\r\nconst { Column, ColumnGroup } = Table;\r\n\r\n\r\n\r\ninterface Props {\r\n    \r\n}\r\n\r\nconst localOptions = [\r\n    {\r\n        value: 'category',\r\n        name: 'Category'\r\n    },\r\n     {\r\n        value: 'product',\r\n        name: 'Product'\r\n    }\r\n\r\n]\r\n\r\nexport const getHourFormatter = (order: number): string | undefined =>\r\n    `${order}hr`;\r\n\r\n\r\nexport const TooltipContainerStyles = {\r\n    border: 0,\r\n    borderRadius: \"8px\",\r\n    fontSize: 14,\r\n    boxShadow: \"2px 2px 5px 3px rgba(0,0,0,0.15)\"\r\n};\r\n\r\n\r\n\r\nconst PageVisits = (props: Props) => {\r\n    const history = useHistory(); \r\n  \r\n    const [orderAnalyticsVisitsState, handleOrderAnalyticsVisitsStateFetch] = useHandleFetch({}, 'getAnalyticsOrders');\r\n    const [orderData, setorderData] = useState([]);\r\n\r\n\r\n    useEffect(()=>{\r\n        const getAnalyticsOrders = async () => {\r\n\r\n            const ordersDataRes =  await handleOrderAnalyticsVisitsStateFetch({\r\n                urlOptions: {\r\n                    params: {\r\n                        metricType: 'hour',\r\n                    }\r\n                }\r\n            }); \r\n\r\n           // @ts-ignore\r\n           if(ordersDataRes){\r\n            // @ts-ignore\r\n            setorderData(ordersDataRes);\r\n           }\r\n\r\n           };\r\n           getAnalyticsOrders(); \r\n\r\n    },[]); \r\n\r\n\r\n    console.log('orderAnalyticsVisitsState',orderAnalyticsVisitsState);\r\n\r\n\r\n\r\n\r\n    return (\r\n\r\n        <div className='overviewContainer__body-apiVisits'>\r\n        <div className='overviewContainer__body-apiVisits-header'>\r\n            <div className='overviewContainer__body-apiVisits-header-info'>\r\n                <h2>\r\n                    BY HOUR\r\n                </h2>\r\n                <h3>\r\n                      Order report by hours \r\n                </h3>\r\n            </div>\r\n        </div>\r\n\r\n        \r\n        <div className='overviewContainer__body-body'>    \r\n        {orderAnalyticsVisitsState.isLoading && (\r\n            <>\r\n            <div style={{\r\n                display:'flex',\r\n                justifyContent:'center',\r\n                alignItems:\"center\",\r\n                margin:\"100px 0\"\r\n            }}>\r\n            <Spin\r\n            size='large'\r\n             />\r\n                </div>\r\n\r\n            </>\r\n        )}\r\n\r\n        \r\n             {orderAnalyticsVisitsState.done && orderData && orderData.length > 0 && (\r\n                    <ResponsiveContainer width=\"100%\" height={300}>\r\n                    <AreaChart data={orderData} fontSize={12}>\r\n                        <defs>\r\n                            <linearGradient id=\"rainGradient\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\r\n                                <stop offset=\"0%\" stopColor=\"#1890ff\" />\r\n                                <stop offset=\"100%\" stopColor=\"#3066BE22\" />\r\n                            </linearGradient>\r\n                        </defs>\r\n                        <CartesianGrid\r\n                            vertical={false}\r\n                            strokeDasharray=\"3 3\"\r\n                            stroke=\"#d6d9da\"\r\n                        />\r\n                        <XAxis \r\n                         dataKey={'hour'} \r\n                         tickFormatter={getHourFormatter}\r\n                         />\r\n                        <YAxis\r\n                            // unit=\"ml\"\r\n                            orientation=\"left\"\r\n                            width={20}\r\n                            axisLine={false}\r\n                            tickLine={false}\r\n                        />\r\n                        <Tooltip\r\n                            cursor={false}\r\n                            contentStyle={TooltipContainerStyles}\r\n                            formatter={(value, name) => [`${value}`, `${name}`]}\r\n                        />\r\n                        <Area\r\n                            dataKey=\"count\"\r\n                            name=\"Count\"\r\n                            type=\"basis\"\r\n                            fill=\"url(#rainGradient)\"\r\n                        />\r\n                    </AreaChart>\r\n                </ResponsiveContainer>\r\n               )}\r\n\r\n\r\n                {orderAnalyticsVisitsState.done && !(orderAnalyticsVisitsState.data.length > 0) && (\r\n                    <div style={{\r\n                        marginTop: '00px'\r\n                    }}>\r\n                        <Empty description={`No Visits for hours`} image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n                    </div>\r\n                )}\r\n\r\n            \r\n\r\n        </div>\r\n        <div className=\"overviewContainer__body-footer\">\r\n            <h3>\r\n                <span>\r\n                    <CalendarOutlined />\r\n                </span>\r\n\r\n                            In the last month\r\n                     </h3>\r\n        </div>\r\n\r\n    </div>\r\n\r\n    )\r\n}\r\n\r\nexport default PageVisits\r\n","import React, { useState, useEffect } from 'react';\r\n\r\n// import hooks\r\nimport { useHandleFetch } from '../../../hooks';\r\n\r\n// import components\r\nimport { DataTableSkeleton } from '../../../components/Placeholders';\r\n\r\n//\r\n\r\n// import lib\r\nimport {\r\n  ResponsiveContainer,\r\n  AreaChart,\r\n  CartesianGrid,\r\n  XAxis,\r\n  YAxis,\r\n  Tooltip,\r\n  Legend,\r\n  Area,\r\n  Line,\r\n} from 'recharts';\r\n\r\nimport { useHistory } from 'react-router-dom';\r\nimport {\r\n  FileOutlined,\r\n  InboxOutlined,\r\n  RadiusUpleftOutlined,\r\n  RadiusUprightOutlined,\r\n  RadiusBottomleftOutlined,\r\n  RadiusBottomrightOutlined,\r\n  PlusOutlined,\r\n  DeleteOutlined,\r\n  EditOutlined,\r\n  CheckCircleOutlined,\r\n  CalendarOutlined,\r\n} from '@ant-design/icons';\r\n\r\nimport {\r\n  Skeleton,\r\n  Empty,\r\n  Popconfirm,\r\n  Upload,\r\n  message,\r\n  Switch,\r\n  Select,\r\n  Button,\r\n  notification,\r\n  Table,\r\n  Space,\r\n  Input as CoolInput,\r\n  Modal,\r\n  Spin,\r\n} from 'antd';\r\n\r\nconst { Option } = Select;\r\n\r\nconst { Column, ColumnGroup } = Table;\r\n\r\ninterface Props {}\r\n\r\nconst localOptions = [\r\n  {\r\n    value: 'category',\r\n    name: 'Category',\r\n  },\r\n  {\r\n    value: 'product',\r\n    name: 'Product',\r\n  },\r\n];\r\n\r\nconst MONTHS = [\r\n  'Jan',\r\n  'Feb',\r\n  'Mar',\r\n  'Apr',\r\n  'May',\r\n  'Jun',\r\n  'Jul',\r\n  'Aug',\r\n  'Sep',\r\n  'Oct',\r\n  'Nov',\r\n  'Dec',\r\n];\r\n\r\nexport const getMonthNameByOrder = (order: number): string | undefined =>\r\n  `${MONTHS[order - 1]}`;\r\n\r\nexport const TooltipContainerStyles = {\r\n  border: 0,\r\n  borderRadius: '8px',\r\n  fontSize: 14,\r\n  boxShadow: '2px 2px 5px 3px rgba(0,0,0,0.15)',\r\n};\r\n\r\nconst PageVisits = (props: Props) => {\r\n  const history = useHistory();\r\n\r\n  const [\r\n    orderAnalyticsVisitsState,\r\n    handleOrderAnalyticsVisitsStateFetch,\r\n  ] = useHandleFetch({}, 'getAnalyticsOrders');\r\n  const [orderData, setorderData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const getAnalyticsOrders = async () => {\r\n      const ordersDataRes = await handleOrderAnalyticsVisitsStateFetch({\r\n        urlOptions: {\r\n          params: {\r\n            metricType: 'month',\r\n          },\r\n        },\r\n      });\r\n\r\n      // @ts-ignore\r\n      if (ordersDataRes) {\r\n        // @ts-ignore\r\n        setorderData(ordersDataRes);\r\n      }\r\n    };\r\n    getAnalyticsOrders();\r\n  }, []);\r\n\r\n  console.log('orderAnalyticsVisitsStateMonth', orderAnalyticsVisitsState);\r\n\r\n  return (\r\n    <div className='overviewContainer__body-apiVisits'>\r\n      <div className='overviewContainer__body-apiVisits-header'>\r\n        <div className='overviewContainer__body-apiVisits-header-info'>\r\n          <h2>BY MONTH</h2>\r\n          <h3>Order report by month</h3>\r\n        </div>\r\n      </div>\r\n\r\n      <div className='overviewContainer__body-body'>\r\n        {orderAnalyticsVisitsState.isLoading && (\r\n          <>\r\n            <div\r\n              style={{\r\n                display: 'flex',\r\n                justifyContent: 'center',\r\n                alignItems: 'center',\r\n                margin: '100px 0',\r\n              }}\r\n            >\r\n              <Spin size='large' />\r\n            </div>\r\n          </>\r\n        )}\r\n\r\n        {orderAnalyticsVisitsState.done && orderData && orderData.length > 0 && (\r\n          <ResponsiveContainer width='100%' height={300}>\r\n            <AreaChart data={orderData} fontSize={12}>\r\n              <defs>\r\n                <linearGradient id='rainGradient' x1='0' y1='0' x2='0' y2='1'>\r\n                  <stop offset='0%' stopColor='#1890ff' />\r\n                  <stop offset='100%' stopColor='#3066BE22' />\r\n                </linearGradient>\r\n              </defs>\r\n              <CartesianGrid\r\n                vertical={false}\r\n                strokeDasharray='3 3'\r\n                stroke='#d6d9da'\r\n              />\r\n              <XAxis dataKey={'month'} tickFormatter={getMonthNameByOrder} />\r\n              <YAxis\r\n                // unit=\"ml\"\r\n                orientation='left'\r\n                width={20}\r\n                axisLine={false}\r\n                tickLine={false}\r\n              />\r\n              <Tooltip\r\n                cursor={false}\r\n                contentStyle={TooltipContainerStyles}\r\n                formatter={(value, name) => [`${value}`, `${name}`]}\r\n              />\r\n              <Area\r\n                dataKey='count'\r\n                name='Count'\r\n                type='basis'\r\n                fill='url(#rainGradient)'\r\n              />\r\n            </AreaChart>\r\n          </ResponsiveContainer>\r\n        )}\r\n\r\n        {orderAnalyticsVisitsState.done &&\r\n          !(orderAnalyticsVisitsState.data.length > 0) && (\r\n            <div\r\n              style={{\r\n                marginTop: '00px',\r\n              }}\r\n            >\r\n              <Empty\r\n                description={`No Visits for this months`}\r\n                image={Empty.PRESENTED_IMAGE_SIMPLE}\r\n              />\r\n            </div>\r\n          )}\r\n      </div>\r\n      <div className='overviewContainer__body-footer'>\r\n        <h3>\r\n          <span>\r\n            <CalendarOutlined />\r\n          </span>\r\n          In the last month\r\n        </h3>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PageVisits;\r\n","import React,{useState, useEffect} from 'react'\r\n\r\n\r\n// import hooks\r\nimport { useHandleFetch } from \"../../../hooks\";\r\n\r\n// import components\r\nimport { DataTableSkeleton } from \"../../../components/Placeholders\";\r\n\r\n// \r\n\r\n\r\n// import lib\r\nimport {\r\n    ResponsiveContainer,\r\n    AreaChart,\r\n    CartesianGrid,\r\n    XAxis,\r\n    YAxis,\r\n    Tooltip,\r\n    Legend,\r\n    Area,\r\n    Line\r\n} from \"recharts\";\r\n\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {\r\n    FileOutlined,\r\n    InboxOutlined,\r\n    RadiusUpleftOutlined,\r\n    RadiusUprightOutlined,\r\n    RadiusBottomleftOutlined,\r\n    RadiusBottomrightOutlined,\r\n    PlusOutlined,\r\n    DeleteOutlined,\r\n    EditOutlined,\r\n    CheckCircleOutlined,\r\n    CalendarOutlined\r\n} from '@ant-design/icons';\r\n\r\nimport { Skeleton, Empty, Popconfirm, Upload, message, Switch, Select, Button, notification, Table, Space, Input as CoolInput, Modal, Spin } from 'antd';\r\n\r\n\r\nconst { Option } = Select;\r\n\r\nconst { Column, ColumnGroup } = Table;\r\n\r\n\r\n\r\ninterface Props {\r\n    \r\n}\r\n\r\nconst localOptions = [\r\n    {\r\n        value: 'category',\r\n        name: 'Category'\r\n    },\r\n     {\r\n        value: 'product',\r\n        name: 'Product'\r\n    }\r\n\r\n]\r\n\r\n\r\n\r\nconst WEEEK = [\r\n    \"Sat\",\r\n    \"Sun\",\r\n    \"Mon\",\r\n    \"Tues\",\r\n    \"Wed\",\r\n    \"Thur\",\r\n    \"Fri\"\r\n];\r\n\r\n\r\nexport const getWeekNameByOrder = (order: number): string | undefined =>\r\n    WEEEK[order - 1];\r\n\r\n\r\n\r\n\r\n\r\nexport const TooltipContainerStyles = {\r\n    border: 0,\r\n    borderRadius: \"8px\",\r\n    fontSize: 14,\r\n    boxShadow: \"2px 2px 5px 3px rgba(0,0,0,0.15)\"\r\n};\r\n\r\n\r\n\r\n\r\n\r\nconst PageVisits = (props: Props) => {\r\n    const history = useHistory(); \r\n  \r\n    const [orderAnalyticsVisitsState, handleOrderAnalyticsVisitsStateFetch] = useHandleFetch({}, 'getAnalyticsOrders');\r\n    const [orderData, setorderData] = useState([]);\r\n\r\n\r\n    useEffect(()=>{\r\n        const getAnalyticsOrders = async () => {\r\n\r\n            const ordersDataRes =  await handleOrderAnalyticsVisitsStateFetch({\r\n                urlOptions: {\r\n                    params: {\r\n                        metricType: 'year',\r\n                    }\r\n                }\r\n            }); \r\n\r\n           // @ts-ignore\r\n           if(ordersDataRes){\r\n            // @ts-ignore\r\n            setorderData(ordersDataRes);\r\n           }\r\n\r\n           };\r\n           getAnalyticsOrders(); \r\n\r\n    },[]); \r\n\r\n\r\n    console.log('orderAnalyticsVisitsState',orderAnalyticsVisitsState);\r\n\r\n\r\n\r\n\r\n    return (\r\n\r\n        <div className='overviewContainer__body-apiVisits'>\r\n        <div className='overviewContainer__body-apiVisits-header'>\r\n            <div className='overviewContainer__body-apiVisits-header-info'>\r\n                <h2>\r\n                    By Year\r\n                </h2>\r\n                <h3>\r\n                      Order report by year \r\n                </h3>\r\n            </div>\r\n        </div>\r\n\r\n        <div className='overviewContainer__body-body'>    \r\n        {orderAnalyticsVisitsState.isLoading && (\r\n            <>\r\n            <div style={{\r\n                display:'flex',\r\n                justifyContent:'center',\r\n                alignItems:\"center\",\r\n                margin:\"100px 0\"\r\n            }}>\r\n            <Spin\r\n            size='large'\r\n             />\r\n                </div>\r\n\r\n            </>\r\n        )}\r\n\r\n        \r\n             {orderAnalyticsVisitsState.done && orderData && orderData.length > 0 && (\r\n                    <ResponsiveContainer width=\"100%\" height={300}>\r\n                    <AreaChart data={orderData} fontSize={12}>\r\n                        <defs>\r\n                            <linearGradient id=\"rainGradient\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\r\n                                <stop offset=\"0%\" stopColor=\"#1890ff\" />\r\n                                <stop offset=\"100%\" stopColor=\"#3066BE22\" />\r\n                            </linearGradient>\r\n                        </defs>\r\n                        <CartesianGrid\r\n                            vertical={false}\r\n                            strokeDasharray=\"3 3\"\r\n                            stroke=\"#d6d9da\"\r\n                        />\r\n                        <XAxis \r\n                         dataKey={'year'} \r\n                        //  tickFormatter={getWeekNameByOrder}\r\n                         />\r\n                        <YAxis\r\n                            // unit=\"ml\"\r\n                            orientation=\"left\"\r\n                            width={20}\r\n                            axisLine={false}\r\n                            tickLine={false}\r\n                        />\r\n                        <Tooltip\r\n                            cursor={false}\r\n                            contentStyle={TooltipContainerStyles}\r\n                            formatter={(value, name) => [`${value}`, `${name}`]}\r\n                        />\r\n                        <Area\r\n                            dataKey=\"count\"\r\n                            name=\"Count\"\r\n                            type=\"basis\"\r\n                            fill=\"url(#rainGradient)\"\r\n                        />\r\n                    </AreaChart>\r\n                </ResponsiveContainer>\r\n               )}\r\n\r\n\r\n                {orderAnalyticsVisitsState.done && !(orderAnalyticsVisitsState.data.length > 0) && (\r\n                    <div style={{\r\n                        marginTop: '00px'\r\n                    }}>\r\n                        <Empty description={`No Visits for this year`} image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n                    </div>\r\n                )}\r\n\r\n            \r\n\r\n        </div>\r\n        <div className=\"overviewContainer__body-footer\">\r\n            <h3>\r\n                <span>\r\n                    <CalendarOutlined />\r\n                </span>\r\n\r\n                    In the last year\r\n            </h3>\r\n        </div>\r\n\r\n    </div>\r\n\r\n    )\r\n}\r\n\r\nexport default PageVisits\r\n","import React, { useState, useEffect } from 'react';\r\n\r\n// import hooks\r\nimport { useHandleFetch } from '../../../hooks';\r\n\r\n// import components\r\nimport { DataTableSkeleton } from '../../../components/Placeholders';\r\n\r\n//\r\n\r\n// import lib\r\nimport {\r\n  ResponsiveContainer,\r\n  AreaChart,\r\n  CartesianGrid,\r\n  XAxis,\r\n  YAxis,\r\n  Tooltip,\r\n  Legend,\r\n  Area,\r\n  Line,\r\n} from 'recharts';\r\n\r\nimport { useHistory } from 'react-router-dom';\r\nimport {\r\n  FileOutlined,\r\n  InboxOutlined,\r\n  RadiusUpleftOutlined,\r\n  RadiusUprightOutlined,\r\n  RadiusBottomleftOutlined,\r\n  RadiusBottomrightOutlined,\r\n  PlusOutlined,\r\n  DeleteOutlined,\r\n  EditOutlined,\r\n  CheckCircleOutlined,\r\n  CalendarOutlined,\r\n} from '@ant-design/icons';\r\n\r\nimport {\r\n  Skeleton,\r\n  Empty,\r\n  Popconfirm,\r\n  Upload,\r\n  message,\r\n  Switch,\r\n  Select,\r\n  Button,\r\n  notification,\r\n  Table,\r\n  Space,\r\n  Input as CoolInput,\r\n  Modal,\r\n  Spin,\r\n} from 'antd';\r\n\r\nconst { Option } = Select;\r\n\r\nconst { Column, ColumnGroup } = Table;\r\n\r\ninterface Props {}\r\n\r\nconst localOptions = [\r\n  {\r\n    value: 'category',\r\n    name: 'Category',\r\n  },\r\n  {\r\n    value: 'product',\r\n    name: 'Product',\r\n  },\r\n];\r\n\r\nconst WEEEK = ['Sat', 'Sun', 'Mon', 'Tues', 'Wed', 'Thur', 'Fri'];\r\n\r\nexport const getWeekNameByOrder = (order: number): string | undefined =>\r\n  WEEEK[order - 1];\r\n\r\nexport const TooltipContainerStyles = {\r\n  border: 0,\r\n  borderRadius: '8px',\r\n  fontSize: 14,\r\n  boxShadow: '2px 2px 5px 3px rgba(0,0,0,0.15)',\r\n};\r\n\r\nconst DeliveryRegionReport = (props: Props) => {\r\n  const history = useHistory();\r\n\r\n  const [\r\n    orderAnalyticsVisitsState,\r\n    handleOrderAnalyticsVisitsStateFetch,\r\n  ] = useHandleFetch({}, 'getAnalyticsOrders');\r\n  const [orderData, setorderData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const getAnalyticsOrders = async () => {\r\n      const ordersDataRes = await handleOrderAnalyticsVisitsStateFetch({\r\n        urlOptions: {\r\n          params: {\r\n            metricType: 'deliveryRegion',\r\n          },\r\n        },\r\n      });\r\n\r\n      // @ts-ignore\r\n      if (ordersDataRes && ordersDataRes.length > 0) {\r\n        // @ts-ignore\r\n        const orderData = ordersDataRes.map((item) => {\r\n          return {\r\n            ...item,\r\n            name:\r\n              item['deliveryRegion'] &&\r\n              Object.keys(item['deliveryRegion']).length > 0\r\n                ? item['deliveryRegion']['name']\r\n                : 'Region Name',\r\n          };\r\n        });\r\n        // @ts-ignore\r\n        setorderData(orderData);\r\n      } else {\r\n        setorderData([]);\r\n      }\r\n    };\r\n    getAnalyticsOrders();\r\n  }, []);\r\n\r\n  console.log('orderListByDeliveryRegion', orderAnalyticsVisitsState);\r\n\r\n  return (\r\n    <div className='overviewContainer__body-apiVisits'>\r\n      <div className='overviewContainer__body-apiVisits-header'>\r\n        <div className='overviewContainer__body-apiVisits-header-info'>\r\n          <h2>BY DELIVERY REGION</h2>\r\n          <h3>Order report by delivery region</h3>\r\n        </div>\r\n      </div>\r\n\r\n      <div className='overviewContainer__body-body'>\r\n        {orderAnalyticsVisitsState.isLoading && (\r\n          <>\r\n            <div\r\n              style={{\r\n                display: 'flex',\r\n                justifyContent: 'center',\r\n                alignItems: 'center',\r\n                margin: '100px 0',\r\n              }}\r\n            >\r\n              <Spin size='large' />\r\n            </div>\r\n          </>\r\n        )}\r\n\r\n        {orderAnalyticsVisitsState.done && orderData && orderData.length > 0 && (\r\n          <>\r\n            <Table\r\n              pagination={{ defaultPageSize: 5 }}\r\n              style={{}}\r\n              // expandable={{\r\n              //     expandedRowRender: record => <p style={{ margin: 0 }}>{record.name}</p>,\r\n              //     rowExpandable: record => record.name !== 'Not Expandable',\r\n              //   }}\r\n              // bordered={true}\r\n              size='small'\r\n              // pagination={false}\r\n              dataSource={orderData}\r\n              tableLayout={'auto'}\r\n              onHeaderRow={(column) => {\r\n                return {\r\n                  style: {\r\n                    color: 'red !important',\r\n                  },\r\n                };\r\n              }}\r\n            >\r\n              <Column\r\n                title='Name'\r\n                dataIndex='name'\r\n                key='id'\r\n                className='classnameofthecolumn'\r\n                render={(text, record: any) => (\r\n                  <>\r\n                    <h4\r\n                      onClick={() => {\r\n                        // history.push(`/admin/${selectedApiValue && selectedApiValue.toLowerCase()}/${record.itemId}`)\r\n                      }}\r\n                      style={{\r\n                        fontWeight: 400,\r\n                        color: '#555',\r\n                        textTransform: 'uppercase',\r\n                      }}\r\n                    >\r\n                      {text || `Deleted`}\r\n                    </h4>\r\n                  </>\r\n                )}\r\n              />\r\n\r\n              <Column\r\n                title='Count'\r\n                dataIndex='count'\r\n                key='id'\r\n                className='classnameofthecolumn'\r\n              />\r\n            </Table>\r\n          </>\r\n        )}\r\n\r\n        {orderAnalyticsVisitsState.done &&\r\n          !(orderAnalyticsVisitsState.data.length > 0) && (\r\n            <div\r\n              style={{\r\n                marginTop: '00px',\r\n              }}\r\n            >\r\n              <Empty\r\n                description={`No Visits for date`}\r\n                image={Empty.PRESENTED_IMAGE_SIMPLE}\r\n              />\r\n            </div>\r\n          )}\r\n      </div>\r\n      <div className='overviewContainer__body-footer'>\r\n        <h3>\r\n          <span>\r\n            <CalendarOutlined />\r\n          </span>\r\n          In the last month\r\n        </h3>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DeliveryRegionReport;\r\n","import OrderOverviewReport from \"./OrderOverviewReport\";\r\nexport default OrderOverviewReport;","import React, { useEffect, useState } from 'react';\r\n\r\n// import components \r\nimport ThisMonthOrderReport from \"./ThisMonthOrderReport\";\r\nimport ThisWeekOrderReport from \"./ThisWeekOrderReport\";\r\nimport DateOrderReport from \"./DateOrderReport\";\r\nimport HourOrderReport from \"./HourOrderReport\";\r\nimport MonthOrderReport from \"./MonthOrderReport\";\r\nimport YearOrderReport from \"./YearOrderReport\";\r\nimport DeliveryRegionReport from \"./DeliveryRegionReport\";\r\n\r\n// import lib \r\nimport { message, Tooltip, Modal, Tabs, Empty, Badge } from 'antd';\r\n\r\nimport {\r\n\tDeleteOutlined,\r\n\tFileAddOutlined,\r\n\tCheckCircleOutlined,\r\n\tFileImageFilled,\r\n\tFileImageOutlined,\r\n\tFileImageTwoTone,\r\n\tPlusOutlined,\r\n\tPlusCircleOutlined,\r\n\tCloseOutlined,\r\n\tCheckOutlined,\r\n\tInfoCircleOutlined,\r\n\tUserOutlined,\r\n\tCalendarOutlined,\r\n\tGoldOutlined,\r\n\tShoppingCartOutlined,\r\n\tTagOutlined\r\n} from '@ant-design/icons';\r\n\r\n// import hooks\r\nimport { useHandleFetch } from \"../../../hooks\";\r\n\r\n\r\ninterface Props { }\r\n\r\nconst Overview = (props: Props) => {\r\n\tconst [analyticsProductVisitCountState, handleAnalyticsProductVisitCountFetch] = useHandleFetch({}, 'getAnalyticsPageVisitCount');\r\n\tconst [analyticsCategoryVisitCountState, handleAnalyticsCategoryVisitCountFetch] = useHandleFetch({}, 'getAnalyticsPageVisitCount');\r\n\tconst [totalUserCountState, handleGetTotalUserCountFetch] = useHandleFetch({}, 'getAnalyticsTotalUserCount');\r\n\r\n\r\n\r\n\tuseEffect(() => {\r\n\r\n\t\tconst getTotalUserCount = async () => {\r\n\t\t\tawait handleGetTotalUserCountFetch({});\r\n\t\t}\r\n\r\n\t\tgetTotalUserCount();\r\n\t}, []);\r\n\r\n\r\n\t\r\n\tuseEffect(()=>{\r\n\t\tconst getProductVisitCount = async () => {\r\n\t\t\tawait handleAnalyticsProductVisitCountFetch({\r\n\t\t\t\tparams: 'product'\r\n\t\t\t})\r\n\t\t}; \r\n\t\tgetProductVisitCount();\r\n\t},[])\r\n\r\n\r\n\r\n\tuseEffect(()=>{\r\n\t\tconst getCategoryVisitCount = async () => {\r\n\t\t\tawait handleAnalyticsCategoryVisitCountFetch({\r\n\t\t\t\tparams: 'category'\r\n\t\t\t})\r\n\t\t}; \r\n\t\tgetCategoryVisitCount();\r\n\t},[])\r\n\r\n\r\n\r\n\r\n\r\n\r\n\treturn (\r\n\t\t<div className='overviewContainer'>\r\n\t\t\t<div className=\"overviewContainer__body\">\r\n\t\t\t\t<DeliveryRegionReport/>\r\n\t\t\t\t<ThisWeekOrderReport />\r\n\t\t\t\t<ThisMonthOrderReport />\r\n\t\t\t</div>\r\n\r\n\t\t\t<div className=\"overviewContainer__body\">\r\n\t\t\t\t<DateOrderReport />\r\n\t\t\t\t<HourOrderReport />\r\n\t\t\t</div>\r\n\r\n\t\t\t<div className=\"overviewContainer__body\">\r\n\t\t\t\t<MonthOrderReport />\r\n\t\t\t\t<YearOrderReport />\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Overview;\r\n","import React from 'react'\r\n\r\ninterface Props {\r\n    \r\n}\r\n\r\nconst ConfigOrderStatus = (props: Props) => {\r\n    return (\r\n        <div>\r\n            ConfigOrderStatus\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ConfigOrderStatus\r\n","import React, { useState, useEffect } from 'react';\r\nimport { AutoComplete, Tooltip } from 'antd';\r\n\r\nimport InputSmall from '../../components/Field/InputSmall';\r\nimport MediaLibrary from '../../components/MediaLibrary';\r\n\r\nimport { useFetch } from \"../../hooks\";\r\nimport {\r\n    DeleteOutlined,\r\n    FileAddOutlined,\r\n    FileImageFilled,\r\n    PlusOutlined,\r\n    CheckCircleOutlined,\r\n    CloseOutlined,\r\n    CheckOutlined,\r\n    InfoCircleOutlined\r\n} from '@ant-design/icons';\r\n\r\n\r\n\r\nconst Complete = ({ setItemsList, itemsList, componentItem }) => {\r\n\r\n\r\n    const [localComponentItem, setlocalComponentItem] = useState({\r\n        title: componentItem.title,\r\n        target: componentItem.target,\r\n        text: componentItem.text,\r\n        image: componentItem.image,\r\n    })\r\n\r\n    const [myImages, setmyImages] = useState([]);\r\n    const [visibleMedia, setvisibleMedia] = useState(false);\r\n\r\n    const handleComponentItemsChange = (e) => {\r\n        const name = e.target.name;\r\n        const value = e.target.value;\r\n\r\n        setlocalComponentItem({\r\n            ...localComponentItem,\r\n            [name]: value\r\n        });\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (myImages.length > 0) {\r\n            const newImages = myImages.map(item => item.id);\r\n            setlocalComponentItem({\r\n                ...localComponentItem,\r\n                image: [...newImages]\r\n            })\r\n        }\r\n        else {\r\n            setlocalComponentItem({\r\n                ...localComponentItem,\r\n                image: []\r\n            })\r\n        }\r\n\r\n    }, [myImages])\r\n\r\n    useEffect(() => {\r\n        const positionInAttribute = () => {\r\n            return itemsList.map(item => item.id).indexOf(componentItem.id);\r\n        }\r\n\r\n        const index = positionInAttribute();\r\n\r\n        const updatedItem = Object.assign({}, itemsList[index], { ...localComponentItem });\r\n        const updateComponentList = [...itemsList.slice(0, index), updatedItem, ...itemsList.slice(index + 1)];\r\n        setItemsList(updateComponentList);\r\n\r\n    }, [localComponentItem])\r\n\r\n\r\n    const handleAttributeDelete = () => {\r\n\r\n        const updateComponentList = itemsList.filter(item => item.id !== componentItem.id);\r\n        setItemsList(updateComponentList);\r\n    }\r\n\r\n\r\n    const handleImagesDelete = (id) => {\r\n        // @ts-ignore\r\n        const newImages = myImages && myImages.filter(image => {\r\n            return image.id !== id;\r\n        })\r\n\r\n        setmyImages(newImages);\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n\r\n\r\n            <div className='componentItemsContainer__item'>\r\n                <InputSmall\r\n                    label='Title'\r\n                    value={localComponentItem.title}\r\n                    name='title'\r\n                    onChange={handleComponentItemsChange}\r\n                />\r\n                <InputSmall\r\n                    label='Text'\r\n                    value={localComponentItem.text}\r\n                    name='text'\r\n                    onChange={handleComponentItemsChange}\r\n                />\r\n\r\n                <InputSmall\r\n                    label='Target'\r\n                    value={localComponentItem.target}\r\n                    name='target'\r\n                    onChange={handleComponentItemsChange}\r\n                />\r\n\r\n\r\n                <h3 className='inputFieldLabel-small'>Images</h3>\r\n                <div style={{\r\n                    marginBottom: \"-1px\"\r\n                }}></div>\r\n\r\n                <div className='aboutToUploadImagesContainer'>\r\n                    {myImages &&\r\n                        // @ts-ignore\r\n                        myImages.length > 0 && myImages.map((image, index) => {\r\n                            return (\r\n                                <div className='aboutToUploadImagesContainer__item aboutToUploadImagesContainer__item-small'>\r\n                                    <div\r\n                                        className='aboutToUploadImagesContainer__item-imgContainer'\r\n                                    >\r\n                                        <img src={image.cover} alt={image.alt} />\r\n                                    </div>\r\n\r\n                                    <span\r\n                                        onClick={() => handleImagesDelete(image.id)}\r\n                                        className='aboutToUploadImagesContainer__item-remove'>\r\n                                        <CloseOutlined />\r\n                                    </span>\r\n                                </div>\r\n                            )\r\n                        })}\r\n\r\n\r\n                    <Tooltip\r\n                        title={'Attach images'}>\r\n\r\n                        <div\r\n                            onClick={() => {\r\n                                setvisibleMedia(true);\r\n                            }}\r\n                            className='aboutToUploadImagesContainer__uploadItem aboutToUploadImagesContainer__uploadItem-small'>\r\n                            {/* <FileAddOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FileImageTwoTone />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FileImageOutlined /> */}\r\n                            <FileImageFilled />\r\n                            {/* <h5>\r\n\t\t\t\t\t\t\t\t\t\t\t\t     Select From Library\r\n\t\t\t\t\t\t\t\t\t\t\t<     /h5> */}\r\n                            <span className='aboutToUploadImagesContainer__uploadItem-plus'>\r\n                                <PlusOutlined />\r\n                            </span>\r\n                        </div>\r\n                    </Tooltip>\r\n\r\n                </div>\r\n\r\n\r\n\r\n            </div>\r\n            <MediaLibrary\r\n                setvisible={setvisibleMedia}\r\n                visible={visibleMedia}\r\n                myImages={myImages}\r\n                setmyImages={setmyImages}\r\n                isModalOpenForImages={true}\r\n\r\n            />\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Complete;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\nimport { useHandleFetch } from '../../hooks';\r\n// import third party ui lib\r\nimport {\r\n  Upload,\r\n  message,\r\n  Switch,\r\n  Select,\r\n  Button,\r\n  notification,\r\n  Modal,\r\n} from 'antd';\r\n\r\nimport {\r\n  FileOutlined,\r\n  InboxOutlined,\r\n  FileAddOutlined,\r\n  DeleteOutlined,\r\n  CheckCircleOutlined,\r\n  PlusOutlined,\r\n  InfoCircleOutlined,\r\n} from '@ant-design/icons';\r\n\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport MediaLibrary from '../../components/MediaLibrary';\r\nimport ComponentItem from './ComponentItem';\r\n\r\nconst validationSchema = Yup.object().shape({\r\n  groupName: Yup.string()\r\n    .label('Name')\r\n    .required('Name is required')\r\n    .min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n  notification.success({\r\n    message: message || 'Component Created',\r\n    description: '',\r\n    icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n  });\r\n};\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n  notification.success({\r\n    message: message || 'Something Went Wrong',\r\n    description: '',\r\n    icon: <InfoCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n  });\r\n};\r\n\r\nconst initialValues = {\r\n  groupName: '',\r\n  items: [],\r\n};\r\n\r\ninterface Props {\r\n  addNewCategoryVisible?: any;\r\n  setAddNewCategoryVisible?: any;\r\n  componentList?: any;\r\n  setComponentList?: any;\r\n}\r\n\r\nconst AddNewBrand = ({\r\n  addNewCategoryVisible,\r\n  setAddNewCategoryVisible,\r\n  componentList,\r\n  setComponentList,\r\n}: Props) => {\r\n  const [addComponentState, handleAddComponentFetch] = useHandleFetch(\r\n    {},\r\n    'addComponent'\r\n  );\r\n  const [myImages, setmyImages] = useState(false);\r\n  const [itemsList, setItemsList] = useState([]);\r\n\r\n  const handleSubmit = async (values: any, actions: any) => {\r\n    const addComponentRes = await handleAddComponentFetch({\r\n      body: {\r\n        groupName: values.groupName,\r\n        items: itemsList,\r\n      },\r\n    });\r\n\r\n    // @ts-ignore\r\n    if (addComponentRes && addComponentRes.status === 'ok') {\r\n      openSuccessNotification();\r\n      setComponentList([\r\n        ...componentList,\r\n        {\r\n          id: addComponentRes['_id'] || '',\r\n          key: addComponentRes['_id'] || '',\r\n          groupName: addComponentRes['groupName'] || '',\r\n          // @ts-ignore\r\n          ...addComponentRes,\r\n        },\r\n      ]);\r\n      actions.resetForm();\r\n      setItemsList([]);\r\n      setAddNewCategoryVisible(false);\r\n    } else {\r\n      openErrorNotification();\r\n    }\r\n\r\n    actions.setSubmitting(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!addComponentState['isLoading']) {\r\n      const error = addComponentState['error'];\r\n      if (error['isError'] && Object.keys(error['error']).length > 0) {\r\n        const errors =\r\n          Object.values(error['error']).length > 0\r\n            ? Object.values(error['error'])\r\n            : [];\r\n        errors.forEach((err, i) => {\r\n          if (typeof err === 'string') {\r\n            openErrorNotification(err);\r\n          } else if (typeof err === 'object') {\r\n            if (err && Object.keys(err).length > 0) {\r\n              const errs = Object.values(err);\r\n              errs.forEach((err) => {\r\n                openErrorNotification(err);\r\n              });\r\n            }\r\n          }\r\n        });\r\n      }\r\n    }\r\n  }, [addComponentState]);\r\n\r\n  const handleCancel = (e: any) => {\r\n    setAddNewCategoryVisible(false);\r\n  };\r\n\r\n  const getisSubmitButtonDisabled = (values, isValid) => {\r\n    if (!values.groupName) {\r\n      return true;\r\n    }\r\n    return false;\r\n  };\r\n\r\n  const handleAddComponentItem = () => {\r\n    setItemsList([\r\n      ...itemsList,\r\n      {\r\n        title: '',\r\n        target: '',\r\n        text: '',\r\n        image: [],\r\n        id: `${itemsList.length}`,\r\n      },\r\n    ]);\r\n  };\r\n\r\n  return (\r\n    <Formik\r\n      onSubmit={(values, actions) => handleSubmit(values, actions)}\r\n      validationSchema={validationSchema}\r\n      validateOnBlur={false}\r\n      enableReinitialize={true}\r\n      initialValues={{ ...initialValues }}\r\n    >\r\n      {({\r\n        handleChange,\r\n        values,\r\n        handleSubmit,\r\n        errors,\r\n        isValid,\r\n        isSubmitting,\r\n        touched,\r\n        handleBlur,\r\n        setFieldTouched,\r\n        handleReset,\r\n      }) => (\r\n        <>\r\n          <Modal\r\n            style={{\r\n              top: '40px',\r\n            }}\r\n            title='Add New Component'\r\n            visible={addNewCategoryVisible}\r\n            onOk={(e: any) => handleSubmit(e)}\r\n            onCancel={handleCancel}\r\n            okText='Create'\r\n            okButtonProps={{\r\n              loading: isSubmitting,\r\n              htmlType: 'submit',\r\n              disabled: getisSubmitButtonDisabled(values, isValid),\r\n            }}\r\n            width={'50vw'}\r\n            bodyStyle={{\r\n              margin: '0',\r\n              padding: '10px',\r\n            }}\r\n          >\r\n            <Input\r\n              label='Name'\r\n              value={values.groupName}\r\n              name='groupName'\r\n              isError={\r\n                (touched.groupName && errors.groupName) ||\r\n                (!isSubmitting && addComponentState.error['error']['name'])\r\n              }\r\n              errorString={\r\n                (touched.groupName && errors.groupName) ||\r\n                (!isSubmitting && addComponentState.error['error']['name'])\r\n              }\r\n              onChange={(e: any) => {\r\n                handleChange(e);\r\n                setFieldTouched('groupName');\r\n              }}\r\n            />\r\n            <div\r\n              style={{\r\n                marginTop: '15px',\r\n              }}\r\n            ></div>\r\n            <h3 className='inputFieldLabel'>Children</h3>\r\n\r\n            <div className='componentItemsContainer'>\r\n              {itemsList.map((itemComponent) => {\r\n                return (\r\n                  <ComponentItem\r\n                    componentItem={itemComponent}\r\n                    itemsList={itemsList}\r\n                    setItemsList={setItemsList}\r\n                  />\r\n                );\r\n              })}\r\n\r\n              <Button\r\n                size='small'\r\n                onClick={handleAddComponentItem}\r\n                style={{\r\n                  width: '290px',\r\n                  minHeight: '145px',\r\n                  marginTop: '0px',\r\n                  borderRadius: '8px',\r\n                }}\r\n                type='dashed'\r\n                icon={<PlusOutlined />}\r\n              >\r\n                Add Childrens\r\n              </Button>\r\n            </div>\r\n\r\n            <div\r\n              style={{\r\n                marginTop: '20px',\r\n              }}\r\n            />\r\n          </Modal>\r\n        </>\r\n      )}\r\n    </Formik>\r\n  );\r\n};\r\n\r\nexport default AddNewBrand;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { AutoComplete, Button, Tooltip } from 'antd';\r\n\r\n// import configs\r\nimport config from \"../../config.json\";\r\n\r\nimport InputSmall from '../../components/Field/InputSmall';\r\nimport MediaLibrary from '../../components/MediaLibrary';\r\n\r\nimport { useFetch } from \"../../hooks\";\r\nimport {\r\n    DeleteOutlined,\r\n    FileAddOutlined, \r\n    SaveOutlined,\r\n    FileImageFilled,\r\n    PlusOutlined,\r\n    CheckCircleOutlined,\r\n    CloseOutlined,\r\n    CheckOutlined,\r\n    InfoCircleOutlined\r\n} from '@ant-design/icons';\r\n\r\n\r\n\r\nconst Complete = ({ setComponentList, componentList, item, component,componentUpdate, isLoadingUpdate }) => {\r\n\r\n    const [localComponentItem, setlocalComponentItem] = useState({\r\n        title: item.title,\r\n        target: item.target,\r\n        text: item.text,\r\n        image: item.image,\r\n    }); \r\n\r\n\r\n    console.log('localComponentItem',localComponentItem); \r\n    console.log('componentItem',item); \r\n\r\n\r\n\r\n    // useEffect(()=>{\r\n\r\n    //     if(item && item.image && item.image.length > 0){\r\n    //         setlocalComponentItem({\r\n    //             ...localComponentItem,\r\n    //             image: \r\n    //         })\r\n    //     }; \r\n\r\n\r\n    // },item)\r\n\r\n    const [myImages, setmyImages] = useState([]);\r\n    const [visibleMedia, setvisibleMedia] = useState(false);\r\n\r\n    const handleComponentItemsChange = (e) => {\r\n        const name = e.target.name;\r\n        const value = e.target.value;\r\n\r\n        setlocalComponentItem({\r\n            ...localComponentItem,\r\n            [name]: value\r\n        });\r\n    };\r\n\r\n\r\n\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        if (myImages.length > 0) {\r\n            setlocalComponentItem({\r\n                ...localComponentItem,\r\n                // @ts-ignore\r\n                image: [...new Set([...localComponentItem.image, ...myImages])]\r\n            })\r\n        }\r\n        // else {\r\n        //     setlocalComponentItem({\r\n        //         ...localComponentItem,\r\n        //         image: []\r\n        //     })\r\n        // }\r\n\r\n    }, [myImages])\r\n\r\n\r\n\r\n\r\n    useEffect(()=>{\r\n\r\n        if(item && item.image && item.image.length > 0){\r\n            setmyImages(item.image)\r\n        }\r\n\r\n    },[])\r\n\r\n\r\n    const handleImagesDelete = (id) => {\r\n        // @ts-ignore\r\n        const newImages = localComponentItem.image && localComponentItem.image.length > 0 && localComponentItem.image.filter(image => {\r\n            return image.id !== id;\r\n        })\r\n\r\n        setlocalComponentItem({\r\n            ...localComponentItem,\r\n            image: [...newImages]\r\n        })\r\n\r\n        setmyImages(newImages);\r\n    }\r\n\r\n\r\n    const handleComponentItemUpdate = () => {\r\n        componentUpdate(item,component,localComponentItem); \r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <div\r\n                style={{\r\n                    width: '100%',\r\n                    boxShadow: \"none\"\r\n                }}\r\n                className='componentItemsContainer__item'>\r\n                <InputSmall\r\n                    label='Title'\r\n                    value={localComponentItem.title}\r\n                    name='title'\r\n                    onChange={handleComponentItemsChange}\r\n                />\r\n                <InputSmall\r\n                    label='Text'\r\n                    value={localComponentItem.text}\r\n                    name='text'\r\n                    onChange={handleComponentItemsChange}\r\n                />\r\n\r\n                <InputSmall\r\n                    label='Target'\r\n                    value={localComponentItem.target}\r\n                    name='target'\r\n                    onChange={handleComponentItemsChange}\r\n                />\r\n\r\n\r\n                <h3 className='inputFieldLabel-small'>Images</h3>\r\n                <div style={{\r\n                    marginBottom: \"-1px\"\r\n                }}></div>\r\n\r\n\r\n                <div className='aboutToUploadImagesContainer'>\r\n                    {localComponentItem.image &&\r\n                        // @ts-ignore\r\n                        localComponentItem.image.length > 0 && localComponentItem.image.map((image, index) => {\r\n                            return (\r\n                                <div className='aboutToUploadImagesContainer__item aboutToUploadImagesContainer__item-small'>\r\n                                    <div\r\n                                        className='aboutToUploadImagesContainer__item-imgContainer'\r\n                                    >\r\n                                        <img src={image.cover} alt={image.alt} />\r\n                                    </div>\r\n\r\n                                    <span\r\n                                        onClick={() => handleImagesDelete(image.id)}\r\n                                        className='aboutToUploadImagesContainer__item-remove'>\r\n                                        <CloseOutlined />\r\n                                    </span>\r\n                                </div>\r\n                            )\r\n                        })}\r\n\r\n\r\n                    <Tooltip\r\n                        title={'Attach images'}>\r\n\r\n                        <div\r\n                            onClick={() => {\r\n                                setvisibleMedia(true);\r\n                            }}\r\n                            className='aboutToUploadImagesContainer__uploadItem aboutToUploadImagesContainer__uploadItem-small'>\r\n                            {/* <FileAddOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FileImageTwoTone />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FileImageOutlined /> */}\r\n                            <FileImageFilled />\r\n                            {/* <h5>\r\n\t\t\t\t\t\t\t\t\t\t\t\t     Select From Library\r\n\t\t\t\t\t\t\t\t\t\t\t<     /h5> */}\r\n                            <span className='aboutToUploadImagesContainer__uploadItem-plus'>\r\n                                <PlusOutlined />\r\n                            </span>\r\n                        </div>\r\n                    </Tooltip>\r\n\r\n                </div>\r\n                <Button\r\n                style={{\r\n                    marginTop: '15px'\r\n                }}\r\n                    icon={<SaveOutlined />}\r\n          className='btnPrimaryClassNameoutline'\r\n          onClick={() => handleComponentItemUpdate()}\r\n        >\r\n\r\n            {isLoadingUpdate ? \"Saving...\" : \"Save\"}\r\n            \r\n            </Button>\r\n            </div>\r\n            <MediaLibrary\r\n                setvisible={setvisibleMedia}\r\n                visible={visibleMedia}\r\n                myImages={myImages}\r\n                setmyImages={setmyImages}\r\n                isModalOpenForImages={true}\r\n\r\n            />\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Complete;\r\n","import React, { useState, useEffect } from 'react';\r\nimport * as Yup from 'yup';\r\n\r\nimport { useHandleFetch } from '../../hooks';\r\n// import third party ui lib\r\nimport { notification, Modal, Tooltip } from 'antd';\r\n\r\nimport {\r\n  FileAddOutlined,\r\n  DeleteOutlined,\r\n  CheckCircleOutlined,\r\n  PlusOutlined,\r\n  FileImageFilled,\r\n  CloseOutlined,\r\n} from '@ant-design/icons';\r\n\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport MediaLibrary from '../../components/MediaLibrary';\r\nimport ComponentItem from './ComponentItem';\r\n\r\nconst validationSchema = Yup.object().shape({\r\n  groupName: Yup.string()\r\n    .label('Name')\r\n    .required('Name is required')\r\n    .min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n  notification.success({\r\n    message: message || 'Component Created',\r\n    description: '',\r\n    icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n  });\r\n};\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n  notification.success({\r\n    message: message || 'Something Went Wrong',\r\n    description: '',\r\n    icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n  });\r\n};\r\n\r\nconst initialValues = {\r\n  groupName: '',\r\n  items: [],\r\n};\r\n\r\ninterface Props {\r\n  addNewCategoryVisible?: any;\r\n  setAddNewCategoryVisible?: any;\r\n  componentList?: any;\r\n  setComponentList?: any;\r\n  updateComponentByAddingItem?: any;\r\n  componentId?: any;\r\n}\r\n\r\nconst AddNewBrand = ({\r\n  addNewCategoryVisible,\r\n  setAddNewCategoryVisible,\r\n  componentList,\r\n  setComponentList,\r\n  updateComponentByAddingItem,\r\n  componentId,\r\n}: Props) => {\r\n  const [localComponentItem, setlocalComponentItem] = useState({\r\n    title: '',\r\n    target: '',\r\n    text: '',\r\n    image: [],\r\n  });\r\n\r\n  const [myImages, setmyImages] = useState([]);\r\n  const [visibleMedia, setvisibleMedia] = useState(false);\r\n\r\n  const handleComponentItemsChange = (e) => {\r\n    const name = e.target.name;\r\n    const value = e.target.value;\r\n\r\n    setlocalComponentItem({\r\n      ...localComponentItem,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  const handleCancel = (e: any) => {\r\n    setAddNewCategoryVisible(false);\r\n  };\r\n\r\n  const getisSubmitButtonDisabled = (values, isValid) => {\r\n    if (!values.groupName) {\r\n      return true;\r\n    }\r\n    return false;\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (myImages.length > 0) {\r\n      const newImages = myImages.map((item) => item.id);\r\n      setlocalComponentItem({\r\n        ...localComponentItem,\r\n        image: [...newImages],\r\n      });\r\n    } else {\r\n      setlocalComponentItem({\r\n        ...localComponentItem,\r\n        image: [],\r\n      });\r\n    }\r\n  }, [myImages]);\r\n\r\n  const handleImagesDelete = (id) => {\r\n    // @ts-ignore\r\n    const newImages =\r\n      myImages &&\r\n      myImages.filter((image) => {\r\n        return image.id !== id;\r\n      });\r\n\r\n    setmyImages(newImages);\r\n  };\r\n\r\n  const handleAddItem = (e) => {\r\n    updateComponentByAddingItem(localComponentItem, componentId);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Modal\r\n        style={{\r\n          top: '40px',\r\n        }}\r\n        destroyOnClose={true}\r\n        title='Add New Component Item'\r\n        visible={addNewCategoryVisible}\r\n        onOk={(e: any) => handleAddItem(e)}\r\n        onCancel={handleCancel}\r\n        okText='Add'\r\n        okButtonProps={{\r\n          htmlType: 'submit',\r\n        }}\r\n        width={'400px'}\r\n        bodyStyle={{\r\n          margin: '0',\r\n          padding: '10px',\r\n        }}\r\n      >\r\n        <Input\r\n          label='Title'\r\n          value={localComponentItem.title}\r\n          name='title'\r\n          onChange={handleComponentItemsChange}\r\n        />\r\n        <Input\r\n          label='Text'\r\n          value={localComponentItem.text}\r\n          name='text'\r\n          onChange={handleComponentItemsChange}\r\n        />\r\n\r\n        <Input\r\n          label='Target'\r\n          value={localComponentItem.target}\r\n          name='target'\r\n          onChange={handleComponentItemsChange}\r\n        />\r\n\r\n        <h3 className='inputFieldLabel-small'>Images</h3>\r\n\r\n        <div className='aboutToUploadImagesContainer'>\r\n          {myImages &&\r\n            // @ts-ignore\r\n            myImages.length > 0 &&\r\n            myImages.map((image, index) => {\r\n              return (\r\n                <div className='aboutToUploadImagesContainer__item'>\r\n                  <div className='aboutToUploadImagesContainer__item-imgContainer'>\r\n                    <img src={image.cover} alt={image.alt} />\r\n                  </div>\r\n\r\n                  <span\r\n                    onClick={() => handleImagesDelete(image.id)}\r\n                    className='aboutToUploadImagesContainer__item-remove'\r\n                  >\r\n                    <CloseOutlined />\r\n                  </span>\r\n                </div>\r\n              );\r\n            })}\r\n\r\n          <Tooltip title={'Attach images'}>\r\n            <div\r\n              onClick={() => {\r\n                setvisibleMedia(true);\r\n              }}\r\n              className='aboutToUploadImagesContainer__uploadItem'\r\n            >\r\n              {/* <FileAddOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FileImageTwoTone />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FileImageOutlined /> */}\r\n              <FileImageFilled />\r\n              {/* <h5>\r\n\t\t\t\t\t\t\t\t\t\t\t\t     Select From Library\r\n\t\t\t\t\t\t\t\t\t\t\t<     /h5> */}\r\n              <span className='aboutToUploadImagesContainer__uploadItem-plus'>\r\n                <PlusOutlined />\r\n              </span>\r\n            </div>\r\n          </Tooltip>\r\n        </div>\r\n\r\n        <MediaLibrary\r\n          setvisible={setvisibleMedia}\r\n          visible={visibleMedia}\r\n          myImages={myImages}\r\n          setmyImages={setmyImages}\r\n          isModalOpenForImages={true}\r\n        />\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AddNewBrand;\r\n","import React, { useState, useEffect } from 'react';\r\nimport {\r\n  Collapse,\r\n  Button,\r\n  Tooltip,\r\n  Upload,\r\n  Modal,\r\n  Input,\r\n  notification,\r\n  Popconfirm,\r\n} from 'antd';\r\nimport {\r\n  CaretRightOutlined,\r\n  CheckCircleOutlined,\r\n  PlusOutlined,\r\n  DeleteOutlined,\r\n  EditOutlined,\r\n} from '@ant-design/icons';\r\n\r\n// import components\r\nimport InputField from '../../components/Field/Input';\r\nimport Empty from '../../components/Empty';\r\nimport ComponentImageUpload from './ComponentImageUpload';\r\nimport { useHandleFetch } from '../../hooks';\r\nimport { DataTableSkeleton } from '../../components/Placeholders';\r\nimport AddNewComponent from './AddNewComponent';\r\nimport ComponentListComponentItem from './ComponentListComponentItem';\r\nimport AddNewComponentItem from './AddNewComponentItem';\r\nimport { category } from '../../state/ducks';\r\nimport { truncate } from 'fs';\r\n\r\nconst { Panel } = Collapse;\r\nconst { Search } = Input;\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n  notification.success({\r\n    message: message || 'Component Created',\r\n    description: '',\r\n    icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n  });\r\n};\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n  notification.error({\r\n    message: message || 'Something Went Wrong',\r\n    description: '',\r\n    icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n  });\r\n};\r\n\r\nconst text = `\r\n  A dog is a type of domesticated animal.\r\n  Known for its loyalty and faithfulness,\r\n  it can be found as a welcome guest in many households across the world.\r\n`;\r\n\r\nfunction getBase64(file: any) {\r\n  return new Promise((resolve, reject) => {\r\n    const reader = new FileReader();\r\n    reader.readAsDataURL(file);\r\n    reader.onload = () => resolve(reader.result);\r\n    reader.onerror = (error) => reject(error);\r\n  });\r\n}\r\n\r\nconst genExtra = (updateComponentByDeleting, component, id) => (\r\n  <div\r\n    style={{\r\n      display: 'flex',\r\n    }}\r\n  >\r\n    <Tooltip placement='top' title='Edit Component'>\r\n      <a href='##'>\r\n        <EditOutlined\r\n          onClick={(event) => {\r\n            // If you don't want click extra trigger collapse, you can prevent this:\r\n            // event.stopPropagation();\r\n          }}\r\n        />\r\n      </a>\r\n    </Tooltip>\r\n\r\n    <div\r\n      style={{\r\n        marginLeft: '15px',\r\n      }}\r\n    />\r\n    <a\r\n      href='##'\r\n      style={{\r\n        color: 'rgb(241, 67, 67)',\r\n      }}\r\n    >\r\n      <Popconfirm\r\n        onConfirm={() => updateComponentByDeleting(id, component)}\r\n        title='Are you sure？'\r\n        okText='Yes'\r\n        cancelText='No'\r\n      >\r\n        <DeleteOutlined\r\n          onClick={(event) => {\r\n            // If you don't want click extra trigger collapse, you can prevent this:\r\n            event.stopPropagation();\r\n          }}\r\n        />\r\n      </Popconfirm>\r\n    </a>\r\n  </div>\r\n);\r\n\r\nconst genExtraForGroup = (\r\n  setitemVisible: any,\r\n  handleDeleteComponent: any,\r\n  id: any,\r\n  setComponentId: any\r\n) => (\r\n  <div\r\n    style={{\r\n      display: 'flex',\r\n    }}\r\n  >\r\n    <Tooltip placement='top' title='Add new item Component'>\r\n      <a href='##'>\r\n        <PlusOutlined\r\n          onClick={(event) => {\r\n            // If you don't want click extra trigger collapse, you can prevent this:\r\n            // event.stopPropagation();\r\n            setitemVisible(true);\r\n            setComponentId(id);\r\n          }}\r\n        />\r\n      </a>\r\n    </Tooltip>\r\n\r\n    <div\r\n      style={{\r\n        marginLeft: '15px',\r\n      }}\r\n    />\r\n    <Tooltip placement='top' title='Edit Component'>\r\n      <a href='##'>\r\n        <EditOutlined\r\n          onClick={(event) => {\r\n            // If you don't want click extra trigger collapse, you can prevent this:\r\n            // event.stopPropagation();\r\n          }}\r\n        />\r\n      </a>\r\n    </Tooltip>\r\n\r\n    <div\r\n      style={{\r\n        marginLeft: '15px',\r\n      }}\r\n    />\r\n    <a\r\n      href='##'\r\n      style={{\r\n        color: 'rgb(241, 67, 67)',\r\n      }}\r\n    >\r\n      <Popconfirm\r\n        onConfirm={() => handleDeleteComponent(id)}\r\n        title='Are you sure？'\r\n        okText='Yes'\r\n        cancelText='No'\r\n      >\r\n        <DeleteOutlined\r\n          onClick={(event) => {\r\n            // If you don't want click extra trigger collapse, you can prevent this:\r\n            event.stopPropagation();\r\n          }}\r\n        />\r\n      </Popconfirm>\r\n    </a>\r\n  </div>\r\n);\r\n\r\nconst Component = (props) => {\r\n  const [visible, setvisible] = useState(false);\r\n  const [groupVisible, setgroupVisible] = useState(false);\r\n  const [itemVisible, setitemVisible] = useState(false);\r\n  const [componentId, setComponentId] = useState('');\r\n\r\n  const [componentState, handleComponentListFetch] = useHandleFetch(\r\n    {},\r\n    'componentList'\r\n  );\r\n  const [deleteComponentState, handleDeleteComponentFetch] = useHandleFetch(\r\n    {},\r\n    'deleteComponent'\r\n  );\r\n  const [updateComponentState, handleUpdateComponentFetch] = useHandleFetch(\r\n    {},\r\n    'updateComponent'\r\n  );\r\n\r\n  const [componentList, setComponentList] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const setComponents = async () => {\r\n      const components = await handleComponentListFetch({\r\n        urlOptions: {\r\n          params: {\r\n            imageValue: true,\r\n          },\r\n        },\r\n      });\r\n      // @ts-ignore\r\n      setComponentList(components);\r\n    };\r\n    setComponents();\r\n  }, []);\r\n\r\n  console.log('componentListd', componentList);\r\n\r\n  const handleSearch = (value) => {\r\n    if (componentState.data.length > 0) {\r\n      const newComponentList = componentState.data.filter((item) =>\r\n        item.name.toLowerCase().includes(value.toLowerCase())\r\n      );\r\n      setComponentList(newComponentList);\r\n    }\r\n  };\r\n\r\n  const handleDeleteComponent = async (id) => {\r\n    const deleteComponentRes = await handleDeleteComponentFetch({\r\n      urlOptions: {\r\n        placeHolders: {\r\n          id,\r\n        },\r\n      },\r\n    });\r\n\r\n    // @ts-ignore\r\n    if (deleteComponentRes && deleteComponentRes.status === 'ok') {\r\n      openSuccessNotification('Component Deleted');\r\n      const newComponentList = componentList.filter((item) => item.id !== id);\r\n      setComponentList(newComponentList);\r\n    } else {\r\n      openErrorNotification(\"Couldn't delete, Something went wrong\");\r\n    }\r\n  };\r\n\r\n  const handleOk = (e: any) => {\r\n    setvisible(false);\r\n  };\r\n\r\n  const handleCancel = (e: any) => {\r\n    setvisible(false);\r\n  };\r\n  const handleOkGroup = (e: any) => {\r\n    setgroupVisible(false);\r\n  };\r\n\r\n  const handleCancelGroup = (e: any) => {\r\n    setgroupVisible(false);\r\n  };\r\n\r\n  const componentUpdate = async (item, component, localComponentItem) => {\r\n    const positionInComponents = () => {\r\n      return componentList.map((item) => item.id).indexOf(component.id);\r\n    };\r\n\r\n    const positionInItemsOfComponent = () => {\r\n      return component.items.map((item) => item.id).indexOf(item.id);\r\n    };\r\n\r\n    const componentIndex = positionInComponents();\r\n\r\n    const itemIndex = positionInItemsOfComponent();\r\n\r\n    const manupulatedLocalComponentForTheReq =\r\n      localComponentItem.image.length > 0\r\n        ? {\r\n            ...localComponentItem,\r\n            image:\r\n              localComponentItem.image.length > 0\r\n                ? localComponentItem.image.map((img) => img.id)\r\n                : [],\r\n          }\r\n        : localComponentItem;\r\n\r\n    const componentItems =\r\n      component.items.length > 0\r\n        ? component.items.map((componentItem) => {\r\n            return {\r\n              ...componentItem,\r\n              image:\r\n                componentItem.image && componentItem.image.length > 0\r\n                  ? componentItem.image.map((imgItem) => imgItem['id'] || '')\r\n                  : [],\r\n            };\r\n          })\r\n        : [];\r\n\r\n    const updatedItems = [\r\n      ...component.items.slice(0, itemIndex),\r\n      localComponentItem,\r\n      ...component.items.slice(itemIndex + 1),\r\n    ];\r\n\r\n    console.log('updatedItemsTheDamnItems', updatedItems);\r\n\r\n    const manupulatedUpdatedItems = [\r\n      ...componentItems.slice(0, itemIndex),\r\n      manupulatedLocalComponentForTheReq,\r\n      ...componentItems.slice(itemIndex + 1),\r\n    ];\r\n\r\n    const manupulatedUpdatedItem = Object.assign(\r\n      {},\r\n      componentList[componentIndex],\r\n      {\r\n        ...component,\r\n        items: manupulatedUpdatedItems,\r\n      }\r\n    );\r\n\r\n    const updatedItem = Object.assign({}, componentList[componentIndex], {\r\n      ...component,\r\n      items: updatedItems,\r\n    });\r\n\r\n    const updateComponentList = [\r\n      ...componentList.slice(0, componentIndex),\r\n      updatedItem,\r\n      ...componentList.slice(componentIndex + 1),\r\n    ];\r\n\r\n    const updateComponentRes = await handleUpdateComponentFetch({\r\n      urlOptions: {\r\n        placeHolders: {\r\n          id: component.id,\r\n        },\r\n      },\r\n      body: {\r\n        ...manupulatedUpdatedItem,\r\n        groupName: updatedItem.name,\r\n      },\r\n    });\r\n\r\n    // @ts-ignore\r\n    if (updateComponentRes && updateComponentRes.status === 'ok') {\r\n      openSuccessNotification('Component Updated');\r\n      setComponentList(updateComponentList);\r\n    } else {\r\n      openErrorNotification();\r\n    }\r\n  };\r\n\r\n  const updateComponentByDeleting = async (id, component) => {\r\n    const positionInComponents = () => {\r\n      return componentList.map((item) => item.id).indexOf(component.id);\r\n    };\r\n\r\n    const positionInItemsOfComponent = () => {\r\n      return component.items.map((item) => item.id).indexOf(id);\r\n    };\r\n\r\n    const componentIndex = positionInComponents();\r\n\r\n    const itemIndex = positionInItemsOfComponent();\r\n\r\n    const updatedItems = [\r\n      ...component.items.slice(0, itemIndex),\r\n      ...component.items.slice(itemIndex + 1),\r\n    ];\r\n\r\n    const updatedItem = Object.assign({}, componentList[componentIndex], {\r\n      ...component,\r\n      items: updatedItems,\r\n    });\r\n\r\n    const updateComponentList = [\r\n      ...componentList.slice(0, componentIndex),\r\n      updatedItem,\r\n      ...componentList.slice(componentIndex + 1),\r\n    ];\r\n\r\n    const updateComponentRes = await handleUpdateComponentFetch({\r\n      urlOptions: {\r\n        placeHolders: {\r\n          id: component.id,\r\n        },\r\n      },\r\n      body: {\r\n        ...updatedItem,\r\n        groupName: updatedItem.name,\r\n      },\r\n    });\r\n\r\n    // @ts-ignore\r\n    if (updateComponentRes && updateComponentRes.status === 'ok') {\r\n      openSuccessNotification('Component Item deleted');\r\n      setComponentList(updateComponentList);\r\n    } else {\r\n      openErrorNotification();\r\n    }\r\n  };\r\n\r\n  const updateComponentByAddingItem = async (localComponentItem, id) => {\r\n    const positionInComponents = () => {\r\n      return componentList.map((item) => item.id).indexOf(id);\r\n    };\r\n\r\n    const componentIndex = positionInComponents();\r\n\r\n    const updatedItems = [\r\n      ...componentList[componentIndex].items,\r\n      localComponentItem,\r\n    ];\r\n\r\n    const updatedItem = Object.assign({}, componentList[componentIndex], {\r\n      ...componentList[componentIndex],\r\n      items: updatedItems,\r\n    });\r\n\r\n    const updateComponentList = [\r\n      ...componentList.slice(0, componentIndex),\r\n      updatedItem,\r\n      ...componentList.slice(componentIndex + 1),\r\n    ];\r\n\r\n    const updateComponentRes = await handleUpdateComponentFetch({\r\n      urlOptions: {\r\n        placeHolders: {\r\n          id: id,\r\n        },\r\n      },\r\n      body: {\r\n        ...updatedItem,\r\n        groupName: updatedItem.name,\r\n      },\r\n    });\r\n\r\n    // @ts-ignore\r\n    if (updateComponentRes && updateComponentRes.status === 'ok') {\r\n      openSuccessNotification('Component Item Added');\r\n      setComponentList(updateComponentList);\r\n      setitemVisible(false);\r\n    } else {\r\n      openErrorNotification();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className='categoryListContainer'>\r\n        <div className='categoryListContainer__header'>\r\n          <div className='categoryListContainer__header-searchBar'>\r\n            <h2 className='categoryListContainer__header-title'>Components</h2>\r\n\r\n            <Search\r\n              enterButton={false}\r\n              className='searchbarClassName'\r\n              placeholder='search components..'\r\n              onSearch={(value) => handleSearch(value)}\r\n            />\r\n          </div>\r\n          <Button\r\n            // type=\"primary\"\r\n            className='btnPrimaryClassNameoutline'\r\n            icon={<PlusOutlined />}\r\n            onClick={() => setgroupVisible(true)}\r\n          >\r\n            Add New\r\n          </Button>\r\n        </div>\r\n\r\n        <div className='categoryListContainer__afterHeader'></div>\r\n\r\n        <div className='categoryListContainer__categoryList'>\r\n          {componentState.isLoading && <DataTableSkeleton />}\r\n\r\n          {componentState.done && !(componentList.length > 0) && (\r\n            <div\r\n              style={{\r\n                marginTop: '50px',\r\n              }}\r\n            >\r\n              <Empty title='No Component found' />\r\n            </div>\r\n          )}\r\n\r\n          {componentState.done && componentList.length > 0 && (\r\n            <div className='componentsItemContainer'>\r\n              {componentList.map((component) => {\r\n                console.log('mycomponent');\r\n                return (\r\n                  <div className='componentsItemContainer-item'>\r\n                    <Collapse\r\n                      accordion={false}\r\n                      bordered={false}\r\n                      expandIconPosition='left'\r\n                      expandIcon={({ isActive }) => (\r\n                        <CaretRightOutlined rotate={isActive ? 90 : 0} />\r\n                      )}\r\n                      className='site-collapse-custom-collapse'\r\n                    >\r\n                      <Panel\r\n                        header={component.name}\r\n                        key='1'\r\n                        className='site-collapse-custom-panel'\r\n                        extra={genExtraForGroup(\r\n                          setitemVisible,\r\n                          handleDeleteComponent,\r\n                          component.id,\r\n                          setComponentId\r\n                        )}\r\n                      >\r\n                        <div className=' componentsItemContainer-white'>\r\n                          {component.items &&\r\n                            component.items.length > 0 &&\r\n                            component.items.map((item) => {\r\n                              return (\r\n                                <div className='componentsItemContainer-item-item'>\r\n                                  <Collapse\r\n                                    accordion={false}\r\n                                    bordered={false}\r\n                                    expandIconPosition='left'\r\n                                    expandIcon={({ isActive }) => (\r\n                                      <CaretRightOutlined\r\n                                        rotate={isActive ? 90 : 0}\r\n                                      />\r\n                                    )}\r\n                                    className='site-collapse-custom-collapse'\r\n                                  >\r\n                                    <Panel\r\n                                      header={item.title || ''}\r\n                                      key='1'\r\n                                      className='site-collapse-custom-panel'\r\n                                      extra={genExtra(\r\n                                        updateComponentByDeleting,\r\n                                        component,\r\n                                        item.id\r\n                                      )}\r\n                                    >\r\n                                      <ComponentListComponentItem\r\n                                        setComponentList={setComponentList}\r\n                                        componentList={componentList}\r\n                                        item={item}\r\n                                        component={component}\r\n                                        componentUpdate={componentUpdate}\r\n                                        isLoadingUpdate={\r\n                                          updateComponentState.isLoading\r\n                                        }\r\n                                      />\r\n                                    </Panel>\r\n                                  </Collapse>\r\n                                </div>\r\n                              );\r\n                            })}\r\n\r\n                          {!(component.items.length > 0) && (\r\n                            <Empty title='No item Found' />\r\n                          )}\r\n                        </div>\r\n                      </Panel>\r\n                    </Collapse>\r\n                  </div>\r\n                );\r\n              })}\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <AddNewComponent\r\n        addNewCategoryVisible={groupVisible}\r\n        setAddNewCategoryVisible={setgroupVisible}\r\n        setComponentList={setComponentList}\r\n        componentList={componentList}\r\n      />\r\n      <AddNewComponentItem\r\n        addNewCategoryVisible={itemVisible}\r\n        setAddNewCategoryVisible={setitemVisible}\r\n        setComponentList={setComponentList}\r\n        componentList={componentList}\r\n        updateComponentByAddingItem={updateComponentByAddingItem}\r\n        componentId={componentId}\r\n      />\r\n\r\n      <Modal\r\n        title='Add New Group Component'\r\n        visible={false}\r\n        onOk={handleOkGroup}\r\n        onCancel={handleCancelGroup}\r\n        footer={null}\r\n        okText='Done'\r\n      >\r\n        <InputField label='Group Component Name' />\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Component;\r\n","import React, { useState } from 'react';\r\n\r\n// import third libraries\r\nimport { Upload, message, notification, Modal } from 'antd';\r\n// import { Formik } from 'formik';\r\n// import * as Yup from 'yup';\r\nimport reqwest from 'reqwest';\r\n\r\n\r\n\r\n// import hooks\r\nimport { useHandleFetch } from '../../hooks';\r\n\r\n\r\n// import configs\r\nimport config from \"../../config.json\";\r\n\r\n\r\nimport {\r\n    InboxOutlined,\r\n    CheckCircleOutlined,\r\n    LoadingOutlined,\r\n    PlusOutlined\r\n} from '@ant-design/icons';\r\n\r\n\r\n// import ReactQuill from 'react-quill';\r\n// import 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport MediaLibrary from \"../../components/MediaLibrary\";\r\n\r\n\r\nconst { Dragger } = Upload;\r\n\r\n\r\n// const validationSchema = Yup.object().shape({\r\n//     name: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n// });\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n    notification.error({\r\n        message: message || 'Brand Created',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Something Went Wrong',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst initialValues = {\r\n    name: '',\r\n    description: '',\r\n    image: [],\r\n    url: '',\r\n    cover: ''\r\n}\r\n\r\n\r\n\r\ninterface Props {\r\n    addNewCategoryVisible?: any;\r\n    setAddNewCategoryVisible?: any;\r\n    themeList?: any;\r\n    setThemeList?: any;\r\n\r\n}\r\n\r\nconst AddNewBrand = ({ addNewCategoryVisible, setAddNewCategoryVisible, themeList, setThemeList }: Props) => {\r\n\r\n    const [addThemeState, handleAddthemeFetch] = useHandleFetch({}, 'addTheme', 'form');\r\n    const [myImages, setmyImages] = useState(false);\r\n    const [visibleMedia, setvisibleMedia] = useState(false);\r\n    const [myThumbnailImage, setmyThumbnailImage] = useState([]);\r\n    const [isModalOpenForThumbnail, setisModalOpenForThumbnail] = useState(false);\r\n    const [selectedThemeTypeValue, setselectedThemeTypeValue] = useState('');\r\n    const [fileList, setfileList] = useState([]);\r\n    const [uploading, setuploading] = useState(false);\r\n    const [loadingThumnail, setLoadingThumbnail] = useState(false);\r\n    const [imageUrl, setImageUrl] = useState('');\r\n    const [name, setname] = useState('')\r\n    const [thumbnailFile, setThumbnailFile] = useState('')\r\n\r\n\r\n\r\n\r\n\r\n    const handleSubmit = async () => {\r\n        setuploading(true);\r\n\r\n        const formData = new FormData();\r\n        fileList.forEach(file => {\r\n            formData.append('folder', file, file.name);\r\n        });\r\n        formData.append(\"name\", name);\r\n        formData.append('thumbnail', thumbnailFile)\r\n\r\n\r\n        const addThemeRes = await handleAddthemeFetch({\r\n            body: formData,\r\n        });\r\n\r\n\r\n        setuploading(false);\r\n        // @ts-ignore\r\n        if (addThemeRes && addThemeRes.status === 'ok') {\r\n\r\n            setThemeList([...themeList, {\r\n                id: addThemeRes['_id'] || '',\r\n                key: addThemeRes['_id'] || '',\r\n                name: addThemeRes['name'] || '',\r\n                thumbnail: addThemeRes['thumbnail'] || '',\r\n                path: addThemeRes['path'] || '',\r\n                added: addThemeRes['added'] || '',\r\n                // @ts-ignore\r\n                ...addThemeRes\r\n            }]);\r\n\r\n            setfileList([]);\r\n            setuploading(false);\r\n            openSuccessNotification('Theme Uploaded!')\r\n            setAddNewCategoryVisible(false);\r\n            setname('');\r\n            setselectedThemeTypeValue('');\r\n\r\n\r\n\r\n\r\n            setAddNewCategoryVisible(false);\r\n        }\r\n        else {\r\n            openErrorNotification('Theme upload failed, Something went wrong');\r\n        }\r\n\r\n    };\r\n\r\n\r\n\r\n\r\n    const handleCancel = (e: any) => {\r\n        setAddNewCategoryVisible(false);\r\n    };\r\n\r\n\r\n    const getisSubmitButtonDisabled = () => {\r\n        if (addThemeState.isLoading) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n\r\n\r\n\r\n    const handleImagesDelete = (id) => {\r\n        // @ts-ignore\r\n        const newImages = myImages && myImages.filter(image => {\r\n            return image.id !== id;\r\n        })\r\n\r\n        setmyImages(newImages);\r\n    }\r\n\r\n\r\n\r\n    const handleThumbnailImageDelete = (id) => {\r\n        // @ts-ignore\r\n        const newImages = myThumbnailImage && myThumbnailImage.filter(image => {\r\n            return image.id !== id;\r\n        })\r\n\r\n        if (newImages.length > 0) {\r\n            setmyThumbnailImage(newImages);\r\n\r\n        }\r\n        // @ts-ignore\r\n        else setmyThumbnailImage([]);\r\n    }\r\n\r\n\r\n    const onChangeThemeType = (value) => {\r\n        setselectedThemeTypeValue(value);\r\n    }\r\n\r\n\r\n\r\n    const uploadProps = {\r\n        //  listType: 'picture',\r\n        onRemove: file => {\r\n            setfileList(filelist => {\r\n                const index = fileList.indexOf(file);\r\n                const newFileList = fileList.slice();\r\n                newFileList.splice(index, 1);\r\n                return newFileList;\r\n            })\r\n\r\n        },\r\n        beforeUpload: file => {\r\n            setfileList(filelist => {\r\n                return [...fileList, file]\r\n            })\r\n            return false;\r\n        },\r\n        fileList,\r\n    };\r\n\r\n    const handleUpload = async () => {\r\n        const formData = new FormData();\r\n        fileList.forEach(file => {\r\n            formData.append('folder', file, file.name);\r\n        });\r\n        formData.append(\"name\", name);\r\n        formData.append('thumbnail', imageUrl)\r\n\r\n        setuploading(true);\r\n\r\n        //  const addImageToLibraryRes = awAddait handleMediaLibraryFetch({\r\n        // \tbody: formData\r\n        //   });\r\n\r\n        //   console.log('addImageToLibraryRes',addImageToLibraryRes)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n        // You can use any AJAX library you like\r\n        reqwest({\r\n            url: `${config.baseURL}/admin/theme/add`,\r\n            method: 'post',\r\n            processData: false,\r\n            data: formData,\r\n            withCredentials: true,\r\n            success: () => {\r\n                setfileList([]);\r\n                setuploading(false);\r\n                openSuccessNotification('Theme Uploaded!')\r\n                setAddNewCategoryVisible(false);\r\n                setname('');\r\n                setselectedThemeTypeValue('');\r\n                setThemeList([...themeList, {\r\n\r\n                }])\r\n                // setThemeList([...themeList, {\r\n                //     id: addCategoryRes['id'] || '',\r\n                //     key: addCategoryRes['id'] || '',\r\n                //     name: addCategoryRes['name'] || '',\r\n                //     description: addCategoryRes['description'] || '',\r\n                //     // @ts-ignore\r\n                //     ...addCategoryRes\r\n                // }])\r\n            },\r\n            error: () => {\r\n                setuploading(false);\r\n                openErrorNotification('Theme Upload failed!')\r\n                message.error('upload failed.');\r\n            },\r\n        });\r\n    };\r\n\r\n\r\n    function getBase64(img, callback) {\r\n        const reader = new FileReader();\r\n        reader.addEventListener('load', () => callback(reader.result));\r\n        reader.readAsDataURL(img);\r\n    }\r\n\r\n    function beforeUpload(file) {\r\n        const isJpgOrPng = file.type === 'image/jpeg' || file.type === 'image/png';\r\n        if (!isJpgOrPng) {\r\n            message.error('You can only upload JPG/PNG file!');\r\n        }\r\n        const isLt2M = file.size / 1024 / 1024 < 2;\r\n        if (!isLt2M) {\r\n            message.error('Image must smaller than 2MB!');\r\n        }\r\n\r\n\r\n        getBase64(file, imageUrl => {\r\n            setImageUrl(imageUrl)\r\n            setThumbnailFile(file);\r\n            setLoadingThumbnail(false)\r\n        })\r\n\r\n        return false;\r\n    }\r\n\r\n\r\n\r\n    const uploadButton = (\r\n        <div>\r\n            {loadingThumnail ? <LoadingOutlined /> : <PlusOutlined />}\r\n            <div className=\"ant-upload-text\">Upload</div>\r\n        </div>\r\n    );\r\n\r\n    return (\r\n        <>\r\n            <Modal\r\n                style={{\r\n                    top: '40px'\r\n                }}\r\n                title=\"Add New Theme\"\r\n                visible={addNewCategoryVisible}\r\n                onOk={handleSubmit}\r\n                onCancel={handleCancel}\r\n                okText='Upload Theme'\r\n                okButtonProps={{\r\n                    loading: uploading,\r\n                    htmlType: \"submit\",\r\n                    disabled: getisSubmitButtonDisabled()\r\n                }}\r\n\r\n                bodyStyle={{\r\n                    margin: '0',\r\n                    padding: '10px'\r\n                }}\r\n            >\r\n\r\n                <Input\r\n                    label='Name'\r\n                    value={name}\r\n                    name='name'\r\n                    onChange={(e: any) => setname(e.target.value)}\r\n                    isError={addThemeState.error['error']['name']}\r\n\r\n                    errorString={addThemeState.error['error']['name']}\r\n                />\r\n\r\n                <div style={{\r\n                    marginTop: '20px'\r\n                }}></div>\r\n\r\n\r\n                <h3 className='inputFieldLabel'>Thumbnail</h3>\r\n                <Upload\r\n                    name=\"avatar\"\r\n                    listType=\"picture-card\"\r\n                    className=\"avatar-uploader\"\r\n                    showUploadList={false}\r\n                    beforeUpload={beforeUpload}\r\n                    multiple={false}\r\n                >\r\n                    {imageUrl ? <img src={imageUrl} alt=\"avatar\" style={{ width: '100%' }} /> : uploadButton}\r\n                </Upload>\r\n\r\n\r\n\r\n                <div style={{\r\n                    marginTop: '3px'\r\n                }}></div>\r\n                <h3 className='inputFieldLabel'>\r\n                    Theme Folder (.zip)\r\n\t\t\t\t\t\t\t\t\t</h3>\r\n\r\n\r\n                <Dragger\r\n                    multiple={false}\r\n                    className='upload-list-inline'\r\n                    listType='picture'\r\n                    style={{\r\n                        background: '#fff'\r\n                    }}\r\n                    {...uploadProps}\r\n                >\r\n                    <p className='ant-upload-drag-icon'>\r\n                        <InboxOutlined />\r\n                    </p>\r\n                    <p className='ant-upload-text'>Click or drag file to this area to upload</p>\r\n                    <p className='ant-upload-hint'>\r\n                        Support for a single or bulk upload. Strictly prohibit from uploading company data or\r\n                        other band files\r\n\t\t\t\t\t\t\t</p>\r\n                </Dragger>\r\n\r\n                {addThemeState.error['error']['folder'] && (\r\n                    <p style={{\r\n                        color: 'rgba(255, 0, 0, 0.507)'\r\n                    }}>{addThemeState.error['error']['folder']}</p>\r\n                )}\r\n\r\n\r\n\r\n\r\n\r\n            </Modal>\r\n\r\n            <MediaLibrary\r\n                setvisible={setvisibleMedia}\r\n                visible={visibleMedia}\r\n                setmyImages={setmyImages}\r\n                isModalOpenForImages={false}\r\n                setmyThumbnailImage={setmyThumbnailImage}\r\n                isModalOpenForThumbnail={isModalOpenForThumbnail}\r\n                myThumbnailImage={myThumbnailImage}\r\n            />\r\n        </>\r\n    );\r\n};\r\n\r\nexport default AddNewBrand;\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React, { useState, useEffect } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport {\r\n  Button,\r\n  Input,\r\n  Tooltip,\r\n  Modal,\r\n  notification,\r\n  Popconfirm,\r\n  Badge,\r\n} from 'antd';\r\nimport {\r\n  PlusOutlined,\r\n  EditOutlined,\r\n  DeleteOutlined,\r\n  EditFilled,\r\n  CheckOutlined,\r\n  CheckCircleOutlined,\r\n  CheckCircleTwoTone,\r\n  InfoCircleOutlined,\r\n} from '@ant-design/icons';\r\n\r\n/// import hooks\r\nimport { useFetch, useHandleFetch } from '../../hooks';\r\n\r\n// import components\r\nimport { DataTableSkeleton } from '../../components/Placeholders';\r\nimport AddNewTheme from './AddNewTheme';\r\n\r\nimport Empty from '../../components/Empty';\r\n\r\nconst { Search } = Input;\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n  notification.success({\r\n    message: message || 'Tag Created',\r\n    description: '',\r\n    icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n  });\r\n};\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n  notification.success({\r\n    message: message || 'Something Went Wrong',\r\n    description: '',\r\n    icon: <InfoCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n  });\r\n};\r\n\r\ninterface Props {\r\n  history: any;\r\n}\r\n\r\nconst CustomerList = ({ history }: Props) => {\r\n  const [themeList, setThemeList] = useState([]);\r\n\r\n  const [themeState, handleThemeListFetch] = useHandleFetch({}, 'themeList');\r\n  const [activeThemeState, handleActiveThemeFetch] = useHandleFetch(\r\n    {},\r\n    'activeTheme'\r\n  );\r\n  const [updateDeleteThemeState, handleDeleteThemeFetch] = useHandleFetch(\r\n    {},\r\n    'deletetheme'\r\n  );\r\n\r\n  useEffect(() => {\r\n    const setThemes = async () => {\r\n      const themes = await handleThemeListFetch({});\r\n      // @ts-ignore\r\n      setThemeList(themes);\r\n    };\r\n    setThemes();\r\n  }, []);\r\n\r\n  const [addNewCategoryVisible, setAddNewCategoryVisible] = useState(false);\r\n\r\n  const handleSearch = (value) => {\r\n    if (themeState.data.length > 0) {\r\n      const newThemeList = themeState.data.filter((item) =>\r\n        item.name.includes(value)\r\n      );\r\n      setThemeList(newThemeList);\r\n    }\r\n  };\r\n\r\n  const handleActiveTheme = async (id) => {\r\n    const activeThemeRes = await handleActiveThemeFetch({\r\n      urlOptions: {\r\n        placeHolders: {\r\n          id,\r\n        },\r\n      },\r\n    });\r\n\r\n    // @ts-ignore\r\n    if (activeThemeRes && activeThemeRes.status === 'ok') {\r\n      openSuccessNotification('Theme activated');\r\n    } else {\r\n      openErrorNotification(\r\n        \"Couldn't activate the theme, Something went wrong\"\r\n      );\r\n    }\r\n  };\r\n\r\n  const handleDeleteTheme = async (id) => {\r\n    const deleteThemeRes = await handleDeleteThemeFetch({\r\n      urlOptions: {\r\n        placeHolders: {\r\n          id,\r\n        },\r\n      },\r\n    });\r\n\r\n    // @ts-ignore\r\n    if (deleteThemeRes && deleteThemeRes.status === 'ok') {\r\n      openSuccessNotification('Theme Deleted');\r\n      const newThemeList = themeList.filter((item) => item.id !== id);\r\n      setThemeList(newThemeList);\r\n    } else {\r\n      openErrorNotification(\"Couldn't delete, Something went wrong\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {/* <h2 className='containerPageTitle'>\r\n      Categories\r\n    </h2> */}\r\n      <div className='categoryListContainer'>\r\n        <div className='categoryListContainer__header'>\r\n          <div className='categoryListContainer__header-searchBar'>\r\n            <h2 className='categoryListContainer__header-title'>Themes</h2>\r\n\r\n            <Search\r\n              enterButton={false}\r\n              className='searchbarClassName'\r\n              placeholder='search themes..'\r\n              onSearch={(value) => handleSearch(value)}\r\n              // style={{ width: 300 }}\r\n            />\r\n          </div>\r\n          <Button\r\n            // type=\"primary\"\r\n            className='btnPrimaryClassNameoutline'\r\n            icon={<PlusOutlined />}\r\n            onClick={() => setAddNewCategoryVisible(true)}\r\n          >\r\n            Add New\r\n          </Button>\r\n        </div>\r\n\r\n        <div className='categoryListContainer__afterHeader'></div>\r\n\r\n        <div className='categoryListContainer__categoryList'>\r\n          {themeState.done && themeList.length > 0 && (\r\n            <div className='categoryListContainer__bodyContainerList'>\r\n              {themeList.map((theme) => {\r\n                return (\r\n                  <div className='categoryListContainer__bodyContainerList-item'>\r\n                    {/* <Badge count={<CheckCircleTwoTone style={{ color: '#3FA3FF' }} />}>\r\n               \r\n                  </Badge> */}\r\n                    <div className='categoryListContainer__bodyContainerList-item-top'>\r\n                      <img alt='theme img' src={theme.thumbnail} />\r\n                    </div>\r\n                    <div className='categoryListContainer__bodyContainerList-item-body'>\r\n                      <h3> {theme.name} </h3>\r\n\r\n                      <div\r\n                        style={{\r\n                          display: 'flex',\r\n                          justifyContent: 'space-between',\r\n                        }}\r\n                      >\r\n                        <Tooltip placement='top' title='Active this theme'>\r\n                          <Button\r\n                            size='small'\r\n                            className='btnPrimaryClassNameoutline'\r\n                            icon={<CheckOutlined />}\r\n                            onClick={() => handleActiveTheme(theme.id)}\r\n                          >\r\n                            <span\r\n                              style={{\r\n                                fontSize: '11px',\r\n                              }}\r\n                            >\r\n                              Set Active\r\n                            </span>\r\n                          </Button>\r\n                        </Tooltip>\r\n\r\n                        <Tooltip placement='top' title='Delete theme'>\r\n                          <Popconfirm\r\n                            onConfirm={() => handleDeleteTheme(theme.id)}\r\n                            title='Are you sure？'\r\n                            okText='Yes'\r\n                            cancelText='No'\r\n                          >\r\n                            <Button\r\n                              size='small'\r\n                              type='link'\r\n                              danger={true}\r\n                              icon={<DeleteOutlined />}\r\n                            ></Button>\r\n                          </Popconfirm>\r\n                        </Tooltip>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                );\r\n              })}\r\n            </div>\r\n          )}\r\n\r\n          {themeState.isLoading && <DataTableSkeleton />}\r\n\r\n          {themeState.done && !(themeList.length > 0) && (\r\n            <Empty title='No Theme found' />\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      {themeState.done && (\r\n        <AddNewTheme\r\n          addNewCategoryVisible={addNewCategoryVisible}\r\n          setAddNewCategoryVisible={setAddNewCategoryVisible}\r\n          themeList={themeState.data}\r\n          setThemeList={setThemeList}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default withRouter(CustomerList);\r\n","import React from 'react'\r\n\r\ninterface Props {\r\n    \r\n}\r\n\r\nconst Image = (props: Props) => {\r\n    return (\r\n        <div>\r\n            Image\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Image\r\n","import React from 'react';\r\n\r\ninterface Props {}\r\n\r\nconst Invoice = (props: Props) => {\r\n\treturn <div>Invoice</div>;\r\n};\r\n\r\nexport default Invoice;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\nimport { useHandleFetch } from '../../hooks';\r\n// import third party ui lib\r\nimport { notification, Button } from 'antd';\r\n\r\nimport { CheckCircleOutlined } from '@ant-design/icons';\r\n\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport MediaLibrary from '../../components/MediaLibrary';\r\n\r\nconst validationSchema = Yup.object().shape({\r\n  title: Yup.string().label('Title').required('Site title can not be empty'),\r\n  adminEmail: Yup.string()\r\n    .label('Admin Email')\r\n    .required('Admin Email can not be empty'),\r\n});\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n  notification.success({\r\n    message: message || 'Site Info Updated',\r\n    description: '',\r\n    icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n  });\r\n};\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n  notification.success({\r\n    message: message || 'Something Went Wrong',\r\n    description: '',\r\n    icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n  });\r\n};\r\n\r\nconst initialValues = {\r\n  title: '',\r\n  adminName: '',\r\n  adminEmail: '',\r\n  adminPhone: '',\r\n};\r\n\r\ninterface Props {}\r\n\r\nconst UpdateSiteinfo = ({}: Props) => {\r\n  const [\r\n    UpdateSiteSettingsState,\r\n    handleUpdateSiteSettingsFetch,\r\n  ] = useHandleFetch({}, 'updateSiteSettings');\r\n  const [siteSettingsState, handlSiteSettingsFetch] = useHandleFetch(\r\n    {},\r\n    'siteSettings'\r\n  );\r\n\r\n  useEffect(() => {\r\n    const getSiteSettings = async () => {\r\n      const siteSettingsRes = await handlSiteSettingsFetch({});\r\n\r\n      // console.log('siteSettingsRes', siteSettingsRes)\r\n    };\r\n    getSiteSettings();\r\n  }, [UpdateSiteSettingsState]);\r\n\r\n  // console.log('siteSettingsState', siteSettingsState);\r\n\r\n  const handleSubmit = async (values: any, actions: any) => {\r\n    const addSiteInfoRes = await handleUpdateSiteSettingsFetch({\r\n      body: {\r\n        title: values.title,\r\n        adminName: values.adminName,\r\n        adminEmail: values.adminEmail,\r\n        adminPhone: values.adminPhone,\r\n      },\r\n    });\r\n\r\n    // @ts-ignore\r\n    if (addSiteInfoRes && addSiteInfoRes.status === 'ok') {\r\n      openSuccessNotification();\r\n\r\n      // setBrandList([...brandList, {\r\n      //     id: addBrandRes['id'] || '',\r\n      //     key: addBrandRes['id'] || '',\r\n      //     name: addBrandRes['name'] || '',\r\n      //     description: addBrandRes['description'] || '',\r\n      //     // @ts-ignore\r\n      //     ...addBrandRes\r\n      // }]);\r\n\r\n      actions.resetForm();\r\n    } else {\r\n      openErrorNotification();\r\n    }\r\n\r\n    actions.setSubmitting(false);\r\n  };\r\n\r\n  const getisSubmitButtonDisabled = (values, isValid) => {\r\n    if (!values.title || !values.adminEmail || !isValid) {\r\n      return true;\r\n    }\r\n    return false;\r\n  };\r\n\r\n  const getInitialValues = () => {\r\n    if (\r\n      siteSettingsState.data &&\r\n      Object.keys(siteSettingsState.data).length > 0\r\n    ) {\r\n      return { ...siteSettingsState.data };\r\n    } else {\r\n      return initialValues;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Formik\r\n      onSubmit={(values, actions) => handleSubmit(values, actions)}\r\n      enableReinitialize={true}\r\n      initialValues={getInitialValues()}\r\n    >\r\n      {({\r\n        handleChange,\r\n        values,\r\n        handleSubmit,\r\n        errors,\r\n        isValid,\r\n        isSubmitting,\r\n        touched,\r\n        handleBlur,\r\n        setFieldTouched,\r\n        handleReset,\r\n      }) => (\r\n        <>\r\n          <div className='siteInfoContainer__item'>\r\n            <div className='siteInfoContainer__item-item'>\r\n              <Input\r\n                label='Admin Title'\r\n                value={values.title}\r\n                name='title'\r\n                isError={\r\n                  (touched.title && errors.title) ||\r\n                  (!isSubmitting &&\r\n                    UpdateSiteSettingsState.error['error']['title'])\r\n                }\r\n                errorString={\r\n                  (touched.title && errors.title) ||\r\n                  (!isSubmitting &&\r\n                    UpdateSiteSettingsState.error['error']['title'])\r\n                }\r\n                onChange={(e: any) => {\r\n                  handleChange(e);\r\n                  setFieldTouched('title');\r\n                }}\r\n              />\r\n            </div>\r\n            <div className='siteInfoContainer__item-item'>\r\n              <Input\r\n                label='Admin Name'\r\n                value={values.adminName}\r\n                name='adminName'\r\n                isError={\r\n                  (touched.adminName && errors.adminName) ||\r\n                  (!isSubmitting &&\r\n                    UpdateSiteSettingsState.error['error']['adminName'])\r\n                }\r\n                errorString={\r\n                  (touched.adminName && errors.adminName) ||\r\n                  (!isSubmitting &&\r\n                    UpdateSiteSettingsState.error['error']['adminName'])\r\n                }\r\n                onChange={(e: any) => {\r\n                  handleChange(e);\r\n                  setFieldTouched('adminName');\r\n                }}\r\n              />\r\n            </div>\r\n            <div className='siteInfoContainer__item-item-left'>\r\n              <Input\r\n                label='Admin phone'\r\n                value={values.adminPhone}\r\n                name='adminPhone'\r\n                isError={\r\n                  (touched.adminPhone && errors.adminPhone) ||\r\n                  (!isSubmitting &&\r\n                    UpdateSiteSettingsState.error['error']['adminPhone'])\r\n                }\r\n                errorString={\r\n                  (touched.adminPhone && errors.adminPhone) ||\r\n                  (!isSubmitting &&\r\n                    UpdateSiteSettingsState.error['error']['adminPhone'])\r\n                }\r\n                onChange={(e: any) => {\r\n                  handleChange(e);\r\n                  setFieldTouched('adminPhone');\r\n                }}\r\n              />\r\n            </div>\r\n\r\n            <div\r\n              className='siteInfoContainer__item-item'\r\n              style={{\r\n                marginLeft: '15px',\r\n              }}\r\n            >\r\n              <Input\r\n                label='Admin Email'\r\n                value={values.adminEmail}\r\n                name='adminEmail'\r\n                isError={\r\n                  (touched.adminEmail && errors.adminEmail) ||\r\n                  (!isSubmitting &&\r\n                    UpdateSiteSettingsState.error['error']['adminEmail'])\r\n                }\r\n                errorString={\r\n                  (touched.adminEmail && errors.adminEmail) ||\r\n                  (!isSubmitting &&\r\n                    UpdateSiteSettingsState.error['error']['adminEmail'])\r\n                }\r\n                onChange={(e: any) => {\r\n                  handleChange(e);\r\n                  setFieldTouched('adminEmail');\r\n                }}\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <div\r\n            style={{\r\n              marginTop: '10px',\r\n            }}\r\n          ></div>\r\n\r\n          <Button\r\n            onClick={(e: any) => handleSubmit(e)}\r\n            loading={isSubmitting}\r\n            disabled={getisSubmitButtonDisabled(values, isValid)}\r\n            className='btnPrimaryClassNameoutline'\r\n          >\r\n            Update Admin Info\r\n          </Button>\r\n\r\n          <div\r\n            style={{\r\n              marginBottom: '10px',\r\n            }}\r\n          ></div>\r\n        </>\r\n      )}\r\n    </Formik>\r\n  );\r\n};\r\n\r\nexport default UpdateSiteinfo;\r\n//\r\n","import React, { useEffect } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\nimport { useHandleFetch } from '../../hooks';\r\n// import third party ui lib\r\nimport { notification, Button } from 'antd';\r\n\r\nimport { CheckCircleOutlined, InfoCircleOutlined } from '@ant-design/icons';\r\n\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\n// import MediaLibrary from \"../../components/MediaLibrary\";\r\n\r\nconst validationSchema = Yup.object().shape({\r\n  invoiceTitle: Yup.string()\r\n    .label('Title')\r\n    .required('Invoice title is required'),\r\n});\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n  notification.success({\r\n    message: message || 'Site Invoice Updated',\r\n    description: '',\r\n    icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n  });\r\n};\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n  notification.success({\r\n    message: message || 'Something Went Wrong',\r\n    description: '',\r\n    icon: <InfoCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n  });\r\n};\r\n\r\nconst initialValues = {\r\n  invoiceTitle: '',\r\n  address: '',\r\n  phone: '',\r\n  email: '',\r\n  additionalText: '',\r\n};\r\n\r\ninterface Props {}\r\n\r\nconst UpdateSiteinfo = ({}: Props) => {\r\n  const [\r\n    updateInfovSettingsState,\r\n    handleUpdateInvoiceSettingsFetch,\r\n  ] = useHandleFetch({}, 'updateInvoiceSettings');\r\n  const [InvoiceSettingsState, handlSiteInvoiceSettingsFetch] = useHandleFetch(\r\n    {},\r\n    'invoiceSettingsDetail'\r\n  );\r\n\r\n  useEffect(() => {\r\n    const getSiteSettings = async () => {\r\n      const siteSettingsRes = await handlSiteInvoiceSettingsFetch({});\r\n\r\n      // console.log('siteSettingsRes', siteSettingsRes)\r\n    };\r\n    getSiteSettings();\r\n  }, [updateInfovSettingsState]);\r\n\r\n  const handleSubmit = async (values: any, actions: any) => {\r\n    const updateInvoiceRes = await handleUpdateInvoiceSettingsFetch({\r\n      body: {\r\n        invoiceTitle: values.invoiceTitle,\r\n        address: values.address,\r\n        phone: values.phone,\r\n        email: values.email,\r\n        additionalText: values.additionalText,\r\n      },\r\n    });\r\n\r\n    // @ts-ignore\r\n    if (updateInvoiceRes && updateInvoiceRes.status === 'ok') {\r\n      openSuccessNotification();\r\n\r\n      // setBrandList([...brandList, {\r\n      //     id: addBrandRes['id'] || '',\r\n      //     key: addBrandRes['id'] || '',\r\n      //     name: addBrandRes['name'] || '',\r\n      //     description: addBrandRes['description'] || '',\r\n      //     // @ts-ignore\r\n      //     ...addBrandRes\r\n      // }]);\r\n\r\n      actions.resetForm();\r\n    } else {\r\n      openErrorNotification();\r\n    }\r\n\r\n    actions.setSubmitting(false);\r\n  };\r\n\r\n  const getisSubmitButtonDisabled = (values, isValid) => {\r\n    if (!values.invoiceTitle || !isValid) {\r\n      return true;\r\n    }\r\n    return false;\r\n  };\r\n\r\n  const getInitialValues = () => {\r\n    if (\r\n      InvoiceSettingsState.data &&\r\n      Object.keys(InvoiceSettingsState.data).length > 0\r\n    ) {\r\n      return { ...InvoiceSettingsState.data };\r\n    } else {\r\n      return initialValues;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Formik\r\n      onSubmit={(values, actions) => handleSubmit(values, actions)}\r\n      validationSchema={validationSchema}\r\n      enableReinitialize={true}\r\n      initialValues={getInitialValues()}\r\n    >\r\n      {({\r\n        handleChange,\r\n        values,\r\n        handleSubmit,\r\n        errors,\r\n        isValid,\r\n        isSubmitting,\r\n        touched,\r\n        handleBlur,\r\n        setFieldTouched,\r\n        handleReset,\r\n      }) => (\r\n        <>\r\n          <div className='siteInfoContainer__item'>\r\n            <div className='siteInfoContainer__item-item'>\r\n              <Input\r\n                label='Company Name'\r\n                value={values.invoiceTitle}\r\n                name='invoiceTitle'\r\n                isError={\r\n                  (touched.invoiceTitle && errors.invoiceTitle) ||\r\n                  (!isSubmitting &&\r\n                    updateInfovSettingsState.error['error']['invoiceTitle'])\r\n                }\r\n                errorString={\r\n                  (touched.invoiceTitle && errors.invoiceTitle) ||\r\n                  (!isSubmitting &&\r\n                    updateInfovSettingsState.error['error']['invoiceTitle'])\r\n                }\r\n                onChange={(e: any) => {\r\n                  handleChange(e);\r\n                  setFieldTouched('invoiceTitle');\r\n                }}\r\n              />\r\n            </div>\r\n            <div className='siteInfoContainer__item-item'>\r\n              <Input\r\n                label='Phone Number'\r\n                value={values.phone}\r\n                name='phone'\r\n                isError={\r\n                  (touched.phone && errors.phone) ||\r\n                  (!isSubmitting &&\r\n                    updateInfovSettingsState.error['error']['phone'])\r\n                }\r\n                errorString={\r\n                  (touched.phone && errors.phone) ||\r\n                  (!isSubmitting &&\r\n                    updateInfovSettingsState.error['error']['phone'])\r\n                }\r\n                onChange={(e: any) => {\r\n                  handleChange(e);\r\n                  setFieldTouched('phone');\r\n                }}\r\n              />\r\n            </div>\r\n            <div className='siteInfoContainer__item-item'>\r\n              <Input\r\n                label='Email'\r\n                value={values.email}\r\n                name='email'\r\n                isError={\r\n                  (touched.email && errors.email) ||\r\n                  (!isSubmitting &&\r\n                    updateInfovSettingsState.error['error']['email'])\r\n                }\r\n                errorString={\r\n                  (touched.email && errors.email) ||\r\n                  (!isSubmitting &&\r\n                    updateInfovSettingsState.error['error']['email'])\r\n                }\r\n                onChange={(e: any) => {\r\n                  handleChange(e);\r\n                  setFieldTouched('email');\r\n                }}\r\n              />\r\n            </div>\r\n\r\n            <div className='siteInfoContainer__item-item'>\r\n              <Input\r\n                label='Additional Text'\r\n                value={values.additionalText}\r\n                name='additionalText'\r\n                isError={\r\n                  (touched.additionalText && errors.additionalText) ||\r\n                  (!isSubmitting &&\r\n                    updateInfovSettingsState.error['error']['additionalText'])\r\n                }\r\n                errorString={\r\n                  (touched.additionalText && errors.additionalText) ||\r\n                  (!isSubmitting &&\r\n                    updateInfovSettingsState.error['error']['additionalText'])\r\n                }\r\n                onChange={(e: any) => {\r\n                  handleChange(e);\r\n                  setFieldTouched('additionalText');\r\n                }}\r\n              />\r\n            </div>\r\n\r\n            <div className='siteInfoContainer__item-item-left'>\r\n              <TextArea\r\n                label='Address'\r\n                value={values.address}\r\n                name='address'\r\n                isError={\r\n                  (touched.address && errors.address) ||\r\n                  (!isSubmitting &&\r\n                    updateInfovSettingsState.error['error']['address'])\r\n                }\r\n                errorString={\r\n                  (touched.address && errors.address) ||\r\n                  (!isSubmitting &&\r\n                    updateInfovSettingsState.error['error']['address'])\r\n                }\r\n                onChange={(e: any) => {\r\n                  handleChange(e);\r\n                  setFieldTouched('address');\r\n                }}\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <div\r\n            style={{\r\n              marginTop: '10px',\r\n            }}\r\n          ></div>\r\n\r\n          <Button\r\n            onClick={(e: any) => handleSubmit(e)}\r\n            loading={isSubmitting}\r\n            disabled={getisSubmitButtonDisabled(values, isValid)}\r\n            className='btnPrimaryClassNameoutline'\r\n          >\r\n            Update Invoice Info\r\n          </Button>\r\n\r\n          <div\r\n            style={{\r\n              marginBottom: '10px',\r\n            }}\r\n          ></div>\r\n        </>\r\n      )}\r\n    </Formik>\r\n  );\r\n};\r\n\r\nexport default UpdateSiteinfo;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\nimport { useHandleFetch } from '../../hooks';\r\n// import third party ui lib\r\nimport { notification, Button } from 'antd';\r\n\r\nimport { CheckCircleOutlined, InfoCircleOutlined } from '@ant-design/icons';\r\n\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport MediaLibrary from '../../components/MediaLibrary';\r\n\r\nconst validationSchema = Yup.object().shape({\r\n  title: Yup.string().label('Title').required('Site title can not be empty'),\r\n  adminEmail: Yup.string()\r\n    .label('Admin Email')\r\n    .required('Admin Email can not be empty'),\r\n});\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n  notification.success({\r\n    message: message || 'Site Info Updated',\r\n    description: '',\r\n    icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n  });\r\n};\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n  notification.success({\r\n    message: message || 'Something Went Wrong',\r\n    description: '',\r\n    icon: <InfoCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n  });\r\n};\r\n\r\nconst initialValues = {\r\n  metaTitle: '',\r\n  metaTags: '',\r\n  metaDescription: '',\r\n};\r\n\r\ninterface Props {}\r\n\r\nconst UpdateSiteSEO = ({}: Props) => {\r\n  const [\r\n    UpdateSiteSettingsState,\r\n    handleUpdateSiteSettingsFetch,\r\n  ] = useHandleFetch({}, 'updateSiteSEO');\r\n  const [siteSettingsState, handlSiteSettingsFetch] = useHandleFetch(\r\n    {},\r\n    'getSiteSEO'\r\n  );\r\n\r\n  useEffect(() => {\r\n    const getSiteSettings = async () => {\r\n      const siteSettingsRes = await handlSiteSettingsFetch({});\r\n    };\r\n    getSiteSettings();\r\n  }, [UpdateSiteSettingsState]);\r\n\r\n  // console.log('siteSettingsState', siteSettingsState);\r\n\r\n  const handleSubmit = async (values: any, actions: any) => {\r\n    const addSiteInfoRes = await handleUpdateSiteSettingsFetch({\r\n      body: {\r\n        metaTitle: values.metaTitle,\r\n        metaTags: values.metaTags,\r\n        metaDescription: values.metaDescription,\r\n      },\r\n    });\r\n\r\n    // @ts-ignore\r\n    if (addSiteInfoRes && addSiteInfoRes.status === 'ok') {\r\n      openSuccessNotification();\r\n\r\n      // setBrandList([...brandList, {\r\n      //     id: addBrandRes['id'] || '',\r\n      //     key: addBrandRes['id'] || '',\r\n      //     name: addBrandRes['name'] || '',\r\n      //     description: addBrandRes['description'] || '',\r\n      //     // @ts-ignore\r\n      //     ...addBrandRes\r\n      // }]);\r\n\r\n      actions.resetForm();\r\n    } else {\r\n      openErrorNotification();\r\n    }\r\n\r\n    actions.setSubmitting(false);\r\n  };\r\n\r\n  const getisSubmitButtonDisabled = (values, isValid) => {\r\n    if (!values.metaTitle || !values.metaTags || !isValid) {\r\n      return true;\r\n    }\r\n    return false;\r\n  };\r\n\r\n  const getInitialValues = () => {\r\n    if (\r\n      siteSettingsState.data &&\r\n      Object.keys(siteSettingsState.data).length > 0\r\n    ) {\r\n      return { ...siteSettingsState.data };\r\n    } else {\r\n      return initialValues;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Formik\r\n      onSubmit={(values, actions) => handleSubmit(values, actions)}\r\n      enableReinitialize={true}\r\n      initialValues={getInitialValues()}\r\n    >\r\n      {({\r\n        handleChange,\r\n        values,\r\n        handleSubmit,\r\n        errors,\r\n        isValid,\r\n        isSubmitting,\r\n        touched,\r\n        handleBlur,\r\n        setFieldTouched,\r\n        handleReset,\r\n      }) => (\r\n        <>\r\n          <div className='siteInfoContainer__item'>\r\n            <div className='siteInfoContainer__item-item'>\r\n              <Input\r\n                label='Meta Title'\r\n                value={values.metaTitle}\r\n                name='metaTitle'\r\n                isError={\r\n                  (touched.metaTitle && errors.metaTitle) ||\r\n                  (!isSubmitting &&\r\n                    UpdateSiteSettingsState.error['error']['metaTitle'])\r\n                }\r\n                errorString={\r\n                  (touched.metaTitle && errors.metaTitle) ||\r\n                  (!isSubmitting &&\r\n                    UpdateSiteSettingsState.error['error']['metaTitle'])\r\n                }\r\n                onChange={(e: any) => {\r\n                  handleChange(e);\r\n                  setFieldTouched('metaTitle');\r\n                }}\r\n              />\r\n            </div>\r\n            <div className='siteInfoContainer__item-item'>\r\n              <Input\r\n                label='Meta Tags'\r\n                value={values.metaTags}\r\n                name='metaTags'\r\n                isError={\r\n                  (touched.metaTags && errors.metaTags) ||\r\n                  (!isSubmitting &&\r\n                    UpdateSiteSettingsState.error['error']['metaTags'])\r\n                }\r\n                errorString={\r\n                  (touched.metaTags && errors.metaTags) ||\r\n                  (!isSubmitting &&\r\n                    UpdateSiteSettingsState.error['error']['metaTags'])\r\n                }\r\n                onChange={(e: any) => {\r\n                  handleChange(e);\r\n                  setFieldTouched('metaTags');\r\n                }}\r\n              />\r\n            </div>\r\n            <div className='siteInfoContainer__item-item-left'>\r\n              <TextArea\r\n                label='Meta Description'\r\n                value={values.metaDescription}\r\n                name='metaDescription'\r\n                isError={\r\n                  (touched.metaDescription && errors.metaDescription) ||\r\n                  (!isSubmitting &&\r\n                    UpdateSiteSettingsState.error['error']['metaDescription'])\r\n                }\r\n                errorString={\r\n                  (touched.metaDescription && errors.metaDescription) ||\r\n                  (!isSubmitting &&\r\n                    UpdateSiteSettingsState.error['error']['metaDescription'])\r\n                }\r\n                onChange={(e: any) => {\r\n                  handleChange(e);\r\n                  setFieldTouched('metaDescription');\r\n                }}\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <div\r\n            style={{\r\n              marginTop: '10px',\r\n            }}\r\n          ></div>\r\n\r\n          <Button\r\n            onClick={(e: any) => handleSubmit(e)}\r\n            loading={isSubmitting}\r\n            // disabled={getisSubmitButtonDisabled(values, isValid)}\r\n            className='btnPrimaryClassNameoutline'\r\n          >\r\n            Update Site SEO\r\n          </Button>\r\n\r\n          <div\r\n            style={{\r\n              marginBottom: '10px',\r\n            }}\r\n          ></div>\r\n        </>\r\n      )}\r\n    </Formik>\r\n  );\r\n};\r\n\r\nexport default UpdateSiteSEO;\r\n//\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n\r\nimport { useHandleFetch } from '../../hooks';\r\n// import third party ui lib\r\nimport { notification, Button } from 'antd';\r\n\r\nimport {\r\n    CheckCircleOutlined\r\n} from '@ant-design/icons';\r\n\r\n\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport MediaLibrary from \"../../components/MediaLibrary\";\r\n\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    newPassword: Yup.string()\r\n    .label('New Password')\r\n    .required()\r\n    .min(6, 'New Password must have at least 6 characters'),\r\n  newPassword2: Yup.string()\r\n    .label('Confirm New password')\r\n    .required()\r\n    .min(6, 'Confirm New password must have at least 6 characters')\r\n    .oneOf(\r\n      [Yup.ref('newPassword'), null],\r\n      'Confirm new password must match to new password'\r\n    ),\r\n});\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Site Info Updated',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Something Went Wrong',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst initialValues = {\r\n    name: '',\r\n    phone: '',\r\n    email: '',\r\n    newPass: '',\r\n    password:'',\r\n    newPassword: '',\r\n    newPassword2: '',\r\n}\r\n\r\n\r\n\r\ninterface Props {\r\n\r\n\r\n}\r\n\r\nconst ChangeAdminPassword = ({ }: Props) => {\r\n\r\n    const [UpdateSiteSettingsState, handleUpdateSiteSettingsFetch] = useHandleFetch({}, 'updateAdminCredential');\r\n    const [siteSettingsState, handlSiteSettingsFetch] = useHandleFetch({}, 'getAdminCredential');\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        const getSiteSettings = async () => {\r\n            const siteSettingsRes = await handlSiteSettingsFetch({});\r\n\r\n        }\r\n        getSiteSettings();\r\n    }, [UpdateSiteSettingsState]);\r\n\r\n\r\n\r\n    console.log('siteSettingsState',siteSettingsState)\r\n\r\n    // console.log('siteSettingsState', siteSettingsState);\r\n\r\n    const handleSubmit = async (values: any, actions: any) => {\r\n\r\n\r\n        const addSiteInfoRes = await handleUpdateSiteSettingsFetch({\r\n            body: {\r\n                name: values.name,\r\n                phone: values.phone,\r\n                email: values.email,\r\n                password: values.password, \r\n                newPass: values.newPassword,\r\n                newPassRepeat: values.newPassword2,\r\n            },\r\n        });\r\n\r\n        // @ts-ignore\r\n        if (addSiteInfoRes && addSiteInfoRes.status === 'ok') {\r\n            openSuccessNotification();\r\n\r\n\r\n            // setBrandList([...brandList, {\r\n            //     id: addBrandRes['id'] || '',\r\n            //     key: addBrandRes['id'] || '',\r\n            //     name: addBrandRes['name'] || '',\r\n            //     description: addBrandRes['description'] || '',\r\n            //     // @ts-ignore\r\n            //     ...addBrandRes\r\n            // }]);\r\n\r\n            actions.resetForm();\r\n        }\r\n        else {\r\n            openErrorNotification();\r\n        }\r\n\r\n\r\n\r\n\r\n        actions.setSubmitting(false);\r\n\r\n    };\r\n\r\n\r\n\r\n\r\n    const getInitialValues = () => {\r\n        if (siteSettingsState.data && Object.keys(siteSettingsState.data).length > 0) {\r\n            return { ...siteSettingsState.data }\r\n        }\r\n        else {\r\n            return initialValues\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <Formik\r\n            onSubmit={(values, actions) => handleSubmit(values, actions)}\r\n            enableReinitialize={true}\r\n            initialValues={\r\n                getInitialValues()\r\n            }\r\n        >\r\n            {({\r\n                handleChange,\r\n                values,\r\n                handleSubmit,\r\n                errors,\r\n                isValid,\r\n                isSubmitting,\r\n                touched,\r\n                handleBlur,\r\n                setFieldTouched,\r\n                handleReset,\r\n            }) => (\r\n                    <>\r\n\r\n                        <div className='siteInfoContainer__item'>\r\n                            <div className='siteInfoContainer__item-item'>\r\n                                <Input\r\n                                    type='text'\r\n                                    label='Name'\r\n                                    value={values.name}\r\n                                    name='name'\r\n                                    isError={(touched.name && errors.name) ||\r\n                                        (!isSubmitting && UpdateSiteSettingsState.error['error']['name'])}\r\n\r\n                                    errorString={(touched.name && errors.name) ||\r\n                                        (!isSubmitting && UpdateSiteSettingsState.error['error']['name'])}\r\n                                    onChange={(e: any) => {\r\n                                        handleChange(e);\r\n                                        setFieldTouched('name');\r\n                                    }}\r\n                                />\r\n                            </div>\r\n                            <div className='siteInfoContainer__item-item'>\r\n                                <Input\r\n                                    type='text'\r\n                                    label='Phone'\r\n                                    value={values.phone}\r\n                                    name='phone'\r\n                                    isError={(touched.phone && errors.phone) ||\r\n                                        (!isSubmitting && UpdateSiteSettingsState.error['error']['phone'])}\r\n\r\n                                    errorString={(touched.phone && errors.phone) ||\r\n                                        (!isSubmitting && UpdateSiteSettingsState.error['error']['phone'])}\r\n                                    onChange={(e: any) => {\r\n                                        handleChange(e);\r\n                                        setFieldTouched('phone');\r\n                                    }}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div style={{\r\n                            width: '90%',\r\n                            paddingRight: '30px'\r\n                        }}>\r\n                                     <Input\r\n                                    type='text'\r\n                                    label='Email'\r\n                                    value={values.email}\r\n                                    name='email'\r\n                                    isError={(touched.email && errors.email) ||\r\n                                        (!isSubmitting && UpdateSiteSettingsState.error['error']['email'])}\r\n\r\n                                    errorString={(touched.email && errors.email) ||\r\n                                        (!isSubmitting && UpdateSiteSettingsState.error['error']['email'])}\r\n                                    onChange={(e: any) => {\r\n                                        handleChange(e);\r\n                                        setFieldTouched('email');\r\n                                    }}\r\n                                />\r\n                        </div>\r\n\r\n\r\n                        <div style={{\r\n                            width: '90%',\r\n                            paddingRight: '30px'\r\n                        }}>\r\n                                    <Input\r\n                                    type='password'\r\n                                    label='Password (Enter current password to update credentials)'\r\n                                    value={values.password}\r\n                                    name='password'\r\n                                    isError={(touched.password && errors.password) ||\r\n                                        (!isSubmitting && UpdateSiteSettingsState.error['error']['password'])}\r\n\r\n                                    errorString={(touched.password && errors.password) ||\r\n                                        (!isSubmitting && UpdateSiteSettingsState.error['error']['password'])}\r\n                                    onChange={(e: any) => {\r\n                                        handleChange(e);\r\n                                        setFieldTouched('password');\r\n                                    }}\r\n                                />\r\n                        </div>\r\n\r\n\r\n                        <div className='siteInfoContainer__item'>\r\n                            <div className='siteInfoContainer__item-item'>\r\n                                <Input\r\n                                    type='password'\r\n                                    label='New Password'\r\n                                    value={values.newPassword}\r\n                                    name='newPassword'\r\n                                    isError={(touched.newPassword && errors.newPassword) ||\r\n                                        (!isSubmitting && UpdateSiteSettingsState.error['error']['newPassword'])}\r\n\r\n                                    errorString={(touched.newPassword && errors.newPassword) ||\r\n                                        (!isSubmitting && UpdateSiteSettingsState.error['error']['newPassword'])}\r\n                                    onChange={(e: any) => {\r\n                                        handleChange(e);\r\n                                        setFieldTouched('newPassword');\r\n                                    }}\r\n                                />\r\n                            </div>\r\n                            <div className='siteInfoContainer__item-item'>\r\n                                <Input\r\n                                    type='password'\r\n                                    label='Confirm New Password'\r\n                                    value={values.newPassword2}\r\n                                    name='newPassword2'\r\n                                    isError={(touched.newPassword2 && errors.newPassword2) ||\r\n                                        (!isSubmitting && UpdateSiteSettingsState.error['error']['newPassword2'])}\r\n\r\n                                    errorString={(touched.newPassword2 && errors.newPassword2) ||\r\n                                        (!isSubmitting && UpdateSiteSettingsState.error['error']['newPassword2'])}\r\n                                    onChange={(e: any) => {\r\n                                        handleChange(e);\r\n                                        setFieldTouched('newPassword2');\r\n                                    }}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n\r\n\r\n                        <div style={{\r\n                            marginTop: '10px'\r\n                        }}></div>\r\n\r\n                        <Button\r\n\r\n                            onClick={(e: any) => handleSubmit(e)}\r\n                            loading={isSubmitting}\r\n                            // disabled={getisSubmitButtonDisabled(values, isValid)}\r\n                            className='btnPrimaryClassNameoutline'\r\n                        >\r\n                          Update Credentials\r\n                            </Button>\r\n\r\n                        <div style={{\r\n                            marginBottom: '10px'\r\n                        }}></div>\r\n\r\n                    </>\r\n                )}\r\n        </Formik >\r\n\r\n\r\n\r\n\r\n    );\r\n};\r\n\r\nexport default ChangeAdminPassword;\r\n//","import React, { useState } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\nimport { useHandleFetch } from '../../hooks';\r\n// import third party ui lib\r\nimport {\r\n  Upload,\r\n  message,\r\n  Switch,\r\n  Select,\r\n  Button,\r\n  notification,\r\n  Modal,\r\n  Tabs,\r\n  Tooltip,\r\n} from 'antd';\r\n\r\nimport {\r\n  FileOutlined,\r\n  InboxOutlined,\r\n  FileAddOutlined,\r\n  DeleteOutlined,\r\n  CheckCircleOutlined,\r\n  PlusOutlined,\r\n  FileImageFilled,\r\n  CheckOutlined,\r\n  CloseOutlined,\r\n  LoadingOutlined,\r\n  InfoCircleOutlined,\r\n} from '@ant-design/icons';\r\n\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport MediaLibrary from '../../components/MediaLibrary';\r\nimport AdminSiteInfo from './AdminSiteInfo';\r\nimport SiteInfoInvoice from './SiteInfoInvoice';\r\nimport SiteSeo from './SiteSeo';\r\nimport ChangeAdminPassword from './ChangeAdminPassword';\r\n\r\n// import config\r\nimport config from '../../config.json';\r\n\r\nconst validationSchema = Yup.object().shape({\r\n  name: Yup.string()\r\n    .label('Name')\r\n    .required('Name is required')\r\n    .min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\nconst { TabPane } = Tabs;\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n  notification.success({\r\n    message: message || 'Brand Created',\r\n    description: '',\r\n    icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n  });\r\n};\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n  notification.success({\r\n    message: message || 'Something Went Wrong',\r\n    description: '',\r\n    icon: <InfoCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n  });\r\n};\r\n\r\nconst initialValues = {\r\n  name: '',\r\n  description: '',\r\n  image: [],\r\n  url: '',\r\n  cover: '',\r\n};\r\n\r\ninterface Props {\r\n  addNewCategoryVisible?: any;\r\n  setAddNewCategoryVisible?: any;\r\n  brandList?: any;\r\n  setBrandList?: any;\r\n}\r\n\r\nconst SiteInfo = ({\r\n  addNewCategoryVisible,\r\n  setAddNewCategoryVisible,\r\n  brandList,\r\n  setBrandList,\r\n}: Props) => {\r\n  const [\r\n    updateSiteLogoAndIcon,\r\n    handleUpdateSiteLogoAndIconFetch,\r\n  ] = useHandleFetch({}, 'updateSiteLogoAndIcon', 'form');\r\n\r\n  const [imageUrl, setImageUrl] = useState(`${config.baseURL}/images/logo.png`);\r\n  const [loadingThumnail, setLoadingThumbnail] = useState(false);\r\n\r\n  const [iconimageUrl, setIconImageUrl] = useState(\r\n    `${config.baseURL}/favicon.ico`\r\n  );\r\n  const [loadingIcon, setloadingIcon] = useState(false);\r\n\r\n  const [appLogo, setAppLogo] = useState(\r\n    `${config.baseURL}/images/logo-app.png`\r\n  );\r\n  const [loadingAppLogo, setloadingAppLogo] = useState(false);\r\n\r\n  function getBase64(img, callback) {\r\n    const reader = new FileReader();\r\n    reader.addEventListener('load', () => callback(reader.result));\r\n    reader.readAsDataURL(img);\r\n  }\r\n\r\n  function beforeUpload(file) {\r\n    const isJpgOrPng = file.type === 'image/jpeg' || file.type === 'image/png';\r\n    if (!isJpgOrPng) {\r\n      message.error('You can only upload JPG/PNG file!');\r\n    }\r\n    const isLt2M = file.size / 1024 / 1024 < 2;\r\n    if (!isLt2M) {\r\n      message.error('Image must smaller than 2MB!');\r\n    }\r\n\r\n    getBase64(file, (imageUrl) => {\r\n      setImageUrl(imageUrl);\r\n      const setNewIcon = async () => {\r\n        const formData = new FormData();\r\n        formData.append('logo', file);\r\n\r\n        const res = await handleUpdateSiteLogoAndIconFetch({\r\n          body: formData,\r\n        });\r\n\r\n        // @ts-ignore\r\n        if (res && res.status === 'ok') {\r\n          openSuccessNotification('Site Logo updated!');\r\n        } else {\r\n          openErrorNotification(\r\n            \"Couldn't update site Logo, Something went wrong\"\r\n          );\r\n        }\r\n      };\r\n\r\n      setNewIcon();\r\n      setLoadingThumbnail(false);\r\n    });\r\n\r\n    return false;\r\n  }\r\n\r\n  function beforeIconUpload(file) {\r\n    const isJpgOrPng = file.type === 'image/jpeg' || file.type === 'image/png';\r\n    if (!isJpgOrPng) {\r\n      message.error('You can only upload JPG/PNG file!');\r\n    }\r\n    const isLt2M = file.size / 1024 / 1024 < 2;\r\n    if (!isLt2M) {\r\n      message.error('Image must smaller than 2MB!');\r\n    }\r\n\r\n    getBase64(file, (imageUrl) => {\r\n      setIconImageUrl(imageUrl);\r\n      const setNewIcon = async () => {\r\n        const formData = new FormData();\r\n        formData.append('icon', file);\r\n\r\n        const res = await handleUpdateSiteLogoAndIconFetch({\r\n          body: formData,\r\n        });\r\n\r\n        // @ts-ignore\r\n        if (res && res.status === 'ok') {\r\n          openSuccessNotification('Site Icon updated!');\r\n        } else {\r\n          openErrorNotification(\r\n            \"Couldn't update site icon, Something went wrong\"\r\n          );\r\n        }\r\n      };\r\n\r\n      setNewIcon();\r\n      setloadingIcon(false);\r\n    });\r\n\r\n    return false;\r\n  }\r\n\r\n  function beforeAppIconUpload(file) {\r\n    const isJpgOrPng = file.type === 'image/jpeg' || file.type === 'image/png';\r\n    if (!isJpgOrPng) {\r\n      message.error('You can only upload JPG/PNG file!');\r\n    }\r\n    const isLt2M = file.size / 1024 / 1024 < 2;\r\n    if (!isLt2M) {\r\n      message.error('Image must smaller than 2MB!');\r\n    }\r\n\r\n    getBase64(file, (imageUrl) => {\r\n      setAppLogo(imageUrl);\r\n      const setNewIcon = async () => {\r\n        const formData = new FormData();\r\n        formData.append('logoApp', file);\r\n\r\n        const res = await handleUpdateSiteLogoAndIconFetch({\r\n          body: formData,\r\n        });\r\n\r\n        // @ts-ignore\r\n        if (res && res.status === 'ok') {\r\n          openSuccessNotification('App logo updated!');\r\n        } else {\r\n          openErrorNotification(\r\n            \"Couldn't update App logo, Something went wrong\"\r\n          );\r\n        }\r\n      };\r\n\r\n      setNewIcon();\r\n      setloadingAppLogo(false);\r\n    });\r\n\r\n    return false;\r\n  }\r\n\r\n  const uploadButton = (\r\n    <div>\r\n      {loadingThumnail ? <LoadingOutlined /> : <PlusOutlined />}\r\n      <div className='ant-upload-text'>Upload</div>\r\n    </div>\r\n  );\r\n\r\n  const iconUploadButton = (\r\n    <div>\r\n      {loadingIcon ? <LoadingOutlined /> : <PlusOutlined />}\r\n      <div className='ant-upload-text'>Upload</div>\r\n    </div>\r\n  );\r\n\r\n  const appIconUploadButton = (\r\n    <div>\r\n      {loadingAppLogo ? <LoadingOutlined /> : <PlusOutlined />}\r\n      <div className='ant-upload-text'>Upload</div>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <div className='siteInfoContainer'>\r\n        <Tabs defaultActiveKey='1'>\r\n          <TabPane tab='Site Info' key='1'>\r\n            <AdminSiteInfo />\r\n          </TabPane>\r\n          <TabPane tab='Site logo' key='2'>\r\n            <div\r\n              style={{\r\n                display: 'flex',\r\n                alignItems: 'center',\r\n                marginTop: '15px',\r\n              }}\r\n            >\r\n              <div\r\n                style={{\r\n                  marginRight: '40px',\r\n                }}\r\n              >\r\n                <div className='addproductSection-left-header'>\r\n                  <h3 className='inputFieldLabel'> Logo </h3>\r\n                  <Tooltip placement='left' title={'Update Site Logo image'}>\r\n                    <a href='###'>\r\n                      <InfoCircleOutlined />\r\n                    </a>\r\n                  </Tooltip>\r\n                </div>\r\n\r\n                <Upload\r\n                  style={{\r\n                    borderRadius: '8px',\r\n                  }}\r\n                  name='avatar'\r\n                  listType='picture-card'\r\n                  className='avatar-uploader'\r\n                  showUploadList={false}\r\n                  beforeUpload={beforeUpload}\r\n                  multiple={false}\r\n                >\r\n                  {imageUrl ? (\r\n                    <img\r\n                      onError={() => setImageUrl('')}\r\n                      src={imageUrl}\r\n                      alt='avatar'\r\n                      style={{ width: '100%' }}\r\n                    />\r\n                  ) : (\r\n                    uploadButton\r\n                  )}\r\n                </Upload>\r\n              </div>\r\n\r\n              <div\r\n                style={{\r\n                  marginRight: '40px',\r\n                }}\r\n              >\r\n                <div className='addproductSection-left-header'>\r\n                  <h3 className='inputFieldLabel'> Icon </h3>\r\n                  <Tooltip placement='left' title={'Update Icon image'}>\r\n                    <a href='###'>\r\n                      <InfoCircleOutlined />\r\n                    </a>\r\n                  </Tooltip>\r\n                </div>\r\n\r\n                <Upload\r\n                  style={{\r\n                    borderRadius: '8px',\r\n                  }}\r\n                  name='avatar'\r\n                  listType='picture-card'\r\n                  className='avatar-uploader'\r\n                  showUploadList={false}\r\n                  beforeUpload={beforeIconUpload}\r\n                  multiple={false}\r\n                >\r\n                  {iconimageUrl ? (\r\n                    <img\r\n                      onError={() => setIconImageUrl('')}\r\n                      src={iconimageUrl}\r\n                      alt='avatar'\r\n                      style={{ width: '100%' }}\r\n                    />\r\n                  ) : (\r\n                    iconUploadButton\r\n                  )}\r\n                </Upload>\r\n              </div>\r\n\r\n              <div\r\n                style={{\r\n                  marginRight: '20px',\r\n                }}\r\n              >\r\n                <div className='addproductSection-left-header'>\r\n                  <h3 className='inputFieldLabel'> App Logo </h3>\r\n                  <Tooltip placement='left' title={'Update App logo image'}>\r\n                    <a href='###'>\r\n                      <InfoCircleOutlined />\r\n                    </a>\r\n                  </Tooltip>\r\n                </div>\r\n\r\n                <Upload\r\n                  style={{\r\n                    borderRadius: '8px',\r\n                  }}\r\n                  name='avatar'\r\n                  listType='picture-card'\r\n                  className='avatar-uploader'\r\n                  showUploadList={false}\r\n                  beforeUpload={beforeAppIconUpload}\r\n                  multiple={false}\r\n                >\r\n                  {appLogo ? (\r\n                    <img\r\n                      onError={() => setAppLogo('')}\r\n                      src={appLogo}\r\n                      alt='avatar'\r\n                      style={{ width: '100%' }}\r\n                    />\r\n                  ) : (\r\n                    appIconUploadButton\r\n                  )}\r\n                </Upload>\r\n              </div>\r\n            </div>\r\n\r\n            <div\r\n              style={{\r\n                marginBottom: '10px',\r\n              }}\r\n            ></div>\r\n          </TabPane>\r\n\r\n          <TabPane tab='Site SEO' key='3'>\r\n            <SiteSeo />\r\n          </TabPane>\r\n\r\n          <TabPane tab='Invoice Information' key='4'>\r\n            <SiteInfoInvoice />\r\n          </TabPane>\r\n\r\n          <TabPane tab='Change Credentials' key='5'>\r\n            <ChangeAdminPassword />\r\n          </TabPane>\r\n        </Tabs>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SiteInfo;\r\n","import React, { useState } from 'react';\r\nimport { Checkbox, Row, Col, Input } from 'antd';\r\ninterface Props {\r\n  checkedList?: any;\r\n  setCheckedList?: any;\r\n  plainOptions?: any;\r\n  defaultValue?: any;\r\n  checkAll?: any;\r\n  setCheckAll?: any;\r\n  setPlainOptions?: any;\r\n  cityListState?: any;\r\n}\r\n\r\nconst { Search } = Input;\r\n\r\nconst AccessCheckbox = ({\r\n  checkedList,\r\n  setCheckedList,\r\n  plainOptions,\r\n  defaultValue = [],\r\n  checkAll,\r\n  setCheckAll,\r\n  cityListState,\r\n  setPlainOptions,\r\n}: Props) => {\r\n  const [interminate, setInterminate] = useState(true);\r\n  const [searchValue, setsearchValue] = useState('');\r\n\r\n  const onChange = (checkedList) => {\r\n    setCheckedList(checkedList);\r\n    setInterminate(\r\n      !!checkedList.length && checkedList.length < plainOptions.length\r\n    );\r\n    setCheckAll(checkedList.length === plainOptions.length);\r\n  };\r\n\r\n  const onCheckAllChange = (e) => {\r\n    const checkedCities =\r\n      plainOptions && plainOptions.length > 0\r\n        ? plainOptions.map((city) => {\r\n            return city.value;\r\n          })\r\n        : [];\r\n    setCheckedList(e.target.checked ? checkedCities : []);\r\n    setInterminate(false);\r\n    console.log('e.target.checked', e.target.checked);\r\n    setCheckAll(e.target.checked);\r\n  };\r\n\r\n  console.log('defaultValue', defaultValue);\r\n\r\n  const onSearchChange = (e) => {\r\n    setsearchValue(e.target.value);\r\n\r\n    if (e.target.value === '') {\r\n      if (cityListState.data && cityListState.data.length > 0) {\r\n        // @ts-ignore\r\n        const categoryNames = cityListState.data.map((city) => {\r\n          return {\r\n            value: city.name,\r\n            name: city.name,\r\n          };\r\n        });\r\n        setPlainOptions(categoryNames);\r\n      }\r\n    } else {\r\n      const newOptions =\r\n        plainOptions.length > 0\r\n          ? plainOptions.filter((option) => {\r\n              return (\r\n                option &&\r\n                option.name.toLowerCase().includes(searchValue.toLowerCase())\r\n              );\r\n            })\r\n          : [];\r\n\r\n      setPlainOptions(newOptions);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div\r\n        style={{\r\n          borderBottom: '1px solid #eee',\r\n          marginBottom: '10px',\r\n        }}\r\n        className='site-checkbox-all-wrapper'\r\n      >\r\n        <Checkbox\r\n          style={{\r\n            marginBottom: '10px',\r\n          }}\r\n          // indeterminate={interminate}\r\n          onChange={onCheckAllChange}\r\n          checked={checkAll}\r\n        >\r\n          Select all\r\n        </Checkbox>\r\n\r\n        <Search\r\n          width={'100%'}\r\n          style={{\r\n            height: '30px',\r\n            borderRadius: '3px !important',\r\n            borderColor: '#eee !important',\r\n            margin: '10px 0',\r\n          }}\r\n          size='middle'\r\n          placeholder=''\r\n          onSearch={(value) => console.log(value)}\r\n          onChange={onSearchChange}\r\n        />\r\n        <div\r\n          style={{\r\n            marginBottom: '10px',\r\n          }}\r\n        ></div>\r\n      </div>\r\n      <Checkbox.Group\r\n        style={{ width: '100%' }}\r\n        value={checkedList}\r\n        defaultValue={defaultValue}\r\n        onChange={onChange}\r\n      >\r\n        <Row>\r\n          {plainOptions.map((accessItem) => {\r\n            return (\r\n              <Col\r\n                style={{\r\n                  marginBottom: '10px',\r\n                }}\r\n                span={8}\r\n              >\r\n                <Checkbox value={accessItem.value}>{accessItem.value}</Checkbox>\r\n              </Col>\r\n            );\r\n          })}\r\n        </Row>\r\n      </Checkbox.Group>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AccessCheckbox;\r\n","import React, { useState, useEffect } from 'react';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport {\r\n  DeleteOutlined,\r\n  FileAddOutlined,\r\n  CheckCircleOutlined,\r\n  FileImageFilled,\r\n  FileImageOutlined,\r\n  FileImageTwoTone,\r\n  PlusOutlined,\r\n  PlusCircleOutlined,\r\n  CloseOutlined,\r\n  CheckOutlined,\r\n  InfoCircleOutlined,\r\n  EditOutlined,\r\n} from '@ant-design/icons';\r\n\r\ninterface Props {\r\n  setdeliveryChargeList: any;\r\n  deliveryChargeList: any;\r\n  deliveryChargeItem: any;\r\n}\r\n\r\nconst DeliveryCharge = ({\r\n  deliveryChargeItem,\r\n  setdeliveryChargeList,\r\n  deliveryChargeList,\r\n}: Props) => {\r\n  const handleDeliveryChargeChange = (e) => {\r\n    const name = e.target.name;\r\n    const value = e.target.value;\r\n\r\n    const updatedValue = {\r\n      ...deliveryChargeItem,\r\n      [name]: value,\r\n      id: deliveryChargeItem.id,\r\n    };\r\n\r\n    const positionInAttribute = () => {\r\n      return deliveryChargeList\r\n        .map((item) => item.id)\r\n        .indexOf(deliveryChargeItem.id);\r\n    };\r\n\r\n    const index = positionInAttribute();\r\n\r\n    const updateAttributeList = [\r\n      ...deliveryChargeList.slice(0, index),\r\n      updatedValue,\r\n      ...deliveryChargeList.slice(index + 1),\r\n    ];\r\n    setdeliveryChargeList(updateAttributeList);\r\n  };\r\n\r\n  const handleAttributeDelete = () => {\r\n    console.log('delete---deliveryChargeItem', deliveryChargeItem);\r\n    console.log('delete-----deliveryChargeList', deliveryChargeList);\r\n\r\n    const positionInAttribute = () => {\r\n      return deliveryChargeList\r\n        .map((item) => item.id)\r\n        .indexOf(deliveryChargeItem.id);\r\n    };\r\n\r\n    const index = positionInAttribute();\r\n\r\n    const updateAttributeList = [\r\n      ...deliveryChargeList.slice(0, index),\r\n      ...deliveryChargeList.slice(index + 1),\r\n    ];\r\n    setdeliveryChargeList([...updateAttributeList]);\r\n\r\n    console.log('updated-----deliveryChargeList', updateAttributeList);\r\n  };\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        width: '100%',\r\n      }}\r\n    >\r\n      <div\r\n        style={{\r\n          width: '45%',\r\n          marginRight: '10px',\r\n        }}\r\n      >\r\n        <Input\r\n          min={0}\r\n          type='number'\r\n          addonBefore='Minimum Order'\r\n          value={deliveryChargeItem.minimumOrder}\r\n          name='minimumOrder'\r\n          onChange={handleDeliveryChargeChange}\r\n        />\r\n      </div>\r\n      <div\r\n        style={{\r\n          width: '45%',\r\n          marginRight: '10px',\r\n        }}\r\n      >\r\n        <Input\r\n          min={0}\r\n          type='number'\r\n          addonBefore='Charge'\r\n          value={deliveryChargeItem.charge}\r\n          name='charge'\r\n          onChange={handleDeliveryChargeChange}\r\n        />\r\n      </div>\r\n      <div\r\n        onClick={() => handleAttributeDelete()}\r\n        style={{\r\n          width: '5%',\r\n          marginBottom: '15px',\r\n          fontSize: '13px',\r\n          cursor: 'pointer',\r\n        }}\r\n      >\r\n        <CloseOutlined />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DeliveryCharge;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\nimport Empty from '../../components/Empty';\r\n\r\n// /\r\nimport CitySelectForDeliveryRegion from './CitySelectForDeliveryRegion';\r\n\r\nimport { useHandleFetch } from '../../hooks';\r\n// import third party ui lib\r\nimport {\r\n  Upload,\r\n  message,\r\n  Switch,\r\n  Select,\r\n  Button,\r\n  notification,\r\n  Modal,\r\n  Form,\r\n  Spin,\r\n} from 'antd';\r\n\r\nimport {\r\n  FileOutlined,\r\n  InboxOutlined,\r\n  RadiusUpleftOutlined,\r\n  RadiusUprightOutlined,\r\n  RadiusBottomleftOutlined,\r\n  RadiusBottomrightOutlined,\r\n  DeleteOutlined,\r\n  FileAddOutlined,\r\n  PlusOutlined,\r\n  CheckCircleOutlined,\r\n} from '@ant-design/icons';\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport DeliveryCharge from './DeliveryCharge';\r\n\r\nconst { Option } = Select;\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n  notification.success({\r\n    message: message || 'New Region Added',\r\n    description: '',\r\n    icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n  });\r\n};\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n  notification.success({\r\n    message: message || 'Something Went Wrong',\r\n    description: '',\r\n    icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n  });\r\n};\r\n\r\nconst validationSchema = Yup.object().shape({});\r\n\r\nconst initialValues = {\r\n  name: '',\r\n  pickUpLocation: '',\r\n  time: '',\r\n};\r\n\r\ninterface Props {\r\n  addNewCategoryVisible: any;\r\n  setAddNewCategoryVisible: any;\r\n  regionList?: any;\r\n  setRegionList?: any;\r\n}\r\n\r\nconst AddNewRegion = ({\r\n  addNewCategoryVisible,\r\n  setAddNewCategoryVisible,\r\n  regionList,\r\n  setRegionList,\r\n}: Props) => {\r\n  const [addRegionState, handleRegionFetch] = useHandleFetch({}, 'addRegion');\r\n  const [selectedCountryValue, setselectedCountryValue] = useState('');\r\n  const [selectedCityValue, setselectedCityValue] = useState('');\r\n\r\n  const [countryOptions, setcountryOptions] = useState([]);\r\n  const [cityOptions, setcityOptions] = useState([]);\r\n\r\n  const [accesscheckedList, setAccessCheckedList] = useState([]);\r\n  const [checkAll, setCheckAll] = useState(false);\r\n\r\n  const [countryListState, handleCountryListFetch] = useHandleFetch(\r\n    [],\r\n    'countryList'\r\n  );\r\n\r\n  const [cityListState, handleCityListFetch] = useHandleFetch([], 'cityList');\r\n\r\n  const [countryList, setCountryList] = useState([]);\r\n  const [cityList, setCityList] = useState([]);\r\n\r\n  const [deliveryChargeList, setdeliveryChargeList] = useState([\r\n    {\r\n      minimumOrder: '',\r\n      charge: '',\r\n      id: `${Math.floor(100000 + Math.random() * 900000)}`,\r\n    },\r\n  ]);\r\n\r\n  const handleSubmit = async (values: any, actions: any) => {\r\n    // console.log('selectedCityValue', selectedCityValue)\r\n\r\n    if (deliveryChargeList.length > 0) {\r\n      const charge = {};\r\n\r\n      for (let item of deliveryChargeList) {\r\n        if (charge[item['minimumOrder']] !== '' && item['charge'] !== '') {\r\n          charge[item['minimumOrder']] = item['charge'];\r\n        }\r\n      }\r\n\r\n      const addRegionRes = await handleRegionFetch({\r\n        body: {\r\n          name: values.name,\r\n          pickUpLocation: values.pickUpLocation,\r\n          time: values.time,\r\n          country: selectedCountryValue,\r\n          city: accesscheckedList,\r\n          charge,\r\n        },\r\n      });\r\n\r\n      // @ts-ignore\r\n      if (addRegionRes && addRegionRes.status === 'ok') {\r\n        openSuccessNotification();\r\n\r\n        setRegionList([\r\n          {\r\n            id: addRegionRes['_id'] || '',\r\n            key: addRegionRes['_id'] || '',\r\n            name: addRegionRes['name'] || '',\r\n            // @ts-ignore\r\n            ...addRegionRes,\r\n          },\r\n          ...regionList,\r\n        ]);\r\n        setAddNewCategoryVisible(false);\r\n        actions.resetForm();\r\n      } else {\r\n        openErrorNotification();\r\n      }\r\n    } else {\r\n      const addRegionRes = await handleRegionFetch({\r\n        body: {\r\n          name: values.name,\r\n          pickUpLocation: values.pickUpLocation,\r\n          time: values.time,\r\n          country: selectedCountryValue,\r\n          city: selectedCityValue,\r\n          charge: {},\r\n        },\r\n      });\r\n\r\n      // @ts-ignore\r\n      if (addRegionRes && addRegionRes.status === 'ok') {\r\n        openSuccessNotification();\r\n\r\n        setRegionList([\r\n          ...regionList,\r\n          {\r\n            id: addRegionRes['id'] || '',\r\n            key: addRegionRes['id'] || '',\r\n            name: addRegionRes['name'] || '',\r\n            // @ts-ignore\r\n            ...addRegionRes,\r\n          },\r\n        ]);\r\n        setAddNewCategoryVisible(false);\r\n        actions.resetForm();\r\n      } else {\r\n        openErrorNotification();\r\n      }\r\n    }\r\n\r\n    actions.setSubmitting(false);\r\n  };\r\n\r\n  const onChangeCity = (value) => {\r\n    setselectedCityValue(value);\r\n  };\r\n\r\n  const onChangeCountry = (value) => {\r\n    setselectedCountryValue(value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const setCountries = async () => {\r\n      const CountryListRes = await handleCountryListFetch({});\r\n\r\n      // @ts-ignore\r\n      if (CountryListRes && CountryListRes.length > 0) {\r\n        // @ts-ignore\r\n        const countryOptions = CountryListRes.map((country) => {\r\n          return {\r\n            value: country.name,\r\n            name: country.name,\r\n          };\r\n        });\r\n        setcountryOptions(countryOptions);\r\n      }\r\n    };\r\n\r\n    setCountries();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const setCities = async () => {\r\n      const cityListRes = await handleCityListFetch({\r\n        urlOptions: {\r\n          placeHolders: {\r\n            country: selectedCountryValue,\r\n          },\r\n        },\r\n      });\r\n\r\n      // @ts-ignore\r\n      if (cityListRes && cityListRes.length > 0) {\r\n        // @ts-ignore\r\n        const cityOptions = cityListRes.map((city) => {\r\n          return {\r\n            value: city.name,\r\n            name: city.name,\r\n          };\r\n        });\r\n        setcityOptions(cityOptions);\r\n      }\r\n    };\r\n\r\n    setCities();\r\n  }, [selectedCountryValue]);\r\n\r\n  useEffect(() => {\r\n    if (!addRegionState['isLoading']) {\r\n      const error = addRegionState['error'];\r\n      if (error['isError'] && Object.keys(error['error']).length > 0) {\r\n        if (error['error']['registerError']) {\r\n          // setServerErrors(error['error']['registerError']);\r\n        } else if (error['error']['checkoutError']) {\r\n          // setServerErrors(error['error']['checkoutError']);\r\n        } else {\r\n          // setServerErrors(error['error']);\r\n        }\r\n\r\n        const errors =\r\n          Object.values(error['error']).length > 0\r\n            ? Object.values(error['error'])\r\n            : [];\r\n        errors.forEach((err, i) => {\r\n          if (typeof err === 'string') {\r\n            openErrorNotification(err);\r\n          } else if (typeof err === 'object') {\r\n            if (err && Object.keys(err).length > 0) {\r\n              const errs = Object.values(err);\r\n              errs.forEach((err) => {\r\n                openErrorNotification(err);\r\n              });\r\n            }\r\n          }\r\n        });\r\n      }\r\n    }\r\n\r\n    if (\r\n      !addRegionState['isLoading'] &&\r\n      Object.keys(addRegionState.data).length > 0\r\n    ) {\r\n      if (addRegionState['data']['status'] === 'ok') {\r\n        // openSuccessNotification('Order Created Successfully');\r\n        // history.push({\r\n        //   pathname: '/orderDetails',\r\n        //   state: checkoutState['data']\r\n        // })\r\n        // clearCart();\r\n        // setIsModalShown(true);\r\n      }\r\n    }\r\n  }, [addRegionState]);\r\n\r\n  const handleCancel = (e: any) => {\r\n    setAddNewCategoryVisible(false);\r\n  };\r\n\r\n  const getisSubmitButtonDisabled = (values, isValid) => {\r\n    if (!isValid || !values.name || !values.pickUpLocation || !values.time) {\r\n      return true;\r\n    }\r\n    return false;\r\n  };\r\n\r\n  console.log('region----deliveryChargeList', deliveryChargeList);\r\n\r\n  const handleAddDeliveryCharge = () => {\r\n    setdeliveryChargeList([\r\n      ...deliveryChargeList,\r\n      {\r\n        minimumOrder: '',\r\n        charge: '',\r\n        id: `${Math.floor(100000 + Math.random() * 900000)}`,\r\n      },\r\n    ]);\r\n  };\r\n\r\n  return (\r\n    <Formik\r\n      onSubmit={(values, actions) => handleSubmit(values, actions)}\r\n      validationSchema={validationSchema}\r\n      validateOnBlur={false}\r\n      enableReinitialize={true}\r\n      initialValues={{ ...initialValues }}\r\n    >\r\n      {({\r\n        handleChange,\r\n        values,\r\n        handleSubmit,\r\n        errors,\r\n        isValid,\r\n        isSubmitting,\r\n        touched,\r\n        handleBlur,\r\n        setFieldTouched,\r\n        handleReset,\r\n      }) => (\r\n        <>\r\n          <Modal\r\n            style={{\r\n              top: '40px',\r\n            }}\r\n            bodyStyle={{\r\n              margin: '0',\r\n              padding: '10px',\r\n            }}\r\n            title='Add New Region'\r\n            visible={addNewCategoryVisible}\r\n            onOk={(e: any) => handleSubmit(e)}\r\n            onCancel={handleCancel}\r\n            okText='Create'\r\n            okButtonProps={{\r\n              loading: isSubmitting,\r\n              htmlType: 'submit',\r\n              // disabled: getisSubmitButtonDisabled(values, isValid)\r\n            }}\r\n          >\r\n            <div className='dubbleRowInputs'>\r\n              <div className='dubbleRowInputs__item'>\r\n                <Input\r\n                  label='Name'\r\n                  value={values.name}\r\n                  name='name'\r\n                  isError={\r\n                    (touched.name && errors.name) ||\r\n                    (!isSubmitting && addRegionState.error['error']['name'])\r\n                  }\r\n                  errorString={\r\n                    (touched.name && errors.name) ||\r\n                    (!isSubmitting && addRegionState.error['error']['name'])\r\n                  }\r\n                  onChange={(e: any) => {\r\n                    handleChange(e);\r\n                    setFieldTouched('name');\r\n                  }}\r\n                />\r\n              </div>\r\n              <div className='dubbleRowInputs__item'>\r\n                <Input\r\n                  label='Pick up Location'\r\n                  value={values.pickUpLocation}\r\n                  name='pickUpLocation'\r\n                  isError={\r\n                    (touched.pickUpLocation && errors.pickUpLocation) ||\r\n                    (!isSubmitting &&\r\n                      addRegionState.error['error']['pickUpLocation'])\r\n                  }\r\n                  errorString={\r\n                    (touched.pickUpLocation && errors.pickUpLocation) ||\r\n                    (!isSubmitting &&\r\n                      addRegionState.error['error']['pickUpLocation'])\r\n                  }\r\n                  onChange={(e: any) => {\r\n                    handleChange(e);\r\n                    setFieldTouched('pickUpLocation');\r\n                  }}\r\n                />\r\n              </div>\r\n            </div>\r\n\r\n            <div\r\n              style={{\r\n                marginRight: '10px',\r\n              }}\r\n            >\r\n              <Input\r\n                label='Time'\r\n                value={values.time}\r\n                name='time'\r\n                isError={\r\n                  (touched.time && errors.time) ||\r\n                  (!isSubmitting && addRegionState.error['error']['time'])\r\n                }\r\n                errorString={\r\n                  (touched.time && errors.time) ||\r\n                  (!isSubmitting && addRegionState.error['error']['time'])\r\n                }\r\n                onChange={(e: any) => {\r\n                  handleChange(e);\r\n                  setFieldTouched('time');\r\n                }}\r\n              />\r\n            </div>\r\n\r\n            <h3 className='inputFieldLabel'>Delivery Charges</h3>\r\n\r\n            <Form.Item\r\n              validateStatus={\r\n                addRegionState.error['error']['charge'] ? 'error' : ''\r\n              }\r\n              help={addRegionState.error['error']['charge']}\r\n            >\r\n              {deliveryChargeList.map((deliveryChargeItem) => {\r\n                console.log('deliveryChargeItem-region', deliveryChargeItem);\r\n                return (\r\n                  <DeliveryCharge\r\n                    deliveryChargeItem={deliveryChargeItem}\r\n                    deliveryChargeList={deliveryChargeList}\r\n                    setdeliveryChargeList={setdeliveryChargeList}\r\n                  />\r\n                );\r\n              })}\r\n            </Form.Item>\r\n\r\n            <div\r\n              style={{\r\n                marginTop: '5px',\r\n              }}\r\n            ></div>\r\n            <Button\r\n              size='middle'\r\n              onClick={handleAddDeliveryCharge}\r\n              type='dashed'\r\n              icon={<PlusOutlined />}\r\n            >\r\n              Add Charge\r\n            </Button>\r\n\r\n            <div\r\n              style={{\r\n                marginTop: '15px',\r\n              }}\r\n            ></div>\r\n            <h3 className='inputFieldLabel'>Country</h3>\r\n            <Form.Item\r\n              validateStatus={\r\n                addRegionState.error['error']['country'] ? 'error' : ''\r\n              }\r\n              help={addRegionState.error['error']['country']}\r\n            >\r\n              <Select\r\n                notFoundContent={\r\n                  <Empty title='No Country Found' height={200} />\r\n                }\r\n                showSearch\r\n                style={{ width: '100%' }}\r\n                placeholder='Select a Country'\r\n                optionFilterProp='children'\r\n                onChange={onChangeCountry}\r\n                filterOption={(input, option) =>\r\n                  option.children.toLowerCase().indexOf(input.toLowerCase()) >=\r\n                  0\r\n                }\r\n              >\r\n                {countryListState.done &&\r\n                  countryListState.data.length > 0 &&\r\n                  countryOptions.map((option) => {\r\n                    return <Option value={option.value}>{option.name}</Option>;\r\n                  })}\r\n              </Select>\r\n            </Form.Item>\r\n\r\n            <div\r\n              style={{\r\n                marginTop: '15px',\r\n              }}\r\n            ></div>\r\n            <h3 className='inputFieldLabel'>Cities</h3>\r\n\r\n            {cityListState.done && selectedCountryValue && !cityOptions[0] && (\r\n              <>\r\n                <div\r\n                  style={{\r\n                    width: '100%',\r\n                    height: '100%',\r\n                    display: 'flex',\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center',\r\n                  }}\r\n                >\r\n                  <Empty title='No City found' height={100} />\r\n                </div>\r\n              </>\r\n            )}\r\n\r\n            {!selectedCountryValue && (\r\n              <>\r\n                <div\r\n                  style={{\r\n                    width: '100%',\r\n                    height: '100%',\r\n                    display: 'flex',\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center',\r\n                    margin: '50px 0',\r\n                  }}\r\n                >\r\n                  <Empty title='Select Country first' height={100} />\r\n                </div>\r\n              </>\r\n            )}\r\n\r\n            {cityListState.isLoading && (\r\n              <div\r\n                style={{\r\n                  padding: '15px 0',\r\n                  width: '100%',\r\n                  height: '100%',\r\n                  display: 'flex',\r\n                  justifyContent: 'center',\r\n                  alignItems: 'center',\r\n                }}\r\n              >\r\n                <Spin />\r\n              </div>\r\n            )}\r\n\r\n            {cityOptions && cityOptions.length > 0 && (\r\n              <Form.Item\r\n                validateStatus={\r\n                  addRegionState.error['error']['city'] ? 'error' : ''\r\n                }\r\n                help={addRegionState.error['error']['city']}\r\n              >\r\n                <CitySelectForDeliveryRegion\r\n                  checkAll={checkAll}\r\n                  setCheckAll={setCheckAll}\r\n                  plainOptions={cityOptions}\r\n                  setPlainOptions={setcityOptions}\r\n                  checkedList={accesscheckedList}\r\n                  setCheckedList={setAccessCheckedList}\r\n                  cityListState={cityListState}\r\n                />\r\n              </Form.Item>\r\n            )}\r\n          </Modal>\r\n        </>\r\n      )}\r\n    </Formik>\r\n  );\r\n};\r\n\r\nexport default AddNewRegion;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Modal, Select, notification, Button, Form, Spin } from 'antd';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport {\r\n  CheckCircleOutlined,\r\n  PlusOutlined,\r\n  InfoCircleOutlined,\r\n} from '@ant-design/icons';\r\nimport Empty from '../../components/Empty';\r\n\r\nimport CitySelectForDeliveryRegion from './CitySelectForDeliveryRegion';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport { useHandleFetch } from '../../hooks';\r\nimport DeliveryCharge from './DeliveryCharge';\r\nimport { category } from '../../state/ducks';\r\n\r\nconst { Option } = Select;\r\n\r\nconst validationSchema = Yup.object().shape({\r\n  // name: Yup.string()\r\n  // \t.label('Name')\r\n  // \t.required()\r\n  // \t.min(2, 'Name must have at least 2 characters '),\r\n  // pickUpLocation: Yup.string()\r\n  // \t.label('Pick up Location')\r\n  // \t.required()\r\n  // \t.min(2, 'Pick up Location must have at least 2 characters '),\r\n  // time: Yup.string()\r\n  // \t.label('Time')\r\n  // \t.required()\r\n  // \t.min(2, 'Time must have at least 2 characters '),\r\n});\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n  notification.success({\r\n    message: message || 'Region Updated!',\r\n    description: '',\r\n    icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n  });\r\n};\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n  notification.success({\r\n    message: message || 'Something Went Wrong',\r\n    description: '',\r\n    icon: <InfoCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n  });\r\n};\r\n\r\ninterface Props {\r\n  customer: any;\r\n  setvisible: any;\r\n  visible: any;\r\n  regionList?: any;\r\n  setRegionList?: any;\r\n}\r\n\r\nconst QuickEdit = ({\r\n  customer,\r\n  setvisible,\r\n  visible,\r\n  setRegionList,\r\n  regionList,\r\n}: Props) => {\r\n  const [updateRegionState, handleUpdateRegionFetch] = useHandleFetch(\r\n    {},\r\n    'updateRegion'\r\n  );\r\n\r\n  console.log('DeliveryRegion', customer);\r\n\r\n  const [selectedCountryValue, setselectedCountryValue] = useState('');\r\n  const [selectedCityValue, setselectedCityValue] = useState('');\r\n\r\n  const [countryOptions, setcountryOptions] = useState([]);\r\n  const [cityOptions, setcityOptions] = useState([]);\r\n\r\n  const [countryListState, handleCountryListFetch] = useHandleFetch(\r\n    [],\r\n    'countryList'\r\n  );\r\n\r\n  const [cityListState, handleCityListFetch] = useHandleFetch([], 'cityList');\r\n\r\n  const [countryList, setCountryList] = useState([]);\r\n  const [cityList, setCityList] = useState([]);\r\n\r\n  const [accesscheckedList, setAccessCheckedList] = useState([]);\r\n  const [checkAll, setCheckAll] = useState(false);\r\n\r\n  const [deliveryChargeList, setdeliveryChargeList] = useState([]);\r\n\r\n  useEffect(() => {\r\n    if (customer.charge && Object.keys(customer.charge).length > 0) {\r\n      const deliveryChargeListFromRegionDetail = [];\r\n      const chargeKeys = Object.keys(customer.charge);\r\n      chargeKeys.forEach((chargeKey) => {\r\n        deliveryChargeListFromRegionDetail.push({\r\n          minimumOrder: chargeKey,\r\n          charge: customer.charge[chargeKey],\r\n          id: `${Math.floor(100000 + Math.random() * 900000)}`,\r\n        });\r\n      });\r\n      setdeliveryChargeList(deliveryChargeListFromRegionDetail);\r\n    }\r\n\r\n    if (customer.city && customer.city.length > 0) {\r\n      setAccessCheckedList(customer.city);\r\n      setselectedCountryValue(customer.countryName || '');\r\n    } else {\r\n      setAccessCheckedList([]);\r\n      setselectedCountryValue('');\r\n    }\r\n  }, [customer]);\r\n\r\n  useEffect(() => {}, [customer, selectedCountryValue]);\r\n\r\n  console.log('deliveryCharge333', customer);\r\n\r\n  const handleSubmit = async (values: any, actions: any) => {\r\n    // console.log('selectedCityValue',selectedCityValue)\r\n    const charge = {};\r\n\r\n    if (deliveryChargeList.length > 0) {\r\n      for (let item of deliveryChargeList) {\r\n        if (charge[item['minimumOrder']] !== '' && item['charge'] !== '') {\r\n          charge[item['minimumOrder']] = item['charge'];\r\n        }\r\n      }\r\n    }\r\n    const addRegionRes = await handleUpdateRegionFetch({\r\n      urlOptions: {\r\n        placeHolders: {\r\n          id: customer.id,\r\n        },\r\n      },\r\n      body: {\r\n        name: values.name,\r\n        pickUpLocation: values.pickUpLocation,\r\n        time: values.time,\r\n        country: selectedCountryValue || customer.country,\r\n        city: selectedCityValue || customer.city,\r\n        charge,\r\n      },\r\n    });\r\n\r\n    // @ts-ignore\r\n    if (addRegionRes && addRegionRes.status === 'ok') {\r\n      openSuccessNotification();\r\n\r\n      const positionInTag = () => {\r\n        return regionList.map((item) => item.id).indexOf(customer.id);\r\n      };\r\n\r\n      const index = positionInTag();\r\n\r\n      // @ts-ignore\r\n      const updatedItem = Object.assign({}, regionList[index], {\r\n        // @ts-ignore\r\n        ...addRegionRes,\r\n        id: customer.id,\r\n      });\r\n      const updateRegionList = [\r\n        ...regionList.slice(0, index),\r\n        updatedItem,\r\n        ...regionList.slice(index + 1),\r\n      ];\r\n      setRegionList(updateRegionList);\r\n      setvisible(false);\r\n\r\n      setdeliveryChargeList([]);\r\n      setselectedCityValue('');\r\n      setselectedCountryValue('');\r\n      // setcountryOptions([]);\r\n      // setcityOptions([]);\r\n      // setcountryOptions([]);\r\n      // setcityOptions([]);\r\n    } else {\r\n      openErrorNotification();\r\n    }\r\n\r\n    actions.setSubmitting(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!updateRegionState['isLoading']) {\r\n      const error = updateRegionState['error'];\r\n      if (error['isError'] && Object.keys(error['error']).length > 0) {\r\n        if (error['error']['registerError']) {\r\n          // setServerErrors(error['error']['registerError']);\r\n        } else if (error['error']['checkoutError']) {\r\n          // setServerErrors(error['error']['checkoutError']);\r\n        } else {\r\n          // setServerErrors(error['error']);\r\n        }\r\n\r\n        const errors =\r\n          Object.values(error['error']).length > 0\r\n            ? Object.values(error['error'])\r\n            : [];\r\n        errors.forEach((err, i) => {\r\n          if (typeof err === 'string') {\r\n            openErrorNotification(err);\r\n          } else if (typeof err === 'object') {\r\n            if (err && Object.keys(err).length > 0) {\r\n              const errs = Object.values(err);\r\n              errs.forEach((err) => {\r\n                openErrorNotification(err);\r\n              });\r\n            }\r\n          }\r\n        });\r\n      }\r\n    }\r\n\r\n    if (\r\n      !updateRegionState['isLoading'] &&\r\n      Object.keys(updateRegionState.data).length > 0\r\n    ) {\r\n      if (updateRegionState['data']['status'] === 'ok') {\r\n        // openSuccessNotification('Order Created Successfully');\r\n        // history.push({\r\n        //   pathname: '/orderDetails',\r\n        //   state: checkoutState['data']\r\n        // })\r\n        // clearCart();\r\n        // setIsModalShown(true);\r\n      }\r\n    }\r\n  }, [updateRegionState]);\r\n\r\n  const onChangeCity = (value) => {\r\n    setselectedCityValue(value);\r\n  };\r\n\r\n  const onChangeCountry = (value) => {\r\n    setselectedCountryValue(value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const setCountries = async () => {\r\n      const CountryListRes = await handleCountryListFetch({});\r\n\r\n      // @ts-ignore\r\n      if (CountryListRes && CountryListRes.length > 0) {\r\n        // @ts-ignore\r\n        const countryOptions = CountryListRes.map((country) => {\r\n          return {\r\n            value: country.name,\r\n            name: country.name,\r\n          };\r\n        });\r\n        setcountryOptions(countryOptions);\r\n      }\r\n    };\r\n\r\n    setCountries();\r\n  }, [customer]);\r\n\r\n  useEffect(() => {\r\n    const setCities = async () => {\r\n      const cityListRes = await handleCityListFetch({\r\n        urlOptions: {\r\n          placeHolders: {\r\n            country: selectedCountryValue || customer.countryName,\r\n          },\r\n        },\r\n      });\r\n\r\n      // @ts-ignore\r\n      if (cityListRes && cityListRes.length > 0) {\r\n        // @ts-ignore\r\n        const cityOptions = cityListRes.map((city) => {\r\n          return {\r\n            value: city.name,\r\n            name: city.name,\r\n          };\r\n        });\r\n\r\n        if (cityOptions.length === customer.city.length) {\r\n          setCheckAll(true);\r\n        }\r\n\r\n        setcityOptions(cityOptions);\r\n      }\r\n    };\r\n\r\n    setCities();\r\n  }, [customer.countryName, selectedCountryValue]);\r\n\r\n  const handleCancel = (e: any) => {\r\n    setvisible(false);\r\n\r\n    setdeliveryChargeList([]);\r\n    setselectedCityValue('');\r\n    setselectedCountryValue('');\r\n    // setcountryOptions([]);\r\n    // setcityOptions([]);\r\n  };\r\n\r\n  const getisSubmitButtonDisabled = (values, isValid) => {\r\n    if (!isValid || !values.name || !values.pickUpLocation || !values.time) {\r\n      return true;\r\n    }\r\n    return false;\r\n  };\r\n\r\n  const handleAddDeliveryCharge = () => {\r\n    setdeliveryChargeList([\r\n      ...deliveryChargeList,\r\n      {\r\n        minimumOrder: '',\r\n        charge: '',\r\n        id: `${Math.floor(100000 + Math.random() * 900000)}`,\r\n      },\r\n    ]);\r\n  };\r\n\r\n  return (\r\n    <Formik\r\n      onSubmit={(values, actions) => handleSubmit(values, actions)}\r\n      validationSchema={validationSchema}\r\n      validateOnBlur={false}\r\n      enableReinitialize={true}\r\n      initialValues={{ ...customer }}\r\n    >\r\n      {({\r\n        handleChange,\r\n        values,\r\n        handleSubmit,\r\n        errors,\r\n        isValid,\r\n        isSubmitting,\r\n        touched,\r\n        handleBlur,\r\n        setFieldTouched,\r\n        handleReset,\r\n      }) => (\r\n        <>\r\n          <Modal\r\n            title='Region Edit'\r\n            visible={visible}\r\n            onOk={(e: any) => handleSubmit(e)}\r\n            onCancel={handleCancel}\r\n            okText='Update'\r\n            destroyOnClose={true}\r\n            okButtonProps={{\r\n              loading: isSubmitting,\r\n              htmlType: 'submit',\r\n              // disabled: getisSubmitButtonDisabled(values, isValid)\r\n            }}\r\n            bodyStyle={{\r\n              margin: '0',\r\n              padding: '10px',\r\n            }}\r\n          >\r\n            <div className='dubbleRowInputs'>\r\n              <div className='dubbleRowInputs__item'>\r\n                <Input\r\n                  label='Name'\r\n                  value={values.name}\r\n                  name='name'\r\n                  isError={\r\n                    (touched.name && errors.name) ||\r\n                    (!isSubmitting && updateRegionState.error['error']['name'])\r\n                  }\r\n                  errorString={\r\n                    (touched.name && errors.name) ||\r\n                    (!isSubmitting && updateRegionState.error['error']['name'])\r\n                  }\r\n                  onChange={(e: any) => {\r\n                    handleChange(e);\r\n                    setFieldTouched('name');\r\n                  }}\r\n                />\r\n              </div>\r\n              <div className='dubbleRowInputs__item'>\r\n                <Input\r\n                  label='Pick up Location'\r\n                  value={values.pickUpLocation}\r\n                  name='pickUpLocation'\r\n                  isError={\r\n                    (touched.pickUpLocation && errors.pickUpLocation) ||\r\n                    (!isSubmitting &&\r\n                      updateRegionState.error['error']['pickUpLocation'])\r\n                  }\r\n                  errorString={\r\n                    (touched.pickUpLocation && errors.pickUpLocation) ||\r\n                    (!isSubmitting &&\r\n                      updateRegionState.error['error']['pickUpLocation'])\r\n                  }\r\n                  onChange={(e: any) => {\r\n                    handleChange(e);\r\n                    setFieldTouched('pickUpLocation');\r\n                  }}\r\n                />\r\n              </div>\r\n            </div>\r\n\r\n            <div\r\n              style={{\r\n                marginRight: '10px',\r\n              }}\r\n            >\r\n              <Input\r\n                label='Time'\r\n                value={values.time}\r\n                name='time'\r\n                isError={\r\n                  (touched.time && errors.time) ||\r\n                  (!isSubmitting && updateRegionState.error['error']['time'])\r\n                }\r\n                errorString={\r\n                  (touched.time && errors.time) ||\r\n                  (!isSubmitting && updateRegionState.error['error']['time'])\r\n                }\r\n                onChange={(e: any) => {\r\n                  handleChange(e);\r\n                  setFieldTouched('time');\r\n                }}\r\n              />\r\n            </div>\r\n\r\n            <h3 className='inputFieldLabel'>Delivery Charges</h3>\r\n\r\n            <Form.Item\r\n              validateStatus={\r\n                updateRegionState.error['error']['charge'] ? 'error' : ''\r\n              }\r\n              help={updateRegionState.error['error']['charge']}\r\n            >\r\n              {deliveryChargeList.map((deliveryChargeItem) => {\r\n                console.log('deliveryChargeItem-region', deliveryChargeItem);\r\n                return (\r\n                  <DeliveryCharge\r\n                    deliveryChargeItem={deliveryChargeItem}\r\n                    deliveryChargeList={deliveryChargeList}\r\n                    setdeliveryChargeList={setdeliveryChargeList}\r\n                  />\r\n                );\r\n              })}\r\n            </Form.Item>\r\n\r\n            <div\r\n              style={{\r\n                marginTop: '5px',\r\n              }}\r\n            ></div>\r\n            <Button\r\n              size='middle'\r\n              onClick={handleAddDeliveryCharge}\r\n              type='dashed'\r\n              icon={<PlusOutlined />}\r\n            >\r\n              Add Charge\r\n            </Button>\r\n\r\n            <div\r\n              style={{\r\n                marginTop: '15px',\r\n              }}\r\n            ></div>\r\n            <h3 className='inputFieldLabel'>Country</h3>\r\n            <Form.Item\r\n              validateStatus={\r\n                updateRegionState.error['error']['country'] ? 'error' : ''\r\n              }\r\n              help={updateRegionState.error['error']['country']}\r\n            >\r\n              <Select\r\n                notFoundContent={\r\n                  <Empty title='No Country Found' height={100} />\r\n                }\r\n                showSearch\r\n                style={{ width: '100%' }}\r\n                placeholder='Select a Country'\r\n                optionFilterProp='children'\r\n                onChange={onChangeCountry}\r\n                value={selectedCountryValue}\r\n                filterOption={(input, option) =>\r\n                  option.children.toLowerCase().indexOf(input.toLowerCase()) >=\r\n                  0\r\n                }\r\n              >\r\n                {countryListState.done &&\r\n                  countryListState.data.length > 0 &&\r\n                  countryOptions.map((option) => {\r\n                    return <Option value={option.value}>{option.name}</Option>;\r\n                  })}\r\n              </Select>\r\n            </Form.Item>\r\n\r\n            <div\r\n              style={{\r\n                marginTop: '15px',\r\n              }}\r\n            ></div>\r\n            <h3 className='inputFieldLabel'>Cities</h3>\r\n\r\n            {cityListState.done && selectedCountryValue && !cityOptions[0] && (\r\n              <>\r\n                <div\r\n                  style={{\r\n                    width: '100%',\r\n                    height: '100%',\r\n                    display: 'flex',\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center',\r\n                  }}\r\n                >\r\n                  <Empty title='No City found' height={100} />\r\n                </div>\r\n              </>\r\n            )}\r\n\r\n            {!selectedCountryValue && (\r\n              <>\r\n                <div\r\n                  style={{\r\n                    width: '100%',\r\n                    height: '100%',\r\n                    display: 'flex',\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center',\r\n                    margin: '50px 0',\r\n                  }}\r\n                >\r\n                  <Empty title='Select Country first' height={200} />\r\n                </div>\r\n              </>\r\n            )}\r\n\r\n            {cityListState.isLoading && (\r\n              <div\r\n                style={{\r\n                  padding: '15px 0',\r\n                  width: '100%',\r\n                  height: '100%',\r\n                  display: 'flex',\r\n                  justifyContent: 'center',\r\n                  alignItems: 'center',\r\n                }}\r\n              >\r\n                <Spin />\r\n              </div>\r\n            )}\r\n\r\n            {cityOptions && cityOptions.length > 0 && (\r\n              <Form.Item\r\n                validateStatus={\r\n                  updateRegionState.error['error']['city'] ? 'error' : ''\r\n                }\r\n                help={updateRegionState.error['error']['city']}\r\n              >\r\n                <CitySelectForDeliveryRegion\r\n                  checkAll={checkAll}\r\n                  setCheckAll={setCheckAll}\r\n                  plainOptions={cityOptions}\r\n                  setPlainOptions={setcityOptions}\r\n                  checkedList={accesscheckedList}\r\n                  setCheckedList={setAccessCheckedList}\r\n                  cityListState={cityListState}\r\n                />\r\n              </Form.Item>\r\n            )}\r\n          </Modal>\r\n        </>\r\n      )}\r\n    </Formik>\r\n  );\r\n};\r\n\r\nexport default QuickEdit;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport {\r\n  Table,\r\n  Badge,\r\n  Menu,\r\n  Dropdown,\r\n  Space,\r\n  Tag,\r\n  Button,\r\n  Input,\r\n  Tooltip,\r\n  Modal,\r\n  notification,\r\n  Popconfirm,\r\n} from 'antd';\r\nimport {\r\n  PlusOutlined,\r\n  EditOutlined,\r\n  DeleteOutlined,\r\n  EditFilled,\r\n  CheckCircleOutlined,\r\n  InfoCircleOutlined,\r\n} from '@ant-design/icons';\r\n\r\n/// import hooks\r\nimport { useFetch, useHandleFetch } from '../../hooks';\r\n\r\n// import components\r\nimport { DataTableSkeleton } from '../../components/Placeholders';\r\nimport AddNewRegion from './AddNewRegion';\r\nimport QuickEdit from './QuickEdit';\r\nimport Empty from '../../components/Empty';\r\n\r\n// import state\r\nimport { isAccess } from '../../utils';\r\nimport { connect } from 'react-redux';\r\n\r\nconst { Column, ColumnGroup } = Table;\r\nconst { Search } = Input;\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n  notification.success({\r\n    message: message || 'Region Created',\r\n    description: '',\r\n    icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n  });\r\n};\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n  notification.success({\r\n    message: message || 'Something Went Wrong',\r\n    description: '',\r\n    icon: <InfoCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n  });\r\n};\r\n\r\ninterface myTableProps {\r\n  data: any;\r\n  setRegionList: any;\r\n  roles: any;\r\n}\r\n\r\nconst MyTable = ({ data, setRegionList, roles }: myTableProps) => {\r\n  const [visible, setvisible] = useState(false);\r\n  const [activeCategoryForEdit, setactiveCategoryForEdit] = useState(false);\r\n  const [deleteRegionState, handleDeleteRegioFetch] = useHandleFetch(\r\n    {},\r\n    'deleteRegion'\r\n  );\r\n\r\n  const handleDeleteRegion = async (id) => {\r\n    const deleteRegionRes = await handleDeleteRegioFetch({\r\n      urlOptions: {\r\n        placeHolders: {\r\n          id,\r\n        },\r\n      },\r\n    });\r\n\r\n    // @ts-ignore\r\n    if (deleteRegionRes && deleteRegionRes.status === 'ok') {\r\n      openSuccessNotification('Deleted Region');\r\n      const newRegionList = data.filter((item) => item.id !== id);\r\n      setRegionList(newRegionList);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Table\r\n        // expandable={{\r\n        //     expandedRowRender: record => <p style={{ margin: 0 }}>{record.name}</p>,\r\n        //     rowExpandable: record => record.name !== 'Not Expandable',\r\n        //   }}\r\n        // bordered={true}\r\n        size='small'\r\n        // pagination={false}\r\n        dataSource={data}\r\n      >\r\n        <Column\r\n          title='Name'\r\n          dataIndex='name'\r\n          key='id'\r\n          className='classnameofthecolumn'\r\n        />\r\n\r\n        <Column\r\n          title='Pick up Location'\r\n          dataIndex='pickUpLocation'\r\n          key='id'\r\n          className='classnameofthecolumn'\r\n        />\r\n\r\n        <Column\r\n          title='Country'\r\n          dataIndex='countryName'\r\n          key='id'\r\n          className='classnameofthecolumn'\r\n        />\r\n\r\n        <Column\r\n          width={150}\r\n          title='City'\r\n          dataIndex='city'\r\n          key='id'\r\n          className='classnameofthecolumn'\r\n          render={(tags) => (\r\n            <>\r\n              {tags &&\r\n                tags.length > 0 &&\r\n                tags.slice(0, 3).map((tag) => (\r\n                  <Tag\r\n                    style={{\r\n                      borderRadius: '5px',\r\n                      marginBottom: '5px',\r\n                    }}\r\n                    color='blue'\r\n                    key={tag}\r\n                  >\r\n                    {tag}\r\n                  </Tag>\r\n                ))}\r\n\r\n              <span\r\n                style={{\r\n                  color: '#1890ff',\r\n                }}\r\n              >\r\n                {/* {tags &&\r\n                  tags.length > 3 &&\r\n                  `.....${tags.length - tags.slice(0, 3).length}more`} */}\r\n                {tags && tags.slice(0, 3).length === 3 && `more.....`}\r\n              </span>\r\n            </>\r\n          )}\r\n        />\r\n\r\n        <Column\r\n          title='Time'\r\n          dataIndex='time'\r\n          key='id'\r\n          className='classnameofthecolumn'\r\n        />\r\n\r\n        <Column\r\n          width={150}\r\n          className='classnameofthecolumn'\r\n          title='Charge'\r\n          dataIndex='charge'\r\n          key='id'\r\n          render={(charges) => (\r\n            <>\r\n              {charges &&\r\n                Object.keys(charges).length > 0 &&\r\n                Object.keys(charges).map((key) => {\r\n                  return (\r\n                    <>\r\n                      <div\r\n                        style={{\r\n                          marginBottom: '10px',\r\n                        }}\r\n                      >\r\n                        <Tag color='blue' key={key}>\r\n                          {key}\r\n                        </Tag>\r\n                        &nbsp;:&nbsp;&nbsp;&nbsp;\r\n                        <Tag color='blue' key={charges[key]}>\r\n                          {charges[key]}\r\n                        </Tag>\r\n                      </div>\r\n                    </>\r\n                  );\r\n                })}\r\n            </>\r\n          )}\r\n        />\r\n\r\n        {isAccess('postDelivery', roles) && (\r\n          <Column\r\n            className='classnameofthecolumn'\r\n            title=''\r\n            key='action'\r\n            align='right'\r\n            render={(text, record: any) => (\r\n              <Space size='middle'>\r\n                <a href='##'>\r\n                  <Tooltip placement='top' title='Edit Region'>\r\n                    <span\r\n                      className='iconSize'\r\n                      onClick={() => {\r\n                        setvisible(true);\r\n                        setactiveCategoryForEdit(record);\r\n                      }}\r\n                    >\r\n                      <EditOutlined />\r\n                    </span>\r\n                  </Tooltip>\r\n                </a>\r\n\r\n                <Popconfirm\r\n                  onConfirm={() => handleDeleteRegion(record.id)}\r\n                  title='Are you sure？'\r\n                  okText='Yes'\r\n                  cancelText='No'\r\n                >\r\n                  <span className='iconSize iconSize-danger'>\r\n                    <DeleteOutlined />\r\n                  </span>\r\n                </Popconfirm>\r\n              </Space>\r\n            )}\r\n          />\r\n        )}\r\n      </Table>\r\n\r\n      {activeCategoryForEdit && (\r\n        <QuickEdit\r\n          setvisible={setvisible}\r\n          visible={visible}\r\n          customer={activeCategoryForEdit}\r\n          regionList={data}\r\n          setRegionList={setRegionList}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\ninterface Props {\r\n  roles: any;\r\n}\r\n\r\nconst CustomerList = ({ roles }: Props) => {\r\n  const [regionList, setRegionList] = useState([]);\r\n\r\n  const [regionState, handleRegionListFetch] = useHandleFetch({}, 'regionList');\r\n\r\n  useEffect(() => {\r\n    const setRegions = async () => {\r\n      const regions = await handleRegionListFetch({\r\n        urlOptions: {\r\n          params: {\r\n            sortItem: 'added',\r\n            sortOrderValue: '-1',\r\n            limitNumber: 500000,\r\n          },\r\n        },\r\n      });\r\n      // @ts-ignore\r\n      setRegionList(regions);\r\n    };\r\n    setRegions();\r\n  }, []);\r\n\r\n  const [addNewCategoryVisible, setAddNewCategoryVisible] = useState(false);\r\n\r\n  console.log('regionState', regionState);\r\n\r\n  const handleSearch = (value) => {\r\n    if (regionState.data.length > 0) {\r\n      const newTagList = regionState.data.filter((item) =>\r\n        item.name.toLowerCase().includes(value.toLowerCase())\r\n      );\r\n      setRegionList(newTagList);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {/* <h2 className='containerPageTitle'>\r\n      Categories\r\n    </h2> */}\r\n      <div className='categoryListContainer'>\r\n        <div className='categoryListContainer__header'>\r\n          <div className='categoryListContainer__header-searchBar'>\r\n            <h2 className='categoryListContainer__header-title'>Regions</h2>\r\n\r\n            <Search\r\n              enterButton={false}\r\n              className='searchbarClassName'\r\n              placeholder='search regions..'\r\n              onSearch={(value) => handleSearch(value)}\r\n              // style={{ width: 300 }}\r\n            />\r\n          </div>\r\n\r\n          {isAccess('postDelivery', roles) && (\r\n            <Button\r\n              // type=\"primary\"\r\n              className='btnPrimaryClassNameoutline'\r\n              icon={<PlusOutlined />}\r\n              onClick={() => setAddNewCategoryVisible(true)}\r\n            >\r\n              Add New\r\n            </Button>\r\n          )}\r\n        </div>\r\n\r\n        <div className='categoryListContainer__afterHeader'>\r\n          {/* <Search\r\n      placeholder=\"search categories..\"\r\n      size=\"large\"\r\n      onSearch={value => console.log(value)}\r\n      style={{ width: 300 }}\r\n    /> */}\r\n        </div>\r\n\r\n        <div className='categoryListContainer__categoryList'>\r\n          {regionState.done && regionList.length > 0 && (\r\n            <MyTable\r\n              roles={roles}\r\n              setRegionList={setRegionList}\r\n              data={regionList}\r\n            />\r\n          )}\r\n          {regionState.isLoading && <DataTableSkeleton />}\r\n\r\n          {regionState.done && !(regionList.length > 0) && (\r\n            <Empty title='No Region found' />\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      {regionState.done && (\r\n        <AddNewRegion\r\n          addNewCategoryVisible={addNewCategoryVisible}\r\n          setAddNewCategoryVisible={setAddNewCategoryVisible}\r\n          regionList={regionState.data}\r\n          setRegionList={setRegionList}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  roles: state.globalState,\r\n});\r\n\r\n// @ts-ignore\r\nexport default connect(mapStateToProps, null)(CustomerList);\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\nimport { useHandleFetch } from '../../hooks';\r\n// import third party ui lib\r\nimport {\r\n  Upload,\r\n  message,\r\n  Switch,\r\n  Select,\r\n  Button,\r\n  notification,\r\n  Modal,\r\n  Tooltip,\r\n  Checkbox,\r\n} from 'antd';\r\n\r\nimport {\r\n  FileOutlined,\r\n  InboxOutlined,\r\n  FileAddOutlined,\r\n  DeleteOutlined,\r\n  CheckCircleOutlined,\r\n  CloseOutlined,\r\n  CheckOutlined,\r\n  InfoCircleOutlined,\r\n  PlusOutlined,\r\n  FileImageFilled,\r\n} from '@ant-design/icons';\r\n\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport InputSmall from '../../components/Field/InputSmall';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport MediaLibrary from '../../components/MediaLibrary';\r\n\r\nconst validationSchema = Yup.object().shape({});\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n  notification.success({\r\n    message: message || 'Tag Created',\r\n    description: '',\r\n    icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n  });\r\n};\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n  notification.error({\r\n    message: message || 'Something Went Wrong',\r\n    description: '',\r\n    icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n  });\r\n};\r\n\r\nconst initialValues = {\r\n  url: '',\r\n  protocol: '',\r\n  method: '',\r\n  parameters: '',\r\n  recipientKey: '',\r\n  separator: '',\r\n  textKey: '',\r\n  maskKey: '',\r\n  maskValue: '',\r\n  usernameKey: '',\r\n  usernameValue: '',\r\n  passwordKey: '',\r\n  passwordValue: '',\r\n  additionalMsgType: '',\r\n};\r\n\r\nconst { Option } = Select;\r\n\r\ninterface Props {}\r\n\r\nconst ConfigureSTMP = ({}: Props) => {\r\n  const [\r\n    getEmailConfigurationState,\r\n    handleGetEmailConfigurationFetch,\r\n  ] = useHandleFetch({}, 'getSMSConfiguration');\r\n  const [\r\n    emailConfigurationState,\r\n    handleEmailConfigurationFetch,\r\n  ] = useHandleFetch({}, 'configureSMS');\r\n\r\n  const [isAuthenticated, setIsAuthenticated] = useState(true);\r\n  const [isArraySupport, setIsArraySupport] = useState(false);\r\n  const [configurationData, setConfigurationData] = useState({});\r\n  const [method, setMethod] = useState('');\r\n  const [protocol, setProtocol] = useState('');\r\n\r\n  console.log('getEmailConfigurationState', getEmailConfigurationState);\r\n\r\n  useEffect(() => {\r\n    const getEmailConfiguration = async () => {\r\n      const res = await handleGetEmailConfigurationFetch({});\r\n      // @ts-ignore\r\n      if (res) {\r\n        // @ts-ignore\r\n        setConfigurationData(res);\r\n        setIsAuthenticated(res['authentication']);\r\n        setMethod(res['method']);\r\n        setProtocol(res['protocol']);\r\n      }\r\n    };\r\n    getEmailConfiguration();\r\n  }, []);\r\n\r\n  console.log('getEmailConfigurationState', method);\r\n\r\n  const handleSubmit = async (values: any, actions: any) => {\r\n    const addTagRes = await handleEmailConfigurationFetch({\r\n      body: {\r\n        url: values.url,\r\n        protocol: protocol,\r\n        method: method,\r\n        authentication: isAuthenticated,\r\n        parameters: {\r\n          recipient: {\r\n            key: values.recipientKey,\r\n            arraySupport: isArraySupport,\r\n            separator: values.separator,\r\n          },\r\n          text: {\r\n            key: values.textKey,\r\n          },\r\n          mask: {\r\n            key: values.maskKey,\r\n            value: values.maskValue,\r\n          },\r\n          authentication: {\r\n            username: {\r\n              key: values.usernameKey,\r\n              value: values.usernameValue,\r\n            },\r\n            password: {\r\n              key: values.passwordKey,\r\n              value: values.passwordValue,\r\n            },\r\n          },\r\n          additional: {\r\n            MsgType: values.additionalMsgType,\r\n          },\r\n        },\r\n      },\r\n    });\r\n\r\n    // @ts-ignore\r\n    if (addTagRes && addTagRes.status === 'ok') {\r\n    } else {\r\n      // openErrorNotification(\"Something went wrong, Couldn't updated STMP configuration\");\r\n    }\r\n\r\n    actions.setSubmitting(false);\r\n  };\r\n\r\n  const handleSelectChange = () => {};\r\n\r\n  const getisSubmitButtonDisabled = (values, isValid) => {\r\n    if (!values.name || !isValid) {\r\n      return true;\r\n    }\r\n    return false;\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!emailConfigurationState['isLoading']) {\r\n      const error = emailConfigurationState['error'];\r\n      if (error['isError'] && Object.keys(error['error']).length > 0) {\r\n        if (error['error']['registerError']) {\r\n          // setServerErrors(error['error']['registerError']);\r\n        } else if (error['error']['checkoutError']) {\r\n          // setServerErrors(error['error']['checkoutError']);\r\n        } else {\r\n          // setServerErrors(error['error']);\r\n        }\r\n\r\n        const errors =\r\n          Object.values(error['error']).length > 0\r\n            ? Object.values(error['error'])\r\n            : [];\r\n        errors.forEach((err, i) => {\r\n          if (typeof err === 'string') {\r\n            openErrorNotification(err);\r\n          } else if (typeof err === 'object') {\r\n            if (err && Object.keys(err).length > 0) {\r\n              const errs = Object.values(err);\r\n              errs.forEach((err) => {\r\n                openErrorNotification(err);\r\n              });\r\n            }\r\n          }\r\n        });\r\n      }\r\n    }\r\n\r\n    if (\r\n      !emailConfigurationState['isLoading'] &&\r\n      Object.keys(emailConfigurationState.data).length > 0\r\n    ) {\r\n      if (emailConfigurationState['data']['status'] === 'ok') {\r\n        openSuccessNotification('SMS Settings Updated!');\r\n        // history.push({\r\n        //   pathname: '/orderDetails',\r\n        //   state: checkoutState['data']\r\n        // })\r\n\r\n        // clearCart();\r\n        // setIsModalShown(true);\r\n      }\r\n    }\r\n  }, [emailConfigurationState]);\r\n\r\n  const handleAuthenticatedChange = (e) => {\r\n    setIsAuthenticated(e.target.checked);\r\n  };\r\n\r\n  const prottocolOptions = [\r\n    {\r\n      name: 'HTTP',\r\n      value: 'HTTP',\r\n    },\r\n    {\r\n      name: 'HTTPS',\r\n      value: 'HTTPS',\r\n    },\r\n  ];\r\n\r\n  const methodOptions = [\r\n    {\r\n      name: 'GET',\r\n      value: 'GET',\r\n    },\r\n    {\r\n      name: 'POST',\r\n      value: 'POST',\r\n    },\r\n  ];\r\n\r\n  const handleMethodChange = (value) => {\r\n    console.log('valueOfMethod', value);\r\n    setMethod(value);\r\n  };\r\n\r\n  const handleProtocolChange = (value) => {\r\n    setProtocol(value);\r\n  };\r\n\r\n  const initialValues = {\r\n    url: '',\r\n    protocol: '',\r\n    method: '',\r\n    parameters: '',\r\n    recipientKey: '',\r\n    separator: '',\r\n    textKey: '',\r\n    maskKey: '',\r\n    maskValue: '',\r\n    usernameKey: '',\r\n    usernameValue: '',\r\n    passwordKey: '',\r\n    passwordValue: '',\r\n    additionalMsgType: '',\r\n  };\r\n\r\n  return (\r\n    <Formik\r\n      onSubmit={(values, actions) => handleSubmit(values, actions)}\r\n      validationSchema={validationSchema}\r\n      validateOnBlur={false}\r\n      enableReinitialize={true}\r\n      initialValues={{\r\n        ...initialValues,\r\n        ...configurationData,\r\n        ...(configurationData &&\r\n          Object.keys(configurationData).length > 0 && {\r\n            recipientKey:\r\n              configurationData['parameters'] &&\r\n              configurationData['parameters'].recipient &&\r\n              configurationData['parameters'].recipient.key,\r\n            separator:\r\n              configurationData['parameters'] &&\r\n              configurationData['parameters'].recipient &&\r\n              configurationData['parameters'].recipient.separator,\r\n            textKey:\r\n              configurationData['parameters'] &&\r\n              configurationData['parameters'].text &&\r\n              configurationData['parameters'].text.key,\r\n            maskKey:\r\n              configurationData['parameters'] &&\r\n              configurationData['parameters'].mask &&\r\n              configurationData['parameters'].mask.key,\r\n            maskValue:\r\n              configurationData['parameters'] &&\r\n              configurationData['parameters'].mask &&\r\n              configurationData['parameters'].mask.value,\r\n            usernameKey:\r\n              configurationData['parameters'] &&\r\n              configurationData['parameters'].authentication &&\r\n              configurationData['parameters'].authentication.username &&\r\n              configurationData['parameters'].authentication.username.key,\r\n            usernameValue:\r\n              configurationData['parameters'] &&\r\n              configurationData['parameters'].authentication &&\r\n              configurationData['parameters'].authentication.username &&\r\n              configurationData['parameters'].authentication.username.value,\r\n            passwordKey:\r\n              configurationData['parameters'] &&\r\n              configurationData['parameters'].authentication &&\r\n              configurationData['parameters'].authentication.password &&\r\n              configurationData['parameters'].authentication.password.key,\r\n            passwordValue:\r\n              configurationData['parameters'] &&\r\n              configurationData['parameters'].authentication &&\r\n              configurationData['parameters'].authentication.password &&\r\n              configurationData['parameters'].authentication.password.value,\r\n            additionalMsgType:\r\n              configurationData['parameters'] &&\r\n              configurationData['parameters'].additional &&\r\n              configurationData['parameters'].additional.MsgType,\r\n          }),\r\n      }}\r\n    >\r\n      {({\r\n        handleChange,\r\n        values,\r\n        handleSubmit,\r\n        errors,\r\n        isValid,\r\n        isSubmitting,\r\n        touched,\r\n        handleBlur,\r\n        setFieldTouched,\r\n        handleReset,\r\n      }) => (\r\n        <>\r\n          <div\r\n            style={{\r\n              display: 'flex',\r\n              justifyContent: 'space-between',\r\n            }}\r\n          >\r\n            <div\r\n              style={{\r\n                width: '49%',\r\n              }}\r\n            >\r\n              <Input\r\n                label='URL'\r\n                value={values.url}\r\n                name='url'\r\n                isError={\r\n                  (touched.url && errors.url) ||\r\n                  (!isSubmitting &&\r\n                    emailConfigurationState.error['error']['url'])\r\n                }\r\n                errorString={\r\n                  (touched.url && errors.url) ||\r\n                  (!isSubmitting &&\r\n                    emailConfigurationState.error['error']['url'])\r\n                }\r\n                onChange={(e: any) => {\r\n                  handleChange(e);\r\n                  setFieldTouched('url');\r\n                }}\r\n              />\r\n            </div>\r\n            <div\r\n              style={{\r\n                width: '49%',\r\n              }}\r\n            >\r\n              <h3 className='inputFieldLabel'>Protocol</h3>\r\n              <Select\r\n                showSearch\r\n                style={{ width: '100%', borderRadius: '6px' }}\r\n                placeholder='Select a protocol'\r\n                defaultValue={protocol}\r\n                value={protocol}\r\n                onChange={handleProtocolChange}\r\n              >\r\n                {prottocolOptions.map((option) => {\r\n                  return <Option value={option.value}>{option.name}</Option>;\r\n                })}\r\n              </Select>\r\n            </div>\r\n          </div>\r\n\r\n          <div\r\n            style={{\r\n              display: 'flex',\r\n              justifyContent: 'space-between',\r\n            }}\r\n          >\r\n            <div\r\n              style={{\r\n                width: '49%',\r\n              }}\r\n            >\r\n              <h3 className='inputFieldLabel'>Method</h3>\r\n\r\n              <Select\r\n                onChange={handleMethodChange}\r\n                showSearch\r\n                style={{ width: '100%', borderRadius: '6px' }}\r\n                placeholder='Select a method'\r\n                defaultValue={method}\r\n                value={method}\r\n              >\r\n                {methodOptions.map((option) => {\r\n                  return <Option value={option.value}>{option.name}</Option>;\r\n                })}\r\n              </Select>\r\n            </div>\r\n            <div\r\n              style={{\r\n                width: '49%',\r\n              }}\r\n            ></div>\r\n          </div>\r\n\r\n          <div\r\n            style={{\r\n              marginTop: '20px',\r\n            }}\r\n          ></div>\r\n          <h3 style={{}} className='addOrderContainer-sectionTitle'>\r\n            Parameters\r\n          </h3>\r\n\r\n          <h3 className='inputFieldLabel'>Recipient</h3>\r\n          <div\r\n            style={{\r\n              display: 'flex',\r\n              justifyContent: 'space-between',\r\n              alignItems: 'center',\r\n            }}\r\n          >\r\n            <div\r\n              style={{\r\n                width: '35%',\r\n              }}\r\n            >\r\n              <InputSmall\r\n                label='Key'\r\n                value={values.recipientKey}\r\n                name='recipientKey'\r\n                isError={\r\n                  (touched.recipientKey && errors.recipientKey) ||\r\n                  (!isSubmitting &&\r\n                    emailConfigurationState.error['error']['recipientKey'])\r\n                }\r\n                errorString={\r\n                  (touched.recipientKey && errors.recipientKey) ||\r\n                  (!isSubmitting &&\r\n                    emailConfigurationState.error['error']['recipientKey'])\r\n                }\r\n                onChange={(e: any) => {\r\n                  handleChange(e);\r\n                  setFieldTouched('recipientKey');\r\n                }}\r\n              />\r\n            </div>\r\n\r\n            <div\r\n              style={{\r\n                width: '20%',\r\n                marginLeft: '20px',\r\n              }}\r\n            >\r\n              <Checkbox\r\n                value={isArraySupport}\r\n                onChange={(e) => setIsArraySupport(e.target.checked)}\r\n              >\r\n                <span className='checkBoxFieldLabel'>Array support</span>\r\n              </Checkbox>\r\n            </div>\r\n\r\n            <div\r\n              style={{\r\n                width: '45%',\r\n              }}\r\n            >\r\n              {isArraySupport && (\r\n                <InputSmall\r\n                  label='Separator'\r\n                  value={values.separator}\r\n                  name='separator'\r\n                  isError={\r\n                    (touched.separator && errors.separator) ||\r\n                    (!isSubmitting &&\r\n                      emailConfigurationState.error['error']['separator'])\r\n                  }\r\n                  errorString={\r\n                    (touched.separator && errors.separator) ||\r\n                    (!isSubmitting &&\r\n                      emailConfigurationState.error['error']['separator'])\r\n                  }\r\n                  onChange={(e: any) => {\r\n                    handleChange(e);\r\n                    setFieldTouched('separator');\r\n                  }}\r\n                />\r\n              )}\r\n            </div>\r\n          </div>\r\n\r\n          <h3 className='inputFieldLabel'>Text</h3>\r\n          <InputSmall\r\n            label='Separator'\r\n            value={values.textKey}\r\n            name='textKey'\r\n            isError={\r\n              (touched.textKey && errors.textKey) ||\r\n              (!isSubmitting &&\r\n                emailConfigurationState.error['error']['textKey'])\r\n            }\r\n            errorString={\r\n              (touched.textKey && errors.textKey) ||\r\n              (!isSubmitting &&\r\n                emailConfigurationState.error['error']['textKey'])\r\n            }\r\n            onChange={(e: any) => {\r\n              handleChange(e);\r\n              setFieldTouched('textKey');\r\n            }}\r\n          />\r\n\r\n          <div\r\n            style={{\r\n              marginTop: '15px',\r\n            }}\r\n          ></div>\r\n\r\n          <h3 className='inputFieldLabel'>Mask</h3>\r\n          <div\r\n            style={{\r\n              display: 'flex',\r\n              justifyContent: 'space-between',\r\n              alignItems: 'center',\r\n            }}\r\n          >\r\n            <div\r\n              style={{\r\n                width: '49%',\r\n              }}\r\n            >\r\n              <InputSmall\r\n                label='Key'\r\n                value={values.maskKey}\r\n                name='maskKey'\r\n                isError={\r\n                  (touched.maskKey && errors.maskKey) ||\r\n                  (!isSubmitting &&\r\n                    emailConfigurationState.error['error']['maskKey'])\r\n                }\r\n                errorString={\r\n                  (touched.maskKey && errors.maskKey) ||\r\n                  (!isSubmitting &&\r\n                    emailConfigurationState.error['error']['maskKey'])\r\n                }\r\n                onChange={(e: any) => {\r\n                  handleChange(e);\r\n                  setFieldTouched('maskKey');\r\n                }}\r\n              />\r\n            </div>\r\n            <div\r\n              style={{\r\n                width: '49%',\r\n              }}\r\n            >\r\n              <InputSmall\r\n                label='Value'\r\n                value={values.maskValue}\r\n                name='maskValue'\r\n                isError={\r\n                  (touched.maskValue && errors.maskValue) ||\r\n                  (!isSubmitting &&\r\n                    emailConfigurationState.error['error']['maskValue'])\r\n                }\r\n                errorString={\r\n                  (touched.maskValue && errors.maskValue) ||\r\n                  (!isSubmitting &&\r\n                    emailConfigurationState.error['error']['maskValue'])\r\n                }\r\n                onChange={(e: any) => {\r\n                  handleChange(e);\r\n                  setFieldTouched('maskValue');\r\n                }}\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <div\r\n            style={{\r\n              marginTop: '15px',\r\n            }}\r\n          ></div>\r\n\r\n          <h3 className='inputFieldLabel'>Username</h3>\r\n          <div\r\n            style={{\r\n              display: 'flex',\r\n              justifyContent: 'space-between',\r\n              alignItems: 'center',\r\n            }}\r\n          >\r\n            <div\r\n              style={{\r\n                width: '49%',\r\n              }}\r\n            >\r\n              <InputSmall\r\n                label='Key'\r\n                value={values.usernameKey}\r\n                name='usernameKey'\r\n                isError={\r\n                  (touched.usernameKey && errors.usernameKey) ||\r\n                  (!isSubmitting &&\r\n                    emailConfigurationState.error['error']['usernameKey'])\r\n                }\r\n                errorString={\r\n                  (touched.usernameKey && errors.usernameKey) ||\r\n                  (!isSubmitting &&\r\n                    emailConfigurationState.error['error']['usernameKey'])\r\n                }\r\n                onChange={(e: any) => {\r\n                  handleChange(e);\r\n                  setFieldTouched('usernameKey');\r\n                }}\r\n              />\r\n            </div>\r\n            <div\r\n              style={{\r\n                width: '49%',\r\n              }}\r\n            >\r\n              <InputSmall\r\n                label='Value'\r\n                value={values.usernameValue}\r\n                name='usernameValue'\r\n                isError={\r\n                  (touched.usernameValue && errors.usernameValue) ||\r\n                  (!isSubmitting &&\r\n                    emailConfigurationState.error['error']['usernameValue'])\r\n                }\r\n                errorString={\r\n                  (touched.usernameValue && errors.usernameValue) ||\r\n                  (!isSubmitting &&\r\n                    emailConfigurationState.error['error']['usernameValue'])\r\n                }\r\n                onChange={(e: any) => {\r\n                  handleChange(e);\r\n                  setFieldTouched('usernameValue');\r\n                }}\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <div\r\n            style={{\r\n              marginTop: '15px',\r\n            }}\r\n          ></div>\r\n\r\n          <h3 className='inputFieldLabel'>Password</h3>\r\n          <div\r\n            style={{\r\n              display: 'flex',\r\n              justifyContent: 'space-between',\r\n              alignItems: 'center',\r\n            }}\r\n          >\r\n            <div\r\n              style={{\r\n                width: '49%',\r\n              }}\r\n            >\r\n              <InputSmall\r\n                label='Key'\r\n                value={values.passwordKey}\r\n                name='passwordKey'\r\n                isError={\r\n                  (touched.passwordKey && errors.passwordKey) ||\r\n                  (!isSubmitting &&\r\n                    emailConfigurationState.error['error']['passwordKey'])\r\n                }\r\n                errorString={\r\n                  (touched.passwordKey && errors.passwordKey) ||\r\n                  (!isSubmitting &&\r\n                    emailConfigurationState.error['error']['passwordKey'])\r\n                }\r\n                onChange={(e: any) => {\r\n                  handleChange(e);\r\n                  setFieldTouched('passwordKey');\r\n                }}\r\n              />\r\n            </div>\r\n            <div\r\n              style={{\r\n                width: '49%',\r\n              }}\r\n            >\r\n              <InputSmall\r\n                label='Value'\r\n                value={values.passwordValue}\r\n                name='passwordValue'\r\n                isError={\r\n                  (touched.passwordValue && errors.passwordValue) ||\r\n                  (!isSubmitting &&\r\n                    emailConfigurationState.error['error']['passwordValue'])\r\n                }\r\n                errorString={\r\n                  (touched.passwordValue && errors.passwordValue) ||\r\n                  (!isSubmitting &&\r\n                    emailConfigurationState.error['error']['passwordValue'])\r\n                }\r\n                onChange={(e: any) => {\r\n                  handleChange(e);\r\n                  setFieldTouched('passwordValue');\r\n                }}\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <div\r\n            style={{\r\n              marginTop: '15px',\r\n            }}\r\n          ></div>\r\n\r\n          <h3 className='inputFieldLabel'>Additional</h3>\r\n          <div\r\n            style={{\r\n              display: 'flex',\r\n              justifyContent: 'space-between',\r\n              alignItems: 'center',\r\n            }}\r\n          >\r\n            <div\r\n              style={{\r\n                width: '49%',\r\n              }}\r\n            >\r\n              <InputSmall\r\n                label='Msg Type'\r\n                value={values.additionalMsgType}\r\n                name='additionalMsgType'\r\n                isError={\r\n                  (touched.additionalMsgType && errors.additionalMsgType) ||\r\n                  (!isSubmitting &&\r\n                    emailConfigurationState.error['error']['additionalMsgType'])\r\n                }\r\n                errorString={\r\n                  (touched.additionalMsgType && errors.additionalMsgType) ||\r\n                  (!isSubmitting &&\r\n                    emailConfigurationState.error['error']['additionalMsgType'])\r\n                }\r\n                onChange={(e: any) => {\r\n                  handleChange(e);\r\n                  setFieldTouched('additionalMsgType');\r\n                }}\r\n              />\r\n            </div>\r\n            <div\r\n              style={{\r\n                width: '49%',\r\n              }}\r\n            ></div>\r\n          </div>\r\n\r\n          <Checkbox\r\n            value={isAuthenticated}\r\n            onChange={handleAuthenticatedChange}\r\n          >\r\n            <span className='checkBoxFieldLabel'>Authentication</span>\r\n          </Checkbox>\r\n\r\n          <div\r\n            style={{\r\n              marginTop: '20px',\r\n            }}\r\n          ></div>\r\n          <div\r\n            style={{\r\n              display: 'block',\r\n              marginBottom: '20px',\r\n              marginTop: '20px',\r\n            }}\r\n          >\r\n            <Button\r\n              onClick={(e: any) => handleSubmit(e)}\r\n              loading={emailConfigurationState.isLoading}\r\n              className='btnPrimaryClassNameoutline'\r\n            >\r\n              Update SMS Configuration\r\n            </Button>\r\n          </div>\r\n        </>\r\n      )}\r\n    </Formik>\r\n  );\r\n};\r\n\r\nexport default ConfigureSTMP;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\nimport { useHandleFetch } from '../../hooks';\r\n// import third party ui lib\r\nimport {\r\n  Upload,\r\n  message,\r\n  Switch,\r\n  Select,\r\n  Button,\r\n  notification,\r\n  Modal,\r\n  Tabs,\r\n} from 'antd';\r\n\r\nimport {\r\n  FileOutlined,\r\n  InboxOutlined,\r\n  FileAddOutlined,\r\n  DeleteOutlined,\r\n  CheckCircleOutlined,\r\n  CloseOutlined,\r\n  CheckOutlined,\r\n  InfoCircleOutlined,\r\n  PlusOutlined,\r\n  FileImageFilled,\r\n} from '@ant-design/icons';\r\n\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport MediaLibrary from '../../components/MediaLibrary';\r\nimport CKEditor from '@ckeditor/ckeditor5-react';\r\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\r\n\r\nconst validationSchema = Yup.object().shape({\r\n  name: Yup.string()\r\n    .label('Name')\r\n    .required('Name is required')\r\n    .min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\nconst { TabPane } = Tabs;\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n  notification.success({\r\n    message: message || 'New Customer Template Updated',\r\n    description: '',\r\n    icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n  });\r\n};\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n  notification.error({\r\n    message: message || 'Something Went Wrong',\r\n    description: '',\r\n    icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n  });\r\n};\r\n\r\nconst initialValues = {\r\n  name: '',\r\n  description: '',\r\n};\r\n\r\ninterface Props {\r\n  visible: boolean;\r\n  setVisible: any;\r\n}\r\n\r\nconst AddNewBrand = ({ visible, setVisible }: Props) => {\r\n  const [autoEmailTemplate, handleAutoEmailTemplateFetch] = useHandleFetch(\r\n    {},\r\n    'configureAutoSMSTemplate'\r\n  );\r\n  const [\r\n    getConfigureAutoEmailTemplate,\r\n    handleGetConfigureAutoEmailTemplateFetch,\r\n  ] = useHandleFetch({}, 'getConfigureAutoSMSTemplate');\r\n\r\n  const [customer, setcustomer] = useState({\r\n    subject: '',\r\n    body: '',\r\n  });\r\n\r\n  const [admin, setadmin] = useState({\r\n    subject: '',\r\n    body: '',\r\n  });\r\n\r\n  const handleSubmit = async () => {\r\n    const getConfigurationAutoEmailTemplateRes = await handleAutoEmailTemplateFetch(\r\n      {\r\n        body: {\r\n          event: 'newCustomer',\r\n          customer: {\r\n            ...customer,\r\n          },\r\n          admin: {\r\n            ...admin,\r\n          },\r\n        },\r\n      }\r\n    );\r\n\r\n    // @ts-ignore\r\n    if (\r\n      // @ts-ignore\r\n      getConfigurationAutoEmailTemplateRes &&\r\n      // @ts-ignore\r\n      getConfigurationAutoEmailTemplateRes.status === 'ok'\r\n    ) {\r\n      openSuccessNotification();\r\n      setVisible(false);\r\n    } else {\r\n      openErrorNotification();\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!autoEmailTemplate['isLoading']) {\r\n      const error = autoEmailTemplate['error'];\r\n      if (error['isError'] && Object.keys(error['error']).length > 0) {\r\n        if (error['error']['registerError']) {\r\n          // setServerErrors(error['error']['registerError']);\r\n        } else if (error['error']['checkoutError']) {\r\n          // setServerErrors(error['error']['checkoutError']);\r\n        } else {\r\n          // setServerErrors(error['error']);\r\n        }\r\n\r\n        const errors =\r\n          Object.values(error['error']).length > 0\r\n            ? Object.values(error['error'])\r\n            : [];\r\n        errors.forEach((err, i) => {\r\n          if (typeof err === 'string') {\r\n            openErrorNotification(err);\r\n          } else if (typeof err === 'object') {\r\n            if (err && Object.keys(err).length > 0) {\r\n              const errs = Object.values(err);\r\n              errs.forEach((err) => {\r\n                openErrorNotification(err);\r\n              });\r\n            }\r\n          }\r\n        });\r\n      }\r\n    }\r\n\r\n    if (\r\n      !autoEmailTemplate['isLoading'] &&\r\n      Object.keys(autoEmailTemplate.data).length > 0\r\n    ) {\r\n      // if (autoEmailTemplate['data']['status'] === 'ok') {\r\n      //     openSuccessNotification('Email Sent!');\r\n      // }\r\n    }\r\n  }, [autoEmailTemplate]);\r\n\r\n  useEffect(() => {\r\n    const getCustomerAutoEmail = async () => {\r\n      const res = await handleGetConfigureAutoEmailTemplateFetch({\r\n        urlOptions: {\r\n          placeHolders: {\r\n            eventName: 'newCustomer',\r\n          },\r\n        },\r\n      });\r\n\r\n      console.log('newCustomertemplate', res);\r\n      // @ts-ignore\r\n      if (res) {\r\n        setadmin(res['admin'] || '');\r\n        setcustomer(res['customer'] || '');\r\n      }\r\n      // set auto email template to customer and admin\r\n    };\r\n    getCustomerAutoEmail();\r\n  }, []);\r\n\r\n  const handleCancel = (e: any) => {\r\n    setVisible(false);\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      width={'80vw'}\r\n      style={{\r\n        top: '40px',\r\n      }}\r\n      title='New Customer Event Template'\r\n      visible={visible}\r\n      onOk={(e: any) => handleSubmit()}\r\n      onCancel={handleCancel}\r\n      okText='Submit'\r\n      okButtonProps={{\r\n        loading: autoEmailTemplate.isLoading,\r\n        htmlType: 'submit',\r\n        // disabled: getisSubmitButtonDisabled(values, isValid)\r\n      }}\r\n      bodyStyle={{\r\n        margin: '10px',\r\n        padding: '10px',\r\n      }}\r\n      footer={false}\r\n    >\r\n      <Tabs defaultActiveKey='1'>\r\n        <TabPane tab='Customer' key='1'>\r\n          <div\r\n            style={{\r\n              display: 'flex',\r\n            }}\r\n          >\r\n            <div\r\n              style={{\r\n                width: '65%',\r\n              }}\r\n            >\r\n              <Input\r\n                label='Subject'\r\n                value={customer.subject}\r\n                name='subject'\r\n                onChange={(e: any) => {\r\n                  setcustomer({\r\n                    ...customer,\r\n                    subject: e.target.value,\r\n                  });\r\n                }}\r\n              />\r\n\r\n              <h3 className='inputFieldLabel'>Body</h3>\r\n\r\n              <CKEditor\r\n                editor={ClassicEditor}\r\n                data={customer.body}\r\n                onInit={(editor) => {\r\n                  // You can store the \"editor\" and use when it is needed.\r\n                  console.log('Editor is ready to use!', editor);\r\n                }}\r\n                onChange={(event, editor) => {\r\n                  const data = editor.getData();\r\n                  setcustomer({\r\n                    ...customer,\r\n                    body: data,\r\n                  });\r\n                }}\r\n                onBlur={(event, editor) => {\r\n                  console.log('Blur.', editor);\r\n                }}\r\n                onFocus={(event, editor) => {\r\n                  console.log('Focus.', editor);\r\n                }}\r\n              />\r\n\r\n              <div\r\n                style={{\r\n                  display: 'block',\r\n                  marginBottom: '20px',\r\n                  marginTop: '20px',\r\n                }}\r\n              >\r\n                <Button\r\n                  onClick={handleSubmit}\r\n                  loading={autoEmailTemplate.isLoading}\r\n                  className='btnPrimaryClassNameoutline'\r\n                >\r\n                  Update Template\r\n                </Button>\r\n              </div>\r\n            </div>\r\n\r\n            <div\r\n              style={{\r\n                width: '35%',\r\n                overflowY: 'auto',\r\n                background: '#f7f7f7',\r\n                marginLeft: '20px',\r\n                padding: '10px',\r\n                borderRadius: '8px',\r\n              }}\r\n            >\r\n              <h4>Information Tags</h4>\r\n              <p\r\n                style={{\r\n                  fontSize: '12px',\r\n                }}\r\n              >\r\n                Place the following tags to replace them with actual data while\r\n                sending email\r\n              </p>\r\n              <ul\r\n                style={{\r\n                  padding: '15px',\r\n                }}\r\n              >\r\n                <li\r\n                  style={{\r\n                    fontSize: '12px',\r\n                    marginBottom: '10px',\r\n                    lineHeight: 1.7,\r\n                    fontWeight: 500,\r\n                  }}\r\n                >\r\n                  <b\r\n                    style={{\r\n                      borderRadius: '15px',\r\n                      backgroundColor: '#ddd',\r\n                      padding: '1px 10px',\r\n                    }}\r\n                  >\r\n                    &lt;?=customer.firstName?&gt; :\r\n                  </b>{' '}\r\n                  First Name\r\n                </li>\r\n                <li\r\n                  style={{\r\n                    fontSize: '12px',\r\n                    lineHeight: 2,\r\n                    fontWeight: 500,\r\n                  }}\r\n                >\r\n                  <b\r\n                    style={{\r\n                      borderRadius: '15px',\r\n                      backgroundColor: '#ddd',\r\n                      padding: '1px 10px',\r\n                    }}\r\n                  >\r\n                    &lt;?customer.lastName?&gt; :\r\n                  </b>{' '}\r\n                  Last Name\r\n                </li>\r\n                <li\r\n                  style={{\r\n                    fontSize: '12px',\r\n                    lineHeight: 2,\r\n                    fontWeight: 500,\r\n                  }}\r\n                >\r\n                  <b\r\n                    style={{\r\n                      borderRadius: '15px',\r\n                      backgroundColor: '#ddd',\r\n                      padding: '1px 10px',\r\n                    }}\r\n                  >\r\n                    &lt;?customer.phone?&gt; :\r\n                  </b>{' '}\r\n                  Phone\r\n                </li>\r\n                <li\r\n                  style={{\r\n                    fontSize: '12px',\r\n                    lineHeight: 2,\r\n                    fontWeight: 500,\r\n                  }}\r\n                >\r\n                  <b\r\n                    style={{\r\n                      borderRadius: '15px',\r\n                      backgroundColor: '#ddd',\r\n                      padding: '1px 10px',\r\n                    }}\r\n                  >\r\n                    &lt;?customer.email?&gt; :\r\n                  </b>{' '}\r\n                  Email\r\n                </li>\r\n                <li\r\n                  style={{\r\n                    fontSize: '12px',\r\n                    lineHeight: 2,\r\n                    fontWeight: 500,\r\n                  }}\r\n                >\r\n                  <b\r\n                    style={{\r\n                      borderRadius: '15px',\r\n                      backgroundColor: '#ddd',\r\n                      padding: '1px 10px',\r\n                    }}\r\n                  >\r\n                    &lt;?customer.email?&gt; :\r\n                  </b>{' '}\r\n                  Email\r\n                </li>\r\n\r\n                <li\r\n                  style={{\r\n                    fontSize: '12px',\r\n                    lineHeight: 2,\r\n                    fontWeight: 500,\r\n                  }}\r\n                >\r\n                  <b\r\n                    style={{\r\n                      borderRadius: '15px',\r\n                      backgroundColor: '#ddd',\r\n                      padding: '1px 10px',\r\n                    }}\r\n                  >\r\n                    &lt;?customer.address1?&gt; :\r\n                  </b>{' '}\r\n                  Address\r\n                </li>\r\n\r\n                <li\r\n                  style={{\r\n                    fontSize: '12px',\r\n                    lineHeight: 2,\r\n                    fontWeight: 500,\r\n                  }}\r\n                >\r\n                  <b\r\n                    style={{\r\n                      borderRadius: '15px',\r\n                      backgroundColor: '#ddd',\r\n                      padding: '1px 10px',\r\n                    }}\r\n                  >\r\n                    &lt;?customer.added?&gt; :\r\n                  </b>{' '}\r\n                  Joined\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </TabPane>\r\n\r\n        <TabPane tab='Admin' key='2'>\r\n          <div\r\n            style={{\r\n              display: 'flex',\r\n            }}\r\n          >\r\n            <div\r\n              style={{\r\n                width: '65%',\r\n              }}\r\n            >\r\n              <Input\r\n                label='Subject'\r\n                value={admin.subject}\r\n                name='subject'\r\n                onChange={(e: any) => {\r\n                  setadmin({\r\n                    ...admin,\r\n                    subject: e.target.value,\r\n                  });\r\n                }}\r\n              />\r\n\r\n              <h3 className='inputFieldLabel'>Body</h3>\r\n\r\n              <CKEditor\r\n                editor={ClassicEditor}\r\n                data={admin.body}\r\n                onInit={(editor) => {\r\n                  // You can store the \"editor\" and use when it is needed.\r\n                  console.log('Editor is ready to use!', editor);\r\n                }}\r\n                onChange={(event, editor) => {\r\n                  const data = editor.getData();\r\n                  setadmin({\r\n                    ...admin,\r\n                    body: data,\r\n                  });\r\n                }}\r\n                onBlur={(event, editor) => {\r\n                  console.log('Blur.', editor);\r\n                }}\r\n                onFocus={(event, editor) => {\r\n                  console.log('Focus.', editor);\r\n                }}\r\n              />\r\n\r\n              <div\r\n                style={{\r\n                  display: 'block',\r\n                  marginBottom: '20px',\r\n                  marginTop: '20px',\r\n                }}\r\n              >\r\n                <Button\r\n                  onClick={handleSubmit}\r\n                  loading={autoEmailTemplate.isLoading}\r\n                  className='btnPrimaryClassNameoutline'\r\n                >\r\n                  Update Template\r\n                </Button>\r\n              </div>\r\n            </div>\r\n            <div\r\n              style={{\r\n                width: '35%',\r\n                overflowY: 'auto',\r\n                background: '#f7f7f7',\r\n                marginLeft: '20px',\r\n                padding: '10px',\r\n                borderRadius: '8px',\r\n              }}\r\n            >\r\n              <h4>Information Tags</h4>\r\n              <p\r\n                style={{\r\n                  fontSize: '12px',\r\n                }}\r\n              >\r\n                Place the following tags to replace them with actual data while\r\n                sending email\r\n              </p>\r\n              <ul\r\n                style={{\r\n                  padding: '15px',\r\n                }}\r\n              >\r\n                <li\r\n                  style={{\r\n                    fontSize: '12px',\r\n                    marginBottom: '10px',\r\n                    lineHeight: 1.7,\r\n                    fontWeight: 500,\r\n                  }}\r\n                >\r\n                  <b\r\n                    style={{\r\n                      borderRadius: '15px',\r\n                      backgroundColor: '#ddd',\r\n                      padding: '1px 10px',\r\n                    }}\r\n                  >\r\n                    &lt;?=customer.firstName?&gt; :\r\n                  </b>{' '}\r\n                  First Name\r\n                </li>\r\n                <li\r\n                  style={{\r\n                    fontSize: '12px',\r\n                    lineHeight: 2,\r\n                    fontWeight: 500,\r\n                  }}\r\n                >\r\n                  <b\r\n                    style={{\r\n                      borderRadius: '15px',\r\n                      backgroundColor: '#ddd',\r\n                      padding: '1px 10px',\r\n                    }}\r\n                  >\r\n                    &lt;?customer.lastName?&gt; :\r\n                  </b>{' '}\r\n                  Last Name\r\n                </li>\r\n                <li\r\n                  style={{\r\n                    fontSize: '12px',\r\n                    lineHeight: 2,\r\n                    fontWeight: 500,\r\n                  }}\r\n                >\r\n                  <b\r\n                    style={{\r\n                      borderRadius: '15px',\r\n                      backgroundColor: '#ddd',\r\n                      padding: '1px 10px',\r\n                    }}\r\n                  >\r\n                    &lt;?customer.phone?&gt; :\r\n                  </b>{' '}\r\n                  Phone\r\n                </li>\r\n                <li\r\n                  style={{\r\n                    fontSize: '12px',\r\n                    lineHeight: 2,\r\n                    fontWeight: 500,\r\n                  }}\r\n                >\r\n                  <b\r\n                    style={{\r\n                      borderRadius: '15px',\r\n                      backgroundColor: '#ddd',\r\n                      padding: '1px 10px',\r\n                    }}\r\n                  >\r\n                    &lt;?customer.email?&gt; :\r\n                  </b>{' '}\r\n                  Email\r\n                </li>\r\n                <li\r\n                  style={{\r\n                    fontSize: '12px',\r\n                    lineHeight: 2,\r\n                    fontWeight: 500,\r\n                  }}\r\n                >\r\n                  <b\r\n                    style={{\r\n                      borderRadius: '15px',\r\n                      backgroundColor: '#ddd',\r\n                      padding: '1px 10px',\r\n                    }}\r\n                  >\r\n                    &lt;?customer.email?&gt; :\r\n                  </b>{' '}\r\n                  Email\r\n                </li>\r\n\r\n                <li\r\n                  style={{\r\n                    fontSize: '12px',\r\n                    lineHeight: 2,\r\n                    fontWeight: 500,\r\n                  }}\r\n                >\r\n                  <b\r\n                    style={{\r\n                      borderRadius: '15px',\r\n                      backgroundColor: '#ddd',\r\n                      padding: '1px 10px',\r\n                    }}\r\n                  >\r\n                    &lt;?customer.address1?&gt; :\r\n                  </b>{' '}\r\n                  Address\r\n                </li>\r\n\r\n                <li\r\n                  style={{\r\n                    fontSize: '12px',\r\n                    lineHeight: 2,\r\n                    fontWeight: 500,\r\n                  }}\r\n                >\r\n                  <b\r\n                    style={{\r\n                      borderRadius: '15px',\r\n                      backgroundColor: '#ddd',\r\n                      padding: '1px 10px',\r\n                    }}\r\n                  >\r\n                    &lt;?customer.added?&gt; :\r\n                  </b>{' '}\r\n                  Joined\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </TabPane>\r\n      </Tabs>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default AddNewBrand;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\nimport { useHandleFetch } from '../../hooks';\r\n// import third party ui lib\r\nimport {\r\n  Upload,\r\n  message,\r\n  Switch,\r\n  Select,\r\n  Button,\r\n  notification,\r\n  Modal,\r\n  Tabs,\r\n} from 'antd';\r\n\r\nimport {\r\n  FileOutlined,\r\n  InboxOutlined,\r\n  FileAddOutlined,\r\n  DeleteOutlined,\r\n  CheckCircleOutlined,\r\n  CloseOutlined,\r\n  CheckOutlined,\r\n  InfoCircleOutlined,\r\n  PlusOutlined,\r\n  FileImageFilled,\r\n} from '@ant-design/icons';\r\n\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport MediaLibrary from '../../components/MediaLibrary';\r\nimport CKEditor from '@ckeditor/ckeditor5-react';\r\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\r\n\r\nconst validationSchema = Yup.object().shape({\r\n  name: Yup.string()\r\n    .label('Name')\r\n    .required('Name is required')\r\n    .min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\nconst { TabPane } = Tabs;\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n  notification.success({\r\n    message: message || 'New Dealer Template Updated',\r\n    description: '',\r\n    icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n  });\r\n};\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n  notification.error({\r\n    message: message || 'Something Went Wrong',\r\n    description: '',\r\n    icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n  });\r\n};\r\n\r\nconst initialValues = {\r\n  name: '',\r\n  description: '',\r\n};\r\n\r\ninterface Props {\r\n  visible: boolean;\r\n  setVisible: any;\r\n}\r\n\r\nconst AddNewBrand = ({ visible, setVisible }: Props) => {\r\n  const [autoEmailTemplate, handleAutoEmailTemplateFetch] = useHandleFetch(\r\n    {},\r\n    'configureAutoSMSTemplate'\r\n  );\r\n  const [\r\n    getConfigureAutoEmailTemplate,\r\n    handleGetConfigureAutoEmailTemplateFetch,\r\n  ] = useHandleFetch({}, 'getConfigureAutoSMSTemplate');\r\n\r\n  const [customer, setcustomer] = useState({\r\n    subject: '',\r\n    body: '',\r\n  });\r\n\r\n  const [admin, setadmin] = useState({\r\n    subject: '',\r\n    body: '',\r\n  });\r\n\r\n  const handleSubmit = async () => {\r\n    const getConfigurationAutoEmailTemplateRes = await handleAutoEmailTemplateFetch(\r\n      {\r\n        body: {\r\n          event: 'newDealer',\r\n          user: {\r\n            ...customer,\r\n          },\r\n          admin: {\r\n            ...admin,\r\n          },\r\n        },\r\n      }\r\n    );\r\n\r\n    // @ts-ignore\r\n    if (\r\n      // @ts-ignore\r\n      getConfigurationAutoEmailTemplateRes &&\r\n      // @ts-ignore\r\n      getConfigurationAutoEmailTemplateRes.status === 'ok'\r\n    ) {\r\n      openSuccessNotification();\r\n      setVisible(false);\r\n    } else {\r\n      openErrorNotification();\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!autoEmailTemplate['isLoading']) {\r\n      const error = autoEmailTemplate['error'];\r\n      if (error['isError'] && Object.keys(error['error']).length > 0) {\r\n        if (error['error']['registerError']) {\r\n          // setServerErrors(error['error']['registerError']);\r\n        } else if (error['error']['checkoutError']) {\r\n          // setServerErrors(error['error']['checkoutError']);\r\n        } else {\r\n          // setServerErrors(error['error']);\r\n        }\r\n\r\n        const errors =\r\n          Object.values(error['error']).length > 0\r\n            ? Object.values(error['error'])\r\n            : [];\r\n        errors.forEach((err, i) => {\r\n          if (typeof err === 'string') {\r\n            openErrorNotification(err);\r\n          } else if (typeof err === 'object') {\r\n            if (err && Object.keys(err).length > 0) {\r\n              const errs = Object.values(err);\r\n              errs.forEach((err) => {\r\n                openErrorNotification(err);\r\n              });\r\n            }\r\n          }\r\n        });\r\n      }\r\n    }\r\n\r\n    if (\r\n      !autoEmailTemplate['isLoading'] &&\r\n      Object.keys(autoEmailTemplate.data).length > 0\r\n    ) {\r\n      // if (autoEmailTemplate['data']['status'] === 'ok') {\r\n      //     openSuccessNotification('Email Sent!');\r\n      // }\r\n    }\r\n  }, [autoEmailTemplate]);\r\n\r\n  useEffect(() => {\r\n    const getCustomerAutoEmail = async () => {\r\n      const res = await handleGetConfigureAutoEmailTemplateFetch({\r\n        urlOptions: {\r\n          placeHolders: {\r\n            eventName: 'newDealer',\r\n          },\r\n        },\r\n      });\r\n\r\n      console.log('newDealertemplate', res);\r\n      // @ts-ignore\r\n      if (res) {\r\n        setadmin(res['admin'] || '');\r\n        setcustomer(res['user'] || '');\r\n      }\r\n      // set auto email template to customer and admin\r\n    };\r\n    getCustomerAutoEmail();\r\n  }, []);\r\n\r\n  const handleCancel = (e: any) => {\r\n    setVisible(false);\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      width={'80vw'}\r\n      style={{\r\n        top: '40px',\r\n      }}\r\n      title='New Dealer Event Template'\r\n      visible={visible}\r\n      onOk={(e: any) => handleSubmit()}\r\n      onCancel={handleCancel}\r\n      okText='Submit'\r\n      okButtonProps={{\r\n        loading: autoEmailTemplate.isLoading,\r\n        htmlType: 'submit',\r\n        // disabled: getisSubmitButtonDisabled(values, isValid)\r\n      }}\r\n      bodyStyle={{\r\n        margin: '10px',\r\n        padding: '10px',\r\n      }}\r\n      footer={false}\r\n    >\r\n      <Tabs defaultActiveKey='1'>\r\n        <TabPane tab='Customer' key='1'>\r\n          <div\r\n            style={{\r\n              display: 'flex',\r\n            }}\r\n          >\r\n            <div\r\n              style={{\r\n                width: '65%',\r\n              }}\r\n            >\r\n              <Input\r\n                label='Subject'\r\n                value={customer.subject || ''}\r\n                name='subject'\r\n                onChange={(e: any) => {\r\n                  setcustomer({\r\n                    ...customer,\r\n                    subject: e.target.value,\r\n                  });\r\n                }}\r\n              />\r\n\r\n              <h3 className='inputFieldLabel'>Body</h3>\r\n\r\n              <CKEditor\r\n                editor={ClassicEditor}\r\n                data={customer.body || ''}\r\n                onInit={(editor) => {\r\n                  // You can store the \"editor\" and use when it is needed.\r\n                  console.log('Editor is ready to use!', editor);\r\n                }}\r\n                onChange={(event, editor) => {\r\n                  const data = editor.getData();\r\n                  setcustomer({\r\n                    ...customer,\r\n                    body: data,\r\n                  });\r\n                }}\r\n                onBlur={(event, editor) => {\r\n                  console.log('Blur.', editor);\r\n                }}\r\n                onFocus={(event, editor) => {\r\n                  console.log('Focus.', editor);\r\n                }}\r\n              />\r\n\r\n              <div\r\n                style={{\r\n                  display: 'block',\r\n                  marginBottom: '20px',\r\n                  marginTop: '20px',\r\n                }}\r\n              >\r\n                <Button\r\n                  onClick={handleSubmit}\r\n                  loading={autoEmailTemplate.isLoading}\r\n                  className='btnPrimaryClassNameoutline'\r\n                >\r\n                  Update Template\r\n                </Button>\r\n              </div>\r\n            </div>\r\n\r\n            <div\r\n              style={{\r\n                width: '35%',\r\n                overflowY: 'auto',\r\n                background: '#f7f7f7',\r\n                marginLeft: '20px',\r\n                padding: '10px',\r\n                borderRadius: '8px',\r\n              }}\r\n            >\r\n              <h4>Information Tags</h4>\r\n              <p\r\n                style={{\r\n                  fontSize: '12px',\r\n                }}\r\n              >\r\n                Place the following tags to replace them with actual data while\r\n                sending email\r\n              </p>\r\n              <ul\r\n                style={{\r\n                  padding: '15px',\r\n                }}\r\n              >\r\n                <li\r\n                  style={{\r\n                    fontSize: '12px',\r\n                    marginBottom: '10px',\r\n                    lineHeight: 1.7,\r\n                    fontWeight: 500,\r\n                  }}\r\n                >\r\n                  <b\r\n                    style={{\r\n                      borderRadius: '15px',\r\n                      backgroundColor: '#ddd',\r\n                      padding: '1px 10px',\r\n                    }}\r\n                  >\r\n                    &lt;?=user.code?&gt; :\r\n                  </b>{' '}\r\n                  Code\r\n                </li>\r\n\r\n                <li\r\n                  style={{\r\n                    fontSize: '12px',\r\n                    marginBottom: '10px',\r\n                    lineHeight: 1.7,\r\n                    fontWeight: 500,\r\n                  }}\r\n                >\r\n                  <b\r\n                    style={{\r\n                      borderRadius: '15px',\r\n                      backgroundColor: '#ddd',\r\n                      padding: '1px 10px',\r\n                    }}\r\n                  >\r\n                    &lt;?=user.firstName?&gt; :\r\n                  </b>{' '}\r\n                  First Name\r\n                </li>\r\n                <li\r\n                  style={{\r\n                    fontSize: '12px',\r\n                    lineHeight: 2,\r\n                    fontWeight: 500,\r\n                  }}\r\n                >\r\n                  <b\r\n                    style={{\r\n                      borderRadius: '15px',\r\n                      backgroundColor: '#ddd',\r\n                      padding: '1px 10px',\r\n                    }}\r\n                  >\r\n                    &lt;?user.lastName?&gt; :\r\n                  </b>{' '}\r\n                  Last Name\r\n                </li>\r\n                <li\r\n                  style={{\r\n                    fontSize: '12px',\r\n                    lineHeight: 2,\r\n                    fontWeight: 500,\r\n                  }}\r\n                >\r\n                  <b\r\n                    style={{\r\n                      borderRadius: '15px',\r\n                      backgroundColor: '#ddd',\r\n                      padding: '1px 10px',\r\n                    }}\r\n                  >\r\n                    &lt;?user.phone?&gt; :\r\n                  </b>{' '}\r\n                  Phone\r\n                </li>\r\n                <li\r\n                  style={{\r\n                    fontSize: '12px',\r\n                    lineHeight: 2,\r\n                    fontWeight: 500,\r\n                  }}\r\n                >\r\n                  <b\r\n                    style={{\r\n                      borderRadius: '15px',\r\n                      backgroundColor: '#ddd',\r\n                      padding: '1px 10px',\r\n                    }}\r\n                  >\r\n                    &lt;?user.email?&gt; :\r\n                  </b>{' '}\r\n                  Email\r\n                </li>\r\n                <li\r\n                  style={{\r\n                    fontSize: '12px',\r\n                    lineHeight: 2,\r\n                    fontWeight: 500,\r\n                  }}\r\n                >\r\n                  <b\r\n                    style={{\r\n                      borderRadius: '15px',\r\n                      backgroundColor: '#ddd',\r\n                      padding: '1px 10px',\r\n                    }}\r\n                  >\r\n                    &lt;?user.email?&gt; :\r\n                  </b>{' '}\r\n                  Email\r\n                </li>\r\n\r\n                <li\r\n                  style={{\r\n                    fontSize: '12px',\r\n                    lineHeight: 2,\r\n                    fontWeight: 500,\r\n                  }}\r\n                >\r\n                  <b\r\n                    style={{\r\n                      borderRadius: '15px',\r\n                      backgroundColor: '#ddd',\r\n                      padding: '1px 10px',\r\n                    }}\r\n                  >\r\n                    &lt;?user.address1?&gt; :\r\n                  </b>{' '}\r\n                  Address\r\n                </li>\r\n\r\n                <li\r\n                  style={{\r\n                    fontSize: '12px',\r\n                    lineHeight: 2,\r\n                    fontWeight: 500,\r\n                  }}\r\n                >\r\n                  <b\r\n                    style={{\r\n                      borderRadius: '15px',\r\n                      backgroundColor: '#ddd',\r\n                      padding: '1px 10px',\r\n                    }}\r\n                  >\r\n                    &lt;?user.added?&gt; :\r\n                  </b>{' '}\r\n                  Joined\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </TabPane>\r\n\r\n        <TabPane tab='Admin' key='2'>\r\n          <div\r\n            style={{\r\n              display: 'flex',\r\n            }}\r\n          >\r\n            <div\r\n              style={{\r\n                width: '65%',\r\n              }}\r\n            >\r\n              <Input\r\n                label='Subject'\r\n                value={admin.subject}\r\n                name='subject'\r\n                onChange={(e: any) => {\r\n                  setadmin({\r\n                    ...admin,\r\n                    subject: e.target.value,\r\n                  });\r\n                }}\r\n              />\r\n\r\n              <h3 className='inputFieldLabel'>Body</h3>\r\n\r\n              <CKEditor\r\n                editor={ClassicEditor}\r\n                data={admin.body}\r\n                onInit={(editor) => {\r\n                  // You can store the \"editor\" and use when it is needed.\r\n                  console.log('Editor is ready to use!', editor);\r\n                }}\r\n                onChange={(event, editor) => {\r\n                  const data = editor.getData();\r\n                  setadmin({\r\n                    ...admin,\r\n                    body: data,\r\n                  });\r\n                }}\r\n                onBlur={(event, editor) => {\r\n                  console.log('Blur.', editor);\r\n                }}\r\n                onFocus={(event, editor) => {\r\n                  console.log('Focus.', editor);\r\n                }}\r\n              />\r\n\r\n              <div\r\n                style={{\r\n                  display: 'block',\r\n                  marginBottom: '20px',\r\n                  marginTop: '20px',\r\n                }}\r\n              >\r\n                <Button\r\n                  onClick={handleSubmit}\r\n                  loading={autoEmailTemplate.isLoading}\r\n                  className='btnPrimaryClassNameoutline'\r\n                >\r\n                  Update Template\r\n                </Button>\r\n              </div>\r\n            </div>\r\n            <div\r\n              style={{\r\n                width: '35%',\r\n                overflowY: 'auto',\r\n                background: '#f7f7f7',\r\n                marginLeft: '20px',\r\n                padding: '10px',\r\n                borderRadius: '8px',\r\n              }}\r\n            >\r\n              <h4>Information Tags</h4>\r\n              <p\r\n                style={{\r\n                  fontSize: '12px',\r\n                }}\r\n              >\r\n                Place the following tags to replace them with actual data while\r\n                sending email\r\n              </p>\r\n              <ul\r\n                style={{\r\n                  padding: '15px',\r\n                }}\r\n              >\r\n                <li\r\n                  style={{\r\n                    fontSize: '12px',\r\n                    marginBottom: '10px',\r\n                    lineHeight: 1.7,\r\n                    fontWeight: 500,\r\n                  }}\r\n                >\r\n                  <b\r\n                    style={{\r\n                      borderRadius: '15px',\r\n                      backgroundColor: '#ddd',\r\n                      padding: '1px 10px',\r\n                    }}\r\n                  >\r\n                    &lt;?=user.code?&gt; :\r\n                  </b>{' '}\r\n                  Code\r\n                </li>\r\n\r\n                <li\r\n                  style={{\r\n                    fontSize: '12px',\r\n                    marginBottom: '10px',\r\n                    lineHeight: 1.7,\r\n                    fontWeight: 500,\r\n                  }}\r\n                >\r\n                  <b\r\n                    style={{\r\n                      borderRadius: '15px',\r\n                      backgroundColor: '#ddd',\r\n                      padding: '1px 10px',\r\n                    }}\r\n                  >\r\n                    &lt;?=user.firstName?&gt; :\r\n                  </b>{' '}\r\n                  First Name\r\n                </li>\r\n                <li\r\n                  style={{\r\n                    fontSize: '12px',\r\n                    lineHeight: 2,\r\n                    fontWeight: 500,\r\n                  }}\r\n                >\r\n                  <b\r\n                    style={{\r\n                      borderRadius: '15px',\r\n                      backgroundColor: '#ddd',\r\n                      padding: '1px 10px',\r\n                    }}\r\n                  >\r\n                    &lt;?user.lastName?&gt; :\r\n                  </b>{' '}\r\n                  Last Name\r\n                </li>\r\n                <li\r\n                  style={{\r\n                    fontSize: '12px',\r\n                    lineHeight: 2,\r\n                    fontWeight: 500,\r\n                  }}\r\n                >\r\n                  <b\r\n                    style={{\r\n                      borderRadius: '15px',\r\n                      backgroundColor: '#ddd',\r\n                      padding: '1px 10px',\r\n                    }}\r\n                  >\r\n                    &lt;?user.phone?&gt; :\r\n                  </b>{' '}\r\n                  Phone\r\n                </li>\r\n                <li\r\n                  style={{\r\n                    fontSize: '12px',\r\n                    lineHeight: 2,\r\n                    fontWeight: 500,\r\n                  }}\r\n                >\r\n                  <b\r\n                    style={{\r\n                      borderRadius: '15px',\r\n                      backgroundColor: '#ddd',\r\n                      padding: '1px 10px',\r\n                    }}\r\n                  >\r\n                    &lt;?user.email?&gt; :\r\n                  </b>{' '}\r\n                  Email\r\n                </li>\r\n                <li\r\n                  style={{\r\n                    fontSize: '12px',\r\n                    lineHeight: 2,\r\n                    fontWeight: 500,\r\n                  }}\r\n                >\r\n                  <b\r\n                    style={{\r\n                      borderRadius: '15px',\r\n                      backgroundColor: '#ddd',\r\n                      padding: '1px 10px',\r\n                    }}\r\n                  >\r\n                    &lt;?user.email?&gt; :\r\n                  </b>{' '}\r\n                  Email\r\n                </li>\r\n\r\n                <li\r\n                  style={{\r\n                    fontSize: '12px',\r\n                    lineHeight: 2,\r\n                    fontWeight: 500,\r\n                  }}\r\n                >\r\n                  <b\r\n                    style={{\r\n                      borderRadius: '15px',\r\n                      backgroundColor: '#ddd',\r\n                      padding: '1px 10px',\r\n                    }}\r\n                  >\r\n                    &lt;?user.address1?&gt; :\r\n                  </b>{' '}\r\n                  Address\r\n                </li>\r\n\r\n                <li\r\n                  style={{\r\n                    fontSize: '12px',\r\n                    lineHeight: 2,\r\n                    fontWeight: 500,\r\n                  }}\r\n                >\r\n                  <b\r\n                    style={{\r\n                      borderRadius: '15px',\r\n                      backgroundColor: '#ddd',\r\n                      padding: '1px 10px',\r\n                    }}\r\n                  >\r\n                    &lt;?user.added?&gt; :\r\n                  </b>{' '}\r\n                  Joined\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </TabPane>\r\n      </Tabs>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default AddNewBrand;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\nimport { useHandleFetch } from '../../hooks';\r\n// import third party ui lib\r\nimport {\r\n  Upload,\r\n  message,\r\n  Switch,\r\n  Select,\r\n  Button,\r\n  notification,\r\n  Modal,\r\n  Tabs,\r\n} from 'antd';\r\n\r\nimport {\r\n  FileOutlined,\r\n  InboxOutlined,\r\n  FileAddOutlined,\r\n  DeleteOutlined,\r\n  CheckCircleOutlined,\r\n  CloseOutlined,\r\n  CheckOutlined,\r\n  InfoCircleOutlined,\r\n  PlusOutlined,\r\n  FileImageFilled,\r\n} from '@ant-design/icons';\r\n\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport MediaLibrary from '../../components/MediaLibrary';\r\nimport CKEditor from '@ckeditor/ckeditor5-react';\r\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\r\n\r\nconst validationSchema = Yup.object().shape({\r\n  // name: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\nconst { TabPane } = Tabs;\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n  notification.success({\r\n    message: message || 'New Customer Template Updated',\r\n    description: '',\r\n    icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n  });\r\n};\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n  notification.error({\r\n    message: message || 'Something Went Wrong',\r\n    description: '',\r\n    icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n  });\r\n};\r\n\r\nconst initialValues = {\r\n  name: '',\r\n  description: '',\r\n};\r\n\r\ninterface Props {\r\n  visible: boolean;\r\n  setVisible: any;\r\n}\r\n\r\nconst AddNewBrand = ({ visible, setVisible }: Props) => {\r\n  const [autoEmailTemplate, handleAutoEmailTemplateFetch] = useHandleFetch(\r\n    {},\r\n    'configureAutoSMSTemplate'\r\n  );\r\n  const [\r\n    getConfigureAutoEmailTemplate,\r\n    handleGetConfigureAutoEmailTemplateFetch,\r\n  ] = useHandleFetch({}, 'getConfigureAutoSMSTemplate');\r\n\r\n  const [customer, setcustomer] = useState({\r\n    subject: '',\r\n    body: '',\r\n  });\r\n\r\n  const [admin, setadmin] = useState({\r\n    subject: '',\r\n    body: '',\r\n  });\r\n\r\n  const handleSubmit = async () => {\r\n    const getConfigurationAutoEmailTemplateRes = await handleAutoEmailTemplateFetch(\r\n      {\r\n        body: {\r\n          event: 'orderStatus',\r\n          customer: {\r\n            ...customer,\r\n          },\r\n          admin: {\r\n            ...admin,\r\n          },\r\n        },\r\n      }\r\n    );\r\n\r\n    // @ts-ignore\r\n    if (\r\n      // @ts-ignore\r\n      getConfigurationAutoEmailTemplateRes &&\r\n      // @ts-ignore\r\n      getConfigurationAutoEmailTemplateRes.status === 'ok'\r\n    ) {\r\n      openSuccessNotification();\r\n      setVisible(false);\r\n    } else {\r\n      openErrorNotification();\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!autoEmailTemplate['isLoading']) {\r\n      const error = autoEmailTemplate['error'];\r\n      if (error['isError'] && Object.keys(error['error']).length > 0) {\r\n        if (error['error']['registerError']) {\r\n          // setServerErrors(error['error']['registerError']);\r\n        } else if (error['error']['checkoutError']) {\r\n          // setServerErrors(error['error']['checkoutError']);\r\n        } else {\r\n          // setServerErrors(error['error']);\r\n        }\r\n\r\n        const errors =\r\n          Object.values(error['error']).length > 0\r\n            ? Object.values(error['error'])\r\n            : [];\r\n        errors.forEach((err, i) => {\r\n          if (typeof err === 'string') {\r\n            openErrorNotification(err);\r\n          } else if (typeof err === 'object') {\r\n            if (err && Object.keys(err).length > 0) {\r\n              const errs = Object.values(err);\r\n              errs.forEach((err) => {\r\n                openErrorNotification(err);\r\n              });\r\n            }\r\n          }\r\n        });\r\n      }\r\n    }\r\n\r\n    if (\r\n      !autoEmailTemplate['isLoading'] &&\r\n      Object.keys(autoEmailTemplate.data).length > 0\r\n    ) {\r\n      // if (autoEmailTemplate['data']['status'] === 'ok') {\r\n      //     openSuccessNotification('Email Sent!');\r\n      // }\r\n    }\r\n  }, [autoEmailTemplate]);\r\n\r\n  useEffect(() => {\r\n    const getCustomerAutoEmail = async () => {\r\n      const res = await handleGetConfigureAutoEmailTemplateFetch({\r\n        urlOptions: {\r\n          placeHolders: {\r\n            eventName: 'orderStatus',\r\n          },\r\n        },\r\n      });\r\n\r\n      console.log('orderStatus', res);\r\n      // @ts-ignore\r\n      if (res) {\r\n        setadmin(res['admin'] || '');\r\n        setcustomer(res['customer'] || '');\r\n      }\r\n      // set auto email template to customer and admin\r\n    };\r\n    getCustomerAutoEmail();\r\n  }, []);\r\n\r\n  const handleCancel = (e: any) => {\r\n    setVisible(false);\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      width={'70vw'}\r\n      style={{\r\n        top: '40px',\r\n      }}\r\n      title='Order Status Template'\r\n      visible={visible}\r\n      onOk={(e: any) => handleSubmit()}\r\n      onCancel={handleCancel}\r\n      okText='Submit'\r\n      okButtonProps={{\r\n        loading: autoEmailTemplate.isLoading,\r\n        htmlType: 'submit',\r\n        // disabled: getisSubmitButtonDisabled(values, isValid)\r\n      }}\r\n      bodyStyle={{\r\n        margin: '10px',\r\n        padding: '10px',\r\n      }}\r\n      footer={false}\r\n    >\r\n      <Tabs defaultActiveKey='1'>\r\n        <TabPane tab='Customer' key='1'>\r\n          <div\r\n            style={{\r\n              display: 'flex',\r\n            }}\r\n          >\r\n            <div\r\n              style={{\r\n                width: '70%',\r\n              }}\r\n            >\r\n              <Input\r\n                label='Subject'\r\n                value={customer.subject || ''}\r\n                name='subject'\r\n                onChange={(e: any) => {\r\n                  setcustomer({\r\n                    ...customer,\r\n                    subject: e.target.value,\r\n                  });\r\n                }}\r\n              />\r\n\r\n              <h3 className='inputFieldLabel'>Body</h3>\r\n\r\n              <CKEditor\r\n                editor={ClassicEditor}\r\n                data={customer.body || ''}\r\n                onInit={(editor) => {\r\n                  // You can store the \"editor\" and use when it is needed.\r\n                  console.log('Editor is ready to use!', editor);\r\n                }}\r\n                onChange={(event, editor) => {\r\n                  const data = editor.getData();\r\n                  setcustomer({\r\n                    ...customer,\r\n                    body: data,\r\n                  });\r\n                }}\r\n                onBlur={(event, editor) => {\r\n                  console.log('Blur.', editor);\r\n                }}\r\n                onFocus={(event, editor) => {\r\n                  console.log('Focus.', editor);\r\n                }}\r\n              />\r\n\r\n              <div\r\n                style={{\r\n                  display: 'block',\r\n                  marginBottom: '20px',\r\n                  marginTop: '20px',\r\n                }}\r\n              >\r\n                <Button\r\n                  onClick={handleSubmit}\r\n                  loading={autoEmailTemplate.isLoading}\r\n                  className='btnPrimaryClassNameoutline'\r\n                >\r\n                  Update Template\r\n                </Button>\r\n              </div>\r\n            </div>\r\n\r\n            <div\r\n              style={{\r\n                width: '30%',\r\n                overflowY: 'auto',\r\n                background: '#f7f7f7',\r\n                marginLeft: '20px',\r\n                padding: '10px',\r\n                borderRadius: '8px',\r\n              }}\r\n            >\r\n              <h4>Information Tags</h4>\r\n              <p\r\n                style={{\r\n                  fontSize: '12px',\r\n                }}\r\n              >\r\n                Place the following tags to replace them with actual data while\r\n                sending email\r\n              </p>\r\n              <ul\r\n                style={{\r\n                  padding: '15px',\r\n                }}\r\n              >\r\n                <li\r\n                  style={{\r\n                    fontSize: '12px',\r\n                    marginBottom: '10px',\r\n                    lineHeight: 1.7,\r\n                    fontWeight: 500,\r\n                  }}\r\n                >\r\n                  <b\r\n                    style={{\r\n                      borderRadius: '15px',\r\n                      backgroundColor: '#ddd',\r\n                      padding: '1px 10px',\r\n                    }}\r\n                  >\r\n                    &lt;?=order.status.name?&gt; :\r\n                  </b>{' '}\r\n                  Order Status\r\n                </li>\r\n                <li\r\n                  style={{\r\n                    fontSize: '12px',\r\n                    marginBottom: '10px',\r\n                    lineHeight: 1.7,\r\n                    fontWeight: 500,\r\n                  }}\r\n                >\r\n                  <b\r\n                    style={{\r\n                      borderRadius: '15px',\r\n                      backgroundColor: '#ddd',\r\n                      padding: '1px 10px',\r\n                    }}\r\n                  >\r\n                    &lt;?=customer.firstName?&gt; :\r\n                  </b>{' '}\r\n                  Customer first name\r\n                </li>\r\n                <li\r\n                  style={{\r\n                    fontSize: '12px',\r\n                    marginBottom: '10px',\r\n                    lineHeight: 1.7,\r\n                    fontWeight: 500,\r\n                  }}\r\n                >\r\n                  <b\r\n                    style={{\r\n                      borderRadius: '15px',\r\n                      backgroundColor: '#ddd',\r\n                      padding: '1px 10px',\r\n                    }}\r\n                  >\r\n                    &lt;?=customer.lastName?&gt; :\r\n                  </b>{' '}\r\n                  Customer last name\r\n                </li>\r\n\r\n                <li\r\n                  style={{\r\n                    fontSize: '12px',\r\n                    marginBottom: '10px',\r\n                    lineHeight: 1.7,\r\n                    fontWeight: 500,\r\n                  }}\r\n                >\r\n                  <b\r\n                    style={{\r\n                      borderRadius: '15px',\r\n                      backgroundColor: '#ddd',\r\n                      padding: '1px 10px',\r\n                    }}\r\n                  >\r\n                    &lt;?=order.shortCode?&gt; :\r\n                  </b>{' '}\r\n                  Order Code\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </TabPane>\r\n\r\n        <TabPane tab='Admin' key='2'>\r\n          <div\r\n            style={{\r\n              display: 'flex',\r\n            }}\r\n          >\r\n            <div\r\n              style={{\r\n                width: '70%',\r\n              }}\r\n            >\r\n              <Input\r\n                label='Subject'\r\n                value={admin.subject}\r\n                name='subject'\r\n                onChange={(e: any) => {\r\n                  setadmin({\r\n                    ...admin,\r\n                    subject: e.target.value,\r\n                  });\r\n                }}\r\n              />\r\n\r\n              <h3 className='inputFieldLabel'>Body</h3>\r\n\r\n              <CKEditor\r\n                editor={ClassicEditor}\r\n                data={admin.body}\r\n                onInit={(editor) => {\r\n                  // You can store the \"editor\" and use when it is needed.\r\n                  console.log('Editor is ready to use!', editor);\r\n                }}\r\n                onChange={(event, editor) => {\r\n                  const data = editor.getData();\r\n                  setadmin({\r\n                    ...admin,\r\n                    body: data,\r\n                  });\r\n                }}\r\n                onBlur={(event, editor) => {\r\n                  console.log('Blur.', editor);\r\n                }}\r\n                onFocus={(event, editor) => {\r\n                  console.log('Focus.', editor);\r\n                }}\r\n              />\r\n\r\n              <div\r\n                style={{\r\n                  display: 'block',\r\n                  marginBottom: '20px',\r\n                  marginTop: '20px',\r\n                }}\r\n              >\r\n                <Button\r\n                  onClick={handleSubmit}\r\n                  loading={autoEmailTemplate.isLoading}\r\n                  className='btnPrimaryClassNameoutline'\r\n                >\r\n                  Update Template\r\n                </Button>\r\n              </div>\r\n            </div>\r\n\r\n            <div\r\n              style={{\r\n                width: '30%',\r\n                overflowY: 'auto',\r\n                background: '#f7f7f7',\r\n                marginLeft: '20px',\r\n                padding: '10px',\r\n                borderRadius: '8px',\r\n              }}\r\n            >\r\n              <h4>Information Tags</h4>\r\n              <p\r\n                style={{\r\n                  fontSize: '12px',\r\n                }}\r\n              >\r\n                Place the following tags to replace them with actual data while\r\n                sending email\r\n              </p>\r\n              <ul\r\n                style={{\r\n                  padding: '15px',\r\n                }}\r\n              >\r\n                <li\r\n                  style={{\r\n                    fontSize: '12px',\r\n                    marginBottom: '10px',\r\n                    lineHeight: 1.7,\r\n                    fontWeight: 500,\r\n                  }}\r\n                >\r\n                  <b\r\n                    style={{\r\n                      borderRadius: '15px',\r\n                      backgroundColor: '#ddd',\r\n                      padding: '1px 10px',\r\n                    }}\r\n                  >\r\n                    &lt;?=order.status.name?&gt; :\r\n                  </b>{' '}\r\n                  Order Status\r\n                </li>\r\n                <li\r\n                  style={{\r\n                    fontSize: '12px',\r\n                    marginBottom: '10px',\r\n                    lineHeight: 1.7,\r\n                    fontWeight: 500,\r\n                  }}\r\n                >\r\n                  <b\r\n                    style={{\r\n                      borderRadius: '15px',\r\n                      backgroundColor: '#ddd',\r\n                      padding: '1px 10px',\r\n                    }}\r\n                  >\r\n                    &lt;?=customer.firstName?&gt; :\r\n                  </b>{' '}\r\n                  Customer first name\r\n                </li>\r\n                <li\r\n                  style={{\r\n                    fontSize: '12px',\r\n                    marginBottom: '10px',\r\n                    lineHeight: 1.7,\r\n                    fontWeight: 500,\r\n                  }}\r\n                >\r\n                  <b\r\n                    style={{\r\n                      borderRadius: '15px',\r\n                      backgroundColor: '#ddd',\r\n                      padding: '1px 10px',\r\n                    }}\r\n                  >\r\n                    &lt;?=customer.lastName?&gt; :\r\n                  </b>{' '}\r\n                  Customer last name\r\n                </li>\r\n\r\n                <li\r\n                  style={{\r\n                    fontSize: '12px',\r\n                    marginBottom: '10px',\r\n                    lineHeight: 1.7,\r\n                    fontWeight: 500,\r\n                  }}\r\n                >\r\n                  <b\r\n                    style={{\r\n                      borderRadius: '15px',\r\n                      backgroundColor: '#ddd',\r\n                      padding: '1px 10px',\r\n                    }}\r\n                  >\r\n                    &lt;?=order.shortCode?&gt; :\r\n                  </b>{' '}\r\n                  Order Code\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </TabPane>\r\n      </Tabs>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default AddNewBrand;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\nimport { useHandleFetch } from '../../hooks';\r\n// import third party ui lib\r\nimport {\r\n  Upload,\r\n  message,\r\n  Switch,\r\n  Select,\r\n  Button,\r\n  notification,\r\n  Modal,\r\n  Tabs,\r\n} from 'antd';\r\n\r\nimport {\r\n  FileOutlined,\r\n  InboxOutlined,\r\n  FileAddOutlined,\r\n  DeleteOutlined,\r\n  CheckCircleOutlined,\r\n  CloseOutlined,\r\n  CheckOutlined,\r\n  InfoCircleOutlined,\r\n  PlusOutlined,\r\n  FileImageFilled,\r\n} from '@ant-design/icons';\r\n\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport MediaLibrary from '../../components/MediaLibrary';\r\nimport CKEditor from '@ckeditor/ckeditor5-react';\r\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\r\n\r\nconst validationSchema = Yup.object().shape({\r\n  name: Yup.string()\r\n    .label('Name')\r\n    .required('Name is required')\r\n    .min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\nconst { TabPane } = Tabs;\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n  notification.success({\r\n    message: message || 'New Order Template Updated',\r\n    description: '',\r\n    icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n  });\r\n};\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n  notification.error({\r\n    message: message || 'Something Went Wrong',\r\n    description: '',\r\n    icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n  });\r\n};\r\n\r\nconst initialValues = {\r\n  name: '',\r\n  description: '',\r\n};\r\n\r\ninterface Props {\r\n  visible: boolean;\r\n  setVisible: any;\r\n}\r\n\r\nconst AddNewBrand = ({ visible, setVisible }: Props) => {\r\n  const [autoEmailTemplate, handleAutoEmailTemplateFetch] = useHandleFetch(\r\n    {},\r\n    'configureAutoSMSTemplate'\r\n  );\r\n  const [\r\n    getConfigureAutoEmailTemplate,\r\n    handleGetConfigureAutoEmailTemplateFetch,\r\n  ] = useHandleFetch({}, 'getConfigureAutoSMSTemplate');\r\n\r\n  const [customer, setcustomer] = useState({\r\n    subject: '',\r\n    body: '',\r\n  });\r\n\r\n  const [admin, setadmin] = useState({\r\n    subject: '',\r\n    body: '',\r\n  });\r\n\r\n  const handleSubmit = async () => {\r\n    const getConfigurationAutoEmailTemplateRes = await handleAutoEmailTemplateFetch(\r\n      {\r\n        body: {\r\n          event: 'order',\r\n          customer: {\r\n            ...customer,\r\n          },\r\n          admin: {\r\n            ...admin,\r\n          },\r\n        },\r\n      }\r\n    );\r\n\r\n    // @ts-ignore\r\n    if (\r\n      // @ts-ignore\r\n      getConfigurationAutoEmailTemplateRes &&\r\n      // @ts-ignore\r\n      getConfigurationAutoEmailTemplateRes.status === 'ok'\r\n    ) {\r\n      openSuccessNotification();\r\n      setVisible(false);\r\n    } else {\r\n      openErrorNotification();\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!autoEmailTemplate['isLoading']) {\r\n      const error = autoEmailTemplate['error'];\r\n      if (error['isError'] && Object.keys(error['error']).length > 0) {\r\n        if (error['error']['registerError']) {\r\n          // setServerErrors(error['error']['registerError']);\r\n        } else if (error['error']['checkoutError']) {\r\n          // setServerErrors(error['error']['checkoutError']);\r\n        } else {\r\n          // setServerErrors(error['error']);\r\n        }\r\n\r\n        const errors =\r\n          Object.values(error['error']).length > 0\r\n            ? Object.values(error['error'])\r\n            : [];\r\n        errors.forEach((err, i) => {\r\n          if (typeof err === 'string') {\r\n            openErrorNotification(err);\r\n          } else if (typeof err === 'object') {\r\n            if (err && Object.keys(err).length > 0) {\r\n              const errs = Object.values(err);\r\n              errs.forEach((err) => {\r\n                openErrorNotification(err);\r\n              });\r\n            }\r\n          }\r\n        });\r\n      }\r\n    }\r\n\r\n    if (\r\n      !autoEmailTemplate['isLoading'] &&\r\n      Object.keys(autoEmailTemplate.data).length > 0\r\n    ) {\r\n      // if (autoEmailTemplate['data']['status'] === 'ok') {\r\n      //     openSuccessNotification('Email Sent!');\r\n      // }\r\n    }\r\n  }, [autoEmailTemplate]);\r\n\r\n  useEffect(() => {\r\n    const getCustomerAutoEmail = async () => {\r\n      const res = await handleGetConfigureAutoEmailTemplateFetch({\r\n        urlOptions: {\r\n          placeHolders: {\r\n            eventName: 'order',\r\n          },\r\n        },\r\n      });\r\n\r\n      console.log('Ordertemplate', res);\r\n      // @ts-ignore\r\n      if (res) {\r\n        setadmin(res['admin'] || '');\r\n        setcustomer(res['customer'] || '');\r\n      }\r\n      // set auto email template to customer and admin\r\n    };\r\n    getCustomerAutoEmail();\r\n  }, []);\r\n\r\n  const handleCancel = (e: any) => {\r\n    setVisible(false);\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      width={'80vw'}\r\n      style={{\r\n        top: '40px',\r\n      }}\r\n      title='Order Event Template'\r\n      visible={visible}\r\n      onOk={(e: any) => handleSubmit()}\r\n      onCancel={handleCancel}\r\n      okText='Submit'\r\n      okButtonProps={{\r\n        loading: autoEmailTemplate.isLoading,\r\n        htmlType: 'submit',\r\n        // disabled: getisSubmitButtonDisabled(values, isValid)\r\n      }}\r\n      bodyStyle={{\r\n        margin: '10px',\r\n        padding: '10px',\r\n      }}\r\n      footer={false}\r\n    >\r\n      <Tabs defaultActiveKey='1'>\r\n        <TabPane tab='Customer' key='1'>\r\n          <div\r\n            style={{\r\n              display: 'flex',\r\n            }}\r\n          >\r\n            <div\r\n              style={{\r\n                width: '60%',\r\n              }}\r\n            >\r\n              <Input\r\n                label='Subject'\r\n                value={customer.subject}\r\n                name='subject'\r\n                onChange={(e: any) => {\r\n                  setcustomer({\r\n                    ...customer,\r\n                    subject: e.target.value,\r\n                  });\r\n                }}\r\n              />\r\n\r\n              <h3 className='inputFieldLabel'>Body</h3>\r\n\r\n              <CKEditor\r\n                editor={ClassicEditor}\r\n                data={customer.body}\r\n                onInit={(editor) => {\r\n                  // You can store the \"editor\" and use when it is needed.\r\n                  console.log('Editor is ready to use!', editor);\r\n                }}\r\n                onChange={(event, editor) => {\r\n                  const data = editor.getData();\r\n                  setcustomer({\r\n                    ...customer,\r\n                    body: data,\r\n                  });\r\n                }}\r\n                onBlur={(event, editor) => {\r\n                  console.log('Blur.', editor);\r\n                }}\r\n                onFocus={(event, editor) => {\r\n                  console.log('Focus.', editor);\r\n                }}\r\n              />\r\n\r\n              <div\r\n                style={{\r\n                  display: 'block',\r\n                  marginBottom: '20px',\r\n                  marginTop: '20px',\r\n                }}\r\n              >\r\n                <Button\r\n                  onClick={handleSubmit}\r\n                  loading={autoEmailTemplate.isLoading}\r\n                  className='btnPrimaryClassNameoutline'\r\n                >\r\n                  Update Template\r\n                </Button>\r\n              </div>\r\n            </div>\r\n\r\n            <div\r\n              style={{\r\n                width: '40%',\r\n                overflowY: 'auto',\r\n                background: '#f7f7f7',\r\n                marginLeft: '20px',\r\n                padding: '10px',\r\n                borderRadius: '8px',\r\n              }}\r\n            >\r\n              <h4>Information Tags</h4>\r\n              <p\r\n                style={{\r\n                  fontSize: '12px',\r\n                }}\r\n              >\r\n                Place the following tags to replace them with actual data while\r\n                sending email\r\n              </p>\r\n              <ul\r\n                style={{\r\n                  padding: '15px',\r\n                }}\r\n              >\r\n                <li\r\n                  style={{\r\n                    fontSize: '12px',\r\n                    marginBottom: '10px',\r\n                    lineHeight: 1.7,\r\n                    fontWeight: 500,\r\n                  }}\r\n                >\r\n                  <b\r\n                    style={{\r\n                      borderRadius: '15px',\r\n                      backgroundColor: '#ddd',\r\n                      padding: '1px 10px',\r\n                    }}\r\n                  >\r\n                    &lt;?=order.added?&gt; :\r\n                  </b>{' '}\r\n                  Order time\r\n                </li>\r\n\r\n                <li\r\n                  style={{\r\n                    fontSize: '12px',\r\n                    lineHeight: 2,\r\n                    fontWeight: 500,\r\n                  }}\r\n                >\r\n                  <b\r\n                    style={{\r\n                      borderRadius: '15px',\r\n                      backgroundColor: '#ddd',\r\n                      padding: '1px 10px',\r\n                    }}\r\n                  >\r\n                    &lt;?order.totalPrice?&gt; :\r\n                  </b>{' '}\r\n                  Total Price\r\n                </li>\r\n\r\n                <li\r\n                  style={{\r\n                    fontSize: '12px',\r\n                    lineHeight: 2,\r\n                    fontWeight: 500,\r\n                  }}\r\n                >\r\n                  <b\r\n                    style={{\r\n                      borderRadius: '15px',\r\n                      backgroundColor: '#ddd',\r\n                      padding: '1px 10px',\r\n                    }}\r\n                  >\r\n                    &lt;?order.status.name?&gt; :\r\n                  </b>{' '}\r\n                  Status at\r\n                </li>\r\n\r\n                <li\r\n                  style={{\r\n                    fontSize: '12px',\r\n                    lineHeight: 2,\r\n                    fontWeight: 500,\r\n                  }}\r\n                >\r\n                  <b\r\n                    style={{\r\n                      borderRadius: '15px',\r\n                      backgroundColor: '#ddd',\r\n                      padding: '1px 10px',\r\n                    }}\r\n                  >\r\n                    &lt;?order.shippingAddress.firstName?&gt; :\r\n                  </b>{' '}\r\n                  Shipping first Name\r\n                </li>\r\n                <li\r\n                  style={{\r\n                    fontSize: '12px',\r\n                    lineHeight: 2,\r\n                    fontWeight: 500,\r\n                  }}\r\n                >\r\n                  <b\r\n                    style={{\r\n                      borderRadius: '15px',\r\n                      backgroundColor: '#ddd',\r\n                      padding: '1px 10px',\r\n                    }}\r\n                  >\r\n                    &lt;?order.shippingAddress.country?&gt; :\r\n                  </b>{' '}\r\n                  Shipping Country\r\n                </li>\r\n                <li\r\n                  style={{\r\n                    fontSize: '12px',\r\n                    lineHeight: 2,\r\n                    fontWeight: 500,\r\n                  }}\r\n                >\r\n                  <b\r\n                    style={{\r\n                      borderRadius: '15px',\r\n                      backgroundColor: '#ddd',\r\n                      padding: '1px 10px',\r\n                    }}\r\n                  >\r\n                    &lt;?order.shippingAddress.city?&gt; :\r\n                  </b>{' '}\r\n                  Shipping City\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </TabPane>\r\n\r\n        <TabPane tab='Admin' key='2'>\r\n          <div\r\n            style={{\r\n              display: 'flex',\r\n            }}\r\n          >\r\n            <div\r\n              style={{\r\n                width: '60%',\r\n              }}\r\n            >\r\n              <Input\r\n                label='Subject'\r\n                value={admin.subject}\r\n                name='subject'\r\n                onChange={(e: any) => {\r\n                  setadmin({\r\n                    ...admin,\r\n                    subject: e.target.value,\r\n                  });\r\n                }}\r\n              />\r\n\r\n              <h3 className='inputFieldLabel'>Body</h3>\r\n\r\n              <CKEditor\r\n                editor={ClassicEditor}\r\n                data={admin.body}\r\n                onInit={(editor) => {\r\n                  // You can store the \"editor\" and use when it is needed.\r\n                  console.log('Editor is ready to use!', editor);\r\n                }}\r\n                onChange={(event, editor) => {\r\n                  const data = editor.getData();\r\n                  setadmin({\r\n                    ...admin,\r\n                    body: data,\r\n                  });\r\n                }}\r\n                onBlur={(event, editor) => {\r\n                  console.log('Blur.', editor);\r\n                }}\r\n                onFocus={(event, editor) => {\r\n                  console.log('Focus.', editor);\r\n                }}\r\n              />\r\n\r\n              <div\r\n                style={{\r\n                  display: 'block',\r\n                  marginBottom: '20px',\r\n                  marginTop: '20px',\r\n                }}\r\n              >\r\n                <Button\r\n                  onClick={handleSubmit}\r\n                  loading={autoEmailTemplate.isLoading}\r\n                  className='btnPrimaryClassNameoutline'\r\n                >\r\n                  Update Template\r\n                </Button>\r\n              </div>\r\n            </div>\r\n            <div\r\n              style={{\r\n                width: '40%',\r\n                overflowY: 'auto',\r\n                background: '#f7f7f7',\r\n                marginLeft: '20px',\r\n                padding: '10px',\r\n                borderRadius: '8px',\r\n              }}\r\n            >\r\n              <h4>Information Tags</h4>\r\n              <p\r\n                style={{\r\n                  fontSize: '12px',\r\n                }}\r\n              >\r\n                Place the following tags to replace them with actual data while\r\n                sending email\r\n              </p>\r\n\r\n              <ul\r\n                style={{\r\n                  padding: '15px',\r\n                }}\r\n              >\r\n                <li\r\n                  style={{\r\n                    fontSize: '12px',\r\n                    marginBottom: '10px',\r\n                    lineHeight: 1.7,\r\n                    fontWeight: 500,\r\n                  }}\r\n                >\r\n                  <b\r\n                    style={{\r\n                      borderRadius: '15px',\r\n                      backgroundColor: '#ddd',\r\n                      padding: '1px 10px',\r\n                    }}\r\n                  >\r\n                    &lt;?=order.added?&gt; :\r\n                  </b>{' '}\r\n                  Order time\r\n                </li>\r\n\r\n                <li\r\n                  style={{\r\n                    fontSize: '12px',\r\n                    lineHeight: 2,\r\n                    fontWeight: 500,\r\n                  }}\r\n                >\r\n                  <b\r\n                    style={{\r\n                      borderRadius: '15px',\r\n                      backgroundColor: '#ddd',\r\n                      padding: '1px 10px',\r\n                    }}\r\n                  >\r\n                    &lt;?order.totalPrice?&gt; :\r\n                  </b>{' '}\r\n                  Total Price\r\n                </li>\r\n\r\n                <li\r\n                  style={{\r\n                    fontSize: '12px',\r\n                    lineHeight: 2,\r\n                    fontWeight: 500,\r\n                  }}\r\n                >\r\n                  <b\r\n                    style={{\r\n                      borderRadius: '15px',\r\n                      backgroundColor: '#ddd',\r\n                      padding: '1px 10px',\r\n                    }}\r\n                  >\r\n                    &lt;?order.status.name?&gt; :\r\n                  </b>{' '}\r\n                  Status at\r\n                </li>\r\n\r\n                <li\r\n                  style={{\r\n                    fontSize: '12px',\r\n                    lineHeight: 2,\r\n                    fontWeight: 500,\r\n                  }}\r\n                >\r\n                  <b\r\n                    style={{\r\n                      borderRadius: '15px',\r\n                      backgroundColor: '#ddd',\r\n                      padding: '1px 10px',\r\n                    }}\r\n                  >\r\n                    &lt;?order.shippingAddress.firstName?&gt; :\r\n                  </b>{' '}\r\n                  Shipping first Name\r\n                </li>\r\n                <li\r\n                  style={{\r\n                    fontSize: '12px',\r\n                    lineHeight: 2,\r\n                    fontWeight: 500,\r\n                  }}\r\n                >\r\n                  <b\r\n                    style={{\r\n                      borderRadius: '15px',\r\n                      backgroundColor: '#ddd',\r\n                      padding: '1px 10px',\r\n                    }}\r\n                  >\r\n                    &lt;?order.shippingAddress.country?&gt; :\r\n                  </b>{' '}\r\n                  Shipping Country\r\n                </li>\r\n                <li\r\n                  style={{\r\n                    fontSize: '12px',\r\n                    lineHeight: 2,\r\n                    fontWeight: 500,\r\n                  }}\r\n                >\r\n                  <b\r\n                    style={{\r\n                      borderRadius: '15px',\r\n                      backgroundColor: '#ddd',\r\n                      padding: '1px 10px',\r\n                    }}\r\n                  >\r\n                    &lt;?order.shippingAddress.city?&gt; :\r\n                  </b>{' '}\r\n                  Shipping City\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </TabPane>\r\n      </Tabs>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default AddNewBrand;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\nimport { useHandleFetch } from '../../hooks';\r\n// import third party ui lib\r\nimport {\r\n  Upload,\r\n  message,\r\n  Switch,\r\n  Select,\r\n  Button,\r\n  notification,\r\n  Modal,\r\n  Tooltip,\r\n  Checkbox,\r\n} from 'antd';\r\n\r\nimport {\r\n  FileOutlined,\r\n  InboxOutlined,\r\n  FileAddOutlined,\r\n  DeleteOutlined,\r\n  CheckCircleOutlined,\r\n  CloseOutlined,\r\n  CheckOutlined,\r\n  InfoCircleOutlined,\r\n  PlusOutlined,\r\n  FileImageFilled,\r\n  EditOutlined,\r\n} from '@ant-design/icons';\r\n\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport MediaLibrary from '../../components/MediaLibrary';\r\nimport NewCustomerTemplate from './NewCustomerTemplate';\r\nimport NewDealerAutoEventsTemplate from './NewDealerAutoEventsTemplate';\r\nimport OrderStatusTemplateAutoEmail from './OrderStatusTemplateAutoEmail';\r\nimport OrderTemplateAutoEmail from './OrderTemplateAutoEmail';\r\n\r\nconst validationSchema = Yup.object().shape({\r\n  name: Yup.string()\r\n    .label('Name')\r\n    .required('Name is required')\r\n    .min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n  notification.success({\r\n    message: message || 'Tag Created',\r\n    description: '',\r\n    icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n  });\r\n};\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n  notification.error({\r\n    message: message || 'Something Went Wrong',\r\n    description: '',\r\n    icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n  });\r\n};\r\n\r\ninterface Props {}\r\n\r\nconst ConfigureAutoEmail = ({}: Props) => {\r\n  const [\r\n    getAutoEmailConfigurationState,\r\n    handleGetAutoEmailConfigurationFetch,\r\n  ] = useHandleFetch({}, 'getAutoSMSConfiguration');\r\n  const [\r\n    configureAutoEmailConfigurationState,\r\n    handleAutoEmailConfigurationFetch,\r\n  ] = useHandleFetch({}, 'configureAutoSMS');\r\n\r\n  const [isnewCustomerAdmin, setnewCustomerAdmin] = useState(false);\r\n  const [isnewCustomerCustomer, setnewCustomerCustomer] = useState(false);\r\n\r\n  const [isnewDealerAdmin, setnewDealerAdmin] = useState(false);\r\n  const [isnewDealer, setnewDealerDealer] = useState(false);\r\n\r\n  const [isorderAdmin, setorderAdmin] = useState(false);\r\n  const [isorderStatusAdmin, setorderStatusAdmin] = useState(false);\r\n  const [isorderCustomer, setorderCustomer] = useState(false);\r\n  const [isorderStatusCustomer, setIsorderStatusCustomer] = useState(false);\r\n\r\n  const [newcustomermodal, setnewcustomermodal] = useState(false);\r\n  const [newDealermodal, setnewDealermodal] = useState(false);\r\n  const [ordermodal, setordermodal] = useState(false);\r\n  const [orderStatusmodal, setorderStatusmodal] = useState(false);\r\n  const [autoEmailData, setAutoEmailData] = useState({});\r\n\r\n  console.log('isnewCustomerAdmin', isnewCustomerAdmin);\r\n  console.log('isnewCustomerCustomer', isnewCustomerCustomer);\r\n\r\n  useEffect(() => {\r\n    const getAutoEmailConfiguration = async () => {\r\n      const res = await handleGetAutoEmailConfigurationFetch({});\r\n      //@ts-ignore\r\n      if (res) {\r\n        setAutoEmailData(autoEmailData);\r\n        setnewCustomerAdmin(res['newCustomer']['admin']);\r\n        setnewCustomerCustomer(res['newCustomer']['user']);\r\n        setnewDealerAdmin(res['newDealer']['admin']);\r\n        setnewDealerDealer(res['newDealer']['user']);\r\n        setIsorderStatusCustomer(res['orderStatus']['user']);\r\n        setorderStatusAdmin(res['orderStatus']['admin']);\r\n        setorderAdmin(res['order']['admin']);\r\n        setorderCustomer(res['order']['user']);\r\n      }\r\n    };\r\n    getAutoEmailConfiguration();\r\n  }, []);\r\n\r\n  console.log('getAutoEmailConfigurationState', getAutoEmailConfigurationState);\r\n\r\n  const handleUpdateAutoEmail = async () => {\r\n    const updateAutoEmailRes = await handleAutoEmailConfigurationFetch({\r\n      body: {\r\n        newCustomer: {\r\n          admin: isnewCustomerAdmin,\r\n          user: isnewCustomerCustomer,\r\n        },\r\n        order: {\r\n          admin: isorderAdmin,\r\n          user: isorderCustomer,\r\n        },\r\n        orderStatus: {\r\n          admin: isorderStatusAdmin,\r\n          user: isorderStatusCustomer,\r\n        },\r\n        newDealer: {\r\n          admin: isnewDealerAdmin,\r\n          user: isnewDealer,\r\n        },\r\n      },\r\n    });\r\n\r\n    // @ts-ignore\r\n    if (updateAutoEmailRes && updateAutoEmailRes.status === 'ok') {\r\n      openSuccessNotification('Auto email Configuration Updated!');\r\n    } else {\r\n      openErrorNotification(\r\n        \"Something went wrong, Couldn't updated Auto email configuration\"\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div\r\n        style={{\r\n          display: 'flex',\r\n          flexDirection: 'column',\r\n        }}\r\n      >\r\n        <div style={{}}>\r\n          <div\r\n            style={{\r\n              display: 'flex',\r\n              alignItems: 'center',\r\n            }}\r\n          >\r\n            <div\r\n              style={{\r\n                marginRight: '15px',\r\n                marginTop: '10px',\r\n              }}\r\n            >\r\n              <h3 className='checkBoxFieldLabel'>New Customer</h3>\r\n            </div>\r\n            <Button\r\n              className='templateEditSmall'\r\n              onClick={() => setnewcustomermodal(true)}\r\n              type='link'\r\n              icon={<EditOutlined />}\r\n            >\r\n              configure Template\r\n            </Button>\r\n          </div>\r\n          <div\r\n            style={{\r\n              marginTop: '15px',\r\n            }}\r\n          ></div>\r\n          <div\r\n            style={{\r\n              display: 'flex',\r\n              marginTop: '15px',\r\n            }}\r\n          >\r\n            <div\r\n              style={{\r\n                marginRight: '20px',\r\n              }}\r\n            >\r\n              <Checkbox\r\n                checked={isnewCustomerAdmin}\r\n                defaultChecked={isnewCustomerAdmin}\r\n                onChange={(e) => setnewCustomerAdmin(e.target.checked)}\r\n              >\r\n                <span className='checkBoxSmallFieldLabel'>Admin</span>\r\n              </Checkbox>\r\n            </div>\r\n            <div style={{}}>\r\n              <Checkbox\r\n                checked={isnewCustomerCustomer}\r\n                defaultChecked={isnewCustomerCustomer}\r\n                onChange={(e) => setnewCustomerCustomer(e.target.checked)}\r\n              >\r\n                <span className='checkBoxSmallFieldLabel'>Customer</span>\r\n              </Checkbox>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div\r\n          style={{\r\n            marginTop: '25px',\r\n          }}\r\n        ></div>\r\n\r\n        <div style={{}}>\r\n          <div\r\n            style={{\r\n              display: 'flex',\r\n              alignItems: 'center',\r\n            }}\r\n          >\r\n            <div\r\n              style={{\r\n                marginRight: '15px',\r\n                marginTop: '10px',\r\n              }}\r\n            >\r\n              <h3 className='checkBoxFieldLabel'>New Dealer</h3>\r\n            </div>\r\n            <Button\r\n              className='templateEditSmall'\r\n              onClick={() => setnewDealermodal(true)}\r\n              type='link'\r\n              icon={<EditOutlined />}\r\n            >\r\n              configure Template\r\n            </Button>\r\n          </div>\r\n          <div\r\n            style={{\r\n              marginTop: '15px',\r\n            }}\r\n          ></div>\r\n          <div\r\n            style={{\r\n              display: 'flex',\r\n              marginTop: '15px',\r\n            }}\r\n          >\r\n            <div\r\n              style={{\r\n                marginRight: '20px',\r\n              }}\r\n            >\r\n              <Checkbox\r\n                checked={isnewDealerAdmin}\r\n                defaultChecked={isnewDealerAdmin}\r\n                onChange={(e) => setnewDealerAdmin(e.target.checked)}\r\n              >\r\n                <span className='checkBoxSmallFieldLabel'>Admin</span>\r\n              </Checkbox>\r\n            </div>\r\n            <div style={{}}>\r\n              <Checkbox\r\n                checked={isnewDealer}\r\n                defaultChecked={isnewDealer}\r\n                onChange={(e) => setnewDealerDealer(e.target.checked)}\r\n              >\r\n                <span className='checkBoxSmallFieldLabel'>Customer</span>\r\n              </Checkbox>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div>\r\n          <div\r\n            style={{\r\n              display: 'flex',\r\n              alignItems: 'center',\r\n              marginTop: '30px',\r\n            }}\r\n          >\r\n            <div\r\n              style={{\r\n                marginRight: '15px',\r\n                marginTop: '10px',\r\n              }}\r\n            >\r\n              <h3 className='checkBoxFieldLabel'>Order</h3>\r\n            </div>\r\n            <Button\r\n              className='templateEditSmall'\r\n              onClick={() => setordermodal(true)}\r\n              type='link'\r\n              icon={<EditOutlined />}\r\n            >\r\n              configure Template\r\n            </Button>\r\n          </div>\r\n\r\n          <div\r\n            style={{\r\n              marginTop: '5px',\r\n            }}\r\n          ></div>\r\n\r\n          <div\r\n            style={{\r\n              display: 'flex',\r\n              marginTop: '15px',\r\n            }}\r\n          >\r\n            <div\r\n              style={{\r\n                marginRight: '20px',\r\n              }}\r\n            >\r\n              <Checkbox\r\n                checked={isorderAdmin}\r\n                defaultChecked={isorderAdmin}\r\n                onChange={(e) => setorderAdmin(e.target.checked)}\r\n              >\r\n                <span className='checkBoxSmallFieldLabel'>Admin</span>\r\n              </Checkbox>\r\n            </div>\r\n            <div style={{}}>\r\n              <Checkbox\r\n                checked={isorderCustomer}\r\n                defaultChecked={isorderCustomer}\r\n                onChange={(e) => setorderCustomer(e.target.checked)}\r\n              >\r\n                <span className='checkBoxSmallFieldLabel'>Customer</span>\r\n              </Checkbox>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div>\r\n          <div\r\n            style={{\r\n              display: 'flex',\r\n              alignItems: 'center',\r\n              marginTop: '30px',\r\n            }}\r\n          >\r\n            <div\r\n              style={{\r\n                marginRight: '15px',\r\n                marginTop: '10px',\r\n              }}\r\n            >\r\n              <h3 className='checkBoxFieldLabel'>Order status</h3>\r\n            </div>\r\n            <Button\r\n              className='templateEditSmall'\r\n              onClick={() => setorderStatusmodal(true)}\r\n              type='link'\r\n              icon={<EditOutlined />}\r\n            >\r\n              configure Template\r\n            </Button>\r\n          </div>\r\n          <div\r\n            style={{\r\n              marginTop: '15px',\r\n            }}\r\n          ></div>\r\n          <div\r\n            style={{\r\n              display: 'flex',\r\n              marginTop: '15px',\r\n            }}\r\n          >\r\n            <div\r\n              style={{\r\n                marginRight: '20px',\r\n              }}\r\n            >\r\n              <Checkbox\r\n                checked={isorderStatusAdmin}\r\n                defaultChecked={isorderStatusAdmin}\r\n                onChange={(e) => setorderStatusAdmin(e.target.checked)}\r\n              >\r\n                <span className='checkBoxSmallFieldLabel'>Admin</span>\r\n              </Checkbox>\r\n            </div>\r\n            <div style={{}}>\r\n              <Checkbox\r\n                checked={isorderStatusCustomer}\r\n                defaultChecked={isorderStatusCustomer}\r\n                onChange={(e) => setIsorderStatusCustomer(e.target.checked)}\r\n              >\r\n                <span className='checkBoxSmallFieldLabel'>Customer</span>\r\n              </Checkbox>\r\n            </div>\r\n\r\n            <div style={{}}></div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div\r\n        style={{\r\n          marginTop: '25px',\r\n        }}\r\n      ></div>\r\n      <Button\r\n        onClick={(e: any) => handleUpdateAutoEmail()}\r\n        loading={configureAutoEmailConfigurationState.isLoading}\r\n        className='btnPrimaryClassNameoutline'\r\n      >\r\n        Update Auto Email Configuration\r\n      </Button>\r\n      <div\r\n        style={{\r\n          marginTop: '5px',\r\n        }}\r\n      ></div>\r\n      <NewCustomerTemplate\r\n        visible={newcustomermodal}\r\n        setVisible={setnewcustomermodal}\r\n      />\r\n      <NewDealerAutoEventsTemplate\r\n        visible={newDealermodal}\r\n        setVisible={setnewDealermodal}\r\n      />\r\n\r\n      <OrderStatusTemplateAutoEmail\r\n        visible={orderStatusmodal}\r\n        setVisible={setorderStatusmodal}\r\n      />\r\n      <OrderTemplateAutoEmail visible={ordermodal} setVisible={setordermodal} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ConfigureAutoEmail;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\nimport { useHandleFetch } from '../../hooks';\r\n// import third party ui lib\r\nimport {\r\n  Upload,\r\n  message,\r\n  Switch,\r\n  Select,\r\n  Button,\r\n  notification,\r\n  Modal,\r\n  Tooltip,\r\n  Checkbox,\r\n} from 'antd';\r\n\r\nimport {\r\n  FileOutlined,\r\n  InboxOutlined,\r\n  FileAddOutlined,\r\n  DeleteOutlined,\r\n  CheckCircleOutlined,\r\n  CloseOutlined,\r\n  CheckOutlined,\r\n  InfoCircleOutlined,\r\n  PlusOutlined,\r\n  FileImageFilled,\r\n  SendOutlined,\r\n} from '@ant-design/icons';\r\n\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport MediaLibrary from '../../components/MediaLibrary';\r\n\r\nimport CKEditor from '@ckeditor/ckeditor5-react';\r\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\r\n\r\nconst validationSchema = Yup.object().shape({});\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n  notification.success({\r\n    message: message || 'Tag Created',\r\n    description: '',\r\n    icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n  });\r\n};\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n  notification.error({\r\n    message: message || 'Something Went Wrong',\r\n    description: '',\r\n    icon: <InfoCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n  });\r\n};\r\n\r\nconst initialValues = {\r\n  recipient: '',\r\n  subject: '',\r\n};\r\n\r\ninterface Props {}\r\n\r\nconst ComposeCustomEmail = ({}: Props) => {\r\n  const [sendCustomerEmailState, handleSendCustomEmailFetch] = useHandleFetch(\r\n    {},\r\n    'sendCustomSMS'\r\n  );\r\n\r\n  const [text, setText] = useState('');\r\n  const [recipient, setrecipient] = useState('');\r\n\r\n  function handleChange(value) {\r\n    setrecipient(value);\r\n  }\r\n\r\n  const handleMsgSend = async () => {\r\n    const addTagRes = await handleSendCustomEmailFetch({\r\n      body: {\r\n        recipient: recipient,\r\n        text: text,\r\n      },\r\n    });\r\n\r\n    // @ts-ignore\r\n    if (addTagRes && addTagRes.status === 'ok') {\r\n      setText('');\r\n      setrecipient('');\r\n      openSuccessNotification('SMS Sent!');\r\n    } else {\r\n      // openErrorNotification(\"Something went wrong, Couldn't send email\");\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!sendCustomerEmailState['isLoading']) {\r\n      const error = sendCustomerEmailState['error'];\r\n      if (error['isError'] && Object.keys(error['error']).length > 0) {\r\n        if (error['error']['registerError']) {\r\n          // setServerErrors(error['error']['registerError']);\r\n        } else if (error['error']['checkoutError']) {\r\n          // setServerErrors(error['error']['checkoutError']);\r\n        } else {\r\n          // setServerErrors(error['error']);\r\n        }\r\n\r\n        const errors =\r\n          Object.values(error['error']).length > 0\r\n            ? Object.values(error['error'])\r\n            : [];\r\n        errors.forEach((err, i) => {\r\n          if (typeof err === 'string') {\r\n            openErrorNotification(err);\r\n          } else if (typeof err === 'object') {\r\n            if (err && Object.keys(err).length > 0) {\r\n              const errs = Object.values(err);\r\n              errs.forEach((err) => {\r\n                openErrorNotification(err);\r\n              });\r\n            }\r\n          }\r\n        });\r\n      }\r\n    }\r\n\r\n    if (\r\n      !sendCustomerEmailState['isLoading'] &&\r\n      Object.keys(sendCustomerEmailState.data).length > 0\r\n    ) {\r\n      // if (sendCustomerEmailState['data']['status'] === 'ok') {\r\n      //     openSuccessNotification('Email Sent!');\r\n      // }\r\n    }\r\n  }, [sendCustomerEmailState]);\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        width: '450px',\r\n      }}\r\n    >\r\n      <h3 className='inputFieldLabel'>Recipient</h3>\r\n\r\n      <Select\r\n        style={{\r\n          height: '30px',\r\n          borderRadius: '3px',\r\n          borderColor: '#eee !important',\r\n          width: '100%',\r\n        }}\r\n        mode='tags'\r\n        onChange={handleChange}\r\n        tokenSeparators={[',']}\r\n      ></Select>\r\n\r\n      <div\r\n        style={{\r\n          marginTop: '15px',\r\n        }}\r\n      ></div>\r\n      <TextArea\r\n        label='Text'\r\n        value={text}\r\n        name='text'\r\n        onChange={(e: any) => {\r\n          setText(e.target.value);\r\n        }}\r\n      />\r\n\r\n      <Button\r\n        style={{\r\n          marginTop: '10px',\r\n        }}\r\n        onClick={handleMsgSend}\r\n        loading={sendCustomerEmailState.isLoading}\r\n        //   disabled={getMsgSendIsDisabled()}\r\n\r\n        className='btnAddToPrice'\r\n      >\r\n        Send{' '}\r\n        <span\r\n          style={{\r\n            marginLeft: '10px',\r\n          }}\r\n        >\r\n          {' '}\r\n          <SendOutlined />\r\n        </span>\r\n      </Button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ComposeCustomEmail;\r\n","import React, { useEffect } from 'react';\r\n\r\n// import hooks\r\nimport { useHandleFetch } from '../../hooks';\r\n\r\nimport { Spin, Empty } from 'antd';\r\nimport moment from 'moment';\r\n\r\nimport { LeftOutlined } from '@ant-design/icons';\r\n\r\ninterface Props {\r\n  id?: any;\r\n  setSelectedEmailId?: any;\r\n}\r\n\r\nconst InboxEmailDetails = ({ id, setSelectedEmailId }: Props) => {\r\n  const [getEmailDetailState, handleGetEmailListFetch] = useHandleFetch(\r\n    {},\r\n    'getSMSDetails'\r\n  );\r\n\r\n  useEffect(() => {\r\n    const getEmailConfiguration = async () => {\r\n      const res = await handleGetEmailListFetch({\r\n        urlOptions: {\r\n          placeHolders: {\r\n            id: id,\r\n          },\r\n        },\r\n      });\r\n      // @ts-ignore\r\n    };\r\n    getEmailConfiguration();\r\n  }, []);\r\n\r\n  console.log('getEmailDetailState', getEmailDetailState);\r\n\r\n  return (\r\n    <>\r\n      {getEmailDetailState.isLoading && (\r\n        <>\r\n          <div\r\n            style={{\r\n              width: '100%',\r\n              display: 'flex',\r\n              justifyContent: 'center',\r\n              alignItems: 'center',\r\n              margin: '150px 0',\r\n            }}\r\n          >\r\n            <Spin size='large' />\r\n          </div>\r\n        </>\r\n      )}\r\n\r\n      {getEmailDetailState.done && !getEmailDetailState.data ? (\r\n        <>\r\n          <div\r\n            style={{\r\n              marginTop: '100px',\r\n            }}\r\n          >\r\n            <Empty\r\n              description='No SMS found'\r\n              image={Empty.PRESENTED_IMAGE_SIMPLE}\r\n            />\r\n          </div>\r\n        </>\r\n      ) : (\r\n        ''\r\n      )}\r\n\r\n      {getEmailDetailState.done &&\r\n      getEmailDetailState.data &&\r\n      !(Object.keys(getEmailDetailState.data).length > 0) ? (\r\n        <>\r\n          <div\r\n            style={{\r\n              marginTop: '100px',\r\n            }}\r\n          >\r\n            <Empty\r\n              description='No SMS found'\r\n              image={Empty.PRESENTED_IMAGE_SIMPLE}\r\n            />\r\n          </div>\r\n        </>\r\n      ) : (\r\n        ''\r\n      )}\r\n\r\n      {getEmailDetailState.done &&\r\n        getEmailDetailState.data &&\r\n        Object.keys(getEmailDetailState.data).length > 0 && (\r\n          <>\r\n            <div className='inboxEmailDetails'>\r\n              <div\r\n                onClick={() => setSelectedEmailId('')}\r\n                className='inboxEmailDetails__backBtn'\r\n              >\r\n                <LeftOutlined />\r\n              </div>\r\n              <div className='inboxEmailDetails__header'>\r\n                <span>{getEmailDetailState['data']['event']}</span>\r\n                <h3>{getEmailDetailState['data']['recipient']}</h3>\r\n                <h4>\r\n                  {getEmailDetailState['data']['time'] &&\r\n                    moment(getEmailDetailState['data']['time']).format(\r\n                      'MMMM Do YYYY, h:mm a'\r\n                    )}\r\n                </h4>\r\n              </div>\r\n              <div className='inboxEmailDetails__body'>\r\n                {getEmailDetailState['data']['text'] &&\r\n                  getEmailDetailState['data']['text']}\r\n              </div>\r\n            </div>\r\n          </>\r\n        )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default InboxEmailDetails;\r\n","import React, { useEffect, useState } from 'react';\r\n\r\n// import hoooks\r\nimport { useHandleFetch } from '../../hooks';\r\nimport InboxEmailDetails from './InboxEmailDetails';\r\nimport { Spin, Empty } from 'antd';\r\nimport moment from 'moment';\r\n\r\nimport ReactHtmlParser from 'react-html-parser';\r\n\r\ninterface Props {\r\n  emailList?: any;\r\n  setEmailList?: any;\r\n  getEmailListState?: any;\r\n}\r\n\r\nconst Inbox = ({ emailList, setEmailList, getEmailListState }: Props) => {\r\n  const [selectedEmailId, setSelectedEmailId] = useState('');\r\n\r\n  console.log('getEmailListState', getEmailListState);\r\n\r\n  return (\r\n    <>\r\n      {getEmailListState.isLoading && (\r\n        <>\r\n          <div\r\n            style={{\r\n              width: '100%',\r\n              display: 'flex',\r\n              justifyContent: 'center',\r\n              alignItems: 'center',\r\n              margin: '150px 0',\r\n            }}\r\n          >\r\n            <Spin size='large' />\r\n          </div>\r\n        </>\r\n      )}\r\n\r\n      {getEmailListState.done && emailList && !(emailList.length > 0) && (\r\n        <>\r\n          <div\r\n            style={{\r\n              width: '100%',\r\n              display: 'flex',\r\n              justifyContent: 'center',\r\n              alignItems: 'center',\r\n              margin: '50px 0',\r\n            }}\r\n          >\r\n            <Empty\r\n              description='No SMS found'\r\n              image={Empty.PRESENTED_IMAGE_SIMPLE}\r\n            />\r\n          </div>\r\n        </>\r\n      )}\r\n\r\n      {getEmailListState.done && emailList && emailList.length > 0 && (\r\n        <>\r\n          <div className='sentEmailListContainer'>\r\n            {!selectedEmailId && (\r\n              <>\r\n                {getEmailListState.done && emailList && emailList.length > 0 && (\r\n                  <>\r\n                    {emailList.map((item) => {\r\n                      return (\r\n                        <div\r\n                          onClick={() => setSelectedEmailId(item.id)}\r\n                          className='sentEmailListContainer__item'\r\n                        >\r\n                          <div className='sentEmailListContainer__item-info'>\r\n                            <h3>To: {` ${item.recipient}`}</h3>\r\n                            <span>{`${item.event}`}</span>\r\n                          </div>\r\n\r\n                          <h4>\r\n                            {item.text && item.text.substring(0, 125) + '.....'}\r\n                          </h4>\r\n                          <h3>\r\n                            {item.time &&\r\n                              moment(item.time).format('MMMM Do, h a')}\r\n                          </h3>\r\n                        </div>\r\n                      );\r\n                    })}\r\n                  </>\r\n                )}\r\n              </>\r\n            )}\r\n\r\n            {selectedEmailId && (\r\n              <>\r\n                <InboxEmailDetails\r\n                  setSelectedEmailId={setSelectedEmailId}\r\n                  id={selectedEmailId}\r\n                />\r\n              </>\r\n            )}\r\n          </div>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Inbox;\r\n","import React, { useEffect, useState } from 'react';\r\n\r\n// import lib\r\nimport { Tabs, Input } from 'antd';\r\n\r\n// import components\r\nimport ConfigureSTMP from './ConfigureSMS';\r\nimport ConfigureAutoEmail from './ConfigureAutoEmail';\r\nimport ComposeCustomEmail from './ComposeCustomSMS';\r\nimport Inbox from './Inbox';\r\n\r\n// import hooks\r\nimport { useHandleFetch } from '../../hooks';\r\n\r\nimport {\r\n  PlusCircleOutlined,\r\n  InboxOutlined,\r\n  SettingOutlined,\r\n} from '@ant-design/icons';\r\n\r\nconst { TabPane } = Tabs;\r\nconst { Search } = Input;\r\n\r\ninterface Props {}\r\n\r\nconst Sms = (props: Props) => {\r\n  const [getEmailListState, handleGetEmailListFetch] = useHandleFetch(\r\n    {},\r\n    'getSentSMSList'\r\n  );\r\n  const [emailList, setEmailList] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const getEmailConfiguration = async () => {\r\n      const res = await handleGetEmailListFetch({\r\n        urlOptions: {\r\n          params: {\r\n            limitCount: 50000,\r\n            sortItemValue: 'time',\r\n            sortOrderValue: '-1',\r\n          },\r\n        },\r\n      });\r\n      // @ts-ignore\r\n      setEmailList(res);\r\n    };\r\n    getEmailConfiguration();\r\n  }, []);\r\n\r\n  const handleSearch = (value) => {\r\n    if (getEmailListState.data.length > 0) {\r\n      const newProductList = getEmailListState.data.filter((item) => {\r\n        return (\r\n          (item.event &&\r\n            item.event.toLowerCase().includes(value.toLowerCase())) ||\r\n          (item.text && item.text.toLowerCase().includes(value.toLowerCase()))\r\n        );\r\n      });\r\n      setEmailList(newProductList);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className='categoryListContainer__header'>\r\n        <div className='categoryListContainer__header-searchBar'>\r\n          <h2 className='categoryListContainer__header-title'>SMS</h2>\r\n\r\n          <Search\r\n            enterButton={false}\r\n            className='searchbarClassName'\r\n            placeholder='search SMS..'\r\n            onChange={(e) => handleSearch(e.target.value)}\r\n            // style={{ width: 300 }}\r\n          />\r\n        </div>\r\n      </div>\r\n\r\n      <div className='siteInfoContainer'>\r\n        <Tabs defaultActiveKey='1'>\r\n          <TabPane\r\n            tab={\r\n              <span>\r\n                <InboxOutlined />\r\n                Outbox\r\n              </span>\r\n            }\r\n            key='1'\r\n          >\r\n            <Inbox\r\n              getEmailListState={getEmailListState}\r\n              setEmailList={setEmailList}\r\n              emailList={emailList}\r\n            />\r\n          </TabPane>\r\n\r\n          <TabPane\r\n            tab={\r\n              <span>\r\n                <PlusCircleOutlined />\r\n                Compose SMS\r\n              </span>\r\n            }\r\n            key='2'\r\n          >\r\n            <ComposeCustomEmail />\r\n          </TabPane>\r\n\r\n          <TabPane\r\n            tab={\r\n              <span>\r\n                <SettingOutlined />\r\n                Configure SMS\r\n              </span>\r\n            }\r\n            key='3'\r\n          >\r\n            <ConfigureSTMP />\r\n          </TabPane>\r\n\r\n          <TabPane\r\n            tab={\r\n              <span>\r\n                <SettingOutlined />\r\n                Configure Auto SMS\r\n              </span>\r\n            }\r\n            key='4'\r\n          >\r\n            <ConfigureAutoEmail />\r\n          </TabPane>\r\n        </Tabs>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Sms;\r\n","import SMS from './Sms';\r\nexport default SMS;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n\r\nimport { useHandleFetch } from '../../hooks';\r\n// import third party ui lib\r\nimport { Upload, message, Switch, Select, Button, notification, Modal, Tooltip,Checkbox  } from 'antd';\r\n\r\nimport {\r\n    FileOutlined,\r\n    InboxOutlined,\r\n    FileAddOutlined,\r\n    DeleteOutlined,\r\n    CheckCircleOutlined,\r\n    CloseOutlined,\r\n    CheckOutlined,\r\n    InfoCircleOutlined,\r\n    PlusOutlined,\r\n    FileImageFilled\r\n} from '@ant-design/icons';\r\n\r\n\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport MediaLibrary from \"../../components/MediaLibrary\";\r\n\r\nconst validationSchema = Yup.object().shape({\r\n});\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Tag Created',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n    notification.error({\r\n        message: message || 'Something Went Wrong',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst initialValues = {\r\n    \"fromEmail\": \"\",\r\n    \"fromName\": \"\",\r\n    \"host\": \"\",\r\n    \"encryption\":\"\",\r\n    \"port\":'',\r\n    \"smtpUsername\":\"\",\r\n    \"smtpPassword\": \"\"\r\n}\r\n\r\n\r\n\r\ninterface Props {\r\n}\r\n\r\nconst ConfigureSTMP = ({  }: Props) => {\r\n\r\n    const [getEmailConfigurationState, handleGetEmailConfigurationFetch] = useHandleFetch({}, 'getEmailConfiguration');\r\n    const [emailConfigurationState, handleEmailConfigurationFetch] = useHandleFetch({}, 'configureEmailSTMP');\r\n \r\n    const [isAuthenticated,setIsAuthenticated] = useState(true);\r\n    const [configurationData,setConfigurationData] = useState({}); \r\n\r\n\r\n\r\n    useEffect(() => {\r\n      const getEmailConfiguration = async () => {\r\n          const res = await handleGetEmailConfigurationFetch({});\r\n          // @ts-ignore\r\n          if(res){\r\n              // @ts-ignore\r\n            setConfigurationData(res); \r\n            setIsAuthenticated(res['authentication'])\r\n          }\r\n      }; \r\n      getEmailConfiguration(); \r\n    }, [])\r\n\r\n\r\n    console.log('getEmailConfigurationState',getEmailConfigurationState)\r\n\r\n    const handleSubmit = async (values: any, actions: any) => {\r\n        const addTagRes = await handleEmailConfigurationFetch({\r\n            body: {\r\n                \"fromEmail\": values.fromEmail.trim(),\r\n                \"fromName\": values.fromName.trim(),\r\n                \"host\": values.host.trim(),\r\n                \"encryption\":values.encryption.trim(),\r\n                \"port\":values.port,\r\n                \"authentication\": isAuthenticated,\r\n                \"smtpUsername\":values.smtpUsername.trim(),\r\n                \"smtpPassword\": values.smtpPassword.trim()\r\n            },\r\n        });\r\n\r\n        // @ts-ignore\r\n        if (addTagRes && addTagRes.status === 'ok') {\r\n           \r\n        }\r\n        else {\r\n            // openErrorNotification(\"Something went wrong, Couldn't updated STMP configuration\");\r\n        }\r\n\r\n\r\n        actions.setSubmitting(false);\r\n\r\n    };\r\n\r\n\r\n\r\n    const getisSubmitButtonDisabled = (values, isValid) => {\r\n        if (!values.name || !isValid) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n\r\n\r\n    \r\n\tuseEffect(() => {\r\n\t\tif (!emailConfigurationState['isLoading']) {\r\n\t\t\tconst error = emailConfigurationState['error'];\r\n\t\t\tif (error['isError'] && Object.keys(error['error']).length > 0) {\r\n\r\n\t\t\t\tif (error['error']['registerError']) {\r\n\t\t\t\t\t// setServerErrors(error['error']['registerError']);\r\n\t\t\t\t} else if (error['error']['checkoutError']) {\r\n\t\t\t\t\t// setServerErrors(error['error']['checkoutError']);\r\n\t\t\t\t}\r\n\r\n\t\t\t\telse {\r\n\t\t\t\t\t// setServerErrors(error['error']);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst errors =\r\n\t\t\t\t\tObject.values(error['error']).length > 0\r\n\t\t\t\t\t\t? Object.values(error['error'])\r\n\t\t\t\t\t\t: [];\r\n\t\t\t\terrors.forEach((err, i) => {\r\n\t\t\t\t\tif (typeof err === 'string') {\r\n\t\t\t\t\t\topenErrorNotification(err);\r\n\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if (typeof err === 'object') {\r\n\t\t\t\t\t\tif (err && Object.keys(err).length > 0) {\r\n\t\t\t\t\t\t\tconst errs = Object.values(err);\r\n\t\t\t\t\t\t\terrs.forEach(err => {\r\n\t\t\t\t\t\t\t\topenErrorNotification(err);\r\n\t\t\t\t\t\t\t})\r\n\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (\r\n\t\t\t!emailConfigurationState['isLoading'] &&\r\n\t\t\tObject.keys(emailConfigurationState.data).length > 0\r\n\t\t) {\r\n\t\t\tif (emailConfigurationState['data']['status'] === 'ok') {\r\n                openSuccessNotification('STMP Configuration Updated!');\r\n\t\t\t\t// history.push({\r\n\t\t\t\t//   pathname: '/orderDetails',\r\n\t\t\t\t//   state: checkoutState['data']\r\n\t\t\t\t// })\r\n\r\n\t\t\t\t// clearCart();\r\n\t\t\t\t// setIsModalShown(true);\r\n\t\t\t}\r\n\t\t}\r\n\t}, [emailConfigurationState]);\r\n\r\n\r\n\r\n    const handleAuthenticatedChange = (e) => {\r\n        setIsAuthenticated(e.target.checked);\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <Formik\r\n            onSubmit={(values, actions) => handleSubmit(values, actions)}\r\n            validationSchema={validationSchema}\r\n            validateOnBlur={false}\r\n            enableReinitialize={true}\r\n            initialValues={\r\n                { ...initialValues, ...configurationData }\r\n            }\r\n        >\r\n            {({\r\n                handleChange,\r\n                values,\r\n                handleSubmit,\r\n                errors,\r\n                isValid,\r\n                isSubmitting,\r\n                touched,\r\n                handleBlur,\r\n                setFieldTouched,\r\n                handleReset,\r\n            }) => (\r\n                    <>\r\n\r\n                                         \t<div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\tdisplay: 'flex',\r\n\t\t\t\t\t\t\t\t\t\t\t\tjustifyContent: 'space-between'\r\n\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\twidth: '49%',\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t  <Input\r\n                                                    label='From Email'\r\n                                                    value={values.fromEmail}\r\n                                                    name='fromEmail'\r\n                                                    isError={(touched.fromEmail && errors.fromEmail) ||\r\n                                                        (!isSubmitting && emailConfigurationState.error['error']['fromEmail'])}\r\n\r\n                                                    errorString={(touched.fromEmail && errors.fromEmail) ||\r\n                                                        (!isSubmitting && emailConfigurationState.error['error']['fromEmail'])}\r\n                                                    onChange={(e: any) => {\r\n                                                        handleChange(e);\r\n                                                        setFieldTouched('fromEmail');\r\n                                                    }}\r\n                                                     />\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\twidth: '49%'\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\r\n                                                    <Input\r\n                                                    label='From Name'\r\n                                                    value={values.fromName}\r\n                                                    name='fromName'\r\n                                                    isError={(touched.fromName && errors.fromName) ||\r\n                                                        (!isSubmitting && emailConfigurationState.error['error']['fromName'])}\r\n\r\n                                                    errorString={(touched.fromName && errors.fromName) ||\r\n                                                        (!isSubmitting && emailConfigurationState.error['error']['fromName'])}\r\n                                                    onChange={(e: any) => {\r\n                                                        handleChange(e);\r\n                                                        setFieldTouched('fromName');\r\n                                                    }}\r\n                                                />\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\r\n\r\n                                            <div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\tdisplay: 'flex',\r\n\t\t\t\t\t\t\t\t\t\t\t\tjustifyContent: 'space-between'\r\n\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\twidth: '49%',\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}>\r\n                                                      <Input\r\n                                                    label='Host'\r\n                                                    value={values.host}\r\n                                                    name='host'\r\n                                                    isError={(touched.host && errors.host) ||\r\n                                                        (!isSubmitting && emailConfigurationState.error['error']['host'])}\r\n\r\n                                                    errorString={(touched.host && errors.host) ||\r\n                                                        (!isSubmitting && emailConfigurationState.error['error']['host'])}\r\n                                                    onChange={(e: any) => {\r\n                                                        handleChange(e);\r\n                                                        setFieldTouched('host');\r\n                                                    }}\r\n                                                     />\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t  \r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\twidth: '49%'\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\r\n                                                    <Input\r\n                                                    label='Encryption'\r\n                                                    value={values.encryption}\r\n                                                    name='encryption'\r\n                                                    isError={(touched.encryption && errors.encryption) ||\r\n                                                        (!isSubmitting && emailConfigurationState.error['error']['encryption'])}\r\n\r\n                                                    errorString={(touched.encryption && errors.encryption) ||\r\n                                                        (!isSubmitting && emailConfigurationState.error['error']['encryption'])}\r\n                                                    onChange={(e: any) => {\r\n                                                        handleChange(e);\r\n                                                        setFieldTouched('encryption');\r\n                                                    }}\r\n                                                />\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\r\n\r\n\r\n                                            <div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\tdisplay: 'flex',\r\n\t\t\t\t\t\t\t\t\t\t\t\tjustifyContent: 'space-between'\r\n\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\twidth: '49%',\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t  <Input\r\n                                                    label='STMP Username'\r\n                                                    value={values.smtpUsername}\r\n                                                    name='smtpUsername'\r\n                                                    isError={(touched.smtpUsername && errors.smtpUsername) ||\r\n                                                        (!isSubmitting && emailConfigurationState.error['error']['smtpUsername'])}\r\n\r\n                                                    errorString={(touched.smtpUsername && errors.smtpUsername) ||\r\n                                                        (!isSubmitting && emailConfigurationState.error['error']['smtpUsername'])}\r\n                                                    onChange={(e: any) => {\r\n                                                        handleChange(e);\r\n                                                        setFieldTouched('smtpUsername');\r\n                                                    }}\r\n                                                    />\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\twidth: '49%'\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\r\n                                                    <Input\r\n                                                    label='STMP Password'\r\n                                                    value={values.smtpPassword}\r\n                                                    name='smtpPassword'\r\n                                                    isError={(touched.smtpPassword && errors.smtpPassword) ||\r\n                                                        (!isSubmitting && emailConfigurationState.error['error']['smtpPassword'])}\r\n\r\n                                                    errorString={(touched.smtpPassword && errors.smtpPassword) ||\r\n                                                        (!isSubmitting && emailConfigurationState.error['error']['smtpPassword'])}\r\n                                                    onChange={(e: any) => {\r\n                                                        handleChange(e);\r\n                                                        setFieldTouched('smtpPassword');\r\n                                                    }}\r\n                                                />\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\r\n\r\n                                            <div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\twidth: '49%'\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}>\r\n                                                  <Input\r\n                                                     type='number'\r\n                                                    label='Port'\r\n                                                    value={values.port}\r\n                                                    name='port'\r\n                                                    isError={(touched.port && errors.port) ||\r\n                                                        (!isSubmitting && emailConfigurationState.error['error']['port'])}\r\n\r\n                                                    errorString={(touched.port && errors.port) ||\r\n                                                        (!isSubmitting && emailConfigurationState.error['error']['port'])}\r\n                                                    onChange={(e: any) => {\r\n                                                        handleChange(e);\r\n                                                        setFieldTouched('port');\r\n                                                    }}\r\n                                                    />\r\n                                            </div>\r\n\r\n                                        \r\n                                            <Checkbox\r\n                                            value={isAuthenticated}\r\n                                             onChange={handleAuthenticatedChange}>\r\n                                                    <span className='checkBoxFieldLabel'>\r\n                                                        Authentication\r\n                                                    </span>\r\n                                                    \r\n                                                </Checkbox>    \r\n\r\n\r\n\r\n<div style={{\r\n    marginTop:'20px'\r\n}}></div>\r\n                                      <div style={{\r\n                                          display:'block',\r\n                                          marginBottom:'20px',\r\n                                          marginTop:'20px',\r\n                                      }}>\r\n                                                    \r\n                                      <Button\r\n\r\n                                        onClick={(e: any) => handleSubmit(e)}\r\n                                        loading={emailConfigurationState.isLoading}\r\n                                        className='btnPrimaryClassNameoutline'\r\n                                        >\r\n                                        Update Email Configuration\r\n                                        </Button>      \r\n                                          </div>      \r\n                    </>\r\n                )}\r\n        </Formik>\r\n    );\r\n};\r\n\r\nexport default ConfigureSTMP;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\nimport { useHandleFetch } from '../../hooks';\r\n// import third party ui lib\r\nimport {\r\n  Upload,\r\n  message,\r\n  Switch,\r\n  Select,\r\n  Button,\r\n  notification,\r\n  Modal,\r\n  Tabs,\r\n} from 'antd';\r\n\r\nimport {\r\n  FileOutlined,\r\n  InboxOutlined,\r\n  FileAddOutlined,\r\n  DeleteOutlined,\r\n  CheckCircleOutlined,\r\n  CloseOutlined,\r\n  CheckOutlined,\r\n  InfoCircleOutlined,\r\n  PlusOutlined,\r\n  FileImageFilled,\r\n} from '@ant-design/icons';\r\n\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport MediaLibrary from '../../components/MediaLibrary';\r\nimport CKEditor from '@ckeditor/ckeditor5-react';\r\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\r\n\r\nconst validationSchema = Yup.object().shape({\r\n  name: Yup.string()\r\n    .label('Name')\r\n    .required('Name is required')\r\n    .min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\nconst { TabPane } = Tabs;\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n  notification.success({\r\n    message: message || 'New Customer Template Updated',\r\n    description: '',\r\n    icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n  });\r\n};\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n  notification.error({\r\n    message: message || 'Something Went Wrong',\r\n    description: '',\r\n    icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n  });\r\n};\r\n\r\nconst initialValues = {\r\n  name: '',\r\n  description: '',\r\n};\r\n\r\ninterface Props {\r\n  visible: boolean;\r\n  setVisible: any;\r\n}\r\n\r\nconst AddNewBrand = ({ visible, setVisible }: Props) => {\r\n  const [autoEmailTemplate, handleAutoEmailTemplateFetch] = useHandleFetch(\r\n    {},\r\n    'configureAutoEmailTemplate'\r\n  );\r\n  const [\r\n    getConfigureAutoEmailTemplate,\r\n    handleGetConfigureAutoEmailTemplateFetch,\r\n  ] = useHandleFetch({}, 'getConfigureAutoEmailTemplate');\r\n\r\n  const [customer, setcustomer] = useState({\r\n    subject: '',\r\n    body: '',\r\n  });\r\n\r\n  const [admin, setadmin] = useState({\r\n    subject: '',\r\n    body: '',\r\n  });\r\n\r\n  const handleSubmit = async () => {\r\n    const getConfigurationAutoEmailTemplateRes = await handleAutoEmailTemplateFetch(\r\n      {\r\n        body: {\r\n          event: 'newCustomer',\r\n          customer: {\r\n            ...customer,\r\n          },\r\n          admin: {\r\n            ...admin,\r\n          },\r\n        },\r\n      }\r\n    );\r\n\r\n    // @ts-ignore\r\n    if (\r\n      // @ts-ignore\r\n      getConfigurationAutoEmailTemplateRes &&\r\n      // @ts-ignore\r\n      getConfigurationAutoEmailTemplateRes.status === 'ok'\r\n    ) {\r\n      openSuccessNotification();\r\n      setVisible(false);\r\n    } else {\r\n      openErrorNotification();\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!autoEmailTemplate['isLoading']) {\r\n      const error = autoEmailTemplate['error'];\r\n      if (error['isError'] && Object.keys(error['error']).length > 0) {\r\n        if (error['error']['registerError']) {\r\n          // setServerErrors(error['error']['registerError']);\r\n        } else if (error['error']['checkoutError']) {\r\n          // setServerErrors(error['error']['checkoutError']);\r\n        } else {\r\n          // setServerErrors(error['error']);\r\n        }\r\n\r\n        const errors =\r\n          Object.values(error['error']).length > 0\r\n            ? Object.values(error['error'])\r\n            : [];\r\n        errors.forEach((err, i) => {\r\n          if (typeof err === 'string') {\r\n            openErrorNotification(err);\r\n          } else if (typeof err === 'object') {\r\n            if (err && Object.keys(err).length > 0) {\r\n              const errs = Object.values(err);\r\n              errs.forEach((err) => {\r\n                openErrorNotification(err);\r\n              });\r\n            }\r\n          }\r\n        });\r\n      }\r\n    }\r\n\r\n    if (\r\n      !autoEmailTemplate['isLoading'] &&\r\n      Object.keys(autoEmailTemplate.data).length > 0\r\n    ) {\r\n      // if (autoEmailTemplate['data']['status'] === 'ok') {\r\n      //     openSuccessNotification('Email Sent!');\r\n      // }\r\n    }\r\n  }, [autoEmailTemplate]);\r\n\r\n  useEffect(() => {\r\n    const getCustomerAutoEmail = async () => {\r\n      const res = await handleGetConfigureAutoEmailTemplateFetch({\r\n        urlOptions: {\r\n          placeHolders: {\r\n            eventName: 'newCustomer',\r\n          },\r\n        },\r\n      });\r\n\r\n      console.log('newCustomertemplate', res);\r\n      // @ts-ignore\r\n      if (res) {\r\n        setadmin(res['admin']);\r\n        setcustomer(res['customer']);\r\n      }\r\n      // set auto email template to customer and admin\r\n    };\r\n    getCustomerAutoEmail();\r\n  }, []);\r\n\r\n  const handleCancel = (e: any) => {\r\n    setVisible(false);\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      width={'80vw'}\r\n      style={{\r\n        top: '40px',\r\n      }}\r\n      title='New Customer Event Template'\r\n      visible={visible}\r\n      onOk={(e: any) => handleSubmit()}\r\n      onCancel={handleCancel}\r\n      okText='Submit'\r\n      okButtonProps={{\r\n        loading: autoEmailTemplate.isLoading,\r\n        htmlType: 'submit',\r\n        // disabled: getisSubmitButtonDisabled(values, isValid)\r\n      }}\r\n      bodyStyle={{\r\n        margin: '10px',\r\n        padding: '10px',\r\n      }}\r\n      footer={false}\r\n    >\r\n      <Tabs defaultActiveKey='1'>\r\n        <TabPane tab='Customer' key='1'>\r\n          <div\r\n            style={{\r\n              display: 'flex',\r\n            }}\r\n          >\r\n            <div\r\n              style={{\r\n                width: '65%',\r\n              }}\r\n            >\r\n              <Input\r\n                label='Subject'\r\n                value={customer.subject}\r\n                name='subject'\r\n                onChange={(e: any) => {\r\n                  setcustomer({\r\n                    ...customer,\r\n                    subject: e.target.value,\r\n                  });\r\n                }}\r\n              />\r\n\r\n              <h3 className='inputFieldLabel'>Body</h3>\r\n\r\n              <CKEditor\r\n                editor={ClassicEditor}\r\n                data={customer.body}\r\n                onInit={(editor) => {\r\n                  // You can store the \"editor\" and use when it is needed.\r\n                  console.log('Editor is ready to use!', editor);\r\n                }}\r\n                onChange={(event, editor) => {\r\n                  const data = editor.getData();\r\n                  setcustomer({\r\n                    ...customer,\r\n                    body: data,\r\n                  });\r\n                }}\r\n                onBlur={(event, editor) => {\r\n                  console.log('Blur.', editor);\r\n                }}\r\n                onFocus={(event, editor) => {\r\n                  console.log('Focus.', editor);\r\n                }}\r\n              />\r\n\r\n              <div\r\n                style={{\r\n                  display: 'block',\r\n                  marginBottom: '20px',\r\n                  marginTop: '20px',\r\n                }}\r\n              >\r\n                <Button\r\n                  onClick={handleSubmit}\r\n                  loading={autoEmailTemplate.isLoading}\r\n                  className='btnPrimaryClassNameoutline'\r\n                >\r\n                  Update Template\r\n                </Button>\r\n              </div>\r\n            </div>\r\n\r\n            <div\r\n              style={{\r\n                width: '35%',\r\n                overflowY: 'auto',\r\n                background: '#f7f7f7',\r\n                marginLeft: '20px',\r\n                padding: '10px',\r\n                borderRadius: '8px',\r\n              }}\r\n            >\r\n              <h4>Information Tags</h4>\r\n              <p\r\n                style={{\r\n                  fontSize: '12px',\r\n                }}\r\n              >\r\n                Place the following tags to replace them with actual data while\r\n                sending email\r\n              </p>\r\n              <ul\r\n                style={{\r\n                  padding: '15px',\r\n                }}\r\n              >\r\n                <li\r\n                  style={{\r\n                    fontSize: '12px',\r\n                    marginBottom: '10px',\r\n                    lineHeight: 1.7,\r\n                    fontWeight: 500,\r\n                  }}\r\n                >\r\n                  <b\r\n                    style={{\r\n                      borderRadius: '15px',\r\n                      backgroundColor: '#ddd',\r\n                      padding: '1px 10px',\r\n                    }}\r\n                  >\r\n                    &lt;?=customer.firstName?&gt; :\r\n                  </b>{' '}\r\n                  First Name\r\n                </li>\r\n                <li\r\n                  style={{\r\n                    fontSize: '12px',\r\n                    lineHeight: 2,\r\n                    fontWeight: 500,\r\n                  }}\r\n                >\r\n                  <b\r\n                    style={{\r\n                      borderRadius: '15px',\r\n                      backgroundColor: '#ddd',\r\n                      padding: '1px 10px',\r\n                    }}\r\n                  >\r\n                    &lt;?customer.lastName?&gt; :\r\n                  </b>{' '}\r\n                  Last Name\r\n                </li>\r\n                <li\r\n                  style={{\r\n                    fontSize: '12px',\r\n                    lineHeight: 2,\r\n                    fontWeight: 500,\r\n                  }}\r\n                >\r\n                  <b\r\n                    style={{\r\n                      borderRadius: '15px',\r\n                      backgroundColor: '#ddd',\r\n                      padding: '1px 10px',\r\n                    }}\r\n                  >\r\n                    &lt;?customer.phone?&gt; :\r\n                  </b>{' '}\r\n                  Phone\r\n                </li>\r\n                <li\r\n                  style={{\r\n                    fontSize: '12px',\r\n                    lineHeight: 2,\r\n                    fontWeight: 500,\r\n                  }}\r\n                >\r\n                  <b\r\n                    style={{\r\n                      borderRadius: '15px',\r\n                      backgroundColor: '#ddd',\r\n                      padding: '1px 10px',\r\n                    }}\r\n                  >\r\n                    &lt;?customer.email?&gt; :\r\n                  </b>{' '}\r\n                  Email\r\n                </li>\r\n                <li\r\n                  style={{\r\n                    fontSize: '12px',\r\n                    lineHeight: 2,\r\n                    fontWeight: 500,\r\n                  }}\r\n                >\r\n                  <b\r\n                    style={{\r\n                      borderRadius: '15px',\r\n                      backgroundColor: '#ddd',\r\n                      padding: '1px 10px',\r\n                    }}\r\n                  >\r\n                    &lt;?customer.email?&gt; :\r\n                  </b>{' '}\r\n                  Email\r\n                </li>\r\n\r\n                <li\r\n                  style={{\r\n                    fontSize: '12px',\r\n                    lineHeight: 2,\r\n                    fontWeight: 500,\r\n                  }}\r\n                >\r\n                  <b\r\n                    style={{\r\n                      borderRadius: '15px',\r\n                      backgroundColor: '#ddd',\r\n                      padding: '1px 10px',\r\n                    }}\r\n                  >\r\n                    &lt;?customer.address1?&gt; :\r\n                  </b>{' '}\r\n                  Address\r\n                </li>\r\n\r\n                <li\r\n                  style={{\r\n                    fontSize: '12px',\r\n                    lineHeight: 2,\r\n                    fontWeight: 500,\r\n                  }}\r\n                >\r\n                  <b\r\n                    style={{\r\n                      borderRadius: '15px',\r\n                      backgroundColor: '#ddd',\r\n                      padding: '1px 10px',\r\n                    }}\r\n                  >\r\n                    &lt;?customer.added?&gt; :\r\n                  </b>{' '}\r\n                  Joined\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </TabPane>\r\n\r\n        <TabPane tab='Admin' key='2'>\r\n          <div\r\n            style={{\r\n              display: 'flex',\r\n            }}\r\n          >\r\n            <div\r\n              style={{\r\n                width: '65%',\r\n              }}\r\n            >\r\n              <Input\r\n                label='Subject'\r\n                value={admin.subject}\r\n                name='subject'\r\n                onChange={(e: any) => {\r\n                  setadmin({\r\n                    ...admin,\r\n                    subject: e.target.value,\r\n                  });\r\n                }}\r\n              />\r\n\r\n              <h3 className='inputFieldLabel'>Body</h3>\r\n\r\n              <CKEditor\r\n                editor={ClassicEditor}\r\n                data={admin.body}\r\n                onInit={(editor) => {\r\n                  // You can store the \"editor\" and use when it is needed.\r\n                  console.log('Editor is ready to use!', editor);\r\n                }}\r\n                onChange={(event, editor) => {\r\n                  const data = editor.getData();\r\n                  setadmin({\r\n                    ...admin,\r\n                    body: data,\r\n                  });\r\n                }}\r\n                onBlur={(event, editor) => {\r\n                  console.log('Blur.', editor);\r\n                }}\r\n                onFocus={(event, editor) => {\r\n                  console.log('Focus.', editor);\r\n                }}\r\n              />\r\n\r\n              <div\r\n                style={{\r\n                  display: 'block',\r\n                  marginBottom: '20px',\r\n                  marginTop: '20px',\r\n                }}\r\n              >\r\n                <Button\r\n                  onClick={handleSubmit}\r\n                  loading={autoEmailTemplate.isLoading}\r\n                  className='btnPrimaryClassNameoutline'\r\n                >\r\n                  Update Template\r\n                </Button>\r\n              </div>\r\n            </div>\r\n            <div\r\n              style={{\r\n                width: '35%',\r\n                overflowY: 'auto',\r\n                background: '#f7f7f7',\r\n                marginLeft: '20px',\r\n                padding: '10px',\r\n                borderRadius: '8px',\r\n              }}\r\n            >\r\n              <h4>Information Tags</h4>\r\n              <p\r\n                style={{\r\n                  fontSize: '12px',\r\n                }}\r\n              >\r\n                Place the following tags to replace them with actual data while\r\n                sending email\r\n              </p>\r\n              <ul\r\n                style={{\r\n                  padding: '15px',\r\n                }}\r\n              >\r\n                <li\r\n                  style={{\r\n                    fontSize: '12px',\r\n                    marginBottom: '10px',\r\n                    lineHeight: 1.7,\r\n                    fontWeight: 500,\r\n                  }}\r\n                >\r\n                  <b\r\n                    style={{\r\n                      borderRadius: '15px',\r\n                      backgroundColor: '#ddd',\r\n                      padding: '1px 10px',\r\n                    }}\r\n                  >\r\n                    &lt;?=customer.firstName?&gt; :\r\n                  </b>{' '}\r\n                  First Name\r\n                </li>\r\n                <li\r\n                  style={{\r\n                    fontSize: '12px',\r\n                    lineHeight: 2,\r\n                    fontWeight: 500,\r\n                  }}\r\n                >\r\n                  <b\r\n                    style={{\r\n                      borderRadius: '15px',\r\n                      backgroundColor: '#ddd',\r\n                      padding: '1px 10px',\r\n                    }}\r\n                  >\r\n                    &lt;?customer.lastName?&gt; :\r\n                  </b>{' '}\r\n                  Last Name\r\n                </li>\r\n                <li\r\n                  style={{\r\n                    fontSize: '12px',\r\n                    lineHeight: 2,\r\n                    fontWeight: 500,\r\n                  }}\r\n                >\r\n                  <b\r\n                    style={{\r\n                      borderRadius: '15px',\r\n                      backgroundColor: '#ddd',\r\n                      padding: '1px 10px',\r\n                    }}\r\n                  >\r\n                    &lt;?customer.phone?&gt; :\r\n                  </b>{' '}\r\n                  Phone\r\n                </li>\r\n                <li\r\n                  style={{\r\n                    fontSize: '12px',\r\n                    lineHeight: 2,\r\n                    fontWeight: 500,\r\n                  }}\r\n                >\r\n                  <b\r\n                    style={{\r\n                      borderRadius: '15px',\r\n                      backgroundColor: '#ddd',\r\n                      padding: '1px 10px',\r\n                    }}\r\n                  >\r\n                    &lt;?customer.email?&gt; :\r\n                  </b>{' '}\r\n                  Email\r\n                </li>\r\n                <li\r\n                  style={{\r\n                    fontSize: '12px',\r\n                    lineHeight: 2,\r\n                    fontWeight: 500,\r\n                  }}\r\n                >\r\n                  <b\r\n                    style={{\r\n                      borderRadius: '15px',\r\n                      backgroundColor: '#ddd',\r\n                      padding: '1px 10px',\r\n                    }}\r\n                  >\r\n                    &lt;?customer.email?&gt; :\r\n                  </b>{' '}\r\n                  Email\r\n                </li>\r\n\r\n                <li\r\n                  style={{\r\n                    fontSize: '12px',\r\n                    lineHeight: 2,\r\n                    fontWeight: 500,\r\n                  }}\r\n                >\r\n                  <b\r\n                    style={{\r\n                      borderRadius: '15px',\r\n                      backgroundColor: '#ddd',\r\n                      padding: '1px 10px',\r\n                    }}\r\n                  >\r\n                    &lt;?customer.address1?&gt; :\r\n                  </b>{' '}\r\n                  Address\r\n                </li>\r\n\r\n                <li\r\n                  style={{\r\n                    fontSize: '12px',\r\n                    lineHeight: 2,\r\n                    fontWeight: 500,\r\n                  }}\r\n                >\r\n                  <b\r\n                    style={{\r\n                      borderRadius: '15px',\r\n                      backgroundColor: '#ddd',\r\n                      padding: '1px 10px',\r\n                    }}\r\n                  >\r\n                    &lt;?customer.added?&gt; :\r\n                  </b>{' '}\r\n                  Joined\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </TabPane>\r\n      </Tabs>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default AddNewBrand;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\nimport { useHandleFetch } from '../../hooks';\r\n// import third party ui lib\r\nimport {\r\n  Upload,\r\n  message,\r\n  Switch,\r\n  Select,\r\n  Button,\r\n  notification,\r\n  Modal,\r\n  Tabs,\r\n} from 'antd';\r\n\r\nimport {\r\n  FileOutlined,\r\n  InboxOutlined,\r\n  FileAddOutlined,\r\n  DeleteOutlined,\r\n  CheckCircleOutlined,\r\n  CloseOutlined,\r\n  CheckOutlined,\r\n  InfoCircleOutlined,\r\n  PlusOutlined,\r\n  FileImageFilled,\r\n} from '@ant-design/icons';\r\n\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport MediaLibrary from '../../components/MediaLibrary';\r\nimport CKEditor from '@ckeditor/ckeditor5-react';\r\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\r\n\r\nconst validationSchema = Yup.object().shape({\r\n  name: Yup.string()\r\n    .label('Name')\r\n    .required('Name is required')\r\n    .min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\nconst { TabPane } = Tabs;\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n  notification.success({\r\n    message: message || 'New Dealer Template Updated',\r\n    description: '',\r\n    icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n  });\r\n};\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n  notification.error({\r\n    message: message || 'Something Went Wrong',\r\n    description: '',\r\n    icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n  });\r\n};\r\n\r\nconst initialValues = {\r\n  name: '',\r\n  description: '',\r\n};\r\n\r\ninterface Props {\r\n  visible: boolean;\r\n  setVisible: any;\r\n}\r\n\r\nconst AddNewBrand = ({ visible, setVisible }: Props) => {\r\n  const [autoEmailTemplate, handleAutoEmailTemplateFetch] = useHandleFetch(\r\n    {},\r\n    'configureAutoEmailTemplate'\r\n  );\r\n  const [\r\n    getConfigureAutoEmailTemplate,\r\n    handleGetConfigureAutoEmailTemplateFetch,\r\n  ] = useHandleFetch({}, 'getConfigureAutoEmailTemplate');\r\n\r\n  const [customer, setcustomer] = useState({\r\n    subject: '',\r\n    body: '',\r\n  });\r\n\r\n  const [admin, setadmin] = useState({\r\n    subject: '',\r\n    body: '',\r\n  });\r\n\r\n  const handleSubmit = async () => {\r\n    const getConfigurationAutoEmailTemplateRes = await handleAutoEmailTemplateFetch(\r\n      {\r\n        body: {\r\n          event: 'newDealer',\r\n          user: {\r\n            ...customer,\r\n          },\r\n          admin: {\r\n            ...admin,\r\n          },\r\n        },\r\n      }\r\n    );\r\n\r\n    // @ts-ignore\r\n    if (\r\n      // @ts-ignore\r\n      getConfigurationAutoEmailTemplateRes &&\r\n      // @ts-ignore\r\n      getConfigurationAutoEmailTemplateRes.status === 'ok'\r\n    ) {\r\n      openSuccessNotification();\r\n      setVisible(false);\r\n    } else {\r\n      openErrorNotification();\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!autoEmailTemplate['isLoading']) {\r\n      const error = autoEmailTemplate['error'];\r\n      if (error['isError'] && Object.keys(error['error']).length > 0) {\r\n        if (error['error']['registerError']) {\r\n          // setServerErrors(error['error']['registerError']);\r\n        } else if (error['error']['checkoutError']) {\r\n          // setServerErrors(error['error']['checkoutError']);\r\n        } else {\r\n          // setServerErrors(error['error']);\r\n        }\r\n\r\n        const errors =\r\n          Object.values(error['error']).length > 0\r\n            ? Object.values(error['error'])\r\n            : [];\r\n        errors.forEach((err, i) => {\r\n          if (typeof err === 'string') {\r\n            openErrorNotification(err);\r\n          } else if (typeof err === 'object') {\r\n            if (err && Object.keys(err).length > 0) {\r\n              const errs = Object.values(err);\r\n              errs.forEach((err) => {\r\n                openErrorNotification(err);\r\n              });\r\n            }\r\n          }\r\n        });\r\n      }\r\n    }\r\n\r\n    if (\r\n      !autoEmailTemplate['isLoading'] &&\r\n      Object.keys(autoEmailTemplate.data).length > 0\r\n    ) {\r\n      // if (autoEmailTemplate['data']['status'] === 'ok') {\r\n      //     openSuccessNotification('Email Sent!');\r\n      // }\r\n    }\r\n  }, [autoEmailTemplate]);\r\n\r\n  useEffect(() => {\r\n    const getCustomerAutoEmail = async () => {\r\n      const res = await handleGetConfigureAutoEmailTemplateFetch({\r\n        urlOptions: {\r\n          placeHolders: {\r\n            eventName: 'newDealer',\r\n          },\r\n        },\r\n      });\r\n\r\n      console.log('newDealertemplate', res);\r\n      // @ts-ignore\r\n      if (res) {\r\n        setadmin(res['admin']);\r\n        setcustomer(res['user']);\r\n      }\r\n      // set auto email template to customer and admin\r\n    };\r\n    getCustomerAutoEmail();\r\n  }, []);\r\n\r\n  const handleCancel = (e: any) => {\r\n    setVisible(false);\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      width={'80vw'}\r\n      style={{\r\n        top: '40px',\r\n      }}\r\n      title='New Dealer Event Template'\r\n      visible={visible}\r\n      onOk={(e: any) => handleSubmit()}\r\n      onCancel={handleCancel}\r\n      okText='Submit'\r\n      okButtonProps={{\r\n        loading: autoEmailTemplate.isLoading,\r\n        htmlType: 'submit',\r\n        // disabled: getisSubmitButtonDisabled(values, isValid)\r\n      }}\r\n      bodyStyle={{\r\n        margin: '10px',\r\n        padding: '10px',\r\n      }}\r\n      footer={false}\r\n    >\r\n      <Tabs defaultActiveKey='1'>\r\n        <TabPane tab='Customer' key='1'>\r\n          <div\r\n            style={{\r\n              display: 'flex',\r\n            }}\r\n          >\r\n            <div\r\n              style={{\r\n                width: '65%',\r\n              }}\r\n            >\r\n              <Input\r\n                label='Subject'\r\n                value={customer.subject}\r\n                name='subject'\r\n                onChange={(e: any) => {\r\n                  setcustomer({\r\n                    ...customer,\r\n                    subject: e.target.value,\r\n                  });\r\n                }}\r\n              />\r\n\r\n              <h3 className='inputFieldLabel'>Body</h3>\r\n\r\n              <CKEditor\r\n                editor={ClassicEditor}\r\n                data={customer.body}\r\n                onInit={(editor) => {\r\n                  // You can store the \"editor\" and use when it is needed.\r\n                  console.log('Editor is ready to use!', editor);\r\n                }}\r\n                onChange={(event, editor) => {\r\n                  const data = editor.getData();\r\n                  setcustomer({\r\n                    ...customer,\r\n                    body: data,\r\n                  });\r\n                }}\r\n                onBlur={(event, editor) => {\r\n                  console.log('Blur.', editor);\r\n                }}\r\n                onFocus={(event, editor) => {\r\n                  console.log('Focus.', editor);\r\n                }}\r\n              />\r\n\r\n              <div\r\n                style={{\r\n                  display: 'block',\r\n                  marginBottom: '20px',\r\n                  marginTop: '20px',\r\n                }}\r\n              >\r\n                <Button\r\n                  onClick={handleSubmit}\r\n                  loading={autoEmailTemplate.isLoading}\r\n                  className='btnPrimaryClassNameoutline'\r\n                >\r\n                  Update Template\r\n                </Button>\r\n              </div>\r\n            </div>\r\n\r\n            <div\r\n              style={{\r\n                width: '35%',\r\n                overflowY: 'auto',\r\n                background: '#f7f7f7',\r\n                marginLeft: '20px',\r\n                padding: '10px',\r\n                borderRadius: '8px',\r\n              }}\r\n            >\r\n              <h4>Information Tags</h4>\r\n              <p\r\n                style={{\r\n                  fontSize: '12px',\r\n                }}\r\n              >\r\n                Place the following tags to replace them with actual data while\r\n                sending email\r\n              </p>\r\n              <ul\r\n                style={{\r\n                  padding: '15px',\r\n                }}\r\n              >\r\n                <li\r\n                  style={{\r\n                    fontSize: '12px',\r\n                    marginBottom: '10px',\r\n                    lineHeight: 1.7,\r\n                    fontWeight: 500,\r\n                  }}\r\n                >\r\n                  <b\r\n                    style={{\r\n                      borderRadius: '15px',\r\n                      backgroundColor: '#ddd',\r\n                      padding: '1px 10px',\r\n                    }}\r\n                  >\r\n                    &lt;?=user.code?&gt; :\r\n                  </b>{' '}\r\n                  Code\r\n                </li>\r\n\r\n                <li\r\n                  style={{\r\n                    fontSize: '12px',\r\n                    marginBottom: '10px',\r\n                    lineHeight: 1.7,\r\n                    fontWeight: 500,\r\n                  }}\r\n                >\r\n                  <b\r\n                    style={{\r\n                      borderRadius: '15px',\r\n                      backgroundColor: '#ddd',\r\n                      padding: '1px 10px',\r\n                    }}\r\n                  >\r\n                    &lt;?=user.firstName?&gt; :\r\n                  </b>{' '}\r\n                  First Name\r\n                </li>\r\n                <li\r\n                  style={{\r\n                    fontSize: '12px',\r\n                    lineHeight: 2,\r\n                    fontWeight: 500,\r\n                  }}\r\n                >\r\n                  <b\r\n                    style={{\r\n                      borderRadius: '15px',\r\n                      backgroundColor: '#ddd',\r\n                      padding: '1px 10px',\r\n                    }}\r\n                  >\r\n                    &lt;?user.lastName?&gt; :\r\n                  </b>{' '}\r\n                  Last Name\r\n                </li>\r\n                <li\r\n                  style={{\r\n                    fontSize: '12px',\r\n                    lineHeight: 2,\r\n                    fontWeight: 500,\r\n                  }}\r\n                >\r\n                  <b\r\n                    style={{\r\n                      borderRadius: '15px',\r\n                      backgroundColor: '#ddd',\r\n                      padding: '1px 10px',\r\n                    }}\r\n                  >\r\n                    &lt;?user.phone?&gt; :\r\n                  </b>{' '}\r\n                  Phone\r\n                </li>\r\n                <li\r\n                  style={{\r\n                    fontSize: '12px',\r\n                    lineHeight: 2,\r\n                    fontWeight: 500,\r\n                  }}\r\n                >\r\n                  <b\r\n                    style={{\r\n                      borderRadius: '15px',\r\n                      backgroundColor: '#ddd',\r\n                      padding: '1px 10px',\r\n                    }}\r\n                  >\r\n                    &lt;?user.email?&gt; :\r\n                  </b>{' '}\r\n                  Email\r\n                </li>\r\n                <li\r\n                  style={{\r\n                    fontSize: '12px',\r\n                    lineHeight: 2,\r\n                    fontWeight: 500,\r\n                  }}\r\n                >\r\n                  <b\r\n                    style={{\r\n                      borderRadius: '15px',\r\n                      backgroundColor: '#ddd',\r\n                      padding: '1px 10px',\r\n                    }}\r\n                  >\r\n                    &lt;?user.email?&gt; :\r\n                  </b>{' '}\r\n                  Email\r\n                </li>\r\n\r\n                <li\r\n                  style={{\r\n                    fontSize: '12px',\r\n                    lineHeight: 2,\r\n                    fontWeight: 500,\r\n                  }}\r\n                >\r\n                  <b\r\n                    style={{\r\n                      borderRadius: '15px',\r\n                      backgroundColor: '#ddd',\r\n                      padding: '1px 10px',\r\n                    }}\r\n                  >\r\n                    &lt;?user.address1?&gt; :\r\n                  </b>{' '}\r\n                  Address\r\n                </li>\r\n\r\n                <li\r\n                  style={{\r\n                    fontSize: '12px',\r\n                    lineHeight: 2,\r\n                    fontWeight: 500,\r\n                  }}\r\n                >\r\n                  <b\r\n                    style={{\r\n                      borderRadius: '15px',\r\n                      backgroundColor: '#ddd',\r\n                      padding: '1px 10px',\r\n                    }}\r\n                  >\r\n                    &lt;?user.added?&gt; :\r\n                  </b>{' '}\r\n                  Joined\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </TabPane>\r\n\r\n        <TabPane tab='Admin' key='2'>\r\n          <div\r\n            style={{\r\n              display: 'flex',\r\n            }}\r\n          >\r\n            <div\r\n              style={{\r\n                width: '65%',\r\n              }}\r\n            >\r\n              <Input\r\n                label='Subject'\r\n                value={admin.subject}\r\n                name='subject'\r\n                onChange={(e: any) => {\r\n                  setadmin({\r\n                    ...admin,\r\n                    subject: e.target.value,\r\n                  });\r\n                }}\r\n              />\r\n\r\n              <h3 className='inputFieldLabel'>Body</h3>\r\n\r\n              <CKEditor\r\n                editor={ClassicEditor}\r\n                data={admin.body}\r\n                onInit={(editor) => {\r\n                  // You can store the \"editor\" and use when it is needed.\r\n                  console.log('Editor is ready to use!', editor);\r\n                }}\r\n                onChange={(event, editor) => {\r\n                  const data = editor.getData();\r\n                  setadmin({\r\n                    ...admin,\r\n                    body: data,\r\n                  });\r\n                }}\r\n                onBlur={(event, editor) => {\r\n                  console.log('Blur.', editor);\r\n                }}\r\n                onFocus={(event, editor) => {\r\n                  console.log('Focus.', editor);\r\n                }}\r\n              />\r\n\r\n              <div\r\n                style={{\r\n                  display: 'block',\r\n                  marginBottom: '20px',\r\n                  marginTop: '20px',\r\n                }}\r\n              >\r\n                <Button\r\n                  onClick={handleSubmit}\r\n                  loading={autoEmailTemplate.isLoading}\r\n                  className='btnPrimaryClassNameoutline'\r\n                >\r\n                  Update Template\r\n                </Button>\r\n              </div>\r\n            </div>\r\n            <div\r\n              style={{\r\n                width: '35%',\r\n                overflowY: 'auto',\r\n                background: '#f7f7f7',\r\n                marginLeft: '20px',\r\n                padding: '10px',\r\n                borderRadius: '8px',\r\n              }}\r\n            >\r\n              <h4>Information Tags</h4>\r\n              <p\r\n                style={{\r\n                  fontSize: '12px',\r\n                }}\r\n              >\r\n                Place the following tags to replace them with actual data while\r\n                sending email\r\n              </p>\r\n              <ul\r\n                style={{\r\n                  padding: '15px',\r\n                }}\r\n              >\r\n                <li\r\n                  style={{\r\n                    fontSize: '12px',\r\n                    marginBottom: '10px',\r\n                    lineHeight: 1.7,\r\n                    fontWeight: 500,\r\n                  }}\r\n                >\r\n                  <b\r\n                    style={{\r\n                      borderRadius: '15px',\r\n                      backgroundColor: '#ddd',\r\n                      padding: '1px 10px',\r\n                    }}\r\n                  >\r\n                    &lt;?=user.code?&gt; :\r\n                  </b>{' '}\r\n                  Code\r\n                </li>\r\n\r\n                <li\r\n                  style={{\r\n                    fontSize: '12px',\r\n                    marginBottom: '10px',\r\n                    lineHeight: 1.7,\r\n                    fontWeight: 500,\r\n                  }}\r\n                >\r\n                  <b\r\n                    style={{\r\n                      borderRadius: '15px',\r\n                      backgroundColor: '#ddd',\r\n                      padding: '1px 10px',\r\n                    }}\r\n                  >\r\n                    &lt;?=user.firstName?&gt; :\r\n                  </b>{' '}\r\n                  First Name\r\n                </li>\r\n                <li\r\n                  style={{\r\n                    fontSize: '12px',\r\n                    lineHeight: 2,\r\n                    fontWeight: 500,\r\n                  }}\r\n                >\r\n                  <b\r\n                    style={{\r\n                      borderRadius: '15px',\r\n                      backgroundColor: '#ddd',\r\n                      padding: '1px 10px',\r\n                    }}\r\n                  >\r\n                    &lt;?user.lastName?&gt; :\r\n                  </b>{' '}\r\n                  Last Name\r\n                </li>\r\n                <li\r\n                  style={{\r\n                    fontSize: '12px',\r\n                    lineHeight: 2,\r\n                    fontWeight: 500,\r\n                  }}\r\n                >\r\n                  <b\r\n                    style={{\r\n                      borderRadius: '15px',\r\n                      backgroundColor: '#ddd',\r\n                      padding: '1px 10px',\r\n                    }}\r\n                  >\r\n                    &lt;?user.phone?&gt; :\r\n                  </b>{' '}\r\n                  Phone\r\n                </li>\r\n                <li\r\n                  style={{\r\n                    fontSize: '12px',\r\n                    lineHeight: 2,\r\n                    fontWeight: 500,\r\n                  }}\r\n                >\r\n                  <b\r\n                    style={{\r\n                      borderRadius: '15px',\r\n                      backgroundColor: '#ddd',\r\n                      padding: '1px 10px',\r\n                    }}\r\n                  >\r\n                    &lt;?user.email?&gt; :\r\n                  </b>{' '}\r\n                  Email\r\n                </li>\r\n                <li\r\n                  style={{\r\n                    fontSize: '12px',\r\n                    lineHeight: 2,\r\n                    fontWeight: 500,\r\n                  }}\r\n                >\r\n                  <b\r\n                    style={{\r\n                      borderRadius: '15px',\r\n                      backgroundColor: '#ddd',\r\n                      padding: '1px 10px',\r\n                    }}\r\n                  >\r\n                    &lt;?user.email?&gt; :\r\n                  </b>{' '}\r\n                  Email\r\n                </li>\r\n\r\n                <li\r\n                  style={{\r\n                    fontSize: '12px',\r\n                    lineHeight: 2,\r\n                    fontWeight: 500,\r\n                  }}\r\n                >\r\n                  <b\r\n                    style={{\r\n                      borderRadius: '15px',\r\n                      backgroundColor: '#ddd',\r\n                      padding: '1px 10px',\r\n                    }}\r\n                  >\r\n                    &lt;?user.address1?&gt; :\r\n                  </b>{' '}\r\n                  Address\r\n                </li>\r\n\r\n                <li\r\n                  style={{\r\n                    fontSize: '12px',\r\n                    lineHeight: 2,\r\n                    fontWeight: 500,\r\n                  }}\r\n                >\r\n                  <b\r\n                    style={{\r\n                      borderRadius: '15px',\r\n                      backgroundColor: '#ddd',\r\n                      padding: '1px 10px',\r\n                    }}\r\n                  >\r\n                    &lt;?user.added?&gt; :\r\n                  </b>{' '}\r\n                  Joined\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </TabPane>\r\n      </Tabs>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default AddNewBrand;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\nimport { useHandleFetch } from '../../hooks';\r\n// import third party ui lib\r\nimport {\r\n  Upload,\r\n  message,\r\n  Switch,\r\n  Select,\r\n  Button,\r\n  notification,\r\n  Modal,\r\n  Tabs,\r\n} from 'antd';\r\n\r\nimport {\r\n  FileOutlined,\r\n  InboxOutlined,\r\n  FileAddOutlined,\r\n  DeleteOutlined,\r\n  CheckCircleOutlined,\r\n  CloseOutlined,\r\n  CheckOutlined,\r\n  InfoCircleOutlined,\r\n  PlusOutlined,\r\n  FileImageFilled,\r\n} from '@ant-design/icons';\r\n\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport MediaLibrary from '../../components/MediaLibrary';\r\nimport CKEditor from '@ckeditor/ckeditor5-react';\r\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\r\n\r\nconst validationSchema = Yup.object().shape({\r\n  // name: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\nconst { TabPane } = Tabs;\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n  notification.success({\r\n    message: message || 'New Customer Template Updated',\r\n    description: '',\r\n    icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n  });\r\n};\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n  notification.error({\r\n    message: message || 'Something Went Wrong',\r\n    description: '',\r\n    icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n  });\r\n};\r\n\r\nconst initialValues = {\r\n  name: '',\r\n  description: '',\r\n};\r\n\r\ninterface Props {\r\n  visible: boolean;\r\n  setVisible: any;\r\n}\r\n\r\nconst AddNewBrand = ({ visible, setVisible }: Props) => {\r\n  const [autoEmailTemplate, handleAutoEmailTemplateFetch] = useHandleFetch(\r\n    {},\r\n    'configureAutoEmailTemplate'\r\n  );\r\n  const [\r\n    getConfigureAutoEmailTemplate,\r\n    handleGetConfigureAutoEmailTemplateFetch,\r\n  ] = useHandleFetch({}, 'getConfigureAutoEmailTemplate');\r\n\r\n  const [customer, setcustomer] = useState({\r\n    subject: '',\r\n    body: '',\r\n  });\r\n\r\n  const [admin, setadmin] = useState({\r\n    subject: '',\r\n    body: '',\r\n  });\r\n\r\n  const handleSubmit = async () => {\r\n    const getConfigurationAutoEmailTemplateRes = await handleAutoEmailTemplateFetch(\r\n      {\r\n        body: {\r\n          event: 'orderStatus',\r\n          customer: {\r\n            ...customer,\r\n          },\r\n          admin: {\r\n            ...admin,\r\n          },\r\n        },\r\n      }\r\n    );\r\n\r\n    // @ts-ignore\r\n    if (\r\n      // @ts-ignore\r\n      getConfigurationAutoEmailTemplateRes &&\r\n      // @ts-ignore\r\n      getConfigurationAutoEmailTemplateRes.status === 'ok'\r\n    ) {\r\n      openSuccessNotification();\r\n      setVisible(false);\r\n    } else {\r\n      openErrorNotification();\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!autoEmailTemplate['isLoading']) {\r\n      const error = autoEmailTemplate['error'];\r\n      if (error['isError'] && Object.keys(error['error']).length > 0) {\r\n        if (error['error']['registerError']) {\r\n          // setServerErrors(error['error']['registerError']);\r\n        } else if (error['error']['checkoutError']) {\r\n          // setServerErrors(error['error']['checkoutError']);\r\n        } else {\r\n          // setServerErrors(error['error']);\r\n        }\r\n\r\n        const errors =\r\n          Object.values(error['error']).length > 0\r\n            ? Object.values(error['error'])\r\n            : [];\r\n        errors.forEach((err, i) => {\r\n          if (typeof err === 'string') {\r\n            openErrorNotification(err);\r\n          } else if (typeof err === 'object') {\r\n            if (err && Object.keys(err).length > 0) {\r\n              const errs = Object.values(err);\r\n              errs.forEach((err) => {\r\n                openErrorNotification(err);\r\n              });\r\n            }\r\n          }\r\n        });\r\n      }\r\n    }\r\n\r\n    if (\r\n      !autoEmailTemplate['isLoading'] &&\r\n      Object.keys(autoEmailTemplate.data).length > 0\r\n    ) {\r\n      // if (autoEmailTemplate['data']['status'] === 'ok') {\r\n      //     openSuccessNotification('Email Sent!');\r\n      // }\r\n    }\r\n  }, [autoEmailTemplate]);\r\n\r\n  useEffect(() => {\r\n    const getCustomerAutoEmail = async () => {\r\n      const res = await handleGetConfigureAutoEmailTemplateFetch({\r\n        urlOptions: {\r\n          placeHolders: {\r\n            eventName: 'orderStatus',\r\n          },\r\n        },\r\n      });\r\n\r\n      console.log('orderStatus', res);\r\n      // @ts-ignore\r\n      if (res) {\r\n        setadmin(res['admin']);\r\n        setcustomer(res['customer']);\r\n      }\r\n      // set auto email template to customer and admin\r\n    };\r\n    getCustomerAutoEmail();\r\n  }, []);\r\n\r\n  const handleCancel = (e: any) => {\r\n    setVisible(false);\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      width={'70vw'}\r\n      style={{\r\n        top: '40px',\r\n      }}\r\n      title='Order Status Template'\r\n      visible={visible}\r\n      onOk={(e: any) => handleSubmit()}\r\n      onCancel={handleCancel}\r\n      okText='Submit'\r\n      okButtonProps={{\r\n        loading: autoEmailTemplate.isLoading,\r\n        htmlType: 'submit',\r\n        // disabled: getisSubmitButtonDisabled(values, isValid)\r\n      }}\r\n      bodyStyle={{\r\n        margin: '10px',\r\n        padding: '10px',\r\n      }}\r\n      footer={false}\r\n    >\r\n      <Tabs defaultActiveKey='1'>\r\n        <TabPane tab='Customer' key='1'>\r\n          <div\r\n            style={{\r\n              display: 'flex',\r\n            }}\r\n          >\r\n            <div\r\n              style={{\r\n                width: '70%',\r\n              }}\r\n            >\r\n              <Input\r\n                label='Subject'\r\n                value={customer.subject}\r\n                name='subject'\r\n                onChange={(e: any) => {\r\n                  setcustomer({\r\n                    ...customer,\r\n                    subject: e.target.value,\r\n                  });\r\n                }}\r\n              />\r\n\r\n              <h3 className='inputFieldLabel'>Body</h3>\r\n\r\n              <CKEditor\r\n                editor={ClassicEditor}\r\n                data={customer.body}\r\n                onInit={(editor) => {\r\n                  // You can store the \"editor\" and use when it is needed.\r\n                  console.log('Editor is ready to use!', editor);\r\n                }}\r\n                onChange={(event, editor) => {\r\n                  const data = editor.getData();\r\n                  setcustomer({\r\n                    ...customer,\r\n                    body: data,\r\n                  });\r\n                }}\r\n                onBlur={(event, editor) => {\r\n                  console.log('Blur.', editor);\r\n                }}\r\n                onFocus={(event, editor) => {\r\n                  console.log('Focus.', editor);\r\n                }}\r\n              />\r\n\r\n              <div\r\n                style={{\r\n                  display: 'block',\r\n                  marginBottom: '20px',\r\n                  marginTop: '20px',\r\n                }}\r\n              >\r\n                <Button\r\n                  onClick={handleSubmit}\r\n                  loading={autoEmailTemplate.isLoading}\r\n                  className='btnPrimaryClassNameoutline'\r\n                >\r\n                  Update Template\r\n                </Button>\r\n              </div>\r\n            </div>\r\n\r\n            <div\r\n              style={{\r\n                width: '30%',\r\n                overflowY: 'auto',\r\n                background: '#f7f7f7',\r\n                marginLeft: '20px',\r\n                padding: '10px',\r\n                borderRadius: '8px',\r\n              }}\r\n            >\r\n              <h4>Information Tags</h4>\r\n              <p\r\n                style={{\r\n                  fontSize: '12px',\r\n                }}\r\n              >\r\n                Place the following tags to replace them with actual data while\r\n                sending email\r\n              </p>\r\n              <ul\r\n                style={{\r\n                  padding: '15px',\r\n                }}\r\n              >\r\n                <li\r\n                  style={{\r\n                    fontSize: '12px',\r\n                    marginBottom: '10px',\r\n                    lineHeight: 1.7,\r\n                    fontWeight: 500,\r\n                  }}\r\n                >\r\n                  <b\r\n                    style={{\r\n                      borderRadius: '15px',\r\n                      backgroundColor: '#ddd',\r\n                      padding: '1px 10px',\r\n                    }}\r\n                  >\r\n                    &lt;?=order.status.name?&gt; :\r\n                  </b>{' '}\r\n                  Order Status\r\n                </li>\r\n                <li\r\n                  style={{\r\n                    fontSize: '12px',\r\n                    marginBottom: '10px',\r\n                    lineHeight: 1.7,\r\n                    fontWeight: 500,\r\n                  }}\r\n                >\r\n                  <b\r\n                    style={{\r\n                      borderRadius: '15px',\r\n                      backgroundColor: '#ddd',\r\n                      padding: '1px 10px',\r\n                    }}\r\n                  >\r\n                    &lt;?=customer.firstName?&gt; :\r\n                  </b>{' '}\r\n                  Customer first name\r\n                </li>\r\n                <li\r\n                  style={{\r\n                    fontSize: '12px',\r\n                    marginBottom: '10px',\r\n                    lineHeight: 1.7,\r\n                    fontWeight: 500,\r\n                  }}\r\n                >\r\n                  <b\r\n                    style={{\r\n                      borderRadius: '15px',\r\n                      backgroundColor: '#ddd',\r\n                      padding: '1px 10px',\r\n                    }}\r\n                  >\r\n                    &lt;?=customer.lastName?&gt; :\r\n                  </b>{' '}\r\n                  Customer last name\r\n                </li>\r\n\r\n                <li\r\n                  style={{\r\n                    fontSize: '12px',\r\n                    marginBottom: '10px',\r\n                    lineHeight: 1.7,\r\n                    fontWeight: 500,\r\n                  }}\r\n                >\r\n                  <b\r\n                    style={{\r\n                      borderRadius: '15px',\r\n                      backgroundColor: '#ddd',\r\n                      padding: '1px 10px',\r\n                    }}\r\n                  >\r\n                    &lt;?=order.shortCode?&gt; :\r\n                  </b>{' '}\r\n                  Order Code\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </TabPane>\r\n\r\n        <TabPane tab='Admin' key='2'>\r\n          <div\r\n            style={{\r\n              display: 'flex',\r\n            }}\r\n          >\r\n            <div\r\n              style={{\r\n                width: '70%',\r\n              }}\r\n            >\r\n              <Input\r\n                label='Subject'\r\n                value={admin.subject}\r\n                name='subject'\r\n                onChange={(e: any) => {\r\n                  setadmin({\r\n                    ...admin,\r\n                    subject: e.target.value,\r\n                  });\r\n                }}\r\n              />\r\n\r\n              <h3 className='inputFieldLabel'>Body</h3>\r\n\r\n              <CKEditor\r\n                editor={ClassicEditor}\r\n                data={admin.body}\r\n                onInit={(editor) => {\r\n                  // You can store the \"editor\" and use when it is needed.\r\n                  console.log('Editor is ready to use!', editor);\r\n                }}\r\n                onChange={(event, editor) => {\r\n                  const data = editor.getData();\r\n                  setadmin({\r\n                    ...admin,\r\n                    body: data,\r\n                  });\r\n                }}\r\n                onBlur={(event, editor) => {\r\n                  console.log('Blur.', editor);\r\n                }}\r\n                onFocus={(event, editor) => {\r\n                  console.log('Focus.', editor);\r\n                }}\r\n              />\r\n\r\n              <div\r\n                style={{\r\n                  display: 'block',\r\n                  marginBottom: '20px',\r\n                  marginTop: '20px',\r\n                }}\r\n              >\r\n                <Button\r\n                  onClick={handleSubmit}\r\n                  loading={autoEmailTemplate.isLoading}\r\n                  className='btnPrimaryClassNameoutline'\r\n                >\r\n                  Update Template\r\n                </Button>\r\n              </div>\r\n            </div>\r\n\r\n            <div\r\n              style={{\r\n                width: '30%',\r\n                overflowY: 'auto',\r\n                background: '#f7f7f7',\r\n                marginLeft: '20px',\r\n                padding: '10px',\r\n                borderRadius: '8px',\r\n              }}\r\n            >\r\n              <h4>Information Tags</h4>\r\n              <p\r\n                style={{\r\n                  fontSize: '12px',\r\n                }}\r\n              >\r\n                Place the following tags to replace them with actual data while\r\n                sending email\r\n              </p>\r\n              <ul\r\n                style={{\r\n                  padding: '15px',\r\n                }}\r\n              >\r\n                <li\r\n                  style={{\r\n                    fontSize: '12px',\r\n                    marginBottom: '10px',\r\n                    lineHeight: 1.7,\r\n                    fontWeight: 500,\r\n                  }}\r\n                >\r\n                  <b\r\n                    style={{\r\n                      borderRadius: '15px',\r\n                      backgroundColor: '#ddd',\r\n                      padding: '1px 10px',\r\n                    }}\r\n                  >\r\n                    &lt;?=order.status.name?&gt; :\r\n                  </b>{' '}\r\n                  Order Status\r\n                </li>\r\n                <li\r\n                  style={{\r\n                    fontSize: '12px',\r\n                    marginBottom: '10px',\r\n                    lineHeight: 1.7,\r\n                    fontWeight: 500,\r\n                  }}\r\n                >\r\n                  <b\r\n                    style={{\r\n                      borderRadius: '15px',\r\n                      backgroundColor: '#ddd',\r\n                      padding: '1px 10px',\r\n                    }}\r\n                  >\r\n                    &lt;?=customer.firstName?&gt; :\r\n                  </b>{' '}\r\n                  Customer first name\r\n                </li>\r\n                <li\r\n                  style={{\r\n                    fontSize: '12px',\r\n                    marginBottom: '10px',\r\n                    lineHeight: 1.7,\r\n                    fontWeight: 500,\r\n                  }}\r\n                >\r\n                  <b\r\n                    style={{\r\n                      borderRadius: '15px',\r\n                      backgroundColor: '#ddd',\r\n                      padding: '1px 10px',\r\n                    }}\r\n                  >\r\n                    &lt;?=customer.lastName?&gt; :\r\n                  </b>{' '}\r\n                  Customer last name\r\n                </li>\r\n\r\n                <li\r\n                  style={{\r\n                    fontSize: '12px',\r\n                    marginBottom: '10px',\r\n                    lineHeight: 1.7,\r\n                    fontWeight: 500,\r\n                  }}\r\n                >\r\n                  <b\r\n                    style={{\r\n                      borderRadius: '15px',\r\n                      backgroundColor: '#ddd',\r\n                      padding: '1px 10px',\r\n                    }}\r\n                  >\r\n                    &lt;?=order.shortCode?&gt; :\r\n                  </b>{' '}\r\n                  Order Code\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </TabPane>\r\n      </Tabs>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default AddNewBrand;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\nimport { useHandleFetch } from '../../hooks';\r\n// import third party ui lib\r\nimport {\r\n  Upload,\r\n  message,\r\n  Switch,\r\n  Select,\r\n  Button,\r\n  notification,\r\n  Modal,\r\n  Tabs,\r\n} from 'antd';\r\n\r\nimport {\r\n  FileOutlined,\r\n  InboxOutlined,\r\n  FileAddOutlined,\r\n  DeleteOutlined,\r\n  CheckCircleOutlined,\r\n  CloseOutlined,\r\n  CheckOutlined,\r\n  InfoCircleOutlined,\r\n  PlusOutlined,\r\n  FileImageFilled,\r\n} from '@ant-design/icons';\r\n\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport MediaLibrary from '../../components/MediaLibrary';\r\nimport CKEditor from '@ckeditor/ckeditor5-react';\r\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\r\n\r\nconst validationSchema = Yup.object().shape({\r\n  name: Yup.string()\r\n    .label('Name')\r\n    .required('Name is required')\r\n    .min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\nconst { TabPane } = Tabs;\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n  notification.success({\r\n    message: message || 'New Order Template Updated',\r\n    description: '',\r\n    icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n  });\r\n};\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n  notification.error({\r\n    message: message || 'Something Went Wrong',\r\n    description: '',\r\n    icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n  });\r\n};\r\n\r\nconst initialValues = {\r\n  name: '',\r\n  description: '',\r\n};\r\n\r\ninterface Props {\r\n  visible: boolean;\r\n  setVisible: any;\r\n}\r\n\r\nconst AddNewBrand = ({ visible, setVisible }: Props) => {\r\n  const [autoEmailTemplate, handleAutoEmailTemplateFetch] = useHandleFetch(\r\n    {},\r\n    'configureAutoEmailTemplate'\r\n  );\r\n  const [\r\n    getConfigureAutoEmailTemplate,\r\n    handleGetConfigureAutoEmailTemplateFetch,\r\n  ] = useHandleFetch({}, 'getConfigureAutoEmailTemplate');\r\n\r\n  const [customer, setcustomer] = useState({\r\n    subject: '',\r\n    body: '',\r\n  });\r\n\r\n  const [admin, setadmin] = useState({\r\n    subject: '',\r\n    body: '',\r\n  });\r\n\r\n  const handleSubmit = async () => {\r\n    const getConfigurationAutoEmailTemplateRes = await handleAutoEmailTemplateFetch(\r\n      {\r\n        body: {\r\n          event: 'order',\r\n          customer: {\r\n            ...customer,\r\n          },\r\n          admin: {\r\n            ...admin,\r\n          },\r\n        },\r\n      }\r\n    );\r\n\r\n    // @ts-ignore\r\n    if (\r\n      // @ts-ignore\r\n      getConfigurationAutoEmailTemplateRes &&\r\n      // @ts-ignore\r\n      getConfigurationAutoEmailTemplateRes.status === 'ok'\r\n    ) {\r\n      openSuccessNotification();\r\n      setVisible(false);\r\n    } else {\r\n      openErrorNotification();\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!autoEmailTemplate['isLoading']) {\r\n      const error = autoEmailTemplate['error'];\r\n      if (error['isError'] && Object.keys(error['error']).length > 0) {\r\n        if (error['error']['registerError']) {\r\n          // setServerErrors(error['error']['registerError']);\r\n        } else if (error['error']['checkoutError']) {\r\n          // setServerErrors(error['error']['checkoutError']);\r\n        } else {\r\n          // setServerErrors(error['error']);\r\n        }\r\n\r\n        const errors =\r\n          Object.values(error['error']).length > 0\r\n            ? Object.values(error['error'])\r\n            : [];\r\n        errors.forEach((err, i) => {\r\n          if (typeof err === 'string') {\r\n            openErrorNotification(err);\r\n          } else if (typeof err === 'object') {\r\n            if (err && Object.keys(err).length > 0) {\r\n              const errs = Object.values(err);\r\n              errs.forEach((err) => {\r\n                openErrorNotification(err);\r\n              });\r\n            }\r\n          }\r\n        });\r\n      }\r\n    }\r\n\r\n    if (\r\n      !autoEmailTemplate['isLoading'] &&\r\n      Object.keys(autoEmailTemplate.data).length > 0\r\n    ) {\r\n      // if (autoEmailTemplate['data']['status'] === 'ok') {\r\n      //     openSuccessNotification('Email Sent!');\r\n      // }\r\n    }\r\n  }, [autoEmailTemplate]);\r\n\r\n  useEffect(() => {\r\n    const getCustomerAutoEmail = async () => {\r\n      const res = await handleGetConfigureAutoEmailTemplateFetch({\r\n        urlOptions: {\r\n          placeHolders: {\r\n            eventName: 'order',\r\n          },\r\n        },\r\n      });\r\n\r\n      console.log('Ordertemplate', res);\r\n      // @ts-ignore\r\n      if (res) {\r\n        setadmin(res['admin']);\r\n        setcustomer(res['customer']);\r\n      }\r\n      // set auto email template to customer and admin\r\n    };\r\n    getCustomerAutoEmail();\r\n  }, []);\r\n\r\n  const handleCancel = (e: any) => {\r\n    setVisible(false);\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      width={'80vw'}\r\n      style={{\r\n        top: '40px',\r\n      }}\r\n      title='Order Event Template'\r\n      visible={visible}\r\n      onOk={(e: any) => handleSubmit()}\r\n      onCancel={handleCancel}\r\n      okText='Submit'\r\n      okButtonProps={{\r\n        loading: autoEmailTemplate.isLoading,\r\n        htmlType: 'submit',\r\n        // disabled: getisSubmitButtonDisabled(values, isValid)\r\n      }}\r\n      bodyStyle={{\r\n        margin: '10px',\r\n        padding: '10px',\r\n      }}\r\n      footer={false}\r\n    >\r\n      <Tabs defaultActiveKey='1'>\r\n        <TabPane tab='Customer' key='1'>\r\n          <div\r\n            style={{\r\n              display: 'flex',\r\n            }}\r\n          >\r\n            <div\r\n              style={{\r\n                width: '60%',\r\n              }}\r\n            >\r\n              <Input\r\n                label='Subject'\r\n                value={customer.subject}\r\n                name='subject'\r\n                onChange={(e: any) => {\r\n                  setcustomer({\r\n                    ...customer,\r\n                    subject: e.target.value,\r\n                  });\r\n                }}\r\n              />\r\n\r\n              <h3 className='inputFieldLabel'>Body</h3>\r\n\r\n              <CKEditor\r\n                editor={ClassicEditor}\r\n                data={customer.body}\r\n                onInit={(editor) => {\r\n                  // You can store the \"editor\" and use when it is needed.\r\n                  console.log('Editor is ready to use!', editor);\r\n                }}\r\n                onChange={(event, editor) => {\r\n                  const data = editor.getData();\r\n                  setcustomer({\r\n                    ...customer,\r\n                    body: data,\r\n                  });\r\n                }}\r\n                onBlur={(event, editor) => {\r\n                  console.log('Blur.', editor);\r\n                }}\r\n                onFocus={(event, editor) => {\r\n                  console.log('Focus.', editor);\r\n                }}\r\n              />\r\n\r\n              <div\r\n                style={{\r\n                  display: 'block',\r\n                  marginBottom: '20px',\r\n                  marginTop: '20px',\r\n                }}\r\n              >\r\n                <Button\r\n                  onClick={handleSubmit}\r\n                  loading={autoEmailTemplate.isLoading}\r\n                  className='btnPrimaryClassNameoutline'\r\n                >\r\n                  Update Template\r\n                </Button>\r\n              </div>\r\n            </div>\r\n\r\n            <div\r\n              style={{\r\n                width: '40%',\r\n                overflowY: 'auto',\r\n                background: '#f7f7f7',\r\n                marginLeft: '20px',\r\n                padding: '10px',\r\n                borderRadius: '8px',\r\n              }}\r\n            >\r\n              <h4>Information Tags</h4>\r\n              <p\r\n                style={{\r\n                  fontSize: '12px',\r\n                }}\r\n              >\r\n                Place the following tags to replace them with actual data while\r\n                sending email\r\n              </p>\r\n              <ul\r\n                style={{\r\n                  padding: '15px',\r\n                }}\r\n              >\r\n                <li\r\n                  style={{\r\n                    fontSize: '12px',\r\n                    marginBottom: '10px',\r\n                    lineHeight: 1.7,\r\n                    fontWeight: 500,\r\n                  }}\r\n                >\r\n                  <b\r\n                    style={{\r\n                      borderRadius: '15px',\r\n                      backgroundColor: '#ddd',\r\n                      padding: '1px 10px',\r\n                    }}\r\n                  >\r\n                    &lt;?=order.added?&gt; :\r\n                  </b>{' '}\r\n                  Order time\r\n                </li>\r\n\r\n                <li\r\n                  style={{\r\n                    fontSize: '12px',\r\n                    lineHeight: 2,\r\n                    fontWeight: 500,\r\n                  }}\r\n                >\r\n                  <b\r\n                    style={{\r\n                      borderRadius: '15px',\r\n                      backgroundColor: '#ddd',\r\n                      padding: '1px 10px',\r\n                    }}\r\n                  >\r\n                    &lt;?order.totalPrice?&gt; :\r\n                  </b>{' '}\r\n                  Total Price\r\n                </li>\r\n\r\n                <li\r\n                  style={{\r\n                    fontSize: '12px',\r\n                    lineHeight: 2,\r\n                    fontWeight: 500,\r\n                  }}\r\n                >\r\n                  <b\r\n                    style={{\r\n                      borderRadius: '15px',\r\n                      backgroundColor: '#ddd',\r\n                      padding: '1px 10px',\r\n                    }}\r\n                  >\r\n                    &lt;?order.status.name?&gt; :\r\n                  </b>{' '}\r\n                  Status at\r\n                </li>\r\n\r\n                <li\r\n                  style={{\r\n                    fontSize: '12px',\r\n                    lineHeight: 2,\r\n                    fontWeight: 500,\r\n                  }}\r\n                >\r\n                  <b\r\n                    style={{\r\n                      borderRadius: '15px',\r\n                      backgroundColor: '#ddd',\r\n                      padding: '1px 10px',\r\n                    }}\r\n                  >\r\n                    &lt;?order.shippingAddress.firstName?&gt; :\r\n                  </b>{' '}\r\n                  Shipping first Name\r\n                </li>\r\n                <li\r\n                  style={{\r\n                    fontSize: '12px',\r\n                    lineHeight: 2,\r\n                    fontWeight: 500,\r\n                  }}\r\n                >\r\n                  <b\r\n                    style={{\r\n                      borderRadius: '15px',\r\n                      backgroundColor: '#ddd',\r\n                      padding: '1px 10px',\r\n                    }}\r\n                  >\r\n                    &lt;?order.shippingAddress.country?&gt; :\r\n                  </b>{' '}\r\n                  Shipping Country\r\n                </li>\r\n                <li\r\n                  style={{\r\n                    fontSize: '12px',\r\n                    lineHeight: 2,\r\n                    fontWeight: 500,\r\n                  }}\r\n                >\r\n                  <b\r\n                    style={{\r\n                      borderRadius: '15px',\r\n                      backgroundColor: '#ddd',\r\n                      padding: '1px 10px',\r\n                    }}\r\n                  >\r\n                    &lt;?order.shippingAddress.city?&gt; :\r\n                  </b>{' '}\r\n                  Shipping City\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </TabPane>\r\n\r\n        <TabPane tab='Admin' key='2'>\r\n          <div\r\n            style={{\r\n              display: 'flex',\r\n            }}\r\n          >\r\n            <div\r\n              style={{\r\n                width: '60%',\r\n              }}\r\n            >\r\n              <Input\r\n                label='Subject'\r\n                value={admin.subject}\r\n                name='subject'\r\n                onChange={(e: any) => {\r\n                  setadmin({\r\n                    ...admin,\r\n                    subject: e.target.value,\r\n                  });\r\n                }}\r\n              />\r\n\r\n              <h3 className='inputFieldLabel'>Body</h3>\r\n\r\n              <CKEditor\r\n                editor={ClassicEditor}\r\n                data={admin.body}\r\n                onInit={(editor) => {\r\n                  // You can store the \"editor\" and use when it is needed.\r\n                  console.log('Editor is ready to use!', editor);\r\n                }}\r\n                onChange={(event, editor) => {\r\n                  const data = editor.getData();\r\n                  setadmin({\r\n                    ...admin,\r\n                    body: data,\r\n                  });\r\n                }}\r\n                onBlur={(event, editor) => {\r\n                  console.log('Blur.', editor);\r\n                }}\r\n                onFocus={(event, editor) => {\r\n                  console.log('Focus.', editor);\r\n                }}\r\n              />\r\n\r\n              <div\r\n                style={{\r\n                  display: 'block',\r\n                  marginBottom: '20px',\r\n                  marginTop: '20px',\r\n                }}\r\n              >\r\n                <Button\r\n                  onClick={handleSubmit}\r\n                  loading={autoEmailTemplate.isLoading}\r\n                  className='btnPrimaryClassNameoutline'\r\n                >\r\n                  Update Template\r\n                </Button>\r\n              </div>\r\n            </div>\r\n            <div\r\n              style={{\r\n                width: '40%',\r\n                overflowY: 'auto',\r\n                background: '#f7f7f7',\r\n                marginLeft: '20px',\r\n                padding: '10px',\r\n                borderRadius: '8px',\r\n              }}\r\n            >\r\n              <h4>Information Tags</h4>\r\n              <p\r\n                style={{\r\n                  fontSize: '12px',\r\n                }}\r\n              >\r\n                Place the following tags to replace them with actual data while\r\n                sending email\r\n              </p>\r\n\r\n              <ul\r\n                style={{\r\n                  padding: '15px',\r\n                }}\r\n              >\r\n                <li\r\n                  style={{\r\n                    fontSize: '12px',\r\n                    marginBottom: '10px',\r\n                    lineHeight: 1.7,\r\n                    fontWeight: 500,\r\n                  }}\r\n                >\r\n                  <b\r\n                    style={{\r\n                      borderRadius: '15px',\r\n                      backgroundColor: '#ddd',\r\n                      padding: '1px 10px',\r\n                    }}\r\n                  >\r\n                    &lt;?=order.added?&gt; :\r\n                  </b>{' '}\r\n                  Order time\r\n                </li>\r\n\r\n                <li\r\n                  style={{\r\n                    fontSize: '12px',\r\n                    lineHeight: 2,\r\n                    fontWeight: 500,\r\n                  }}\r\n                >\r\n                  <b\r\n                    style={{\r\n                      borderRadius: '15px',\r\n                      backgroundColor: '#ddd',\r\n                      padding: '1px 10px',\r\n                    }}\r\n                  >\r\n                    &lt;?order.totalPrice?&gt; :\r\n                  </b>{' '}\r\n                  Total Price\r\n                </li>\r\n\r\n                <li\r\n                  style={{\r\n                    fontSize: '12px',\r\n                    lineHeight: 2,\r\n                    fontWeight: 500,\r\n                  }}\r\n                >\r\n                  <b\r\n                    style={{\r\n                      borderRadius: '15px',\r\n                      backgroundColor: '#ddd',\r\n                      padding: '1px 10px',\r\n                    }}\r\n                  >\r\n                    &lt;?order.status.name?&gt; :\r\n                  </b>{' '}\r\n                  Status at\r\n                </li>\r\n\r\n                <li\r\n                  style={{\r\n                    fontSize: '12px',\r\n                    lineHeight: 2,\r\n                    fontWeight: 500,\r\n                  }}\r\n                >\r\n                  <b\r\n                    style={{\r\n                      borderRadius: '15px',\r\n                      backgroundColor: '#ddd',\r\n                      padding: '1px 10px',\r\n                    }}\r\n                  >\r\n                    &lt;?order.shippingAddress.firstName?&gt; :\r\n                  </b>{' '}\r\n                  Shipping first Name\r\n                </li>\r\n                <li\r\n                  style={{\r\n                    fontSize: '12px',\r\n                    lineHeight: 2,\r\n                    fontWeight: 500,\r\n                  }}\r\n                >\r\n                  <b\r\n                    style={{\r\n                      borderRadius: '15px',\r\n                      backgroundColor: '#ddd',\r\n                      padding: '1px 10px',\r\n                    }}\r\n                  >\r\n                    &lt;?order.shippingAddress.country?&gt; :\r\n                  </b>{' '}\r\n                  Shipping Country\r\n                </li>\r\n                <li\r\n                  style={{\r\n                    fontSize: '12px',\r\n                    lineHeight: 2,\r\n                    fontWeight: 500,\r\n                  }}\r\n                >\r\n                  <b\r\n                    style={{\r\n                      borderRadius: '15px',\r\n                      backgroundColor: '#ddd',\r\n                      padding: '1px 10px',\r\n                    }}\r\n                  >\r\n                    &lt;?order.shippingAddress.city?&gt; :\r\n                  </b>{' '}\r\n                  Shipping City\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </TabPane>\r\n      </Tabs>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default AddNewBrand;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\nimport { useHandleFetch } from '../../hooks';\r\n// import third party ui lib\r\nimport {\r\n  Upload,\r\n  message,\r\n  Switch,\r\n  Select,\r\n  Button,\r\n  notification,\r\n  Modal,\r\n  Tooltip,\r\n  Checkbox,\r\n} from 'antd';\r\n\r\nimport {\r\n  FileOutlined,\r\n  InboxOutlined,\r\n  FileAddOutlined,\r\n  DeleteOutlined,\r\n  CheckCircleOutlined,\r\n  CloseOutlined,\r\n  CheckOutlined,\r\n  InfoCircleOutlined,\r\n  PlusOutlined,\r\n  FileImageFilled,\r\n  EditOutlined,\r\n} from '@ant-design/icons';\r\n\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport MediaLibrary from '../../components/MediaLibrary';\r\nimport NewCustomerTemplate from './NewCustomerTemplate';\r\nimport NewDealerAutoEventsTemplate from './NewDealerAutoEventsTemplate';\r\nimport OrderStatusTemplateAutoEmail from './OrderStatusTemplateAutoEmail';\r\nimport OrderTemplateAutoEmail from './OrderTemplateAutoEmail';\r\n\r\nconst validationSchema = Yup.object().shape({\r\n  name: Yup.string()\r\n    .label('Name')\r\n    .required('Name is required')\r\n    .min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n  notification.success({\r\n    message: message || 'Tag Created',\r\n    description: '',\r\n    icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n  });\r\n};\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n  notification.error({\r\n    message: message || 'Something Went Wrong',\r\n    description: '',\r\n    icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n  });\r\n};\r\n\r\ninterface Props {}\r\n\r\nconst ConfigureAutoEmail = ({}: Props) => {\r\n  const [\r\n    getAutoEmailConfigurationState,\r\n    handleGetAutoEmailConfigurationFetch,\r\n  ] = useHandleFetch({}, 'getAutoEmailConfiguration');\r\n  const [\r\n    configureAutoEmailConfigurationState,\r\n    handleAutoEmailConfigurationFetch,\r\n  ] = useHandleFetch({}, 'configureAutoEmail');\r\n\r\n  const [isnewCustomerAdmin, setnewCustomerAdmin] = useState(false);\r\n  const [isnewCustomerCustomer, setnewCustomerCustomer] = useState(false);\r\n\r\n  const [isnewDealerAdmin, setnewDealerAdmin] = useState(false);\r\n  const [isnewDealer, setnewDealerDealer] = useState(false);\r\n\r\n  const [isorderAdmin, setorderAdmin] = useState(false);\r\n  const [isorderStatusAdmin, setorderStatusAdmin] = useState(false);\r\n  const [isorderCustomer, setorderCustomer] = useState(false);\r\n  const [isorderStatusCustomer, setIsorderStatusCustomer] = useState(false);\r\n\r\n  const [newcustomermodal, setnewcustomermodal] = useState(false);\r\n  const [newDealermodal, setnewDealermodal] = useState(false);\r\n  const [ordermodal, setordermodal] = useState(false);\r\n  const [orderStatusmodal, setorderStatusmodal] = useState(false);\r\n  const [autoEmailData, setAutoEmailData] = useState({});\r\n\r\n  console.log('isnewCustomerAdmin', isnewCustomerAdmin);\r\n  console.log('isnewCustomerCustomer', isnewCustomerCustomer);\r\n\r\n  useEffect(() => {\r\n    const getAutoEmailConfiguration = async () => {\r\n      const res = await handleGetAutoEmailConfigurationFetch({});\r\n      //@ts-ignore\r\n      if (res) {\r\n        setAutoEmailData(autoEmailData);\r\n        setnewCustomerAdmin(res['newCustomer']['admin']);\r\n        setnewCustomerCustomer(res['newCustomer']['user']);\r\n        setnewDealerAdmin(res['newDealer']['admin']);\r\n        setnewDealerDealer(res['newDealer']['user']);\r\n        setIsorderStatusCustomer(res['orderStatus']['user']);\r\n        setorderStatusAdmin(res['orderStatus']['admin']);\r\n        setorderAdmin(res['order']['admin']);\r\n        setorderCustomer(res['order']['user']);\r\n      }\r\n    };\r\n    getAutoEmailConfiguration();\r\n  }, []);\r\n\r\n  console.log('getAutoEmailConfigurationState', getAutoEmailConfigurationState);\r\n\r\n  const handleUpdateAutoEmail = async () => {\r\n    const updateAutoEmailRes = await handleAutoEmailConfigurationFetch({\r\n      body: {\r\n        newCustomer: {\r\n          admin: isnewCustomerAdmin,\r\n          user: isnewCustomerCustomer,\r\n        },\r\n        order: {\r\n          admin: isorderAdmin,\r\n          user: isorderCustomer,\r\n        },\r\n        orderStatus: {\r\n          admin: isorderStatusAdmin,\r\n          user: isorderStatusCustomer,\r\n        },\r\n        newDealer: {\r\n          admin: isnewDealerAdmin,\r\n          user: isnewDealer,\r\n        },\r\n      },\r\n    });\r\n\r\n    // @ts-ignore\r\n    if (updateAutoEmailRes && updateAutoEmailRes.status === 'ok') {\r\n      openSuccessNotification('Auto email Configuration Updated!');\r\n    } else {\r\n      openErrorNotification(\r\n        \"Something went wrong, Couldn't updated Auto email configuration\"\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div\r\n        style={{\r\n          display: 'flex',\r\n          flexDirection: 'column',\r\n        }}\r\n      >\r\n        <div style={{}}>\r\n          <div\r\n            style={{\r\n              display: 'flex',\r\n              alignItems: 'center',\r\n            }}\r\n          >\r\n            <div\r\n              style={{\r\n                marginRight: '15px',\r\n                marginTop: '10px',\r\n              }}\r\n            >\r\n              <h3 className='checkBoxFieldLabel'>New Customer</h3>\r\n            </div>\r\n            <Button\r\n              className='templateEditSmall'\r\n              onClick={() => setnewcustomermodal(true)}\r\n              type='link'\r\n              icon={<EditOutlined />}\r\n            >\r\n              configure Template\r\n            </Button>\r\n          </div>\r\n          <div\r\n            style={{\r\n              marginTop: '15px',\r\n            }}\r\n          ></div>\r\n          <div\r\n            style={{\r\n              display: 'flex',\r\n              marginTop: '15px',\r\n            }}\r\n          >\r\n            <div\r\n              style={{\r\n                marginRight: '20px',\r\n              }}\r\n            >\r\n              <Checkbox\r\n                checked={isnewCustomerAdmin}\r\n                defaultChecked={isnewCustomerAdmin}\r\n                onChange={(e) => setnewCustomerAdmin(e.target.checked)}\r\n              >\r\n                <span className='checkBoxSmallFieldLabel'>Admin</span>\r\n              </Checkbox>\r\n            </div>\r\n            <div style={{}}>\r\n              <Checkbox\r\n                checked={isnewCustomerCustomer}\r\n                defaultChecked={isnewCustomerCustomer}\r\n                onChange={(e) => setnewCustomerCustomer(e.target.checked)}\r\n              >\r\n                <span className='checkBoxSmallFieldLabel'>Customer</span>\r\n              </Checkbox>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div\r\n          style={{\r\n            marginTop: '25px',\r\n          }}\r\n        ></div>\r\n\r\n        <div style={{}}>\r\n          <div\r\n            style={{\r\n              display: 'flex',\r\n              alignItems: 'center',\r\n            }}\r\n          >\r\n            <div\r\n              style={{\r\n                marginRight: '15px',\r\n                marginTop: '10px',\r\n              }}\r\n            >\r\n              <h3 className='checkBoxFieldLabel'>New Dealer</h3>\r\n            </div>\r\n            <Button\r\n              className='templateEditSmall'\r\n              onClick={() => setnewDealermodal(true)}\r\n              type='link'\r\n              icon={<EditOutlined />}\r\n            >\r\n              configure Template\r\n            </Button>\r\n          </div>\r\n          <div\r\n            style={{\r\n              marginTop: '15px',\r\n            }}\r\n          ></div>\r\n          <div\r\n            style={{\r\n              display: 'flex',\r\n              marginTop: '15px',\r\n            }}\r\n          >\r\n            <div\r\n              style={{\r\n                marginRight: '20px',\r\n              }}\r\n            >\r\n              <Checkbox\r\n                checked={isnewDealerAdmin}\r\n                defaultChecked={isnewDealerAdmin}\r\n                onChange={(e) => setnewDealerAdmin(e.target.checked)}\r\n              >\r\n                <span className='checkBoxSmallFieldLabel'>Admin</span>\r\n              </Checkbox>\r\n            </div>\r\n            <div style={{}}>\r\n              <Checkbox\r\n                checked={isnewDealer}\r\n                defaultChecked={isnewDealer}\r\n                onChange={(e) => setnewDealerDealer(e.target.checked)}\r\n              >\r\n                <span className='checkBoxSmallFieldLabel'>Customer</span>\r\n              </Checkbox>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div>\r\n          <div\r\n            style={{\r\n              display: 'flex',\r\n              alignItems: 'center',\r\n              marginTop: '30px',\r\n            }}\r\n          >\r\n            <div\r\n              style={{\r\n                marginRight: '15px',\r\n                marginTop: '10px',\r\n              }}\r\n            >\r\n              <h3 className='checkBoxFieldLabel'>Order</h3>\r\n            </div>\r\n            <Button\r\n              className='templateEditSmall'\r\n              onClick={() => setordermodal(true)}\r\n              type='link'\r\n              icon={<EditOutlined />}\r\n            >\r\n              configure Template\r\n            </Button>\r\n          </div>\r\n\r\n          <div\r\n            style={{\r\n              marginTop: '5px',\r\n            }}\r\n          ></div>\r\n\r\n          <div\r\n            style={{\r\n              display: 'flex',\r\n              marginTop: '15px',\r\n            }}\r\n          >\r\n            <div\r\n              style={{\r\n                marginRight: '20px',\r\n              }}\r\n            >\r\n              <Checkbox\r\n                checked={isorderAdmin}\r\n                defaultChecked={isorderAdmin}\r\n                onChange={(e) => setorderAdmin(e.target.checked)}\r\n              >\r\n                <span className='checkBoxSmallFieldLabel'>Admin</span>\r\n              </Checkbox>\r\n            </div>\r\n            <div style={{}}>\r\n              <Checkbox\r\n                checked={isorderCustomer}\r\n                defaultChecked={isorderCustomer}\r\n                onChange={(e) => setorderCustomer(e.target.checked)}\r\n              >\r\n                <span className='checkBoxSmallFieldLabel'>Customer</span>\r\n              </Checkbox>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div>\r\n          <div\r\n            style={{\r\n              display: 'flex',\r\n              alignItems: 'center',\r\n              marginTop: '30px',\r\n            }}\r\n          >\r\n            <div\r\n              style={{\r\n                marginRight: '15px',\r\n                marginTop: '10px',\r\n              }}\r\n            >\r\n              <h3 className='checkBoxFieldLabel'>Order status</h3>\r\n            </div>\r\n            <Button\r\n              className='templateEditSmall'\r\n              onClick={() => setorderStatusmodal(true)}\r\n              type='link'\r\n              icon={<EditOutlined />}\r\n            >\r\n              configure Template\r\n            </Button>\r\n          </div>\r\n          <div\r\n            style={{\r\n              marginTop: '15px',\r\n            }}\r\n          ></div>\r\n          <div\r\n            style={{\r\n              display: 'flex',\r\n              marginTop: '15px',\r\n            }}\r\n          >\r\n            <div\r\n              style={{\r\n                marginRight: '20px',\r\n              }}\r\n            >\r\n              <Checkbox\r\n                checked={isorderStatusAdmin}\r\n                defaultChecked={isorderStatusAdmin}\r\n                onChange={(e) => setorderStatusAdmin(e.target.checked)}\r\n              >\r\n                <span className='checkBoxSmallFieldLabel'>Admin</span>\r\n              </Checkbox>\r\n            </div>\r\n            <div style={{}}>\r\n              <Checkbox\r\n                checked={isorderStatusCustomer}\r\n                defaultChecked={isorderStatusCustomer}\r\n                onChange={(e) => setIsorderStatusCustomer(e.target.checked)}\r\n              >\r\n                <span className='checkBoxSmallFieldLabel'>Customer</span>\r\n              </Checkbox>\r\n            </div>\r\n\r\n            <div style={{}}></div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div\r\n        style={{\r\n          marginTop: '25px',\r\n        }}\r\n      ></div>\r\n      <Button\r\n        onClick={(e: any) => handleUpdateAutoEmail()}\r\n        loading={configureAutoEmailConfigurationState.isLoading}\r\n        className='btnPrimaryClassNameoutline'\r\n      >\r\n        Update Auto Email Configuration\r\n      </Button>\r\n      <div\r\n        style={{\r\n          marginTop: '5px',\r\n        }}\r\n      ></div>\r\n      <NewCustomerTemplate\r\n        visible={newcustomermodal}\r\n        setVisible={setnewcustomermodal}\r\n      />\r\n      <NewDealerAutoEventsTemplate\r\n        visible={newDealermodal}\r\n        setVisible={setnewDealermodal}\r\n      />\r\n\r\n      <OrderStatusTemplateAutoEmail\r\n        visible={orderStatusmodal}\r\n        setVisible={setorderStatusmodal}\r\n      />\r\n      <OrderTemplateAutoEmail visible={ordermodal} setVisible={setordermodal} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ConfigureAutoEmail;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\nimport { useHandleFetch } from '../../hooks';\r\n// import third party ui lib\r\nimport {\r\n  Upload,\r\n  message,\r\n  Switch,\r\n  Select,\r\n  Button,\r\n  notification,\r\n  Modal,\r\n  Tooltip,\r\n  Checkbox,\r\n} from 'antd';\r\n\r\nimport {\r\n  FileOutlined,\r\n  InboxOutlined,\r\n  FileAddOutlined,\r\n  DeleteOutlined,\r\n  CheckCircleOutlined,\r\n  CloseOutlined,\r\n  CheckOutlined,\r\n  InfoCircleOutlined,\r\n  PlusOutlined,\r\n  FileImageFilled,\r\n} from '@ant-design/icons';\r\n\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport MediaLibrary from '../../components/MediaLibrary';\r\n\r\nimport CKEditor from '@ckeditor/ckeditor5-react';\r\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\r\n\r\nconst validationSchema = Yup.object().shape({});\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n  notification.success({\r\n    message: message || 'Tag Created',\r\n    description: '',\r\n    icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n  });\r\n};\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n  notification.error({\r\n    message: message || 'Something Went Wrong',\r\n    description: '',\r\n    icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n  });\r\n};\r\n\r\nconst initialValues = {\r\n  recipient: '',\r\n  subject: '',\r\n};\r\n\r\ninterface Props {\r\n  emailList?: any;\r\n  setEmailList?: any;\r\n}\r\n\r\nconst ComposeCustomEmail = ({ emailList, setEmailList }: Props) => {\r\n  const [sendCustomerEmailState, handleSendCustomEmailFetch] = useHandleFetch(\r\n    {},\r\n    'sendCustomEmail'\r\n  );\r\n\r\n  const [html, sethtml] = useState('');\r\n\r\n  const handleSubmit = async (values: any, actions: any) => {\r\n    const addTagRes = await handleSendCustomEmailFetch({\r\n      body: {\r\n        recipient: values.recipient.trim(),\r\n        subject: values.subject.trim(),\r\n        html: html,\r\n      },\r\n    });\r\n\r\n    // @ts-ignore\r\n    if (addTagRes && addTagRes.status === 'ok') {\r\n      console.log('MahManEmail', addTagRes);\r\n      sethtml('');\r\n      actions.resetForm();\r\n      openSuccessNotification('Email Sent!');\r\n    } else {\r\n      // openErrorNotification(\"Something went wrong, Couldn't send email\");\r\n    }\r\n\r\n    actions.setSubmitting(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!sendCustomerEmailState['isLoading']) {\r\n      const error = sendCustomerEmailState['error'];\r\n      if (error['isError'] && Object.keys(error['error']).length > 0) {\r\n        if (error['error']['registerError']) {\r\n          // setServerErrors(error['error']['registerError']);\r\n        } else if (error['error']['checkoutError']) {\r\n          // setServerErrors(error['error']['checkoutError']);\r\n        } else {\r\n          // setServerErrors(error['error']);\r\n        }\r\n\r\n        const errors =\r\n          Object.values(error['error']).length > 0\r\n            ? Object.values(error['error'])\r\n            : [];\r\n        errors.forEach((err, i) => {\r\n          if (typeof err === 'string') {\r\n            openErrorNotification(err);\r\n          } else if (typeof err === 'object') {\r\n            if (err && Object.keys(err).length > 0) {\r\n              const errs = Object.values(err);\r\n              errs.forEach((err) => {\r\n                openErrorNotification(err);\r\n              });\r\n            }\r\n          }\r\n        });\r\n      }\r\n    }\r\n\r\n    if (\r\n      !sendCustomerEmailState['isLoading'] &&\r\n      Object.keys(sendCustomerEmailState.data).length > 0\r\n    ) {\r\n      // if (sendCustomerEmailState['data']['status'] === 'ok') {\r\n      //     openSuccessNotification('Email Sent!');\r\n      // }\r\n    }\r\n  }, [sendCustomerEmailState]);\r\n\r\n  return (\r\n    <Formik\r\n      onSubmit={(values, actions) => handleSubmit(values, actions)}\r\n      validationSchema={validationSchema}\r\n      validateOnBlur={false}\r\n      enableReinitialize={true}\r\n      initialValues={{ ...initialValues }}\r\n    >\r\n      {({\r\n        handleChange,\r\n        values,\r\n        handleSubmit,\r\n        errors,\r\n        isValid,\r\n        isSubmitting,\r\n        touched,\r\n        handleBlur,\r\n        setFieldTouched,\r\n        handleReset,\r\n      }) => (\r\n        <>\r\n          <div\r\n            style={{\r\n              display: 'flex',\r\n              justifyContent: 'space-between',\r\n            }}\r\n          >\r\n            <div\r\n              style={{\r\n                width: '49%',\r\n              }}\r\n            >\r\n              <Input\r\n                label='To'\r\n                value={values.recipient}\r\n                name='recipient'\r\n                isError={\r\n                  (touched.recipient && errors.recipient) ||\r\n                  (!isSubmitting &&\r\n                    sendCustomerEmailState.error['error']['recipient'])\r\n                }\r\n                errorString={\r\n                  (touched.recipient && errors.recipient) ||\r\n                  (!isSubmitting &&\r\n                    sendCustomerEmailState.error['error']['recipient'])\r\n                }\r\n                onChange={(e: any) => {\r\n                  handleChange(e);\r\n                  setFieldTouched('recipient');\r\n                }}\r\n              />\r\n            </div>\r\n            <div\r\n              style={{\r\n                width: '49%',\r\n              }}\r\n            >\r\n              <Input\r\n                label='Subject'\r\n                value={values.subject}\r\n                name='subject'\r\n                isError={\r\n                  (touched.subject && errors.subject) ||\r\n                  (!isSubmitting &&\r\n                    sendCustomerEmailState.error['error']['subject'])\r\n                }\r\n                errorString={\r\n                  (touched.subject && errors.subject) ||\r\n                  (!isSubmitting &&\r\n                    sendCustomerEmailState.error['error']['subject'])\r\n                }\r\n                onChange={(e: any) => {\r\n                  handleChange(e);\r\n                  setFieldTouched('subject');\r\n                }}\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <h3 className='inputFieldLabel'>Body</h3>\r\n\r\n          <CKEditor\r\n            editor={ClassicEditor}\r\n            data={html}\r\n            onInit={(editor) => {\r\n              // You can store the \"editor\" and use when it is needed.\r\n              console.log('Editor is ready to use!', editor);\r\n            }}\r\n            onChange={(event, editor) => {\r\n              const data = editor.getData();\r\n              sethtml(data);\r\n            }}\r\n            onBlur={(event, editor) => {\r\n              console.log('Blur.', editor);\r\n            }}\r\n            onFocus={(event, editor) => {\r\n              console.log('Focus.', editor);\r\n            }}\r\n          />\r\n\r\n          <div\r\n            style={{\r\n              marginTop: '20px',\r\n            }}\r\n          ></div>\r\n          <Button\r\n            onClick={(e: any) => handleSubmit(e)}\r\n            loading={sendCustomerEmailState.isLoading}\r\n            className='btnPrimaryClassNameoutline'\r\n          >\r\n            Send\r\n          </Button>\r\n\r\n          <div\r\n            style={{\r\n              marginTop: '10px',\r\n            }}\r\n          ></div>\r\n        </>\r\n      )}\r\n    </Formik>\r\n  );\r\n};\r\n\r\nexport default ComposeCustomEmail;\r\n","import React, { useEffect } from 'react';\r\n\r\n// import hooks\r\nimport { useHandleFetch } from '../../hooks';\r\n\r\nimport { Spin } from 'antd';\r\nimport moment from 'moment';\r\nimport ReactHtmlParser from 'react-html-parser';\r\n\r\nimport { LeftOutlined } from '@ant-design/icons';\r\n\r\ninterface Props {\r\n  id?: any;\r\n  setSelectedEmailId?: any;\r\n}\r\n\r\nconst InboxEmailDetails = ({ id, setSelectedEmailId }: Props) => {\r\n  const [getEmailDetailState, handleGetEmailListFetch] = useHandleFetch(\r\n    {},\r\n    'getEmailDetails'\r\n  );\r\n\r\n  useEffect(() => {\r\n    const getEmailConfiguration = async () => {\r\n      const res = await handleGetEmailListFetch({\r\n        urlOptions: {\r\n          placeHolders: {\r\n            id: id,\r\n          },\r\n        },\r\n      });\r\n      // @ts-ignore\r\n    };\r\n    getEmailConfiguration();\r\n  }, []);\r\n\r\n  console.log('getEmailDetailState', getEmailDetailState);\r\n\r\n  return (\r\n    <>\r\n      {getEmailDetailState.isLoading && (\r\n        <>\r\n          <div\r\n            style={{\r\n              width: '100%',\r\n              display: 'flex',\r\n              justifyContent: 'center',\r\n              alignItems: 'center',\r\n              margin: '150px 0',\r\n            }}\r\n          >\r\n            <Spin size='large' />\r\n          </div>\r\n        </>\r\n      )}\r\n\r\n      {getEmailDetailState.done &&\r\n        getEmailDetailState.data &&\r\n        Object.keys(getEmailDetailState.data).length > 0 && (\r\n          <>\r\n            <div className='inboxEmailDetails'>\r\n              <div\r\n                onClick={() => setSelectedEmailId('')}\r\n                className='inboxEmailDetails__backBtn'\r\n              >\r\n                <LeftOutlined />\r\n              </div>\r\n              <div className='inboxEmailDetails__header'>\r\n                <span>{getEmailDetailState['data']['subject']}</span>\r\n                <h3>{getEmailDetailState['data']['recipient']}</h3>\r\n                <h4>\r\n                  {getEmailDetailState['data']['time'] &&\r\n                    moment(getEmailDetailState['data']['time']).format(\r\n                      'MMMM Do YYYY, h:mm:ss a'\r\n                    )}\r\n                </h4>\r\n              </div>\r\n              <div className='inboxEmailDetails__body'>\r\n                {getEmailDetailState['data']['html'] &&\r\n                  ReactHtmlParser(getEmailDetailState['data']['html'])}\r\n              </div>\r\n            </div>\r\n          </>\r\n        )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default InboxEmailDetails;\r\n","import React, { useEffect, useState } from 'react';\r\n\r\n// import hoooks\r\nimport { useHandleFetch } from '../../hooks';\r\nimport InboxEmailDetails from './InboxEmailDetails';\r\nimport { Spin, Empty } from 'antd';\r\nimport moment from 'moment';\r\n\r\nimport ReactHtmlParser from 'react-html-parser';\r\n\r\ninterface Props {\r\n  emailList?: any;\r\n  setEmailList?: any;\r\n  getEmailListState?: any;\r\n}\r\n\r\nconst Inbox = ({ emailList, setEmailList, getEmailListState }: Props) => {\r\n  const [selectedEmailId, setSelectedEmailId] = useState('');\r\n\r\n  return (\r\n    <>\r\n      {getEmailListState.isLoading && (\r\n        <>\r\n          <div\r\n            style={{\r\n              width: '100%',\r\n              display: 'flex',\r\n              justifyContent: 'center',\r\n              alignItems: 'center',\r\n              margin: '150px 0',\r\n            }}\r\n          >\r\n            <Spin size='large' />\r\n          </div>\r\n        </>\r\n      )}\r\n\r\n      {getEmailListState.done && emailList && !(emailList.length > 0) && (\r\n        <>\r\n          <div\r\n            style={{\r\n              width: '100%',\r\n              display: 'flex',\r\n              justifyContent: 'center',\r\n              alignItems: 'center',\r\n              margin: '50px 0',\r\n            }}\r\n          >\r\n            <Empty\r\n              description='No Email found'\r\n              image={Empty.PRESENTED_IMAGE_SIMPLE}\r\n            />\r\n          </div>\r\n        </>\r\n      )}\r\n\r\n      {getEmailListState.done && emailList && emailList.length > 0 && (\r\n        <>\r\n          <div className='sentEmailListContainer'>\r\n            {!selectedEmailId && (\r\n              <>\r\n                {getEmailListState.done && emailList && emailList.length > 0 && (\r\n                  <>\r\n                    {emailList.map((item) => {\r\n                      return (\r\n                        <div\r\n                          onClick={() => setSelectedEmailId(item.id)}\r\n                          className='sentEmailListContainer__item'\r\n                        >\r\n                          <div className='sentEmailListContainer__item-info'>\r\n                            <h3>To: {` ${item.recipient}`}</h3>\r\n                            <span>{`${item.subject}`}</span>\r\n                          </div>\r\n\r\n                          <h4>\r\n                            {ReactHtmlParser(\r\n                              item.html.substring(0, 125) + '.....'\r\n                            )}\r\n                          </h4>\r\n                          <h3\r\n                            style={{\r\n                              fontSize: '12px',\r\n                            }}\r\n                          >\r\n                            {item.time &&\r\n                              moment(item.time).format('MMMM Do, h a')}\r\n                          </h3>\r\n                        </div>\r\n                      );\r\n                    })}\r\n                  </>\r\n                )}\r\n              </>\r\n            )}\r\n\r\n            {selectedEmailId && (\r\n              <>\r\n                <InboxEmailDetails\r\n                  setSelectedEmailId={setSelectedEmailId}\r\n                  id={selectedEmailId}\r\n                />\r\n              </>\r\n            )}\r\n          </div>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Inbox;\r\n","import React, { useState, useEffect } from 'react';\r\n\r\n// import lib\r\nimport {\r\n  Upload,\r\n  message,\r\n  Switch,\r\n  Select,\r\n  Button,\r\n  notification,\r\n  Modal,\r\n  Tabs,\r\n  Input,\r\n} from 'antd';\r\n\r\n// import components\r\nimport ConfigureSTMP from './ConfigureSTMP';\r\nimport ConfigureAutoEmail from './ConfigureAutoEmail';\r\nimport ComposeCustomEmail from './ComposeCustomEmail';\r\nimport Inbox from './Inbox';\r\n\r\n// import hooks\r\nimport { useHandleFetch } from '../../hooks';\r\n\r\nimport {\r\n  DeleteOutlined,\r\n  FileAddOutlined,\r\n  CheckCircleOutlined,\r\n  FileImageFilled,\r\n  FileImageOutlined,\r\n  FileImageTwoTone,\r\n  PlusOutlined,\r\n  PlusCircleOutlined,\r\n  CloseOutlined,\r\n  CheckOutlined,\r\n  InfoCircleOutlined,\r\n  InboxOutlined,\r\n  SettingOutlined,\r\n} from '@ant-design/icons';\r\n\r\nconst { TabPane } = Tabs;\r\nconst { Search } = Input;\r\n\r\ninterface Props {}\r\n\r\nconst Sms = (props: Props) => {\r\n  const [getEmailListState, handleGetEmailListFetch] = useHandleFetch(\r\n    {},\r\n    'getSetEmailList'\r\n  );\r\n  const [emailList, setEmailList] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const getEmailConfiguration = async () => {\r\n      const res = await handleGetEmailListFetch({\r\n        urlOptions: {\r\n          params: {\r\n            limitCount: 50000,\r\n            sortItemValue: 'time',\r\n            sortOrderValue: '-1',\r\n          },\r\n        },\r\n      });\r\n      // @ts-ignore\r\n      setEmailList(res);\r\n    };\r\n    getEmailConfiguration();\r\n  }, []);\r\n\r\n  const handleSearch = (value) => {\r\n    if (getEmailListState.data.length > 0) {\r\n      const newProductList = getEmailListState.data.filter((item) => {\r\n        return (\r\n          (item.recipient &&\r\n            item.recipient.toLowerCase().includes(value.toLowerCase())) ||\r\n          (item.subject &&\r\n            item.subject.toLowerCase().includes(value.toLowerCase())) ||\r\n          (item.html && item.html.toLowerCase().includes(value.toLowerCase()))\r\n        );\r\n      });\r\n      setEmailList(newProductList);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className='categoryListContainer__header'>\r\n        <div className='categoryListContainer__header-searchBar'>\r\n          <h2 className='categoryListContainer__header-title'>Email</h2>\r\n\r\n          <Search\r\n            enterButton={false}\r\n            className='searchbarClassName'\r\n            placeholder='search email..'\r\n            onChange={(e) => handleSearch(e.target.value)}\r\n            // style={{ width: 300 }}\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className='siteInfoContainer'>\r\n        <Tabs defaultActiveKey='1'>\r\n          <TabPane\r\n            tab={\r\n              <span>\r\n                <InboxOutlined />\r\n                Outbox\r\n              </span>\r\n            }\r\n            key='1'\r\n          >\r\n            <Inbox\r\n              getEmailListState={getEmailListState}\r\n              setEmailList={setEmailList}\r\n              emailList={emailList}\r\n            />\r\n          </TabPane>\r\n\r\n          <TabPane\r\n            tab={\r\n              <span>\r\n                <PlusCircleOutlined />\r\n                Compose Email\r\n              </span>\r\n            }\r\n            key='2'\r\n          >\r\n            <ComposeCustomEmail />\r\n          </TabPane>\r\n\r\n          <TabPane\r\n            tab={\r\n              <span>\r\n                <SettingOutlined />\r\n                Configure STMP\r\n              </span>\r\n            }\r\n            key='3'\r\n          >\r\n            <ConfigureSTMP />\r\n          </TabPane>\r\n\r\n          <TabPane\r\n            tab={\r\n              <span>\r\n                <SettingOutlined />\r\n                Configure Auto Email\r\n              </span>\r\n            }\r\n            key='4'\r\n          >\r\n            <ConfigureAutoEmail />\r\n          </TabPane>\r\n        </Tabs>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Sms;\r\n","import React, { useEffect } from 'react';\r\n\r\n// import components\r\nimport Empty from '../../components/Empty';\r\n\r\n// import hooks\r\nimport { useHandleFetch } from '../../hooks';\r\n\r\n// import lib\r\nimport { useHistory } from 'react-router';\r\nimport {\r\n  LogoutOutlined,\r\n  BellOutlined,\r\n  OrderedListOutlined,\r\n  TwitterSquareFilled,\r\n  ShoppingCartOutlined,\r\n  UserOutlined,\r\n} from '@ant-design/icons';\r\n\r\nimport Moment from 'react-moment';\r\nimport moment from 'moment';\r\n\r\nimport { Layout, Badge, Dropdown, Menu, Spin } from 'antd';\r\n\r\nconst { Header } = Layout;\r\n\r\ninterface Props {}\r\n\r\nconst NotificationList = (props: Props) => {\r\n  const history = useHistory();\r\n\r\n  const [getAllNotificationState, handleGetAllNOticationFetch] = useHandleFetch(\r\n    {},\r\n    'getAllNotificationPage'\r\n  );\r\n\r\n  const handleMenuClick = (e) => {\r\n    if (e.key === '3') {\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const getAllNotification = async () => {\r\n      await handleGetAllNOticationFetch({\r\n        urlOptions: {\r\n          params: {\r\n            limitNumber: 5000,\r\n          },\r\n        },\r\n      });\r\n    };\r\n\r\n    getAllNotification();\r\n  }, []);\r\n\r\n  console.log('getAllNotificationState', getAllNotificationState);\r\n\r\n  const typeIcon = {\r\n    customer: <UserOutlined />,\r\n    order: <ShoppingCartOutlined />,\r\n  };\r\n\r\n  const menu = () => {\r\n    if (getAllNotificationState.isLoading)\r\n      return (\r\n        <div\r\n          style={{\r\n            height: '100%',\r\n            display: 'flex',\r\n            justifyContent: 'center',\r\n            alignItems: 'center',\r\n            marginTop: '100px',\r\n          }}\r\n        >\r\n          <Spin />\r\n        </div>\r\n      );\r\n\r\n    if (\r\n      getAllNotificationState.done &&\r\n      getAllNotificationState.data &&\r\n      !getAllNotificationState.data[0]\r\n    ) {\r\n      return (\r\n        <div\r\n          style={{\r\n            height: '100%',\r\n            display: 'flex',\r\n            justifyContent: 'center',\r\n            alignItems: 'center',\r\n            marginTop: '100px',\r\n          }}\r\n        >\r\n          <Empty title='No Notification found' />\r\n        </div>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <div className='notificationListItemContainer'>\r\n        {getAllNotificationState.done &&\r\n          getAllNotificationState.data[0] &&\r\n          getAllNotificationState.data.map((item, index) => {\r\n            return (\r\n              <div\r\n                onClick={() => history.push(`/admin/${item.type}/${item._id}`)}\r\n                className='notificationListItemContainer__item'\r\n              >\r\n                <span className='notificationListItemContainer__item-icon'>\r\n                  {typeIcon[item['type']]}\r\n                </span>\r\n                <div className='notificationListItemContainer__item-info'>\r\n                  <h3>{item.heading}</h3>\r\n                  <h4>{item.text}</h4>\r\n                  <h2>\r\n                    {item.added &&\r\n                      moment(item.added).format('MMMM Do YYYY, h:mm a')}\r\n                  </h2>\r\n                </div>\r\n              </div>\r\n            );\r\n          })}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className='notificationList'>\r\n        <h3 className='notificationList__heading'>Notification</h3>\r\n        {menu()}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NotificationList;\r\n","import React, { useState } from 'react';\r\nimport { Checkbox, Row, Col } from 'antd';\r\ninterface Props {\r\n  checkedList?: any;\r\n  setCheckedList?: any;\r\n  plainOptions?: any;\r\n  defaultValue?: any;\r\n  checkAll?: any;\r\n  setCheckAll?: any;\r\n}\r\n\r\nconst AccessCheckbox = ({\r\n  checkedList,\r\n  setCheckedList,\r\n  plainOptions,\r\n  defaultValue = [],\r\n  checkAll,\r\n  setCheckAll,\r\n}: Props) => {\r\n  const [interminate, setInterminate] = useState(true);\r\n\r\n  const onChange = (checkedList) => {\r\n    setCheckedList(checkedList);\r\n    setInterminate(\r\n      !!checkedList.length && checkedList.length < plainOptions.length\r\n    );\r\n    setCheckAll(checkedList.length === plainOptions.length);\r\n  };\r\n\r\n  const onCheckAllChange = (e) => {\r\n    setCheckedList(e.target.checked ? plainOptions : []);\r\n    setInterminate(false);\r\n    setCheckAll(e.target.checked);\r\n  };\r\n\r\n  console.log('defaultValue', defaultValue);\r\n\r\n  return (\r\n    <>\r\n      <div\r\n        style={{\r\n          borderBottom: '1px solid #eee',\r\n          marginBottom: '10px',\r\n        }}\r\n        className='site-checkbox-all-wrapper'\r\n      >\r\n        <Checkbox\r\n          style={{\r\n            marginBottom: '10px',\r\n          }}\r\n          // indeterminate={interminate}\r\n          onChange={onCheckAllChange}\r\n          checked={checkAll}\r\n        >\r\n          Super Admin\r\n        </Checkbox>\r\n      </div>\r\n      <Checkbox.Group\r\n        style={{ width: '100%' }}\r\n        value={checkedList}\r\n        defaultValue={defaultValue}\r\n        onChange={onChange}\r\n      >\r\n        <Row>\r\n          {plainOptions.map((accessItem) => {\r\n            return (\r\n              <Col\r\n                style={{\r\n                  marginBottom: '10px',\r\n                }}\r\n                span={8}\r\n              >\r\n                <Checkbox value={accessItem}>{accessItem}</Checkbox>\r\n              </Col>\r\n            );\r\n          })}\r\n        </Row>\r\n      </Checkbox.Group>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AccessCheckbox;\r\n","import { combineReducers } from 'redux';\r\nimport * as types from './types';\r\nimport { createReducer } from '../../utils';\r\n\r\n/* State shape\r\n{\r\n    isAuthenticated: bool,\r\n    redirectAfterLogin: string\r\n}\r\n*/\r\n\r\nconst globalState = createReducer({})({\r\n  [types.SAVE_CREDENTIALS]: (state, action) => {\r\n    const credentials = action.payload;\r\n    return credentials;\r\n  },\r\n});\r\n\r\nexport default globalState; ","export const SAVE_CREDENTIALS = \"credentials/SAVE_CREDENTIALS\";\r\n","import * as types from \"./types\";\r\n\r\nexport const saveCredentials = (roles) => ({\r\n    type: types.SAVE_CREDENTIALS,\r\n    payload: roles\r\n});\r\n","import reducer from \"./reducers\";\r\n\r\nimport * as credentialsOperations from \"./operations\";\r\n\r\nexport {\r\n    credentialsOperations,\r\n};\r\n\r\nexport default reducer;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Modal, notification } from 'antd';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport { useHandleFetch } from '../../hooks';\r\nimport {\r\n  CheckCircleOutlined,\r\n  PlusOutlined,\r\n  EditOutlined,\r\n  DeleteOutlined,\r\n  EditFilled,\r\n  InfoCircleOutlined,\r\n} from '@ant-design/icons';\r\nimport AccessCheckbox from './AccessCheckbox';\r\n\r\n// import state\r\nimport { glboalOperations } from '../../state/ducks/globalState';\r\nimport { credentialsOperations } from '../../state/ducks/credentials';\r\nimport { connect } from 'react-redux';\r\nimport { isAccess } from '../../utils';\r\nimport { credentials } from '../../state/ducks';\r\n\r\nconst validationSchema = Yup.object().shape({\r\n  // \tname: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n  //     phone: Yup.string()\r\n  //     .required('Please tell us your mobile number.')\r\n  //     .max(13, 'Please enter a valid mobile number.'),\r\n  //    password: Yup.string()\r\n  //     .label('Password')\r\n  //     .required()\r\n  //     .min(6, 'Password must have at least 6 characters'),\r\n  //   passwordConfirmation: Yup.string()\r\n  //     .label('Confirm password')\r\n  //     .required()\r\n  //     .min(6, 'Confirm password must have at least 6 characters')\r\n  //     .oneOf([Yup.ref('password'), null], 'Passwords must match'),\r\n});\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n  notification.success({\r\n    message: message || 'Admin Updated',\r\n    description: '',\r\n    icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n  });\r\n};\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n  notification.success({\r\n    message: message || 'Something Went Wrong',\r\n    description: '',\r\n    icon: <InfoCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n  });\r\n};\r\n\r\nconst plainOptions = [\r\n  'getCatalogue',\r\n  'postCatalogue',\r\n  'getDelivery',\r\n  'postDelivery',\r\n  'getOrder',\r\n  'postOrder',\r\n  'getBlog',\r\n  'postBlog',\r\n  'getPage',\r\n  'postPage',\r\n  'analytics',\r\n  'accounts',\r\n  'getDealer',\r\n  'postDealer',\r\n];\r\n\r\ninterface Props {\r\n  category: any;\r\n  setvisible: any;\r\n  visible: any;\r\n  tagList: any;\r\n  setTagList: any;\r\n  saveRoles?: any;\r\n  roles;\r\n  credentials;\r\n  saveCredentials;\r\n}\r\n\r\nconst QuickEdit = ({\r\n  category,\r\n  setvisible,\r\n  visible,\r\n  tagList,\r\n  setTagList,\r\n  saveRoles,\r\n  roles,\r\n  saveCredentials,\r\n}: Props) => {\r\n  const [updateTagState, handleUpdateCategoryFetch] = useHandleFetch(\r\n    {},\r\n    'updateAdminRole'\r\n  );\r\n  const [checkAll, setCheckAll] = useState(false);\r\n\r\n  const [accesscheckedList, setAccessCheckedList] = useState([]);\r\n\r\n  useEffect(() => {\r\n    if (category.role && category.role.length > 0) {\r\n      if (category.role.includes('superAdmin')) {\r\n        setCheckAll(true);\r\n        setAccessCheckedList([...plainOptions]);\r\n      } else {\r\n        setAccessCheckedList([...category.role]);\r\n      }\r\n    }\r\n  }, [category]);\r\n\r\n  const handleSubmit = async (values: any, actions: any) => {\r\n    console.log('adminValues', values);\r\n\r\n    let roles = [...accesscheckedList];\r\n    if (checkAll) {\r\n      roles = ['superAdmin'];\r\n    }\r\n\r\n    const updateTagRes = await handleUpdateCategoryFetch({\r\n      urlOptions: {\r\n        placeHolders: {\r\n          id: category._id,\r\n        },\r\n      },\r\n      body: {\r\n        name: values.name,\r\n        access: roles,\r\n        phone: values.phone,\r\n        password: values.password,\r\n        password2: values.passwordConfirmation,\r\n      },\r\n    });\r\n\r\n    // @ts-ignore\r\n    if (updateTagRes && updateTagRes.status === 'ok') {\r\n      openSuccessNotification();\r\n      setvisible(false);\r\n\r\n      const positionInTag = () => {\r\n        return tagList.map((item) => item._id).indexOf(category._id);\r\n      };\r\n\r\n      console.log('updateTagRes', updateTagRes);\r\n\r\n      // if(updateTagRes['role']){\r\n      // \tif(updateTagRes['_id'] === credentials['_id']){\r\n      // \t\tsaveRoles(updateTagRes['role'])\r\n      // \t}\r\n      // }\r\n\r\n      const index = positionInTag();\r\n\r\n      // @ts-ignore\r\n      const updatedItem = Object.assign({}, tagList[index], {\r\n        // @ts-ignore\r\n        ...updateTagRes,\r\n        _id: category._id,\r\n      });\r\n      const updateTagList = [\r\n        ...tagList.slice(0, index),\r\n        updatedItem,\r\n        ...tagList.slice(index + 1),\r\n      ];\r\n      console.log('updateTagList', updateTagList);\r\n      setTagList(updateTagList);\r\n\r\n      actions.resetForm();\r\n    } else {\r\n      openErrorNotification();\r\n    }\r\n\r\n    actions.setSubmitting(false);\r\n  };\r\n\r\n  const handleCancel = (e: any) => {\r\n    setvisible(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!updateTagState['isLoading']) {\r\n      const error = updateTagState['error'];\r\n      if (error['isError'] && Object.keys(error['error']).length > 0) {\r\n        if (error['error']['registerError']) {\r\n          // setServerErrors(error['error']['registerError']);\r\n        } else if (error['error']['checkoutError']) {\r\n          // setServerErrors(error['error']['checkoutError']);\r\n        } else {\r\n          // setServerErrors(error['error']);\r\n        }\r\n\r\n        const errors =\r\n          Object.values(error['error']).length > 0\r\n            ? Object.values(error['error'])\r\n            : [];\r\n        errors.forEach((err, i) => {\r\n          if (typeof err === 'string') {\r\n            openErrorNotification(err);\r\n          } else if (typeof err === 'object') {\r\n            if (err && Object.keys(err).length > 0) {\r\n              const errs = Object.values(err);\r\n              errs.forEach((err) => {\r\n                openErrorNotification(err);\r\n              });\r\n            }\r\n          }\r\n        });\r\n      }\r\n    }\r\n\r\n    if (\r\n      !updateTagState['isLoading'] &&\r\n      Object.keys(updateTagState.data).length > 0\r\n    ) {\r\n      if (updateTagState['data']['status'] === 'ok') {\r\n        // openSuccessNotification('Order Created Successfully');\r\n        // history.push({\r\n        //   pathname: '/orderDetails',\r\n        //   state: checkoutState['data']\r\n        // })\r\n        // clearCart();\r\n        // setIsModalShown(true);\r\n      }\r\n    }\r\n  }, [updateTagState]);\r\n\r\n  return (\r\n    <Formik\r\n      onSubmit={(values, actions) => handleSubmit(values, actions)}\r\n      validationSchema={validationSchema}\r\n      validateOnBlur={false}\r\n      enableReinitialize={true}\r\n      initialValues={{ ...category }}\r\n    >\r\n      {({\r\n        handleChange,\r\n        values,\r\n        handleSubmit,\r\n        errors,\r\n        isValid,\r\n        isSubmitting,\r\n        touched,\r\n        handleBlur,\r\n        setFieldTouched,\r\n        handleReset,\r\n      }) => (\r\n        <>\r\n          {console.log('errors', errors)}\r\n          <Modal\r\n            title='Edit Admin'\r\n            visible={visible}\r\n            onOk={(e: any) => handleSubmit(e)}\r\n            onCancel={handleCancel}\r\n            okText='Update'\r\n            okButtonProps={{\r\n              loading: isSubmitting,\r\n              htmlType: 'submit',\r\n            }}\r\n          >\r\n            <Input\r\n              label='Title'\r\n              value={values.name}\r\n              name='name'\r\n              isError={\r\n                (touched.name && errors.name) ||\r\n                (!isSubmitting && updateTagState.error['error']['name'])\r\n              }\r\n              errorString={\r\n                (touched.name && errors.name) ||\r\n                (!isSubmitting && updateTagState.error['error']['name'])\r\n              }\r\n              onChange={(e: any) => {\r\n                handleChange(e);\r\n                setFieldTouched('name');\r\n              }}\r\n            />\r\n\r\n            <h3 className='inputFieldLabel'>Select Admin Access</h3>\r\n\r\n            <AccessCheckbox\r\n              defaultValue={category.role}\r\n              checkAll={checkAll}\r\n              setCheckAll={setCheckAll}\r\n              plainOptions={plainOptions}\r\n              checkedList={accesscheckedList}\r\n              setCheckedList={setAccessCheckedList}\r\n            />\r\n\r\n            <div\r\n              style={{\r\n                marginTop: '20px',\r\n                marginBottom: '20px',\r\n              }}\r\n            >\r\n              <div\r\n                style={{\r\n                  borderBottom: '1px solid #eee',\r\n                  marginBottom: '15px',\r\n                  marginTop: '15px',\r\n                }}\r\n              >\r\n                <h3 className='inputFieldLabel'>\r\n                  Phone and password is required to update admin *\r\n                </h3>\r\n              </div>\r\n\r\n              <Input\r\n                label='Phone'\r\n                value={values.phone}\r\n                name='phone'\r\n                isError={\r\n                  (touched.phone && errors.phone) ||\r\n                  (!isSubmitting && updateTagState.error['error']['phone'])\r\n                }\r\n                errorString={\r\n                  (touched.phone && errors.phone) ||\r\n                  (!isSubmitting && updateTagState.error['error']['phone'])\r\n                }\r\n                onChange={(e: any) => {\r\n                  handleChange(e);\r\n                  setFieldTouched('phone');\r\n                }}\r\n              />\r\n\r\n              <Input\r\n                label='Password'\r\n                value={values.password}\r\n                name='password'\r\n                type='password'\r\n                isError={\r\n                  (touched.password && errors.password) ||\r\n                  (!isSubmitting && updateTagState.error['error']['password'])\r\n                }\r\n                errorString={\r\n                  (touched.password && errors.password) ||\r\n                  (!isSubmitting && updateTagState.error['error']['password'])\r\n                }\r\n                onChange={(e: any) => {\r\n                  handleChange(e);\r\n                  setFieldTouched('password');\r\n                }}\r\n              />\r\n\r\n              <Input\r\n                label='Confirm Password'\r\n                value={values.passwordConfirmation}\r\n                name='passwordConfirmation'\r\n                type='password'\r\n                isError={\r\n                  (touched.passwordConfirmation &&\r\n                    errors.passwordConfirmation) ||\r\n                  (!isSubmitting && updateTagState.error['error']['password2'])\r\n                }\r\n                errorString={\r\n                  (touched.passwordConfirmation &&\r\n                    errors.passwordConfirmation) ||\r\n                  (!isSubmitting && updateTagState.error['error']['password2'])\r\n                }\r\n                onChange={(e: any) => {\r\n                  handleChange(e);\r\n                  setFieldTouched('passwordConfirmation');\r\n                }}\r\n              />\r\n            </div>\r\n          </Modal>\r\n        </>\r\n      )}\r\n    </Formik>\r\n  );\r\n};\r\n\r\nconst mapDispathToProps = {\r\n  saveRoles: glboalOperations.saveRoles,\r\n  saveCredentials: credentialsOperations.saveCredentials,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  roles: state.globalState,\r\n  credentials: state.credentials,\r\n});\r\n\r\n// @ts-ignore\r\nexport default connect(mapStateToProps, mapDispathToProps)(QuickEdit);\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\nimport { useHandleFetch } from '../../hooks';\r\n// import third party ui lib\r\nimport {\r\n  Upload,\r\n  message,\r\n  Switch,\r\n  Select,\r\n  Button,\r\n  notification,\r\n  Modal,\r\n  Tooltip,\r\n} from 'antd';\r\n\r\nimport {\r\n  FileOutlined,\r\n  InboxOutlined,\r\n  FileAddOutlined,\r\n  DeleteOutlined,\r\n  CheckCircleOutlined,\r\n  CloseOutlined,\r\n  CheckOutlined,\r\n  InfoCircleOutlined,\r\n  PlusOutlined,\r\n  FileImageFilled,\r\n} from '@ant-design/icons';\r\n\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport MediaLibrary from '../../components/MediaLibrary';\r\nimport AccessCheckbox from './AccessCheckbox';\r\n\r\nconst validationSchema = Yup.object().shape({\r\n  //     name: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n  //     phone: Yup.string()\r\n  //     .required('Please tell us your mobile number.')\r\n  //     .max(13, 'Please enter a valid mobile number.'),\r\n  //    password: Yup.string()\r\n  //     .label('Password')\r\n  //     .required(),\r\n  //   passwordConfirmation: Yup.string()\r\n  //     .label('Confirm password')\r\n  //     .required()\r\n  //     .oneOf([Yup.ref('password'), null], 'Passwords must match'),\r\n});\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n  notification.success({\r\n    message: message || 'Admin Created',\r\n    description: '',\r\n    icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n  });\r\n};\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n  notification.error({\r\n    message: message || 'Something Went Wrong',\r\n    description: '',\r\n    icon: <InfoCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n  });\r\n};\r\n\r\nconst initialValues = {\r\n  name: '',\r\n  phone: '',\r\n  email: '',\r\n  password: '',\r\n  passwordConfirmation: '',\r\n  access: [],\r\n};\r\n\r\nconst plainOptions = [\r\n  'getCatalogue',\r\n  'postCatalogue',\r\n  'getDelivery',\r\n  'postDelivery',\r\n  'getOrder',\r\n  'postOrder',\r\n  'getBlog',\r\n  'postBlog',\r\n  'getPage',\r\n  'postPage',\r\n  'analytics',\r\n  'accounts',\r\n  'getDealer',\r\n  'postDealer',\r\n];\r\n\r\ninterface Props {\r\n  addNewCategoryVisible?: any;\r\n  setAddNewCategoryVisible?: any;\r\n  tagList?: any;\r\n  setTagList?: any;\r\n}\r\n\r\nconst AddNewAdminRoles = ({\r\n  addNewCategoryVisible,\r\n  setAddNewCategoryVisible,\r\n  tagList,\r\n  setTagList,\r\n}: Props) => {\r\n  const [addTagState, handleAddTagFetch] = useHandleFetch(\r\n    {},\r\n    'adminRoleRegister'\r\n  );\r\n  const [myImages, setmyImages] = useState(false);\r\n  const [visibleMedia, setvisibleMedia] = useState(false);\r\n  const [accesscheckedList, setAccessCheckedList] = useState([]);\r\n  const [checkAll, setCheckAll] = useState(false);\r\n\r\n  const handleSubmit = async (values: any, actions: any) => {\r\n    let roles = [...accesscheckedList];\r\n    if (checkAll) {\r\n      roles = ['superAdmin'];\r\n    }\r\n    const addTagRes = await handleAddTagFetch({\r\n      body: {\r\n        name: values.name.trim(),\r\n        email: values.email.trim(),\r\n        phone: values.phone,\r\n        password: values.password,\r\n        password2: values.passwordConfirmation,\r\n        access: roles,\r\n      },\r\n    });\r\n\r\n    // @ts-ignore\r\n    if (addTagRes && addTagRes.status === 'ok') {\r\n      // openSuccessNotification();\r\n\r\n      setTagList([\r\n        ...tagList,\r\n        {\r\n          // @ts-ignore\r\n          ...addTagRes,\r\n          id: addTagRes['id'] || '',\r\n          key: addTagRes['id'] || '',\r\n          name: addTagRes['name'] || '',\r\n        },\r\n      ]);\r\n      actions.resetForm();\r\n      setAddNewCategoryVisible(false);\r\n    } else {\r\n      openErrorNotification();\r\n    }\r\n\r\n    actions.setSubmitting(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!addTagState['isLoading']) {\r\n      const error = addTagState['error'];\r\n      if (error['isError'] && Object.keys(error['error']).length > 0) {\r\n        if (error['error']['registerError']) {\r\n          // setServerErrors(error['error']['registerError']);\r\n        } else if (error['error']['checkoutError']) {\r\n          // setServerErrors(error['error']['checkoutError']);\r\n        } else {\r\n          // setServerErrors(error['error']);\r\n        }\r\n\r\n        const errors =\r\n          Object.values(error['error']).length > 0\r\n            ? Object.values(error['error'])\r\n            : [];\r\n        errors.forEach((err, i) => {\r\n          if (typeof err === 'string') {\r\n            openErrorNotification(err);\r\n          } else if (typeof err === 'object') {\r\n            if (err && Object.keys(err).length > 0) {\r\n              const errs = Object.values(err);\r\n              errs.forEach((err) => {\r\n                openErrorNotification(err);\r\n              });\r\n            }\r\n          }\r\n        });\r\n      }\r\n    }\r\n\r\n    if (!addTagState['isLoading'] && Object.keys(addTagState.data).length > 0) {\r\n      if (addTagState['data']['status'] === 'ok') {\r\n        openSuccessNotification('Admin Created Successfully');\r\n        // history.push({\r\n        //   pathname: '/orderDetails',\r\n        //   state: checkoutState['data']\r\n        // })\r\n\r\n        // clearCart();\r\n        // setIsModalShown(true);\r\n      }\r\n    }\r\n  }, [addTagState]);\r\n\r\n  const handleCancel = (e: any) => {\r\n    setAddNewCategoryVisible(false);\r\n  };\r\n\r\n  const getisSubmitButtonDisabled = (values, isValid) => {\r\n    if (\r\n      !values.name ||\r\n      !values.phone ||\r\n      !values.password ||\r\n      !values.passwordConfirmation ||\r\n      !isValid\r\n    ) {\r\n      return true;\r\n    }\r\n    return false;\r\n  };\r\n\r\n  return (\r\n    <Formik\r\n      onSubmit={(values, actions) => handleSubmit(values, actions)}\r\n      validationSchema={validationSchema}\r\n      validateOnBlur={false}\r\n      enableReinitialize={true}\r\n      initialValues={{ ...initialValues }}\r\n    >\r\n      {({\r\n        handleChange,\r\n        values,\r\n        handleSubmit,\r\n        errors,\r\n        isValid,\r\n        isSubmitting,\r\n        touched,\r\n        handleBlur,\r\n        setFieldTouched,\r\n        handleReset,\r\n      }) => (\r\n        <>\r\n          <Modal\r\n            style={{\r\n              top: '40px',\r\n            }}\r\n            title='Register New Admin'\r\n            visible={addNewCategoryVisible}\r\n            onOk={(e: any) => handleSubmit(e)}\r\n            onCancel={handleCancel}\r\n            okText='Create'\r\n            okButtonProps={{\r\n              loading: isSubmitting,\r\n              htmlType: 'submit',\r\n              disabled: getisSubmitButtonDisabled(values, isValid),\r\n            }}\r\n          >\r\n            <Input\r\n              label='Name'\r\n              value={values.name}\r\n              name='name'\r\n              isError={\r\n                (touched.name && errors.name) ||\r\n                (!isSubmitting && addTagState.error['error']['name'])\r\n              }\r\n              errorString={\r\n                (touched.name && errors.name) ||\r\n                (!isSubmitting && addTagState.error['error']['name'])\r\n              }\r\n              onChange={(e: any) => {\r\n                handleChange(e);\r\n                setFieldTouched('name');\r\n              }}\r\n            />\r\n\r\n            <Input\r\n              label='Phone'\r\n              value={values.phone}\r\n              name='phone'\r\n              isError={\r\n                (touched.phone && errors.phone) ||\r\n                (!isSubmitting && addTagState.error['error']['phone'])\r\n              }\r\n              errorString={\r\n                (touched.phone && errors.phone) ||\r\n                (!isSubmitting && addTagState.error['error']['phone'])\r\n              }\r\n              onChange={(e: any) => {\r\n                handleChange(e);\r\n                setFieldTouched('phone');\r\n              }}\r\n            />\r\n\r\n            <Input\r\n              label='Email'\r\n              value={values.email}\r\n              name='email'\r\n              isError={\r\n                (touched.email && errors.email) ||\r\n                (!isSubmitting && addTagState.error['error']['email'])\r\n              }\r\n              errorString={\r\n                (touched.email && errors.email) ||\r\n                (!isSubmitting && addTagState.error['error']['email'])\r\n              }\r\n              onChange={(e: any) => {\r\n                handleChange(e);\r\n                setFieldTouched('email');\r\n              }}\r\n            />\r\n\r\n            <Input\r\n              label='Password'\r\n              value={values.password}\r\n              name='password'\r\n              type='password'\r\n              isError={\r\n                (touched.password && errors.password) ||\r\n                (!isSubmitting && addTagState.error['error']['password'])\r\n              }\r\n              errorString={\r\n                (touched.password && errors.password) ||\r\n                (!isSubmitting && addTagState.error['error']['password'])\r\n              }\r\n              onChange={(e: any) => {\r\n                handleChange(e);\r\n                setFieldTouched('password');\r\n              }}\r\n            />\r\n\r\n            <Input\r\n              label='Confirm Password'\r\n              value={values.passwordConfirmation}\r\n              name='passwordConfirmation'\r\n              type='password'\r\n              isError={\r\n                (touched.passwordConfirmation && errors.passwordConfirmation) ||\r\n                (!isSubmitting &&\r\n                  addTagState.error['error']['passwordConfirmation'])\r\n              }\r\n              errorString={\r\n                (touched.passwordConfirmation && errors.passwordConfirmation) ||\r\n                (!isSubmitting && addTagState.error['error']['password2'])\r\n              }\r\n              onChange={(e: any) => {\r\n                handleChange(e);\r\n                setFieldTouched('passwordConfirmation');\r\n              }}\r\n            />\r\n\r\n            <h3 className='inputFieldLabel'>Select Admin Access</h3>\r\n\r\n            <AccessCheckbox\r\n              checkAll={checkAll}\r\n              setCheckAll={setCheckAll}\r\n              plainOptions={plainOptions}\r\n              checkedList={accesscheckedList}\r\n              setCheckedList={setAccessCheckedList}\r\n            />\r\n          </Modal>\r\n\r\n          <MediaLibrary\r\n            setvisible={setvisibleMedia}\r\n            visible={visibleMedia}\r\n            setmyImages={setmyImages}\r\n            myImages={myImages}\r\n            isModalOpenForImages={true}\r\n          />\r\n        </>\r\n      )}\r\n    </Formik>\r\n  );\r\n};\r\n\r\nexport default AddNewAdminRoles;\r\n","import React, { useState, useEffect } from 'react';\r\n\r\n// import third party ui lib\r\nimport {\r\n  Empty,\r\n  Popconfirm,\r\n  Upload,\r\n  message,\r\n  Switch,\r\n  Select,\r\n  Tag,\r\n  Button,\r\n  notification,\r\n  Table,\r\n  Space,\r\n  Input as CoolInput,\r\n  Tooltip,\r\n  Modal,\r\n} from 'antd';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { useHistory } from 'react-router';\r\n\r\nimport {\r\n  FileOutlined,\r\n  InboxOutlined,\r\n  RadiusUpleftOutlined,\r\n  RadiusUprightOutlined,\r\n  RadiusBottomleftOutlined,\r\n  RadiusBottomrightOutlined,\r\n  PlusOutlined,\r\n  DeleteOutlined,\r\n  EditOutlined,\r\n  CheckCircleOutlined,\r\n} from '@ant-design/icons';\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n/// import hooks\r\nimport { useFetch, useHandleFetch } from '../../hooks';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport { DataTableSkeleton } from '../../components/Placeholders';\r\nimport QuickEdit from './QuickEdit';\r\nimport AddNewAdmin from './AddNewAdmin';\r\n\r\nimport { connect } from 'react-redux';\r\nimport { isAccess } from '../../utils';\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n  notification.success({\r\n    message: message || 'Admin Created',\r\n    description: '',\r\n    icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n  });\r\n};\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n  notification.error({\r\n    message: message || 'Something Went Wrong',\r\n    description: '',\r\n    icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n  });\r\n};\r\n\r\nconst validationSchema = Yup.object().shape({\r\n  name: Yup.string()\r\n    .label('Name')\r\n    .required('Name is required')\r\n    .min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\nconst initialValues = {\r\n  name: '',\r\n  description: '',\r\n};\r\n\r\nconst { Column, ColumnGroup } = Table;\r\nconst { Search } = CoolInput;\r\n\r\nconst MyTable = ({ data, setTagList, roles }) => {\r\n  const [visible, setvisible] = useState(false);\r\n  const [activeCategoryForEdit, setactiveCategoryForEdit] = useState(false);\r\n  const [deleteTagState, handleDeleteTagFetch] = useHandleFetch(\r\n    {},\r\n    'deleteAdmin'\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (!deleteTagState['isLoading']) {\r\n      const error = deleteTagState['error'];\r\n      if (error['isError'] && Object.keys(error['error']).length > 0) {\r\n        if (error['error']['registerError']) {\r\n          // setServerErrors(error['error']['registerError']);\r\n        } else if (error['error']['checkoutError']) {\r\n          // setServerErrors(error['error']['checkoutError']);\r\n        } else {\r\n          // setServerErrors(error['error']);\r\n        }\r\n\r\n        const errors =\r\n          Object.values(error['error']).length > 0\r\n            ? Object.values(error['error'])\r\n            : [];\r\n        errors.forEach((err, i) => {\r\n          if (typeof err === 'string') {\r\n            openErrorNotification(err);\r\n          } else if (typeof err === 'object') {\r\n            if (err && Object.keys(err).length > 0) {\r\n              const errs = Object.values(err);\r\n              errs.forEach((err) => {\r\n                openErrorNotification(err);\r\n              });\r\n            }\r\n          }\r\n        });\r\n      }\r\n    }\r\n\r\n    if (\r\n      !deleteTagState['isLoading'] &&\r\n      Object.keys(deleteTagState.data).length > 0\r\n    ) {\r\n      if (deleteTagState['data']['status'] === 'ok') {\r\n        openSuccessNotification('Admin Deleted!');\r\n        // history.push({\r\n        //   pathname: '/orderDetails',\r\n        //   state: checkoutState['data']\r\n        // })\r\n\r\n        // clearCart();\r\n        // setIsModalShown(true);\r\n      }\r\n    }\r\n  }, [deleteTagState]);\r\n\r\n  const history = useHistory();\r\n\r\n  const handleDeleteTag = async (id) => {\r\n    const deleteTagRes = await handleDeleteTagFetch({\r\n      urlOptions: {\r\n        placeHolders: {\r\n          id,\r\n        },\r\n      },\r\n    });\r\n\r\n    // @ts-ignore\r\n    if (deleteTagRes && deleteTagRes.status === 'ok') {\r\n      // openSuccessNotification('Deleted Admin');\r\n      const newtagList = data.filter((item) => item._id !== id);\r\n      setTagList(newtagList);\r\n    }\r\n  };\r\n\r\n  const handleOk = (e: any) => {\r\n    setvisible(false);\r\n  };\r\n\r\n  const handleCancel = (e: any) => {\r\n    setvisible(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Table\r\n        // expandable={{\r\n        //     expandedRowRender: record => <p style={{ margin: 0 }}>{record.name}</p>,\r\n        //     rowExpandable: record => record.name !== 'Not Expandable',\r\n        //   }}\r\n        // bordered={true}\r\n        size='small'\r\n        // pagination={false}\r\n        dataSource={data}\r\n      >\r\n        <Column\r\n          title='Name'\r\n          dataIndex='name'\r\n          key='id'\r\n          className='classnameofthecolumn'\r\n          render={(text, record: any) => (\r\n            <>\r\n              <h4\r\n                onClick={() => {\r\n                  // history.push(`/admin/tag/${record.id}`)\r\n                  // setBrandDetailVisible(true);\r\n                  setactiveCategoryForEdit(record);\r\n                }}\r\n                style={{\r\n                  fontWeight: 400,\r\n                  color: '#555',\r\n                  //   cursor: 'pointer',\r\n                }}\r\n              >\r\n                {text}\r\n              </h4>\r\n            </>\r\n          )}\r\n        />\r\n\r\n        <Column\r\n          title='Email'\r\n          dataIndex='email'\r\n          key='id'\r\n          className='classnameofthecolumn'\r\n        />\r\n\r\n        <Column\r\n          title='Phone'\r\n          dataIndex='phone'\r\n          key='id'\r\n          className='classnameofthecolumn'\r\n        />\r\n\r\n        <Column\r\n          width={250}\r\n          title='Roles'\r\n          dataIndex='role'\r\n          key='role'\r\n          className='classnameofthecolumn'\r\n          render={(tags) => (\r\n            <>\r\n              {tags &&\r\n                tags.length > 0 &&\r\n                tags.map((tag) => (\r\n                  <Tag\r\n                    style={{\r\n                      borderRadius: '5px',\r\n                      marginBottom: '5px',\r\n                    }}\r\n                    color='blue'\r\n                    key={tag}\r\n                  >\r\n                    {tag}\r\n                  </Tag>\r\n                ))}\r\n\r\n              {/* {tags && tags.length === 3 && '.......'} */}\r\n            </>\r\n          )}\r\n        />\r\n\r\n        {isAccess('superAdmin', roles) && (\r\n          <Column\r\n            className='classnameofthecolumn'\r\n            title=''\r\n            key='action'\r\n            align='right'\r\n            render={(text, record: any) => (\r\n              <Space size='middle'>\r\n                <a href='##'>\r\n                  <Tooltip placement='top' title='Edit Admin'>\r\n                    <span\r\n                      className='iconSize'\r\n                      onClick={() => {\r\n                        setvisible(true);\r\n                        setactiveCategoryForEdit(record);\r\n                      }}\r\n                    >\r\n                      <EditOutlined />\r\n                    </span>\r\n                  </Tooltip>\r\n                </a>\r\n\r\n                <Popconfirm\r\n                  onConfirm={() => handleDeleteTag(record._id)}\r\n                  title='Are you sure？'\r\n                  okText='Yes'\r\n                  cancelText='No'\r\n                >\r\n                  <span className='iconSize iconSize-danger'>\r\n                    <DeleteOutlined />\r\n                  </span>\r\n                </Popconfirm>\r\n              </Space>\r\n            )}\r\n          />\r\n        )}\r\n      </Table>\r\n\r\n      {activeCategoryForEdit && (\r\n        <QuickEdit\r\n          tagList={data}\r\n          setTagList={setTagList}\r\n          setvisible={setvisible}\r\n          visible={visible}\r\n          category={activeCategoryForEdit}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\ninterface Props {\r\n  roles?: any;\r\n}\r\n\r\nconst TagList = ({ roles }: Props) => {\r\n  const [tagList, setTagList] = useState([]);\r\n\r\n  const [tagState, handleTagListFetch] = useHandleFetch({}, 'adminList');\r\n\r\n  useEffect(() => {\r\n    const setTags = async () => {\r\n      const tags = await handleTagListFetch({});\r\n      // @ts-ignore\r\n      setTagList(tags);\r\n    };\r\n    setTags();\r\n  }, []);\r\n\r\n  const [addTagState, handleAddTagFetch] = useHandleFetch({}, 'addTag');\r\n  const [addNewCategoryVisible, setAddNewCategoryVisible] = useState(false);\r\n\r\n  const handleSubmit = async (values: any, actions: any) => {\r\n    const addTagRes = await handleAddTagFetch({\r\n      urlOptions: {\r\n        placeHolders: {\r\n          id: values.id,\r\n        },\r\n      },\r\n      body: {\r\n        name: values.name.trim(),\r\n        description: values.description,\r\n      },\r\n    });\r\n\r\n    // @ts-ignore\r\n    if (addTagRes && addTagRes.status === 'ok') {\r\n      openSuccessNotification();\r\n\r\n      setTagList([\r\n        ...tagList,\r\n        {\r\n          id: addTagRes['id'] || '',\r\n          key: addTagRes['id'] || '',\r\n          name: addTagRes['name'] || '',\r\n          description: addTagRes['description'] || '',\r\n        },\r\n      ]);\r\n      actions.resetForm();\r\n    }\r\n    actions.setSubmitting(false);\r\n  };\r\n\r\n  const getisSubmitButtonDisabled = (values, isValid) => {\r\n    if (!values.name || !isValid) {\r\n      return true;\r\n    }\r\n    return false;\r\n  };\r\n\r\n  const handleOkAddNewCategory = (e: any) => {\r\n    setAddNewCategoryVisible(false);\r\n  };\r\n\r\n  const handleCancelAddNewCategory = (e: any) => {\r\n    setAddNewCategoryVisible(false);\r\n  };\r\n\r\n  const handleSearch = (value) => {\r\n    if (tagState.data.length > 0) {\r\n      const newTagList = tagState.data.filter((item) =>\r\n        item.name.toLowerCase().includes(value.toLowerCase())\r\n      );\r\n      setTagList(newTagList);\r\n    }\r\n  };\r\n\r\n  console.log('adminListState', tagState);\r\n  return (\r\n    <>\r\n      <div className='categoryListContainer'>\r\n        <div className='categoryListContainer__header'>\r\n          <div className='categoryListContainer__header-searchBar-tag'>\r\n            <h2 className='categoryListContainer__header-title'>Admins</h2>\r\n\r\n            <Search\r\n              enterButton={false}\r\n              className='searchbarClassName'\r\n              placeholder='search admins..'\r\n              onChange={(e) => handleSearch(e.target.value)}\r\n            />\r\n          </div>\r\n\r\n          {isAccess('superAdmin', roles) && (\r\n            <Button\r\n              // type=\"primary\"\r\n              className='btnPrimaryClassNameoutline'\r\n              icon={<PlusOutlined />}\r\n              onClick={() => setAddNewCategoryVisible(true)}\r\n            >\r\n              Add New\r\n            </Button>\r\n          )}\r\n        </div>\r\n        <div className='categoryListContainer__categoryList'>\r\n          {tagState.done && tagList.length > 0 && (\r\n            <MyTable roles={roles} setTagList={setTagList} data={tagList} />\r\n          )}\r\n          {tagState.isLoading && <DataTableSkeleton />}\r\n\r\n          {tagState.done && !(tagList.length > 0) && (\r\n            <div\r\n              style={{\r\n                marginTop: '150px',\r\n              }}\r\n            >\r\n              <Empty\r\n                description='No Admin found'\r\n                image={Empty.PRESENTED_IMAGE_SIMPLE}\r\n              />\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <AddNewAdmin\r\n        tagList={tagList}\r\n        setTagList={setTagList}\r\n        addNewCategoryVisible={addNewCategoryVisible}\r\n        setAddNewCategoryVisible={setAddNewCategoryVisible}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  roles: state.globalState,\r\n});\r\n\r\n// @ts-ignore\r\nexport default connect(mapStateToProps, null)(TagList);\r\n","import React, { useState } from 'react';\r\nimport { Modal, notification } from 'antd';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport { useHandleFetch } from '../../hooks';\r\nimport {\r\n  CheckCircleOutlined,\r\n  PlusOutlined,\r\n  EditOutlined,\r\n  DeleteOutlined,\r\n  EditFilled,\r\n  InfoCircleOutlined,\r\n} from '@ant-design/icons';\r\n\r\nconst validationSchema = Yup.object().shape({\r\n  name: Yup.string()\r\n    .label('Name')\r\n    .required('Name is required')\r\n    .min(3, 'Name must have at least 3 characters'),\r\n  description: Yup.string()\r\n    .label('Description')\r\n    .required('Description is required'),\r\n});\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n  notification.success({\r\n    message: message || 'Admin Updated',\r\n    description: '',\r\n    icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n  });\r\n};\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n  notification.success({\r\n    message: message || 'Something Went Wrong',\r\n    description: '',\r\n    icon: <InfoCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n  });\r\n};\r\n\r\ninterface Props {\r\n  tagEditVisible?: any;\r\n  setTagEditVisible?: any;\r\n  tagDetailData?: any;\r\n  setTagDetailData?: any;\r\n}\r\n\r\nconst QuickEdit = ({\r\n  tagEditVisible,\r\n  setTagEditVisible,\r\n  tagDetailData,\r\n  setTagDetailData,\r\n}: Props) => {\r\n  const [updateTagState, handleUpdateCategoryFetch] = useHandleFetch(\r\n    {},\r\n    'updateTag'\r\n  );\r\n  const [checkAll, setCheckAll] = useState(false);\r\n  const handleSubmit = async (values: any, actions: any) => {\r\n    const updateTagRes = await handleUpdateCategoryFetch({\r\n      urlOptions: {\r\n        placeHolders: {\r\n          id: values.id,\r\n        },\r\n      },\r\n      body: {\r\n        name: values.name,\r\n        description: values.description,\r\n      },\r\n    });\r\n\r\n    // @ts-ignore\r\n    if (updateTagRes && updateTagRes.status === 'ok') {\r\n      setTagDetailData({\r\n        id: values.id,\r\n        key: values.id,\r\n        name: values.name,\r\n        description: values.description,\r\n      });\r\n      openSuccessNotification();\r\n\r\n      // const positionInTag = () => {\r\n      //     return tagList.map(item => item.id).indexOf(category.id);\r\n      // }\r\n\r\n      // const index = positionInTag();\r\n\r\n      // const updatedItem = Object.assign({}, tagList[index], { ...updateTagRes });\r\n      // const updateTagList = [...tagList.slice(0, index), updatedItem, ...tagList.slice(index + 1)];\r\n      // setTagList(updateTagList);\r\n    } else {\r\n      openErrorNotification();\r\n    }\r\n\r\n    actions.setSubmitting(false);\r\n    setTagEditVisible(false);\r\n  };\r\n\r\n  const handleCancel = (e: any) => {\r\n    setTagEditVisible(false);\r\n  };\r\n\r\n  const getisSubmitButtonDisabled = (values, isValid) => {\r\n    if (!values.name || !values.description || !isValid) {\r\n      return true;\r\n    }\r\n    return false;\r\n  };\r\n\r\n  return (\r\n    <Formik\r\n      onSubmit={(values, actions) => handleSubmit(values, actions)}\r\n      validationSchema={validationSchema}\r\n      validateOnBlur={false}\r\n      enableReinitialize={true}\r\n      initialValues={{ ...tagDetailData }}\r\n    >\r\n      {({\r\n        handleChange,\r\n        values,\r\n        handleSubmit,\r\n        errors,\r\n        isValid,\r\n        isSubmitting,\r\n        touched,\r\n        handleBlur,\r\n        setFieldTouched,\r\n        handleReset,\r\n      }) => (\r\n        <>\r\n          <Modal\r\n            title='Admin Edit'\r\n            visible={tagEditVisible}\r\n            onOk={(e: any) => handleSubmit(e)}\r\n            onCancel={handleCancel}\r\n            okText='Update'\r\n            okButtonProps={{\r\n              loading: isSubmitting,\r\n              htmlType: 'submit',\r\n              disabled: getisSubmitButtonDisabled(values, isValid),\r\n            }}\r\n          >\r\n            <Input\r\n              label='Title'\r\n              value={values.name}\r\n              name='name'\r\n              isError={\r\n                (touched.name && errors.name) ||\r\n                (!isSubmitting && updateTagState.error['error']['name'])\r\n              }\r\n              errorString={\r\n                (touched.name && errors.name) ||\r\n                (!isSubmitting && updateTagState.error['error']['name'])\r\n              }\r\n              onChange={(e: any) => {\r\n                handleChange(e);\r\n                setFieldTouched('name');\r\n              }}\r\n            />\r\n            <TextArea\r\n              label='Description'\r\n              value={values.description}\r\n              name='description'\r\n              isError={\r\n                (touched.description && errors.description) ||\r\n                (!isSubmitting && updateTagState.error['error']['description'])\r\n              }\r\n              errorString={\r\n                (touched.description && errors.description) ||\r\n                (!isSubmitting && updateTagState.error['error']['description'])\r\n              }\r\n              onChange={(e: any) => {\r\n                handleChange(e);\r\n                setFieldTouched('description');\r\n              }}\r\n            />\r\n          </Modal>\r\n        </>\r\n      )}\r\n    </Formik>\r\n  );\r\n};\r\n\r\nexport default QuickEdit;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useParams, useHistory } from \"react-router\";\r\n\r\n\r\n// import hooks\r\nimport { useHandleFetch } from \"../../hooks\";\r\n\r\n// import lib\r\nimport {\r\n    FileOutlined,\r\n    InboxOutlined,\r\n    RadiusUpleftOutlined,\r\n    RadiusUprightOutlined,\r\n    RadiusBottomleftOutlined,\r\n    RadiusBottomrightOutlined,\r\n    PlusOutlined,\r\n    DeleteOutlined,\r\n    EditOutlined,\r\n    CheckCircleOutlined\r\n} from '@ant-design/icons';\r\n\r\nimport { Skeleton, Empty, Popconfirm, Upload, message, Switch, Select, Button, notification, Table, Space, Input as CoolInput, Tooltip, Modal } from 'antd';\r\n\r\n\r\n// import components\r\nimport { DataTableSkeleton } from \"../../components/Placeholders\";\r\nimport AdminEdit from \"./AdminEdit\";\r\n\r\n\r\nconst { Column, ColumnGroup } = Table;\r\nconst { Search } = CoolInput;\r\n\r\n\r\ninterface Props {\r\n    productRecord?: any;\r\n}\r\n\r\nconst NewBrandDetail = (props: Props) => {\r\n    const [tagDetailState, handleTagDetailFetch] = useHandleFetch({}, 'adminDetail');\r\n    const [tagProductsState, handleTagProductsFetch] = useHandleFetch({}, 'tagProducts');\r\n    const [tagEditVisible, setTagEditVisible] = useState(false);\r\n    const [tagDetailData,setTagDetailData] = useState({}); \r\n\r\n\r\n    const params = useParams();\r\n    const history = useHistory();\r\n    const tagId = params['id'];\r\n\r\n    useEffect(() => {\r\n\r\n        const getBrandDetail = async () => {\r\n            const tagDetailRes =  await handleTagDetailFetch({\r\n                urlOptions: {\r\n                    placeHolders: {\r\n                        id: tagId\r\n                    }\r\n                }\r\n            }); \r\n\r\n            // @ts-ignore\r\n            if(tagDetailRes){\r\n                console.log('tagDetailRes',tagDetailRes);\r\n                // @ts-ignore\r\n                setTagDetailData(tagDetailRes);\r\n            }\r\n        };\r\n\r\n        getBrandDetail();\r\n\r\n    }, [tagId]);\r\n\r\n    useEffect(() => {\r\n        const getTagProducts = async () => {\r\n            await handleTagProductsFetch({\r\n                urlOptions: {\r\n                    placeHolders: {\r\n                        id: tagId\r\n                    }\r\n                }\r\n            })\r\n        };\r\n\r\n        getTagProducts();\r\n\r\n    }, [tagId]);\r\n\r\n\r\n\r\n\r\n    console.log('tagProductsState', tagProductsState);\r\n\r\n    console.log('brandParams', params);\r\n\r\n\r\n    return (\r\n        <div className='brandDetailContainer'>\r\n            <div className='brandDetailContainer__heading'>\r\n                <h3>\r\n                    Admin Detail\r\n                </h3>\r\n\r\n                {tagDetailState.done && tagDetailData && (Object.keys(tagDetailData).length > 0) && (\r\n                    <>\r\n                        <AdminEdit\r\n                            tagEditVisible={tagEditVisible}\r\n                            setTagEditVisible={setTagEditVisible}\r\n                            tagDetailData={tagDetailData}\r\n                            setTagDetailData={setTagDetailData}\r\n                        />\r\n                        <Button\r\n                            onClick={() => setTagEditVisible(true)}\r\n                            type='link'\r\n                            icon={<EditOutlined />}\r\n                        >\r\n                            Edit\r\n                      </Button>\r\n                    </>\r\n                )}\r\n            </div>\r\n            <Skeleton\r\n                paragraph={{ rows: 2 }}\r\n                loading={tagDetailState.isLoading}>\r\n                {tagDetailState.done && tagDetailData && !(Object.keys(tagDetailData).length > 0) && (\r\n                    <Empty description='No Admin found' image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n                )}\r\n\r\n                {tagDetailState.done && tagDetailData && (Object.keys(tagDetailData).length > 0) && (\r\n                    <div className='brandDetailContainer__header'>\r\n\r\n                        <div className='brandDetailContainer__header-info'>\r\n                            <h2>\r\n                                {tagDetailData['name']}\r\n                            </h2>\r\n                            <h3>\r\n                                {tagDetailData['description']}\r\n                            </h3>\r\n                            {tagDetailData['url'] && (\r\n                                <h3>\r\n                                    URL:\r\n                                    <span>\r\n                                        {tagDetailData['url']}\r\n                                    </span>\r\n\r\n                                </h3>\r\n                            )}\r\n                        </div>\r\n                    </div>\r\n                )}\r\n\r\n            </Skeleton>   \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NewBrandDetail\r\n","import React, { useEffect, useState } from 'react';\r\n\r\n// import hooks\r\nimport { useHandleFetch } from '../../hooks';\r\n\r\n// import components\r\nimport Empty from '../../components/Empty';\r\n\r\n// import libraries\r\nimport { Button, Tag, Input, Spin } from 'antd';\r\nimport { PlusOutlined } from '@ant-design/icons';\r\n\r\nconst { CheckableTag } = Tag;\r\nconst { Search } = Input;\r\n\r\ninterface Props {\r\n  setTagIds?: any;\r\n  selectedTags?: any;\r\n  setSelectedTags?: any;\r\n}\r\n\r\nconst Tags = ({ setTagIds, setSelectedTags, selectedTags }: Props) => {\r\n  const [options, setoptions] = useState([]);\r\n  const [selectedOpions, setselectedOptions] = useState([]);\r\n  const [tagState, handleTagListFetch] = useHandleFetch({}, 'postTagList');\r\n  const [searchValue, setsearchValue] = useState('');\r\n\r\n  const handleChange = (tag, checked) => {\r\n    const nextSelectedTags = checked\r\n      ? [...selectedTags, tag]\r\n      : selectedTags.filter((t) => t !== tag);\r\n    setSelectedTags(nextSelectedTags);\r\n\r\n    if (\r\n      tagState.done &&\r\n      tagState.data.length > 0 &&\r\n      nextSelectedTags.length > 0\r\n    ) {\r\n      const selectedCategoryIds = nextSelectedTags.map((item) => {\r\n        const selectedcategory = tagState.data.find(\r\n          (cat) => cat.name.toLowerCase() === item.toLowerCase()\r\n        );\r\n        if (selectedcategory) {\r\n          return selectedcategory.id;\r\n        }\r\n      });\r\n      setTagIds(selectedCategoryIds);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (tagState.done && tagState.data.length > 0 && selectedTags.length > 0) {\r\n      const selectedCategoryIds = selectedTags.map((item) => {\r\n        const selectedcategory = tagState.data.find((cat) => cat.id === item);\r\n        if (selectedcategory) {\r\n          return selectedcategory.name;\r\n        }\r\n      });\r\n      setSelectedTags(selectedCategoryIds);\r\n    }\r\n  }, [tagState]);\r\n\r\n  useEffect(() => {\r\n    const setTags = async () => {\r\n      const tagListRes = await handleTagListFetch({\r\n        urlOptions: {\r\n          params: {\r\n            isSubCategory: false,\r\n          },\r\n        },\r\n      });\r\n\r\n      // @ts-ignoref\r\n      if (tagListRes && tagListRes.length > 0) {\r\n        // @ts-ignore\r\n        const tagOptions = tagListRes.map((tag) => {\r\n          return tag.name;\r\n        });\r\n        setoptions(tagOptions);\r\n      }\r\n    };\r\n\r\n    setTags();\r\n  }, []);\r\n\r\n  // const handleChange = (selectItems) => {\r\n  //   setselectedOptions(selectItems)\r\n\r\n  //   if (tagState.done && tagState.data.length > 0 && selectItems.length > 0) {\r\n  //     const selectedCategoryIds = selectItems.map((item) => {\r\n  //       const selectedcategory = tagState.data.find(\r\n  //         (cat) => cat.name.toLowerCase() === item.toLowerCase()\r\n  //       );\r\n  //       if (selectedcategory) {\r\n  //         return selectedcategory.id;\r\n  //       }\r\n  //     });\r\n  //     setTagIds(selectedCategoryIds);\r\n  //   }\r\n\r\n  // }\r\n\r\n  const onSearchChange = (e) => {\r\n    setsearchValue(e.target.value);\r\n\r\n    if (e.target.value === '') {\r\n      if (tagState.data && tagState.data.length > 0) {\r\n        // @ts-ignore\r\n        const categoryNames = tagState.data.map((cat) => cat.name);\r\n        setoptions(categoryNames);\r\n      }\r\n    } else {\r\n      const newOptions =\r\n        options.length > 0\r\n          ? options.filter((option) => {\r\n              return option.toLowerCase().includes(searchValue.toLowerCase());\r\n            })\r\n          : [];\r\n\r\n      setoptions(newOptions);\r\n    }\r\n  };\r\n\r\n  console.log('selectedTags', selectedTags);\r\n\r\n  return (\r\n    <>\r\n      {tagState.isLoading && (\r\n        <div\r\n          style={{\r\n            padding: '15px 0',\r\n            width: '100%',\r\n            height: '100%',\r\n            display: 'flex',\r\n            justifyContent: 'center',\r\n            alignItems: 'center',\r\n          }}\r\n        >\r\n          <Spin />\r\n        </div>\r\n      )}\r\n\r\n      {tagState.done && (\r\n        <div className='addProduct__categoryBoxContainer-searchBox'>\r\n          <Search\r\n            width={'90%'}\r\n            style={{\r\n              height: '30px',\r\n              borderRadius: '3px !important',\r\n              borderColor: '#eee !important',\r\n            }}\r\n            size='middle'\r\n            placeholder='top, hot'\r\n            onSearch={(value) => console.log(value)}\r\n            onChange={onSearchChange}\r\n          />\r\n        </div>\r\n      )}\r\n\r\n      {tagState.done && !(options.length > 0) && (\r\n        <div\r\n          style={{\r\n            width: '100%',\r\n            height: '100%',\r\n            display: 'flex',\r\n            justifyContent: 'center',\r\n            alignItems: 'center',\r\n          }}\r\n        >\r\n          <Empty title='No tags found' height={100} />\r\n        </div>\r\n      )}\r\n\r\n      {/* \r\n      {tagState.done && tagState.data.length > 0 && options.length > 0 && <Select\r\n        mode=\"multiple\"\r\n        placeholder=\"search tags\"\r\n        value={selectedOpions}\r\n        onChange={handleChange}\r\n        style={{ width: '100%' }}\r\n      >\r\n        {options.filter(o => !selectedOpions.includes(o)).map(item => (\r\n          <Select.Option key={item} value={item}>\r\n            {item}\r\n          </Select.Option>\r\n        ))}\r\n      </Select>} */}\r\n\r\n      {tagState.done && tagState.data.length > 0 && options.length > 0 && (\r\n        <>\r\n          {options.map((tag) => (\r\n            <>\r\n              <CheckableTag\r\n                key={tag}\r\n                checked={selectedTags.indexOf(tag) > -1}\r\n                onChange={(checked) => handleChange(tag, checked)}\r\n              >\r\n                {tag}\r\n              </CheckableTag>\r\n            </>\r\n          ))}\r\n        </>\r\n      )}\r\n\r\n      {/* \r\n      <div style={{\r\n        marginTop: '15px'\r\n      }}>\r\n\r\n      </div>\r\n      <Button\r\n\r\n        // type=\"primary\"\r\n        className='btnSecondaryPlusOutline'\r\n        icon={<PlusOutlined />}\r\n      >\r\n        Add New\r\n      </Button> */}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Tags;\r\n","import React, { useState, useEffect } from 'react';\r\n\r\n// import components\r\nimport Empty from '../../components/Empty';\r\n\r\n// import hoooks\r\nimport { useHandleFetch } from '../../hooks';\r\n\r\n// import libraries\r\nimport { Input, Tree, Button, Spin } from 'antd';\r\nimport { PlusOutlined } from '@ant-design/icons';\r\n\r\nconst { Search } = Input;\r\n\r\ninterface Props {\r\n  setcategoryIds?: any;\r\n  categoryOptions?: any;\r\n  setCategoryOptions?: any;\r\n}\r\n\r\nconst Categories = ({\r\n  setcategoryIds,\r\n  categoryOptions,\r\n  setCategoryOptions,\r\n}: Props) => {\r\n  const [options, setoptions] = useState([]);\r\n  const [searchValue, setsearchValue] = useState('');\r\n\r\n  const [categoryState, handleCategoryListFetch] = useHandleFetch(\r\n    {},\r\n    'postSelectCategoryList'\r\n  );\r\n\r\n  useEffect(() => {\r\n    const setCategories = async () => {\r\n      const categoryListRes = await handleCategoryListFetch({});\r\n\r\n      // @ts-ignore\r\n      if (categoryListRes && categoryListRes.length > 0) {\r\n        // @ts-ignore\r\n        setoptions(categoryListRes);\r\n      }\r\n    };\r\n\r\n    setCategories();\r\n  }, []);\r\n\r\n  const onSelect = (selectedKeys, info) => {\r\n    // console.log('selectedKeys', selectedKeys, info);\r\n  };\r\n\r\n  const onCheck = (checkedKeys, info) => {\r\n    const checkedIds = checkedKeys.checked || [];\r\n    setcategoryIds(checkedIds);\r\n    setCategoryOptions(checkedIds);\r\n  };\r\n\r\n  const onSearchChange = (e) => {\r\n    setsearchValue(e.target.value);\r\n\r\n    if (e.target.value === '') {\r\n      if (categoryState.data && categoryState.data.length > 0) {\r\n        // @ts-ignore\r\n        const categoryNames = categoryState.data.map((cat) => {\r\n          return {\r\n            ...cat,\r\n          };\r\n        });\r\n        setoptions(categoryNames);\r\n      }\r\n    } else {\r\n      const newOptions =\r\n        options.length > 0\r\n          ? options.filter((option) => {\r\n              return (\r\n                option &&\r\n                option.title.toLowerCase().includes(searchValue.toLowerCase())\r\n              );\r\n            })\r\n          : [];\r\n\r\n      setoptions(newOptions);\r\n    }\r\n  };\r\n\r\n  console.log('categoryState', categoryState);\r\n  console.log('optionsCat', options);\r\n\r\n  return (\r\n    <div className='addProduct__categoryBoxContainer'>\r\n      {categoryState.isLoading && (\r\n        <div\r\n          style={{\r\n            padding: '15px 0',\r\n            width: '100%',\r\n            height: '100%',\r\n            display: 'flex',\r\n            justifyContent: 'center',\r\n            alignItems: 'center',\r\n          }}\r\n        >\r\n          <Spin />\r\n        </div>\r\n      )}\r\n\r\n      {categoryState.done && (\r\n        <div className='addProduct__categoryBoxContainer-searchBox'>\r\n          <Search\r\n            width={'100%'}\r\n            style={{\r\n              height: '30px',\r\n              borderRadius: '3px !important',\r\n              borderColor: '#eee !important',\r\n            }}\r\n            size='middle'\r\n            placeholder=''\r\n            onSearch={(value) => console.log(value)}\r\n            onChange={onSearchChange}\r\n          />\r\n        </div>\r\n      )}\r\n\r\n      {categoryState.done &&\r\n        categoryState.data.length > 0 &&\r\n        options.length > 0 && (\r\n          <>\r\n            <div\r\n              style={\r\n                {\r\n                  // marginLeft: \"-20px\",\r\n                }\r\n              }\r\n            >\r\n              {options.length > 0 && (\r\n                <Tree\r\n                  checkable\r\n                  checkedKeys={categoryOptions}\r\n                  onSelect={onSelect}\r\n                  onCheck={onCheck}\r\n                  treeData={options}\r\n                  defaultExpandAll={true}\r\n                  checkStrictly={true}\r\n                />\r\n              )}\r\n            </div>\r\n          </>\r\n        )}\r\n\r\n      {categoryState.done && !(options.length > 0) && (\r\n        <div\r\n          style={{\r\n            width: '100%',\r\n            height: '100%',\r\n            display: 'flex',\r\n            justifyContent: 'center',\r\n            alignItems: 'center',\r\n          }}\r\n        >\r\n          <Empty title='No category found' height={100} />\r\n        </div>\r\n      )}\r\n\r\n      {/* <div style={{\r\n\t\t\t\tmarginTop: '15px'\r\n\t\t\t}}>\r\n\r\n\t\t\t</div>\r\n\t\t\t<Button\r\n\r\n\t\t\t\t// type=\"primary\"\r\n\t\t\t\tclassName='btnSecondaryPlusOutline'\r\n\t\t\t\ticon={<PlusOutlined />}\r\n\t\t\t>\r\n\t\t\t\tAdd New\r\n      </Button> */}\r\n\r\n      {/* <CheckboxGroup options={options} value={checkedList} onChange={onChange} /> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Categories;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useHandleFetch } from '../../hooks';\r\nimport { Select, Skeleton } from 'antd';\r\nimport Empty from \"../../components/Empty\";\r\n\r\n\r\ninterface Props {\r\n    setProductIds?: any;\r\n    productIds?: any;\r\n}\r\n\r\n\r\nconst Tags = ({\r\n    setProductIds,\r\n    productIds\r\n}: Props) => {\r\n    const [options, setoptions] = useState([]);\r\n    const [selectedOpions, setselectedOptions] = useState([]);\r\n    const [tagState, handleTagListFetch] = useHandleFetch({}, 'productList');\r\n\r\n    useEffect(() => {\r\n        const setTags = async () => {\r\n            const tagListRes = await handleTagListFetch({\r\n                urlOptions: {\r\n                    params: {\r\n                        isSubCategory: false\r\n                    }\r\n                }\r\n            });\r\n\r\n            // @ts-ignore\r\n            if (tagListRes && tagListRes.length > 0) {\r\n                // @ts-ignore\r\n                const tagOptions = tagListRes.map((tag) => {\r\n                    return tag.name\r\n                });\r\n                setoptions(tagOptions);\r\n            }\r\n\r\n        };\r\n\r\n        setTags();\r\n    }, []);\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        if(productIds && productIds.length > 0){\r\n            console.log('shippingRunning')\r\n            const selecttedOptions = productIds.map(item => item.name); \r\n            setselectedOptions(selecttedOptions)\r\n        }\r\n    },[productIds]); \r\n\r\n    console.log('OrderProudctItemsProductIds',productIds); \r\n\r\n\r\n\r\n\r\n    const handleChange = (selectItems) => {\r\n        setselectedOptions(selectItems);\r\n\r\n        console.log('selectedProducts', selectItems);\r\n\r\n        if (tagState.done && tagState.data.length > 0 && selectItems.length > 0) {\r\n            const selectedCategoryIds = selectItems.map((item) => {\r\n                const selectedcategory = tagState.data.find(\r\n                    (cat) => cat.name.toLowerCase() === item.toLowerCase()\r\n                );\r\n                if (selectedcategory) {\r\n                    return selectedcategory;\r\n                }\r\n            });\r\n            console.log('selectedCategoryIds', selectedCategoryIds);\r\n            setProductIds(selectedCategoryIds);\r\n        }\r\n        else {\r\n            setProductIds([])\r\n        }\r\n\r\n\r\n    }\r\n\r\n\r\n    // console.log('selectedOpions', selectedOpions);\r\n\r\n\r\n    return (\r\n        <>\r\n\r\n            <Skeleton loading={tagState.isLoading}>\r\n                {tagState.done && tagState.data.length > 0 && <Select\r\n                    mode=\"multiple\"\r\n                    placeholder=\"search products\"\r\n                    value={selectedOpions}\r\n                    onChange={handleChange}\r\n                    style={{ width: '100%' }}\r\n                >\r\n                    {options.filter(o => !selectedOpions.includes(o)).map(item => (\r\n                        <Select.Option key={item} value={item}>\r\n                            {item}\r\n                        </Select.Option>\r\n                    ))}\r\n                </Select>}\r\n                {tagState.done && tagState.data && !(tagState.data.length > 0) && (\r\n                    <div style={{\r\n                        marginLeft: '32px'\r\n                    }}>\r\n                        <Empty title='No Product Found' height={150} />\r\n                    </div>\r\n                )}\r\n\r\n            </Skeleton>\r\n\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Tags\r\n","import React from 'react'\r\n\r\n\r\n// import components\r\nimport AddNewOrderProductItem from \"../order/AddNewOrderProductItem\";\r\nimport Empty from \"../../components/Empty\";\r\n\r\nimport {\r\n    ShopOutlined\r\n} from '@ant-design/icons';\r\n\r\n\r\ninterface Props {\r\n    productList?: any;\r\n    setProductList?: any;\r\n}\r\n\r\nconst AddNewOrderSummary = ({\r\n    setProductList,\r\n    productList\r\n}: Props) => {\r\n    return (\r\n        <div\r\n            style={{\r\n                // @ts-ignore\r\n                flexDirection: 'flex'\r\n            }}\r\n            className='addOrderContainer__container-orderSummary'>\r\n            <div className='addOrderContainer__container-productItemContainer'>\r\n                {productList && productList.length > 0 && productList.map(item => {\r\n                    return <AddNewOrderProductItem\r\n                        setProductList={setProductList}\r\n                        productList={productList}\r\n                        productId={item._id}\r\n                        quantity={item.quantity}\r\n                        item={item}\r\n                        variation={item.variation}\r\n                    />;\r\n                })}\r\n\r\n                {!(productList.length > 0) && (\r\n                    <div style={{\r\n                        marginLeft: '32px'\r\n                    }}>\r\n                        <Empty title='No Product Added' height={150} />\r\n                    </div>\r\n                )}\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddNewOrderSummary\r\n","// @ts-nocheck\r\nimport React, { useState, useEffect } from 'react';\r\n\r\n// import hooks\r\nimport { useHandleFetch } from '../../hooks';\r\n\r\n// import libraries\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport {\r\n  message,\r\n  Tooltip,\r\n  Modal,\r\n  Tabs,\r\n  Empty,\r\n  Badge,\r\n  Spin,\r\n  Button,\r\n} from 'antd';\r\nimport CKEditor from '@ckeditor/ckeditor5-react';\r\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\r\n\r\nimport {\r\n  DeleteOutlined,\r\n  FileAddOutlined,\r\n  CheckCircleOutlined,\r\n  FileImageFilled,\r\n  PlusOutlined,\r\n  PlusCircleOutlined,\r\n  CloseOutlined,\r\n  CheckOutlined,\r\n  InfoCircleOutlined,\r\n} from '@ant-design/icons';\r\n\r\n// import ReactQuill from 'react-quill';\r\n// import 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport MediaLibrary from '../../components/MediaLibrary';\r\nimport {\r\n  openSuccessNotification,\r\n  openErrorNotification,\r\n} from '../../components/Notification';\r\nimport MetaTags from '../category/MetaTags';\r\n\r\nimport Tags from './Tags';\r\nimport Brands from './Brands';\r\nimport Categories from './Categories';\r\nimport SelectProducts from './SelectProducts';\r\nimport SelectedProductItems from './SelectedProductItems';\r\n\r\nconst { TabPane } = Tabs;\r\n\r\nconst validationSchema = Yup.object().shape({\r\n  name: Yup.string()\r\n    .label('Name')\r\n    .required('Name is required')\r\n    .min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\nconst initialValues = {\r\n  name: '',\r\n  url: '',\r\n  preparationTime: '',\r\n  servingSize: '',\r\n  cookingTime: '',\r\n  body: '',\r\n  bnName: '',\r\n  bnBody: '',\r\n  bnPreparationTime: '',\r\n  bnServingSize: '',\r\n  bnCookingTime: '',\r\n  metaTitle: '',\r\n  bnMetaTitle: '',\r\n  metaDescription: '',\r\n  bnMetaDescription: '',\r\n  metaTags: '',\r\n  bnMetaTags: '',\r\n};\r\n\r\ninterface Props {\r\n  addNewCategoryVisible: any;\r\n  setAddNewCategoryVisible: any;\r\n  productList?: any;\r\n  setProductList?: any;\r\n  productDetailData?: any;\r\n}\r\n\r\nconst ModalComponentChild = ({\r\n  addNewCategoryVisible,\r\n  setAddNewCategoryVisible,\r\n  productList: bundleList,\r\n  setProductList: setBundleList,\r\n  productDetailData,\r\n}) => {\r\n  const [addProductState, handleAddProductFetch] = useHandleFetch(\r\n    {},\r\n    'updatePost'\r\n  );\r\n  const [productDetailState, handleProductDetailFetch] = useHandleFetch(\r\n    {},\r\n    'postDetail'\r\n  );\r\n  const [visible, setvisible] = useState(false);\r\n  const [myImages, setmyImages] = useState(false);\r\n  const [myThumbnailImage, setmyThumbnailImage] = useState(false);\r\n  const [isModalOpenForThumbnail, setisModalOpenForThumbnail] = useState(false);\r\n  const [isModalOpenForImages, setisModalOpenForImages] = useState(false);\r\n  const [categoryids, setcategoryIds] = useState([]);\r\n  const [tagIds, setTagIds] = useState([]);\r\n  const [brandId, setBrandId] = useState('');\r\n  const [pricing, setPricing] = useState([]);\r\n  const [coverImageId, setCoverImageId] = useState('');\r\n  const [categoryOptions, setCategoryOptions] = useState([]);\r\n  const [selectedTags, setSelectedTags] = useState([]);\r\n  const [body, setBody] = useState('');\r\n  const [bnBody, setBnBody] = useState('');\r\n  const [productIds, setProductIds] = useState([]);\r\n  const [productList, setProductList] = useState([]);\r\n  const [metaTags, setMetaTags] = useState([]);\r\n  const [bnMetaTags, setBnMetaTags] = useState([]);\r\n\r\n  const [\r\n    attachImageToItemMultipleState,\r\n    handleAttachImageToItemMultipleFetch,\r\n  ] = useHandleFetch({}, 'attachImageToItemMultiple');\r\n  const [\r\n    attachImageToItemSingleState,\r\n    handleAttachImageToItemSingleFetch,\r\n  ] = useHandleFetch({}, 'attachImageToItemSingle');\r\n  const [\r\n    detachImageFromItemMultipleState,\r\n    handleDetachImageFromItemMultipleFetch,\r\n  ] = useHandleFetch({}, 'detachImageFromItemMultiple');\r\n  const [\r\n    detachImageFromItemSingleState,\r\n    handleDetachImageFromItemSingleFetch,\r\n  ] = useHandleFetch({}, 'detachImageFromItemSingle');\r\n  const [\r\n    setImageAsThumbnailToItemState,\r\n    handleSetImageAsThumbnailToItemFetch,\r\n  ] = useHandleFetch({}, 'setImageAsThumbnailToItem');\r\n\r\n  console.log('myPostState', productDetailState);\r\n  useEffect(() => {\r\n    const getProductDetail = async () => {\r\n      await handleProductDetailFetch({\r\n        urlOptions: {\r\n          placeHolders: {\r\n            id: productDetailData.id,\r\n          },\r\n          params: {\r\n            imageValue: 1,\r\n            tagsOne: '1',\r\n            categoryOne: '1',\r\n          },\r\n        },\r\n      });\r\n    };\r\n\r\n    getProductDetail();\r\n  }, [productDetailData]);\r\n\r\n  useEffect(() => {\r\n    if (\r\n      productDetailState.data &&\r\n      Object.keys(productDetailState.data).length > 0\r\n    ) {\r\n      const images = productDetailState.data.image;\r\n      let mahImages = [];\r\n\r\n      if (images && images.length > 0) {\r\n        mahImages = images;\r\n      }\r\n\r\n      if (\r\n        productDetailState.data.cover &&\r\n        productDetailState.data.cover['id']\r\n      ) {\r\n        const ixists = images.find(\r\n          (item) => item.id === productDetailState.data.cover['id']\r\n        );\r\n        if (!ixists) {\r\n          mahImages = [productDetailState.data.cover, ...mahImages];\r\n        }\r\n\r\n        setCoverImageId(productDetailState.data.cover['id']);\r\n      }\r\n\r\n      // @ts-ignore\r\n      setmyImages(mahImages);\r\n    }\r\n  }, [productDetailState.data]);\r\n\r\n  useEffect(() => {\r\n    // @ts-ignore\r\n    if (myImages && myImages[0] && myImages.length < 2) {\r\n      if (coverImageId !== myImages[0].id) {\r\n        setCoverImageId(myImages[0].id);\r\n        handleSetImageAsThumnail(myImages[0]);\r\n      }\r\n    }\r\n  }, [myImages]);\r\n\r\n  console.log('myLoadImages', myImages);\r\n\r\n  const handleDetachSingleImage = async (id) => {\r\n    await handleDetachImageFromItemSingleFetch({\r\n      urlOptions: {\r\n        placeHolders: {\r\n          imageId: id,\r\n          collection: 'post',\r\n          itemId: productDetailData.id,\r\n        },\r\n      },\r\n    });\r\n  };\r\n\r\n  const handleSetImageAsThumnail = async (image) => {\r\n    const thumbnailRes = await handleSetImageAsThumbnailToItemFetch({\r\n      urlOptions: {\r\n        placeHolders: {\r\n          imageId: image.id,\r\n          collection: 'post',\r\n          itemId: productDetailData.id,\r\n        },\r\n      },\r\n    });\r\n\r\n    // @ts-ignore\r\n    if (thumbnailRes && thumbnailRes.status === 'ok') {\r\n      // openSuccessNotification('Set as thumbnail!');\r\n    } else {\r\n      openErrorNotification(\"Couldn't set as thumbnail, Something went wrong\");\r\n    }\r\n  };\r\n\r\n  const handleImagesDelete = (id) => {\r\n    // @ts-ignore\r\n    const newImages =\r\n      myImages &&\r\n      myImages.filter((image) => {\r\n        return image.id !== id;\r\n      });\r\n\r\n    setmyImages(newImages);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (\r\n      productDetailState.done &&\r\n      productDetailState.data &&\r\n      Object.keys(productDetailState.data).length > 0\r\n    ) {\r\n      console.log('5555', productDetailState);\r\n      const productDetailData = productDetailState.data;\r\n      if (productDetailData && productDetailData.brand) {\r\n        setBrandId(productDetailData.brand['id']);\r\n      } else {\r\n        setBrandId('');\r\n      }\r\n\r\n      if (\r\n        productDetailData &&\r\n        productDetailData.tags &&\r\n        productDetailData.tags.length > 0\r\n      ) {\r\n        const tagNames = productDetailData.tags.map((item) => item.name);\r\n        const tagIds = productDetailData.tags.map((item) => item._id);\r\n        console.log('tags55----', tagNames, tagIds);\r\n        setSelectedTags(tagNames);\r\n        setTagIds(tagIds);\r\n      } else {\r\n        setTagIds([]);\r\n        setSelectedTags([]);\r\n      }\r\n      if (\r\n        productDetailData &&\r\n        productDetailData.category &&\r\n        productDetailData.category.length > 0\r\n      ) {\r\n        const categoryIds = productDetailData.category;\r\n        setCategoryOptions(categoryIds);\r\n      } else {\r\n        setCategoryOptions([]);\r\n      }\r\n\r\n      if (productDetailData && productDetailData.body) {\r\n        setBody(productDetailData.body);\r\n      } else {\r\n        setBody('');\r\n      }\r\n\r\n      if (\r\n        productDetailData &&\r\n        productDetailData.bn &&\r\n        productDetailData.bn['body']\r\n      ) {\r\n        setBnBody(productDetailData.bn['body']);\r\n      } else {\r\n        setBnBody('');\r\n      }\r\n    }\r\n  }, [productDetailState]);\r\n\r\n  console.log('postSelectedTagsIds', selectedTags);\r\n  console.log('TagsIds', tagIds);\r\n  useEffect(() => {\r\n    if (\r\n      productDetailState.done &&\r\n      productDetailState['data'] &&\r\n      Object.keys(productDetailState['data']).length > 0 && [\r\n        'requiredProducts',\r\n      ] &&\r\n      productDetailState['data']['requiredProducts'].length > 0\r\n    ) {\r\n      const productIds = productDetailState['data']['requiredProducts'].map(\r\n        (item) => item\r\n      );\r\n      setProductIds(productIds);\r\n      const productList = productDetailState['data']['requiredProducts'].map(\r\n        (item) => {\r\n          return {\r\n            ...item,\r\n            _id: item._id,\r\n            variation: item.variation,\r\n            quantity: item.quantity,\r\n          };\r\n        }\r\n      );\r\n      setProductList(productList);\r\n    }\r\n  }, [productDetailState]);\r\n\r\n  console.log('couponDetialQuickEdit', productDetailState);\r\n\r\n  useEffect(() => {\r\n    if (productIds.length > 0) {\r\n      if (productIds.length > productList.length) {\r\n        const variation =\r\n          productIds[productIds.length - 1]['pricing'].length > 0 &&\r\n          productIds[productIds.length - 1]['pricing'][0]['_id'];\r\n        console.log('variation', variation);\r\n\r\n        setProductList([\r\n          ...productList,\r\n          {\r\n            ...productIds[productIds.length - 1],\r\n            _id: productIds[productIds.length - 1]['id'],\r\n            variation: variation,\r\n            quantity: 1,\r\n          },\r\n        ]);\r\n      } else if (productIds.length < productList.length) {\r\n        console.log('productIds', productIds);\r\n        console.log('productList', productList);\r\n\r\n        const newProductList = productList.filter((item) => {\r\n          let isTrue = false;\r\n          productIds.forEach((product) => {\r\n            if (product.id === item._id) {\r\n              isTrue = true;\r\n            }\r\n          });\r\n          return isTrue;\r\n        });\r\n        setProductList(newProductList);\r\n      }\r\n    } else {\r\n      setProductList([]);\r\n    }\r\n    // console.log('productIds', productIds)\r\n  }, [productIds]);\r\n\r\n  const handleSubmit = async (values: any, actions: any) => {\r\n    // @ts-ignore\r\n    const imagesIds =\r\n      myImages && myImages[0]\r\n        ? // @ts-ignore\r\n          myImages.map((image) => {\r\n            return image.id;\r\n          })\r\n        : [];\r\n\r\n    const products =\r\n      productList.length > 0\r\n        ? productList.map((product) => {\r\n            return {\r\n              _id: product._id,\r\n              variation: product.variation,\r\n              quantity: product.quantity,\r\n            };\r\n          })\r\n        : [];\r\n\r\n    if (productDetailData && Object.keys(productDetailData).length > 0) {\r\n      const aboutToUpdatedImageIds = [];\r\n\r\n      if (imagesIds && imagesIds.length > 0) {\r\n        imagesIds.forEach((imageId) => {\r\n          if (productDetailData && productDetailData['image']) {\r\n            if (!productDetailData['image'].includes(imageId)) {\r\n              aboutToUpdatedImageIds.push(imageId);\r\n            }\r\n          }\r\n        });\r\n      }\r\n\r\n      if (aboutToUpdatedImageIds[0] && aboutToUpdatedImageIds.length > 1) {\r\n        await handleAttachImageToItemMultipleFetch({\r\n          urlOptions: {\r\n            placeHolders: {\r\n              collection: 'post',\r\n              itemId: productDetailData.id,\r\n            },\r\n          },\r\n          body: {\r\n            image: aboutToUpdatedImageIds,\r\n          },\r\n        });\r\n      } else if (\r\n        aboutToUpdatedImageIds[0] &&\r\n        aboutToUpdatedImageIds.length < 1\r\n      ) {\r\n        await handleAttachImageToItemSingleFetch({\r\n          urlOptions: {\r\n            placeHolders: {\r\n              imageId: aboutToUpdatedImageIds[0].id,\r\n              collection: 'post',\r\n              itemId: productDetailData.id,\r\n            },\r\n          },\r\n        });\r\n      }\r\n    }\r\n\r\n    const addProductRes = await handleAddProductFetch({\r\n      urlOptions: {\r\n        placeHolders: {\r\n          id: productDetailData.id,\r\n        },\r\n      },\r\n      body: {\r\n        name: values.name.trim(),\r\n        category: categoryOptions,\r\n        tags: tagIds,\r\n        image: imagesIds,\r\n        body: body,\r\n        requiredProducts: products,\r\n        preparationTime: values.preparationTime,\r\n        servingSize: values.servingSize,\r\n        cookingTime: values.cookingTime,\r\n        metaTitle: values.metaTitle,\r\n        metaDescription: values.metaDescription,\r\n        metaTags: metaTags && metaTags.length > 0 ? metaTags.join(',') : '',\r\n\r\n        bn: {\r\n          metaTitle: values.bnMetaTitle,\r\n          metaDescription: values.bnMetaDescription,\r\n          metaTags:\r\n            bnMetaTags && bnMetaTags.length > 0 ? bnMetaTags.join(',') : '',\r\n          name: values.bnName.trim(),\r\n          preparationTime: values.bnPreparationTime,\r\n          body: bnBody,\r\n          servingSize: values.bnServingSize,\r\n          cookingTime: values.bnCookingTime,\r\n        },\r\n      },\r\n    });\r\n\r\n    console.log('addProductRes', addProductRes);\r\n\r\n    // @ts-ignore\r\n    if (addProductRes && addProductRes.status === 'ok') {\r\n      openSuccessNotification('Recipe Updated');\r\n\r\n      const positionInTag = () => {\r\n        return bundleList.map((item) => item.id).indexOf(productDetailData.id);\r\n      };\r\n\r\n      const index = positionInTag();\r\n\r\n      const getCover = (id) => {\r\n        if (!id || !myImages || !myImages[0]) {\r\n          return '';\r\n        } else {\r\n          if (myImages && myImages.length > 0) {\r\n            const item = myImages.find((item) => item.id === id);\r\n            if (item) {\r\n              return item.cover;\r\n            }\r\n          }\r\n        }\r\n      };\r\n\r\n      // @ts-ignore\r\n      const updatedItem = Object.assign({}, bundleList[index], {\r\n        ...addProductRes,\r\n        id: addProductRes['id'] || '',\r\n        key: addProductRes['id'] || '',\r\n        name: values.name.trim() || '',\r\n        cover: getCover(coverImageId),\r\n      });\r\n      const updateTagList = [\r\n        ...bundleList.slice(0, index),\r\n        updatedItem,\r\n        ...bundleList.slice(index + 1),\r\n      ];\r\n      setBundleList(updateTagList);\r\n\r\n      setAddNewCategoryVisible(false);\r\n\r\n      // @ts-ignore\r\n      setmyImages([]);\r\n      setCoverImageId('');\r\n      setPricing([]);\r\n      setTagIds([]);\r\n      setSelectedTags([]);\r\n      setBrandId('');\r\n      setcategoryIds([]);\r\n      setCategoryOptions([]);\r\n      setBnBody('');\r\n      setBody('');\r\n      setMetaTags([]);\r\n      setBnMetaTags([]);\r\n      setProductIds([]);\r\n      setProductList([]);\r\n      actions.resetForm();\r\n    } else {\r\n      // openErrorNotification();\r\n    }\r\n\r\n    actions.setSubmitting(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!addProductState['isLoading']) {\r\n      const error = addProductState['error'];\r\n      if (error['isError'] && Object.keys(error['error']).length > 0) {\r\n        const errors =\r\n          Object.values(error['error']).length > 0\r\n            ? Object.values(error['error'])\r\n            : [];\r\n        errors.forEach((err, i) => {\r\n          if (typeof err === 'string') {\r\n            openErrorNotification(err);\r\n          } else if (typeof err === 'object') {\r\n            if (err && Object.keys(err).length > 0) {\r\n              const errs = Object.values(err);\r\n              errs.forEach((err) => {\r\n                openErrorNotification(err);\r\n              });\r\n            }\r\n          }\r\n        });\r\n      }\r\n    }\r\n  }, [addProductState]);\r\n\r\n  const handleCancel = (e: any) => {\r\n    setAddNewCategoryVisible(false);\r\n    setmyImages([]);\r\n    setCoverImageId('');\r\n    setPricing([]);\r\n    setTagIds([]);\r\n    setSelectedTags([]);\r\n    setBrandId('');\r\n    setcategoryIds([]);\r\n    setCategoryOptions([]);\r\n    setBnBody('');\r\n    setBody('');\r\n    setMetaTags([]);\r\n    setBnMetaTags([]);\r\n    setProductIds([]);\r\n    setProductList([]);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (productDetailData && Object.keys(productDetailData).length > 0) {\r\n      const metaTags =\r\n        productDetailData.metaTags && productDetailData.metaTags.split(',');\r\n\r\n      console.log('localMetaTags', metaTags);\r\n\r\n      const bnMetaTags =\r\n        productDetailData.bn &&\r\n        productDetailData.bn['metaTags'] &&\r\n        productDetailData.bn['metaTags'].split(',');\r\n      setMetaTags(metaTags || []);\r\n      setBnMetaTags(bnMetaTags || []);\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <Formik\r\n      onSubmit={(values, actions) => handleSubmit(values, actions)}\r\n      validationSchema={validationSchema}\r\n      validateOnBlur={false}\r\n      enableReinitialize={true}\r\n      initialValues={{\r\n        ...initialValues,\r\n        ...{\r\n          ...productDetailData,\r\n          ...(productDetailState['data'] &&\r\n            Object.keys(productDetailState['data']).length > 0 &&\r\n            productDetailState['data']['bn'] && {\r\n              bnMetaTitle: productDetailState['data']['bn'].metaTitle,\r\n              bnMetaDescription:\r\n                productDetailState['data']['bn'].metaDescription,\r\n              bnName: productDetailState['data']['bn'].name,\r\n              metaUnit: productDetailState['data']['bn'].unit,\r\n              bnDescription: productDetailState['data']['bn'].description,\r\n            }),\r\n        },\r\n      }}\r\n    >\r\n      {({\r\n        handleChange,\r\n        values,\r\n        handleSubmit,\r\n        errors,\r\n        isValid,\r\n        isSubmitting,\r\n        touched,\r\n        handleBlur,\r\n        setFieldTouched,\r\n        handleReset,\r\n      }) => (\r\n        <>\r\n          <section className='addProductGridContainer'>\r\n            <div className='addProductGridContainer__left'>\r\n              <div className='addProductGridContainer__name'>\r\n                <div className='addProductGridContainer__item-header'>\r\n                  <h3>Recipe Information</h3>\r\n\r\n                  <div\r\n                    className={\r\n                      values.name && values.name.length > 2\r\n                        ? 'checkicon-active'\r\n                        : 'checkicon'\r\n                    }\r\n                  >\r\n                    <CheckCircleOutlined />\r\n                  </div>\r\n                </div>\r\n                <div className='addProductGridContainer__item-body'>\r\n                  <Input\r\n                    label='Name'\r\n                    placeHolder='Rafti oxy'\r\n                    value={values.name}\r\n                    name='name'\r\n                    isError={\r\n                      (touched.name && errors.name) ||\r\n                      (!isSubmitting && addProductState.error['error']['name'])\r\n                    }\r\n                    errorString={\r\n                      (touched.name && errors.name) ||\r\n                      (!isSubmitting && addProductState.error['error']['name'])\r\n                    }\r\n                    onChange={(e: any) => {\r\n                      handleChange(e);\r\n                      setFieldTouched('name');\r\n                    }}\r\n                  />\r\n\r\n                  <Input\r\n                    label='BN Name'\r\n                    value={values.bnName}\r\n                    placeHolder={'রাফতি অক্স'}\r\n                    name='bnName'\r\n                    isError={\r\n                      (touched.bnName && errors.bnName) ||\r\n                      (!isSubmitting &&\r\n                        addProductState.error['error']['bnName'])\r\n                    }\r\n                    errorString={\r\n                      (touched.bnName && errors.bnName) ||\r\n                      (!isSubmitting &&\r\n                        addProductState.error['error']['bnName'])\r\n                    }\r\n                    onChange={(e: any) => {\r\n                      handleChange(e);\r\n                      setFieldTouched('bnName');\r\n                    }}\r\n                  />\r\n\r\n                  <Input\r\n                    label='Preparation Time'\r\n                    value={values.preparationTime}\r\n                    placeHolder='15 min'\r\n                    name='preparationTime'\r\n                    isError={\r\n                      (touched.preparationTime && errors.preparationTime) ||\r\n                      (!isSubmitting &&\r\n                        addProductState.error['error']['preparationTime'])\r\n                    }\r\n                    errorString={\r\n                      (touched.preparationTime && errors.preparationTime) ||\r\n                      (!isSubmitting &&\r\n                        addProductState.error['error']['preparationTime'])\r\n                    }\r\n                    onChange={(e: any) => {\r\n                      handleChange(e);\r\n                      setFieldTouched('preparationTime');\r\n                    }}\r\n                  />\r\n\r\n                  <Input\r\n                    label='BN Preparation Time'\r\n                    value={values.bnPreparationTime}\r\n                    placeHolder={'১৫ মিনিট'}\r\n                    name='bnPreparationTime'\r\n                    isError={\r\n                      (touched.bnPreparationTime && errors.bnPreparationTime) ||\r\n                      (!isSubmitting &&\r\n                        addProductState.error['error']['bnPreparationTime'])\r\n                    }\r\n                    errorString={\r\n                      (touched.bnPreparationTime && errors.bnPreparationTime) ||\r\n                      (!isSubmitting &&\r\n                        addProductState.error['error']['bnPreparationTime'])\r\n                    }\r\n                    onChange={(e: any) => {\r\n                      handleChange(e);\r\n                      setFieldTouched('bnPreparationTime');\r\n                    }}\r\n                  />\r\n\r\n                  <Input\r\n                    label='Cooking Time'\r\n                    placeHolder={'30 min'}\r\n                    value={values.cookingTime}\r\n                    name='cookingTime'\r\n                    isError={\r\n                      (touched.cookingTime && errors.cookingTime) ||\r\n                      (!isSubmitting &&\r\n                        addProductState.error['error']['cookingTime'])\r\n                    }\r\n                    errorString={\r\n                      (touched.cookingTime && errors.cookingTime) ||\r\n                      (!isSubmitting &&\r\n                        addProductState.error['error']['cookingTime'])\r\n                    }\r\n                    onChange={(e: any) => {\r\n                      handleChange(e);\r\n                      setFieldTouched('cookingTime');\r\n                    }}\r\n                  />\r\n\r\n                  <Input\r\n                    label='BN Cooking Time'\r\n                    placeHolder={'৩০ মিনিট'}\r\n                    value={values.bnCookingTime}\r\n                    name='bnCookingTime'\r\n                    isError={\r\n                      (touched.bnCookingTime && errors.bnCookingTime) ||\r\n                      (!isSubmitting &&\r\n                        addProductState.error['error']['bnCookingTime'])\r\n                    }\r\n                    errorString={\r\n                      (touched.bnCookingTime && errors.bnCookingTime) ||\r\n                      (!isSubmitting &&\r\n                        addProductState.error['error']['bnCookingTime'])\r\n                    }\r\n                    onChange={(e: any) => {\r\n                      handleChange(e);\r\n                      setFieldTouched('bnCookingTime');\r\n                    }}\r\n                  />\r\n\r\n                  <Input\r\n                    label='Serving Size'\r\n                    value={values.servingSize}\r\n                    name='servingSize'\r\n                    isError={\r\n                      (touched.servingSize && errors.servingSize) ||\r\n                      (!isSubmitting &&\r\n                        addProductState.error['error']['servingSize'])\r\n                    }\r\n                    errorString={\r\n                      (touched.servingSize && errors.servingSize) ||\r\n                      (!isSubmitting &&\r\n                        addProductState.error['error']['servingSize'])\r\n                    }\r\n                    onChange={(e: any) => {\r\n                      handleChange(e);\r\n                      setFieldTouched('servingSize');\r\n                    }}\r\n                  />\r\n\r\n                  <Input\r\n                    label='BN Serving Size'\r\n                    value={values.bnServingSize}\r\n                    name='bnServingSize'\r\n                    isError={\r\n                      (touched.bnServingSize && errors.bnServingSize) ||\r\n                      (!isSubmitting &&\r\n                        addProductState.error['error']['bnServingSize'])\r\n                    }\r\n                    errorString={\r\n                      (touched.bnServingSize && errors.bnServingSize) ||\r\n                      (!isSubmitting &&\r\n                        addProductState.error['error']['bnServingSize'])\r\n                    }\r\n                    onChange={(e: any) => {\r\n                      handleChange(e);\r\n                      setFieldTouched('bnServingSize');\r\n                    }}\r\n                  />\r\n\r\n                  <Input\r\n                    label='URL'\r\n                    value={values.url}\r\n                    name='url'\r\n                    isError={\r\n                      (touched.url && errors.url) ||\r\n                      (!isSubmitting && addProductState.error['error']['url'])\r\n                    }\r\n                    errorString={\r\n                      (touched.url && errors.url) ||\r\n                      (!isSubmitting && addProductState.error['error']['url'])\r\n                    }\r\n                    onChange={(e: any) => {\r\n                      handleChange(e);\r\n                      setFieldTouched('url');\r\n                    }}\r\n                  />\r\n\r\n                  <h3 className='inputFieldLabel'>Body</h3>\r\n\r\n                  <div\r\n                    style={{\r\n                      width: '100%',\r\n                      maxWidth: '100%',\r\n                    }}\r\n                  >\r\n                    <CKEditor\r\n                      editor={ClassicEditor}\r\n                      data={body}\r\n                      onInit={(editor) => {\r\n                        // You can store the \"editor\" and use when it is needed.\r\n                        console.log('Editor is ready to use!', editor);\r\n                      }}\r\n                      onChange={(event, editor) => {\r\n                        const data = editor.getData();\r\n                        setBody(data);\r\n                      }}\r\n                      onBlur={(event, editor) => {\r\n                        console.log('Blur.', editor);\r\n                      }}\r\n                      onFocus={(event, editor) => {\r\n                        console.log('Focus.', editor);\r\n                      }}\r\n                    />\r\n                  </div>\r\n\r\n                  <div\r\n                    style={{\r\n                      marginTop: '15px',\r\n                    }}\r\n                  ></div>\r\n\r\n                  <h3 className='inputFieldLabel'>BN Body</h3>\r\n\r\n                  <div\r\n                    style={{\r\n                      width: '100%',\r\n                      maxWidth: '100%',\r\n                    }}\r\n                  >\r\n                    <CKEditor\r\n                      editor={ClassicEditor}\r\n                      data={bnBody}\r\n                      onInit={(editor) => {\r\n                        // You can store the \"editor\" and use when it is needed.\r\n                        console.log('Editor is ready to use!', editor);\r\n                      }}\r\n                      onChange={(event, editor) => {\r\n                        const data = editor.getData();\r\n                        setBnBody(data);\r\n                      }}\r\n                      onBlur={(event, editor) => {\r\n                        console.log('Blur.', editor);\r\n                      }}\r\n                      onFocus={(event, editor) => {\r\n                        console.log('Focus.', editor);\r\n                      }}\r\n                    />\r\n                  </div>\r\n\r\n                  {/* <div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\tdisplay: 'flex',\r\n\t\t\t\t\t\t\t\t\t\t\t\tjustifyContent: 'space-between'\r\n\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\twidth: '48%',\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<DatePicker\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabel='Date'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={handleDateChange} />\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\twidth: '48%'\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<DatePicker\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tdate={date}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\twithTime={true}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder='Select time'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabel='Time'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={handleTimeChange} />\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t</div> */}\r\n                  <div\r\n                    style={{\r\n                      marginBottom: '15px',\r\n                    }}\r\n                  ></div>\r\n                  {/* \r\n\t\t\t\t\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\t\t\t\t\trows={1}\r\n\t\t\t\t\t\t\t\t\t\t\t\tlabel='Venue'\r\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.venue}\r\n\t\t\t\t\t\t\t\t\t\t\t\tname='venue'\r\n\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.venue && errors.venue) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['venue'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.venue && errors.venue) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['venue'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('venue');\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\t\tlabel='Purchase Limit'\r\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.purchaseLimit}\r\n\t\t\t\t\t\t\t\t\t\t\t\ttype='number'\r\n\t\t\t\t\t\t\t\t\t\t\t\tname='purchaseLimit'\r\n\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.purchaseLimit && errors.purchaseLimit) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['purchaseLimit'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.purchaseLimit && errors.purchaseLimit) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['purchaseLimit'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('purchaseLimit');\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t/> */}\r\n                </div>\r\n              </div>\r\n\r\n              <div className='addProductGridContainer__price'>\r\n                <div className='addProductGridContainer__item-header'>\r\n                  <h3>Products</h3>\r\n\r\n                  <div\r\n                    className={\r\n                      pricing && pricing.length > 0\r\n                        ? 'checkicon-active'\r\n                        : 'checkicon'\r\n                    }\r\n                  >\r\n                    <CheckCircleOutlined />\r\n                  </div>\r\n                </div>\r\n\r\n                <div className='addProductGridContainer__item-body'>\r\n                  <h3 className='inputFieldLabel'>Products</h3>\r\n                  <SelectProducts\r\n                    setProductIds={setProductIds}\r\n                    productIds={productIds}\r\n                  />\r\n\r\n                  <div\r\n                    style={{\r\n                      marginTop: '15px',\r\n                    }}\r\n                  ></div>\r\n\r\n                  <h3 className='inputFieldLabel'>Selcted Products</h3>\r\n\r\n                  <SelectedProductItems\r\n                    productList={productList}\r\n                    setProductList={setProductList}\r\n                  />\r\n                </div>\r\n              </div>\r\n\r\n              <div className='addProductGridContainer__image'>\r\n                <div className='addProductGridContainer__item-header'>\r\n                  <h3>Image</h3>\r\n\r\n                  <Tooltip\r\n                    placement='left'\r\n                    title={\r\n                      'Click on the image to select cover image, By default 1st image is selected as cover'\r\n                    }\r\n                  >\r\n                    <a href='###'>\r\n                      <InfoCircleOutlined />\r\n                    </a>\r\n                  </Tooltip>\r\n                </div>\r\n\r\n                <div\r\n                  style={{\r\n                    padding: '10px',\r\n                  }}\r\n                  className='aboutToUploadImagesContainer'\r\n                >\r\n                  {productDetailState.isLoading && (\r\n                    <div\r\n                      style={{\r\n                        padding: '20px 0',\r\n                      }}\r\n                    >\r\n                      <Spin />\r\n                    </div>\r\n                  )}\r\n                  {productDetailState.done && (\r\n                    <>\r\n                      {myImages &&\r\n                        // @ts-ignore\r\n                        myImages.length > 0 &&\r\n                        myImages.map((image, index) => {\r\n                          return (\r\n                            <div className='aboutToUploadImagesContainer__item'>\r\n                              <div\r\n                                className='aboutToUploadImagesContainer__item-imgContainer'\r\n                                onClick={() => {\r\n                                  setCoverImageId(image.id);\r\n                                  handleSetImageAsThumnail(image);\r\n                                }}\r\n                              >\r\n                                <img src={image.cover} alt={image.alt} />\r\n                              </div>\r\n\r\n                              <span\r\n                                onClick={() => {\r\n                                  handleImagesDelete(image.id);\r\n                                  handleDetachSingleImage(image.id);\r\n                                }}\r\n                                className='aboutToUploadImagesContainer__item-remove'\r\n                              >\r\n                                <CloseOutlined />\r\n                              </span>\r\n\r\n                              {coverImageId === image.id ? (\r\n                                <span className='aboutToUploadImagesContainer__item-cover'>\r\n                                  <CheckOutlined />\r\n                                </span>\r\n                              ) : (\r\n                                !coverImageId &&\r\n                                index === 0 && (\r\n                                  <span className='aboutToUploadImagesContainer__item-cover'>\r\n                                    <CheckOutlined />\r\n                                  </span>\r\n                                )\r\n                              )}\r\n                            </div>\r\n                          );\r\n                        })}\r\n\r\n                      <Tooltip title={'Attach images'}>\r\n                        <div\r\n                          onClick={() => {\r\n                            setvisible(true);\r\n                            setisModalOpenForImages(true);\r\n                            setisModalOpenForThumbnail(false);\r\n                          }}\r\n                          className='aboutToUploadImagesContainer__uploadItem'\r\n                        >\r\n                          {/* <FileAddOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FileImageTwoTone />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FileImageOutlined /> */}\r\n                          <FileImageFilled />\r\n                          {/* <h5>\r\n\t\t\t\t\t\t\t\t\t\t\t\t     Select From Library\r\n\t\t\t\t\t\t\t\t\t\t\t<     /h5> */}\r\n                          <span className='aboutToUploadImagesContainer__uploadItem-plus'>\r\n                            <PlusOutlined />\r\n                          </span>\r\n                        </div>\r\n                      </Tooltip>\r\n                    </>\r\n                  )}\r\n                </div>\r\n              </div>\r\n\r\n              <div className='addProductGridContainer__image'>\r\n                <div className='addProductGridContainer__item-header'>\r\n                  <h3>Meta Data</h3>\r\n\r\n                  <Tooltip\r\n                    placement='left'\r\n                    title={\r\n                      \"Meta data will be used to make the user's easy and for search engine optimization.\"\r\n                    }\r\n                  >\r\n                    <a href='###'>\r\n                      <InfoCircleOutlined />\r\n                    </a>\r\n                  </Tooltip>\r\n                </div>\r\n                <div className='addProductGridContainer__item-body'>\r\n                  <Input\r\n                    label='Meta title'\r\n                    value={values.metaTitle}\r\n                    placeHolder={'...'}\r\n                    name='metaTitle'\r\n                    isError={\r\n                      (touched.metaTitle && errors.metaTitle) ||\r\n                      (!isSubmitting &&\r\n                        addProductState.error['error']['metaTitle'])\r\n                    }\r\n                    errorString={\r\n                      (touched.metaTitle && errors.metaTitle) ||\r\n                      (!isSubmitting &&\r\n                        addProductState.error['error']['metaTitle'])\r\n                    }\r\n                    onChange={(e: any) => {\r\n                      handleChange(e);\r\n                      setFieldTouched('metaTitle');\r\n                    }}\r\n                  />\r\n\r\n                  <Input\r\n                    label='BN Meta title'\r\n                    value={values.bnMetaTitle}\r\n                    placeHolder={'...'}\r\n                    name='bnMetaTitle'\r\n                    isError={\r\n                      (touched.bnMetaTitle && errors.bnMetaTitle) ||\r\n                      (!isSubmitting &&\r\n                        addProductState.error['error']['bnMetaTitle'])\r\n                    }\r\n                    errorString={\r\n                      (touched.bnMetaTitle && errors.bnMetaTitle) ||\r\n                      (!isSubmitting &&\r\n                        addProductState.error['error']['bnMetaTitle'])\r\n                    }\r\n                    onChange={(e: any) => {\r\n                      handleChange(e);\r\n                      setFieldTouched('bnMetaTitle');\r\n                    }}\r\n                  />\r\n\r\n                  <TextArea\r\n                    label='Meta description'\r\n                    value={values.metaDescription}\r\n                    placeholder={'meta...'}\r\n                    name='metaDescription'\r\n                    isError={\r\n                      (touched.metaDescription && errors.metaDescription) ||\r\n                      (!isSubmitting &&\r\n                        addProductState.error['error']['metaDescription'])\r\n                    }\r\n                    errorString={\r\n                      (touched.metaDescription && errors.metaDescription) ||\r\n                      (!isSubmitting &&\r\n                        addProductState.error['error']['metaDescription'])\r\n                    }\r\n                    onChange={(e: any) => {\r\n                      handleChange(e);\r\n                      setFieldTouched('metaDescription');\r\n                    }}\r\n                  />\r\n\r\n                  <TextArea\r\n                    label='BN Meta Description'\r\n                    value={values.bnMetaDescription}\r\n                    placeholder={'এইয় মেট...'}\r\n                    name='bnMetaDescription'\r\n                    isError={\r\n                      (touched.bnMetaDescription && errors.bnMetaDescription) ||\r\n                      (!isSubmitting &&\r\n                        addProductState.error['error']['bnMetaDescription'])\r\n                    }\r\n                    errorString={\r\n                      (touched.bnMetaDescription && errors.bnMetaDescription) ||\r\n                      (!isSubmitting &&\r\n                        addProductState.error['error']['bnMetaDescription'])\r\n                    }\r\n                    onChange={(e: any) => {\r\n                      handleChange(e);\r\n                      setFieldTouched('bnMetaDescription');\r\n                    }}\r\n                  />\r\n\r\n                  <h3 className='inputFieldLabel'>Meta Tags</h3>\r\n\r\n                  <MetaTags\r\n                    // @ts-ignore\r\n                    setTags={setMetaTags}\r\n                    tags={metaTags}\r\n                  />\r\n\r\n                  <div\r\n                    style={{\r\n                      marginTop: '15px',\r\n                    }}\r\n                  ></div>\r\n\r\n                  <h3 className='inputFieldLabel'>BN Meta Tags</h3>\r\n\r\n                  <MetaTags\r\n                    // @ts-ignore\r\n                    setTags={setBnMetaTags}\r\n                    tags={bnMetaTags}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className='addProductGridContainer__right'>\r\n              <div className='addProductGridContainer__category'>\r\n                <div className='addProductGridContainer-rightItemContainer'>\r\n                  <div className='addProductGridContainer-rightItemContainer-header'>\r\n                    <h3>Recipe Categories</h3>\r\n\r\n                    <Tooltip\r\n                      color='red'\r\n                      visible={\r\n                        addProductState.error['error']['category'] &&\r\n                        !(categoryids.length > 0)\r\n                      }\r\n                      placement='left'\r\n                      title={'Select at least one category'}\r\n                    >\r\n                      <div\r\n                        className={\r\n                          !(categoryids.length > 0) &&\r\n                          !addProductState.error['error']['category']\r\n                            ? 'checkicon'\r\n                            : addProductState.error['error']['category']\r\n                            ? 'checkicon-error'\r\n                            : 'checkicon-active'\r\n                        }\r\n                      >\r\n                        <CheckCircleOutlined />\r\n                      </div>\r\n                    </Tooltip>\r\n                  </div>\r\n                  <div className='addProductGridContainer-rightItemContainer-body'>\r\n                    <Categories\r\n                      setCategoryOptions={setCategoryOptions}\r\n                      categoryOptions={categoryOptions}\r\n                      setcategoryIds={setcategoryIds}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div className='addProductGridContainer__tag'>\r\n                <div className='addProductGridContainer-rightItemContainer'>\r\n                  <div className='addProductGridContainer-rightItemContainer-header'>\r\n                    <h3>Recipe Tags</h3>\r\n                  </div>\r\n                  <div className='addProductGridContainer-rightItemContainer-body'>\r\n                    <Tags\r\n                      setSelectedTags={setSelectedTags}\r\n                      selectedTags={selectedTags}\r\n                      setTagIds={setTagIds}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </section>\r\n\r\n          <div\r\n            style={{\r\n              padding: '15px',\r\n              display: 'flex',\r\n              justifyContent: 'flex-end',\r\n            }}\r\n          >\r\n            <Button\r\n              style={{\r\n                color: '#555',\r\n                marginRight: '10px',\r\n              }}\r\n              className='btnPrimaryClassNameoutline-cancle'\r\n              onClick={() => setAddNewCategoryVisible(false)}\r\n              type='default'\r\n            >\r\n              Cancel\r\n            </Button>\r\n\r\n            <Button\r\n              className='btnPrimaryClassNameoutline'\r\n              onClick={handleSubmit}\r\n              loading={addProductState.isLoading}\r\n              type='link'\r\n              icon={<CheckOutlined />}\r\n            >\r\n              Update\r\n            </Button>\r\n          </div>\r\n\r\n          <MediaLibrary\r\n            setvisible={setvisible}\r\n            visible={visible}\r\n            setmyImages={setmyImages}\r\n            myImages={myImages}\r\n            setmyThumbnailImage={setmyThumbnailImage}\r\n            isModalOpenForThumbnail={isModalOpenForThumbnail}\r\n            isModalOpenForImages={isModalOpenForImages}\r\n          />\r\n        </>\r\n      )}\r\n    </Formik>\r\n  );\r\n};\r\n\r\nconst AddNewProduct = ({\r\n  addNewCategoryVisible,\r\n  setAddNewCategoryVisible,\r\n  productList: bundleList,\r\n  setProductList: setBundleList,\r\n  productDetailData,\r\n}: Props) => {\r\n  const handleCancel = () => {\r\n    setAddNewCategoryVisible(false);\r\n  };\r\n  return (\r\n    <>\r\n      <Modal\r\n        style={{\r\n          top: '40px',\r\n        }}\r\n        footer={false}\r\n        bodyStyle={{\r\n          margin: 0,\r\n          padding: 0,\r\n        }}\r\n        width={'70vw'}\r\n        title='Edit Recipe'\r\n        visible={addNewCategoryVisible}\r\n        // onOk={(e: any) => handleSubmit(e)}\r\n        onCancel={handleCancel}\r\n        destroyOnClose={true}\r\n        okText='Update'\r\n        okButtonProps={{\r\n          // loading: isSubmitting,\r\n          htmlType: 'submit',\r\n        }}\r\n      >\r\n        <ModalComponentChild\r\n          addNewCategoryVisible={addNewCategoryVisible}\r\n          setAddNewCategoryVisible={bundleList}\r\n          bundleList={bundleList}\r\n          setBundleList={setBundleList}\r\n          productDetailData={productDetailData}\r\n        />\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AddNewProduct;\r\n\r\n/*\r\n\r\n\r\nProduct variation ---->\r\n\r\nPrice [title]\r\n\t[regular input field] [offer inputfield]\r\n\r\nStock [title]\r\n\t[available input field] [minimum inputfield]\r\n\r\ndefault [default can be set to true]\r\n\r\nattributes [title]\r\n\t[add attributes name]\r\n\t\t[add attrubutes value]\r\n\r\n\t[add attributes name]\r\n\t\t[add attrubutes value\r\n\r\n*/ //\r\n","// @ts-nocheck\r\nimport React, { useState, useEffect } from 'react';\r\n\r\n// import hooks\r\nimport { useHandleFetch } from '../../hooks';\r\n\r\n// import libraries\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { message, Tooltip, Modal, Tabs, Empty, Badge } from 'antd';\r\nimport CKEditor from '@ckeditor/ckeditor5-react';\r\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\r\n\r\nimport {\r\n  DeleteOutlined,\r\n  FileAddOutlined,\r\n  CheckCircleOutlined,\r\n  FileImageFilled,\r\n  PlusOutlined,\r\n  PlusCircleOutlined,\r\n  CloseOutlined,\r\n  CheckOutlined,\r\n  InfoCircleOutlined,\r\n} from '@ant-design/icons';\r\n\r\n// import ReactQuill from 'react-quill';\r\n// import 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport MediaLibrary from '../../components/MediaLibrary';\r\nimport {\r\n  openSuccessNotification,\r\n  openErrorNotification,\r\n} from '../../components/Notification';\r\nimport MetaTags from '../category/MetaTags';\r\n\r\nimport Tags from './Tags';\r\nimport Brands from './Brands';\r\nimport Categories from './Categories';\r\nimport SelectProducts from './SelectProducts';\r\nimport SelectedProductItems from './SelectedProductItems';\r\n\r\nconst { TabPane } = Tabs;\r\n\r\nconst validationSchema = Yup.object().shape({\r\n  name: Yup.string()\r\n    .label('Name')\r\n    .required('Name is required')\r\n    .min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\nconst initialValues = {\r\n  name: '',\r\n  url: '',\r\n  preparationTime: '',\r\n  servingSize: '',\r\n  cookingTime: '',\r\n  body: '',\r\n  bnName: '',\r\n  bnBody: '',\r\n  bnPreparationTime: '',\r\n  bnServingSize: '',\r\n  bnCookingTime: '',\r\n  metaTitle: '',\r\n  bnMetaTitle: '',\r\n  metaDescription: '',\r\n  bnMetaDescription: '',\r\n  metaTags: '',\r\n  bnMetaTags: '',\r\n};\r\n\r\ninterface Props {\r\n  addNewCategoryVisible: any;\r\n  setAddNewCategoryVisible: any;\r\n  productList?: any;\r\n  setProductList?: any;\r\n}\r\n\r\nconst AddNewProduct = ({\r\n  addNewCategoryVisible,\r\n  setAddNewCategoryVisible,\r\n  productList: bundleList,\r\n  setProductList: setBundleList,\r\n}: Props) => {\r\n  const [addProductState, handleAddProductFetch] = useHandleFetch(\r\n    {},\r\n    'addPost'\r\n  );\r\n  const [visible, setvisible] = useState(false);\r\n  const [myImages, setmyImages] = useState(false);\r\n  const [myThumbnailImage, setmyThumbnailImage] = useState(false);\r\n  const [isModalOpenForThumbnail, setisModalOpenForThumbnail] = useState(false);\r\n  const [isModalOpenForImages, setisModalOpenForImages] = useState(false);\r\n  const [categoryids, setcategoryIds] = useState([]);\r\n  const [tagIds, setTagIds] = useState([]);\r\n  const [brandId, setBrandId] = useState('');\r\n  const [pricing, setPricing] = useState([]);\r\n  const [coverImageId, setCoverImageId] = useState('');\r\n  const [categoryOptions, setCategoryOptions] = useState([]);\r\n  const [selectedTags, setSelectedTags] = useState([]);\r\n  const [date, setDateFeild] = useState('');\r\n  const [time, setTimeFeild] = useState('');\r\n  const [description, setDescription] = useState('');\r\n  const [body, setBody] = useState('');\r\n  const [bnBody, setBnBody] = useState('');\r\n  const [productIds, setProductIds] = useState([]);\r\n  const [productList, setProductList] = useState([]);\r\n  const [bnDescription, setBNDescription] = useState('এই পণ্য...');\r\n  const [metaTags, setMetaTags] = useState([]);\r\n  const [bnMetaTags, setBnMetaTags] = useState([]);\r\n\r\n  const [price, setPrice] = useState({\r\n    regular: null,\r\n    offer: null,\r\n  });\r\n\r\n  const makeEmptyCategoryOptions = (setEmpty) => {\r\n    setEmpty([]);\r\n  };\r\n\r\n  const handleSubmit = async (values: any, actions: any) => {\r\n    // @ts-ignore\r\n    const imagesIds = myImages\r\n      ? myImages.map((image) => {\r\n          return image.id;\r\n        })\r\n      : [];\r\n\r\n    const products =\r\n      productList.length > 0\r\n        ? productList.map((product) => {\r\n            return {\r\n              _id: product._id,\r\n              variation: product.variation,\r\n              quantity: product.quantity,\r\n            };\r\n          })\r\n        : [];\r\n\r\n    const addProductRes = await handleAddProductFetch({\r\n      body: {\r\n        name: values.name.trim(),\r\n        category: categoryids,\r\n        tags: tagIds,\r\n        brand: [brandId],\r\n        image: imagesIds,\r\n        body: body,\r\n        requiredProducts: products,\r\n        preparationTime: values.preparationTime,\r\n        servingSize: values.servingSize,\r\n        cookingTime: values.cookingTime,\r\n        metaTitle: values.metaTitle,\r\n        metaDescription: values.metaDescription,\r\n        metaTags: metaTags && metaTags.length > 0 ? metaTags.join(',') : '',\r\n        bn: {\r\n          metaTitle: values.bnMetaTitle,\r\n          metaDescription: values.bnMetaDescription,\r\n          metaTags:\r\n            bnMetaTags && bnMetaTags.length > 0 ? bnMetaTags.join(',') : '',\r\n          name: values.bnName.trim(),\r\n          preparationTime: values.bnPreparationTime,\r\n          body: bnBody,\r\n          servingSize: values.bnServingSize,\r\n          cookingTime: values.bnCookingTime,\r\n        },\r\n      },\r\n    });\r\n\r\n    // @ts-ignore\r\n    if (addProductRes && addProductRes.status === 'ok') {\r\n      openSuccessNotification('Recipe Created');\r\n\r\n      setBundleList([\r\n        {\r\n          // @ts-ignore\r\n          ...addProductRes,\r\n          id: addProductRes['_id'] || '',\r\n          key: addProductRes['_id'] || '',\r\n          // name: addProductRes['name'] || '',\r\n          // cover: addProductRes['cover'] || '',\r\n        },\r\n        ...bundleList,\r\n      ]);\r\n\r\n      // @ts-ignore\r\n      setmyImages([]);\r\n      setCoverImageId('');\r\n      setPricing([]);\r\n      setTagIds([]);\r\n      setSelectedTags([]);\r\n      setBrandId('');\r\n      setcategoryIds([]);\r\n      setCategoryOptions([]);\r\n      setBnBody('');\r\n      setBody('');\r\n      setMetaTags([]);\r\n      setBnMetaTags([]);\r\n      setProductIds([]);\r\n      setProductList([]);\r\n      actions.resetForm();\r\n\r\n      setAddNewCategoryVisible(false);\r\n    } else {\r\n      // openErrorNotification();\r\n    }\r\n\r\n    actions.setSubmitting(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!addProductState['isLoading']) {\r\n      const error = addProductState['error'];\r\n      if (error['isError'] && Object.keys(error['error']).length > 0) {\r\n        const errors =\r\n          Object.values(error['error']).length > 0\r\n            ? Object.values(error['error'])\r\n            : [];\r\n        errors.forEach((err, i) => {\r\n          if (typeof err === 'string') {\r\n            openErrorNotification(err);\r\n          } else if (typeof err === 'object') {\r\n            if (err && Object.keys(err).length > 0) {\r\n              const errs = Object.values(err);\r\n              errs.forEach((err) => {\r\n                openErrorNotification(err);\r\n              });\r\n            }\r\n          }\r\n        });\r\n      }\r\n    }\r\n  }, [addProductState]);\r\n\r\n  useEffect(() => {\r\n    if (productIds.length > 0) {\r\n      if (productIds.length > productList.length) {\r\n        const variation =\r\n          productIds[productIds.length - 1]['pricing'].length > 0 &&\r\n          productIds[productIds.length - 1]['pricing'][0]['_id'];\r\n        console.log('variation', variation);\r\n\r\n        setProductList([\r\n          ...productList,\r\n          {\r\n            ...productIds[productIds.length - 1],\r\n            _id: productIds[productIds.length - 1]['id'],\r\n            variation: variation,\r\n            quantity: 1,\r\n          },\r\n        ]);\r\n      } else if (productIds.length < productList.length) {\r\n        console.log('productIds', productIds);\r\n        console.log('productList', productList);\r\n\r\n        const newProductList = productList.filter((item) => {\r\n          let isTrue = false;\r\n          productIds.forEach((product) => {\r\n            if (product.id === item._id) {\r\n              isTrue = true;\r\n            }\r\n          });\r\n          return isTrue;\r\n        });\r\n        setProductList(newProductList);\r\n      }\r\n    } else {\r\n      setProductList([]);\r\n    }\r\n    // console.log('productIds', productIds)\r\n  }, [productIds]);\r\n\r\n  const handleCancel = (e: any) => {\r\n    setAddNewCategoryVisible(false);\r\n  };\r\n\r\n  const getisSubmitButtonDisabled = (values, isValid) => {\r\n    if (!values.name || !(pricing.length > 0) || !isValid) {\r\n      return true;\r\n    }\r\n    return false;\r\n  };\r\n\r\n  const handleImagesDelete = (id) => {\r\n    // @ts-ignore\r\n    const newImages =\r\n      myImages &&\r\n      myImages.filter((image) => {\r\n        return image.id !== id;\r\n      });\r\n\r\n    setmyImages(newImages);\r\n  };\r\n\r\n  const handleDeleteFromSelectedImage = () => {};\r\n\r\n  const handleThumbnailImageDelete = (id) => {\r\n    // @ts-ignore\r\n    const newImages =\r\n      myThumbnailImage &&\r\n      myThumbnailImage.filter((image) => {\r\n        return image.id !== id;\r\n      });\r\n\r\n    if (newImages.length > 0) {\r\n      setmyThumbnailImage(newImages);\r\n    } else setmyThumbnailImage(false);\r\n  };\r\n\r\n  const handleAddPricing = (priceItem) => {\r\n    setPricing([\r\n      {\r\n        ...priceItem,\r\n        id: pricing.length,\r\n      },\r\n      ...pricing,\r\n    ]);\r\n    message.info('Product Pricing Added');\r\n  };\r\n\r\n  const handleDeletePricing = (id) => {\r\n    const newPricing = pricing.filter((item) => item.id !== id);\r\n    setPricing(newPricing);\r\n    message.info('Product Pricing Deleted');\r\n  };\r\n\r\n  const isCategoryInValid = () => {\r\n    if (\r\n      addProductState.error['error']['category'] &&\r\n      !categoryids &&\r\n      categoryids.length\r\n    ) {\r\n      return true;\r\n    } else if (categoryids && categoryids.length > 0) {\r\n      return false;\r\n    }\r\n  };\r\n\r\n  const handleDateChange = (date, dateString) => {\r\n    setDateFeild(dateString);\r\n    // console.log('date', date, dateString);\r\n  };\r\n\r\n  const handleTimeChange = (date, dateString) => {\r\n    setTimeFeild(dateString);\r\n    // console.log('date', date, dateString);\r\n  };\r\n\r\n  return (\r\n    <Formik\r\n      onSubmit={(values, actions) => handleSubmit(values, actions)}\r\n      validationSchema={validationSchema}\r\n      validateOnBlur={false}\r\n      enableReinitialize={true}\r\n      initialValues={{ ...initialValues }}\r\n    >\r\n      {({\r\n        handleChange,\r\n        values,\r\n        handleSubmit,\r\n        errors,\r\n        isValid,\r\n        isSubmitting,\r\n        touched,\r\n        handleBlur,\r\n        setFieldTouched,\r\n        handleReset,\r\n      }) => (\r\n        <>\r\n          <Modal\r\n            style={{\r\n              top: '40px',\r\n            }}\r\n            bodyStyle={{\r\n              margin: 0,\r\n              padding: 0,\r\n            }}\r\n            width={'70vw'}\r\n            title='Add New Recipe'\r\n            visible={addNewCategoryVisible}\r\n            onOk={(e: any) => handleSubmit(e)}\r\n            onCancel={handleCancel}\r\n            okText='Create'\r\n            okButtonProps={{\r\n              loading: isSubmitting,\r\n              htmlType: 'submit',\r\n            }}\r\n          >\r\n            <section className='addProductGridContainer'>\r\n              <div className='addProductGridContainer__left'>\r\n                <div className='addProductGridContainer__name'>\r\n                  <div className='addProductGridContainer__item-header'>\r\n                    <h3>Recipe Information</h3>\r\n\r\n                    <div\r\n                      className={\r\n                        values.name && values.name.length > 2\r\n                          ? 'checkicon-active'\r\n                          : 'checkicon'\r\n                      }\r\n                    >\r\n                      <CheckCircleOutlined />\r\n                    </div>\r\n                  </div>\r\n                  <div className='addProductGridContainer__item-body'>\r\n                    <Input\r\n                      label='Name'\r\n                      placeHolder='Rafti oxy'\r\n                      value={values.name}\r\n                      name='name'\r\n                      isError={\r\n                        (touched.name && errors.name) ||\r\n                        (!isSubmitting &&\r\n                          addProductState.error['error']['name'])\r\n                      }\r\n                      errorString={\r\n                        (touched.name && errors.name) ||\r\n                        (!isSubmitting &&\r\n                          addProductState.error['error']['name'])\r\n                      }\r\n                      onChange={(e: any) => {\r\n                        handleChange(e);\r\n                        setFieldTouched('name');\r\n                      }}\r\n                    />\r\n\r\n                    <Input\r\n                      label='BN Name'\r\n                      value={values.bnName}\r\n                      placeHolder={'রাফতি অক্স'}\r\n                      name='bnName'\r\n                      isError={\r\n                        (touched.bnName && errors.bnName) ||\r\n                        (!isSubmitting &&\r\n                          addProductState.error['error']['bnName'])\r\n                      }\r\n                      errorString={\r\n                        (touched.bnName && errors.bnName) ||\r\n                        (!isSubmitting &&\r\n                          addProductState.error['error']['bnName'])\r\n                      }\r\n                      onChange={(e: any) => {\r\n                        handleChange(e);\r\n                        setFieldTouched('bnName');\r\n                      }}\r\n                    />\r\n\r\n                    <Input\r\n                      label='Preparation Time'\r\n                      value={values.preparationTime}\r\n                      placeHolder='15 min'\r\n                      name='preparationTime'\r\n                      isError={\r\n                        (touched.preparationTime && errors.preparationTime) ||\r\n                        (!isSubmitting &&\r\n                          addProductState.error['error']['preparationTime'])\r\n                      }\r\n                      errorString={\r\n                        (touched.preparationTime && errors.preparationTime) ||\r\n                        (!isSubmitting &&\r\n                          addProductState.error['error']['preparationTime'])\r\n                      }\r\n                      onChange={(e: any) => {\r\n                        handleChange(e);\r\n                        setFieldTouched('preparationTime');\r\n                      }}\r\n                    />\r\n\r\n                    <Input\r\n                      label='BN Preparation Time'\r\n                      value={values.bnPreparationTime}\r\n                      placeHolder={'১৫ মিনিট'}\r\n                      name='bnPreparationTime'\r\n                      isError={\r\n                        (touched.bnPreparationTime &&\r\n                          errors.bnPreparationTime) ||\r\n                        (!isSubmitting &&\r\n                          addProductState.error['error']['bnPreparationTime'])\r\n                      }\r\n                      errorString={\r\n                        (touched.bnPreparationTime &&\r\n                          errors.bnPreparationTime) ||\r\n                        (!isSubmitting &&\r\n                          addProductState.error['error']['bnPreparationTime'])\r\n                      }\r\n                      onChange={(e: any) => {\r\n                        handleChange(e);\r\n                        setFieldTouched('bnPreparationTime');\r\n                      }}\r\n                    />\r\n\r\n                    <Input\r\n                      label='Cooking Time'\r\n                      placeHolder={'30 min'}\r\n                      value={values.cookingTime}\r\n                      name='cookingTime'\r\n                      isError={\r\n                        (touched.cookingTime && errors.cookingTime) ||\r\n                        (!isSubmitting &&\r\n                          addProductState.error['error']['cookingTime'])\r\n                      }\r\n                      errorString={\r\n                        (touched.cookingTime && errors.cookingTime) ||\r\n                        (!isSubmitting &&\r\n                          addProductState.error['error']['cookingTime'])\r\n                      }\r\n                      onChange={(e: any) => {\r\n                        handleChange(e);\r\n                        setFieldTouched('cookingTime');\r\n                      }}\r\n                    />\r\n\r\n                    <Input\r\n                      label='BN Cooking Time'\r\n                      placeHolder={'৩০ মিনিট'}\r\n                      value={values.bnCookingTime}\r\n                      name='bnCookingTime'\r\n                      isError={\r\n                        (touched.bnCookingTime && errors.bnCookingTime) ||\r\n                        (!isSubmitting &&\r\n                          addProductState.error['error']['bnCookingTime'])\r\n                      }\r\n                      errorString={\r\n                        (touched.bnCookingTime && errors.bnCookingTime) ||\r\n                        (!isSubmitting &&\r\n                          addProductState.error['error']['bnCookingTime'])\r\n                      }\r\n                      onChange={(e: any) => {\r\n                        handleChange(e);\r\n                        setFieldTouched('bnCookingTime');\r\n                      }}\r\n                    />\r\n\r\n                    <Input\r\n                      label='Serving Size'\r\n                      value={values.servingSize}\r\n                      name='servingSize'\r\n                      isError={\r\n                        (touched.servingSize && errors.servingSize) ||\r\n                        (!isSubmitting &&\r\n                          addProductState.error['error']['servingSize'])\r\n                      }\r\n                      errorString={\r\n                        (touched.servingSize && errors.servingSize) ||\r\n                        (!isSubmitting &&\r\n                          addProductState.error['error']['servingSize'])\r\n                      }\r\n                      onChange={(e: any) => {\r\n                        handleChange(e);\r\n                        setFieldTouched('servingSize');\r\n                      }}\r\n                    />\r\n\r\n                    <Input\r\n                      label='BN Serving Size'\r\n                      value={values.bnServingSize}\r\n                      name='bnServingSize'\r\n                      isError={\r\n                        (touched.bnServingSize && errors.bnServingSize) ||\r\n                        (!isSubmitting &&\r\n                          addProductState.error['error']['bnServingSize'])\r\n                      }\r\n                      errorString={\r\n                        (touched.bnServingSize && errors.bnServingSize) ||\r\n                        (!isSubmitting &&\r\n                          addProductState.error['error']['bnServingSize'])\r\n                      }\r\n                      onChange={(e: any) => {\r\n                        handleChange(e);\r\n                        setFieldTouched('bnServingSize');\r\n                      }}\r\n                    />\r\n\r\n                    <Input\r\n                      label='URL'\r\n                      value={values.url}\r\n                      name='url'\r\n                      isError={\r\n                        (touched.url && errors.url) ||\r\n                        (!isSubmitting && addProductState.error['error']['url'])\r\n                      }\r\n                      errorString={\r\n                        (touched.url && errors.url) ||\r\n                        (!isSubmitting && addProductState.error['error']['url'])\r\n                      }\r\n                      onChange={(e: any) => {\r\n                        handleChange(e);\r\n                        setFieldTouched('url');\r\n                      }}\r\n                    />\r\n\r\n                    <h3 className='inputFieldLabel'>Body</h3>\r\n\r\n                    <div\r\n                      style={{\r\n                        width: '100%',\r\n                        maxWidth: '100%',\r\n                      }}\r\n                    >\r\n                      <CKEditor\r\n                        editor={ClassicEditor}\r\n                        data={body}\r\n                        onInit={(editor) => {\r\n                          // You can store the \"editor\" and use when it is needed.\r\n                          console.log('Editor is ready to use!', editor);\r\n                        }}\r\n                        onChange={(event, editor) => {\r\n                          const data = editor.getData();\r\n                          setBody(data);\r\n                        }}\r\n                        onBlur={(event, editor) => {\r\n                          console.log('Blur.', editor);\r\n                        }}\r\n                        onFocus={(event, editor) => {\r\n                          console.log('Focus.', editor);\r\n                        }}\r\n                      />\r\n                    </div>\r\n\r\n                    <div\r\n                      style={{\r\n                        marginTop: '15px',\r\n                      }}\r\n                    ></div>\r\n\r\n                    <h3 className='inputFieldLabel'>BN Body</h3>\r\n\r\n                    <div\r\n                      style={{\r\n                        width: '100%',\r\n                        maxWidth: '100%',\r\n                      }}\r\n                    >\r\n                      <CKEditor\r\n                        editor={ClassicEditor}\r\n                        data={bnBody}\r\n                        onInit={(editor) => {\r\n                          // You can store the \"editor\" and use when it is needed.\r\n                          console.log('Editor is ready to use!', editor);\r\n                        }}\r\n                        onChange={(event, editor) => {\r\n                          const data = editor.getData();\r\n                          setBnBody(data);\r\n                        }}\r\n                        onBlur={(event, editor) => {\r\n                          console.log('Blur.', editor);\r\n                        }}\r\n                        onFocus={(event, editor) => {\r\n                          console.log('Focus.', editor);\r\n                        }}\r\n                      />\r\n                    </div>\r\n\r\n                    {/* <div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\tdisplay: 'flex',\r\n\t\t\t\t\t\t\t\t\t\t\t\tjustifyContent: 'space-between'\r\n\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\twidth: '48%',\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<DatePicker\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabel='Date'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={handleDateChange} />\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\twidth: '48%'\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<DatePicker\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tdate={date}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\twithTime={true}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder='Select time'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabel='Time'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={handleTimeChange} />\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t</div> */}\r\n                    <div\r\n                      style={{\r\n                        marginBottom: '15px',\r\n                      }}\r\n                    ></div>\r\n                    {/* \r\n\t\t\t\t\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\t\t\t\t\trows={1}\r\n\t\t\t\t\t\t\t\t\t\t\t\tlabel='Venue'\r\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.venue}\r\n\t\t\t\t\t\t\t\t\t\t\t\tname='venue'\r\n\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.venue && errors.venue) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['venue'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.venue && errors.venue) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['venue'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('venue');\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\t\tlabel='Purchase Limit'\r\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.purchaseLimit}\r\n\t\t\t\t\t\t\t\t\t\t\t\ttype='number'\r\n\t\t\t\t\t\t\t\t\t\t\t\tname='purchaseLimit'\r\n\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.purchaseLimit && errors.purchaseLimit) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['purchaseLimit'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.purchaseLimit && errors.purchaseLimit) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['purchaseLimit'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('purchaseLimit');\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t/> */}\r\n                  </div>\r\n                </div>\r\n\r\n                <div className='addProductGridContainer__price'>\r\n                  <div className='addProductGridContainer__item-header'>\r\n                    <h3>Products</h3>\r\n\r\n                    <div\r\n                      className={\r\n                        pricing && pricing.length > 0\r\n                          ? 'checkicon-active'\r\n                          : 'checkicon'\r\n                      }\r\n                    >\r\n                      <CheckCircleOutlined />\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className='addProductGridContainer__item-body'>\r\n                    <h3 className='inputFieldLabel'>Products</h3>\r\n                    <SelectProducts\r\n                      setProductIds={setProductIds}\r\n                      productIds={productIds}\r\n                    />\r\n\r\n                    <div\r\n                      style={{\r\n                        marginTop: '15px',\r\n                      }}\r\n                    ></div>\r\n\r\n                    <h3 className='inputFieldLabel'>Selcted Products</h3>\r\n\r\n                    <SelectedProductItems\r\n                      productList={productList}\r\n                      setProductList={setProductList}\r\n                    />\r\n                  </div>\r\n                </div>\r\n\r\n                <div className='addProductGridContainer__image'>\r\n                  <div className='addProductGridContainer__item-header'>\r\n                    <h3>Image</h3>\r\n\r\n                    <Tooltip\r\n                      placement='left'\r\n                      title={\r\n                        'Click on the image to select cover image, By default 1st image is selected as cover'\r\n                      }\r\n                    >\r\n                      <a href='###'>\r\n                        <InfoCircleOutlined />\r\n                      </a>\r\n                    </Tooltip>\r\n                  </div>\r\n                  <div className='addProductGridContainer__item-body'>\r\n                    <div className='aboutToUploadImagesContainer'>\r\n                      {myImages &&\r\n                        // @ts-ignore\r\n                        myImages.length > 0 &&\r\n                        myImages.map((image, index) => {\r\n                          return (\r\n                            <div className='aboutToUploadImagesContainer__item'>\r\n                              <div\r\n                                className='aboutToUploadImagesContainer__item-imgContainer'\r\n                                onClick={() => setCoverImageId(image.id)}\r\n                              >\r\n                                <img src={image.cover} alt={image.alt} />\r\n                              </div>\r\n\r\n                              <span\r\n                                onClick={() => handleImagesDelete(image.id)}\r\n                                className='aboutToUploadImagesContainer__item-remove'\r\n                              >\r\n                                <CloseOutlined />\r\n                              </span>\r\n\r\n                              {coverImageId === image.id ? (\r\n                                <span className='aboutToUploadImagesContainer__item-cover'>\r\n                                  <CheckOutlined />\r\n                                </span>\r\n                              ) : (\r\n                                !coverImageId &&\r\n                                index === 0 && (\r\n                                  <span className='aboutToUploadImagesContainer__item-cover'>\r\n                                    <CheckOutlined />\r\n                                  </span>\r\n                                )\r\n                              )}\r\n                            </div>\r\n                          );\r\n                        })}\r\n\r\n                      <Tooltip title={'Attach images'}>\r\n                        <div\r\n                          onClick={() => {\r\n                            setvisible(true);\r\n                            setisModalOpenForImages(true);\r\n                            setisModalOpenForThumbnail(false);\r\n                          }}\r\n                          className='aboutToUploadImagesContainer__uploadItem'\r\n                        >\r\n                          {/* <FileAddOutlined />\r\n                                                        <FileImageTwoTone />\r\n                                                        <FileImageOutlined /> */}\r\n                          <FileImageFilled />\r\n                          {/* <h5>\r\n                                                                        Select From Library\r\n                                                                <     /h5> */}\r\n                          <span className='aboutToUploadImagesContainer__uploadItem-plus'>\r\n                            <PlusOutlined />\r\n                          </span>\r\n                        </div>\r\n                      </Tooltip>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                <div className='addProductGridContainer__image'>\r\n                  <div className='addProductGridContainer__item-header'>\r\n                    <h3>Meta Data</h3>\r\n\r\n                    <Tooltip\r\n                      placement='left'\r\n                      title={\r\n                        \"Meta data will be used to make the user's easy and for search engine optimization.\"\r\n                      }\r\n                    >\r\n                      <a href='###'>\r\n                        <InfoCircleOutlined />\r\n                      </a>\r\n                    </Tooltip>\r\n                  </div>\r\n                  <div className='addProductGridContainer__item-body'>\r\n                    <Input\r\n                      label='Meta title'\r\n                      value={values.metaTitle}\r\n                      placeHolder={'...'}\r\n                      name='metaTitle'\r\n                      isError={\r\n                        (touched.metaTitle && errors.metaTitle) ||\r\n                        (!isSubmitting &&\r\n                          addProductState.error['error']['metaTitle'])\r\n                      }\r\n                      errorString={\r\n                        (touched.metaTitle && errors.metaTitle) ||\r\n                        (!isSubmitting &&\r\n                          addProductState.error['error']['metaTitle'])\r\n                      }\r\n                      onChange={(e: any) => {\r\n                        handleChange(e);\r\n                        setFieldTouched('metaTitle');\r\n                      }}\r\n                    />\r\n\r\n                    <Input\r\n                      label='BN Meta title'\r\n                      value={values.bnMetaTitle}\r\n                      placeHolder={'...'}\r\n                      name='bnMetaTitle'\r\n                      isError={\r\n                        (touched.bnMetaTitle && errors.bnMetaTitle) ||\r\n                        (!isSubmitting &&\r\n                          addProductState.error['error']['bnMetaTitle'])\r\n                      }\r\n                      errorString={\r\n                        (touched.bnMetaTitle && errors.bnMetaTitle) ||\r\n                        (!isSubmitting &&\r\n                          addProductState.error['error']['bnMetaTitle'])\r\n                      }\r\n                      onChange={(e: any) => {\r\n                        handleChange(e);\r\n                        setFieldTouched('bnMetaTitle');\r\n                      }}\r\n                    />\r\n\r\n                    <TextArea\r\n                      label='Meta description'\r\n                      value={values.metaDescription}\r\n                      placeholder={'meta...'}\r\n                      name='metaDescription'\r\n                      isError={\r\n                        (touched.metaDescription && errors.metaDescription) ||\r\n                        (!isSubmitting &&\r\n                          addProductState.error['error']['metaDescription'])\r\n                      }\r\n                      errorString={\r\n                        (touched.metaDescription && errors.metaDescription) ||\r\n                        (!isSubmitting &&\r\n                          addProductState.error['error']['metaDescription'])\r\n                      }\r\n                      onChange={(e: any) => {\r\n                        handleChange(e);\r\n                        setFieldTouched('metaDescription');\r\n                      }}\r\n                    />\r\n\r\n                    <TextArea\r\n                      label='BN Meta Description'\r\n                      value={values.bnMetaDescription}\r\n                      placeholder={'এইয় মেট...'}\r\n                      name='bnMetaDescription'\r\n                      isError={\r\n                        (touched.bnMetaDescription &&\r\n                          errors.bnMetaDescription) ||\r\n                        (!isSubmitting &&\r\n                          addProductState.error['error']['bnMetaDescription'])\r\n                      }\r\n                      errorString={\r\n                        (touched.bnMetaDescription &&\r\n                          errors.bnMetaDescription) ||\r\n                        (!isSubmitting &&\r\n                          addProductState.error['error']['bnMetaDescription'])\r\n                      }\r\n                      onChange={(e: any) => {\r\n                        handleChange(e);\r\n                        setFieldTouched('bnMetaDescription');\r\n                      }}\r\n                    />\r\n\r\n                    <h3 className='inputFieldLabel'>Meta Tags</h3>\r\n\r\n                    <MetaTags\r\n                      // @ts-ignore\r\n                      setTags={setMetaTags}\r\n                      tags={metaTags}\r\n                    />\r\n\r\n                    <div\r\n                      style={{\r\n                        marginTop: '15px',\r\n                      }}\r\n                    ></div>\r\n\r\n                    <h3 className='inputFieldLabel'>BN Meta Tags</h3>\r\n\r\n                    <MetaTags\r\n                      // @ts-ignore\r\n                      setTags={setBnMetaTags}\r\n                      tags={bnMetaTags}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className='addProductGridContainer__right'>\r\n                <div className='addProductGridContainer__category'>\r\n                  <div className='addProductGridContainer-rightItemContainer'>\r\n                    <div className='addProductGridContainer-rightItemContainer-header'>\r\n                      <h3>Recipe Categories</h3>\r\n\r\n                      <Tooltip\r\n                        color='red'\r\n                        visible={\r\n                          addProductState.error['error']['category'] &&\r\n                          !(categoryids.length > 0)\r\n                        }\r\n                        placement='left'\r\n                        title={'Select at least one category'}\r\n                      >\r\n                        <div\r\n                          className={\r\n                            !(categoryids.length > 0) &&\r\n                            !addProductState.error['error']['category']\r\n                              ? 'checkicon'\r\n                              : addProductState.error['error']['category']\r\n                              ? 'checkicon-error'\r\n                              : 'checkicon-active'\r\n                          }\r\n                        >\r\n                          <CheckCircleOutlined />\r\n                        </div>\r\n                      </Tooltip>\r\n                    </div>\r\n                    <div className='addProductGridContainer-rightItemContainer-body'>\r\n                      <Categories\r\n                        setCategoryOptions={setCategoryOptions}\r\n                        categoryOptions={categoryOptions}\r\n                        setcategoryIds={setcategoryIds}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                <div className='addProductGridContainer__tag'>\r\n                  <div className='addProductGridContainer-rightItemContainer'>\r\n                    <div className='addProductGridContainer-rightItemContainer-header'>\r\n                      <h3>Recipe Tags</h3>\r\n                    </div>\r\n                    <div className='addProductGridContainer-rightItemContainer-body'>\r\n                      <Tags\r\n                        setSelectedTags={setSelectedTags}\r\n                        selectedTags={selectedTags}\r\n                        setTagIds={setTagIds}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </section>\r\n          </Modal>\r\n\r\n          <MediaLibrary\r\n            setvisible={setvisible}\r\n            visible={visible}\r\n            setmyImages={setmyImages}\r\n            myImages={myImages}\r\n            setmyThumbnailImage={setmyThumbnailImage}\r\n            isModalOpenForThumbnail={isModalOpenForThumbnail}\r\n            isModalOpenForImages={isModalOpenForImages}\r\n          />\r\n        </>\r\n      )}\r\n    </Formik>\r\n  );\r\n};\r\n\r\nexport default AddNewProduct;\r\n\r\n/*\r\n\r\n\r\nProduct variation ---->\r\n\r\nPrice [title]\r\n\t[regular input field] [offer inputfield]\r\n\r\nStock [title]\r\n\t[available input field] [minimum inputfield]\r\n\r\ndefault [default can be set to true]\r\n\r\nattributes [title]\r\n\t[add attributes name]\r\n\t\t[add attrubutes value]\r\n\r\n\t[add attributes name]\r\n\t\t[add attrubutes value\r\n\r\n*/ //\r\n","import React, { useState, useEffect } from 'react';\r\n\r\n// import third party ui lib\r\nimport {\r\n  Empty,\r\n  Popconfirm,\r\n  Upload,\r\n  message,\r\n  Switch,\r\n  Select,\r\n  Button,\r\n  notification,\r\n  Table,\r\n  Space,\r\n  Input as CoolInput,\r\n  Tooltip,\r\n  Modal,\r\n} from 'antd';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { useHistory } from 'react-router';\r\nimport Moment from 'react-moment';\r\n\r\nimport {\r\n  FileOutlined,\r\n  InboxOutlined,\r\n  RadiusUpleftOutlined,\r\n  RadiusUprightOutlined,\r\n  RadiusBottomleftOutlined,\r\n  RadiusBottomrightOutlined,\r\n  PlusOutlined,\r\n  DeleteOutlined,\r\n  EditOutlined,\r\n  CheckCircleOutlined,\r\n} from '@ant-design/icons';\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n/// import hooks\r\nimport { useFetch, useHandleFetch } from '../../hooks';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport { DataTableSkeleton } from '../../components/Placeholders';\r\nimport ProductBundleQuickEdit from './PostQuickEdit';\r\nimport AddNewProductBundle from './AddNewPost';\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n  notification.success({\r\n    message: message || 'Recipe Created',\r\n    description: '',\r\n    icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n  });\r\n};\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n  notification.error({\r\n    message: message || 'Something Went Wrong',\r\n    description: '',\r\n    icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n  });\r\n};\r\n\r\nconst validationSchema = Yup.object().shape({\r\n  name: Yup.string()\r\n    .label('Name')\r\n    .required('Name is required')\r\n    .min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\nconst initialValues = {\r\n  name: '',\r\n  description: '',\r\n};\r\n\r\nconst { Column, ColumnGroup } = Table;\r\nconst { Search } = CoolInput;\r\n\r\nconst MyTable = ({ data, setTagList }) => {\r\n  const [visible, setvisible] = useState(false);\r\n  const [activeCategoryForEdit, setactiveCategoryForEdit] = useState(false);\r\n  const [deleteTagState, handleDeleteTagFetch] = useHandleFetch(\r\n    {},\r\n    'deletePost'\r\n  );\r\n\r\n  const history = useHistory();\r\n\r\n  const handleDeleteTag = async (id) => {\r\n    const deleteTagRes = await handleDeleteTagFetch({\r\n      urlOptions: {\r\n        placeHolders: {\r\n          id,\r\n        },\r\n      },\r\n    });\r\n\r\n    // @ts-ignore\r\n    if (deleteTagRes && deleteTagRes.status === 'ok') {\r\n      openSuccessNotification('Deleted Recipe');\r\n      const newtagList = data.filter((item) => item.id !== id);\r\n      setTagList(newtagList);\r\n    }\r\n  };\r\n\r\n  const handleOk = (e: any) => {\r\n    setvisible(false);\r\n  };\r\n\r\n  const handleCancel = (e: any) => {\r\n    setvisible(false);\r\n  };\r\n\r\n  const getCover = (record: any) => {\r\n    if (record.cover) {\r\n      return record.cover;\r\n    } else return '';\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Table\r\n        // expandable={{\r\n        //     expandedRowRender: record => <p style={{ margin: 0 }}>{record.name}</p>,\r\n        //     rowExpandable: record => record.name !== 'Not Expandable',\r\n        //   }}\r\n        // bordered={true}\r\n        size='small'\r\n        // pagination={false}\r\n        dataSource={data}\r\n      >\r\n        <Column\r\n          title=''\r\n          dataIndex='cover'\r\n          key='id'\r\n          width={'80px'}\r\n          className='classnameofthecolumn'\r\n          render={(cover, record: any) => (\r\n            <>\r\n              <div\r\n                className='listCoverImage'\r\n                onClick={() => {\r\n                  history.push(`/admin/posts/${record.id}`);\r\n                  setactiveCategoryForEdit(record);\r\n                }}\r\n              >\r\n                <img src={getCover(record)} alt='' />\r\n              </div>\r\n            </>\r\n          )}\r\n        />\r\n\r\n        <Column\r\n          title='Name'\r\n          dataIndex='name'\r\n          key='id'\r\n          className='classnameofthecolumn'\r\n          render={(text, record: any) => (\r\n            <>\r\n              <h4\r\n                onClick={() => {\r\n                  history.push(`/admin/posts/${record.id}`);\r\n                  // setBrandDetailVisible(true);\r\n                  setactiveCategoryForEdit(record);\r\n                }}\r\n                style={{\r\n                  fontWeight: 400,\r\n                  color: '#555',\r\n                  cursor: 'pointer',\r\n                }}\r\n              >\r\n                {text}\r\n              </h4>\r\n            </>\r\n          )}\r\n        />\r\n\r\n        <Column\r\n          title='Preparation Time'\r\n          dataIndex='preparationTime'\r\n          key='id'\r\n          className='classnameofthecolumn'\r\n        />\r\n\r\n        <Column\r\n          title='Cooking Time'\r\n          dataIndex='cookingTime'\r\n          key='id'\r\n          className='classnameofthecolumn'\r\n        />\r\n\r\n        <Column\r\n          title='People'\r\n          dataIndex='servingSize'\r\n          key='id'\r\n          className='classnameofthecolumn'\r\n        />\r\n\r\n        <Column\r\n          className='classnameofthecolumn'\r\n          title=''\r\n          key='action'\r\n          align='right'\r\n          render={(text, record: any) => (\r\n            <Space size='middle'>\r\n              <a href='##'>\r\n                <Tooltip placement='top' title='Edit recipe'>\r\n                  <span\r\n                    className='iconSize'\r\n                    onClick={() => {\r\n                      setvisible(true);\r\n                      setactiveCategoryForEdit(record);\r\n                    }}\r\n                  >\r\n                    <EditOutlined />\r\n                  </span>\r\n                </Tooltip>\r\n              </a>\r\n\r\n              <Popconfirm\r\n                onConfirm={() => handleDeleteTag(record.id)}\r\n                title='Are you sure？'\r\n                okText='Yes'\r\n                cancelText='No'\r\n              >\r\n                <span className='iconSize iconSize-danger'>\r\n                  <DeleteOutlined />\r\n                </span>\r\n              </Popconfirm>\r\n            </Space>\r\n          )}\r\n        />\r\n      </Table>\r\n\r\n      {activeCategoryForEdit && (\r\n        <ProductBundleQuickEdit\r\n          productList={data}\r\n          setProductList={setTagList}\r\n          setAddNewCategoryVisible={setvisible}\r\n          addNewCategoryVisible={visible}\r\n          productDetailData={activeCategoryForEdit}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\ninterface Props {}\r\n\r\nconst TagList = ({}: Props) => {\r\n  const [tagList, setTagList] = useState([]);\r\n\r\n  const [tagState, handleTagListFetch] = useHandleFetch({}, 'postList');\r\n\r\n  console.log('postListData', tagState);\r\n\r\n  useEffect(() => {\r\n    const setTags = async () => {\r\n      const tags = await handleTagListFetch({\r\n        urlOptions: {\r\n          params: {\r\n            sortItem: 'added',\r\n            sortOrderValue: '-1',\r\n          },\r\n        },\r\n      });\r\n      // @ts-ignore\r\n      setTagList(tags);\r\n    };\r\n    setTags();\r\n  }, []);\r\n\r\n  const [addNewCategoryVisible, setAddNewCategoryVisible] = useState(false);\r\n\r\n  const getisSubmitButtonDisabled = (values, isValid) => {\r\n    if (!values.name || !isValid) {\r\n      return true;\r\n    }\r\n    return false;\r\n  };\r\n\r\n  const handleOkAddNewCategory = (e: any) => {\r\n    setAddNewCategoryVisible(false);\r\n  };\r\n\r\n  const handleCancelAddNewCategory = (e: any) => {\r\n    setAddNewCategoryVisible(false);\r\n  };\r\n\r\n  const handleSearch = (value) => {\r\n    if (tagState.data.length > 0) {\r\n      const newTagList = tagState.data.filter((item) =>\r\n        item.name.toLowerCase().includes(value.toLowerCase())\r\n      );\r\n      setTagList(newTagList);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className='categoryListContainer'>\r\n        <div className='categoryListContainer__header'>\r\n          <div className='categoryListContainer__header-searchBar-tag'>\r\n            <h2 className='categoryListContainer__header-title'>Recipes</h2>\r\n            <Search\r\n              enterButton={false}\r\n              className='searchbarClassName'\r\n              placeholder='search recipes..'\r\n              onChange={(e) => handleSearch(e.target.value)}\r\n            />\r\n          </div>\r\n          <Button\r\n            // type=\"primary\"\r\n            className='btnPrimaryClassNameoutline'\r\n            icon={<PlusOutlined />}\r\n            onClick={() => setAddNewCategoryVisible(true)}\r\n          >\r\n            Add New\r\n          </Button>\r\n        </div>\r\n        <div className='categoryListContainer__categoryList'>\r\n          {tagState.done && tagList.length > 0 && (\r\n            <MyTable setTagList={setTagList} data={tagList} />\r\n          )}\r\n          {tagState.isLoading && <DataTableSkeleton />}\r\n\r\n          {tagState.done && !(tagList.length > 0) && (\r\n            <div\r\n              style={{\r\n                marginTop: '200px',\r\n              }}\r\n            >\r\n              <Empty\r\n                description='No Recipe found'\r\n                image={Empty.PRESENTED_IMAGE_SIMPLE}\r\n              />\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <AddNewProductBundle\r\n        productList={tagList}\r\n        setProductList={setTagList}\r\n        addNewCategoryVisible={addNewCategoryVisible}\r\n        setAddNewCategoryVisible={setAddNewCategoryVisible}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TagList;\r\n","// @ts-nocheck\r\nimport React, { useState, useEffect } from 'react';\r\n\r\n// import hooks\r\nimport { useHandleFetch } from '../../hooks';\r\n\r\n// import libraries\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport {\r\n  message,\r\n  Tooltip,\r\n  Modal,\r\n  Tabs,\r\n  Empty,\r\n  Badge,\r\n  Spin,\r\n  Button,\r\n} from 'antd';\r\nimport CKEditor from '@ckeditor/ckeditor5-react';\r\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\r\n\r\nimport {\r\n  DeleteOutlined,\r\n  FileAddOutlined,\r\n  CheckCircleOutlined,\r\n  FileImageFilled,\r\n  PlusOutlined,\r\n  PlusCircleOutlined,\r\n  CloseOutlined,\r\n  CheckOutlined,\r\n  InfoCircleOutlined,\r\n} from '@ant-design/icons';\r\n\r\n// import ReactQuill from 'react-quill';\r\n// import 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport MediaLibrary from '../../components/MediaLibrary';\r\nimport {\r\n  openSuccessNotification,\r\n  openErrorNotification,\r\n} from '../../components/Notification';\r\nimport MetaTags from '../category/MetaTags';\r\n\r\nimport Tags from './Tags';\r\nimport Brands from './Brands';\r\nimport Categories from './Categories';\r\nimport SelectProducts from './SelectProducts';\r\nimport SelectedProductItems from './SelectedProductItems';\r\n\r\nconst { TabPane } = Tabs;\r\n\r\nconst validationSchema = Yup.object().shape({\r\n  name: Yup.string()\r\n    .label('Name')\r\n    .required('Name is required')\r\n    .min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\nconst initialValues = {\r\n  name: '',\r\n  url: '',\r\n  preparationTime: '',\r\n  servingSize: '',\r\n  cookingTime: '',\r\n  body: '',\r\n  bnName: '',\r\n  bnBody: '',\r\n  bnPreparationTime: '',\r\n  bnServingSize: '',\r\n  bnCookingTime: '',\r\n  metaTitle: '',\r\n  bnMetaTitle: '',\r\n  metaDescription: '',\r\n  bnMetaDescription: '',\r\n  metaTags: '',\r\n  bnMetaTags: '',\r\n};\r\n\r\ninterface Props {\r\n  addNewCategoryVisible: any;\r\n  setAddNewCategoryVisible: any;\r\n  setPostDetailData?: any;\r\n  productDetailData?: any;\r\n}\r\n\r\nconst ModalComponentChild = ({\r\n  addNewCategoryVisible,\r\n  setAddNewCategoryVisible,\r\n  productDetailData,\r\n  setPostDetailData,\r\n}) => {\r\n  const [addProductState, handleAddProductFetch] = useHandleFetch(\r\n    {},\r\n    'updatePost'\r\n  );\r\n  const [productDetailState, handleProductDetailFetch] = useHandleFetch(\r\n    {},\r\n    'postDetail'\r\n  );\r\n  const [visible, setvisible] = useState(false);\r\n  const [myImages, setmyImages] = useState(false);\r\n  const [myThumbnailImage, setmyThumbnailImage] = useState(false);\r\n  const [isModalOpenForThumbnail, setisModalOpenForThumbnail] = useState(false);\r\n  const [isModalOpenForImages, setisModalOpenForImages] = useState(false);\r\n  const [categoryids, setcategoryIds] = useState([]);\r\n  const [tagIds, setTagIds] = useState([]);\r\n  const [brandId, setBrandId] = useState('');\r\n  const [pricing, setPricing] = useState([]);\r\n  const [coverImageId, setCoverImageId] = useState('');\r\n  const [categoryOptions, setCategoryOptions] = useState([]);\r\n  const [selectedTags, setSelectedTags] = useState([]);\r\n  const [body, setBody] = useState('');\r\n  const [bnBody, setBnBody] = useState('');\r\n  const [productIds, setProductIds] = useState([]);\r\n  const [productList, setProductList] = useState([]);\r\n  const [metaTags, setMetaTags] = useState([]);\r\n  const [bnMetaTags, setBnMetaTags] = useState([]);\r\n\r\n  const [\r\n    attachImageToItemMultipleState,\r\n    handleAttachImageToItemMultipleFetch,\r\n  ] = useHandleFetch({}, 'attachImageToItemMultiple');\r\n  const [\r\n    attachImageToItemSingleState,\r\n    handleAttachImageToItemSingleFetch,\r\n  ] = useHandleFetch({}, 'attachImageToItemSingle');\r\n  const [\r\n    detachImageFromItemMultipleState,\r\n    handleDetachImageFromItemMultipleFetch,\r\n  ] = useHandleFetch({}, 'detachImageFromItemMultiple');\r\n  const [\r\n    detachImageFromItemSingleState,\r\n    handleDetachImageFromItemSingleFetch,\r\n  ] = useHandleFetch({}, 'detachImageFromItemSingle');\r\n  const [\r\n    setImageAsThumbnailToItemState,\r\n    handleSetImageAsThumbnailToItemFetch,\r\n  ] = useHandleFetch({}, 'setImageAsThumbnailToItem');\r\n\r\n  console.log('myPostState', productDetailState);\r\n  useEffect(() => {\r\n    const getProductDetail = async () => {\r\n      await handleProductDetailFetch({\r\n        urlOptions: {\r\n          placeHolders: {\r\n            id: productDetailData.id,\r\n          },\r\n          params: {\r\n            imageValue: 1,\r\n            tagsOne: '1',\r\n            categoryOne: '1',\r\n          },\r\n        },\r\n      });\r\n    };\r\n\r\n    getProductDetail();\r\n  }, [productDetailData]);\r\n\r\n  useEffect(() => {\r\n    if (\r\n      productDetailState.data &&\r\n      Object.keys(productDetailState.data).length > 0\r\n    ) {\r\n      const images = productDetailState.data.image;\r\n      let mahImages = [];\r\n\r\n      if (images && images.length > 0) {\r\n        mahImages = images;\r\n      }\r\n\r\n      if (\r\n        productDetailState.data.cover &&\r\n        productDetailState.data.cover['id']\r\n      ) {\r\n        const ixists = images.find(\r\n          (item) => item.id === productDetailState.data.cover['id']\r\n        );\r\n        if (!ixists) {\r\n          mahImages = [productDetailState.data.cover, ...mahImages];\r\n        }\r\n\r\n        setCoverImageId(productDetailState.data.cover['id']);\r\n      }\r\n\r\n      // @ts-ignore\r\n      setmyImages(mahImages);\r\n    }\r\n  }, [productDetailState.data]);\r\n\r\n  useEffect(() => {\r\n    // @ts-ignore\r\n    if (myImages && myImages[0] && myImages.length < 2) {\r\n      if (coverImageId !== myImages[0].id) {\r\n        setCoverImageId(myImages[0].id);\r\n        handleSetImageAsThumnail(myImages[0]);\r\n      }\r\n    }\r\n  }, [myImages]);\r\n\r\n  console.log('myLoadImages', myImages);\r\n\r\n  const handleDetachSingleImage = async (id) => {\r\n    await handleDetachImageFromItemSingleFetch({\r\n      urlOptions: {\r\n        placeHolders: {\r\n          imageId: id,\r\n          collection: 'post',\r\n          itemId: productDetailData.id,\r\n        },\r\n      },\r\n    });\r\n  };\r\n\r\n  const handleSetImageAsThumnail = async (image) => {\r\n    const thumbnailRes = await handleSetImageAsThumbnailToItemFetch({\r\n      urlOptions: {\r\n        placeHolders: {\r\n          imageId: image.id,\r\n          collection: 'post',\r\n          itemId: productDetailData.id,\r\n        },\r\n      },\r\n    });\r\n\r\n    // @ts-ignore\r\n    if (thumbnailRes && thumbnailRes.status === 'ok') {\r\n      // openSuccessNotification('Set as thumbnail!');\r\n    } else {\r\n      openErrorNotification(\"Couldn't set as thumbnail, Something went wrong\");\r\n    }\r\n  };\r\n\r\n  const handleImagesDelete = (id) => {\r\n    // @ts-ignore\r\n    const newImages =\r\n      myImages &&\r\n      myImages.filter((image) => {\r\n        return image.id !== id;\r\n      });\r\n\r\n    setmyImages(newImages);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (\r\n      productDetailState.done &&\r\n      productDetailState.data &&\r\n      Object.keys(productDetailState.data).length > 0\r\n    ) {\r\n      console.log('5555', productDetailState);\r\n      const productDetailData = productDetailState.data;\r\n      if (productDetailData && productDetailData.brand) {\r\n        setBrandId(productDetailData.brand['id']);\r\n      } else {\r\n        setBrandId('');\r\n      }\r\n\r\n      if (\r\n        productDetailData &&\r\n        productDetailData.tags &&\r\n        productDetailData.tags.length > 0\r\n      ) {\r\n        const tagNames = productDetailData.tags.map((item) => item.name);\r\n        const tagIds = productDetailData.tags.map((item) => item._id);\r\n        console.log('tags55----', tagNames, tagIds);\r\n        setSelectedTags(tagNames);\r\n        setTagIds(tagIds);\r\n      } else {\r\n        setTagIds([]);\r\n        setSelectedTags([]);\r\n      }\r\n      if (\r\n        productDetailData &&\r\n        productDetailData.category &&\r\n        productDetailData.category.length > 0\r\n      ) {\r\n        const categoryIds = productDetailData.category;\r\n        setCategoryOptions(categoryIds);\r\n      } else {\r\n        setCategoryOptions([]);\r\n      }\r\n\r\n      if (productDetailData && productDetailData.body) {\r\n        setBody(productDetailData.body);\r\n      } else {\r\n        setBody('');\r\n      }\r\n\r\n      if (\r\n        productDetailData &&\r\n        productDetailData.bn &&\r\n        productDetailData.bn['body']\r\n      ) {\r\n        setBnBody(productDetailData.bn['body']);\r\n      } else {\r\n        setBnBody('');\r\n      }\r\n    }\r\n  }, [productDetailState]);\r\n\r\n  console.log('postSelectedTagsIds', selectedTags);\r\n  console.log('TagsIds', tagIds);\r\n  useEffect(() => {\r\n    if (\r\n      productDetailState.done &&\r\n      productDetailState['data'] &&\r\n      Object.keys(productDetailState['data']).length > 0 && [\r\n        'requiredProducts',\r\n      ] &&\r\n      productDetailState['data']['requiredProducts'].length > 0\r\n    ) {\r\n      const productIds = productDetailState['data']['requiredProducts'].map(\r\n        (item) => item\r\n      );\r\n      setProductIds(productIds);\r\n      const productList = productDetailState['data']['requiredProducts'].map(\r\n        (item) => {\r\n          return {\r\n            ...item,\r\n            _id: item._id,\r\n            variation: item.variation,\r\n            quantity: item.quantity,\r\n          };\r\n        }\r\n      );\r\n      setProductList(productList);\r\n    }\r\n  }, [productDetailState]);\r\n\r\n  console.log('couponDetialQuickEdit', productDetailState);\r\n\r\n  useEffect(() => {\r\n    if (productIds.length > 0) {\r\n      if (productIds.length > productList.length) {\r\n        const variation =\r\n          productIds[productIds.length - 1]['pricing'].length > 0 &&\r\n          productIds[productIds.length - 1]['pricing'][0]['_id'];\r\n        console.log('variation', variation);\r\n\r\n        setProductList([\r\n          ...productList,\r\n          {\r\n            ...productIds[productIds.length - 1],\r\n            _id: productIds[productIds.length - 1]['id'],\r\n            variation: variation,\r\n            quantity: 1,\r\n          },\r\n        ]);\r\n      } else if (productIds.length < productList.length) {\r\n        console.log('productIds', productIds);\r\n        console.log('productList', productList);\r\n\r\n        const newProductList = productList.filter((item) => {\r\n          let isTrue = false;\r\n          productIds.forEach((product) => {\r\n            if (product.id === item._id) {\r\n              isTrue = true;\r\n            }\r\n          });\r\n          return isTrue;\r\n        });\r\n        setProductList(newProductList);\r\n      }\r\n    } else {\r\n      setProductList([]);\r\n    }\r\n    // console.log('productIds', productIds)\r\n  }, [productIds]);\r\n\r\n  const handleSubmit = async (values: any, actions: any) => {\r\n    // @ts-ignore\r\n    const imagesIds =\r\n      myImages && myImages[0]\r\n        ? // @ts-ignore\r\n          myImages.map((image) => {\r\n            return image.id;\r\n          })\r\n        : [];\r\n\r\n    const products =\r\n      productList.length > 0\r\n        ? productList.map((product) => {\r\n            return {\r\n              _id: product._id,\r\n              variation: product.variation,\r\n              quantity: product.quantity,\r\n            };\r\n          })\r\n        : [];\r\n\r\n    if (productDetailData && Object.keys(productDetailData).length > 0) {\r\n      const aboutToUpdatedImageIds = [];\r\n\r\n      if (imagesIds && imagesIds.length > 0) {\r\n        imagesIds.forEach((imageId) => {\r\n          if (productDetailData && productDetailData['image']) {\r\n            if (!productDetailData['image'].includes(imageId)) {\r\n              aboutToUpdatedImageIds.push(imageId);\r\n            }\r\n          }\r\n        });\r\n      }\r\n\r\n      if (aboutToUpdatedImageIds[0] && aboutToUpdatedImageIds.length > 1) {\r\n        await handleAttachImageToItemMultipleFetch({\r\n          urlOptions: {\r\n            placeHolders: {\r\n              collection: 'post',\r\n              itemId: productDetailData.id,\r\n            },\r\n          },\r\n          body: {\r\n            image: aboutToUpdatedImageIds,\r\n          },\r\n        });\r\n      } else if (\r\n        aboutToUpdatedImageIds[0] &&\r\n        aboutToUpdatedImageIds.length < 1\r\n      ) {\r\n        await handleAttachImageToItemSingleFetch({\r\n          urlOptions: {\r\n            placeHolders: {\r\n              imageId: aboutToUpdatedImageIds[0].id,\r\n              collection: 'post',\r\n              itemId: productDetailData.id,\r\n            },\r\n          },\r\n        });\r\n      }\r\n    }\r\n\r\n    const addProductRes = await handleAddProductFetch({\r\n      urlOptions: {\r\n        placeHolders: {\r\n          id: productDetailData.id,\r\n        },\r\n      },\r\n      body: {\r\n        name: values.name.trim(),\r\n        category: categoryOptions,\r\n        tags: tagIds,\r\n        image: imagesIds,\r\n        body: body,\r\n        requiredProducts: products,\r\n        preparationTime: values.preparationTime,\r\n        servingSize: values.servingSize,\r\n        cookingTime: values.cookingTime,\r\n        metaTitle: values.metaTitle,\r\n        metaDescription: values.metaDescription,\r\n        metaTags: metaTags && metaTags.length > 0 ? metaTags.join(',') : '',\r\n\r\n        bn: {\r\n          metaTitle: values.bnMetaTitle,\r\n          metaDescription: values.bnMetaDescription,\r\n          metaTags:\r\n            bnMetaTags && bnMetaTags.length > 0 ? bnMetaTags.join(',') : '',\r\n          name: values.bnName.trim(),\r\n          preparationTime: values.bnPreparationTime,\r\n          body: bnBody,\r\n          servingSize: values.bnServingSize,\r\n          cookingTime: values.bnCookingTime,\r\n        },\r\n      },\r\n    });\r\n\r\n    console.log('addProductRes', addProductRes);\r\n\r\n    // @ts-ignore\r\n    if (addProductRes && addProductRes.status === 'ok') {\r\n      openSuccessNotification('Recipe Updated');\r\n\r\n      setPostDetailData({\r\n        ...addProductRes,\r\n        id: productDetailData['id'] || '',\r\n        key: productDetailData['id'] || '',\r\n        name: values.name || '',\r\n        // cover: addProductRes['cover']['cover'] || '',\r\n      });\r\n\r\n      setAddNewCategoryVisible(false);\r\n\r\n      // @ts-ignore\r\n      setmyImages([]);\r\n      setCoverImageId('');\r\n      setPricing([]);\r\n      setTagIds([]);\r\n      setSelectedTags([]);\r\n      setBrandId('');\r\n      setcategoryIds([]);\r\n      setCategoryOptions([]);\r\n      setBnBody('');\r\n      setBody('');\r\n      setMetaTags([]);\r\n      setBnMetaTags([]);\r\n      setProductIds([]);\r\n      setProductList([]);\r\n      actions.resetForm();\r\n    } else {\r\n      // openErrorNotification();\r\n    }\r\n\r\n    actions.setSubmitting(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!addProductState['isLoading']) {\r\n      const error = addProductState['error'];\r\n      if (error['isError'] && Object.keys(error['error']).length > 0) {\r\n        const errors =\r\n          Object.values(error['error']).length > 0\r\n            ? Object.values(error['error'])\r\n            : [];\r\n        errors.forEach((err, i) => {\r\n          if (typeof err === 'string') {\r\n            openErrorNotification(err);\r\n          } else if (typeof err === 'object') {\r\n            if (err && Object.keys(err).length > 0) {\r\n              const errs = Object.values(err);\r\n              errs.forEach((err) => {\r\n                openErrorNotification(err);\r\n              });\r\n            }\r\n          }\r\n        });\r\n      }\r\n    }\r\n  }, [addProductState]);\r\n\r\n  const handleCancel = (e: any) => {\r\n    setAddNewCategoryVisible(false);\r\n    setmyImages([]);\r\n    setCoverImageId('');\r\n    setPricing([]);\r\n    setTagIds([]);\r\n    setSelectedTags([]);\r\n    setBrandId('');\r\n    setcategoryIds([]);\r\n    setCategoryOptions([]);\r\n    setBnBody('');\r\n    setBody('');\r\n    setMetaTags([]);\r\n    setBnMetaTags([]);\r\n    setProductIds([]);\r\n    setProductList([]);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (productDetailData && Object.keys(productDetailData).length > 0) {\r\n      const metaTags =\r\n        productDetailData.metaTags && productDetailData.metaTags.split(',');\r\n\r\n      console.log('localMetaTags', metaTags);\r\n\r\n      const bnMetaTags =\r\n        productDetailData.bn &&\r\n        productDetailData.bn['metaTags'] &&\r\n        productDetailData.bn['metaTags'].split(',');\r\n      setMetaTags(metaTags || []);\r\n      setBnMetaTags(bnMetaTags || []);\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <Formik\r\n      onSubmit={(values, actions) => handleSubmit(values, actions)}\r\n      validationSchema={validationSchema}\r\n      validateOnBlur={false}\r\n      enableReinitialize={true}\r\n      initialValues={{\r\n        ...initialValues,\r\n        ...{\r\n          ...productDetailData,\r\n          ...(productDetailState['data'] &&\r\n            Object.keys(productDetailState['data']).length > 0 &&\r\n            productDetailState['data']['bn'] && {\r\n              bnMetaTitle: productDetailState['data']['bn'].metaTitle,\r\n              bnMetaDescription:\r\n                productDetailState['data']['bn'].metaDescription,\r\n              bnName: productDetailState['data']['bn'].name,\r\n              metaUnit: productDetailState['data']['bn'].unit,\r\n              bnDescription: productDetailState['data']['bn'].description,\r\n            }),\r\n        },\r\n      }}\r\n    >\r\n      {({\r\n        handleChange,\r\n        values,\r\n        handleSubmit,\r\n        errors,\r\n        isValid,\r\n        isSubmitting,\r\n        touched,\r\n        handleBlur,\r\n        setFieldTouched,\r\n        handleReset,\r\n      }) => (\r\n        <>\r\n          <section className='addProductGridContainer'>\r\n            <div className='addProductGridContainer__left'>\r\n              <div className='addProductGridContainer__name'>\r\n                <div className='addProductGridContainer__item-header'>\r\n                  <h3>Recipe Information</h3>\r\n\r\n                  <div\r\n                    className={\r\n                      values.name && values.name.length > 2\r\n                        ? 'checkicon-active'\r\n                        : 'checkicon'\r\n                    }\r\n                  >\r\n                    <CheckCircleOutlined />\r\n                  </div>\r\n                </div>\r\n                <div className='addProductGridContainer__item-body'>\r\n                  <Input\r\n                    label='Name'\r\n                    placeHolder='Rafti oxy'\r\n                    value={values.name}\r\n                    name='name'\r\n                    isError={\r\n                      (touched.name && errors.name) ||\r\n                      (!isSubmitting && addProductState.error['error']['name'])\r\n                    }\r\n                    errorString={\r\n                      (touched.name && errors.name) ||\r\n                      (!isSubmitting && addProductState.error['error']['name'])\r\n                    }\r\n                    onChange={(e: any) => {\r\n                      handleChange(e);\r\n                      setFieldTouched('name');\r\n                    }}\r\n                  />\r\n\r\n                  <Input\r\n                    label='BN Name'\r\n                    value={values.bnName}\r\n                    placeHolder={'রাফতি অক্স'}\r\n                    name='bnName'\r\n                    isError={\r\n                      (touched.bnName && errors.bnName) ||\r\n                      (!isSubmitting &&\r\n                        addProductState.error['error']['bnName'])\r\n                    }\r\n                    errorString={\r\n                      (touched.bnName && errors.bnName) ||\r\n                      (!isSubmitting &&\r\n                        addProductState.error['error']['bnName'])\r\n                    }\r\n                    onChange={(e: any) => {\r\n                      handleChange(e);\r\n                      setFieldTouched('bnName');\r\n                    }}\r\n                  />\r\n\r\n                  <Input\r\n                    label='Preparation Time'\r\n                    value={values.preparationTime}\r\n                    placeHolder='15 min'\r\n                    name='preparationTime'\r\n                    isError={\r\n                      (touched.preparationTime && errors.preparationTime) ||\r\n                      (!isSubmitting &&\r\n                        addProductState.error['error']['preparationTime'])\r\n                    }\r\n                    errorString={\r\n                      (touched.preparationTime && errors.preparationTime) ||\r\n                      (!isSubmitting &&\r\n                        addProductState.error['error']['preparationTime'])\r\n                    }\r\n                    onChange={(e: any) => {\r\n                      handleChange(e);\r\n                      setFieldTouched('preparationTime');\r\n                    }}\r\n                  />\r\n\r\n                  <Input\r\n                    label='BN Preparation Time'\r\n                    value={values.bnPreparationTime}\r\n                    placeHolder={'১৫ মিনিট'}\r\n                    name='bnPreparationTime'\r\n                    isError={\r\n                      (touched.bnPreparationTime && errors.bnPreparationTime) ||\r\n                      (!isSubmitting &&\r\n                        addProductState.error['error']['bnPreparationTime'])\r\n                    }\r\n                    errorString={\r\n                      (touched.bnPreparationTime && errors.bnPreparationTime) ||\r\n                      (!isSubmitting &&\r\n                        addProductState.error['error']['bnPreparationTime'])\r\n                    }\r\n                    onChange={(e: any) => {\r\n                      handleChange(e);\r\n                      setFieldTouched('bnPreparationTime');\r\n                    }}\r\n                  />\r\n\r\n                  <Input\r\n                    label='Cooking Time'\r\n                    placeHolder={'30 min'}\r\n                    value={values.cookingTime}\r\n                    name='cookingTime'\r\n                    isError={\r\n                      (touched.cookingTime && errors.cookingTime) ||\r\n                      (!isSubmitting &&\r\n                        addProductState.error['error']['cookingTime'])\r\n                    }\r\n                    errorString={\r\n                      (touched.cookingTime && errors.cookingTime) ||\r\n                      (!isSubmitting &&\r\n                        addProductState.error['error']['cookingTime'])\r\n                    }\r\n                    onChange={(e: any) => {\r\n                      handleChange(e);\r\n                      setFieldTouched('cookingTime');\r\n                    }}\r\n                  />\r\n\r\n                  <Input\r\n                    label='BN Cooking Time'\r\n                    placeHolder={'৩০ মিনিট'}\r\n                    value={values.bnCookingTime}\r\n                    name='bnCookingTime'\r\n                    isError={\r\n                      (touched.bnCookingTime && errors.bnCookingTime) ||\r\n                      (!isSubmitting &&\r\n                        addProductState.error['error']['bnCookingTime'])\r\n                    }\r\n                    errorString={\r\n                      (touched.bnCookingTime && errors.bnCookingTime) ||\r\n                      (!isSubmitting &&\r\n                        addProductState.error['error']['bnCookingTime'])\r\n                    }\r\n                    onChange={(e: any) => {\r\n                      handleChange(e);\r\n                      setFieldTouched('bnCookingTime');\r\n                    }}\r\n                  />\r\n\r\n                  <Input\r\n                    label='Serving Size'\r\n                    value={values.servingSize}\r\n                    name='servingSize'\r\n                    isError={\r\n                      (touched.servingSize && errors.servingSize) ||\r\n                      (!isSubmitting &&\r\n                        addProductState.error['error']['servingSize'])\r\n                    }\r\n                    errorString={\r\n                      (touched.servingSize && errors.servingSize) ||\r\n                      (!isSubmitting &&\r\n                        addProductState.error['error']['servingSize'])\r\n                    }\r\n                    onChange={(e: any) => {\r\n                      handleChange(e);\r\n                      setFieldTouched('servingSize');\r\n                    }}\r\n                  />\r\n\r\n                  <Input\r\n                    label='BN Serving Size'\r\n                    value={values.bnServingSize}\r\n                    name='bnServingSize'\r\n                    isError={\r\n                      (touched.bnServingSize && errors.bnServingSize) ||\r\n                      (!isSubmitting &&\r\n                        addProductState.error['error']['bnServingSize'])\r\n                    }\r\n                    errorString={\r\n                      (touched.bnServingSize && errors.bnServingSize) ||\r\n                      (!isSubmitting &&\r\n                        addProductState.error['error']['bnServingSize'])\r\n                    }\r\n                    onChange={(e: any) => {\r\n                      handleChange(e);\r\n                      setFieldTouched('bnServingSize');\r\n                    }}\r\n                  />\r\n\r\n                  <Input\r\n                    label='URL'\r\n                    value={values.url}\r\n                    name='url'\r\n                    isError={\r\n                      (touched.url && errors.url) ||\r\n                      (!isSubmitting && addProductState.error['error']['url'])\r\n                    }\r\n                    errorString={\r\n                      (touched.url && errors.url) ||\r\n                      (!isSubmitting && addProductState.error['error']['url'])\r\n                    }\r\n                    onChange={(e: any) => {\r\n                      handleChange(e);\r\n                      setFieldTouched('url');\r\n                    }}\r\n                  />\r\n\r\n                  <h3 className='inputFieldLabel'>Body</h3>\r\n\r\n                  <div\r\n                    style={{\r\n                      width: '100%',\r\n                      maxWidth: '100%',\r\n                    }}\r\n                  >\r\n                    <CKEditor\r\n                      editor={ClassicEditor}\r\n                      data={body}\r\n                      onInit={(editor) => {\r\n                        // You can store the \"editor\" and use when it is needed.\r\n                        console.log('Editor is ready to use!', editor);\r\n                      }}\r\n                      onChange={(event, editor) => {\r\n                        const data = editor.getData();\r\n                        setBody(data);\r\n                      }}\r\n                      onBlur={(event, editor) => {\r\n                        console.log('Blur.', editor);\r\n                      }}\r\n                      onFocus={(event, editor) => {\r\n                        console.log('Focus.', editor);\r\n                      }}\r\n                    />\r\n                  </div>\r\n\r\n                  <div\r\n                    style={{\r\n                      marginTop: '15px',\r\n                    }}\r\n                  ></div>\r\n\r\n                  <h3 className='inputFieldLabel'>BN Body</h3>\r\n\r\n                  <div\r\n                    style={{\r\n                      width: '100%',\r\n                      maxWidth: '100%',\r\n                    }}\r\n                  >\r\n                    <CKEditor\r\n                      editor={ClassicEditor}\r\n                      data={bnBody}\r\n                      onInit={(editor) => {\r\n                        // You can store the \"editor\" and use when it is needed.\r\n                        console.log('Editor is ready to use!', editor);\r\n                      }}\r\n                      onChange={(event, editor) => {\r\n                        const data = editor.getData();\r\n                        setBnBody(data);\r\n                      }}\r\n                      onBlur={(event, editor) => {\r\n                        console.log('Blur.', editor);\r\n                      }}\r\n                      onFocus={(event, editor) => {\r\n                        console.log('Focus.', editor);\r\n                      }}\r\n                    />\r\n                  </div>\r\n\r\n                  {/* <div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\tdisplay: 'flex',\r\n\t\t\t\t\t\t\t\t\t\t\t\tjustifyContent: 'space-between'\r\n\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\twidth: '48%',\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<DatePicker\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabel='Date'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={handleDateChange} />\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\twidth: '48%'\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<DatePicker\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tdate={date}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\twithTime={true}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder='Select time'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabel='Time'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={handleTimeChange} />\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t</div> */}\r\n                  <div\r\n                    style={{\r\n                      marginBottom: '15px',\r\n                    }}\r\n                  ></div>\r\n                  {/* \r\n\t\t\t\t\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\t\t\t\t\trows={1}\r\n\t\t\t\t\t\t\t\t\t\t\t\tlabel='Venue'\r\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.venue}\r\n\t\t\t\t\t\t\t\t\t\t\t\tname='venue'\r\n\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.venue && errors.venue) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['venue'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.venue && errors.venue) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['venue'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('venue');\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\t\tlabel='Purchase Limit'\r\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.purchaseLimit}\r\n\t\t\t\t\t\t\t\t\t\t\t\ttype='number'\r\n\t\t\t\t\t\t\t\t\t\t\t\tname='purchaseLimit'\r\n\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.purchaseLimit && errors.purchaseLimit) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['purchaseLimit'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.purchaseLimit && errors.purchaseLimit) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['purchaseLimit'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('purchaseLimit');\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t/> */}\r\n                </div>\r\n              </div>\r\n\r\n              <div className='addProductGridContainer__price'>\r\n                <div className='addProductGridContainer__item-header'>\r\n                  <h3>Products</h3>\r\n\r\n                  <div\r\n                    className={\r\n                      pricing && pricing.length > 0\r\n                        ? 'checkicon-active'\r\n                        : 'checkicon'\r\n                    }\r\n                  >\r\n                    <CheckCircleOutlined />\r\n                  </div>\r\n                </div>\r\n\r\n                <div className='addProductGridContainer__item-body'>\r\n                  <h3 className='inputFieldLabel'>Products</h3>\r\n                  <SelectProducts\r\n                    setProductIds={setProductIds}\r\n                    productIds={productIds}\r\n                  />\r\n\r\n                  <div\r\n                    style={{\r\n                      marginTop: '15px',\r\n                    }}\r\n                  ></div>\r\n\r\n                  <h3 className='inputFieldLabel'>Selcted Products</h3>\r\n\r\n                  <SelectedProductItems\r\n                    productList={productList}\r\n                    setProductList={setProductList}\r\n                  />\r\n                </div>\r\n              </div>\r\n\r\n              <div className='addProductGridContainer__image'>\r\n                <div className='addProductGridContainer__item-header'>\r\n                  <h3>Image</h3>\r\n\r\n                  <Tooltip\r\n                    placement='left'\r\n                    title={\r\n                      'Click on the image to select cover image, By default 1st image is selected as cover'\r\n                    }\r\n                  >\r\n                    <a href='###'>\r\n                      <InfoCircleOutlined />\r\n                    </a>\r\n                  </Tooltip>\r\n                </div>\r\n\r\n                <div\r\n                  style={{\r\n                    padding: '10px',\r\n                  }}\r\n                  className='aboutToUploadImagesContainer'\r\n                >\r\n                  {productDetailState.isLoading && (\r\n                    <div\r\n                      style={{\r\n                        padding: '20px 0',\r\n                      }}\r\n                    >\r\n                      <Spin />\r\n                    </div>\r\n                  )}\r\n                  {productDetailState.done && (\r\n                    <>\r\n                      {myImages &&\r\n                        // @ts-ignore\r\n                        myImages.length > 0 &&\r\n                        myImages.map((image, index) => {\r\n                          return (\r\n                            <div className='aboutToUploadImagesContainer__item'>\r\n                              <div\r\n                                className='aboutToUploadImagesContainer__item-imgContainer'\r\n                                onClick={() => {\r\n                                  setCoverImageId(image.id);\r\n                                  handleSetImageAsThumnail(image);\r\n                                }}\r\n                              >\r\n                                <img src={image.cover} alt={image.alt} />\r\n                              </div>\r\n\r\n                              <span\r\n                                onClick={() => {\r\n                                  handleImagesDelete(image.id);\r\n                                  handleDetachSingleImage(image.id);\r\n                                }}\r\n                                className='aboutToUploadImagesContainer__item-remove'\r\n                              >\r\n                                <CloseOutlined />\r\n                              </span>\r\n\r\n                              {coverImageId === image.id ? (\r\n                                <span className='aboutToUploadImagesContainer__item-cover'>\r\n                                  <CheckOutlined />\r\n                                </span>\r\n                              ) : (\r\n                                !coverImageId &&\r\n                                index === 0 && (\r\n                                  <span className='aboutToUploadImagesContainer__item-cover'>\r\n                                    <CheckOutlined />\r\n                                  </span>\r\n                                )\r\n                              )}\r\n                            </div>\r\n                          );\r\n                        })}\r\n\r\n                      <Tooltip title={'Attach images'}>\r\n                        <div\r\n                          onClick={() => {\r\n                            setvisible(true);\r\n                            setisModalOpenForImages(true);\r\n                            setisModalOpenForThumbnail(false);\r\n                          }}\r\n                          className='aboutToUploadImagesContainer__uploadItem'\r\n                        >\r\n                          {/* <FileAddOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FileImageTwoTone />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FileImageOutlined /> */}\r\n                          <FileImageFilled />\r\n                          {/* <h5>\r\n\t\t\t\t\t\t\t\t\t\t\t\t     Select From Library\r\n\t\t\t\t\t\t\t\t\t\t\t<     /h5> */}\r\n                          <span className='aboutToUploadImagesContainer__uploadItem-plus'>\r\n                            <PlusOutlined />\r\n                          </span>\r\n                        </div>\r\n                      </Tooltip>\r\n                    </>\r\n                  )}\r\n                </div>\r\n              </div>\r\n\r\n              <div className='addProductGridContainer__image'>\r\n                <div className='addProductGridContainer__item-header'>\r\n                  <h3>Meta Data</h3>\r\n\r\n                  <Tooltip\r\n                    placement='left'\r\n                    title={\r\n                      \"Meta data will be used to make the user's easy and for search engine optimization.\"\r\n                    }\r\n                  >\r\n                    <a href='###'>\r\n                      <InfoCircleOutlined />\r\n                    </a>\r\n                  </Tooltip>\r\n                </div>\r\n                <div className='addProductGridContainer__item-body'>\r\n                  <Input\r\n                    label='Meta title'\r\n                    value={values.metaTitle}\r\n                    placeHolder={'...'}\r\n                    name='metaTitle'\r\n                    isError={\r\n                      (touched.metaTitle && errors.metaTitle) ||\r\n                      (!isSubmitting &&\r\n                        addProductState.error['error']['metaTitle'])\r\n                    }\r\n                    errorString={\r\n                      (touched.metaTitle && errors.metaTitle) ||\r\n                      (!isSubmitting &&\r\n                        addProductState.error['error']['metaTitle'])\r\n                    }\r\n                    onChange={(e: any) => {\r\n                      handleChange(e);\r\n                      setFieldTouched('metaTitle');\r\n                    }}\r\n                  />\r\n\r\n                  <Input\r\n                    label='BN Meta title'\r\n                    value={values.bnMetaTitle}\r\n                    placeHolder={'...'}\r\n                    name='bnMetaTitle'\r\n                    isError={\r\n                      (touched.bnMetaTitle && errors.bnMetaTitle) ||\r\n                      (!isSubmitting &&\r\n                        addProductState.error['error']['bnMetaTitle'])\r\n                    }\r\n                    errorString={\r\n                      (touched.bnMetaTitle && errors.bnMetaTitle) ||\r\n                      (!isSubmitting &&\r\n                        addProductState.error['error']['bnMetaTitle'])\r\n                    }\r\n                    onChange={(e: any) => {\r\n                      handleChange(e);\r\n                      setFieldTouched('bnMetaTitle');\r\n                    }}\r\n                  />\r\n\r\n                  <TextArea\r\n                    label='Meta description'\r\n                    value={values.metaDescription}\r\n                    placeholder={'meta...'}\r\n                    name='metaDescription'\r\n                    isError={\r\n                      (touched.metaDescription && errors.metaDescription) ||\r\n                      (!isSubmitting &&\r\n                        addProductState.error['error']['metaDescription'])\r\n                    }\r\n                    errorString={\r\n                      (touched.metaDescription && errors.metaDescription) ||\r\n                      (!isSubmitting &&\r\n                        addProductState.error['error']['metaDescription'])\r\n                    }\r\n                    onChange={(e: any) => {\r\n                      handleChange(e);\r\n                      setFieldTouched('metaDescription');\r\n                    }}\r\n                  />\r\n\r\n                  <TextArea\r\n                    label='BN Meta Description'\r\n                    value={values.bnMetaDescription}\r\n                    placeholder={'এইয় মেট...'}\r\n                    name='bnMetaDescription'\r\n                    isError={\r\n                      (touched.bnMetaDescription && errors.bnMetaDescription) ||\r\n                      (!isSubmitting &&\r\n                        addProductState.error['error']['bnMetaDescription'])\r\n                    }\r\n                    errorString={\r\n                      (touched.bnMetaDescription && errors.bnMetaDescription) ||\r\n                      (!isSubmitting &&\r\n                        addProductState.error['error']['bnMetaDescription'])\r\n                    }\r\n                    onChange={(e: any) => {\r\n                      handleChange(e);\r\n                      setFieldTouched('bnMetaDescription');\r\n                    }}\r\n                  />\r\n\r\n                  <h3 className='inputFieldLabel'>Meta Tags</h3>\r\n\r\n                  <MetaTags\r\n                    // @ts-ignore\r\n                    setTags={setMetaTags}\r\n                    tags={metaTags}\r\n                  />\r\n\r\n                  <div\r\n                    style={{\r\n                      marginTop: '15px',\r\n                    }}\r\n                  ></div>\r\n\r\n                  <h3 className='inputFieldLabel'>BN Meta Tags</h3>\r\n\r\n                  <MetaTags\r\n                    // @ts-ignore\r\n                    setTags={setBnMetaTags}\r\n                    tags={bnMetaTags}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className='addProductGridContainer__right'>\r\n              <div className='addProductGridContainer__category'>\r\n                <div className='addProductGridContainer-rightItemContainer'>\r\n                  <div className='addProductGridContainer-rightItemContainer-header'>\r\n                    <h3>Recipe Categories</h3>\r\n\r\n                    <Tooltip\r\n                      color='red'\r\n                      visible={\r\n                        addProductState.error['error']['category'] &&\r\n                        !(categoryids.length > 0)\r\n                      }\r\n                      placement='left'\r\n                      title={'Select at least one category'}\r\n                    >\r\n                      <div\r\n                        className={\r\n                          !(categoryids.length > 0) &&\r\n                          !addProductState.error['error']['category']\r\n                            ? 'checkicon'\r\n                            : addProductState.error['error']['category']\r\n                            ? 'checkicon-error'\r\n                            : 'checkicon-active'\r\n                        }\r\n                      >\r\n                        <CheckCircleOutlined />\r\n                      </div>\r\n                    </Tooltip>\r\n                  </div>\r\n                  <div className='addProductGridContainer-rightItemContainer-body'>\r\n                    <Categories\r\n                      setCategoryOptions={setCategoryOptions}\r\n                      categoryOptions={categoryOptions}\r\n                      setcategoryIds={setcategoryIds}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div className='addProductGridContainer__tag'>\r\n                <div className='addProductGridContainer-rightItemContainer'>\r\n                  <div className='addProductGridContainer-rightItemContainer-header'>\r\n                    <h3>Recipe Tags</h3>\r\n                  </div>\r\n                  <div className='addProductGridContainer-rightItemContainer-body'>\r\n                    <Tags\r\n                      setSelectedTags={setSelectedTags}\r\n                      selectedTags={selectedTags}\r\n                      setTagIds={setTagIds}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </section>\r\n\r\n          <div\r\n            style={{\r\n              padding: '15px',\r\n              display: 'flex',\r\n              justifyContent: 'flex-end',\r\n            }}\r\n          >\r\n            <Button\r\n              style={{\r\n                color: '#555',\r\n                marginRight: '10px',\r\n              }}\r\n              className='btnPrimaryClassNameoutline-cancle'\r\n              onClick={() => setAddNewCategoryVisible(false)}\r\n              type='default'\r\n            >\r\n              Cancel\r\n            </Button>\r\n\r\n            <Button\r\n              className='btnPrimaryClassNameoutline'\r\n              onClick={handleSubmit}\r\n              loading={addProductState.isLoading}\r\n              type='link'\r\n              icon={<CheckOutlined />}\r\n            >\r\n              Update\r\n            </Button>\r\n          </div>\r\n\r\n          <MediaLibrary\r\n            setvisible={setvisible}\r\n            visible={visible}\r\n            setmyImages={setmyImages}\r\n            myImages={myImages}\r\n            setmyThumbnailImage={setmyThumbnailImage}\r\n            isModalOpenForThumbnail={isModalOpenForThumbnail}\r\n            isModalOpenForImages={isModalOpenForImages}\r\n          />\r\n        </>\r\n      )}\r\n    </Formik>\r\n  );\r\n};\r\n\r\nconst AddNewProduct = ({\r\n  addNewCategoryVisible,\r\n  setAddNewCategoryVisible,\r\n  productDetailData,\r\n  setPostDetailData,\r\n}: Props) => {\r\n  const handleCancel = () => {\r\n    setAddNewCategoryVisible(false);\r\n  };\r\n  return (\r\n    <>\r\n      <Modal\r\n        style={{\r\n          top: '40px',\r\n        }}\r\n        footer={false}\r\n        bodyStyle={{\r\n          margin: 0,\r\n          padding: 0,\r\n        }}\r\n        width={'70vw'}\r\n        title='Edit Recipe'\r\n        visible={addNewCategoryVisible}\r\n        // onOk={(e: any) => handleSubmit(e)}\r\n        onCancel={handleCancel}\r\n        destroyOnClose={true}\r\n        okText='Update'\r\n        okButtonProps={{\r\n          // loading: isSubmitting,\r\n          htmlType: 'submit',\r\n        }}\r\n      >\r\n        <ModalComponentChild\r\n          addNewCategoryVisible={addNewCategoryVisible}\r\n          setAddNewCategoryVisible={setAddNewCategoryVisible}\r\n          setPostDetailData={setPostDetailData}\r\n          productDetailData={productDetailData}\r\n        />\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AddNewProduct;\r\n\r\n/*\r\n\r\n\r\nProduct variation ---->\r\n\r\nPrice [title]\r\n\t[regular input field] [offer inputfield]\r\n\r\nStock [title]\r\n\t[available input field] [minimum inputfield]\r\n\r\ndefault [default can be set to true]\r\n\r\nattributes [title]\r\n\t[add attributes name]\r\n\t\t[add attrubutes value]\r\n\r\n\t[add attributes name]\r\n\t\t[add attrubutes value\r\n\r\n*/ //\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useParams, useHistory } from 'react-router';\r\n\r\n// import hooks\r\nimport { useHandleFetch } from '../../hooks';\r\n\r\n// import lib\r\nimport { EditOutlined, DeleteOutlined } from '@ant-design/icons';\r\n\r\nimport {\r\n  Skeleton,\r\n  Empty,\r\n  Button,\r\n  notification,\r\n  Table,\r\n  Space,\r\n  Input as CoolInput,\r\n  Tooltip,\r\n  Modal,\r\n  Badge,\r\n} from 'antd';\r\n\r\n// import moment\r\nimport Moment from 'react-moment';\r\n\r\n// import components\r\nimport { DataTableSkeleton } from '../../components/Placeholders';\r\nimport ProductBundleEdit from './PostEdit';\r\nimport CouponProducts from '../coupon/CouponProducts';\r\n\r\nconst { Column, ColumnGroup } = Table;\r\nconst { Search } = CoolInput;\r\n\r\ninterface Props {\r\n  productRecord?: any;\r\n}\r\n\r\nconst NewBrandDetail = (props: Props) => {\r\n  const [productDetailState, handleProductDetailFetch] = useHandleFetch(\r\n    {},\r\n    'postDetail'\r\n  );\r\n  const [postDetailData, setPostDetailData] = useState({});\r\n  const params = useParams();\r\n  const history = useHistory();\r\n  const productId = params['id'];\r\n\r\n  const [productEditVisible, setProductEditVisible] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const getProductDetail = async () => {\r\n      const res = await handleProductDetailFetch({\r\n        urlOptions: {\r\n          params: {\r\n            categoryOne: '1',\r\n            tagsOne: '1',\r\n            imageValue: '1',\r\n          },\r\n          placeHolders: {\r\n            id: productId,\r\n          },\r\n        },\r\n      });\r\n\r\n      // @ts-ignore\r\n      if (res) {\r\n        // @ts-ignore\r\n        setPostDetailData(res);\r\n      }\r\n    };\r\n\r\n    getProductDetail();\r\n  }, [productId]);\r\n\r\n  console.log('productDetailState', productDetailState);\r\n\r\n  console.log('brandParams', params);\r\n\r\n  const getImagesInCollumn = (imgs) => {\r\n    if (!imgs[0]) return false;\r\n    imgs = imgs.map((item) => item.cover);\r\n    const columns = {};\r\n\r\n    let localIndex = 0;\r\n    let columnNumber = 0;\r\n\r\n    imgs.forEach((item, index) => {\r\n      if (localIndex < 3) {\r\n        if (columns[columnNumber]) {\r\n          columns[columnNumber] = [...columns[columnNumber], item];\r\n        } else columns[columnNumber] = [item];\r\n\r\n        localIndex = localIndex + 1;\r\n        columnNumber = columnNumber + 1;\r\n      } else {\r\n        localIndex = 0;\r\n        columnNumber = 0;\r\n        console.log('localIndex', localIndex);\r\n      }\r\n    });\r\n\r\n    return columns;\r\n  };\r\n\r\n  const row =\r\n    productDetailState.done && postDetailData && postDetailData['image']\r\n      ? getImagesInCollumn(postDetailData['image'])\r\n      : [];\r\n\r\n  console.log('postDetailState', productDetailState);\r\n  return (\r\n    <div className='brandDetailContainer'>\r\n      <div className='brandDetailContainer__heading'>\r\n        <h3>Recipe Detail</h3>\r\n\r\n        {productDetailState.done &&\r\n          postDetailData &&\r\n          Object.keys(postDetailData).length > 0 && (\r\n            <>\r\n              <ProductBundleEdit\r\n                productDetailData={postDetailData}\r\n                addNewCategoryVisible={productEditVisible}\r\n                setAddNewCategoryVisible={setProductEditVisible}\r\n                setPostDetailData={setPostDetailData}\r\n              />\r\n              <Button\r\n                onClick={() => setProductEditVisible(true)}\r\n                type='link'\r\n                icon={<EditOutlined />}\r\n              >\r\n                Edit\r\n              </Button>\r\n            </>\r\n          )}\r\n      </div>\r\n      <Skeleton\r\n        avatar\r\n        paragraph={{ rows: 3 }}\r\n        loading={productDetailState.isLoading}\r\n      >\r\n        {productDetailState.done &&\r\n          postDetailData &&\r\n          !(Object.keys(postDetailData).length > 0) && (\r\n            <Empty\r\n              description='No Recipe found'\r\n              image={Empty.PRESENTED_IMAGE_SIMPLE}\r\n            />\r\n          )}\r\n\r\n        {productDetailState.done &&\r\n          postDetailData &&\r\n          Object.keys(postDetailData).length > 0 && (\r\n            <>\r\n              <div className='brandDetailContainer__header'>\r\n                <div className='brandDetailContainer__header-coverContainer brandDetailContainer__header-coverContainer-product'>\r\n                  <img\r\n                    src={postDetailData['cover'] && postDetailData['cover']}\r\n                    alt=''\r\n                  />\r\n                </div>\r\n                <div className='brandDetailContainer__header-info'>\r\n                  <h2>{postDetailData['name']}</h2>\r\n                  <h4>{postDetailData['price']}</h4>\r\n                  <h3>{postDetailData['description']}</h3>\r\n\r\n                  {postDetailData['url'] && (\r\n                    <h3>\r\n                      URL:\r\n                      <span>{postDetailData['url']}</span>\r\n                    </h3>\r\n                  )}\r\n\r\n                  {postDetailData['preparationTime'] === 0 && (\r\n                    <h3>\r\n                      PREPARATION TIME:\r\n                      <span>{postDetailData['preparationTime']}</span>\r\n                    </h3>\r\n                  )}\r\n\r\n                  {postDetailData['cookingTime'] && (\r\n                    <h3>\r\n                      COOKING TIME:\r\n                      <span>{postDetailData['cookingTime']}</span>\r\n                    </h3>\r\n                  )}\r\n\r\n                  {postDetailData['servingSize'] && (\r\n                    <h3>\r\n                      PEOPLE:\r\n                      <span>{postDetailData['servingSize']}</span>\r\n                    </h3>\r\n                  )}\r\n                  {/* \r\n                                {postDetailData['tags'] && postDetailData['tags'].length > 0 &&\r\n                                    (<>\r\n                                        <h3>\r\n                                            TAGS:\r\n                                        {postDetailData['tags'].map(tag => {\r\n                                            return (\r\n                                                <span>\r\n                                                    {tag.name}\r\n                                                </span>\r\n                                            )\r\n                                        })}\r\n                                        </h3>\r\n\r\n                                    </>)\r\n                                } */}\r\n\r\n                  {postDetailData['category2'] &&\r\n                    postDetailData['category2'].length > 0 && (\r\n                      <>\r\n                        <h3>\r\n                          CATEGORIES:\r\n                          {postDetailData['category2'].map((cat) => {\r\n                            return (\r\n                              <span\r\n                                onClick={() =>\r\n                                  history.push(\r\n                                    `/admin/posts/category/${cat.id}`\r\n                                  )\r\n                                }\r\n                              >\r\n                                {cat.name}\r\n                              </span>\r\n                            );\r\n                          })}\r\n                        </h3>\r\n                      </>\r\n                    )}\r\n\r\n                  {postDetailData['tags'] && postDetailData['tags'].length > 0 && (\r\n                    <>\r\n                      <h3>\r\n                        TAGS:\r\n                        {postDetailData['tags'].map((cat) => {\r\n                          return (\r\n                            <span\r\n                              onClick={() =>\r\n                                history.push(`/admin/posts/tag/${cat._id}`)\r\n                              }\r\n                            >\r\n                              {cat.name}\r\n                            </span>\r\n                          );\r\n                        })}\r\n                      </h3>\r\n                    </>\r\n                  )}\r\n                </div>\r\n              </div>\r\n\r\n              {productDetailState.done &&\r\n                postDetailData &&\r\n                Object.keys(postDetailData).length > 0 &&\r\n                postDetailData['products'] &&\r\n                postDetailData['products'].length > 0 && (\r\n                  <div className='brandDetailContainer__heading'>\r\n                    <h3>Products</h3>\r\n                  </div>\r\n                )}\r\n\r\n              <div className='brandDetailContainer__body'>\r\n                {productDetailState.done &&\r\n                  postDetailData &&\r\n                  postDetailData['products'] &&\r\n                  !(postDetailData['products'].length > 0) && (\r\n                    <div\r\n                      style={{\r\n                        marginTop: '100px',\r\n                      }}\r\n                    >\r\n                      <Empty\r\n                        description='No Products exists for this Recipe'\r\n                        image={Empty.PRESENTED_IMAGE_SIMPLE}\r\n                      />\r\n                    </div>\r\n                  )}\r\n\r\n                {productDetailState.done &&\r\n                  postDetailData &&\r\n                  Object.keys(postDetailData).length > 0 && (\r\n                    <>\r\n                      {postDetailData['products'] &&\r\n                        postDetailData['products'].length > 0 &&\r\n                        postDetailData['products'].map((product) => {\r\n                          return (\r\n                            <CouponProducts\r\n                              quantity={product.quantity}\r\n                              productId={product['_id']}\r\n                            />\r\n                          );\r\n                        })}\r\n                    </>\r\n                  )}\r\n              </div>\r\n\r\n              {postDetailData['image'] && postDetailData['image'].length > 0 && (\r\n                <>\r\n                  <div className='brandDetailContainer__heading'>\r\n                    <h3>Image Gallary</h3>\r\n                  </div>\r\n\r\n                  <div className='brandDetailContainer__imageGallary'>\r\n                    <div className='imgGallaryContainer'>\r\n                      <div className='imgGallary-row'>\r\n                        {row &&\r\n                          Object.keys(row).map((column) => {\r\n                            return (\r\n                              <div className='imgGallary-column'>\r\n                                {row[column] &&\r\n                                  row[column].map((img) => {\r\n                                    return (\r\n                                      <img\r\n                                        src={img}\r\n                                        style={{\r\n                                          width: '100%',\r\n                                        }}\r\n                                      />\r\n                                    );\r\n                                  })}\r\n                              </div>\r\n                            );\r\n                          })}\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div\r\n                    style={{\r\n                      marginBottom: '25px',\r\n                    }}\r\n                  ></div>\r\n                </>\r\n              )}\r\n            </>\r\n          )}\r\n      </Skeleton>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NewBrandDetail;\r\n","import React, { useState } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\nimport { useHandleFetch } from '../../../hooks';\r\n// import third party ui lib\r\nimport {\r\n  Upload,\r\n  message,\r\n  Switch,\r\n  Select,\r\n  Button,\r\n  notification,\r\n  Modal,\r\n  Tooltip,\r\n} from 'antd';\r\n\r\nimport {\r\n  FileOutlined,\r\n  InboxOutlined,\r\n  FileAddOutlined,\r\n  DeleteOutlined,\r\n  CheckCircleOutlined,\r\n  CloseOutlined,\r\n  CheckOutlined,\r\n  InfoCircleOutlined,\r\n  PlusOutlined,\r\n  FileImageFilled,\r\n} from '@ant-design/icons';\r\n\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../../components/Field/Input';\r\nimport TextArea from '../../../components/Field/TextArea';\r\nimport MediaLibrary from '../../../components/MediaLibrary';\r\nimport MetaTags from '../../../pages/category/MetaTags';\r\n\r\nconst validationSchema = Yup.object().shape({\r\n  name: Yup.string()\r\n    .label('Name')\r\n    .required('Name is required')\r\n    .min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n  notification.success({\r\n    message: message || 'Recipe Tag Updated',\r\n    description: '',\r\n    icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n  });\r\n};\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n  notification.error({\r\n    message: message || 'Something Went Wrong',\r\n    description: '',\r\n    icon: <InfoCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n  });\r\n};\r\n\r\nconst initialValues = {\r\n  name: '',\r\n  bnName: '',\r\n  description: '',\r\n  bnDescription: '',\r\n  metaTitle: '',\r\n  bnMetaTitle: '',\r\n  metaDescription: '',\r\n  bnMetaDescription: '',\r\n  metaTags: '',\r\n  bnMetaTags: '',\r\n};\r\n\r\ninterface Props {\r\n  addNewCategoryVisible?: any;\r\n  setAddNewCategoryVisible?: any;\r\n  tagDetailData?: any;\r\n  tagList?: any;\r\n  setTagList?: any;\r\n}\r\n\r\nconst AddNewBrand = ({\r\n  addNewCategoryVisible,\r\n  setAddNewCategoryVisible,\r\n  tagDetailData,\r\n  setTagList,\r\n  tagList,\r\n}: Props) => {\r\n  const [addTagState, handleAddTagFetch] = useHandleFetch({}, 'postUpdateTag');\r\n  const [myImages, setmyImages] = useState(false);\r\n  const [visibleMedia, setvisibleMedia] = useState(false);\r\n  const [tags, setTags] = useState([]);\r\n  const [bnTags, setBnTags] = useState([]);\r\n\r\n  const handleSubmit = async (values: any, actions: any) => {\r\n    const addTagRes = await handleAddTagFetch({\r\n      urlOptions: {\r\n        placeHolders: {\r\n          id: values.id,\r\n        },\r\n      },\r\n      body: {\r\n        name: values.name.trim(),\r\n        description: values.description,\r\n        // metaTitle: values.metaTitle,\r\n        // metaDescription: values.metaDescription,\r\n        // metaTags: tags.join(','),\r\n\r\n        bn: {\r\n          //   metaTitle: values.bnMetaTitle,\r\n          //   metaDescription: values.bnMetaDescription,\r\n          //   metaTags: bnTags.join(','),\r\n          name: values.bnName.trim(),\r\n          description: values.bnDescription,\r\n        },\r\n      },\r\n    });\r\n\r\n    // @ts-ignore\r\n    if (addTagRes && addTagRes.status === 'ok') {\r\n      openSuccessNotification();\r\n\r\n      const positionInTag = () => {\r\n        return tagList.map((item) => item.id).indexOf(values.id);\r\n      };\r\n\r\n      const index = positionInTag();\r\n\r\n      // @ts-ignore\r\n      const updatedItem = Object.assign({}, tagList[index], {\r\n        ...tagDetailData,\r\n        // @ts-ignore\r\n        ...addTagRes,\r\n      });\r\n      const updateTagList = [\r\n        ...tagList.slice(0, index),\r\n        updatedItem,\r\n        ...tagList.slice(index + 1),\r\n      ];\r\n      setTagList(updateTagList);\r\n\r\n      setAddNewCategoryVisible(false);\r\n\r\n      actions.resetForm();\r\n    } else {\r\n      openErrorNotification();\r\n    }\r\n\r\n    actions.setSubmitting(false);\r\n  };\r\n\r\n  const handleCancel = (e: any) => {\r\n    setAddNewCategoryVisible(false);\r\n  };\r\n\r\n  const getisSubmitButtonDisabled = (values, isValid) => {\r\n    if (!values.name || !isValid) {\r\n      return true;\r\n    }\r\n    return false;\r\n  };\r\n\r\n  return (\r\n    <Formik\r\n      onSubmit={(values, actions) => handleSubmit(values, actions)}\r\n      validationSchema={validationSchema}\r\n      validateOnBlur={false}\r\n      enableReinitialize={true}\r\n      initialValues={{ ...initialValues, ...tagDetailData }}\r\n    >\r\n      {({\r\n        handleChange,\r\n        values,\r\n        handleSubmit,\r\n        errors,\r\n        isValid,\r\n        isSubmitting,\r\n        touched,\r\n        handleBlur,\r\n        setFieldTouched,\r\n        handleReset,\r\n      }) => (\r\n        <>\r\n          <Modal\r\n            style={{\r\n              top: '40px',\r\n            }}\r\n            title='Edit Tag'\r\n            visible={addNewCategoryVisible}\r\n            onOk={(e: any) => handleSubmit(e)}\r\n            onCancel={handleCancel}\r\n            okText='Update'\r\n            okButtonProps={{\r\n              loading: isSubmitting,\r\n              htmlType: 'submit',\r\n              disabled: getisSubmitButtonDisabled(values, isValid),\r\n            }}\r\n          >\r\n            <Input\r\n              label='Name'\r\n              value={values.name}\r\n              name='name'\r\n              placeHolder={'new,fresh'}\r\n              isError={\r\n                (touched.name && errors.name) ||\r\n                (!isSubmitting && addTagState.error['error']['name'])\r\n              }\r\n              errorString={\r\n                (touched.name && errors.name) ||\r\n                (!isSubmitting && addTagState.error['error']['name'])\r\n              }\r\n              onChange={(e: any) => {\r\n                handleChange(e);\r\n                setFieldTouched('name');\r\n              }}\r\n            />\r\n\r\n            <Input\r\n              label='BN Name'\r\n              value={values.bnName}\r\n              placeHolder={'নতুন,ফ্রেশ'}\r\n              name='bnName'\r\n              isError={\r\n                (touched.bnName && errors.bnName) ||\r\n                (!isSubmitting && addTagState.error['error']['bnName'])\r\n              }\r\n              errorString={\r\n                (touched.bnName && errors.bnName) ||\r\n                (!isSubmitting && addTagState.error['error']['bnName'])\r\n              }\r\n              onChange={(e: any) => {\r\n                handleChange(e);\r\n                setFieldTouched('bnName');\r\n              }}\r\n            />\r\n\r\n            <TextArea\r\n              label='Description'\r\n              value={values.description}\r\n              name='description'\r\n              placeholder={'This tag...'}\r\n              isError={\r\n                (touched.description && errors.description) ||\r\n                (!isSubmitting && addTagState.error['error']['description'])\r\n              }\r\n              errorString={\r\n                (touched.description && errors.description) ||\r\n                (!isSubmitting && addTagState.error['error']['description'])\r\n              }\r\n              onChange={(e: any) => {\r\n                handleChange(e);\r\n                setFieldTouched('description');\r\n              }}\r\n            />\r\n\r\n            <TextArea\r\n              label='BN Description'\r\n              value={values.bnDescription}\r\n              placeholder={'এই ট্যাগ...'}\r\n              name='bnDescription'\r\n              isError={\r\n                (touched.bnDescription && errors.bnDescription) ||\r\n                (!isSubmitting && addTagState.error['error']['bnDescription'])\r\n              }\r\n              errorString={\r\n                (touched.bnDescription && errors.bnDescription) ||\r\n                (!isSubmitting && addTagState.error['error']['bnDescription'])\r\n              }\r\n              onChange={(e: any) => {\r\n                handleChange(e);\r\n                setFieldTouched('bnDescription');\r\n              }}\r\n            />\r\n\r\n            {/* <Input\r\n              label='Meta title'\r\n              value={values.metaTitle}\r\n              placeHolder={'category...'}\r\n              name='metaTitle'\r\n              isError={\r\n                (touched.metaTitle && errors.metaTitle) ||\r\n                (!isSubmitting && addTagState.error['error']['metaTitle'])\r\n              }\r\n              errorString={\r\n                (touched.metaTitle && errors.metaTitle) ||\r\n                (!isSubmitting && addTagState.error['error']['metaTitle'])\r\n              }\r\n              onChange={(e: any) => {\r\n                handleChange(e);\r\n                setFieldTouched('metaTitle');\r\n              }}\r\n            />\r\n\r\n            <Input\r\n              label='BN Meta title'\r\n              value={values.bnMetaTitle}\r\n              placeHolder={'ক্যাটাগড়ি...'}\r\n              name='bnMetaTitle'\r\n              isError={\r\n                (touched.bnMetaTitle && errors.bnMetaTitle) ||\r\n                (!isSubmitting && addTagState.error['error']['bnMetaTitle'])\r\n              }\r\n              errorString={\r\n                (touched.bnMetaTitle && errors.bnMetaTitle) ||\r\n                (!isSubmitting && addTagState.error['error']['bnMetaTitle'])\r\n              }\r\n              onChange={(e: any) => {\r\n                handleChange(e);\r\n                setFieldTouched('bnMetaTitle');\r\n              }}\r\n            />\r\n\r\n            <TextArea\r\n              label='Meta description'\r\n              value={values.metaDescription}\r\n              placeholder={'meta...'}\r\n              name='metaDescription'\r\n              isError={\r\n                (touched.metaDescription && errors.metaDescription) ||\r\n                (!isSubmitting && addTagState.error['error']['metaDescription'])\r\n              }\r\n              errorString={\r\n                (touched.metaDescription && errors.metaDescription) ||\r\n                (!isSubmitting && addTagState.error['error']['metaDescription'])\r\n              }\r\n              onChange={(e: any) => {\r\n                handleChange(e);\r\n                setFieldTouched('metaDescription');\r\n              }}\r\n            />\r\n\r\n            <TextArea\r\n              label='BN Meta Description'\r\n              value={values.bnMetaDescription}\r\n              placeholder={'এইয় মেট...'}\r\n              name='bnMetaDescription'\r\n              isError={\r\n                (touched.bnMetaDescription && errors.bnMetaDescription) ||\r\n                (!isSubmitting &&\r\n                  addTagState.error['error']['bnMetaDescription'])\r\n              }\r\n              errorString={\r\n                (touched.bnMetaDescription && errors.bnMetaDescription) ||\r\n                (!isSubmitting &&\r\n                  addTagState.error['error']['bnMetaDescription'])\r\n              }\r\n              onChange={(e: any) => {\r\n                handleChange(e);\r\n                setFieldTouched('bnMetaDescription');\r\n              }}\r\n            />\r\n\r\n            <h3 className='inputFieldLabel'>Meta Tags (grocery,fashion)</h3>\r\n\r\n            <MetaTags\r\n              // @ts-ignore\r\n              setTags={setTags}\r\n              tags={tags}\r\n            />\r\n\r\n            <div\r\n              style={{\r\n                marginTop: '15px',\r\n              }}\r\n            ></div>\r\n\r\n            <h3 className='inputFieldLabel'>BN Meta Tags (মুদিখানা,ফ্যাশন)</h3>\r\n\r\n            <MetaTags\r\n              // @ts-ignore\r\n              setTags={setBnTags}\r\n              tags={bnTags}\r\n            /> */}\r\n          </Modal>\r\n\r\n          <MediaLibrary\r\n            setvisible={setvisibleMedia}\r\n            visible={visibleMedia}\r\n            setmyImages={setmyImages}\r\n            myImages={myImages}\r\n            isModalOpenForImages={true}\r\n          />\r\n        </>\r\n      )}\r\n    </Formik>\r\n  );\r\n};\r\n\r\nexport default AddNewBrand;\r\n","// @ts-nocheck\r\nimport React, { useState } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\nimport { useHandleFetch } from '../../../hooks';\r\n// import third party ui lib\r\nimport {\r\n  Upload,\r\n  message,\r\n  Switch,\r\n  Select,\r\n  Button,\r\n  notification,\r\n  Modal,\r\n  Tooltip,\r\n} from 'antd';\r\n\r\nimport {\r\n  FileOutlined,\r\n  InboxOutlined,\r\n  FileAddOutlined,\r\n  DeleteOutlined,\r\n  CheckCircleOutlined,\r\n  CloseOutlined,\r\n  CheckOutlined,\r\n  InfoCircleOutlined,\r\n  PlusOutlined,\r\n  FileImageFilled,\r\n} from '@ant-design/icons';\r\n\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../../components/Field/Input';\r\nimport TextArea from '../../../components/Field/TextArea';\r\nimport MediaLibrary from '../../../components/MediaLibrary';\r\nimport MetaTags from '../../../pages/category/MetaTags';\r\n\r\nconst validationSchema = Yup.object().shape({\r\n  name: Yup.string()\r\n    .label('Name')\r\n    .required('Name is required')\r\n    .min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n  notification.success({\r\n    message: message || 'Recipe Tag Created',\r\n    description: '',\r\n    icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n  });\r\n};\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n  notification.error({\r\n    message: message || 'Something Went Wrong',\r\n    description: '',\r\n    icon: <InfoCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n  });\r\n};\r\n\r\nconst initialValues = {\r\n  name: '',\r\n  bnName: '',\r\n  description: '',\r\n  bnDescription: '',\r\n  metaTitle: '',\r\n  bnMetaTitle: '',\r\n  metaDescription: '',\r\n  bnMetaDescription: '',\r\n  metaTags: '',\r\n  bnMetaTags: '',\r\n};\r\n\r\ninterface Props {\r\n  addNewCategoryVisible?: any;\r\n  setAddNewCategoryVisible?: any;\r\n  tagList?: any;\r\n  setTagList?: any;\r\n}\r\n\r\nconst AddNewBrand = ({\r\n  addNewCategoryVisible,\r\n  setAddNewCategoryVisible,\r\n  tagList,\r\n  setTagList,\r\n}: Props) => {\r\n  const [addTagState, handleAddTagFetch] = useHandleFetch({}, 'postAddTag');\r\n  const [myImages, setmyImages] = useState(false);\r\n  const [visibleMedia, setvisibleMedia] = useState(false);\r\n  const [coverImageId, setCoverImageId] = useState('');\r\n  const [tags, setTags] = useState([]);\r\n  const [bnTags, setBnTags] = useState([]);\r\n\r\n  const handleSubmit = async (values: any, actions: any) => {\r\n    const addTagRes = await handleAddTagFetch({\r\n      urlOptions: {\r\n        placeHolders: {\r\n          id: values.id,\r\n        },\r\n      },\r\n      body: {\r\n        name: values.name.trim(),\r\n        description: values.description,\r\n        // metaTitle: values.metaTitle,\r\n        // metaDescription: values.metaDescription,\r\n        // metaTags: tags.join(','),\r\n\r\n        bn: {\r\n          //   metaTitle: values.bnMetaTitle,\r\n          //   metaDescription: values.bnMetaDescription,\r\n          //   metaTags: bnTags.join(','),\r\n          name: values.bnName.trim(),\r\n          description: values.bnDescription,\r\n        },\r\n      },\r\n    });\r\n\r\n    // @ts-ignore\r\n    if (addTagRes && addTagRes.status === 'ok') {\r\n      openSuccessNotification();\r\n      setAddNewCategoryVisible(false);\r\n\r\n      setTagList([\r\n        ...tagList,\r\n        {\r\n          // @ts-ignore\r\n          ...addTagRes,\r\n          id: addTagRes['_id'] || '',\r\n          key: addTagRes['_id'] || '',\r\n          name: addTagRes['name'] || '',\r\n          description: addTagRes['description'] || '',\r\n        },\r\n      ]);\r\n\r\n      actions.resetForm();\r\n    } else {\r\n      openErrorNotification();\r\n    }\r\n\r\n    actions.setSubmitting(false);\r\n  };\r\n\r\n  const handleCancel = (e: any) => {\r\n    setAddNewCategoryVisible(false);\r\n  };\r\n\r\n  const getisSubmitButtonDisabled = (values, isValid) => {\r\n    if (!values.name || !isValid) {\r\n      return true;\r\n    }\r\n    return false;\r\n  };\r\n\r\n  const handleImagesDelete = (id) => {\r\n    // @ts-ignore\r\n    const newImages =\r\n      myImages &&\r\n      myImages.filter((image) => {\r\n        return image.id !== id;\r\n      });\r\n\r\n    setmyImages(newImages);\r\n  };\r\n\r\n  return (\r\n    <Formik\r\n      onSubmit={(values, actions) => handleSubmit(values, actions)}\r\n      validationSchema={validationSchema}\r\n      validateOnBlur={false}\r\n      enableReinitialize={true}\r\n      initialValues={{ ...initialValues }}\r\n    >\r\n      {({\r\n        handleChange,\r\n        values,\r\n        handleSubmit,\r\n        errors,\r\n        isValid,\r\n        isSubmitting,\r\n        touched,\r\n        handleBlur,\r\n        setFieldTouched,\r\n        handleReset,\r\n      }) => (\r\n        <>\r\n          <Modal\r\n            style={{\r\n              top: '40px',\r\n            }}\r\n            title='Add New Recipe Tag'\r\n            visible={addNewCategoryVisible}\r\n            onOk={(e: any) => handleSubmit(e)}\r\n            onCancel={handleCancel}\r\n            okText='Create'\r\n            okButtonProps={{\r\n              loading: isSubmitting,\r\n              htmlType: 'submit',\r\n              disabled: getisSubmitButtonDisabled(values, isValid),\r\n            }}\r\n          >\r\n            <Input\r\n              label='Name'\r\n              value={values.name}\r\n              name='name'\r\n              placeHolder={'new,fresh'}\r\n              isError={\r\n                (touched.name && errors.name) ||\r\n                (!isSubmitting && addTagState.error['error']['name'])\r\n              }\r\n              errorString={\r\n                (touched.name && errors.name) ||\r\n                (!isSubmitting && addTagState.error['error']['name'])\r\n              }\r\n              onChange={(e: any) => {\r\n                handleChange(e);\r\n                setFieldTouched('name');\r\n              }}\r\n            />\r\n\r\n            <Input\r\n              label='BN Name'\r\n              value={values.bnName}\r\n              placeHolder={'নতুন,ফ্রেশ'}\r\n              name='bnName'\r\n              isError={\r\n                (touched.bnName && errors.bnName) ||\r\n                (!isSubmitting && addTagState.error['error']['bnName'])\r\n              }\r\n              errorString={\r\n                (touched.bnName && errors.bnName) ||\r\n                (!isSubmitting && addTagState.error['error']['bnName'])\r\n              }\r\n              onChange={(e: any) => {\r\n                handleChange(e);\r\n                setFieldTouched('bnName');\r\n              }}\r\n            />\r\n\r\n            <TextArea\r\n              label='Description'\r\n              value={values.description}\r\n              name='description'\r\n              placeholder={'This tag...'}\r\n              isError={\r\n                (touched.description && errors.description) ||\r\n                (!isSubmitting && addTagState.error['error']['description'])\r\n              }\r\n              errorString={\r\n                (touched.description && errors.description) ||\r\n                (!isSubmitting && addTagState.error['error']['description'])\r\n              }\r\n              onChange={(e: any) => {\r\n                handleChange(e);\r\n                setFieldTouched('description');\r\n              }}\r\n            />\r\n\r\n            <TextArea\r\n              label='BN Description'\r\n              value={values.bnDescription}\r\n              placeholder={'এই ট্যাগ...'}\r\n              name='bnDescription'\r\n              isError={\r\n                (touched.bnDescription && errors.bnDescription) ||\r\n                (!isSubmitting && addTagState.error['error']['bnDescription'])\r\n              }\r\n              errorString={\r\n                (touched.bnDescription && errors.bnDescription) ||\r\n                (!isSubmitting && addTagState.error['error']['bnDescription'])\r\n              }\r\n              onChange={(e: any) => {\r\n                handleChange(e);\r\n                setFieldTouched('bnDescription');\r\n              }}\r\n            />\r\n\r\n            {/* <Input\r\n\t\t\t\t\t\t\t\tlabel='Meta title'\r\n\t\t\t\t\t\t\t\tvalue={values.metaTitle}\r\n\t\t\t\t\t\t\t\tplaceHolder={'category...'}\r\n\t\t\t\t\t\t\t\tname='metaTitle'\r\n\t\t\t\t\t\t\t\tisError={(touched.metaTitle && errors.metaTitle) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addTagState.error['error']['metaTitle'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.metaTitle && errors.metaTitle) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addTagState.error['error']['metaTitle'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('metaTitle')\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\tlabel='BN Meta title'\r\n\t\t\t\t\t\t\t\tvalue={values.bnMetaTitle}\r\n\t\t\t\t\t\t\t\tplaceHolder={'ক্যাটাগড়ি...'}\r\n\t\t\t\t\t\t\t\tname='bnMetaTitle'\r\n\t\t\t\t\t\t\t\tisError={(touched.bnMetaTitle && errors.bnMetaTitle) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addTagState.error['error']['bnMetaTitle'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.bnMetaTitle && errors.bnMetaTitle) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addTagState.error['error']['bnMetaTitle'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('bnMetaTitle');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\tlabel='Meta description'\r\n\t\t\t\t\t\t\t\tvalue={values.metaDescription}\r\n\t\t\t\t\t\t\t\tplaceholder={'meta...'}\r\n\t\t\t\t\t\t\t\tname='metaDescription'\r\n\t\t\t\t\t\t\t\tisError={(touched.metaDescription && errors.metaDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addTagState.error['error']['metaDescription'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.metaDescription && errors.metaDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addTagState.error['error']['metaDescription'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('metaDescription');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\tlabel='BN Meta Description'\r\n\t\t\t\t\t\t\t\tvalue={values.bnMetaDescription}\r\n\t\t\t\t\t\t\t\tplaceholder={'এইয় মেট...'}\r\n\t\t\t\t\t\t\t\tname='bnMetaDescription'\r\n\t\t\t\t\t\t\t\tisError={(touched.bnMetaDescription && errors.bnMetaDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addTagState.error['error']['bnMetaDescription'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.bnMetaDescription && errors.bnMetaDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addTagState.error['error']['bnMetaDescription'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('bnMetaDescription');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\tMeta Tags (grocery,fashion)\r\n\t\t\t\t\t\t\t</h3>\r\n\r\n\t\t\t\t\t\t\t<MetaTags\r\n\t\t\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\t\t\tsetTags={setTags}\r\n\t\t\t\t\t\t\ttags={tags}\r\n\t\t\t\t\t\t\t />\r\n\r\n\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\tmarginTop:'15px'\r\n\t\t\t\t\t\t\t}}></div>\r\n\r\n\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\tBN Meta Tags (মুদিখানা,ফ্যাশন)\r\n\t\t\t\t\t\t\t</h3>\r\n\r\n\t\t\t\t\t\t\t<MetaTags\r\n\t\t\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\t\t\tsetTags={setBnTags}\r\n\t\t\t\t\t\t\ttags={bnTags}\r\n\t\t\t\t\t\t\t /> */}\r\n          </Modal>\r\n\r\n          <MediaLibrary\r\n            setvisible={setvisibleMedia}\r\n            visible={visibleMedia}\r\n            setmyImages={setmyImages}\r\n            myImages={myImages}\r\n            isModalOpenForImages={true}\r\n          />\r\n        </>\r\n      )}\r\n    </Formik>\r\n  );\r\n};\r\n\r\nexport default AddNewBrand;\r\n","import React, { useState, useEffect } from 'react';\r\n\r\n// import third party ui lib\r\nimport {\r\n  Empty,\r\n  Popconfirm,\r\n  Upload,\r\n  message,\r\n  Switch,\r\n  Select,\r\n  Button,\r\n  notification,\r\n  Table,\r\n  Space,\r\n  Input as CoolInput,\r\n  Tooltip,\r\n  Modal,\r\n} from 'antd';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { useHistory } from 'react-router';\r\n\r\nimport {\r\n  FileOutlined,\r\n  InboxOutlined,\r\n  RadiusUpleftOutlined,\r\n  RadiusUprightOutlined,\r\n  RadiusBottomleftOutlined,\r\n  RadiusBottomrightOutlined,\r\n  PlusOutlined,\r\n  DeleteOutlined,\r\n  EditOutlined,\r\n  CheckCircleOutlined,\r\n} from '@ant-design/icons';\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n/// import hooks\r\nimport { useFetch, useHandleFetch } from '../../../hooks';\r\n\r\n// import components\r\nimport Input from '../../../components/Field/Input';\r\nimport TextArea from '../../../components/Field/TextArea';\r\nimport { DataTableSkeleton } from '../../../components/Placeholders';\r\nimport QuickEdit from './QuickEdit';\r\nimport AddNewTag from './AddNewPostTag';\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n  notification.success({\r\n    message: message || 'Recipe Tag Created',\r\n    description: '',\r\n    icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n  });\r\n};\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n  notification.error({\r\n    message: message || 'Something Went Wrong',\r\n    description: '',\r\n    icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n  });\r\n};\r\n\r\nconst validationSchema = Yup.object().shape({\r\n  name: Yup.string()\r\n    .label('Name')\r\n    .required('Name is required')\r\n    .min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\nconst initialValues = {\r\n  name: '',\r\n  description: '',\r\n};\r\n\r\nconst { Column, ColumnGroup } = Table;\r\nconst { Search } = CoolInput;\r\n\r\nconst MyTable = ({ data, setTagList }) => {\r\n  const [visible, setvisible] = useState(false);\r\n  const [activeCategoryForEdit, setactiveCategoryForEdit] = useState(false);\r\n  const [deleteTagState, handleDeleteTagFetch] = useHandleFetch(\r\n    {},\r\n    'postDeleteTag'\r\n  );\r\n\r\n  const history = useHistory();\r\n\r\n  const handleDeleteTag = async (id) => {\r\n    const deleteTagRes = await handleDeleteTagFetch({\r\n      urlOptions: {\r\n        placeHolders: {\r\n          id,\r\n        },\r\n      },\r\n    });\r\n\r\n    // @ts-ignore\r\n    if (deleteTagRes && deleteTagRes.status === 'ok') {\r\n      openSuccessNotification('Deleted Recipe Tag');\r\n      const newtagList = data.filter((item) => item.id !== id);\r\n      setTagList(newtagList);\r\n    }\r\n  };\r\n\r\n  const handleOk = (e: any) => {\r\n    setvisible(false);\r\n  };\r\n\r\n  const handleCancel = (e: any) => {\r\n    setvisible(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Table\r\n        // expandable={{\r\n        //     expandedRowRender: record => <p style={{ margin: 0 }}>{record.name}</p>,\r\n        //     rowExpandable: record => record.name !== 'Not Expandable',\r\n        //   }}\r\n        // bordered={true}\r\n        size='small'\r\n        // pagination={false}\r\n        dataSource={data}\r\n      >\r\n        <Column\r\n          title='Name'\r\n          dataIndex='name'\r\n          key='id'\r\n          className='classnameofthecolumn'\r\n          render={(text, record: any) => (\r\n            <>\r\n              <h4\r\n                onClick={() => {\r\n                  history.push(`/admin/posts/tag/${record.id}`);\r\n                  // setBrandDetailVisible(true);\r\n                  setactiveCategoryForEdit(record);\r\n                }}\r\n                style={{\r\n                  fontWeight: 400,\r\n                  color: '#555',\r\n                  cursor: 'pointer',\r\n                }}\r\n              >\r\n                {text}\r\n              </h4>\r\n            </>\r\n          )}\r\n        />\r\n\r\n        <Column\r\n          title='Description'\r\n          dataIndex='description'\r\n          key='id'\r\n          className='classnameofthecolumn'\r\n        />\r\n\r\n        <Column\r\n          className='classnameofthecolumn'\r\n          title=''\r\n          key='action'\r\n          align='right'\r\n          render={(text, record: any) => (\r\n            <Space size='middle'>\r\n              <a href='##'>\r\n                <Tooltip placement='top' title='Edit Recipe tag'>\r\n                  <span\r\n                    className='iconSize'\r\n                    onClick={() => {\r\n                      setvisible(true);\r\n                      setactiveCategoryForEdit(record);\r\n                    }}\r\n                  >\r\n                    <EditOutlined />\r\n                  </span>\r\n                </Tooltip>\r\n              </a>\r\n\r\n              <Popconfirm\r\n                onConfirm={() => handleDeleteTag(record.id)}\r\n                title='Are you sure？'\r\n                okText='Yes'\r\n                cancelText='No'\r\n              >\r\n                <span className='iconSize iconSize-danger'>\r\n                  <DeleteOutlined />\r\n                </span>\r\n              </Popconfirm>\r\n            </Space>\r\n          )}\r\n        />\r\n      </Table>\r\n\r\n      {activeCategoryForEdit && (\r\n        <QuickEdit\r\n          tagList={data}\r\n          setTagList={setTagList}\r\n          setAddNewCategoryVisible={setvisible}\r\n          addNewCategoryVisible={visible}\r\n          tagDetailData={activeCategoryForEdit}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\ninterface Props {}\r\n\r\nconst TagList = ({}: Props) => {\r\n  const [tagList, setTagList] = useState([]);\r\n\r\n  const [tagState, handleTagListFetch] = useHandleFetch({}, 'postTagList');\r\n\r\n  console.log('recipetaglist', tagState);\r\n\r\n  useEffect(() => {\r\n    const setTags = async () => {\r\n      const tags = await handleTagListFetch({});\r\n      // @ts-ignore\r\n      setTagList(tags);\r\n    };\r\n    setTags();\r\n  }, []);\r\n\r\n  const [addNewCategoryVisible, setAddNewCategoryVisible] = useState(false);\r\n\r\n  const handleSearch = (value) => {\r\n    if (tagState.data.length > 0) {\r\n      const newTagList = tagState.data.filter((item) =>\r\n        item.name.toLowerCase().includes(value.toLowerCase())\r\n      );\r\n      setTagList(newTagList);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className='categoryListContainer'>\r\n        <div className='categoryListContainer__header'>\r\n          <div className='categoryListContainer__header-searchBar-tag'>\r\n            <h2 className='categoryListContainer__header-title'>Recipe Tags</h2>\r\n\r\n            <Search\r\n              enterButton={false}\r\n              className='searchbarClassName'\r\n              placeholder='search recipe tags..'\r\n              onChange={(e) => handleSearch(e.target.value)}\r\n            />\r\n          </div>\r\n          <Button\r\n            // type=\"primary\"\r\n            className='btnPrimaryClassNameoutline'\r\n            icon={<PlusOutlined />}\r\n            onClick={() => setAddNewCategoryVisible(true)}\r\n          >\r\n            Add New\r\n          </Button>\r\n        </div>\r\n        <div className='categoryListContainer__categoryList'>\r\n          {tagState.done && tagList.length > 0 && (\r\n            <MyTable setTagList={setTagList} data={tagList} />\r\n          )}\r\n          {tagState.isLoading && <DataTableSkeleton />}\r\n\r\n          {tagState.done && !(tagList.length > 0) && (\r\n            <div\r\n              style={{\r\n                marginTop: '200px',\r\n              }}\r\n            >\r\n              <Empty\r\n                description='No Recipe tags found'\r\n                image={Empty.PRESENTED_IMAGE_SIMPLE}\r\n              />\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <AddNewTag\r\n        tagList={tagList}\r\n        setTagList={setTagList}\r\n        addNewCategoryVisible={addNewCategoryVisible}\r\n        setAddNewCategoryVisible={setAddNewCategoryVisible}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TagList;\r\n","// @ts-nocheck\r\nimport React, { useState } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\nimport { useHandleFetch } from '../../../hooks';\r\n// import third party ui lib\r\nimport {\r\n  Upload,\r\n  message,\r\n  Switch,\r\n  Select,\r\n  Button,\r\n  notification,\r\n  Modal,\r\n  Tooltip,\r\n} from 'antd';\r\n\r\nimport {\r\n  FileOutlined,\r\n  InboxOutlined,\r\n  FileAddOutlined,\r\n  DeleteOutlined,\r\n  CheckCircleOutlined,\r\n  CloseOutlined,\r\n  CheckOutlined,\r\n  InfoCircleOutlined,\r\n  PlusOutlined,\r\n  FileImageFilled,\r\n} from '@ant-design/icons';\r\n\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../../components/Field/Input';\r\nimport TextArea from '../../../components/Field/TextArea';\r\nimport MediaLibrary from '../../../components/MediaLibrary';\r\nimport MetaTags from '../../../pages/category/MetaTags';\r\n\r\nconst validationSchema = Yup.object().shape({\r\n  name: Yup.string()\r\n    .label('Name')\r\n    .required('Name is required')\r\n    .min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n  notification.success({\r\n    message: message || 'Recipe Tag Updated',\r\n    description: '',\r\n    icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n  });\r\n};\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n  notification.error({\r\n    message: message || 'Something Went Wrong',\r\n    description: '',\r\n    icon: <InfoCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n  });\r\n};\r\n\r\nconst initialValues = {\r\n  name: '',\r\n  bnName: '',\r\n  description: '',\r\n  bnDescription: '',\r\n  metaTitle: '',\r\n  bnMetaTitle: '',\r\n  metaDescription: '',\r\n  bnMetaDescription: '',\r\n  metaTags: '',\r\n  bnMetaTags: '',\r\n};\r\n\r\ninterface Props {\r\n  addNewCategoryVisible?: any;\r\n  setAddNewCategoryVisible?: any;\r\n  tagDetailData?: any;\r\n  setTagDetailData?: any;\r\n}\r\n\r\nconst AddNewBrand = ({\r\n  addNewCategoryVisible,\r\n  setAddNewCategoryVisible,\r\n  setTagDetailData,\r\n  tagDetailData,\r\n}: Props) => {\r\n  const [addTagState, handleAddTagFetch] = useHandleFetch({}, 'postUpdateTag');\r\n  const [myImages, setmyImages] = useState(false);\r\n  const [visibleMedia, setvisibleMedia] = useState(false);\r\n  const [tags, setTags] = useState([]);\r\n  const [bnTags, setBnTags] = useState([]);\r\n\r\n  const handleSubmit = async (values: any, actions: any) => {\r\n    const addTagRes = await handleAddTagFetch({\r\n      urlOptions: {\r\n        placeHolders: {\r\n          id: values.id,\r\n        },\r\n      },\r\n      body: {\r\n        name: values.name.trim(),\r\n        description: values.description,\r\n        // metaTitle: values.metaTitle,\r\n        // metaDescription: values.metaDescription,\r\n        // metaTags: tags.join(','),\r\n\r\n        bn: {\r\n          //   metaTitle: values.bnMetaTitle,\r\n          //   metaDescription: values.bnMetaDescription,\r\n          //   metaTags: bnTags.join(','),\r\n          name: values.bnName.trim(),\r\n          description: values.bnDescription,\r\n        },\r\n      },\r\n    });\r\n\r\n    // @ts-ignore\r\n    if (addTagRes && addTagRes.status === 'ok') {\r\n      openSuccessNotification();\r\n      setAddNewCategoryVisible(false);\r\n      setTagDetailData({\r\n        ...tagDetailData,\r\n        // @ts-ignore\r\n        ...addTagRes,\r\n        name: addTagRes['name'] || '',\r\n        description: addTagRes['description'] || '',\r\n      });\r\n\r\n      actions.resetForm();\r\n    } else {\r\n      openErrorNotification();\r\n    }\r\n\r\n    actions.setSubmitting(false);\r\n  };\r\n\r\n  const handleCancel = (e: any) => {\r\n    setAddNewCategoryVisible(false);\r\n  };\r\n\r\n  const getisSubmitButtonDisabled = (values, isValid) => {\r\n    if (!values.name || !isValid) {\r\n      return true;\r\n    }\r\n    return false;\r\n  };\r\n\r\n  const handleImagesDelete = (id) => {\r\n    // @ts-ignore\r\n    const newImages =\r\n      myImages &&\r\n      myImages.filter((image) => {\r\n        return image.id !== id;\r\n      });\r\n\r\n    setmyImages(newImages);\r\n  };\r\n\r\n  return (\r\n    <Formik\r\n      onSubmit={(values, actions) => handleSubmit(values, actions)}\r\n      validationSchema={validationSchema}\r\n      validateOnBlur={false}\r\n      enableReinitialize={true}\r\n      initialValues={{ ...initialValues, ...tagDetailData }}\r\n    >\r\n      {({\r\n        handleChange,\r\n        values,\r\n        handleSubmit,\r\n        errors,\r\n        isValid,\r\n        isSubmitting,\r\n        touched,\r\n        handleBlur,\r\n        setFieldTouched,\r\n        handleReset,\r\n      }) => (\r\n        <>\r\n          <Modal\r\n            style={{\r\n              top: '40px',\r\n            }}\r\n            title='Edit Tag'\r\n            visible={addNewCategoryVisible}\r\n            onOk={(e: any) => handleSubmit(e)}\r\n            onCancel={handleCancel}\r\n            okText='Update'\r\n            okButtonProps={{\r\n              loading: isSubmitting,\r\n              htmlType: 'submit',\r\n              disabled: getisSubmitButtonDisabled(values, isValid),\r\n            }}\r\n          >\r\n            <Input\r\n              label='Name'\r\n              value={values.name}\r\n              name='name'\r\n              placeHolder={'new,fresh'}\r\n              isError={\r\n                (touched.name && errors.name) ||\r\n                (!isSubmitting && addTagState.error['error']['name'])\r\n              }\r\n              errorString={\r\n                (touched.name && errors.name) ||\r\n                (!isSubmitting && addTagState.error['error']['name'])\r\n              }\r\n              onChange={(e: any) => {\r\n                handleChange(e);\r\n                setFieldTouched('name');\r\n              }}\r\n            />\r\n\r\n            <Input\r\n              label='BN Name'\r\n              value={values.bnName}\r\n              placeHolder={'নতুন,ফ্রেশ'}\r\n              name='bnName'\r\n              isError={\r\n                (touched.bnName && errors.bnName) ||\r\n                (!isSubmitting && addTagState.error['error']['bnName'])\r\n              }\r\n              errorString={\r\n                (touched.bnName && errors.bnName) ||\r\n                (!isSubmitting && addTagState.error['error']['bnName'])\r\n              }\r\n              onChange={(e: any) => {\r\n                handleChange(e);\r\n                setFieldTouched('bnName');\r\n              }}\r\n            />\r\n\r\n            <TextArea\r\n              label='Description'\r\n              value={values.description}\r\n              name='description'\r\n              placeholder={'This tag...'}\r\n              isError={\r\n                (touched.description && errors.description) ||\r\n                (!isSubmitting && addTagState.error['error']['description'])\r\n              }\r\n              errorString={\r\n                (touched.description && errors.description) ||\r\n                (!isSubmitting && addTagState.error['error']['description'])\r\n              }\r\n              onChange={(e: any) => {\r\n                handleChange(e);\r\n                setFieldTouched('description');\r\n              }}\r\n            />\r\n\r\n            <TextArea\r\n              label='BN Description'\r\n              value={values.bnDescription}\r\n              placeholder={'এই ট্যাগ...'}\r\n              name='bnDescription'\r\n              isError={\r\n                (touched.bnDescription && errors.bnDescription) ||\r\n                (!isSubmitting && addTagState.error['error']['bnDescription'])\r\n              }\r\n              errorString={\r\n                (touched.bnDescription && errors.bnDescription) ||\r\n                (!isSubmitting && addTagState.error['error']['bnDescription'])\r\n              }\r\n              onChange={(e: any) => {\r\n                handleChange(e);\r\n                setFieldTouched('bnDescription');\r\n              }}\r\n            />\r\n\r\n            {/* <Input\r\n              label='Meta title'\r\n              value={values.metaTitle}\r\n              placeHolder={'category...'}\r\n              name='metaTitle'\r\n              isError={\r\n                (touched.metaTitle && errors.metaTitle) ||\r\n                (!isSubmitting && addTagState.error['error']['metaTitle'])\r\n              }\r\n              errorString={\r\n                (touched.metaTitle && errors.metaTitle) ||\r\n                (!isSubmitting && addTagState.error['error']['metaTitle'])\r\n              }\r\n              onChange={(e: any) => {\r\n                handleChange(e);\r\n                setFieldTouched('metaTitle');\r\n              }}\r\n            />\r\n\r\n            <Input\r\n              label='BN Meta title'\r\n              value={values.bnMetaTitle}\r\n              placeHolder={'ক্যাটাগড়ি...'}\r\n              name='bnMetaTitle'\r\n              isError={\r\n                (touched.bnMetaTitle && errors.bnMetaTitle) ||\r\n                (!isSubmitting && addTagState.error['error']['bnMetaTitle'])\r\n              }\r\n              errorString={\r\n                (touched.bnMetaTitle && errors.bnMetaTitle) ||\r\n                (!isSubmitting && addTagState.error['error']['bnMetaTitle'])\r\n              }\r\n              onChange={(e: any) => {\r\n                handleChange(e);\r\n                setFieldTouched('bnMetaTitle');\r\n              }}\r\n            />\r\n\r\n            <TextArea\r\n              label='Meta description'\r\n              value={values.metaDescription}\r\n              placeholder={'meta...'}\r\n              name='metaDescription'\r\n              isError={\r\n                (touched.metaDescription && errors.metaDescription) ||\r\n                (!isSubmitting && addTagState.error['error']['metaDescription'])\r\n              }\r\n              errorString={\r\n                (touched.metaDescription && errors.metaDescription) ||\r\n                (!isSubmitting && addTagState.error['error']['metaDescription'])\r\n              }\r\n              onChange={(e: any) => {\r\n                handleChange(e);\r\n                setFieldTouched('metaDescription');\r\n              }}\r\n            />\r\n\r\n            <TextArea\r\n              label='BN Meta Description'\r\n              value={values.bnMetaDescription}\r\n              placeholder={'এইয় মেট...'}\r\n              name='bnMetaDescription'\r\n              isError={\r\n                (touched.bnMetaDescription && errors.bnMetaDescription) ||\r\n                (!isSubmitting &&\r\n                  addTagState.error['error']['bnMetaDescription'])\r\n              }\r\n              errorString={\r\n                (touched.bnMetaDescription && errors.bnMetaDescription) ||\r\n                (!isSubmitting &&\r\n                  addTagState.error['error']['bnMetaDescription'])\r\n              }\r\n              onChange={(e: any) => {\r\n                handleChange(e);\r\n                setFieldTouched('bnMetaDescription');\r\n              }}\r\n            />\r\n\r\n            <h3 className='inputFieldLabel'>Meta Tags (grocery,fashion)</h3>\r\n\r\n            <MetaTags\r\n              // @ts-ignore\r\n              setTags={setTags}\r\n              tags={tags}\r\n            />\r\n\r\n            <div\r\n              style={{\r\n                marginTop: '15px',\r\n              }}\r\n            ></div>\r\n\r\n            <h3 className='inputFieldLabel'>BN Meta Tags (মুদিখানা,ফ্যাশন)</h3>\r\n\r\n            <MetaTags\r\n              // @ts-ignore\r\n              setTags={setBnTags}\r\n              tags={bnTags}\r\n            /> */}\r\n          </Modal>\r\n\r\n          <MediaLibrary\r\n            setvisible={setvisibleMedia}\r\n            visible={visibleMedia}\r\n            setmyImages={setmyImages}\r\n            myImages={myImages}\r\n            isModalOpenForImages={true}\r\n          />\r\n        </>\r\n      )}\r\n    </Formik>\r\n  );\r\n};\r\n\r\nexport default AddNewBrand;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useParams, useHistory } from \"react-router\";\r\n\r\n\r\n// import hooks\r\nimport { useHandleFetch } from \"../../../hooks\";\r\n\r\n// import lib\r\nimport {\r\n    FileOutlined,\r\n    InboxOutlined,\r\n    RadiusUpleftOutlined,\r\n    RadiusUprightOutlined,\r\n    RadiusBottomleftOutlined,\r\n    RadiusBottomrightOutlined,\r\n    PlusOutlined,\r\n    DeleteOutlined,\r\n    EditOutlined,\r\n    CheckCircleOutlined\r\n} from '@ant-design/icons';\r\n\r\nimport { Skeleton, Empty, Popconfirm, Upload, message, Switch, Select, Button, notification, Table, Space, Input as CoolInput, Tooltip, Modal } from 'antd';\r\n\r\n\r\n// import components\r\nimport { DataTableSkeleton } from \"../../../components/Placeholders\";\r\nimport TagEdit from \"./TagEdit\";\r\n\r\n\r\nconst { Column, ColumnGroup } = Table;\r\nconst { Search } = CoolInput;\r\n\r\n\r\ninterface Props {\r\n    productRecord?: any;\r\n}\r\n\r\nconst NewBrandDetail = (props: Props) => {\r\n    const [tagDetailState, handleTagDetailFetch] = useHandleFetch({}, 'postTagDetail');\r\n    const [tagProductsState, handleTagProductsFetch] = useHandleFetch({}, 'tagPostList');\r\n    const [tagEditVisible, setTagEditVisible] = useState(false);\r\n    const [tagDetailData,setTagDetailData] = useState({}); \r\n\r\n    \r\n\r\n    const params = useParams();\r\n    const history = useHistory();\r\n    const tagId = params['id'];\r\n\r\n    useEffect(() => {\r\n\r\n        const getBrandDetail = async () => {\r\n            const tagDetailRes =  await handleTagDetailFetch({\r\n                urlOptions: {\r\n                    placeHolders: {\r\n                        id: tagId\r\n                    }\r\n                }\r\n            }); \r\n\r\n            // @ts-ignore\r\n            if(tagDetailRes){\r\n                console.log('tagDetailRes',tagDetailRes);\r\n                // @ts-ignore\r\n                setTagDetailData(tagDetailRes);\r\n            }\r\n        };\r\n\r\n        getBrandDetail();\r\n\r\n    }, [tagId]);\r\n\r\n    useEffect(() => {\r\n        const getTagProducts = async () => {\r\n            await handleTagProductsFetch({\r\n                urlOptions: {\r\n                    placeHolders: {\r\n                        id: tagId\r\n                    }\r\n                }\r\n            })\r\n        };\r\n\r\n        getTagProducts();\r\n\r\n    }, [tagId]);\r\n\r\n\r\n\r\n\r\n    console.log('tagProductsState', tagProductsState);\r\n\r\n    console.log('brandParams', params);\r\n\r\n\r\n    return (\r\n        <div className='brandDetailContainer'>\r\n            <div className='brandDetailContainer__heading'>\r\n                <h3>\r\n                    Recipe Tag Detail\r\n                </h3>\r\n\r\n                {tagDetailState.done && tagDetailData && (Object.keys(tagDetailData).length > 0) && (\r\n                    <>\r\n                        <TagEdit\r\n                            addNewCategoryVisible={tagEditVisible}\r\n                            setAddNewCategoryVisible={setTagEditVisible}\r\n                            tagDetailData={tagDetailData}\r\n                            setTagDetailData={setTagDetailData}\r\n                        />\r\n                        <Button\r\n                            onClick={() => setTagEditVisible(true)}\r\n                            type='link'\r\n                            icon={<EditOutlined />}\r\n                        >\r\n                            Edit\r\n                      </Button>\r\n                    </>\r\n                )}\r\n            </div>\r\n            <Skeleton\r\n                paragraph={{ rows: 2 }}\r\n                loading={tagDetailState.isLoading}>\r\n                {tagDetailState.done && tagDetailData && !(Object.keys(tagDetailData).length > 0) && (\r\n                    <Empty description='No Recipe Tag found' image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n                )}\r\n\r\n                {tagDetailState.done && tagDetailData && (Object.keys(tagDetailData).length > 0) && (\r\n                    <div className='brandDetailContainer__header'>\r\n\r\n                        <div className='brandDetailContainer__header-info'>\r\n                            <h2>\r\n                                {tagDetailData['name']}\r\n                            </h2>\r\n                            <h3>\r\n                                {tagDetailData['description']}\r\n                            </h3>\r\n                            {tagDetailData['url'] && (\r\n                                <h3>\r\n                                    URL:\r\n                                    <span>\r\n                                        {tagDetailData['url']}\r\n                                    </span>\r\n\r\n                                </h3>\r\n                            )}\r\n                        </div>\r\n                    </div>\r\n                )}\r\n\r\n            </Skeleton>\r\n\r\n            <div className='brandDetailContainer__heading'>\r\n                <h3>\r\n                    Recipes \r\n                </h3>\r\n            </div>\r\n            <div className='brandDetailContainer__body'>\r\n                {tagProductsState.isLoading && <DataTableSkeleton />}\r\n                \r\n                {tagProductsState.done && !(tagProductsState.data.length > 0) && (\r\n                    <div style={{\r\n                        marginTop: '100px'\r\n                    }}>\r\n                        <Empty description='No Recipes found' image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n                    </div>\r\n                )}\r\n\r\n                {tagProductsState.done && tagProductsState.data && tagProductsState.data.length > 0 && (\r\n                    <>\r\n                        <Table\r\n                            style={{\r\n                                paddingTop: '10px',\r\n                                borderRadius: '5px !important',\r\n                                overflow: 'hidden',\r\n                                boxShadow: '0 0.125rem 0.625rem rgba(227, 231, 250, 0.3), 0 0.0625rem 0.125rem rgba(206, 220, 233, 0.4)'\r\n                            }}\r\n                            // expandable={{\r\n                            //     expandedRowRender: record => <p style={{ margin: 0 }}>{record.name}</p>,\r\n                            //     rowExpandable: record => record.name !== 'Not Expandable',\r\n                            //   }}\r\n                            // bordered={true}\r\n                            size='small'\r\n                            // pagination={false}\r\n                            dataSource={tagProductsState.data}\r\n                            tableLayout={'auto'}\r\n                            onHeaderRow={column => {\r\n                                return {\r\n                                    style: {\r\n                                        color: 'red !important'\r\n                                    }\r\n\r\n                                };\r\n                            }}\r\n                        >\r\n                            <Column\r\n                                title=\"\"\r\n                                dataIndex=\"cover\"\r\n                                key=\"id\"\r\n                                width={'80px'}\r\n\r\n                                className='classnameofthecolumn'\r\n\r\n                                render={(cover, record: any) => (\r\n                                    <>\r\n                                        <img\r\n                                            onClick={() => {\r\n                                                history.push(`/admin/posts/${record.id}`)\r\n                                            }}\r\n                                            src={cover} alt='cover img' style={{\r\n                                                height: '40px',\r\n                                                width: '40px',\r\n                                                objectFit: \"contain\",\r\n                                                borderRadius: '3px',\r\n                                                cursor: 'pointer'\r\n                                            }} />\r\n\r\n\r\n\r\n\r\n                                    </>\r\n                                )}\r\n                            />\r\n\r\n                            <Column\r\n                                title=\"Name\"\r\n                                dataIndex=\"name\"\r\n                                key=\"id\"\r\n                                className='classnameofthecolumn'\r\n                                render={(text, record: any) => (\r\n                                    <>\r\n                                        <h4\r\n                                            onClick={() => {\r\n                                                history.push(`/admin/posts/${record.id}`)\r\n                                            }}\r\n                                            style={{\r\n                                                fontWeight: 400,\r\n                                                color: '#555',\r\n                                                cursor: 'pointer'\r\n\r\n                                            }}>\r\n                                            {text}\r\n                                        </h4>\r\n\r\n\r\n                                    </>\r\n                                )}\r\n\r\n                            />\r\n\r\n                            <Column\r\n                                title=\"Offer Price\"\r\n                                dataIndex=\"offerPrice\"\r\n                                key=\"id\"\r\n                                className='classnameofthecolumn'\r\n\r\n                            />\r\n\r\n\r\n                            <Column\r\n                                title=\"Price\"\r\n                                dataIndex=\"price\"\r\n                                key=\"id\"\r\n                                className='classnameofthecolumn'\r\n\r\n                            />\r\n\r\n\r\n                            <Column\r\n                                title=\"Available\"\r\n                                dataIndex=\"available\"\r\n                                key=\"id\"\r\n                                className='classnameofthecolumn'\r\n\r\n                            />\r\n\r\n\r\n                            <Column\r\n                                title=\"Minimum\"\r\n                                dataIndex=\"minimum\"\r\n                                key=\"id\"\r\n                                className='classnameofthecolumn'\r\n\r\n                            />\r\n\r\n                        </Table>\r\n                    </>\r\n                )}\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NewBrandDetail\r\n","// @ts-nocheck\r\nimport React,{useEffect, useState} from 'react'; \r\nimport { Tag, Input, Tooltip } from 'antd';\r\nimport { PlusOutlined } from '@ant-design/icons';\r\n\r\nclass MetaTags extends React.Component {\r\n  state = {\r\n    tags: [],\r\n    inputVisible: false,\r\n    inputValue: '',\r\n    editInputIndex: -1,\r\n    editInputValue: '',\r\n  };\r\n\r\n\r\n\r\n  handleClose = removedTag => {\r\n    const {setTags,tags} = this.props;\r\n    const localTags = tags.filter(tag => tag !== removedTag);\r\n    setTags(localTags);\r\n  };\r\n\r\n  showInput = () => {\r\n    this.setState({ inputVisible: true }, () => this.input.focus());\r\n  };\r\n\r\n  handleInputChange = e => {\r\n    this.setState({ inputValue: e.target.value });\r\n  };\r\n\r\n  handleInputConfirm = () => {\r\n      console.log('handleInputConfirm',this.props);\r\n    const { inputValue } = this.state;\r\n    let { tags, setTags } = this.props;\r\n    if (inputValue && tags && tags.indexOf(inputValue) === -1) {\r\n      tags = [...tags, inputValue];\r\n    }\r\n    setTags(tags);\r\n    this.setState({\r\n      inputVisible: false,\r\n      inputValue: '',\r\n    });\r\n  };\r\n\r\n  handleEditInputChange = e => {\r\n    this.setState({ editInputValue: e.target.value });\r\n    console.log('tagValue',e.target.value);\r\n  };\r\n\r\n  handleEditInputConfirm = () => {\r\n    this.setState(({ editInputIndex, editInputValue }) => {\r\n      return {\r\n        editInputIndex: -1,\r\n        editInputValue: '',\r\n      };\r\n    });\r\n\r\n    const newTags = [...this.props.tags];\r\n    newTags[editInputIndex] = editInputValue;\r\n    this.props.setTags(newTags);\r\n  };\r\n\r\n  saveInputRef = input => {\r\n    this.input = input;\r\n  };\r\n\r\n  saveEditInputRef = input => {\r\n    this.editInput = input;\r\n  };\r\n\r\n\r\n\r\n  render() {\r\n    const { inputVisible, inputValue, editInputIndex, editInputValue } = this.state;\r\n    const { placeholder,tags } = this.props;\r\n\r\n    return (\r\n      <>\r\n        {tags && tags.length > 0 && tags.map((tag, index) => {\r\n          if (editInputIndex === index) {\r\n            return (\r\n              <Input\r\n                ref={this.saveEditInputRef}\r\n                key={tag}\r\n                size=\"small\"\r\n                placeholder={placeholder}\r\n                className=\"tag-input\"\r\n                value={editInputValue}\r\n                onChange={this.handleEditInputChange}\r\n                onBlur={this.handleEditInputConfirm}\r\n                onPressEnter={this.handleEditInputConfirm}\r\n              />\r\n            );\r\n          }\r\n\r\n          const isLongTag = tag.length > 20;\r\n\r\n          const tagElem = (\r\n            <Tag\r\n              className=\"edit-tag\"\r\n              key={tag}\r\n              closable={index !== 0}\r\n              onClose={() => this.handleClose(tag)}\r\n            >\r\n              <span\r\n                onDoubleClick={e => {\r\n                  if (index !== 0) {\r\n                    this.setState({ editInputIndex: index, editInputValue: tag }, () => {\r\n                      this.editInput.focus();\r\n                    });\r\n                    e.preventDefault();\r\n                  }\r\n                }}\r\n              >\r\n                {isLongTag ? `${tag.slice(0, 20)}...` : tag}\r\n              </span>\r\n            </Tag>\r\n          );\r\n          return isLongTag ? (\r\n            <Tooltip title={tag} key={tag}>\r\n              {tagElem}\r\n            </Tooltip>\r\n          ) : (\r\n            tagElem\r\n          );\r\n        })}\r\n        {inputVisible && (\r\n          <Input\r\n          style={{\r\n            margin: \"10px 0\"\r\n          }}\r\n            ref={this.saveInputRef}\r\n            type=\"text\"\r\n            size=\"small\"\r\n            className=\"tag-input\"\r\n            value={inputValue}\r\n            onChange={this.handleInputChange}\r\n            onBlur={this.handleInputConfirm}\r\n            onPressEnter={this.handleInputConfirm}\r\n          />\r\n        )}\r\n        {!inputVisible && (\r\n          <Tag className=\"site-tag-plus edit-tag\" onClick={this.showInput}>\r\n            <PlusOutlined /> New Value\r\n          </Tag>\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MetaTags","import React, { useState, useEffect } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n\r\nimport { useHandleFetch } from '../../../hooks';\r\n// import third party ui lib\r\nimport { Select, notification, Modal, Tooltip, Upload, message, Spin } from 'antd';\r\n\r\nimport {\r\n\tDeleteOutlined,\r\n\tFileAddOutlined,\r\n\tFileImageFilled,\r\n\tPlusOutlined,\r\n\tCheckCircleOutlined,\r\n\tCloseOutlined,\r\n\tCheckOutlined,\r\n\tInfoCircleOutlined,\r\n\tLoadingOutlined\r\n} from '@ant-design/icons';\r\n\r\n\r\n\r\n// import ReactQuill from 'react-quill';\r\n// import 'react-quill/dist/quill.snow.css';\r\n\r\n\r\n// import components\r\nimport Input from '../../../components/Field/Input';\r\nimport TextArea from '../../../components/Field/TextArea';\r\nimport MediaLibrary from \"../../../components/MediaLibrary\";\r\nimport MetaTags from \"./MetaTags\";\r\n\r\n\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n\t// name: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t\tmessage: message || 'Category Updated',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n\tnotification.error({\r\n\t\tmessage: message || 'Something Went Wrong',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n};\r\n\r\n\r\n\r\n\r\n\r\nconst initialValues = {\r\n\tname: '',\r\n\tbnName: '',\r\n\tdescription: '',\r\n\tbnDescription: '',\r\n\tmetaTitle: '',\r\n\tbnMetaTitle: '',\r\n\tmetaDescription: '',\r\n\tbnMetaDescription: '',\r\n\tmetaTags: '',\r\n\tbnMetaTags: '',\r\n\timage: [],\r\n\turl: '',\r\n\tcover: '',\r\n\tdisplayOrder: '',\r\n}\r\n\r\nconst { Option } = Select;\r\n\r\ninterface Props {\r\n\taddNewCategoryVisible: any;\r\n\tsetAddNewCategoryVisible: any;\r\n    categoryDetailData?:any; \r\n\tsetcategoryList?:any; \r\n\tcategoryList?:any; \r\n}\r\n\r\nconst AddNewCategory = ({ \r\n    addNewCategoryVisible, \r\n    setAddNewCategoryVisible, \r\n    categoryDetailData, setcategoryList, categoryList }: Props) => {\r\n\r\n\tconst [addCategoryState, handleAddCategoryFetch] = useHandleFetch({}, 'postCategoryUpdate');\r\n\tconst [updateCategoryIconState, handleUpdateCategoryIconFetch] = useHandleFetch({}, 'categoryUpdateIcon');\r\n\tconst [attachImageToItemMultipleState, handleAttachImageToItemMultipleFetch] = useHandleFetch({}, 'attachImageToItemMultiple');\r\n    const [attachImageToItemSingleState, handleAttachImageToItemSingleFetch] = useHandleFetch({}, 'attachImageToItemSingle');\r\n    const [detachImageFromItemMultipleState, handleDetachImageFromItemMultipleFetch] = useHandleFetch({}, 'detachImageFromItemMultiple');\r\n    const [detachImageFromItemSingleState, handleDetachImageFromItemSingleFetch] = useHandleFetch({}, 'detachImageFromItemSingle');\r\n    const [setImageAsThumbnailToItemState, handleSetImageAsThumbnailToItemFetch] = useHandleFetch({}, 'setImageAsThumbnailToItem');\r\n\r\n\tconst [visible, setvisible] = useState(false);\r\n\tconst [myThumbnailImage, setmyThumbnailImage] = useState(false);\r\n\tconst [isparentCategoryChecked, setisparentcategoryChecked] = useState(true);\r\n\tconst [isModalOpenForThumbnail, setisModalOpenForThumbnail] = useState(false);\r\n\tconst [isModalOpenForImages, setisModalOpenForImages] = useState(false);\r\n\tconst [selectedParentId, setselectedParentId] = useState('');\r\n\tconst [imageUrl, setImageUrl] = useState('');\r\n\tconst [loadingThumnail, setLoadingThumbnail] = useState(false);\r\n\tconst [imageFile, setImagefile] = useState('');\r\n\tconst [tags,setTags] = useState([]);\r\n\tconst [bnTags,setBnTags] = useState([]);\r\n\tconst [myImages, setmyImages] = useState(false);\r\n    const [coverImageId, setCoverImageId] = useState('');\r\n\tconst [myGoddamnImages, setMyGoddamnImages] = useState([]);\r\n\t\r\n    const [categoryDetailState, handleCategoryDetailFetch] = useHandleFetch({}, 'postCategoryDetail');\r\n\r\n\r\n\tuseEffect(() => {\r\n\r\n        const getCategoryDetail = async () => {\r\n            const categoryDetailDataRes =  await handleCategoryDetailFetch({\r\n                urlOptions: {\r\n                    placeHolders: {\r\n                        id: categoryDetailData.id\r\n                    }\r\n                }\r\n            }); \r\n        };\r\n\r\n        getCategoryDetail();\r\n\r\n    }, [categoryDetailData]);\r\n\r\n\r\n\tconsole.log('MahPostCategory',categoryDetailState)\r\n\tconsole.log('MahPostCategorymyImages',myImages)\r\n\r\n\tuseEffect(() => {\r\n\t\tif (categoryDetailState.done && categoryDetailState.data && Object.keys(categoryDetailState.data).length > 0) {\r\n\t\r\n\t\t\tconst images = categoryDetailState.data.image;\r\n\t\t\tlet mahImages = []; \r\n\r\n\t\t\tif (images && images.length > 0) {\r\n\t\t\t\tmahImages = images;\r\n\t\t\t}\r\n\t\r\n\t\t\tif (categoryDetailState.data.cover && categoryDetailState.data.cover['id']) {\r\n\t\t\t\tconst ixists = images.find(item => item.id === categoryDetailState.data.cover['id']);\r\n\t\t\t\tif(!ixists){\r\n\t\t\t\t\tmahImages = [categoryDetailState.data.cover, ...mahImages]\r\n\t\t\t\t}\r\n\r\n\t\t\t\tsetCoverImageId(categoryDetailState.data.cover['id']);\r\n\t\t\t}\r\n\t\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\tsetmyImages(mahImages);\r\n\t\t\t\t\r\n\t\t}\r\n\t}, [categoryDetailState.data]); \r\n\t\r\n\t\r\n\tuseEffect(() => {\r\n\t\t// @ts-ignore\r\n\t\tif (myImages && myImages[0] && myImages.length < 2) {\r\n\t\r\n\t\t\tif (coverImageId !== myImages[0].id) {\r\n\t\t\t\tsetCoverImageId(myImages[0].id);\r\n\t\t\t\thandleSetImageAsThumnail(myImages[0]);\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t}, [myImages])\r\n\t\r\n\r\n\r\n\r\n\r\n\tconst handleSubmit = async (values: any, actions: any) => {\r\n\t\t// @ts-ignore\r\n\t\tconst imagesIds = myImages ? myImages.map(image => {\r\n\t\t\treturn image.id;\r\n\t\t}) : [];\r\n\r\n\t\tconst formData = new FormData();\r\n\r\n\t\tformData.append(\"name\", values.name.trim());\r\n\t\tformData.append(\"description\", values.description);\r\n\t\tformData.append(\"image\", JSON.stringify(imagesIds));\r\n\t\tformData.append(\"cover\", coverImageId || imagesIds[0] ? imagesIds[0] : '');\r\n\t\tformData.append(\"parent\", selectedParentId);\r\n\t\tformData.append('displayOrder', values.displayOrder)\r\n\r\n\r\n\t\tconsole.log('categoryDetailData',categoryDetailData); \r\n\t\tconsole.log('imagesIds',imagesIds); \r\n\t\t\r\n\t\t\r\n\t\tif (categoryDetailData && Object.keys(categoryDetailData).length > 0) {\r\n\t\t\tconst aboutToUpdatedImageIds = []; \r\n\r\n\t\t\tif(imagesIds && imagesIds.length > 0){\r\n\t\t\t\timagesIds.forEach(imageId => {\r\n\t\t\t\t\tif(categoryDetailData && categoryDetailData['postCategory']){\r\n\t\t\t\t\t\tif(!categoryDetailData['image'].includes(imageId)){\r\n\t\t\t\t\t\t\taboutToUpdatedImageIds.push(imageId)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n      \r\n            if (aboutToUpdatedImageIds[0] && aboutToUpdatedImageIds.length > 1) {\r\n                await handleAttachImageToItemMultipleFetch({\r\n                    urlOptions: {\r\n                        placeHolders: {\r\n                            collection: 'postCategory',\r\n                            itemId: categoryDetailData.id\r\n                        }\r\n                    },\r\n                    body: {\r\n                        image: aboutToUpdatedImageIds\r\n                    }\r\n                });\r\n            }\r\n            else if (aboutToUpdatedImageIds[0] && aboutToUpdatedImageIds.length < 1) {\r\n                await handleAttachImageToItemSingleFetch({\r\n                    urlOptions: {\r\n                        placeHolders: {\r\n                            imageId: aboutToUpdatedImageIds[0].id,\r\n                            collection: 'postCategory',\r\n                            itemId: categoryDetailData.id\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n\t\t}\r\n\t\t\r\n\r\n\r\n\t\tconst addCategoryRes = await handleAddCategoryFetch({\r\n            urlOptions: {\r\n                placeHolders: {\r\n                    id: categoryDetailData.id\r\n                },\r\n            },\r\n            body: {\r\n                name: values.name && values.name.trim(),\r\n                description: values.description,\r\n                image: imagesIds,\r\n                cover: coverImageId || imagesIds[0] ? imagesIds[0] : '',\r\n                parent: selectedParentId,\r\n                icon: imageFile,\r\n                metaTitle: values.metaTitle,\r\n\t\t\t\tmetaDescription: values.metaDescription,\r\n\t\t\t\tdisplayOrder: values.displayOrder,\r\n                metaTags:  tags && tags.length > 0 ?  tags.join(',') : '',\r\n                bn: {\r\n                    metaTitle: values.bnMetaTitle,\r\n                    metaDescription: values.bnMetaDescription,\r\n\t\t\t\t\tmetaTags:  bnTags && bnTags.length > 0 ?  bnTags.join(',') : '',\r\n                    name: values.bnName && values.bnName.trim(),\r\n                    description: values.bnDescription,\r\n                }\r\n            },\r\n\t\t});\r\n\r\n\t\t// @ts-ignore\r\n\t\tif (addCategoryRes && addCategoryRes.status === 'ok') {\r\n\t\t\topenSuccessNotification('Category Updated!');\r\n\t\t\tsetAddNewCategoryVisible(false)\r\n\r\n\t\t\t// setcategoryList([{\r\n\t\t\t// \tid: addCategoryRes['_id'] || '',\r\n\t\t\t// \tkey: addCategoryRes['_id'] || '',\r\n\t\t\t// \tname: addCategoryRes['name'] || '',\r\n\t\t\t// \tdescription: addCategoryRes['description'] || '',\r\n\t\t\t// \tcover: addCategoryRes['cover'] || '',\r\n\t\t\t// \t// @ts-ignore\r\n\t\t\t// \t...addCategoryRes\r\n\t\t\t// },...categoryList]); \r\n\r\n\t\t\t\r\n\r\n            // setcategoryDetailData({\r\n\t\t\t// \t...categoryDetailData,\r\n\t\t\t// \t...addCategoryRes\r\n            // }); \r\n\r\n        \r\n\t\t\tactions.resetForm();\r\n\t\t\t// @ts-ignore\r\n\t\t\tsetmyImages([]);\r\n\t\t\tsetCoverImageId('')\r\n\t\t\tsetselectedParentId('')\r\n\t\t\tsetImageUrl('');\r\n\t\t}\r\n\t\telse {\r\n\t\t\topenErrorNotification();\r\n\t\t}\r\n\r\n\t\tactions.setSubmitting(false);\r\n\t};\r\n\r\n\r\n\r\n    const handleDetachSingleImage = async id => {\r\n        await handleDetachImageFromItemSingleFetch({\r\n            urlOptions: {\r\n                placeHolders: {\r\n                    imageId: id,\r\n                    collection: 'postCategory',\r\n                    itemId: categoryDetailData.id\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n\r\n\r\n    const handleSetImageAsThumnail = async image => {\r\n\r\n        const thumbnailRes = await handleSetImageAsThumbnailToItemFetch({\r\n            urlOptions: {\r\n                placeHolders: {\r\n                    imageId: image.id,\r\n                    collection: 'postCategory',\r\n                    itemId: categoryDetailData.id\r\n                }\r\n            }\r\n        });\r\n\r\n\r\n        // @ts-ignore\r\n        if (thumbnailRes && thumbnailRes.status === 'ok') {\r\n            openSuccessNotification('Set as thumbnail!')\r\n            // const positionInBrand = () => {\r\n            //     return brandList.map(item => item.id).indexOf(categoryDetailData.id);\r\n            // }\r\n\r\n            // const index = positionInBrand();\r\n\r\n            // const prevItem = brandList.find(item => item.id === productRecord.id);\r\n\r\n            // if (prevItem) {\r\n            //     const updatedItem = Object.assign({}, brandList[index], { ...prevItem, cover: image.cover });\r\n            //     const updateBrandList = [...brandList.slice(0, index), updatedItem, ...brandList.slice(index + 1)];\r\n            //     setBrandList(updateBrandList);\r\n            // }\r\n        }\r\n        else {\r\n            openErrorNotification(\"Couldn't set as thumbnail, Something went wrong\")\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n    \r\n    const handleImagesDelete = (id) => {\r\n        // @ts-ignore\r\n        const newImages = myImages && myImages.filter(image => {\r\n            return image.id !== id;\r\n        })\r\n\r\n        setmyImages(newImages);\r\n    }\r\n\r\n\r\n\r\n\tconst handleCancel = (e: any) => {\r\n\t\tsetAddNewCategoryVisible(false);\r\n\t};\r\n\r\n\r\n\r\n\r\n\r\n\r\n\tfunction getBase64(img, callback) {\r\n\t\tconst reader = new FileReader();\r\n\t\treader.addEventListener('load', () => callback(reader.result));\r\n\t\treader.readAsDataURL(img);\r\n\t}\r\n\r\n\r\n\tfunction beforeUpload(file) {\r\n\t\tconst isJpgOrPng = file.type === 'image/jpeg' || file.type === 'image/png';\r\n\t\tif (!isJpgOrPng) {\r\n\t\t\tmessage.error('You can only upload JPG/PNG file!');\r\n\t\t}\r\n\t\tconst isLt2M = file.size / 1024 / 1024 < 2;\r\n\t\tif (!isLt2M) {\r\n\t\t\tmessage.error('Image must smaller than 2MB!');\r\n\t\t}\r\n\r\n\r\n\t\tgetBase64(file, imageUrl => {\r\n\t\t\tsetImageUrl(imageUrl)\r\n\t\t\tsetImagefile(file)\r\n\t\t\tconst setNewIcon  = async () => {\r\n\t\t\t\tconst formData = new FormData();\r\n\t\t\t\tformData.append('icon',file); \r\n\t\t\t\t// const addCategoryRes = await handleAddCategoryFetch({\r\n\t\t\t\t// \tbody: formData,\r\n\t\t\t\t// });\r\n\t\t\t\tconst res = await handleUpdateCategoryIconFetch({\r\n\t\t\t\t\turlOptions: {\r\n\t\t\t\t\t\tplaceHolders: {\r\n\t\t\t\t\t\t\tid: categoryDetailData.id\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t},\r\n\t\t\t\t\tbody: formData\r\n\t\t\t\t}); \r\n\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\tif(res && res.status === 'ok'){\r\n\t\t\t\t\topenSuccessNotification('Category Icon updated!')\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\topenErrorNotification(\"Couldn't update category icon, Something went wrong\")\r\n\t\t\t\t}\r\n\r\n\t\t\t\t\r\n\t\t\t}; \r\n\t\t\t\r\n\t\t\tsetNewIcon();\r\n\t\t\tsetLoadingThumbnail(false)\r\n\t\t})\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\r\n\r\n\tconst uploadButton = (\r\n\t\t<div>\r\n\t\t\t{loadingThumnail ? <LoadingOutlined /> : <PlusOutlined />}\r\n\t\t\t<div className=\"ant-upload-text\">Upload</div>\r\n\t\t</div>\r\n\t);\r\n\r\n\r\n\r\n\tuseEffect(()=>{\r\n\r\n        if(categoryDetailData && Object.keys(categoryDetailData).length > 0){\r\n            const iconUrl = categoryDetailData.icon && categoryDetailData.icon; \r\n\r\n\t\t\tsetImageUrl(iconUrl); \r\n        }\r\n\r\n    },[])\r\n    \r\n    useEffect(()=>{\r\n\r\n        if(categoryDetailData && Object.keys(categoryDetailData).length > 0){\r\n            const metaTags = categoryDetailData.metaTags && categoryDetailData.metaTags.split(','); \r\n\r\n            console.log('localMetaTags',metaTags);\r\n           \r\n            const bnMetaTags = categoryDetailData.bn && categoryDetailData.bn['metaTags'] && categoryDetailData.bn['metaTags'].split(','); \r\n            setTags(metaTags || [])\r\n            setBnTags(bnMetaTags || [])\r\n        }\r\n\r\n    },[])\r\n\r\n\r\n\tconsole.log('addnewCategoryTags',tags);\r\n\tconsole.log('categoryDetailData',categoryDetailData);\r\n\tconsole.log('myImages',myImages);\r\n\r\n\treturn (\r\n\t\t<Formik\r\n\t\t\tonSubmit={(values, actions) => handleSubmit(values, actions)}\r\n\t\t\tvalidationSchema={validationSchema}\r\n\t\t\tvalidateOnBlur={false}\r\n\t\t\tenableReinitialize={true}\r\n\t\t\tinitialValues={\r\n                \r\n                { ...initialValues,\r\n                    ...categoryDetailData,\r\n                    ...( categoryDetailData && Object.keys(categoryDetailData).length > 0 && {\r\n                        bnMetaTitle: categoryDetailData['bn']\r\n                        && categoryDetailData['bn'].metaTitle\r\n                        && categoryDetailData['bn'].metaTitle,\r\n                        bnMetaDescription: categoryDetailData['bn'] &&  categoryDetailData['bn'].metaDescription && categoryDetailData['bn'].metaDescription,\r\n                        bnName: categoryDetailData['bn'] && categoryDetailData['bn'].name && categoryDetailData['bn'].name,\r\n                        bnDescription: categoryDetailData['bn'] && categoryDetailData['bn'].description && categoryDetailData['bn'].description,\r\n                    })\r\n                 }\r\n\t\t\t}\r\n\t\t>\r\n\t\t\t{({\r\n\t\t\t\thandleChange,\r\n\t\t\t\tvalues,\r\n\t\t\t\thandleSubmit,\r\n\t\t\t\terrors,\r\n\t\t\t\tisValid,\r\n\t\t\t\tisSubmitting,\r\n\t\t\t\ttouched,\r\n\t\t\t\thandleBlur,\r\n\t\t\t\tsetFieldTouched,\r\n\t\t\t\thandleReset,\r\n\t\t\t}) => (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<Modal\r\n\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\ttop: '40px'\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\ttitle=\"Edit Category\"\r\n\t\t\t\t\t\t\tvisible={addNewCategoryVisible}\r\n\t\t\t\t\t\t\tonOk={(e: any) => handleSubmit(e)}\r\n\t\t\t\t\t\t\tonCancel={handleCancel}\r\n\t\t\t\t\t\t\tokText='Update'\r\n\t\t\t\t\t\t\tokButtonProps={{\r\n\t\t\t\t\t\t\t\tloading: isSubmitting,\r\n\t\t\t\t\t\t\t\thtmlType: \"submit\",\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\tlabel='Name'\r\n\t\t\t\t\t\t\t\tvalue={values.name}\r\n\t\t\t\t\t\t\t\tplaceHolder={'grocery,fashion'}\r\n\t\t\t\t\t\t\t\tname='name'\r\n\t\t\t\t\t\t\t\tisError={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['name'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['name'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('name');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\tlabel='BN Name'\r\n\t\t\t\t\t\t\t\tvalue={values.bnName}\r\n\t\t\t\t\t\t\t\tplaceHolder={'মুদিখানা,ফ্যাশন'}\r\n\t\t\t\t\t\t\t\tname='bnName'\r\n\t\t\t\t\t\t\t\tisError={(touched.bnName && errors.bnName) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['bnName'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.bnName && errors.bnName) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['bnName'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('bnName');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\tlabel='Description'\r\n\t\t\t\t\t\t\t\tvalue={values.description}\r\n\t\t\t\t\t\t\t\tplaceholder={'This category...'}\r\n\t\t\t\t\t\t\t\tname='description'\r\n\t\t\t\t\t\t\t\tisError={(touched.description && errors.description) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['description'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.description && errors.description) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['description'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('description');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\tlabel='BN Description'\r\n\t\t\t\t\t\t\t\tvalue={values.bnDescription}\r\n\t\t\t\t\t\t\t\tplaceholder={'এই ক্যাটাগড়ি...'}\r\n\t\t\t\t\t\t\t\tname='bnDescription'\r\n\t\t\t\t\t\t\t\tisError={(touched.bnDescription && errors.bnDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['bnDescription'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.bnDescription && errors.bnDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['bnDescription'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('bnDescription');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\tmarginTop: '20px'\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\r\n\t\t\t\t\t\r\n\r\n\r\n\t\t\t\t\t<div className='addproductSection-left-header'\r\n\r\n                                style={{\r\n                                    marginBottom: '-5px'\r\n                                }}\r\n                            >\r\n                                <h3 className='inputFieldLabel'>Images</h3>\r\n\t\t\t\t\t\t\t\t\t\t\t{/* <div  >\r\n\t\t\t\t\t\t\t\t\t\t<FileOutlined />\r\n\t\t\t\t\t\t\t\t\t\t<span>Media Center</span>\r\n\t\t\t\t\t\t\t\t\t\t</div> */}\r\n                            </div>\r\n\r\n\r\n\t\t\t\t\t\t\t<div\r\n                                            style={{\r\n                                                padding: \"10px\"\r\n                                            }}\r\n                                            className='aboutToUploadImagesContainer'>\r\n                                            {categoryDetailState.isLoading && (\r\n                                                <div style={{\r\n                                                    padding: '20px 0'\r\n                                                }}>\r\n                                                    <Spin />\r\n                                                </div>\r\n                                            )}\r\n                                            {categoryDetailState.done && (\r\n                                                <>\r\n                                                    {myImages &&\r\n                                                        // @ts-ignore\r\n                                                        myImages.length > 0 && myImages.map((image, index) => {\r\n                                                            return (\r\n                                                                <div className='aboutToUploadImagesContainer__item'>\r\n                                                                    <div\r\n                                                                        className='aboutToUploadImagesContainer__item-imgContainer'\r\n                                                                        onClick={() => {\r\n                                                                            setCoverImageId(image.id);\r\n                                                                            handleSetImageAsThumnail(image);\r\n                                                                        }}\r\n                                                                    >\r\n                                                                        <img src={image.cover} alt={image.alt} />\r\n                                                                    </div>\r\n\r\n                                                                    <span\r\n                                                                        onClick={() => {\r\n                                                                            handleImagesDelete(image.id)\r\n                                                                            handleDetachSingleImage(image.id)\r\n                                                                        }\r\n\r\n                                                                        }\r\n                                                                        className='aboutToUploadImagesContainer__item-remove'>\r\n                                                                        <CloseOutlined />\r\n                                                                    </span>\r\n\r\n\r\n                                                                    {coverImageId === image.id ? (\r\n                                                                        <span className='aboutToUploadImagesContainer__item-cover'>\r\n                                                                            <CheckOutlined />\r\n                                                                        </span>\r\n                                                                    ) : !coverImageId && index === 0 && (\r\n                                                                        <span className='aboutToUploadImagesContainer__item-cover'>\r\n                                                                            <CheckOutlined />\r\n                                                                        </span>\r\n                                                                    )}\r\n\r\n\r\n                                                                </div>\r\n                                                            )\r\n                                                        })}\r\n\r\n\r\n                                                    <Tooltip\r\n                                                        title={'Attach images'}>\r\n\r\n                                                        <div\r\n                                                            onClick={() => {\r\n                                                                setvisible(true);\r\n                                                                setisModalOpenForImages(true);\r\n                                                                setisModalOpenForThumbnail(false);\r\n                                                            }}\r\n                                                            className='aboutToUploadImagesContainer__uploadItem'>\r\n                                                            {/* <FileAddOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FileImageTwoTone />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FileImageOutlined /> */}\r\n                                                            <FileImageFilled />\r\n                                                            {/* <h5>\r\n\t\t\t\t\t\t\t\t\t\t\t\t     Select From Library\r\n\t\t\t\t\t\t\t\t\t\t\t<     /h5> */}\r\n                                                            <span className='aboutToUploadImagesContainer__uploadItem-plus'>\r\n                                                                <PlusOutlined />\r\n                                                            </span>\r\n                                                        </div>\r\n                                                    </Tooltip>\r\n                                                </>\r\n                                            )}\r\n\r\n                                        </div>\r\n\r\n\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\tlabel='Meta title'\r\n\t\t\t\t\t\t\t\tvalue={values.metaTitle}\r\n\t\t\t\t\t\t\t\tplaceHolder={'category...'}\r\n\t\t\t\t\t\t\t\tname='metaTitle'\r\n\t\t\t\t\t\t\t\tisError={(touched.metaTitle && errors.metaTitle) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['metaTitle'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.metaTitle && errors.metaTitle) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['metaTitle'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('metaTitle')\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\tlabel='BN Meta title'\r\n\t\t\t\t\t\t\t\tvalue={values.bnMetaTitle}\r\n\t\t\t\t\t\t\t\tplaceHolder={'ক্যাটাগড়ি...'}\r\n\t\t\t\t\t\t\t\tname='bnMetaTitle'\r\n\t\t\t\t\t\t\t\tisError={(touched.bnMetaTitle && errors.bnMetaTitle) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['bnMetaTitle'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.bnMetaTitle && errors.bnMetaTitle) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['bnMetaTitle'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('bnMetaTitle');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\tlabel='Meta description'\r\n\t\t\t\t\t\t\t\tvalue={values.metaDescription}\r\n\t\t\t\t\t\t\t\tplaceholder={'meta...'}\r\n\t\t\t\t\t\t\t\tname='metaDescription'\r\n\t\t\t\t\t\t\t\tisError={(touched.metaDescription && errors.metaDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['metaDescription'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.metaDescription && errors.metaDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['metaDescription'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('metaDescription');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\tlabel='BN Meta Description'\r\n\t\t\t\t\t\t\t\tvalue={values.bnMetaDescription}\r\n\t\t\t\t\t\t\t\tplaceholder={'এইয় মেট...'}\r\n\t\t\t\t\t\t\t\tname='bnMetaDescription'\r\n\t\t\t\t\t\t\t\tisError={(touched.bnMetaDescription && errors.bnMetaDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['bnMetaDescription'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.bnMetaDescription && errors.bnMetaDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['bnMetaDescription'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('bnMetaDescription');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\tMeta Tags (grocery,fashion)\r\n\t\t\t\t\t\t\t</h3>\r\n\r\n\t\t\t\t\t\t\t<MetaTags\r\n\t\t\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\t\t\tsetTags={setTags}\r\n\t\t\t\t\t\t\ttags={tags}\r\n\t\t\t\t\t\t\t />\r\n\r\n\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\tmarginTop:'15px'\r\n\t\t\t\t\t\t\t}}></div>\r\n\r\n\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\tBN Meta Tags (মুদিখানা,ফ্যাশন)\r\n\t\t\t\t\t\t\t</h3>\r\n\r\n\t\t\t\t\t\t\t<MetaTags\r\n\t\t\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\t\t\tsetTags={setBnTags}\r\n\t\t\t\t\t\t\ttags={bnTags}\r\n\t\t\t\t\t\t\t />\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t</Modal>\r\n\r\n\t\t\t\t\t\t<MediaLibrary\r\n\t\t\t\t\t\t\tsetvisible={setvisible}\r\n\t\t\t\t\t\t\tvisible={visible}\r\n\t\t\t\t\t\t\tsetmyImages={setmyImages}\r\n\t\t\t\t\t\t\tmyImages={myImages}\r\n\t\t\t\t\t\t\tsetmyThumbnailImage={setmyThumbnailImage}\r\n\t\t\t\t\t\t\tisModalOpenForThumbnail={isModalOpenForThumbnail}\r\n\t\t\t\t\t\t\tisModalOpenForImages={isModalOpenForImages}\r\n\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</>\r\n\t\t\t\t)}\r\n\t\t</Formik>\r\n\r\n\t);\r\n};\r\n\r\nexport default AddNewCategory;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n\r\nimport { useHandleFetch } from '../../../hooks';\r\nimport config from '../../../config.json';\r\n// import third party ui lib\r\nimport { Switch, Select, notification, Modal, Tooltip, Upload, message, } from 'antd';\r\n\r\nimport {\r\n\tDeleteOutlined,\r\n\tFileAddOutlined,\r\n\tFileImageFilled,\r\n\tPlusOutlined,\r\n\tCheckCircleOutlined,\r\n\tCloseOutlined,\r\n\tCheckOutlined,\r\n\tInfoCircleOutlined,\r\n\tLoadingOutlined\r\n} from '@ant-design/icons';\r\n\r\n\r\n\r\n// import ReactQuill from 'react-quill';\r\n// import 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../../components/Field/Input';\r\nimport TextArea from '../../../components/Field/TextArea';\r\nimport MediaLibrary from \"../../../components/MediaLibrary\";\r\nimport MetaTags from \"./MetaTags\";\r\n\r\n\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n\t// name: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t\tmessage: message || 'Recipe Category Created',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n\tnotification.error({\r\n\t\tmessage: message || 'Something Went Wrong',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n};\r\n\r\n\r\n\r\n\r\n\r\nconst initialValues = {\r\n\tname: '',\r\n\tbnName: '',\r\n\tdescription: '',\r\n\tbnDescription: '',\r\n\tmetaTitle: '',\r\n\tbnMetaTitle: '',\r\n\tmetaDescription: '',\r\n\tbnMetaDescription: '',\r\n\tmetaTags: '',\r\n\tbnMetaTags: '',\r\n\timage: [],\r\n\turl: '',\r\n\tcover: '',\r\n\tdisplayOrder: null,\r\n}\r\n\r\nconst { Option } = Select;\r\n\r\ninterface Props {\r\n\taddNewCategoryVisible: any;\r\n\tsetAddNewCategoryVisible: any;\r\n\tcategoryList?: any;\r\n\tsetcategoryList?: any;\r\n}\r\n\r\nconst AddNewCategory = ({ addNewCategoryVisible, setAddNewCategoryVisible, categoryList, setcategoryList }: Props) => {\r\n\r\n\tconst [addCategoryState, handleAddCategoryFetch] = useHandleFetch({}, 'postAddCategory','form');\r\n\tconst [visible, setvisible] = useState(false);\r\n\tconst [myImages, setmyImages] = useState(false);\r\n\tconst [myThumbnailImage, setmyThumbnailImage] = useState(false);\r\n\tconst [isparentCategoryChecked, setisparentcategoryChecked] = useState(true);\r\n\tconst [isModalOpenForThumbnail, setisModalOpenForThumbnail] = useState(false);\r\n\tconst [isModalOpenForImages, setisModalOpenForImages] = useState(false);\r\n\tconst [coverImageId, setCoverImageId] = useState('');\r\n\tconst [selectedParentId, setselectedParentId] = useState('');\r\n\tconst [imageUrl, setImageUrl] = useState('');\r\n\tconst [loadingThumnail, setLoadingThumbnail] = useState(false);\r\n\tconst [imageFile, setImagefile] = useState('');\r\n\tconst [tags,setTags] = useState([]);\r\n\tconst [bnTags,setBnTags] = useState([]);\r\n\r\n\r\n\tconst handleSubmit = async (values: any, actions: any) => {\r\n\t\t// @ts-ignore\r\n\t\tconst imagesIds = myImages ? myImages.map(image => {\r\n\t\t\treturn image.id;\r\n\t\t}) : [];\r\n\r\n\t\tconst formData = new FormData();\r\n\r\n\t\tconst bn = {\r\n\t\t\tmetaTitle: values.bnMetaTitle,\r\n\t\t\tmetaDescription: values.bnMetaDescription,\r\n\t\t\tmetaTags: bnTags.join(','),\r\n\t\t\tname: values.bnName.trim(),\r\n\t\t\tdescription: values.bnDescription,\r\n\t\t}; \r\n\r\n\t\tformData.append(\"name\", values.name.trim());\r\n\t\tformData.append(\"description\", values.description);\r\n\t\tformData.append(\"image\", JSON.stringify(imagesIds));\r\n\t\tformData.append(\"cover\", coverImageId || imagesIds[0] ? imagesIds[0] : '');\r\n\t\tformData.append(\"parent\", selectedParentId);\r\n\t\t// formData.append('icon', imageFile)\r\n\t\tformData.append('metaTitle', values.metaTitle)\r\n\t\tformData.append('displayOrder', values.displayOrder)\r\n\t\tformData.append('metaDescription', values.metaDescription)\r\n\t\tformData.append('metaTags', values.metaTags)\r\n\r\n\r\n\r\n\t\tconst bnData = JSON.stringify(bn);\r\n\t\tconst bnFormData = new FormData();\r\n\t\tbnFormData.append(\"bn\",bnData);\r\n\r\n\r\n\r\n\t\tformData.append('bn', bnFormData.get('bn'))\r\n\r\n\r\n\r\n\r\n\t\tconsole.log('addcategoryREsBody',{\r\n\t\t\t...formData,\r\n\t\t\t// ...bnFormData\r\n\t\t}); \r\n\r\n\r\n\r\n\t\tconst addCategoryRes = await handleAddCategoryFetch({\r\n\t\t\tbody: formData,\r\n\t\t});\r\n\r\n\r\n\t\tconsole.log('adddPostCategoryREs',addCategoryRes)\r\n\t\t// @ts-ignore\r\n\t\tif (addCategoryRes && addCategoryRes[0] && addCategoryRes[0].name) {\r\n\t\t\topenSuccessNotification('Recipe Category Created!');\r\n\t\t\tsetAddNewCategoryVisible(false)\r\n\r\n\t\t\tsetcategoryList([{\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\t...addCategoryRes[0],\r\n\t\t\t\tid: addCategoryRes[0]['_id'] || '',\r\n\t\t\t\tkey: addCategoryRes[0]['_id'] || '',\r\n\t\t\t\tname: addCategoryRes[0]['name'] || '',\r\n\t\t\t\tdescription: addCategoryRes[0]['description'] || '',\r\n\t\t\t\tcover: addCategoryRes[0].cover\r\n\t\t\t\t? `${config['baseURL']}${\r\n\t\t\t\t\taddCategoryRes[0].cover ? addCategoryRes[0].cover.thumbnail : ''\r\n\t\t\t\t  }`\r\n\t\t\t\t: '',\r\n\t\t\t},...categoryList])\r\n\r\n\t\t\tactions.resetForm();\r\n\t\t\t// @ts-ignore\r\n\t\t\tsetmyImages([]);\r\n\t\t\tsetCoverImageId('')\r\n\t\t\tsetselectedParentId('')\r\n\t\t\tsetisparentcategoryChecked(true);\r\n\t\t\tsetImageUrl('');\r\n\t\t}\r\n\t\telse {\r\n\t\t\topenErrorNotification();\r\n\t\t}\r\n\r\n\r\n\r\n\r\n\t\tactions.setSubmitting(false);\r\n\t};\r\n\r\n\r\n\r\n\tconsole.log('addCategoryState',addCategoryState)\r\n\r\n\t\r\n\tuseEffect(() => {\r\n\t\tif (!addCategoryState['isLoading']) {\r\n\t\t\tconst error = addCategoryState['error'];\r\n\t\t\tif (error['isError'] && Object.keys(error['error']).length > 0) {\r\n\r\n\r\n\t\t\t\tconst errors =\r\n\t\t\t\t\tObject.values(error['error']).length > 0\r\n\t\t\t\t\t\t? Object.values(error['error'])\r\n\t\t\t\t\t\t: [];\r\n\t\t\t\terrors.forEach((err, i) => {\r\n\t\t\t\t\tif (typeof err === 'string') {\r\n\t\t\t\t\t\topenErrorNotification(err)\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if (typeof err === 'object') {\r\n\t\t\t\t\t\tif (err && Object.keys(err).length > 0) {\r\n\t\t\t\t\t\t\tconst errs = Object.values(err);\r\n\t\t\t\t\t\t\terrs.forEach(err => {\r\n\t\t\t\t\t\t\t\topenErrorNotification(err)\r\n\t\t\t\t\t\t\t})\r\n\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t}, [addCategoryState])\r\n\r\n\r\n\r\n\r\n\r\n\tconst onSwitchChange = (checked: any) => {\r\n\t\tsetisparentcategoryChecked(checked)\r\n\t};\r\n\r\n\r\n\tconst handleCancel = (e: any) => {\r\n\t\tsetAddNewCategoryVisible(false);\r\n\t};\r\n\r\n\r\n\tconst getisSubmitButtonDisabled = (values, isValid) => {\r\n\t\tif (!values.name || !isValid) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\r\n\tconst handleImagesDelete = (id) => {\r\n\t\t// @ts-ignore\r\n\t\tconst newImages = myImages && myImages.filter(image => {\r\n\t\t\treturn image.id !== id;\r\n\t\t})\r\n\r\n\t\tsetmyImages(newImages);\r\n\t}\r\n\r\n\r\n\tconst handleThumbnailImageDelete = (id) => {\r\n\t\t// @ts-ignore\r\n\t\tconst newImages = myThumbnailImage && myThumbnailImage.filter(image => {\r\n\t\t\treturn image.id !== id;\r\n\t\t})\r\n\r\n\t\tif (newImages.length > 0) {\r\n\t\t\tsetmyThumbnailImage(newImages);\r\n\r\n\t\t}\r\n\t\telse setmyThumbnailImage(false);\r\n\t}\r\n\r\n\r\n\tconst onChangeSelect = (value) => {\r\n\t\tsetselectedParentId(value);\r\n\t}\r\n\r\n\r\n\r\n\tfunction getBase64(img, callback) {\r\n\t\tconst reader = new FileReader();\r\n\t\treader.addEventListener('load', () => callback(reader.result));\r\n\t\treader.readAsDataURL(img);\r\n\t}\r\n\r\n\r\n\tfunction beforeUpload(file) {\r\n\t\tconst isJpgOrPng = file.type === 'image/jpeg' || file.type === 'image/png';\r\n\t\tif (!isJpgOrPng) {\r\n\t\t\tmessage.error('You can only upload JPG/PNG file!');\r\n\t\t}\r\n\t\tconst isLt2M = file.size / 1024 / 1024 < 2;\r\n\t\tif (!isLt2M) {\r\n\t\t\tmessage.error('Image must smaller than 2MB!');\r\n\t\t}\r\n\r\n\r\n\t\tgetBase64(file, imageUrl => {\r\n\t\t\tsetImageUrl(imageUrl)\r\n\t\t\tsetImagefile(file)\r\n\t\t\tsetLoadingThumbnail(false)\r\n\t\t})\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\r\n\tconst uploadButton = (\r\n\t\t<div>\r\n\t\t\t{loadingThumnail ? <LoadingOutlined /> : <PlusOutlined />}\r\n\t\t\t<div className=\"ant-upload-text\">Upload</div>\r\n\t\t</div>\r\n\t);\r\n\r\n\r\n\r\n\treturn (\r\n\t\t<Formik\r\n\t\t\tonSubmit={(values, actions) => handleSubmit(values, actions)}\r\n\t\t\tvalidationSchema={validationSchema}\r\n\t\t\tvalidateOnBlur={false}\r\n\t\t\tenableReinitialize={true}\r\n\t\t\tinitialValues={\r\n\t\t\t\t{ ...initialValues }\r\n\t\t\t}\r\n\t\t>\r\n\t\t\t{({\r\n\t\t\t\thandleChange,\r\n\t\t\t\tvalues,\r\n\t\t\t\thandleSubmit,\r\n\t\t\t\terrors,\r\n\t\t\t\tisValid,\r\n\t\t\t\tisSubmitting,\r\n\t\t\t\ttouched,\r\n\t\t\t\thandleBlur,\r\n\t\t\t\tsetFieldTouched,\r\n\t\t\t\thandleReset,\r\n\t\t\t}) => (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<Modal\r\n\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\ttop: '40px'\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\ttitle=\"Add New Category\"\r\n\t\t\t\t\t\t\tvisible={addNewCategoryVisible}\r\n\t\t\t\t\t\t\tonOk={(e: any) => handleSubmit(e)}\r\n\t\t\t\t\t\t\tonCancel={handleCancel}\r\n\t\t\t\t\t\t\tokText='Create'\r\n\t\t\t\t\t\t\tokButtonProps={{\r\n\t\t\t\t\t\t\t\tloading: isSubmitting,\r\n\t\t\t\t\t\t\t\thtmlType: \"submit\",\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\tlabel='Name'\r\n\t\t\t\t\t\t\t\tvalue={values.name}\r\n\t\t\t\t\t\t\t\tplaceHolder={'grocery,fashion'}\r\n\t\t\t\t\t\t\t\tname='name'\r\n\t\t\t\t\t\t\t\tisError={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['name'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['name'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('name');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\tlabel='BN Name'\r\n\t\t\t\t\t\t\t\tvalue={values.bnName}\r\n\t\t\t\t\t\t\t\tplaceHolder={'মুদিখানা,ফ্যাশন'}\r\n\t\t\t\t\t\t\t\tname='bnName'\r\n\t\t\t\t\t\t\t\tisError={(touched.bnName && errors.bnName) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['bnName'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.bnName && errors.bnName) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['bnName'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('bnName');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\tlabel='Description'\r\n\t\t\t\t\t\t\t\tvalue={values.description}\r\n\t\t\t\t\t\t\t\tplaceholder={'This category...'}\r\n\t\t\t\t\t\t\t\tname='description'\r\n\t\t\t\t\t\t\t\tisError={(touched.description && errors.description) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['description'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.description && errors.description) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['description'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('description');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\tlabel='BN Description'\r\n\t\t\t\t\t\t\t\tvalue={values.bnDescription}\r\n\t\t\t\t\t\t\t\tplaceholder={'এই ক্যাটাগড়ি...'}\r\n\t\t\t\t\t\t\t\tname='bnDescription'\r\n\t\t\t\t\t\t\t\tisError={(touched.bnDescription && errors.bnDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['bnDescription'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.bnDescription && errors.bnDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['bnDescription'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('bnDescription');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n{/* \r\n<Input\r\n\t\t\t\t\t\t\t\t\t\tlabel='Display Order'\r\n\t\t\t\t\t\t\t\t\t\tvalue={values.displayOrder}\r\n\t\t\t\t\t\t\t\t\t\tplaceHolder={'1,3,7'}\r\n\t\t\t\t\t\t\t\t\t\tname='displayOrder'\r\n\t\t\t\t\t\t\t\t\t\ttype='number'\r\n\t\t\t\t\t\t\t\t\t\tisError={(touched.displayOrder && errors.displayOrder) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['displayOrder'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\terrorString={(touched.displayOrder && errors.displayOrder) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['displayOrder'])}\r\n\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('displayOrder');\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t */}\r\n\r\n\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\tmarginTop: '20px'\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\r\n\t\t\t\t\t\t\t{/* <div className='addproductSection-left-header' >\r\n\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>Icon </h3>\r\n\t\t\t\t\t\t\t\t<Tooltip\r\n\t\t\t\t\t\t\t\t\tplacement=\"left\" title={'Add Icon image for this category'}>\r\n\t\t\t\t\t\t\t\t\t<a href='###'>\r\n\t\t\t\t\t\t\t\t\t\t<InfoCircleOutlined />\r\n\t\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t<Upload\r\n\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\tborderRadius: \"8px\"\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\tname=\"avatar\"\r\n\t\t\t\t\t\t\t\tlistType=\"picture-card\"\r\n\t\t\t\t\t\t\t\tclassName=\"avatar-uploader\"\r\n\t\t\t\t\t\t\t\tshowUploadList={false}\r\n\t\t\t\t\t\t\t\tbeforeUpload={beforeUpload}\r\n\t\t\t\t\t\t\t\tmultiple={false}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t{imageUrl ? <img src={imageUrl} alt=\"avatar\" style={{ width: '100%' }} /> : uploadButton}\r\n\t\t\t\t\t\t\t</Upload> */}\r\n\r\n\r\n\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\tmarginTop: '10px'\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\r\n\t\t\t\t\t\t\t<div className='addproductSection-left-header' style={{\r\n\t\t\t\t\t\t\t\tmarginBottom: '-5px'\r\n\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>Images</h3>\r\n\t\t\t\t\t\t\t\t<Tooltip\r\n\t\t\t\t\t\t\t\t\tplacement=\"left\" title={'Click on the image to select cover image, By default 1st image is selected as cover'}>\r\n\t\t\t\t\t\t\t\t\t<a href='###'>\r\n\t\t\t\t\t\t\t\t\t\t<InfoCircleOutlined />\r\n\t\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className='aboutToUploadImagesContainer'>\r\n\t\t\t\t\t\t\t\t{myImages &&\r\n\t\t\t\t\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\t\t\t\t\tmyImages.length > 0 && myImages.map((image, index) => {\r\n\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='aboutToUploadImagesContainer__item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='aboutToUploadImagesContainer__item-imgContainer'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => setCoverImageId(image.id)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<img src={image.cover} alt={image.alt} />\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => handleImagesDelete(image.id)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='aboutToUploadImagesContainer__item-remove'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<CloseOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t{coverImageId === image.id ? (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<span className='aboutToUploadImagesContainer__item-cover'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<CheckOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t) : !coverImageId && index === 0 && (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<span className='aboutToUploadImagesContainer__item-cover'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<CheckOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t})}\r\n\r\n\r\n\t\t\t\t\t\t\t\t<Tooltip\r\n\t\t\t\t\t\t\t\t\ttitle={'Attach images'}>\r\n\r\n\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\t\t\tsetvisible(true);\r\n\t\t\t\t\t\t\t\t\t\t\tsetisModalOpenForImages(true);\r\n\t\t\t\t\t\t\t\t\t\t\tsetisModalOpenForThumbnail(false);\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\tclassName='aboutToUploadImagesContainer__uploadItem'>\r\n\t\t\t\t\t\t\t\t\t\t{/* <FileAddOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FileImageTwoTone />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FileImageOutlined /> */}\r\n\t\t\t\t\t\t\t\t\t\t<FileImageFilled />\r\n\t\t\t\t\t\t\t\t\t\t{/* <h5>\r\n\t\t\t\t\t\t\t\t\t\t\t\t     Select From Library\r\n\t\t\t\t\t\t\t\t\t\t\t<     /h5> */}\r\n\t\t\t\t\t\t\t\t\t\t<span className='aboutToUploadImagesContainer__uploadItem-plus'>\r\n\t\t\t\t\t\t\t\t\t\t\t<PlusOutlined />\r\n\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\tlabel='Meta title'\r\n\t\t\t\t\t\t\t\tvalue={values.metaTitle}\r\n\t\t\t\t\t\t\t\tplaceHolder={'category...'}\r\n\t\t\t\t\t\t\t\tname='metaTitle'\r\n\t\t\t\t\t\t\t\tisError={(touched.metaTitle && errors.metaTitle) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['metaTitle'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.metaTitle && errors.metaTitle) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['metaTitle'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('metaTitle')\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\tlabel='BN Meta title'\r\n\t\t\t\t\t\t\t\tvalue={values.bnMetaTitle}\r\n\t\t\t\t\t\t\t\tplaceHolder={'ক্যাটাগড়ি...'}\r\n\t\t\t\t\t\t\t\tname='bnMetaTitle'\r\n\t\t\t\t\t\t\t\tisError={(touched.bnMetaTitle && errors.bnMetaTitle) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['bnMetaTitle'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.bnMetaTitle && errors.bnMetaTitle) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['bnMetaTitle'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('bnMetaTitle');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\tlabel='Meta description'\r\n\t\t\t\t\t\t\t\tvalue={values.metaDescription}\r\n\t\t\t\t\t\t\t\tplaceholder={'meta...'}\r\n\t\t\t\t\t\t\t\tname='metaDescription'\r\n\t\t\t\t\t\t\t\tisError={(touched.metaDescription && errors.metaDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['metaDescription'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.metaDescription && errors.metaDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['metaDescription'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('metaDescription');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\tlabel='BN Meta Description'\r\n\t\t\t\t\t\t\t\tvalue={values.bnMetaDescription}\r\n\t\t\t\t\t\t\t\tplaceholder={'এইয় মেট...'}\r\n\t\t\t\t\t\t\t\tname='bnMetaDescription'\r\n\t\t\t\t\t\t\t\tisError={(touched.bnMetaDescription && errors.bnMetaDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['bnMetaDescription'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.bnMetaDescription && errors.bnMetaDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['bnMetaDescription'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('bnMetaDescription');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\tMeta Tags (grocery,fashion)\r\n\t\t\t\t\t\t\t</h3>\r\n\r\n\t\t\t\t\t\t\t<MetaTags\r\n\t\t\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\t\t\tsetTags={setTags}\r\n\t\t\t\t\t\t\ttags={tags}\r\n\t\t\t\t\t\t\t />\r\n\r\n\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\tmarginTop:'15px'\r\n\t\t\t\t\t\t\t}}></div>\r\n\r\n\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\tBN Meta Tags (মুদিখানা,ফ্যাশন)\r\n\t\t\t\t\t\t\t</h3>\r\n\r\n\t\t\t\t\t\t\t<MetaTags\r\n\t\t\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\t\t\tsetTags={setBnTags}\r\n\t\t\t\t\t\t\ttags={bnTags}\r\n\t\t\t\t\t\t\t />\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t</Modal>\r\n\r\n\t\t\t\t\t\t<MediaLibrary\r\n\t\t\t\t\t\t\tsetvisible={setvisible}\r\n\t\t\t\t\t\t\tvisible={visible}\r\n\t\t\t\t\t\t\tsetmyImages={setmyImages}\r\n\t\t\t\t\t\t\tmyImages={myImages}\r\n\t\t\t\t\t\t\tsetmyThumbnailImage={setmyThumbnailImage}\r\n\t\t\t\t\t\t\tisModalOpenForThumbnail={isModalOpenForThumbnail}\r\n\t\t\t\t\t\t\tisModalOpenForImages={isModalOpenForImages}\r\n\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</>\r\n\t\t\t\t)}\r\n\t\t</Formik>\r\n\r\n\r\n\r\n\r\n\t);\r\n};\r\n\r\nexport default AddNewCategory;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport {\r\n  Table,\r\n  notification,\r\n  Space,\r\n  Tag,\r\n  Button,\r\n  Input,\r\n  Tooltip,\r\n  Popconfirm,\r\n} from 'antd';\r\nimport {\r\n  PlusOutlined,\r\n  EditOutlined,\r\n  DeleteOutlined,\r\n  CheckCircleOutlined,\r\n} from '@ant-design/icons';\r\n\r\nimport QuickEdit from './QuickEdit';\r\nimport AddNewPostCategory from './AddNewPostCategory';\r\n\r\n/// import hooks\r\nimport { useFetch, useHandleFetch } from '../../../hooks';\r\n\r\n// import components\r\nimport { DataTableSkeleton } from '../../../components/Placeholders';\r\nimport Empty from '../../../components/Empty';\r\n\r\nconst { Column, ColumnGroup } = Table;\r\nconst { Search } = Input;\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n  notification.success({\r\n    message: message || 'Post Recipe Created',\r\n    description: '',\r\n    icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n  });\r\n};\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n  notification.success({\r\n    message: message || 'Something Went Wrong',\r\n    description: '',\r\n    icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n  });\r\n};\r\n\r\ninterface myTableProps {\r\n  data: any;\r\n  setcategoryList?: any;\r\n  history?: any;\r\n}\r\n\r\nconst MyTable = ({ data, setcategoryList, history }: myTableProps) => {\r\n  const [visible, setvisible] = useState(false);\r\n  const [activeCategoryForEdit, setactiveCategoryForEdit] = useState(false);\r\n  const [deleteCategoryState, handleDeleteCategoryFetch] = useHandleFetch(\r\n    {},\r\n    'postCategoryDelete'\r\n  );\r\n  // console.log('activeCategoryForEdit',activeCategoryForEdit);\r\n\r\n  const handleDeleteCategory = async (id) => {\r\n    const deleteCategoryRes = await handleDeleteCategoryFetch({\r\n      urlOptions: {\r\n        placeHolders: {\r\n          id,\r\n        },\r\n      },\r\n    });\r\n\r\n    // @ts-ignore\r\n    if (deleteCategoryRes && deleteCategoryRes.status === 'ok') {\r\n      openSuccessNotification('Deleted Recipe Category');\r\n      const newCategoryList = data.filter((item) => item.id !== id);\r\n      setcategoryList(newCategoryList);\r\n    }\r\n  };\r\n\r\n  const getCover = (record: any) => {\r\n    if (record.cover) {\r\n      return record.cover;\r\n    } else return '';\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Table\r\n        // expandable={{\r\n        //     expandedRowRender: record => <p style={{ margin: 0 }}>{record.name}</p>,\r\n        //     rowExpandable: record => record.name !== 'Not Expandable',\r\n        //   }}\r\n        // bordered={true}\r\n        size='small'\r\n        // pagination={false}\r\n        dataSource={data}\r\n      >\r\n        <Column\r\n          title=''\r\n          dataIndex='cover'\r\n          key='id'\r\n          width={'80px'}\r\n          className='classnameofthecolumn'\r\n          render={(cover, record: any) => (\r\n            <>\r\n              <div\r\n                className='listCoverImage'\r\n                onClick={() => {\r\n                  history.push(`/admin/posts/category/${record.id}`);\r\n                  setactiveCategoryForEdit(record);\r\n                }}\r\n              >\r\n                <img src={getCover(record)} alt='' />\r\n              </div>\r\n            </>\r\n          )}\r\n        />\r\n        <Column\r\n          title='Name'\r\n          dataIndex='name'\r\n          key='id'\r\n          className='classnameofthecolumn'\r\n          render={(text, record: any) => (\r\n            <>\r\n              <h4\r\n                onClick={() => {\r\n                  history.push(`/admin/posts/category/${record.id}`);\r\n                  // setcategoryDetailVisible(true);\r\n                  setactiveCategoryForEdit(record);\r\n                }}\r\n                style={{\r\n                  fontWeight: 400,\r\n                  color: '#555',\r\n                  cursor: 'pointer',\r\n                }}\r\n              >\r\n                {text}\r\n              </h4>\r\n            </>\r\n          )}\r\n        />\r\n\r\n        {/* <Column\r\n           title=\"Description\" \r\n           dataIndex=\"description\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n         \r\n            /> */}\r\n\r\n        {/* <Column\r\n           title=\"Sub Cateogory\" \r\n           dataIndex=\"subCount\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n         \r\n            /> */}\r\n\r\n        <Column\r\n          title='Recipes'\r\n          dataIndex='productCount'\r\n          key='id'\r\n          className='classnameofthecolumn'\r\n        />\r\n\r\n        {/* <Column \r\n          \r\n          className='classnameofthecolumn'\r\n\r\n          title=\"Product\" dataIndex=\"product\" key=\"product\" /> */}\r\n\r\n        {/* <Column \r\n          \r\n          className='classnameofthecolumn'\r\n\r\n          title=\"Sub Category\" dataIndex=\"subCategory\" key=\"subCategory\" /> */}\r\n\r\n        {/* <Column\r\n          title=\"Tags\"\r\n          dataIndex=\"tags\"\r\n          key=\"tags\"\r\n          render={tags => (\r\n            <>\r\n              {tags.map((tag : any) => (\r\n                <Tag color=\"blue\" key={tag}>\r\n                  {tag}\r\n                </Tag>\r\n              ))}\r\n            </>\r\n          )}\r\n        /> */}\r\n        <Column\r\n          className='classnameofthecolumn'\r\n          title=''\r\n          key='action'\r\n          align='right'\r\n          render={(text, record: any) => (\r\n            <Space size='middle'>\r\n              <a href='##'>\r\n                <Tooltip placement='top' title='Edit Category'>\r\n                  <span\r\n                    className='iconSize'\r\n                    onClick={() => {\r\n                      setvisible(true);\r\n                      setactiveCategoryForEdit(record);\r\n                    }}\r\n                  >\r\n                    <EditOutlined />\r\n                  </span>\r\n                </Tooltip>\r\n              </a>\r\n\r\n              <Popconfirm\r\n                onConfirm={() => handleDeleteCategory(record.id)}\r\n                title='Are you sure？'\r\n                okText='Yes'\r\n                cancelText='No'\r\n              >\r\n                <span className='iconSize iconSize-danger'>\r\n                  <DeleteOutlined />\r\n                </span>\r\n              </Popconfirm>\r\n            </Space>\r\n          )}\r\n        />\r\n      </Table>\r\n\r\n      {activeCategoryForEdit && (\r\n        <QuickEdit\r\n          setcategoryList={setcategoryList}\r\n          categoryList={data}\r\n          setAddNewCategoryVisible={setvisible}\r\n          addNewCategoryVisible={visible}\r\n          categoryDetailData={activeCategoryForEdit}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\ninterface Props {\r\n  history: any;\r\n}\r\n\r\nconst CategoryList = ({ history }: Props) => {\r\n  const [categoryState, handleCategoryListFetch] = useHandleFetch(\r\n    {},\r\n    'postCategoryList'\r\n  );\r\n  const [categoryList, setcategoryList] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const setCategories = async () => {\r\n      const categories = await handleCategoryListFetch({\r\n        urlOptions: {\r\n          params: {\r\n            isSubCategory: true,\r\n            productCountValue: true,\r\n          },\r\n        },\r\n      });\r\n      // @ts-ignore\r\n      setcategoryList(categories);\r\n    };\r\n    setCategories();\r\n  }, []);\r\n\r\n  const [addNewCategoryVisible, setAddNewCategoryVisible] = useState(false);\r\n\r\n  const handleOkAddNewCategory = (e: any) => {\r\n    setAddNewCategoryVisible(false);\r\n  };\r\n\r\n  const handleCancelAddNewCategory = (e: any) => {\r\n    setAddNewCategoryVisible(false);\r\n  };\r\n\r\n  // console.log('categoryState',categoryState);\r\n\r\n  const handleSearch = (value) => {\r\n    if (categoryState.data.length > 0) {\r\n      const newCategoryList = categoryState.data.filter((item) =>\r\n        item.name.toLowerCase().includes(value.toLowerCase())\r\n      );\r\n      setcategoryList(newCategoryList);\r\n    }\r\n  };\r\n\r\n  console.log('postCategoryList', categoryState);\r\n\r\n  return (\r\n    <>\r\n      {/* <h2 className='containerPageTitle'>\r\n      Categories\r\n    </h2> */}\r\n      <div className='categoryListContainer'>\r\n        <div className='categoryListContainer__header'>\r\n          <div className='categoryListContainer__header-searchBar'>\r\n            <h2 className='categoryListContainer__header-title'>\r\n              Recipe Categories\r\n            </h2>\r\n\r\n            <Search\r\n              enterButton={false}\r\n              className='searchbarClassName'\r\n              placeholder='search recipe categories..'\r\n              onChange={(e) => handleSearch(e.target.value)}\r\n            />\r\n          </div>\r\n          <Button\r\n            // type=\"primary\"\r\n            className='btnPrimaryClassNameoutline'\r\n            icon={<PlusOutlined />}\r\n            onClick={() => setAddNewCategoryVisible(true)}\r\n          >\r\n            Add New\r\n          </Button>\r\n        </div>\r\n\r\n        <div className='categoryListContainer__afterHeader'>\r\n          {/* <Search\r\n                placeholder=\"search categories..\"\r\n                size=\"large\"\r\n                onSearch={value => console.log(value)}\r\n                style={{ width: 300 }}\r\n           /> */}\r\n        </div>\r\n\r\n        <div className='categoryListContainer__categoryList'>\r\n          {categoryState.done && categoryList.length > 0 && (\r\n            <MyTable\r\n              history={history}\r\n              setcategoryList={setcategoryList}\r\n              data={categoryList}\r\n            />\r\n          )}\r\n          {categoryState.isLoading && <DataTableSkeleton />}\r\n\r\n          {categoryState.done && !(categoryList.length > 0) && (\r\n            <div\r\n              style={{\r\n                marginTop: '50px',\r\n              }}\r\n            >\r\n              <Empty title='No Recipe Category found' />\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      {categoryState.done && (\r\n        <AddNewPostCategory\r\n          addNewCategoryVisible={addNewCategoryVisible}\r\n          setAddNewCategoryVisible={setAddNewCategoryVisible}\r\n          categoryList={categoryList}\r\n          setcategoryList={setcategoryList}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default withRouter(CategoryList);\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n\r\nimport { useHandleFetch } from '../../../hooks';\r\n// import third party ui lib\r\nimport { Select, notification, Modal, Tooltip, Upload, message, Spin } from 'antd';\r\n\r\nimport {\r\n  FileImageFilled,\r\n  PlusOutlined,\r\n  CheckCircleOutlined,\r\n  CloseOutlined,\r\n  CheckOutlined,\r\n  LoadingOutlined,\r\n  InfoCircleOutlined,\r\n} from '@ant-design/icons';\r\n\r\n\r\n\r\n// import ReactQuill from 'react-quill';\r\n// import 'react-quill/dist/quill.snow.css';\r\n\r\n\r\n// import components\r\nimport Input from '../../../components/Field/Input';\r\nimport TextArea from '../../../components/Field/TextArea';\r\nimport MediaLibrary from \"../../../components/MediaLibrary\";\r\nimport MetaTags from \"./MetaTags\";\r\n\r\n\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n\t// name: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t\tmessage: message || 'Category Updated',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n\tnotification.error({\r\n    message: message || 'Something Went Wrong',\r\n    description: '',\r\n    icon: <InfoCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n  });\r\n};\r\n\r\n\r\n\r\n\r\n\r\nconst initialValues = {\r\n\tname: '',\r\n\tbnName: '',\r\n\tdescription: '',\r\n\tbnDescription: '',\r\n\tmetaTitle: '',\r\n\tbnMetaTitle: '',\r\n\tmetaDescription: '',\r\n\tbnMetaDescription: '',\r\n\tmetaTags: '',\r\n\tbnMetaTags: '',\r\n\timage: [],\r\n\turl: '',\r\n\tcover: '',\r\n\tdisplayOrder: '',\r\n}\r\n\r\nconst { Option } = Select;\r\n\r\ninterface Props {\r\n\taddNewCategoryVisible: any;\r\n\tsetAddNewCategoryVisible: any;\r\n\tsetcategoryDetailData?:any; \r\n    categoryDetailData?:any; \r\n}\r\n\r\nconst AddNewCategory = ({ \r\n    addNewCategoryVisible, \r\n    setAddNewCategoryVisible, \r\n    categoryDetailData, setcategoryDetailData}: Props) => {\r\n\r\n\tconst [addCategoryState, handleAddCategoryFetch] = useHandleFetch({}, 'postCategoryUpdate');\r\n\tconst [updateCategoryIconState, handleUpdateCategoryIconFetch] = useHandleFetch({}, 'categoryUpdateIcon');\r\n\tconst [attachImageToItemMultipleState, handleAttachImageToItemMultipleFetch] = useHandleFetch({}, 'attachImageToItemMultiple');\r\n    const [attachImageToItemSingleState, handleAttachImageToItemSingleFetch] = useHandleFetch({}, 'attachImageToItemSingle');\r\n    const [detachImageFromItemMultipleState, handleDetachImageFromItemMultipleFetch] = useHandleFetch({}, 'detachImageFromItemMultiple');\r\n    const [detachImageFromItemSingleState, handleDetachImageFromItemSingleFetch] = useHandleFetch({}, 'detachImageFromItemSingle');\r\n    const [setImageAsThumbnailToItemState, handleSetImageAsThumbnailToItemFetch] = useHandleFetch({}, 'setImageAsThumbnailToItem');\r\n\r\n\tconst [visible, setvisible] = useState(false);\r\n\tconst [myThumbnailImage, setmyThumbnailImage] = useState(false);\r\n\tconst [isparentCategoryChecked, setisparentcategoryChecked] = useState(true);\r\n\tconst [isModalOpenForThumbnail, setisModalOpenForThumbnail] = useState(false);\r\n\tconst [isModalOpenForImages, setisModalOpenForImages] = useState(false);\r\n\tconst [selectedParentId, setselectedParentId] = useState('');\r\n\tconst [imageUrl, setImageUrl] = useState('');\r\n\tconst [loadingThumnail, setLoadingThumbnail] = useState(false);\r\n\tconst [imageFile, setImagefile] = useState('');\r\n\tconst [tags,setTags] = useState([]);\r\n\tconst [bnTags,setBnTags] = useState([]);\r\n\tconst [myImages, setmyImages] = useState(false);\r\n    const [coverImageId, setCoverImageId] = useState('');\r\n\tconst [myGoddamnImages, setMyGoddamnImages] = useState([]);\r\n\t\r\n    const [categoryDetailState, handleCategoryDetailFetch] = useHandleFetch({}, 'postCategoryDetail');\r\n\r\n\r\n\tuseEffect(() => {\r\n\r\n        const getCategoryDetail = async () => {\r\n            const categoryDetailDataRes =  await handleCategoryDetailFetch({\r\n                urlOptions: {\r\n                    placeHolders: {\r\n                        id: categoryDetailData.id\r\n                    }\r\n                }\r\n            }); \r\n        };\r\n\r\n        getCategoryDetail();\r\n\r\n    }, [categoryDetailData]);\r\n\r\n\r\n\tconsole.log('MahPostCategory',categoryDetailState)\r\n\tconsole.log('MahPostCategorymyImages',myImages)\r\n\r\n\tuseEffect(() => {\r\n\t\tif (categoryDetailState.done && categoryDetailState.data && Object.keys(categoryDetailState.data).length > 0) {\r\n\t\r\n\t\t\tconst images = categoryDetailState.data.image;\r\n\t\t\tlet mahImages = []; \r\n\r\n\t\t\tif (images && images.length > 0) {\r\n\t\t\t\tmahImages = images;\r\n\t\t\t}\r\n\t\r\n\t\t\tif (categoryDetailState.data.cover && categoryDetailState.data.cover['id']) {\r\n\t\t\t\tconst ixists = images.find(item => item.id === categoryDetailState.data.cover['id']);\r\n\t\t\t\tif(!ixists){\r\n\t\t\t\t\tmahImages = [categoryDetailState.data.cover, ...mahImages]\r\n\t\t\t\t}\r\n\r\n\t\t\t\tsetCoverImageId(categoryDetailState.data.cover['id']);\r\n\t\t\t}\r\n\t\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\tsetmyImages(mahImages);\r\n\t\t\t\t\r\n\t\t}\r\n\t}, [categoryDetailState.data]); \r\n\t\r\n\t\r\n\tuseEffect(() => {\r\n\t\t// @ts-ignore\r\n\t\tif (myImages && myImages[0] && myImages.length < 2) {\r\n\t\r\n\t\t\tif (coverImageId !== myImages[0].id) {\r\n\t\t\t\tsetCoverImageId(myImages[0].id);\r\n\t\t\t\thandleSetImageAsThumnail(myImages[0]);\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t}, [myImages])\r\n\t\r\n\r\n\r\n\r\n\r\n\tconst handleSubmit = async (values: any, actions: any) => {\r\n\t\t// @ts-ignore\r\n\t\tconst imagesIds = myImages ? myImages.map(image => {\r\n\t\t\treturn image.id;\r\n\t\t}) : [];\r\n\r\n\t\tconst formData = new FormData();\r\n\r\n\t\tformData.append(\"name\", values.name.trim());\r\n\t\tformData.append(\"description\", values.description);\r\n\t\tformData.append(\"image\", JSON.stringify(imagesIds));\r\n\t\tformData.append(\"cover\", coverImageId || imagesIds[0] ? imagesIds[0] : '');\r\n\t\tformData.append(\"parent\", selectedParentId);\r\n\t\tformData.append('displayOrder', values.displayOrder)\r\n\r\n\r\n\t\tconsole.log('categoryDetailData',categoryDetailData); \r\n\t\tconsole.log('imagesIds',imagesIds); \r\n\t\t\r\n\t\t\r\n\t\tif (categoryDetailData && Object.keys(categoryDetailData).length > 0) {\r\n\t\t\tconst aboutToUpdatedImageIds = []; \r\n\r\n\t\t\tif(imagesIds && imagesIds.length > 0){\r\n\t\t\t\timagesIds.forEach(imageId => {\r\n\t\t\t\t\tif(categoryDetailData && categoryDetailData['postCategory']){\r\n\t\t\t\t\t\tif(!categoryDetailData['image'].includes(imageId)){\r\n\t\t\t\t\t\t\taboutToUpdatedImageIds.push(imageId)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n      \r\n            if (aboutToUpdatedImageIds[0] && aboutToUpdatedImageIds.length > 1) {\r\n                await handleAttachImageToItemMultipleFetch({\r\n                    urlOptions: {\r\n                        placeHolders: {\r\n                            collection: 'postCategory',\r\n                            itemId: categoryDetailData.id\r\n                        }\r\n                    },\r\n                    body: {\r\n                        image: aboutToUpdatedImageIds\r\n                    }\r\n                });\r\n            }\r\n            else if (aboutToUpdatedImageIds[0] && aboutToUpdatedImageIds.length < 1) {\r\n                await handleAttachImageToItemSingleFetch({\r\n                    urlOptions: {\r\n                        placeHolders: {\r\n                            imageId: aboutToUpdatedImageIds[0].id,\r\n                            collection: 'postCategory',\r\n                            itemId: categoryDetailData.id\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n\t\t}\r\n\t\t\r\n\r\n\r\n\t\tconst addCategoryRes = await handleAddCategoryFetch({\r\n            urlOptions: {\r\n                placeHolders: {\r\n                    id: categoryDetailData.id\r\n                },\r\n            },\r\n            body: {\r\n                name: values.name && values.name.trim(),\r\n                description: values.description,\r\n                image: imagesIds,\r\n                cover: coverImageId || imagesIds[0] ? imagesIds[0] : '',\r\n                parent: selectedParentId,\r\n                icon: imageFile,\r\n                metaTitle: values.metaTitle,\r\n\t\t\t\tmetaDescription: values.metaDescription,\r\n\t\t\t\tdisplayOrder: values.displayOrder,\r\n                metaTags:  tags && tags.length > 0 ?  tags.join(',') : '',\r\n                bn: {\r\n                    metaTitle: values.bnMetaTitle,\r\n                    metaDescription: values.bnMetaDescription,\r\n\t\t\t\t\tmetaTags:  bnTags && bnTags.length > 0 ?  bnTags.join(',') : '',\r\n                    name: values.bnName && values.bnName.trim(),\r\n                    description: values.bnDescription,\r\n                }\r\n            },\r\n\t\t});\r\n\r\n\t\t// @ts-ignore\r\n\t\tif (addCategoryRes && addCategoryRes.status === 'ok') {\r\n\t\t\topenSuccessNotification('Category Updated!');\r\n\t\t\tsetAddNewCategoryVisible(false)\r\n\r\n\t\t\tsetcategoryDetailData({\r\n\t\t\t\t...categoryDetailData,\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\t...addCategoryRes,\r\n\t\t\t});\r\n\t  \r\n\t\t\tactions.resetForm();\r\n\t\t\t// @ts-ignore\r\n\t\t\r\n\t\t}\r\n\t\telse {\r\n\t\t\topenErrorNotification();\r\n\t\t}\r\n\r\n\t\tactions.setSubmitting(false);\r\n\t};\r\n\r\n\r\n\r\n    const handleDetachSingleImage = async id => {\r\n        await handleDetachImageFromItemSingleFetch({\r\n            urlOptions: {\r\n                placeHolders: {\r\n                    imageId: id,\r\n                    collection: 'postCategory',\r\n                    itemId: categoryDetailData.id\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n\r\n\r\n    const handleSetImageAsThumnail = async image => {\r\n\r\n        const thumbnailRes = await handleSetImageAsThumbnailToItemFetch({\r\n            urlOptions: {\r\n                placeHolders: {\r\n                    imageId: image.id,\r\n                    collection: 'postCategory',\r\n                    itemId: categoryDetailData.id\r\n                }\r\n            }\r\n        });\r\n\r\n\r\n        // @ts-ignore\r\n        if (thumbnailRes && thumbnailRes.status === 'ok') {\r\n            openSuccessNotification('Set as thumbnail!')\r\n            // const positionInBrand = () => {\r\n            //     return brandList.map(item => item.id).indexOf(categoryDetailData.id);\r\n            // }\r\n\r\n            // const index = positionInBrand();\r\n\r\n            // const prevItem = brandList.find(item => item.id === productRecord.id);\r\n\r\n            // if (prevItem) {\r\n            //     const updatedItem = Object.assign({}, brandList[index], { ...prevItem, cover: image.cover });\r\n            //     const updateBrandList = [...brandList.slice(0, index), updatedItem, ...brandList.slice(index + 1)];\r\n            //     setBrandList(updateBrandList);\r\n            // }\r\n        }\r\n        else {\r\n            openErrorNotification(\"Couldn't set as thumbnail, Something went wrong\")\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n    \r\n    const handleImagesDelete = (id) => {\r\n        // @ts-ignore\r\n        const newImages = myImages && myImages.filter(image => {\r\n            return image.id !== id;\r\n        })\r\n\r\n        setmyImages(newImages);\r\n    }\r\n\r\n\r\n\r\n\tconst handleCancel = (e: any) => {\r\n\t\tsetAddNewCategoryVisible(false);\r\n\t};\r\n\r\n\r\n\r\n\r\n\r\n\r\n\tfunction getBase64(img, callback) {\r\n\t\tconst reader = new FileReader();\r\n\t\treader.addEventListener('load', () => callback(reader.result));\r\n\t\treader.readAsDataURL(img);\r\n\t}\r\n\r\n\r\n\tfunction beforeUpload(file) {\r\n\t\tconst isJpgOrPng = file.type === 'image/jpeg' || file.type === 'image/png';\r\n\t\tif (!isJpgOrPng) {\r\n\t\t\tmessage.error('You can only upload JPG/PNG file!');\r\n\t\t}\r\n\t\tconst isLt2M = file.size / 1024 / 1024 < 2;\r\n\t\tif (!isLt2M) {\r\n\t\t\tmessage.error('Image must smaller than 2MB!');\r\n\t\t}\r\n\r\n\r\n\t\tgetBase64(file, imageUrl => {\r\n\t\t\tsetImageUrl(imageUrl)\r\n\t\t\tsetImagefile(file)\r\n\t\t\tconst setNewIcon  = async () => {\r\n\t\t\t\tconst formData = new FormData();\r\n\t\t\t\tformData.append('icon',file); \r\n\t\t\t\t// const addCategoryRes = await handleAddCategoryFetch({\r\n\t\t\t\t// \tbody: formData,\r\n\t\t\t\t// });\r\n\t\t\t\tconst res = await handleUpdateCategoryIconFetch({\r\n\t\t\t\t\turlOptions: {\r\n\t\t\t\t\t\tplaceHolders: {\r\n\t\t\t\t\t\t\tid: categoryDetailData.id\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t},\r\n\t\t\t\t\tbody: formData\r\n\t\t\t\t}); \r\n\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\tif(res && res.status === 'ok'){\r\n\t\t\t\t\topenSuccessNotification('Category Icon updated!')\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\topenErrorNotification(\"Couldn't update category icon, Something went wrong\")\r\n\t\t\t\t}\r\n\r\n\t\t\t\t\r\n\t\t\t}; \r\n\t\t\t\r\n\t\t\tsetNewIcon();\r\n\t\t\tsetLoadingThumbnail(false)\r\n\t\t})\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\r\n\r\n\tconst uploadButton = (\r\n\t\t<div>\r\n\t\t\t{loadingThumnail ? <LoadingOutlined /> : <PlusOutlined />}\r\n\t\t\t<div className=\"ant-upload-text\">Upload</div>\r\n\t\t</div>\r\n\t);\r\n\r\n\r\n\r\n\tuseEffect(()=>{\r\n\r\n        if(categoryDetailData && Object.keys(categoryDetailData).length > 0){\r\n            const iconUrl = categoryDetailData.icon && categoryDetailData.icon; \r\n\r\n\t\t\tsetImageUrl(iconUrl); \r\n        }\r\n\r\n    },[])\r\n    \r\n    useEffect(()=>{\r\n\r\n        if(categoryDetailData && Object.keys(categoryDetailData).length > 0){\r\n            const metaTags = categoryDetailData.metaTags && categoryDetailData.metaTags.split(','); \r\n\r\n            console.log('localMetaTags',metaTags);\r\n           \r\n            const bnMetaTags = categoryDetailData.bn && categoryDetailData.bn['metaTags'] && categoryDetailData.bn['metaTags'].split(','); \r\n            setTags(metaTags || [])\r\n            setBnTags(bnMetaTags || [])\r\n        }\r\n\r\n    },[])\r\n\r\n\r\n\tconsole.log('addnewCategoryTags',tags);\r\n\tconsole.log('categoryDetailData',categoryDetailData);\r\n\tconsole.log('myImages',myImages);\r\n\r\n\treturn (\r\n\t\t<Formik\r\n\t\t\tonSubmit={(values, actions) => handleSubmit(values, actions)}\r\n\t\t\tvalidationSchema={validationSchema}\r\n\t\t\tvalidateOnBlur={false}\r\n\t\t\tenableReinitialize={true}\r\n\t\t\tinitialValues={\r\n                \r\n                { ...initialValues,\r\n                    ...categoryDetailData,\r\n                    ...( categoryDetailData && Object.keys(categoryDetailData).length > 0 && {\r\n                        bnMetaTitle: categoryDetailData['bn']\r\n                        && categoryDetailData['bn'].metaTitle\r\n                        && categoryDetailData['bn'].metaTitle,\r\n                        bnMetaDescription: categoryDetailData['bn'] &&  categoryDetailData['bn'].metaDescription && categoryDetailData['bn'].metaDescription,\r\n                        bnName: categoryDetailData['bn'] && categoryDetailData['bn'].name && categoryDetailData['bn'].name,\r\n                        bnDescription: categoryDetailData['bn'] && categoryDetailData['bn'].description && categoryDetailData['bn'].description,\r\n                    })\r\n                 }\r\n\t\t\t}\r\n\t\t>\r\n\t\t\t{({\r\n\t\t\t\thandleChange,\r\n\t\t\t\tvalues,\r\n\t\t\t\thandleSubmit,\r\n\t\t\t\terrors,\r\n\t\t\t\tisValid,\r\n\t\t\t\tisSubmitting,\r\n\t\t\t\ttouched,\r\n\t\t\t\thandleBlur,\r\n\t\t\t\tsetFieldTouched,\r\n\t\t\t\thandleReset,\r\n\t\t\t}) => (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<Modal\r\n\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\ttop: '40px'\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\ttitle=\"Edit Category\"\r\n\t\t\t\t\t\t\tvisible={addNewCategoryVisible}\r\n\t\t\t\t\t\t\tonOk={(e: any) => handleSubmit(e)}\r\n\t\t\t\t\t\t\tonCancel={handleCancel}\r\n\t\t\t\t\t\t\tokText='Update'\r\n\t\t\t\t\t\t\tokButtonProps={{\r\n\t\t\t\t\t\t\t\tloading: isSubmitting,\r\n\t\t\t\t\t\t\t\thtmlType: \"submit\",\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\tlabel='Name'\r\n\t\t\t\t\t\t\t\tvalue={values.name}\r\n\t\t\t\t\t\t\t\tplaceHolder={'grocery,fashion'}\r\n\t\t\t\t\t\t\t\tname='name'\r\n\t\t\t\t\t\t\t\tisError={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['name'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['name'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('name');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\tlabel='BN Name'\r\n\t\t\t\t\t\t\t\tvalue={values.bnName}\r\n\t\t\t\t\t\t\t\tplaceHolder={'মুদিখানা,ফ্যাশন'}\r\n\t\t\t\t\t\t\t\tname='bnName'\r\n\t\t\t\t\t\t\t\tisError={(touched.bnName && errors.bnName) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['bnName'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.bnName && errors.bnName) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['bnName'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('bnName');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\tlabel='Description'\r\n\t\t\t\t\t\t\t\tvalue={values.description}\r\n\t\t\t\t\t\t\t\tplaceholder={'This category...'}\r\n\t\t\t\t\t\t\t\tname='description'\r\n\t\t\t\t\t\t\t\tisError={(touched.description && errors.description) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['description'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.description && errors.description) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['description'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('description');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\tlabel='BN Description'\r\n\t\t\t\t\t\t\t\tvalue={values.bnDescription}\r\n\t\t\t\t\t\t\t\tplaceholder={'এই ক্যাটাগড়ি...'}\r\n\t\t\t\t\t\t\t\tname='bnDescription'\r\n\t\t\t\t\t\t\t\tisError={(touched.bnDescription && errors.bnDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['bnDescription'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.bnDescription && errors.bnDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['bnDescription'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('bnDescription');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\tmarginTop: '20px'\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\r\n\t\t\t\t\t\r\n\r\n\r\n\t\t\t\t\t<div className='addproductSection-left-header'\r\n\r\n                                style={{\r\n                                    marginBottom: '-5px'\r\n                                }}\r\n                            >\r\n                                <h3 className='inputFieldLabel'>Images</h3>\r\n\t\t\t\t\t\t\t\t\t\t\t{/* <div  >\r\n\t\t\t\t\t\t\t\t\t\t<FileOutlined />\r\n\t\t\t\t\t\t\t\t\t\t<span>Media Center</span>\r\n\t\t\t\t\t\t\t\t\t\t</div> */}\r\n                            </div>\r\n\r\n\r\n\t\t\t\t\t\t\t<div\r\n                                            style={{\r\n                                                padding: \"10px\"\r\n                                            }}\r\n                                            className='aboutToUploadImagesContainer'>\r\n                                            {categoryDetailState.isLoading && (\r\n                                                <div style={{\r\n                                                    padding: '20px 0'\r\n                                                }}>\r\n                                                    <Spin />\r\n                                                </div>\r\n                                            )}\r\n                                            {categoryDetailState.done && (\r\n                                                <>\r\n                                                    {myImages &&\r\n                                                        // @ts-ignore\r\n                                                        myImages.length > 0 && myImages.map((image, index) => {\r\n                                                            return (\r\n                                                                <div className='aboutToUploadImagesContainer__item'>\r\n                                                                    <div\r\n                                                                        className='aboutToUploadImagesContainer__item-imgContainer'\r\n                                                                        onClick={() => {\r\n                                                                            setCoverImageId(image.id);\r\n                                                                            handleSetImageAsThumnail(image);\r\n                                                                        }}\r\n                                                                    >\r\n                                                                        <img src={image.cover} alt={image.alt} />\r\n                                                                    </div>\r\n\r\n                                                                    <span\r\n                                                                        onClick={() => {\r\n                                                                            handleImagesDelete(image.id)\r\n                                                                            handleDetachSingleImage(image.id)\r\n                                                                        }\r\n\r\n                                                                        }\r\n                                                                        className='aboutToUploadImagesContainer__item-remove'>\r\n                                                                        <CloseOutlined />\r\n                                                                    </span>\r\n\r\n\r\n                                                                    {coverImageId === image.id ? (\r\n                                                                        <span className='aboutToUploadImagesContainer__item-cover'>\r\n                                                                            <CheckOutlined />\r\n                                                                        </span>\r\n                                                                    ) : !coverImageId && index === 0 && (\r\n                                                                        <span className='aboutToUploadImagesContainer__item-cover'>\r\n                                                                            <CheckOutlined />\r\n                                                                        </span>\r\n                                                                    )}\r\n\r\n\r\n                                                                </div>\r\n                                                            )\r\n                                                        })}\r\n\r\n\r\n                                                    <Tooltip\r\n                                                        title={'Attach images'}>\r\n\r\n                                                        <div\r\n                                                            onClick={() => {\r\n                                                                setvisible(true);\r\n                                                                setisModalOpenForImages(true);\r\n                                                                setisModalOpenForThumbnail(false);\r\n                                                            }}\r\n                                                            className='aboutToUploadImagesContainer__uploadItem'>\r\n                                                            {/* <FileAddOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FileImageTwoTone />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FileImageOutlined /> */}\r\n                                                            <FileImageFilled />\r\n                                                            {/* <h5>\r\n\t\t\t\t\t\t\t\t\t\t\t\t     Select From Library\r\n\t\t\t\t\t\t\t\t\t\t\t<     /h5> */}\r\n                                                            <span className='aboutToUploadImagesContainer__uploadItem-plus'>\r\n                                                                <PlusOutlined />\r\n                                                            </span>\r\n                                                        </div>\r\n                                                    </Tooltip>\r\n                                                </>\r\n                                            )}\r\n\r\n                                        </div>\r\n\r\n\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\tlabel='Meta title'\r\n\t\t\t\t\t\t\t\tvalue={values.metaTitle}\r\n\t\t\t\t\t\t\t\tplaceHolder={'category...'}\r\n\t\t\t\t\t\t\t\tname='metaTitle'\r\n\t\t\t\t\t\t\t\tisError={(touched.metaTitle && errors.metaTitle) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['metaTitle'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.metaTitle && errors.metaTitle) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['metaTitle'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('metaTitle')\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\tlabel='BN Meta title'\r\n\t\t\t\t\t\t\t\tvalue={values.bnMetaTitle}\r\n\t\t\t\t\t\t\t\tplaceHolder={'ক্যাটাগড়ি...'}\r\n\t\t\t\t\t\t\t\tname='bnMetaTitle'\r\n\t\t\t\t\t\t\t\tisError={(touched.bnMetaTitle && errors.bnMetaTitle) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['bnMetaTitle'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.bnMetaTitle && errors.bnMetaTitle) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['bnMetaTitle'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('bnMetaTitle');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\tlabel='Meta description'\r\n\t\t\t\t\t\t\t\tvalue={values.metaDescription}\r\n\t\t\t\t\t\t\t\tplaceholder={'meta...'}\r\n\t\t\t\t\t\t\t\tname='metaDescription'\r\n\t\t\t\t\t\t\t\tisError={(touched.metaDescription && errors.metaDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['metaDescription'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.metaDescription && errors.metaDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['metaDescription'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('metaDescription');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\tlabel='BN Meta Description'\r\n\t\t\t\t\t\t\t\tvalue={values.bnMetaDescription}\r\n\t\t\t\t\t\t\t\tplaceholder={'এইয় মেট...'}\r\n\t\t\t\t\t\t\t\tname='bnMetaDescription'\r\n\t\t\t\t\t\t\t\tisError={(touched.bnMetaDescription && errors.bnMetaDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['bnMetaDescription'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.bnMetaDescription && errors.bnMetaDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['bnMetaDescription'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('bnMetaDescription');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\tMeta Tags (grocery,fashion)\r\n\t\t\t\t\t\t\t</h3>\r\n\r\n\t\t\t\t\t\t\t<MetaTags\r\n\t\t\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\t\t\tsetTags={setTags}\r\n\t\t\t\t\t\t\ttags={tags}\r\n\t\t\t\t\t\t\t />\r\n\r\n\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\tmarginTop:'15px'\r\n\t\t\t\t\t\t\t}}></div>\r\n\r\n\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\tBN Meta Tags (মুদিখানা,ফ্যাশন)\r\n\t\t\t\t\t\t\t</h3>\r\n\r\n\t\t\t\t\t\t\t<MetaTags\r\n\t\t\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\t\t\tsetTags={setBnTags}\r\n\t\t\t\t\t\t\ttags={bnTags}\r\n\t\t\t\t\t\t\t />\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t</Modal>\r\n\r\n\t\t\t\t\t\t<MediaLibrary\r\n\t\t\t\t\t\t\tsetvisible={setvisible}\r\n\t\t\t\t\t\t\tvisible={visible}\r\n\t\t\t\t\t\t\tsetmyImages={setmyImages}\r\n\t\t\t\t\t\t\tmyImages={myImages}\r\n\t\t\t\t\t\t\tsetmyThumbnailImage={setmyThumbnailImage}\r\n\t\t\t\t\t\t\tisModalOpenForThumbnail={isModalOpenForThumbnail}\r\n\t\t\t\t\t\t\tisModalOpenForImages={isModalOpenForImages}\r\n\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</>\r\n\t\t\t\t)}\r\n\t\t</Formik>\r\n\r\n\t);\r\n};\r\n\r\nexport default AddNewCategory;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useParams, useHistory } from \"react-router\";\r\n\r\n\r\n// import hooks\r\nimport { useHandleFetch } from \"../../../hooks\";\r\n\r\n// import lib\r\nimport {\r\n    EditOutlined,\r\n} from '@ant-design/icons';\r\n\r\nimport { Skeleton, Empty, Button, notification, Table, Space, Input as CoolInput, Tooltip, Modal } from 'antd';\r\n\r\n\r\n\r\n// import components\r\nimport { DataTableSkeleton } from \"../../../components/Placeholders\";\r\nimport CategoryEdit from \"./PostCategoryEdit\";\r\n\r\n\r\nconst { Column, ColumnGroup } = Table;\r\nconst { Search } = CoolInput;\r\n\r\n\r\ninterface Props {\r\n    productRecord?: any;\r\n}\r\n\r\nconst NewBrandDetail = (props: Props) => {\r\n    const [categoryDetailState, handleCategoryDetailFetch] = useHandleFetch({}, 'postCategoryDetail');\r\n    const [categoryProductsState, handleCategoryProductsFetch] = useHandleFetch({}, 'categoryPostList');\r\n\r\n    const params = useParams();\r\n    const history = useHistory();\r\n    const categoryId = params['id'];\r\n    const [categoryEditVisible, setCategoryEditVisible] = useState(false);\r\n    const [categoryDetail,setcategoryDetail] = useState({}); \r\n\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        const getCategoryDetail = async () => {\r\n            const categoryDetailDataRes =  await handleCategoryDetailFetch({\r\n                urlOptions: {\r\n                    placeHolders: {\r\n                        id: categoryId\r\n                    }\r\n                }\r\n            }); \r\n\r\n            // @ts-ignore\r\n            if(categoryDetailDataRes){\r\n                  // @ts-ignore\r\n                setcategoryDetail(categoryDetailDataRes)\r\n\r\n            }\r\n\r\n        };\r\n\r\n        getCategoryDetail();\r\n\r\n    }, [categoryId]);\r\n\r\n    useEffect(() => {\r\n\r\n        const getCategoryProducts = async () => {\r\n            await handleCategoryProductsFetch({\r\n                urlOptions: {\r\n                    placeHolders: {\r\n                        id: categoryId\r\n                    }\r\n                }\r\n            })\r\n        };\r\n\r\n        getCategoryProducts();\r\n\r\n    }, [categoryId]);\r\n\r\n\r\n\r\n\r\n    console.log('postcategoryDetail', categoryDetail);\r\n\r\n    console.log('brandParams', params);\r\n\r\n\r\n    const getImagesInCollumn = (imgs) => {\r\n        if (!imgs[0]) return false;\r\n        imgs = imgs.map(item => item.cover);\r\n        const columns = {};\r\n\r\n        let localIndex = 0;\r\n        let columnNumber = 0;\r\n\r\n\r\n        imgs.forEach((item, index) => {\r\n            if (localIndex < 3) {\r\n                if (columns[columnNumber]) {\r\n                    columns[columnNumber] = [...columns[columnNumber], item]\r\n                }\r\n                else columns[columnNumber] = [item];\r\n\r\n                localIndex = localIndex + 1;\r\n                columnNumber = columnNumber + 1;\r\n\r\n            }\r\n            else {\r\n                localIndex = 0;\r\n                columnNumber = 0;\r\n                console.log('localIndex', localIndex)\r\n            }\r\n        });\r\n\r\n        return columns;\r\n    }\r\n\r\n\r\n    const row = categoryDetailState.done && categoryDetail && categoryDetail['image'] ? getImagesInCollumn(categoryDetail['image']) : [];\r\n\r\n\r\n\r\n    return (\r\n        <div className='brandDetailContainer'>\r\n\r\n            <div className='brandDetailContainer__heading'>\r\n                <h3>\r\n                   Recipe Category Detail\r\n                </h3>\r\n\r\n                {categoryDetailState.done && categoryDetail && (Object.keys(categoryDetail).length > 0) && (\r\n                    <>\r\n                        <CategoryEdit\r\n                            addNewCategoryVisible={categoryEditVisible}\r\n                            setAddNewCategoryVisible={setCategoryEditVisible}\r\n                            categoryDetailData={categoryDetail}\r\n                            setcategoryDetailData={setcategoryDetail}\r\n\r\n                        />\r\n\r\n                        <Button\r\n                            onClick={() => setCategoryEditVisible(true)}\r\n                            type='link'\r\n                            icon={<EditOutlined />}\r\n                        >\r\n                            Edit\r\n                      </Button>\r\n                    </>\r\n                )}\r\n\r\n            </div>\r\n            <Skeleton\r\n                avatar paragraph={{ rows: 3 }}\r\n                loading={categoryDetailState.isLoading}>\r\n                {categoryDetailState.done && categoryDetail && !(Object.keys(categoryDetail).length > 0) && (\r\n                    <Empty description='No Recipe category found' image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n                )}\r\n\r\n\r\n\r\n                {categoryDetailState.done && categoryDetail && (Object.keys(categoryDetail).length > 0) && (\r\n                    <>\r\n                        <div className='brandDetailContainer__header'>\r\n                            <div className='brandDetailContainer__header-coverContainer brandDetailContainer__header-coverContainer-category'>\r\n                                <img src={categoryDetail['cover'] && categoryDetail['cover']['cover']} alt=\"\" />\r\n                            </div>\r\n                            <div className='brandDetailContainer__header-info'>\r\n                                <h2>\r\n                                    {categoryDetail['name']}\r\n                                </h2>\r\n                                <h3>\r\n                                    {categoryDetail['description']}\r\n                                </h3>\r\n                          \r\n                                {categoryDetail['url'] && (\r\n                                    <h3>\r\n                                        URL:\r\n                                        <span>\r\n                                            {categoryDetail['url']}\r\n                                        </span>\r\n\r\n                                    </h3>\r\n                                )}\r\n\r\n                            </div>\r\n                        </div>\r\n\r\n\r\n                        {categoryDetail['icon'] && (\r\n                            <>\r\n                                <div className='brandDetailContainer__heading'>\r\n                                    <h3>\r\n                                        Icon\r\n                                    </h3>\r\n                                </div>\r\n\r\n                                <div className='brandDetailContainer__inlineBox'>\r\n                                    <div className='brandDetailContainer__header-coverContainer brandDetailContainer__header-coverContainer-icon'>\r\n                                        <img src={categoryDetail['icon'] && categoryDetail['icon']} alt=\"\" />\r\n                                    </div>\r\n\r\n                                </div>\r\n\r\n                                <div style={{\r\n                                    marginBottom: \"25px\"\r\n                                }}></div>\r\n                            </>\r\n                        )}\r\n\r\n\r\n                        {categoryDetail['image'] && categoryDetail['image'].length > 0 && (\r\n                            <>\r\n                                <div className='brandDetailContainer__heading'>\r\n                                    <h3>\r\n                                        Image Gallary\r\n                                   </h3>\r\n                                </div>\r\n\r\n                                <div className='brandDetailContainer__imageGallary'>\r\n                                    <div className='imgGallaryContainer'>\r\n\r\n                                        <div className=\"imgGallary-row\">\r\n                                            {row && Object.keys(row).map(column => {\r\n                                                return (\r\n                                                    <div className=\"imgGallary-column\">\r\n                                                        {row[column] && row[column].map(img => {\r\n                                                            return <img \r\n                                                            alt='..'\r\n                                                            src={img} style={{\r\n                                                                width: '100%'\r\n                                                            }} />\r\n                                                        })}\r\n\r\n                                                    </div>\r\n                                                )\r\n                                            })}\r\n\r\n\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                </div>\r\n\r\n                                <div style={{\r\n                                    marginBottom: \"25px\"\r\n                                }}></div>\r\n                            </>\r\n                        )}\r\n\r\n\r\n                    </>\r\n\r\n                )}\r\n\r\n            </Skeleton>\r\n\r\n            <div className='brandDetailContainer__heading'>\r\n                <h3>\r\n                    Recipes\r\n                </h3>\r\n            </div>\r\n            <div className='brandDetailContainer__body'>\r\n                {categoryProductsState.isLoading && <DataTableSkeleton />}\r\n                {categoryProductsState.done && !(categoryProductsState.data.length > 0) && (\r\n                    <div style={{\r\n                        marginTop: '100px'\r\n                    }}>\r\n                        <Empty description='No recipes exists in this category' image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n                    </div>\r\n                )}\r\n\r\n                {categoryProductsState.done && categoryProductsState.data && categoryProductsState.data.length > 0 && (\r\n                    <>\r\n                        <Table\r\n                            style={{\r\n                                paddingTop: '10px',\r\n                                borderRadius: '5px !important',\r\n                                overflow: 'hidden',\r\n                                boxShadow: '0 0.125rem 0.625rem rgba(227, 231, 250, 0.3), 0 0.0625rem 0.125rem rgba(206, 220, 233, 0.4)'\r\n                            }}\r\n\r\n                            size='small'\r\n                            dataSource={categoryProductsState.data}\r\n                            tableLayout={'auto'}\r\n                            onHeaderRow={column => {\r\n                                return {\r\n                                    style: {\r\n                                        color: 'red !important'\r\n                                    }\r\n\r\n                                };\r\n                            }}\r\n                        >\r\n                            \r\n                <Column\r\n                    title=\"\"\r\n                    dataIndex=\"cover\"\r\n                    key=\"id\"\r\n                    width={'80px'}\r\n\r\n                    className='classnameofthecolumn'\r\n\r\n                    render={(cover, record: any) => (\r\n                        <>\r\n                            <img\r\n                                onClick={() => {\r\n                                    history.push(`/admin/posts/${record.id}`)\r\n                                }}\r\n                                src={cover} alt='cover img' style={{\r\n                                    height: '40px',\r\n                                    width: '40px',\r\n                                    objectFit: \"contain\",\r\n                                    borderRadius: '3px',\r\n                                    cursor: 'pointer'\r\n                                }} />\r\n                        </>\r\n                    )}\r\n                />\r\n\r\n                <Column\r\n                    title=\"Name\"\r\n                    dataIndex=\"name\"\r\n                    key=\"id\"\r\n                    className='classnameofthecolumn'\r\n                    render={(text, record: any) => (\r\n                        <>\r\n\r\n                            <h4\r\n                                onClick={() => {\r\n                                    history.push(`/admin/posts/${record.id}`)\r\n                                    // setBrandDetailVisible(true);\r\n                                }}\r\n                                style={{\r\n                                    fontWeight: 400,\r\n                                    color: '#555',\r\n                                    cursor: 'pointer'\r\n                                }}>\r\n                                {text}\r\n                            </h4>\r\n\r\n\r\n                        </>\r\n                    )}\r\n                />\r\n\r\n\r\n\r\n                <Column\r\n                    title=\"Preparation Time\"\r\n                    dataIndex=\"preparationTime\"\r\n                    key=\"id\"\r\n                    className='classnameofthecolumn'\r\n\r\n                />\r\n\r\n\r\n                <Column\r\n                    title=\"Cooking Time\"\r\n                    dataIndex=\"cookingTime\"\r\n                    key=\"id\"\r\n                    className='classnameofthecolumn'\r\n                />\r\n\r\n                \r\n                <Column\r\n                    title=\"People\"\r\n                    dataIndex=\"servingSize\"\r\n                    key=\"id\"\r\n                    className='classnameofthecolumn'\r\n                />\r\n\r\n\r\n            \r\n                        </Table>\r\n                    </>\r\n                )}\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NewBrandDetail\r\n","import React from 'react'\r\nimport { DatePicker } from 'antd';\r\nimport moment from 'moment';\r\n\r\n\r\n\r\ninterface Props {\r\n    onChange: any;\r\n    label?: string;\r\n    withTime?: boolean;\r\n    placeholder?: string;\r\n    date?: string;\r\n    time?: string;\r\n}\r\n\r\n\r\nconst DatePickerComponent = ({ onChange, label, withTime, placeholder, date, time }: Props) => {\r\n    function disabledDate(current) {\r\n        // Can not select days before today and today\r\n        return current && current < moment(date) && current > moment(date);\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <h3 className='inputFieldLabel'>{label}</h3>\r\n\r\n            {withTime ? <DatePicker\r\n                format=\"YYYY-MM-DD HH:mm:ss\"\r\n                className='inputclassName'\r\n                placeholder={placeholder}\r\n                style={{\r\n                    width: \"100%\",\r\n                    borderColor: \"#eee\"\r\n                }}\r\n\r\n\r\n                onChange={onChange}\r\n                {...(time && {\r\n                    defaultValue: moment(time),\r\n                })}\r\n            />\r\n                : (\r\n                    <DatePicker\r\n\r\n                        placeholder={placeholder}\r\n                        className='inputclassName'\r\n                        style={{\r\n                            width: \"100%\",\r\n                            borderColor: \"#eee\"\r\n                        }}\r\n                        onChange={onChange}\r\n                        {...(date && {\r\n                            defaultValue: moment(date),\r\n                        })}\r\n                    />\r\n                )}\r\n\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default DatePickerComponent\r\n\r\n\r\n\r\n\r\nconst { RangePicker } = DatePicker;\r\n\r\nfunction range(start, end) {\r\n    const result = [];\r\n    for (let i = start; i < end; i++) {\r\n        result.push(i);\r\n    }\r\n    return result;\r\n}\r\n\r\n// function disabledDate(current) {\r\n//   // Can not select days before today and today\r\n//   return current && current < moment().endOf('day');\r\n// }\r\n\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\nimport { useHandleFetch } from '../../hooks';\r\n// import third party ui lib\r\nimport {\r\n  Upload,\r\n  message,\r\n  Switch,\r\n  Select,\r\n  Button,\r\n  notification,\r\n  Modal,\r\n  Empty,\r\n  Form,\r\n} from 'antd';\r\n\r\nimport {\r\n  FileOutlined,\r\n  InboxOutlined,\r\n  RadiusUpleftOutlined,\r\n  RadiusUprightOutlined,\r\n  RadiusBottomleftOutlined,\r\n  RadiusBottomrightOutlined,\r\n  DeleteOutlined,\r\n  FileAddOutlined,\r\n  CheckCircleOutlined,\r\n  InfoCircleOutlined,\r\n} from '@ant-design/icons';\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport DatePicker from '../../components/Field/DatePicker';\r\n\r\nconst { Option } = Select;\r\n\r\nconst validationSchema = Yup.object().shape({\r\n  //   firstName: Yup.string()\r\n  //     .label('First name')\r\n  //     .required()\r\n  //     .min(2, 'First name must have at least 2 characters '),\r\n  //   lastName: Yup.string()\r\n  //     .label('Lastname')\r\n  //     .required()\r\n  //     .min(2, 'Last name must have at least 2 characters '),\r\n  //   phone: Yup.string()\r\n  //     .required('Please tell us your mobile number.')\r\n  //     .max(13, 'Please enter a valid mobile number.'),\r\n  //   password: Yup.string()\r\n  //     .label('Password')\r\n  //     .required()\r\n  //     .min(6, 'Password must have at least 6 characters'),\r\n  //   address1: Yup.string()\r\n  //     .label('Address line 1')\r\n  //     .required()\r\n  //     .min(3, 'Address line 1 must have at least 3 characters '),\r\n  //   email: Yup.string().label('Email').email('Please enter a valid email'),\r\n});\r\n\r\nconst initialValues = {\r\n  firstName: '',\r\n  lastName: '',\r\n  address: '',\r\n  salary: null,\r\n  designation: '',\r\n  fatherName: '',\r\n  motherName: '',\r\n  NID: '',\r\n  phone: '',\r\n  email: '',\r\n  additionalInfo: '',\r\n  joiningDate: '',\r\n};\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n  notification.success({\r\n    message: message || 'Staff Created',\r\n    description: '',\r\n    icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n  });\r\n};\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n  notification.error({\r\n    message: message || 'Something Went Wrong',\r\n    description: '',\r\n    icon: <InfoCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n  });\r\n};\r\n\r\ninterface Props {\r\n  addNewCategoryVisible: any;\r\n  setAddNewCategoryVisible: any;\r\n  customerList?: any;\r\n  setCustomerList?: any;\r\n}\r\n\r\nconst AddNewCategory = ({\r\n  addNewCategoryVisible,\r\n  setAddNewCategoryVisible,\r\n  customerList,\r\n  setCustomerList,\r\n}: Props) => {\r\n  const [addCustomerState, handleAddCustomerFetch] = useHandleFetch(\r\n    {},\r\n    'addStaff'\r\n  );\r\n  const [selectedCountryValue, setselectedCountryValue] = useState('');\r\n  const [selectedCityValue, setselectedCityValue] = useState('');\r\n\r\n  const [countryOptions, setcountryOptions] = useState([]);\r\n  const [cityOptions, setcityOptions] = useState([]);\r\n\r\n  const [countryListState, handleCountryListFetch] = useHandleFetch(\r\n    [],\r\n    'countryList'\r\n  );\r\n\r\n  const [cityListState, handleCityListFetch] = useHandleFetch([], 'cityList');\r\n  const [time, setTimeFeild] = useState('');\r\n\r\n  const [countryList, setCountryList] = useState([]);\r\n  const [cityList, setCityList] = useState([]);\r\n\r\n  const handleSubmit = async (values: any, actions: any) => {\r\n    const addCustomerRes = await handleAddCustomerFetch({\r\n      body: {\r\n        phone: values.phone,\r\n        email: values.email.trim(),\r\n        password: values.password,\r\n        address: values.address.trim(),\r\n        firstName: values.firstName.trim(),\r\n        lastName: values.lastName.trim(),\r\n        additionalInfo: values.additionalInfo.trim(),\r\n        NID: values.NID,\r\n        fatherName: values.fatherName.trim(),\r\n        motherName: values.motherName.trim(),\r\n        salary: values.salary,\r\n        designation: values.designation.trim(),\r\n        joiningDate: time,\r\n      },\r\n    });\r\n\r\n    // @ts-ignore\r\n    if (addCustomerRes && addCustomerRes.status === 'ok') {\r\n      openSuccessNotification();\r\n\r\n      console.log('addCustomerRes', addCustomerRes);\r\n      setCustomerList([\r\n        {\r\n          id: addCustomerRes['_id'] || '',\r\n          key: addCustomerRes['_id'] || '',\r\n          name: addCustomerRes['firstName'] + ' ' + addCustomerRes['lastName'],\r\n\r\n          // @ts-ignore\r\n          ...addCustomerRes,\r\n        },\r\n        ...customerList,\r\n      ]);\r\n\r\n      setAddNewCategoryVisible(false);\r\n      actions.resetForm();\r\n    } else {\r\n      openErrorNotification();\r\n    }\r\n\r\n    actions.setSubmitting(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!addCustomerState['isLoading']) {\r\n      const error = addCustomerState['error'];\r\n      if (error['isError'] && Object.keys(error['error']).length > 0) {\r\n        if (error['error']['registerError']) {\r\n          // setServerErrors(error['error']['registerError']);\r\n        } else if (error['error']['checkoutError']) {\r\n          // setServerErrors(error['error']['checkoutError']);\r\n        } else {\r\n          // setServerErrors(error['error']);\r\n        }\r\n\r\n        const errors =\r\n          Object.values(error['error']).length > 0\r\n            ? Object.values(error['error'])\r\n            : [];\r\n        errors.forEach((err, i) => {\r\n          if (typeof err === 'string') {\r\n            openErrorNotification(err);\r\n          } else if (typeof err === 'object') {\r\n            if (err && Object.keys(err).length > 0) {\r\n              const errs = Object.values(err);\r\n              errs.forEach((err) => {\r\n                openErrorNotification(err);\r\n              });\r\n            }\r\n          }\r\n        });\r\n      }\r\n    }\r\n\r\n    if (\r\n      !addCustomerState['isLoading'] &&\r\n      Object.keys(addCustomerState.data).length > 0\r\n    ) {\r\n      if (addCustomerState['data']['status'] === 'ok') {\r\n        // openSuccessNotification('Order Created Successfully');\r\n        // history.push({\r\n        //   pathname: '/orderDetails',\r\n        //   state: checkoutState['data']\r\n        // })\r\n        // clearCart();\r\n        // setIsModalShown(true);\r\n      }\r\n    }\r\n  }, [addCustomerState]);\r\n\r\n  const onChangeCity = (value) => {\r\n    setselectedCityValue(value);\r\n  };\r\n\r\n  const onChangeCountry = (value) => {\r\n    setselectedCountryValue(value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const setCountries = async () => {\r\n      const CountryListRes = await handleCountryListFetch({});\r\n\r\n      // @ts-ignore\r\n      if (CountryListRes && CountryListRes.length > 0) {\r\n        // @ts-ignore\r\n        const countryOptions = CountryListRes.map((country) => {\r\n          return {\r\n            value: country.name,\r\n            name: country.name,\r\n          };\r\n        });\r\n        setcountryOptions(countryOptions);\r\n      }\r\n    };\r\n\r\n    setCountries();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const setCities = async () => {\r\n      const cityListRes = await handleCityListFetch({\r\n        urlOptions: {\r\n          placeHolders: {\r\n            country: selectedCountryValue,\r\n          },\r\n        },\r\n      });\r\n\r\n      // @ts-ignore\r\n      if (cityListRes && cityListRes.length > 0) {\r\n        // @ts-ignore\r\n        const cityOptions = cityListRes.map((city) => {\r\n          return {\r\n            value: city.name,\r\n            name: city.name,\r\n          };\r\n        });\r\n        setcityOptions(cityOptions);\r\n      }\r\n    };\r\n\r\n    setCities();\r\n  }, [selectedCountryValue]);\r\n\r\n  const handleCancel = (e: any) => {\r\n    setAddNewCategoryVisible(false);\r\n  };\r\n\r\n  const getisSubmitButtonDisabled = (values, isValid) => {\r\n    if (\r\n      !isValid ||\r\n      !values.firstName ||\r\n      !values.lastName ||\r\n      !values.password ||\r\n      !values.phone ||\r\n      !values.address1\r\n    ) {\r\n      return true;\r\n    }\r\n    return false;\r\n  };\r\n\r\n  console.log('cityListState', cityListState);\r\n  const handleTimeChange = (date, dateString) => {\r\n    setTimeFeild(dateString);\r\n    // console.log('date', date, dateString);\r\n  };\r\n  return (\r\n    <Formik\r\n      onSubmit={(values, actions) => handleSubmit(values, actions)}\r\n      validationSchema={validationSchema}\r\n      validateOnBlur={false}\r\n      enableReinitialize={true}\r\n      initialValues={{ ...initialValues }}\r\n    >\r\n      {({\r\n        handleChange,\r\n        values,\r\n        handleSubmit,\r\n        errors,\r\n        isValid,\r\n        isSubmitting,\r\n        touched,\r\n        handleBlur,\r\n        setFieldTouched,\r\n        handleReset,\r\n      }) => (\r\n        <>\r\n          <Modal\r\n            style={{\r\n              top: '40px',\r\n            }}\r\n            bodyStyle={{\r\n              margin: '0',\r\n              padding: '10px',\r\n            }}\r\n            title='Add New Staff'\r\n            visible={addNewCategoryVisible}\r\n            onOk={(e: any) => handleSubmit(e)}\r\n            onCancel={handleCancel}\r\n            okText='Create'\r\n            okButtonProps={{\r\n              loading: isSubmitting,\r\n              htmlType: 'submit',\r\n              //   disabled: getisSubmitButtonDisabled(values, isValid),\r\n            }}\r\n          >\r\n            <div className='dubbleRowInputs'>\r\n              <div className='dubbleRowInputs__item'>\r\n                <Input\r\n                  label='First Name *'\r\n                  value={values.firstName}\r\n                  name='firstName'\r\n                  isError={\r\n                    (touched.firstName && errors.firstName) ||\r\n                    (!isSubmitting &&\r\n                      addCustomerState.error['error']['firstName'])\r\n                  }\r\n                  errorString={\r\n                    (touched.firstName && errors.firstName) ||\r\n                    (!isSubmitting &&\r\n                      addCustomerState.error['error']['firstName'])\r\n                  }\r\n                  onChange={(e: any) => {\r\n                    handleChange(e);\r\n                    setFieldTouched('firstName');\r\n                  }}\r\n                />\r\n              </div>\r\n              <div className='dubbleRowInputs__item'>\r\n                <Input\r\n                  label='Last Name'\r\n                  value={values.lastName}\r\n                  name='lastName'\r\n                  isError={\r\n                    (touched.lastName && errors.lastName) ||\r\n                    (!isSubmitting &&\r\n                      addCustomerState.error['error']['lastName'])\r\n                  }\r\n                  errorString={\r\n                    (touched.lastName && errors.lastName) ||\r\n                    (!isSubmitting &&\r\n                      addCustomerState.error['error']['lastName'])\r\n                  }\r\n                  onChange={(e: any) => {\r\n                    handleChange(e);\r\n                    setFieldTouched('lastName');\r\n                  }}\r\n                />\r\n              </div>\r\n            </div>\r\n\r\n            <div className='dubbleRowInputs'>\r\n              <div className='dubbleRowInputs__item'>\r\n                <Input\r\n                  label='Designation *'\r\n                  value={values.designation}\r\n                  name='designation'\r\n                  isError={\r\n                    (touched.designation && errors.designation) ||\r\n                    (!isSubmitting &&\r\n                      addCustomerState.error['error']['designation'])\r\n                  }\r\n                  errorString={\r\n                    (touched.designation && errors.designation) ||\r\n                    (!isSubmitting &&\r\n                      addCustomerState.error['error']['designation'])\r\n                  }\r\n                  onChange={(e: any) => {\r\n                    handleChange(e);\r\n                    setFieldTouched('designation');\r\n                  }}\r\n                />\r\n              </div>\r\n              <div className='dubbleRowInputs__item'>\r\n                <Input\r\n                  min={0}\r\n                  type={'number'}\r\n                  label='Salary *'\r\n                  value={values.salary}\r\n                  name='salary'\r\n                  isError={\r\n                    (touched.salary && errors.salary) ||\r\n                    (!isSubmitting && addCustomerState.error['error']['salary'])\r\n                  }\r\n                  errorString={\r\n                    (touched.salary && errors.salary) ||\r\n                    (!isSubmitting && addCustomerState.error['error']['salary'])\r\n                  }\r\n                  onChange={(e: any) => {\r\n                    handleChange(e);\r\n                    setFieldTouched('salary');\r\n                  }}\r\n                />\r\n              </div>\r\n            </div>\r\n\r\n            <div className='dubbleRowInputs'>\r\n              <div className='dubbleRowInputs__item'>\r\n                <Input\r\n                  label='Phone *'\r\n                  value={values.phone}\r\n                  name='phone'\r\n                  isError={\r\n                    (touched.phone && errors.phone) ||\r\n                    (!isSubmitting && addCustomerState.error['error']['phone'])\r\n                  }\r\n                  errorString={\r\n                    (touched.phone && errors.phone) ||\r\n                    (!isSubmitting && addCustomerState.error['error']['phone'])\r\n                  }\r\n                  onChange={(e: any) => {\r\n                    handleChange(e);\r\n                    setFieldTouched('phone');\r\n                  }}\r\n                />\r\n              </div>\r\n              <div className='dubbleRowInputs__item'>\r\n                <Input\r\n                  label='NID'\r\n                  value={values.NID}\r\n                  name='NID'\r\n                  isError={\r\n                    (touched.NID && errors.NID) ||\r\n                    (!isSubmitting && addCustomerState.error['error']['NID'])\r\n                  }\r\n                  errorString={\r\n                    (touched.NID && errors.NID) ||\r\n                    (!isSubmitting && addCustomerState.error['error']['NID'])\r\n                  }\r\n                  onChange={(e: any) => {\r\n                    handleChange(e);\r\n                    setFieldTouched('NID');\r\n                  }}\r\n                />\r\n              </div>\r\n            </div>\r\n\r\n            <div className='dubbleRowInputs'>\r\n              <div className='dubbleRowInputs__item'>\r\n                <Input\r\n                  label='Father Name'\r\n                  value={values.fatherName}\r\n                  name='fatherName'\r\n                  isError={\r\n                    (touched.fatherName && errors.fatherName) ||\r\n                    (!isSubmitting &&\r\n                      addCustomerState.error['error']['fatherName'])\r\n                  }\r\n                  errorString={\r\n                    (touched.fatherName && errors.fatherName) ||\r\n                    (!isSubmitting &&\r\n                      addCustomerState.error['error']['fatherName'])\r\n                  }\r\n                  onChange={(e: any) => {\r\n                    handleChange(e);\r\n                    setFieldTouched('fatherName');\r\n                  }}\r\n                />\r\n              </div>\r\n              <div className='dubbleRowInputs__item'>\r\n                <Input\r\n                  label='Mother Name'\r\n                  value={values.motherName}\r\n                  name='motherName'\r\n                  isError={\r\n                    (touched.motherName && errors.motherName) ||\r\n                    (!isSubmitting &&\r\n                      addCustomerState.error['error']['motherName'])\r\n                  }\r\n                  errorString={\r\n                    (touched.motherName && errors.motherName) ||\r\n                    (!isSubmitting &&\r\n                      addCustomerState.error['error']['motherName'])\r\n                  }\r\n                  onChange={(e: any) => {\r\n                    handleChange(e);\r\n                    setFieldTouched('motherName');\r\n                  }}\r\n                />\r\n              </div>\r\n            </div>\r\n\r\n            <div className='dubbleRowInputs'>\r\n              <div className='dubbleRowInputs__item'>\r\n                <Input\r\n                  label='Email'\r\n                  value={values.email}\r\n                  name='email'\r\n                  isError={\r\n                    (touched.email && errors.email) ||\r\n                    (!isSubmitting && addCustomerState.error['error']['email'])\r\n                  }\r\n                  errorString={\r\n                    (touched.email && errors.email) ||\r\n                    (!isSubmitting && addCustomerState.error['error']['email'])\r\n                  }\r\n                  onChange={(e: any) => {\r\n                    handleChange(e);\r\n                    setFieldTouched('email');\r\n                  }}\r\n                />\r\n              </div>\r\n\r\n              <div className='dubbleRowInputs__item'>\r\n                <DatePicker\r\n                  date={time}\r\n                  placeholder='10/20/2020'\r\n                  label='joining Date'\r\n                  onChange={handleTimeChange}\r\n                />\r\n              </div>\r\n            </div>\r\n\r\n            <div className='dubbleRowInputs'>\r\n              <div className='dubbleRowInputs__item'>\r\n                <Input\r\n                  label='Address'\r\n                  value={values.address}\r\n                  name='address'\r\n                  isError={\r\n                    (touched.address && errors.address) ||\r\n                    (!isSubmitting &&\r\n                      addCustomerState.error['error']['address'])\r\n                  }\r\n                  errorString={\r\n                    (touched.address && errors.address) ||\r\n                    (!isSubmitting &&\r\n                      addCustomerState.error['error']['address'])\r\n                  }\r\n                  onChange={(e: any) => {\r\n                    handleChange(e);\r\n                    setFieldTouched('address');\r\n                  }}\r\n                />\r\n              </div>\r\n\r\n              <div className='dubbleRowInputs__item'>\r\n                <Input\r\n                  label='Additional Info'\r\n                  value={values.additionalInfo}\r\n                  name='additionalInfo'\r\n                  isError={\r\n                    (touched.additionalInfo && errors.additionalInfo) ||\r\n                    (!isSubmitting &&\r\n                      addCustomerState.error['error']['additionalInfo'])\r\n                  }\r\n                  errorString={\r\n                    (touched.additionalInfo && errors.additionalInfo) ||\r\n                    (!isSubmitting &&\r\n                      addCustomerState.error['error']['additionalInfo'])\r\n                  }\r\n                  onChange={(e: any) => {\r\n                    handleChange(e);\r\n                    setFieldTouched('additionalInfo');\r\n                  }}\r\n                />\r\n              </div>\r\n            </div>\r\n          </Modal>\r\n        </>\r\n      )}\r\n    </Formik>\r\n  );\r\n};\r\n\r\nexport default AddNewCategory;\r\n","// @ts-nocheck\r\nimport React, { useState, useEffect } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\nimport { useHandleFetch } from '../../hooks';\r\n// import third party ui lib\r\nimport {\r\n  Upload,\r\n  message,\r\n  Switch,\r\n  Select,\r\n  Button,\r\n  notification,\r\n  Modal,\r\n  Empty,\r\n  Form,\r\n} from 'antd';\r\n\r\nimport {\r\n  FileOutlined,\r\n  InboxOutlined,\r\n  RadiusUpleftOutlined,\r\n  RadiusUprightOutlined,\r\n  RadiusBottomleftOutlined,\r\n  RadiusBottomrightOutlined,\r\n  DeleteOutlined,\r\n  FileAddOutlined,\r\n  CheckCircleOutlined,\r\n  InfoCircleOutlined,\r\n} from '@ant-design/icons';\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport DatePicker from '../../components/Field/DatePicker';\r\n\r\nconst { Option } = Select;\r\n\r\nconst validationSchema = Yup.object().shape({\r\n  //   firstName: Yup.string()\r\n  //     .label('First name')\r\n  //     .required()\r\n  //     .min(2, 'First name must have at least 2 characters '),\r\n  //   lastName: Yup.string()\r\n  //     .label('Lastname')\r\n  //     .required()\r\n  //     .min(2, 'Last name must have at least 2 characters '),\r\n  //   phone: Yup.string()\r\n  //     .required('Please tell us your mobile number.')\r\n  //     .max(13, 'Please enter a valid mobile number.'),\r\n  //   password: Yup.string()\r\n  //     .label('Password')\r\n  //     .required()\r\n  //     .min(6, 'Password must have at least 6 characters'),\r\n  //   address1: Yup.string()\r\n  //     .label('Address line 1')\r\n  //     .required()\r\n  //     .min(3, 'Address line 1 must have at least 3 characters '),\r\n  //   email: Yup.string().label('Email').email('Please enter a valid email'),\r\n});\r\n\r\nconst initialValues = {\r\n  firstName: '',\r\n  lastName: '',\r\n  address: '',\r\n  salary: null,\r\n  designation: '',\r\n  fatherName: '',\r\n  motherName: '',\r\n  NID: '',\r\n  phone: '',\r\n  email: '',\r\n  additionalInfo: '',\r\n  joiningDate: '',\r\n};\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n  notification.success({\r\n    message: message || 'Staff Updated',\r\n    description: '',\r\n    icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n  });\r\n};\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n  notification.error({\r\n    message: message || 'Something Went Wrong',\r\n    description: '',\r\n    icon: <InfoCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n  });\r\n};\r\n\r\ninterface Props {\r\n  addNewCategoryVisible: any;\r\n  setAddNewCategoryVisible: any;\r\n  customerList?: any;\r\n  setCustomerList?: any;\r\n  customer?: any;\r\n}\r\n\r\nconst StaffQuickEdit = ({\r\n  addNewCategoryVisible,\r\n  setAddNewCategoryVisible,\r\n  customerList,\r\n  setCustomerList,\r\n  customer,\r\n}: Props) => {\r\n  const [addCustomerState, handleAddCustomerFetch] = useHandleFetch(\r\n    {},\r\n    'updateStaff'\r\n  );\r\n  const [selectedCountryValue, setselectedCountryValue] = useState('');\r\n  const [selectedCityValue, setselectedCityValue] = useState('');\r\n\r\n  const [countryOptions, setcountryOptions] = useState([]);\r\n  const [cityOptions, setcityOptions] = useState([]);\r\n\r\n  const [countryListState, handleCountryListFetch] = useHandleFetch(\r\n    [],\r\n    'countryList'\r\n  );\r\n\r\n  const [cityListState, handleCityListFetch] = useHandleFetch([], 'cityList');\r\n  const [time, setTimeFeild] = useState('');\r\n\r\n  useEffect(() => {\r\n    if (customer && Object.keys(customer).length > 0) {\r\n      setTimeFeild(customer['joiningDate']);\r\n    }\r\n  }, [customer]);\r\n\r\n  const [countryList, setCountryList] = useState([]);\r\n  const [cityList, setCityList] = useState([]);\r\n\r\n  const handleSubmit = async (values: any, actions: any) => {\r\n    const addCustomerRes = await handleAddCustomerFetch({\r\n      urlOptions: {\r\n        placeHolders: {\r\n          id: customer.id,\r\n        },\r\n      },\r\n      body: {\r\n        phone: values.phone,\r\n        email: values.email.trim(),\r\n        address: values.address.trim(),\r\n        firstName: values.firstName.trim(),\r\n        lastName: values.lastName.trim(),\r\n        additionalInfo: values.additionalInfo.trim(),\r\n        NID: values.NID,\r\n        fatherName: values.fatherName.trim(),\r\n        motherName: values.motherName.trim(),\r\n        salary: values.salary,\r\n        designation: values.designation.trim(),\r\n        joiningDate: time,\r\n      },\r\n    });\r\n\r\n    // @ts-ignore\r\n    if (addCustomerRes && addCustomerRes.status === 'ok') {\r\n      openSuccessNotification();\r\n\r\n      console.log('addCustomerREes', addCustomerRes);\r\n      const positionInTag = () => {\r\n        return customerList.map((item) => item.id).indexOf(customer.id);\r\n      };\r\n\r\n      const index = positionInTag();\r\n\r\n      // @ts-ignore\r\n      const updatedItem = Object.assign({}, customerList[index], {\r\n        ...addCustomerRes,\r\n        name: addCustomerRes.firstName + ' ' + addCustomerRes.lastName,\r\n      });\r\n\r\n      console.log('updatedItemaddCustomerREes', addCustomerRes);\r\n\r\n      const updateTagList = [\r\n        ...customerList.slice(0, index),\r\n        updatedItem,\r\n        ...customerList.slice(index + 1),\r\n      ];\r\n\r\n      console.log('updatedItemadUpdatedList', updateTagList);\r\n\r\n      setCustomerList(updateTagList);\r\n\r\n      setAddNewCategoryVisible(false);\r\n      setTimeFeild('');\r\n      actions.resetForm();\r\n    } else {\r\n      openErrorNotification();\r\n    }\r\n\r\n    actions.setSubmitting(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!addCustomerState['isLoading']) {\r\n      const error = addCustomerState['error'];\r\n      if (error['isError'] && Object.keys(error['error']).length > 0) {\r\n        if (error['error']['registerError']) {\r\n          // setServerErrors(error['error']['registerError']);\r\n        } else if (error['error']['checkoutError']) {\r\n          // setServerErrors(error['error']['checkoutError']);\r\n        } else {\r\n          // setServerErrors(error['error']);\r\n        }\r\n\r\n        const errors =\r\n          Object.values(error['error']).length > 0\r\n            ? Object.values(error['error'])\r\n            : [];\r\n        errors.forEach((err, i) => {\r\n          if (typeof err === 'string') {\r\n            openErrorNotification(err);\r\n          } else if (typeof err === 'object') {\r\n            if (err && Object.keys(err).length > 0) {\r\n              const errs = Object.values(err);\r\n              errs.forEach((err) => {\r\n                openErrorNotification(err);\r\n              });\r\n            }\r\n          }\r\n        });\r\n      }\r\n    }\r\n\r\n    if (\r\n      !addCustomerState['isLoading'] &&\r\n      Object.keys(addCustomerState.data).length > 0\r\n    ) {\r\n      if (addCustomerState['data']['status'] === 'ok') {\r\n        // openSuccessNotification('Order Created Successfully');\r\n        // history.push({\r\n        //   pathname: '/orderDetails',\r\n        //   state: checkoutState['data']\r\n        // })\r\n        // clearCart();\r\n        // setIsModalShown(true);\r\n      }\r\n    }\r\n  }, [addCustomerState]);\r\n\r\n  const onChangeCity = (value) => {\r\n    setselectedCityValue(value);\r\n  };\r\n\r\n  const onChangeCountry = (value) => {\r\n    setselectedCountryValue(value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const setCountries = async () => {\r\n      const CountryListRes = await handleCountryListFetch({});\r\n\r\n      // @ts-ignore\r\n      if (CountryListRes && CountryListRes.length > 0) {\r\n        // @ts-ignore\r\n        const countryOptions = CountryListRes.map((country) => {\r\n          return {\r\n            value: country.name,\r\n            name: country.name,\r\n          };\r\n        });\r\n        setcountryOptions(countryOptions);\r\n      }\r\n    };\r\n\r\n    setCountries();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const setCities = async () => {\r\n      const cityListRes = await handleCityListFetch({\r\n        urlOptions: {\r\n          placeHolders: {\r\n            country: selectedCountryValue,\r\n          },\r\n        },\r\n      });\r\n\r\n      // @ts-ignore\r\n      if (cityListRes && cityListRes.length > 0) {\r\n        // @ts-ignore\r\n        const cityOptions = cityListRes.map((city) => {\r\n          return {\r\n            value: city.name,\r\n            name: city.name,\r\n          };\r\n        });\r\n        setcityOptions(cityOptions);\r\n      }\r\n    };\r\n\r\n    setCities();\r\n  }, [selectedCountryValue]);\r\n\r\n  const handleCancel = (e: any) => {\r\n    setAddNewCategoryVisible(false);\r\n    setTimeFeild('');\r\n  };\r\n\r\n  const getisSubmitButtonDisabled = (values, isValid) => {\r\n    if (\r\n      !isValid ||\r\n      !values.firstName ||\r\n      !values.lastName ||\r\n      !values.password ||\r\n      !values.phone ||\r\n      !values.address1\r\n    ) {\r\n      return true;\r\n    }\r\n    return false;\r\n  };\r\n\r\n  console.log('cityListState', cityListState);\r\n  const handleTimeChange = (date, dateString) => {\r\n    setTimeFeild(dateString);\r\n    // console.log('date', date, dateString);\r\n  };\r\n  return (\r\n    <Formik\r\n      onSubmit={(values, actions) => handleSubmit(values, actions)}\r\n      validationSchema={validationSchema}\r\n      validateOnBlur={false}\r\n      enableReinitialize={true}\r\n      initialValues={{ ...initialValues, ...customer }}\r\n    >\r\n      {({\r\n        handleChange,\r\n        values,\r\n        handleSubmit,\r\n        errors,\r\n        isValid,\r\n        isSubmitting,\r\n        touched,\r\n        handleBlur,\r\n        setFieldTouched,\r\n        handleReset,\r\n      }) => (\r\n        <>\r\n          <Modal\r\n            style={{\r\n              top: '40px',\r\n            }}\r\n            bodyStyle={{\r\n              margin: '0',\r\n              padding: '10px',\r\n            }}\r\n            title='Add New Staff'\r\n            visible={addNewCategoryVisible}\r\n            onOk={(e: any) => handleSubmit(e)}\r\n            onCancel={handleCancel}\r\n            okText='Update'\r\n            okButtonProps={{\r\n              loading: isSubmitting,\r\n              htmlType: 'submit',\r\n              //   disabled: getisSubmitButtonDisabled(values, isValid),\r\n            }}\r\n          >\r\n            <div className='dubbleRowInputs'>\r\n              <div className='dubbleRowInputs__item'>\r\n                <Input\r\n                  label='First Name *'\r\n                  value={values.firstName}\r\n                  name='firstName'\r\n                  isError={\r\n                    (touched.firstName && errors.firstName) ||\r\n                    (!isSubmitting &&\r\n                      addCustomerState.error['error']['firstName'])\r\n                  }\r\n                  errorString={\r\n                    (touched.firstName && errors.firstName) ||\r\n                    (!isSubmitting &&\r\n                      addCustomerState.error['error']['firstName'])\r\n                  }\r\n                  onChange={(e: any) => {\r\n                    handleChange(e);\r\n                    setFieldTouched('firstName');\r\n                  }}\r\n                />\r\n              </div>\r\n              <div className='dubbleRowInputs__item'>\r\n                <Input\r\n                  label='Last Name'\r\n                  value={values.lastName}\r\n                  name='lastName'\r\n                  isError={\r\n                    (touched.lastName && errors.lastName) ||\r\n                    (!isSubmitting &&\r\n                      addCustomerState.error['error']['lastName'])\r\n                  }\r\n                  errorString={\r\n                    (touched.lastName && errors.lastName) ||\r\n                    (!isSubmitting &&\r\n                      addCustomerState.error['error']['lastName'])\r\n                  }\r\n                  onChange={(e: any) => {\r\n                    handleChange(e);\r\n                    setFieldTouched('lastName');\r\n                  }}\r\n                />\r\n              </div>\r\n            </div>\r\n\r\n            <div className='dubbleRowInputs'>\r\n              <div className='dubbleRowInputs__item'>\r\n                <Input\r\n                  label='Designation *'\r\n                  value={values.designation}\r\n                  name='designation'\r\n                  isError={\r\n                    (touched.designation && errors.designation) ||\r\n                    (!isSubmitting &&\r\n                      addCustomerState.error['error']['designation'])\r\n                  }\r\n                  errorString={\r\n                    (touched.designation && errors.designation) ||\r\n                    (!isSubmitting &&\r\n                      addCustomerState.error['error']['designation'])\r\n                  }\r\n                  onChange={(e: any) => {\r\n                    handleChange(e);\r\n                    setFieldTouched('designation');\r\n                  }}\r\n                />\r\n              </div>\r\n              <div className='dubbleRowInputs__item'>\r\n                <Input\r\n                  min={0}\r\n                  type={'number'}\r\n                  label='Salary *'\r\n                  value={values.salary}\r\n                  name='salary'\r\n                  isError={\r\n                    (touched.salary && errors.salary) ||\r\n                    (!isSubmitting && addCustomerState.error['error']['salary'])\r\n                  }\r\n                  errorString={\r\n                    (touched.salary && errors.salary) ||\r\n                    (!isSubmitting && addCustomerState.error['error']['salary'])\r\n                  }\r\n                  onChange={(e: any) => {\r\n                    handleChange(e);\r\n                    setFieldTouched('salary');\r\n                  }}\r\n                />\r\n              </div>\r\n            </div>\r\n\r\n            <div className='dubbleRowInputs'>\r\n              <div className='dubbleRowInputs__item'>\r\n                <Input\r\n                  label='Phone *'\r\n                  value={values.phone}\r\n                  name='phone'\r\n                  isError={\r\n                    (touched.phone && errors.phone) ||\r\n                    (!isSubmitting && addCustomerState.error['error']['phone'])\r\n                  }\r\n                  errorString={\r\n                    (touched.phone && errors.phone) ||\r\n                    (!isSubmitting && addCustomerState.error['error']['phone'])\r\n                  }\r\n                  onChange={(e: any) => {\r\n                    handleChange(e);\r\n                    setFieldTouched('phone');\r\n                  }}\r\n                />\r\n              </div>\r\n              <div className='dubbleRowInputs__item'>\r\n                <Input\r\n                  label='NID'\r\n                  value={values.NID}\r\n                  name='NID'\r\n                  isError={\r\n                    (touched.NID && errors.NID) ||\r\n                    (!isSubmitting && addCustomerState.error['error']['NID'])\r\n                  }\r\n                  errorString={\r\n                    (touched.NID && errors.NID) ||\r\n                    (!isSubmitting && addCustomerState.error['error']['NID'])\r\n                  }\r\n                  onChange={(e: any) => {\r\n                    handleChange(e);\r\n                    setFieldTouched('NID');\r\n                  }}\r\n                />\r\n              </div>\r\n            </div>\r\n\r\n            <div className='dubbleRowInputs'>\r\n              <div className='dubbleRowInputs__item'>\r\n                <Input\r\n                  label='Father Name'\r\n                  value={values.fatherName}\r\n                  name='fatherName'\r\n                  isError={\r\n                    (touched.fatherName && errors.fatherName) ||\r\n                    (!isSubmitting &&\r\n                      addCustomerState.error['error']['fatherName'])\r\n                  }\r\n                  errorString={\r\n                    (touched.fatherName && errors.fatherName) ||\r\n                    (!isSubmitting &&\r\n                      addCustomerState.error['error']['fatherName'])\r\n                  }\r\n                  onChange={(e: any) => {\r\n                    handleChange(e);\r\n                    setFieldTouched('fatherName');\r\n                  }}\r\n                />\r\n              </div>\r\n              <div className='dubbleRowInputs__item'>\r\n                <Input\r\n                  label='Mother Name'\r\n                  value={values.motherName}\r\n                  name='motherName'\r\n                  isError={\r\n                    (touched.motherName && errors.motherName) ||\r\n                    (!isSubmitting &&\r\n                      addCustomerState.error['error']['motherName'])\r\n                  }\r\n                  errorString={\r\n                    (touched.motherName && errors.motherName) ||\r\n                    (!isSubmitting &&\r\n                      addCustomerState.error['error']['motherName'])\r\n                  }\r\n                  onChange={(e: any) => {\r\n                    handleChange(e);\r\n                    setFieldTouched('motherName');\r\n                  }}\r\n                />\r\n              </div>\r\n            </div>\r\n\r\n            <div className='dubbleRowInputs'>\r\n              <div className='dubbleRowInputs__item'>\r\n                <Input\r\n                  label='Email'\r\n                  value={values.email}\r\n                  name='email'\r\n                  isError={\r\n                    (touched.email && errors.email) ||\r\n                    (!isSubmitting && addCustomerState.error['error']['email'])\r\n                  }\r\n                  errorString={\r\n                    (touched.email && errors.email) ||\r\n                    (!isSubmitting && addCustomerState.error['error']['email'])\r\n                  }\r\n                  onChange={(e: any) => {\r\n                    handleChange(e);\r\n                    setFieldTouched('email');\r\n                  }}\r\n                />\r\n              </div>\r\n\r\n              <div className='dubbleRowInputs__item'>\r\n                <DatePicker\r\n                  date={time}\r\n                  placeholder='10/20/2020'\r\n                  label='joining Date'\r\n                  onChange={handleTimeChange}\r\n                />\r\n              </div>\r\n            </div>\r\n\r\n            <div className='dubbleRowInputs'>\r\n              <div className='dubbleRowInputs__item'>\r\n                <Input\r\n                  label='Address'\r\n                  value={values.address}\r\n                  name='address'\r\n                  isError={\r\n                    (touched.address && errors.address) ||\r\n                    (!isSubmitting &&\r\n                      addCustomerState.error['error']['address'])\r\n                  }\r\n                  errorString={\r\n                    (touched.address && errors.address) ||\r\n                    (!isSubmitting &&\r\n                      addCustomerState.error['error']['address'])\r\n                  }\r\n                  onChange={(e: any) => {\r\n                    handleChange(e);\r\n                    setFieldTouched('address');\r\n                  }}\r\n                />\r\n              </div>\r\n\r\n              <div className='dubbleRowInputs__item'>\r\n                <Input\r\n                  label='Additional Info'\r\n                  value={values.additionalInfo}\r\n                  name='additionalInfo'\r\n                  isError={\r\n                    (touched.additionalInfo && errors.additionalInfo) ||\r\n                    (!isSubmitting &&\r\n                      addCustomerState.error['error']['additionalInfo'])\r\n                  }\r\n                  errorString={\r\n                    (touched.additionalInfo && errors.additionalInfo) ||\r\n                    (!isSubmitting &&\r\n                      addCustomerState.error['error']['additionalInfo'])\r\n                  }\r\n                  onChange={(e: any) => {\r\n                    handleChange(e);\r\n                    setFieldTouched('additionalInfo');\r\n                  }}\r\n                />\r\n              </div>\r\n            </div>\r\n          </Modal>\r\n        </>\r\n      )}\r\n    </Formik>\r\n  );\r\n};\r\n\r\nexport default StaffQuickEdit;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { withRouter, useHistory } from 'react-router-dom';\r\nimport { CSVLink } from 'react-csv';\r\n\r\nimport {\r\n  Table,\r\n  Badge,\r\n  Menu,\r\n  Dropdown,\r\n  notification,\r\n  Space,\r\n  Tag,\r\n  Button,\r\n  Input,\r\n  Tooltip,\r\n  Modal,\r\n  Popconfirm,\r\n} from 'antd';\r\nimport {\r\n  PlusOutlined,\r\n  EditOutlined,\r\n  DeleteOutlined,\r\n  EditFilled,\r\n  CheckCircleOutlined,\r\n  DownloadOutlined,\r\n  InfoCircleOutlined,\r\n} from '@ant-design/icons';\r\nimport Moment from 'react-moment';\r\n\r\n/// import hooks\r\nimport { useFetch, useHandleFetch } from '../../hooks';\r\nimport moment from 'moment';\r\n// import components\r\nimport { DataTableSkeleton } from '../../components/Placeholders';\r\nimport AddNewStaff from './AddNewStaff';\r\nimport QuickEdit from './QuickEdit';\r\nimport Empty from '../../components/Empty';\r\nconst { Column, ColumnGroup } = Table;\r\nconst { Search } = Input;\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n  notification.success({\r\n    message: message || 'Staffs Created',\r\n    description: '',\r\n    icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n  });\r\n};\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n  notification.success({\r\n    message: message || 'Something Went Wrong',\r\n    description: '',\r\n    icon: <InfoCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n  });\r\n};\r\n\r\ninterface myTableProps {\r\n  data: any;\r\n  setCustomerList?: any;\r\n}\r\n\r\nconst MyTable = ({ data, setCustomerList }: myTableProps) => {\r\n  const [visible, setvisible] = useState(false);\r\n  const [activeCategoryForEdit, setactiveCategoryForEdit] = useState(false);\r\n\r\n  const history = useHistory();\r\n\r\n  const [deleteCustomerState, handleDeleteCustomerFetch] = useHandleFetch(\r\n    {},\r\n    'deleteStaff'\r\n  );\r\n  const handleDeleteCustomer = async (id) => {\r\n    const deleteCustomerRes = await handleDeleteCustomerFetch({\r\n      urlOptions: {\r\n        placeHolders: {\r\n          id,\r\n        },\r\n      },\r\n    });\r\n\r\n    // @ts-ignore\r\n    if (deleteCustomerRes && deleteCustomerRes.status === 'ok') {\r\n      openSuccessNotification('Deleted Staff');\r\n      const newCustomerList = data.filter((item) => item.id !== id);\r\n      setCustomerList(newCustomerList);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Table\r\n        // expandable={{\r\n        //     expandedRowRender: record => <p style={{ margin: 0 }}>{record.name}</p>,\r\n        //     rowExpandable: record => record.name !== 'Not Expandable',\r\n        //   }}\r\n        // bordered={true}\r\n        size='small'\r\n        // pagination={false}\r\n        dataSource={data}\r\n      >\r\n        <Column\r\n          title='Name'\r\n          dataIndex='name'\r\n          key='id'\r\n          className='classnameofthecolumn'\r\n          render={(text, record: any) => (\r\n            <>\r\n              <h4\r\n                onClick={() => {\r\n                  history.push(`/admin/staff/${record.id}`);\r\n                  // setcategoryDetailVisible(true);\r\n                  setactiveCategoryForEdit(record);\r\n                }}\r\n                style={{\r\n                  fontWeight: 400,\r\n                  color: '#555',\r\n                  cursor: 'pointer',\r\n                }}\r\n              >\r\n                {text}\r\n              </h4>\r\n            </>\r\n          )}\r\n        />\r\n\r\n        <Column\r\n          title='Phone'\r\n          dataIndex='phone'\r\n          key='id'\r\n          className='classnameofthecolumn'\r\n        />\r\n\r\n        <Column\r\n          title='Designation'\r\n          dataIndex='designation'\r\n          key='id'\r\n          className='classnameofthecolumn'\r\n        />\r\n\r\n        <Column\r\n          title='Salary'\r\n          dataIndex='salary'\r\n          key='id'\r\n          className='classnameofthecolumn'\r\n        />\r\n\r\n        <Column\r\n          title='Joined'\r\n          dataIndex='joiningDate'\r\n          key='id'\r\n          className='classnameofthecolumn'\r\n          render={(text, record: any) => (\r\n            <Space size='middle'>\r\n              <h5>{text && moment(text).format('MMMM Do YYYY, h:mm a')}</h5>\r\n            </Space>\r\n          )}\r\n        />\r\n\r\n        {/* <Column \r\n          \r\n          className='classnameofthecolumn'\r\n\r\n          title=\"Product\" dataIndex=\"product\" key=\"product\" /> */}\r\n\r\n        {/* <Column \r\n          \r\n          className='classnameofthecolumn'\r\n\r\n          title=\"Sub Category\" dataIndex=\"subCategory\" key=\"subCategory\" /> */}\r\n\r\n        {/* <Column\r\n          title=\"Tags\"\r\n          dataIndex=\"tags\"\r\n          key=\"tags\"\r\n          render={tags => (\r\n            <>\r\n              {tags.map((tag : any) => (\r\n                <Tag color=\"blue\" key={tag}>\r\n                  {tag}\r\n                </Tag>\r\n              ))}\r\n            </>\r\n          )}\r\n        /> */}\r\n        <Column\r\n          className='classnameofthecolumn'\r\n          title=''\r\n          key='action'\r\n          align='right'\r\n          render={(text, record: any) => (\r\n            <Space size='middle'>\r\n              <a href='##'>\r\n                <Tooltip placement='top' title='Edit Staff'>\r\n                  <span\r\n                    className='iconSize'\r\n                    onClick={() => {\r\n                      setvisible(true);\r\n                      setactiveCategoryForEdit(record);\r\n                    }}\r\n                  >\r\n                    <EditOutlined />\r\n                  </span>\r\n                </Tooltip>\r\n              </a>\r\n\r\n              <Popconfirm\r\n                onConfirm={() => handleDeleteCustomer(record.id)}\r\n                title='Are you sure？'\r\n                okText='Yes'\r\n                cancelText='No'\r\n              >\r\n                <span className='iconSize iconSize-danger'>\r\n                  <DeleteOutlined />\r\n                </span>\r\n              </Popconfirm>\r\n            </Space>\r\n          )}\r\n        />\r\n      </Table>\r\n\r\n      {activeCategoryForEdit && (\r\n        <QuickEdit\r\n          customerList={data}\r\n          setCustomerList={setCustomerList}\r\n          setAddNewCategoryVisible={setvisible}\r\n          addNewCategoryVisible={visible}\r\n          customer={activeCategoryForEdit}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\ninterface Props {\r\n  history: any;\r\n}\r\n\r\nconst CustomerList = ({ history }: Props) => {\r\n  const [customerList, setCustomerList] = useState([]);\r\n\r\n  const [customerState, handleCustomerListFetch] = useHandleFetch(\r\n    {},\r\n    'staffList'\r\n  );\r\n\r\n  console.log('staffList', customerState);\r\n\r\n  useEffect(() => {\r\n    const setCustomers = async () => {\r\n      const customers = await handleCustomerListFetch({});\r\n      // @ts-ignore\r\n      setCustomerList(customers);\r\n    };\r\n    setCustomers();\r\n  }, []);\r\n\r\n  const handleSearch = (value) => {\r\n    if (customerState.data.length > 0) {\r\n      const newCustomerList = customerState.data.filter((item) =>\r\n        item.name.toLowerCase().includes(value.toLowerCase())\r\n      );\r\n      setCustomerList(newCustomerList);\r\n    }\r\n  };\r\n\r\n  const [addNewCategoryVisible, setAddNewCategoryVisible] = useState(false);\r\n\r\n  // console.log('customerState',customerState)\r\n\r\n  const headers = [\r\n    { label: 'Name', key: 'name' },\r\n    { label: 'Phone', key: 'phone' },\r\n    { label: 'Designation', key: 'designation' },\r\n    { label: 'Salary', key: 'salary' },\r\n    { label: 'joined', key: 'joiningDate' },\r\n  ];\r\n\r\n  const getData = () => {\r\n    if (customerList && customerList.length > 0) {\r\n      const csvData = customerList.map((item) => {\r\n        return {\r\n          name: item.name,\r\n          phone: item.phone,\r\n          designation: item.designation,\r\n          salary: item.salary,\r\n          joiningDate: item.joiningDate\r\n            ? moment(item.joiningDate).format('MMMM Do YYYY, h:mm a')\r\n            : '',\r\n        };\r\n      });\r\n\r\n      return csvData;\r\n    } else return [];\r\n  };\r\n\r\n  const data = getData();\r\n\r\n  return (\r\n    <>\r\n      {/* <h2 className='containerPageTitle'>\r\n      Categories\r\n    </h2> */}\r\n      <div className='categoryListContainer'>\r\n        <div className='categoryListContainer__header'>\r\n          <div className='categoryListContainer__header-searchBar'>\r\n            <h2 className='categoryListContainer__header-title'>Staffs</h2>\r\n\r\n            <Search\r\n              enterButton={false}\r\n              className='searchbarClassName'\r\n              placeholder='search staffs..'\r\n              onChange={(e) => handleSearch(e.target.value)}\r\n              // style={{ width: 300 }}\r\n            />\r\n          </div>\r\n\r\n          <div\r\n            style={{\r\n              display: 'flex',\r\n              alignItems: 'center',\r\n            }}\r\n          >\r\n            {customerList && customerList.length > 0 && (\r\n              <>\r\n                <div\r\n                  style={{\r\n                    display: 'flex',\r\n                    alignItems: 'center',\r\n                    marginRight: '25px',\r\n                  }}\r\n                >\r\n                  <CSVLink\r\n                    filename={'staff-list.csv'}\r\n                    data={data}\r\n                    headers={headers}\r\n                  >\r\n                    Export as csv\r\n                  </CSVLink>\r\n                  <span\r\n                    style={{\r\n                      color: '#1890ff',\r\n                      marginLeft: '10px',\r\n                    }}\r\n                  >\r\n                    <DownloadOutlined />\r\n                  </span>\r\n                </div>\r\n              </>\r\n            )}\r\n            <Button\r\n              // type=\"primary\"\r\n              className='btnPrimaryClassNameoutline'\r\n              icon={<PlusOutlined />}\r\n              onClick={() => setAddNewCategoryVisible(true)}\r\n            >\r\n              Add New\r\n            </Button>\r\n          </div>\r\n        </div>\r\n\r\n        <div className='categoryListContainer__afterHeader'>\r\n          {/* <Search\r\n      placeholder=\"search categories..\"\r\n      size=\"large\"\r\n      onSearch={value => console.log(value)}\r\n      style={{ width: 300 }}\r\n    /> */}\r\n        </div>\r\n\r\n        <div className='categoryListContainer__categoryList'>\r\n          {customerState.done && customerList.length > 0 && (\r\n            <MyTable setCustomerList={setCustomerList} data={customerList} />\r\n          )}\r\n          {customerState.isLoading && <DataTableSkeleton />}\r\n          {customerState.done && !(customerList.length > 0) && (\r\n            <Empty title='No Staff found' />\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      {customerState.done && (\r\n        <AddNewStaff\r\n          setCustomerList={setCustomerList}\r\n          addNewCategoryVisible={addNewCategoryVisible}\r\n          setAddNewCategoryVisible={setAddNewCategoryVisible}\r\n          customerList={customerState.data}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default withRouter(CustomerList);\r\n","// @ts-nocheck\r\nimport React, { useState, useEffect } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\nimport { useHandleFetch } from '../../hooks';\r\n// import third party ui lib\r\nimport {\r\n  Upload,\r\n  message,\r\n  Switch,\r\n  Select,\r\n  Button,\r\n  notification,\r\n  Modal,\r\n  Empty,\r\n  Form,\r\n} from 'antd';\r\n\r\nimport {\r\n  FileOutlined,\r\n  InboxOutlined,\r\n  RadiusUpleftOutlined,\r\n  RadiusUprightOutlined,\r\n  RadiusBottomleftOutlined,\r\n  RadiusBottomrightOutlined,\r\n  DeleteOutlined,\r\n  FileAddOutlined,\r\n  CheckCircleOutlined,\r\n  InfoCircleOutlined,\r\n} from '@ant-design/icons';\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport DatePicker from '../../components/Field/DatePicker';\r\n\r\nconst { Option } = Select;\r\n\r\nconst validationSchema = Yup.object().shape({});\r\n\r\nconst initialValues = {\r\n  firstName: '',\r\n  lastName: '',\r\n  address: '',\r\n  salary: null,\r\n  designation: '',\r\n  fatherName: '',\r\n  motherName: '',\r\n  NID: '',\r\n  phone: '',\r\n  email: '',\r\n  additionalInfo: '',\r\n  joiningDate: '',\r\n};\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n  notification.success({\r\n    message: message || 'Staff Updated',\r\n    description: '',\r\n    icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n  });\r\n};\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n  notification.error({\r\n    message: message || 'Something Went Wrong',\r\n    description: '',\r\n    icon: <InfoCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n  });\r\n};\r\n\r\ninterface Props {\r\n  addNewCategoryVisible: any;\r\n  setAddNewCategoryVisible: any;\r\n  setCustomer?: any;\r\n  customer?: any;\r\n}\r\n\r\nconst StaffQuickEdit = ({\r\n  addNewCategoryVisible,\r\n  setAddNewCategoryVisible,\r\n  customer,\r\n  setCustomer,\r\n}: Props) => {\r\n  const [addCustomerState, handleAddCustomerFetch] = useHandleFetch(\r\n    {},\r\n    'updateStaff'\r\n  );\r\n  const [selectedCountryValue, setselectedCountryValue] = useState('');\r\n  const [selectedCityValue, setselectedCityValue] = useState('');\r\n\r\n  const [countryOptions, setcountryOptions] = useState([]);\r\n  const [cityOptions, setcityOptions] = useState([]);\r\n\r\n  const [countryListState, handleCountryListFetch] = useHandleFetch(\r\n    [],\r\n    'countryList'\r\n  );\r\n\r\n  const [cityListState, handleCityListFetch] = useHandleFetch([], 'cityList');\r\n  const [time, setTimeFeild] = useState('');\r\n\r\n  useEffect(() => {\r\n    if (customer && Object.keys(customer).length > 0) {\r\n      setTimeFeild(customer['joiningDate']);\r\n    }\r\n  }, [customer]);\r\n\r\n  const handleSubmit = async (values: any, actions: any) => {\r\n    const addCustomerRes = await handleAddCustomerFetch({\r\n      urlOptions: {\r\n        placeHolders: {\r\n          id: customer.id,\r\n        },\r\n      },\r\n      body: {\r\n        phone: values.phone,\r\n        email: values.email.trim(),\r\n        address: values.address.trim(),\r\n        firstName: values.firstName.trim(),\r\n        lastName: values.lastName.trim(),\r\n        additionalInfo: values.additionalInfo.trim(),\r\n        NID: values.NID,\r\n        fatherName: values.fatherName.trim(),\r\n        motherName: values.motherName.trim(),\r\n        salary: values.salary,\r\n        designation: values.designation.trim(),\r\n        joiningDate: time,\r\n      },\r\n    });\r\n\r\n    // @ts-ignore\r\n    if (addCustomerRes && addCustomerRes.status === 'ok') {\r\n      openSuccessNotification();\r\n\r\n      setCustomer({\r\n        ...addCustomerRes,\r\n        name: addCustomerRes.firstName + ' ' + addCustomerRes.lastName,\r\n      });\r\n\r\n      setAddNewCategoryVisible(false);\r\n      actions.resetForm();\r\n    } else {\r\n      openErrorNotification();\r\n    }\r\n\r\n    actions.setSubmitting(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!addCustomerState['isLoading']) {\r\n      const error = addCustomerState['error'];\r\n      if (error['isError'] && Object.keys(error['error']).length > 0) {\r\n        if (error['error']['registerError']) {\r\n          // setServerErrors(error['error']['registerError']);\r\n        } else if (error['error']['checkoutError']) {\r\n          // setServerErrors(error['error']['checkoutError']);\r\n        } else {\r\n          // setServerErrors(error['error']);\r\n        }\r\n\r\n        const errors =\r\n          Object.values(error['error']).length > 0\r\n            ? Object.values(error['error'])\r\n            : [];\r\n        errors.forEach((err, i) => {\r\n          if (typeof err === 'string') {\r\n            openErrorNotification(err);\r\n          } else if (typeof err === 'object') {\r\n            if (err && Object.keys(err).length > 0) {\r\n              const errs = Object.values(err);\r\n              errs.forEach((err) => {\r\n                openErrorNotification(err);\r\n              });\r\n            }\r\n          }\r\n        });\r\n      }\r\n    }\r\n\r\n    if (\r\n      !addCustomerState['isLoading'] &&\r\n      Object.keys(addCustomerState.data).length > 0\r\n    ) {\r\n      if (addCustomerState['data']['status'] === 'ok') {\r\n        // openSuccessNotification('Order Created Successfully');\r\n        // history.push({\r\n        //   pathname: '/orderDetails',\r\n        //   state: checkoutState['data']\r\n        // })\r\n        // clearCart();\r\n        // setIsModalShown(true);\r\n      }\r\n    }\r\n  }, [addCustomerState]);\r\n\r\n  const onChangeCity = (value) => {\r\n    setselectedCityValue(value);\r\n  };\r\n\r\n  const onChangeCountry = (value) => {\r\n    setselectedCountryValue(value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const setCountries = async () => {\r\n      const CountryListRes = await handleCountryListFetch({});\r\n\r\n      // @ts-ignore\r\n      if (CountryListRes && CountryListRes.length > 0) {\r\n        // @ts-ignore\r\n        const countryOptions = CountryListRes.map((country) => {\r\n          return {\r\n            value: country.name,\r\n            name: country.name,\r\n          };\r\n        });\r\n        setcountryOptions(countryOptions);\r\n      }\r\n    };\r\n\r\n    setCountries();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const setCities = async () => {\r\n      const cityListRes = await handleCityListFetch({\r\n        urlOptions: {\r\n          placeHolders: {\r\n            country: selectedCountryValue,\r\n          },\r\n        },\r\n      });\r\n\r\n      // @ts-ignore\r\n      if (cityListRes && cityListRes.length > 0) {\r\n        // @ts-ignore\r\n        const cityOptions = cityListRes.map((city) => {\r\n          return {\r\n            value: city.name,\r\n            name: city.name,\r\n          };\r\n        });\r\n        setcityOptions(cityOptions);\r\n      }\r\n    };\r\n\r\n    setCities();\r\n  }, [selectedCountryValue]);\r\n\r\n  const handleCancel = (e: any) => {\r\n    setAddNewCategoryVisible(false);\r\n  };\r\n\r\n  const getisSubmitButtonDisabled = (values, isValid) => {\r\n    if (\r\n      !isValid ||\r\n      !values.firstName ||\r\n      !values.lastName ||\r\n      !values.password ||\r\n      !values.phone ||\r\n      !values.address1\r\n    ) {\r\n      return true;\r\n    }\r\n    return false;\r\n  };\r\n\r\n  console.log('cityListState', cityListState);\r\n  const handleTimeChange = (date, dateString) => {\r\n    setTimeFeild(dateString);\r\n    // console.log('date', date, dateString);\r\n  };\r\n  return (\r\n    <Formik\r\n      onSubmit={(values, actions) => handleSubmit(values, actions)}\r\n      validationSchema={validationSchema}\r\n      validateOnBlur={false}\r\n      enableReinitialize={true}\r\n      initialValues={{ ...initialValues, ...customer }}\r\n    >\r\n      {({\r\n        handleChange,\r\n        values,\r\n        handleSubmit,\r\n        errors,\r\n        isValid,\r\n        isSubmitting,\r\n        touched,\r\n        handleBlur,\r\n        setFieldTouched,\r\n        handleReset,\r\n      }) => (\r\n        <>\r\n          <Modal\r\n            style={{\r\n              top: '40px',\r\n            }}\r\n            bodyStyle={{\r\n              margin: '0',\r\n              padding: '10px',\r\n            }}\r\n            title='Add New Staff'\r\n            visible={addNewCategoryVisible}\r\n            onOk={(e: any) => handleSubmit(e)}\r\n            onCancel={handleCancel}\r\n            okText='Update'\r\n            okButtonProps={{\r\n              loading: isSubmitting,\r\n              htmlType: 'submit',\r\n              //   disabled: getisSubmitButtonDisabled(values, isValid),\r\n            }}\r\n          >\r\n            <div className='dubbleRowInputs'>\r\n              <div className='dubbleRowInputs__item'>\r\n                <Input\r\n                  label='First Name *'\r\n                  value={values.firstName}\r\n                  name='firstName'\r\n                  isError={\r\n                    (touched.firstName && errors.firstName) ||\r\n                    (!isSubmitting &&\r\n                      addCustomerState.error['error']['firstName'])\r\n                  }\r\n                  errorString={\r\n                    (touched.firstName && errors.firstName) ||\r\n                    (!isSubmitting &&\r\n                      addCustomerState.error['error']['firstName'])\r\n                  }\r\n                  onChange={(e: any) => {\r\n                    handleChange(e);\r\n                    setFieldTouched('firstName');\r\n                  }}\r\n                />\r\n              </div>\r\n              <div className='dubbleRowInputs__item'>\r\n                <Input\r\n                  label='Last Name'\r\n                  value={values.lastName}\r\n                  name='lastName'\r\n                  isError={\r\n                    (touched.lastName && errors.lastName) ||\r\n                    (!isSubmitting &&\r\n                      addCustomerState.error['error']['lastName'])\r\n                  }\r\n                  errorString={\r\n                    (touched.lastName && errors.lastName) ||\r\n                    (!isSubmitting &&\r\n                      addCustomerState.error['error']['lastName'])\r\n                  }\r\n                  onChange={(e: any) => {\r\n                    handleChange(e);\r\n                    setFieldTouched('lastName');\r\n                  }}\r\n                />\r\n              </div>\r\n            </div>\r\n\r\n            <div className='dubbleRowInputs'>\r\n              <div className='dubbleRowInputs__item'>\r\n                <Input\r\n                  label='Designation *'\r\n                  value={values.designation}\r\n                  name='designation'\r\n                  isError={\r\n                    (touched.designation && errors.designation) ||\r\n                    (!isSubmitting &&\r\n                      addCustomerState.error['error']['designation'])\r\n                  }\r\n                  errorString={\r\n                    (touched.designation && errors.designation) ||\r\n                    (!isSubmitting &&\r\n                      addCustomerState.error['error']['designation'])\r\n                  }\r\n                  onChange={(e: any) => {\r\n                    handleChange(e);\r\n                    setFieldTouched('designation');\r\n                  }}\r\n                />\r\n              </div>\r\n              <div className='dubbleRowInputs__item'>\r\n                <Input\r\n                  min={0}\r\n                  type={'number'}\r\n                  label='Salary *'\r\n                  value={values.salary}\r\n                  name='salary'\r\n                  isError={\r\n                    (touched.salary && errors.salary) ||\r\n                    (!isSubmitting && addCustomerState.error['error']['salary'])\r\n                  }\r\n                  errorString={\r\n                    (touched.salary && errors.salary) ||\r\n                    (!isSubmitting && addCustomerState.error['error']['salary'])\r\n                  }\r\n                  onChange={(e: any) => {\r\n                    handleChange(e);\r\n                    setFieldTouched('salary');\r\n                  }}\r\n                />\r\n              </div>\r\n            </div>\r\n\r\n            <div className='dubbleRowInputs'>\r\n              <div className='dubbleRowInputs__item'>\r\n                <Input\r\n                  label='Phone *'\r\n                  value={values.phone}\r\n                  name='phone'\r\n                  isError={\r\n                    (touched.phone && errors.phone) ||\r\n                    (!isSubmitting && addCustomerState.error['error']['phone'])\r\n                  }\r\n                  errorString={\r\n                    (touched.phone && errors.phone) ||\r\n                    (!isSubmitting && addCustomerState.error['error']['phone'])\r\n                  }\r\n                  onChange={(e: any) => {\r\n                    handleChange(e);\r\n                    setFieldTouched('phone');\r\n                  }}\r\n                />\r\n              </div>\r\n              <div className='dubbleRowInputs__item'>\r\n                <Input\r\n                  label='NID'\r\n                  value={values.NID}\r\n                  name='NID'\r\n                  isError={\r\n                    (touched.NID && errors.NID) ||\r\n                    (!isSubmitting && addCustomerState.error['error']['NID'])\r\n                  }\r\n                  errorString={\r\n                    (touched.NID && errors.NID) ||\r\n                    (!isSubmitting && addCustomerState.error['error']['NID'])\r\n                  }\r\n                  onChange={(e: any) => {\r\n                    handleChange(e);\r\n                    setFieldTouched('NID');\r\n                  }}\r\n                />\r\n              </div>\r\n            </div>\r\n\r\n            <div className='dubbleRowInputs'>\r\n              <div className='dubbleRowInputs__item'>\r\n                <Input\r\n                  label='Father Name'\r\n                  value={values.fatherName}\r\n                  name='fatherName'\r\n                  isError={\r\n                    (touched.fatherName && errors.fatherName) ||\r\n                    (!isSubmitting &&\r\n                      addCustomerState.error['error']['fatherName'])\r\n                  }\r\n                  errorString={\r\n                    (touched.fatherName && errors.fatherName) ||\r\n                    (!isSubmitting &&\r\n                      addCustomerState.error['error']['fatherName'])\r\n                  }\r\n                  onChange={(e: any) => {\r\n                    handleChange(e);\r\n                    setFieldTouched('fatherName');\r\n                  }}\r\n                />\r\n              </div>\r\n              <div className='dubbleRowInputs__item'>\r\n                <Input\r\n                  label='Mother Name'\r\n                  value={values.motherName}\r\n                  name='motherName'\r\n                  isError={\r\n                    (touched.motherName && errors.motherName) ||\r\n                    (!isSubmitting &&\r\n                      addCustomerState.error['error']['motherName'])\r\n                  }\r\n                  errorString={\r\n                    (touched.motherName && errors.motherName) ||\r\n                    (!isSubmitting &&\r\n                      addCustomerState.error['error']['motherName'])\r\n                  }\r\n                  onChange={(e: any) => {\r\n                    handleChange(e);\r\n                    setFieldTouched('motherName');\r\n                  }}\r\n                />\r\n              </div>\r\n            </div>\r\n\r\n            <div className='dubbleRowInputs'>\r\n              <div className='dubbleRowInputs__item'>\r\n                <Input\r\n                  label='Email'\r\n                  value={values.email}\r\n                  name='email'\r\n                  isError={\r\n                    (touched.email && errors.email) ||\r\n                    (!isSubmitting && addCustomerState.error['error']['email'])\r\n                  }\r\n                  errorString={\r\n                    (touched.email && errors.email) ||\r\n                    (!isSubmitting && addCustomerState.error['error']['email'])\r\n                  }\r\n                  onChange={(e: any) => {\r\n                    handleChange(e);\r\n                    setFieldTouched('email');\r\n                  }}\r\n                />\r\n              </div>\r\n\r\n              <div className='dubbleRowInputs__item'>\r\n                <DatePicker\r\n                  date={time}\r\n                  placeholder='10/20/2020'\r\n                  label='joining Date'\r\n                  onChange={handleTimeChange}\r\n                />\r\n              </div>\r\n            </div>\r\n\r\n            <div className='dubbleRowInputs'>\r\n              <div className='dubbleRowInputs__item'>\r\n                <Input\r\n                  label='Address'\r\n                  value={values.address}\r\n                  name='address'\r\n                  isError={\r\n                    (touched.address && errors.address) ||\r\n                    (!isSubmitting &&\r\n                      addCustomerState.error['error']['address'])\r\n                  }\r\n                  errorString={\r\n                    (touched.address && errors.address) ||\r\n                    (!isSubmitting &&\r\n                      addCustomerState.error['error']['address'])\r\n                  }\r\n                  onChange={(e: any) => {\r\n                    handleChange(e);\r\n                    setFieldTouched('address');\r\n                  }}\r\n                />\r\n              </div>\r\n\r\n              <div className='dubbleRowInputs__item'>\r\n                <Input\r\n                  label='Additional Info'\r\n                  value={values.additionalInfo}\r\n                  name='additionalInfo'\r\n                  isError={\r\n                    (touched.additionalInfo && errors.additionalInfo) ||\r\n                    (!isSubmitting &&\r\n                      addCustomerState.error['error']['additionalInfo'])\r\n                  }\r\n                  errorString={\r\n                    (touched.additionalInfo && errors.additionalInfo) ||\r\n                    (!isSubmitting &&\r\n                      addCustomerState.error['error']['additionalInfo'])\r\n                  }\r\n                  onChange={(e: any) => {\r\n                    handleChange(e);\r\n                    setFieldTouched('additionalInfo');\r\n                  }}\r\n                />\r\n              </div>\r\n            </div>\r\n          </Modal>\r\n        </>\r\n      )}\r\n    </Formik>\r\n  );\r\n};\r\n\r\nexport default StaffQuickEdit;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useParams, useHistory } from 'react-router';\r\n\r\n// import hooks\r\nimport { useHandleFetch } from '../../hooks';\r\n\r\n// import lib\r\nimport {\r\n  FileOutlined,\r\n  InboxOutlined,\r\n  RadiusUpleftOutlined,\r\n  RadiusUprightOutlined,\r\n  RadiusBottomleftOutlined,\r\n  RadiusBottomrightOutlined,\r\n  PlusOutlined,\r\n  DeleteOutlined,\r\n  EditOutlined,\r\n  CheckCircleOutlined,\r\n} from '@ant-design/icons';\r\n\r\nimport {\r\n  Skeleton,\r\n  Empty,\r\n  Popconfirm,\r\n  Upload,\r\n  message,\r\n  Switch,\r\n  Select,\r\n  Button,\r\n  notification,\r\n  Table,\r\n  Space,\r\n  Input as CoolInput,\r\n  Tooltip,\r\n  Modal,\r\n} from 'antd';\r\n\r\n// import components\r\nimport { DataTableSkeleton } from '../../components/Placeholders';\r\nimport StaffEdit from './StaffEdit';\r\nimport moment from 'moment';\r\n\r\nconst { Column, ColumnGroup } = Table;\r\nconst { Search } = CoolInput;\r\n\r\ninterface Props {\r\n  productRecord?: any;\r\n}\r\n\r\nconst NewBrandDetail = (props: Props) => {\r\n  const [tagDetailState, handleTagDetailFetch] = useHandleFetch(\r\n    {},\r\n    'staffDetail'\r\n  );\r\n  const [tagProductsState, handleTagProductsFetch] = useHandleFetch(\r\n    {},\r\n    'tagProducts'\r\n  );\r\n  const [tagEditVisible, setTagEditVisible] = useState(false);\r\n\r\n  const params = useParams();\r\n  const tagId = params['id'];\r\n  const [customerDetail, setCustomerDetail] = useState({});\r\n\r\n  useEffect(() => {\r\n    const getBrandDetail = async () => {\r\n      const res = await handleTagDetailFetch({\r\n        urlOptions: {\r\n          placeHolders: {\r\n            id: tagId,\r\n          },\r\n        },\r\n      });\r\n\r\n      // @ts-ignore\r\n      if (res) {\r\n        // @ts-ignore\r\n        setCustomerDetail(res);\r\n      }\r\n    };\r\n\r\n    getBrandDetail();\r\n  }, [tagId]);\r\n\r\n  useEffect(() => {\r\n    const getTagProducts = async () => {\r\n      await handleTagProductsFetch({\r\n        urlOptions: {\r\n          placeHolders: {\r\n            id: tagId,\r\n          },\r\n        },\r\n      });\r\n    };\r\n\r\n    getTagProducts();\r\n  }, [tagId]);\r\n\r\n  console.log('tagProductsState', tagProductsState);\r\n\r\n  console.log('brandParams', params);\r\n  console.log('staffDetail', tagDetailState);\r\n\r\n  return (\r\n    <div className='brandDetailContainer'>\r\n      <div className='brandDetailContainer__heading'>\r\n        <h3>Staff Detail</h3>\r\n\r\n        {tagDetailState.done &&\r\n          customerDetail &&\r\n          Object.keys(customerDetail).length > 0 && (\r\n            <>\r\n              <StaffEdit\r\n                addNewCategoryVisible={tagEditVisible}\r\n                setAddNewCategoryVisible={setTagEditVisible}\r\n                customer={customerDetail}\r\n                setCustomer={setCustomerDetail}\r\n              />\r\n              <Button\r\n                onClick={() => setTagEditVisible(true)}\r\n                type='link'\r\n                icon={<EditOutlined />}\r\n              >\r\n                Edit\r\n              </Button>\r\n            </>\r\n          )}\r\n      </div>\r\n      <Skeleton paragraph={{ rows: 2 }} loading={tagDetailState.isLoading}>\r\n        {tagDetailState.done &&\r\n          customerDetail &&\r\n          !(Object.keys(customerDetail).length > 0) && (\r\n            <Empty\r\n              description='No Staffs found'\r\n              image={Empty.PRESENTED_IMAGE_SIMPLE}\r\n            />\r\n          )}\r\n\r\n        {tagDetailState.done &&\r\n          customerDetail &&\r\n          Object.keys(customerDetail).length > 0 && (\r\n            <div className='brandDetailContainer__header'>\r\n              <div className='brandDetailContainer__header-info'>\r\n                <h2>{customerDetail['name']}</h2>\r\n                <h3>{customerDetail['description']}</h3>\r\n                {customerDetail['designation'] && (\r\n                  <h3>\r\n                    DESIGNATION:\r\n                    <span>{customerDetail['designation']}</span>\r\n                  </h3>\r\n                )}\r\n                {customerDetail['salary'] && (\r\n                  <h3>\r\n                    SALARY:\r\n                    <span>{customerDetail['salary']}</span>\r\n                  </h3>\r\n                )}\r\n\r\n                {customerDetail['NID'] && (\r\n                  <h3>\r\n                    NID:\r\n                    <span>{customerDetail['NID']}</span>\r\n                  </h3>\r\n                )}\r\n\r\n                {customerDetail['joiningDate'] && (\r\n                  <h3>\r\n                    JOINED:\r\n                    <span>\r\n                      {customerDetail['joiningDate'] &&\r\n                        moment(customerDetail['joiningDate']).format(\r\n                          'MMMM Do YYYY, h:mm a'\r\n                        )}\r\n                    </span>\r\n                  </h3>\r\n                )}\r\n\r\n                {customerDetail['fatherName'] && (\r\n                  <h3>\r\n                    FATHER'S NAME:\r\n                    <span>{customerDetail['fatherName']}</span>\r\n                  </h3>\r\n                )}\r\n                {customerDetail['motherName'] && (\r\n                  <h3>\r\n                    MOTHER'S NAME:\r\n                    <span>{customerDetail['motherName']}</span>\r\n                  </h3>\r\n                )}\r\n\r\n                {customerDetail['phone'] && (\r\n                  <h3>\r\n                    PHONE:\r\n                    <span>{customerDetail['phone']}</span>\r\n                  </h3>\r\n                )}\r\n                {customerDetail['email'] && (\r\n                  <h3>\r\n                    EMAIL:\r\n                    <span>{customerDetail['email']}</span>\r\n                  </h3>\r\n                )}\r\n              </div>\r\n            </div>\r\n          )}\r\n      </Skeleton>\r\n\r\n      {/* <div className='brandDetailContainer__heading'>\r\n                <h3>\r\n                    Products\r\n                </h3>\r\n            </div>\r\n            <div className='brandDetailContainer__body'>\r\n                {tagProductsState.isLoading && <DataTableSkeleton />}\r\n                {tagProductsState.done && !(tagProductsState.data.length > 0) && (\r\n                    <div style={{\r\n                        marginTop: '100px'\r\n                    }}>\r\n                        <Empty description='No Orderss exists for this Customer ' image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n                    </div>\r\n                )}\r\n\r\n                {tagProductsState.done && tagProductsState.data && tagProductsState.data.length > 0 && (\r\n                    <>\r\n                        <Table\r\n                            style={{\r\n                                paddingTop: '10px',\r\n                                borderRadius: '5px !important',\r\n                                overflow: 'hidden',\r\n                                boxShadow: '0 0.125rem 0.625rem rgba(227, 231, 250, 0.3), 0 0.0625rem 0.125rem rgba(206, 220, 233, 0.4)'\r\n                            }}\r\n                            // expandable={{\r\n                            //     expandedRowRender: record => <p style={{ margin: 0 }}>{record.name}</p>,\r\n                            //     rowExpandable: record => record.name !== 'Not Expandable',\r\n                            //   }}\r\n                            // bordered={true}\r\n                            size='small'\r\n                            // pagination={false}\r\n                            dataSource={tagProductsState.data}\r\n                            tableLayout={'auto'}\r\n                            onHeaderRow={column => {\r\n                                return {\r\n                                    style: {\r\n                                        color: 'red !important'\r\n                                    }\r\n\r\n                                };\r\n                            }}\r\n                        >\r\n                            <Column\r\n                                title=\"\"\r\n                                dataIndex=\"cover\"\r\n                                key=\"id\"\r\n                                width={'80px'}\r\n\r\n                                className='classnameofthecolumn'\r\n\r\n                                render={(cover, record: any) => (\r\n                                    <>\r\n                                        <img\r\n                                            onClick={() => {\r\n                                                history.push(`/admin/product/${record.id}`)\r\n                                            }}\r\n                                            src={cover} alt='cover img' style={{\r\n                                                height: '40px',\r\n                                                width: '40px',\r\n                                                objectFit: \"contain\",\r\n                                                borderRadius: '3px',\r\n                                                cursor: 'pointer'\r\n                                            }} />\r\n\r\n\r\n\r\n\r\n                                    </>\r\n                                )}\r\n                            />\r\n\r\n                            <Column\r\n                                title=\"Name\"\r\n                                dataIndex=\"name\"\r\n                                key=\"id\"\r\n                                className='classnameofthecolumn'\r\n                                render={(text, record: any) => (\r\n                                    <>\r\n                                        <h4\r\n                                            onClick={() => {\r\n                                                history.push(`/admin/product/${record.id}`)\r\n                                            }}\r\n                                            style={{\r\n                                                fontWeight: 400,\r\n                                                color: '#555',\r\n                                                cursor: 'pointer'\r\n\r\n                                            }}>\r\n                                            {text}\r\n                                        </h4>\r\n\r\n\r\n                                    </>\r\n                                )}\r\n\r\n                            />\r\n\r\n                            <Column\r\n                                title=\"Offer Price\"\r\n                                dataIndex=\"offerPrice\"\r\n                                key=\"id\"\r\n                                className='classnameofthecolumn'\r\n\r\n                            />\r\n\r\n\r\n                            <Column\r\n                                title=\"Price\"\r\n                                dataIndex=\"price\"\r\n                                key=\"id\"\r\n                                className='classnameofthecolumn'\r\n\r\n                            />\r\n\r\n                        </Table>\r\n                    </>\r\n                )}\r\n\r\n            </div> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NewBrandDetail;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { AutoComplete, Tooltip } from 'antd';\r\n\r\nimport InputSmall from '../../../components/Field/InputSmall';\r\n\r\n// import comp;onent\r\nimport Sfaffid from './Sfaffid';\r\n\r\nimport { useFetch } from '../../../hooks';\r\nimport {\r\n  DeleteOutlined,\r\n  FileAddOutlined,\r\n  FileImageFilled,\r\n  PlusOutlined,\r\n  CheckCircleOutlined,\r\n  CloseOutlined,\r\n  CheckOutlined,\r\n  InfoCircleOutlined,\r\n  DeleteColumnOutlined,\r\n} from '@ant-design/icons';\r\n\r\nconst Complete = ({\r\n  setItemsList,\r\n  itemsList,\r\n  componentItem,\r\n  brandState,\r\n  index,\r\n}) => {\r\n  const [brandId, setBrandId] = useState('');\r\n\r\n  const handleComponentItemsChange = (e) => {\r\n    const name = e.target.name;\r\n    const value = e.target.value;\r\n\r\n    const updatedValue = {\r\n      ...componentItem,\r\n      [name]: value,\r\n      id: componentItem.id,\r\n    };\r\n\r\n    const positionInAttribute = () => {\r\n      return itemsList.map((item) => item.id).indexOf(componentItem.id);\r\n    };\r\n\r\n    const index = positionInAttribute();\r\n\r\n    const updateAttributeList = [\r\n      ...itemsList.slice(0, index),\r\n      updatedValue,\r\n      ...itemsList.slice(index + 1),\r\n    ];\r\n    setItemsList(updateAttributeList);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const updatedValue = {\r\n      ...componentItem,\r\n      _id: brandId,\r\n      id: componentItem.id,\r\n    };\r\n\r\n    const positionInAttribute = () => {\r\n      return itemsList.map((item) => item.id).indexOf(componentItem.id);\r\n    };\r\n\r\n    const index = positionInAttribute();\r\n\r\n    const updateAttributeList = [\r\n      ...itemsList.slice(0, index),\r\n      updatedValue,\r\n      ...itemsList.slice(index + 1),\r\n    ];\r\n    setItemsList(updateAttributeList);\r\n  }, [brandId]);\r\n\r\n  const handleAttributeDelete = () => {\r\n    const updateComponentList = itemsList.filter(\r\n      (item) => item.id !== componentItem.id\r\n    );\r\n    setItemsList(updateComponentList);\r\n  };\r\n\r\n  console.log('componentItem322',   \r\n  componentItem);\r\n  return (\r\n    <>\r\n      <div className='staffComponentItemsContainer__item'>\r\n        <div\r\n          className='staffComponentItemsContainer__name'\r\n          style={{\r\n            marginTop: index === 0 ? '-5px' : '-35px',\r\n          }}\r\n        >\r\n          {!index && (\r\n            <h3 className='inputFieldLabel-small' style={{}}>\r\n              Name\r\n            </h3>\r\n          )}\r\n\r\n          <h4\r\n            style={{\r\n              margin: 0,\r\n              padding: 0,\r\n              textTransform: 'uppercase',\r\n              fontSize: '13px',\r\n              marginTop: '33px',\r\n            }}\r\n          >\r\n            {componentItem.name}\r\n          </h4>\r\n        </div>\r\n\r\n        <div\r\n          style={{\r\n            marginTop: index === 0 ? '-5px' : '-35px',\r\n          }}\r\n          className='staffComponentItemsContainer__salary'\r\n        >\r\n          {!index && (\r\n            <h3 className='inputFieldLabel-small' style={{}}>\r\n              Salary\r\n            </h3>\r\n          )}\r\n\r\n          <h5\r\n            style={{\r\n              margin: 0,\r\n              padding: 0,\r\n              fontSize: '12px',\r\n              marginTop: '33px',\r\n            }}\r\n          >\r\n            {componentItem.salary}\r\n          </h5>\r\n        </div>\r\n\r\n        <div className='staffComponentItemsContainer__input'>\r\n          {!index && (\r\n            <h3\r\n              className='inputFieldLabel-small'\r\n              style={{\r\n                marginBottom: '20px',\r\n              }}\r\n            >\r\n              Bonus\r\n            </h3>\r\n          )}\r\n          <div>\r\n            <InputSmall\r\n              type='number'\r\n              label={''}\r\n              value={componentItem.title}\r\n              name='bonus'\r\n              onChange={handleComponentItemsChange}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className='staffComponentItemsContainer__input'>\r\n          {!index && (\r\n            <h3\r\n              className='inputFieldLabel-small'\r\n              style={{\r\n                marginBottom: '20px',\r\n              }}\r\n            >\r\n              Convince\r\n            </h3>\r\n          )}\r\n\r\n          <InputSmall\r\n            type='number'\r\n            label={''}\r\n            value={componentItem.text}\r\n            name='convince'\r\n            onChange={handleComponentItemsChange}\r\n          />\r\n        </div>\r\n        <div className='staffComponentItemsContainer__input'>\r\n          {!index && (\r\n            <h3\r\n              className='inputFieldLabel-small'\r\n              style={{\r\n                marginBottom: '20px',\r\n              }}\r\n            >\r\n              Extra\r\n            </h3>\r\n          )}\r\n\r\n          <InputSmall\r\n            type='number'\r\n            label={''}\r\n            value={componentItem.target}\r\n            name='extra'\r\n            onChange={handleComponentItemsChange}\r\n          />\r\n        </div>\r\n        <div className='staffComponentItemsContainer__input'>\r\n          {!index && (\r\n            <h3\r\n              className='inputFieldLabel-small'\r\n              style={{\r\n                marginBottom: '20px',\r\n              }}\r\n            >\r\n              Negative\r\n            </h3>\r\n          )}\r\n\r\n          <InputSmall\r\n            type='number'\r\n            label={''}\r\n            value={componentItem.target}\r\n            name='negative'\r\n            onChange={handleComponentItemsChange}\r\n          />\r\n        </div>\r\n\r\n        <div\r\n          onClick={() => handleAttributeDelete()}\r\n          className='staffComponentItemsContainer__input'\r\n          style={{\r\n            marginTop: index === 0 ? '15px' : '-10px',\r\n          }}\r\n        >\r\n          <span\r\n            style={{\r\n              color: 'rgba(255, 166, 0, 0.733)',\r\n              cursor: 'pointer',\r\n            }}\r\n          >\r\n            <DeleteOutlined />\r\n          </span>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Complete;\r\n","// @ts-nocheck\r\nimport React, { useState, useEffect } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\nimport { useHandleFetch } from '../../../hooks';\r\n// import third party ui lib\r\nimport {\r\n  Upload,\r\n  message,\r\n  Switch,\r\n  Select,\r\n  notification,\r\n  Modal,\r\n  Form,\r\n  Empty,\r\n  Button,\r\n  Spin,\r\n} from 'antd';\r\n\r\nimport {\r\n  FileOutlined,\r\n  InboxOutlined,\r\n  FileAddOutlined,\r\n  DeleteOutlined,\r\n  CheckCircleOutlined,\r\n  InfoCircleOutlined,\r\n  PlusOutlined,\r\n  UsergroupAddOutlined,\r\n  CheckOutlined,\r\n} from '@ant-design/icons';\r\n\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../../components/Field/Input';\r\nimport TextArea from '../../../components/Field/TextArea';\r\nimport MediaLibrary from '../../../components/MediaLibrary';\r\nimport ComponentItem from './ComponentItem';\r\nimport { DatePicker } from 'antd';\r\nimport moment from 'moment';\r\nconst validationSchema = Yup.object().shape({\r\n  // groupName: Yup.string()\r\n  //   .label('Name')\r\n  //   .required('Name is required')\r\n  //   .min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n  notification.success({\r\n    message: message || 'Salary report Created',\r\n    description: '',\r\n    icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n  });\r\n};\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n  notification.success({\r\n    message: message || 'Something Went Wrong',\r\n    description: '',\r\n    icon: <InfoCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n  });\r\n};\r\n\r\nconst initialValues = {\r\n  groupName: '',\r\n  items: [],\r\n};\r\n\r\ninterface Props {\r\n  addNewCategoryVisible?: any;\r\n  setAddNewCategoryVisible?: any;\r\n  componentList?: any;\r\n  setComponentList?: any;\r\n}\r\n\r\nconst ModalChildComponent = ({\r\n  addNewCategoryVisible,\r\n  setAddNewCategoryVisible,\r\n  componentList,\r\n  setComponentList,\r\n}) => {\r\n  const [addComponentState, handleAddComponentFetch] = useHandleFetch(\r\n    {},\r\n    'generateSalaryReport'\r\n  );\r\n\r\n  const [brandState, handleTagListFetch] = useHandleFetch({}, 'staffList');\r\n\r\n  useEffect(() => {\r\n    const setBrands = async () => {\r\n      const brandListRes = await handleTagListFetch({});\r\n    };\r\n    setBrands();\r\n  }, []);\r\n\r\n  const [myImages, setmyImages] = useState(false);\r\n  const [itemsList, setItemsList] = useState([]);\r\n  const [time, setTimeFeild] = useState('');\r\n  const [month, setMonthFeild] = useState('');\r\n\r\n  console.log('salaryReportItemList', itemsList);\r\n\r\n  const handleSubmit = async (values: any, actions: any) => {\r\n    const convertedYear = month ? month.split('-')[0] : '';\r\n    const convertedMonth = month\r\n      ? month.split('-')[1] &&\r\n        month.split('-')[1][0] &&\r\n        month.split('-')[1][0] === '0'\r\n        ? month.split('-')[1][1]\r\n        : month.split('-')[1]\r\n      : '';\r\n    const convertedStaffs =\r\n      itemsList && itemsList.length > 0\r\n        ? itemsList.map((item) => {\r\n            return {\r\n              ...item,\r\n              bonus: item.bonus ? +item.bonus : 0,\r\n              convince: item.convince ? +item.convince : 0,\r\n              extra: item.extra ? +item.extra : 0,\r\n              negative: item.negative ? +item.negative : 0,\r\n              id: `${itemsList.length}`,\r\n            };\r\n          })\r\n        : [];\r\n    const data = {\r\n      month: convertedMonth ? +convertedMonth : '',\r\n      year: convertedYear ? +convertedYear : '',\r\n      staff: convertedStaffs,\r\n    };\r\n    const addComponentRes = await handleAddComponentFetch({\r\n      body: data,\r\n    });\r\n\r\n    // @ts-ignore\r\n    if (addComponentRes && addComponentRes.status === 'ok') {\r\n      openSuccessNotification();\r\n      setComponentList([\r\n        {\r\n          id: addComponentRes['_id'] || '',\r\n          key: addComponentRes['_id'] || '',\r\n          // @ts-ignore\r\n          ...addComponentRes,\r\n        },\r\n        ...componentList,\r\n      ]);\r\n      actions.resetForm();\r\n      setItemsList([]);\r\n      setMonthFeild('');\r\n      setAddNewCategoryVisible(false);\r\n    } else {\r\n      openErrorNotification();\r\n    }\r\n\r\n    actions.setSubmitting(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!addComponentState['isLoading']) {\r\n      const error = addComponentState['error'];\r\n      if (error['isError'] && Object.keys(error['error']).length > 0) {\r\n        const errors =\r\n          Object.values(error['error']).length > 0\r\n            ? Object.values(error['error'])\r\n            : [];\r\n        errors.forEach((err, i) => {\r\n          if (typeof err === 'string') {\r\n            openErrorNotification(err);\r\n          } else if (typeof err === 'object') {\r\n            if (err && Object.keys(err).length > 0) {\r\n              const errs = Object.values(err);\r\n              errs.forEach((err) => {\r\n                openErrorNotification(err);\r\n              });\r\n            }\r\n          }\r\n        });\r\n      }\r\n    }\r\n  }, [addComponentState]);\r\n\r\n  const handleCancel = (e: any) => {\r\n    setAddNewCategoryVisible(false);\r\n  };\r\n\r\n  const getisSubmitButtonDisabled = (values, isValid) => {\r\n    if (!values.groupName) {\r\n      return true;\r\n    }\r\n    return false;\r\n  };\r\n\r\n  const handleAddComponentItem = () => {\r\n    setItemsList([\r\n      ...itemsList,\r\n      {\r\n        _id: `${Math.floor(100000 + Math.random() * 900000)}`,\r\n        bonus: null,\r\n        convince: null,\r\n        extra: null,\r\n        negative: null,\r\n        id: `${itemsList.length}`,\r\n      },\r\n    ]);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (brandState.done && brandState.data && brandState.data.length > 0) {\r\n      const items = brandState.data.map((staff) => {\r\n        return {\r\n          ...staff,\r\n          _id: staff._id,\r\n          bonus: staff.bonus,\r\n          convince: staff.convince,\r\n          extra: staff.extra,\r\n          negative: staff.negative,\r\n        };\r\n      });\r\n      setItemsList(items);\r\n    }\r\n  }, [brandState.data]);\r\n\r\n  const handleTimeChange = (date, dateString) => {\r\n    setTimeFeild(dateString);\r\n    // console.log('date', date, dateString);\r\n  };\r\n\r\n  const handleMonthChange = (date, dateString) => {\r\n    setMonthFeild(dateString);\r\n    // console.log('date', date, dateString);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Formik\r\n        onSubmit={(values, actions) => handleSubmit(values, actions)}\r\n        validationSchema={validationSchema}\r\n        validateOnBlur={false}\r\n        enableReinitialize={true}\r\n        initialValues={{ ...initialValues }}\r\n      >\r\n        {({\r\n          handleChange,\r\n          values,\r\n          handleSubmit,\r\n          errors,\r\n          isValid,\r\n          isSubmitting,\r\n          touched,\r\n          handleBlur,\r\n          setFieldTouched,\r\n          handleReset,\r\n        }) => (\r\n          <>\r\n            <Form.Item\r\n              validateStatus={\r\n                addComponentState.error['error']['year'] ||\r\n                addComponentState.error['error']['month']\r\n                  ? 'error'\r\n                  : ''\r\n              }\r\n              help={\r\n                addComponentState.error['error']['year'] ||\r\n                addComponentState.error['error']['month']\r\n              }\r\n              // noStyle={true}\r\n            >\r\n              <h3 className='inputFieldLabel'>Time</h3>\r\n              <DatePicker\r\n                picker='month'\r\n                placeholder={'2020, Jan'}\r\n                className='inputclassName'\r\n                style={{\r\n                  width: '100%',\r\n                  borderColor: '#eee',\r\n                }}\r\n                onChange={handleMonthChange}\r\n                {...(month && {\r\n                  defaultValue: moment(month),\r\n                })}\r\n              />\r\n            </Form.Item>\r\n\r\n            <div\r\n              style={{\r\n                marginTop: '25px',\r\n              }}\r\n            ></div>\r\n\r\n            {itemsList && itemsList[0] && (\r\n              <h3 className='addOrderContainer-sectionTitle'>\r\n                <span>\r\n                  <UsergroupAddOutlined />\r\n                </span>\r\n                Staffs\r\n              </h3>\r\n            )}\r\n\r\n            <div\r\n              style={{\r\n                marginTop: '15px',\r\n              }}\r\n            ></div>\r\n\r\n            <div className='staffComponentItemsContainer'>\r\n              {itemsList.map((itemComponent, index) => {\r\n                return (\r\n                  <ComponentItem\r\n                    index={index}\r\n                    brandState={brandState}\r\n                    componentItem={itemComponent}\r\n                    itemsList={itemsList}\r\n                    setItemsList={setItemsList}\r\n                  />\r\n                );\r\n              })}\r\n\r\n              {brandState.done && itemsList && !itemsList[0] && (\r\n                <div\r\n                  style={{\r\n                    marginTop: '5px',\r\n                    width: '100%',\r\n                    display: 'flex',\r\n                    justifyContent: 'center',\r\n                  }}\r\n                >\r\n                  <Empty\r\n                    description='No Staff'\r\n                    image={Empty.PRESENTED_IMAGE_SIMPLE}\r\n                  />\r\n                </div>\r\n              )}\r\n              {brandState.isLoading && (\r\n                <div\r\n                  style={{\r\n                    padding: '15px 0',\r\n                    width: '100%',\r\n                    height: '100%',\r\n                    display: 'flex',\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center',\r\n                  }}\r\n                >\r\n                  <Spin />\r\n                </div>\r\n              )}\r\n            </div>\r\n\r\n            <div\r\n              style={{\r\n                padding: '15px',\r\n                display: 'flex',\r\n                justifyContent: 'flex-end',\r\n              }}\r\n            >\r\n              <Button\r\n                style={{\r\n                  color: '#555',\r\n                  marginRight: '10px',\r\n                }}\r\n                className='btnPrimaryClassNameoutline-cancle'\r\n                onClick={() => setAddNewCategoryVisible(false)}\r\n                type='default'\r\n              >\r\n                Cancel\r\n              </Button>\r\n\r\n              <Button\r\n                className='btnPrimaryClassNameoutline'\r\n                onClick={handleSubmit}\r\n                loading={addComponentState.isLoading}\r\n                type='link'\r\n                icon={<CheckOutlined />}\r\n              >\r\n                Generate\r\n              </Button>\r\n            </div>\r\n          </>\r\n        )}\r\n      </Formik>\r\n    </>\r\n  );\r\n};\r\n\r\nconst AddNewBrand = ({\r\n  addNewCategoryVisible,\r\n  setAddNewCategoryVisible,\r\n  componentList,\r\n  setComponentList,\r\n}: Props) => {\r\n  const handleCancel = () => {\r\n    setAddNewCategoryVisible(false);\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      style={{\r\n        top: '40px',\r\n      }}\r\n      title='Add Salary Report'\r\n      visible={addNewCategoryVisible}\r\n      onCancel={handleCancel}\r\n      destroyOnClose={true}\r\n      footer={false}\r\n      width={'80vw'}\r\n      bodyStyle={{\r\n        margin: '0',\r\n        padding: '10px',\r\n      }}\r\n    >\r\n      <ModalChildComponent\r\n        addNewCategoryVisible={addNewCategoryVisible}\r\n        setAddNewCategoryVisible={setAddNewCategoryVisible}\r\n        componentList={componentList}\r\n        setComponentList={setComponentList}\r\n      />\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default AddNewBrand;\r\n","import React, { useState, useEffect } from 'react';\r\n\r\n// import third party ui lib\r\nimport {\r\n  Empty,\r\n  Popconfirm,\r\n  Upload,\r\n  message,\r\n  Switch,\r\n  Select,\r\n  Button,\r\n  notification,\r\n  Table,\r\n  Space,\r\n  Input as CoolInput,\r\n  Tooltip,\r\n  Modal,\r\n} from 'antd';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { useHistory } from 'react-router';\r\nimport moment from 'moment';\r\nimport { CSVLink } from 'react-csv';\r\n\r\nimport {\r\n  FileOutlined,\r\n  InboxOutlined,\r\n  RadiusUpleftOutlined,\r\n  RadiusUprightOutlined,\r\n  RadiusBottomleftOutlined,\r\n  RadiusBottomrightOutlined,\r\n  PlusOutlined,\r\n  DeleteOutlined,\r\n  EditOutlined,\r\n  CheckCircleOutlined,\r\n  DownloadOutlined,\r\n  InfoCircleOutlined,\r\n} from '@ant-design/icons';\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n/// import hooks\r\nimport { useFetch, useHandleFetch } from '../../../hooks';\r\n\r\n// import components\r\nimport Input from '../../../components/Field/Input';\r\nimport TextArea from '../../../components/Field/TextArea';\r\nimport { DataTableSkeleton } from '../../../components/Placeholders';\r\nimport AddNewExpense from './AddNewSalaryReport';\r\n\r\nconst months = [\r\n  'Jan',\r\n  'Feb',\r\n  'Mar',\r\n  'Apr',\r\n  'May',\r\n  'Jun',\r\n  'Jul',\r\n  'Aug',\r\n  'Sep',\r\n  'Oct',\r\n  'Nov',\r\n  'Dec',\r\n];\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n  notification.success({\r\n    message: message || 'Expense Created',\r\n    description: '',\r\n    icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n  });\r\n};\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n  notification.error({\r\n    message: message || 'Something Went Wrong',\r\n    description: '',\r\n    icon: <InfoCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n  });\r\n};\r\n\r\nconst validationSchema = Yup.object().shape({\r\n  name: Yup.string()\r\n    .label('Name')\r\n    .required('Name is required')\r\n    .min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\nconst initialValues = {\r\n  name: '',\r\n  description: '',\r\n};\r\n\r\nconst { Column, ColumnGroup } = Table;\r\nconst { Search } = CoolInput;\r\n\r\nconst MyTable = ({ data, setTagList }) => {\r\n  const [visible, setvisible] = useState(false);\r\n  const [activeCategoryForEdit, setactiveCategoryForEdit] = useState(false);\r\n  const [deleteTagState, handleDeleteTagFetch] = useHandleFetch(\r\n    {},\r\n    'deleteSalaryReport'\r\n  );\r\n\r\n  const history = useHistory();\r\n\r\n  const handleDeleteTag = async (id) => {\r\n    const deleteTagRes = await handleDeleteTagFetch({\r\n      urlOptions: {\r\n        placeHolders: {\r\n          id,\r\n        },\r\n      },\r\n    });\r\n\r\n    // @ts-ignore\r\n    if (deleteTagRes && deleteTagRes.status === 'ok') {\r\n      openSuccessNotification('Deleted Salary report');\r\n      const newtagList = data.filter((item) => item.id !== id);\r\n      setTagList(newtagList);\r\n    }\r\n  };\r\n\r\n  const handleOk = (e: any) => {\r\n    setvisible(false);\r\n  };\r\n\r\n  const handleCancel = (e: any) => {\r\n    setvisible(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Table\r\n        // expandable={{\r\n        //     expandedRowRender: record => <p style={{ margin: 0 }}>{record.name}</p>,\r\n        //     rowExpandable: record => record.name !== 'Not Expandable',\r\n        //   }}\r\n        // bordered={true}\r\n        size='small'\r\n        // pagination={false}\r\n        dataSource={data}\r\n      >\r\n        <Column\r\n          title='Year'\r\n          dataIndex='year'\r\n          key='id'\r\n          className='classnameofthecolumn'\r\n          render={(text, record: any) => (\r\n            <>\r\n              <h4\r\n                onClick={() => {\r\n                  history.push(`/admin/salaryReport/${record.id}`);\r\n                }}\r\n                style={{\r\n                  fontWeight: 400,\r\n                  color: '#555',\r\n                  cursor: 'pointer',\r\n                }}\r\n              >\r\n                {text}\r\n              </h4>\r\n            </>\r\n          )}\r\n        />\r\n\r\n        <Column\r\n          title='Month'\r\n          dataIndex='month'\r\n          key='id'\r\n          className='classnameofthecolumn'\r\n          render={(text, record: any) => (\r\n            <>\r\n              <h4\r\n                onClick={() => {\r\n                  history.push(`/admin/salaryReport/${record.id}`);\r\n                }}\r\n                style={{\r\n                  fontWeight: 400,\r\n                  color: '#555',\r\n                  cursor: 'pointer',\r\n                }}\r\n              >\r\n                {text && months[text]}\r\n              </h4>\r\n            </>\r\n          )}\r\n        />\r\n\r\n        <Column\r\n          title='Total Salary'\r\n          dataIndex='totalSalary'\r\n          key='id'\r\n          className='classnameofthecolumn'\r\n        />\r\n\r\n        <Column\r\n          title='Total Bonus'\r\n          dataIndex='totalBonus'\r\n          key='id'\r\n          className='classnameofthecolumn'\r\n        />\r\n\r\n        <Column\r\n          title='Total Extra'\r\n          dataIndex='totalExtra'\r\n          key='id'\r\n          className='classnameofthecolumn'\r\n        />\r\n\r\n        <Column\r\n          title='Total Convince'\r\n          dataIndex='totalConvince'\r\n          key='id'\r\n          className='classnameofthecolumn'\r\n        />\r\n\r\n        <Column\r\n          className='classnameofthecolumn'\r\n          title=''\r\n          key='action'\r\n          align='right'\r\n          render={(text, record: any) => (\r\n            <Space size='middle'>\r\n              <Popconfirm\r\n                onConfirm={() => handleDeleteTag(record.id)}\r\n                title='Are you sure？'\r\n                okText='Yes'\r\n                cancelText='No'\r\n              >\r\n                <span className='iconSize iconSize-danger'>\r\n                  <DeleteOutlined />\r\n                </span>\r\n              </Popconfirm>\r\n            </Space>\r\n          )}\r\n        />\r\n      </Table>\r\n    </>\r\n  );\r\n};\r\n\r\ninterface Props {}\r\n\r\nconst TagList = ({}: Props) => {\r\n  const [tagList, setTagList] = useState([]);\r\n\r\n  console.log('salaryReport4', tagList);\r\n  const [tagState, handleTagListFetch] = useHandleFetch({}, 'getSalaryReport');\r\n\r\n  useEffect(() => {\r\n    const setTags = async () => {\r\n      const tags = await handleTagListFetch({});\r\n      // @ts-ignore\r\n      setTagList(tags);\r\n    };\r\n    setTags();\r\n  }, []);\r\n\r\n  const [addTagState, handleAddTagFetch] = useHandleFetch({}, 'addTag');\r\n  const [addNewCategoryVisible, setAddNewCategoryVisible] = useState(false);\r\n\r\n  const handleSubmit = async (values: any, actions: any) => {\r\n    const addTagRes = await handleAddTagFetch({\r\n      urlOptions: {\r\n        placeHolders: {\r\n          id: values.id,\r\n        },\r\n      },\r\n      body: {\r\n        name: values.name.trim(),\r\n        description: values.description,\r\n      },\r\n    });\r\n\r\n    // @ts-ignore\r\n    if (addTagRes && addTagRes.status === 'ok') {\r\n      openSuccessNotification();\r\n\r\n      setTagList([\r\n        ...tagList,\r\n        {\r\n          id: addTagRes['id'] || '',\r\n          key: addTagRes['id'] || '',\r\n          name: addTagRes['name'] || '',\r\n          description: addTagRes['description'] || '',\r\n        },\r\n      ]);\r\n      actions.resetForm();\r\n    }\r\n    actions.setSubmitting(false);\r\n  };\r\n\r\n  const getisSubmitButtonDisabled = (values, isValid) => {\r\n    if (!values.name || !isValid) {\r\n      return true;\r\n    }\r\n    return false;\r\n  };\r\n\r\n  const handleOkAddNewCategory = (e: any) => {\r\n    setAddNewCategoryVisible(false);\r\n  };\r\n\r\n  const handleCancelAddNewCategory = (e: any) => {\r\n    setAddNewCategoryVisible(false);\r\n  };\r\n\r\n  const handleSearch = (value) => {\r\n    if (tagState.data.length > 0) {\r\n      const newTagList = tagState.data.filter((item) =>\r\n        item.name.toLowerCase().includes(value.toLowerCase())\r\n      );\r\n      setTagList(newTagList);\r\n    }\r\n  };\r\n\r\n  const headers = [\r\n    { label: 'Year', key: 'year' },\r\n    { label: 'Month', key: 'month' },\r\n    { label: 'Total Salary', key: 'totalSalary' },\r\n    { label: 'Total Bonus', key: 'totalBonus' },\r\n    { label: 'Total Convince', key: 'totalConvince' },\r\n    { label: 'Total Extra', key: 'totalExtra' },\r\n    { label: 'Total Negative', key: 'totalNegative' },\r\n  ];\r\n\r\n  const getData = () => {\r\n    if (tagList && tagList.length > 0) {\r\n      const csvData = tagList.map((item) => {\r\n        return {\r\n          year: item.year,\r\n          month: item.month ? months[item.month] : '',\r\n          totalSalary: item.totalSalary,\r\n          totalBonus: item.totalBonus,\r\n          totalConvince: item.totalConvince,\r\n          totalExtra: item.totalExtra,\r\n          totalNegative: item.totalNegative,\r\n        };\r\n      });\r\n\r\n      return csvData;\r\n    } else return [];\r\n  };\r\n\r\n  const data = getData();\r\n\r\n  return (\r\n    <>\r\n      <div className='categoryListContainer'>\r\n        <div className='categoryListContainer__header'>\r\n          <div className='categoryListContainer__header-searchBar-tag'>\r\n            <h2 className='categoryListContainer__header-title'>\r\n              Salary reports\r\n            </h2>\r\n\r\n            {/* <Search\r\n              enterButton={false}\r\n              className='searchbarClassName'\r\n              placeholder='search expense..'\r\n              onSearch={(value) => handleSearch(value)}\r\n            /> */}\r\n          </div>\r\n\r\n          <div\r\n            style={{\r\n              display: 'flex',\r\n              alignItems: 'center',\r\n            }}\r\n          >\r\n            {tagList && tagList.length > 0 && (\r\n              <>\r\n                <div\r\n                  style={{\r\n                    display: 'flex',\r\n                    alignItems: 'center',\r\n                    marginRight: '25px',\r\n                  }}\r\n                >\r\n                  <CSVLink\r\n                    filename={'SalaryReport.csv'}\r\n                    data={data}\r\n                    headers={headers}\r\n                  >\r\n                    Export as csv\r\n                  </CSVLink>\r\n                  <span\r\n                    style={{\r\n                      color: '#1890ff',\r\n                      marginLeft: '10px',\r\n                    }}\r\n                  >\r\n                    <DownloadOutlined />\r\n                  </span>\r\n                </div>\r\n              </>\r\n            )}\r\n\r\n            <Button\r\n              // type=\"primary\"\r\n              className='btnPrimaryClassNameoutline'\r\n              icon={<PlusOutlined />}\r\n              onClick={() => setAddNewCategoryVisible(true)}\r\n            >\r\n              Add New\r\n            </Button>\r\n          </div>\r\n        </div>\r\n        <div className='categoryListContainer__categoryList'>\r\n          {tagState.done && tagList.length > 0 && (\r\n            <MyTable setTagList={setTagList} data={tagList} />\r\n          )}\r\n          {tagState.isLoading && <DataTableSkeleton />}\r\n\r\n          {tagState.done && !(tagList.length > 0) && (\r\n            <div\r\n              style={{\r\n                marginTop: '150px',\r\n              }}\r\n            >\r\n              <Empty\r\n                description='No Expense found'\r\n                image={Empty.PRESENTED_IMAGE_SIMPLE}\r\n              />\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <AddNewExpense\r\n        componentList={tagList}\r\n        setComponentList={setTagList}\r\n        addNewCategoryVisible={addNewCategoryVisible}\r\n        setAddNewCategoryVisible={setAddNewCategoryVisible}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TagList;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useParams, useHistory } from 'react-router';\r\n\r\n// import hooks\r\nimport { useHandleFetch } from '../../../hooks';\r\n\r\n// import lib\r\nimport {\r\n  FileOutlined,\r\n  InboxOutlined,\r\n  RadiusUpleftOutlined,\r\n  RadiusUprightOutlined,\r\n  RadiusBottomleftOutlined,\r\n  RadiusBottomrightOutlined,\r\n  PlusOutlined,\r\n  DeleteOutlined,\r\n  EditOutlined,\r\n  CheckCircleOutlined,\r\n} from '@ant-design/icons';\r\n\r\nimport {\r\n  Skeleton,\r\n  Empty,\r\n  Popconfirm,\r\n  Upload,\r\n  message,\r\n  Switch,\r\n  Select,\r\n  Button,\r\n  notification,\r\n  Table,\r\n  Space,\r\n  Input as CoolInput,\r\n  Tooltip,\r\n  Modal,\r\n} from 'antd';\r\n\r\nimport moment from 'moment';\r\n\r\n// import components\r\nimport { DataTableSkeleton } from '../../../components/Placeholders';\r\n\r\nconst { Column, ColumnGroup } = Table;\r\nconst { Search } = CoolInput;\r\n\r\nconst months = [\r\n  'Jan',\r\n  'Feb',\r\n  'Mar',\r\n  'Apr',\r\n  'May',\r\n  'Jun',\r\n  'Jul',\r\n  'Aug',\r\n  'Sep',\r\n  'Oct',\r\n  'Nov',\r\n  'Dec',\r\n];\r\n\r\ninterface Props {\r\n  productRecord?: any;\r\n}\r\n\r\nconst NewBrandDetail = (props: Props) => {\r\n  const [tagDetailState, handleTagDetailFetch] = useHandleFetch(\r\n    {},\r\n    'getSalaryReportDetail'\r\n  );\r\n  const [tagProductsState, handleTagProductsFetch] = useHandleFetch(\r\n    {},\r\n    'tagProducts'\r\n  );\r\n\r\n  const history = useHistory();\r\n  const [tagEditVisible, setTagEditVisible] = useState(false);\r\n  const [tagDetailData, setTagDetailData] = useState({});\r\n\r\n  console.log('tagDetailDataSalaryreport!', tagDetailData);\r\n\r\n  const params = useParams();\r\n  const tagId = params['id'];\r\n\r\n  useEffect(() => {\r\n    const getBrandDetail = async () => {\r\n      const res = await handleTagDetailFetch({\r\n        urlOptions: {\r\n          placeHolders: {\r\n            id: tagId,\r\n          },\r\n        },\r\n      });\r\n\r\n      // @ts-ignore\r\n      if (res) {\r\n        // @ts-ignore\r\n        setTagDetailData(res);\r\n      }\r\n    };\r\n\r\n    getBrandDetail();\r\n  }, [tagId]);\r\n\r\n  useEffect(() => {\r\n    const getTagProducts = async () => {\r\n      await handleTagProductsFetch({\r\n        urlOptions: {\r\n          placeHolders: {\r\n            id: tagId,\r\n          },\r\n        },\r\n      });\r\n    };\r\n\r\n    getTagProducts();\r\n  }, [tagId]);\r\n\r\n  console.log('tagProductsState', tagProductsState);\r\n\r\n  console.log('brandParams', params);\r\n\r\n  return (\r\n    <div className='brandDetailContainer'>\r\n      <div className='brandDetailContainer__heading'>\r\n        <h3>Salary Report detail</h3>\r\n      </div>\r\n      <Skeleton paragraph={{ rows: 2 }} loading={tagDetailState.isLoading}>\r\n        {tagDetailState.done &&\r\n          tagDetailData &&\r\n          !(Object.keys(tagDetailData).length > 0) && (\r\n            <Empty\r\n              description='No Expense found'\r\n              image={Empty.PRESENTED_IMAGE_SIMPLE}\r\n            />\r\n          )}\r\n\r\n        {tagDetailState.done &&\r\n          tagDetailData &&\r\n          Object.keys(tagDetailData).length > 0 && (\r\n            <div className='brandDetailContainer__header'>\r\n              <div className='brandDetailContainer__header-info'>\r\n                {tagDetailData['year'] && (\r\n                  <h3>\r\n                    YEAR:\r\n                    <span>{tagDetailData['year']}</span>\r\n                  </h3>\r\n                )}\r\n                {tagDetailData['month'] && (\r\n                  <h3>\r\n                    MONTH:\r\n                    <span>\r\n                      {tagDetailData['month'] && months[tagDetailData['month']]}\r\n                    </span>\r\n                  </h3>\r\n                )}\r\n                {tagDetailData['totalSalary'] && (\r\n                  <h3>\r\n                    TOTAL SALARY:\r\n                    <span>{tagDetailData['totalSalary']}</span>\r\n                  </h3>\r\n                )}\r\n\r\n                {tagDetailData['totalBonus'] ? (\r\n                  <h3>\r\n                    TOTAL BONUS:\r\n                    <span>{tagDetailData['totalBonus']}</span>\r\n                  </h3>\r\n                ) : (\r\n                  ''\r\n                )}\r\n\r\n                {tagDetailData['totalConvince'] && (\r\n                  <h3>\r\n                    TOTAL CONVINCE:\r\n                    <span>{tagDetailData['totalConvince']}</span>\r\n                  </h3>\r\n                )}\r\n                {tagDetailData['totalExtra'] && (\r\n                  <h3>\r\n                    TOTAL EXTRA:\r\n                    <span>{tagDetailData['totalExtra']}</span>\r\n                  </h3>\r\n                )}\r\n                {tagDetailData['totalNegative'] && (\r\n                  <h3>\r\n                    TOTAL NEGATIVE:\r\n                    <span>{tagDetailData['totalNegative']}</span>\r\n                  </h3>\r\n                )}\r\n              </div>\r\n            </div>\r\n          )}\r\n      </Skeleton>\r\n\r\n      {tagDetailState.done &&\r\n        tagDetailState.data &&\r\n        Object.keys(tagDetailState.data).length > 0 && (\r\n          <>\r\n            <div className='brandDetailContainer__heading'>\r\n              <h3>Staffs</h3>\r\n            </div>\r\n          </>\r\n        )}\r\n\r\n      <div className='brandDetailContainer__body'>\r\n        {tagDetailState.done &&\r\n          tagDetailState.data &&\r\n          Object.keys(tagDetailState.data).length > 0 &&\r\n          tagDetailState.data['staff'] &&\r\n          !(tagDetailState.data['staff'].length > 0) && (\r\n            <div\r\n              style={{\r\n                marginTop: '100px',\r\n              }}\r\n            >\r\n              <Empty\r\n                description='No Staffs exists for this Salary report'\r\n                image={Empty.PRESENTED_IMAGE_SIMPLE}\r\n              />\r\n            </div>\r\n          )}\r\n\r\n        {tagDetailState.done &&\r\n          tagDetailState.data &&\r\n          Object.keys(tagDetailState.data).length > 0 &&\r\n          tagDetailState.data['staff'] &&\r\n          tagDetailState.data['staff'].length > 0 && (\r\n            <>\r\n              <Table\r\n                style={{\r\n                  paddingTop: '10px',\r\n                  borderRadius: '5px !important',\r\n                  overflow: 'hidden',\r\n                  boxShadow:\r\n                    '0 0.125rem 0.625rem rgba(227, 231, 250, 0.3), 0 0.0625rem 0.125rem rgba(206, 220, 233, 0.4)',\r\n                }}\r\n                size='small'\r\n                dataSource={tagDetailState.data['staff']}\r\n                tableLayout={'auto'}\r\n                onHeaderRow={(column) => {\r\n                  return {\r\n                    style: {\r\n                      color: 'red !important',\r\n                    },\r\n                  };\r\n                }}\r\n              >\r\n                <Column\r\n                  title='Name'\r\n                  dataIndex='name'\r\n                  key='id'\r\n                  className='classnameofthecolumn'\r\n                  render={(text, record: any) => (\r\n                    <>\r\n                      <h4\r\n                        onClick={() => {\r\n                          history.push(`/admin/staff/${record.id}`);\r\n                          // setcategoryDetailVisible(true);\r\n                        }}\r\n                        style={{\r\n                          fontWeight: 400,\r\n                          color: '#555',\r\n                          cursor: 'pointer',\r\n                        }}\r\n                      >\r\n                        {text}\r\n                      </h4>\r\n                    </>\r\n                  )}\r\n                />\r\n\r\n                <Column\r\n                  title='Total Salary'\r\n                  dataIndex='totalSalary'\r\n                  key='id'\r\n                  className='classnameofthecolumn'\r\n                />\r\n\r\n                <Column\r\n                  title='Convince'\r\n                  dataIndex='convince'\r\n                  key='id'\r\n                  className='classnameofthecolumn'\r\n                />\r\n\r\n                <Column\r\n                  title='Extra'\r\n                  dataIndex='extra'\r\n                  key='id'\r\n                  className='classnameofthecolumn'\r\n                />\r\n\r\n                <Column\r\n                  title='Negative'\r\n                  dataIndex='negative'\r\n                  key='id'\r\n                  className='classnameofthecolumn'\r\n                />\r\n              </Table>\r\n            </>\r\n          )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NewBrandDetail;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\nimport { useHandleFetch } from '../../hooks';\r\n// import third party ui lib\r\nimport {\r\n  Upload,\r\n  message,\r\n  Switch,\r\n  Select,\r\n  Button,\r\n  notification,\r\n  Modal,\r\n  Tooltip,\r\n} from 'antd';\r\n\r\nimport {\r\n  FileOutlined,\r\n  InboxOutlined,\r\n  FileAddOutlined,\r\n  DeleteOutlined,\r\n  CheckCircleOutlined,\r\n  CloseOutlined,\r\n  CheckOutlined,\r\n  InfoCircleOutlined,\r\n  PlusOutlined,\r\n  FileImageFilled,\r\n} from '@ant-design/icons';\r\n\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport MediaLibrary from '../../components/MediaLibrary';\r\nimport DatePicker from '../../components/Field/DatePicker';\r\nimport StaffIds from './StaffIds';\r\n\r\nconst validationSchema = Yup.object().shape({});\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n  notification.success({\r\n    message: message || 'Expense Updated',\r\n    description: '',\r\n    icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n  });\r\n};\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n  notification.error({\r\n    message: message || 'Something Went Wrong',\r\n    description: '',\r\n    icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n  });\r\n};\r\n\r\nconst initialValues = {\r\n  topic: '',\r\n  amount: null,\r\n};\r\n\r\ninterface Props {\r\n  addNewCategoryVisible?: any;\r\n  setAddNewCategoryVisible?: any;\r\n  tagList?: any;\r\n  setTagList?: any;\r\n  category?:any; \r\n}\r\n\r\nconst AddNewBrand = ({\r\n  addNewCategoryVisible,\r\n  setAddNewCategoryVisible,\r\n  tagList,\r\n  setTagList,\r\n  category\r\n}: Props) => {\r\n  const [addTagState, handleAddTagFetch] = useHandleFetch({}, 'updateExpense');\r\n  const [myImages, setmyImages] = useState(false);\r\n  const [visibleMedia, setvisibleMedia] = useState(false);\r\n  const [time, setTimeFeild] = useState('');\r\n  const [customerId, setCustomerId] = useState([]);\r\n\r\n\r\n  \r\n  useEffect(() => {\r\n    if(category && category.date){\r\n        setTimeFeild(category.date)\r\n    }\r\n  },[category]); \r\n\r\n  \r\n  const [customerListState, handleCustomerListFetch] = useHandleFetch(\r\n    {},\r\n    'staffList'\r\n  );\r\n\r\n  const [selectedCustomerData, setSelectedCustomerData] = useState({});\r\n\r\n  useEffect(() => {\r\n    const setCustomers = async () => {\r\n      const customerListRes = await handleCustomerListFetch({});\r\n    };\r\n    setCustomers();\r\n  }, []);\r\n\r\n  const handleSubmit = async (values: any, actions: any) => {\r\n    const addTagRes = await handleAddTagFetch({\r\n\t\turlOptions: {\r\n\t\t\tplaceHolders: {\r\n\t\t\t\tid: category.id || category._id\r\n\t\t\t}\r\n\t\t},\r\n      body: {\r\n        topic: values.topic.trim(),\r\n        amount: values.amount,\r\n        date: time,\r\n        staff: customerId,\r\n      },\r\n    });\r\n\r\n    // @ts-ignore\r\n    if (addTagRes && addTagRes.status === 'ok') {\r\n      openSuccessNotification();\r\n\r\n\r\n\t  const positionInTag = () => {\r\n\t\treturn tagList.map(item => item.id).indexOf(category.id || category._id);\r\n\t}\r\n\r\n\tconst index = positionInTag();\r\n\r\n\t// @ts-ignore\r\n\tconst updatedItem = Object.assign({}, tagList[index], { ...addTagRes });\r\n\tconst updateTagList = [...tagList.slice(0, index), updatedItem, ...tagList.slice(index + 1)];\r\n\tsetTagList(updateTagList);\r\n\r\n      actions.resetForm();\r\n      setAddNewCategoryVisible(false);\r\n    } else {\r\n      openErrorNotification();\r\n    }\r\n\r\n    actions.setSubmitting(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!addTagState['isLoading']) {\r\n      const error = addTagState['error'];\r\n      if (error['isError'] && Object.keys(error['error']).length > 0) {\r\n        if (error['error']['registerError']) {\r\n          // setServerErrors(error['error']['registerError']);\r\n        } else if (error['error']['checkoutError']) {\r\n          // setServerErrors(error['error']['checkoutError']);\r\n        } else {\r\n          // setServerErrors(error['error']);\r\n        }\r\n\r\n        const errors =\r\n          Object.values(error['error']).length > 0\r\n            ? Object.values(error['error'])\r\n            : [];\r\n        errors.forEach((err, i) => {\r\n          if (typeof err === 'string') {\r\n            openErrorNotification(err);\r\n          } else if (typeof err === 'object') {\r\n            if (err && Object.keys(err).length > 0) {\r\n              const errs = Object.values(err);\r\n              errs.forEach((err) => {\r\n                openErrorNotification(err);\r\n              });\r\n            }\r\n          }\r\n        });\r\n      }\r\n    }\r\n\r\n    if (!addTagState['isLoading'] && Object.keys(addTagState.data).length > 0) {\r\n      if (addTagState['data']['status'] === 'ok') {\r\n        // openSuccessNotification('Order Created Successfully');\r\n        // history.push({\r\n        //   pathname: '/orderDetails',\r\n        //   state: checkoutState['data']\r\n        // })\r\n        // clearCart();\r\n        // setIsModalShown(true);\r\n      }\r\n    }\r\n  }, [addTagState]);\r\n\r\n  const handleCancel = (e: any) => {\r\n    setAddNewCategoryVisible(false);\r\n  };\r\n\r\n  const getisSubmitButtonDisabled = (values, isValid) => {\r\n    if (!values.name || !isValid) {\r\n      return true;\r\n    }\r\n    return false;\r\n  };\r\n\r\n  const handleTimeChange = (date, dateString) => {\r\n    setTimeFeild(dateString);\r\n    // console.log('date', date, dateString);\r\n  };\r\n\r\n  return (\r\n    <Formik\r\n      onSubmit={(values, actions) => handleSubmit(values, actions)}\r\n      validationSchema={validationSchema}\r\n      validateOnBlur={false}\r\n      enableReinitialize={true}\r\n      initialValues={{ ...initialValues, ...category }}\r\n    >\r\n      {({\r\n        handleChange,\r\n        values,\r\n        handleSubmit,\r\n        errors,\r\n        isValid,\r\n        isSubmitting,\r\n        touched,\r\n        handleBlur,\r\n        setFieldTouched,\r\n        handleReset,\r\n      }) => (\r\n        <>\r\n          <Modal\r\n            style={{\r\n              top: '40px',\r\n            }}\r\n            title='Add New Expense'\r\n            visible={addNewCategoryVisible}\r\n            onOk={(e: any) => handleSubmit(e)}\r\n            onCancel={handleCancel}\r\n            okText='Update'\r\n            okButtonProps={{\r\n              loading: isSubmitting,\r\n              htmlType: 'submit',\r\n              //   disabled: getisSubmitButtonDisabled(values, isValid),\r\n            }}\r\n          >\r\n            <Input\r\n              label='Topic'\r\n              value={values.topic}\r\n              name='topic'\r\n              isError={\r\n                (touched.topic && errors.topic) ||\r\n                (!isSubmitting && addTagState.error['error']['topic'])\r\n              }\r\n              errorString={\r\n                (touched.topic && errors.topic) ||\r\n                (!isSubmitting && addTagState.error['error']['topic'])\r\n              }\r\n              onChange={(e: any) => {\r\n                handleChange(e);\r\n                setFieldTouched('topic');\r\n              }}\r\n            />\r\n\r\n            <Input\r\n              label='Amount'\r\n              value={values.amount}\r\n              name='amount'\r\n              type={'number'}\r\n              min={0}\r\n              isError={\r\n                (touched.amount && errors.amount) ||\r\n                (!isSubmitting && addTagState.error['error']['amount'])\r\n              }\r\n              errorString={\r\n                (touched.amount && errors.amount) ||\r\n                (!isSubmitting && addTagState.error['error']['amount'])\r\n              }\r\n              onChange={(e: any) => {\r\n                handleChange(e);\r\n                setFieldTouched('amount');\r\n              }}\r\n            />\r\n\r\n            <DatePicker\r\n              date={time}\r\n              placeholder='10/20/2020'\r\n              label='Date'\r\n              onChange={handleTimeChange}\r\n            />\r\n\r\n            <div\r\n              style={{\r\n                marginTop: '15px',\r\n              }}\r\n            ></div>\r\n\r\n            {/* <h4 className='inputFieldLabel'>Associative staff</h4>\r\n            <StaffIds\r\n              customerListState={customerListState}\r\n              setSelectedCustomerData={setSelectedCustomerData}\r\n              setCustomerId={setCustomerId}\r\n            /> */}\r\n          </Modal>\r\n\r\n          <MediaLibrary\r\n            setvisible={setvisibleMedia}\r\n            visible={visibleMedia}\r\n            setmyImages={setmyImages}\r\n            myImages={myImages}\r\n            isModalOpenForImages={true}\r\n          />\r\n        </>\r\n      )}\r\n    </Formik>\r\n  );\r\n};\r\n\r\nexport default AddNewBrand;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\nimport { useHandleFetch } from '../../hooks';\r\n// import third party ui lib\r\nimport {\r\n  Upload,\r\n  message,\r\n  Switch,\r\n  Select,\r\n  Button,\r\n  notification,\r\n  Modal,\r\n  Tooltip,\r\n} from 'antd';\r\n\r\nimport {\r\n  FileOutlined,\r\n  InboxOutlined,\r\n  FileAddOutlined,\r\n  DeleteOutlined,\r\n  CheckCircleOutlined,\r\n  CloseOutlined,\r\n  CheckOutlined,\r\n  InfoCircleOutlined,\r\n  PlusOutlined,\r\n  FileImageFilled,\r\n} from '@ant-design/icons';\r\n\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport MediaLibrary from '../../components/MediaLibrary';\r\nimport DatePicker from '../../components/Field/DatePicker';\r\nimport StaffIds from './StaffIds';\r\n\r\nconst validationSchema = Yup.object().shape({});\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n  notification.success({\r\n    message: message || 'Expense Created',\r\n    description: '',\r\n    icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n  });\r\n};\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n  notification.error({\r\n    message: message || 'Something Went Wrong',\r\n    description: '',\r\n    icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n  });\r\n};\r\n\r\nconst initialValues = {\r\n  topic: '',\r\n  amount: null,\r\n};\r\n\r\ninterface Props {\r\n  addNewCategoryVisible?: any;\r\n  setAddNewCategoryVisible?: any;\r\n  tagList?: any;\r\n  setTagList?: any;\r\n}\r\n\r\nconst AddNewBrand = ({\r\n  addNewCategoryVisible,\r\n  setAddNewCategoryVisible,\r\n  tagList,\r\n  setTagList,\r\n}: Props) => {\r\n  const [addTagState, handleAddTagFetch] = useHandleFetch({}, 'addExpense');\r\n  const [myImages, setmyImages] = useState(false);\r\n  const [visibleMedia, setvisibleMedia] = useState(false);\r\n  const [time, setTimeFeild] = useState('');\r\n  const [customerId, setCustomerId] = useState([]);\r\n\r\n  const [customerListState, handleCustomerListFetch] = useHandleFetch(\r\n    {},\r\n    'staffList'\r\n  );\r\n\r\n  const [selectedCustomerData, setSelectedCustomerData] = useState({});\r\n\r\n  useEffect(() => {\r\n    const setCustomers = async () => {\r\n      const customerListRes = await handleCustomerListFetch({});\r\n    };\r\n    setCustomers();\r\n  }, []);\r\n\r\n  const handleSubmit = async (values: any, actions: any) => {\r\n    const addTagRes = await handleAddTagFetch({\r\n      body: {\r\n        topic: values.topic.trim(),\r\n        amount: values.amount,\r\n        date: time,\r\n        staff: customerId,\r\n      },\r\n    });\r\n\r\n    // @ts-ignore\r\n    if (addTagRes && addTagRes.status === 'ok') {\r\n      openSuccessNotification();\r\n\r\n      setTagList([\r\n        {\r\n          // @ts-ignore\r\n          ...addTagRes,\r\n          id: addTagRes['_id'] || '',\r\n          key: addTagRes['_id'] || '',\r\n        },\r\n        ...tagList,\r\n      ]);\r\n      actions.resetForm();\r\n      setAddNewCategoryVisible(false);\r\n    } else {\r\n      openErrorNotification();\r\n    }\r\n\r\n    actions.setSubmitting(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!addTagState['isLoading']) {\r\n      const error = addTagState['error'];\r\n      if (error['isError'] && Object.keys(error['error']).length > 0) {\r\n        if (error['error']['registerError']) {\r\n          // setServerErrors(error['error']['registerError']);\r\n        } else if (error['error']['checkoutError']) {\r\n          // setServerErrors(error['error']['checkoutError']);\r\n        } else {\r\n          // setServerErrors(error['error']);\r\n        }\r\n\r\n        const errors =\r\n          Object.values(error['error']).length > 0\r\n            ? Object.values(error['error'])\r\n            : [];\r\n        errors.forEach((err, i) => {\r\n          if (typeof err === 'string') {\r\n            openErrorNotification(err);\r\n          } else if (typeof err === 'object') {\r\n            if (err && Object.keys(err).length > 0) {\r\n              const errs = Object.values(err);\r\n              errs.forEach((err) => {\r\n                openErrorNotification(err);\r\n              });\r\n            }\r\n          }\r\n        });\r\n      }\r\n    }\r\n\r\n    if (!addTagState['isLoading'] && Object.keys(addTagState.data).length > 0) {\r\n      if (addTagState['data']['status'] === 'ok') {\r\n        // openSuccessNotification('Order Created Successfully');\r\n        // history.push({\r\n        //   pathname: '/orderDetails',\r\n        //   state: checkoutState['data']\r\n        // })\r\n        // clearCart();\r\n        // setIsModalShown(true);\r\n      }\r\n    }\r\n  }, [addTagState]);\r\n\r\n  const handleCancel = (e: any) => {\r\n    setAddNewCategoryVisible(false);\r\n  };\r\n\r\n  const getisSubmitButtonDisabled = (values, isValid) => {\r\n    if (!values.name || !isValid) {\r\n      return true;\r\n    }\r\n    return false;\r\n  };\r\n\r\n  const handleTimeChange = (date, dateString) => {\r\n    setTimeFeild(dateString);\r\n    // console.log('date', date, dateString);\r\n  };\r\n\r\n  return (\r\n    <Formik\r\n      onSubmit={(values, actions) => handleSubmit(values, actions)}\r\n      validationSchema={validationSchema}\r\n      validateOnBlur={false}\r\n      enableReinitialize={true}\r\n      initialValues={{ ...initialValues }}\r\n    >\r\n      {({\r\n        handleChange,\r\n        values,\r\n        handleSubmit,\r\n        errors,\r\n        isValid,\r\n        isSubmitting,\r\n        touched,\r\n        handleBlur,\r\n        setFieldTouched,\r\n        handleReset,\r\n      }) => (\r\n        <>\r\n          <Modal\r\n            style={{\r\n              top: '40px',\r\n            }}\r\n            title='Add New Expense'\r\n            visible={addNewCategoryVisible}\r\n            onOk={(e: any) => handleSubmit(e)}\r\n            onCancel={handleCancel}\r\n            okText='Create'\r\n            okButtonProps={{\r\n              loading: isSubmitting,\r\n              htmlType: 'submit',\r\n              //   disabled: getisSubmitButtonDisabled(values, isValid),\r\n            }}\r\n          >\r\n            <Input\r\n              label='Topic'\r\n              value={values.topic}\r\n              name='topic'\r\n              isError={\r\n                (touched.topic && errors.topic) ||\r\n                (!isSubmitting && addTagState.error['error']['topic'])\r\n              }\r\n              errorString={\r\n                (touched.topic && errors.topic) ||\r\n                (!isSubmitting && addTagState.error['error']['topic'])\r\n              }\r\n              onChange={(e: any) => {\r\n                handleChange(e);\r\n                setFieldTouched('topic');\r\n              }}\r\n            />\r\n\r\n            <Input\r\n              label='Amount'\r\n              value={values.amount}\r\n              name='amount'\r\n              type={'number'}\r\n              min={0}\r\n              isError={\r\n                (touched.amount && errors.amount) ||\r\n                (!isSubmitting && addTagState.error['error']['amount'])\r\n              }\r\n              errorString={\r\n                (touched.amount && errors.amount) ||\r\n                (!isSubmitting && addTagState.error['error']['amount'])\r\n              }\r\n              onChange={(e: any) => {\r\n                handleChange(e);\r\n                setFieldTouched('amount');\r\n              }}\r\n            />\r\n\r\n            <DatePicker\r\n              date={time}\r\n              placeholder='10/20/2020'\r\n              label='Date'\r\n              onChange={handleTimeChange}\r\n            />\r\n\r\n            {/* <div\r\n              style={{\r\n                marginTop: '15px',\r\n              }}\r\n            ></div>\r\n\r\n            <h4 className='inputFieldLabel'>Associative staff</h4>\r\n            <StaffIds\r\n              customerListState={customerListState}\r\n              setSelectedCustomerData={setSelectedCustomerData}\r\n              setCustomerId={setCustomerId}\r\n            /> */}\r\n          </Modal>\r\n\r\n          <MediaLibrary\r\n            setvisible={setvisibleMedia}\r\n            visible={visibleMedia}\r\n            setmyImages={setmyImages}\r\n            myImages={myImages}\r\n            isModalOpenForImages={true}\r\n          />\r\n        </>\r\n      )}\r\n    </Formik>\r\n  );\r\n};\r\n\r\nexport default AddNewBrand;\r\n","import React, { useState, useEffect } from 'react';\r\n\r\n// import third party ui lib\r\nimport {\r\n  Empty,\r\n  Popconfirm,\r\n  Upload,\r\n  message,\r\n  Switch,\r\n  Select,\r\n  Button,\r\n  notification,\r\n  Table,\r\n  Space,\r\n  Input as CoolInput,\r\n  Tooltip,\r\n  Modal,\r\n} from 'antd';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { useHistory } from 'react-router';\r\nimport moment from 'moment';\r\nimport { CSVLink } from \"react-csv\";\r\n\r\nimport {\r\n  FileOutlined,\r\n  InboxOutlined,\r\n  RadiusUpleftOutlined,\r\n  RadiusUprightOutlined,\r\n  RadiusBottomleftOutlined,\r\n  RadiusBottomrightOutlined,\r\n  PlusOutlined,\r\n  DeleteOutlined,\r\n  EditOutlined,\r\n  CheckCircleOutlined,\r\n  DownloadOutlined\r\n} from '@ant-design/icons';\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n/// import hooks\r\nimport { useFetch, useHandleFetch } from '../../hooks';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport { DataTableSkeleton } from '../../components/Placeholders';\r\nimport QuickEdit from './QuickEdit';\r\nimport AddNewExpense from './AddNewExpense';\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n  notification.success({\r\n    message: message || 'Expense Created',\r\n    description: '',\r\n    icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n  });\r\n};\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n  notification.error({\r\n    message: message || 'Something Went Wrong',\r\n    description: '',\r\n    icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n  });\r\n};\r\n\r\nconst validationSchema = Yup.object().shape({\r\n  name: Yup.string()\r\n    .label('Name')\r\n    .required('Name is required')\r\n    .min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\nconst initialValues = {\r\n  name: '',\r\n  description: '',\r\n};\r\n\r\nconst { Column, ColumnGroup } = Table;\r\nconst { Search } = CoolInput;\r\n\r\nconst MyTable = ({ data, setTagList }) => {\r\n  const [visible, setvisible] = useState(false);\r\n  const [activeCategoryForEdit, setactiveCategoryForEdit] = useState(false);\r\n  const [deleteTagState, handleDeleteTagFetch] = useHandleFetch(\r\n    {},\r\n    'deleteExpense'\r\n  );\r\n\r\n  const history = useHistory();\r\n\r\n  const handleDeleteTag = async (id) => {\r\n    const deleteTagRes = await handleDeleteTagFetch({\r\n      urlOptions: {\r\n        placeHolders: {\r\n          id,\r\n        },\r\n      },\r\n    });\r\n\r\n    // @ts-ignore\r\n    if (deleteTagRes && deleteTagRes.status === 'ok') {\r\n      openSuccessNotification('Deleted Expense');\r\n      const newtagList = data.filter((item) => item.id !== id);\r\n      setTagList(newtagList);\r\n    }\r\n  };\r\n\r\n  const handleOk = (e: any) => {\r\n    setvisible(false);\r\n  };\r\n\r\n  const handleCancel = (e: any) => {\r\n    setvisible(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Table\r\n        // expandable={{\r\n        //     expandedRowRender: record => <p style={{ margin: 0 }}>{record.name}</p>,\r\n        //     rowExpandable: record => record.name !== 'Not Expandable',\r\n        //   }}\r\n        // bordered={true}\r\n        size='small'\r\n        // pagination={false}\r\n        dataSource={data}\r\n      >\r\n        <Column\r\n          title='Topic'\r\n          dataIndex='topic'\r\n          key='id'\r\n          className='classnameofthecolumn'\r\n          render={(text, record: any) => (\r\n            <>\r\n              <h4\r\n                onClick={() => {\r\n                  history.push(`/admin/expense/${record.id}`);\r\n                  // setBrandDetailVisible(true);\r\n                  setactiveCategoryForEdit(record);\r\n                }}\r\n                style={{\r\n                  fontWeight: 400,\r\n                  color: '#555',\r\n                  cursor: 'pointer',\r\n                }}\r\n              >\r\n                {text}\r\n              </h4>\r\n            </>\r\n          )}\r\n        />\r\n\r\n        <Column\r\n          title='Amount'\r\n          dataIndex='amount'\r\n          key='id'\r\n          className='classnameofthecolumn'\r\n        />\r\n\r\n        <Column\r\n          title='Date'\r\n          dataIndex='date'\r\n          key='id'\r\n          className='classnameofthecolumn'\r\n          render={(text, record: any) => (\r\n            <Space size='middle'>\r\n              <h5>{text && moment(text).format('MMMM Do YYYY, h:mm a')}</h5>\r\n            </Space>\r\n          )}\r\n        />\r\n\r\n        <Column\r\n          className='classnameofthecolumn'\r\n          title=''\r\n          key='action'\r\n          align='right'\r\n          render={(text, record: any) => (\r\n            <Space size='middle'>\r\n              <a href='##'>\r\n                <Tooltip placement='top' title='Edit Expense'>\r\n                  <span\r\n                    className='iconSize'\r\n                    onClick={() => {\r\n                      setvisible(true);\r\n                      setactiveCategoryForEdit(record);\r\n                    }}\r\n                  >\r\n                    <EditOutlined />\r\n                  </span>\r\n                </Tooltip>\r\n              </a>\r\n\r\n              <Popconfirm\r\n                onConfirm={() => handleDeleteTag(record.id)}\r\n                title='Are you sure？'\r\n                okText='Yes'\r\n                cancelText='No'\r\n              >\r\n                <span className='iconSize iconSize-danger'>\r\n                  <DeleteOutlined />\r\n                </span>\r\n              </Popconfirm>\r\n            </Space>\r\n          )}\r\n        />\r\n      </Table>\r\n\r\n      {activeCategoryForEdit && (\r\n        <QuickEdit\r\n          tagList={data}\r\n          setTagList={setTagList}\r\n          setAddNewCategoryVisible={setvisible}\r\n          addNewCategoryVisible={visible}\r\n          category={activeCategoryForEdit}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\ninterface Props {}\r\n\r\nconst TagList = ({}: Props) => {\r\n  const [tagList, setTagList] = useState([]);\r\n\r\n  const [tagState, handleTagListFetch] = useHandleFetch({}, 'expenseList');\r\n\r\n  useEffect(() => {\r\n    const setTags = async () => {\r\n      const tags = await handleTagListFetch({});\r\n      // @ts-ignore\r\n      setTagList(tags);\r\n    };\r\n    setTags();\r\n  }, []);\r\n\r\n  const [addTagState, handleAddTagFetch] = useHandleFetch({}, 'addTag');\r\n  const [addNewCategoryVisible, setAddNewCategoryVisible] = useState(false);\r\n\r\n  const handleSubmit = async (values: any, actions: any) => {\r\n    const addTagRes = await handleAddTagFetch({\r\n      urlOptions: {\r\n        placeHolders: {\r\n          id: values.id,\r\n        },\r\n      },\r\n      body: {\r\n        name: values.name.trim(),\r\n        description: values.description,\r\n      },\r\n    });\r\n\r\n    // @ts-ignore\r\n    if (addTagRes && addTagRes.status === 'ok') {\r\n      openSuccessNotification();\r\n\r\n      setTagList([\r\n        ...tagList,\r\n        {\r\n          id: addTagRes['id'] || '',\r\n          key: addTagRes['id'] || '',\r\n          name: addTagRes['name'] || '',\r\n          description: addTagRes['description'] || '',\r\n        },\r\n      ]);\r\n      actions.resetForm();\r\n    }\r\n    actions.setSubmitting(false);\r\n  };\r\n\r\n  const getisSubmitButtonDisabled = (values, isValid) => {\r\n    if (!values.name || !isValid) {\r\n      return true;\r\n    }\r\n    return false;\r\n  };\r\n\r\n  const handleOkAddNewCategory = (e: any) => {\r\n    setAddNewCategoryVisible(false);\r\n  };\r\n\r\n  const handleCancelAddNewCategory = (e: any) => {\r\n    setAddNewCategoryVisible(false);\r\n  };\r\n\r\n  const handleSearch = (value) => {\r\n    if (tagState.data.length > 0) {\r\n      const newTagList = tagState.data.filter((item) =>\r\n        item.name.toLowerCase().includes(value.toLowerCase())\r\n      );\r\n      setTagList(newTagList);\r\n    }\r\n  };\r\n\r\n\r\n  \r\n  const headers = [\r\n    { label: \"Topic\", key: \"topic\" },\r\n    { label: \"Amount\", key: \"amount\" },\r\n    { label: \"Date\", key: \"date\" },\r\n  ];\r\n   \r\n\r\n  const getData = () => {\r\n    if(tagList && tagList.length > 0){\r\n      const csvData = tagList.map(item => {\r\n        return {\r\n          topic: item.topic,\r\n          amount: item.amount,\r\n          date : item.date ? moment(item.date).format('MMMM Do YYYY, h:mm a') : ''\r\n        }\r\n      })\r\n\r\n      return csvData; \r\n    }\r\n    else return []; \r\n  }; \r\n\r\n\r\n  const data = getData();\r\n\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n      <div className='categoryListContainer'>\r\n        <div className='categoryListContainer__header'>\r\n          <div className='categoryListContainer__header-searchBar-tag'>\r\n            <h2 className='categoryListContainer__header-title'>Expenses</h2>\r\n\r\n            <Search\r\n              enterButton={false}\r\n              className='searchbarClassName'\r\n              placeholder='search expense..'\r\n              onSearch={(value) => handleSearch(value)}\r\n            />\r\n          </div>\r\n\r\n          \r\n        <div style={{\r\n          display:'flex',\r\n          alignItems:'center'\r\n        }}>\r\n        \r\n        {tagList && tagList.length > 0 && (\r\n          <>\r\n          <div style={{\r\n          display:'flex',\r\n          alignItems:'center',\r\n          marginRight: '25px'\r\n        }}>\r\n        <CSVLink\r\n         filename={\"Expenses.csv\"}\r\n         data={data} headers={headers}>\r\n          Export as csv \r\n        </CSVLink>\r\n        <span style={{\r\n          color:'#1890ff',\r\n          marginLeft: '10px'\r\n        }}>\r\n        <DownloadOutlined />\r\n        </span>\r\n        </div>\r\n          </>\r\n        )}\r\n          <Button\r\n            // type=\"primary\"\r\n            className='btnPrimaryClassNameoutline'\r\n            icon={<PlusOutlined />}\r\n            onClick={() => setAddNewCategoryVisible(true)}\r\n          >\r\n            Add New\r\n          </Button>\r\n        </div>\r\n\r\n\r\n        \r\n        </div>\r\n        <div className='categoryListContainer__categoryList'>\r\n          {tagState.done && tagList.length > 0 && (\r\n            <MyTable setTagList={setTagList} data={tagList} />\r\n          )}\r\n          {tagState.isLoading && <DataTableSkeleton />}\r\n\r\n          {tagState.done && !(tagList.length > 0) && (\r\n            <div\r\n              style={{\r\n                marginTop: '150px',\r\n              }}\r\n            >\r\n              <Empty\r\n                description='No Expense found'\r\n                image={Empty.PRESENTED_IMAGE_SIMPLE}\r\n              />\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <AddNewExpense\r\n        tagList={tagList}\r\n        setTagList={setTagList}\r\n        addNewCategoryVisible={addNewCategoryVisible}\r\n        setAddNewCategoryVisible={setAddNewCategoryVisible}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TagList;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\nimport { useHandleFetch } from '../../hooks';\r\n// import third party ui lib\r\nimport {\r\n  Upload,\r\n  message,\r\n  Switch,\r\n  Select,\r\n  Button,\r\n  notification,\r\n  Modal,\r\n  Tooltip,\r\n} from 'antd';\r\n\r\nimport {\r\n  FileOutlined,\r\n  InboxOutlined,\r\n  FileAddOutlined,\r\n  DeleteOutlined,\r\n  CheckCircleOutlined,\r\n  CloseOutlined,\r\n  CheckOutlined,\r\n  InfoCircleOutlined,\r\n  PlusOutlined,\r\n  FileImageFilled,\r\n} from '@ant-design/icons';\r\n\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport MediaLibrary from '../../components/MediaLibrary';\r\nimport DatePicker from '../../components/Field/DatePicker';\r\nimport StaffIds from './StaffIds';\r\n\r\nconst validationSchema = Yup.object().shape({});\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n  notification.success({\r\n    message: message || 'Expense Updated',\r\n    description: '',\r\n    icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n  });\r\n};\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n  notification.error({\r\n    message: message || 'Something Went Wrong',\r\n    description: '',\r\n    icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n  });\r\n};\r\n\r\nconst initialValues = {\r\n  topic: '',\r\n  amount: null,\r\n};\r\n\r\ninterface Props {\r\n  addNewCategoryVisible?: any;\r\n  setAddNewCategoryVisible?: any;\r\n  tagList?: any;\r\n  setTagList?: any;\r\n  category?:any; \r\n  setTagDetailData?:any; \r\n}\r\n\r\nconst AddNewBrand = ({\r\n  addNewCategoryVisible,\r\n  setAddNewCategoryVisible,\r\n  category,\r\n  setTagDetailData\r\n}: Props) => {\r\n  const [addTagState, handleAddTagFetch] = useHandleFetch({}, 'updateExpense');\r\n  const [myImages, setmyImages] = useState(false);\r\n  const [visibleMedia, setvisibleMedia] = useState(false);\r\n  const [time, setTimeFeild] = useState('');\r\n  const [customerId, setCustomerId] = useState([]);\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    if(category && category.date){\r\n        setTimeFeild(category.date)\r\n    }\r\n  },[category]); \r\n\r\n  \r\n  const [customerListState, handleCustomerListFetch] = useHandleFetch(\r\n    {},\r\n    'staffList'\r\n  );\r\n\r\n  const [selectedCustomerData, setSelectedCustomerData] = useState({});\r\n\r\n  useEffect(() => {\r\n    const setCustomers = async () => {\r\n      const customerListRes = await handleCustomerListFetch({});\r\n    };\r\n    setCustomers();\r\n  }, []);\r\n\r\n  const handleSubmit = async (values: any, actions: any) => {\r\n    const addTagRes = await handleAddTagFetch({\r\n\t\turlOptions: {\r\n\t\t\tplaceHolders: {\r\n\t\t\t\tid: category.id || category._id\r\n\t\t\t}\r\n\t\t},\r\n      body: {\r\n        topic: values.topic.trim(),\r\n        amount: values.amount,\r\n        date: time,\r\n        staff: customerId,\r\n      },\r\n    });\r\n\r\n    // @ts-ignore\r\n    if (addTagRes && addTagRes.status === 'ok') {\r\n      openSuccessNotification();\r\n\r\n      setTagDetailData({\r\n          ...category,\r\n          // @ts-ignore\r\n        ...addTagRes,\r\n      });\r\n\r\n      actions.resetForm();\r\n      setAddNewCategoryVisible(false);\r\n    } else {\r\n      openErrorNotification();\r\n    }\r\n\r\n    actions.setSubmitting(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!addTagState['isLoading']) {\r\n      const error = addTagState['error'];\r\n      if (error['isError'] && Object.keys(error['error']).length > 0) {\r\n        if (error['error']['registerError']) {\r\n          // setServerErrors(error['error']['registerError']);\r\n        } else if (error['error']['checkoutError']) {\r\n          // setServerErrors(error['error']['checkoutError']);\r\n        } else {\r\n          // setServerErrors(error['error']);\r\n        }\r\n\r\n        const errors =\r\n          Object.values(error['error']).length > 0\r\n            ? Object.values(error['error'])\r\n            : [];\r\n        errors.forEach((err, i) => {\r\n          if (typeof err === 'string') {\r\n            openErrorNotification(err);\r\n          } else if (typeof err === 'object') {\r\n            if (err && Object.keys(err).length > 0) {\r\n              const errs = Object.values(err);\r\n              errs.forEach((err) => {\r\n                openErrorNotification(err);\r\n              });\r\n            }\r\n          }\r\n        });\r\n      }\r\n    }\r\n\r\n    if (!addTagState['isLoading'] && Object.keys(addTagState.data).length > 0) {\r\n      if (addTagState['data']['status'] === 'ok') {\r\n        // openSuccessNotification('Order Created Successfully');\r\n        // history.push({\r\n        //   pathname: '/orderDetails',\r\n        //   state: checkoutState['data']\r\n        // })\r\n        // clearCart();\r\n        // setIsModalShown(true);\r\n      }\r\n    }\r\n  }, [addTagState]);\r\n\r\n  const handleCancel = (e: any) => {\r\n    setAddNewCategoryVisible(false);\r\n  };\r\n\r\n  const getisSubmitButtonDisabled = (values, isValid) => {\r\n    if (!values.name || !isValid) {\r\n      return true;\r\n    }\r\n    return false;\r\n  };\r\n\r\n  const handleTimeChange = (date, dateString) => {\r\n    setTimeFeild(dateString);\r\n    // console.log('date', date, dateString);\r\n  };\r\n\r\n  return (\r\n    <Formik\r\n      onSubmit={(values, actions) => handleSubmit(values, actions)}\r\n      validationSchema={validationSchema}\r\n      validateOnBlur={false}\r\n      enableReinitialize={true}\r\n      initialValues={{ ...initialValues, ...category }}\r\n    >\r\n      {({\r\n        handleChange,\r\n        values,\r\n        handleSubmit,\r\n        errors,\r\n        isValid,\r\n        isSubmitting,\r\n        touched,\r\n        handleBlur,\r\n        setFieldTouched,\r\n        handleReset,\r\n      }) => (\r\n        <>\r\n          <Modal\r\n            style={{\r\n              top: '40px',\r\n            }}\r\n            title='Add New Expense'\r\n            visible={addNewCategoryVisible}\r\n            onOk={(e: any) => handleSubmit(e)}\r\n            onCancel={handleCancel}\r\n            okText='Update'\r\n            okButtonProps={{\r\n              loading: isSubmitting,\r\n              htmlType: 'submit',\r\n              //   disabled: getisSubmitButtonDisabled(values, isValid),\r\n            }}\r\n          >\r\n            <Input\r\n              label='Topic'\r\n              value={values.topic}\r\n              name='topic'\r\n              isError={\r\n                (touched.topic && errors.topic) ||\r\n                (!isSubmitting && addTagState.error['error']['topic'])\r\n              }\r\n              errorString={\r\n                (touched.topic && errors.topic) ||\r\n                (!isSubmitting && addTagState.error['error']['topic'])\r\n              }\r\n              onChange={(e: any) => {\r\n                handleChange(e);\r\n                setFieldTouched('topic');\r\n              }}\r\n            />\r\n\r\n            <Input\r\n              label='Amount'\r\n              value={values.amount}\r\n              name='amount'\r\n              type={'number'}\r\n              min={0}\r\n              isError={\r\n                (touched.amount && errors.amount) ||\r\n                (!isSubmitting && addTagState.error['error']['amount'])\r\n              }\r\n              errorString={\r\n                (touched.amount && errors.amount) ||\r\n                (!isSubmitting && addTagState.error['error']['amount'])\r\n              }\r\n              onChange={(e: any) => {\r\n                handleChange(e);\r\n                setFieldTouched('amount');\r\n              }}\r\n            />\r\n\r\n            <DatePicker\r\n              date={time}\r\n              placeholder='10/20/2020'\r\n              label='Date'\r\n              onChange={handleTimeChange}\r\n            />\r\n\r\n            <div\r\n              style={{\r\n                marginTop: '15px',\r\n              }}\r\n            ></div>\r\n\r\n            {/* <h4 className='inputFieldLabel'>Associative staff</h4>\r\n            <StaffIds\r\n              customerListState={customerListState}\r\n              setSelectedCustomerData={setSelectedCustomerData}\r\n              setCustomerId={setCustomerId}\r\n            /> */}\r\n          </Modal>\r\n\r\n          <MediaLibrary\r\n            setvisible={setvisibleMedia}\r\n            visible={visibleMedia}\r\n            setmyImages={setmyImages}\r\n            myImages={myImages}\r\n            isModalOpenForImages={true}\r\n          />\r\n        </>\r\n      )}\r\n    </Formik>\r\n  );\r\n};\r\n\r\nexport default AddNewBrand;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useParams, useHistory } from 'react-router';\r\n\r\n// import hooks\r\nimport { useHandleFetch } from '../../hooks';\r\n\r\n// import lib\r\nimport {\r\n  FileOutlined,\r\n  InboxOutlined,\r\n  RadiusUpleftOutlined,\r\n  RadiusUprightOutlined,\r\n  RadiusBottomleftOutlined,\r\n  RadiusBottomrightOutlined,\r\n  PlusOutlined,\r\n  DeleteOutlined,\r\n  EditOutlined,\r\n  CheckCircleOutlined,\r\n} from '@ant-design/icons';\r\n\r\nimport {\r\n  Skeleton,\r\n  Empty,\r\n  Popconfirm,\r\n  Upload,\r\n  message,\r\n  Switch,\r\n  Select,\r\n  Button,\r\n  notification,\r\n  Table,\r\n  Space,\r\n  Input as CoolInput,\r\n  Tooltip,\r\n  Modal,\r\n} from 'antd';\r\n\r\nimport moment from 'moment';\r\n\r\n// import components\r\nimport { DataTableSkeleton } from '../../components/Placeholders';\r\nimport ExpenseEdit from './ExpenseEdit';\r\n\r\nconst { Column, ColumnGroup } = Table;\r\nconst { Search } = CoolInput;\r\n\r\ninterface Props {\r\n  productRecord?: any;\r\n}\r\n\r\nconst NewBrandDetail = (props: Props) => {\r\n  const [tagDetailState, handleTagDetailFetch] = useHandleFetch(\r\n    {},\r\n    'expenseDetail'\r\n  );\r\n  const [tagProductsState, handleTagProductsFetch] = useHandleFetch(\r\n    {},\r\n    'tagProducts'\r\n  );\r\n  const [tagEditVisible, setTagEditVisible] = useState(false);\r\n  const [tagDetailData,setTagDetailData] = useState({}); \r\n\r\n  const params = useParams();\r\n  const tagId = params['id'];\r\n\r\n  useEffect(() => {\r\n    const getBrandDetail = async () => {\r\n      const res = await handleTagDetailFetch({\r\n        urlOptions: {\r\n          placeHolders: {\r\n            id: tagId,\r\n          },\r\n        },\r\n      });\r\n\r\n      // @ts-ignore\r\n      if(res){\r\n        // @ts-ignore\r\n        setTagDetailData(res); \r\n      }; \r\n\r\n\r\n\r\n    };\r\n\r\n    getBrandDetail();\r\n  }, [tagId]);\r\n\r\n  useEffect(() => {\r\n    const getTagProducts = async () => {\r\n      await handleTagProductsFetch({\r\n        urlOptions: {\r\n          placeHolders: {\r\n            id: tagId,\r\n          },\r\n        },\r\n      });\r\n    };\r\n\r\n    getTagProducts();\r\n  }, [tagId]);\r\n\r\n  console.log('tagProductsState', tagProductsState);\r\n\r\n  console.log('brandParams', params);\r\n\r\n  return (\r\n    <div className='brandDetailContainer'>\r\n      <div className='brandDetailContainer__heading'>\r\n        <h3>Expense Detail</h3>\r\n\r\n        {tagDetailState.done &&\r\n          tagDetailData &&\r\n          Object.keys(tagDetailData).length > 0 && (\r\n            <>\r\n              <ExpenseEdit\r\n                addNewCategoryVisible={tagEditVisible}\r\n                setAddNewCategoryVisible={setTagEditVisible}\r\n                category={tagDetailData}\r\n                setTagDetailData={setTagDetailData}\r\n              />\r\n              <Button\r\n                onClick={() => setTagEditVisible(true)}\r\n                type='link'\r\n                icon={<EditOutlined />}\r\n              >\r\n                Edit\r\n              </Button>\r\n            </>\r\n          )}\r\n      </div>\r\n      <Skeleton paragraph={{ rows: 2 }} loading={tagDetailState.isLoading}>\r\n        {tagDetailState.done &&\r\n          tagDetailData &&\r\n          !(Object.keys(tagDetailData).length > 0) && (\r\n            <Empty\r\n              description='No Expense found'\r\n              image={Empty.PRESENTED_IMAGE_SIMPLE}\r\n            />\r\n          )}\r\n\r\n        {tagDetailState.done &&\r\n          tagDetailData &&\r\n          Object.keys(tagDetailData).length > 0 && (\r\n            <div className='brandDetailContainer__header'>\r\n              <div className='brandDetailContainer__header-info'>\r\n                {tagDetailData['topic'] && (\r\n                  <h3>\r\n                    TOPIC:\r\n                    <span>{tagDetailData['topic']}</span>\r\n                  </h3>\r\n                )}\r\n                {tagDetailData['amount'] && (\r\n                  <h3>\r\n                    AMOUNT:\r\n                    <span>{tagDetailData['amount']}</span>\r\n                  </h3>\r\n                )}\r\n                {tagDetailData['date'] && (\r\n                  <h3>\r\n                    DATE:\r\n                    <span>\r\n                      {tagDetailState['data']['date'] &&\r\n                        moment(tagDetailState['data']['date']).format(\r\n                          'MMMM Do YYYY, h:mm a'\r\n                        )}\r\n                    </span>\r\n                  </h3>\r\n                )}\r\n                {tagDetailData[''] && (\r\n                  <h3>\r\n                    ASSOCIATIVE STAFF:\r\n                    <span>{tagDetailData['date']}</span>\r\n                  </h3>\r\n                )}\r\n              </div>\r\n            </div>\r\n          )}\r\n      </Skeleton>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NewBrandDetail;\r\n","import React, { useEffect, useState } from 'react';\r\n\r\n\r\n// import hooks\r\nimport { useHandleFetch } from '../../hooks';\r\n\r\n// import components \r\nimport Empty from \"../../components/Empty\";\r\n\r\n\r\n// import libraries \r\nimport { Button, Tag, Input, Spin } from 'antd';\r\nimport {\r\n  PlusOutlined\r\n} from '@ant-design/icons';\r\n\r\n\r\n\r\n\r\nconst { CheckableTag } = Tag;\r\nconst { Search } = Input;\r\n\r\ninterface Props {\r\n  setTagIds?: any;\r\n  selectedTags?: any;\r\n  setSelectedTags?: any;\r\n}\r\n\r\n\r\nconst Tags = ({\r\n  setTagIds,\r\n  setSelectedTags,\r\n  selectedTags,\r\n\r\n}: Props) => {\r\n  const [options, setoptions] = useState([]);\r\n  const [selectedOpions, setselectedOptions] = useState([]);\r\n  const [tagState, handleTagListFetch] = useHandleFetch({}, 'dealerAreaList');\r\n  const [searchValue, setsearchValue] = useState('');\r\n\r\n\r\n  const handleChange = (tag, checked) => {\r\n    const nextSelectedTags = checked ? [...selectedTags, tag] : selectedTags.filter(t => t !== tag);\r\n    setSelectedTags(nextSelectedTags);\r\n\r\n    if (tagState.done && tagState.data.length > 0 && nextSelectedTags.length > 0) {\r\n      const selectedCategoryIds = nextSelectedTags.map((item) => {\r\n        const selectedcategory = tagState.data.find(\r\n          (cat) => cat.name.toLowerCase() === item.toLowerCase()\r\n        );\r\n        if (selectedcategory) {\r\n          return selectedcategory.id;\r\n        }\r\n      });\r\n      setTagIds(selectedCategoryIds);\r\n    }\r\n  }\r\n\r\n\r\n  useEffect(() => {\r\n    console.log('itwhere')\r\n    if (tagState.data && tagState.data.length > 0 && selectedTags.length > 0) {\r\n      const selectedCategoryIds = selectedTags.map((item) => {\r\n        const selectedcategory = tagState.data.find(\r\n          (cat) => cat.id === item\r\n        );\r\n        if (selectedcategory) {\r\n          return selectedcategory.name;\r\n        }\r\n      });\r\n      setSelectedTags(selectedCategoryIds);\r\n    }\r\n  }, [tagState]);\r\n\r\n\r\n  console.log('areaSelectedTaga',selectedTags)\r\n  useEffect(() => {\r\n    const setTags = async () => {\r\n      const tagListRes = await handleTagListFetch({\r\n        urlOptions: {\r\n          params: {\r\n            isSubCategory: false\r\n          }\r\n        }\r\n      });\r\n\r\n      // @ts-ignoref\r\n      if (tagListRes && tagListRes.length > 0) {\r\n        // @ts-ignore\r\n        const tagOptions = tagListRes.map((tag) => {\r\n          return tag.name\r\n        });\r\n        setoptions(tagOptions);\r\n      }\r\n\r\n    };\r\n\r\n    setTags();\r\n  }, []);\r\n\r\n\r\n\r\n  // const handleChange = (selectItems) => {\r\n  //   setselectedOptions(selectItems)\r\n\r\n  //   if (tagState.done && tagState.data.length > 0 && selectItems.length > 0) {\r\n  //     const selectedCategoryIds = selectItems.map((item) => {\r\n  //       const selectedcategory = tagState.data.find(\r\n  //         (cat) => cat.name.toLowerCase() === item.toLowerCase()\r\n  //       );\r\n  //       if (selectedcategory) {\r\n  //         return selectedcategory.id;\r\n  //       }\r\n  //     });\r\n  //     setTagIds(selectedCategoryIds);\r\n  //   }\r\n\r\n\r\n  // }\r\n\r\n\r\n  const onSearchChange = (e) => {\r\n    setsearchValue(e.target.value);\r\n\r\n    if (e.target.value === '') {\r\n      if (tagState.data && tagState.data.length > 0) {\r\n        // @ts-ignore\r\n        const categoryNames = tagState.data.map((cat) => cat.name);\r\n        setoptions(categoryNames);\r\n      }\r\n    } else {\r\n      const newOptions =\r\n        options.length > 0\r\n          ? options.filter((option) => {\r\n            return option.toLowerCase().includes(searchValue.toLowerCase());\r\n          })\r\n          : [];\r\n\r\n      setoptions(newOptions);\r\n    }\r\n  };\r\n\r\n\r\n  console.log('dealerAreaList', tagState)\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n\r\n      {tagState.isLoading && (\r\n        <div style={{\r\n          padding: '15px 0',\r\n          width: '100%',\r\n          height: \"100%\",\r\n          display: \"flex\",\r\n          justifyContent: 'center',\r\n          alignItems: 'center'\r\n        }}>\r\n          <Spin />\r\n        </div>\r\n      )}\r\n\r\n\r\n\r\n      {tagState.done && !(tagState.data.length > 0) && (\r\n        <div style={{\r\n          width: '100%',\r\n          height: \"100%\",\r\n          display: \"flex\",\r\n          justifyContent: 'center',\r\n          alignItems: 'center'\r\n        }}>\r\n          <Empty title='No Area found' height={100} />\r\n        </div>\r\n      )}\r\n\r\n\r\n\r\n\r\n      {tagState.done && tagState.data.length > 0 && options.length > 0 && (\r\n        <>\r\n          <div className='addProduct__categoryBoxContainer-searchBox'>\r\n            <Search\r\n              width={'90%'}\r\n              style={{\r\n                height: '30px',\r\n                borderRadius: '3px !important',\r\n                borderColor: '#eee !important'\r\n              }}\r\n              size='middle'\r\n              placeholder='Dhanmondi, mirpur'\r\n              onSearch={(value) => console.log(value)}\r\n              onChange={onSearchChange}\r\n            />\r\n          </div>\r\n\r\n          {options.map(tag => (\r\n            <>\r\n              <CheckableTag\r\n                key={tag}\r\n                checked={selectedTags.indexOf(tag) > -1}\r\n                onChange={checked => handleChange(tag, checked)}\r\n              >\r\n                {tag}\r\n              </CheckableTag>\r\n            </>\r\n          ))}\r\n        </>\r\n      )}\r\n\r\n\r\n      {/* \r\n      <div style={{\r\n        marginTop: '15px'\r\n      }}>\r\n\r\n      </div>\r\n      <Button\r\n\r\n        // type=\"primary\"\r\n        className='btnSecondaryPlusOutline'\r\n        icon={<PlusOutlined />}\r\n      >\r\n        Add New\r\n      </Button> */}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Tags\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n\r\nimport { useHandleFetch } from '../../hooks';\r\n// import third party ui lib\r\nimport { Upload, message, Switch, Select, Button, notification, Modal, Empty, Form } from 'antd';\r\n\r\nimport {\r\n\tFileOutlined,\r\n\tInboxOutlined,\r\n\tRadiusUpleftOutlined,\r\n\tRadiusUprightOutlined,\r\n\tRadiusBottomleftOutlined,\r\n\tRadiusBottomrightOutlined,\r\n\tDeleteOutlined,\r\n\tFileAddOutlined,\r\n\tCheckCircleOutlined,\r\n\tInfoCircleOutlined\r\n} from '@ant-design/icons';\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\n\r\nimport Areas from \"./Areas\";\r\nconst { Option } = Select;\r\n\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n\tfirstName: Yup.string()\r\n\t\t.label('First name')\r\n\t\t.required()\r\n\t\t.min(2, 'First name must have at least 2 characters '),\r\n\tlastName: Yup.string()\r\n\t\t.label('Lastname')\r\n\t\t.required()\r\n\t\t.min(2, 'Last name must have at least 2 characters '),\r\n\tphone: Yup.string()\r\n\t\t.required('Please tell us your mobile number.')\r\n\t\t.max(13, 'Please enter a valid mobile number.'),\r\n\tpassword: Yup.string()\r\n\t\t.label('Password')\r\n\t\t.required()\r\n\t\t.min(6, 'Password must have at least 6 characters'),\r\n\r\n\temail: Yup.string().label('Email').email('Please enter a valid email'),\r\n});\r\n\r\n\r\n\r\n\r\nconst initialValues = {\r\n\tphone: '',\r\n\temail: '',\r\n\tfirstName: '',\r\n\tlastName: '',\r\n\taddress: '',\r\n\tzipCode: '',\r\n\tpassword: '',\r\n\tcode: '',\r\n\tcommission: '',\r\n\tdepositMoney: ''\r\n};\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t\tmessage: message || 'Dealer Created!',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n\tnotification.error({\r\n    message: message || 'Something Went Wrong',\r\n    description: '',\r\n    icon: <InfoCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n  });\r\n};\r\n\r\n\r\ninterface Props {\r\n\taddNewCategoryVisible: any;\r\n\tsetAddNewCategoryVisible: any;\r\n\tcustomerList?: any;\r\n\tsetCustomerList?: any;\r\n}\r\n\r\nconst AddNewCategory = ({ addNewCategoryVisible, setAddNewCategoryVisible, customerList, setCustomerList }: Props) => {\r\n\r\n\tconst [addCustomerState, handleAddCustomerFetch] = useHandleFetch({}, 'addDealer');\r\n\tconst [selectedCountryValue, setselectedCountryValue] = useState('');\r\n\tconst [selectedCityValue, setselectedCityValue] = useState('');\r\n\r\n\tconst [countryOptions, setcountryOptions] = useState([]);\r\n\tconst [cityOptions, setcityOptions] = useState([]);\r\n\r\n\tconst [countryListState, handleCountryListFetch] = useHandleFetch(\r\n\t\t[],\r\n\t\t'countryList'\r\n\t);\r\n\r\n\tconst [cityListState, handleCityListFetch] = useHandleFetch([], 'cityList');\r\n\r\n\tconst [tagIds, setTagIds] = useState([]);\r\n\tconst [selectedTags, setSelectedTags] = useState([]);\r\n\r\n\r\n\r\n\r\n\tconst handleSubmit = async (values: any, actions: any) => {\r\n\r\n\t\tconst addCustomerRes = await handleAddCustomerFetch({\r\n\r\n\t\t\tbody: {\r\n\t\t\t\tphone: values.phone,\r\n\t\t\t\temail: values.email,\r\n\t\t\t\tpassword: values.password,\r\n\t\t\t\taddress: values.address,\r\n\t\t\t\tfirstName: values.firstName,\r\n\t\t\t\tlastName: values.lastName,\r\n\t\t\t\tcode: values.code,\r\n\t\t\t\tcommission: values.commission,\r\n\t\t\t\tdepositMoney: values.depositMoney,\r\n\t\t\t\tdealerArea: tagIds\r\n\t\t\t},\r\n\t\t});\r\n\r\n\r\n\t\t// @ts-ignore\r\n\t\tif (addCustomerRes && addCustomerRes.status === 'ok') {\r\n\t\t\t// openSuccessNotification();\r\n\r\n\t\t\tsetCustomerList([{\r\n\t\t\t\tid: addCustomerRes['_id'] || '',\r\n\t\t\t\tkey: addCustomerRes['_id'] || '',\r\n\t\t\t\tname: addCustomerRes['firstName'] + ' ' + addCustomerRes['lastName'],\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\t...addCustomerRes\r\n\t\t\t},...customerList])\r\n\t\t\tsetAddNewCategoryVisible(false);\r\n\t\t\tactions.resetForm();\r\n\t\t}\r\n\t\telse {\r\n\t\t\topenErrorNotification();\r\n\t\t}\r\n\r\n\r\n\r\n\t\tactions.setSubmitting(false);\r\n\t};\r\n\r\n\r\n\r\n\tconst onChangeCity = (value) => {\r\n\t\tsetselectedCityValue(value);\r\n\t}\r\n\r\n\tconst onChangeCountry = (value) => {\r\n\t\tsetselectedCountryValue(value);\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tconst setCountries = async () => {\r\n\t\t\tconst CountryListRes = await handleCountryListFetch({});\r\n\r\n\t\t\t// @ts-ignore\r\n\t\t\tif (CountryListRes && CountryListRes.length > 0) {\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\tconst countryOptions = CountryListRes.map((country) => {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tvalue: country.name,\r\n\t\t\t\t\t\tname: country.name\r\n\t\t\t\t\t};\r\n\t\t\t\t});\r\n\t\t\t\tsetcountryOptions(countryOptions);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tsetCountries();\r\n\t}, []);\r\n\r\n\r\n\tuseEffect(() => {\r\n\t\tconsole.log('selectedCountryValue1',selectedCountryValue)\r\n\t\tconst setCities = async () => {\r\n\t\t\tconst cityListRes = await handleCityListFetch({\r\n\t\t\t\turlOptions: {\r\n\t\t\t\t\tplaceHolders: {\r\n\t\t\t\t\t\tcountry: selectedCountryValue,\r\n\t\t\t\t\t},\r\n\t\t\t\t},\r\n\t\t\t});\r\n\r\n\t\t\t// @ts-ignore\r\n\t\t\tif (cityListRes && cityListRes.length > 0) {\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\tconst cityOptions = cityListRes.map((city) => {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tvalue: city.name,\r\n\t\t\t\t\t\tname: city.name\r\n\t\t\t\t\t};\r\n\t\t\t\t});\r\n\t\t\t\tsetcityOptions(cityOptions);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tsetCities();\r\n\t}, [selectedCountryValue]);\r\n\r\n\r\n\r\n\t\r\n\tuseEffect(() => {\r\n\t\tif (!addCustomerState['isLoading']) {\r\n\t\t\tconst error = addCustomerState['error'];\r\n\t\t\tif (error['isError'] && Object.keys(error['error']).length > 0) {\r\n\r\n\t\t\t\tif (error['error']['registerError']) {\r\n\t\t\t\t\t// setServerErrors(error['error']['registerError']);\r\n\t\t\t\t} else if (error['error']['checkoutError']) {\r\n\t\t\t\t\t// setServerErrors(error['error']['checkoutError']);\r\n\t\t\t\t}\r\n\r\n\t\t\t\telse {\r\n\t\t\t\t\t// setServerErrors(error['error']);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst errors =\r\n\t\t\t\t\tObject.values(error['error']).length > 0\r\n\t\t\t\t\t\t? Object.values(error['error'])\r\n\t\t\t\t\t\t: [];\r\n\t\t\t\terrors.forEach((err, i) => {\r\n\t\t\t\t\tif (typeof err === 'string') {\r\n\t\t\t\t\t\topenErrorNotification(err);\r\n\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if (typeof err === 'object') {\r\n\t\t\t\t\t\tif (err && Object.keys(err).length > 0) {\r\n\t\t\t\t\t\t\tconst errs = Object.values(err);\r\n\t\t\t\t\t\t\terrs.forEach(err => {\r\n\t\t\t\t\t\t\t\topenErrorNotification(err);\r\n\t\t\t\t\t\t\t})\r\n\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (\r\n\t\t\t!addCustomerState['isLoading'] &&\r\n\t\t\tObject.keys(addCustomerState.data).length > 0\r\n\t\t) {\r\n\t\t\tif (addCustomerState['data']['status'] === 'ok') {\r\n\t\t\t\topenSuccessNotification('Dealer Created Successfully');\r\n\t\t\t\t// history.push({\r\n\t\t\t\t//   pathname: '/orderDetails',\r\n\t\t\t\t//   state: checkoutState['data']\r\n\t\t\t\t// })\r\n\r\n\t\t\t\t// clearCart();\r\n\t\t\t\t// setIsModalShown(true);\r\n\t\t\t}\r\n\t\t}\r\n\t}, [addCustomerState]);\r\n\r\n\r\n\r\n\r\n\tconst handleCancel = (e: any) => {\r\n\t\tsetAddNewCategoryVisible(false);\r\n\t};\r\n\r\n\r\n\tconst getisSubmitButtonDisabled = (values, isValid) => {\r\n\t\tif (!isValid ||\r\n\t\t\t!values.firstName ||\r\n\t\t\t!values.lastName ||\r\n\t\t\t!values.password ||\r\n\t\t\t!values.phone ||\r\n\t\t\t!values.code \r\n\t\t\t) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\r\n\r\n\tconsole.log('cityListState', cityListState)\r\n\r\n\r\n\r\n\r\n\treturn (\r\n\t\t<Formik\r\n\t\t\tonSubmit={(values, actions) => handleSubmit(values, actions)}\r\n\t\t\tvalidationSchema={validationSchema}\r\n\t\t\tvalidateOnBlur={false}\r\n\t\t\tenableReinitialize={true}\r\n\t\t\tinitialValues={\r\n\t\t\t\t{ ...initialValues }\r\n\t\t\t}\r\n\t\t>\r\n\t\t\t{({\r\n\t\t\t\thandleChange,\r\n\t\t\t\tvalues,\r\n\t\t\t\thandleSubmit,\r\n\t\t\t\terrors,\r\n\t\t\t\tisValid,\r\n\t\t\t\tisSubmitting,\r\n\t\t\t\ttouched,\r\n\t\t\t\thandleBlur,\r\n\t\t\t\tsetFieldTouched,\r\n\t\t\t\thandleReset,\r\n\t\t\t}) => (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<Modal\r\n\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\ttop: '40px',\r\n\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\tbodyStyle={{\r\n\t\t\t\t\t\t\t\tmargin: 0,\r\n\t\t\t\t\t\t\t\tpadding: 0,\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\twidth={'70vw'}\r\n\t\t\t\t\t\t\ttitle=\"Add New Dealer\"\r\n\t\t\t\t\t\t\tvisible={addNewCategoryVisible}\r\n\t\t\t\t\t\t\tonOk={(e: any) => handleSubmit(e)}\r\n\t\t\t\t\t\t\tonCancel={handleCancel}\r\n\t\t\t\t\t\t\tokText='Create'\r\n\t\t\t\t\t\t\tokButtonProps={{\r\n\t\t\t\t\t\t\t\tloading: isSubmitting,\r\n\t\t\t\t\t\t\t\thtmlType: \"submit\",\r\n\t\t\t\t\t\t\t\tdisabled: getisSubmitButtonDisabled(values, isValid)\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\r\n\t\t\t\t\t\t\t\t\r\n\r\n\t\t\t\t\t\t\t<section className='addProductGridContainer'>\r\n\t\t\t\t\t\t\t\t<div className='addProductGridContainer__left'>\r\n\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__name'>\r\n\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__item-header'>\r\n\t\t\t\t\t\t\t\t\t\t\t<h3>\r\n\t\t\t\t\t\t\t\t\t\t\t\tDealer Information *\r\n\t\t\t\t\t\t\t\t\t\t\t</h3>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__item-body'>\r\n\r\n\t\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs'>\r\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\tlabel='First Name'\r\n\t\t\t\t\t\t\t\t\t\tvalue={values.firstName}\r\n\t\t\t\t\t\t\t\t\t\tname='firstName'\r\n\t\t\t\t\t\t\t\t\t\tisError={(touched.firstName && errors.firstName) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['firstName'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\terrorString={(touched.firstName && errors.firstName) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['firstName'])}\r\n\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('firstName');\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\tlabel='Last Name'\r\n\t\t\t\t\t\t\t\t\t\tvalue={values.lastName}\r\n\t\t\t\t\t\t\t\t\t\tname='lastName'\r\n\t\t\t\t\t\t\t\t\t\tisError={(touched.lastName && errors.lastName) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['lastName'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\terrorString={(touched.lastName && errors.lastName) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['lastName'])}\r\n\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('lastName');\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t<div className='dubbleRowInputs'>\r\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\tlabel='Phone'\r\n\t\t\t\t\t\t\t\t\t\tvalue={values.phone}\r\n\t\t\t\t\t\t\t\t\t\tname='phone'\r\n\t\t\t\t\t\t\t\t\t\tisError={(touched.phone && errors.phone) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['phone'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\terrorString={(touched.phone && errors.phone) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['phone'])}\r\n\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('phone');\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\tlabel='Email'\r\n\t\t\t\t\t\t\t\t\t\tvalue={values.email}\r\n\t\t\t\t\t\t\t\t\t\tname='email'\r\n\t\t\t\t\t\t\t\t\t\tisError={(touched.email && errors.email) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['email'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\terrorString={(touched.email && errors.email) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['email'])}\r\n\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('email');\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\t\t\t\t\t\t\t<div className='dubbleRowInputs'>\r\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\tlabel='Dealer Code'\r\n\t\t\t\t\t\t\t\t\ttype='text'\r\n\t\t\t\t\t\t\t\t\tvalue={values.code}\r\n\t\t\t\t\t\t\t\t\tname='code'\r\n\t\t\t\t\t\t\t\t\tisError={(touched.code && errors.code) ||\r\n\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['code'])}\r\n\r\n\t\t\t\t\t\t\t\t\terrorString={(touched.code && errors.code) ||\r\n\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['code'])}\r\n\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\tsetFieldTouched('code');\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\tlabel='Password'\r\n\t\t\t\t\t\t\t\t\ttype='password'\r\n\t\t\t\t\t\t\t\t\tvalue={values.password}\r\n\t\t\t\t\t\t\t\t\tname='password'\r\n\t\t\t\t\t\t\t\t\tisError={(touched.password && errors.password) ||\r\n\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['password'])}\r\n\r\n\t\t\t\t\t\t\t\t\terrorString={(touched.password && errors.password) ||\r\n\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['password'])}\r\n\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\tsetFieldTouched('password');\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t<div className='dubbleRowInputs'>\r\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\tlabel='Deposit Money'\r\n\t\t\t\t\t\t\t\t\ttype='text'\r\n\t\t\t\t\t\t\t\t\tvalue={values.depositMoney}\r\n\t\t\t\t\t\t\t\t\tname='depositMoney'\r\n\t\t\t\t\t\t\t\t\tisError={(touched.depositMoney && errors.depositMoney) ||\r\n\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['depositMoney'])}\r\n\r\n\t\t\t\t\t\t\t\t\terrorString={(touched.depositMoney && errors.depositMoney) ||\r\n\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['depositMoney'])}\r\n\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\tsetFieldTouched('depositMoney');\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\tlabel='Commission'\r\n\t\t\t\t\t\t\t\t\ttype='commission'\r\n\t\t\t\t\t\t\t\t\tvalue={values.commission}\r\n\t\t\t\t\t\t\t\t\tname='commission'\r\n\t\t\t\t\t\t\t\t\tisError={(touched.commission && errors.commission) ||\r\n\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['commission'])}\r\n\r\n\t\t\t\t\t\t\t\t\terrorString={(touched.commission && errors.commission) ||\r\n\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['commission'])}\r\n\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\tsetFieldTouched('commission');\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\tmarginTop: '12px'\r\n\t\t\t\t\t\t\t}}></div>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\tlabel='Address'\r\n\t\t\t\t\t\t\t\t\t\tvalue={values.address}\r\n\t\t\t\t\t\t\t\t\t\tname='address'\r\n\t\t\t\t\t\t\t\t\t\tisError={(touched.address && errors.address) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['address'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\terrorString={(touched.address && errors.address) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['address'])}\r\n\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('address');\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className='addProductGridContainer__right'>\r\n\r\n\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__tag'>\r\n\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer-rightItemContainer'>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer-rightItemContainer-header'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<h3>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tAreas *\r\n\t\t\t\t\t\t\t\t\t\t\t\t</h3>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer-rightItemContainer-body'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Areas\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetSelectedTags={setSelectedTags}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tselectedTags={selectedTags}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetTagIds={setTagIds} />\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</section>\r\n\r\n\t\r\n\r\n\r\n\r\n\r\n\t\t\t\t\t\t</Modal>\r\n\r\n\t\t\t\t\t</>\r\n\t\t\t\t)}\r\n\t\t</Formik>\r\n\r\n\r\n\r\n\r\n\t);\r\n};\r\n\r\nexport default AddNewCategory;\r\n","import React,{useState, useEffect} from 'react';\r\nimport { Modal, Select,notification , Form, Empty } from 'antd';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\nimport { PlusOutlined, EditOutlined, DeleteOutlined,EditFilled, CheckCircleOutlined, InfoCircleOutlined } from '@ant-design/icons';\r\n\r\n\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport {useHandleFetch} from '../../hooks';\r\nimport Areas from \"./Areas\";\r\n\r\n\r\n\r\nconst { Option } = Select;\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    firstName: Yup.string()\r\n      .label('Firstname')\r\n      .required()\r\n      .min(2, 'First name must have at least 2 characters '),\r\n    lastName: Yup.string()\r\n      .label('Lastname')\r\n      .required()\r\n      .min(2, 'Lastname must have at least 2 characters '),\r\n    phone: Yup.string()\r\n      .required('Please tell us your mobile number.')\r\n      .max(13, 'Please enter a valid mobile number.'),\r\n    password: Yup.string()\r\n      .label('Password')\r\n      .min(6, 'Password must have at least 6 characters'),\r\n    email: Yup.string().label('Email').email('Please enter a valid email'),\r\n  });\r\n\r\n\r\n\r\n  \r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t  message: message || 'Dealer Updated',\r\n\t  description: '',\r\n\t  icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n  };\r\n\r\n\r\n  const openErrorNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t  message: message || 'Something Went Wrong',\r\n\t  description: '',\r\n\t  icon: <InfoCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n  };\r\n\r\n\r\n\r\n\r\n\r\n\r\ninterface Props {\r\n\tcustomer: any;\r\n\tsetvisible: any; \r\n\tvisible: any;\r\n\tcustomerList?: any; \r\n\tsetCustomerList?:any\r\n\r\n}\r\n\r\nconst QuickEdit = ({ customer, setvisible, visible, customerList, setCustomerList }: Props) => {\r\n\tconst [updateCustomerState, handleUpdateCustomerFetch] = useHandleFetch({}, 'updateDealer');\r\n\r\n\r\n\tconst [selectedCountryValue,setselectedCountryValue] = useState(''); \r\n    const [selectedCityValue,setselectedCityValue] = useState(''); \r\n\r\n    const [countryOptions,setcountryOptions] = useState([]); \r\n    const [cityOptions,setcityOptions] = useState([]); \r\n\r\n    const [countryListState, handleCountryListFetch] = useHandleFetch(\r\n        [],\r\n        'countryList'\r\n      );\r\n    \r\n      const [cityListState, handleCityListFetch] = useHandleFetch([], 'cityList');\r\n    \r\n\r\n\t  const [tagIds, setTagIds] = useState([]);\r\n\t  const [selectedTags, setSelectedTags] = useState([]);\r\n  \r\n\r\n\r\n\t  useEffect(() => {\r\n\r\n\t\tconsole.log('customerAreaCheck',customer)\r\n\t\tif (customer && customer.area && customer.area.length > 0) {\r\n\t\t\tconst tagIds = customer.area.map(item => item._id);\r\n\t\t\t\r\n\t\t\tsetSelectedTags(tagIds);\r\n\t\t\tsetTagIds(tagIds)\r\n        }\r\n        else {\r\n            setSelectedTags([]);\r\n\r\n        }\r\n\t}, [customer.id]);\r\n\t\r\n\r\n\r\n\r\n\tconst handleSubmit = async (values : any, actions : any) => {\r\n\t  const updateCustomerRes = await handleUpdateCustomerFetch({\r\n\t\turlOptions: {\r\n\t\t\tplaceHolders: {\r\n\t\t\t  id: values.id,\r\n\t\t\t}\r\n\t\t  },\r\n\t\tbody: {\r\n\t\t\tphone: values.phone,\r\n\t\t\temail: values.email,\r\n\t\t\tpassword: values.password,\r\n\t\t\taddress: values.address,\r\n\t\t\tfirstName: values.firstName,\r\n\t\t\tlastName: values.lastName,\r\n\t\t\tcode: values.code,\r\n\t\t\tcommission: values.commission,\r\n\t\t\tdepositMoney: values.depositMoney,\r\n\t\t\tdealerArea: tagIds\r\n\t\t},\r\n\t  });\r\n\t\r\n\r\n\t   \t  // @ts-ignore\r\n\t\t\t if(updateCustomerRes && updateCustomerRes.status === 'ok'){\r\n\t\t\t\t// openSuccessNotification(); \r\n\t\t\r\n\t\t\t\tsetvisible(false); \r\n\r\n\t\t\t\tconst positionInTag = () => {\r\n\t\t\t\t\treturn customerList.map(item => item.id).indexOf(customer.id);\r\n\t\t\t\t  }\r\n\t\t\r\n\t\t\t\t  const index = positionInTag();\r\n\t\t\r\n\t\t\t\t  // @ts-ignore\r\n\t\t\t\t  const updatedItem = Object.assign({}, customerList[index], { \r\n\t\t\t\t\t  // @ts-ignore\r\n\t\t\t\t\t...updateCustomerRes, \r\n\t\t\t\t\t\r\n\t\t\t\t\tid: updateCustomerRes['_id'] || '',\r\n\t\t\t\t\tkey: updateCustomerRes['_id'] || '',\r\n\t\t\t\t\tname: updateCustomerRes['firstName'] + ' ' + updateCustomerRes['lastName'],\r\n\r\n\t\t\t\t   });\r\n\t\t\t\t  const updateTagList = [...customerList.slice(0, index), updatedItem, ...customerList.slice(index + 1)];\r\n\t\t\t\t  setCustomerList(updateTagList); \r\n\t\t\t\t\r\n\t\t\t  }\r\n\t\t\t  else {\r\n\t\t\t\topenErrorNotification();\r\n\t\t\t  }\r\n\t\t\t\r\n\t\t\t  actions.setSubmitting(false);\r\n\t};\r\n\t\r\n\r\n\r\n\tuseEffect(() => {\r\n\t\tif (!updateCustomerState['isLoading']) {\r\n\t\t\tconst error = updateCustomerState['error'];\r\n\t\t\tif (error['isError'] && Object.keys(error['error']).length > 0) {\r\n\r\n\t\t\t\tif (error['error']['registerError']) {\r\n\t\t\t\t\t// setServerErrors(error['error']['registerError']);\r\n\t\t\t\t} else if (error['error']['checkoutError']) {\r\n\t\t\t\t\t// setServerErrors(error['error']['checkoutError']);\r\n\t\t\t\t}\r\n\r\n\t\t\t\telse {\r\n\t\t\t\t\t// setServerErrors(error['error']);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst errors =\r\n\t\t\t\t\tObject.values(error['error']).length > 0\r\n\t\t\t\t\t\t? Object.values(error['error'])\r\n\t\t\t\t\t\t: [];\r\n\t\t\t\terrors.forEach((err, i) => {\r\n\t\t\t\t\tif (typeof err === 'string') {\r\n\t\t\t\t\t\topenErrorNotification(err);\r\n\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if (typeof err === 'object') {\r\n\t\t\t\t\t\tif (err && Object.keys(err).length > 0) {\r\n\t\t\t\t\t\t\tconst errs = Object.values(err);\r\n\t\t\t\t\t\t\terrs.forEach(err => {\r\n\t\t\t\t\t\t\t\topenErrorNotification(err);\r\n\t\t\t\t\t\t\t})\r\n\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (\r\n\t\t\t!updateCustomerState['isLoading'] &&\r\n\t\t\tObject.keys(updateCustomerState.data).length > 0\r\n\t\t) {\r\n\t\t\tif (updateCustomerState['data']['status'] === 'ok') {\r\n\t\t\t\topenSuccessNotification('Dealer Updated Successfully');\r\n\t\t\t\t// history.push({\r\n\t\t\t\t//   pathname: '/orderDetails',\r\n\t\t\t\t//   state: checkoutState['data']\r\n\t\t\t\t// })\r\n\r\n\t\t\t\t// clearCart();\r\n\t\t\t\t// setIsModalShown(true);\r\n\t\t\t}\r\n\t\t}\r\n\t}, [updateCustomerState]);\r\n\r\n\r\n\r\n\r\n\t\r\n    const onChangeCity = (value) => {\r\n        setselectedCityValue(value); \r\n    }\r\n\r\n    const onChangeCountry = (value) => {\r\n        setselectedCountryValue(value); \r\n    }\r\n    \r\n\tuseEffect(() => {\r\n\t\tconst setCountries = async () => {\r\n\t\t\tconst CountryListRes = await handleCountryListFetch({});\r\n\r\n\t\t\t// @ts-ignore\r\n\t\t\tif (CountryListRes && CountryListRes.length > 0) {\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\tconst countryOptions = CountryListRes.map((country) => {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tvalue: country.name,\r\n\t\t\t\t\t\tname: country.name\r\n\t\t\t\t\t};\r\n\t\t\t\t});\r\n\t\t\t\tsetcountryOptions(countryOptions);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tsetCountries();\r\n    }, []);\r\n    \r\n\r\n    useEffect(() => {\r\n\t\tconst setCities = async () => {\r\n\t\t\tconst cityListRes = await handleCityListFetch({\r\n                urlOptions: {\r\n                    placeHolders: {\r\n                      country: selectedCountryValue,\r\n                    },\r\n                  },\r\n            });\r\n\r\n\t\t\t// @ts-ignore\r\n\t\t\tif (cityListRes && cityListRes.length > 0) {\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\tconst cityOptions = cityListRes.map((city) => {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tvalue: city.name,\r\n\t\t\t\t\t\tname: city.name\r\n\t\t\t\t\t};\r\n\t\t\t\t});\r\n\t\t\t\tsetcityOptions(cityOptions);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tsetCities();\r\n    }, [selectedCountryValue]);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\tconst handleCancel = (e: any) => {\r\n        setvisible(false);\r\n      };\r\n\r\n\r\n\r\n\t  const getisSubmitButtonDisabled = (values,isValid) => {\r\n\t\tif(!isValid ||\r\n\t\t\t!values.firstName ||\r\n\t\t\t!values.lastName ||\r\n\t\t\t// !values.password ||\r\n\t\t\t!values.phone ||\r\n\t\t\t!values.code ){\r\n\t\t\treturn true; \r\n\t\t}\r\n\t\treturn false; \r\n\t  }\r\n\r\n\treturn (\r\n\t\t<Formik\r\n\t\tonSubmit={(values, actions) => handleSubmit(values, actions)}\r\n\t\tvalidationSchema={validationSchema}\r\n\t\tvalidateOnBlur={false}\r\n\t\tenableReinitialize={true}\r\n\t\tinitialValues={\r\n\t\t  {...customer}\r\n\t\t}\r\n\t  >\r\n\t\t{({\r\n\t\t  handleChange,\r\n\t\t  values,\r\n\t\t  handleSubmit,\r\n\t\t  errors,\r\n\t\t  isValid,\r\n\t\t  isSubmitting,\r\n\t\t  touched,\r\n\t\t  handleBlur,\r\n\t\t  setFieldTouched,\r\n\t\t  handleReset,\r\n\t\t}) => (\r\n\t\t\t<>\r\n\t\t\t<Modal\r\n\t\t\ttitle=\"Quick Edit\"\r\n\t\t\twidth={'70vw'}\r\n\t\t\tvisible={visible}\r\n\t\t\tonOk={(e : any) => handleSubmit(e)}\r\n\t\t\tonCancel={handleCancel}\r\n\t\t\tokText='Update'\r\n\t\t\tdestroyOnClose={true}\r\n\t\t\tokButtonProps={{\r\n\t\t\tloading: isSubmitting,\r\n\t\t\thtmlType: \"submit\",\r\n\t\t\tdisabled: getisSubmitButtonDisabled(values, isValid)\r\n\t\t\t}}\r\n\t\t\tbodyStyle={{\r\n                margin: '0',\r\n                padding: '10px'\r\n            }}\r\n  >\r\n\r\n\t  {console.log('errorsupdatedealer',errors)}\r\n\r\n<section className='addProductGridContainer'>\r\n\t\t\t\t\t\t\t\t<div className='addProductGridContainer__left'>\r\n\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__name'>\r\n\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__item-header'>\r\n\t\t\t\t\t\t\t\t\t\t\t<h3>\r\n\t\t\t\t\t\t\t\t\t\t\t\tDealer Information *\r\n\t\t\t\t\t\t\t\t\t\t\t</h3>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__item-body'>\r\n\r\n\t\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs'>\r\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\tlabel='First Name'\r\n\t\t\t\t\t\t\t\t\t\tvalue={values.firstName}\r\n\t\t\t\t\t\t\t\t\t\tname='firstName'\r\n\t\t\t\t\t\t\t\t\t\tisError={(touched.firstName && errors.firstName) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateCustomerState.error['error']['firstName'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\terrorString={(touched.firstName && errors.firstName) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateCustomerState.error['error']['firstName'])}\r\n\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('firstName');\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\tlabel='Last Name'\r\n\t\t\t\t\t\t\t\t\t\tvalue={values.lastName}\r\n\t\t\t\t\t\t\t\t\t\tname='lastName'\r\n\t\t\t\t\t\t\t\t\t\tisError={(touched.lastName && errors.lastName) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateCustomerState.error['error']['lastName'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\terrorString={(touched.lastName && errors.lastName) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateCustomerState.error['error']['lastName'])}\r\n\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('lastName');\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t<div className='dubbleRowInputs'>\r\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\tlabel='Phone'\r\n\t\t\t\t\t\t\t\t\t\tvalue={values.phone}\r\n\t\t\t\t\t\t\t\t\t\tname='phone'\r\n\t\t\t\t\t\t\t\t\t\tisError={(touched.phone && errors.phone) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateCustomerState.error['error']['phone'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\terrorString={(touched.phone && errors.phone) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateCustomerState.error['error']['phone'])}\r\n\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('phone');\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\tlabel='Email'\r\n\t\t\t\t\t\t\t\t\t\tvalue={values.email}\r\n\t\t\t\t\t\t\t\t\t\tname='email'\r\n\t\t\t\t\t\t\t\t\t\tisError={(touched.email && errors.email) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateCustomerState.error['error']['email'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\terrorString={(touched.email && errors.email) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateCustomerState.error['error']['email'])}\r\n\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('email');\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\t\t\t\t\t\t\t<div className='dubbleRowInputs'>\r\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\tlabel='Dealer Code'\r\n\t\t\t\t\t\t\t\t\ttype='text'\r\n\t\t\t\t\t\t\t\t\tvalue={values.code}\r\n\t\t\t\t\t\t\t\t\tname='code'\r\n\t\t\t\t\t\t\t\t\tisError={(touched.code && errors.code) ||\r\n\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateCustomerState.error['error']['code'])}\r\n\r\n\t\t\t\t\t\t\t\t\terrorString={(touched.code && errors.code) ||\r\n\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateCustomerState.error['error']['code'])}\r\n\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\tsetFieldTouched('code');\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\tlabel='Password'\r\n\t\t\t\t\t\t\t\t\ttype='password'\r\n\t\t\t\t\t\t\t\t\tvalue={values.password}\r\n\t\t\t\t\t\t\t\t\tname='password'\r\n\t\t\t\t\t\t\t\t\tisError={(touched.password && errors.password) ||\r\n\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateCustomerState.error['error']['password'])}\r\n\r\n\t\t\t\t\t\t\t\t\terrorString={(touched.password && errors.password) ||\r\n\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateCustomerState.error['error']['password'])}\r\n\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\tsetFieldTouched('password');\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t<div className='dubbleRowInputs'>\r\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\tlabel='Deposit Money'\r\n\t\t\t\t\t\t\t\t\ttype='text'\r\n\t\t\t\t\t\t\t\t\tvalue={values.depositMoney}\r\n\t\t\t\t\t\t\t\t\tname='depositMoney'\r\n\t\t\t\t\t\t\t\t\tisError={(touched.depositMoney && errors.depositMoney) ||\r\n\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateCustomerState.error['error']['depositMoney'])}\r\n\r\n\t\t\t\t\t\t\t\t\terrorString={(touched.depositMoney && errors.depositMoney) ||\r\n\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateCustomerState.error['error']['depositMoney'])}\r\n\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\tsetFieldTouched('depositMoney');\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\tlabel='Commission'\r\n\t\t\t\t\t\t\t\t\ttype='commission'\r\n\t\t\t\t\t\t\t\t\tvalue={values.commission}\r\n\t\t\t\t\t\t\t\t\tname='commission'\r\n\t\t\t\t\t\t\t\t\tisError={(touched.commission && errors.commission) ||\r\n\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateCustomerState.error['error']['commission'])}\r\n\r\n\t\t\t\t\t\t\t\t\terrorString={(touched.commission && errors.commission) ||\r\n\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateCustomerState.error['error']['commission'])}\r\n\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\tsetFieldTouched('commission');\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\t\t\t\tmarginTop: '12px'\r\n\t\t\t\t\t\t\t\t\t\t}}></div>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\tlabel='Address'\r\n\t\t\t\t\t\t\t\t\t\tvalue={values.address}\r\n\t\t\t\t\t\t\t\t\t\tname='address'\r\n\t\t\t\t\t\t\t\t\t\tisError={(touched.address && errors.address) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateCustomerState.error['error']['address'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\terrorString={(touched.address && errors.address) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateCustomerState.error['error']['address'])}\r\n\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('address');\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\r\n\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className='addProductGridContainer__right'>\r\n\r\n\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__tag'>\r\n\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer-rightItemContainer'>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer-rightItemContainer-header'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<h3>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tAreas *\r\n\t\t\t\t\t\t\t\t\t\t\t\t</h3>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer-rightItemContainer-body'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Areas\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetSelectedTags={setSelectedTags}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tselectedTags={selectedTags}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetTagIds={setTagIds} />\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</section>\r\n\r\n\t\r\n\r\n\r\n  </Modal>\r\n\t\t\t  \r\n\t\t\t</>\r\n\t\t  )}\r\n\t  </Formik>\r\n\t);\r\n};\r\n\r\n\r\nexport default QuickEdit;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { withRouter, useHistory } from 'react-router-dom';\r\nimport {\r\n  Table,\r\n  Badge,\r\n  Menu,\r\n  Dropdown,\r\n  notification,\r\n  Space,\r\n  Tag,\r\n  Button,\r\n  Input,\r\n  Tooltip,\r\n  Modal,\r\n  Popconfirm,\r\n} from 'antd';\r\nimport {\r\n  PlusOutlined,\r\n  EditOutlined,\r\n  DeleteOutlined,\r\n  EditFilled,\r\n  CheckCircleOutlined,\r\n  InfoCircleOutlined,\r\n} from '@ant-design/icons';\r\nimport Moment from 'react-moment';\r\n\r\n/// import hooks\r\nimport { useFetch, useHandleFetch } from '../../hooks';\r\n\r\n// import components\r\nimport { DataTableSkeleton } from '../../components/Placeholders';\r\nimport AddNewCustomer from './AddNewDealer';\r\nimport QuickEdit from './QuickEdit';\r\nimport Empty from '../../components/Empty';\r\nimport moment from 'moment';\r\n\r\n// import state\r\nimport { isAccess } from '../../utils';\r\nimport { connect } from 'react-redux';\r\n\r\nconst { Column, ColumnGroup } = Table;\r\nconst { Search } = Input;\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n  notification.success({\r\n    message: message || 'Dealer Created',\r\n    description: '',\r\n    icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n  });\r\n};\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n  notification.success({\r\n    message: message || 'Something Went Wrong',\r\n    description: '',\r\n    icon: <InfoCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n  });\r\n};\r\n\r\ninterface myTableProps {\r\n  data: any;\r\n  setCustomerList?: any;\r\n  roles?: any;\r\n}\r\n\r\nconst MyTable = ({ data, setCustomerList, roles }: myTableProps) => {\r\n  const [visible, setvisible] = useState(false);\r\n  const [activeCategoryForEdit, setactiveCategoryForEdit] = useState(false);\r\n\r\n  const history = useHistory();\r\n\r\n  const [deleteCustomerState, handleDeleteCustomerFetch] = useHandleFetch(\r\n    {},\r\n    'deleteDealer'\r\n  );\r\n  const handleDeleteCustomer = async (id) => {\r\n    const deleteCustomerRes = await handleDeleteCustomerFetch({\r\n      urlOptions: {\r\n        placeHolders: {\r\n          id,\r\n        },\r\n      },\r\n    });\r\n\r\n    // @ts-ignore\r\n    if (deleteCustomerRes && deleteCustomerRes.status === 'ok') {\r\n      openSuccessNotification('Deleted Dealer');\r\n      const newCustomerList = data.filter((item) => item.id !== id);\r\n      setCustomerList(newCustomerList);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Table\r\n        // expandable={{\r\n        //     expandedRowRender: record => <p style={{ margin: 0 }}>{record.name}</p>,\r\n        //     rowExpandable: record => record.name !== 'Not Expandable',\r\n        //   }}\r\n        // bordered={true}\r\n        size='small'\r\n        // pagination={false}\r\n        dataSource={data}\r\n      >\r\n        <Column\r\n          title='Code'\r\n          dataIndex='code'\r\n          key='id'\r\n          className='classnameofthecolumn'\r\n          render={(text, record: any) => (\r\n            <>\r\n              <h4\r\n                onClick={() => {\r\n                  history.push(`/admin/dealer/${record.id}`);\r\n                  // setcategoryDetailVisible(true);\r\n                  setactiveCategoryForEdit(record);\r\n                }}\r\n                style={{\r\n                  fontWeight: 400,\r\n                  color: '#555',\r\n                  cursor: 'pointer',\r\n                }}\r\n              >\r\n                {text}\r\n              </h4>\r\n            </>\r\n          )}\r\n        />\r\n\r\n        <Column\r\n          title='Name'\r\n          dataIndex='name'\r\n          key='id'\r\n          className='classnameofthecolumn'\r\n          render={(text, record: any) => (\r\n            <>\r\n              <h4\r\n                onClick={() => {\r\n                  history.push(`/admin/dealer/${record.id}`);\r\n                  // setcategoryDetailVisible(true);\r\n                  setactiveCategoryForEdit(record);\r\n                }}\r\n                style={{\r\n                  fontWeight: 400,\r\n                  color: '#555',\r\n                  cursor: 'pointer',\r\n                }}\r\n              >\r\n                {text}\r\n              </h4>\r\n            </>\r\n          )}\r\n        />\r\n\r\n        {/* <Column\r\n           title=\"City\" \r\n           dataIndex=\"city\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n            /> */}\r\n\r\n        <Column\r\n          title='Commission'\r\n          dataIndex='commission'\r\n          key='id'\r\n          className='classnameofthecolumn'\r\n        />\r\n\r\n        <Column\r\n          title='Deposit Money'\r\n          dataIndex='depositMoney'\r\n          key='id'\r\n          className='classnameofthecolumn'\r\n        />\r\n\r\n        <Column\r\n          title='Areas'\r\n          dataIndex='area'\r\n          key='role'\r\n          className='classnameofthecolumn'\r\n          render={(areas, record) => (\r\n            <>\r\n              {areas &&\r\n                areas.length > 0 &&\r\n                areas.slice(0, 2).map((tag) => (\r\n                  <Tag\r\n                    style={{\r\n                      borderRadius: '5px',\r\n                    }}\r\n                    color='blue'\r\n                    key={tag._id}\r\n                  >\r\n                    {tag.name}\r\n                  </Tag>\r\n                ))}\r\n\r\n              <span\r\n                style={{\r\n                  cursor: 'pointer',\r\n                }}\r\n                onClick={() => {\r\n                  history.push(`/admin/dealer/${record['id']}`);\r\n                }}\r\n              >\r\n                {areas && areas.length === 2 && '.......'}\r\n              </span>\r\n            </>\r\n          )}\r\n        />\r\n\r\n        <Column\r\n          width={150}\r\n          title='Created'\r\n          dataIndex='created'\r\n          key='id'\r\n          className='classnameofthecolumn'\r\n          render={(text, record: any) => (\r\n            <Space size='middle'>\r\n              <h5>{text && moment(text).format('MMMM Do YYYY, h:mm:ss a')}</h5>\r\n            </Space>\r\n          )}\r\n        />\r\n\r\n        {/* <Column \r\n          \r\n          className='classnameofthecolumn'\r\n\r\n          title=\"Product\" dataIndex=\"product\" key=\"product\" /> */}\r\n\r\n        {/* <Column \r\n          \r\n          className='classnameofthecolumn'\r\n\r\n          title=\"Sub Category\" dataIndex=\"subCategory\" key=\"subCategory\" /> */}\r\n\r\n        {/* <Column\r\n          title=\"Tags\"\r\n          dataIndex=\"tags\"\r\n          key=\"tags\"\r\n          render={tags => (\r\n            <>\r\n              {tags.map((tag : any) => (\r\n                <Tag color=\"blue\" key={tag}>\r\n                  {tag}\r\n                </Tag>\r\n              ))}\r\n            </>\r\n          )}\r\n        /> */}\r\n\r\n        {isAccess('postDealer', roles) && (\r\n          <Column\r\n            className='classnameofthecolumn'\r\n            title=''\r\n            key='action'\r\n            align='right'\r\n            render={(text, record: any) => (\r\n              <Space size='middle'>\r\n                <a href='##'>\r\n                  <Tooltip placement='top' title='Edit Dealer'>\r\n                    <span\r\n                      className='iconSize'\r\n                      onClick={() => {\r\n                        setvisible(true);\r\n                        setactiveCategoryForEdit(record);\r\n                      }}\r\n                    >\r\n                      <EditOutlined />\r\n                    </span>\r\n                  </Tooltip>\r\n                </a>\r\n\r\n                <Popconfirm\r\n                  onConfirm={() => handleDeleteCustomer(record.id)}\r\n                  title='Are you sure？'\r\n                  okText='Yes'\r\n                  cancelText='No'\r\n                >\r\n                  <span className='iconSize iconSize-danger'>\r\n                    <DeleteOutlined />\r\n                  </span>\r\n                </Popconfirm>\r\n              </Space>\r\n            )}\r\n          />\r\n        )}\r\n      </Table>\r\n\r\n      {activeCategoryForEdit && (\r\n        <QuickEdit\r\n          customerList={data}\r\n          setCustomerList={setCustomerList}\r\n          setvisible={setvisible}\r\n          visible={visible}\r\n          customer={activeCategoryForEdit}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\ninterface Props {\r\n  roles: any;\r\n}\r\n\r\nconst CustomerList = ({ roles }: Props) => {\r\n  const [customerList, setCustomerList] = useState([]);\r\n\r\n  const [customerState, handleCustomerListFetch] = useHandleFetch(\r\n    {},\r\n    'dealerList'\r\n  );\r\n\r\n  console.log('dealerList', customerList);\r\n\r\n  useEffect(() => {\r\n    const setCustomers = async () => {\r\n      const customers = await handleCustomerListFetch({\r\n        urlOptions: {\r\n          params: {\r\n            sortItem: 'added',\r\n            sortOrderValue: '-1',\r\n            limitNumber: 5000000,\r\n          },\r\n        },\r\n      });\r\n      // @ts-ignore\r\n      setCustomerList(customers);\r\n    };\r\n    setCustomers();\r\n  }, []);\r\n\r\n  const handleSearch = (value) => {\r\n    if (customerState.data.length > 0) {\r\n      const newCustomerList = customerState.data.filter((item) =>\r\n        item.name.toLowerCase().includes(value.toLowerCase())\r\n      );\r\n      setCustomerList(newCustomerList);\r\n    }\r\n  };\r\n\r\n  const [addNewCategoryVisible, setAddNewCategoryVisible] = useState(false);\r\n\r\n  // console.log('customerState',customerState)\r\n\r\n  return (\r\n    <>\r\n      {/* <h2 className='containerPageTitle'>\r\n      Categories\r\n    </h2> */}\r\n      <div className='categoryListContainer'>\r\n        <div className='categoryListContainer__header'>\r\n          <div className='categoryListContainer__header-searchBar'>\r\n            <h2 className='categoryListContainer__header-title'>Dealers</h2>\r\n\r\n            <Search\r\n              enterButton={false}\r\n              className='searchbarClassName'\r\n              placeholder='search dealers..'\r\n              onChange={(e) => handleSearch(e.target.value)}\r\n              // style={{ width: 300 }}\r\n            />\r\n          </div>\r\n\r\n          {isAccess('postDealer', roles) && (\r\n            <Button\r\n              // type=\"primary\"\r\n              className='btnPrimaryClassNameoutline'\r\n              icon={<PlusOutlined />}\r\n              onClick={() => setAddNewCategoryVisible(true)}\r\n            >\r\n              Add New\r\n            </Button>\r\n          )}\r\n        </div>\r\n\r\n        <div className='categoryListContainer__afterHeader'>\r\n          {/* <Search\r\n      placeholder=\"search categories..\"\r\n      size=\"large\"\r\n      onSearch={value => console.log(value)}\r\n      style={{ width: 300 }}\r\n    /> */}\r\n        </div>\r\n\r\n        <div className='categoryListContainer__categoryList'>\r\n          {customerState.done && customerList.length > 0 && (\r\n            <MyTable\r\n              roles={roles}\r\n              setCustomerList={setCustomerList}\r\n              data={customerList}\r\n            />\r\n          )}\r\n          {customerState.isLoading && <DataTableSkeleton />}\r\n          {customerState.done && !(customerList.length > 0) && (\r\n            <Empty title='No Dealer found' />\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      {customerState.done && (\r\n        <AddNewCustomer\r\n          setCustomerList={setCustomerList}\r\n          addNewCategoryVisible={addNewCategoryVisible}\r\n          setAddNewCategoryVisible={setAddNewCategoryVisible}\r\n          customerList={customerState.data}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  roles: state.globalState,\r\n});\r\n\r\n// @ts-ignore\r\nexport default connect(mapStateToProps, null)(CustomerList);\r\n","import React,{useState, useEffect} from 'react';\r\nimport { Modal, Select,notification , Form, Empty } from 'antd';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\nimport { PlusOutlined, EditOutlined, DeleteOutlined,EditFilled, CheckCircleOutlined, InfoCircleOutlined } from '@ant-design/icons';\r\n\r\n\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport {useHandleFetch} from '../../hooks';\r\nimport Areas from \"./Areas\";\r\n\r\n\r\n\r\nconst { Option } = Select;\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    firstName: Yup.string()\r\n      .label('Firstname')\r\n      .required()\r\n      .min(2, 'First name must have at least 2 characters '),\r\n    lastName: Yup.string()\r\n      .label('Lastname')\r\n      .required()\r\n      .min(2, 'Lastname must have at least 2 characters '),\r\n    phone: Yup.string()\r\n      .required('Please tell us your mobile number.')\r\n      .max(13, 'Please enter a valid mobile number.'),\r\n    password: Yup.string()\r\n      .label('Password')\r\n      .min(6, 'Password must have at least 6 characters'),\r\n    email: Yup.string().label('Email').email('Please enter a valid email'),\r\n  });\r\n\r\n\r\n\r\n  \r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t  message: message || 'Dealer Updated',\r\n\t  description: '',\r\n\t  icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n  };\r\n\r\n\r\n  const openErrorNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t  message: message || 'Something Went Wrong',\r\n\t  description: '',\r\n\t  icon: <InfoCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n  };\r\n\r\n\r\n\r\n\r\n\r\n\r\ninterface Props {\r\n\tcustomer: any;\r\n\tsetvisible: any; \r\n    visible: any;\r\n    setCustomerDetailData?:any; \r\n\r\n}\r\n\r\nconst QuickEdit = ({ customer, setvisible, visible, setCustomerDetailData }: Props) => {\r\n\tconst [updateCustomerState, handleUpdateCustomerFetch] = useHandleFetch({}, 'updateDealer');\r\n\r\n\r\n\tconst [selectedCountryValue,setselectedCountryValue] = useState(''); \r\n    const [selectedCityValue,setselectedCityValue] = useState(''); \r\n\r\n    const [countryOptions,setcountryOptions] = useState([]); \r\n    const [cityOptions,setcityOptions] = useState([]); \r\n\r\n    const [countryListState, handleCountryListFetch] = useHandleFetch(\r\n        [],\r\n        'countryList'\r\n      );\r\n    \r\n      const [cityListState, handleCityListFetch] = useHandleFetch([], 'cityList');\r\n    \r\n\r\n\t  const [tagIds, setTagIds] = useState([]);\r\n\t  const [selectedTags, setSelectedTags] = useState([]);\r\n  \r\n\r\n\r\n\t  useEffect(() => {\r\n\r\n\t\tconsole.log('customerAreaCheck',customer)\r\n\t\tif (customer && customer.area && customer.area.length > 0) {\r\n\t\t\tconst tagIds = customer.area.map(item => item._id);\r\n\t\t\t\r\n\t\t\tsetSelectedTags(tagIds);\r\n\t\t\tsetTagIds(tagIds)\r\n        }\r\n        else {\r\n            setSelectedTags([]);\r\n\r\n        }\r\n\t}, [customer.id]);\r\n\t\r\n\r\n\r\n\r\n\tconst handleSubmit = async (values : any, actions : any) => {\r\n\t  const updateCustomerRes = await handleUpdateCustomerFetch({\r\n\t\turlOptions: {\r\n\t\t\tplaceHolders: {\r\n\t\t\t  id: values.id,\r\n\t\t\t}\r\n\t\t  },\r\n\t\tbody: {\r\n\t\t\tphone: values.phone,\r\n\t\t\temail: values.email,\r\n\t\t\tpassword: values.password,\r\n\t\t\taddress: values.address,\r\n\t\t\tfirstName: values.firstName,\r\n\t\t\tlastName: values.lastName,\r\n\t\t\tcode: values.code,\r\n\t\t\tcommission: values.commission,\r\n\t\t\tdepositMoney: values.depositMoney,\r\n\t\t\tdealerArea: tagIds\r\n\t\t},\r\n\t  });\r\n\t\r\n\r\n\t   \t  // @ts-ignore\r\n\t\t\t if(updateCustomerRes && updateCustomerRes.status === 'ok'){\r\n\t\t\t\t// openSuccessNotification(); \r\n\t\t\r\n                setvisible(false); \r\n                \r\n                setCustomerDetailData({\r\n                    // @ts-ignore\r\n                    ...updateCustomerRes, \r\n\t\t\t\t\tid: updateCustomerRes['_id'] || '',\r\n\t\t\t\t\tkey: updateCustomerRes['_id'] || '',\r\n\t\t\t\t\tname: updateCustomerRes['firstName'] + ' ' + updateCustomerRes['lastName'],\r\n                })\r\n\t\t\t\t\r\n\t\t\t  }\r\n\t\t\t  else {\r\n\t\t\t\topenErrorNotification();\r\n\t\t\t  }\r\n\t\t\t\r\n\t\t\t  actions.setSubmitting(false);\r\n\t};\r\n\t\r\n\r\n\r\n\tuseEffect(() => {\r\n\t\tif (!updateCustomerState['isLoading']) {\r\n\t\t\tconst error = updateCustomerState['error'];\r\n\t\t\tif (error['isError'] && Object.keys(error['error']).length > 0) {\r\n\r\n\t\t\t\tif (error['error']['registerError']) {\r\n\t\t\t\t\t// setServerErrors(error['error']['registerError']);\r\n\t\t\t\t} else if (error['error']['checkoutError']) {\r\n\t\t\t\t\t// setServerErrors(error['error']['checkoutError']);\r\n\t\t\t\t}\r\n\r\n\t\t\t\telse {\r\n\t\t\t\t\t// setServerErrors(error['error']);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst errors =\r\n\t\t\t\t\tObject.values(error['error']).length > 0\r\n\t\t\t\t\t\t? Object.values(error['error'])\r\n\t\t\t\t\t\t: [];\r\n\t\t\t\terrors.forEach((err, i) => {\r\n\t\t\t\t\tif (typeof err === 'string') {\r\n\t\t\t\t\t\topenErrorNotification(err);\r\n\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if (typeof err === 'object') {\r\n\t\t\t\t\t\tif (err && Object.keys(err).length > 0) {\r\n\t\t\t\t\t\t\tconst errs = Object.values(err);\r\n\t\t\t\t\t\t\terrs.forEach(err => {\r\n\t\t\t\t\t\t\t\topenErrorNotification(err);\r\n\t\t\t\t\t\t\t})\r\n\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (\r\n\t\t\t!updateCustomerState['isLoading'] &&\r\n\t\t\tObject.keys(updateCustomerState.data).length > 0\r\n\t\t) {\r\n\t\t\tif (updateCustomerState['data']['status'] === 'ok') {\r\n\t\t\t\topenSuccessNotification('Dealer Updated Successfully');\r\n\t\t\t\t// history.push({\r\n\t\t\t\t//   pathname: '/orderDetails',\r\n\t\t\t\t//   state: checkoutState['data']\r\n\t\t\t\t// })\r\n\r\n\t\t\t\t// clearCart();\r\n\t\t\t\t// setIsModalShown(true);\r\n\t\t\t}\r\n\t\t}\r\n\t}, [updateCustomerState]);\r\n\r\n\r\n\r\n\r\n\t\r\n    const onChangeCity = (value) => {\r\n        setselectedCityValue(value); \r\n    }\r\n\r\n    const onChangeCountry = (value) => {\r\n        setselectedCountryValue(value); \r\n    }\r\n    \r\n\tuseEffect(() => {\r\n\t\tconst setCountries = async () => {\r\n\t\t\tconst CountryListRes = await handleCountryListFetch({});\r\n\r\n\t\t\t// @ts-ignore\r\n\t\t\tif (CountryListRes && CountryListRes.length > 0) {\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\tconst countryOptions = CountryListRes.map((country) => {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tvalue: country.name,\r\n\t\t\t\t\t\tname: country.name\r\n\t\t\t\t\t};\r\n\t\t\t\t});\r\n\t\t\t\tsetcountryOptions(countryOptions);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tsetCountries();\r\n    }, []);\r\n    \r\n\r\n    useEffect(() => {\r\n\t\tconst setCities = async () => {\r\n\t\t\tconst cityListRes = await handleCityListFetch({\r\n                urlOptions: {\r\n                    placeHolders: {\r\n                      country: selectedCountryValue,\r\n                    },\r\n                  },\r\n            });\r\n\r\n\t\t\t// @ts-ignore\r\n\t\t\tif (cityListRes && cityListRes.length > 0) {\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\tconst cityOptions = cityListRes.map((city) => {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tvalue: city.name,\r\n\t\t\t\t\t\tname: city.name\r\n\t\t\t\t\t};\r\n\t\t\t\t});\r\n\t\t\t\tsetcityOptions(cityOptions);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tsetCities();\r\n    }, [selectedCountryValue]);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\tconst handleCancel = (e: any) => {\r\n        setvisible(false);\r\n      };\r\n\r\n\r\n\r\n\t  const getisSubmitButtonDisabled = (values,isValid) => {\r\n\t\tif(!isValid ||\r\n\t\t\t!values.firstName ||\r\n\t\t\t!values.lastName ||\r\n\t\t\t// !values.password ||\r\n\t\t\t!values.phone ||\r\n\t\t\t!values.code ){\r\n\t\t\treturn true; \r\n\t\t}\r\n\t\treturn false; \r\n\t  }\r\n\r\n\treturn (\r\n\t\t<Formik\r\n\t\tonSubmit={(values, actions) => handleSubmit(values, actions)}\r\n\t\tvalidationSchema={validationSchema}\r\n\t\tvalidateOnBlur={false}\r\n\t\tenableReinitialize={true}\r\n\t\tinitialValues={\r\n\t\t  {...customer}\r\n\t\t}\r\n\t  >\r\n\t\t{({\r\n\t\t  handleChange,\r\n\t\t  values,\r\n\t\t  handleSubmit,\r\n\t\t  errors,\r\n\t\t  isValid,\r\n\t\t  isSubmitting,\r\n\t\t  touched,\r\n\t\t  handleBlur,\r\n\t\t  setFieldTouched,\r\n\t\t  handleReset,\r\n\t\t}) => (\r\n\t\t\t<>\r\n\t\t\t<Modal\r\n\t\t\ttitle=\"Quick Edit\"\r\n\t\t\twidth={'70vw'}\r\n\t\t\tvisible={visible}\r\n\t\t\tonOk={(e : any) => handleSubmit(e)}\r\n\t\t\tonCancel={handleCancel}\r\n\t\t\tokText='Update'\r\n\t\t\tdestroyOnClose={true}\r\n\t\t\tokButtonProps={{\r\n\t\t\tloading: isSubmitting,\r\n\t\t\thtmlType: \"submit\",\r\n\t\t\tdisabled: getisSubmitButtonDisabled(values, isValid)\r\n\t\t\t}}\r\n\t\t\tbodyStyle={{\r\n                margin: '0',\r\n                padding: '10px'\r\n            }}\r\n  >\r\n\r\n\t  {console.log('errorsupdatedealer',errors)}\r\n\r\n<section className='addProductGridContainer'>\r\n\t\t\t\t\t\t\t\t<div className='addProductGridContainer__left'>\r\n\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__name'>\r\n\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__item-header'>\r\n\t\t\t\t\t\t\t\t\t\t\t<h3>\r\n\t\t\t\t\t\t\t\t\t\t\t\tDealer Information *\r\n\t\t\t\t\t\t\t\t\t\t\t</h3>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__item-body'>\r\n\r\n\t\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs'>\r\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\tlabel='First Name'\r\n\t\t\t\t\t\t\t\t\t\tvalue={values.firstName}\r\n\t\t\t\t\t\t\t\t\t\tname='firstName'\r\n\t\t\t\t\t\t\t\t\t\tisError={(touched.firstName && errors.firstName) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateCustomerState.error['error']['firstName'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\terrorString={(touched.firstName && errors.firstName) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateCustomerState.error['error']['firstName'])}\r\n\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('firstName');\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\tlabel='Last Name'\r\n\t\t\t\t\t\t\t\t\t\tvalue={values.lastName}\r\n\t\t\t\t\t\t\t\t\t\tname='lastName'\r\n\t\t\t\t\t\t\t\t\t\tisError={(touched.lastName && errors.lastName) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateCustomerState.error['error']['lastName'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\terrorString={(touched.lastName && errors.lastName) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateCustomerState.error['error']['lastName'])}\r\n\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('lastName');\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t<div className='dubbleRowInputs'>\r\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\tlabel='Phone'\r\n\t\t\t\t\t\t\t\t\t\tvalue={values.phone}\r\n\t\t\t\t\t\t\t\t\t\tname='phone'\r\n\t\t\t\t\t\t\t\t\t\tisError={(touched.phone && errors.phone) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateCustomerState.error['error']['phone'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\terrorString={(touched.phone && errors.phone) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateCustomerState.error['error']['phone'])}\r\n\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('phone');\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\tlabel='Email'\r\n\t\t\t\t\t\t\t\t\t\tvalue={values.email}\r\n\t\t\t\t\t\t\t\t\t\tname='email'\r\n\t\t\t\t\t\t\t\t\t\tisError={(touched.email && errors.email) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateCustomerState.error['error']['email'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\terrorString={(touched.email && errors.email) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateCustomerState.error['error']['email'])}\r\n\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('email');\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\t\t\t\t\t\t\t<div className='dubbleRowInputs'>\r\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\tlabel='Dealer Code'\r\n\t\t\t\t\t\t\t\t\ttype='text'\r\n\t\t\t\t\t\t\t\t\tvalue={values.code}\r\n\t\t\t\t\t\t\t\t\tname='code'\r\n\t\t\t\t\t\t\t\t\tisError={(touched.code && errors.code) ||\r\n\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateCustomerState.error['error']['code'])}\r\n\r\n\t\t\t\t\t\t\t\t\terrorString={(touched.code && errors.code) ||\r\n\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateCustomerState.error['error']['code'])}\r\n\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\tsetFieldTouched('code');\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\tlabel='Password'\r\n\t\t\t\t\t\t\t\t\ttype='password'\r\n\t\t\t\t\t\t\t\t\tvalue={values.password}\r\n\t\t\t\t\t\t\t\t\tname='password'\r\n\t\t\t\t\t\t\t\t\tisError={(touched.password && errors.password) ||\r\n\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateCustomerState.error['error']['password'])}\r\n\r\n\t\t\t\t\t\t\t\t\terrorString={(touched.password && errors.password) ||\r\n\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateCustomerState.error['error']['password'])}\r\n\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\tsetFieldTouched('password');\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t<div className='dubbleRowInputs'>\r\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\tlabel='Deposit Money'\r\n\t\t\t\t\t\t\t\t\ttype='text'\r\n\t\t\t\t\t\t\t\t\tvalue={values.depositMoney}\r\n\t\t\t\t\t\t\t\t\tname='depositMoney'\r\n\t\t\t\t\t\t\t\t\tisError={(touched.depositMoney && errors.depositMoney) ||\r\n\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateCustomerState.error['error']['depositMoney'])}\r\n\r\n\t\t\t\t\t\t\t\t\terrorString={(touched.depositMoney && errors.depositMoney) ||\r\n\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateCustomerState.error['error']['depositMoney'])}\r\n\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\tsetFieldTouched('depositMoney');\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\tlabel='Commission'\r\n\t\t\t\t\t\t\t\t\ttype='commission'\r\n\t\t\t\t\t\t\t\t\tvalue={values.commission}\r\n\t\t\t\t\t\t\t\t\tname='commission'\r\n\t\t\t\t\t\t\t\t\tisError={(touched.commission && errors.commission) ||\r\n\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateCustomerState.error['error']['commission'])}\r\n\r\n\t\t\t\t\t\t\t\t\terrorString={(touched.commission && errors.commission) ||\r\n\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateCustomerState.error['error']['commission'])}\r\n\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\tsetFieldTouched('commission');\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\t\t\t\tmarginTop: '12px'\r\n\t\t\t\t\t\t\t\t\t\t}}></div>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\tlabel='Address'\r\n\t\t\t\t\t\t\t\t\t\tvalue={values.address}\r\n\t\t\t\t\t\t\t\t\t\tname='address'\r\n\t\t\t\t\t\t\t\t\t\tisError={(touched.address && errors.address) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateCustomerState.error['error']['address'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\terrorString={(touched.address && errors.address) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateCustomerState.error['error']['address'])}\r\n\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('address');\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\r\n\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className='addProductGridContainer__right'>\r\n\r\n\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__tag'>\r\n\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer-rightItemContainer'>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer-rightItemContainer-header'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<h3>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tAreas *\r\n\t\t\t\t\t\t\t\t\t\t\t\t</h3>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer-rightItemContainer-body'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Areas\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetSelectedTags={setSelectedTags}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tselectedTags={selectedTags}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetTagIds={setTagIds} />\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</section>\r\n\r\n\t\r\n\r\n\r\n  </Modal>\r\n\t\t\t  \r\n\t\t\t</>\r\n\t\t  )}\r\n\t  </Formik>\r\n\t);\r\n};\r\n\r\n\r\nexport default QuickEdit;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useParams, useHistory } from \"react-router\";\r\n\r\n\r\n// import hooks\r\nimport { useHandleFetch } from \"../../hooks\";\r\n\r\n// import \r\nimport Moment from \"react-moment\";\r\n\r\n// import lib\r\nimport {\r\n    FileOutlined,\r\n    InboxOutlined,\r\n    RadiusUpleftOutlined,\r\n    RadiusUprightOutlined,\r\n    RadiusBottomleftOutlined,\r\n    RadiusBottomrightOutlined,\r\n    PlusOutlined,\r\n    DeleteOutlined,\r\n    EditOutlined,\r\n    CheckCircleOutlined\r\n} from '@ant-design/icons';\r\n\r\nimport { Spin, Skeleton, Empty, Popconfirm, Upload, message, Switch, Select, Button, notification, Table, Space, Input as CoolInput, Tooltip, Modal } from 'antd';\r\n\r\n\r\n// import components\r\nimport { DataTableSkeleton } from \"../../components/Placeholders\";\r\nimport CustomerEdit from \"./DealerEdit\";\r\n\r\n\r\n// import state\r\nimport { isAccess } from \"../../utils\";\r\nimport { connect } from \"react-redux\";\r\n\r\n\r\n\r\n\r\nconst { Column, ColumnGroup } = Table;\r\nconst { Search } = CoolInput;\r\n\r\n\r\ninterface Props {\r\n    roles?: any;\r\n}\r\n\r\nconst NewBrandDetail = ({roles}: Props) => {\r\n    const [customerDetailState, handleCustomerDetailFetch] = useHandleFetch({}, 'dealerDetail');\r\n    const [orderListState, handleOrderListFetch] = useHandleFetch({}, 'dealerOrderList');\r\n    const [registeredCustomerListState, handleRegisteredCustomerListFetch] = useHandleFetch({}, 'dealerRegisteredCustomerList');\r\n    const [tagEditVisible, setTagEditVisible] = useState(false);\r\n    const [customerDetailData,setCustomerDetailData] = useState({}); \r\n\r\n\r\n\r\n    const params = useParams();\r\n    const history = useHistory();\r\n    const customerId = params['id'];\r\n\r\n    useEffect(() => {\r\n\r\n        const getCustomerDetail = async () => {\r\n            const customerDetailDataRes = await handleCustomerDetailFetch({\r\n                urlOptions: {\r\n                    placeHolders: {\r\n                        id: customerId\r\n                    }\r\n                }\r\n            });\r\n\r\n            // @ts-ignore\r\n            if(customerDetailDataRes){\r\n                // @ts-ignore\r\n                setCustomerDetailData(customerDetailDataRes); \r\n            }\r\n\r\n            console.log('customerDetailDataRes',customerDetailDataRes)\r\n        };\r\n\r\n        getCustomerDetail();\r\n\r\n    }, [customerId]);\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        const getOrderList = async () => {\r\n            await handleOrderListFetch({\r\n                urlOptions: {\r\n                    placeHolders: {\r\n                        id: customerId\r\n                    }\r\n                }\r\n            })\r\n        };\r\n\r\n        getOrderList();\r\n\r\n        const getRegisteredOrderList = async () => {\r\n            await handleRegisteredCustomerListFetch({\r\n                urlOptions: {\r\n                    placeHolders: {\r\n                        id: customerId\r\n                    }\r\n                }\r\n            })\r\n        };\r\n\r\n        getRegisteredOrderList();\r\n\r\n\r\n\r\n\r\n    }, [customerId]);\r\n\r\n\r\n    console.log('dealerDetailData', customerDetailData);\r\n\r\n    \r\n    return (\r\n        <div className='brandDetailContainer'>\r\n            <div className='brandDetailContainer__heading'>\r\n                <h3>\r\n                 Dealer Detail\r\n                </h3>\r\n\r\n                {customerDetailState.done && customerDetailData && (Object.keys(customerDetailData).length > 0) && (\r\n                    <>\r\n                        <CustomerEdit\r\n                            visible={tagEditVisible}\r\n                            setvisible={setTagEditVisible}\r\n                            customer={customerDetailData}\r\n                            setCustomerDetailData={setCustomerDetailData}\r\n                        />\r\n\r\n                {isAccess('postDealer',roles) && (\r\n                                    <Button\r\n                                    onClick={() => setTagEditVisible(true)}\r\n                                    type='link'\r\n                                    icon={<EditOutlined />}\r\n                                >\r\n                                    Edit\r\n                            </Button>\r\n                                )}\r\n\r\n\r\n                    \r\n                    </>\r\n                )}\r\n            </div>\r\n            <Skeleton\r\n                paragraph={{ rows: 2 }}\r\n                loading={customerDetailState.isLoading}>\r\n                {customerDetailState.done && customerDetailData && !(Object.keys(customerDetailData).length > 0) && (\r\n                    <Empty description='No Dealer found' image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n                )}\r\n\r\n                {customerDetailState.done && customerDetailData && (Object.keys(customerDetailData).length > 0) && (\r\n                    <div className='brandDetailContainer__header'>\r\n\r\n                        <div className='brandDetailContainer__header-info'>\r\n                            <h2>\r\n                                {customerDetailData['name']}\r\n                            </h2>\r\n                           \r\n\r\n                           \r\n                            {customerDetailData['code'] && (\r\n                                <h3>\r\n                                    CODE:\r\n                                    <span>\r\n                                        {customerDetailData['code']}\r\n                                    </span>\r\n                                </h3>\r\n                            )}\r\n\r\n\r\n\r\n\r\n                            {customerDetailData['commision'] && (\r\n                                <h3>\r\n                                    COMMISSION:\r\n                                    <span>\r\n                                        {customerDetailData['commision']}\r\n                                    </span>\r\n                                </h3>\r\n                            )}\r\n\r\n                            {customerDetailData['depositMoney'] && (\r\n                                <h3>\r\n                                    DEPOSIT MONEY:\r\n                                    <span>\r\n                                        {customerDetailData['depositMoney']}\r\n                                    </span>\r\n                                </h3>\r\n                            )}\r\n\r\n\r\n                            {customerDetailData['city'] && (\r\n                                <h3>\r\n                                    CITY:\r\n                                    <span>\r\n                                        {customerDetailData['city']}\r\n                                    </span>\r\n                                </h3>\r\n                            )}\r\n                        \r\n\r\n\r\n                            {customerDetailData['address1'] && (\r\n                                <h3>\r\n                                    ADDRESS:\r\n                                    <span>\r\n                                        {customerDetailData['address1']}\r\n                                    </span>\r\n                                </h3>\r\n                            )}\r\n                         \r\n\r\n                            {customerDetailData['phone'] && (\r\n                                <h3>\r\n                                    PHONE:\r\n                                    <span>\r\n                                        {customerDetailData['phone']}\r\n                                    </span>\r\n                                </h3>\r\n                            )}\r\n\r\n                             {customerDetailData['email'] && (\r\n                                <h3>\r\n                                    EMAIL:\r\n                                    <span>\r\n                                        {customerDetailData['email']}\r\n                                    </span>\r\n                                </h3>\r\n                            )}\r\n\r\n\r\n                              {customerDetailData['area'] && customerDetailData['area'].length > 0 &&\r\n                                    (<>\r\n                                        <h3>\r\n                                        AREAS:\r\n                                        {customerDetailData['area'].map(cat => {\r\n                                            return (\r\n                                                <span\r\n                                                    // onClick={() => history.push(`/admin/dealer/area/${cat._id}`)}\r\n\r\n                                                >\r\n                                                    {cat.name}\r\n                                                </span>\r\n                                            )\r\n                                        })}\r\n                                        </h3>\r\n\r\n                                    </>)\r\n                                }\r\n\r\n                        </div>\r\n                    </div>\r\n                )}\r\n\r\n            </Skeleton>\r\n\r\n        <div className='dealerDetailBodyContainer'>\r\n            <div className='dealerDetailBodyContainer__item'>\r\n            <div className='brandDetailContainer__heading'>\r\n                <h3>\r\n                     Orders \r\n                </h3>\r\n            </div>\r\n            <div className='brandDetailContainer__body'>\r\n                {orderListState.isLoading && (\r\n                  <>\r\n                  <div style={{\r\n                    margin: '100px'\r\n                  }}>\r\n                  <Spin size='large' />\r\n                  </div>\r\n                  </>\r\n                )}\r\n\r\n                                {orderListState.done && !(orderListState.data.length > 0) && (\r\n\r\n                    <div style={{\r\n                        marginTop: '100px'\r\n                    }}>\r\n                        <Empty description='No Orders found' image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n                    </div>\r\n                )}\r\n\r\n                {orderListState.done && orderListState.data && orderListState.data.length > 0 && (\r\n                    <>\r\n                        <Table\r\n                            style={{\r\n                                paddingTop: '10px',\r\n                                borderRadius: '5px !important',\r\n                                overflow: 'hidden',\r\n                                boxShadow: '0 0.125rem 0.625rem rgba(227, 231, 250, 0.3), 0 0.0625rem 0.125rem rgba(206, 220, 233, 0.4)'\r\n                            }}\r\n                            // expandable={{\r\n                            //     expandedRowRender: record => <p style={{ margin: 0 }}>{record.name}</p>,\r\n                            //     rowExpandable: record => record.name !== 'Not Expandable',\r\n                            //   }}\r\n                            // bordered={true}\r\n                            size='small'\r\n                            // pagination={false}\r\n                            dataSource={orderListState.data}\r\n                            tableLayout={'auto'}\r\n                            onHeaderRow={column => {\r\n                                return {\r\n                                    style: {\r\n                                        color: 'red !important'\r\n                                    }\r\n\r\n                                };\r\n                            }}\r\n                        >\r\n                          \r\n          \r\n          \r\n\r\n        <Column\r\n          title=\"Code\"\r\n          dataIndex=\"shortCode\"\r\n          key=\"id\"\r\n          className='classnameofthecolumn'\r\n          render={(text, record: any) => (\r\n            <>\r\n\r\n              <h4\r\n                onClick={() => {\r\n                  // setvisible(true)\r\n                  history.push(`/admin/order/${record.id}`)\r\n                }}\r\n                style={{\r\n                  fontWeight: 400,\r\n                  color: '#555',\r\n                  cursor: 'pointer'\r\n\r\n                }}>\r\n                #{text}\r\n              </h4>\r\n\r\n\r\n            </>\r\n          )}\r\n\r\n        />\r\n\r\n\r\n        <Column\r\n          title=\"Name\"\r\n          dataIndex=\"name\"\r\n          key=\"id\"\r\n          className='classnameofthecolumn'\r\n          render={(text, record: any) => (\r\n            <>\r\n\r\n              <h4\r\n                onClick={() => {\r\n                  // setvisible(true)\r\n                  history.push(`/admin/order/${record.id}`)\r\n                }}\r\n                style={{\r\n                  fontWeight: 400,\r\n                  color: '#555',\r\n                  cursor: 'pointer'\r\n\r\n                }}>\r\n                {text}\r\n              </h4>\r\n\r\n\r\n            </>\r\n          )}\r\n\r\n        />\r\n\r\n\r\n              <Column\r\n                title=\"Total Price\" \r\n                dataIndex=\"total\" \r\n                key=\"id\" \r\n                className='classnameofthecolumn'\r\n                />\r\n\r\n\r\n\r\n\r\n          <Column\r\n            width={150}\r\n           title=\"Status\" \r\n           dataIndex=\"status\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n           render={(text, record: any) => (\r\n            <>\r\n\r\n             <a href='##'>\r\n              <span\r\n              style={{\r\n                fontSize:'12px'\r\n              }}\r\n                >\r\n                {text}\r\n             </span> \r\n            </a>\r\n            </>\r\n          )}\r\n            />\r\n\r\n\r\n                        </Table>\r\n                    </>\r\n                )}\r\n\r\n            </div>\r\n            </div>\r\n            <div className='dealerDetailBodyContainer__item'>\r\n            <div className='brandDetailContainer__heading'>\r\n                <h3>\r\n                     Customers \r\n                </h3>\r\n            </div>\r\n            <div className='brandDetailContainer__body'>\r\n                {registeredCustomerListState.isLoading && (\r\n                  <>\r\n                  <div style={{\r\n                    margin: '100px'\r\n                  }}>\r\n                  <Spin size='large' />\r\n                  </div>\r\n                  </>\r\n                )}\r\n                {registeredCustomerListState.done && !(registeredCustomerListState.data.length > 0) && (\r\n                    <div style={{\r\n                        marginTop: '100px'\r\n                    }}>\r\n                        <Empty description='No Customer found' image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n                    </div>\r\n                )}\r\n\r\n                {registeredCustomerListState.done && registeredCustomerListState.data && registeredCustomerListState.data.length > 0 && (\r\n                    <>\r\n                        <Table\r\n                            style={{\r\n                                paddingTop: '10px',\r\n                                borderRadius: '5px !important',\r\n                                overflow: 'hidden',\r\n                                boxShadow: '0 0.125rem 0.625rem rgba(227, 231, 250, 0.3), 0 0.0625rem 0.125rem rgba(206, 220, 233, 0.4)'\r\n                            }}\r\n                            // expandable={{\r\n                            //     expandedRowRender: record => <p style={{ margin: 0 }}>{record.name}</p>,\r\n                            //     rowExpandable: record => record.name !== 'Not Expandable',\r\n                            //   }}\r\n                            // bordered={true}\r\n                            size='small'\r\n                            // pagination={false}\r\n                            dataSource={registeredCustomerListState.data}\r\n                            tableLayout={'auto'}\r\n                            onHeaderRow={column => {\r\n                                return {\r\n                                    style: {\r\n                                        color: 'red !important'\r\n                                    }\r\n\r\n                                };\r\n                            }}\r\n                        >\r\n                          \r\n          \r\n          \r\n                          <Column\r\n                      title=\"Name\" \r\n                      dataIndex=\"name\" \r\n                      key=\"id\" \r\n                      className='classnameofthecolumn'\r\n                      render={(text, record: any) => (\r\n                        <>\r\n                          <h4\r\n                            onClick={() => {\r\n                              history.push(`/admin/customer/${record.id}`)\r\n                              // setcategoryDetailVisible(true);\r\n                            }}\r\n                            style={{\r\n                              fontWeight: 400,\r\n                              color: '#555',\r\n                              cursor: 'pointer'\r\n                            }}>\r\n                            {text}\r\n                          </h4>\r\n                        </>\r\n                      )}\r\n                      />\r\n\r\n         \r\n     \r\n\r\n         \r\n\r\n            \r\n          <Column\r\n           title=\"Order\" \r\n           dataIndex=\"orderCount\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n         \r\n            />\r\n\r\n        <Column\r\n           title=\"Total Price\" \r\n           dataIndex=\"totalOrderPrice\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n         \r\n            />\r\n\r\n                        </Table>\r\n                    </>\r\n                )}\r\n\r\n            </div>\r\n            </div>\r\n        </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\nconst mapStateToProps = state => ({\r\n    roles: state.globalState,\r\n  })\r\n  \r\n  // @ts-ignore\r\n  export default connect(mapStateToProps, null)(NewBrandDetail);\r\n  \r\n  \r\n  \r\n  \r\n\r\n\r\n\r\n","import React, { useState,useEffect } from 'react';\r\nimport { Modal, notification } from 'antd';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n// import components\r\nimport Input from '../../../components/Field/Input';\r\nimport { useHandleFetch } from '../../../hooks';\r\nimport { CheckCircleOutlined, PlusOutlined, EditOutlined, DeleteOutlined, EditFilled } from '@ant-design/icons';\r\nimport MetaTags from \"../../../pages/category/MetaTags\";\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    name: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Area Updated',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Something Went Wrong',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst initialValues = {\r\n    name: '',\r\n\tbnName: '',\r\n\tdescription: '',\r\n\tbnDescription: '',\r\n\tmetaTitle: '',\r\n\tbnMetaTitle: '',\r\n\tmetaDescription: '',\r\n\tbnMetaDescription: '',\r\n\tmetaTags: '',\r\n\tbnMetaTags: '',\r\n}\r\n\r\n\r\n\r\n\r\n\r\ninterface Props {\r\n    tagEditVisible?: any;\r\n    setTagEditVisible?: any;\r\n    tagDetailData?: any;\r\n    setTagList?:any; \r\n    tagList?:any; \r\n}\r\n\r\nconst QuickEdit = ({ tagEditVisible, setTagEditVisible, tagDetailData,setTagList,tagList }: Props) => {\r\n    const [updateTagState, handleUpdateCategoryFetch] = useHandleFetch({}, 'updateDealerArea');\r\n\r\n\r\n    const handleSubmit = async (values: any, actions: any) => {\r\n        const updateTagRes = await handleUpdateCategoryFetch({\r\n            urlOptions: {\r\n                placeHolders: {\r\n                    id: values.id,\r\n                }\r\n            },\r\n            body: {\r\n                name: values.name,\r\n            },\r\n        });\r\n\r\n        // @ts-ignore\r\n        if (updateTagRes && updateTagRes.status === 'ok') {\r\n\r\n\r\n\t\t\tconst positionInTag = () => {\r\n\t\t\t\treturn tagList.map(item => item.id).indexOf(values.id);\r\n\t\t\t}\r\n\r\n\t\t\tconst index = positionInTag();\r\n\r\n\t\t\t// @ts-ignore\r\n\t\t\tconst updatedItem = Object.assign({}, tagList[index], { ...updateTagRes });\r\n\t\t\tconst updateTagList = [...tagList.slice(0, index), updatedItem, ...tagList.slice(index + 1)];\r\n\t\t\tsetTagList(updateTagList);\r\n\r\n\r\n            console.log('categoryupdateTagRes',updateTagRes);\r\n\t\t\topenSuccessNotification();\r\n\t\t\tsetTagEditVisible(false)\r\n\t\t\t\r\n        }\r\n        else {\r\n            openErrorNotification();\r\n        }\r\n\r\n        actions.setSubmitting(false);\r\n    };\r\n\r\n\r\n    const handleCancel = (e: any) => {\r\n        setTagEditVisible(false);\r\n    };\r\n\r\n\r\n    const getisSubmitButtonDisabled = (values, isValid) => {\r\n        if (!values.name || !isValid) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }; \r\n \r\n\r\n    return (\r\n        <Formik\r\n            onSubmit={(values, actions) => handleSubmit(values, actions)}\r\n            validationSchema={validationSchema}\r\n            validateOnBlur={false}\r\n            enableReinitialize={true}\r\n            initialValues={{\r\n                ...initialValues, \r\n                ...tagDetailData,\r\n                ...( tagDetailData && Object.keys(tagDetailData).length > 0 && {\r\n                    bnMetaTitle: tagDetailData['bn']\r\n                    && tagDetailData['bn'].metaTitle\r\n                    && tagDetailData['bn'].metaTitle,\r\n                    bnMetaDescription: tagDetailData['bn'] &&  tagDetailData['bn'].metaDescription && tagDetailData['bn'].metaDescription,\r\n                    bnName: tagDetailData['bn'] && tagDetailData['bn'].name && tagDetailData['bn'].name,\r\n                    bnDescription: tagDetailData['bn'] && tagDetailData['bn'].description && tagDetailData['bn'].description,\r\n                  })\r\n            }}\r\n        >\r\n            {({\r\n                handleChange,\r\n                values,\r\n                handleSubmit,\r\n                errors,\r\n                isValid,\r\n                isSubmitting,\r\n                touched,\r\n                handleBlur,\r\n                setFieldTouched,\r\n                handleReset,\r\n            }) => (\r\n                    <>\r\n                        <Modal\r\n                        \tstyle={{\r\n\t\t\t\t\t\t\t\ttop: '40px',\r\n\r\n\t\t\t\t\t\t\t}}\r\n                            title=\"Area Edit\"\r\n                            visible={tagEditVisible}\r\n                            onOk={(e: any) => handleSubmit(e)}\r\n                            onCancel={handleCancel}\r\n                            okText='Update'\r\n                            okButtonProps={{\r\n                                loading: isSubmitting,\r\n                                htmlType: \"submit\",\r\n                                disabled: getisSubmitButtonDisabled(values, isValid)\r\n                            }}\r\n                        >\r\n                            <Input\r\n\t\t\t\t\t\t\t\tlabel='Name'\r\n\t\t\t\t\t\t\t\tvalue={values.name}\r\n\t\t\t\t\t\t\t\tname='name'\r\n\t\t\t\t\t\t\t\tisError={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateTagState.error['error']['name'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateTagState.error['error']['name'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('name');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\r\n\r\n\r\n                        </Modal>\r\n\r\n                    </>\r\n                )}\r\n        </Formik>\r\n    );\r\n};\r\n\r\n\r\nexport default QuickEdit;\r\n","import React, { useState } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n\r\nimport { useHandleFetch } from '../../../hooks';\r\n// import third party ui lib\r\nimport { Upload, message, Switch, Select, Button, notification, Modal, Tooltip } from 'antd';\r\n\r\nimport {\r\n    FileOutlined,\r\n    InboxOutlined,\r\n    FileAddOutlined,\r\n    DeleteOutlined,\r\n    CheckCircleOutlined,\r\n    CloseOutlined,\r\n    CheckOutlined,\r\n    InfoCircleOutlined,\r\n    PlusOutlined,\r\n    FileImageFilled\r\n} from '@ant-design/icons';\r\n\r\n\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../../components/Field/Input';\r\nimport TextArea from '../../../components/Field/TextArea';\r\nimport MediaLibrary from \"../../../components/MediaLibrary\";\r\nimport MetaTags from \"../../../pages/category/MetaTags\";\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    name: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Area Created',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n    notification.error({\r\n        message: message || 'Something Went Wrong',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst initialValues = {\r\n    name: '',\r\n}\r\n\r\n\r\n\r\ninterface Props {\r\n    addNewCategoryVisible?: any;\r\n    setAddNewCategoryVisible?: any;\r\n    tagList?: any;\r\n    setTagList?: any;\r\n\r\n}\r\n\r\nconst AddNewBrand = ({ addNewCategoryVisible, setAddNewCategoryVisible, tagList, setTagList }: Props) => {\r\n\r\n    const [addTagState, handleAddTagFetch] = useHandleFetch({}, 'addDealerArea');\r\n    const [myImages, setmyImages] = useState(false);\r\n    const [visibleMedia, setvisibleMedia] = useState(false);\r\n\r\n    const handleSubmit = async (values: any, actions: any) => {\r\n        const addTagRes = await handleAddTagFetch({\r\n            urlOptions: {\r\n                placeHolders: {\r\n                    id: values.id,\r\n                }\r\n            },\r\n            body: {\r\n                name: values.name.trim(),\r\n            },\r\n        });\r\n\r\n        // @ts-ignore\r\n        if (addTagRes && addTagRes.status === 'ok') {\r\n            openSuccessNotification();\r\n\r\n            setTagList([{\r\n                id: addTagRes['_id'] || '',\r\n                key: addTagRes['_id'] || '',\r\n                name: addTagRes['name'] || '',\r\n            },...tagList])\r\n            actions.resetForm();\r\n            setAddNewCategoryVisible(false);\r\n        }\r\n        else {\r\n            openErrorNotification();\r\n        }\r\n\r\n\r\n        actions.setSubmitting(false);\r\n\r\n    };\r\n\r\n\r\n    const handleCancel = (e: any) => {\r\n        setAddNewCategoryVisible(false);\r\n    };\r\n\r\n\r\n    const getisSubmitButtonDisabled = (values, isValid) => {\r\n        if (!values.name || !isValid) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n\r\n\r\n\r\n    return (\r\n        <Formik\r\n            onSubmit={(values, actions) => handleSubmit(values, actions)}\r\n            validationSchema={validationSchema}\r\n            validateOnBlur={false}\r\n            enableReinitialize={true}\r\n            initialValues={\r\n                { ...initialValues }\r\n            }\r\n        >\r\n            {({\r\n                handleChange,\r\n                values,\r\n                handleSubmit,\r\n                errors,\r\n                isValid,\r\n                isSubmitting,\r\n                touched,\r\n                handleBlur,\r\n                setFieldTouched,\r\n                handleReset,\r\n            }) => (\r\n                    <>\r\n                        <Modal\r\n                            style={{\r\n                                top: '40px'\r\n                            }}\r\n                            title=\"Add New Area\"\r\n                            visible={addNewCategoryVisible}\r\n                            onOk={(e: any) => handleSubmit(e)}\r\n                            onCancel={handleCancel}\r\n                            okText='Create'\r\n                            okButtonProps={{\r\n                                loading: isSubmitting,\r\n                                htmlType: \"submit\",\r\n                                disabled: getisSubmitButtonDisabled(values, isValid)\r\n                            }}\r\n                        >\r\n                  \t\t\t<Input\r\n\t\t\t\t\t\t\t\tlabel='Name'\r\n\t\t\t\t\t\t\t\tvalue={values.name}\r\n\t\t\t\t\t\t\t\tname='name'\r\n\t\t\t\t\t\t\t\tisError={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addTagState.error['error']['name'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addTagState.error['error']['name'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('name');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n                        </Modal>\r\n\r\n                        <MediaLibrary\r\n                            setvisible={setvisibleMedia}\r\n                            visible={visibleMedia}\r\n                            setmyImages={setmyImages}\r\n                            myImages={myImages}\r\n                            isModalOpenForImages={true}\r\n\r\n                        />\r\n                    </>\r\n                )}\r\n        </Formik>\r\n\r\n\r\n\r\n\r\n    );\r\n};\r\n\r\nexport default AddNewBrand;\r\n","import React, { useState, useEffect } from 'react';\r\n\r\n// import third party ui lib\r\nimport {\r\n  Empty,\r\n  Popconfirm,\r\n  Upload,\r\n  message,\r\n  Switch,\r\n  Select,\r\n  Button,\r\n  notification,\r\n  Table,\r\n  Space,\r\n  Input as CoolInput,\r\n  Tooltip,\r\n  Modal,\r\n} from 'antd';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { useHistory } from 'react-router';\r\n\r\nimport {\r\n  FileOutlined,\r\n  InboxOutlined,\r\n  RadiusUpleftOutlined,\r\n  RadiusUprightOutlined,\r\n  RadiusBottomleftOutlined,\r\n  RadiusBottomrightOutlined,\r\n  PlusOutlined,\r\n  DeleteOutlined,\r\n  EditOutlined,\r\n  CheckCircleOutlined,\r\n} from '@ant-design/icons';\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n/// import hooks\r\nimport { useFetch, useHandleFetch } from '../../../hooks';\r\n\r\n// import components\r\nimport { DataTableSkeleton } from '../../../components/Placeholders';\r\nimport TagQuickEdit from './AreaQuickEdit';\r\nimport AddNewTag from './AddNewArea';\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n  notification.success({\r\n    message: message || 'Area Created',\r\n    description: '',\r\n    icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n  });\r\n};\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n  notification.error({\r\n    message: message || 'Something Went Wrong',\r\n    description: '',\r\n    icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n  });\r\n};\r\n\r\nconst validationSchema = Yup.object().shape({\r\n  name: Yup.string()\r\n    .label('Name')\r\n    .required('Name is required')\r\n    .min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\nconst initialValues = {\r\n  name: '',\r\n  description: '',\r\n};\r\n\r\nconst { Column, ColumnGroup } = Table;\r\nconst { Search } = CoolInput;\r\n\r\nconst MyTable = ({ data, setTagList }) => {\r\n  const [visible, setvisible] = useState(false);\r\n  const [activeCategoryForEdit, setactiveCategoryForEdit] = useState(false);\r\n  const [deleteTagState, handleDeleteTagFetch] = useHandleFetch(\r\n    {},\r\n    'deleteDealerArea'\r\n  );\r\n\r\n  const history = useHistory();\r\n\r\n  const handleDeleteTag = async (id) => {\r\n    const deleteTagRes = await handleDeleteTagFetch({\r\n      urlOptions: {\r\n        placeHolders: {\r\n          id,\r\n        },\r\n      },\r\n    });\r\n\r\n    // @ts-ignore\r\n    if (deleteTagRes && deleteTagRes.status === 'ok') {\r\n      openSuccessNotification('Deleted Area');\r\n      const newtagList = data.filter((item) => item.id !== id);\r\n      setTagList(newtagList);\r\n    }\r\n  };\r\n\r\n  const handleOk = (e: any) => {\r\n    setvisible(false);\r\n  };\r\n\r\n  const handleCancel = (e: any) => {\r\n    setvisible(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Table\r\n        // expandable={{\r\n        //     expandedRowRender: record => <p style={{ margin: 0 }}>{record.name}</p>,\r\n        //     rowExpandable: record => record.name !== 'Not Expandable',\r\n        //   }}\r\n        // bordered={true}\r\n        size='small'\r\n        // pagination={false}\r\n        dataSource={data}\r\n      >\r\n        <Column\r\n          title='Name'\r\n          dataIndex='name'\r\n          key='id'\r\n          className='classnameofthecolumn'\r\n          render={(text, record: any) => (\r\n            <>\r\n              <h4\r\n                onClick={() => {\r\n                  history.push(`/admin/dealer/area/${record.id}`);\r\n                  // setBrandDetailVisible(true);\r\n                  setactiveCategoryForEdit(record);\r\n                }}\r\n                style={{\r\n                  fontWeight: 400,\r\n                  color: '#555',\r\n                  cursor: 'pointer',\r\n                }}\r\n              >\r\n                {text}\r\n              </h4>\r\n            </>\r\n          )}\r\n        />\r\n\r\n        <Column\r\n          className='classnameofthecolumn'\r\n          title=''\r\n          key='action'\r\n          align='right'\r\n          render={(text, record: any) => (\r\n            <Space size='middle'>\r\n              <a href='##'>\r\n                <Tooltip placement='top' title='Edit Area'>\r\n                  <span\r\n                    className='iconSize'\r\n                    onClick={() => {\r\n                      setvisible(true);\r\n                      setactiveCategoryForEdit(record);\r\n                    }}\r\n                  >\r\n                    <EditOutlined />\r\n                  </span>\r\n                </Tooltip>\r\n              </a>\r\n\r\n              <Popconfirm\r\n                onConfirm={() => handleDeleteTag(record.id)}\r\n                title='Are you sure？'\r\n                okText='Yes'\r\n                cancelText='No'\r\n              >\r\n                <span className='iconSize iconSize-danger'>\r\n                  <DeleteOutlined />\r\n                </span>\r\n              </Popconfirm>\r\n            </Space>\r\n          )}\r\n        />\r\n      </Table>\r\n\r\n      {activeCategoryForEdit && (\r\n        <TagQuickEdit\r\n          tagList={data}\r\n          setTagList={setTagList}\r\n          tagEditVisible={visible}\r\n          setTagEditVisible={setvisible}\r\n          tagDetailData={activeCategoryForEdit}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\ninterface Props {}\r\n\r\nconst TagList = ({}: Props) => {\r\n  const [tagList, setTagList] = useState([]);\r\n\r\n  const [tagState, handleTagListFetch] = useHandleFetch({}, 'dealerAreaList');\r\n\r\n  useEffect(() => {\r\n    const setTags = async () => {\r\n      const tags = await handleTagListFetch({\r\n        urlOptions: {\r\n          params: {\r\n            sortItem: 'added',\r\n            sortOrderValue: '-1',\r\n          },\r\n        },\r\n      });\r\n      // @ts-ignore\r\n      setTagList(tags);\r\n    };\r\n    setTags();\r\n  }, []);\r\n\r\n  const [addNewCategoryVisible, setAddNewCategoryVisible] = useState(false);\r\n\r\n  const getisSubmitButtonDisabled = (values, isValid) => {\r\n    if (!values.name || !isValid) {\r\n      return true;\r\n    }\r\n    return false;\r\n  };\r\n\r\n  const handleOkAddNewCategory = (e: any) => {\r\n    setAddNewCategoryVisible(false);\r\n  };\r\n\r\n  const handleCancelAddNewCategory = (e: any) => {\r\n    setAddNewCategoryVisible(false);\r\n  };\r\n\r\n  const handleSearch = (value) => {\r\n    if (tagState.data.length > 0) {\r\n      const newTagList = tagState.data.filter((item) =>\r\n        item.name.toLowerCase().includes(value.toLowerCase())\r\n      );\r\n      setTagList(newTagList);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className='categoryListContainer'>\r\n        <div className='categoryListContainer__header'>\r\n          <div className='categoryListContainer__header-searchBar-tag'>\r\n            <h2 className='categoryListContainer__header-title'>Areas</h2>\r\n\r\n            <Search\r\n              enterButton={false}\r\n              className='searchbarClassName'\r\n              placeholder='search areas..'\r\n              onChange={(e) => handleSearch(e.target.value)}\r\n            />\r\n          </div>\r\n          <Button\r\n            // type=\"primary\"\r\n            className='btnPrimaryClassNameoutline'\r\n            icon={<PlusOutlined />}\r\n            onClick={() => setAddNewCategoryVisible(true)}\r\n          >\r\n            Add New\r\n          </Button>\r\n        </div>\r\n        <div className='categoryListContainer__categoryList'>\r\n          {tagState.done && tagList.length > 0 && (\r\n            <MyTable setTagList={setTagList} data={tagList} />\r\n          )}\r\n          {tagState.isLoading && <DataTableSkeleton />}\r\n\r\n          {tagState.done && !(tagList.length > 0) && (\r\n            <div\r\n              style={{\r\n                marginTop: '200px',\r\n              }}\r\n            >\r\n              <Empty\r\n                description='No Area found'\r\n                image={Empty.PRESENTED_IMAGE_SIMPLE}\r\n              />\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <AddNewTag\r\n        tagList={tagList}\r\n        setTagList={setTagList}\r\n        addNewCategoryVisible={addNewCategoryVisible}\r\n        setAddNewCategoryVisible={setAddNewCategoryVisible}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TagList;\r\n","import React, { useState,useEffect } from 'react';\r\nimport { Modal, notification } from 'antd';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n// import components\r\nimport Input from '../../../components/Field/Input';\r\nimport TextArea from '../../../components/Field/TextArea';\r\nimport { useHandleFetch } from '../../../hooks';\r\nimport { CheckCircleOutlined, PlusOutlined, EditOutlined, DeleteOutlined, EditFilled } from '@ant-design/icons';\r\nimport MetaTags from \"../../../pages/category/MetaTags\";\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    name: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Area Updated',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Something Went Wrong',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst initialValues = {\r\n    name: '',\r\n}\r\n\r\n\r\ninterface Props {\r\n    tagEditVisible?: any;\r\n    setTagEditVisible?: any;\r\n    tagDetailData?: any;\r\n    setTagDetailData?:any; \r\n}\r\n\r\nconst QuickEdit = ({ tagEditVisible, setTagEditVisible, tagDetailData,setTagDetailData }: Props) => {\r\n    const [updateTagState, handleUpdateCategoryFetch] = useHandleFetch({}, 'updateDealerArea');\r\n \r\n    \r\n\r\n    const handleSubmit = async (values: any, actions: any) => {\r\n        const updateTagRes = await handleUpdateCategoryFetch({\r\n            urlOptions: {\r\n                placeHolders: {\r\n                    id: values.id,\r\n                }\r\n            },\r\n            body: {\r\n                name: values.name,\r\n            \r\n            },\r\n        });\r\n\r\n        // @ts-ignore\r\n        if (updateTagRes && updateTagRes.status === 'ok') {\r\n            setTagDetailData({\r\n                id:values.id,\r\n                key:values.id,\r\n                name: values.name,\r\n            })\r\n            console.log('categoryupdateTagRes',updateTagRes);\r\n            openSuccessNotification();\r\n\r\n            // const positionInTag = () => {\r\n            //     return tagList.map(item => item.id).indexOf(category.id);\r\n            // }\r\n\r\n            // const index = positionInTag();\r\n\r\n            // const updatedItem = Object.assign({}, tagList[index], { ...updateTagRes });\r\n            // const updateTagList = [...tagList.slice(0, index), updatedItem, ...tagList.slice(index + 1)];\r\n            // setTagList(updateTagList);\r\n\r\n        }\r\n        else {\r\n            openErrorNotification();\r\n        }\r\n\r\n        actions.setSubmitting(false);\r\n        setTagEditVisible(false)\r\n    };\r\n\r\n\r\n    const handleCancel = (e: any) => {\r\n        setTagEditVisible(false);\r\n    };\r\n\r\n\r\n    const getisSubmitButtonDisabled = (values, isValid) => {\r\n        if (!values.name || !isValid) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }; \r\n\r\n\r\n    // useEffect(()=>{\r\n\r\n    //     if(tagDetailData && Object.keys(tagDetailData).length > 0){\r\n    //         const metaTags = tagDetailData.metaTags.split(','); \r\n\r\n    //         console.log('localMetaTags',metaTags);\r\n           \r\n    //         const bnMetaTags = tagDetailData.bn['metaTags'].split(','); \r\n\r\n    //         setTags(metaTags)\r\n    //         setBnTags(bnMetaTags)\r\n    //     }\r\n\r\n    // },[]); \r\n\r\n\r\n    console.log('tagDetailData',tagDetailData);\r\n\r\n\r\n \r\n\r\n    return (\r\n        <Formik\r\n            onSubmit={(values, actions) => handleSubmit(values, actions)}\r\n            validationSchema={validationSchema}\r\n            validateOnBlur={false}\r\n            enableReinitialize={true}\r\n            initialValues={{\r\n                ...initialValues, \r\n                ...tagDetailData,\r\n                ...( tagDetailData && Object.keys(tagDetailData).length > 0 && {\r\n                    bnMetaTitle: tagDetailData['bn']\r\n                    && tagDetailData['bn'].metaTitle\r\n                    && tagDetailData['bn'].metaTitle,\r\n                    bnMetaDescription: tagDetailData['bn'] &&  tagDetailData['bn'].metaDescription && tagDetailData['bn'].metaDescription,\r\n                    bnName: tagDetailData['bn'] && tagDetailData['bn'].name && tagDetailData['bn'].name,\r\n                    bnDescription: tagDetailData['bn'] && tagDetailData['bn'].description && tagDetailData['bn'].description,\r\n                  })\r\n            }}\r\n        >\r\n            {({\r\n                handleChange,\r\n                values,\r\n                handleSubmit,\r\n                errors,\r\n                isValid,\r\n                isSubmitting,\r\n                touched,\r\n                handleBlur,\r\n                setFieldTouched,\r\n                handleReset,\r\n            }) => (\r\n                    <>\r\n                        <Modal\r\n                        \tstyle={{\r\n\t\t\t\t\t\t\t\ttop: '40px',\r\n\r\n\t\t\t\t\t\t\t}}\r\n                            title=\"Area Edit\"\r\n                            visible={tagEditVisible}\r\n                            onOk={(e: any) => handleSubmit(e)}\r\n                            onCancel={handleCancel}\r\n                            okText='Update'\r\n                            okButtonProps={{\r\n                                loading: isSubmitting,\r\n                                htmlType: \"submit\",\r\n                                disabled: getisSubmitButtonDisabled(values, isValid)\r\n                            }}\r\n                        >\r\n                            <Input\r\n\t\t\t\t\t\t\t\tlabel='Name'\r\n\t\t\t\t\t\t\t\tvalue={values.name}\r\n\t\t\t\t\t\t\t\tname='name'\r\n\t\t\t\t\t\t\t\tisError={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateTagState.error['error']['name'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateTagState.error['error']['name'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('name');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n                        </Modal>\r\n\r\n                    </>\r\n                )}\r\n        </Formik>\r\n    );\r\n};\r\n\r\n\r\nexport default QuickEdit;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useParams, useHistory } from 'react-router';\r\n\r\n// import hooks\r\nimport { useHandleFetch } from '../../../hooks';\r\n\r\n// import lib\r\nimport { EditOutlined } from '@ant-design/icons';\r\n\r\nimport {\r\n  Skeleton,\r\n  Empty,\r\n  Popconfirm,\r\n  Upload,\r\n  message,\r\n  Switch,\r\n  Select,\r\n  Button,\r\n  notification,\r\n  Table,\r\n  Space,\r\n  Input as CoolInput,\r\n  Tooltip,\r\n  Modal,\r\n} from 'antd';\r\n\r\n// import components\r\nimport { DataTableSkeleton } from '../../../components/Placeholders';\r\nimport TagEdit from './AreaEdit';\r\nimport moment from 'moment';\r\nconst { Column, ColumnGroup } = Table;\r\nconst { Search } = CoolInput;\r\n\r\ninterface Props {\r\n  productRecord?: any;\r\n}\r\n\r\nconst NewBrandDetail = (props: Props) => {\r\n  const [tagDetailState, handleTagDetailFetch] = useHandleFetch(\r\n    {},\r\n    'dealerAreaDetail'\r\n  );\r\n  const [tagProductsState, handleTagProductsFetch] = useHandleFetch(\r\n    {},\r\n    'dealerListByArea'\r\n  );\r\n\r\n  const [tagEditVisible, setTagEditVisible] = useState(false);\r\n  const [tagDetailData, setTagDetailData] = useState({});\r\n\r\n  console.log('dealerListByArea', tagProductsState);\r\n  const params = useParams();\r\n  const history = useHistory();\r\n  const tagId = params['id'];\r\n\r\n  useEffect(() => {\r\n    const getBrandDetail = async () => {\r\n      const tagDetailRes = await handleTagDetailFetch({\r\n        urlOptions: {\r\n          placeHolders: {\r\n            id: tagId,\r\n          },\r\n        },\r\n      });\r\n\r\n      // @ts-ignore\r\n      if (tagDetailRes) {\r\n        console.log('tagDetailRes', tagDetailRes);\r\n        // @ts-ignore\r\n        setTagDetailData(tagDetailRes);\r\n      }\r\n    };\r\n\r\n    getBrandDetail();\r\n  }, [tagId]);\r\n\r\n  useEffect(() => {\r\n    const getTagProducts = async () => {\r\n      await handleTagProductsFetch({\r\n        urlOptions: {\r\n          placeHolders: {\r\n            id: tagId,\r\n          },\r\n        },\r\n      });\r\n    };\r\n\r\n    getTagProducts();\r\n  }, [tagId]);\r\n\r\n  console.log('tagProductsState', tagProductsState);\r\n\r\n  console.log('brandParams', params);\r\n\r\n  return (\r\n    <div className='brandDetailContainer'>\r\n      <div className='brandDetailContainer__heading'>\r\n        <h3>Area Detail</h3>\r\n\r\n        {tagDetailState.done &&\r\n          tagDetailData &&\r\n          Object.keys(tagDetailData).length > 0 && (\r\n            <>\r\n              <TagEdit\r\n                tagEditVisible={tagEditVisible}\r\n                setTagEditVisible={setTagEditVisible}\r\n                tagDetailData={tagDetailData}\r\n                setTagDetailData={setTagDetailData}\r\n              />\r\n              <Button\r\n                onClick={() => setTagEditVisible(true)}\r\n                type='link'\r\n                icon={<EditOutlined />}\r\n              >\r\n                Edit\r\n              </Button>\r\n            </>\r\n          )}\r\n      </div>\r\n      <Skeleton paragraph={{ rows: 2 }} loading={tagDetailState.isLoading}>\r\n        {tagDetailState.done &&\r\n          tagDetailData &&\r\n          !(Object.keys(tagDetailData).length > 0) && (\r\n            <Empty\r\n              description='No Area found'\r\n              image={Empty.PRESENTED_IMAGE_SIMPLE}\r\n            />\r\n          )}\r\n\r\n        {tagDetailState.done &&\r\n          tagDetailData &&\r\n          Object.keys(tagDetailData).length > 0 && (\r\n            <div className='brandDetailContainer__header'>\r\n              <div className='brandDetailContainer__header-info'>\r\n                <h2>{tagDetailData['name']}</h2>\r\n                {tagDetailData['url'] && (\r\n                  <h3>\r\n                    URL:\r\n                    <span>{tagDetailData['url']}</span>\r\n                  </h3>\r\n                )}\r\n              </div>\r\n            </div>\r\n          )}\r\n      </Skeleton>\r\n\r\n      <div className='brandDetailContainer__heading'>\r\n        <h3>Dealers</h3>\r\n      </div>\r\n      <div className='brandDetailContainer__body'>\r\n        {tagProductsState.isLoading && <DataTableSkeleton />}\r\n        {tagProductsState.done && !(tagProductsState.data.length > 0) && (\r\n          <div\r\n            style={{\r\n              marginTop: '100px',\r\n            }}\r\n          >\r\n            <Empty\r\n              description='No Dealer exists for this area'\r\n              image={Empty.PRESENTED_IMAGE_SIMPLE}\r\n            />\r\n          </div>\r\n        )}\r\n\r\n        {tagProductsState.done &&\r\n          tagProductsState.data &&\r\n          tagProductsState.data.length > 0 && (\r\n            <>\r\n              <Table\r\n                style={{\r\n                  paddingTop: '10px',\r\n                  borderRadius: '5px !important',\r\n                  overflow: 'hidden',\r\n                  boxShadow:\r\n                    '0 0.125rem 0.625rem rgba(227, 231, 250, 0.3), 0 0.0625rem 0.125rem rgba(206, 220, 233, 0.4)',\r\n                }}\r\n                // expandable={{\r\n                //     expandedRowRender: record => <p style={{ margin: 0 }}>{record.name}</p>,\r\n                //     rowExpandable: record => record.name !== 'Not Expandable',\r\n                //   }}\r\n                // bordered={true}\r\n                size='small'\r\n                // pagination={false}\r\n                dataSource={tagProductsState.data}\r\n                tableLayout={'auto'}\r\n                onHeaderRow={(column) => {\r\n                  return {\r\n                    style: {\r\n                      color: 'red !important',\r\n                    },\r\n                  };\r\n                }}\r\n              >\r\n                <Column\r\n                  title='Code'\r\n                  dataIndex='code'\r\n                  key='id'\r\n                  className='classnameofthecolumn'\r\n                  render={(text, record: any) => (\r\n                    <>\r\n                      <h4\r\n                        onClick={() => {\r\n                          history.push(`/admin/dealer/${record.id}`);\r\n                          // setcategoryDetailVisible(true);\r\n                        }}\r\n                        style={{\r\n                          fontWeight: 400,\r\n                          color: '#555',\r\n                          cursor: 'pointer',\r\n                        }}\r\n                      >\r\n                        {text}\r\n                      </h4>\r\n                    </>\r\n                  )}\r\n                />\r\n\r\n                <Column\r\n                  title='Name'\r\n                  dataIndex='name'\r\n                  key='id'\r\n                  className='classnameofthecolumn'\r\n                  render={(text, record: any) => (\r\n                    <>\r\n                      <h4\r\n                        onClick={() => {\r\n                          history.push(`/admin/dealer/${record.id}`);\r\n                          // setcategoryDetailVisible(true);\r\n                        }}\r\n                        style={{\r\n                          fontWeight: 400,\r\n                          color: '#555',\r\n                          cursor: 'pointer',\r\n                        }}\r\n                      >\r\n                        {text}\r\n                      </h4>\r\n                    </>\r\n                  )}\r\n                />\r\n\r\n                <Column\r\n                  title='Commission'\r\n                  dataIndex='commission'\r\n                  key='id'\r\n                  className='classnameofthecolumn'\r\n                />\r\n\r\n                <Column\r\n                  title='Deposit Money'\r\n                  dataIndex='depositMoney'\r\n                  key='id'\r\n                  className='classnameofthecolumn'\r\n                />\r\n\r\n                <Column\r\n                  width={150}\r\n                  title='Created'\r\n                  dataIndex='created'\r\n                  key='id'\r\n                  className='classnameofthecolumn'\r\n                  render={(text, record: any) => (\r\n                    <Space size='middle'>\r\n                      <h5>\r\n                        {text && moment(text).format('MMMM Do YYYY, h:mm:ss a')}\r\n                      </h5>\r\n                    </Space>\r\n                  )}\r\n                />\r\n              </Table>\r\n            </>\r\n          )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NewBrandDetail;\r\n","import React from 'react';\r\n\r\n// import pages\r\nimport { Overview } from '../../pages/overview';\r\nimport { CategoryList, NewCategoryDetail } from '../../pages/category';\r\nimport {\r\n  ProductBundleDetail,\r\n  ProductBundleList,\r\n} from '../../pages/productBundle';\r\nimport { BrandList, AddNewBrand, NewBrandDetail } from '../../pages/brand';\r\nimport { ProductList, NewProductDetail } from '../../pages/product';\r\nimport { TagList, AddNewTag, NewTagDetail } from '../../pages/tag';\r\nimport { CouponList, CouponDetail } from '../../pages/coupon';\r\nimport { CustomerList, CustomerDetail } from '../../pages/customer';\r\nimport { PagesList, AddNewPage, PageDetail, PageEdit } from '../../pages/pages';\r\nimport { AttributeList } from '../../pages/attribute';\r\nimport {\r\n  OrderList,\r\n  AddNewOrder,\r\n  OrderDetail,\r\n  OrderAnalytics,\r\n  ConfigOrderStatus,\r\n} from '../../pages/order';\r\nimport {\r\n  Component,\r\n  ManageThemes,\r\n  Image,\r\n  Invoice,\r\n  SiteInfo,\r\n} from '../../pages/settings';\r\nimport { Delivery } from '../../pages/delivery';\r\nimport Sms from '../../pages/sms';\r\nimport { Email } from '../../pages/email';\r\nimport { NotificationList } from '../../pages/notification';\r\nimport { AdminList, AdminDetail } from '../../pages/admins';\r\nimport { PostList, PostDetail } from '../../pages/post';\r\nimport { StaffList, StaffDetail } from '../../pages/staff';\r\nimport {\r\n  SalaryReportDetail,\r\n  SalaryReportList,\r\n} from '../../pages/staff/salaryReport';\r\nimport { ExpenseList, ExpenseDetail } from '../../pages/expense';\r\nimport { DealerList, DealerDetail } from '../../pages/dealer';\r\nimport { AreaDetail, AreaList } from '../../pages/dealer/Area';\r\nimport {\r\n  PostTagList,\r\n  PostCategoryList,\r\n  NewPostCategoryDetail,\r\n  NewPostTagDetail,\r\n} from '../../pages/post';\r\n\r\n// import Login from '../../pages/auth/login';\r\n\r\n// import libraries\r\nimport { Layout } from 'antd';\r\nimport { Switch, Route, Redirect } from 'react-router-dom';\r\n\r\nconst { Content } = Layout;\r\n\r\ninterface Props {}\r\n\r\nconst ContentComponent = (props: Props) => {\r\n  return (\r\n    <Content\r\n      hasSider={true}\r\n      style={{\r\n        backgroundColor: '#fff',\r\n        paddingTop: '20px',\r\n      }}\r\n    >\r\n      <Switch>\r\n        <Route\r\n          exact\r\n          path='/'\r\n          render={() => <Redirect to='/admin/overview' />}\r\n        />\r\n        <Route\r\n          exact\r\n          path='/admin'\r\n          render={() => <Redirect to='/admin/overview' />}\r\n        />\r\n        <Route path='/admin/overview' exact>\r\n          <Overview />\r\n        </Route>\r\n        <Route path='/admin/category' exact>\r\n          <CategoryList />\r\n        </Route>\r\n        <Route path='/admin/category/:id' exact>\r\n          <NewCategoryDetail />\r\n        </Route>\r\n        {/* <Route path='/admin/category/:name' exact>\r\n                    <CategoryDetail />\r\n                </Route> */}\r\n        {/* CategoryDetail */}\r\n        <Route path='/admin/brand/new' exact>\r\n          <AddNewBrand />\r\n        </Route>\r\n        <Route path='/admin/brand' exact>\r\n          <BrandList />\r\n        </Route>\r\n        <Route path='/admin/brand/:id' exact>\r\n          <NewBrandDetail />\r\n        </Route>\r\n        <Route path='/admin/product' exact>\r\n          <ProductList />\r\n        </Route>\r\n        <Route path='/admin/product/:id' exact>\r\n          <NewProductDetail />\r\n        </Route>\r\n        <Route path='/admin/bundle' exact>\r\n          <ProductBundleList />\r\n        </Route>\r\n        <Route path='/admin/bundle/:id' exact>\r\n          <ProductBundleDetail />\r\n        </Route>\r\n        <Route path='/admin/coupon' exact>\r\n          <CouponList />\r\n        </Route>\r\n        <Route path='/admin/posts' exact>\r\n          <PostList />\r\n        </Route>\r\n        <Route path='/admin/posts/tag' exact>\r\n          <PostTagList />\r\n        </Route>\r\n        <Route path='/admin/posts/category' exact>\r\n          <PostCategoryList />\r\n        </Route>\r\n        <Route path='/admin/posts/:id' exact>\r\n          <PostDetail />\r\n        </Route>\r\n        <Route path='/admin/posts/tag/:id' exact>\r\n          <NewPostTagDetail />\r\n        </Route>\r\n        <Route path='/admin/posts/category/:id' exact>\r\n          <NewPostCategoryDetail />\r\n        </Route>\r\n        <Route path='/admin/coupon/:id' exact>\r\n          <CouponDetail />\r\n        </Route>\r\n        <Route path='/admin/notification' exact>\r\n          <NotificationList />\r\n        </Route>\r\n        {/* <Route path='/product/new' exact>\r\n                     <AddNewProduct />\r\n                   </Route> */}\r\n        <Route path='/admin/tag' exact>\r\n          <TagList />\r\n        </Route>\r\n        <Route path='/admin/tag/new' exact>\r\n          <AddNewTag />\r\n        </Route>\r\n        <Route path='/admin/tag/:id' exact>\r\n          <NewTagDetail />\r\n        </Route>\r\n        <Route path='/admin/attribute' exact>\r\n          <AttributeList />\r\n        </Route>\r\n        <Route path='/admin/order' exact>\r\n          <OrderList />\r\n        </Route>\r\n        <Route path='/admin/order/new' exact>\r\n          <AddNewOrder />\r\n        </Route>\r\n        <Route path='/admin/order/overview' exact>\r\n          <OrderAnalytics />\r\n        </Route>\r\n        <Route path='/admin/order/config' exact>\r\n          <ConfigOrderStatus />\r\n        </Route>\r\n        <Route path='/admin/order/:id' exact>\r\n          <OrderDetail />\r\n        </Route>\r\n        <Route path='/admin/dealer' exact>\r\n          <DealerList />\r\n        </Route>\r\n        <Route path='/admin/dealer/area' exact>\r\n          <AreaList />\r\n        </Route>\r\n        <Route path='/admin/dealer/area/:id' exact>\r\n          <AreaDetail />\r\n        </Route>\r\n        <Route path='/admin/dealer/:id' exact>\r\n          <DealerDetail />\r\n        </Route>\r\n        <Route path='/admin/staff' exact>\r\n          <StaffList />\r\n        </Route>\r\n        <Route path='/admin/salaryReport' exact>\r\n          <SalaryReportList />\r\n        </Route>\r\n        <Route path='/admin/salaryReport/:id' exact>\r\n          <SalaryReportDetail />\r\n        </Route>\r\n        <Route path='/admin/staff/:id' exact>\r\n          <StaffDetail />\r\n        </Route>\r\n        <Route path='/admin/expense' exact>\r\n          <ExpenseList />\r\n        </Route>\r\n        <Route path='/admin/expense/:id' exact>\r\n          <ExpenseDetail />\r\n        </Route>\r\n\r\n        <Route path='/admin/acccounting/overview' exact>\r\n          <OrderList />\r\n        </Route>\r\n\r\n        <Route path='/admin/customer' exact>\r\n          <CustomerList />\r\n        </Route>\r\n        <Route path='/admin/customer/:id' exact>\r\n          <CustomerDetail />\r\n        </Route>\r\n        <Route path='/admin/page' exact>\r\n          <PagesList />\r\n        </Route>\r\n        <Route path='/admin/page/new' exact>\r\n          <AddNewPage />\r\n        </Route>\r\n        <Route path='/admin/page/edit/:id' exact>\r\n          <PageEdit />\r\n        </Route>\r\n\r\n        <Route path='/admin/page/:id' exact>\r\n          <PageDetail />\r\n        </Route>\r\n        <Route path='/admin/delivery' exact>\r\n          <Delivery />\r\n        </Route>\r\n        <Route path='/admin/settings/components' exact>\r\n          <Component />\r\n        </Route>\r\n        <Route path='/admin/settings/image' exact>\r\n          <Image />\r\n        </Route>\r\n        <Route path='/admin/settings/themes' exact>\r\n          <ManageThemes />\r\n        </Route>\r\n        <Route path='/admin/settings/invoice' exact>\r\n          <Invoice />\r\n        </Route>\r\n        <Route path='/admin/settings/siteInfo' exact>\r\n          <SiteInfo />\r\n        </Route>\r\n        <Route path='/admin/settings/admins' exact>\r\n          <AdminList />\r\n        </Route>\r\n        <Route path='/admin/settings/admins/:id' exact>\r\n          <AdminDetail />\r\n        </Route>\r\n        <Route path='/admin/sms' exact>\r\n          <Sms />\r\n        </Route>\r\n        <Route path='/admin/email' exact>\r\n          <Email />\r\n        </Route>\r\n      </Switch>\r\n    </Content>\r\n  );\r\n};\r\n\r\nexport default ContentComponent;\r\n","import Content from \"./Content\";\r\nexport default Content; ","import React, { useEffect } from 'react';\r\n\r\n// import pages\r\nimport Login from './pages/auth/login';\r\n\r\n// import layouts\r\nimport Sider from './layout/sider';\r\nimport Header from './layout/header';\r\nimport Content from './layout/content';\r\n// import Footer from './layout/footer';\r\n\r\n// import state\r\nimport { glboalOperations } from './state/ducks/globalState';\r\nimport { credentialsOperations } from './state/ducks/credentials';\r\nimport { connect } from 'react-redux';\r\n\r\n// import libraries\r\nimport { Layout } from 'antd';\r\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\r\n\r\n// import hooks\r\nimport { useHandleFetch } from './hooks';\r\n\r\nconst App = ({ saveRoles, saveCredentials }) => {\r\n  const [\r\n    getAdminCredentialState,\r\n    handleAdminCredentCialsFetch,\r\n  ] = useHandleFetch({}, 'getAdminCredential');\r\n\r\n  useEffect(() => {\r\n    const getCredenCials = async () => {\r\n      const res = await handleAdminCredentCialsFetch({});\r\n      // saveCredentials(res);\r\n      // @ts-ignore\r\n      if (res && res['role']) {\r\n        saveRoles(res['role'] || []);\r\n      }\r\n    };\r\n    getCredenCials();\r\n  }, []);\r\n\r\n  return (\r\n    <Router>\r\n      <Switch>\r\n        <Route path='/admin/login' exact>\r\n          <Login />\r\n        </Route>\r\n      </Switch>\r\n      <Switch>\r\n        <Layout style={{ minHeight: '100vh' }}>\r\n          <Header />\r\n\r\n          <Layout className='site-layout'>\r\n            <Sider />\r\n            <Content />\r\n          </Layout>\r\n          {/* <Footer /> */}\r\n        </Layout>\r\n      </Switch>\r\n    </Router>\r\n  );\r\n};\r\n\r\nconst mapDispathToProps = {\r\n  saveRoles: glboalOperations.saveRoles,\r\n  saveCredentials: credentialsOperations.saveCredentials,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  globalState: state.globalState,\r\n});\r\n\r\n// @ts-ignore\r\nexport default connect(mapStateToProps, mapDispathToProps)(App);\r\n\r\n/* \r\n\r\n#product \r\n#order\r\n#category\r\n#order\r\n#customer\r\n#customer\r\n*/\r\n\r\n/*\r\n\r\nfix ===>\r\n\r\n// # product add -> category name search dile crash kore\r\n// # add order -> make delivery zone align as horizontal\r\n// # double notification -> when creating order \r\n// # customer detail -> customer er order history hobe\r\n// # customer list => add orderCount and totalOrderPrice field to show\r\n# customer List =>  user will be able to sort with them (sort=totalOrderPrice&sortOrder=-1) \r\n// # order analytics -> add metric=deliveryRegion \r\n# at the footer of analytic charts -> add a show data button -> on clicked show data as table \r\n# price price field - make input type number \r\n# delivery region edit\r\n# email api implementation\r\n# check if the tag edit works properly \r\n# on open product quick epit site crashes \r\n# product bundle detail -> show images in product bundle detail \r\n# fix the attach image in bundle \r\n# amount type will be drowpdown\r\n# add meta tags autofill in all items \r\n# add porst/add product => categories scrolbar\r\n# update all the item quick edit to item edit \r\n# make order edit functionality to quick order edit\r\n\r\n\r\nfeat ===> \r\n\r\n# dealer\r\n# bundle edit\r\n# coupon edit\r\n# post edit\r\n# post category edit\r\n# post tag edit (maybe)\r\n# notification\r\n# admin roles\r\n# dynamic order status\r\n# add dealer code at add order. \r\n# add coupon code at add order. \r\n*/\r\n\r\n/* \r\n\r\n*/\r\n\r\n/*\r\n\r\nissus ====> \r\n\r\nerror => product bundle ---> item not defined. \r\nerror => Cannot read property 'offer' of undefined. \r\nerror => coupon cover is coming as array in coupon list.\r\nerror => update post tag => Cannot read property 'name' of undefined. \r\nerror => add post category => checkMime is not defined probably because of the image.\r\npage update => {\"image\":\"selected image are not attached to page with given id\"}.\r\norder list => add delivery filtering drowndown\r\nrecipe category => fix recipe category edit and others'\r\nadd site map => at site info add a extra tab, --sitemap-- then in there show, site maps, and\r\nin below show update button which will update the site map. \r\nmake components images to update at once.  \r\n\r\n*/\r\n\r\n/* \r\n\r\nOff work left to do: \r\nFiltering order by deliveryzone\r\nmaking Post category work perfectly\r\nupdate component at once. \r\norder status is not working properly\r\nadmin roles\r\ngive resolved images when create a component\r\ncheck if productlist returns cover\r\nmake admin list section work properly\r\n*/\r\n\r\n/* \r\n\r\nThings that still left to do in mangshobazar: \r\n\r\nadd delete button in add new component\r\ncomplete salary report \r\nfix the order invoice \r\n\r\n\r\n// on change search in --> customer/recipe/dealer/staff\r\n\r\n\r\n\r\n\r\n----------------------------------------------------\r\nEDIT RECIPIE\t* bn fields not populating (preparationTime, servingSize) --> \r\nsuggestion --> change servingSize->serving\r\n   and preparationTime -> prepTime\t* servingSize is not defined error\r\n    on updateSINGLE RECIPIE PAGE\t* on edit shows \r\n   \"servingSize is not defined\"EDIT CATEGORY: \t* bn values and meta fields not populating on edit\r\n*/\r\n","export function actionShouldBlock( meta ) {\r\n    return !meta || !meta.async || !meta.blocking;\r\n}\r\n\r\nexport function actionFinished ( type ) {\r\n    return type.includes( \"_COMPLETED\" ) || type.includes( \"_FAILED\" );\r\n}\r\n","import * as utils from \"./utils\";\r\n\r\nconst busyReducer = ( state = 0, action ) => {\r\n    if ( utils.actionShouldBlock( action.meta ) ) {\r\n        return state;\r\n    }\r\n    if ( utils.actionFinished( action.type ) ) {\r\n        return state - 1;\r\n    }\r\n    return state + 1;\r\n};\r\n\r\nexport default busyReducer;\r\n","import reducer from \"./reducers\";\r\n\r\nexport default reducer;\r\n","export function productPositionInCart(cart, product) {\r\n  return cart.map(item => item.product.id).indexOf(product.id);\r\n}\r\n\r\nexport function newCartItem(product, quantity, isSelectedForCheckout) {\r\n  return {\r\n    product,\r\n    quantity,\r\n    isSelectedForCheckout,\r\n  };\r\n}\r\n","export function getCartItemQuantity(cart, id) {\r\n  return cart.find((item) => item.product.id === id).quantity;\r\n}\r\n\r\nexport const getTotalPriceOfCartItems = (cartItems) => {\r\n  if (!cartItems.length > 0) {\r\n    return 0;\r\n  }\r\n\r\n  const prices = cartItems.map((cartItem) => {\r\n    return cartItem.quantity * parseInt(cartItem.product['price']) || 0;\r\n  });\r\n\r\n  const totalPrice = prices.reduce((a, b) => {\r\n    return a + b;\r\n  }, 0);\r\n  return totalPrice;\r\n};\r\n","import reducer from \"./reducers\";\r\n\r\nimport * as cartOperations from \"./operations\";\r\nimport * as cartSelectors from \"./selectors\";\r\n\r\nexport {\r\n    cartOperations,\r\n    cartSelectors,\r\n};\r\n\r\nexport default reducer;\r\n","import * as types from './types';\r\nimport * as utils from './utils';\r\nimport { createReducer } from '../../utils';\r\n\r\n/* State shape\r\n[\r\n    {\r\n        product,\r\n        quantity,\r\n    }\r\n]\r\n*/\r\n\r\nconst initialState = [];\r\n\r\nconst cartReducer = createReducer(initialState)({\r\n  [types.TOGGLE]: (state, action) => {\r\n    const { product, quantity, isSelectedForCheckout } = action.payload;\r\n    const index = utils.productPositionInCart(state, product);\r\n    if (index === -1) {\r\n      return [\r\n        utils.newCartItem(product, quantity, isSelectedForCheckout),\r\n        ...state,\r\n      ];\r\n    }\r\n\r\n    const tempArrayWithOutOldProduct = state.filter(\r\n      (item) => item.product.id !== product.id\r\n    );\r\n\r\n    return tempArrayWithOutOldProduct;\r\n  },\r\n\r\n  [types.ADD_PRODUCTS_TO_CART]: (state, action) => {\r\n    const { cartItems } = action.payload;\r\n\r\n    if (cartItems.length > 0) {\r\n      return cartItems;\r\n    } else {\r\n      return [...state];\r\n    }\r\n  },\r\n\r\n  [types.SELECT_PRODUCT_FOR_CHECKOUT]: (state, action) => {\r\n    const { product } = action.payload;\r\n\r\n    const index = utils.productPositionInCart(state, product.product);\r\n    if (index === -1) {\r\n      return [...state, { ...product, isSelectedForCheckout: true }];\r\n    } else if (index !== -1 && !product.isSelectedForCheckout) {\r\n      const tempArrayWithOutOldProduct = state.filter(\r\n        (item) => item.product.id !== product.product.id\r\n      );\r\n\r\n      return [\r\n        ...tempArrayWithOutOldProduct,\r\n        { ...product, isSelectedForCheckout: true },\r\n      ];\r\n    }\r\n\r\n    const tempArrayWithOutOldProduct = state.filter(\r\n      (item) => item.product.id !== product.product.id\r\n    );\r\n\r\n    return [\r\n      ...tempArrayWithOutOldProduct,\r\n      { ...product, isSelectedForCheckout: false },\r\n    ];\r\n  },\r\n\r\n  [types.CHANGE_QUANTITY]: (state, action) => {\r\n    const { product, quantity } = action.payload;\r\n    const index = utils.productPositionInCart(state, product);\r\n\r\n    const updatedItem = Object.assign({}, state[index], { quantity });\r\n    return [...state.slice(0, index), updatedItem, ...state.slice(index + 1)];\r\n  },\r\n  [types.REMOVE]: (state, action) => {\r\n    const { product } = action.payload;\r\n    const index = utils.productPositionInCart(state, product);\r\n    return [...state.slice(0, index), ...state.slice(index + 1)];\r\n  },\r\n  [types.CLEAR]: () => [],\r\n});\r\n\r\nexport default cartReducer;\r\n","export const SET_CART = 'cart/SET';\r\nexport const TOGGLE = 'cart/TOGGLE';\r\nexport const ADD_PRODUCTS_TO_CART = 'cart/ADD_PRODUCTS_TO_CART';\r\nexport const SELECT_PRODUCT_FOR_CHECKOUT = 'wishList/SELECT_PRODUCT_FOR_CHECKOUT';\r\nexport const CHANGE_QUANTITY = 'cart/CHANGE_QUANTITY';\r\nexport const REMOVE = 'cart/REMOVE';\r\nexport const CLEAR = 'cart/CLEAR';\r\n","export function productPositionInWishList(wishList, productId) {\r\n  return wishList.map(item => item).indexOf(productId);\r\n}\r\n","import reducer from './reducers';\r\n\r\nimport * as wishListOperations from './operations';\r\nimport * as wishListSelectors from './selectors';\r\n\r\nexport { wishListOperations, wishListSelectors };\r\n\r\nexport default reducer;\r\n","import * as types from './types';\r\nimport * as utils from './utils';\r\nimport { createReducer } from '../../utils';\r\n\r\n/* State shape\r\n[\r\n    {\r\n        product\r\n    }\r\n]\r\n*/\r\n\r\nconst initialState = [];\r\n\r\nconst wishListReducer = createReducer(initialState)({\r\n  [types.TOGGLE]: (state, action) => {\r\n    const { productId } = action.payload;\r\n\r\n    const index = utils.productPositionInWishList(state, productId);\r\n    if (index === -1) {\r\n      return [...state, productId];\r\n    }\r\n\r\n    const tempArrayWithOutOldProduct = state.filter(\r\n      (item) => item !== productId\r\n    );\r\n\r\n    return tempArrayWithOutOldProduct;\r\n  },\r\n  [types.ADD_WISHLIST]: (state, action) => {\r\n    const wishlist = action.payload;\r\n    return [...wishlist];\r\n  },\r\n\r\n  [types.REMOVE]: (state, action) => {\r\n    const { productId } = action.payload;\r\n    const index = utils.productPositionInWishList(state, productId);\r\n    return [...state.slice(0, index), ...state.slice(index + 1)];\r\n  },\r\n  [types.CLEAR]: () => [],\r\n});\r\n\r\nexport default wishListReducer;\r\n","export const TOGGLE = 'wishList/TOGGLE';\r\nexport const ADD_WISHLIST = 'wishList/ADD_WISHLIST';\r\nexport const REMOVE = 'wishList/REMOVE';\r\nexport const CLEAR = 'wishList/CLEAR';\r\n","export function getCartItemQuantity( cart, id ) {\r\n    return cart.find( item => item.product.id === id ).quantity;\r\n}\r\n\r\n\r\nexport const getTotalPriceOfCartItems = (cartItems) => {\r\n    if(!cartItems.length > 0){\r\n        return 0; \r\n    }\r\n\r\n    return cartItems.reduce((a,b) => {\r\n        return !(b.quantity > 1) && a + +b.product.price || +b.product.price * b.quantity\r\n    },0); \r\n\r\n}","import reducer from './reducers';\r\n\r\nimport * as checkoutOperations from './operations';\r\nimport * as checkoutSelectors from './selectors';\r\n\r\nexport { checkoutOperations, checkoutSelectors };\r\n\r\nexport default reducer;\r\n","import * as types from './types';\r\nimport * as utils from './utils';\r\nimport { createReducer } from '../../utils';\r\n\r\n/* State shape\r\n[\r\n    {\r\n        product,\r\n        quantity,\r\n    }\r\n]\r\n*/\r\n\r\nconst initialState = [];\r\n\r\nconst checkoutReducer = createReducer(initialState)({\r\n  [types.ADD_PRODUCTS_TO_CHECKOUT]: (state, action) => {\r\n    const { products } = action.payload;\r\n\r\n    if (products.length > 0) {\r\n      const uniqueProductsOfCheckout = products.filter(function(product) {\r\n        return state.indexOf(product) == -1;\r\n      });\r\n      return uniqueProductsOfCheckout;\r\n    } else {\r\n      return [...state];\r\n    }\r\n  },\r\n  [types.REMOVE]: (state, action) => {\r\n    const { product } = action.payload;\r\n    const index = utils.productPositionInCart(state, product);\r\n    return [...state.slice(0, index), ...state.slice(index + 1)];\r\n  },\r\n  [types.CLEAR]: () => [],\r\n});\r\n\r\nexport default checkoutReducer;\r\n","export const SET_CART = 'checkout/SET';\r\nexport const TOGGLE = 'checkout/TOGGLE';\r\nexport const ADD_PRODUCTS_TO_CHECKOUT = 'checkout/ADD_PRODUCTS_TO_CHECKOUT';\r\nexport const CHANGE_QUANTITY = 'checkout/CHANGE_QUANTITY';\r\nexport const REMOVE = 'checkout/REMOVE';\r\nexport const CLEAR = 'checkout/CLEAR';\r\n","export function productPositionInCart( cart, product ) {\r\n    return cart.map( item => item.product.id ).indexOf( product.id );\r\n}\r\n\r\nexport function newCartItem( product, quantity ) {\r\n    return {\r\n        product,\r\n        quantity,\r\n    };\r\n}\r\n","export const ADD = 'serach/ADD';\r\nexport const UPDATE = 'serach/UPDATE';\r\nexport const REMOVE = 'serach/REMOVE';\r\nexport const CLEAR = 'serach/CLEAR';\r\n","export function queryPositionInQueryList(queryList, query) {\r\n  return queryList.map(item => item.key).indexOf(query.key);\r\n}\r\n\r\nexport function newQueryItem(query) {\r\n  return query;\r\n}\r\n","import reducer from './reducers';\r\n\r\nimport * as queryOperations from './operations';\r\nimport * as querySelectors from './selectors';\r\n\r\nexport { queryOperations, querySelectors };\r\n\r\nexport default reducer;\r\n","import * as types from './types';\r\nimport * as utils from './utils';\r\nimport { createReducer } from '../../utils';\r\n\r\n/* State shape\r\n[\r\n    {\r\n       id: uniqueId,\r\n       key: 'searchQuery',\r\n       value: string | product => {name,id,image}\r\n       created: Date,\r\n       lastUpdated: Date\r\n    }\r\n]\r\n*/\r\n\r\nconst initialState = [];\r\n\r\nconst searyQueryReducer = createReducer(initialState)({\r\n  [types.ADD]: (state, action) => {\r\n    const { query } = action.payload;\r\n    const index = utils.queryPositionInQueryList(state, query);\r\n    if (index === -1) {\r\n      return [utils.newQueryItem(query), ...state];\r\n    }\r\n\r\n    const currentItem = state[index];\r\n    const updatedItem = Object.assign({}, currentItem);\r\n    return [...state.slice(0, index), updatedItem, ...state.slice(index + 1)];\r\n  },\r\n  [types.UPDATE]: (state, action) => {\r\n    const { query } = action.payload;\r\n    const oldQuery = state.find(item => item.key !== query.key);\r\n    const tempArrayWithOutOldQueries = state.filter(item => item.key !== query.key);\r\n    return [...tempArrayWithOutOldQueries, { ...oldQuery, ...query }];\r\n  },\r\n  [types.REMOVE]: (state, action) => {\r\n    const { product } = action.payload;\r\n    const index = utils.queryPositionInQueryList(state, product);\r\n    return [...state.slice(0, index), ...state.slice(index + 1)];\r\n  },\r\n  [types.CLEAR]: () => [],\r\n});\r\n\r\nexport default searyQueryReducer;\r\n","import { combineReducers } from \"redux\";\r\nimport * as types from \"./types\";\r\nimport { createReducer } from \"../../utils\";\r\n\r\n/* State shape\r\n{\r\n    details: product,\r\n    list: [ product ],\r\n}\r\n*/\r\n\r\nconst detailsReducer = createReducer( null )( {\r\n    [ types.FETCH_DETAILS_COMPLETED ]: ( state, action ) => action.payload.product,\r\n} );\r\n\r\nconst listReducer = createReducer( [ ] )( {\r\n    [ types.FETCH_LIST_COMPLETED ]: ( state, action ) => action.payload.products,\r\n} );\r\n\r\nexport default combineReducers( {\r\n    details: detailsReducer,\r\n    list: listReducer,\r\n} );\r\n","export const FETCH_DETAILS = \"product/FETCH_DETAILS\";\r\nexport const FETCH_DETAILS_COMPLETED = \"product/FETCH_DETAILS_COMPLETED\";\r\nexport const FETCH_DETAILS_FAILED = \"product/FETCH_DETAILS_FAILED\";\r\n\r\nexport const FETCH_LIST = \"product/FETCH_LIST\";\r\nexport const FETCH_LIST_COMPLETED = \"product/FETCH_LIST_COMPLETED\";\r\nexport const FETCH_LIST_FAILED = \"product/FETCH_LIST_FAILED\";\r\n","import reducer from \"./reducers\";\r\n\r\nimport * as productOperations from \"./operations\";\r\n\r\nexport {\r\n    productOperations,\r\n};\r\n\r\nexport default reducer;\r\n","import { combineReducers } from 'redux';\r\nimport * as types from './types';\r\nimport { createReducer } from '../../utils';\r\n\r\n/* State shape\r\n{\r\n    isAuthenticated: bool,\r\n    redirectAfterLogin: string\r\n}\r\n*/\r\n\r\nconst authReducer = createReducer(false)({\r\n  [types.LOGIN]: () => true,\r\n  [types.LOGOUT]: () => false,\r\n});\r\n\r\nconst redirectAfterLoginReducer = createReducer(null)({\r\n  [types.SET_REDIRECT_AFTER_LOGIN]: (state, action) => action.payload.redirectUrl,\r\n});\r\n\r\nexport default combineReducers({\r\n  isAuthenticated: authReducer,\r\n  redirectAfterLogin: redirectAfterLoginReducer,\r\n});\r\n","export const LOGIN = \"session/LOGIN\";\r\nexport const LOGIN_COMPLETED = \"session/LOGIN_COMPLETED\";\r\nexport const LOGIN_FAILED = \"session/LOGIN_FAILED\";\r\nexport const LOGOUT = \"session/LOGOUT\";\r\nexport const INITIALIZE = \"session/INITIALIZE_SESSION\";\r\nexport const SET_REDIRECT_AFTER_LOGIN = \"session/SET_REDIRECT_AFTER_LOGIN\";\r\nexport const ADD_CUSTOMER_DATA = \"session/ADD_CUSTOMER_DATA\";\r\n","import reducer from \"./reducers\";\r\n\r\nimport * as sessionOperations from \"./operations\";\r\n\r\nexport {\r\n    sessionOperations,\r\n};\r\n\r\nexport default reducer;\r\n","import * as types from './types';\r\nimport { createReducer } from '../../utils';\r\n\r\nconst initialState = [];\r\n\r\nconst cartReducer = createReducer(initialState)({\r\n  [types.ADD_CATEGORIES]: (state, action) => {\r\n    const { categories } = action.payload;\r\n\r\n    if (categories) {\r\n      return categories;\r\n    }\r\n\r\n    return [...state];\r\n  },\r\n\r\n  [types.GET_CATEGORIES]: (state, action) => {\r\n    return [...state];\r\n  },\r\n});\r\n\r\nexport default cartReducer;\r\n","export const ADD_CATEGORIES = 'category/ADD_CATEGORIES';\r\nexport const GET_CATEGORIES = 'category/GET_CATEGORIES';\r\n","import reducer from './reducers';\r\n\r\nimport * as categoryOperations from './operations';\r\nimport * as categorySelectors from './selectors';\r\n\r\nexport { categoryOperations, categorySelectors };\r\n\r\nexport default reducer;\r\n","import * as types from './types';\r\nimport { createReducer } from '../../utils';\r\n\r\nconst initialState = {};\r\n\r\nconst cartReducer = createReducer(initialState)({\r\n  [types.ADD_ITEM_TO_CACHE]: (state, action) => {\r\n    const { response } = action.payload;\r\n\r\n    if (response) {\r\n      return { ...state, ...response };\r\n    }\r\n\r\n    return { ...state };\r\n  },\r\n});\r\n\r\nexport default cartReducer;\r\n","export const ADD_ITEM_TO_CACHE = 'category/ADD_ITEM_TO_CACHE';\r\n","import reducer from './reducers';\r\n\r\nimport * as cacheOperations from './operations';\r\nimport * as cacheSelectors from './selectors';\r\n\r\nexport { cacheOperations, cacheSelectors };\r\n\r\nexport default reducer;\r\n","import * as types from './types';\r\nimport { createReducer } from '../../utils';\r\n\r\nconst initialState = [];\r\n\r\nconst cartReducer = createReducer(initialState)({\r\n  [types.ADD_BRAND]: (state, action) => {\r\n    const { brands } = action.payload;\r\n\r\n    if (brands) {\r\n      return brands;\r\n    }\r\n\r\n    return [...state];\r\n  },\r\n\r\n  [types.GET_BRAND]: (state, action) => {\r\n    return [...state];\r\n  },\r\n});\r\n\r\nexport default cartReducer;\r\n","export const ADD_BRAND = 'category/ADD_BRAND';\r\nexport const GET_BRAND = 'category/GET_BRAND';\r\n","import reducer from './reducers';\r\n\r\nimport * as brandOperations from './operations';\r\nimport * as brandSelectors from './selectors';\r\n\r\nexport { brandOperations, brandSelectors };\r\n\r\nexport default reducer;\r\n","import * as types from './types';\r\nimport { createReducer } from '../../utils';\r\n\r\nconst initialState = [];\r\n\r\nconst cartReducer = createReducer(initialState)({\r\n  [types.ADD_TAGS]: (state, action) => {\r\n    const { tags } = action.payload;\r\n\r\n    if (tags) {\r\n      return tags;\r\n    }\r\n\r\n    return [...state];\r\n  },\r\n\r\n  [types.GET_TAGS]: (state, action) => {\r\n    return [...state];\r\n  },\r\n});\r\n\r\nexport default cartReducer;\r\n","export const ADD_TAGS = 'tag/ADD_TAGS';\r\nexport const GET_TAGS = 'tag/GET_TAGS';\r\n","import reducer from './reducers';\r\n\r\nimport * as tagOperations from './operations';\r\nimport * as tagSelectors from './selectors';\r\n\r\nexport { tagOperations, tagSelectors };\r\n\r\nexport default reducer;\r\n","import { fetch } from \"../utils\";\r\n\r\nconst baseUrl = typeof document === \"undefined\" ? \"http://localhost:7777/api\" : \"/api\";\r\n\r\nconst apiService = ( ) => ( next ) => ( action ) => {\r\n    const result = next( action );\r\n    if ( !action.meta || !action.meta.async ) {\r\n        return result;\r\n    }\r\n\r\n    const { path, method = \"GET\", body } = action.meta;\r\n\r\n    if ( !path ) {\r\n        throw new Error( `'path' not specified for async action ${ action.type }` );\r\n    }\r\n\r\n    const url = `${ baseUrl }${ path }`;\r\n\r\n    return fetch( url, method, body ).then(\r\n        res => handleResponse( res, action, next ),\r\n        err => handleErrors( err, action, next ),\r\n    );\r\n};\r\n\r\nexport default apiService;\r\n\r\nfunction handleErrors( err, action, next ) {\r\n    next( {\r\n        type: `${ action.type }_FAILED`,\r\n        payload: err,\r\n        meta: action.meta,\r\n    } );\r\n\r\n    return Promise.reject( err );\r\n}\r\n\r\nfunction handleResponse( res, action, next ) {\r\n    next( {\r\n        type: `${ action.type }_COMPLETED`,\r\n        payload: res,\r\n        meta: action.meta,\r\n    } );\r\n\r\n    return res;\r\n}\r\n","const REGULAR = [\r\n    \"background: blue\",\r\n    \"color: white\",\r\n].join( \";\" );\r\n\r\nconst SUCCESS = [\r\n    \"background: green\",\r\n    \"color: white\",\r\n].join( \";\" );\r\n\r\nconst STARTED = [\r\n    \"background: darkorange\",\r\n    \"color: white\",\r\n].join( \";\" );\r\n\r\nconst FAILURE = [\r\n    \"background: red\",\r\n    \"color: white\",\r\n].join( \";\" );\r\n\r\nconst createLogger = ( active = true ) => ( store ) => ( next ) => ( action ) => {\r\n    if ( !active ) {\r\n        return next( action );\r\n    }\r\n\r\n    const prevState = store.getState( );\r\n    const result = next( action );\r\n    const nextState = store.getState( );\r\n    logGroupCollapsed( `%c ${ action.type } `, determineStyle( action ) );\r\n    logInfo( \"%cprev state\", \"color: darkorange\", prevState );\r\n    logInfo( \"%caction payload\", \"color: blue\", action.payload );\r\n    logInfo( \"%cnext state\", \"color: darkgreen\", nextState );\r\n    logGroupEnd( );\r\n    return result;\r\n};\r\n\r\nexport default createLogger;\r\n\r\nfunction logGroupCollapsed( ...args ) {\r\n    const logFunction = typeof console.groupCollapsed === \"function\" ? console.groupCollapsed : console.info;\r\n    logFunction( ...args );\r\n}\r\n\r\nfunction logGroupEnd( ...args ) {\r\n    const logFunction = typeof console.groupEnd === \"function\" ? console.groupEnd : console.info;\r\n    logFunction( ...args );\r\n}\r\n\r\nfunction logInfo( ...args ) {\r\n    console.info( ...args );\r\n}\r\n\r\nfunction determineStyle( action ) {\r\n    if ( !action.meta || !action.meta.async ) {\r\n        return REGULAR;\r\n    }\r\n\r\n    if ( action.type.indexOf( \"_COMPLETED\" ) > -1 ) {\r\n        return SUCCESS;\r\n    }\r\n\r\n    if ( action.type.indexOf( \"_FAILED\" ) > -1 ) {\r\n        return FAILURE;\r\n    }\r\n\r\n    return STARTED;\r\n}\r\n","import { createStore, applyMiddleware, combineReducers, compose } from 'redux';\r\nimport { persistStore, persistReducer } from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\nimport * as reducers from './ducks';\r\nimport { apiService } from './middlewares';\r\n\r\nconst rootReducer = combineReducers(reducers);\r\n\r\nconst persistConfig = {\r\n  key: 'shop',\r\n  storage: storage,\r\n  // whitelist: ['session'], // which reducer want to store\r\n};\r\n\r\nconst pReducer = persistReducer(persistConfig, rootReducer);\r\n\r\nfunction configureStore(initialState) {\r\n  return createStore(\r\n    pReducer,\r\n    initialState,\r\n    compose(\r\n      applyMiddleware(apiService),\r\n      window.__REDUX_DEVTOOLS_EXTENSION__\r\n        ? window.__REDUX_DEVTOOLS_EXTENSION__()\r\n        : (f) => f\r\n    )\r\n  );\r\n}\r\n\r\nconst store = configureStore({});\r\n\r\nconst persistor = persistStore(store);\r\n\r\nexport { persistor, store };\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider as ReduxProvider } from 'react-redux';\r\nimport App from './App';\r\n\r\n// import redux store\r\nimport { store } from './state/store';\r\n\r\n// import the main files of styles\r\nimport './styles/_main.scss';\r\n\r\n\r\n// importing react hot loader for hot loading\r\nimport { AppContainer } from 'react-hot-loader';\r\n\r\n\r\n// Wrap the rendering in a function:\r\nconst render = () => {\r\n\tReactDOM.render(\r\n\t\t<ReduxProvider store={store}>\r\n\t\t\t<AppContainer>\r\n\t\t\t\t<App />\r\n\t\t\t</AppContainer>\r\n\t\t</ReduxProvider>,\r\n\t\tdocument.getElementById('root')\r\n\t);\r\n};\r\n\r\n\r\n// Render once\r\nrender();\r\n\r\n\r\n\r\n// Webpack Hot Module Replacement API\r\nif (module['hot']) {\r\n\tmodule['hot'].accept('./App', () => {\r\n\t\trender();\r\n\t});\r\n}\r\n\r\n\r\n"],"sourceRoot":""}