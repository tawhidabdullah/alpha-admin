{"version":3,"sources":["components/Field/Input.tsx","lib/utils/manupulateURL.js","lib/connector.js","lib/converter.js","hooks/useFetch.ts","hooks/useHandleFetch.ts","pages/auth/login/Login.tsx","pages/auth/login/index.ts","layout/sider/Sider.tsx","layout/sider/index.ts","components/Empty/index.ts","components/Empty/Empty.tsx","layout/header/Header.tsx","layout/header/index.ts","pages/overview/ApiVisits.tsx","pages/overview/PlatformVisits.tsx","pages/overview/Overview.tsx","components/Placeholders/DataTableSkeleton.tsx","pages/category/CategoryList.tsx","components/Field/TextArea.tsx","components/MediaLibrary/MediaLibrary.tsx","components/MediaLibrary/index.ts","pages/category/AddNewCategory.tsx","pages/category/QuickEdit.tsx","pages/category/CategoryEdit.tsx","pages/category/NewCategoryDetail.tsx","pages/productBundle/ProductBundleQuickEdit.tsx","components/Field/InputSmall.tsx","components/Field/DatePicker.tsx","components/Notification/Notification.tsx","pages/product/Tags.tsx","pages/product/Brands.tsx","pages/product/Categories.tsx","pages/productBundle/SelectProducts.tsx","pages/order/AddNewOrderProductItem.tsx","pages/productBundle/SelectedProductItems.tsx","pages/productBundle/AddNewProductBundle.tsx","pages/productBundle/ProductBundleList.tsx","pages/coupon/CouponProducts.tsx","pages/productBundle/ProductBundleDetail.tsx","pages/brand/AddNewBrand.tsx","pages/brand/QuickEdit.tsx","pages/brand/BrandList.tsx","pages/brand/BrandEdit.tsx","pages/brand/NewBrandDetail.tsx","pages/product/Attributes.tsx","pages/product/Pricing.tsx","pages/product/AddNewProduct.tsx","pages/product/QuickEdit.tsx","pages/product/ProductList.tsx","pages/product/ProductEdit.tsx","pages/product/NewProductDetail.tsx","pages/tag/QuickEdit.tsx","pages/tag/AddNewTag.tsx","pages/tag/TagList.tsx","pages/tag/TagEdit.tsx","pages/tag/NewTagDetail.tsx","pages/coupon/CouponEdit.tsx","pages/coupon/CouponDetail.tsx","pages/coupon/CouponQuickEdit.tsx","pages/coupon/OrderedProductsSelectProducts.tsx","pages/coupon/OrderedProductsSelectedProductItems.tsx","pages/coupon/AddNewCoupon.tsx","pages/coupon/CouponList.tsx","pages/customer/AddNewCustomer.tsx","pages/customer/QuickEdit.tsx","pages/customer/CustomerList.tsx","pages/customer/CustomerEdit.tsx","pages/customer/CustomerDetail.tsx","pages/pages/PagesList.tsx","pages/pages/AddNewPage.tsx","pages/attribute/QuickEdit.tsx","pages/attribute/AddAttributeValues.tsx","pages/attribute/AttributeList.tsx","pages/order/OrderList.tsx","pages/order/AddNewOrderSummary.tsx","pages/order/CustomersId.tsx","pages/order/AddProducts.tsx","pages/order/AddNewOrder.tsx","pages/order/OrderInvoice.jsx","pages/order/productItemForOrderDetail.tsx","pages/order/OrderEdit.tsx","pages/order/OrderDetail.tsx","pages/settings/ComponentItem.tsx","pages/settings/AddNewComponent.tsx","pages/settings/ComponentListComponentItem.tsx","pages/settings/AddNewComponentItem.tsx","pages/settings/Component.tsx","pages/settings/AddNewTheme.tsx","pages/settings/ManageThemes.tsx","pages/settings/Image.tsx","pages/settings/Invoice.tsx","pages/settings/AdminSiteInfo.tsx","pages/settings/SiteInfoInvoice.tsx","pages/settings/SiteInfo.tsx","pages/delivery/DeliveryCharge.tsx","pages/delivery/AddNewRegion.tsx","pages/delivery/QuickEdit.tsx","pages/delivery/Delivery.tsx","pages/sms/SendCustomSMS.tsx","pages/sms/SMSConfiguaration.tsx","pages/sms/Sms.tsx","pages/sms/index.ts","layout/content/Content.tsx","layout/content/index.ts","App.tsx","state/ducks/busy/utils.js","state/ducks/busy/reducers.js","state/ducks/busy/index.js","state/ducks/cart/utils.js","state/utils/createReducer.js","state/utils/fetch.js","state/ducks/cart/selectors.js","state/ducks/cart/index.js","state/ducks/cart/reducers.js","state/ducks/cart/types.js","state/ducks/wishList/utils.js","state/ducks/wishList/index.js","state/ducks/wishList/reducers.js","state/ducks/wishList/types.js","state/ducks/checkout/selectors.js","state/ducks/checkout/index.js","state/ducks/checkout/reducers.js","state/ducks/checkout/types.js","state/ducks/checkout/utils.js","state/ducks/search/types.js","state/ducks/search/utils.js","state/ducks/search/index.js","state/ducks/search/reducers.js","state/ducks/product/reducers.js","state/ducks/product/types.js","state/ducks/product/index.js","state/ducks/session/reducers.js","state/ducks/session/types.js","state/ducks/session/index.js","state/ducks/category/reducers.js","state/ducks/category/types.js","state/ducks/category/index.js","state/ducks/cache/reducers.js","state/ducks/cache/types.js","state/ducks/cache/index.js","state/ducks/brand/reducers.js","state/ducks/brand/types.js","state/ducks/brand/index.js","state/ducks/tag/reducers.js","state/ducks/tag/types.js","state/ducks/tag/index.js","state/middlewares/apiService.js","state/middlewares/logger.js","state/store.js","index.tsx"],"names":["Demo","Input","TextArea","required","addonBefore","label","type","value","defaultValue","onChange","disabled","isError","errorString","name","className","Item","validateStatus","help","style","borderRadius","isObjectEmpty","Object","keys","length","manupulateURL","url","urlOptions","params","placeHolders","split","map","currentValue","includes","actualPlaceholderValue","replace","param","slice","indexOf","join","converter","resData","data","formatedData","category","id","_id","key","description","productCount","parent","cover","config","thumbnail","subCount","subCategory","children","subCat","noti","heading","text","link","added","read","title","page","next","convertedData","product","regularPrice","price","offerPrice","unit","pricing","date","time","venue","brand","tags","parseInt","cartItems","items","cartItem","medium","quantity","cartKey","updated","status","isNext","startDate","endDate","actualPrice","products","code","minimumOrder","maximumOrder","orderedProducts","freeProducts","orderedProductsCount","freeProductsCount","amountType","amount","freeDelivery","maxUsePerUser","tag","success","original","image","img","labels","alt","caption","customer","firstName","lastName","country","city","email","phone","address1","address2","created","theme","components","component","item","region","pickUpLocation","countryCode","countryName","charge","availableStock","minimumStock","cat","primaryCategory","inserted","icon","order","billingAddress","address","total","totalPrice","date_created","paymentMethod","paymentStatus","payment","customerId","orders","generalFormat","dataMap","line_items","paymentItems","number","src","target","navLinkItems","sliderItems","images","sliderRightItems","servicesItems","accountItems","aboutUsItems","Connector","this","options","format","api","apiMap","server","method","credentials","headers","Headers","body","JSON","stringify","fetch","baseURL","res","formattedData","error","connector","dataFetchReducer","state","action","isLoading","done","payload","Error","useFetch","dependencies","initialData","initialState","useReducer","dispatch","useEffect","didCancel","a","request","fetchData","useHandleFetch","validationSchema","Yup","shape","username","min","password","initialValues","Login","loginState","handleLoginFetch","handleSubmit","values","actions","setSubmitting","getisSubmitButtonDisabled","isValid","onSubmit","validateOnBlur","enableReinitialize","handleChange","errors","isSubmitting","touched","setFieldTouched","handleBlur","handleReset","maxWidth","margin","e","onClick","loading","Sider","Layout","Header","Content","Footer","SubMenu","Menu","withRouter","props","useState","collapsed","setcollapsed","width","boxShadow","border","collapsible","onCollapse","selectable","mode","PieChartOutlined","to","GoldOutlined","RadarChartOutlined","BankOutlined","TagsOutlined","TagOutlined","BranchesOutlined","FireOutlined","CarOutlined","ShoppingCartOutlined","TeamOutlined","MailOutlined","MessageOutlined","FileOutlined","FileSearchOutlined","FileAddOutlined","SlidersOutlined","SettingOutlined","UserOutlined","BgColorsOutlined","Empty","height","display","justifyContent","alignItems","PRESENTED_IMAGE_SIMPLE","history","useHistory","getAllNotificationState","handleGetAllNOticationFetch","handleMenuClick","getAllNotification","background","zIndex","transition","alignContent","push","color","marginTop","marginLeft","cursor","marginRight","placement","overlay","padding","maxHeight","overflowY","OrderedListOutlined","console","log","href","overflowCount","showZero","TwitterSquareFilled","count","fontWeight","BellOutlined","LogoutOutlined","Option","Select","RAINFALL","month","rainfall","MONTHS","getMonthNameByOrder","TooltipContainerStyles","fontSize","localOptions","ApiVisits","setSelectedApiValue","bordered","showSearch","placeholder","optionFilterProp","filterOption","input","option","toLowerCase","x1","y1","x2","y2","offset","stopColor","vertical","strokeDasharray","stroke","dataKey","tickFormatter","orientation","axisLine","tickLine","contentStyle","formatter","fill","CalendarOutlined","AGE_GROUP","device","percentage","COLORS","PlatformVisits","RADIAN","Math","PI","outerRadius","innerRadius","nameKey","cx","cy","midAngle","percent","radius","index","x","cos","y","sin","dominantBaseline","toFixed","labelLine","entry","Overview","handleGetTotalUserCountFetch","getTotalUserCount","DataTable","speed","viewBox","backgroundColor","foregroundColor","rx","ry","r","metadata","github","filename","Column","Table","Search","ColumnGroup","MyTable","setcategoryList","visible","setvisible","activeCategoryForEdit","setactiveCategoryForEdit","handleDeleteCategoryFetch","handleDeleteCategory","deleteCategoryRes","message","notification","CheckCircleOutlined","newCategoryList","filter","size","dataSource","dataIndex","render","record","objectFit","align","EditOutlined","onConfirm","okText","cancelText","DeleteOutlined","categoryList","categoryState","handleCategoryListFetch","isSubCategory","productCountValue","categories","setCategories","addNewCategoryVisible","setAddNewCategoryVisible","enterButton","onSearch","handleSearch","PlusOutlined","DataTableSkeleton","rows","Dragger","Upload","TabPane","Tabs","openSuccessNotification","MediaLibrary","setmyImages","isModalOpenForImages","setmyThumbnailImage","isModalOpenForThumbnail","myImages","myThumbnailImage","fileList","setfileList","uploading","setuploading","selectedimages","setselectedImages","activeImageItem","setactiveImageItem","updateMediaLibrary","handleUpdateMediaLibraryFetch","imageListFromLibraryState","handleImageListFromLibraryFetch","handleDeleteImageFromLibraryFetch","localImageList","setLocalImageList","isDoneOk","setisDoneOk","handleDeleteImageFromImageLibrary","deleteImageLibraryItemRes","newImageList","getImageList","imageListRes","handleUpload","formData","FormData","forEach","file","append","reqwest","processData","withCredentials","uploadProps","multiple","onRemove","filelist","newFileList","splice","beforeUpload","handleAddToSelectedList","find","newselectedImages","handleUpdateSubmit","captoin","updateImageLibraryItemRes","positionInImageList","updatedItem","assign","updateImageList","openErrorNotification","getisUpdateSubmitButtonDisabled","top","onOk","onCancel","bodyStyle","defaultActiveKey","tab","listType","FileImageOutlined","ArrowUpOutlined","marginBottom","lenght","CloseOutlined","CheckOutlined","ImageItemMenu","EllipsisOutlined","textAlign","AddNewCategory","addCategoryState","handleAddCategoryFetch","isparentCategoryChecked","setisparentcategoryChecked","setisModalOpenForThumbnail","setisModalOpenForImages","coverImageId","setCoverImageId","selectedParentId","setselectedParentId","imageUrl","setImageUrl","loadingThumnail","setLoadingThumbnail","imageFile","setImagefile","imagesIds","trim","addCategoryRes","resetForm","onSwitchChange","checked","handleCancel","onChangeSelect","callback","reader","FileReader","addEventListener","result","readAsDataURL","getBase64","uploadButton","LoadingOutlined","okButtonProps","htmlType","defaultChecked","InfoCircleOutlined","showUploadList","newImages","handleImagesDelete","FileImageFilled","QuickEdit","updateCategoryState","handleUpdateCategoryFetch","updateCategoryRes","positionInTag","updateCategoryList","AddNewBrand","categoryEditVisible","setCategoryEditVisible","categoryDetailData","updateBrandState","handleUpdateBrandFetch","brandDetailState","handleAttachImageToItemMultipleFetch","handleAttachImageToItemSingleFetch","handleDetachImageFromItemSingleFetch","handleSetImageAsThumbnailToItemFetch","visibleMedia","setvisibleMedia","myGoddamnImages","setMyGoddamnImages","handleSetImageAsThumnail","handleDetachSingleImage","imageId","collection","itemId","thumbnailRes","updateBrandRes","NewBrandDetail","CoolInput","categoryDetailState","handleCategoryDetailFetch","categoryProductsState","handleCategoryProductsFetch","useParams","categoryId","getCategoryDetail","getCategoryProducts","CategoryEdit","avatar","paragraph","paddingTop","overflow","tableLayout","onHeaderRow","column","ProductBundleQuickEdit","tagList","setTagList","updateTagState","updateTagRes","updateTagList","allowClear","DatePickerComponent","withTime","borderColor","moment","DatePicker","RangePicker","ExclamationCircleOutlined","CheckableTag","Tag","Tags","setTagIds","setSelectedTags","selectedTags","setoptions","tagState","handleTagListFetch","searchValue","setsearchValue","selectedCategoryIds","selectedcategory","tagListRes","tagOptions","setTags","categoryNames","newOptions","nextSelectedTags","t","Brands","setBrandId","brandId","productDetailState","setSelectedBrandId","brandState","brandListRes","brandOptions","setBrands","onFocus","onBlur","val","Categories","setcategoryIds","categoryOptions","setCategoryOptions","categoryListRes","checkable","checkedKeys","onSelect","selectedKeys","info","onCheck","checkedIds","treeData","defaultExpandAll","checkStrictly","setProductIds","productIds","selectedOpions","setselectedOptions","selectItems","o","CartOverLayCartItem","productList","setProductList","productId","variation","handleProductFetch","setProduct","setIsLoading","modifiedPrice","setModifiedPrice","selectedVariationId","setSelectedVariationId","getAndSetProduct","handleChangeQuantity","positionInAttribute","updateAttributeList","convertAttributeValuesToStringValue","attribute","attributeValue","pricingOptions","pricingItem","pricingOption","getPricingOptions","priceItem","regular","offer","getPriceByVariationId","tagId","handleAttributeChange","AddNewOrderSummary","flexDirection","AddNewOrderProductItem","bundlePrice","AddNewProduct","bundleList","setBundleList","addProductState","handleAddProductFetch","categoryids","tagIds","setPricing","setDateFeild","setTimeFeild","setDescription","setPrice","model","addProductRes","err","i","newProductList","isTrue","handleDateChange","dateString","handleTimeChange","editor","ClassicEditor","onInit","event","getData","InputSmall","SelectProducts","SelectedProductItems","handleDeleteTagFetch","handleDeleteTag","deleteTagRes","newtagList","TagList","newTagList","AddNewProductBundle","CouponProducts","handleProductDetailFetch","getProductDetail","row","imgs","columns","localIndex","columnNumber","getImagesInCollumn","brandList","setBrandList","addBrandRes","updatebrandState","positionInBrand","updateBrandList","handleDeleteBrandFetch","handleDeleteBrand","deleteBrandRes","newBrandList","handlebrandListFetch","brands","brandDetailData","brandEditVisible","setBrandEditVisible","handleBrandDetailFetch","brandProductsState","handleBrandProductsFetch","getBrandDetail","getBrandProducts","BrandEdit","Complete","setAttributeList","attributeList","suggestedOptions","setsuggesteOptions","attributeLisState","attributeItem","setAttributeITem","manupulatedOptions","inputValue","suggestedOption","toUpperCase","Pricing","handleAddPricing","setprice","available","minimum","stock","setStock","handlePriceChange","handleStockChange","Attributes","minHeight","preventDefault","purchaseLimit","animated","tabPosition","newPricing","handleDeletePricing","textDecoration","updateProductState","handleUpdateProductFetch","updateProductRes","updateProductList","handleDeleteProductFetch","handleDeleteProduct","deleteProductRes","productState","handleProductListFetch","setProducts","productEditVisible","setProductEditVisible","productDetailData","categoryIds","updatedProductRes","destroyOnClose","ProductEdit","addTagState","handleAddTagFetch","addTagRes","AddNewTag","tagEditVisible","setTagEditVisible","tagDetailData","tagDetailState","handleTagDetailFetch","tagProductsState","handleTagProductsFetch","getTagProducts","TagEdit","CouponEdit","addCouponState","handleAddCouponStateFetch","freeProductIds","setFreeProductIds","freeProductList","setFreeProductList","OrderedProductsSelectProducts","OrderedProductsSelectedProductItems","CouponQuickEdit","Couponlist","AddNewCoupon","max","zipCode","customerList","setCustomerList","addCustomerState","handleAddCustomerFetch","selectedCountryValue","setselectedCountryValue","selectedCityValue","setselectedCityValue","countryOptions","setcountryOptions","cityOptions","setcityOptions","countryListState","handleCountryListFetch","cityListState","handleCityListFetch","addCustomerRes","onChangeCity","onChangeCountry","CountryListRes","setCountries","cityListRes","setCities","notFoundContent","updateCustomerState","handleUpdateCustomerFetch","updateCustomerRes","handleDeleteCustomerFetch","handleDeleteCustomer","deleteCustomerRes","newCustomerList","customerState","handleCustomerListFetch","customers","setCustomers","AddNewCustomer","CustomerEdit","handleDeletePageFetch","handleDeletePage","deletePageRes","PageList","pageList","setPageList","pageState","handlePagsListFetch","pages","setPages","Steps","Step","AddNewPage","addPageState","handleAddPageFetch","content","setContent","handleAddPageSubmit","addOrderRes","EditableTagGroup","inputVisible","editInputIndex","editInputValue","handleClose","removedTag","setState","showInput","focus","handleInputChange","handleInputConfirm","handleEditInputChange","handleEditInputConfirm","newTags","saveInputRef","saveEditInputRef","editInput","ref","onPressEnter","isLongTag","tagElem","closable","onClose","onDoubleClick","React","Component","AttributeList","AddAttributeValues","setOrderList","handleUpdateOrderStatusFetch","handleUpdateOrderStatus","newStatus","newOrderstatus","updateOrderStatusRes","updateOrderList","withTitle","StatusItemMenu","DownOutlined","orderList","orderState","handleRegionListFetch","regions","setOrders","newOrderList","ShopOutlined","setCustomerId","setSelectedCustomerData","customerData","additionalInfo","steps","AddNewOrder","addOrderState","handleOrderFetch","current","setCurrent","selectedCustomerData","handleCheckoutSubmit","CustomersId","AddProducts","CaretRightOutlined","CaretLeftOutlined","setShowInvoice","showInvoice","orderDetailState","handleOrderDetailFetch","getOrderDetail","window","print","cellPadding","cellSpacing","bgcolor","fontFamily","lineHeight","verticalAlign","letterSpacing","colSpan","borderBottom","whiteSpace","updateOrderState","handleUpdateOrderFetch","addRegionRes","OrderInvoice","OrderEdit","setItemsList","itemsList","componentItem","localComponentItem","setlocalComponentItem","handleComponentItemsChange","updateComponentList","groupName","componentList","setComponentList","addComponentState","handleAddComponentFetch","addComponentRes","handleAddComponentItem","itemComponent","ComponentItem","componentUpdate","Set","SaveOutlined","updateComponentByAddingItem","componentId","Panel","Collapse","genExtra","updateComponentByDeleting","stopPropagation","genExtraForGroup","setitemVisible","handleDeleteComponent","setComponentId","groupVisible","setgroupVisible","itemVisible","componentState","handleComponentListFetch","handleDeleteComponentFetch","handleUpdateComponentFetch","setComponents","deleteComponentRes","newComponentList","positionInItemsOfComponent","componentIndex","positionInComponents","itemIndex","manupulatedLocalComponentForTheReq","updatedItems","manupulatedUpdatedItems","manupulatedUpdatedItem","updateComponentRes","accordion","expandIconPosition","expandIcon","isActive","rotate","header","extra","ComponentListComponentItem","AddNewComponent","AddNewComponentItem","footer","themeList","setThemeList","addThemeState","handleAddthemeFetch","setselectedThemeTypeValue","setname","thumbnailFile","setThumbnailFile","addThemeRes","path","InboxOutlined","themeState","handleThemeListFetch","handleActiveThemeFetch","handleDeleteThemeFetch","themes","setThemes","handleActiveTheme","activeThemeRes","handleDeleteTheme","deleteThemeRes","newThemeList","danger","AddNewTheme","Image","Invoice","adminEmail","adminName","UpdateSiteinfo","UpdateSiteSettingsState","handleUpdateSiteSettingsFetch","siteSettingsState","handlSiteSettingsFetch","getSiteSettings","addSiteInfoRes","invoiceTitle","additionalText","updateInfovSettingsState","handleUpdateInvoiceSettingsFetch","InvoiceSettingsState","handlSiteInvoiceSettingsFetch","updateInvoiceRes","updateSiteLogoAndIcon","handleUpdateSiteLogoAndIconFetch","logo","updateSiteIconAndLogoRes","AdminSiteInfo","SiteInfoInvoice","DeliveryCharge","deliveryChargeItem","setdeliveryChargeList","deliveryChargeList","deliveryCharge","setdeliveryCharge","handleDeliveryChargeChange","AddNewRegion","regionList","setRegionList","addRegionState","handleRegionFetch","handleAddDeliveryCharge","updateRegionState","handleUpdateRegionFetch","updateRegionList","handleDeleteRegioFetch","handleDeleteRegion","deleteRegionRes","newRegionList","regionState","setRegions","SendCustomSMS","setText","recipient","setrecipient","tokenSeparators","SendOutlined","InfoCircleFilled","SMSConfiguaration","configureSMSStata","handleconfigureSMSFetch","Sms","hasSider","exact","NewCategoryDetail","BrandList","NewProductDetail","ProductBundleList","ProductBundleDetail","CouponList","CouponDetail","NewTagDetail","OrderList","OrderDetail","CustomerDetail","PagesList","Delivery","ManageThemes","SiteInfo","App","actionShouldBlock","meta","async","blocking","actionFinished","reducer","utils","productPositionInCart","cart","newCartItem","isSelectedForCheckout","reducerMap","Accept","isomorphicFetch","then","Promise","resolve","reject","response","parseStatus","json","createReducer","tempArrayWithOutOldProduct","productPositionInWishList","wishList","wishlist","ADD","queryPositionInQueryList","queryList","query","types","currentItem","oldQuery","tempArrayWithOutOldQueries","detailsReducer","listReducer","combineReducers","details","list","authReducer","redirectAfterLoginReducer","redirectUrl","isAuthenticated","redirectAfterLogin","cartReducer","baseUrl","document","apiService","handleResponse","handleErrors","rootReducer","reducers","persistConfig","storage","whitelist","pReducer","persistReducer","store","createStore","compose","applyMiddleware","__REDUX_DEVTOOLS_EXTENSION__","f","persistStore","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.4b9934a4.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Form, Input } from 'antd';\r\n\r\nconst { TextArea } = Input;\r\n\r\n\r\n\r\ninterface Props {\r\n    label?: string;\r\n    type?: string;\r\n    defaultValue?: string;\r\n    value?: string;\r\n    onChange?: any;\r\n    disabled?: boolean;\r\n    isError?: boolean;\r\n    errorString?: string;\r\n    name?: string;\r\n    addonBefore?: string;\r\n    required?: boolean\r\n}\r\n\r\nconst Demo = ({ required, addonBefore, label, type, defaultValue, value, onChange, disabled, isError, errorString, name }: Props) => {\r\n    return (\r\n        <>\r\n            {label && (\r\n                <h3 className='inputFieldLabel'>\r\n                    {label}\r\n                </h3>\r\n            )}\r\n\r\n            <Form.Item\r\n                // hasFeedback={true}\r\n                validateStatus={isError ? \"error\" : \"\"}\r\n                // hasFeedback validateStatus=\"success\"\r\n                help={errorString}\r\n\r\n            // rules={[{ required: true }]}\r\n            >\r\n\r\n                <Input\r\n                    required={required}\r\n                    type={type}\r\n                    addonBefore={addonBefore}\r\n                    style={{\r\n                        borderRadius: '0'\r\n                    }}\r\n                    name={name}\r\n                    disabled={disabled}\r\n                    value={value}\r\n                    onChange={onChange}\r\n                    className='inputclassName' />\r\n\r\n            </Form.Item>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Demo; ","const isObjectEmpty = value => {\r\n  return !value || !Object.keys(value).length > 0;\r\n};\r\n\r\nconst manupulateURL = (url, urlOptions = {}) => {\r\n  if (isObjectEmpty(urlOptions)) return url;\r\n\r\n  const params = urlOptions.params || {};\r\n  const placeHolders = urlOptions.placeHolders || {};\r\n\r\n\r\n\r\n  return url\r\n    .split('/')\r\n    .map(currentValue => {\r\n      if (currentValue.includes(':') && !isObjectEmpty(placeHolders)) {\r\n        let actualPlaceholderValue = placeHolders[currentValue.replace(':', '')];\r\n        currentValue = actualPlaceholderValue;\r\n      }\r\n\r\n      if (currentValue.includes('?')) {\r\n        currentValue = currentValue\r\n          .split('&')\r\n          .map(currentValue => {\r\n            const param = currentValue.slice(currentValue.indexOf('=') + 1);\r\n            return currentValue.replace(param, params[param] || '');\r\n          })\r\n          .join('&');\r\n      }\r\n      return currentValue;\r\n    })\r\n    .join('/');\r\n};\r\n\r\nexport default manupulateURL;\r\n","import config from '../config.json';\r\nimport apiMap from '../apiMap.json';\r\nimport Converter from './converter.js';\r\n\r\n// import utils\r\nimport { manupulateURL } from './utils';\r\n\r\nlet converter = new Converter();\r\n\r\nclass Connector {\r\n  //TODO\r\n  constructor() {\r\n    this.options = {};\r\n  }\r\n\r\n  /**\r\n   * @method request sends request to server\r\n   * this function determines api url and method from config.json\r\n   * and sends request and converts recieved data to general format\r\n   * @param {String} item\r\n   * @param {String} format\r\n   * @param {Object} data optional\r\n   * @returns {Object}  converted data\r\n   */\r\n\r\n  async request(item, format = 'json', options = {}) {\r\n    let api = apiMap[config.server][item]; //api url & method\r\n\r\n    // configuring options for fetch request\r\n\r\n\r\n\r\n    this.options = {\r\n      ...this.options,\r\n      method: api.method,\r\n      credentials: 'include',\r\n      headers: new Headers({\r\n        ...(format === 'json' && {\r\n          'Content-Type': 'application/json',\r\n        }),\r\n        // \"Content-Type\": \"application/x-www-form-urlencoded\",\r\n        ...(options.headers && {\r\n          ...options.headers,\r\n        }),\r\n      }),\r\n\r\n      ...(format === 'json' ? {\r\n        body: api.method !== 'get' ? JSON.stringify(options.body) : null,\r\n      } : {\r\n          body: api.method !== 'get' ? options.body : null,\r\n\r\n        }),\r\n    };\r\n\r\n    //*replace variable parts in url with actual data if params exists |or| just return the url\r\n\r\n    const url = manupulateURL(api.url, options.urlOptions);\r\n\r\n    // change the formate to text if the server is wooCommerce\r\n    if (config['server'] === 'wooCommerce') {\r\n      // format = 'text';\r\n    }\r\n\r\n    try {\r\n      let res = await fetch(config.baseURL + url, this.options);\r\n\r\n      if (res.status >= 200 && res.status < 300) {\r\n        let formattedData = await res['json'](); //await res.json(), res.text()\r\n        if (formattedData.status === 'error') {\r\n          throw formattedData.error;\r\n        }\r\n\r\n        let convertedData = await converter[item](formattedData); //convert recieved data to app general format\r\n        return convertedData;\r\n      } else {\r\n        let error = await res[format]();\r\n\r\n        throw error;\r\n      }\r\n    } catch (err) {\r\n\r\n      throw err;\r\n      //TODO: breakdown errors\r\n    }\r\n  }\r\n}\r\n\r\nexport default Connector;\r\n","import config from '../config.json';\r\nimport dataMap from '../dataMap.json';\r\n\r\nclass Converter {\r\n\t/**\r\n   * @public\r\n   * @method categoryList convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync categoryList(resData) {\r\n\t\tconst data = resData.data || [];\r\n\r\n\t\tconst formatedData =\r\n\t\t\tdata.length > 0 &&\r\n\t\t\tdata.map((category) => {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tid: category._id || '',\r\n\t\t\t\t\tkey: category._id || '',\r\n\t\t\t\t\tname: category.name && category.name,\r\n\t\t\t\t\tdescription: category.description && category.description,\r\n\t\t\t\t\tproductCount: category.productCount || 0,\r\n\t\t\t\t\tparent: category.parent || '',\r\n\t\t\t\t\tcover: category.cover ? `${config['baseURL']}${category.cover.thumbnail}` : null,\r\n\t\t\t\t\tsubCount:\r\n\t\t\t\t\t\tcategory.subCategory.length === 1\r\n\t\t\t\t\t\t\t? category.subCategory[0] && category.subCategory[0].name ? category.subCategory.length : 0\r\n\t\t\t\t\t\t\t: category.subCategory.length,\r\n\t\t\t\t\t...(category.subCategory &&\r\n\t\t\t\t\t\tcategory.subCategory.length > 0 &&\r\n\t\t\t\t\t\tcategory.subCategory[0] &&\r\n\t\t\t\t\t\tcategory.subCategory[0]['name'] && {\r\n\t\t\t\t\t\tchildren: category.subCategory.map((subCat) => {\r\n\t\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\t\tid: subCat._id || '',\r\n\t\t\t\t\t\t\t\tkey: subCat._id,\r\n\t\t\t\t\t\t\t\tname: subCat.name && subCat.name,\r\n\t\t\t\t\t\t\t\tdescription: subCat.description && subCat.description,\r\n\t\t\t\t\t\t\t\tcover: subCat.cover ? `${config['baseURL']}${subCat.cover.thumbnail}` : ''\r\n\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t})\r\n\t\t\t\t};\r\n\t\t\t});\r\n\r\n\t\treturn formatedData;\r\n\t}\r\n\r\n\t/**\r\n* @public\r\n* @method getAllNotification convert api data from API to general format based on config server\r\n* @param {Object} data response objectc from alpha\r\n* @returns {Object}  converted data\r\n*/\r\n\tasync getAllNotification(resData) {\r\n\t\tconst data = resData.data || [];\r\n\r\n\t\tconst formatedData =\r\n\t\t\tdata.length > 0 &&\r\n\t\t\tdata.map((noti) => {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tid: noti._id || '',\r\n\t\t\t\t\tkey: noti._id || '',\r\n\t\t\t\t\theading: noti.heading && noti.heading,\r\n\t\t\t\t\ttext: noti.text && noti.text,\r\n\t\t\t\t\ttype: noti.type,\r\n\t\t\t\t\tlink: noti.link || '',\r\n\t\t\t\t\tadded: noti.added || '',\r\n\t\t\t\t\tread: noti.read\r\n\t\t\t\t};\r\n\t\t\t});\r\n\r\n\t\treturn formatedData;\r\n\t}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\t/**\r\n* @public\r\n* @method categorySelectist convert api data from API to general format based on config server\r\n* @param {Object} data response objectc from alpha\r\n* @returns {Object}  converted data\r\n*/\r\n\tasync categorySelectist(resData) {\r\n\t\tconst data = resData.data || [];\r\n\r\n\t\tconst formatedData =\r\n\t\t\tdata.length > 0 &&\r\n\t\t\tdata.map((category) => {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tid: category._id || '',\r\n\t\t\t\t\tkey: category._id || '',\r\n\t\t\t\t\ttitle: category.name && category.name,\r\n\t\t\t\t\t...(category.subCategory &&\r\n\t\t\t\t\t\tcategory.subCategory.length > 0 &&\r\n\t\t\t\t\t\tcategory.subCategory[0] &&\r\n\t\t\t\t\t\tcategory.subCategory[0]['name'] && {\r\n\t\t\t\t\t\tchildren: category.subCategory.map((subCat) => {\r\n\t\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\t\tid: subCat._id || '',\r\n\t\t\t\t\t\t\t\tkey: subCat._id,\r\n\t\t\t\t\t\t\t\ttitle: subCat.name && subCat.name,\r\n\t\t\t\t\t\t\t\tcover: subCat.cover ? `${config['baseURL']}${subCat.cover.thumbnail ? subCat.cover.thumbnail : \"\"}` : ''\r\n\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t})\r\n\t\t\t\t};\r\n\t\t\t});\r\n\r\n\t\treturn formatedData;\r\n\t}\r\n\r\n\r\n\r\n\r\n\t/**\r\n   * @public\r\n   * @method categoryProducts convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync categoryProducts(resData) {\r\n\t\tconst data = resData.data || [];\r\n\t\tconst isNext = resData.page.next;\r\n\r\n\t\tconst convertedData =\r\n\t\t\tdata.length > 0 &&\r\n\t\t\tdata.map((product) => {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tid: product._id || '',\r\n\t\t\t\t\tname: product.name && product.name,\r\n\t\t\t\t\tdescription: product.description && product.description,\r\n\t\t\t\t\tcover: `${config['baseURL']}${(product.cover && product.cover['thumbnail']) || ''}`,\r\n\t\t\t\t\tregularPrice: product.price && product.price['regular'],\r\n\t\t\t\t\tofferPrice: product.price && product.price['offer'],\r\n\t\t\t\t\turl: product.url,\r\n\t\t\t\t\tunit: product.unit,\r\n\t\t\t\t\tcategory: product.category,\r\n\t\t\t\t\tpricing: product.pricing,\r\n\t\t\t\t\tdate: product.date,\r\n\t\t\t\t\ttime: product.time,\r\n\t\t\t\t\tvenue: product.venue,\r\n\t\t\t\t\tbrand: product.brand,\r\n\t\t\t\t\ttags: product.tags,\r\n\t\t\t\t\tprice:\r\n\t\t\t\t\t\tparseInt(product.price['offer']) > parseInt(product.price['regular'])\r\n\t\t\t\t\t\t\t? product.price['offer']\r\n\t\t\t\t\t\t\t: product.price['regular'],\r\n\t\t\t\t};\r\n\t\t\t});\r\n\r\n\t\t// return {\r\n\t\t// \tdata: convertedData,\r\n\t\t// \tisNext: isNext\r\n\t\t// };\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method getCart convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync getCart(resData) {\r\n\t\tconst cartItems = resData.items || [];\r\n\t\tconst convertedData =\r\n\t\t\tcartItems.length > 0 &&\r\n\t\t\tcartItems.map((cartItem) => {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tid: cartItem._id || '',\r\n\t\t\t\t\tname: cartItem.name && cartItem.name,\r\n\t\t\t\t\tcover: `${config['baseURL']}${cartItem.cover.medium}`,\r\n\t\t\t\t\tregularPrice: cartItem.price && cartItem.price['regular'],\r\n\t\t\t\t\tofferPrice: cartItem.price && cartItem.price['offer'],\r\n\t\t\t\t\tquantity: cartItem.quantity,\r\n\t\t\t\t\turl: cartItem.url,\r\n\t\t\t\t\tcartKey: cartItem.cartKey\r\n\t\t\t\t};\r\n\t\t\t});\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method addtoCart convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync addtoCart(resData) {\r\n\t\tlet data = false;\r\n\r\n\t\tif (resData['inserted']) {\r\n\t\t\tdata = {\r\n\t\t\t\tid: resData['inserted']._id || '',\r\n\t\t\t\tname: resData['inserted'].name && resData['inserted'].name,\r\n\t\t\t\tcover: `${config['baseURL']}${resData['inserted'].cover.medium}`,\r\n\t\t\t\tregularPrice: resData['inserted'].price && resData['inserted'].price['regular'],\r\n\t\t\t\tofferPrice: resData['inserted'].price && resData['inserted'].price['offer'],\r\n\t\t\t\tquantity: resData['inserted'].quantity,\r\n\t\t\t\turl: resData['inserted'].url,\r\n\t\t\t\tcartKey: resData['inserted'].cartKey\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tconst convertedData = data;\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method removeFromCart convert api data from API to general format based on config server\r\n   * @param {Object} resData response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync removeFromCart(resData) {\r\n\t\tlet convertedData = false;\r\n\t\tif (resData) {\r\n\t\t\tconvertedData = true;\r\n\t\t}\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method updateCartItem convert api data from API to general format based on config server\r\n   * @param {Object} resData response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync updateCartItem(resData) {\r\n\t\tlet convertedData = false;\r\n\t\tif (resData['updated']) {\r\n\t\t\tconvertedData = {\r\n\t\t\t\tquantity: resData.updated['quantity']\r\n\t\t\t};\r\n\t\t}\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method clearCart convert api data from API to general format based on config server\r\n   * @param {Object} resData response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync clearCart(data) {\r\n\t\tif (data && data['msg']) {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\t\treturn data;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method getWishlist convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync getWishlist(resData) {\r\n\t\t// const cartItems = resData.items || [];\r\n\t\tconst convertedData = resData;\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method addWishlist convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync addWishlist(resData) {\r\n\t\tif (resData && resData['msg'] === 'wishlist updated') {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method removeFromWishlist convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync removeFromWishlist(resData) {\r\n\t\tif (resData && resData['msg'] === 'wishlist updated') {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method removeAllWishlist convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync removeAllWishlist(resData) {\r\n\t\tif (resData && resData['msg'] === 'wishlist updated') {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method tagProducts convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync tagProducts(resData) {\r\n\t\tconst data = resData.data || [];\r\n\t\tconst isNext = resData.page.next;\r\n\r\n\t\tconst convertedData =\r\n\t\t\tdata.length > 0 &&\r\n\t\t\tdata.map((product) => {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tid: product._id || '',\r\n\t\t\t\t\tname: product.name && product.name,\r\n\t\t\t\t\tdescription: product.description && product.description,\r\n\t\t\t\t\tcover: `${config['baseURL']}${(product.cover && product.cover['thumbnail']) || ''}`,\r\n\t\t\t\t\tregularPrice: product.price && product.price['regular'],\r\n\t\t\t\t\tofferPrice: product.price && product.price['offer'],\r\n\t\t\t\t\turl: product.url,\r\n\t\t\t\t\tunit: product.unit,\r\n\t\t\t\t\tcategory: product.category,\r\n\t\t\t\t\tpricing: product.pricing,\r\n\t\t\t\t\tdate: product.date,\r\n\t\t\t\t\ttime: product.time,\r\n\t\t\t\t\tvenue: product.venue,\r\n\t\t\t\t\tbrand: product.brand,\r\n\t\t\t\t\ttags: product.tags,\r\n\t\t\t\t\tprice:\r\n\t\t\t\t\t\tparseInt(product.price['offer']) > parseInt(product.price['regular'])\r\n\t\t\t\t\t\t\t? product.price['offer']\r\n\t\t\t\t\t\t\t: product.price['regular'],\r\n\t\t\t\t};\r\n\t\t\t});\r\n\r\n\t\t// return {\r\n\t\t// \tdata: convertedData,\r\n\t\t// \tisNext: isNext\r\n\t\t// };\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method brandProducts convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync brandProducts(resData) {\r\n\t\tconst data = resData.data || [];\r\n\t\tconst isNext = resData.page.next;\r\n\r\n\t\tconst convertedData =\r\n\t\t\tdata.length > 0 &&\r\n\t\t\tdata.map((product) => {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tid: product._id || '',\r\n\t\t\t\t\tname: product.name && product.name,\r\n\t\t\t\t\tdescription: product.description && product.description,\r\n\t\t\t\t\tcover: `${config['baseURL']}${(product.cover && product.cover['thumbnail']) || ''}`,\r\n\t\t\t\t\tregularPrice: product.price && product.price['regular'],\r\n\t\t\t\t\tofferPrice: product.price && product.price['offer'],\r\n\t\t\t\t\turl: product.url,\r\n\t\t\t\t\tunit: product.unit,\r\n\t\t\t\t\tcategory: product.category,\r\n\t\t\t\t\tpricing: product.pricing,\r\n\t\t\t\t\tdate: product.date,\r\n\t\t\t\t\ttime: product.time,\r\n\t\t\t\t\tvenue: product.venue,\r\n\t\t\t\t\tbrand: product.brand,\r\n\t\t\t\t\ttags: product.tags,\r\n\t\t\t\t\tprice:\r\n\t\t\t\t\t\tparseInt(product.price['offer']) > parseInt(product.price['regular'])\r\n\t\t\t\t\t\t\t? product.price['offer']\r\n\t\t\t\t\t\t\t: product.price['regular'],\r\n\t\t\t\t};\r\n\t\t\t});\r\n\r\n\t\t// return {\r\n\t\t// \tdata: convertedData,\r\n\t\t// \tisNext: isNext\r\n\t\t// };\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method productSearch convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync productSearch(resData) {\r\n\t\tconst data = resData.data || [];\r\n\t\tconst isNext = resData.page.next;\r\n\r\n\t\tconst convertedData =\r\n\t\t\t(data.length > 0 &&\r\n\t\t\t\tdata.map((product) => {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tid: product._id || '',\r\n\t\t\t\t\t\tname: product.name && product.name,\r\n\t\t\t\t\t\tdescription: product.description && product.description,\r\n\t\t\t\t\t\tcover: `${config['baseURL']}${product.cover.thumbnail}`,\r\n\t\t\t\t\t\tregularPrice: product.price && product.price['regular'],\r\n\t\t\t\t\t\tofferPrice: product.price && product.price['offer'],\r\n\t\t\t\t\t\turl: product.url,\r\n\t\t\t\t\t\tunit: product.unit,\r\n\t\t\t\t\t\tdate: product.date,\r\n\t\t\t\t\t\tvenue: product.venue,\r\n\t\t\t\t\t\tpricing: product.pricing\r\n\t\t\t\t\t};\r\n\t\t\t\t})) ||\r\n\t\t\t[];\r\n\r\n\t\treturn {\r\n\t\t\tdata: convertedData,\r\n\t\t\tisNext\r\n\t\t};\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method productList convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync productList(resData) {\r\n\t\tconst data = resData.data || [];\r\n\t\tconst isNext = resData.page.next;\r\n\r\n\t\tlet convertedData =\r\n\t\t\tdata.length > 0 &&\r\n\t\t\tdata.map((product) => {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tid: product._id || '',\r\n\t\t\t\t\tname: product.name && product.name,\r\n\t\t\t\t\tdescription: product.description && product.description,\r\n\t\t\t\t\tcover: `${config['baseURL']}${(product.cover && product.cover['thumbnail']) || ''}`,\r\n\t\t\t\t\tregularPrice: product.price && product.price['regular'],\r\n\t\t\t\t\tofferPrice: product.price && product.price['offer'],\r\n\t\t\t\t\turl: product.url,\r\n\t\t\t\t\tunit: product.unit,\r\n\t\t\t\t\tcategory: product.category,\r\n\t\t\t\t\tpricing: product.pricing,\r\n\t\t\t\t\tdate: product.date,\r\n\t\t\t\t\ttime: product.time,\r\n\t\t\t\t\tvenue: product.venue,\r\n\t\t\t\t\tbrand: product.brand,\r\n\t\t\t\t\ttags: product.tags,\r\n\t\t\t\t\tprice:\r\n\t\t\t\t\t\tparseInt(product.price['offer']) > parseInt(product.price['regular'])\r\n\t\t\t\t\t\t\t? product.price['offer']\r\n\t\t\t\t\t\t\t: product.price['regular'],\r\n\t\t\t\t};\r\n\t\t\t});\r\n\r\n\t\t// convertedData = {\r\n\t\t// \tdata: convertedData,\r\n\t\t// \tisNext\r\n\t\t// };\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n   * @public\r\n   * @method bundleList convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync bundleList(resData) {\r\n\t\tconst data = resData || [];\r\n\r\n\t\tlet convertedData =\r\n\t\t\tdata.length > 0 &&\r\n\t\t\tdata.map((product) => {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tid: product._id || '',\r\n\t\t\t\t\tname: product.name && product.name,\r\n\t\t\t\t\tdescription: product.description && product.description,\r\n\t\t\t\t\tcover: `${config['baseURL']}${(product.cover && product.cover['thumbnail']) || ''}`,\r\n\t\t\t\t\tregularPrice: product.price && product.price['regular'],\r\n\t\t\t\t\tofferPrice: product.price && product.price['offer'],\r\n\t\t\t\t\turl: product.url,\r\n\t\t\t\t\tstartDate: product.startDate,\r\n\t\t\t\t\tendDate: product.endDate,\r\n\t\t\t\t\tactualPrice: product.actualPrice,\r\n\t\t\t\t\tunit: product.unit,\r\n\t\t\t\t\tcategory: product.category,\r\n\t\t\t\t\tpricing: product.pricing,\r\n\t\t\t\t\tdate: product.date,\r\n\t\t\t\t\ttime: product.time,\r\n\t\t\t\t\tvenue: product.venue,\r\n\t\t\t\t\tbrand: product.brand,\r\n\t\t\t\t\ttags: product.tags,\r\n\t\t\t\t\tproduct: product['product'],\r\n\t\t\t\t\tproductCount: product['product'].length,\r\n\t\t\t\t\tprice:\r\n\t\t\t\t\t\tparseInt(product.price['offer']) > parseInt(product.price['regular'])\r\n\t\t\t\t\t\t\t? product.price['offer']\r\n\t\t\t\t\t\t\t: product.price['regular'],\r\n\t\t\t\t};\r\n\t\t\t});\r\n\r\n\t\t// convertedData = {\r\n\t\t// \tdata: convertedData,\r\n\t\t// \tisNext\r\n\t\t// };\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n* @public\r\n* @method bundleDetail convert api data from API to general format based on config server\r\n* @param {Object} data response objectc from wc\r\n* @returns {Object}  converted data\r\n*/\r\n\tasync bundleDetail(resData) {\r\n\t\tconst data = resData || {};\r\n\r\n\t\tif (Object.keys(data).length > 0) {\r\n\t\t\treturn {\r\n\t\t\t\tid: data._id || '',\r\n\t\t\t\tname: data.name && data.name,\r\n\t\t\t\tdescription: data.description && data.description,\r\n\t\t\t\tcover: `${config['baseURL']}${(data.cover && data.cover['thumbnail']) || ''}`,\r\n\t\t\t\tregularPrice: data.price && data.price['regular'],\r\n\t\t\t\tofferPrice: data.price && data.price['offer'],\r\n\t\t\t\turl: data.url,\r\n\t\t\t\tstartDate: data.startDate,\r\n\t\t\t\tendDate: data.endDate,\r\n\t\t\t\tactualPrice: data.actualPrice,\r\n\t\t\t\tunit: data.unit,\r\n\t\t\t\tcategory: data.category,\r\n\t\t\t\tpricing: data.pricing,\r\n\t\t\t\tdate: data.date,\r\n\t\t\t\ttime: data.time,\r\n\t\t\t\tvenue: data.venue,\r\n\t\t\t\tbrand: data.brand,\r\n\t\t\t\ttags: data.tags,\r\n\t\t\t\tproducts: data.product,\r\n\t\t\t\tproductCount: data['product'].length,\r\n\t\t\t\tprice:\r\n\t\t\t\t\tparseInt(data.price['offer']) > parseInt(data.price['regular'])\r\n\t\t\t\t\t\t? data.price['offer']\r\n\t\t\t\t\t\t: data.price['regular'],\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\telse return data;\r\n\r\n\t\t// convertedData = {\r\n\t\t// \tdata: convertedData,\r\n\t\t// \tisNext\r\n\t\t// };\r\n\r\n\t}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\t/**\r\n   * @public\r\n   * @method couponList convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync couponList(resData) {\r\n\t\tconst data = resData || [];\r\n\r\n\t\tlet convertedData =\r\n\t\t\tdata.length > 0 &&\r\n\t\t\tdata.map((product) => {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tid: product._id || '',\r\n\t\t\t\t\tname: product.name && product.name,\r\n\t\t\t\t\tcode: product.code,\r\n\t\t\t\t\tminimumOrder: product.minimumOrder,\r\n\t\t\t\t\tmaximumOrder: product.maximumOrder,\r\n\t\t\t\t\tofferPrice: product.price && product.price['offer'],\r\n\t\t\t\t\torderedProducts: product.orderedProducts,\r\n\t\t\t\t\tfreeProducts: product.freeProducts,\r\n\t\t\t\t\torderedProductsCount: product.orderedProducts && product.orderedProducts.length,\r\n\t\t\t\t\tfreeProductsCount: product.freeProducts && product.orderedProducts.length,\r\n\t\t\t\t\tamountType: product.amountType,\r\n\t\t\t\t\tamount: product.amount,\r\n\t\t\t\t\tfreeDelivery: product.freeDelivery,\r\n\t\t\t\t\tstartDate: product.startDate,\r\n\t\t\t\t\tendDate: product.endDate,\r\n\t\t\t\t\tmaxUsePerUser: product.maxUsePerUser,\r\n\t\t\t\t\tactualPrice: product.actualPrice,\r\n\t\t\t\t\tunit: product.unit,\r\n\t\t\t\t\tcategory: product.category,\r\n\t\t\t\t\tpricing: product.pricing,\r\n\t\t\t\t\tdate: product.date,\r\n\t\t\t\t\ttime: product.time,\r\n\t\t\t\t\tvenue: product.venue,\r\n\t\t\t\t\tbrand: product.brand,\r\n\t\t\t\t\ttags: product.tags,\r\n\r\n\t\t\t\t};\r\n\t\t\t});\r\n\r\n\t\t// convertedData = {\r\n\t\t// \tdata: convertedData,\r\n\t\t// \tisNext\r\n\t\t// };\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\t/**\r\n   * @public\r\n   * @method tagList convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync tagList(resData) {\r\n\t\tconst data = resData.data || [];\r\n\r\n\t\tconst convertedData =\r\n\t\t\tdata.length > 0 &&\r\n\t\t\tdata.map((tag) => {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tid: tag._id || '',\r\n\t\t\t\t\tkey: tag._id || '',\r\n\t\t\t\t\tname: tag.name && tag.name,\r\n\t\t\t\t\tdescription: tag.description && tag.description\r\n\t\t\t\t};\r\n\t\t\t});\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method brandList convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync brandList(resData) {\r\n\t\tconst data = resData.data || [];\r\n\r\n\t\tconst convertedData =\r\n\t\t\tdata.length > 0 &&\r\n\t\t\tdata.map((brand) => {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tid: brand._id || '',\r\n\t\t\t\t\tkey: brand._id || '',\r\n\t\t\t\t\tname: brand.name && brand.name,\r\n\t\t\t\t\tdescription: brand.description && brand.description,\r\n\t\t\t\t\tcover: `${config['baseURL']}${brand.cover ? brand.cover.thumbnail : ''}`\r\n\t\t\t\t};\r\n\t\t\t});\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\r\n\t/**\r\n* @public\r\n* @method setImageAsThumbnailToItem convert api data from API to general format based on config server\r\n* @param {Object} data response objectc from alpha\r\n* @returns {Object}  converted data\r\n*/\r\n\tasync setImageAsThumbnailToItem(resData) {\r\n\t\tif (resData.success) {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn {};\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n* @public\r\n* @method brandDetail convert api data from API to general format based on config server\r\n* @param {Object} data response objectc from alpha\r\n* @returns {Object}  converted data\r\n*/\r\n\tasync brandDetail(resData) {\r\n\t\tconst data = Object.keys(resData).length > 0 ? resData : null;\r\n\t\tif (data) {\r\n\t\t\treturn {\r\n\t\t\t\tid: data._id || '',\r\n\t\t\t\tkey: data._id || '',\r\n\t\t\t\tname: data.name && data.name,\r\n\t\t\t\tdescription: data.description && data.description,\r\n\t\t\t\turl: data.url && data.url,\r\n\t\t\t\tcover: {\r\n\t\t\t\t\tcover: `${config['baseURL']}${data.cover ? data.cover.original && data.cover.original : ''}`,\r\n\t\t\t\t\tid: data.cover ? data.cover._id : ''\r\n\t\t\t\t},\r\n\t\t\t\timage:\r\n\t\t\t\t\t(data.image &&\r\n\t\t\t\t\t\tdata.image.length > 0 &&\r\n\t\t\t\t\t\tdata.image.map((img) => {\r\n\t\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\t\tid: img._id || '',\r\n\t\t\t\t\t\t\t\tname: img.name && img.name,\r\n\t\t\t\t\t\t\t\tcover: `${config['baseURL']}${img.thumbnail}`,\r\n\t\t\t\t\t\t\t\tadded: img.added,\r\n\t\t\t\t\t\t\t\ttitle: img.title,\r\n\t\t\t\t\t\t\t\tlabels: img.labels,\r\n\t\t\t\t\t\t\t\talt: img.alt,\r\n\t\t\t\t\t\t\t\tcaption: img.caption\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t})) ||\r\n\t\t\t\t\t[]\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn {};\r\n\t}\r\n\r\n\r\n\t/**\r\n* @public\r\n* @method tagDetail convert api data from API to general format based on config server\r\n* @param {Object} data response objectc from alpha\r\n* @returns {Object}  converted data\r\n*/\r\n\tasync tagDetail(resData) {\r\n\t\tconst data = Object.keys(resData).length > 0 ? resData : null;\r\n\t\tif (data) {\r\n\t\t\treturn {\r\n\t\t\t\tid: data._id || '',\r\n\t\t\t\tkey: data._id || '',\r\n\t\t\t\tname: data.name && data.name,\r\n\t\t\t\turl: data.url && data.url,\r\n\t\t\t\tdescription: data.description && data.description,\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn {};\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method customerList convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync customerList(resData) {\r\n\t\tconst data = resData.data || [];\r\n\r\n\t\tconst convertedData =\r\n\t\t\tdata.length > 0 &&\r\n\t\t\tdata.map((customer) => {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tid: customer._id || '',\r\n\t\t\t\t\tkey: customer._id || '',\r\n\t\t\t\t\tfirstName: customer.firstName || '',\r\n\t\t\t\t\tlastName: customer.lastName || '',\r\n\t\t\t\t\tname: customer.firstName + ' ' + customer.lastName,\r\n\t\t\t\t\tcountry: customer.country || '',\r\n\t\t\t\t\tcity: customer.city || '',\r\n\t\t\t\t\temail: customer.email || '',\r\n\t\t\t\t\tphone: customer.phone || '',\r\n\t\t\t\t\taddress1: customer.address1 || '',\r\n\t\t\t\t\taddress2: customer.address2 || '',\r\n\t\t\t\t\tcreated: customer.created || ''\r\n\t\t\t\t};\r\n\t\t\t});\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n   * @public\r\n   * @method pageList convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync pageList(resData) {\r\n\t\tconst data = resData.data || [];\r\n\r\n\t\tconst convertedData =\r\n\t\t\tdata.length > 0 &&\r\n\t\t\tdata.map((page) => {\r\n\t\t\t\treturn {\r\n\t\t\t\t\t...page\r\n\t\t\t\t};\r\n\t\t\t});\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n* @public\r\n* @method themeList convert api data from API to general format based on config server\r\n* @param {Object} data response objectc from alpha\r\n* @returns {Object}  converted data\r\n*/\r\n\tasync themeList(resData) {\r\n\t\tconst data = resData || [];\r\n\r\n\t\tconst convertedData =\r\n\t\t\tdata.length > 0 &&\r\n\t\t\tdata.map((theme) => {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tid: theme._id || '',\r\n\t\t\t\t\tkey: theme._id || '',\r\n\t\t\t\t\tname: theme.name || '',\r\n\t\t\t\t\tadded: theme.added || '',\r\n\t\t\t\t\tthumbnail: `${config['baseURL']}${theme.thumbnail ? theme.thumbnail : \"\"}`,\r\n\r\n\t\t\t\t};\r\n\t\t\t});\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\r\n\t/**\r\n   * @public\r\n   * @method componentList convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync componentList(resData) {\r\n\t\tconst components = resData.components || {};\r\n\r\n\t\tif (components && components.length > 0) {\r\n\t\t\tconst convertedData =\r\n\t\t\t\tcomponents.length > 0 &&\r\n\t\t\t\tcomponents.map((component) => {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tid: component._id || '',\r\n\t\t\t\t\t\tkey: component._id || '',\r\n\t\t\t\t\t\tname: component.name || '',\r\n\t\t\t\t\t\titems: component.items.length > 0 ? component.items.map(item => {\r\n\t\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\t\t...item,\r\n\t\t\t\t\t\t\t\timage: item.image.length > 0 ? item.image.map(img => {\r\n\t\t\t\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\t\t\t\tcover: `${config['baseURL']}${img.thumbnail ? img.thumbnail : \"\"}`,\r\n\t\t\t\t\t\t\t\t\t\tid: img._id,\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}) : []\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}) : []\r\n\t\t\t\t\t};\r\n\t\t\t\t});\r\n\r\n\t\t\treturn convertedData;\r\n\t\t}\r\n\r\n\t\treturn [];\r\n\t}\r\n\r\n\r\n\r\n\r\n\r\n\t/**\r\n   * @public\r\n   * @method regionList convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync regionList(data) {\r\n\t\tconst convertedData =\r\n\t\t\tdata.length > 0 &&\r\n\t\t\tdata.map((region) => {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tid: region._id || '',\r\n\t\t\t\t\tkey: region._id || '',\r\n\t\t\t\t\tname: region.name || '',\r\n\t\t\t\t\tpickUpLocation: region.pickUpLocation || '',\r\n\t\t\t\t\tcountry: region.country || '',\r\n\t\t\t\t\tcountryCode: region.countryCode || '',\r\n\t\t\t\t\tcountryName: region.countryName || '',\r\n\t\t\t\t\tcity: region.city || '',\r\n\t\t\t\t\ttime: region.time || '',\r\n\t\t\t\t\tcharge: region.charge || {}\r\n\t\t\t\t};\r\n\t\t\t});\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method attributeList convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync attributeList(data) {\r\n\t\tconst convertedData = Object.keys(data).length > 0 && data;\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method ImageListFromLibrary convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync ImageListFromLibrary(resData) {\r\n\t\tconst data = resData.data || [];\r\n\r\n\t\tconst convertedData =\r\n\t\t\tdata.length > 0 &&\r\n\t\t\tdata.map((image) => {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tid: image._id || '',\r\n\t\t\t\t\tname: image.name && image.name,\r\n\t\t\t\t\tcover: `${config['baseURL']}${image.thumbnail}`,\r\n\t\t\t\t\tadded: image.added,\r\n\t\t\t\t\ttitle: image.title,\r\n\t\t\t\t\tlabels: image.labels,\r\n\t\t\t\t\talt: image.alt,\r\n\t\t\t\t\tcaption: image.caption\r\n\t\t\t\t};\r\n\t\t\t});\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method countryList convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync countryList(resData) {\r\n\t\tconst data = resData || [];\r\n\r\n\t\tconst convertedData =\r\n\t\t\tdata.length > 0 &&\r\n\t\t\tdata.map((country) => {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tid: country._id || '',\r\n\t\t\t\t\tname: country.name && country.name\r\n\t\t\t\t};\r\n\t\t\t});\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method getDeliveryCharge convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync getDeliveryCharge(data) {\r\n\t\tconst convertedData = data;\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method cityList convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync cityList(resData) {\r\n\t\tconst data = resData || [];\r\n\r\n\t\tconst convertedData =\r\n\t\t\tdata.length > 0 &&\r\n\t\t\tdata.map((city) => {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tid: city._id || '',\r\n\t\t\t\t\tname: city.name && city.name\r\n\t\t\t\t};\r\n\t\t\t});\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method forAnalytics convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync forAnalytics(resData) {\r\n\t\treturn resData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method productDetail convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\r\n\tasync productDetail(data) {\r\n\t\tconst convertedData =\r\n\t\t\t(Object.keys(data).length > 0 && {\r\n\t\t\t\tid: data._id || data.id || '',\r\n\t\t\t\tname: data.name || '',\r\n\t\t\t\tdescription: data.description.replace(/<[^>]+>/g, '') || '',\r\n\t\t\t\tregularPrice: data.price && data.price['regular'],\r\n\t\t\t\tofferPrice: data.price && data.price['offer'],\r\n\t\t\t\turl: data.url,\r\n\t\t\t\tavailableStock: data.availableStock,\r\n\t\t\t\tminimumStock: data.minimumStock,\r\n\t\t\t\tunit: data.unit,\r\n\t\t\t\tdate: data.date,\r\n\t\t\t\tvenue: data.venue,\r\n\t\t\t\tbrand: data.brand && Object.key(data.brand).length > 0 ? {\r\n\t\t\t\t\tid: data.brand.id,\r\n\t\t\t\t\tname: data.brand.name,\r\n\r\n\t\t\t\t} : {},\r\n\t\t\t\tprice:\r\n\t\t\t\t\tparseInt(data.price['offer']) > parseInt(data.price['regular'])\r\n\t\t\t\t\t\t? data.price['offer']\r\n\t\t\t\t\t\t: data.price['regular'],\r\n\t\t\t\tpricing: data.pricing,\r\n\t\t\t\tcategory:\r\n\t\t\t\t\t(data.category &&\r\n\t\t\t\t\t\tdata.category.length > 0 &&\r\n\t\t\t\t\t\tdata.category.map((cat) => {\r\n\t\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\t\tid: cat._id,\r\n\t\t\t\t\t\t\t\tname: cat.name\r\n\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t})) ||\r\n\t\t\t\t\tdata.category,\r\n\t\t\t\ttags: data.tags && data.tags.length > 0 ? data.tags : [],\r\n\r\n\t\t\t\tcover: {\r\n\t\t\t\t\tcover: `${config['baseURL']}${data.cover ? data.cover.original && data.cover.original : ''}`,\r\n\t\t\t\t\tid: data.cover ? data.cover._id : ''\r\n\t\t\t\t},\r\n\t\t\t\timage:\r\n\t\t\t\t\t(data.image &&\r\n\t\t\t\t\t\tdata.image.length > 0 &&\r\n\t\t\t\t\t\tdata.image.map((img) => {\r\n\t\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\t\tid: img._id || '',\r\n\t\t\t\t\t\t\t\tname: img.name && img.name,\r\n\t\t\t\t\t\t\t\tcover: `${config['baseURL']}${img.original}`,\r\n\t\t\t\t\t\t\t\tadded: img.added,\r\n\t\t\t\t\t\t\t\ttitle: img.title,\r\n\t\t\t\t\t\t\t\tlabels: img.labels,\r\n\t\t\t\t\t\t\t\talt: img.alt,\r\n\t\t\t\t\t\t\t\tcaption: img.caption\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t})) ||\r\n\t\t\t\t\t[]\r\n\t\t\t}) ||\r\n\t\t\t{};\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\r\n\r\n\r\n\r\n\t/**\r\n   * @public\r\n   * @method couponDetail convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\r\n\tasync couponDetail(data) {\r\n\t\tconst convertedData =\r\n\t\t\t(Object.keys(data).length > 0 && {\r\n\t\t\t\tid: data._id || '',\r\n\t\t\t\tname: data.name && data.name,\r\n\t\t\t\tcode: data.code,\r\n\t\t\t\tminimumOrder: data.minimumOrder,\r\n\t\t\t\tmaximumOrder: data.maximumOrder,\r\n\t\t\t\torderedProducts: data.orderedProducts | [],\r\n\t\t\t\tfreeProducts: data.freeProducts || [],\r\n\t\t\t\torderedProductsCount: data.orderedProducts && data.orderedProducts.length,\r\n\t\t\t\tfreeProductsCount: data.freeProducts && data.orderedProducts.length,\r\n\t\t\t\tamountType: data.amountType,\r\n\t\t\t\tamount: data.amount,\r\n\t\t\t\tfreeDelivery: data.freeDelivery,\r\n\t\t\t\tstartDate: data.startDate,\r\n\t\t\t\tendDate: data.endDate,\r\n\t\t\t\tmaxUsePerUser: data.maxUsePerUser,\r\n\t\t\t\tactualPrice: data.actualPrice,\r\n\t\t\t\tunit: data.unit,\r\n\t\t\t\tcategory: data.category,\r\n\t\t\t\tpricing: data.pricing,\r\n\t\t\t\tdate: data.date,\r\n\t\t\t\ttime: data.time,\r\n\t\t\t\tvenue: data.venue,\r\n\t\t\t\tbrand: data.brand,\r\n\t\t\t\ttags: data.tags,\r\n\t\t\t}) ||\r\n\t\t\t{};\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n   * @public\r\n   * @method productDetailById convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync productDetailById(data) {\r\n\t\tconst convertedData =\r\n\t\t\t(Object.keys(data).length > 0 && {\r\n\t\t\t\tid: data._id || data.id || '',\r\n\t\t\t\tname: data.name || '',\r\n\t\t\t\tdescription: data.description.replace(/<[^>]+>/g, '') || '',\r\n\t\t\t\tregularPrice: data.price && data.price['regular'],\r\n\t\t\t\tofferPrice: data.price && data.price['offer'],\r\n\t\t\t\turl: data.url,\r\n\t\t\t\tunit: data.unit,\r\n\t\t\t\tdate: data.date,\r\n\t\t\t\tvenue: data.venue,\r\n\t\t\t\tpricing: data.pricing,\r\n\t\t\t\tprice:\r\n\t\t\t\t\tparseInt(data.price['offer']) > parseInt(data.price['regular'])\r\n\t\t\t\t\t\t? data.price['offer']\r\n\t\t\t\t\t\t: data.price['regular'],\r\n\t\t\t\tcategory:\r\n\t\t\t\t\t(data.category &&\r\n\t\t\t\t\t\tdata.category.length > 0 &&\r\n\t\t\t\t\t\tdata.category.map((cat) => {\r\n\t\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\t\tid: cat._id,\r\n\t\t\t\t\t\t\t\tname: cat.name,\r\n\t\t\t\t\t\t\t\tcover: `${config['baseURL']}${cat.cover ? cat.cover.original && cat.cover.original : ''}`\r\n\r\n\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t})) ||\r\n\t\t\t\t\tdata.category,\r\n\t\t\t\tbrand:\r\n\t\t\t\t\tdata.brand &&\r\n\t\t\t\t\t\tObject.keys(data.brand).length > 0 ? {\r\n\t\t\t\t\t\t\tid: data.brand._id,\r\n\t\t\t\t\t\t\tname: data.brand.name,\r\n\t\t\t\t\t\t\tcover: `${config['baseURL']}${data.brand.cover ? data.brand.cover.original && data.brand.cover.original : ''}`\r\n\t\t\t\t\t\t} :\r\n\t\t\t\t\t\tdata.brand,\r\n\t\t\t\tprimaryCategory: data.primaryCategory &&\r\n\t\t\t\t\tObject.keys(data.primaryCategory).length > 0 ? {\r\n\t\t\t\t\t\tid: data.primaryCategory._id,\r\n\t\t\t\t\t\tname: data.primaryCategory.name,\r\n\t\t\t\t\t\tcover: `${config['baseURL']}${data.primaryCategory.cover ? data.primaryCategory.cover.original && data.primaryCategory.cover.original : ''}`\r\n\t\t\t\t\t} :\r\n\t\t\t\t\tdata.primaryCategory,\r\n\t\t\t\ttags: data.tags && data.tags.length > 0 ? data.tags : [],\r\n\t\t\t\tavailableStock: data.availableStock,\r\n\t\t\t\tcover: {\r\n\t\t\t\t\tcover: `${config['baseURL']}${data.cover ? data.cover.original && data.cover.original : ''}`,\r\n\t\t\t\t\tid: data.cover ? data.cover._id : ''\r\n\t\t\t\t},\r\n\t\t\t\timage:\r\n\t\t\t\t\t(data.image &&\r\n\t\t\t\t\t\tdata.image.length > 0 &&\r\n\t\t\t\t\t\tdata.image.map((img) => {\r\n\t\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\t\tid: img._id || '',\r\n\t\t\t\t\t\t\t\tname: img.name && img.name,\r\n\t\t\t\t\t\t\t\tcover: `${config['baseURL']}${img.original}`,\r\n\t\t\t\t\t\t\t\tadded: img.added,\r\n\t\t\t\t\t\t\t\ttitle: img.title,\r\n\t\t\t\t\t\t\t\tlabels: img.labels,\r\n\t\t\t\t\t\t\t\talt: img.alt,\r\n\t\t\t\t\t\t\t\tcaption: img.caption\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t})) ||\r\n\t\t\t\t\t[]\r\n\t\t\t}) ||\r\n\t\t\t{};\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method updateProduct convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync updateProduct(data) {\r\n\t\tconst convertedData = data;\r\n\r\n\t\tif (data && data.updated) {\r\n\t\t\treturn {\r\n\t\t\t\t...data.updated,\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\r\n\t/**\r\n* @public\r\n* @method updateComponent convert api data from API to general format based on config server\r\n* @param {Object} data response objectc from wc\r\n* @returns {Object}  converted data\r\n*/\r\n\tasync updateComponent(data) {\r\n\t\tconst convertedData = data;\r\n\r\n\t\tif (data && data.updated) {\r\n\t\t\treturn {\r\n\t\t\t\t...data.updated,\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\r\n\t/**\r\n   * @public\r\n   * @method updateImageFromLibrary convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync updateImageFromLibrary(data) {\r\n\t\tconst convertedData = data;\r\n\r\n\t\tif (data && data.updated) {\r\n\t\t\treturn {\r\n\t\t\t\t...data.updated,\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method updateTag convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync updateTag(data) {\r\n\t\tconst convertedData = data;\r\n\r\n\t\tif (data && data.updated) {\r\n\t\t\treturn {\r\n\t\t\t\t...data.updated,\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n* @public\r\n* @method updatePage convert api data from API to general format based on config server\r\n* @param {Object} data response objectc from wc\r\n* @returns {Object}  converted data\r\n*/\r\n\tasync updatePage(data) {\r\n\t\tconst convertedData = data;\r\n\r\n\t\tif (data && data.updated) {\r\n\t\t\treturn {\r\n\t\t\t\t...data.updated,\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method updateBrand convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync updateBrand(data) {\r\n\t\tconst convertedData = data;\r\n\r\n\t\tif (data && data.updated) {\r\n\t\t\treturn {\r\n\t\t\t\t...data.updated,\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method updateCategory convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync updateCategory(data) {\r\n\t\tconst convertedData = data;\r\n\r\n\t\tif (data && data.updated) {\r\n\t\t\treturn {\r\n\t\t\t\t...data.updated,\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method updateCustomer convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync updateCustomer(data) {\r\n\t\tconst convertedData = data;\r\n\r\n\t\tif (data && data.updated) {\r\n\t\t\treturn {\r\n\t\t\t\t...data.updated,\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method updateRegion convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync updateRegion(data) {\r\n\t\tconst convertedData = data;\r\n\r\n\t\tif (data && data.updated) {\r\n\t\t\treturn {\r\n\t\t\t\t...data.updated,\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method deleteProduct convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync deleteProduct(data) {\r\n\t\tconst convertedData = data;\r\n\t\tif (data && data.success) {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n   * @public\r\n   * @method deleteBundle convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync deleteBundle(data) {\r\n\t\tconst convertedData = data;\r\n\t\tif (data && data.success) {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n   * @public\r\n   * @method deleteCoupon convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync deleteCoupon(data) {\r\n\t\tconst convertedData = data;\r\n\t\tif (data && data.success) {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\r\n\r\n\r\n\t/**\r\n* @public\r\n* @method pageDetail convert api data from API to general format based on config server\r\n* @param {Object} data response objectc from wc\r\n* @returns {Object}  converted data\r\n*/\r\n\tasync pageDetail(data) {\r\n\t\tconst convertedData = data;\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\r\n\t/**\r\n   * @public\r\n   * @method updateOrderStatus convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync updateOrderStatus(data) {\r\n\t\tconst convertedData = data;\r\n\t\tif (data && data.success) {\r\n\t\t\treturn {\r\n\t\t\t\t...data,\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method deleteImageFromLibrary convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync deleteImageFromLibrary(data) {\r\n\t\tconst convertedData = data;\r\n\t\tif (data && data.success) {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n* @public\r\n* @method deletePage convert api data from API to general format based on config server\r\n* @param {Object} data response objectc from wc\r\n* @returns {Object}  converted data\r\n*/\r\n\tasync deletePage(data) {\r\n\t\tconst convertedData = data;\r\n\t\tif (data && data.success) {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n   * @public\r\n   * @method addTag convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync addTag(data) {\r\n\t\tconst convertedData = data;\r\n\t\tif (data && data.inserted) {\r\n\t\t\treturn {\r\n\t\t\t\t...data.inserted[0],\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method addCategory convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync addCategory(data) {\r\n\t\tconst convertedData = data;\r\n\t\tif (data && data.inserted) {\r\n\t\t\treturn {\r\n\t\t\t\t...data.inserted[0],\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method addProduct convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync addProduct(data) {\r\n\t\tconst convertedData = data;\r\n\t\tif (data && data.inserted) {\r\n\t\t\treturn {\r\n\t\t\t\t...data.inserted[0],\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\r\n\r\n\r\n\r\n\t/**\r\n* @public\r\n* @method addTheme convert api data from API to general format based on config server\r\n* @param {Object} data response objectc from wc\r\n* @returns {Object}  converted data\r\n*/\r\n\tasync addTheme(data) {\r\n\t\tconst convertedData = data;\r\n\t\tif (data && data.success) {\r\n\t\t\treturn {\r\n\t\t\t\t...data.inserted[0],\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n* @public\r\n* @method addPage convert api data from API to general format based on config server\r\n* @param {Object} data response objectc from wc\r\n* @returns {Object}  converted data\r\n*/\r\n\tasync addPage(data) {\r\n\t\tconst convertedData = data;\r\n\t\tif (data && data.success) {\r\n\t\t\treturn {\r\n\t\t\t\t...data.inserted[0],\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\r\n\t/**\r\n   * @public\r\n   * @method addBrand convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync addBrand(data) {\r\n\t\tconst convertedData = data;\r\n\t\tif (data && data.inserted) {\r\n\t\t\treturn {\r\n\t\t\t\t...data.inserted[0],\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\t/**\r\n   * @public\r\n   * @method addComponent convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync addComponent(data) {\r\n\t\tconst convertedData = data;\r\n\t\tif (data && data.inserted) {\r\n\t\t\treturn {\r\n\t\t\t\t...data.inserted[0],\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\r\n\r\n\r\n\t/**\r\n   * @public\r\n   * @method addCustomer convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync addCustomer(data) {\r\n\t\tconst convertedData = data;\r\n\t\tif (data && data.inserted) {\r\n\t\t\treturn {\r\n\t\t\t\t...data.inserted[0],\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method addRegion convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync addRegion(data) {\r\n\t\tconst convertedData = data;\r\n\t\tif (data && data.inserted) {\r\n\t\t\treturn {\r\n\t\t\t\t...data.inserted[0],\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method deleteTag convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync deleteTag(data) {\r\n\t\tconst convertedData = data;\r\n\t\tif (data && data.success) {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n   * @public\r\n   * @method logout convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync logout(data) {\r\n\t\tconst convertedData = data;\r\n\t\tif (data && data.success) {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\r\n\t/**\r\n* @public\r\n* @method activeTheme convert api data from API to general format based on config server\r\n* @param {Object} data response objectc from wc\r\n* @returns {Object}  converted data\r\n*/\r\n\tasync activeTheme(data) {\r\n\t\tconst convertedData = data;\r\n\t\tif (data && data.success) {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method deletetheme convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync deletetheme(data) {\r\n\t\tconst convertedData = data;\r\n\t\tif (data && data.success) {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\r\n\t/**\r\n   * @public\r\n   * @method deleteCustomer convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync deleteCustomer(data) {\r\n\t\tconst convertedData = data;\r\n\t\tif (data && data.success) {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\r\n\t/**\r\n* @public\r\n* @method deleteComponent convert api data from API to general format based on config server\r\n* @param {Object} data response objectc from wc\r\n* @returns {Object}  converted data\r\n*/\r\n\tasync deleteComponent(data) {\r\n\t\tconst convertedData = data;\r\n\t\tif (data && data.success) {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\r\n\t/**\r\n   * @public\r\n   * @method deleteBrand convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync deleteBrand(data) {\r\n\t\tconst convertedData = data;\r\n\t\tif (data && data.success) {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method deleteCategory convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync deleteCategory(data) {\r\n\t\tconst convertedData = data;\r\n\t\tif (data && data.success) {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method deleteRegion convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync deleteRegion(data) {\r\n\t\tconst convertedData = data;\r\n\t\tif (data && data.success) {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n   * @public\r\n   * @method siteSettings convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync siteSettings(resData) {\r\n\t\tconst convertedData = resData;\r\n\r\n\t\tif (resData.data) {\r\n\t\t\treturn {\r\n\t\t\t\t...resData.data\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\r\n\t/**\r\n* @public\r\n* @method updateSiteSettings convert api data from API to general format based on config server\r\n* @param {Object} data response objectc from wc\r\n* @returns {Object}  converted data\r\n*/\r\n\tasync updateSiteSettings(data) {\r\n\r\n\t\tif (data['updated']) {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn data;\r\n\t}\r\n\r\n\t/**\r\n* @public\r\n* @method updateInvoiceSettings convert api data from API to general format based on config server\r\n* @param {Object} data response objectc from wc\r\n* @returns {Object}  converted data\r\n*/\r\n\tasync updateInvoiceSettings(data) {\r\n\r\n\t\tif (data['updated']) {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn data;\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n   * @public\r\n   * @method invoiceSettingsDetail convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync invoiceSettingsDetail(resData) {\r\n\t\tconst convertedData = resData;\r\n\r\n\t\tif (resData.data) {\r\n\t\t\treturn {\r\n\t\t\t\t...resData.data\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\t/**\r\n   * @public\r\n   * @method categoryDetail convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync categoryDetail(data) {\r\n\r\n\t\tconst convertedData = {\r\n\t\t\tid: data.id || data._id || '',\r\n\t\t\tname: data.name && data.name,\r\n\t\t\tdescription: data.description && data.description,\r\n\t\t\tproductCount: data.productCount || 0,\r\n\t\t\ticon: data.icon ? `${config['baseURL']}${data.icon}` : '',\r\n\t\t\ttype: data.subCategory.length > 0 && data.subCategory[0] && data.subCategory[0]['name'] ? 'Top category' : 'Child category',\r\n\t\t\turl: data.url || '',\r\n\t\t\tsubCategory:\r\n\t\t\t\tdata.subCategory.length > 0 && data.subCategory[0] && data.subCategory[0]['name']\r\n\t\t\t\t\t? data.subCategory.map((subCat) => {\r\n\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\tid: subCat._id || '',\r\n\t\t\t\t\t\t\tname: subCat.name && subCat.name,\r\n\t\t\t\t\t\t\tdescription: subCat.description && subCat.description,\r\n\t\t\t\t\t\t\tcover: subCat.cover ? `${config['baseURL']}${subCat.cover.medium}` : ''\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t})\r\n\t\t\t\t\t: [],\r\n\t\t\tcover: {\r\n\t\t\t\tcover: `${config['baseURL']}${data.cover ? data.cover.original && data.cover.original : ''}`,\r\n\t\t\t\tid: data.cover ? data.cover._id : ''\r\n\t\t\t},\r\n\t\t\timage:\r\n\t\t\t\t(data.image &&\r\n\t\t\t\t\tdata.image.length > 0 &&\r\n\t\t\t\t\tdata.image.map((img) => {\r\n\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\tid: img._id || '',\r\n\t\t\t\t\t\t\tname: img.name && img.name,\r\n\t\t\t\t\t\t\tcover: `${config['baseURL']}${img.medium}`,\r\n\t\t\t\t\t\t\tadded: img.added,\r\n\t\t\t\t\t\t\ttitle: img.title,\r\n\t\t\t\t\t\t\tlabels: img.labels,\r\n\t\t\t\t\t\t\talt: img.alt,\r\n\t\t\t\t\t\t\tcaption: img.caption\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})) ||\r\n\t\t\t\t[]\r\n\t\t};\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\t/**\r\n   * @public\r\n   * @method createOrder convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync createOrder(data) {\r\n\t\t//map props\r\n\r\n\t\tconst formatedData = {\r\n\t\t\t...data\r\n\t\t};\r\n\r\n\t\treturn formatedData;\r\n\t}\r\n\r\n\t/**\r\n* @public\r\n* @method orderDetail convert api data from API to general format based on config server\r\n* @param {Object} data response objectc from wc\r\n* @returns {Object}  converted data\r\n*/\r\n\tasync orderDetail(data) {\r\n\t\t//map props\r\n\t\tconst order = data.order || false;\r\n\t\tif (order) {\r\n\t\t\treturn {\r\n\t\t\t\tid: order.id || order._id,\r\n\t\t\t\tbillingAddress: order.billingAddress,\r\n\t\t\t\tname: order.billingAddress['firstName'] + \" \" + order.billingAddress['lastName'],\r\n\t\t\t\tcountry: order.billingAddress['country'],\r\n\t\t\t\tcity: order.billingAddress['city'],\r\n\t\t\t\taddress: order.billingAddress['address'],\r\n\t\t\t\tphone: order.billingAddress['phone'],\r\n\t\t\t\temail: order.billingAddress['email'],\r\n\t\t\t\tstatus: order.status,\r\n\t\t\t\ttotal: order.totalPrice,\r\n\t\t\t\tproducts: order.products,\r\n\t\t\t\tdate_created: order.added,\r\n\t\t\t\tpaymentMethod: order['payment']['paymentMethod'],\r\n\t\t\t\tpaymentStatus: order['payment']['status'],\r\n\t\t\t\tpayment: order['payment'],\r\n\t\t\t\tcustomerId: order['customer'] ? order['customer']['_id'] : ''\r\n\t\t\t}\r\n\t\t}\r\n\t\telse return {}\r\n\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method signup convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync signup(data) {\r\n\t\treturn {\r\n\t\t\tstatus: 'ok'\r\n\t\t};\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method signin convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync signin(data) {\r\n\t\tif (data['msg']) {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method login convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync login(data) {\r\n\t\tif (data['msg']) {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method addImageToLibrary convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync addImageToLibrary(data) {\r\n\t\treturn data;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method getCurrentUserData convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync getCurrentCustomerData(data) {\r\n\t\t//map props\r\n\t\t// let generalFormat = dataMap[config['server']]['getCurrentUserData']; //get genereal format from dataMap\r\n\r\n\t\tconst formatedData = {\r\n\t\t\t...data\r\n\t\t};\r\n\r\n\t\treturn formatedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method currentCustomerData convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync currentCustomerData(data) {\r\n\t\t//map props\r\n\t\t// let generalFormat = dataMap[config['server']]['currentCustomerData']; //get genereal format from dataMap\r\n\r\n\t\tconst convertedData = {\r\n\t\t\t...data\r\n\t\t};\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method updateCurrentCustomerData convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync updateCurrentCustomerData(data) {\r\n\t\t//map props\r\n\t\t// let generalFormat = dataMap[config['server']]['updateCurrentCustomerData']; //get genereal format from dataMap\r\n\r\n\t\tconst convertedData = {\r\n\t\t\tstatus: 'ok'\r\n\t\t};\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method changePassword convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync changePassword(data) {\r\n\t\tif (data['success']) {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn data;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method getCurrentUserOrders convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync getCurrentUserOrders(resData) {\r\n\t\tconst data = resData.data || [];\r\n\t\tconst isNext = resData.page.next;\r\n\r\n\t\tlet convertedData =\r\n\t\t\t(data.length > 0 &&\r\n\t\t\t\tdata.map((item) => {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\t...item,\r\n\t\t\t\t\t\tid: item.id || item._id,\r\n\t\t\t\t\t\tbillingAddress: item.billingAddress,\r\n\t\t\t\t\t\tstatus: item.status,\r\n\t\t\t\t\t\ttotal: item.totalPrice,\r\n\t\t\t\t\t\tproducts: item.products,\r\n\t\t\t\t\t\tdate_created: item.date,\r\n\t\t\t\t\t\tpaymentMethod: item['payment']['paymentMethod'],\r\n\t\t\t\t\t\tcustomerId: item.customer['_id']\r\n\t\t\t\t\t};\r\n\t\t\t\t})) ||\r\n\t\t\t[];\r\n\r\n\t\tconvertedData = {\r\n\t\t\tdata: convertedData,\r\n\t\t\tisNext\r\n\t\t};\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\r\n\t/**\r\n* @public\r\n* @method orderList convert api data from API to general format based on config server\r\n* @param {Object} data response objectc from wc\r\n* @returns {Object}  converted data\r\n*/\r\n\tasync orderList(resData) {\r\n\t\tconst data = resData.orders ? resData.orders.data : [];\r\n\t\t// const isNext = resData.page.next;\r\n\r\n\t\tlet convertedData =\r\n\t\t\t(data.length > 0 &&\r\n\t\t\t\tdata.map((item) => {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tid: item.id || item._id,\r\n\t\t\t\t\t\tbillingAddress: item.billingAddress,\r\n\t\t\t\t\t\tname: item.billingAddress['firstName'] + \" \" + item.billingAddress['lastName'],\r\n\t\t\t\t\t\tcountry: item.billingAddress['country'],\r\n\t\t\t\t\t\tcity: item.billingAddress['city'],\r\n\t\t\t\t\t\tstatus: item.status,\r\n\t\t\t\t\t\ttotal: item.totalPrice,\r\n\t\t\t\t\t\tproducts: item.products,\r\n\t\t\t\t\t\tdate_created: item.added,\r\n\t\t\t\t\t\tpaymentMethod: item['payment']['paymentMethod'],\r\n\t\t\t\t\t\tpaymentStatus: item['payment']['status'],\r\n\t\t\t\t\t\tpayment: item['payment'],\r\n\t\t\t\t\t\tcustomerId: item['customer'] ? item['customer']['_id'] : ''\r\n\r\n\t\t\t\t\t};\r\n\t\t\t\t})) ||\r\n\t\t\t[];\r\n\r\n\t\t// convertedData = {\r\n\t\t// \tdata: convertedData,\r\n\t\t// \tisNext\r\n\t\t// };\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\r\n\r\n\r\n\r\n\t/**\r\n   * @public\r\n   * @method currentUserOrders convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync currentUserOrders(data) {\r\n\t\t//map props\r\n\t\tlet generalFormat = dataMap[config['server']]['currentUserOrders']; //get genereal format from dataMap\r\n\r\n\t\tconst convertedData =\r\n\t\t\t(data.length > 0 &&\r\n\t\t\t\tdata.map((item) => {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\t...generalFormat,\r\n\t\t\t\t\t\tid: item.id,\r\n\t\t\t\t\t\tstatus: item.status,\r\n\t\t\t\t\t\ttotal: item.total,\r\n\t\t\t\t\t\tline_items: item.line_items,\r\n\t\t\t\t\t\tdate_created: item.date_created\r\n\t\t\t\t\t};\r\n\t\t\t\t})) ||\r\n\t\t\t[];\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method payment convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\r\n\tasync payment(data) {\r\n\t\tconst paymentItems = data.items;\r\n\t\tif (!paymentItems.length > 0) {\r\n\t\t\treturn paymentItems;\r\n\t\t}\r\n\r\n\t\tconst items = paymentItems.map((item) => {\r\n\t\t\treturn {\r\n\t\t\t\tname: item.name || '',\r\n\t\t\t\tnumber: item.text || ''\r\n\t\t\t};\r\n\t\t});\r\n\t\treturn items;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method welcome convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync welcome(data) {\r\n\t\treturn {\r\n\t\t\ttext: data.text\r\n\t\t};\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method logo convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync logo(data) {\r\n\t\tconst src = data.image && data.image.length > 0 ? `${config['baseURL']}${data.image[0]['original']}` : '';\r\n\t\treturn {\r\n\t\t\tsrc,\r\n\t\t\ttarget: data.target\r\n\t\t};\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method hotline convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync hotline(data) {\r\n\t\treturn {\r\n\t\t\ttext: data.text\r\n\t\t};\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method navLinks convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync navLinks(data) {\r\n\t\tconst navLinkItems = data.items;\r\n\t\tif (!navLinkItems.length > 0) {\r\n\t\t\treturn [];\r\n\t\t}\r\n\r\n\t\tconst items = navLinkItems.map((item) => {\r\n\t\t\treturn {\r\n\t\t\t\ttext: item.name || item.text,\r\n\t\t\t\ttarget: item.target\r\n\t\t\t};\r\n\t\t});\r\n\r\n\t\treturn items;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method slider convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync slider(data) {\r\n\t\tconst sliderItems = data.items;\r\n\t\tif (!sliderItems.length > 0) {\r\n\t\t\treturn sliderItems;\r\n\t\t}\r\n\r\n\t\tconst images = sliderItems.map((item) => {\r\n\t\t\treturn {\r\n\t\t\t\ttarget: item.target,\r\n\t\t\t\tsrc: `${config['baseURL']}${item.image[0]['medium']}`\r\n\t\t\t};\r\n\t\t});\r\n\t\treturn images;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method sliderRight convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync sliderRight(data) {\r\n\t\tconst sliderRightItems = data.items;\r\n\t\tif (!sliderRightItems.length > 0) {\r\n\t\t\treturn sliderRightItems;\r\n\t\t}\r\n\r\n\t\tconst images = sliderRightItems.map((item) => {\r\n\t\t\treturn {\r\n\t\t\t\ttarget: item.target,\r\n\t\t\t\tsrc: `${config['baseURL']}${item.image[0]['medium']}`\r\n\t\t\t};\r\n\t\t});\r\n\t\treturn images;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method address convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync address(data) {\r\n\t\treturn {\r\n\t\t\tname: data.name,\r\n\t\t\ttext: data.text\r\n\t\t};\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method Links convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync Links(data) {\r\n\t\tconst servicesItems = data.items;\r\n\t\tif (!servicesItems.length > 0) {\r\n\t\t\treturn servicesItems;\r\n\t\t}\r\n\r\n\t\tconst items = servicesItems.map((item) => {\r\n\t\t\treturn {\r\n\t\t\t\ttarget: item.target,\r\n\t\t\t\tname: item.name || item.text\r\n\t\t\t};\r\n\t\t});\r\n\t\treturn items;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method Account convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync Account(data) {\r\n\t\tconst accountItems = data.items;\r\n\t\tif (!accountItems.length > 0) {\r\n\t\t\treturn accountItems;\r\n\t\t}\r\n\r\n\t\tconst items = accountItems.map((item) => {\r\n\t\t\treturn {\r\n\t\t\t\ttarget: item.target,\r\n\t\t\t\tname: item.name || item.text\r\n\t\t\t};\r\n\t\t});\r\n\t\treturn items;\r\n\t}\r\n\r\n\r\n\r\n\r\n\t/**\r\n   * @public\r\n   * @method 'About Us' convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync 'About Us'(data) {\r\n\t\tconst aboutUsItems = data.items;\r\n\t\tif (!aboutUsItems.length > 0) {\r\n\t\t\treturn aboutUsItems;\r\n\t\t}\r\n\r\n\t\tconst items = aboutUsItems.map((item) => {\r\n\t\t\treturn {\r\n\t\t\t\ttarget: item.target,\r\n\t\t\t\tname: item.name || item.text\r\n\t\t\t};\r\n\t\t});\r\n\t\treturn items;\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n   * @public\r\n   * @method 'getTotalUserCount Us' convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync getTotalUserCount(data) {\r\n\t\treturn data;\r\n\t}\r\n\r\n\r\n\t/**\r\n   * @public\r\n   * @method addCoupon Us' convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync addCoupon(data) {\r\n\t\tif (data && data[0]) {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: 'ok',\r\n\t\t\t\t...data[0]\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn {};\r\n\t}\r\n\r\n\r\n\r\n\r\n\r\n}\r\n\r\nexport default Converter;\r\n","import { useEffect, useReducer } from 'react';\r\nimport Connector from '../lib/connector.js';\r\n\r\ntype TInitialData = any;\r\ntype Tdependecies = any[] | [];\r\ntype TItem = string;\r\ntype IFormat = string | undefined;\r\n\r\ntype Actions = {\r\n  type: string;\r\n  payload?: any;\r\n};\r\n\r\ninterface IState {\r\n  readonly isLoading: boolean;\r\n  readonly error: object;\r\n  readonly data: TInitialData;\r\n  readonly done: boolean;\r\n}\r\n\r\nconst connector = new Connector();\r\n\r\nconst dataFetchReducer = (state: IState, action: Actions) => {\r\n  switch (action.type) {\r\n    case 'FETCH_INIT':\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n        error: {\r\n          isError: false,\r\n          error: {},\r\n        },\r\n        done: false,\r\n      };\r\n    case 'FETCH_SUCCESS':\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        data: action.payload,\r\n        done: true,\r\n      };\r\n    case 'FETCH_FAILURE':\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        error: {\r\n          isError: true,\r\n          error: action.payload,\r\n          done: true,\r\n        },\r\n      };\r\n    default:\r\n      throw new Error();\r\n  }\r\n};\r\n\r\nconst useFetch = (\r\n  dependencies: Tdependecies = [],\r\n  initialData: TInitialData,\r\n  item: TItem,\r\n  options?: any,\r\n  format?: IFormat\r\n): IState => {\r\n  const initialState: IState = {\r\n    isLoading: false,\r\n    error: {\r\n      isError: false,\r\n      error: {},\r\n    },\r\n    data: initialData,\r\n    done: false,\r\n  };\r\n  const [state, dispatch] = useReducer(dataFetchReducer, initialState);\r\n\r\n  useEffect(() => {\r\n    let didCancel = false;\r\n    const fetchData = async () => {\r\n      dispatch({ type: 'FETCH_INIT' });\r\n      try {\r\n        // @ts-ignore\r\n        let data = await connector.request(item, format, options);\r\n        if (!didCancel) {\r\n          dispatch({ type: 'FETCH_SUCCESS', payload: data });\r\n        }\r\n      } catch (error) {\r\n        if (!didCancel) {\r\n          dispatch({ type: 'FETCH_FAILURE', payload: error });\r\n        }\r\n      }\r\n    };\r\n    fetchData();\r\n    return () => {\r\n      didCancel = true;\r\n    };\r\n  }, dependencies);\r\n\r\n  return state;\r\n};\r\n\r\nexport default useFetch;\r\n","import { useReducer } from 'react';\r\nimport Connector from '../lib/connector.js';\r\n\r\ntype TInitialData = any;\r\ntype TItem = string;\r\n\r\ntype Actions = {\r\n  type: string;\r\n  payload?: any;\r\n};\r\n\r\ninterface IState {\r\n  readonly isLoading: boolean;\r\n  readonly error: object;\r\n  readonly data: TInitialData;\r\n  readonly done: boolean;\r\n}\r\n\r\nconst connector = new Connector();\r\n\r\nconst dataFetchReducer = (state: IState, action: Actions) => {\r\n  switch (action.type) {\r\n    case 'FETCH_INIT':\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n        error: {\r\n          isError: false,\r\n          error: {},\r\n        },\r\n        done: false,\r\n      };\r\n    case 'FETCH_SUCCESS':\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        data: action.payload,\r\n        done: true,\r\n      };\r\n    case 'FETCH_FAILURE':\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        error: {\r\n          isError: true,\r\n          error: action.payload,\r\n        },\r\n        done: true,\r\n      };\r\n    default:\r\n      throw new Error();\r\n  }\r\n};\r\n\r\nconst useHandleFetch = (\r\n  initialData: TInitialData,\r\n  item: TItem,\r\n  format?: string\r\n): [IState, (values: any) => void] => {\r\n  const initialState: IState = {\r\n    isLoading: false,\r\n    error: {\r\n      isError: false,\r\n      error: {},\r\n    },\r\n    data: initialData,\r\n    done: false,\r\n  };\r\n\r\n  const [state, dispatch] = useReducer(dataFetchReducer, initialState);\r\n\r\n  const handlePost = async (options: any) => {\r\n    dispatch({ type: 'FETCH_INIT' });\r\n\r\n    try {\r\n      // @ts-ignore\r\n      let data = await connector.request(item, format || 'json', options);\r\n      dispatch({ type: 'FETCH_SUCCESS', payload: data });\r\n      return data;\r\n    } catch (error) {\r\n      dispatch({ type: 'FETCH_FAILURE', payload: error });\r\n      return initialData;\r\n    }\r\n  };\r\n\r\n  return [state, handlePost];\r\n};\r\n\r\nexport default useHandleFetch;\r\n","import React, { useState } from 'react';\r\nimport { Button } from 'antd';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n// import components\r\nimport Input from '../../../components/Field/Input';\r\nimport TextArea from '../../../components/Field/TextArea';\r\nimport { useHandleFetch } from '../../../hooks';\r\n\r\nconst validationSchema = Yup.object().shape({\r\n\tusername: Yup.string()\r\n\t\t.label('Username')\r\n\t\t.required('Username is required')\r\n\t\t.min(3, 'Username must have at least 3 characters'),\r\n\r\n\tpassword: Yup.string().label('Password').required('Password is required'),\r\n});\r\n\r\nconst initialValues = {\r\n\tusername: '',\r\n\tpassword: '',\r\n};\r\n\r\ninterface Props {\r\n\r\n}\r\n\r\nconst QuickEdit = ({ }: Props) => {\r\n\tconst [loginState, handleLoginFetch] = useHandleFetch({}, 'login');\r\n\r\n\tconst handleSubmit = async (values: any, actions: any) => {\r\n\t\tconst updateCategoryRes = await handleLoginFetch({\r\n\t\t\tbody: {\r\n\t\t\t\tusername: values.username,\r\n\t\t\t\tpassword: values.password,\r\n\t\t\t},\r\n\t\t});\r\n\r\n\t\tactions.setSubmitting(false);\r\n\t};\r\n\r\n\r\n\r\n\r\n\tconst getisSubmitButtonDisabled = (values, isValid) => {\r\n\t\tif (!values.username || !values.password || !isValid) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\treturn (\r\n\t\t<Formik\r\n\t\t\tonSubmit={(values, actions) => handleSubmit(values, actions)}\r\n\t\t\tvalidationSchema={validationSchema}\r\n\t\t\tvalidateOnBlur={false}\r\n\t\t\tenableReinitialize={true}\r\n\t\t\tinitialValues={\r\n\t\t\t\t{ ...initialValues }\r\n\t\t\t}\r\n\t\t>\r\n\t\t\t{({\r\n\t\t\t\thandleChange,\r\n\t\t\t\tvalues,\r\n\t\t\t\thandleSubmit,\r\n\t\t\t\terrors,\r\n\t\t\t\tisValid,\r\n\t\t\t\tisSubmitting,\r\n\t\t\t\ttouched,\r\n\t\t\t\thandleBlur,\r\n\t\t\t\tsetFieldTouched,\r\n\t\t\t\thandleReset,\r\n\t\t\t}) => (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\tmaxWidth: '400px',\r\n\t\t\t\t\t\t\tmargin: '20px'\r\n\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\tlabel='Username'\r\n\t\t\t\t\t\t\t\tvalue={values.username}\r\n\t\t\t\t\t\t\t\tname='username'\r\n\t\t\t\t\t\t\t\tisError={(touched.username && errors.username) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && loginState.error['error']['username'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.username && errors.username) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && loginState.error['error']['username'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('username');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\tlabel='Password'\r\n\t\t\t\t\t\t\t\tvalue={values.password}\r\n\t\t\t\t\t\t\t\tname='password'\r\n\t\t\t\t\t\t\t\tisError={(touched.password && errors.password) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && loginState.error['error']['password'])}\r\n\t\t\t\t\t\t\t\terrorString={(touched.password && errors.password) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && loginState.error['error']['password'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('password');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\ttype='primary'\r\n\t\t\t\t\t\t\t\tonClick={(e: any) => handleSubmit(e)}\r\n\t\t\t\t\t\t\t\tdisabled={getisSubmitButtonDisabled(values, isValid)}\r\n\t\t\t\t\t\t\t\tloading={isSubmitting}\r\n\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t// marginTop: '20px'\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\tLogin\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</>\r\n\t\t\t\t)}\r\n\t\t</Formik>\r\n\t);\r\n};\r\n\r\n\r\nexport default QuickEdit;\r\n","import Login from './Login';\r\nexport default Login;\r\n","import React, { useState } from 'react';\r\nimport { BrowserRouter as Router, Link, Switch, withRouter } from 'react-router-dom';\r\nimport { Layout, Menu, Upload, message } from 'antd';\r\n\r\n\r\nimport {\r\n    PieChartOutlined,\r\n    FileOutlined,\r\n    TeamOutlined,\r\n    TagOutlined,\r\n    BranchesOutlined,\r\n    GoldOutlined,\r\n    FilterOutlined,\r\n    TagsOutlined,\r\n    CarOutlined,\r\n    ShoppingCartOutlined,\r\n    MailOutlined,\r\n    SettingOutlined,\r\n    InboxOutlined,\r\n    SlidersOutlined,\r\n    DesktopOutlined,\r\n    RadarChartOutlined,\r\n    MessageOutlined,\r\n    UserOutlined,\r\n    FileAddOutlined,\r\n    FileSearchOutlined,\r\n    BgColorsOutlined,\r\n    BankOutlined,\r\n    FireOutlined\r\n} from '@ant-design/icons';\r\n\r\nconst { Header, Content, Footer, Sider } = Layout;\r\nconst { SubMenu } = Menu;\r\n\r\nconst SiderComponent = (props: any) => {\r\n    const [collapsed, setcollapsed] = useState(false);\r\n    const onCollapse = (collapsed: any) => {\r\n        // console.log(collapsed);\r\n        setcollapsed(collapsed);\r\n    };\r\n\r\n\r\n\r\n    return (\r\n        <Sider\r\n            width={260}\r\n            style={{\r\n                boxShadow: '7px 0 60px rgba(0,0,0,.05)',\r\n                border: 'none'\r\n            }}\r\n            collapsible collapsed={collapsed} onCollapse={onCollapse} theme='light'>\r\n\r\n            <Menu selectable={true} mode='inline'>\r\n                <Menu.Item key='1' icon={<PieChartOutlined />}>\r\n                    <Link to='/admin'>Dashboard</Link>\r\n                </Menu.Item>\r\n\r\n                {/* <SubMenu key='sub1' icon={<TagOutlined />} title='Category'>\r\n\t\t\t\t\t<Menu.Item key='2'>\r\n\t\t\t\t\t\t<Link to='/category'>List Categories</Link>\r\n\t\t\t\t\t</Menu.Item>\r\n\t\t\t\t</SubMenu> */}\r\n\r\n                {/* <SubMenu key='sub2' icon={<BranchesOutlined />} title='Brand'>\r\n\r\n\t\t\t\t\t<Menu.Item key='5'>\r\n\t\t\t\t\t\t<Link to='/brand'>List Brand</Link>\r\n\t\t\t\t\t</Menu.Item>\r\n\t\t\t\t</SubMenu> */}\r\n\r\n                <SubMenu\r\n                    key='sub3'\r\n                    icon={<GoldOutlined />}\r\n                    title='Product'\r\n                // onTitleClick={() => props.history.push('/product')}\r\n                >\r\n                    <Menu.Item\r\n                        icon={<RadarChartOutlined />}\r\n                        key='6'>\r\n                        <Link to='/admin/product'>Products</Link>\r\n                    </Menu.Item>\r\n\r\n                    <Menu.Item\r\n                        icon={<BankOutlined />}\r\n                        key='2222'>\r\n                        <Link to='/admin/bundle'>Bundle</Link>\r\n                    </Menu.Item>\r\n\r\n                    <Menu.Item key='9' icon={<TagsOutlined />}>\r\n                        <Link to='/admin/tag'>Tags</Link>\r\n\r\n                    </Menu.Item>\r\n\r\n                    <Menu.Item key='2' icon={<TagOutlined />}>\r\n                        <Link to='/admin/category'>Categories</Link>\r\n                    </Menu.Item>\r\n\r\n                    <Menu.Item key='5' icon={<BranchesOutlined />}>\r\n                        <Link to='/admin/brand'>Brand</Link>\r\n                    </Menu.Item>\r\n\r\n                </SubMenu>\r\n\r\n                {/* <Menu.Item key='9' icon={<TagsOutlined />}>\r\n\t\t\t\t\t<Link to='/tag'>Tags</Link>\r\n\t\t\t\t</Menu.Item> */}\r\n\r\n                <Menu.Item key='1011' icon={<FireOutlined />}>\r\n                    <Link to='/admin/coupon'>Coupon</Link>\r\n                </Menu.Item>\r\n\r\n                <Menu.Item key='10' icon={<CarOutlined />}>\r\n                    <Link to='/admin/delivery'>Delivery</Link>\r\n                </Menu.Item>\r\n\r\n                <SubMenu key='sub4' icon={<ShoppingCartOutlined />} title='Orders'>\r\n                    <Menu.Item key='11'>\r\n                        <Link to='/admin/order'>List Orders</Link>\r\n                    </Menu.Item>\r\n                    <Menu.Item key='12'>\r\n                        <Link to='/admin/order/new'>Add Order</Link>\r\n                    </Menu.Item>\r\n                </SubMenu>\r\n\r\n                <Menu.Item key='13' icon={<TeamOutlined />}>\r\n                    <Link to='/admin/customer'>Customer</Link>\r\n                </Menu.Item>\r\n\r\n                <SubMenu key='sub5' icon={<MailOutlined />} title='Email'>\r\n                    <Menu.Item key='14'>STMP Configuration</Menu.Item>\r\n                    <Menu.Item key='15'>Auto emails</Menu.Item>\r\n                    <Menu.Item key='16'>Compose Email</Menu.Item>\r\n                    <Menu.Item key='177'>Sent emails</Menu.Item>\r\n                </SubMenu>\r\n\r\n                <Menu.Item key='199' icon={<MessageOutlined />}>\r\n                    <Link to='/admin/sms'>SMS</Link>\r\n                </Menu.Item>\r\n\r\n                <SubMenu key='sub6' icon={<FileOutlined />} title='Pages'>\r\n                    <Menu.Item key='18'\r\n                        icon={<FileSearchOutlined />}\r\n                    >\r\n                        <Link to='/admin/page'> List Pages</Link>\r\n                    </Menu.Item>\r\n                    <Menu.Item\r\n                        icon={<FileAddOutlined />}\r\n                        key='17'>\r\n                        <Link to='/admin/page/new'> Add new Page</Link>\r\n                    </Menu.Item>\r\n\r\n                </SubMenu>\r\n\r\n                <Menu.Item key='23'\r\n                    icon={<SlidersOutlined />}\r\n                >\r\n                    <Link to='/admin/settings/components'>Components</Link>\r\n                </Menu.Item>\r\n\r\n                <SubMenu key='sub7' icon={<SettingOutlined />} title='Settings'>\r\n                    <Menu.Item\r\n                        icon={<UserOutlined />}\r\n                        key='19'>\r\n                        <Link to='/admin/settings/siteInfo'>Site information</Link>\r\n                    </Menu.Item>\r\n                    <Menu.Item\r\n                        icon={<BgColorsOutlined />}\r\n                        key='20'>\r\n                        <Link to='/admin/settings/themes'>Themes</Link>\r\n                    </Menu.Item>\r\n\r\n                    {/* <Menu.Item key='21'>\r\n\t\t\t\t\t\t<Link to='/settings/image'>Image</Link>\r\n\t\t\t\t\t</Menu.Item> */}\r\n                    {/* <Menu.Item key='22'>\r\n                        <Link to='/admin/settings/invoice'>Invoice</Link>\r\n                    </Menu.Item> */}\r\n\r\n                </SubMenu>\r\n            </Menu>\r\n        </Sider>\r\n    );\r\n};\r\n\r\nexport default withRouter(SiderComponent);\r\n","import Sider from \"./Sider\";\r\nexport default Sider; ","import Empty from \"./Empty\";\r\nexport default Empty; ","import React from 'react'\r\nimport { Empty } from 'antd';\r\n\r\n\r\ninterface Props {\r\n    title?: string;\r\n    height?: number\r\n}\r\n\r\nconst EmptyComponent = ({\r\n    title = 'No Data found',\r\n    height = 300\r\n}: Props) => {\r\n    return (\r\n        <div style={{\r\n            height: height,\r\n            display: 'flex',\r\n            justifyContent: 'center',\r\n            alignItems: 'center'\r\n        }}>\r\n            <Empty description={title} image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EmptyComponent\r\n","import React, { useEffect } from 'react';\r\n\r\n\r\n// import hooks \r\nimport { useHandleFetch } from \"../../hooks\";\r\n\r\n// import components\r\n// import { openSuccessNotification, openErrorNotification } from \"../../components/Notification\";\r\nimport Empty from \"../../components/Empty\";\r\n\r\n// import libraries \r\nimport { useHistory } from \"react-router\";\r\nimport { LogoutOutlined, BellOutlined, OrderedListOutlined, TwitterSquareFilled } from '@ant-design/icons';\r\nimport { Layout, Badge, Dropdown, Menu, Spin } from 'antd';\r\nimport Moment from 'react-moment';\r\nimport moment from 'moment';\r\n\r\nconst { Header } = Layout;\r\n\r\n// import styles\r\n\r\n\r\n\r\n\r\ninterface Props {\r\n\r\n}\r\n\r\nconst HeaderComponent = (props: Props) => {\r\n    const history = useHistory();\r\n\r\n    const [getAllNotificationState, handleGetAllNOticationFetch] = useHandleFetch({}, 'getAllNotification');\r\n\r\n\r\n    const handleMenuClick = (e) => {\r\n        if (e.key === '3') {\r\n        }\r\n    };\r\n\r\n\r\n    useEffect(() => {\r\n        const getAllNotification = async () => {\r\n            await handleGetAllNOticationFetch({});\r\n        }\r\n\r\n        getAllNotification();\r\n    }, [])\r\n\r\n\r\n    const getNotificationCreationTime = (time: any) => {\r\n        console.log(time);\r\n        // return <Moment fromNow={true}></Moment>\r\n        return time;\r\n    }\r\n    const menu = () => {\r\n\r\n        if (getAllNotificationState.isLoading) return (\r\n            <Menu>\r\n                <div style={{\r\n                    padding: '0 30px'\r\n                }}>\r\n                    <Spin />\r\n                </div>\r\n\r\n            </Menu>\r\n        );\r\n\r\n\r\n\r\n        if (getAllNotificationState.done && getAllNotificationState.data && !getAllNotificationState.data[0]) {\r\n            return (\r\n                <Menu>\r\n                    <div style={{\r\n                        padding: '0 30px'\r\n                    }}>\r\n                        <Empty title='No Notification found' />\r\n                    </div>\r\n\r\n                </Menu>\r\n            )\r\n\r\n\r\n        }\r\n        return (\r\n            <Menu\r\n                style={{\r\n                    maxHeight: '450px',\r\n                    overflowY: 'scroll'\r\n                }}\r\n\r\n\r\n                onClick={handleMenuClick}>\r\n                {getAllNotificationState.done && getAllNotificationState.data[0] && getAllNotificationState.data.map(item => {\r\n                    return (\r\n                        <Menu.Item\r\n                            // style={{\r\n                            //     padding: 0,\r\n                            //     margin: 0\r\n                            // }}\r\n                            key=\"1\">\r\n\r\n                            <div className='notificationItem'>\r\n                                <span className='notificationItem-icon'>\r\n                                    <OrderedListOutlined />\r\n                                </span>\r\n                                <div className='notificationItem-info'>\r\n                                    <h3>\r\n                                        {item.heading}\r\n                                    </h3>\r\n                                    <h4>\r\n                                        {item.text}\r\n                                    </h4>\r\n                                    <h2>\r\n\r\n                                        {getNotificationCreationTime(item.added)}\r\n                                    </h2>\r\n                                </div>\r\n                            </div>\r\n                        </Menu.Item>\r\n                    )\r\n                })}\r\n\r\n            </Menu>\r\n        )\r\n\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <Header\r\n            style={{\r\n                background: '#fff',\r\n                height: '60px',\r\n                display: 'flex',\r\n                justifyContent: 'space-between',\r\n                boxShadow: '0 0.46875rem 2.1875rem rgba(8,10,37,.01), 0 0.9375rem 1.40625rem rgba(8,10,37,.01), 0 0.25rem 0.53125rem rgba(8,10,37,.02), 0 0.125rem 0.1875rem rgba(8,10,37,.01)',\r\n                zIndex: 10,\r\n                transition: ' all .2s',\r\n                alignItems: 'center',\r\n                alignContent: 'center'\r\n            }}\r\n        >\r\n            <h2\r\n\r\n                onClick={() => history.push('/admin')}\r\n                style={{\r\n                    color: '#0072EA', marginTop: '10px', marginLeft: '-20px',\r\n                    cursor: 'pointer'\r\n\r\n                }}\r\n            >\r\n                Admin\r\n            </h2>\r\n\r\n            <div\r\n                style={{\r\n                    marginRight: '-28px'\r\n                }}>\r\n\r\n\r\n                <Dropdown\r\n                    placement=\"bottomLeft\"\r\n\r\n                    overlay={menu}\r\n                // visible={this.state.visible}\r\n                >\r\n                    <a\r\n                        style={{\r\n                            marginRight: '10px'\r\n                        }}\r\n                        href='###' className='notificationIconContainer'>\r\n\r\n                        <Badge\r\n                            overflowCount={100}\r\n                            // @ts-ignore\r\n                            showZero={TwitterSquareFilled}\r\n                            count={getAllNotificationState.done && !getAllNotificationState.data ? 0 : getAllNotificationState.data.length ? getAllNotificationState.data.length : 0}\r\n                        >\r\n                            <span style={{\r\n                                marginLeft: '10px',\r\n                                fontWeight: 600,\r\n                                borderRadius: '25px',\r\n                                color: '#1890ff',\r\n                                padding: '2px 20px',\r\n                                cursor: 'pointer',\r\n                                marginRight: '-5px'\r\n                            }}>\r\n                                <BellOutlined />\r\n\r\n                            </span>\r\n                        </Badge>\r\n                    </a>\r\n                </Dropdown>\r\n\r\n\r\n\r\n\r\n                <a href='/admin/auth/logout'>\r\n                    <span style={{\r\n                        marginLeft: '10px',\r\n                        fontWeight: 600,\r\n                        borderRadius: '25px',\r\n                        color: '#1890ff',\r\n                        padding: '2px 20px',\r\n                        cursor: 'pointer'\r\n                    }}>\r\n                        <LogoutOutlined />\r\n                        <span style={{\r\n                            marginLeft: '10px',\r\n\r\n                        }}>\r\n                            logout\r\n                    </span>\r\n                    </span>\r\n                </a>\r\n\r\n            </div>\r\n        </Header>\r\n    )\r\n}\r\n\r\nexport default HeaderComponent;\r\n","import Header from \"./Header\";\r\nexport default Header; ","import React, { useState, useEffect } from 'react'\r\n\r\n\r\n\r\n// import libraries \r\nimport {\r\n    ResponsiveContainer,\r\n    AreaChart,\r\n    CartesianGrid,\r\n    XAxis,\r\n    YAxis,\r\n    Tooltip,\r\n    Legend,\r\n    Area,\r\n    Line\r\n} from \"recharts\";\r\n\r\nimport {\r\n    DeleteOutlined,\r\n    FileAddOutlined,\r\n    CheckCircleOutlined,\r\n    FileImageFilled,\r\n    FileImageOutlined,\r\n    FileImageTwoTone,\r\n    PlusOutlined,\r\n    PlusCircleOutlined,\r\n    CloseOutlined,\r\n    CheckOutlined,\r\n    InfoCircleOutlined,\r\n    UserOutlined,\r\n    CalendarOutlined,\r\n    GoldOutlined,\r\n    ShoppingCartOutlined,\r\n    TagOutlined\r\n} from '@ant-design/icons';\r\n\r\n\r\nimport { Select, Button, Spin } from 'antd';\r\n\r\nconst { Option } = Select;\r\n\r\n\r\n\r\n\r\nexport const RAINFALL = {\r\n    \"2018\": [\r\n        {\r\n            month: 1,\r\n            rainfall: 65.4\r\n        },\r\n        {\r\n            month: 2,\r\n            rainfall: 1.6\r\n        },\r\n        {\r\n            month: 3,\r\n            rainfall: 23\r\n        },\r\n        {\r\n            month: 4,\r\n            rainfall: 16.4\r\n        },\r\n        {\r\n            month: 5,\r\n            rainfall: 65.6\r\n        },\r\n        {\r\n            month: 6,\r\n            rainfall: 43.2\r\n        },\r\n        {\r\n            month: 7,\r\n            rainfall: 19.4\r\n        },\r\n        {\r\n            month: 8,\r\n            rainfall: 42.8\r\n        },\r\n        {\r\n            month: 9,\r\n            rainfall: 16.4\r\n        },\r\n        {\r\n            month: 11,\r\n            rainfall: 97.8\r\n        },\r\n        {\r\n            month: 12,\r\n            rainfall: 104.8\r\n        }\r\n    ],\r\n    \"2019\": [\r\n        {\r\n            month: 1,\r\n            rainfall: 11.2\r\n        },\r\n        {\r\n            month: 2,\r\n            rainfall: 18.6\r\n        },\r\n        {\r\n            month: 3,\r\n            rainfall: 12\r\n        },\r\n        {\r\n            month: 4,\r\n            rainfall: 7.2\r\n        },\r\n        {\r\n            month: 5,\r\n            rainfall: 53.4\r\n        },\r\n        {\r\n            month: 6,\r\n            rainfall: 49.8\r\n        },\r\n        {\r\n            month: 7,\r\n            rainfall: 45.2\r\n        },\r\n        {\r\n            month: 8,\r\n            rainfall: 51.4\r\n        },\r\n        {\r\n            month: 9,\r\n            rainfall: 41\r\n        },\r\n        {\r\n            month: 10,\r\n            rainfall: 24\r\n        },\r\n        {\r\n            month: 11,\r\n            rainfall: 54.4\r\n        },\r\n        {\r\n            month: 12,\r\n            rainfall: 6.2\r\n        }\r\n    ]\r\n};\r\n\r\nconst MONTHS = [\r\n    \"Jan\",\r\n    \"Feb\",\r\n    \"Mar\",\r\n    \"Apr\",\r\n    \"May\",\r\n    \"Jun\",\r\n    \"Jul\",\r\n    \"Aug\",\r\n    \"Sep\",\r\n    \"Oct\",\r\n    \"Nov\",\r\n    \"Dec\"\r\n];\r\n\r\nexport const getMonthNameByOrder = (order: number): string | undefined =>\r\n    MONTHS[order - 1];\r\n\r\n\r\n\r\n\r\n\r\nexport const TooltipContainerStyles = {\r\n    border: 0,\r\n    borderRadius: \"8px\",\r\n    fontSize: 14,\r\n    boxShadow: \"2px 2px 5px 3px rgba(0,0,0,0.15)\"\r\n};\r\n\r\n\r\n\r\n\r\ninterface Props {\r\n\r\n}\r\n\r\nconst localOptions = [\r\n    {\r\n        value: 'category',\r\n        name: 'Category'\r\n    }, {\r\n        value: 'product',\r\n        name: 'Product'\r\n    }\r\n\r\n]\r\n\r\nconst ApiVisits = (props: Props) => {\r\n    const [options, setoptions] = useState(localOptions);\r\n    const [selectedApiValue, setSelectedApiValue] = useState('');\r\n\r\n\r\n\r\n\r\n    const onChange = (value) => {\r\n        setSelectedApiValue(value);\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div className='overviewContainer__body-apiVisits'>\r\n            <div className='overviewContainer__body-apiVisits-header'>\r\n                <div className='overviewContainer__body-apiVisits-header-info'>\r\n                    <h2>\r\n                        Product Visits\r\n                        </h2>\r\n                    <h3>\r\n                        All Products that were visited\r\n                        </h3>\r\n                </div>\r\n                <div className='overviewContainer__body-apiVisits-header-controller'>\r\n                    <Select\r\n                        bordered={false}\r\n                        showSearch\r\n                        style={{ width: '130px', borderRadius: '6px', color: '#1890ff' }}\r\n                        placeholder='Select an api'\r\n                        optionFilterProp='children'\r\n                        onChange={onChange}\r\n                        defaultValue={'product'}\r\n                        filterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n                    >\r\n                        {\r\n                            options.map((option) => {\r\n                                return <Option value={option.value}>{option.name}</Option>;\r\n                            })}\r\n                    </Select>\r\n                </div>\r\n            </div>\r\n\r\n            <div className='overviewContainer__body-body'>\r\n                <ResponsiveContainer width=\"100%\" height={300}>\r\n                    <AreaChart data={RAINFALL[\"2019\"]} fontSize={12}>\r\n                        <defs>\r\n                            <linearGradient id=\"rainGradient\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\r\n                                <stop offset=\"0%\" stopColor=\"#1890ff\" />\r\n                                <stop offset=\"100%\" stopColor=\"#3066BE22\" />\r\n                            </linearGradient>\r\n                        </defs>\r\n                        <CartesianGrid\r\n                            vertical={false}\r\n                            strokeDasharray=\"3 3\"\r\n                            stroke=\"#d6d9da\"\r\n                        />\r\n                        <XAxis dataKey=\"month\" tickFormatter={getMonthNameByOrder} />\r\n                        <YAxis\r\n                            // unit=\"ml\"\r\n                            orientation=\"left\"\r\n                            width={20}\r\n                            axisLine={false}\r\n                            tickLine={false}\r\n                        />\r\n                        <Tooltip\r\n                            cursor={false}\r\n                            contentStyle={TooltipContainerStyles}\r\n                            formatter={(value, name) => [`${value}%`, `Device - ${name}`]}\r\n                        />\r\n                        <Area\r\n                            dataKey=\"rainfall\"\r\n                            name=\"Rainfall\"\r\n                            unit=\"ml\"\r\n                            type=\"basis\"\r\n                            fill=\"url(#rainGradient)\"\r\n                        />\r\n                    </AreaChart>\r\n                </ResponsiveContainer>\r\n\r\n\r\n            </div>\r\n            <div className=\"overviewContainer__body-footer\">\r\n                <h3>\r\n                    <span>\r\n                        <CalendarOutlined />\r\n                    </span>\r\n\r\n\t\t\t\t\t\t\t\tIn the last month\r\n\t\t\t\t\t     </h3>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ApiVisits\r\n","import React, { useState, useEffect } from 'react'\r\n\r\n\r\n\r\n\r\n// import lib \r\n\r\nimport { ResponsiveContainer, PieChart, Tooltip, Pie, Cell } from \"recharts\";\r\n\r\n\r\nimport {\r\n    DeleteOutlined,\r\n    FileAddOutlined,\r\n    CheckCircleOutlined,\r\n    FileImageFilled,\r\n    FileImageOutlined,\r\n    FileImageTwoTone,\r\n    PlusOutlined,\r\n    PlusCircleOutlined,\r\n    CloseOutlined,\r\n    CheckOutlined,\r\n    InfoCircleOutlined,\r\n    UserOutlined,\r\n    CalendarOutlined,\r\n    GoldOutlined,\r\n    ShoppingCartOutlined,\r\n    TagOutlined\r\n} from '@ant-design/icons';\r\n\r\nimport { Select, Button, Spin } from 'antd';\r\n\r\nconst { Option } = Select;\r\n\r\n\r\n\r\n\r\ninterface Props {\r\n\r\n}\r\n\r\nconst localOptions = [\r\n    {\r\n        value: 'all',\r\n        name: 'All'\r\n    },\r\n    {\r\n        value: 'Chrome',\r\n        name: 'chrome'\r\n    }, {\r\n        value: 'Firefox',\r\n        name: 'firefox'\r\n    },\r\n    {\r\n        value: 'Operamini',\r\n        name: 'operamini'\r\n    }\r\n\r\n];\r\n\r\n\r\nexport const AGE_GROUP = [\r\n    {\r\n        device: \"18-24\",\r\n        percentage: 14\r\n    },\r\n    {\r\n        device: \"25-34\",\r\n        percentage: 24\r\n    },\r\n    {\r\n        device: \"35-44\",\r\n        percentage: 22\r\n    },\r\n    {\r\n        device: \"45-54\",\r\n        percentage: 18\r\n    },\r\n    {\r\n        device: \"55-64\",\r\n        percentage: 16\r\n    },\r\n    {\r\n        device: \"65+\",\r\n        percentage: 6\r\n    }\r\n];\r\n\r\nexport const COLORS = [\r\n    '#1890ff',\r\n    '#20A39E',\r\n    '#61D095',\r\n    '#FFBA49',\r\n    '#EF5B5B',\r\n    '#A4036F',\r\n];\r\n\r\n\r\n\r\n\r\nexport const TooltipContainerStyles = {\r\n    border: 0,\r\n    borderRadius: \"8px\",\r\n    fontSize: 14,\r\n    boxShadow: \"2px 2px 5px 3px rgba(0,0,0,0.15)\"\r\n};\r\n\r\n\r\n\r\n\r\nconst PlatformVisits = (props: Props) => {\r\n    const [options, setoptions] = useState(localOptions);\r\n    const [selectedApiValue, setSelectedApiValue] = useState('');\r\n\r\n\r\n\r\n\r\n    const onChange = (value) => {\r\n        setSelectedApiValue(value);\r\n    }\r\n\r\n    const RADIAN = Math.PI / 180;\r\n\r\n\r\n    const renderCustomizedLabel = ({\r\n        cx,\r\n        cy,\r\n        midAngle,\r\n        innerRadius,\r\n        outerRadius,\r\n        percent,\r\n        index\r\n    }) => {\r\n        const radius = innerRadius + (outerRadius - innerRadius) * 0.5;\r\n        const x = cx + radius * Math.cos(-midAngle * RADIAN) - 10;\r\n        const y = cy + radius * Math.sin(-midAngle * RADIAN);\r\n\r\n        return (\r\n            <text x={x} y={y} fill=\"white\" fontSize={12} dominantBaseline=\"central\">\r\n                {`${(percent * 100).toFixed(0)}%`}\r\n            </text>\r\n        );\r\n    };\r\n\r\n\r\n\r\n    return (\r\n        <div className='overviewContainer__body-platformVisits'>\r\n            <div className='overviewContainer__body-platformVisits-header'>\r\n                <div className='overviewContainer__body-platformVisits-header-info'>\r\n                    <h2>\r\n                        Chrome\r\n                        </h2>\r\n                    <h3>\r\n                        On Chorme visited\r\n                        </h3>\r\n                </div>\r\n                <div className='overviewContainer__body-platformVisits-header-controller'>\r\n                    <Select\r\n                        bordered={false}\r\n                        showSearch\r\n                        style={{ width: '130px', borderRadius: '6px', color: '#1890ff' }}\r\n                        placeholder='Select an Device'\r\n                        optionFilterProp='children'\r\n                        onChange={onChange}\r\n                        defaultValue={'all'}\r\n                        filterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n                    >\r\n                        {\r\n                            options.map((option) => {\r\n                                return <Option value={option.value}>{option.name}</Option>;\r\n                            })}\r\n                    </Select>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"overviewContainer__body-body\">\r\n\r\n                <ResponsiveContainer width=\"100%\" height={300}>\r\n                    <PieChart fontSize={14}>\r\n                        <Tooltip\r\n                            cursor={false}\r\n                            contentStyle={TooltipContainerStyles}\r\n                            formatter={(value, name) => [`${value}%`, `Device - ${name}`]}\r\n                        />\r\n\r\n                        <Pie\r\n                            dataKey=\"percentage\"\r\n                            data={AGE_GROUP}\r\n                            outerRadius={100}\r\n                            innerRadius={40}\r\n                            name=\"Percentage\"\r\n                            nameKey=\"age\"\r\n                            unit=\"%\"\r\n                            label={renderCustomizedLabel}\r\n                            labelLine={false}\r\n                        >\r\n                            {AGE_GROUP.map((entry, index) => (\r\n                                <Cell\r\n                                    key={`cell-${index}`}\r\n                                    fill={COLORS[index % COLORS.length]}\r\n                                />\r\n                            ))}\r\n                        </Pie>\r\n                    </PieChart>\r\n                </ResponsiveContainer>\r\n            </div>\r\n\r\n            <div className=\"overviewContainer__body-footer\">\r\n                <h3>\r\n                    <span>\r\n                        <CalendarOutlined />\r\n                    </span>\r\n\r\n\t\t\t\t\t\t\t\tIn the last month\r\n\t\t\t\t\t     </h3>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PlatformVisits\r\n","import React, { useEffect, useState } from 'react';\r\n\r\n// import components \r\nimport ApiVisits from \"./ApiVisits\";\r\nimport PlatformVisits from \"./PlatformVisits\";\r\n\r\n// import lib \r\nimport { message, Tooltip, Modal, Tabs, Empty, Badge } from 'antd';\r\n\r\nimport {\r\n\tDeleteOutlined,\r\n\tFileAddOutlined,\r\n\tCheckCircleOutlined,\r\n\tFileImageFilled,\r\n\tFileImageOutlined,\r\n\tFileImageTwoTone,\r\n\tPlusOutlined,\r\n\tPlusCircleOutlined,\r\n\tCloseOutlined,\r\n\tCheckOutlined,\r\n\tInfoCircleOutlined,\r\n\tUserOutlined,\r\n\tCalendarOutlined,\r\n\tGoldOutlined,\r\n\tShoppingCartOutlined,\r\n\tTagOutlined\r\n} from '@ant-design/icons';\r\n\r\n// import hooks\r\nimport { useHandleFetch } from \"../../hooks\";\r\n\r\n\r\ninterface Props { }\r\n\r\nconst Overview = (props: Props) => {\r\n\tconst [totalUserCountState, handleGetTotalUserCountFetch] = useHandleFetch({}, 'addProduct');\r\n\r\n\tuseEffect(() => {\r\n\r\n\t\tconst getTotalUserCount = async () => {\r\n\t\t\tawait handleGetTotalUserCountFetch({});\r\n\t\t}\r\n\r\n\t\tgetTotalUserCount();\r\n\t}, []);\r\n\r\n\r\n\r\n\r\n\treturn (\r\n\t\t<div className='overviewContainer'>\r\n\t\t\t<div className=\"overviewContainer__header\">\r\n\t\t\t\t<div className=\"overviewContainer__header-card\">\r\n\t\t\t\t\t<div className=\"overviewContainer__header-card-body\">\r\n\t\t\t\t\t\t<div className='overviewContainer__header-card-body-iconbox'>\r\n\t\t\t\t\t\t\t<UserOutlined />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className='overviewContainer__header-card-body-info'>\r\n\t\t\t\t\t\t\t<h3>\r\n\t\t\t\t\t\t\t\t+ Users\r\n\t\t\t\t\t\t\t</h3>\r\n\t\t\t\t\t\t\t<h2>\r\n\t\t\t\t\t\t\t\t8503\r\n\t\t\t\t\t\t\t</h2>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"overviewContainer__header-card-footer\">\r\n\t\t\t\t\t\t<h3>\r\n\t\t\t\t\t\t\t<span>\r\n\t\t\t\t\t\t\t\t<CalendarOutlined />\r\n\t\t\t\t\t\t\t</span>\r\n\r\n\t\t\t\t\t\t\t\tIn the last month\r\n\t\t\t\t\t     </h3>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div className=\"overviewContainer__header-card\">\r\n\t\t\t\t\t<div className=\"overviewContainer__header-card-body\">\r\n\t\t\t\t\t\t<div className='overviewContainer__header-card-body-iconbox'>\r\n\t\t\t\t\t\t\t<ShoppingCartOutlined />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className='overviewContainer__header-card-body-info'>\r\n\t\t\t\t\t\t\t<h3>\r\n\t\t\t\t\t\t\t\t+ Orders\r\n\t\t\t\t\t\t\t</h3>\r\n\t\t\t\t\t\t\t<h2>\r\n\t\t\t\t\t\t\t\t8503\r\n\t\t\t\t\t\t\t</h2>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"overviewContainer__header-card-footer\">\r\n\t\t\t\t\t\t<h3>\r\n\t\t\t\t\t\t\t<span>\r\n\t\t\t\t\t\t\t\t<CalendarOutlined />\r\n\t\t\t\t\t\t\t</span>\r\n\r\n\t\t\t\t\t\t\t\tIn the last month\r\n\t\t\t\t\t     </h3>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div className=\"overviewContainer__header-card\">\r\n\t\t\t\t\t<div className=\"overviewContainer__header-card-body\">\r\n\t\t\t\t\t\t<div className='overviewContainer__header-card-body-iconbox'>\r\n\t\t\t\t\t\t\t<GoldOutlined />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className='overviewContainer__header-card-body-info'>\r\n\t\t\t\t\t\t\t<h3>\r\n\t\t\t\t\t\t\t\t+ Product visits\r\n\t\t\t\t\t\t\t</h3>\r\n\t\t\t\t\t\t\t<h2>\r\n\t\t\t\t\t\t\t\t8503\r\n\t\t\t\t\t\t\t</h2>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"overviewContainer__header-card-footer\">\r\n\t\t\t\t\t\t<h3>\r\n\t\t\t\t\t\t\t<span>\r\n\t\t\t\t\t\t\t\t<CalendarOutlined />\r\n\t\t\t\t\t\t\t</span>\r\n\r\n\t\t\t\t\t\t\t\tIn the last month\r\n\t\t\t\t\t     </h3>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div className=\"overviewContainer__header-card\">\r\n\t\t\t\t\t<div className=\"overviewContainer__header-card-body\">\r\n\t\t\t\t\t\t<div className='overviewContainer__header-card-body-iconbox'>\r\n\t\t\t\t\t\t\t<TagOutlined />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className='overviewContainer__header-card-body-info'>\r\n\t\t\t\t\t\t\t<h3>\r\n\t\t\t\t\t\t\t\t+ Category Products\r\n\t\t\t\t\t\t\t</h3>\r\n\t\t\t\t\t\t\t<h2>\r\n\t\t\t\t\t\t\t\t8503\r\n\t\t\t\t\t\t\t</h2>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"overviewContainer__header-card-footer\">\r\n\t\t\t\t\t\t<h3>\r\n\t\t\t\t\t\t\t<span>\r\n\t\t\t\t\t\t\t\t<CalendarOutlined />\r\n\t\t\t\t\t\t\t</span>\r\n\r\n\t\t\t\t\t\t\t\tIn the last month\r\n\t\t\t\t\t     </h3>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t</div>\r\n\r\n\r\n\t\t\t</div>\r\n\r\n\r\n\t\t\t<div className=\"overviewContainer__body\">\r\n\t\t\t\t<ApiVisits />\r\n\t\t\t\t<PlatformVisits />\r\n\t\t\t</div>\r\n\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Overview;\r\n","import React from 'react';\r\nimport ContentLoader from 'react-content-loader';\r\n\r\nconst DataTable = (props: any) => (\r\n\t<ContentLoader\r\n\t\tspeed={0.5}\r\n\t\twidth={1300}\r\n\t\theight={400}\r\n\t\tviewBox='0 0 1300 400'\r\n\t\tbackgroundColor='#f3f3f3'\r\n\t\tforegroundColor='#ecebeb'\r\n\t\t{...props}\r\n\t>\r\n\t\t<rect x='27' y='139' rx='4' ry='4' width='20' height='20' />\r\n\t\t<rect x='67' y='140' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='188' y='141' rx='10' ry='10' width='169' height='19' />\r\n\t\t<rect x='402' y='140' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='523' y='141' rx='10' ry='10' width='169' height='19' />\r\n\t\t<rect x='731' y='139' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='852' y='138' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='1424' y='137' rx='10' ry='10' width='68' height='19' />\r\n\t\t<rect x='26' y='196' rx='4' ry='4' width='20' height='20' />\r\n\t\t<rect x='66' y='197' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='187' y='198' rx='10' ry='10' width='169' height='19' />\r\n\t\t<rect x='401' y='197' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='522' y='198' rx='10' ry='10' width='169' height='19' />\r\n\t\t<rect x='730' y='196' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='851' y='195' rx='10' ry='10' width='85' height='19' />\r\n\t\t<circle cx='1456' cy='203' r='12' />\r\n\t\t<rect x='26' y='258' rx='4' ry='4' width='20' height='20' />\r\n\t\t<rect x='66' y='259' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='187' y='260' rx='10' ry='10' width='169' height='19' />\r\n\t\t<rect x='401' y='259' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='522' y='260' rx='10' ry='10' width='169' height='19' />\r\n\t\t<rect x='730' y='258' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='851' y='257' rx='10' ry='10' width='85' height='19' />\r\n\t\t<circle cx='1456' cy='265' r='12' />\r\n\t\t<rect x='26' y='316' rx='4' ry='4' width='20' height='20' />\r\n\t\t<rect x='66' y='317' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='187' y='318' rx='10' ry='10' width='169' height='19' />\r\n\t\t<rect x='401' y='317' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='522' y='318' rx='10' ry='10' width='169' height='19' />\r\n\t\t<rect x='730' y='316' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='851' y='315' rx='10' ry='10' width='85' height='19' />\r\n\t\t<circle cx='1456' cy='323' r='12' />\r\n\t\t<rect x='26' y='379' rx='4' ry='4' width='20' height='20' />\r\n\t\t<rect x='66' y='380' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='187' y='381' rx='10' ry='10' width='169' height='19' />\r\n\t\t<rect x='401' y='380' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='522' y='381' rx='10' ry='10' width='169' height='19' />\r\n\t\t<rect x='730' y='379' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='851' y='378' rx='10' ry='10' width='85' height='19' />\r\n\t\t<circle cx='1456' cy='386' r='12' />\r\n\t\t<rect x='978' y='138' rx='10' ry='10' width='169' height='19' />\r\n\t\t<rect x='977' y='195' rx='10' ry='10' width='169' height='19' />\r\n\t\t<rect x='977' y='257' rx='10' ry='10' width='169' height='19' />\r\n\t\t<rect x='977' y='315' rx='10' ry='10' width='169' height='19' />\r\n\t\t<rect x='977' y='378' rx='10' ry='10' width='169' height='19' />\r\n\t\t<rect x='1183' y='139' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='1182' y='196' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='1182' y='258' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='1182' y='316' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='1182' y='379' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='1305' y='137' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='1304' y='194' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='1304' y='256' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='1304' y='314' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='1304' y='377' rx='10' ry='10' width='85' height='19' />\r\n\t\t<circle cx='37' cy='97' r='11' />\r\n\t\t<rect x='26' y='23' rx='5' ry='5' width='153' height='30' />\r\n\t\t<circle cx='1316' cy='88' r='11' />\r\n\t\t<rect x='1337' y='94' rx='0' ry='0' width='134' height='3' />\r\n\t\t<circle cx='77' cy='96' r='11' />\r\n\t</ContentLoader>\r\n);\r\n\r\nDataTable.metadata = {\r\n\tname: 'Mohd Arif Un',\r\n\tgithub: 'arif-un',\r\n\tdescription: 'Data Table skeleton',\r\n\tfilename: 'DataTable'\r\n};\r\n\r\nexport default DataTable;\r\n","import React, {useState, useEffect} from 'react';\r\nimport {withRouter} from 'react-router-dom';\r\nimport { Table, notification,  Space, Tag,Button, Input,Tooltip, Popconfirm  } from 'antd';\r\nimport { PlusOutlined, EditOutlined, DeleteOutlined,CheckCircleOutlined } from '@ant-design/icons';\r\n\r\nimport {AddNewCategory,QuickEdit} from \"../category\"\r\n\r\n/// import hooks\r\nimport { useFetch, useHandleFetch } from \"../../hooks\";\r\n\r\n// import components\r\nimport { DataTableSkeleton } from \"../../components/Placeholders\";\r\nimport Empty from \"../../components/Empty\";\r\n\r\nconst { Column, ColumnGroup } = Table;\r\nconst { Search } = Input;\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t  message: message || 'Tag Created',\r\n\t  description: '',\r\n\t  icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n  };\r\n\r\n\r\n  const openErrorNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t  message: message || 'Something Went Wrong',\r\n\t  description: '',\r\n\t  icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n  };\r\n\r\n\r\n\r\n\r\n\r\ninterface myTableProps {\r\n  data: any; \r\n  setcategoryList?:any; \r\n  history?: any; \r\n} \r\n\r\n\r\nconst MyTable = ({data, setcategoryList, history}: myTableProps) => {\r\n    const [visible,setvisible] = useState(false);   \r\n    const [activeCategoryForEdit,setactiveCategoryForEdit] = useState(false); \r\n    const [deleteCategoryState, handleDeleteCategoryFetch] = useHandleFetch({}, 'deleteCategory');\r\n      // console.log('activeCategoryForEdit',activeCategoryForEdit); \r\n\r\n\r\n      const handleDeleteCategory = async (id) => {\r\n        const deleteCategoryRes = await handleDeleteCategoryFetch({\r\n          urlOptions: {\r\n            placeHolders: {\r\n              id,\r\n            }\r\n            }\r\n          });\r\n\r\n          \t  // @ts-ignore\r\n\t\t  if(deleteCategoryRes && deleteCategoryRes.status === 'ok'){\r\n\t\t\t  openSuccessNotification('Deleted Category'); \r\n\t\t\t  const newCategoryList =  data.filter(item => item.id !== id);\r\n\t\t\t  setcategoryList(newCategoryList); \r\n\t\t  }\r\n      }\r\n      \r\n\r\n    return (\r\n        <>\r\n        <Table \r\n        // expandable={{\r\n        //     expandedRowRender: record => <p style={{ margin: 0 }}>{record.name}</p>,\r\n        //     rowExpandable: record => record.name !== 'Not Expandable',\r\n        //   }}\r\n        // bordered={true}\r\n        size='small'\r\n        // pagination={false}\r\n        dataSource={data}\r\n        >\r\n            <Column \r\n          title=\"\"\r\n           dataIndex=\"cover\"\r\n            key=\"id\" \r\n            width={'80px'}\r\n            \r\n           className='classnameofthecolumn'\r\n\r\n            render={(cover,record: any) => (\r\n                <>\r\n                <img src={cover} \r\n                   onClick={() => {\r\n                    history.push(`/admin/category/${record.id}`)\r\n                    // setcategoryDetailVisible(true);\r\n                    setactiveCategoryForEdit(record)\r\n                  }}\r\n                alt='cover img' \r\n                style={{\r\n                    height: '40px',\r\n                    width: '40px',\r\n                    objectFit: \"contain\",\r\n                    borderRadius:'3px',\r\n                  cursor: 'pointer'\r\n\r\n                }} />\r\n                </>\r\n              )}\r\n            />\r\n          <Column\r\n           title=\"Name\" \r\n           dataIndex=\"name\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n           render={(text, record: any) => (\r\n            <>\r\n\r\n              <h4\r\n                onClick={() => {\r\n                  history.push(`/admin/category/${record.id}`)\r\n                  // setcategoryDetailVisible(true);\r\n                  setactiveCategoryForEdit(record)\r\n                }}\r\n                style={{\r\n                  fontWeight: 400,\r\n                  color: '#555',\r\n                  cursor: 'pointer'\r\n\r\n                }}>\r\n                {text}\r\n              </h4>\r\n\r\n\r\n            </>\r\n          )}\r\n            />\r\n\r\n\r\n<Column\r\n           title=\"Description\" \r\n           dataIndex=\"description\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n         \r\n            />\r\n\r\n\r\n         <Column\r\n           title=\"Sub Cateogory\" \r\n           dataIndex=\"subCount\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n         \r\n            />\r\n\r\n<Column\r\n           title=\"Product\" \r\n           dataIndex=\"productCount\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n         \r\n            />\r\n\r\n\r\n\r\n          {/* <Column \r\n          \r\n          className='classnameofthecolumn'\r\n\r\n          title=\"Product\" dataIndex=\"product\" key=\"product\" /> */}\r\n\r\n          {/* <Column \r\n          \r\n          className='classnameofthecolumn'\r\n\r\n          title=\"Sub Category\" dataIndex=\"subCategory\" key=\"subCategory\" /> */}\r\n        \r\n        {/* <Column\r\n          title=\"Tags\"\r\n          dataIndex=\"tags\"\r\n          key=\"tags\"\r\n          render={tags => (\r\n            <>\r\n              {tags.map((tag : any) => (\r\n                <Tag color=\"blue\" key={tag}>\r\n                  {tag}\r\n                </Tag>\r\n              ))}\r\n            </>\r\n          )}\r\n        /> */}\r\n        <Column\r\n        \r\n        className='classnameofthecolumn'\r\n          title=\"\"\r\n          key=\"action\"\r\n          align='right'\r\n          render={(text, record : any) => (\r\n            <Space size=\"middle\">\r\n              <a href='##'>\r\n               <Tooltip placement=\"top\" title='Quick Edit Category'>\r\n              <span className='iconSize' onClick={() => {\r\n                setvisible(true)\r\n                setactiveCategoryForEdit(record); \r\n              }}> \r\n              <EditOutlined />\r\n            \r\n              </span>\r\n               </Tooltip>\r\n               </a>\r\n\r\n\r\n               <Popconfirm \r\n               \r\n               onConfirm={() => handleDeleteCategory(record.id)}\r\n               title=\"Are you sure？\" okText=\"Yes\" cancelText=\"No\">\r\n           \r\n\t\t   <span \r\n             className='iconSize iconSize-danger'\r\n             > \r\n             <DeleteOutlined/>\r\n            </span>\r\n       \r\n           </Popconfirm>\r\n\r\n\r\n       \r\n             \r\n            </Space>\r\n          )}\r\n        />\r\n      </Table>\r\n\r\n    \r\n\r\n    {activeCategoryForEdit &&   <QuickEdit \r\n    setcategoryList={setcategoryList}\r\n    categoryList={data}\r\n    setvisible={setvisible}\r\n    visible={visible}\r\n    category={activeCategoryForEdit}/>}\r\n    \r\n    </>\r\n    )\r\n}\r\n\r\n\r\ninterface Props {\r\n    history: any; \r\n}\r\n\r\nconst CategoryList = ({history}: Props) => {\r\n\r\n\r\n  \r\n\r\n  const [categoryState, handleCategoryListFetch] = useHandleFetch({}, 'categoryList');\r\n  const [categoryList,setcategoryList] = useState([]); \r\n\r\n  useEffect(()=>{\r\n   const setCategories = async () => {\r\n     const categories = await handleCategoryListFetch({\r\n      urlOptions: {\r\n        params: {\r\n          isSubCategory: true,\r\n          productCountValue: true \r\n        },\r\n      },\r\n     }); \r\n     // @ts-ignore\r\n     setcategoryList(categories); \r\n   }\r\n   setCategories(); \r\n  },[])\r\n\r\n\r\n  \r\n  const [addNewCategoryVisible,setAddNewCategoryVisible] = useState(false);   \r\n\r\n  const handleOkAddNewCategory = (e: any) => {\r\n    setAddNewCategoryVisible(false);\r\n  };\r\n\r\n  const handleCancelAddNewCategory = (e: any) => {\r\n    setAddNewCategoryVisible(false);\r\n  };\r\n\r\n  // console.log('categoryState',categoryState); \r\n\r\n  \r\n\r\n  const handleSearch = (value) => {\r\n    if(categoryState.data.length > 0 ){\r\n      const newCategoryList = categoryState.data.filter(item => item.name.toLowerCase().includes(value.toLowerCase())); \r\n      setcategoryList(newCategoryList); \r\n    }\r\n     \r\n  }\r\n\r\n\r\n\r\n\treturn (\r\n\t\t<>\r\n    {/* <h2 className='containerPageTitle'>\r\n      Categories\r\n    </h2> */}\r\n    <div className='categoryListContainer'>\r\n            <div className='categoryListContainer__header'>\r\n           \r\n\r\n          <div className='categoryListContainer__header-searchBar'>\r\n          <h2 className='categoryListContainer__header-title'>\r\n            Categories\r\n            </h2>\r\n\r\n\r\n          <Search\r\n            enterButton={false}\r\n            className='searchbarClassName'\r\n          placeholder=\"search categories..\"\r\n          onSearch={value => handleSearch(value)}\r\n        />\r\n          </div>\r\n            <Button\r\n          // type=\"primary\"\r\n          className='btnPrimaryClassNameoutline'\r\n          icon={<PlusOutlined />}\r\n          onClick={() => setAddNewCategoryVisible(true)}\r\n        >\r\n        Add New\r\n            \r\n            </Button>\r\n            </div>\r\n\r\n            <div className='categoryListContainer__afterHeader'>\r\n            {/* <Search\r\n      placeholder=\"search categories..\"\r\n      size=\"large\"\r\n      onSearch={value => console.log(value)}\r\n      style={{ width: 300 }}\r\n    /> */}\r\n            </div>\r\n\r\n     \r\n\t\t\t\r\n\t\t\t<div className='categoryListContainer__categoryList'>\r\n        {categoryState.done && categoryList.length > 0 && <MyTable \r\n        history={history}\r\n        setcategoryList={setcategoryList}\r\n        data={categoryList} />}\r\n        {categoryState.isLoading && <DataTableSkeleton />}\r\n\r\n        {categoryState.done && !(categoryList.length > 0) && (\r\n\t\t\t<div style={{\r\n\t\t\t\tmarginTop: '50px'\r\n\t\t\t}}>\r\n\t\t\t\t<Empty title='No Category found'   />\r\n\t\t\t</div>\r\n\t\t)}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\r\n\r\n{categoryState.done && \r\n    <AddNewCategory \r\n          addNewCategoryVisible={addNewCategoryVisible} \r\n          setAddNewCategoryVisible={setAddNewCategoryVisible}\r\n          categoryList={categoryList}\r\n          setcategoryList={setcategoryList}\r\n          \r\n           />}\r\n\r\n      \r\n\r\n        \r\n    </>\r\n\t);\r\n};\r\n\r\nexport default withRouter(CategoryList);\r\n","import React from 'react';\r\nimport { Form, Input } from 'antd';\r\n\r\nconst { TextArea } = Input;\r\n\r\n\r\n\r\ninterface Props {\r\n    label?: string;\r\n    type?: string;\r\n    defaultValue?: string;\r\n    value?: string;\r\n    onChange?: any;\r\n    disabled?: boolean;\r\n    isError?: boolean;\r\n    errorString?: string;\r\n    name?: string;\r\n    rows?: number\r\n}\r\n\r\nconst Demo = ({ label, type, defaultValue, value, onChange, disabled, isError, errorString, name, rows = 4 }: Props) => {\r\n    return (\r\n        <>\r\n            {label && (\r\n                <h3 className='inputFieldLabel'>\r\n                    {label}\r\n                </h3>\r\n            )}\r\n\r\n            <Form.Item\r\n                validateStatus={isError ? \"error\" : \"\"}\r\n                help={errorString}\r\n            // rules={[{ required: true }]}\r\n            >\r\n                <TextArea\r\n                    disabled={disabled}\r\n                    onChange={onChange}\r\n                    value={value}\r\n                    name={name}\r\n                    className='inputclassName'\r\n                    rows={rows} />\r\n\r\n            </Form.Item>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Demo; ","import React, { useState, useEffect } from 'react';\r\n\r\n\r\n\r\n\r\n// import libraries\r\nimport { Upload, Button, Modal, Tabs, message, notification, Popconfirm, Menu, Dropdown, } from 'antd';\r\nimport reqwest from 'reqwest';\r\nimport { Formik } from 'formik';\r\nimport Moment from 'react-moment';\r\n// import * as Yup from 'yup';\r\n\r\n\r\nimport {\r\n\tCheckOutlined,\r\n\tArrowUpOutlined,\r\n\tCheckCircleOutlined,\r\n\tEllipsisOutlined,\r\n\tFileImageOutlined,\r\n\tDeleteOutlined,\r\n\tCloseOutlined\r\n\r\n} from '@ant-design/icons';\r\n\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport Empty from '../../components/Empty';\r\n\r\n// import hooks\r\nimport { useHandleFetch } from \"../../hooks\";\r\n\r\n// import configs\r\nimport config from \"../../config.json\";\r\n\r\nconst { Dragger } = Upload;\r\nconst { TabPane } = Tabs;\r\n\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t\tmessage: message || 'Category Updated',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t\tmessage: message || 'Something Went Wrong',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n};\r\n\r\n\r\n\r\ninterface Props {\r\n\tvisible: boolean;\r\n\tsetvisible: (isVisible: any) => void;\r\n\tsetmyImages?: any;\r\n\tsetmyThumbnailImage?: any;\r\n\tisModalOpenForThumbnail?: boolean;\r\n\tisModalOpenForImages?: boolean;\r\n\tmyImages?: any;\r\n\tmyThumbnailImage?: any;\r\n\tsetMyGoddamnImages?: any;\r\n\tmyGoddamnImages?: any;\r\n}\r\n\r\n\r\nconst MediaLibrary = ({\r\n\tvisible,\r\n\tsetvisible,\r\n\tsetmyImages,\r\n\tisModalOpenForImages,\r\n\tisModalOpenForThumbnail,\r\n\tsetmyThumbnailImage,\r\n\tmyImages,\r\n\tmyThumbnailImage,\r\n\t...rest\r\n}: Props) => {\r\n\r\n\tconst [fileList, setfileList] = useState([]);\r\n\tconst [uploading, setuploading] = useState(false);\r\n\tconst [selectedimages, setselectedImages] = useState([]);\r\n\tconst [activeImageItem, setactiveImageItem] = useState(false);\r\n\tconst [updateMediaLibrary, handleUpdateMediaLibraryFetch] = useHandleFetch({}, 'updateImageFromLibrary');\r\n\tconst [imageListFromLibraryState, handleImageListFromLibraryFetch] = useHandleFetch({}, 'ImageListFromLibrary');\r\n\tconst [deleteImageFromLibraryFetchState, handleDeleteImageFromLibraryFetch] = useHandleFetch({}, 'deleteImageFromLibrary');\r\n\tconst [localImageList, setLocalImageList] = useState([]);\r\n\tconst [isDoneOk, setisDoneOk] = useState(false);\r\n\r\n\r\n\tconst handleDeleteImageFromImageLibrary = async (id) => {\r\n\r\n\t\tconst deleteImageLibraryItemRes = await handleDeleteImageFromLibraryFetch({\r\n\t\t\turlOptions: {\r\n\t\t\t\tplaceHolders: {\r\n\t\t\t\t\tid,\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\r\n\t\t// @ts-ignore\r\n\t\tif (deleteImageLibraryItemRes && deleteImageLibraryItemRes.status === 'ok') {\r\n\t\t\topenSuccessNotification('Imaged Deleted');\r\n\t\t\tconst newImageList = localImageList.filter(item => item.id !== id);\r\n\t\t\tsetLocalImageList(newImageList);\r\n\t\t}\r\n\t};\r\n\r\n\r\n\tconst getImageList = async () => {\r\n\t\tconst imageListRes = await handleImageListFromLibraryFetch({});\r\n\r\n\r\n\t\t// @ts-ignore\r\n\t\tif (imageListRes) {\r\n\t\t\t// @ts-ignore\r\n\t\t\tsetLocalImageList(imageListRes);\r\n\t\t}\r\n\r\n\t\t// console.log('imageListRes', imageListRes);\r\n\t}\r\n\r\n\r\n\r\n\tuseEffect(() => {\r\n\r\n\t\tgetImageList();\r\n\t}, [])\r\n\r\n\r\n\r\n\r\n\tconst handleUpload = async () => {\r\n\t\tconst formData = new FormData();\r\n\t\tfileList.forEach(file => {\r\n\t\t\tformData.append('images', file, file.name);\r\n\t\t});\r\n\r\n\t\tsetuploading(true);\r\n\r\n\t\t//  const addImageToLibraryRes = awAddait handleMediaLibraryFetch({\r\n\t\t// \tbody: formData\r\n\t\t//   });\r\n\r\n\t\t//   console.log('addImageToLibraryRes',addImageToLibraryRes)\r\n\r\n\r\n\r\n\t\t// You can use any AJAX library you like\r\n\t\treqwest({\r\n\t\t\turl: `${config.baseURL}/admin/image/add`,\r\n\t\t\tmethod: 'post',\r\n\t\t\tprocessData: false,\r\n\t\t\tdata: formData,\r\n\t\t\twithCredentials: true,\r\n\t\t\tsuccess: () => {\r\n\t\t\t\tsetfileList([]);\r\n\t\t\t\tsetuploading(false);\r\n\t\t\t\tgetImageList();\r\n\t\t\t\tmessage.success('upload successfully.');\r\n\t\t\t},\r\n\t\t\terror: () => {\r\n\t\t\t\tsetuploading(false);\r\n\t\t\t\tmessage.error('upload failed.');\r\n\t\t\t},\r\n\t\t});\r\n\t};\r\n\r\n\r\n\r\n\tconst handleOk = (e: any) => {\r\n\r\n\t\tif (isModalOpenForImages) {\r\n\t\t\tsetmyImages(selectedimages);\r\n\t\t\tsetisDoneOk(true);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tsetmyThumbnailImage(selectedimages);\r\n\t\t\tsetisDoneOk(true);\r\n\t\t}\r\n\t\tsetvisible(false);\r\n\r\n\t};\r\n\r\n\tconst handleCancel = (e: any) => {\r\n\t\tsetvisible(false);\r\n\t};\r\n\r\n\r\n\tuseEffect(() => {\r\n\t\tif (myImages && myImages.length > 0)\r\n\t\t\tsetselectedImages([...myImages]);\r\n\t}, [myImages])\r\n\r\n\r\n\tuseEffect(() => {\r\n\t\tif (isDoneOk && isModalOpenForImages && myImages) {\r\n\t\t\tsetselectedImages([...myImages]);\r\n\t\t}\r\n\t}, [myImages, isDoneOk]);\r\n\r\n\r\n\r\n\tuseEffect(() => {\r\n\t\tif (isDoneOk) {\r\n\t\t\t// console.log('myThumbnail', myThumbnailImage)\r\n\t\t\t// setselectedImages([...myThumbnailImage]);\r\n\t\t}\r\n\t}, [myThumbnailImage, isDoneOk])\r\n\r\n\tconst uploadProps = {\r\n\t\t//  listType: 'picture',\r\n\t\tmultiple: true,\r\n\t\tonRemove: file => {\r\n\t\t\tsetfileList(filelist => {\r\n\t\t\t\tconst index = fileList.indexOf(file);\r\n\t\t\t\tconst newFileList = fileList.slice();\r\n\t\t\t\tnewFileList.splice(index, 1);\r\n\t\t\t\treturn newFileList;\r\n\t\t\t})\r\n\r\n\t\t},\r\n\t\tbeforeUpload: file => {\r\n\t\t\tsetfileList(filelist => {\r\n\t\t\t\treturn [...fileList, file]\r\n\t\t\t})\r\n\t\t\treturn false;\r\n\t\t},\r\n\t\tfileList,\r\n\t};\r\n\r\n\r\n\r\n\r\n\tconst handleAddToSelectedList = (image, id) => {\r\n\r\n\t\tif (selectedimages && selectedimages.length > 0) {\r\n\t\t\tconst isImageExist = selectedimages.find(image => image.id === id);\r\n\t\t\tif (!isImageExist) {\r\n\t\t\t\tsetselectedImages([...selectedimages, image]);\r\n\t\t\t\tsetactiveImageItem(image);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tconst newselectedImages = selectedimages.filter(image => image.id !== id);\r\n\t\t\t\tsetselectedImages(newselectedImages);\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\tsetselectedImages([...selectedimages, image]);\r\n\t\t\tsetactiveImageItem(image);\r\n\t\t}\r\n\r\n\t}\r\n\r\n\r\n\tconst getisSelectedImage = (id) => {\r\n\t\tif (selectedimages && selectedimages.length > 0) {\r\n\t\t\tconst isImageExist = selectedimages.find(image => image.id === id);\r\n\t\t\tif (isImageExist) {\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t};\r\n\r\n\r\n\tconst handleUpdateSubmit = async (values, actions) => {\r\n\t\tconst updateImageLibraryItemRes = await handleUpdateMediaLibraryFetch({\r\n\t\t\tbody: {\r\n\t\t\t\tid: values.id,\r\n\t\t\t\talt: values.alt,\r\n\t\t\t\ttitle: values.title,\r\n\t\t\t\tcaptoin: values.captoin,\r\n\t\t\t\tlabels: values.labels,\r\n\r\n\t\t\t},\r\n\t\t});\r\n\r\n\r\n\t\t// @ts-ignore\r\n\t\tif (updateImageLibraryItemRes && updateImageLibraryItemRes.status === 'ok') {\r\n\t\t\topenSuccessNotification('Image Updated');\r\n\r\n\t\t\tconst positionInImageList = () => {\r\n\t\t\t\treturn localImageList.map(item => item.id).indexOf(values.id);\r\n\t\t\t}\r\n\r\n\t\t\tconst index = positionInImageList();\r\n\r\n\t\t\t// @ts-ignore\r\n\t\t\tconst updatedItem = Object.assign({}, localImageList[index], { ...updateImageLibraryItemRes });\r\n\t\t\tconst updateImageList = [...localImageList.slice(0, index), updatedItem, ...localImageList.slice(index + 1)];\r\n\t\t\tsetLocalImageList(updateImageList);\r\n\r\n\t\t}\r\n\t\telse {\r\n\t\t\topenErrorNotification();\r\n\t\t}\r\n\r\n\r\n\r\n\t\tactions.setSubmitting(false);\r\n\t}\r\n\r\n\r\n\tconst getisUpdateSubmitButtonDisabled = (values, isValid) => {\r\n\t\t// if(!values.alt || !values.title || !values.title || !values.caption || !isValid){\r\n\t\t// \treturn true; \r\n\t\t// }\r\n\t\tif (!isValid) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\t// console.log('selectedimages', selectedimages)\r\n\r\n\tconst ImageItemMenu = (handleDeleteImageFromImageLibrary, id, handleAddToSelectedList, image) => {\r\n\t\treturn (\r\n\t\t\t(\r\n\t\t\t\t<Menu>\r\n\t\t\t\t\t<Menu.Item\r\n\t\t\t\t\t\tonClick={() => handleAddToSelectedList(image, id)}\r\n\t\t\t\t\t\tkey=\"1\" icon={<CheckOutlined />}>\r\n\t\t\t\t\t\tSelect\r\n\r\n\t\t\t\t\t</Menu.Item>\r\n\r\n\r\n\r\n\t\t\t\t\t<Menu.Item\r\n\t\t\t\t\t\tonClick={() => handleDeleteImageFromImageLibrary(id)}\r\n\t\t\t\t\t\tkey=\"1\" icon={<DeleteOutlined color='red' />}>\r\n\t\t\t\t\t\tDelete\r\n\t\t\t\t\t</Menu.Item>\r\n\r\n\r\n\r\n\r\n\t\t\t\t</Menu >\r\n\t\t\t)\r\n\t\t)\r\n\t};\r\n\r\n\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Modal\r\n\t\t\t\tstyle={{\r\n\t\t\t\t\ttop: '40px'\r\n\t\t\t\t}}\r\n\t\t\t\ttitle=\"Media Library\"\r\n\t\t\t\tvisible={visible}\r\n\t\t\t\tonOk={handleOk}\r\n\t\t\t\tonCancel={handleCancel}\r\n\t\t\t\twidth={'80vw'}\r\n\t\t\t\tbodyStyle={{\r\n\t\t\t\t\tmargin: '0',\r\n\t\t\t\t\tpadding: '0'\r\n\t\t\t\t}}\r\n\t\t\t\tokText='Done'\r\n\t\t\t>\r\n\t\t\t\t<div className='mediaLibraryBodyContainer'>\r\n\t\t\t\t\t<div className='mediaLibraryBodyContainer-left'>\r\n\r\n\t\t\t\t\t\t<Tabs defaultActiveKey=\"2\" type=\"card\" size='middle'>\r\n\t\t\t\t\t\t\t<TabPane tab=\"Upload New Media\" key=\"1\">\r\n\t\t\t\t\t\t\t\t<div className='mediaLibraryBodyContainer-left-header'>\r\n\r\n\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t<Dragger\r\n\t\t\t\t\t\t\t\t\t\t\tclassName='upload-list-inline'\r\n\t\t\t\t\t\t\t\t\t\t\tlistType='picture'\r\n\t\t\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\t\t\tbackground: '#fff',\r\n\t\t\t\t\t\t\t\t\t\t\t\tborderRadius: '8px'\r\n\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t{...uploadProps}\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t<p className='ant-upload-drag-icon'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<FileImageOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t\t\t\t\t<p className='ant-upload-text'>Click or drag file to this area to upload</p>\r\n\t\t\t\t\t\t\t\t\t\t\t<p className='ant-upload-hint'>\r\n\t\t\t\t\t\t\t\t\t\t\t\tSupport for a single or bulk upload.\r\n\t\t\t\t\t\t                \t</p>\r\n\t\t\t\t\t\t\t\t\t\t</Dragger>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\tclassName='btnPrimaryClassNameoutline'\r\n\t\t\t\t\t\t\t\t\ttype='primary'\r\n\t\t\t\t\t\t\t\t\tonClick={handleUpload}\r\n\t\t\t\t\t\t\t\t\tdisabled={fileList.length === 0}\r\n\t\t\t\t\t\t\t\t\tloading={uploading}\r\n\t\t\t\t\t\t\t\t\ticon={<ArrowUpOutlined />}\r\n\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\tmarginTop: '20px',\r\n\t\t\t\t\t\t\t\t\t\tmarginBottom: '10px'\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\tUpload\r\n\t\t\t\t\t</Button>\r\n\r\n\t\t\t\t\t\t\t</TabPane>\r\n\t\t\t\t\t\t\t<TabPane tab=\"Media Library\" key=\"2\">\r\n\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t{myImages && myImages.lenght > 0 && (\r\n\t\t\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\t\t\t\t\t\tSelected Items\r\n                               </h3>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='mediaLibraryBodyContainer-selectedImages'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t{imageListFromLibraryState.done\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t&& myImages.length > 0\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t&& myImages.map(image => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tkey={image.id}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='mediaLibraryBodyContainer-selectedImages-imageListContainer-item'>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleAddToSelectedList(image, image.id)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='mediaLibraryBodyContainer-selectedImages-imageListContainer-item-menu'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<CloseOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className='mediaLibraryBodyContainer-selectedImages-imgContainer'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<img src={image.cover} alt='img' />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t})}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t</>\r\n\r\n\t\t\t\t\t\t\t\t<div className='mediaLibraryBodyContainer-left-imageListContainer'>\r\n\r\n\t\t\t\t\t\t\t\t\t{imageListFromLibraryState.done\r\n\t\t\t\t\t\t\t\t\t\t&& localImageList.length > 0\r\n\t\t\t\t\t\t\t\t\t\t&& localImageList.map(image => {\r\n\t\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tkey={image.id}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='mediaLibraryBodyContainer-left-imageListContainer-item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t{getisSelectedImage(image.id) ? <div className='mediaLibraryBodyContainer-left-imageListContainer-item-icon'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<CheckOutlined\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div> : ''}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Dropdown overlay={() => ImageItemMenu(handleDeleteImageFromImageLibrary, image.id, handleAddToSelectedList, image)} placement=\"bottomRight\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className='mediaLibraryBodyContainer-left-imageListContainer-item-menu'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<EllipsisOutlined\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Dropdown>\r\n\r\n\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<img onClick={() => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleAddToSelectedList(image, image.id)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}} src={image.cover} alt='img' />\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t\t})}\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t{imageListFromLibraryState.done && !(localImageList.length > 0) && (\r\n\t\t\t\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\t\t\t\tdisplay: 'flex',\r\n\t\t\t\t\t\t\t\t\t\t\tjustifyContent: 'center',\r\n\t\t\t\t\t\t\t\t\t\t\twidth: '100%'\r\n\t\t\t\t\t\t\t\t\t\t}}>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<Empty title='No Image Found in the library' />\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t)}\r\n\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</TabPane>\r\n\r\n\t\t\t\t\t\t</Tabs>\r\n\r\n\r\n\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className='mediaLibraryBodyContainer-right'>\r\n\r\n\t\t\t\t\t\t{activeImageItem && (\r\n\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t<Formik\r\n\t\t\t\t\t\t\t\t\tonSubmit={(values, actions) => handleUpdateSubmit(values, actions)}\r\n\t\t\t\t\t\t\t\t\tvalidateOnBlur={false}\r\n\t\t\t\t\t\t\t\t\tenableReinitialize={true}\r\n\t\t\t\t\t\t\t\t\tinitialValues={\r\n\t\t\t\t\t\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\t\t\t\t\t\t{ ...activeImageItem }\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t{({\r\n\t\t\t\t\t\t\t\t\t\thandleChange,\r\n\t\t\t\t\t\t\t\t\t\tvalues,\r\n\t\t\t\t\t\t\t\t\t\thandleSubmit,\r\n\t\t\t\t\t\t\t\t\t\terrors,\r\n\t\t\t\t\t\t\t\t\t\tisValid,\r\n\t\t\t\t\t\t\t\t\t\tisSubmitting,\r\n\t\t\t\t\t\t\t\t\t\ttouched,\r\n\t\t\t\t\t\t\t\t\t\thandleBlur,\r\n\t\t\t\t\t\t\t\t\t\tsetFieldTouched,\r\n\t\t\t\t\t\t\t\t\t\thandleReset,\r\n\t\t\t\t\t\t\t\t\t}) => (\r\n\t\t\t\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<h4>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tAttachment Details\r\n\t\t\t\t\t\t\t</h4>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div className='mediaLibraryBodyContainer-right-ImageDetails'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div className='mediaLibraryBodyContainer-right-ImageDetails-imageContainer'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<img src={activeImageItem['cover']} alt='img' />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div className='mediaLibraryBodyContainer-right-ImageDetails-infoContainer'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<h5 className='imageLibnameText'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{activeImageItem['name']}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</h5>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<h5>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Moment>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{activeImageItem['added']}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Moment>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</h5>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* <h5>\r\n\t\t\t\t\t\t\t\t\t\t5000 X 500\r\n\t\t\t\t\t\t\t\t\t</h5> */}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Popconfirm\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonConfirm={() => handleDeleteImageFromImageLibrary(activeImageItem['id'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttitle=\"Are you sure？\" okText=\"Yes\" cancelText=\"No\">\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<h5\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='imageLibdeleteText'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tDelete parmanently\r\n\t\t\t\t\t\t\t\t\t                       </h5>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Popconfirm>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tlabel='Alternate Text'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.alt}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tname='alt'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.alt && errors.alt) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateMediaLibrary.error['error']['alt'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.alt && errors.alt) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateMediaLibrary.error['error']['alt'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('alt');\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tlabel='Title'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.title}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tname='title'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.title && errors.title) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateMediaLibrary.error['error']['title'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.title && errors.title) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateMediaLibrary.error['error']['title'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('title');\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tlabel='Caption'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.caption}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tname='title'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.caption && errors.caption) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateMediaLibrary.error['error']['caption'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.caption && errors.caption) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateMediaLibrary.error['error']['caption'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('caption');\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\t\t\t\ttype='default'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={(e: any) => handleSubmit(e)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tdisabled={getisUpdateSubmitButtonDisabled(values, isValid)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tloading={isSubmitting}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t// marginTop: '20px'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tUpdate\r\n\t\t\t\t\t</Button>\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t</Formik>\r\n\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t)}\r\n\r\n\t\t\t\t\t\t{!activeImageItem && (\r\n\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\theight: '100%',\r\n\t\t\t\t\t\t\t\tdisplay: \"flex\",\r\n\t\t\t\t\t\t\t\tjustifyContent: \"center\",\r\n\t\t\t\t\t\t\t\talignItems: \"center\",\r\n\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t<h4 style={{\r\n\t\t\t\t\t\t\t\t\ttextAlign: \"center\",\r\n\t\t\t\t\t\t\t\t\tfontSize: \"13px\",\r\n\t\t\t\t\t\t\t\t\tcolor: '#8888'\r\n\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\tSelect an image to preview details\r\n\t\t\t\t\t\t\t\t</h4>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t)}\r\n\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t</Modal>\r\n\t\t</>\r\n\t)\r\n};\r\n\r\nexport default MediaLibrary;\r\n","import MediaLibrary from './MediaLibrary';\r\nexport default MediaLibrary;\r\n","import React, { useState } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n\r\nimport { useHandleFetch } from '../../hooks';\r\n// import third party ui lib\r\nimport { Switch, Select, notification, Modal, Tooltip, Upload, message } from 'antd';\r\n\r\nimport {\r\n\tDeleteOutlined,\r\n\tFileAddOutlined,\r\n\tFileImageFilled,\r\n\tPlusOutlined,\r\n\tCheckCircleOutlined,\r\n\tCloseOutlined,\r\n\tCheckOutlined,\r\n\tInfoCircleOutlined,\r\n\tLoadingOutlined\r\n} from '@ant-design/icons';\r\n\r\n\r\n\r\n// import ReactQuill from 'react-quill';\r\n// import 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport MediaLibrary from \"../../components/MediaLibrary\";\r\n\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n\tname: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t\tmessage: message || 'Category Updated',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n\tnotification.error({\r\n\t\tmessage: message || 'Something Went Wrong',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n};\r\n\r\n\r\n\r\n\r\n\r\nconst initialValues = {\r\n\tname: '',\r\n\tdescription: '',\r\n\timage: [],\r\n\turl: '',\r\n\tcover: ''\r\n}\r\n\r\nconst { Option } = Select;\r\n\r\ninterface Props {\r\n\taddNewCategoryVisible: any;\r\n\tsetAddNewCategoryVisible: any;\r\n\tcategoryList?: any;\r\n\tsetcategoryList?: any;\r\n}\r\n\r\nconst AddNewCategory = ({ addNewCategoryVisible, setAddNewCategoryVisible, categoryList, setcategoryList }: Props) => {\r\n\r\n\tconst [addCategoryState, handleAddCategoryFetch] = useHandleFetch({}, 'addCategory', 'form');\r\n\tconst [visible, setvisible] = useState(false);\r\n\tconst [myImages, setmyImages] = useState(false);\r\n\tconst [myThumbnailImage, setmyThumbnailImage] = useState(false);\r\n\tconst [isparentCategoryChecked, setisparentcategoryChecked] = useState(true);\r\n\tconst [isModalOpenForThumbnail, setisModalOpenForThumbnail] = useState(false);\r\n\tconst [isModalOpenForImages, setisModalOpenForImages] = useState(false);\r\n\tconst [coverImageId, setCoverImageId] = useState('');\r\n\tconst [selectedParentId, setselectedParentId] = useState('');\r\n\tconst [imageUrl, setImageUrl] = useState('');\r\n\tconst [loadingThumnail, setLoadingThumbnail] = useState(false);\r\n\tconst [imageFile, setImagefile] = useState('');\r\n\r\n\r\n\r\n\r\n\r\n\tconst handleSubmit = async (values: any, actions: any) => {\r\n\t\t// @ts-ignore\r\n\t\tconst imagesIds = myImages ? myImages.map(image => {\r\n\t\t\treturn image.id;\r\n\t\t}) : [];\r\n\r\n\t\tconst formData = new FormData();\r\n\r\n\t\tformData.append(\"name\", values.name.trim());\r\n\t\tformData.append(\"description\", values.description);\r\n\t\tformData.append(\"image\", JSON.stringify(imagesIds));\r\n\t\tformData.append(\"cover\", coverImageId || imagesIds[0] ? imagesIds[0] : '');\r\n\t\tformData.append(\"parent\", selectedParentId);\r\n\t\tformData.append('icon', imageFile)\r\n\r\n\r\n\r\n\t\tconst addCategoryRes = await handleAddCategoryFetch({\r\n\t\t\tbody: formData,\r\n\t\t});\r\n\r\n\r\n\r\n\t\t// @ts-ignore\r\n\t\tif (addCategoryRes && addCategoryRes.status === 'ok') {\r\n\t\t\topenSuccessNotification('Category Created!');\r\n\t\t\tsetAddNewCategoryVisible(false)\r\n\r\n\t\t\tsetcategoryList([...categoryList, {\r\n\t\t\t\tid: addCategoryRes['_id'] || '',\r\n\t\t\t\tkey: addCategoryRes['_id'] || '',\r\n\t\t\t\tname: addCategoryRes['name'] || '',\r\n\t\t\t\tdescription: addCategoryRes['description'] || '',\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\t...addCategoryRes\r\n\t\t\t}])\r\n\r\n\t\t\tactions.resetForm();\r\n\t\t\t// @ts-ignore\r\n\t\t\tsetmyImages([]);\r\n\t\t\tsetCoverImageId('')\r\n\t\t\tsetselectedParentId('')\r\n\t\t\tsetisparentcategoryChecked(true);\r\n\t\t\tsetImageUrl('');\r\n\t\t}\r\n\t\telse {\r\n\t\t\topenErrorNotification();\r\n\t\t}\r\n\r\n\r\n\r\n\r\n\t\tactions.setSubmitting(false);\r\n\t};\r\n\r\n\r\n\r\n\tconst onSwitchChange = (checked: any) => {\r\n\t\tsetisparentcategoryChecked(checked)\r\n\t};\r\n\r\n\r\n\tconst handleCancel = (e: any) => {\r\n\t\tsetAddNewCategoryVisible(false);\r\n\t};\r\n\r\n\r\n\tconst getisSubmitButtonDisabled = (values, isValid) => {\r\n\t\tif (!values.name || !isValid) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\r\n\tconst handleImagesDelete = (id) => {\r\n\t\t// @ts-ignore\r\n\t\tconst newImages = myImages && myImages.filter(image => {\r\n\t\t\treturn image.id !== id;\r\n\t\t})\r\n\r\n\t\tsetmyImages(newImages);\r\n\t}\r\n\r\n\r\n\tconst handleThumbnailImageDelete = (id) => {\r\n\t\t// @ts-ignore\r\n\t\tconst newImages = myThumbnailImage && myThumbnailImage.filter(image => {\r\n\t\t\treturn image.id !== id;\r\n\t\t})\r\n\r\n\t\tif (newImages.length > 0) {\r\n\t\t\tsetmyThumbnailImage(newImages);\r\n\r\n\t\t}\r\n\t\telse setmyThumbnailImage(false);\r\n\t}\r\n\r\n\r\n\tconst onChangeSelect = (value) => {\r\n\t\tsetselectedParentId(value);\r\n\t}\r\n\r\n\r\n\r\n\r\n\tfunction getBase64(img, callback) {\r\n\t\tconst reader = new FileReader();\r\n\t\treader.addEventListener('load', () => callback(reader.result));\r\n\t\treader.readAsDataURL(img);\r\n\t}\r\n\r\n\r\n\tfunction beforeUpload(file) {\r\n\t\tconst isJpgOrPng = file.type === 'image/jpeg' || file.type === 'image/png';\r\n\t\tif (!isJpgOrPng) {\r\n\t\t\tmessage.error('You can only upload JPG/PNG file!');\r\n\t\t}\r\n\t\tconst isLt2M = file.size / 1024 / 1024 < 2;\r\n\t\tif (!isLt2M) {\r\n\t\t\tmessage.error('Image must smaller than 2MB!');\r\n\t\t}\r\n\r\n\r\n\t\tgetBase64(file, imageUrl => {\r\n\t\t\tsetImageUrl(imageUrl)\r\n\t\t\tsetImagefile(file)\r\n\t\t\tsetLoadingThumbnail(false)\r\n\t\t})\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\r\n\tconst uploadButton = (\r\n\t\t<div>\r\n\t\t\t{loadingThumnail ? <LoadingOutlined /> : <PlusOutlined />}\r\n\t\t\t<div className=\"ant-upload-text\">Upload</div>\r\n\t\t</div>\r\n\t);\r\n\r\n\r\n\treturn (\r\n\t\t<Formik\r\n\t\t\tonSubmit={(values, actions) => handleSubmit(values, actions)}\r\n\t\t\tvalidationSchema={validationSchema}\r\n\t\t\tvalidateOnBlur={false}\r\n\t\t\tenableReinitialize={true}\r\n\t\t\tinitialValues={\r\n\t\t\t\t{ ...initialValues }\r\n\t\t\t}\r\n\t\t>\r\n\t\t\t{({\r\n\t\t\t\thandleChange,\r\n\t\t\t\tvalues,\r\n\t\t\t\thandleSubmit,\r\n\t\t\t\terrors,\r\n\t\t\t\tisValid,\r\n\t\t\t\tisSubmitting,\r\n\t\t\t\ttouched,\r\n\t\t\t\thandleBlur,\r\n\t\t\t\tsetFieldTouched,\r\n\t\t\t\thandleReset,\r\n\t\t\t}) => (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<Modal\r\n\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\ttop: '40px'\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\ttitle=\"Add New Category\"\r\n\t\t\t\t\t\t\tvisible={addNewCategoryVisible}\r\n\t\t\t\t\t\t\tonOk={(e: any) => handleSubmit(e)}\r\n\t\t\t\t\t\t\tonCancel={handleCancel}\r\n\t\t\t\t\t\t\tokText='Create'\r\n\t\t\t\t\t\t\tokButtonProps={{\r\n\t\t\t\t\t\t\t\tloading: isSubmitting,\r\n\t\t\t\t\t\t\t\thtmlType: \"submit\",\r\n\t\t\t\t\t\t\t\tdisabled: getisSubmitButtonDisabled(values, isValid)\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\tlabel='Title'\r\n\t\t\t\t\t\t\t\tvalue={values.name}\r\n\t\t\t\t\t\t\t\tname='name'\r\n\t\t\t\t\t\t\t\tisError={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['name'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['name'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('name');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\tlabel='Description'\r\n\t\t\t\t\t\t\t\tvalue={values.description}\r\n\t\t\t\t\t\t\t\tname='description'\r\n\t\t\t\t\t\t\t\tisError={(touched.description && errors.description) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['description'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.description && errors.description) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['description'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('description');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\tmarginTop: '25px'\r\n\t\t\t\t\t\t\t}}></div>\r\n\r\n\t\t\t\t\t\t\t<div className='switchLabelContainer'>\r\n\t\t\t\t\t\t\t\t<Switch\r\n\t\t\t\t\t\t\t\t\tchecked={isparentCategoryChecked}\r\n\t\t\t\t\t\t\t\t\tdefaultChecked onChange={onSwitchChange} />\r\n\t\t\t\t\t\t\t\t<div className='switchLabelContainer-textContainer'>\r\n\t\t\t\t\t\t\t\t\t<h5 >Top level Category</h5>\r\n\t\t\t\t\t\t\t\t\t<h5 className='switchLabelContainer-desc'>Disable to select a Parent Category</h5>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t{!isparentCategoryChecked && (\r\n\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>Parent Category</h3>\r\n\t\t\t\t\t\t\t\t\t<Select\r\n\t\t\t\t\t\t\t\t\t\tshowSearch\r\n\t\t\t\t\t\t\t\t\t\tstyle={{ width: 300 }}\r\n\t\t\t\t\t\t\t\t\t\tplaceholder='Select a Parent Category'\r\n\t\t\t\t\t\t\t\t\t\toptionFilterProp='children'\r\n\t\t\t\t\t\t\t\t\t\tonChange={onChangeSelect}\r\n\t\t\t\t\t\t\t\t\t\t// onFocus={onFocus}\r\n\t\t\t\t\t\t\t\t\t\t// onBlur={onBlur}\r\n\t\t\t\t\t\t\t\t\t\t// onSearch={onSearch}\r\n\t\t\t\t\t\t\t\t\t\tfilterOption={(input, option: any) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t{categoryList.length > 0 && categoryList.map(category => {\r\n\t\t\t\t\t\t\t\t\t\t\treturn <Option value={category.id}>{category.name}</Option>\r\n\t\t\t\t\t\t\t\t\t\t})}\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t</Select>\r\n\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t)}\r\n\r\n\r\n\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\tmarginTop: '20px'\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\r\n\t\t\t\t\t\t\t<div className='addproductSection-left-header' >\r\n\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>Icon </h3>\r\n\t\t\t\t\t\t\t\t<Tooltip\r\n\t\t\t\t\t\t\t\t\tplacement=\"left\" title={'Add Icon image for this category'}>\r\n\t\t\t\t\t\t\t\t\t<a href='###'>\r\n\t\t\t\t\t\t\t\t\t\t<InfoCircleOutlined />\r\n\t\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t<Upload\r\n\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\tborderRadius: \"8px\"\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\tname=\"avatar\"\r\n\t\t\t\t\t\t\t\tlistType=\"picture-card\"\r\n\t\t\t\t\t\t\t\tclassName=\"avatar-uploader\"\r\n\t\t\t\t\t\t\t\tshowUploadList={false}\r\n\t\t\t\t\t\t\t\tbeforeUpload={beforeUpload}\r\n\t\t\t\t\t\t\t\tmultiple={false}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t{imageUrl ? <img src={imageUrl} alt=\"avatar\" style={{ width: '100%' }} /> : uploadButton}\r\n\t\t\t\t\t\t\t</Upload>\r\n\r\n\r\n\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\tmarginTop: '10px'\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\r\n\t\t\t\t\t\t\t<div className='addproductSection-left-header' style={{\r\n\t\t\t\t\t\t\t\tmarginBottom: '-5px'\r\n\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>Images</h3>\r\n\t\t\t\t\t\t\t\t<Tooltip\r\n\t\t\t\t\t\t\t\t\tplacement=\"left\" title={'Click on the image to select cover image, By default 1st image is selected as cover'}>\r\n\t\t\t\t\t\t\t\t\t<a href='###'>\r\n\t\t\t\t\t\t\t\t\t\t<InfoCircleOutlined />\r\n\t\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className='aboutToUploadImagesContainer'>\r\n\t\t\t\t\t\t\t\t{myImages &&\r\n\t\t\t\t\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\t\t\t\t\tmyImages.length > 0 && myImages.map((image, index) => {\r\n\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='aboutToUploadImagesContainer__item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='aboutToUploadImagesContainer__item-imgContainer'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => setCoverImageId(image.id)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<img src={image.cover} alt={image.alt} />\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => handleImagesDelete(image.id)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='aboutToUploadImagesContainer__item-remove'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<CloseOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t{coverImageId === image.id ? (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<span className='aboutToUploadImagesContainer__item-cover'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<CheckOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t) : !coverImageId && index === 0 && (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<span className='aboutToUploadImagesContainer__item-cover'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<CheckOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t})}\r\n\r\n\r\n\t\t\t\t\t\t\t\t<Tooltip\r\n\t\t\t\t\t\t\t\t\ttitle={'Attach images'}>\r\n\r\n\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\t\t\tsetvisible(true);\r\n\t\t\t\t\t\t\t\t\t\t\tsetisModalOpenForImages(true);\r\n\t\t\t\t\t\t\t\t\t\t\tsetisModalOpenForThumbnail(false);\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\tclassName='aboutToUploadImagesContainer__uploadItem'>\r\n\t\t\t\t\t\t\t\t\t\t{/* <FileAddOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FileImageTwoTone />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FileImageOutlined /> */}\r\n\t\t\t\t\t\t\t\t\t\t<FileImageFilled />\r\n\t\t\t\t\t\t\t\t\t\t{/* <h5>\r\n\t\t\t\t\t\t\t\t\t\t\t\t     Select From Library\r\n\t\t\t\t\t\t\t\t\t\t\t<     /h5> */}\r\n\t\t\t\t\t\t\t\t\t\t<span className='aboutToUploadImagesContainer__uploadItem-plus'>\r\n\t\t\t\t\t\t\t\t\t\t\t<PlusOutlined />\r\n\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</Tooltip>\r\n\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\t\t\t\t\t\t</Modal>\r\n\r\n\t\t\t\t\t\t<MediaLibrary\r\n\t\t\t\t\t\t\tsetvisible={setvisible}\r\n\t\t\t\t\t\t\tvisible={visible}\r\n\t\t\t\t\t\t\tsetmyImages={setmyImages}\r\n\t\t\t\t\t\t\tmyImages={myImages}\r\n\t\t\t\t\t\t\tsetmyThumbnailImage={setmyThumbnailImage}\r\n\t\t\t\t\t\t\tisModalOpenForThumbnail={isModalOpenForThumbnail}\r\n\t\t\t\t\t\t\tisModalOpenForImages={isModalOpenForImages}\r\n\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</>\r\n\t\t\t\t)}\r\n\t\t</Formik>\r\n\r\n\r\n\r\n\r\n\t);\r\n};\r\n\r\nexport default AddNewCategory;\r\n","import React, { useState } from 'react';\r\nimport { Modal, notification } from 'antd';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport { useHandleFetch } from '../../hooks';\r\n\r\nimport { CheckCircleOutlined, PlusOutlined, EditOutlined, DeleteOutlined, EditFilled } from '@ant-design/icons';\r\n\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n\tname: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\n\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t\tmessage: message || 'Category Updated',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t\tmessage: message || 'Something Went Wrong',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n};\r\n\r\n\r\n\r\n\r\n\r\ninterface Props {\r\n\tcategory: any;\r\n\tsetvisible: any;\r\n\tvisible: any;\r\n\tsetcategoryList?: any;\r\n\tcategoryList?: any;\r\n}\r\n\r\nconst QuickEdit = ({ category, setvisible, visible, categoryList, setcategoryList }: Props) => {\r\n\tconst [updateCategoryState, handleUpdateCategoryFetch] = useHandleFetch({}, 'updateCategory');\r\n\r\n\tconst handleSubmit = async (values: any, actions: any) => {\r\n\t\tconst updateCategoryRes = await handleUpdateCategoryFetch({\r\n\t\t\turlOptions: {\r\n\t\t\t\tplaceHolders: {\r\n\t\t\t\t\tid: values.id,\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tbody: {\r\n\t\t\t\tname: values.name,\r\n\t\t\t\tdescription: values.description,\r\n\t\t\t},\r\n\t\t});\r\n\r\n\t\t//   console.log('updateCategoryRes',updateCategoryRes); \r\n\r\n\t\t// @ts-ignore\r\n\t\tif (updateCategoryRes && updateCategoryRes.status === 'ok') {\r\n\t\t\topenSuccessNotification();\r\n\r\n\t\t\tconst positionInTag = () => {\r\n\t\t\t\treturn categoryList.map(item => item.id).indexOf(category.id);\r\n\t\t\t}\r\n\r\n\t\t\tconst index = positionInTag();\r\n\r\n\t\t\t// @ts-ignore\r\n\t\t\tconst updatedItem = Object.assign({}, categoryList[index], { ...updateCategoryRes });\r\n\t\t\tconst updateCategoryList = [...categoryList.slice(0, index), updatedItem, ...categoryList.slice(index + 1)];\r\n\t\t\tsetcategoryList(updateCategoryList);\r\n\r\n\t\t}\r\n\t\telse {\r\n\t\t\topenErrorNotification();\r\n\t\t}\r\n\r\n\t\tactions.setSubmitting(false);\r\n\t\tsetvisible(false)\r\n\r\n\t};\r\n\r\n\r\n\tconst handleCancel = (e: any) => {\r\n\t\tsetvisible(false);\r\n\t};\r\n\r\n\r\n\r\n\tconst getisSubmitButtonDisabled = (values, isValid) => {\r\n\t\tif (!values.name || !isValid) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\treturn (\r\n\t\t<Formik\r\n\t\t\tonSubmit={(values, actions) => handleSubmit(values, actions)}\r\n\t\t\tvalidationSchema={validationSchema}\r\n\t\t\tvalidateOnBlur={false}\r\n\t\t\tenableReinitialize={true}\r\n\t\t\tinitialValues={\r\n\t\t\t\t{ ...category }\r\n\t\t\t}\r\n\t\t>\r\n\t\t\t{({\r\n\t\t\t\thandleChange,\r\n\t\t\t\tvalues,\r\n\t\t\t\thandleSubmit,\r\n\t\t\t\terrors,\r\n\t\t\t\tisValid,\r\n\t\t\t\tisSubmitting,\r\n\t\t\t\ttouched,\r\n\t\t\t\thandleBlur,\r\n\t\t\t\tsetFieldTouched,\r\n\t\t\t\thandleReset,\r\n\t\t\t}) => (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<Modal\r\n\t\t\t\t\t\t\ttitle=\"Quick Edit\"\r\n\t\t\t\t\t\t\tvisible={visible}\r\n\t\t\t\t\t\t\tonOk={(e: any) => handleSubmit(e)}\r\n\t\t\t\t\t\t\tonCancel={handleCancel}\r\n\t\t\t\t\t\t\tokText='Update'\r\n\t\t\t\t\t\t\tokButtonProps={{\r\n\t\t\t\t\t\t\t\tloading: isSubmitting,\r\n\t\t\t\t\t\t\t\thtmlType: \"submit\",\r\n\t\t\t\t\t\t\t\tdisabled: getisSubmitButtonDisabled(values, isValid)\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\tlabel='Title'\r\n\t\t\t\t\t\t\t\tvalue={values.name}\r\n\t\t\t\t\t\t\t\tname='name'\r\n\t\t\t\t\t\t\t\tisError={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateCategoryState.error['error']['name'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateCategoryState.error['error']['name'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('name');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\tlabel='Description'\r\n\t\t\t\t\t\t\t\tvalue={values.description}\r\n\t\t\t\t\t\t\t\tname='description'\r\n\t\t\t\t\t\t\t\tisError={(touched.description && errors.description) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateCategoryState.error['error']['description'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.description && errors.description) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateCategoryState.error['error']['description'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('description');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</Modal>\r\n\r\n\t\t\t\t\t</>\r\n\t\t\t\t)}\r\n\t\t</Formik>\r\n\t);\r\n};\r\n\r\n\r\nexport default QuickEdit;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n\r\nimport { useHandleFetch } from '../../hooks';\r\n// import third party ui lib\r\nimport { Upload, message, Switch, Select, Button, notification, Modal, Tooltip, Spin } from 'antd';\r\n\r\nimport {\r\n\tFileOutlined,\r\n\tInboxOutlined,\r\n\tFileAddOutlined,\r\n\tDeleteOutlined,\r\n\tCheckCircleOutlined,\r\n\tCloseOutlined,\r\n\tCheckOutlined,\r\n\tInfoCircleOutlined,\r\n\tPlusOutlined,\r\n\tFileImageFilled,\r\n\tLoadingOutlined\r\n} from '@ant-design/icons';\r\n\r\n\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport MediaLibrary from \"../../components/MediaLibrary\";\r\n\r\nconst validationSchema = Yup.object().shape({\r\n\tname: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t\tmessage: message || 'Category Updated',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n\tnotification.error({\r\n\t\tmessage: message || 'Something Went Wrong',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n};\r\n\r\n\r\nconst initialValues = {\r\n\tname: '',\r\n\tdescription: '',\r\n\timage: [],\r\n\turl: '',\r\n\tcover: ''\r\n}\r\n\r\n\r\nconst { Option } = Select;\r\n\r\n\r\n\r\ninterface Props {\r\n\tcategoryEditVisible?: any;\r\n\tsetCategoryEditVisible?: any;\r\n\tcategoryDetailData?: any;\r\n}\r\n\r\nconst AddNewBrand = ({ categoryEditVisible, setCategoryEditVisible, categoryDetailData }: Props) => {\r\n\r\n\tconst [updateBrandState, handleUpdateBrandFetch] = useHandleFetch({}, 'updateCategory');\r\n\tconst [brandDetailState, handleBrandDetailFetch] = useHandleFetch({}, 'categoryDetail');\r\n\tconst [attachImageToItemMultipleState, handleAttachImageToItemMultipleFetch] = useHandleFetch({}, 'attachImageToItemMultiple');\r\n\tconst [attachImageToItemSingleState, handleAttachImageToItemSingleFetch] = useHandleFetch({}, 'attachImageToItemSingle');\r\n\tconst [detachImageFromItemMultipleState, handleDetachImageFromItemMultipleFetch] = useHandleFetch({}, 'detachImageFromItemMultiple');\r\n\tconst [detachImageFromItemSingleState, handleDetachImageFromItemSingleFetch] = useHandleFetch({}, 'detachImageFromItemSingle');\r\n\tconst [setImageAsThumbnailToItemState, handleSetImageAsThumbnailToItemFetch] = useHandleFetch({}, 'setImageAsThumbnailToItem');\r\n\r\n\r\n\tconst [myImages, setmyImages] = useState(false);\r\n\tconst [visibleMedia, setvisibleMedia] = useState(false);\r\n\tconst [coverImageId, setCoverImageId] = useState('');\r\n\tconst [myGoddamnImages, setMyGoddamnImages] = useState([]);\r\n\tconst [selectedParentId, setselectedParentId] = useState('');\r\n\tconst [imageUrl, setImageUrl] = useState('');\r\n\tconst [loadingThumnail, setLoadingThumbnail] = useState(false);\r\n\tconst [imageFile, setImagefile] = useState('');\r\n\tconst [isparentCategoryChecked, setisparentcategoryChecked] = useState(true);\r\n\r\n\r\n\r\n\r\n\tuseEffect(() => {\r\n\t\tif (categoryDetailData && Object.keys(categoryDetailData).length > 0) {\r\n\r\n\t\t\tconst images = categoryDetailData.image;\r\n\t\t\tif (images && images.length > 0) {\r\n\t\t\t\tsetmyImages(images);\r\n\t\t\t\tsetMyGoddamnImages(images);\r\n\t\t\t}\r\n\r\n\t\t\tif (categoryDetailData.cover && categoryDetailData.cover['id']) {\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\tsetmyImages([categoryDetailData.cover, ...images]);\r\n\t\t\t\tsetCoverImageId(categoryDetailData.cover['id']);\r\n\t\t\t}\r\n\r\n\t\t}\r\n\t}, [categoryDetailData])\r\n\r\n\r\n\tuseEffect(() => {\r\n\t\t// @ts-ignore\r\n\t\tif (myImages && myImages[0] && myImages.length < 2) {\r\n\r\n\t\t\tif (coverImageId !== myImages[0].id) {\r\n\t\t\t\tsetCoverImageId(myImages[0].id);\r\n\t\t\t\thandleSetImageAsThumnail(myImages[0]);\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}, [myImages])\r\n\r\n\r\n\tconst handleDetachSingleImage = async id => {\r\n\t\tawait handleDetachImageFromItemSingleFetch({\r\n\t\t\turlOptions: {\r\n\t\t\t\tplaceHolders: {\r\n\t\t\t\t\timageId: id,\r\n\t\t\t\t\tcollection: 'category',\r\n\t\t\t\t\titemId: categoryDetailData.id\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\r\n\t}\r\n\r\n\r\n\r\n\tconst handleSetImageAsThumnail = async image => {\r\n\r\n\t\tconst thumbnailRes = await handleSetImageAsThumbnailToItemFetch({\r\n\t\t\turlOptions: {\r\n\t\t\t\tplaceHolders: {\r\n\t\t\t\t\timageId: image.id,\r\n\t\t\t\t\tcollection: 'category',\r\n\t\t\t\t\titemId: categoryDetailData.id\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\r\n\t\t// @ts-ignore\r\n\t\tif (thumbnailRes && thumbnailRes.status === 'ok') {\r\n\t\t\topenSuccessNotification('Seted as thumbnail!')\r\n\t\t\t// const positionInBrand = () => {\r\n\t\t\t// \treturn brandList.map(item => item.id).indexOf(categoryDetailData.id);\r\n\t\t\t// }\r\n\r\n\t\t\t// const index = positionInBrand();\r\n\r\n\t\t\t// const prevItem = brandList.find(item => item.id === categoryDetailData.id);\r\n\r\n\t\t\t// if (prevItem) {\r\n\t\t\t// \tconst updatedItem = Object.assign({}, brandList[index], { ...prevItem, cover: image.cover });\r\n\t\t\t// \tconst updateBrandList = [...brandList.slice(0, index), updatedItem, ...brandList.slice(index + 1)];\r\n\t\t\t// \tsetBrandList(updateBrandList);\r\n\r\n\t\t\t// }\r\n\t\t}\r\n\t\telse {\r\n\t\t\topenErrorNotification(\"Couldn't set as thumbnail, Something went wrong\")\r\n\t\t}\r\n\r\n\t}\r\n\r\n\r\n\r\n\tconsole.log('categoryDetailState', brandDetailState);\r\n\r\n\tconst handleSubmit = async (values: any, actions: any) => {\r\n\r\n\r\n\t\tif (brandDetailState && brandDetailState.done && Object.keys(categoryDetailData).length > 0) {\r\n\t\t\t// @ts-ignore\r\n\t\t\tconst images = myImages && myImages.length > 0 ? myImages.map(item => item.id) : [];\r\n\r\n\t\t\tif (images[0] && images.length > 1) {\r\n\t\t\t\tawait handleAttachImageToItemMultipleFetch({\r\n\t\t\t\t\turlOptions: {\r\n\t\t\t\t\t\tplaceHolders: {\r\n\t\t\t\t\t\t\tcollection: 'category',\r\n\t\t\t\t\t\t\titemId: categoryDetailData.id\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t},\r\n\t\t\t\t\tbody: {\r\n\t\t\t\t\t\timage: images\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\telse if (images[0] && images.length < 1) {\r\n\t\t\t\tawait handleAttachImageToItemSingleFetch({\r\n\t\t\t\t\turlOptions: {\r\n\t\t\t\t\t\tplaceHolders: {\r\n\t\t\t\t\t\t\timageId: images[0].id,\r\n\t\t\t\t\t\t\tcollection: 'category',\r\n\t\t\t\t\t\t\titemId: categoryDetailData.id\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\r\n\r\n\r\n\r\n\t\tconst updateBrandRes = await handleUpdateBrandFetch({\r\n\t\t\turlOptions: {\r\n\t\t\t\tplaceHolders: {\r\n\t\t\t\t\tid: categoryDetailData.id\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tbody: {\r\n\t\t\t\tname: values.name.trim(),\r\n\t\t\t\tdescription: values.description,\r\n\t\t\t\ticon: imageFile,\r\n\t\t\t\ttype: 'bottom'\r\n\t\t\t},\r\n\t\t});\r\n\r\n\t\t// @ts-ignore\r\n\t\tif (updateBrandRes && updateBrandRes.status === 'ok') {\r\n\t\t\topenSuccessNotification();\r\n\t\t\tsetCategoryEditVisible(false);\r\n\r\n\r\n\t\t\t// const positionInBrand = () => {\r\n\t\t\t// \treturn brandList.map(item => item.id).indexOf(categoryDetailData.id);\r\n\t\t\t// }\r\n\r\n\t\t\t// const index = positionInBrand();\r\n\t\t\t// const updatedItem = Object.assign({}, brandList[index], { ...updateBrandRes });\r\n\t\t\t// console.log('updateBrandList', updatedItem)\r\n\r\n\t\t\t// const updateBrandList = [...brandList.slice(0, index), updatedItem, ...brandList.slice(index + 1)];\r\n\r\n\t\t\t// setBrandList(updateBrandList);\r\n\r\n\r\n\t\t\tactions.resetForm();\r\n\r\n\t\t}\r\n\t\telse {\r\n\t\t\topenErrorNotification();\r\n\t\t}\r\n\r\n\t\tactions.setSubmitting(false);\r\n\t};\r\n\r\n\r\n\r\n\r\n\r\n\tuseEffect(() => {\r\n\t\tif (categoryDetailData.type === 'top') {\r\n\t\t\t// setisparentcategoryChecked()\r\n\t\t}\r\n\t}, [categoryDetailData])\r\n\r\n\r\n\tconst handleCancel = (e: any) => {\r\n\t\tsetCategoryEditVisible(false);\r\n\t\tsetmyImages(false);\r\n\t};\r\n\r\n\r\n\tconst getisSubmitButtonDisabled = (values, isValid) => {\r\n\t\tif (!values.name || !isValid) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\r\n\tconst onChangeSelect = (value) => {\r\n\t\tsetselectedParentId(value);\r\n\t}\r\n\r\n\r\n\r\n\r\n\tfunction getBase64(img, callback) {\r\n\t\tconst reader = new FileReader();\r\n\t\treader.addEventListener('load', () => callback(reader.result));\r\n\t\treader.readAsDataURL(img);\r\n\t}\r\n\r\n\r\n\tfunction beforeUpload(file) {\r\n\t\tconst isJpgOrPng = file.type === 'image/jpeg' || file.type === 'image/png';\r\n\t\tif (!isJpgOrPng) {\r\n\t\t\tmessage.error('You can only upload JPG/PNG file!');\r\n\t\t}\r\n\t\tconst isLt2M = file.size / 1024 / 1024 < 2;\r\n\t\tif (!isLt2M) {\r\n\t\t\tmessage.error('Image must smaller than 2MB!');\r\n\t\t}\r\n\r\n\r\n\t\tgetBase64(file, imageUrl => {\r\n\t\t\tsetImageUrl(imageUrl)\r\n\t\t\tsetImagefile(file)\r\n\t\t\tsetLoadingThumbnail(false)\r\n\t\t})\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\r\n\r\n\r\n\tconst handleImagesDelete = (id) => {\r\n\t\t// @ts-ignore\r\n\t\tconst newImages = myImages && myImages.filter(image => {\r\n\t\t\treturn image.id !== id;\r\n\t\t})\r\n\r\n\t\t// @ts-ignore\r\n\t\tsetmyImages([]);\r\n\t}\r\n\r\n\r\n\tconst uploadButton = (\r\n\t\t<div>\r\n\t\t\t{loadingThumnail ? <LoadingOutlined /> : <PlusOutlined />}\r\n\t\t\t<div className=\"ant-upload-text\">Upload</div>\r\n\t\t</div>\r\n\t);\r\n\r\n\r\n\r\n\r\n\r\n\tconsole.log('cateogryDetailmyImages', myImages)\r\n\r\n\treturn (\r\n\t\t<Formik\r\n\t\t\tonSubmit={(values, actions) => handleSubmit(values, actions)}\r\n\t\t\tvalidationSchema={validationSchema}\r\n\t\t\tvalidateOnBlur={false}\r\n\t\t\tenableReinitialize={true}\r\n\t\t\tinitialValues={\r\n\t\t\t\t{ ...initialValues, ...categoryDetailData }\r\n\t\t\t}\r\n\t\t>\r\n\t\t\t{({\r\n\t\t\t\thandleChange,\r\n\t\t\t\tvalues,\r\n\t\t\t\thandleSubmit,\r\n\t\t\t\terrors,\r\n\t\t\t\tisValid,\r\n\t\t\t\tisSubmitting,\r\n\t\t\t\ttouched,\r\n\t\t\t\thandleBlur,\r\n\t\t\t\tsetFieldTouched,\r\n\t\t\t\thandleReset,\r\n\t\t\t}) => (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<Modal\r\n\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\ttop: '40px'\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\ttitle=\"Category Detail\"\r\n\t\t\t\t\t\t\tvisible={categoryEditVisible}\r\n\t\t\t\t\t\t\tonOk={(e: any) => handleSubmit(e)}\r\n\t\t\t\t\t\t\tonCancel={handleCancel}\r\n\t\t\t\t\t\t\tokText='Update'\r\n\t\t\t\t\t\t\tokButtonProps={{\r\n\t\t\t\t\t\t\t\tloading: isSubmitting,\r\n\t\t\t\t\t\t\t\thtmlType: \"submit\",\r\n\t\t\t\t\t\t\t\tdisabled: getisSubmitButtonDisabled(values, isValid)\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\tlabel='Title'\r\n\t\t\t\t\t\t\t\tvalue={values.name}\r\n\t\t\t\t\t\t\t\tname='name'\r\n\t\t\t\t\t\t\t\tisError={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateBrandState.error['error']['name'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateBrandState.error['error']['name'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('name');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\trows={3}\r\n\t\t\t\t\t\t\t\tlabel='Description'\r\n\t\t\t\t\t\t\t\tvalue={values.description}\r\n\t\t\t\t\t\t\t\tname='description'\r\n\t\t\t\t\t\t\t\tisError={(touched.description && errors.description) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateBrandState.error['error']['description'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.description && errors.description) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateBrandState.error['error']['description'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('description');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t{/* <div style={{\r\n\t\t\t\t\t\t\t\tmarginTop: '25px'\r\n\t\t\t\t\t\t\t}}></div>\r\n\r\n\t\t\t\t\t\t\t<div className='switchLabelContainer'>\r\n\t\t\t\t\t\t\t\t<Switch\r\n\t\t\t\t\t\t\t\t\tchecked={isparentCategoryChecked}\r\n\t\t\t\t\t\t\t\t\tonChange={onSwitchChange} />\r\n\t\t\t\t\t\t\t\t<div className='switchLabelContainer-textContainer'>\r\n\t\t\t\t\t\t\t\t\t<h5 >Top level Category</h5>\r\n\t\t\t\t\t\t\t\t\t<h5 className='switchLabelContainer-desc'>Disable to select a Parent Category</h5>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t{!isparentCategoryChecked && (\r\n\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>Parent Category</h3>\r\n\t\t\t\t\t\t\t\t\t<Select\r\n\t\t\t\t\t\t\t\t\t\tshowSearch\r\n\t\t\t\t\t\t\t\t\t\tstyle={{ width: 400 }}\r\n\t\t\t\t\t\t\t\t\t\tplaceholder='Select a Parent Category'\r\n\t\t\t\t\t\t\t\t\t\toptionFilterProp='children'\r\n\t\t\t\t\t\t\t\t\t\tonChange={onChangeSelect}\r\n\t\t\t\t\t\t\t\t\t\t// onFocus={onFocus}\r\n\t\t\t\t\t\t\t\t\t\t// onBlur={onBlur}\r\n\t\t\t\t\t\t\t\t\t\t// onSearch={onSearch}\r\n\t\t\t\t\t\t\t\t\t\tfilterOption={(input, option: any) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t{brandList.length > 0 && brandList.map(category => {\r\n\t\t\t\t\t\t\t\t\t\t\treturn <Option value={category.id}>{category.name}</Option>\r\n\t\t\t\t\t\t\t\t\t\t})}\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t</Select>\r\n\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t)}\r\n\r\n\r\n\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\tmarginTop: '20px'\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\r\n\t\t\t\t\t\t\t<div className='addproductSection-left-header' >\r\n\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>Icon </h3>\r\n\t\t\t\t\t\t\t\t<Tooltip\r\n\t\t\t\t\t\t\t\t\tplacement=\"left\" title={'Add Icon image for this category'}>\r\n\t\t\t\t\t\t\t\t\t<a href='###'>\r\n\t\t\t\t\t\t\t\t\t\t<InfoCircleOutlined />\r\n\t\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t<Upload\r\n\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\tborderRadius: \"8px\"\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\tname=\"avatar\"\r\n\t\t\t\t\t\t\t\tlistType=\"picture-card\"\r\n\t\t\t\t\t\t\t\tclassName=\"avatar-uploader\"\r\n\t\t\t\t\t\t\t\tshowUploadList={false}\r\n\t\t\t\t\t\t\t\tbeforeUpload={beforeUpload}\r\n\t\t\t\t\t\t\t\tmultiple={false}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t{imageUrl ? <img src={imageUrl} alt=\"avatar\" style={{ width: '100%' }} /> : uploadButton}\r\n\t\t\t\t\t\t\t</Upload>\r\n */}\r\n\r\n\r\n\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\tmarginTop: '20px'\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\r\n\t\t\t\t\t\t\t<div className='addproductSection-left-header'\r\n\r\n\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\tmarginBottom: '-5px'\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>Images</h3>\r\n\t\t\t\t\t\t\t\t{/* <div  >\r\n\t\t\t\t\t<FileOutlined />\r\n\t\t\t\t\t<span>Media Center</span>\r\n\t\t\t\t</div> */}\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\t\t\t\t\t\t\t<div className='aboutToUploadImagesContainer'>\r\n\r\n\t\t\t\t\t\t\t\t{brandDetailState && (\r\n\t\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t\t{myImages &&\r\n\t\t\t\t\t\t\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\t\t\t\t\t\t\tmyImages.length > 0 && myImages.map((image, index) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div className='aboutToUploadImagesContainer__item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='aboutToUploadImagesContainer__item-imgContainer'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetCoverImageId(image.id);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleSetImageAsThumnail(image);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<img src={image.cover} alt={image.alt} />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleImagesDelete(image.id)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleDetachSingleImage(image.id)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='aboutToUploadImagesContainer__item-remove'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<CloseOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{coverImageId === image.id ? (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className='aboutToUploadImagesContainer__item-cover'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<CheckOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t) : !coverImageId && index === 0 && (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className='aboutToUploadImagesContainer__item-cover'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<CheckOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t\t\t})}\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t<Tooltip\r\n\t\t\t\t\t\t\t\t\t\t\ttitle={'Attach images'}>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetvisibleMedia(true);\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\tclassName='aboutToUploadImagesContainer__uploadItem'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t{/* <FileAddOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FileImageTwoTone />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FileImageOutlined /> */}\r\n\t\t\t\t\t\t\t\t\t\t\t\t<FileImageFilled />\r\n\t\t\t\t\t\t\t\t\t\t\t\t{/* <h5>\r\n\t\t\t\t\t\t\t\t\t\t\t\t     Select From Library\r\n\t\t\t\t\t\t\t\t\t\t\t<     /h5> */}\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span className='aboutToUploadImagesContainer__uploadItem-plus'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<PlusOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t\t)}\r\n\r\n\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t</Modal>\r\n\r\n\t\t\t\t\t\t<MediaLibrary\r\n\t\t\t\t\t\t\tsetvisible={setvisibleMedia}\r\n\t\t\t\t\t\t\tvisible={visibleMedia}\r\n\t\t\t\t\t\t\tsetmyImages={setmyImages}\r\n\t\t\t\t\t\t\tmyImages={myImages}\r\n\t\t\t\t\t\t\tmyGoddamnImages={myGoddamnImages}\r\n\t\t\t\t\t\t\tsetMyGoddamnImages={setMyGoddamnImages}\r\n\t\t\t\t\t\t\tisModalOpenForImages={true}\r\n\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</>\r\n\t\t\t\t)}\r\n\t\t</Formik>\r\n\r\n\r\n\r\n\r\n\t);\r\n};\r\n\r\nexport default AddNewBrand;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useParams, useHistory } from \"react-router\";\r\n\r\n\r\n// import hooks\r\nimport { useHandleFetch } from \"../../hooks\";\r\n\r\n// import lib\r\nimport {\r\n    EditOutlined,\r\n} from '@ant-design/icons';\r\n\r\nimport { Skeleton, Empty, Button, notification, Table, Space, Input as CoolInput, Tooltip, Modal } from 'antd';\r\n\r\n\r\n\r\n// import components\r\nimport { DataTableSkeleton } from \"../../components/Placeholders\";\r\nimport CategoryEdit from \"./CategoryEdit\";\r\n\r\n\r\nconst { Column, ColumnGroup } = Table;\r\nconst { Search } = CoolInput;\r\n\r\n\r\ninterface Props {\r\n    productRecord?: any;\r\n}\r\n\r\nconst NewBrandDetail = (props: Props) => {\r\n    const [categoryDetailState, handleCategoryDetailFetch] = useHandleFetch({}, 'categoryDetail');\r\n    const [categoryProductsState, handleCategoryProductsFetch] = useHandleFetch({}, 'categoryProducts');\r\n\r\n    const params = useParams();\r\n    const history = useHistory();\r\n    const categoryId = params['id'];\r\n    const [categoryEditVisible, setCategoryEditVisible] = useState(false);\r\n\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        const getCategoryDetail = async () => {\r\n            await handleCategoryDetailFetch({\r\n                urlOptions: {\r\n                    placeHolders: {\r\n                        id: categoryId\r\n                    }\r\n                }\r\n            })\r\n        };\r\n\r\n        getCategoryDetail();\r\n\r\n    }, [categoryId]);\r\n\r\n    useEffect(() => {\r\n\r\n        const getCategoryProducts = async () => {\r\n            await handleCategoryProductsFetch({\r\n                urlOptions: {\r\n                    placeHolders: {\r\n                        id: categoryId\r\n                    }\r\n                }\r\n            })\r\n        };\r\n\r\n        getCategoryProducts();\r\n\r\n    }, [categoryId]);\r\n\r\n\r\n\r\n\r\n    console.log('categoryProductsState', categoryProductsState);\r\n\r\n    console.log('brandParams', params);\r\n\r\n\r\n    return (\r\n        <div className='brandDetailContainer'>\r\n\r\n            <div className='brandDetailContainer__heading'>\r\n                <h3>\r\n                    Category Detail\r\n                </h3>\r\n\r\n                {categoryDetailState.done && categoryDetailState.data && (Object.keys(categoryDetailState.data).length > 0) && (\r\n                    <>\r\n                        <CategoryEdit\r\n                            categoryEditVisible={categoryEditVisible}\r\n                            setCategoryEditVisible={setCategoryEditVisible}\r\n                            categoryDetailData={categoryDetailState.data}\r\n                        />\r\n                        <Button\r\n                            onClick={() => setCategoryEditVisible(true)}\r\n                            type='link'\r\n                            icon={<EditOutlined />}\r\n                        >\r\n                            Edit\r\n                      </Button>\r\n                    </>\r\n                )}\r\n\r\n            </div>\r\n            <Skeleton\r\n                avatar paragraph={{ rows: 3 }}\r\n                loading={categoryDetailState.isLoading}>\r\n                {categoryDetailState.done && categoryDetailState.data && !(Object.keys(categoryDetailState.data).length > 0) && (\r\n                    <Empty description='No Category found' image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n                )}\r\n\r\n\r\n\r\n                {categoryDetailState.done && categoryDetailState.data && (Object.keys(categoryDetailState.data).length > 0) && (\r\n                    <>\r\n                        <div className='brandDetailContainer__header'>\r\n                            <div className='brandDetailContainer__header-coverContainer brandDetailContainer__header-coverContainer-category'>\r\n                                <img src={categoryDetailState.data['cover'] && categoryDetailState.data['cover']['cover']} alt=\"\" />\r\n                            </div>\r\n                            <div className='brandDetailContainer__header-info'>\r\n                                <h2>\r\n                                    {categoryDetailState.data['name']}\r\n                                </h2>\r\n                                <h3>\r\n                                    {categoryDetailState.data['description']}\r\n                                </h3>\r\n                                <h3>\r\n                                    Category type: <span>\r\n                                        {categoryDetailState.data['type']}\r\n                                    </span>\r\n                                </h3>\r\n\r\n                                {categoryDetailState.data['url'] && (\r\n                                    <h3>\r\n                                        URL:\r\n                                        <span>\r\n                                            {categoryDetailState.data['url']}\r\n                                        </span>\r\n\r\n                                    </h3>\r\n                                )}\r\n\r\n                            </div>\r\n                        </div>\r\n\r\n\r\n                        {categoryDetailState.data['icon'] && (\r\n                            <>\r\n                                <div className='brandDetailContainer__heading'>\r\n                                    <h3>\r\n                                        Icon\r\n                            </h3>\r\n                                </div>\r\n\r\n                                <div className='brandDetailContainer__inlineBox'>\r\n                                    <div className='brandDetailContainer__header-coverContainer brandDetailContainer__header-coverContainer-icon'>\r\n                                        <img src={categoryDetailState.data['icon'] && categoryDetailState.data['icon']} alt=\"\" />\r\n                                    </div>\r\n\r\n                                </div>\r\n\r\n                                <div style={{\r\n                                    marginBottom: \"25px\"\r\n                                }}></div>\r\n                            </>\r\n                        )}\r\n\r\n\r\n                        {categoryDetailState.data['image'] && categoryDetailState.data['image'].length > 0 && (\r\n                            <>\r\n                                <div className='brandDetailContainer__heading'>\r\n                                    <h3>\r\n                                        Image Gallary\r\n                                   </h3>\r\n                                </div>\r\n\r\n                                <div className='brandDetailContainer__inlineBox'>\r\n                                    <div className='brandDetailContainer__header-coverContainer brandDetailContainer__header-coverContainer-icon'>\r\n                                        <img src={categoryDetailState.data['icon'] && categoryDetailState.data['icon']} alt=\"\" />\r\n                                    </div>\r\n\r\n                                </div>\r\n\r\n                                <div style={{\r\n                                    marginBottom: \"25px\"\r\n                                }}></div>\r\n                            </>\r\n                        )}\r\n\r\n\r\n                        {categoryDetailState.data['subCategory'] && categoryDetailState.data['subCategory'].length > 0 && (\r\n                            <>\r\n                                <div className='brandDetailContainer__heading'>\r\n                                    <h3>\r\n                                        Child Categories\r\n                                   </h3>\r\n                                </div>\r\n\r\n                                <div className='smallcatCardContainer'>\r\n                                    {categoryDetailState.data['subCategory'].map(subCat => {\r\n                                        return (\r\n                                            <div\r\n                                                onClick={() => history.push(`/admin/category/${subCat.id}`)}\r\n                                                className='smallcatCardContainer__card'>\r\n                                                <div className='smallcatCardContainer__card-coverbox'>\r\n                                                    <img src={subCat.cover} alt=\"\" />\r\n                                                </div>\r\n                                                <div className='smallcatCardContainer__card-info'>\r\n                                                    <h3>\r\n                                                        {subCat.name}\r\n                                                    </h3>\r\n                                                </div>\r\n                                            </div>\r\n                                        )\r\n                                    })}\r\n\r\n                                </div>\r\n\r\n                                <div style={{\r\n                                    marginBottom: \"25px\"\r\n                                }}></div>\r\n                            </>\r\n                        )}\r\n\r\n\r\n                    </>\r\n\r\n                )}\r\n\r\n            </Skeleton>\r\n\r\n            <div className='brandDetailContainer__heading'>\r\n                <h3>\r\n                    Products\r\n                </h3>\r\n            </div>\r\n            <div className='brandDetailContainer__body'>\r\n                {categoryProductsState.isLoading && <DataTableSkeleton />}\r\n                {categoryProductsState.done && !(categoryProductsState.data.length > 0) && (\r\n                    <div style={{\r\n                        marginTop: '100px'\r\n                    }}>\r\n                        <Empty description='No Products exists in this category' image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n                    </div>\r\n                )}\r\n\r\n                {categoryProductsState.done && categoryProductsState.data && categoryProductsState.data.length > 0 && (\r\n                    <>\r\n                        <Table\r\n                            style={{\r\n                                paddingTop: '10px',\r\n                                borderRadius: '5px !important',\r\n                                overflow: 'hidden',\r\n                                boxShadow: '0 0.125rem 0.625rem rgba(227, 231, 250, 0.3), 0 0.0625rem 0.125rem rgba(206, 220, 233, 0.4)'\r\n                            }}\r\n\r\n                            size='small'\r\n                            dataSource={categoryProductsState.data}\r\n                            tableLayout={'auto'}\r\n                            onHeaderRow={column => {\r\n                                return {\r\n                                    style: {\r\n                                        color: 'red !important'\r\n                                    }\r\n\r\n                                };\r\n                            }}\r\n                        >\r\n                            <Column\r\n                                title=\"\"\r\n                                dataIndex=\"cover\"\r\n                                key=\"id\"\r\n                                width={'80px'}\r\n\r\n                                className='classnameofthecolumn'\r\n\r\n                                render={(cover, record: any) => (\r\n                                    <>\r\n                                        <img\r\n                                            onClick={() => {\r\n                                                history.push(`/admin/product/${record.id}`)\r\n                                                // go to product detail\r\n                                            }}\r\n                                            src={cover} alt='cover img' style={{\r\n                                                height: '40px',\r\n                                                width: '40px',\r\n                                                objectFit: \"contain\",\r\n                                                borderRadius: '3px',\r\n                                                cursor: 'pointer'\r\n                                            }} />\r\n\r\n\r\n\r\n\r\n                                    </>\r\n                                )}\r\n                            />\r\n\r\n                            <Column\r\n                                title=\"Name\"\r\n                                dataIndex=\"name\"\r\n                                key=\"id\"\r\n                                className='classnameofthecolumn'\r\n                                render={(text, record: any) => (\r\n                                    <>\r\n                                        <h4\r\n                                            onClick={() => {\r\n                                                history.push(`/admin/product/${record.id}`)\r\n                                            }}\r\n                                            style={{\r\n                                                fontWeight: 400,\r\n                                                color: '#555',\r\n                                                cursor: 'pointer'\r\n\r\n                                            }}>\r\n                                            {text}\r\n                                        </h4>\r\n\r\n\r\n                                    </>\r\n                                )}\r\n\r\n                            />\r\n\r\n                            <Column\r\n                                title=\"Offer Price\"\r\n                                dataIndex=\"offerPrice\"\r\n                                key=\"id\"\r\n                                className='classnameofthecolumn'\r\n\r\n                            />\r\n\r\n\r\n                            <Column\r\n                                title=\"Price\"\r\n                                dataIndex=\"price\"\r\n                                key=\"id\"\r\n                                className='classnameofthecolumn'\r\n\r\n                            />\r\n\r\n                        </Table>\r\n                    </>\r\n                )}\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NewBrandDetail\r\n","import React, { useState } from 'react';\r\nimport { Modal, notification } from 'antd';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport { useHandleFetch } from '../../hooks';\r\nimport { CheckCircleOutlined, PlusOutlined, EditOutlined, DeleteOutlined, EditFilled } from '@ant-design/icons';\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    name: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Bundle Updated',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Something Went Wrong',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n    });\r\n};\r\n\r\n\r\ninterface Props {\r\n    category: any;\r\n    setvisible: any;\r\n    visible: any;\r\n    tagList: any;\r\n    setTagList: any;\r\n}\r\n\r\nconst ProductBundleQuickEdit = ({ category, setvisible, visible, tagList, setTagList }: Props) => {\r\n    const [updateTagState, handleUpdateCategoryFetch] = useHandleFetch({}, 'updateBundle');\r\n\r\n    const handleSubmit = async (values: any, actions: any) => {\r\n\r\n        const updateTagRes = await handleUpdateCategoryFetch({\r\n            urlOptions: {\r\n                placeHolders: {\r\n                    id: values.id,\r\n                }\r\n            },\r\n            body: {\r\n                name: values.name,\r\n                description: values.description,\r\n                price: category.price,\r\n                ...category\r\n            },\r\n        });\r\n\r\n        // @ts-ignore\r\n        if (updateTagRes && updateTagRes.status === 'ok') {\r\n            openSuccessNotification();\r\n\r\n            const positionInTag = () => {\r\n                return tagList.map(item => item.id).indexOf(category.id);\r\n            }\r\n\r\n            const index = positionInTag();\r\n\r\n            // @ts-ignore\r\n            const updatedItem = Object.assign({}, tagList[index], { ...updateTagRes });\r\n            const updateTagList = [...tagList.slice(0, index), updatedItem, ...tagList.slice(index + 1)];\r\n            setTagList(updateTagList);\r\n\r\n        }\r\n        else {\r\n            openErrorNotification();\r\n        }\r\n\r\n        actions.setSubmitting(false);\r\n        setvisible(false)\r\n    };\r\n\r\n\r\n    const handleCancel = (e: any) => {\r\n        setvisible(false);\r\n    };\r\n\r\n\r\n    const getisSubmitButtonDisabled = (values, isValid) => {\r\n        if (!values.name || !isValid) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    return (\r\n        <Formik\r\n            onSubmit={(values, actions) => handleSubmit(values, actions)}\r\n            validationSchema={validationSchema}\r\n            validateOnBlur={false}\r\n            enableReinitialize={true}\r\n            initialValues={\r\n                { ...category }\r\n            }\r\n        >\r\n            {({\r\n                handleChange,\r\n                values,\r\n                handleSubmit,\r\n                errors,\r\n                isValid,\r\n                isSubmitting,\r\n                touched,\r\n                handleBlur,\r\n                setFieldTouched,\r\n                handleReset,\r\n            }) => (\r\n                    <>\r\n                        <Modal\r\n                            title=\"Quick Edit\"\r\n                            visible={visible}\r\n                            onOk={(e: any) => handleSubmit(e)}\r\n                            onCancel={handleCancel}\r\n                            okText='Update'\r\n                            okButtonProps={{\r\n                                loading: isSubmitting,\r\n                                htmlType: \"submit\",\r\n                                disabled: getisSubmitButtonDisabled(values, isValid)\r\n                            }}\r\n                        >\r\n                            <Input\r\n                                label='Title'\r\n                                value={values.name}\r\n                                name='name'\r\n                                isError={(touched.name && errors.name) ||\r\n                                    (!isSubmitting && updateTagState.error['error']['name'])}\r\n\r\n                                errorString={(touched.name && errors.name) ||\r\n                                    (!isSubmitting && updateTagState.error['error']['name'])}\r\n                                onChange={(e: any) => {\r\n                                    handleChange(e);\r\n                                    setFieldTouched('name');\r\n                                }}\r\n                            />\r\n                            <TextArea\r\n                                label='Description'\r\n                                value={values.description}\r\n                                name='description'\r\n                                isError={(touched.description && errors.description) ||\r\n                                    (!isSubmitting && updateTagState.error['error']['description'])}\r\n\r\n                                errorString={(touched.description && errors.description) ||\r\n                                    (!isSubmitting && updateTagState.error['error']['description'])}\r\n                                onChange={(e: any) => {\r\n                                    handleChange(e);\r\n                                    setFieldTouched('description');\r\n                                }}\r\n                            />\r\n                        </Modal>\r\n\r\n                    </>\r\n                )}\r\n        </Formik>\r\n    );\r\n};\r\n\r\n\r\nexport default ProductBundleQuickEdit;\r\n","import React from 'react';\r\nimport { Form, Input } from 'antd';\r\n\r\n\r\ninterface Props {\r\n    label?: string;\r\n    type?: string;\r\n    defaultValue?:string;\r\n    value?: string; \r\n    onChange?: any; \r\n    disabled?: boolean; \r\n    isError?: boolean; \r\n    errorString?: string; \r\n    name?:string;\r\n    size?: any; \r\n}\r\n\r\nconst Demo = ({ label, type, defaultValue, value, onChange, disabled, isError, errorString,  name, size='middle'}: Props) => {\r\n    return (\r\n        <>\r\n        {label && <h3 className='inputFieldLabel-small'>\r\n                {label}\r\n            </h3>}\r\n           \r\n            <Form.Item\r\n            validateStatus={isError ? \"error\" : \"\"}\r\n            // hasFeedback validateStatus=\"success\"\r\n            help={errorString}\r\n            // rules={[{ required: true }]}\r\n                >\r\n                     <Input\r\n                     size={size}\r\n                    allowClear \r\n                    name={name}\r\n                    disabled={disabled}\r\n                    value={value}\r\n                    onChange={onChange}\r\n                    className='inputclassName-small' />\r\n               \r\n            </Form.Item>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Demo; ","import React from 'react'\r\nimport { DatePicker } from 'antd';\r\nimport moment from 'moment';\r\n\r\n\r\n\r\ninterface Props {\r\n    onChange: any;\r\n    label?: string;\r\n    withTime?: boolean;\r\n    placeholder?: string;\r\n    date?: string;\r\n    time?: string;\r\n}\r\n\r\n\r\nconst DatePickerComponent = ({ onChange, label, withTime, placeholder, date, time }: Props) => {\r\n    function disabledDate(current) {\r\n        // Can not select days before today and today\r\n        return current && current < moment(date) && current > moment(date);\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <h3 className='inputFieldLabel'>{label}</h3>\r\n\r\n            {withTime ? <DatePicker\r\n                format=\"YYYY-MM-DD HH:mm:ss\"\r\n                className='inputclassName'\r\n                placeholder={placeholder}\r\n                style={{\r\n                    width: \"100%\",\r\n                    borderColor: \"#eee\"\r\n                }}\r\n\r\n\r\n                onChange={onChange}\r\n                {...(time && {\r\n                    defaultValue: moment(time),\r\n                })}\r\n            />\r\n                : (\r\n                    <DatePicker\r\n\r\n                        placeholder={placeholder}\r\n                        className='inputclassName'\r\n                        style={{\r\n                            width: \"100%\",\r\n                            borderColor: \"#eee\"\r\n                        }}\r\n                        onChange={onChange}\r\n                        {...(date && {\r\n                            defaultValue: moment(date),\r\n                        })}\r\n                    />\r\n                )}\r\n\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default DatePickerComponent\r\n\r\n\r\n\r\n\r\nconst { RangePicker } = DatePicker;\r\n\r\nfunction range(start, end) {\r\n    const result = [];\r\n    for (let i = start; i < end; i++) {\r\n        result.push(i);\r\n    }\r\n    return result;\r\n}\r\n\r\n// function disabledDate(current) {\r\n//   // Can not select days before today and today\r\n//   return current && current < moment().endOf('day');\r\n// }\r\n\r\n","import React from 'react';\r\nimport { notification } from 'antd';\r\nimport {\r\n    CheckCircleOutlined,\r\n    ExclamationCircleOutlined\r\n} from '@ant-design/icons';\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Succeed',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n    });\r\n};\r\n\r\n\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n    notification.error({\r\n        message: message || 'Something Went Wrong',\r\n        description: '',\r\n        icon: <ExclamationCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n    });\r\n};\r\n\r\n\r\nexport {\r\n    openSuccessNotification,\r\n    openErrorNotification\r\n}","import React, { useEffect, useState } from 'react';\r\n\r\n\r\n// import hooks\r\nimport { useHandleFetch } from '../../hooks';\r\n\r\n// import components \r\nimport Empty from \"../../components/Empty\";\r\n\r\n\r\n// import libraries \r\nimport { Button, Tag, Input, Spin } from 'antd';\r\nimport {\r\n  PlusOutlined\r\n} from '@ant-design/icons';\r\n\r\n\r\n\r\n\r\nconst { CheckableTag } = Tag;\r\nconst { Search } = Input;\r\n\r\ninterface Props {\r\n  setTagIds?: any;\r\n  selectedTags?: any;\r\n  setSelectedTags?: any;\r\n}\r\n\r\n\r\nconst Tags = ({\r\n  setTagIds,\r\n  setSelectedTags,\r\n  selectedTags\r\n\r\n}: Props) => {\r\n  const [options, setoptions] = useState([]);\r\n  const [selectedOpions, setselectedOptions] = useState([]);\r\n  const [tagState, handleTagListFetch] = useHandleFetch({}, 'tagList');\r\n  const [searchValue, setsearchValue] = useState('');\r\n\r\n\r\n  const handleChange = (tag, checked) => {\r\n    const nextSelectedTags = checked ? [...selectedTags, tag] : selectedTags.filter(t => t !== tag);\r\n    setSelectedTags(nextSelectedTags);\r\n\r\n    if (tagState.done && tagState.data.length > 0 && nextSelectedTags.length > 0) {\r\n      const selectedCategoryIds = nextSelectedTags.map((item) => {\r\n        const selectedcategory = tagState.data.find(\r\n          (cat) => cat.name.toLowerCase() === item.toLowerCase()\r\n        );\r\n        if (selectedcategory) {\r\n          return selectedcategory.id;\r\n        }\r\n      });\r\n      setTagIds(selectedCategoryIds);\r\n    }\r\n  }\r\n\r\n\r\n  useEffect(() => {\r\n    if (tagState.done && tagState.data.length > 0 && selectedTags.length > 0) {\r\n      const selectedCategoryIds = selectedTags.map((item) => {\r\n        const selectedcategory = tagState.data.find(\r\n          (cat) => cat.id === item\r\n        );\r\n        if (selectedcategory) {\r\n          return selectedcategory.name;\r\n        }\r\n      });\r\n      setSelectedTags(selectedCategoryIds);\r\n    }\r\n  }, [tagState]);\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    const setTags = async () => {\r\n      const tagListRes = await handleTagListFetch({\r\n        urlOptions: {\r\n          params: {\r\n            isSubCategory: false\r\n          }\r\n        }\r\n      });\r\n\r\n      // @ts-ignoref\r\n      if (tagListRes && tagListRes.length > 0) {\r\n        // @ts-ignore\r\n        const tagOptions = tagListRes.map((tag) => {\r\n          return tag.name\r\n        });\r\n        setoptions(tagOptions);\r\n      }\r\n\r\n    };\r\n\r\n    setTags();\r\n  }, []);\r\n\r\n\r\n\r\n  // const handleChange = (selectItems) => {\r\n  //   setselectedOptions(selectItems)\r\n\r\n  //   if (tagState.done && tagState.data.length > 0 && selectItems.length > 0) {\r\n  //     const selectedCategoryIds = selectItems.map((item) => {\r\n  //       const selectedcategory = tagState.data.find(\r\n  //         (cat) => cat.name.toLowerCase() === item.toLowerCase()\r\n  //       );\r\n  //       if (selectedcategory) {\r\n  //         return selectedcategory.id;\r\n  //       }\r\n  //     });\r\n  //     setTagIds(selectedCategoryIds);\r\n  //   }\r\n\r\n\r\n  // }\r\n\r\n\r\n  const onSearchChange = (e) => {\r\n    setsearchValue(e.target.value);\r\n\r\n    if (e.target.value === '') {\r\n      if (tagState.data && tagState.data.length > 0) {\r\n        // @ts-ignore\r\n        const categoryNames = tagState.data.map((cat) => cat.name);\r\n        setoptions(categoryNames);\r\n      }\r\n    } else {\r\n      const newOptions =\r\n        options.length > 0\r\n          ? options.filter((option) => {\r\n            return option.toLowerCase().includes(searchValue.toLowerCase());\r\n          })\r\n          : [];\r\n\r\n      setoptions(newOptions);\r\n    }\r\n  };\r\n\r\n\r\n  console.log('selectedTags', selectedTags)\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n\r\n      {tagState.isLoading && (\r\n        <div style={{\r\n          padding: '15px 0',\r\n          width: '100%',\r\n          height: \"100%\",\r\n          display: \"flex\",\r\n          justifyContent: 'center',\r\n          alignItems: 'center'\r\n        }}>\r\n          <Spin />\r\n        </div>\r\n      )}\r\n\r\n\r\n\r\n      {tagState.done && !(tagState.data.length > 0) && (\r\n        <div style={{\r\n          width: '100%',\r\n          height: \"100%\",\r\n          display: \"flex\",\r\n          justifyContent: 'center',\r\n          alignItems: 'center'\r\n        }}>\r\n          <Empty title='No Tag found' height={100} />\r\n        </div>\r\n      )}\r\n\r\n\r\n      {/* \r\n      {tagState.done && tagState.data.length > 0 && options.length > 0 && <Select\r\n        mode=\"multiple\"\r\n        placeholder=\"search tags\"\r\n        value={selectedOpions}\r\n        onChange={handleChange}\r\n        style={{ width: '100%' }}\r\n      >\r\n        {options.filter(o => !selectedOpions.includes(o)).map(item => (\r\n          <Select.Option key={item} value={item}>\r\n            {item}\r\n          </Select.Option>\r\n        ))}\r\n      </Select>} */}\r\n\r\n      {tagState.done && tagState.data.length > 0 && options.length > 0 && (\r\n        <>\r\n          <div className='addProduct__categoryBoxContainer-searchBox'>\r\n            <Search\r\n              width={'90%'}\r\n              style={{\r\n                height: '30px',\r\n                borderRadius: '3px !important',\r\n                borderColor: '#eee !important'\r\n              }}\r\n              size='middle'\r\n              placeholder='top, hot'\r\n              onSearch={(value) => console.log(value)}\r\n              onChange={onSearchChange}\r\n            />\r\n          </div>\r\n\r\n          {options.map(tag => (\r\n            <>\r\n              <CheckableTag\r\n                key={tag}\r\n                checked={selectedTags.indexOf(tag) > -1}\r\n                onChange={checked => handleChange(tag, checked)}\r\n              >\r\n                {tag}\r\n              </CheckableTag>\r\n            </>\r\n          ))}\r\n        </>\r\n      )}\r\n\r\n\r\n\r\n\r\n      {/* \r\n      <div style={{\r\n        marginTop: '15px'\r\n      }}>\r\n\r\n      </div>\r\n      <Button\r\n\r\n        // type=\"primary\"\r\n        className='btnSecondaryPlusOutline'\r\n        icon={<PlusOutlined />}\r\n      >\r\n        Add New\r\n      </Button> */}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Tags\r\n","import React, { useEffect, useState } from 'react';\r\n\r\n\r\n// import hooks\r\nimport { useHandleFetch } from '../../hooks';\r\n\r\n// import components \r\nimport Empty from \"../../components/Empty\";\r\n\r\n\r\n// import libraries \r\nimport { Select, Button, Spin } from 'antd';\r\nimport {\r\n\tPlusOutlined\r\n} from '@ant-design/icons';\r\n\r\n\r\ninterface Props {\r\n\tsetBrandId?: any;\r\n\tbrandId?: any;\r\n\tproductDetailState?: any;\r\n}\r\n\r\nconst { Option } = Select;\r\n\r\nconst Brands = ({ setBrandId, brandId, productDetailState }: Props) => {\r\n\tconst [options, setoptions] = useState([]);\r\n\tconst [selectedBrandId, setSelectedBrandId] = useState('');\r\n\tconst [brandState, handleTagListFetch] = useHandleFetch({}, 'brandList');\r\n\r\n\tfunction onChange(value) {\r\n\t\tsetSelectedBrandId(value);\r\n\t\tsetBrandId(value);\r\n\t\t// console.log(`selected ${value}`);\r\n\t}\r\n\r\n\tfunction onBlur() {\r\n\t\t// console.log('blur');\r\n\t}\r\n\r\n\tfunction onFocus() {\r\n\t\t// console.log('focus');\r\n\t}\r\n\r\n\tfunction onSearch(val) {\r\n\t\t// console.log('search:', val);\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tconst setBrands = async () => {\r\n\t\t\tconst brandListRes = await handleTagListFetch({});\r\n\r\n\t\t\t// @ts-ignore\r\n\t\t\tif (brandListRes && brandListRes.length > 0) {\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\tconst brandOptions = brandListRes.map((brand) => {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tvalue: brand.id,\r\n\t\t\t\t\t\tname: brand.name\r\n\t\t\t\t\t};\r\n\t\t\t\t});\r\n\t\t\t\tsetoptions(brandOptions);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tsetBrands();\r\n\t}, []);\r\n\r\n\treturn (\r\n\t\t<>\r\n\r\n\t\t\t<div></div>\r\n\r\n\t\t\t{brandState.isLoading && (\r\n\t\t\t\t<div style={{\r\n\t\t\t\t\tpadding: '15px 0',\r\n\t\t\t\t\twidth: '100%',\r\n\t\t\t\t\theight: \"100%\",\r\n\t\t\t\t\tdisplay: \"flex\",\r\n\t\t\t\t\tjustifyContent: 'center',\r\n\t\t\t\t\talignItems: 'center'\r\n\t\t\t\t}}>\r\n\t\t\t\t\t<Spin />\r\n\t\t\t\t</div>\r\n\t\t\t)}\r\n\r\n\r\n\r\n\t\t\t{brandState.done && !(brandState.data.length > 0) && (\r\n\t\t\t\t<div style={{\r\n\t\t\t\t\twidth: '100%',\r\n\t\t\t\t\theight: \"100%\",\r\n\t\t\t\t\tdisplay: \"flex\",\r\n\t\t\t\t\tjustifyContent: 'center',\r\n\t\t\t\t\talignItems: 'center'\r\n\t\t\t\t}}>\r\n\t\t\t\t\t<Empty title='No Brand found' height={100} />\r\n\t\t\t\t</div>\r\n\t\t\t)}\r\n\r\n\r\n\t\t\t{brandState.done && brandState.data && brandState.data.length > 0 && options.length > 0 && (\r\n\r\n\t\t\t\t<Select\r\n\t\t\t\t\tshowSearch\r\n\t\t\t\t\tstyle={{ width: '210px', borderRadius: '6px' }}\r\n\t\t\t\t\tplaceholder='Select a Brand'\r\n\t\t\t\t\toptionFilterProp='children'\r\n\t\t\t\t\tonChange={onChange}\r\n\t\t\t\t\tonFocus={onFocus}\r\n\t\t\t\t\tonBlur={onBlur}\r\n\t\t\t\t\tonSearch={onSearch}\r\n\t\t\t\t\tdefaultValue={brandId}\r\n\t\t\t\t\tfilterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n\t\t\t\t>\r\n\t\t\t\t\t{brandState.done &&\r\n\t\t\t\t\t\tbrandState.data.length > 0 &&\r\n\t\t\t\t\t\toptions.map((option) => {\r\n\t\t\t\t\t\t\treturn <Option value={option.value}>{option.name}</Option>;\r\n\t\t\t\t\t\t})}\r\n\t\t\t\t</Select>\r\n\t\t\t)}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\t\t\t{/* \r\n\t\t\t<div style={{\r\n\t\t\t\tmarginTop: '15px'\r\n\t\t\t}}>\r\n\r\n\t\t\t</div>\r\n\t\t\t<Button\r\n\r\n\t\t\t\t// type=\"primary\"\r\n\t\t\t\tclassName='btnSecondaryPlusOutline'\r\n\t\t\t\ticon={<PlusOutlined />}\r\n\t\t\t>\r\n\t\t\t\tAdd New\r\n      </Button> */}\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default Brands;\r\n","import React, { useState, useEffect } from 'react';\r\n\r\n// import components \r\nimport Empty from \"../../components/Empty\";\r\n\r\n// import hoooks\r\nimport { useHandleFetch } from '../../hooks';\r\n\r\n\r\n// import libraries \r\nimport { Input, Tree, Button, Spin } from 'antd';\r\nimport {\r\n\tPlusOutlined\r\n} from '@ant-design/icons';\r\n\r\n\r\nconst { Search } = Input;\r\n\r\n\r\n\r\ninterface Props {\r\n\tsetcategoryIds?: any;\r\n\tcategoryOptions?: any;\r\n\tsetCategoryOptions?: any;\r\n}\r\n\r\n\r\nconst Categories = ({ setcategoryIds, categoryOptions, setCategoryOptions }: Props) => {\r\n\tconst [options, setoptions] = useState([]);\r\n\tconst [searchValue, setsearchValue] = useState('');\r\n\r\n\tconst [categoryState, handleCategoryListFetch] = useHandleFetch({}, 'categorySelectist');\r\n\r\n\tuseEffect(() => {\r\n\t\tconst setCategories = async () => {\r\n\t\t\tconst categoryListRes = await handleCategoryListFetch({});\r\n\r\n\t\t\t// @ts-ignore\r\n\t\t\tif (categoryListRes && categoryListRes.length > 0) {\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\tsetoptions(categoryListRes);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tsetCategories();\r\n\t}, []);\r\n\r\n\tconst onSelect = (selectedKeys, info) => {\r\n\t\t// console.log('selectedKeys', selectedKeys, info);\r\n\t};\r\n\r\n\r\n\tconst onCheck = (checkedKeys, info) => {\r\n\t\tconst checkedIds = checkedKeys.checked || [];\r\n\t\tsetcategoryIds(checkedIds);\r\n\t\tsetCategoryOptions(checkedIds);\r\n\t};\r\n\r\n\tconst onSearchChange = (e) => {\r\n\t\tsetsearchValue(e.target.value);\r\n\r\n\t\tif (e.target.value === '') {\r\n\t\t\tif (categoryState.data && categoryState.data.length > 0) {\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\tconst categoryNames = categoryState.data.map((cat) => cat.name);\r\n\t\t\t\tsetoptions(categoryNames);\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tconst newOptions =\r\n\t\t\t\toptions.length > 0\r\n\t\t\t\t\t? options.filter((option) => {\r\n\t\t\t\t\t\treturn option.toLowerCase().includes(searchValue.toLowerCase());\r\n\t\t\t\t\t})\r\n\t\t\t\t\t: [];\r\n\r\n\t\t\tsetoptions(newOptions);\r\n\t\t}\r\n\t};\r\n\r\n\tconsole.log('categoryState', categoryState);\r\n\tconsole.log('optionsCat', options);\r\n\r\n\r\n\treturn (\r\n\t\t<div className='addProduct__categoryBoxContainer'>\r\n\r\n\t\t\t{categoryState.isLoading && (\r\n\t\t\t\t<div style={{\r\n\t\t\t\t\tpadding: '15px 0',\r\n\t\t\t\t\twidth: '100%',\r\n\t\t\t\t\theight: \"100%\",\r\n\t\t\t\t\tdisplay: \"flex\",\r\n\t\t\t\t\tjustifyContent: 'center',\r\n\t\t\t\t\talignItems: 'center'\r\n\t\t\t\t}}>\r\n\t\t\t\t\t<Spin />\r\n\t\t\t\t</div>\r\n\t\t\t)}\r\n\r\n\r\n\t\t\t{categoryState.done && !(categoryState.data.length > 0) && (\r\n\t\t\t\t<div style={{\r\n\t\t\t\t\twidth: '100%',\r\n\t\t\t\t\theight: \"100%\",\r\n\t\t\t\t\tdisplay: \"flex\",\r\n\t\t\t\t\tjustifyContent: 'center',\r\n\t\t\t\t\talignItems: 'center'\r\n\t\t\t\t}}>\r\n\t\t\t\t\t<Empty title='No category found' height={100} />\r\n\t\t\t\t</div>\r\n\t\t\t)}\r\n\r\n\t\t\t{categoryState.done && categoryState.data.length > 0 && options.length > 0 && (\r\n\t\t\t\t<>\r\n\t\t\t\t\t<div className='addProduct__categoryBoxContainer-searchBox'>\r\n\t\t\t\t\t\t<Search\r\n\t\t\t\t\t\t\twidth={'100%'}\r\n\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\theight: '30px',\r\n\t\t\t\t\t\t\t\tborderRadius: '3px !important',\r\n\t\t\t\t\t\t\t\tborderColor: '#eee !important'\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\tsize='middle'\r\n\t\t\t\t\t\t\tplaceholder='cloths, grocery'\r\n\t\t\t\t\t\t\tonSearch={(value) => console.log(value)}\r\n\t\t\t\t\t\t\tonChange={onSearchChange}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t// marginLeft: \"-20px\",\r\n\t\t\t\t\t}}>\r\n\t\t\t\t\t\t{options.length > 0 && (\r\n\t\t\t\t\t\t\t<Tree\r\n\t\t\t\t\t\t\t\tcheckable\r\n\t\t\t\t\t\t\t\tcheckedKeys={categoryOptions}\r\n\t\t\t\t\t\t\t\tonSelect={onSelect}\r\n\t\t\t\t\t\t\t\tonCheck={onCheck}\r\n\t\t\t\t\t\t\t\ttreeData={options}\r\n\t\t\t\t\t\t\t\tdefaultExpandAll={true}\r\n\t\t\t\t\t\t\t\tcheckStrictly={true}\r\n\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</>\r\n\r\n\t\t\t)}\r\n\t\t\t{/* <div style={{\r\n\t\t\t\tmarginTop: '15px'\r\n\t\t\t}}>\r\n\r\n\t\t\t</div>\r\n\t\t\t<Button\r\n\r\n\t\t\t\t// type=\"primary\"\r\n\t\t\t\tclassName='btnSecondaryPlusOutline'\r\n\t\t\t\ticon={<PlusOutlined />}\r\n\t\t\t>\r\n\t\t\t\tAdd New\r\n      </Button> */}\r\n\r\n\t\t\t{/* <CheckboxGroup options={options} value={checkedList} onChange={onChange} /> */}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Categories;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useHandleFetch } from '../../hooks';\r\nimport { Select, Skeleton } from 'antd';\r\n\r\n\r\ninterface Props {\r\n    setProductIds?: any;\r\n    productIds?: any;\r\n}\r\n\r\n\r\nconst Tags = ({\r\n    setProductIds,\r\n    productIds\r\n}: Props) => {\r\n    const [options, setoptions] = useState([]);\r\n    const [selectedOpions, setselectedOptions] = useState([]);\r\n    const [tagState, handleTagListFetch] = useHandleFetch({}, 'productList');\r\n\r\n    useEffect(() => {\r\n        const setTags = async () => {\r\n            const tagListRes = await handleTagListFetch({\r\n                urlOptions: {\r\n                    params: {\r\n                        isSubCategory: false\r\n                    }\r\n                }\r\n            });\r\n\r\n            // @ts-ignore\r\n            if (tagListRes && tagListRes.length > 0) {\r\n                // @ts-ignore\r\n                const tagOptions = tagListRes.map((tag) => {\r\n                    return tag.name\r\n                });\r\n                setoptions(tagOptions);\r\n            }\r\n\r\n        };\r\n\r\n        setTags();\r\n    }, []);\r\n\r\n\r\n\r\n    const handleChange = (selectItems) => {\r\n        setselectedOptions(selectItems);\r\n\r\n        console.log('selectedProducts', selectItems);\r\n\r\n        if (tagState.done && tagState.data.length > 0 && selectItems.length > 0) {\r\n            const selectedCategoryIds = selectItems.map((item) => {\r\n                const selectedcategory = tagState.data.find(\r\n                    (cat) => cat.name.toLowerCase() === item.toLowerCase()\r\n                );\r\n                if (selectedcategory) {\r\n                    return selectedcategory;\r\n                }\r\n            });\r\n            console.log('selectedCategoryIds', selectedCategoryIds);\r\n            setProductIds(selectedCategoryIds);\r\n        }\r\n        else {\r\n            setProductIds([])\r\n        }\r\n\r\n\r\n    }\r\n\r\n\r\n    // console.log('selectedOpions', selectedOpions);\r\n\r\n\r\n    return (\r\n        <>\r\n\r\n            <Skeleton loading={tagState.isLoading}>\r\n                {tagState.done && tagState.data.length > 0 && <Select\r\n                    mode=\"multiple\"\r\n                    placeholder=\"search products\"\r\n                    value={selectedOpions}\r\n                    onChange={handleChange}\r\n                    style={{ width: '100%' }}\r\n                >\r\n                    {options.filter(o => !selectedOpions.includes(o)).map(item => (\r\n                        <Select.Option key={item} value={item}>\r\n                            {item}\r\n                        </Select.Option>\r\n                    ))}\r\n                </Select>}\r\n            </Skeleton>\r\n\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Tags\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useHandleFetch } from '../../hooks';\r\n\r\n\r\n// import lib \r\n\r\n\r\n\r\n\r\ninterface Props {\r\n    setProductList?: any;\r\n    productList?: any;\r\n    productId?: any;\r\n    quantity?: any;\r\n    item?: any\r\n    variation?: any;\r\n}\r\n\r\nconst CartOverLayCartItem = ({\r\n    productList,\r\n    setProductList,\r\n    productId,\r\n    quantity,\r\n    item,\r\n    variation\r\n}: Props) => {\r\n\r\n\r\n    const [productDetailState, handleProductFetch] = useHandleFetch(\r\n        {},\r\n        'productDetailById'\r\n    );\r\n    const [product, setProduct] = useState({});\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [modifiedPrice, setModifiedPrice] = useState('');\r\n    const [selectedVariationId, setSelectedVariationId] = useState(variation);\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        setIsLoading(true);\r\n        const getAndSetProduct = async () => {\r\n            const product = await handleProductFetch({\r\n                urlOptions: {\r\n                    placeHolders: {\r\n                        id: productId,\r\n                    },\r\n                },\r\n            });\r\n\r\n            // @ts-ignore\r\n            setProduct(product);\r\n            setIsLoading(false);\r\n        };\r\n        getAndSetProduct()\r\n    }, []);\r\n\r\n\r\n\r\n    // useEffect(() => {\r\n    //     const positionInAttribute = () => {\r\n    //         return attributeList.map(item => item.id).indexOf(attribute.id);\r\n    //     }\r\n\r\n    //     const index = positionInAttribute();\r\n\r\n    //     const updatedItem = Object.assign({}, attributeList[index], { ...attributeItem });\r\n    //     const updateProductList = [...attributeList.slice(0, index), updatedItem, ...attributeList.slice(index + 1)];\r\n    //     setProductList(updateProductList);\r\n\r\n    // }, [attributeItem])\r\n\r\n\r\n    const handleAttributeDelete = () => {\r\n\r\n        const updateProductList = productList.filter(item => item._id !== productId);\r\n        setProductList(updateProductList);\r\n    }\r\n\r\n\r\n    const handleChangeQuantity = async (value) => {\r\n        if (value === 'minus') {\r\n            if (quantity === 1) {\r\n                return;\r\n            }\r\n\r\n            const positionInAttribute = () => {\r\n                return productList.map(item => item._id).indexOf(productId);\r\n            }\r\n\r\n            const index = positionInAttribute();\r\n\r\n            const updatedItem = Object.assign({}, productList[index], { ...item, quantity: --quantity });\r\n            const updateAttributeList = [...productList.slice(0, index), updatedItem, ...productList.slice(index + 1)];\r\n            setProductList(updateAttributeList);\r\n\r\n\r\n        } else {\r\n            const positionInAttribute = () => {\r\n                return productList.map(item => item._id).indexOf(productId);\r\n            }\r\n\r\n            const index = positionInAttribute();\r\n\r\n            const updatedItem = Object.assign({}, productList[index], { ...item, quantity: ++quantity });\r\n            const updateAttributeList = [...productList.slice(0, index), updatedItem, ...productList.slice(index + 1)];\r\n            setProductList(updateAttributeList)\r\n\r\n        }\r\n    };\r\n\r\n\r\n    const convertAttributeValuesToStringValue = (attribute) => {\r\n        const value = [];\r\n\r\n        let attributeValues = Object.values(attribute);\r\n        attributeValues.forEach(attributeValue => {\r\n            // @ts-ignore\r\n            value.push(attributeValue)\r\n        })\r\n\r\n        return value.join(',');\r\n    };\r\n\r\n\r\n\r\n\r\n    const getPricingOptions = (pricing) => {\r\n        if (pricing && pricing.length > 0) {\r\n            const pricingOptions = [];\r\n\r\n            pricing.forEach(pricingItem => {\r\n\r\n                if (Object.values(pricingItem.attribute).length > 0 && pricingItem._id) {\r\n                    let pricingOption = {\r\n                        value: pricingItem._id,\r\n                        label: `${convertAttributeValuesToStringValue(pricingItem.attribute) || ''}`\r\n                    }\r\n                    // @ts-ignore\r\n                    pricingOptions.push(pricingOption)\r\n                }\r\n\r\n            })\r\n\r\n            return pricingOptions;\r\n        }\r\n        else return false\r\n    };\r\n\r\n    const pricingOptions = item && Object.keys(item).length > 0 ? getPricingOptions(item.pricing) : [];\r\n\r\n\r\n    console.log('pricingOptions', pricingOptions);\r\n\r\n    const handleAttributeChange = (tagId) => {\r\n        setSelectedVariationId(tagId);\r\n\r\n        const positionInAttribute = () => {\r\n            return productList.map(item => item._id).indexOf(productId);\r\n        }\r\n\r\n        const index = positionInAttribute();\r\n\r\n        const updatedItem = Object.assign({}, productList[index], { ...item, quantity: 1 });\r\n        const updateAttributeList = [...productList.slice(0, index), updatedItem, ...productList.slice(index + 1)];\r\n        setProductList(updateAttributeList);\r\n\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        const getPriceByVariationId = (id) => {\r\n            const pricing = item && Object.keys(item).length > 0 ? item.pricing : false;\r\n            if (pricing) {\r\n                const priceItem = pricing.find(pricingItem => pricingItem._id === id);\r\n                console.log('priceItem', id);\r\n\r\n                if (priceItem && priceItem.price.regular) {\r\n                    return priceItem.price.offer\r\n                        && parseInt(priceItem.price.offer)\r\n                        ? priceItem.price.offer : priceItem.price.regular\r\n                }\r\n                else return false;\r\n            }\r\n        }\r\n\r\n        if (selectedVariationId) {\r\n            const price = getPriceByVariationId(selectedVariationId);\r\n            setModifiedPrice(price);\r\n        }\r\n\r\n    }, [selectedVariationId]);\r\n\r\n\r\n\r\n    console.log('modifiedPrice', modifiedPrice);\r\n    return (\r\n        <>\r\n\r\n            {item && Object.keys(item).length > 0 && (\r\n                <div className='cart-item' key={''}>\r\n                    <div className='cart-item-quantityCounter'>\r\n                        <i\r\n                            onClick={() => {\r\n                                handleChangeQuantity('plus');\r\n                            }}\r\n                            className='fa fa-chevron-up'\r\n\r\n                        ></i>\r\n                        <p className='item-amount'>{quantity}</p>\r\n                        <i\r\n                            onClick={() => {\r\n                                handleChangeQuantity('minus');\r\n                            }}\r\n                            className='fa fa-chevron-down'\r\n\r\n                        ></i>\r\n                    </div>\r\n\r\n\r\n                    <img\r\n\r\n                        src={item['cover'] && item['cover']}\r\n                        alt='Img'\r\n                        style={{\r\n                            cursor: 'pointer',\r\n                        }}\r\n                    />\r\n                    <div className='cart-item-info'>\r\n                        <h4\r\n\r\n                        >\r\n                            {item['name']}\r\n                        </h4>\r\n                        <h5\r\n                        >\r\n                            {modifiedPrice || item['price']}\r\n                        </h5>\r\n\r\n\r\n                        {pricingOptions && pricingOptions.length > 0 && pricingOptions.map(tag => (\r\n                            <>\r\n                                <span\r\n                                    onClick={() => handleAttributeChange(tag.value)}\r\n                                    className={selectedVariationId === tag.value ? 'product-attributeTag product-attributeTag-active' : 'product-attributeTag'}>\r\n                                    {tag.label}\r\n                                </span>\r\n                            </>\r\n                        ))}\r\n\r\n                        {/* <span\r\n             style={{\r\n               display: 'inline-block',\r\n               background: '#fafafa',\r\n               padding: '3px 3px',\r\n               borderRadius: 1,\r\n               fontSize: '12px',\r\n               marginRight: '5px',\r\n               color: '#777',\r\n               marginTop: '5px'\r\n             }}\r\n           >\r\n             15KG\r\n             </span> */}\r\n\r\n                    </div>\r\n                    {/* <span\r\n                        onClick={handleAttributeDelete}\r\n                        className='remove-item' >\r\n                        <i className='fa fa-times'></i>\r\n                    </span> */}\r\n\r\n                </div>\r\n            )}\r\n        </>\r\n    );\r\n};\r\n\r\n// @ts-ignore\r\nexport default CartOverLayCartItem;\r\n","import React from 'react'\r\n\r\n\r\n// import components\r\nimport AddNewOrderProductItem from \"../order/AddNewOrderProductItem\";\r\nimport Empty from \"../../components/Empty\";\r\n\r\nimport {\r\n    ShopOutlined\r\n} from '@ant-design/icons';\r\n\r\n\r\ninterface Props {\r\n    productList?: any;\r\n    setProductList?: any;\r\n}\r\n\r\nconst AddNewOrderSummary = ({\r\n    setProductList,\r\n    productList\r\n}: Props) => {\r\n    return (\r\n        <div\r\n            style={{\r\n                // @ts-ignore\r\n                flexDirection: 'flex'\r\n            }}\r\n            className='addOrderContainer__container-orderSummary'>\r\n            <div className='addOrderContainer__container-productItemContainer'>\r\n                {productList && productList.length > 0 && productList.map(item => {\r\n                    return <AddNewOrderProductItem\r\n                        setProductList={setProductList}\r\n                        productList={productList}\r\n                        productId={item._id}\r\n                        quantity={item.quantity}\r\n                        item={item}\r\n                        variation={item.variation}\r\n                    />;\r\n                })}\r\n\r\n                {!(productList.length > 0) && (\r\n                    <div style={{\r\n                        marginLeft: '32px'\r\n                    }}>\r\n                        <Empty title='No Product Added' height={150} />\r\n                    </div>\r\n                )}\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddNewOrderSummary\r\n","import React, { useState, useEffect } from 'react';\r\n\r\n// import hooks \r\nimport { useHandleFetch } from '../../hooks';\r\n\r\n\r\n// import libraries \r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { message, Tooltip, Modal, Tabs, Empty, Badge } from 'antd';\r\nimport CKEditor from '@ckeditor/ckeditor5-react';\r\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\r\n\r\n\r\nimport {\r\n    DeleteOutlined,\r\n    FileAddOutlined,\r\n    CheckCircleOutlined,\r\n    FileImageFilled,\r\n    FileImageOutlined,\r\n    FileImageTwoTone,\r\n    PlusOutlined,\r\n    PlusCircleOutlined,\r\n    CloseOutlined,\r\n    CheckOutlined,\r\n    InfoCircleOutlined\r\n} from '@ant-design/icons';\r\n\r\n// import ReactQuill from 'react-quill';\r\n// import 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport InputSmall from '../../components/Field/InputSmall';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport MediaLibrary from \"../../components/MediaLibrary\";\r\nimport DatePicker from \"../../components/Field/DatePicker\";\r\nimport { openSuccessNotification, openErrorNotification } from \"../../components/Notification\";\r\nimport Tags from \"../product/Tags\";\r\nimport Brands from \"../product/Brands\";\r\nimport Categories from \"../product/Categories\";\r\nimport Pricing from \"../product/Pricing\";\r\nimport SelectProducts from \"./SelectProducts\";\r\nimport SelectedProductItems from \"./SelectedProductItems\";\r\n\r\nconst { TabPane } = Tabs;\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    name: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\n\r\nconst initialValues = {\r\n    name: \"\",\r\n    bundlePrice: null,\r\n    startDate: \"\",\r\n    endDate: \"\",\r\n    description: ''\r\n}\r\n\r\n\r\n\r\ninterface Props {\r\n    addNewCategoryVisible: any;\r\n    setAddNewCategoryVisible: any;\r\n    productList?: any;\r\n    setProductList?: any;\r\n}\r\n\r\nconst AddNewProduct = ({ addNewCategoryVisible, setAddNewCategoryVisible, productList: bundleList, setProductList: setBundleList }: Props) => {\r\n\r\n    const [addProductState, handleAddProductFetch] = useHandleFetch({}, 'addBundle');\r\n    const [visible, setvisible] = useState(false);\r\n    const [myImages, setmyImages] = useState(false);\r\n    const [myThumbnailImage, setmyThumbnailImage] = useState(false);\r\n    const [isModalOpenForThumbnail, setisModalOpenForThumbnail] = useState(false);\r\n    const [isModalOpenForImages, setisModalOpenForImages] = useState(false);\r\n    const [categoryids, setcategoryIds] = useState([]);\r\n    const [tagIds, setTagIds] = useState([]);\r\n    const [brandId, setBrandId] = useState('');\r\n    const [pricing, setPricing] = useState([]);\r\n    const [coverImageId, setCoverImageId] = useState('');\r\n    const [categoryOptions, setCategoryOptions] = useState([]);\r\n    const [selectedTags, setSelectedTags] = useState([]);\r\n    const [date, setDateFeild] = useState('');\r\n    const [time, setTimeFeild] = useState('');\r\n    const [description, setDescription] = useState('');\r\n    const [productIds, setProductIds] = useState([]);\r\n    const [productList, setProductList] = useState([]);\r\n\r\n\r\n    const [price, setPrice] = useState({\r\n        regular: null,\r\n        offer: null,\r\n    });\r\n\r\n\r\n    const makeEmptyCategoryOptions = (setEmpty) => {\r\n        setEmpty([]);\r\n    }\r\n\r\n    const handleSubmit = async (values: any, actions: any) => {\r\n        // @ts-ignore\r\n        const imagesIds = myImages ? myImages.map(image => {\r\n            return image.id;\r\n        }) : [];\r\n\r\n        const products = productList.length > 0 ? productList.map(product => {\r\n            return {\r\n                _id: product._id,\r\n                variation: product.variation,\r\n                quantity: product.quantity,\r\n            }\r\n        }) : [];\r\n\r\n\r\n        const addProductRes = await handleAddProductFetch({\r\n            body: {\r\n                name: values.name.trim(),\r\n                category: categoryids,\r\n                tags: tagIds,\r\n                brand: [brandId],\r\n                price: price,\r\n                description: description,\r\n                model: values.model,\r\n                unit: values.unit,\r\n                image: imagesIds,\r\n                products\r\n            }\r\n        });\r\n\r\n\r\n        // @ts-ignore\r\n        if (addProductRes && addProductRes.status === 'ok') {\r\n            openSuccessNotification('Bundle Created');\r\n\r\n            setBundleList([...bundleList, {\r\n                id: addProductRes['id'] || '',\r\n                key: addProductRes['id'] || '',\r\n                name: addProductRes['name'] || '',\r\n                description: addProductRes['description'] || '',\r\n                // @ts-ignore\r\n                ...addProductRes\r\n            }])\r\n            setAddNewCategoryVisible(false)\r\n            // @ts-ignore\r\n            setmyImages([]);\r\n            setCoverImageId('');\r\n            setPricing([]);\r\n            setTagIds([]);\r\n            setSelectedTags([]);\r\n            setBrandId(\"\");\r\n            setcategoryIds([]);\r\n            setCategoryOptions([]);\r\n            actions.resetForm();\r\n        }\r\n        else {\r\n            // openErrorNotification();\r\n        }\r\n\r\n        actions.setSubmitting(false);\r\n\r\n\r\n    };\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        if (!addProductState['isLoading']) {\r\n            const error = addProductState['error'];\r\n            if (error['isError'] && Object.keys(error['error']).length > 0) {\r\n\r\n\r\n                const errors =\r\n                    Object.values(error['error']).length > 0\r\n                        ? Object.values(error['error'])\r\n                        : [];\r\n                errors.forEach((err, i) => {\r\n                    if (typeof err === 'string') {\r\n                        openErrorNotification(err)\r\n                    }\r\n                    else if (typeof err === 'object') {\r\n                        if (err && Object.keys(err).length > 0) {\r\n                            const errs = Object.values(err);\r\n                            errs.forEach(err => {\r\n                                openErrorNotification(err)\r\n                            })\r\n\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n        }\r\n    }, [addProductState])\r\n\r\n\r\n\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        if (productIds.length > 0) {\r\n            if (productIds.length > productList.length) {\r\n                const variation = productIds[productIds.length - 1]['pricing'].length > 0 && productIds[productIds.length - 1]['pricing'][0]['_id'];\r\n                console.log('variation', variation)\r\n\r\n                setProductList([...productList, {\r\n                    ...productIds[productIds.length - 1],\r\n                    _id: productIds[productIds.length - 1]['id'],\r\n                    variation: variation,\r\n                    quantity: 1\r\n                }]);\r\n            }\r\n\r\n\r\n            else if (productIds.length < productList.length) {\r\n                console.log('productIds', productIds);\r\n                console.log('productList', productList);\r\n\r\n                const newProductList = productList.filter(item => {\r\n                    let isTrue = false;\r\n                    productIds.forEach(product => {\r\n                        if (product.id === item._id) {\r\n                            isTrue = true;\r\n                        }\r\n                    });\r\n                    return isTrue;\r\n                })\r\n                setProductList(newProductList);\r\n\r\n            }\r\n\r\n        }\r\n        else {\r\n            setProductList([]);\r\n        }\r\n        // console.log('productIds', productIds)\r\n\r\n\r\n    }, [productIds])\r\n\r\n\r\n\r\n\r\n\r\n\r\n    const handleCancel = (e: any) => {\r\n        setAddNewCategoryVisible(false);\r\n    };\r\n\r\n\r\n    const getisSubmitButtonDisabled = (values, isValid) => {\r\n        if (!values.name || !(pricing.length > 0) || !isValid) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n\r\n    const handleImagesDelete = (id) => {\r\n        // @ts-ignore\r\n        const newImages = myImages && myImages.filter(image => {\r\n            return image.id !== id;\r\n        })\r\n\r\n        setmyImages(newImages);\r\n    }\r\n\r\n    const handleDeleteFromSelectedImage = () => {\r\n\r\n    };\r\n\r\n    const handleThumbnailImageDelete = (id) => {\r\n        // @ts-ignore\r\n        const newImages = myThumbnailImage && myThumbnailImage.filter(image => {\r\n            return image.id !== id;\r\n        })\r\n\r\n        if (newImages.length > 0) {\r\n            setmyThumbnailImage(newImages);\r\n\r\n        }\r\n        else setmyThumbnailImage(false);\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    const handleAddPricing = (priceItem) => {\r\n        setPricing([{\r\n            ...priceItem,\r\n            id: pricing.length\r\n        }, ...pricing])\r\n        message.info('Product Pricing Added');\r\n    }\r\n\r\n\r\n    const handleDeletePricing = (id) => {\r\n        const newPricing = pricing.filter(item => item.id !== id);\r\n        setPricing(newPricing);\r\n        message.info('Product Pricing Deleted');\r\n    }\r\n\r\n\r\n\r\n    const isCategoryInValid = () => {\r\n        if (addProductState.error['error']['category'] && !categoryids && categoryids.length) {\r\n            return true;\r\n        }\r\n        else if (categoryids && categoryids.length > 0) {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    const handleDateChange = (date, dateString) => {\r\n        setDateFeild(dateString);\r\n        // console.log('date', date, dateString);\r\n    }\r\n\r\n    const handleTimeChange = (date, dateString) => {\r\n        setTimeFeild(dateString);\r\n        // console.log('date', date, dateString);\r\n    }\r\n\r\n\r\n\r\n\r\n    return (\r\n        <Formik\r\n            onSubmit={(values, actions) => handleSubmit(values, actions)}\r\n            validationSchema={validationSchema}\r\n            validateOnBlur={false}\r\n            enableReinitialize={true}\r\n            initialValues={\r\n                { ...initialValues }\r\n            }\r\n        >\r\n            {({\r\n                handleChange,\r\n                values,\r\n                handleSubmit,\r\n                errors,\r\n                isValid,\r\n                isSubmitting,\r\n                touched,\r\n                handleBlur,\r\n                setFieldTouched,\r\n                handleReset,\r\n            }) => (\r\n                    <>\r\n                        <Modal\r\n                            style={{\r\n                                top: '40px',\r\n\r\n                            }}\r\n                            bodyStyle={{\r\n                                margin: 0,\r\n                                padding: 0,\r\n                            }}\r\n                            width={'70vw'}\r\n                            title=\"Add New Bundle\"\r\n                            visible={addNewCategoryVisible}\r\n                            onOk={(e: any) => handleSubmit(e)}\r\n                            onCancel={handleCancel}\r\n                            okText='Create'\r\n                            okButtonProps={{\r\n                                loading: isSubmitting,\r\n                                htmlType: \"submit\",\r\n                            }}\r\n                        >\r\n\r\n\r\n                            <section className='addProductGridContainer'>\r\n                                <div className='addProductGridContainer__left'>\r\n                                    <div className='addProductGridContainer__name'>\r\n                                        <div className='addProductGridContainer__item-header'>\r\n                                            <h3>\r\n                                                Bundle Information\r\n\t\t\t                                </h3>\r\n\r\n                                            <div className={values.name && values.name.length > 2 ? 'checkicon-active' : 'checkicon'}>\r\n                                                <CheckCircleOutlined />\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className='addProductGridContainer__item-body'>\r\n                                            <Input\r\n                                                label='Title'\r\n                                                value={values.name}\r\n                                                name='name'\r\n                                                isError={(touched.name && errors.name) ||\r\n                                                    (!isSubmitting && addProductState.error['error']['name'])}\r\n\r\n                                                errorString={(touched.name && errors.name) ||\r\n                                                    (!isSubmitting && addProductState.error['error']['name'])}\r\n                                                onChange={(e: any) => {\r\n                                                    handleChange(e);\r\n                                                    setFieldTouched('name');\r\n                                                }}\r\n                                            />\r\n\r\n                                            <h3 className='inputFieldLabel'>\r\n                                                Description\r\n                                            </h3>\r\n\r\n                                            <div style={{\r\n                                                width: '100%',\r\n                                                maxWidth: '100%'\r\n                                            }}>\r\n                                                <CKEditor\r\n                                                    editor={ClassicEditor}\r\n                                                    data={description}\r\n                                                    onInit={editor => {\r\n                                                        // You can store the \"editor\" and use when it is needed.\r\n                                                        console.log('Editor is ready to use!', editor);\r\n                                                    }}\r\n                                                    onChange={(event, editor) => {\r\n                                                        const data = editor.getData();\r\n                                                        setDescription(data);\r\n                                                    }}\r\n                                                    onBlur={(event, editor) => {\r\n                                                        console.log('Blur.', editor);\r\n                                                    }}\r\n                                                    onFocus={(event, editor) => {\r\n                                                        console.log('Focus.', editor);\r\n                                                    }}\r\n                                                />\r\n                                            </div>\r\n\r\n                                            {/* <div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\tdisplay: 'flex',\r\n\t\t\t\t\t\t\t\t\t\t\t\tjustifyContent: 'space-between'\r\n\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\twidth: '48%',\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<DatePicker\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabel='Date'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={handleDateChange} />\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\twidth: '48%'\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<DatePicker\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tdate={date}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\twithTime={true}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder='Select time'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabel='Time'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={handleTimeChange} />\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t</div> */}\r\n                                            <div style={{\r\n                                                marginBottom: '15px'\r\n                                            }}></div>\r\n                                            {/* \r\n\t\t\t\t\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\t\t\t\t\trows={1}\r\n\t\t\t\t\t\t\t\t\t\t\t\tlabel='Venue'\r\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.venue}\r\n\t\t\t\t\t\t\t\t\t\t\t\tname='venue'\r\n\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.venue && errors.venue) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['venue'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.venue && errors.venue) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['venue'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('venue');\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\t\tlabel='Purchase Limit'\r\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.purchaseLimit}\r\n\t\t\t\t\t\t\t\t\t\t\t\ttype='number'\r\n\t\t\t\t\t\t\t\t\t\t\t\tname='purchaseLimit'\r\n\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.purchaseLimit && errors.purchaseLimit) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['purchaseLimit'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.purchaseLimit && errors.purchaseLimit) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['purchaseLimit'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('purchaseLimit');\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t/> */}\r\n\r\n                                            <div className='addProductGridContainer__item-body-variationCard-item'>\r\n                                                <h4>\r\n                                                    Price\r\n\t\t\t                                \t</h4>\r\n                                                <div className='addProductGridContainer__item-body-variationCard-item-container'>\r\n                                                    <div className='addProductGridContainer__item-body-variationCard-item-container-left'>\r\n                                                        <InputSmall\r\n                                                            label='Regular'\r\n                                                            value={price.regular}\r\n                                                            name='regular'\r\n                                                            onChange={(e) => setPrice({\r\n                                                                ...price,\r\n                                                                regular: e.target.value\r\n                                                            })}\r\n                                                        />\r\n\r\n\r\n                                                    </div>\r\n                                                    <div className='addProductGridContainer__item-body-variationCard-item-container-right'>\r\n\r\n                                                        <InputSmall\r\n                                                            label='Offer'\r\n                                                            value={price.offer}\r\n                                                            name='offer'\r\n                                                            onChange={(e) => setPrice({\r\n                                                                ...price,\r\n                                                                offer: e.target.value\r\n                                                            })}\r\n                                                        />\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n\r\n\r\n\r\n                                            <div style={{\r\n                                                display: 'flex',\r\n                                                justifyContent: 'space-between'\r\n                                            }}>\r\n                                                <div style={{\r\n                                                    width: '48%',\r\n                                                }}>\r\n                                                    <DatePicker\r\n                                                        date={date}\r\n                                                        withTime={true}\r\n                                                        label='Start Time'\r\n                                                        onChange={handleDateChange} />\r\n\r\n                                                </div>\r\n                                                <div style={{\r\n                                                    width: '48%'\r\n                                                }}>\r\n\r\n                                                    <DatePicker\r\n                                                        date={date}\r\n                                                        withTime={true}\r\n                                                        placeholder='Select time'\r\n                                                        label='End Time'\r\n                                                        onChange={handleTimeChange} />\r\n\r\n                                                </div>\r\n                                            </div>\r\n\r\n\r\n                                        </div>\r\n\r\n\r\n\r\n                                    </div>\r\n\r\n                                    <div className='addProductGridContainer__price'>\r\n                                        <div className='addProductGridContainer__item-header'>\r\n                                            <h3>\r\n                                                Products\r\n\t\t                                    </h3>\r\n\r\n                                            <div className={pricing && pricing.length > 0 ? 'checkicon-active' : 'checkicon'}>\r\n                                                <CheckCircleOutlined />\r\n                                            </div>\r\n                                        </div>\r\n\r\n\r\n                                        <div className='addProductGridContainer__item-body'>\r\n\r\n                                            <h3 className='inputFieldLabel'>\r\n                                                Products\r\n                                            </h3>\r\n                                            <SelectProducts\r\n                                                setProductIds={setProductIds}\r\n                                                productIds={productIds}\r\n                                            />\r\n\r\n                                            <div style={{\r\n                                                marginTop: \"15px\"\r\n                                            }}></div>\r\n\r\n                                            <h3 className='inputFieldLabel'>\r\n                                                Selcted Products\r\n                                            </h3>\r\n\r\n                                            <SelectedProductItems\r\n                                                productList={productList}\r\n                                                setProductList={setProductList}\r\n                                            />\r\n                                        </div>\r\n                                    </div>\r\n\r\n\r\n\r\n\r\n                                    <div className='addProductGridContainer__image'>\r\n\r\n                                        <div className='addProductGridContainer__item-header'>\r\n                                            <h3>\r\n                                                Image\r\n</h3>\r\n\r\n                                            <Tooltip\r\n                                                placement=\"left\" title={'Click on the image to select cover image, By default 1st image is selected as cover'}>\r\n                                                <a href='###'>\r\n                                                    <InfoCircleOutlined />\r\n                                                </a>\r\n                                            </Tooltip>\r\n                                        </div>\r\n                                        <div className='addProductGridContainer__item-body'>\r\n\r\n\r\n\r\n                                            <div className='aboutToUploadImagesContainer'>\r\n                                                {myImages &&\r\n                                                    // @ts-ignore\r\n                                                    myImages.length > 0 && myImages.map((image, index) => {\r\n                                                        return (\r\n                                                            <div className='aboutToUploadImagesContainer__item'>\r\n                                                                <div\r\n                                                                    className='aboutToUploadImagesContainer__item-imgContainer'\r\n                                                                    onClick={() => setCoverImageId(image.id)}\r\n                                                                >\r\n                                                                    <img src={image.cover} alt={image.alt} />\r\n                                                                </div>\r\n\r\n                                                                <span\r\n                                                                    onClick={() => handleImagesDelete(image.id)}\r\n                                                                    className='aboutToUploadImagesContainer__item-remove'>\r\n                                                                    <CloseOutlined />\r\n                                                                </span>\r\n\r\n\r\n                                                                {coverImageId === image.id ? (\r\n                                                                    <span className='aboutToUploadImagesContainer__item-cover'>\r\n                                                                        <CheckOutlined />\r\n                                                                    </span>\r\n                                                                ) : !coverImageId && index === 0 && (\r\n                                                                    <span className='aboutToUploadImagesContainer__item-cover'>\r\n                                                                        <CheckOutlined />\r\n                                                                    </span>\r\n                                                                )}\r\n                                                            </div>\r\n                                                        )\r\n                                                    })}\r\n\r\n\r\n                                                <Tooltip\r\n                                                    title={'Attach images'}>\r\n\r\n                                                    <div\r\n                                                        onClick={() => {\r\n                                                            setvisible(true);\r\n                                                            setisModalOpenForImages(true);\r\n                                                            setisModalOpenForThumbnail(false);\r\n                                                        }}\r\n                                                        className='aboutToUploadImagesContainer__uploadItem'>\r\n                                                        {/* <FileAddOutlined />\r\n            <FileImageTwoTone />\r\n            <FileImageOutlined /> */}\r\n                                                        <FileImageFilled />\r\n                                                        {/* <h5>\r\n             Select From Library\r\n    <     /h5> */}\r\n                                                        <span className='aboutToUploadImagesContainer__uploadItem-plus'>\r\n                                                            <PlusOutlined />\r\n                                                        </span>\r\n                                                    </div>\r\n                                                </Tooltip>\r\n\r\n\r\n\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n\r\n\r\n                                </div>\r\n                                <div className='addProductGridContainer__right'>\r\n                                    <div className='addProductGridContainer__category'>\r\n\r\n                                        <div className='addProductGridContainer-rightItemContainer'>\r\n                                            <div className='addProductGridContainer-rightItemContainer-header'>\r\n                                                <h3>\r\n                                                    Categories\r\n\t\t\t\t</h3>\r\n\r\n                                                <Tooltip\r\n                                                    color='red'\r\n                                                    visible={addProductState.error['error']['category'] && !(categoryids.length > 0)}\r\n                                                    placement=\"left\" title={'Select at least one category'}>\r\n                                                    <div className={!(categoryids.length > 0)\r\n                                                        && !addProductState.error['error']['category'] ? 'checkicon' : addProductState.error['error']['category'] ? 'checkicon-error' : 'checkicon-active'}>\r\n                                                        <CheckCircleOutlined />\r\n                                                    </div>\r\n                                                </Tooltip>\r\n\r\n                                            </div>\r\n                                            <div className='addProductGridContainer-rightItemContainer-body'>\r\n                                                <Categories\r\n                                                    setCategoryOptions={setCategoryOptions}\r\n                                                    categoryOptions={categoryOptions}\r\n                                                    setcategoryIds={setcategoryIds} />\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                    </div>\r\n\r\n                                    <div className='addProductGridContainer__tag'>\r\n                                        <div className='addProductGridContainer-rightItemContainer'>\r\n                                            <div className='addProductGridContainer-rightItemContainer-header'>\r\n                                                <h3>\r\n                                                    Tags\r\n\t\t\t\t</h3>\r\n                                            </div>\r\n                                            <div className='addProductGridContainer-rightItemContainer-body'>\r\n                                                <Tags\r\n                                                    setSelectedTags={setSelectedTags}\r\n                                                    selectedTags={selectedTags}\r\n                                                    setTagIds={setTagIds} />\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                    </div>\r\n                                    <div className='addProductGridContainer__brand'>\r\n                                        <div className='addProductGridContainer-rightItemContainer'>\r\n                                            <div className='addProductGridContainer-rightItemContainer-header'>\r\n                                                <h3>\r\n                                                    Brand\r\n\t\t\t\t</h3>\r\n                                            </div>\r\n                                            <div className='addProductGridContainer-rightItemContainer-body'>\r\n                                                <Brands setBrandId={setBrandId} />\r\n                                            </div>\r\n                                        </div>\r\n\r\n\r\n                                    </div>\r\n\r\n                                </div>\r\n                            </section>\r\n\r\n\r\n                        </Modal>\r\n\r\n                        <MediaLibrary\r\n                            setvisible={setvisible}\r\n                            visible={visible}\r\n                            setmyImages={setmyImages}\r\n                            myImages={myImages}\r\n                            setmyThumbnailImage={setmyThumbnailImage}\r\n                            isModalOpenForThumbnail={isModalOpenForThumbnail}\r\n                            isModalOpenForImages={isModalOpenForImages}\r\n\r\n                        />\r\n                    </>\r\n                )}\r\n        </Formik>\r\n\r\n\r\n\r\n\r\n    );\r\n};\r\n\r\nexport default AddNewProduct;\r\n\r\n\r\n\r\n\r\n/*\r\n\r\n\r\nProduct variation ---->\r\n\r\nPrice [title]\r\n\t[regular input field] [offer inputfield]\r\n\r\nStock [title]\r\n\t[available input field] [minimum inputfield]\r\n\r\ndefault [default can be set to true]\r\n\r\nattributes [title]\r\n\t[add attributes name]\r\n\t\t[add attrubutes value]\r\n\r\n\t[add attributes name]\r\n\t\t[add attrubutes value\r\n\r\n*///","import React, { useState, useEffect } from 'react';\r\n\r\n// import third party ui lib\r\nimport { Empty, Popconfirm, Upload, message, Switch, Select, Button, notification, Table, Space, Input as CoolInput, Tooltip, Modal } from 'antd';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { useHistory } from 'react-router';\r\nimport Moment from 'react-moment';\r\n\r\n\r\n\r\nimport {\r\n    FileOutlined,\r\n    InboxOutlined,\r\n    RadiusUpleftOutlined,\r\n    RadiusUprightOutlined,\r\n    RadiusBottomleftOutlined,\r\n    RadiusBottomrightOutlined,\r\n    PlusOutlined,\r\n    DeleteOutlined,\r\n    EditOutlined,\r\n    CheckCircleOutlined\r\n} from '@ant-design/icons';\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n\r\n\r\n/// import hooks\r\nimport { useFetch, useHandleFetch } from \"../../hooks\";\r\n\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport { DataTableSkeleton } from \"../../components/Placeholders\";\r\nimport ProductBundleQuickEdit from \"./ProductBundleQuickEdit\"\r\nimport AddNewProductBundle from \"./AddNewProductBundle\"\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Bundle Created',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n    notification.error({\r\n        message: message || 'Something Went Wrong',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n    });\r\n};\r\n\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    name: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\n\r\nconst initialValues = {\r\n    name: '',\r\n    description: ''\r\n}\r\n\r\n\r\nconst { Column, ColumnGroup } = Table;\r\nconst { Search } = CoolInput;\r\n\r\n\r\n\r\nconst MyTable = ({ data, setTagList }) => {\r\n    const [visible, setvisible] = useState(false);\r\n    const [activeCategoryForEdit, setactiveCategoryForEdit] = useState(false);\r\n    const [deleteTagState, handleDeleteTagFetch] = useHandleFetch({}, 'deleteBundle');\r\n\r\n    const history = useHistory();\r\n\r\n\r\n    const handleDeleteTag = async (id) => {\r\n        const deleteTagRes = await handleDeleteTagFetch({\r\n            urlOptions: {\r\n                placeHolders: {\r\n                    id,\r\n                }\r\n            }\r\n        });\r\n\r\n\r\n\r\n        // @ts-ignore\r\n        if (deleteTagRes && deleteTagRes.status === 'ok') {\r\n            openSuccessNotification('Deleted Bundle');\r\n            const newtagList = data.filter(item => item.id !== id);\r\n            setTagList(newtagList);\r\n        }\r\n\r\n\r\n    }\r\n\r\n\r\n    const handleOk = (e: any) => {\r\n        setvisible(false);\r\n\r\n    };\r\n\r\n    const handleCancel = (e: any) => {\r\n        setvisible(false);\r\n    };\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <Table\r\n                // expandable={{\r\n                //     expandedRowRender: record => <p style={{ margin: 0 }}>{record.name}</p>,\r\n                //     rowExpandable: record => record.name !== 'Not Expandable',\r\n                //   }}\r\n                // bordered={true}\r\n                size='small'\r\n                // pagination={false}\r\n                dataSource={data}\r\n            >\r\n\r\n                <Column\r\n                    title=\"\"\r\n                    dataIndex=\"cover\"\r\n                    key=\"id\"\r\n                    width={'80px'}\r\n\r\n                    className='classnameofthecolumn'\r\n\r\n                    render={(cover, record: any) => (\r\n                        <>\r\n                            <img\r\n                                onClick={() => {\r\n                                    history.push(`/admin/bundle/${record.id}`)\r\n                                    setactiveCategoryForEdit(record)\r\n                                }}\r\n                                src={cover} alt='cover img' style={{\r\n                                    height: '40px',\r\n                                    width: '40px',\r\n                                    objectFit: \"contain\",\r\n                                    borderRadius: '3px',\r\n                                    cursor: 'pointer'\r\n                                }} />\r\n                        </>\r\n                    )}\r\n                />\r\n\r\n                <Column\r\n                    title=\"Name\"\r\n                    dataIndex=\"name\"\r\n                    key=\"id\"\r\n                    className='classnameofthecolumn'\r\n                    render={(text, record: any) => (\r\n                        <>\r\n\r\n                            <h4\r\n                                onClick={() => {\r\n                                    history.push(`/admin/bundle/${record.id}`)\r\n                                    // setBrandDetailVisible(true);\r\n                                    setactiveCategoryForEdit(record)\r\n                                }}\r\n                                style={{\r\n                                    fontWeight: 400,\r\n                                    color: '#555',\r\n                                    cursor: 'pointer'\r\n                                }}>\r\n                                {text}\r\n                            </h4>\r\n\r\n\r\n                        </>\r\n                    )}\r\n                />\r\n\r\n                <Column\r\n                    title=\"Price\"\r\n                    dataIndex=\"price\"\r\n                    key=\"id\"\r\n                    className='classnameofthecolumn'\r\n\r\n                />\r\n\r\n\r\n                <Column\r\n                    title=\"Product\"\r\n                    dataIndex=\"productCount\"\r\n                    key=\"id\"\r\n                    className='classnameofthecolumn'\r\n                />\r\n\r\n                <Column\r\n                    title=\"Start Date\"\r\n                    dataIndex=\"startDate\"\r\n                    key=\"id\"\r\n                    className='classnameofthecolumn'\r\n                    render={(text, record: any) => (\r\n                        <>\r\n                            <h4\r\n                                style={{\r\n                                    fontWeight: 400,\r\n                                    color: '#555',\r\n                                    cursor: 'pointer'\r\n                                }}>\r\n                                <Moment >\r\n                                    {text}\r\n                                </Moment>\r\n\r\n                            </h4>\r\n                        </>\r\n                    )}\r\n\r\n                />\r\n\r\n                <Column\r\n                    title=\"End Date\"\r\n                    dataIndex=\"endDate\"\r\n                    key=\"id\"\r\n                    className='classnameofthecolumn'\r\n\r\n                />\r\n\r\n                <Column\r\n\r\n                    className='classnameofthecolumn'\r\n                    title=\"\"\r\n                    key=\"action\"\r\n                    align='right'\r\n                    render={(text, record: any) => (\r\n                        <Space size=\"middle\">\r\n                            <a href='##'>\r\n                                <Tooltip placement=\"top\" title='Quick Edit Bundle'>\r\n                                    <span className='iconSize' onClick={() => {\r\n                                        setvisible(true)\r\n                                        setactiveCategoryForEdit(record);\r\n                                    }}>\r\n                                        <EditOutlined />\r\n                                    </span>\r\n                                </Tooltip>\r\n                            </a>\r\n\r\n\r\n\r\n                            <Popconfirm\r\n                                onConfirm={() => handleDeleteTag(record.id)}\r\n                                title=\"Are you sure？\" okText=\"Yes\" cancelText=\"No\">\r\n                                <span\r\n                                    className='iconSize iconSize-danger'\r\n                                >\r\n                                    <DeleteOutlined />\r\n                                </span>\r\n                            </Popconfirm>\r\n                        </Space>\r\n                    )}\r\n                />\r\n            </Table>\r\n\r\n\r\n\r\n\r\n\r\n\r\n            {activeCategoryForEdit && <ProductBundleQuickEdit\r\n                tagList={data}\r\n                setTagList={setTagList}\r\n                setvisible={setvisible}\r\n                visible={visible}\r\n                category={activeCategoryForEdit} />}\r\n        </>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\ninterface Props { }\r\n\r\nconst TagList = ({ }: Props) => {\r\n\r\n\r\n    const [tagList, setTagList] = useState([]);\r\n\r\n    const [tagState, handleTagListFetch] = useHandleFetch({}, 'bundleList');\r\n\r\n\r\n    useEffect(() => {\r\n        const setTags = async () => {\r\n            const tags = await handleTagListFetch({});\r\n            // @ts-ignore\r\n            setTagList(tags);\r\n        }\r\n        setTags();\r\n    }, [])\r\n\r\n\r\n\r\n    const [addNewCategoryVisible, setAddNewCategoryVisible] = useState(false);\r\n\r\n    const getisSubmitButtonDisabled = (values, isValid) => {\r\n        if (!values.name || !isValid) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n\r\n    const handleOkAddNewCategory = (e: any) => {\r\n        setAddNewCategoryVisible(false);\r\n\r\n    };\r\n\r\n    const handleCancelAddNewCategory = (e: any) => {\r\n        setAddNewCategoryVisible(false);\r\n    };\r\n\r\n    const handleSearch = (value) => {\r\n        if (tagState.data.length > 0) {\r\n            const newTagList = tagState.data.filter(item => item.name.toLowerCase().includes(value.toLowerCase()));\r\n            setTagList(newTagList);\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <>\r\n\r\n            <div className='categoryListContainer'>\r\n                <div className='categoryListContainer__header'>\r\n                    <div className='categoryListContainer__header-searchBar-tag'>\r\n                        <h2 className='categoryListContainer__header-title'>\r\n                            Bundles\r\n                       </h2>\r\n\r\n                        <Search\r\n                            enterButton={false}\r\n                            className='searchbarClassName'\r\n                            placeholder=\"search bundles..\"\r\n                            onSearch={value => handleSearch(value)}\r\n                        />\r\n                    </div>\r\n                    <Button\r\n                        // type=\"primary\"\r\n                        className='btnPrimaryClassNameoutline'\r\n                        icon={<PlusOutlined />}\r\n                        onClick={() => setAddNewCategoryVisible(true)}\r\n                    >\r\n                        Add New\r\n\t\t\t\t\t</Button>\r\n                </div>\r\n                <div className='categoryListContainer__categoryList'>\r\n                    {tagState.done && tagList.length > 0 && <MyTable\r\n                        setTagList={setTagList}\r\n                        data={tagList} />}\r\n                    {tagState.isLoading && <DataTableSkeleton />}\r\n\r\n\r\n                    {tagState.done && !(tagList.length > 0) && (\r\n                        <div style={{\r\n                            marginTop: '200px'\r\n                        }}>\r\n                            <Empty description='No Bundle found' image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            </div>\r\n\r\n            <AddNewProductBundle\r\n                productList={tagList}\r\n                setProductList={setTagList}\r\n                addNewCategoryVisible={addNewCategoryVisible}\r\n                setAddNewCategoryVisible={setAddNewCategoryVisible}\r\n\r\n            />\r\n        </>\r\n    );\r\n};\r\n\r\nexport default TagList;\r\n","import React, { useEffect } from 'react';\r\n\r\n// import hooks\r\nimport { useHandleFetch } from \"../../hooks\";\r\n\r\n// import lib\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport { Skeleton, Empty, Button, notification, Table, Space, Input as CoolInput, Tooltip, Modal } from 'antd';\r\n\r\n\r\n\r\ninterface Props {\r\n    productId?: any;\r\n    quantity?: any;\r\n}\r\n\r\n\r\n\r\nconst CouponProducts = ({\r\n    productId,\r\n    quantity\r\n}: Props) => {\r\n\r\n    const history = useHistory();\r\n\r\n    const [productDetailState, handleProductFetch] = useHandleFetch(\r\n        {},\r\n        'productDetailById'\r\n    );\r\n\r\n    useEffect(() => {\r\n        const getAndSetProduct = async () => {\r\n            await handleProductFetch({\r\n                urlOptions: {\r\n                    placeHolders: {\r\n                        id: productId,\r\n                    },\r\n                },\r\n            });\r\n\r\n        };\r\n        getAndSetProduct();\r\n    }, []);\r\n\r\n\r\n    console.log('productDetailStatecoupon', productDetailState)\r\n\r\n\r\n    return (\r\n        <Skeleton\r\n            paragraph={{ rows: 2 }}\r\n            loading={productDetailState.isLoading}>\r\n            {productDetailState.data && Object.keys(productDetailState.data).length > 0 && (\r\n                <>\r\n                    <div className='couponDetailProductItem'>\r\n                        <div\r\n                            onClick={() => history.push(`/admin/product/${productId}`)}\r\n                            className='couponDetailProductItem__cover'>\r\n                            <img src={productDetailState.data.cover} alt=\"\" />\r\n                        </div>\r\n                        <div className='couponDetailProductItem__info'>\r\n                            <h2\r\n                                onClick={() => history.push(`/admin/product/${productId}`)}\r\n                            >\r\n                                {productDetailState.data.name}\r\n                            </h2>\r\n                            <h3>\r\n                                {productDetailState.data.price}\r\n                            </h3>\r\n                            <h3>\r\n                                Quantity: {quantity}\r\n                            </h3>\r\n                        </div>\r\n                    </div>\r\n                </>\r\n            )}\r\n\r\n        </Skeleton>\r\n    )\r\n}\r\n\r\n\r\nexport default CouponProducts; ","import React, { useEffect, useState } from 'react';\r\nimport { useParams, useHistory } from \"react-router\";\r\n\r\n\r\n// import hooks\r\nimport { useHandleFetch } from \"../../hooks\";\r\n\r\n// import lib\r\nimport {\r\n    EditOutlined,\r\n    DeleteOutlined\r\n} from '@ant-design/icons';\r\n\r\nimport { Skeleton, Empty, Button, notification, Table, Space, Input as CoolInput, Tooltip, Modal, Badge } from 'antd';\r\n\r\n\r\n// import moment\r\nimport Moment from \"react-moment\";\r\n\r\n// import components\r\nimport { DataTableSkeleton } from \"../../components/Placeholders\";\r\nimport ProductBundleEdit from \"./ProductBundleEdit\";\r\nimport CouponProducts from \"../coupon/CouponProducts\";\r\n\r\n\r\nconst { Column, ColumnGroup } = Table;\r\nconst { Search } = CoolInput;\r\n\r\n\r\ninterface Props {\r\n    productRecord?: any;\r\n}\r\n\r\nconst NewBrandDetail = (props: Props) => {\r\n    const [productDetailState, handleProductDetailFetch] = useHandleFetch({}, 'bundleDetail');\r\n\r\n    const params = useParams();\r\n    const history = useHistory();\r\n    const productId = params['id'];\r\n    const [productEditVisible, setProductEditVisible] = useState(false);\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        const getProductDetail = async () => {\r\n            await handleProductDetailFetch({\r\n                urlOptions: {\r\n                    placeHolders: {\r\n                        id: productId\r\n                    }\r\n                }\r\n            })\r\n        };\r\n\r\n        getProductDetail();\r\n\r\n    }, [productId]);\r\n\r\n\r\n\r\n\r\n    console.log('productDetailState', productDetailState);\r\n\r\n    console.log('brandParams', params);\r\n\r\n    const getImagesInCollumn = (imgs) => {\r\n        if (!imgs[0]) return false;\r\n        imgs = imgs.map(item => item.cover);\r\n        const columns = {};\r\n\r\n        let localIndex = 0;\r\n        let columnNumber = 0;\r\n\r\n\r\n        imgs.forEach((item, index) => {\r\n            if (localIndex < 3) {\r\n                if (columns[columnNumber]) {\r\n                    columns[columnNumber] = [...columns[columnNumber], item]\r\n                }\r\n                else columns[columnNumber] = [item];\r\n\r\n                localIndex = localIndex + 1;\r\n                columnNumber = columnNumber + 1;\r\n\r\n            }\r\n            else {\r\n                localIndex = 0;\r\n                columnNumber = 0;\r\n                console.log('localIndex', localIndex)\r\n            }\r\n        });\r\n\r\n        return columns;\r\n    }\r\n\r\n\r\n    const row = productDetailState.done && productDetailState.data && productDetailState.data['image'] ? getImagesInCollumn(productDetailState.data['image']) : [];\r\n\r\n\r\n    console.log('bundleDetail', productDetailState);\r\n    return (\r\n        <div className='brandDetailContainer'>\r\n\r\n            <div className='brandDetailContainer__heading'>\r\n                <h3>\r\n                    Bundle Detail\r\n                </h3>\r\n\r\n                {productDetailState.done && productDetailState.data && (Object.keys(productDetailState.data).length > 0) && (\r\n                    <>\r\n                        {/* <ProductBundleEdit\r\n                            productEditVisible={productEditVisible}\r\n                            setProductEditVisible={setProductEditVisible}\r\n                            productDetailData={productDetailState.data}\r\n                        /> */}\r\n                        {/* <Button\r\n                            onClick={() => setProductEditVisible(true)}\r\n                            type='link'\r\n                            icon={<EditOutlined />}\r\n                        >\r\n                            Edit\r\n                      </Button> */}\r\n                    </>\r\n                )}\r\n\r\n            </div>\r\n            <Skeleton\r\n                avatar paragraph={{ rows: 3 }}\r\n                loading={productDetailState.isLoading}>\r\n                {productDetailState.done && productDetailState.data && !(Object.keys(productDetailState.data).length > 0) && (\r\n                    <Empty description='No Product found' image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n                )}\r\n\r\n                {productDetailState.done && productDetailState.data && (Object.keys(productDetailState.data).length > 0) && (\r\n                    <>\r\n                        <div className='brandDetailContainer__header'>\r\n                            <div className='brandDetailContainer__header-coverContainer brandDetailContainer__header-coverContainer-product'>\r\n                                <img src={productDetailState.data['cover'] && productDetailState.data['cover']['cover']} alt=\"\" />\r\n                            </div>\r\n                            <div className='brandDetailContainer__header-info'>\r\n                                <h2>\r\n                                    {productDetailState.data['name']}\r\n                                </h2>\r\n                                <h4>\r\n                                    {productDetailState.data['price']}\r\n                                </h4>\r\n                                <h3>\r\n                                    {productDetailState.data['description']}\r\n                                </h3>\r\n\r\n                                {productDetailState.data['startDate'] && (\r\n                                    <h3>\r\n                                        START DATE:\r\n                                        <span>\r\n                                            {productDetailState.data['url']}\r\n                                        </span>\r\n\r\n                                    </h3>\r\n                                )}\r\n\r\n                                {productDetailState.data['endDate'] && (\r\n                                    <h3>\r\n                                        END DATE:\r\n                                        <span>\r\n                                            {productDetailState.data['url']}\r\n                                        </span>\r\n\r\n                                    </h3>\r\n                                )}\r\n\r\n\r\n\r\n                                {productDetailState.data['url'] && (\r\n                                    <h3>\r\n                                        URL:\r\n                                        <span>\r\n                                            {productDetailState.data['url']}\r\n                                        </span>\r\n\r\n                                    </h3>\r\n                                )}\r\n                                {/* \r\n                                {productDetailState.data['tags'] && productDetailState.data['tags'].length > 0 &&\r\n                                    (<>\r\n                                        <h3>\r\n                                            TAGS:\r\n                                        {productDetailState.data['tags'].map(tag => {\r\n                                            return (\r\n                                                <span>\r\n                                                    {tag.name}\r\n                                                </span>\r\n                                            )\r\n                                        })}\r\n                                        </h3>\r\n\r\n                                    </>)\r\n                                } */}\r\n\r\n                                {productDetailState.data['category'] && productDetailState.data['category'].length > 0 &&\r\n                                    (<>\r\n                                        <h3>\r\n                                            CATEGORIES:\r\n                                        {productDetailState.data['category'].map(cat => {\r\n                                            return (\r\n                                                <span\r\n                                                    onClick={() => history.push(`/admin/category/${cat.id}`)}\r\n\r\n                                                >\r\n                                                    {cat.name}\r\n                                                </span>\r\n                                            )\r\n                                        })}\r\n                                        </h3>\r\n\r\n                                    </>)\r\n                                }\r\n\r\n                            </div>\r\n                        </div>\r\n\r\n\r\n                        {productDetailState.data['icon'] && (\r\n                            <>\r\n                                <div className='brandDetailContainer__heading'>\r\n                                    <h3>\r\n                                        Icon\r\n                            </h3>\r\n                                </div>\r\n\r\n                                <div className='brandDetailContainer__inlineBox'>\r\n                                    <div className='brandDetailContainer__header-coverContainer brandDetailContainer__header-coverContainer-icon'>\r\n                                        <img src={productDetailState.data['icon'] && productDetailState.data['icon']} alt=\"\" />\r\n                                    </div>\r\n\r\n                                </div>\r\n\r\n                                <div style={{\r\n                                    marginBottom: \"25px\"\r\n                                }}></div>\r\n                            </>\r\n                        )}\r\n\r\n\r\n\r\n                        {productDetailState.done && productDetailState.data && Object.keys(productDetailState.data).length > 0 && productDetailState.data['products'] && (\r\n                            <div className='brandDetailContainer__heading'>\r\n                                <h3>\r\n                                    Products\r\n                       </h3>\r\n                            </div>\r\n                        )\r\n                        }\r\n\r\n\r\n                        <div className='brandDetailContainer__body'>\r\n                            {productDetailState.done && productDetailState.data && productDetailState.data['products'] && !(productDetailState.data['products'].length > 0) && (\r\n                                <div style={{\r\n                                    marginTop: '100px'\r\n                                }}>\r\n                                    <Empty description='No Products exists for this Bundle' image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n                                </div>\r\n                            )}\r\n\r\n                            {productDetailState.done && productDetailState.data && Object.keys(productDetailState.data).length > 0 && (\r\n                                <>\r\n                                    {productDetailState.data['products'] && productDetailState.data['products'].length > 0 &&\r\n                                        productDetailState.data['products'].map(product => {\r\n                                            return (\r\n                                                <CouponProducts\r\n                                                    quantity={product.quantity}\r\n                                                    productId={product['_id']} />\r\n                                            )\r\n                                        })}\r\n                                </>\r\n                            )}\r\n                        </div>\r\n\r\n                        {productDetailState.data['image'] && productDetailState.data['image'].length > 0 && (\r\n                            <>\r\n                                <div className='brandDetailContainer__heading'>\r\n                                    <h3>\r\n                                        Image Gallary\r\n                                   </h3>\r\n                                </div>\r\n\r\n                                <div className='brandDetailContainer__imageGallary'>\r\n                                    <div className='imgGallaryContainer'>\r\n\r\n                                        <div className=\"imgGallary-row\">\r\n                                            {row && Object.keys(row).map(column => {\r\n                                                return (\r\n                                                    <div className=\"imgGallary-column\">\r\n                                                        {row[column] && row[column].map(img => {\r\n                                                            return <img src={img} style={{\r\n                                                                width: '100%'\r\n                                                            }} />\r\n                                                        })}\r\n\r\n                                                    </div>\r\n                                                )\r\n                                            })}\r\n\r\n\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                </div>\r\n\r\n                                <div style={{\r\n                                    marginBottom: \"25px\"\r\n                                }}></div>\r\n                            </>\r\n                        )}\r\n\r\n                        {productDetailState.data['brand'] && Object.keys(productDetailState.data['brand']).length > 0 && (\r\n                            <>\r\n                                <div className='brandDetailContainer__heading'>\r\n                                    <h3>\r\n                                        Brand\r\n                                   </h3>\r\n                                </div>\r\n\r\n                                <div\r\n                                    onClick={() => history.push(`/admin/brand/${productDetailState.data['brand']['id']}`)}\r\n\r\n                                    className='brandDetailContainer__brand'>\r\n                                    <div className='brandDetailContainer__brand-coverbox'>\r\n                                        <img src={productDetailState.data['brand']['cover'] && productDetailState.data['brand']['cover']} alt=\"\" />\r\n                                    </div>\r\n                                    <div className='brandDetailContainer__brand-info'>\r\n                                        <h2>\r\n                                            {productDetailState.data['brand']['name']}\r\n                                        </h2>\r\n                                        <h3>\r\n                                            {productDetailState.data['brand']['description']}\r\n                                        </h3>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div style={{\r\n                                    marginBottom: \"25px\"\r\n                                }}></div>\r\n                            </>\r\n                        )}\r\n\r\n\r\n                        {productDetailState.data['primaryCategory'] && Object.keys(productDetailState.data['primaryCategory']).length > 0 && (\r\n                            <>\r\n                                <div className='brandDetailContainer__heading'>\r\n                                    <h3>\r\n                                        Primary Category\r\n                                   </h3>\r\n                                </div>\r\n\r\n                                <div\r\n                                    onClick={() => history.push(`/admin/category/${productDetailState.data['primaryCategory']['id']}`)}\r\n                                    className='brandDetailContainer__brand'>\r\n                                    <div className='brandDetailContainer__brand-coverbox'>\r\n                                        <img src={productDetailState.data['primaryCategory']['cover'] && productDetailState.data['primaryCategory']['cover']} alt=\"\" />\r\n                                    </div>\r\n                                    <div className='brandDetailContainer__brand-info'>\r\n                                        <h2>\r\n                                            {productDetailState.data['primaryCategory']['name']}\r\n                                        </h2>\r\n                                        <h3>\r\n                                            {productDetailState.data['primaryCategory']['description']}\r\n                                        </h3>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div style={{\r\n                                    marginBottom: \"25px\"\r\n                                }}></div>\r\n                            </>\r\n                        )}\r\n\r\n                    </>\r\n\r\n                )}\r\n\r\n            </Skeleton>\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NewBrandDetail\r\n","import React, { useState } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n\r\nimport { useHandleFetch } from '../../hooks';\r\n// import third party ui lib\r\nimport { Upload, message, Switch, Select, Button, notification, Modal, Tooltip } from 'antd';\r\n\r\nimport {\r\n\tFileOutlined,\r\n\tInboxOutlined,\r\n\tFileAddOutlined,\r\n\tDeleteOutlined,\r\n\tCheckCircleOutlined,\r\n\tCloseOutlined,\r\n\tCheckOutlined,\r\n\tInfoCircleOutlined,\r\n\tPlusOutlined,\r\n\tFileImageFilled\r\n} from '@ant-design/icons';\r\n\r\n\r\n\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport MediaLibrary from \"../../components/MediaLibrary\";\r\n\r\nconst validationSchema = Yup.object().shape({\r\n\tname: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t\tmessage: message || 'Brand Created',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n\tnotification.error({\r\n\t\tmessage: message || 'Something Went Wrong',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n};\r\n\r\n\r\nconst initialValues = {\r\n\tname: '',\r\n\tdescription: '',\r\n\timage: [],\r\n\turl: '',\r\n\tcover: ''\r\n}\r\n\r\n\r\n\r\ninterface Props {\r\n\taddNewCategoryVisible?: any;\r\n\tsetAddNewCategoryVisible?: any;\r\n\tbrandList?: any;\r\n\tsetBrandList?: any;\r\n\r\n}\r\n\r\nconst AddNewBrand = ({ addNewCategoryVisible, setAddNewCategoryVisible, brandList, setBrandList }: Props) => {\r\n\r\n\tconst [updateBrandState, handleUpdateBrandFetch] = useHandleFetch({}, 'updateBrand');\r\n\tconst [visible, setvisible] = useState(false);\r\n\tconst [myImages, setmyImages] = useState(false);\r\n\tconst [visibleMedia, setvisibleMedia] = useState(false);\r\n\tconst [coverImageId, setCoverImageId] = useState('');\r\n\r\n\r\n\tconst handleSubmit = async (values: any, actions: any) => {\r\n\r\n\t\t// @ts-ignore\r\n\t\tconst imagesIds = myImages ? myImages.map(image => {\r\n\t\t\treturn image.id;\r\n\t\t}) : [];\r\n\r\n\r\n\t\tconst addBrandRes = await handleUpdateBrandFetch({\r\n\r\n\t\t\tbody: {\r\n\t\t\t\tname: values.name.trim(),\r\n\t\t\t\tdescription: values.description,\r\n\t\t\t\ttype: values.type,\r\n\t\t\t\timage: imagesIds,\r\n\t\t\t\tcover: coverImageId || imagesIds[0] ? imagesIds[0] : '',\r\n\t\t\t},\r\n\t\t});\r\n\r\n\t\t// @ts-ignore\r\n\t\tif (addBrandRes && addBrandRes.status === 'ok') {\r\n\t\t\topenSuccessNotification();\r\n\r\n\t\t\tsetBrandList([...brandList, {\r\n\t\t\t\tid: addBrandRes['id'] || '',\r\n\t\t\t\tkey: addBrandRes['id'] || '',\r\n\t\t\t\tname: addBrandRes['name'] || '',\r\n\t\t\t\tdescription: addBrandRes['description'] || '',\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\t...addBrandRes\r\n\t\t\t}])\r\n\t\t\tactions.resetForm();\r\n\t\t\tsetAddNewCategoryVisible(false);\r\n\t\t}\r\n\t\telse {\r\n\t\t\topenErrorNotification();\r\n\t\t}\r\n\r\n\t\tactions.setSubmitting(false);\r\n\r\n\t};\r\n\r\n\r\n\tconst onSwitchChange = (checked: any) => {\r\n\t\t// console.log(checked);\r\n\t};\r\n\r\n\r\n\tconst handleCancel = (e: any) => {\r\n\t\tsetAddNewCategoryVisible(false);\r\n\t};\r\n\r\n\r\n\tconst getisSubmitButtonDisabled = (values, isValid) => {\r\n\t\tif (!values.name || !isValid) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\tconst handleImagesDelete = (id) => {\r\n\t\t// @ts-ignore\r\n\t\tconst newImages = myImages && myImages.filter(image => {\r\n\t\t\treturn image.id !== id;\r\n\t\t})\r\n\r\n\t\tsetmyImages(newImages);\r\n\t}\r\n\r\n\r\n\treturn (\r\n\t\t<Formik\r\n\t\t\tonSubmit={(values, actions) => handleSubmit(values, actions)}\r\n\t\t\tvalidationSchema={validationSchema}\r\n\t\t\tvalidateOnBlur={false}\r\n\t\t\tenableReinitialize={true}\r\n\t\t\tinitialValues={\r\n\t\t\t\t{ ...initialValues }\r\n\t\t\t}\r\n\t\t>\r\n\t\t\t{({\r\n\t\t\t\thandleChange,\r\n\t\t\t\tvalues,\r\n\t\t\t\thandleSubmit,\r\n\t\t\t\terrors,\r\n\t\t\t\tisValid,\r\n\t\t\t\tisSubmitting,\r\n\t\t\t\ttouched,\r\n\t\t\t\thandleBlur,\r\n\t\t\t\tsetFieldTouched,\r\n\t\t\t\thandleReset,\r\n\t\t\t}) => (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<Modal\r\n\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\ttop: '40px'\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\ttitle=\"Add New Organizer\"\r\n\t\t\t\t\t\t\tvisible={addNewCategoryVisible}\r\n\t\t\t\t\t\t\tonOk={(e: any) => handleSubmit(e)}\r\n\t\t\t\t\t\t\tonCancel={handleCancel}\r\n\t\t\t\t\t\t\tokText='Create'\r\n\t\t\t\t\t\t\tokButtonProps={{\r\n\t\t\t\t\t\t\t\tloading: isSubmitting,\r\n\t\t\t\t\t\t\t\thtmlType: \"submit\",\r\n\t\t\t\t\t\t\t\tdisabled: getisSubmitButtonDisabled(values, isValid)\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\tlabel='Title'\r\n\t\t\t\t\t\t\t\tvalue={values.name}\r\n\t\t\t\t\t\t\t\tname='name'\r\n\t\t\t\t\t\t\t\tisError={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateBrandState.error['error']['name'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateBrandState.error['error']['name'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('name');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\tlabel='Description'\r\n\t\t\t\t\t\t\t\tvalue={values.description}\r\n\t\t\t\t\t\t\t\tname='description'\r\n\t\t\t\t\t\t\t\tisError={(touched.description && errors.description) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateBrandState.error['error']['description'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.description && errors.description) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateBrandState.error['error']['description'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('description');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\tmarginTop: '20px'\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\r\n\t\t\t\t\t\t\t<div className='addproductSection-left-header'\r\n\r\n\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\tmarginBottom: '-5px'\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>Images</h3>\r\n\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\t\t\t\t\t\t\t<div className='aboutToUploadImagesContainer'>\r\n\t\t\t\t\t\t\t\t{myImages &&\r\n\t\t\t\t\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\t\t\t\t\tmyImages.length > 0 && myImages.map((image, index) => {\r\n\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='aboutToUploadImagesContainer__item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='aboutToUploadImagesContainer__item-imgContainer'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => setCoverImageId(image.id)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<img src={image.cover} alt={image.alt} />\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => handleImagesDelete(image.id)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='aboutToUploadImagesContainer__item-remove'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<CloseOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t{coverImageId === image.id ? (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<span className='aboutToUploadImagesContainer__item-cover'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<CheckOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t) : !coverImageId && index === 0 && (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<span className='aboutToUploadImagesContainer__item-cover'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<CheckOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t})}\r\n\r\n\r\n\t\t\t\t\t\t\t\t<Tooltip\r\n\t\t\t\t\t\t\t\t\ttitle={'Attach images'}>\r\n\r\n\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\t\t\tsetvisibleMedia(true);\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\tclassName='aboutToUploadImagesContainer__uploadItem'>\r\n\t\t\t\t\t\t\t\t\t\t{/* <FileAddOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FileImageTwoTone />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FileImageOutlined /> */}\r\n\t\t\t\t\t\t\t\t\t\t<FileImageFilled />\r\n\t\t\t\t\t\t\t\t\t\t{/* <h5>\r\n\t\t\t\t\t\t\t\t\t\t\t\t     Select From Library\r\n\t\t\t\t\t\t\t\t\t\t\t<     /h5> */}\r\n\t\t\t\t\t\t\t\t\t\t<span className='aboutToUploadImagesContainer__uploadItem-plus'>\r\n\t\t\t\t\t\t\t\t\t\t\t<PlusOutlined />\r\n\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</Tooltip>\r\n\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\t\t\t\t\t\t</Modal>\r\n\r\n\t\t\t\t\t\t<MediaLibrary\r\n\t\t\t\t\t\t\tsetvisible={setvisibleMedia}\r\n\t\t\t\t\t\t\tvisible={visibleMedia}\r\n\t\t\t\t\t\t\tsetmyImages={setmyImages}\r\n\t\t\t\t\t\t\tmyImages={myImages}\r\n\t\t\t\t\t\t\tisModalOpenForImages={true}\r\n\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</>\r\n\t\t\t\t)}\r\n\t\t</Formik>\r\n\r\n\r\n\r\n\r\n\t);\r\n};\r\n\r\nexport default AddNewBrand;\r\n","import React,{useState} from 'react';\r\nimport { Modal, notification  } from 'antd';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport {useHandleFetch} from '../../hooks';\r\nimport { CheckCircleOutlined } from '@ant-design/icons';\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n\tname: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t  message: message || 'Tag Updated',\r\n\t  description: '',\r\n\t  icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n  };\r\n\r\n\r\n  const openErrorNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t  message: message || 'Something Went Wrong',\r\n\t  description: '',\r\n\t  icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n  };\r\n\r\n\r\n\r\n\r\n\r\ninterface Props {\r\n\tcategory: any;\r\n\tsetvisible: any; \r\n\tvisible: any;\r\n\tbrandList: any; \r\n\tsetBrandList?: any; \r\n\r\n}\r\n\r\nconst QuickEdit = ({ category, setvisible, visible, brandList, setBrandList }: Props) => {\r\n\tconst [updatebrandState, handleUpdateBrandFetch] = useHandleFetch({}, 'updateBrand');\r\n\r\n\tconst handleSubmit = async (values : any, actions : any) => {\r\n\t  const updateBrandRes = await handleUpdateBrandFetch({\r\n\t\turlOptions: {\r\n\t\t\tplaceHolders: {\r\n\t\t\t  id: values.id,\r\n\t\t\t}\r\n\t\t  },\r\n\t\tbody: {\r\n\t\t\tname: values.name,\r\n\t\t\tdescription: values.description,\r\n\t\t},\r\n\t  });\r\n\r\n\t  \r\n\t \t  // @ts-ignore\r\n\t\t   if(updateBrandRes && updateBrandRes.status === 'ok'){\r\n\t\t\topenSuccessNotification(); \r\n\t\r\n\t\t\tconst positionInBrand = () => {\r\n\t\t\t\treturn brandList.map(item => item.id).indexOf(category.id);\r\n\t\t\t  }\r\n\t\r\n\t\t\t  const index = positionInBrand();\r\n\t\r\n\t\t\t  // @ts-ignore\r\n\t\t\t  const updatedItem = Object.assign({}, brandList[index], { ...updateBrandRes });\r\n\t\t\t  const updateBrandList = [...brandList.slice(0, index), updatedItem, ...brandList.slice(index + 1)];\r\n\t\t\t  setBrandList(updateBrandList); \r\n\t\t\t\r\n\t\t  }\r\n\t\t  else {\r\n\t\t\topenErrorNotification();\r\n\t\t  }\r\n\t\t\r\n\t\t  actions.setSubmitting(false);\r\n\t\t  setvisible(false)\r\n\r\n\r\n\t\r\n\t};\r\n\t\r\n\r\n\tconst handleCancel = (e: any) => {\r\n        setvisible(false);\r\n      };\r\n\r\n\r\n\r\n\t  const getisSubmitButtonDisabled = (values,isValid) => {\r\n\t\tif(!values.name || !isValid){\r\n\t\t\treturn true; \r\n\t\t}\r\n\t\treturn false; \r\n\t  }\r\n\r\n\treturn (\r\n\t\t<Formik\r\n\t\tonSubmit={(values, actions) => handleSubmit(values, actions)}\r\n\t\tvalidationSchema={validationSchema}\r\n\t\tvalidateOnBlur={false}\r\n\t\tenableReinitialize={true}\r\n\t\tinitialValues={\r\n\t\t  {...category}\r\n\t\t}\r\n\t  >\r\n\t\t{({\r\n\t\t  handleChange,\r\n\t\t  values,\r\n\t\t  handleSubmit,\r\n\t\t  errors,\r\n\t\t  isValid,\r\n\t\t  isSubmitting,\r\n\t\t  touched,\r\n\t\t  handleBlur,\r\n\t\t  setFieldTouched,\r\n\t\t  handleReset,\r\n\t\t}) => (\r\n\t\t\t<>\r\n\t\t\t<Modal\r\n\t\t\ttitle=\"Quick Edit\"\r\n\t\t\tvisible={visible}\r\n\t\t\tonOk={(e : any) => handleSubmit(e)}\r\n\t\t\tonCancel={handleCancel}\r\n\t\t\tokText='Update'\r\n\t\t\tokButtonProps={{\r\n\t\t\tloading: isSubmitting,\r\n\t\t\thtmlType: \"submit\",\r\n\t\t\tdisabled: getisSubmitButtonDisabled(values, isValid)\r\n\t\t\t}}\r\n  >\r\n  <Input \r\n\t\t\t   label='Title'\r\n\t\t\t   value={values.name}\r\n\t\t\t   name='name'\r\n\t\t\t   isError={(touched.name && errors.name) ||\r\n\t\t\t\t  (!isSubmitting && updatebrandState.error['error']['name'])}\r\n\t\t\t  \r\n\t\t\t\t  errorString={(touched.name && errors.name) ||\r\n\t\t\t\t\t  (!isSubmitting && updatebrandState.error['error']['name'])}\r\n\t\t\t   onChange={(e : any) => {\r\n\t\t\t\t  handleChange(e);\r\n\t\t\t\t  setFieldTouched('name');\r\n\t\t\t\t}}\r\n\t\t\t   />\r\n\t\t\t  <TextArea\r\n\t\t\t   label='Description' \r\n\t\t\t   value={values.description}\r\n\t\t\t   name='description'\r\n\t\t\t   isError={(touched.description && errors.description) ||\r\n\t\t\t\t  (!isSubmitting && updatebrandState.error['error']['description'])}\r\n\t\t\t  \r\n\t\t\t\t  errorString={(touched.description && errors.description) ||\r\n\t\t\t\t\t  (!isSubmitting && updatebrandState.error['error']['description'])}\r\n\t\t\t   onChange={(e : any) => {\r\n\t\t\t\t  handleChange(e);\r\n\t\t\t\t  setFieldTouched('description');\r\n\t\t\t\t}}\r\n\t\t\t\t />\r\n  </Modal>\r\n\t\t\t  \r\n\t\t\t</>\r\n\t\t  )}\r\n\t  </Formik>\r\n\t);\r\n};\r\n\r\n\r\nexport default QuickEdit;\r\n","import React, {useState,useEffect} from 'react';\r\nimport {withRouter, useHistory} from 'react-router-dom';\r\nimport { Table,Empty, Popconfirm, Space,Button, Input,Tooltip, notification  } from 'antd';\r\nimport { PlusOutlined, EditOutlined, DeleteOutlined,CheckCircleOutlined } from '@ant-design/icons';\r\n\r\n\r\n\r\n/// import hooks\r\nimport {  useHandleFetch } from \"../../hooks\";\r\n\r\n// import components\r\nimport { DataTableSkeleton } from \"../../components/Placeholders\";\r\nimport AddNewBrand from \"./AddNewBrand\"\r\nimport QuickEdit from \"./QuickEdit\"\r\n\r\n\r\n\r\nconst { Column } = Table;\r\nconst { Search } = Input;\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t  message: message || 'Tag Created',\r\n\t  description: '',\r\n\t  icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n  };\r\n\r\n\r\n  const openErrorNotification = (message?: any) => {\r\n\tnotification.error({\r\n\t  message: message || 'Something Went Wrong',\r\n\t  description: '',\r\n\t  icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n  };\r\n\r\n\r\n\r\n\r\n\r\ninterface myTableProps {\r\n  data: any; \r\n  setBrandList: any; \r\n} \r\n\r\n\r\nconst MyTable = ({data,setBrandList}: myTableProps) => {\r\n    const [visible,setvisible] = useState(false);   \r\n    const [activeCategoryForEdit,setactiveCategoryForEdit] = useState(false); \r\n    const [deleteBrandState, handleDeleteBrandFetch] = useHandleFetch({}, 'deleteBrand');\r\n    const [brandDetailVisible,setBrandDetailVisible] = useState(false); \r\n    const history = useHistory(); \r\n\r\n\r\n \r\n      const handleDeleteBrand = async (id) => {\r\n        const deleteBrandRes = await handleDeleteBrandFetch({\r\n          urlOptions: {\r\n            placeHolders: {\r\n              id,\r\n            }\r\n            }\r\n          });\r\n\r\n            // @ts-ignore\r\n\t\t  if(deleteBrandRes && deleteBrandRes.status === 'ok'){\r\n\t\t\t  openSuccessNotification('Deleted Brand'); \r\n\t\t\t  const newBrandList =  data.filter(item => item.id !== id);\r\n\t\t\t  setBrandList(newBrandList); \r\n\t\t  }\r\n      }\r\n      \r\n\r\n    return (\r\n        <>\r\n        <Table \r\n        // expandable={{\r\n        //     expandedRowRender: record => <p style={{ margin: 0 }}>{record.name}</p>,\r\n        //     rowExpandable: record => record.name !== 'Not Expandable',\r\n        //   }}\r\n        // bordered={true}\r\n        size='small'\r\n        // pagination={false}\r\n        dataSource={data}\r\n        >\r\n            <Column \r\n          title=\"\"\r\n           dataIndex=\"cover\"\r\n            key=\"id\" \r\n            width={'80px'}\r\n            \r\n           className='classnameofthecolumn'\r\n\r\n           render={(cover, record: any) => (\r\n            <>\r\n              <img\r\n                onClick={() => {\r\n                  // setBrandDetailVisible(true);\r\n                  history.push(`/admin/brand/${record.id}`)\r\n                  setactiveCategoryForEdit(record)\r\n                }}\r\n                src={cover} alt='cover img' style={{\r\n                  height: '40px',\r\n                  width: '40px',\r\n                  objectFit: \"contain\",\r\n                  borderRadius: '3px',\r\n                  cursor: 'pointer'\r\n                }} />\r\n\r\n\r\n\r\n\r\n            </>\r\n          )}\r\n            />\r\n          <Column\r\n           title=\"Name\" \r\n           dataIndex=\"name\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n           render={(text, record: any) => (\r\n            <>\r\n\r\n              <h4\r\n                onClick={() => {\r\n                  history.push(`/admin/brand/${record.id}`)\r\n                  // setBrandDetailVisible(true);\r\n                  setactiveCategoryForEdit(record)\r\n                }}\r\n                style={{\r\n                  fontWeight: 400,\r\n                  color: '#555',\r\n                  cursor: 'pointer'\r\n\r\n                }}>\r\n                {text}\r\n              </h4>\r\n\r\n\r\n            </>\r\n          )}\r\n            />\r\n\r\n<Column\r\n           title=\"Description\" \r\n           dataIndex=\"description\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n         \r\n            />\r\n\r\n\r\n       <Column\r\n           title=\"Product\" \r\n           dataIndex=\"productCount\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n         \r\n            />\r\n          {/* <Column \r\n          \r\n          className='classnameofthecolumn'\r\n\r\n          title=\"Product\" dataIndex=\"product\" key=\"product\" /> */}\r\n\r\n          {/* <Column \r\n          \r\n          className='classnameofthecolumn'\r\n\r\n          title=\"Sub Category\" dataIndex=\"subCategory\" key=\"subCategory\" /> */}\r\n        \r\n        {/* <Column\r\n          title=\"Tags\"\r\n          dataIndex=\"tags\"\r\n          key=\"tags\"\r\n          render={tags => (\r\n            <>\r\n              {tags.map((tag : any) => (\r\n                <Tag color=\"blue\" key={tag}>\r\n                  {tag}\r\n                </Tag>\r\n              ))}\r\n            </>\r\n          )}\r\n        /> */}\r\n        <Column\r\n        \r\n        className='classnameofthecolumn'\r\n          title=\"\"\r\n          key=\"action\"\r\n          align='right'\r\n          render={(text, record : any) => (\r\n            <Space size=\"middle\">\r\n                <a href='##'>\r\n               <Tooltip placement=\"top\" title='Quick Edit Brand'>\r\n              <span className='iconSize' onClick={() => {\r\n                setvisible(true)\r\n                setactiveCategoryForEdit(record); \r\n              }}> \r\n              <EditOutlined />\r\n            \r\n              </span>\r\n               </Tooltip>\r\n               </a>\r\n\r\n\r\n \r\n               <Popconfirm \r\n               \r\n               onConfirm={() => handleDeleteBrand(record.id)}\r\n               title=\"Are you sure？\" okText=\"Yes\" cancelText=\"No\">\r\n           \r\n           <span \r\n             className='iconSize iconSize-danger'\r\n             > \r\n             <DeleteOutlined/>\r\n            </span>\r\n           </Popconfirm>\r\n\r\n\r\n            </Space>\r\n          )}\r\n        />\r\n      </Table>\r\n\r\n\r\n\r\n    {activeCategoryForEdit &&   <QuickEdit \r\n    brandList={data}\r\n    setBrandList={setBrandList}\r\n    setvisible={setvisible}\r\n    visible={visible}\r\n    category={activeCategoryForEdit}/>}\r\n    \r\n    \r\n    </>\r\n    )\r\n}\r\n\r\n\r\ninterface Props {\r\n    history: any; \r\n}\r\n\r\nconst CategoryList = ({history}: Props) => {\r\n\r\n\r\n  const [brandList,setBrandList] = useState([]);\r\n\r\n  \r\n  const [brandState, handlebrandListFetch] = useHandleFetch({}, 'brandList');\r\n\r\n\r\n  useEffect(()=>{\r\n   const setBrands = async () => {\r\n     const brands = await handlebrandListFetch({}); \r\n     // @ts-ignore\r\n     setBrandList(brands); \r\n   }\r\n   setBrands(); \r\n  },[])\r\n\r\n\r\n  \r\n  const [addNewCategoryVisible,setAddNewCategoryVisible] = useState(false);   \r\n\r\n  const handleOkAddNewCategory = (e: any) => {\r\n    setAddNewCategoryVisible(false);\r\n  \r\n  };\r\n\r\n  const handleCancelAddNewCategory = (e: any) => {\r\n    setAddNewCategoryVisible(false);\r\n  };\r\n\r\n\r\n    \r\n  const handleSearch = (value) => {\r\n    if(brandState.data.length > 0 ){\r\n      const newBrandList = brandState.data.filter(item => item.name.toLowerCase().includes(value.toLowerCase())); \r\n      setBrandList(newBrandList); \r\n    }\r\n     \r\n  }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\treturn (\r\n\t\t<>\r\n    {/* <h2 className='containerPageTitle'>\r\n      Categories\r\n    </h2> */}\r\n    <div className='categoryListContainer'>\r\n            <div className='categoryListContainer__header'>\r\n           \r\n\r\n          <div className='categoryListContainer__header-searchBar'>\r\n          <h2 className='categoryListContainer__header-title'>\r\n            Brand\r\n            </h2>\r\n\r\n\r\n          <Search\r\n            enterButton={false}\r\n            className='searchbarClassName'\r\n          placeholder=\"search brand..\"\r\n          onSearch={value => handleSearch(value)}\r\n          // style={{ width: 300 }}\r\n        />\r\n          </div>\r\n            <Button\r\n          // type=\"primary\"\r\n          className='btnPrimaryClassNameoutline'\r\n          icon={<PlusOutlined />}\r\n          onClick={() => setAddNewCategoryVisible(true)}\r\n        >\r\n        Add New\r\n            \r\n            </Button>\r\n            </div>\r\n\r\n            <div className='categoryListContainer__afterHeader'>\r\n            {/* <Search\r\n      placeholder=\"search categories..\"\r\n      size=\"large\"\r\n      onSearch={value => console.log(value)}\r\n      style={{ width: 300 }}\r\n    /> */}\r\n            </div>\r\n\r\n     \r\n\t\t\t\r\n\t\t\t<div className='categoryListContainer__categoryList'>\r\n        {brandState.done && brandList.length > 0 && <MyTable \r\n          setBrandList={setBrandList}\r\n        data={brandList} />}\r\n        {brandState.isLoading && <DataTableSkeleton />}\r\n        {brandState.done && !(brandList.length > 0) && (\r\n\t\t\t<div style={{\r\n\t\t\t\tmarginTop: '100px'\r\n\t\t\t}}>\r\n\t\t\t\t<Empty description='No Brand found'  image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n\t\t\t</div>\r\n\t\t)}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\r\n    <AddNewBrand \r\n          addNewCategoryVisible={addNewCategoryVisible} \r\n          setAddNewCategoryVisible={setAddNewCategoryVisible} \r\n          setBrandList={setBrandList}\r\n          brandList={brandList}\r\n          />\r\n\r\n    </>\r\n\t);\r\n};\r\n\r\nexport default withRouter(CategoryList);\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n\r\nimport { useHandleFetch } from '../../hooks';\r\n// import third party ui lib\r\nimport { Upload, message, Switch, Select, Button, notification, Modal, Tooltip, Spin } from 'antd';\r\n\r\nimport {\r\n    FileOutlined,\r\n    InboxOutlined,\r\n    FileAddOutlined,\r\n    DeleteOutlined,\r\n    CheckCircleOutlined,\r\n    CloseOutlined,\r\n    CheckOutlined,\r\n    InfoCircleOutlined,\r\n    PlusOutlined,\r\n    FileImageFilled\r\n} from '@ant-design/icons';\r\n\r\n\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport MediaLibrary from \"../../components/MediaLibrary\";\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    name: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Brand Updated',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n    notification.error({\r\n        message: message || 'Something Went Wrong',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst initialValues = {\r\n    name: '',\r\n    description: '',\r\n    image: [],\r\n    url: '',\r\n    cover: ''\r\n}\r\n\r\n\r\n\r\ninterface Props {\r\n    brandDetailData?: any;\r\n    brandEditVisible?: any;\r\n    setBrandEditVisible?: any;\r\n}\r\n\r\nconst AddNewBrand = ({ brandDetailData, brandEditVisible, setBrandEditVisible }: Props) => {\r\n\r\n    const [updateBrandState, handleUpdateBrandFetch] = useHandleFetch({}, 'updateBrand');\r\n    const [attachImageToItemMultipleState, handleAttachImageToItemMultipleFetch] = useHandleFetch({}, 'attachImageToItemMultiple');\r\n    const [attachImageToItemSingleState, handleAttachImageToItemSingleFetch] = useHandleFetch({}, 'attachImageToItemSingle');\r\n    const [detachImageFromItemMultipleState, handleDetachImageFromItemMultipleFetch] = useHandleFetch({}, 'detachImageFromItemMultiple');\r\n    const [detachImageFromItemSingleState, handleDetachImageFromItemSingleFetch] = useHandleFetch({}, 'detachImageFromItemSingle');\r\n    const [setImageAsThumbnailToItemState, handleSetImageAsThumbnailToItemFetch] = useHandleFetch({}, 'setImageAsThumbnailToItem');\r\n\r\n\r\n    const [myImages, setmyImages] = useState(false);\r\n    const [visibleMedia, setvisibleMedia] = useState(false);\r\n    const [coverImageId, setCoverImageId] = useState('');\r\n    const [myGoddamnImages, setMyGoddamnImages] = useState([]);\r\n\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        if (brandDetailData && Object.keys(brandDetailData).length > 0) {\r\n\r\n            const images = brandDetailData.image;\r\n            if (images && images.length > 0) {\r\n                setmyImages(images);\r\n                setMyGoddamnImages(images);\r\n            }\r\n\r\n            if (brandDetailData.cover && brandDetailData.cover['id']) {\r\n                // @ts-ignore\r\n                setmyImages([brandDetailData.cover, ...images]);\r\n                setCoverImageId(brandDetailData.cover['id']);\r\n            }\r\n\r\n        }\r\n    }, [brandDetailData])\r\n\r\n\r\n    useEffect(() => {\r\n        // @ts-ignore\r\n        if (myImages && myImages[0] && myImages.length < 2) {\r\n\r\n            if (coverImageId !== myImages[0].id) {\r\n                setCoverImageId(myImages[0].id);\r\n                handleSetImageAsThumnail(myImages[0]);\r\n            }\r\n\r\n        }\r\n\r\n    }, [myImages])\r\n\r\n\r\n    const handleDetachSingleImage = async id => {\r\n        await handleDetachImageFromItemSingleFetch({\r\n            urlOptions: {\r\n                placeHolders: {\r\n                    imageId: id,\r\n                    collection: 'brand',\r\n                    itemId: brandDetailData.id\r\n                }\r\n            }\r\n        });\r\n\r\n\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n    const handleSetImageAsThumnail = async image => {\r\n\r\n        const thumbnailRes = await handleSetImageAsThumbnailToItemFetch({\r\n            urlOptions: {\r\n                placeHolders: {\r\n                    imageId: image.id,\r\n                    collection: 'brand',\r\n                    itemId: brandDetailData.id\r\n                }\r\n            }\r\n        });\r\n\r\n\r\n        // @ts-ignore\r\n        if (thumbnailRes && thumbnailRes.status === 'ok') {\r\n            openSuccessNotification('Seted as thumbnail!')\r\n            // const positionInBrand = () => {\r\n            //     return brandList.map(item => item.id).indexOf(brandDetailData.id);\r\n            // }\r\n\r\n            // const index = positionInBrand();\r\n\r\n            // const prevItem = brandList.find(item => item.id === productRecord.id);\r\n\r\n            // if (prevItem) {\r\n            //     const updatedItem = Object.assign({}, brandList[index], { ...prevItem, cover: image.cover });\r\n            //     const updateBrandList = [...brandList.slice(0, index), updatedItem, ...brandList.slice(index + 1)];\r\n            //     setBrandList(updateBrandList);\r\n            // }\r\n        }\r\n        else {\r\n            openErrorNotification(\"Couldn't set as thumbnail, Something went wrong\")\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    const handleSubmit = async (values: any, actions: any) => {\r\n\r\n        console.log('myReadyToGoImages', myImages);\r\n\r\n        if (brandDetailData && Object.keys(brandDetailData).length > 0) {\r\n            // @ts-ignore\r\n            const images = myImages && myImages.length > 0 ? myImages.map(item => item.id) : [];\r\n\r\n            if (images[0] && images.length > 1) {\r\n                await handleAttachImageToItemMultipleFetch({\r\n                    urlOptions: {\r\n                        placeHolders: {\r\n                            collection: 'brand',\r\n                            itemId: brandDetailData.id\r\n                        }\r\n                    },\r\n                    body: {\r\n                        image: images\r\n                    }\r\n                });\r\n            }\r\n            else if (images[0] && images.length < 1) {\r\n                await handleAttachImageToItemSingleFetch({\r\n                    urlOptions: {\r\n                        placeHolders: {\r\n                            imageId: images[0].id,\r\n                            collection: 'brand',\r\n                            itemId: brandDetailData.id\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n        }\r\n\r\n\r\n\r\n\r\n        const updateBrandRes = await handleUpdateBrandFetch({\r\n            urlOptions: {\r\n                placeHolders: {\r\n                    id: brandDetailData.id\r\n                }\r\n            },\r\n            body: {\r\n                name: values.name.trim(),\r\n                description: values.description,\r\n            },\r\n        });\r\n\r\n        // @ts-ignore\r\n        if (updateBrandRes && updateBrandRes.status === 'ok') {\r\n            openSuccessNotification();\r\n            setBrandEditVisible(false);\r\n\r\n\r\n            // const positionInBrand = () => {\r\n            //     return brandList.map(item => item.id).indexOf(productRecord.id);\r\n            // }\r\n\r\n            // const index = positionInBrand();\r\n            // const updatedItem = Object.assign({}, brandList[index], { ...updateBrandRes });\r\n            // console.log('updateBrandList', updatedItem)\r\n\r\n            // const updateBrandList = [...brandList.slice(0, index), updatedItem, ...brandList.slice(index + 1)];\r\n\r\n            // setBrandList(updateBrandList);\r\n\r\n\r\n            actions.resetForm();\r\n\r\n        }\r\n        else {\r\n            openErrorNotification();\r\n        }\r\n\r\n        actions.setSubmitting(false);\r\n    };\r\n\r\n\r\n\r\n    const onSwitchChange = (checked: any) => {\r\n        // console.log(checked);\r\n    };\r\n\r\n\r\n    const handleCancel = (e: any) => {\r\n        setBrandEditVisible(false);\r\n    };\r\n\r\n\r\n    const getisSubmitButtonDisabled = (values, isValid) => {\r\n        if (!values.name || !isValid) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n\r\n\r\n\r\n    const handleImagesDelete = (id) => {\r\n        // @ts-ignore\r\n        const newImages = myImages && myImages.filter(image => {\r\n            return image.id !== id;\r\n        })\r\n\r\n        setmyImages(newImages);\r\n    }\r\n\r\n\r\n\r\n    console.log('myImages', myImages)\r\n\r\n    return (\r\n        <Formik\r\n            onSubmit={(values, actions) => handleSubmit(values, actions)}\r\n            validationSchema={validationSchema}\r\n            validateOnBlur={false}\r\n            enableReinitialize={true}\r\n            initialValues={\r\n                { ...initialValues, ...brandDetailData }\r\n            }\r\n        >\r\n            {({\r\n                handleChange,\r\n                values,\r\n                handleSubmit,\r\n                errors,\r\n                isValid,\r\n                isSubmitting,\r\n                touched,\r\n                handleBlur,\r\n                setFieldTouched,\r\n                handleReset,\r\n            }) => (\r\n                    <>\r\n                        <Modal\r\n                            style={{\r\n                                top: '40px'\r\n                            }}\r\n                            title=\"Brand Edit\"\r\n                            visible={brandEditVisible}\r\n                            onOk={(e: any) => handleSubmit(e)}\r\n                            onCancel={handleCancel}\r\n                            okText='Update'\r\n                            okButtonProps={{\r\n                                loading: isSubmitting,\r\n                                htmlType: \"submit\",\r\n                                disabled: getisSubmitButtonDisabled(values, isValid)\r\n                            }}\r\n                        >\r\n                            <Input\r\n                                label='Title'\r\n                                value={values.name}\r\n                                name='name'\r\n                                isError={(touched.name && errors.name) ||\r\n                                    (!isSubmitting && updateBrandState.error['error']['name'])}\r\n\r\n                                errorString={(touched.name && errors.name) ||\r\n                                    (!isSubmitting && updateBrandState.error['error']['name'])}\r\n                                onChange={(e: any) => {\r\n                                    handleChange(e);\r\n                                    setFieldTouched('name');\r\n                                }}\r\n                            />\r\n                            <TextArea\r\n                                rows={3}\r\n                                label='Description'\r\n                                value={values.description}\r\n                                name='description'\r\n                                isError={(touched.description && errors.description) ||\r\n                                    (!isSubmitting && updateBrandState.error['error']['description'])}\r\n\r\n                                errorString={(touched.description && errors.description) ||\r\n                                    (!isSubmitting && updateBrandState.error['error']['description'])}\r\n                                onChange={(e: any) => {\r\n                                    handleChange(e);\r\n                                    setFieldTouched('description');\r\n                                }}\r\n                            />\r\n\r\n                            <div\r\n                                style={{\r\n                                    marginTop: '20px'\r\n                                }}\r\n                            />\r\n\r\n\r\n                            <div className='addproductSection-left-header'\r\n\r\n                                style={{\r\n                                    marginBottom: '-5px'\r\n                                }}\r\n                            >\r\n                                <h3 className='inputFieldLabel'>Images</h3>\r\n                                {/* <div  >\r\n\t\t\t\t\t<FileOutlined />\r\n\t\t\t\t\t<span>Media Center</span>\r\n\t\t\t\t</div> */}\r\n                            </div>\r\n\r\n\r\n                            <div className='aboutToUploadImagesContainer'>\r\n\r\n                                {brandDetailData && Object.keys(brandDetailData).length > 0 && (\r\n                                    <>\r\n                                        {myImages &&\r\n                                            // @ts-ignore\r\n                                            myImages.length > 0 && myImages.map((image, index) => {\r\n                                                return (\r\n                                                    <div className='aboutToUploadImagesContainer__item'>\r\n                                                        <div\r\n                                                            className='aboutToUploadImagesContainer__item-imgContainer'\r\n                                                            onClick={() => {\r\n                                                                setCoverImageId(image.id);\r\n                                                                handleSetImageAsThumnail(image);\r\n                                                            }}\r\n                                                        >\r\n                                                            <img src={image.cover} alt={image.alt} />\r\n                                                        </div>\r\n\r\n                                                        <span\r\n                                                            onClick={() => {\r\n                                                                handleImagesDelete(image.id)\r\n                                                                handleDetachSingleImage(image.id)\r\n                                                            }\r\n\r\n                                                            }\r\n                                                            className='aboutToUploadImagesContainer__item-remove'>\r\n                                                            <CloseOutlined />\r\n                                                        </span>\r\n\r\n\r\n                                                        {coverImageId === image.id ? (\r\n                                                            <span className='aboutToUploadImagesContainer__item-cover'>\r\n                                                                <CheckOutlined />\r\n                                                            </span>\r\n                                                        ) : !coverImageId && index === 0 && (\r\n                                                            <span className='aboutToUploadImagesContainer__item-cover'>\r\n                                                                <CheckOutlined />\r\n                                                            </span>\r\n                                                        )}\r\n\r\n\r\n                                                    </div>\r\n                                                )\r\n                                            })}\r\n\r\n\r\n                                        <Tooltip\r\n                                            title={'Attach images'}>\r\n\r\n                                            <div\r\n                                                onClick={() => {\r\n                                                    setvisibleMedia(true);\r\n                                                }}\r\n                                                className='aboutToUploadImagesContainer__uploadItem'>\r\n                                                {/* <FileAddOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FileImageTwoTone />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FileImageOutlined /> */}\r\n                                                <FileImageFilled />\r\n                                                {/* <h5>\r\n\t\t\t\t\t\t\t\t\t\t\t\t     Select From Library\r\n\t\t\t\t\t\t\t\t\t\t\t<     /h5> */}\r\n                                                <span className='aboutToUploadImagesContainer__uploadItem-plus'>\r\n                                                    <PlusOutlined />\r\n                                                </span>\r\n                                            </div>\r\n                                        </Tooltip>\r\n                                    </>\r\n                                )}\r\n\r\n\r\n                            </div>\r\n\r\n                        </Modal>\r\n\r\n                        <MediaLibrary\r\n                            setvisible={setvisibleMedia}\r\n                            visible={visibleMedia}\r\n                            setmyImages={setmyImages}\r\n                            myImages={myImages}\r\n                            myGoddamnImages={myGoddamnImages}\r\n                            setMyGoddamnImages={setMyGoddamnImages}\r\n                            isModalOpenForImages={true}\r\n\r\n                        />\r\n                    </>\r\n                )}\r\n        </Formik>\r\n\r\n\r\n\r\n\r\n    );\r\n};\r\n\r\nexport default AddNewBrand;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useParams, useHistory } from \"react-router\";\r\n\r\n\r\n// import hooks\r\nimport { useHandleFetch } from \"../../hooks\";\r\n\r\n// import lib\r\nimport {\r\n    FileOutlined,\r\n    InboxOutlined,\r\n    RadiusUpleftOutlined,\r\n    RadiusUprightOutlined,\r\n    RadiusBottomleftOutlined,\r\n    RadiusBottomrightOutlined,\r\n    PlusOutlined,\r\n    DeleteOutlined,\r\n    EditOutlined,\r\n    CheckCircleOutlined\r\n} from '@ant-design/icons';\r\n\r\nimport { Skeleton, Empty, Popconfirm, Upload, message, Switch, Select, Button, notification, Table, Space, Input as CoolInput, Tooltip, Modal } from 'antd';\r\n\r\n\r\n// import components\r\nimport { DataTableSkeleton } from \"../../components/Placeholders\";\r\nimport BrandEdit from \"./BrandEdit\";\r\n\r\n\r\nconst { Column, ColumnGroup } = Table;\r\nconst { Search } = CoolInput;\r\n\r\n\r\ninterface Props {\r\n    productRecord?: any;\r\n}\r\n\r\nconst NewBrandDetail = (props: Props) => {\r\n    const [brandDetailState, handleBrandDetailFetch] = useHandleFetch({}, 'brandDetail');\r\n    const [brandProductsState, handleBrandProductsFetch] = useHandleFetch({}, 'brandProducts');\r\n\r\n    const params = useParams();\r\n    const history = useHistory();\r\n    const brandId = params['id'];\r\n    const [brandEditVisible, setBrandEditVisible] = useState(false);\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        const getBrandDetail = async () => {\r\n            await handleBrandDetailFetch({\r\n                urlOptions: {\r\n                    placeHolders: {\r\n                        id: brandId\r\n                    }\r\n                }\r\n            })\r\n        };\r\n\r\n        getBrandDetail();\r\n\r\n    }, [brandId]);\r\n\r\n    useEffect(() => {\r\n\r\n        const getBrandProducts = async () => {\r\n            await handleBrandProductsFetch({\r\n                urlOptions: {\r\n                    placeHolders: {\r\n                        id: brandId\r\n                    }\r\n                }\r\n            })\r\n        };\r\n\r\n        getBrandProducts();\r\n\r\n    }, [brandId]);\r\n\r\n\r\n\r\n\r\n    console.log('brandProductsState', brandProductsState);\r\n\r\n    console.log('brandParams', params);\r\n\r\n\r\n    return (\r\n        <div className='brandDetailContainer'>\r\n\r\n\r\n\r\n\r\n            <div className='brandDetailContainer__heading'>\r\n                <h3>\r\n                    Brand Detail\r\n                </h3>\r\n\r\n\r\n                {brandDetailState.done && brandDetailState.data && (Object.keys(brandDetailState.data).length > 0) && (\r\n                    <>\r\n                        <BrandEdit\r\n                            brandEditVisible={brandEditVisible}\r\n                            setBrandEditVisible={setBrandEditVisible}\r\n                            brandDetailData={brandDetailState.data}\r\n                        />\r\n                        <Button\r\n                            onClick={() => setBrandEditVisible(true)}\r\n                            type='link'\r\n                            icon={<EditOutlined />}\r\n                        >\r\n                            Edit\r\n                      </Button>\r\n                    </>\r\n                )}\r\n\r\n            </div>\r\n            <Skeleton\r\n                avatar paragraph={{ rows: 3 }}\r\n                loading={brandDetailState.isLoading}>\r\n                {brandDetailState.done && brandDetailState.data && !(Object.keys(brandDetailState.data).length > 0) && (\r\n                    <Empty description='No Brand found' image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n                )}\r\n\r\n                {brandDetailState.done && brandDetailState.data && (Object.keys(brandDetailState.data).length > 0) && (\r\n                    <div className='brandDetailContainer__header'>\r\n                        <div className='brandDetailContainer__header-coverContainer'>\r\n                            <img src={brandDetailState.data['cover'] && brandDetailState.data['cover']['cover']} alt=\"\" />\r\n                        </div>\r\n                        <div className='brandDetailContainer__header-info'>\r\n                            <h2>\r\n                                {brandDetailState.data['name']}\r\n                            </h2>\r\n                            <h3>\r\n                                {brandDetailState.data['description']}\r\n                            </h3>\r\n\r\n                            {brandDetailState.data['url'] && (\r\n                                <h3>\r\n                                    URL:\r\n                                    <span>\r\n                                        {brandDetailState.data['url']}\r\n                                    </span>\r\n\r\n                                </h3>\r\n                            )}\r\n                        </div>\r\n                    </div>\r\n                )}\r\n\r\n            </Skeleton>\r\n\r\n            <div className='brandDetailContainer__heading'>\r\n                <h3>\r\n                    Products\r\n                </h3>\r\n            </div>\r\n            <div className='brandDetailContainer__body'>\r\n                {brandProductsState.isLoading && <DataTableSkeleton />}\r\n                {brandProductsState.done && !(brandProductsState.data.length > 0) && (\r\n                    <div style={{\r\n                        marginTop: '100px'\r\n                    }}>\r\n                        <Empty description='No Products exists for this brand' image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n                    </div>\r\n                )}\r\n\r\n                {brandProductsState.done && brandProductsState.data && brandProductsState.data.length > 0 && (\r\n                    <>\r\n                        <Table\r\n                            style={{\r\n                                paddingTop: '10px',\r\n                                borderRadius: '5px !important',\r\n                                overflow: 'hidden',\r\n                                boxShadow: '0 0.125rem 0.625rem rgba(227, 231, 250, 0.3), 0 0.0625rem 0.125rem rgba(206, 220, 233, 0.4)'\r\n                            }}\r\n                            // expandable={{\r\n                            //     expandedRowRender: record => <p style={{ margin: 0 }}>{record.name}</p>,\r\n                            //     rowExpandable: record => record.name !== 'Not Expandable',\r\n                            //   }}\r\n                            // bordered={true}\r\n                            size='small'\r\n                            // pagination={false}\r\n                            dataSource={brandProductsState.data}\r\n                            tableLayout={'auto'}\r\n                            onHeaderRow={column => {\r\n                                return {\r\n                                    style: {\r\n                                        color: 'red !important'\r\n                                    }\r\n\r\n                                };\r\n                            }}\r\n                        >\r\n                            <Column\r\n                                title=\"\"\r\n                                dataIndex=\"cover\"\r\n                                key=\"id\"\r\n                                width={'80px'}\r\n\r\n                                className='classnameofthecolumn'\r\n\r\n                                render={(cover, record: any) => (\r\n                                    <>\r\n                                        <img\r\n                                            onClick={() => {\r\n                                                history.push(`/admin/product/${record.id}`)\r\n                                            }}\r\n                                            src={cover} alt='cover img' style={{\r\n                                                height: '40px',\r\n                                                width: '40px',\r\n                                                objectFit: \"contain\",\r\n                                                borderRadius: '3px',\r\n                                                cursor: 'pointer'\r\n                                            }} />\r\n\r\n\r\n\r\n\r\n                                    </>\r\n                                )}\r\n                            />\r\n\r\n                            <Column\r\n                                title=\"Name\"\r\n                                dataIndex=\"name\"\r\n                                key=\"id\"\r\n                                className='classnameofthecolumn'\r\n                                render={(text, record: any) => (\r\n                                    <>\r\n                                        <h4\r\n                                            onClick={() => {\r\n                                                history.push(`/admin/product/${record.id}`)\r\n                                            }}\r\n                                            style={{\r\n                                                fontWeight: 400,\r\n                                                color: '#555',\r\n                                                cursor: 'pointer'\r\n\r\n                                            }}>\r\n                                            {text}\r\n                                        </h4>\r\n\r\n\r\n                                    </>\r\n                                )}\r\n\r\n                            />\r\n\r\n                            <Column\r\n                                title=\"Offer Price\"\r\n                                dataIndex=\"offerPrice\"\r\n                                key=\"id\"\r\n                                className='classnameofthecolumn'\r\n\r\n                            />\r\n\r\n\r\n                            <Column\r\n                                title=\"Price\"\r\n                                dataIndex=\"price\"\r\n                                key=\"id\"\r\n                                className='classnameofthecolumn'\r\n\r\n                            />\r\n\r\n                        </Table>\r\n                    </>\r\n                )}\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NewBrandDetail\r\n","import React, { useState, useEffect } from 'react';\r\nimport { AutoComplete } from 'antd';\r\n\r\nimport InputSmall from '../../components/Field/InputSmall';\r\nimport { useFetch } from \"../../hooks\";\r\nimport {\r\n    DeleteOutlined\r\n} from '@ant-design/icons';\r\n\r\nconst Complete = ({ setAttributeList, attributeList, attribute }) => {\r\n\r\n    const [suggestedOptions, setsuggesteOptions] = useState([]);\r\n    const attributeLisState = useFetch([], [], 'attributeList', {});\r\n\r\n\r\n    const [attributeItem, setAttributeITem] = useState({\r\n        name: attribute.name,\r\n        value: attribute.value\r\n    })\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        const positionInAttribute = () => {\r\n            return attributeList.map(item => item.id).indexOf(attribute.id);\r\n        }\r\n\r\n        const index = positionInAttribute();\r\n\r\n        const updatedItem = Object.assign({}, attributeList[index], { ...attributeItem });\r\n        const updateAttributeList = [...attributeList.slice(0, index), updatedItem, ...attributeList.slice(index + 1)];\r\n        setAttributeList(updateAttributeList);\r\n\r\n    }, [attributeItem])\r\n\r\n\r\n    const handleAttributeDelete = () => {\r\n\r\n        const updateAttributeList = attributeList.filter(item => item.id !== attribute.id);\r\n        setAttributeList(updateAttributeList);\r\n    }\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        if (attributeLisState.data && Object.keys(attributeLisState.data).length > 0) {\r\n            const options = Object.keys(attributeLisState.data);\r\n            const manupulatedOptions = options.map(option => {\r\n                return {\r\n                    value: option\r\n                }\r\n            })\r\n            setsuggesteOptions(manupulatedOptions);\r\n        };\r\n    }, [attributeLisState.data]);\r\n\r\n\r\n\r\n\r\n\r\n\r\n    const handleAttributeSelect = (value) => {\r\n\r\n        if (attributeLisState && Object.keys(attributeLisState.data).length > 0) {\r\n            if (attributeLisState.data[value]) {\r\n                setAttributeITem({\r\n                    ...attribute,\r\n                    name: value,\r\n                    value: attributeLisState.data[value]\r\n                })\r\n            }\r\n\r\n        }\r\n\r\n        else {\r\n            setAttributeITem({\r\n                ...attribute,\r\n                name: value\r\n            })\r\n        }\r\n\r\n\r\n    }\r\n\r\n    const handleAttributeValueChange = (e) => {\r\n        setAttributeITem({\r\n            ...attribute,\r\n            value: e.target.value\r\n        });\r\n    }\r\n\r\n    return (\r\n        <>\r\n\r\n            <div\r\n                key={attribute.id}\r\n                className='addProductGridContainer__item-body-variationCard-item-attribute-item'>\r\n                <div\r\n                    onClick={handleAttributeDelete}\r\n                    className='addProductGridContainer__item-body-variationCard-item-attribute-item-delete'>\r\n                    <DeleteOutlined />\r\n                </div>\r\n\r\n                <h3 className='inputFieldLabel-small'>\r\n                    Name\r\n                </h3>\r\n                <AutoComplete\r\n                    value={attribute.name}\r\n                    style={{ width: '100%' }}\r\n                    options={suggestedOptions}\r\n                    placeholder=\"attribute\"\r\n                    onChange={handleAttributeSelect}\r\n                    filterOption={(inputValue, suggestedOption) =>\r\n                        suggestedOption.value.toUpperCase().indexOf(inputValue.toUpperCase()) !== -1\r\n                    }\r\n                />\r\n\r\n                {attribute.name && (\r\n                    <>\r\n                        <div style={{ marginTop: '10px' }}></div>\r\n                        <InputSmall\r\n                            label='Value'\r\n                            value={attribute.value}\r\n                            name='value'\r\n                            onChange={handleAttributeValueChange}\r\n                        />\r\n                    </>\r\n                )}\r\n\r\n\r\n            </div>\r\n\r\n\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Complete;\r\n","import React, { useState } from 'react';\r\nimport Attributes from \"./Attributes\";\r\nimport AddAttributeValues from \"../attribute/AddAttributeValues\";\r\nimport InputSmall from '../../components/Field/InputSmall';\r\nimport { Button } from 'antd';\r\nimport {\r\n\r\n\tPlusOutlined,\r\n\tCheckOutlined\r\n} from '@ant-design/icons';\r\n\r\ninterface Props {\r\n\thandleAddPricing: any;\r\n}\r\n\r\nconst Pricing = ({\r\n\thandleAddPricing\r\n}: Props) => {\r\n\r\n\tconst [price, setprice] = useState({\r\n\t\tregular: \"\",\r\n\t\toffer: \"\"\r\n\t});\r\n\tconst [stock, setStock] = useState({\r\n\t\tavailable: \"\",\r\n\t\tminimum: \"\"\r\n\t});\r\n\r\n\r\n\tconst [attributeList, setAttributeList] = useState([]);\r\n\r\n\tconst handlePriceChange = e => {\r\n\t\tconst name = e.target.name;\r\n\t\tconst value = e.target.value;\r\n\r\n\r\n\t\tsetprice({\r\n\t\t\t...price,\r\n\t\t\t[name]: value\r\n\t\t});\r\n\t};\r\n\r\n\tconst handleStockChange = e => {\r\n\t\tconst name = e.target.name;\r\n\t\tconst value = e.target.value;\r\n\r\n\t\tsetStock({\r\n\t\t\t...stock,\r\n\t\t\t[name]: value\r\n\t\t});\r\n\t};\r\n\r\n\r\n\tconst handleSavePricing = (e) => {\r\n\t\te.preventDefault();\r\n\r\n\t\tif (attributeList.length > 0) {\r\n\t\t\tconst attribute = {};\r\n\r\n\t\t\tfor (let item of attributeList) {\r\n\r\n\t\t\t\tconsole.log('itemofattribute', item);\r\n\t\t\t\tif (item['value'] && item['name']) {\r\n\t\t\t\t\tattribute[item['name']] = item['value']\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\r\n\t\t\tconst priceItem = {\r\n\t\t\t\tprice: price,\r\n\t\t\t\tstock: stock,\r\n\t\t\t\tattribute: attribute\r\n\t\t\t}\r\n\r\n\r\n\t\t\tsetprice({\r\n\t\t\t\tregular: \"\",\r\n\t\t\t\toffer: \"\"\r\n\t\t\t})\r\n\t\t\tsetStock({ available: \"\", minimum: \"\" })\r\n\t\t\thandleAddPricing(priceItem);\r\n\t\t\tsetAttributeList([]);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tconst priceItem = {\r\n\t\t\t\tprice: price,\r\n\t\t\t\tstock: stock,\r\n\t\t\t\tattribute: {}\r\n\t\t\t}\r\n\r\n\t\t\tsetprice({\r\n\t\t\t\tregular: \"\",\r\n\t\t\t\toffer: \"\"\r\n\t\t\t})\r\n\t\t\tsetStock({ available: \"\", minimum: \"\" })\r\n\t\t\tsetAttributeList([]);\r\n\t\t\thandleAddPricing(priceItem);\r\n\t\t}\r\n\r\n\t}\r\n\r\n\r\n\tconst handleAddAttribute = () => {\r\n\t\tsetAttributeList([...attributeList, {\r\n\t\t\tname: '',\r\n\t\t\tvalue: '',\r\n\t\t\tid: `${attributeList.length}`\r\n\t\t}])\r\n\t}\r\n\r\n\r\n\tconst getiCreatePricingIsDisabled = () => {\r\n\t\tif (!price.regular || !stock.available) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\telse return false;\r\n\t}\r\n\r\n\t// console.log('attributeList', attributeList);\r\n\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<div className='addProductGridContainer__item-body-variationCard'>\r\n\r\n\t\t\t\t<div className='addProductGridContainer__item-body-variationCard-left'>\r\n\r\n\t\t\t\t\t<div className='addProductGridContainer__item-body-variationCard-item'>\r\n\t\t\t\t\t\t<h4>\r\n\t\t\t\t\t\t\tPrice\r\n\t\t\t\t</h4>\r\n\t\t\t\t\t\t<div className='addProductGridContainer__item-body-variationCard-item-container'>\r\n\t\t\t\t\t\t\t<div className='addProductGridContainer__item-body-variationCard-item-container-left'>\r\n\t\t\t\t\t\t\t\t<InputSmall\r\n\t\t\t\t\t\t\t\t\tlabel='Regular  *'\r\n\t\t\t\t\t\t\t\t\tvalue={price.regular}\r\n\t\t\t\t\t\t\t\t\tname='regular'\r\n\t\t\t\t\t\t\t\t\tonChange={handlePriceChange}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className='addProductGridContainer__item-body-variationCard-item-container-right'>\r\n\t\t\t\t\t\t\t\t<InputSmall\r\n\t\t\t\t\t\t\t\t\tsize='small'\r\n\t\t\t\t\t\t\t\t\tlabel='Offer'\r\n\t\t\t\t\t\t\t\t\tvalue={price.offer}\r\n\t\t\t\t\t\t\t\t\tname='offer'\r\n\t\t\t\t\t\t\t\t\tonChange={handlePriceChange}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\t\t\t\t\t\t<div className='addProductGridContainer__item-body-variationCard-item'>\r\n\t\t\t\t\t\t\t<h4>\r\n\t\t\t\t\t\t\t\tStock\r\n\t\t\t\t</h4>\r\n\t\t\t\t\t\t\t<div className='addProductGridContainer__item-body-variationCard-item-container'>\r\n\t\t\t\t\t\t\t\t<div className='addProductGridContainer__item-body-variationCard-item-container-left'>\r\n\t\t\t\t\t\t\t\t\t<InputSmall\r\n\t\t\t\t\t\t\t\t\t\tlabel='Available  *'\r\n\t\t\t\t\t\t\t\t\t\tvalue={stock.available}\r\n\t\t\t\t\t\t\t\t\t\tname='available'\r\n\t\t\t\t\t\t\t\t\t\tonChange={handleStockChange}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\r\n\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className='addProductGridContainer__item-body-variationCard-item-container-right'>\r\n\r\n\t\t\t\t\t\t\t\t\t<InputSmall\r\n\t\t\t\t\t\t\t\t\t\tlabel='Minimum'\r\n\t\t\t\t\t\t\t\t\t\tvalue={stock.minimum}\r\n\t\t\t\t\t\t\t\t\t\tname='minimum'\r\n\t\t\t\t\t\t\t\t\t\tonChange={handleStockChange}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\t\t\t\t\t<div className='addProductGridContainer__item-body-variationCard-right'>\r\n\t\t\t\t\t\t<div className='addProductGridContainer__item-body-variationCard-item'>\r\n\t\t\t\t\t\t\t<h4>\r\n\t\t\t\t\t\t\t\tAttributes\r\n\t\t\t\t</h4>\r\n\t\t\t\t\t\t\t<div className='addProductGridContainer__item-body-variationCard-item-attribute'>\r\n\r\n\t\t\t\t\t\t\t\t{attributeList.map(attribute => {\r\n\t\t\t\t\t\t\t\t\treturn <Attributes\r\n\t\t\t\t\t\t\t\t\t\tattribute={attribute}\r\n\t\t\t\t\t\t\t\t\t\tattributeList={attributeList} setAttributeList={setAttributeList} />\r\n\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t<Button size='small'\r\n\t\t\t\t\t\t\t\t\tonClick={handleAddAttribute}\r\n\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\twidth: '180px',\r\n\t\t\t\t\t\t\t\t\t\tminHeight: '75px',\r\n\t\t\t\t\t\t\t\t\t\tmarginTop: '0px',\r\n\t\t\t\t\t\t\t\t\t\tborderRadius: \"8px\"\r\n\t\t\t\t\t\t\t\t\t}} type=\"dashed\" icon={<PlusOutlined />}>Add Attribute</Button>\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\r\n\r\n\t\t\t{/* <Button\r\n          // type=\"primary\"\r\n         \r\n          icon={<PlusOutlined />}\r\n          onClick={() => setAddNewCategoryVisible(true)}\r\n        >\r\n        Add New\r\n      </Button> */}\r\n\r\n\t\t\t<Button\r\n\r\n\t\t\t\tstyle={{\r\n\t\t\t\t\tmarginLeft: '10px'\r\n\t\t\t\t}}\r\n\t\t\t\tonClick={handleSavePricing}\r\n\t\t\t\tdisabled={getiCreatePricingIsDisabled()}\r\n\t\t\t\tclassName='btnAddToPrice'\r\n\t\t\t\ticon={<CheckOutlined />}\r\n\t\t\t>\r\n\t\t\t\tAdd To Pricing\r\n\t\t\t\t</Button>\r\n\r\n\r\n\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nexport default Pricing\r\n","import React, { useState, useEffect } from 'react';\r\n\r\n// import hooks \r\nimport { useHandleFetch } from '../../hooks';\r\n\r\n\r\n// import libraries \r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { message, Tooltip, Modal, Tabs, Empty, Badge } from 'antd';\r\nimport CKEditor from '@ckeditor/ckeditor5-react';\r\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\r\n\r\n\r\nimport {\r\n\tDeleteOutlined,\r\n\tFileAddOutlined,\r\n\tCheckCircleOutlined,\r\n\tFileImageFilled,\r\n\tFileImageOutlined,\r\n\tFileImageTwoTone,\r\n\tPlusOutlined,\r\n\tPlusCircleOutlined,\r\n\tCloseOutlined,\r\n\tCheckOutlined,\r\n\tInfoCircleOutlined\r\n} from '@ant-design/icons';\r\n\r\n// import ReactQuill from 'react-quill';\r\n// import 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport MediaLibrary from \"../../components/MediaLibrary\";\r\nimport DatePicker from \"../../components/Field/DatePicker\";\r\nimport { openSuccessNotification, openErrorNotification } from \"../../components/Notification\";\r\nimport Tags from \"./Tags\";\r\nimport Brands from \"./Brands\";\r\nimport Categories from \"./Categories\";\r\nimport Pricing from \"./Pricing\";\r\n\r\nconst { TabPane } = Tabs;\r\n\r\nconst validationSchema = Yup.object().shape({\r\n\tname: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\n\r\nconst initialValues = {\r\n\tname: '',\r\n\tdescription: '',\r\n\tmodel: '',\r\n\tunit: '',\r\n\tregular: '',\r\n\toffer: '',\r\n\tavailable: '',\r\n\tminimum: '',\r\n\timage: [],\r\n\turl: '',\r\n\tcover: '',\r\n\tpricing: [],\r\n\tvenue: '',\r\n\tdate: '',\r\n\ttime: '',\r\n\tpurchaseLimit: null\r\n}\r\n\r\n\r\ninterface Props {\r\n\taddNewCategoryVisible: any;\r\n\tsetAddNewCategoryVisible: any;\r\n\tproductList?: any;\r\n\tsetProductList?: any;\r\n}\r\n\r\nconst AddNewProduct = ({ addNewCategoryVisible, setAddNewCategoryVisible, productList, setProductList }: Props) => {\r\n\r\n\tconst [addProductState, handleAddProductFetch] = useHandleFetch({}, 'addProduct');\r\n\tconst [visible, setvisible] = useState(false);\r\n\tconst [myImages, setmyImages] = useState(false);\r\n\tconst [myThumbnailImage, setmyThumbnailImage] = useState(false);\r\n\tconst [isModalOpenForThumbnail, setisModalOpenForThumbnail] = useState(false);\r\n\tconst [isModalOpenForImages, setisModalOpenForImages] = useState(false);\r\n\tconst [categoryids, setcategoryIds] = useState([]);\r\n\tconst [tagIds, setTagIds] = useState([]);\r\n\tconst [brandId, setBrandId] = useState('');\r\n\tconst [pricing, setPricing] = useState([]);\r\n\tconst [coverImageId, setCoverImageId] = useState('');\r\n\tconst [categoryOptions, setCategoryOptions] = useState([]);\r\n\tconst [selectedTags, setSelectedTags] = useState([]);\r\n\tconst [date, setDateFeild] = useState('');\r\n\tconst [time, setTimeFeild] = useState('');\r\n\tconst [description, setDescription] = useState('');\r\n\r\n\r\n\tconst makeEmptyCategoryOptions = (setEmpty) => {\r\n\t\tsetEmpty([]);\r\n\t}\r\n\r\n\tconst handleSubmit = async (values: any, actions: any) => {\r\n\t\t// @ts-ignore\r\n\t\tconst imagesIds = myImages ? myImages.map(image => {\r\n\t\t\treturn image.id;\r\n\t\t}) : [];\r\n\r\n\t\tconst addProductRes = await handleAddProductFetch({\r\n\r\n\t\t\tbody: {\r\n\t\t\t\tname: values.name.trim(),\r\n\t\t\t\tdescription: description,\r\n\t\t\t\tmodel: values.model,\r\n\t\t\t\tunit: values.unit,\r\n\t\t\t\tcategory: categoryids,\r\n\t\t\t\ttags: tagIds,\r\n\t\t\t\tbrand: brandId,\r\n\t\t\t\timage: imagesIds,\r\n\t\t\t\tcover: coverImageId || imagesIds[0] ? imagesIds[0] : '',\r\n\t\t\t\tpricing: pricing,\r\n\t\t\t\t// date: date,\r\n\t\t\t\t// time: time,\r\n\t\t\t\t// venue: values.venue,\r\n\t\t\t\t// purchaseLimit: values.purchaseLimit\r\n\t\t\t},\r\n\t\t});\r\n\r\n\r\n\t\t// @ts-ignore\r\n\t\tif (addProductRes && addProductRes.status === 'ok') {\r\n\t\t\topenSuccessNotification('Product Created');\r\n\r\n\t\t\tsetProductList([...productList, {\r\n\t\t\t\tid: addProductRes['id'] || '',\r\n\t\t\t\tkey: addProductRes['id'] || '',\r\n\t\t\t\tname: addProductRes['name'] || '',\r\n\t\t\t\tdescription: addProductRes['description'] || '',\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\t...addProductRes\r\n\t\t\t}])\r\n\t\t\tsetAddNewCategoryVisible(false)\r\n\t\t\t// @ts-ignore\r\n\t\t\tsetmyImages([]);\r\n\t\t\tsetCoverImageId('');\r\n\t\t\tsetPricing([]);\r\n\t\t\tsetTagIds([]);\r\n\t\t\tsetSelectedTags([]);\r\n\t\t\tsetBrandId(\"\");\r\n\t\t\tsetcategoryIds([]);\r\n\t\t\tsetCategoryOptions([]);\r\n\t\t\tactions.resetForm();\r\n\t\t}\r\n\t\telse {\r\n\t\t\t// openErrorNotification();\r\n\t\t}\r\n\r\n\t\tactions.setSubmitting(false);\r\n\r\n\r\n\t};\r\n\r\n\r\n\r\n\tuseEffect(() => {\r\n\t\tif (!addProductState['isLoading']) {\r\n\t\t\tconst error = addProductState['error'];\r\n\t\t\tif (error['isError'] && Object.keys(error['error']).length > 0) {\r\n\r\n\r\n\t\t\t\tconst errors =\r\n\t\t\t\t\tObject.values(error['error']).length > 0\r\n\t\t\t\t\t\t? Object.values(error['error'])\r\n\t\t\t\t\t\t: [];\r\n\t\t\t\terrors.forEach((err, i) => {\r\n\t\t\t\t\tif (typeof err === 'string') {\r\n\t\t\t\t\t\topenErrorNotification(err)\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if (typeof err === 'object') {\r\n\t\t\t\t\t\tif (err && Object.keys(err).length > 0) {\r\n\t\t\t\t\t\t\tconst errs = Object.values(err);\r\n\t\t\t\t\t\t\terrs.forEach(err => {\r\n\t\t\t\t\t\t\t\topenErrorNotification(err)\r\n\t\t\t\t\t\t\t})\r\n\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t}, [addProductState])\r\n\r\n\r\n\tconst handleCancel = (e: any) => {\r\n\t\tsetAddNewCategoryVisible(false);\r\n\t};\r\n\r\n\r\n\tconst getisSubmitButtonDisabled = (values, isValid) => {\r\n\t\tif (!values.name || !(pricing.length > 0) || !isValid) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\r\n\tconst handleImagesDelete = (id) => {\r\n\t\t// @ts-ignore\r\n\t\tconst newImages = myImages && myImages.filter(image => {\r\n\t\t\treturn image.id !== id;\r\n\t\t})\r\n\r\n\t\tsetmyImages(newImages);\r\n\t}\r\n\r\n\tconst handleDeleteFromSelectedImage = () => {\r\n\r\n\t};\r\n\r\n\tconst handleThumbnailImageDelete = (id) => {\r\n\t\t// @ts-ignore\r\n\t\tconst newImages = myThumbnailImage && myThumbnailImage.filter(image => {\r\n\t\t\treturn image.id !== id;\r\n\t\t})\r\n\r\n\t\tif (newImages.length > 0) {\r\n\t\t\tsetmyThumbnailImage(newImages);\r\n\r\n\t\t}\r\n\t\telse setmyThumbnailImage(false);\r\n\t}\r\n\r\n\r\n\r\n\r\n\r\n\tconst handleAddPricing = (priceItem) => {\r\n\r\n\t\tsetPricing([{\r\n\t\t\t...priceItem,\r\n\t\t\tid: pricing.length\r\n\t\t}, ...pricing])\r\n\t\tmessage.info('Product Pricing Added');\r\n\t}\r\n\r\n\r\n\tconst handleDeletePricing = (id) => {\r\n\t\tconst newPricing = pricing.filter(item => item.id !== id);\r\n\t\tsetPricing(newPricing);\r\n\t\tmessage.info('Product Pricing Deleted');\r\n\t}\r\n\r\n\r\n\r\n\tconst isCategoryInValid = () => {\r\n\t\tif (addProductState.error['error']['category'] && !categoryids && categoryids.length) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\telse if (categoryids && categoryids.length > 0) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\r\n\tconst handleDateChange = (date, dateString) => {\r\n\t\tsetDateFeild(dateString);\r\n\t\t// console.log('date', date, dateString);\r\n\t}\r\n\r\n\tconst handleTimeChange = (date, dateString) => {\r\n\t\tsetTimeFeild(dateString);\r\n\t\t// console.log('date', date, dateString);\r\n\t}\r\n\r\n\r\n\r\n\treturn (\r\n\t\t<Formik\r\n\t\t\tonSubmit={(values, actions) => handleSubmit(values, actions)}\r\n\t\t\tvalidationSchema={validationSchema}\r\n\t\t\tvalidateOnBlur={false}\r\n\t\t\tenableReinitialize={true}\r\n\t\t\tinitialValues={\r\n\t\t\t\t{ ...initialValues }\r\n\t\t\t}\r\n\t\t>\r\n\t\t\t{({\r\n\t\t\t\thandleChange,\r\n\t\t\t\tvalues,\r\n\t\t\t\thandleSubmit,\r\n\t\t\t\terrors,\r\n\t\t\t\tisValid,\r\n\t\t\t\tisSubmitting,\r\n\t\t\t\ttouched,\r\n\t\t\t\thandleBlur,\r\n\t\t\t\tsetFieldTouched,\r\n\t\t\t\thandleReset,\r\n\t\t\t}) => (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<Modal\r\n\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\ttop: '40px',\r\n\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\tbodyStyle={{\r\n\t\t\t\t\t\t\t\tmargin: 0,\r\n\t\t\t\t\t\t\t\tpadding: 0,\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\twidth={'70vw'}\r\n\t\t\t\t\t\t\ttitle=\"Add New Product\"\r\n\t\t\t\t\t\t\tvisible={addNewCategoryVisible}\r\n\t\t\t\t\t\t\tonOk={(e: any) => handleSubmit(e)}\r\n\t\t\t\t\t\t\tonCancel={handleCancel}\r\n\t\t\t\t\t\t\tokText='Create'\r\n\t\t\t\t\t\t\tokButtonProps={{\r\n\t\t\t\t\t\t\t\tloading: isSubmitting,\r\n\t\t\t\t\t\t\t\thtmlType: \"submit\",\r\n\t\t\t\t\t\t\t\tdisabled: getisSubmitButtonDisabled(values, isValid)\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\r\n\r\n\t\t\t\t\t\t\t<section className='addProductGridContainer'>\r\n\t\t\t\t\t\t\t\t<div className='addProductGridContainer__left'>\r\n\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__name'>\r\n\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__item-header'>\r\n\t\t\t\t\t\t\t\t\t\t\t<h3>\r\n\t\t\t\t\t\t\t\t\t\t\t\tProduct Information\r\n\t\t\t</h3>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<div className={values.name && values.name.length > 2 ? 'checkicon-active' : 'checkicon'}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<CheckCircleOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__item-body'>\r\n\t\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\t\tlabel='Title'\r\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.name}\r\n\t\t\t\t\t\t\t\t\t\t\t\tname='name'\r\n\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['name'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['name'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('name');\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t{/* <div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\tdisplay: 'flex',\r\n\t\t\t\t\t\t\t\t\t\t\t\tjustifyContent: 'space-between'\r\n\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\twidth: '48%',\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<DatePicker\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabel='Date'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={handleDateChange} />\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\twidth: '48%'\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<DatePicker\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tdate={date}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\twithTime={true}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder='Select time'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabel='Time'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={handleTimeChange} />\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t</div> */}\r\n\t\t\t\t\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\tmarginBottom: '15px'\r\n\t\t\t\t\t\t\t\t\t\t\t}}></div>\r\n\t\t\t\t\t\t\t\t\t\t\t{/* \r\n\t\t\t\t\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\t\t\t\t\trows={1}\r\n\t\t\t\t\t\t\t\t\t\t\t\tlabel='Venue'\r\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.venue}\r\n\t\t\t\t\t\t\t\t\t\t\t\tname='venue'\r\n\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.venue && errors.venue) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['venue'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.venue && errors.venue) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['venue'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('venue');\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\t\tlabel='Purchase Limit'\r\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.purchaseLimit}\r\n\t\t\t\t\t\t\t\t\t\t\t\ttype='number'\r\n\t\t\t\t\t\t\t\t\t\t\t\tname='purchaseLimit'\r\n\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.purchaseLimit && errors.purchaseLimit) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['purchaseLimit'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.purchaseLimit && errors.purchaseLimit) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['purchaseLimit'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('purchaseLimit');\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t/> */}\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\t\t\t\t\t\tDescription\r\n                               </h3>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\twidth: '100%',\r\n\t\t\t\t\t\t\t\t\t\t\t\tmaxWidth: '100%'\r\n\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<CKEditor\r\n\t\t\t\t\t\t\t\t\t\t\t\t\teditor={ClassicEditor}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tdata={description}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonInit={editor => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t// You can store the \"editor\" and use when it is needed.\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tconsole.log('Editor is ready to use!', editor);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(event, editor) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tconst data = editor.getData();\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetDescription(data);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonBlur={(event, editor) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tconsole.log('Blur.', editor);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonFocus={(event, editor) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tconsole.log('Focus.', editor);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\t\tlabel='Model Number'\r\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.model}\r\n\t\t\t\t\t\t\t\t\t\t\t\tname='model'\r\n\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.model && errors.model) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['model'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.model && errors.model) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['model'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('model');\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\t\tlabel='Unit'\r\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.unit}\r\n\t\t\t\t\t\t\t\t\t\t\t\tname='unit'\r\n\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.unit && errors.unit) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['unit'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.unit && errors.unit) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['unit'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('unit');\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__price'>\r\n\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__item-header'>\r\n\t\t\t\t\t\t\t\t\t\t\t<h3>\r\n\t\t\t\t\t\t\t\t\t\t\t\tProduct Pricing\r\n\t\t\t</h3>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<div className={pricing && pricing.length > 0 ? 'checkicon-active' : 'checkicon'}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<CheckCircleOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__item-body'>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<Tabs\r\n\t\t\t\t\t\t\t\t\t\t\t\tanimated={true}\r\n\t\t\t\t\t\t\t\t\t\t\t\ttabPosition=\"top\"\r\n\t\t\t\t\t\t\t\t\t\t\t\ttype='card'\r\n\t\t\t\t\t\t\t\t\t\t\t>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t<TabPane tab=\"Add Variation\" key=\"1\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Pricing handleAddPricing={handleAddPricing} />\r\n\t\t\t\t\t\t\t\t\t\t\t\t</TabPane>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<TabPane tab=\"Pricing List\" key=\"2\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__item-body-pricingContainer'>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{pricing.length > 0 && pricing.map(item => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__item-body-pricingContainer-item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__item-body-pricingContainer-item-edit'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* <span>\r\n\t\t\t\t\t\t\t<EditOutlined />\r\n\t\t\t\t\t\t\t</span> */}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className='d' onClick={() => handleDeletePricing(item.id)}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<DeleteOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__item-body-pricingContainer-item-two'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<h3>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tPrice\r\n\t\t\t\t\t\t</h3>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__item-body-pricingContainer-item-body'>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{item.price.offer ? (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<h4 >\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{item.price.offer}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</h4>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<h5 style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttextDecoration: \"line-through\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{item.price.regular}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</h5>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<h4>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{item.price.regular}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</h4>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{item.stock && (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Badge\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\toverflowCount={999}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcount={item.stock.available}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<h3>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tStock\r\n\t\t\t\t\t\t\t\t\t</h3>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Badge>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__item-body-pricingContainer-item-body'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<h6>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmin\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Badge\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"site-badge-count-4\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\toverflowCount={999}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcount={item.stock.minimum} />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</h6>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{item.attribute\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&& Object.values(item.attribute).length > 0 && (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<h3>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tAttributes\r\n\t\t\t\t\t\t</h3>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__item-body-pricingContainer-item-body'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{item.attribute\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&& Object.keys(item.attribute).length > 0\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&& Object.keys(item.attribute).map(attributeItem => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<h6>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{attributeItem}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</h6>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<h4>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{item.attribute[attributeItem]}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</h4>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t})}\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{!(pricing.length > 0) && <div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\twidth: '100%',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdisplay: 'flex',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tjustifyContent: 'center'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Empty description='No Pricing added' image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</TabPane>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t</Tabs>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__item-body-container'>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__image'>\r\n\r\n\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__item-header'>\r\n\t\t\t\t\t\t\t\t\t\t\t<h3>\r\n\t\t\t\t\t\t\t\t\t\t\t\tImage\r\n\t\t\t</h3>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<Tooltip\r\n\t\t\t\t\t\t\t\t\t\t\t\tplacement=\"left\" title={'Click on the image to select cover image, By default 1st image is selected as cover'}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<a href='###'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<InfoCircleOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__item-body'>\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='aboutToUploadImagesContainer'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t{myImages &&\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tmyImages.length > 0 && myImages.map((image, index) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className='aboutToUploadImagesContainer__item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='aboutToUploadImagesContainer__item-imgContainer'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => setCoverImageId(image.id)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<img src={image.cover} alt={image.alt} />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => handleImagesDelete(image.id)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='aboutToUploadImagesContainer__item-remove'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<CloseOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{coverImageId === image.id ? (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className='aboutToUploadImagesContainer__item-cover'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<CheckOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t) : !coverImageId && index === 0 && (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className='aboutToUploadImagesContainer__item-cover'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<CheckOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t})}\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Tooltip\r\n\t\t\t\t\t\t\t\t\t\t\t\t\ttitle={'Attach images'}>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetvisible(true);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetisModalOpenForImages(true);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetisModalOpenForThumbnail(false);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='aboutToUploadImagesContainer__uploadItem'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* <FileAddOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FileImageTwoTone />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FileImageOutlined /> */}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<FileImageFilled />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* <h5>\r\n\t\t\t\t\t\t\t\t\t\t\t\t     Select From Library\r\n\t\t\t\t\t\t\t\t\t\t\t<     /h5> */}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className='aboutToUploadImagesContainer__uploadItem-plus'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<PlusOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Tooltip>\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className='addProductGridContainer__right'>\r\n\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__category'>\r\n\r\n\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer-rightItemContainer'>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer-rightItemContainer-header'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<h3>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tCategories\r\n\t\t\t\t</h3>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Tooltip\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tcolor='red'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvisible={addProductState.error['error']['category'] && !(categoryids.length > 0)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tplacement=\"left\" title={'Select at least one category'}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div className={!(categoryids.length > 0)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t&& !addProductState.error['error']['category'] ? 'checkicon' : addProductState.error['error']['category'] ? 'checkicon-error' : 'checkicon-active'}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<CheckCircleOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Tooltip>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer-rightItemContainer-body'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Categories\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetCategoryOptions={setCategoryOptions}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tcategoryOptions={categoryOptions}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetcategoryIds={setcategoryIds} />\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__tag'>\r\n\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer-rightItemContainer'>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer-rightItemContainer-header'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<h3>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tTags\r\n\t\t\t\t</h3>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer-rightItemContainer-body'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Tags\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetSelectedTags={setSelectedTags}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tselectedTags={selectedTags}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetTagIds={setTagIds} />\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__brand'>\r\n\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer-rightItemContainer'>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer-rightItemContainer-header'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<h3>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tBrand\r\n\t\t\t\t</h3>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer-rightItemContainer-body'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Brands setBrandId={setBrandId} />\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</section>\r\n\r\n\r\n\t\t\t\t\t\t</Modal>\r\n\r\n\t\t\t\t\t\t<MediaLibrary\r\n\t\t\t\t\t\t\tsetvisible={setvisible}\r\n\t\t\t\t\t\t\tvisible={visible}\r\n\t\t\t\t\t\t\tsetmyImages={setmyImages}\r\n\t\t\t\t\t\t\tmyImages={myImages}\r\n\t\t\t\t\t\t\tsetmyThumbnailImage={setmyThumbnailImage}\r\n\t\t\t\t\t\t\tisModalOpenForThumbnail={isModalOpenForThumbnail}\r\n\t\t\t\t\t\t\tisModalOpenForImages={isModalOpenForImages}\r\n\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</>\r\n\t\t\t\t)}\r\n\t\t</Formik>\r\n\r\n\r\n\r\n\r\n\t);\r\n};\r\n\r\nexport default AddNewProduct;\r\n\r\n\r\n\r\n\r\n/*\r\n\r\n\r\nProduct variation ---->\r\n\r\nPrice [title]\r\n\t[regular input field] [offer inputfield]\r\n\r\nStock [title]\r\n\t[available input field] [minimum inputfield]\r\n\r\ndefault [default can be set to true]\r\n\r\nattributes [title]\r\n\t[add attributes name]\r\n\t\t[add attrubutes value]\r\n\r\n\t[add attributes name]\r\n\t\t[add attrubutes value\r\n\r\n*///","import React, { useState } from 'react';\r\nimport { Modal, notification } from 'antd';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport { useHandleFetch } from '../../hooks';\r\nimport { CheckCircleOutlined } from '@ant-design/icons';\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n\tname: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\n\r\nconst openSuccessNotification = () => {\r\n\tnotification.success({\r\n\t\tmessage: 'Product Updated',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t\tmessage: message || 'Something Went Wrong',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n};\r\n\r\n\r\n\r\ninterface Props {\r\n\tcategory: any;\r\n\tsetvisible: any;\r\n\tvisible: any;\r\n\tsetProductList?: any;\r\n\tproductList?: any;\r\n}\r\n\r\nconst QuickEdit = ({ category, setvisible, visible, setProductList, productList }: Props) => {\r\n\tconst [updateProductState, handleUpdateProductFetch] = useHandleFetch({}, 'updateProduct');\r\n\r\n\tconst handleSubmit = async (values: any, actions: any) => {\r\n\t\tconst updateProductRes = await handleUpdateProductFetch({\r\n\t\t\turlOptions: {\r\n\t\t\t\tplaceHolders: {\r\n\t\t\t\t\tid: values.id,\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tbody: {\r\n\t\t\t\tname: values.name,\r\n\t\t\t\tdescription: values.description,\r\n\t\t\t\tcategory: category.category,\r\n\t\t\t\tpricing: category.pricing\r\n\t\t\t},\r\n\t\t});\r\n\r\n\t\t// @ts-ignore\r\n\t\tif (updateProductRes && updateProductRes.status === 'ok') {\r\n\t\t\topenSuccessNotification();\r\n\r\n\t\t\tconst positionInAttribute = () => {\r\n\t\t\t\treturn productList.map(item => item.id).indexOf(category.id);\r\n\t\t\t}\r\n\r\n\t\t\tconst index = positionInAttribute();\r\n\r\n\t\t\t// @ts-ignore\r\n\t\t\tconst updatedItem = Object.assign({}, productList[index], { ...updateProductRes });\r\n\t\t\tconst updateProductList = [...productList.slice(0, index), updatedItem, ...productList.slice(index + 1)];\r\n\t\t\tsetProductList(updateProductList);\r\n\r\n\t\t}\r\n\t\telse {\r\n\t\t\topenErrorNotification();\r\n\t\t}\r\n\r\n\t\tactions.setSubmitting(false);\r\n\t\tsetvisible(false)\r\n\t};\r\n\r\n\r\n\tconst handleCancel = (e: any) => {\r\n\t\tsetvisible(false);\r\n\t};\r\n\r\n\r\n\tconst getisSubmitButtonDisabled = (values, isValid) => {\r\n\t\tif (!values.name || !isValid) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\treturn (\r\n\t\t<Formik\r\n\t\t\tonSubmit={(values, actions) => handleSubmit(values, actions)}\r\n\t\t\tvalidationSchema={validationSchema}\r\n\t\t\tvalidateOnBlur={false}\r\n\t\t\tenableReinitialize={true}\r\n\t\t\tinitialValues={\r\n\t\t\t\t{ ...category }\r\n\t\t\t}\r\n\t\t>\r\n\t\t\t{({\r\n\t\t\t\thandleChange,\r\n\t\t\t\tvalues,\r\n\t\t\t\thandleSubmit,\r\n\t\t\t\terrors,\r\n\t\t\t\tisValid,\r\n\t\t\t\tisSubmitting,\r\n\t\t\t\ttouched,\r\n\t\t\t\thandleBlur,\r\n\t\t\t\tsetFieldTouched,\r\n\t\t\t\thandleReset,\r\n\t\t\t}) => (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<Modal\r\n\t\t\t\t\t\t\ttitle=\"Quick Edit\"\r\n\t\t\t\t\t\t\tvisible={visible}\r\n\t\t\t\t\t\t\tonOk={(e: any) => handleSubmit(e)}\r\n\t\t\t\t\t\t\tonCancel={handleCancel}\r\n\t\t\t\t\t\t\tokText='Update'\r\n\t\t\t\t\t\t\tokButtonProps={{\r\n\t\t\t\t\t\t\t\tloading: isSubmitting,\r\n\t\t\t\t\t\t\t\thtmlType: \"submit\",\r\n\t\t\t\t\t\t\t\tdisabled: getisSubmitButtonDisabled(values, isValid)\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\tlabel='Title'\r\n\t\t\t\t\t\t\t\tvalue={values.name}\r\n\t\t\t\t\t\t\t\tname='name'\r\n\t\t\t\t\t\t\t\tisError={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateProductState.error['error']['name'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateProductState.error['error']['name'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('name');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\r\n\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\tlabel='Description'\r\n\t\t\t\t\t\t\t\tvalue={values.description}\r\n\t\t\t\t\t\t\t\tname='description'\r\n\t\t\t\t\t\t\t\tisError={(touched.description && errors.description) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateProductState.error['error']['description'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.description && errors.description) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateProductState.error['error']['description'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('description');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</Modal>\r\n\t\t\t\t\t</>\r\n\t\t\t\t)}\r\n\t\t</Formik>\r\n\t);\r\n};\r\n\r\n\r\nexport default QuickEdit;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { withRouter, useHistory } from 'react-router-dom';\r\nimport { notification, Empty, Table, Badge, Menu, Dropdown, Space, Tag, Button, Input, Tooltip, Popconfirm } from 'antd';\r\nimport { CheckCircleOutlined, PlusOutlined, EditOutlined, DeleteOutlined, EditFilled } from '@ant-design/icons';\r\n\r\n\r\n/// import hooks\r\nimport { useHandleFetch } from \"../../hooks\";\r\n\r\n// import components\r\nimport { DataTableSkeleton } from \"../../components/Placeholders\";\r\nimport AddNewProduct from \"./AddNewProduct\";\r\nimport ProductDetail from \"./ProductEdit\";\r\nimport QuickEdit from \"./QuickEdit\";\r\n\r\nconst { Column, ColumnGroup } = Table;\r\nconst { Search } = Input;\r\n\r\n\r\n\r\nconst openSuccessNotification = () => {\r\n  notification.success({\r\n    message: 'Product Deleted',\r\n    description: '',\r\n    icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n  });\r\n};\r\n\r\n\r\n\r\ninterface myTableProps {\r\n  data: any;\r\n  setProductList: any;\r\n}\r\n\r\n\r\nconst MyTable = ({ data, setProductList }: myTableProps) => {\r\n  const [visible, setvisible] = useState(false);\r\n  const [activeCategoryForEdit, setactiveCategoryForEdit] = useState(false);\r\n  const [deleteProductState, handleDeleteProductFetch] = useHandleFetch({}, 'deleteProduct');\r\n  const [productDetailVisible, setproductDetailVisible] = useState(false);\r\n\r\n  const history = useHistory();\r\n\r\n  const handleDeleteProduct = async (id) => {\r\n    const deleteProductRes = await handleDeleteProductFetch({\r\n      urlOptions: {\r\n        placeHolders: {\r\n          id,\r\n        }\r\n      }\r\n    });\r\n\r\n    // @ts-ignore\r\n    if (deleteProductRes && deleteProductRes.status === 'ok') {\r\n      openSuccessNotification();\r\n      const newProductList = data.filter(item => item.id !== id);\r\n      setProductList(newProductList);\r\n    }\r\n\r\n    // console.log('deleteProductRes', deleteProductRes)\r\n  }\r\n\r\n\r\n  return (\r\n    <>\r\n      <Table\r\n        style={{\r\n          paddingTop: '10px',\r\n          borderRadius: '5px !important',\r\n          overflow: 'hidden',\r\n          boxShadow: '0 0.125rem 0.625rem rgba(227, 231, 250, 0.3), 0 0.0625rem 0.125rem rgba(206, 220, 233, 0.4)'\r\n        }}\r\n        // expandable={{\r\n        //     expandedRowRender: record => <p style={{ margin: 0 }}>{record.name}</p>,\r\n        //     rowExpandable: record => record.name !== 'Not Expandable',\r\n        //   }}\r\n        // bordered={true}\r\n        size='small'\r\n        // pagination={false}\r\n        dataSource={data}\r\n        tableLayout={'auto'}\r\n        onHeaderRow={column => {\r\n          return {\r\n            style: {\r\n              color: 'red !important'\r\n            }\r\n\r\n          };\r\n        }}\r\n      >\r\n        <Column\r\n          title=\"\"\r\n          dataIndex=\"cover\"\r\n          key=\"id\"\r\n          width={'80px'}\r\n\r\n          className='classnameofthecolumn'\r\n\r\n          render={(cover, record: any) => (\r\n            <>\r\n              <img\r\n                onClick={() => {\r\n                  history.push(`/admin/product/${record.id}`)\r\n                  setactiveCategoryForEdit(record)\r\n                }}\r\n                src={cover} alt='cover img' style={{\r\n                  height: '40px',\r\n                  width: '40px',\r\n                  objectFit: \"contain\",\r\n                  borderRadius: '3px',\r\n                  cursor: 'pointer'\r\n                }} />\r\n\r\n\r\n\r\n\r\n            </>\r\n          )}\r\n        />\r\n\r\n        <Column\r\n          title=\"Name\"\r\n          dataIndex=\"name\"\r\n          key=\"id\"\r\n          className='classnameofthecolumn'\r\n          render={(text, record: any) => (\r\n            <>\r\n\r\n              <h4\r\n                onClick={() => {\r\n                  history.push(`/admin/product/${record.id}`)\r\n                  setactiveCategoryForEdit(record)\r\n                }}\r\n                style={{\r\n                  fontWeight: 400,\r\n                  color: '#555',\r\n                  cursor: 'pointer'\r\n\r\n                }}>\r\n                {text}\r\n              </h4>\r\n\r\n\r\n            </>\r\n          )}\r\n\r\n        />\r\n\r\n        <Column\r\n          title=\"Offer Price\"\r\n          dataIndex=\"offerPrice\"\r\n          key=\"id\"\r\n          className='classnameofthecolumn'\r\n\r\n        />\r\n\r\n\r\n        <Column\r\n          title=\"Price\"\r\n          dataIndex=\"price\"\r\n          key=\"id\"\r\n          className='classnameofthecolumn'\r\n\r\n        />\r\n\r\n        {/* <Column\r\n          title=\"Unit\"\r\n          dataIndex=\"unit\"\r\n          key=\"id\"\r\n          className='classnameofthecolumn'\r\n\r\n        /> */}\r\n        {/* <Column \r\n          \r\n          className='classnameofthecolumn'\r\n\r\n          title=\"Product\" dataIndex=\"product\" key=\"product\" /> */}\r\n\r\n        {/* <Column \r\n          \r\n          className='classnameofthecolumn'\r\n\r\n          title=\"Sub Category\" dataIndex=\"subCategory\" key=\"subCategory\" /> */}\r\n\r\n        {/* <Column\r\n          title=\"Tags\"\r\n          dataIndex=\"tags\"\r\n          key=\"tags\"\r\n          render={tags => (\r\n            <>\r\n              {tags.map((tag : any) => (\r\n                <Tag color=\"blue\" key={tag}>\r\n                  {tag}\r\n                </Tag>\r\n              ))}\r\n            </>\r\n          )}\r\n        /> */}\r\n        <Column\r\n\r\n          className='classnameofthecolumn'\r\n          title=\"\"\r\n          key=\"action\"\r\n          align='right'\r\n          render={(text, record: any) => (\r\n            <Space size=\"middle\">\r\n              <a href='##'>\r\n                <Tooltip\r\n\r\n                  placement=\"top\" title='Quick Edit Product'>\r\n                  <span className='iconSize' onClick={() => {\r\n                    setvisible(true)\r\n                    setactiveCategoryForEdit(record);\r\n                  }}>\r\n                    <EditOutlined />\r\n\r\n                  </span>\r\n                </Tooltip>\r\n              </a>\r\n\r\n              <Popconfirm\r\n\r\n                onConfirm={() => handleDeleteProduct(record.id)}\r\n                title=\"Are you sure？\" okText=\"Yes\" cancelText=\"No\">\r\n                <span\r\n                  className='iconSize iconSize-danger'\r\n                >\r\n                  <DeleteOutlined />\r\n                </span>\r\n\r\n              </Popconfirm>\r\n\r\n\r\n\r\n\r\n            </Space>\r\n          )}\r\n        />\r\n      </Table>\r\n\r\n\r\n\r\n      {activeCategoryForEdit && <QuickEdit\r\n        productList={data}\r\n        setProductList={setProductList}\r\n        setvisible={setvisible}\r\n        visible={visible}\r\n        category={activeCategoryForEdit} />}\r\n\r\n\r\n\r\n\r\n    </>\r\n  )\r\n}\r\n\r\n\r\ninterface Props {\r\n  history: any;\r\n}\r\n\r\nconst ProductList = ({ history }: Props) => {\r\n\r\n\r\n\r\n  const [productList, setProductList] = useState([]);\r\n\r\n  const [productState, handleProductListFetch] = useHandleFetch({}, 'productList');\r\n\r\n\r\n  useEffect(() => {\r\n    const setProducts = async () => {\r\n      const products = await handleProductListFetch({});\r\n      // @ts-ignore\r\n      setProductList(products);\r\n    }\r\n    setProducts();\r\n  }, [])\r\n\r\n\r\n  const [addNewCategoryVisible, setAddNewCategoryVisible] = useState(false);\r\n\r\n\r\n  // console.log('productState', productState)\r\n\r\n\r\n  const handleSearch = (value) => {\r\n    if (productState.data.length > 0) {\r\n      const newProductList = productState.data.filter(item => item.name.toLowerCase().includes(value.toLowerCase()));\r\n      setProductList(newProductList);\r\n    }\r\n\r\n  }\r\n\r\n\r\n  return (\r\n    <>\r\n      {/* <h2 className='containerPageTitle'>\r\n      Categories\r\n    </h2> */}\r\n      <div className='categoryListContainer'>\r\n        <div className='categoryListContainer__header'>\r\n\r\n\r\n          <div className='categoryListContainer__header-searchBar'>\r\n            <h2 className='categoryListContainer__header-title'>\r\n              Products\r\n            </h2>\r\n\r\n\r\n            <Search\r\n              enterButton={false}\r\n              className='searchbarClassName'\r\n              placeholder=\"search products..\"\r\n              onSearch={value => handleSearch(value)}\r\n            // style={{ width: 300 }}\r\n            />\r\n          </div>\r\n\r\n          <Button\r\n            // type=\"primary\"\r\n            className='btnPrimaryClassNameoutline'\r\n            icon={<PlusOutlined />}\r\n            onClick={() => setAddNewCategoryVisible(true)}\r\n          >\r\n            Add New\r\n      </Button>\r\n\r\n\r\n        </div>\r\n\r\n        <div className='categoryListContainer__afterHeader'>\r\n          {/* <Search\r\n      placeholder=\"search categories..\"\r\n      size=\"large\"\r\n      onSearch={value => console.log(value)}\r\n      style={{ width: 300 }}\r\n    /> */}\r\n        </div>\r\n\r\n\r\n        <div className='categoryListContainer__categoryList'>\r\n          {productState.done && productList.length > 0 && <MyTable\r\n            setProductList={setProductList}\r\n            data={productList} />}\r\n          {productState.isLoading && <DataTableSkeleton />}\r\n          {productState.done && !(productList.length > 0) && (\r\n            <div style={{\r\n              marginTop: '200px'\r\n            }}>\r\n              <Empty description='No Products found' image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n\r\n      {productState.done &&\r\n        <AddNewProduct\r\n          addNewCategoryVisible={addNewCategoryVisible}\r\n          setAddNewCategoryVisible={setAddNewCategoryVisible}\r\n          productList={productState.data}\r\n          setProductList={setProductList}\r\n\r\n\r\n        />}\r\n\r\n\r\n\r\n\r\n    </>\r\n  );\r\n};\r\n\r\nexport default withRouter(ProductList);\r\n","import React, { useState, useEffect } from 'react';\r\n\r\n// import hooks \r\nimport { useHandleFetch } from '../../hooks';\r\n\r\n\r\n// import libraries \r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { message, Tooltip, Modal, Tabs, Empty, Badge, Spin } from 'antd';\r\n\r\nimport {\r\n    DeleteOutlined,\r\n    FileAddOutlined,\r\n    CheckCircleOutlined,\r\n    FileImageFilled,\r\n    FileImageOutlined,\r\n    FileImageTwoTone,\r\n    PlusOutlined,\r\n    PlusCircleOutlined,\r\n    CloseOutlined,\r\n    CheckOutlined,\r\n    InfoCircleOutlined\r\n} from '@ant-design/icons';\r\nimport CKEditor from '@ckeditor/ckeditor5-react';\r\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\r\n\r\n\r\n\r\n// import ReactQuill from 'react-quill';\r\n// import 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport MediaLibrary from \"../../components/MediaLibrary\";\r\nimport DatePicker from \"../../components/Field/DatePicker\";\r\nimport { openSuccessNotification, openErrorNotification } from \"../../components/Notification\";\r\nimport Tags from \"./Tags\";\r\nimport Brands from \"./Brands\";\r\nimport Categories from \"./Categories\";\r\nimport Pricing from \"./Pricing\";\r\n\r\nconst { TabPane } = Tabs;\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    name: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\n\r\nconst initialValues = {\r\n    name: '',\r\n    description: '',\r\n    model: '',\r\n    unit: '',\r\n    regular: '',\r\n    offer: '',\r\n    available: '',\r\n    minimum: '',\r\n    image: [],\r\n    url: '',\r\n    cover: '',\r\n    pricing: [],\r\n    venue: '',\r\n    date: '',\r\n    time: '',\r\n    purchaseLimit: null\r\n}\r\n\r\ninterface Props {\r\n    productEditVisible?: any;\r\n    setProductEditVisible?: any;\r\n    productDetailData?: any;\r\n}\r\n\r\nconst AddNewProduct = ({ productEditVisible, setProductEditVisible, productDetailData }: Props) => {\r\n\r\n    const [updateProductState, handleUpdateProductFetch] = useHandleFetch({}, 'updateProduct');\r\n    const [productDetailState, handleProductDetailFetch] = useHandleFetch({}, 'productDetailById');\r\n    const [attachImageToItemMultipleState, handleAttachImageToItemMultipleFetch] = useHandleFetch({}, 'attachImageToItemMultiple');\r\n    const [attachImageToItemSingleState, handleAttachImageToItemSingleFetch] = useHandleFetch({}, 'attachImageToItemSingle');\r\n    const [detachImageFromItemMultipleState, handleDetachImageFromItemMultipleFetch] = useHandleFetch({}, 'detachImageFromItemMultiple');\r\n    const [detachImageFromItemSingleState, handleDetachImageFromItemSingleFetch] = useHandleFetch({}, 'detachImageFromItemSingle');\r\n    const [setImageAsThumbnailToItemState, handleSetImageAsThumbnailToItemFetch] = useHandleFetch({}, 'setImageAsThumbnailToItem');\r\n\r\n\r\n\r\n    const [visible, setvisible] = useState(false);\r\n    const [myImages, setmyImages] = useState(false);\r\n    const [myThumbnailImage, setmyThumbnailImage] = useState(false);\r\n    const [isModalOpenForThumbnail, setisModalOpenForThumbnail] = useState(false);\r\n    const [isModalOpenForImages, setisModalOpenForImages] = useState(false);\r\n    const [categoryids, setcategoryIds] = useState([]);\r\n    const [tagIds, setTagIds] = useState([]);\r\n    const [brandId, setBrandId] = useState('');\r\n    const [pricing, setPricing] = useState([]);\r\n    const [coverImageId, setCoverImageId] = useState('');\r\n    const [categoryOptions, setCategoryOptions] = useState([]);\r\n    const [selectedTags, setSelectedTags] = useState([]);\r\n    const [date, setDateFeild] = useState('');\r\n    const [time, setTimeFeild] = useState('');\r\n    const [description, setDescription] = useState('');\r\n\r\n\r\n\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        const getProductDetail = async () => {\r\n            await handleProductDetailFetch({\r\n                urlOptions: {\r\n                    placeHolders: {\r\n                        id: productDetailData.id\r\n                    }\r\n                }\r\n            })\r\n        };\r\n\r\n        getProductDetail();\r\n\r\n    }, [productDetailData]);\r\n\r\n    useEffect(() => {\r\n\r\n        if (productDetailData && productDetailData.brand) {\r\n            setBrandId(productDetailData.brand['id']);\r\n        }\r\n        else {\r\n            setBrandId('');\r\n        }\r\n        if (productDetailData && productDetailData.tags && productDetailData.tags.length > 0) {\r\n            // const tagIds = productDetailData.tags.map(item => item.id);\r\n            setSelectedTags(productDetailData.tags);\r\n        }\r\n        else {\r\n            setSelectedTags([]);\r\n\r\n        }\r\n        if (productDetailData && productDetailData.category && productDetailData.category.length > 0) {\r\n            const categoryIds = productDetailData.category.map(item => item.id);\r\n            setCategoryOptions(categoryIds);\r\n        }\r\n        else {\r\n            setCategoryOptions([]);\r\n\r\n        }\r\n\r\n        if (productDetailData && productDetailData.pricing && productDetailData.pricing) {\r\n            setPricing(productDetailData.pricing)\r\n        }\r\n        else {\r\n            setPricing([]);\r\n\r\n        }\r\n\r\n\r\n        if (productDetailData && productDetailData.date && productDetailData.date) {\r\n            setDateFeild(productDetailData.date)\r\n        }\r\n        else {\r\n            setDateFeild('');\r\n\r\n        }\r\n\r\n        if (productDetailData && productDetailData.time && productDetailData.time) {\r\n            setTimeFeild(productDetailData.time);\r\n        }\r\n        else {\r\n            setTimeFeild('');\r\n        }\r\n\r\n\r\n\r\n    }, [productDetailData]);\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        if (productDetailState.done && Object.keys(productDetailState).length > 0) {\r\n\r\n            const images = productDetailState.data.image;\r\n            if (images && images.length > 0) {\r\n                setmyImages(images);\r\n            }\r\n\r\n            if (productDetailState.data.cover && productDetailState.data.cover['id']) {\r\n                // @ts-ignore\r\n                setmyImages([productDetailState.data.cover, ...images]);\r\n                console.log('catcat', [productDetailState.data.cover, ...images]);\r\n                setCoverImageId(productDetailState.data.cover['id']);\r\n            }\r\n\r\n        }\r\n    }, [productDetailState])\r\n\r\n\r\n    useEffect(() => {\r\n        console.log('thumnail', myImages);\r\n        // @ts-ignore\r\n        if (myImages && myImages[0] && myImages.length < 2) {\r\n            console.log('thumnail2', myImages);\r\n\r\n            if (coverImageId !== myImages[0].id) {\r\n                setCoverImageId(myImages[0].id);\r\n                handleSetImageAsThumnail(myImages[0]);\r\n            }\r\n\r\n        }\r\n\r\n    }, [myImages])\r\n\r\n\r\n    const handleDetachSingleImage = async id => {\r\n        await handleDetachImageFromItemSingleFetch({\r\n            urlOptions: {\r\n                placeHolders: {\r\n                    imageId: id,\r\n                    collection: 'product',\r\n                    itemId: productDetailData.id\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n\r\n\r\n    const handleSetImageAsThumnail = async image => {\r\n\r\n        const thumbnailRes = await handleSetImageAsThumbnailToItemFetch({\r\n            urlOptions: {\r\n                placeHolders: {\r\n                    imageId: image.id,\r\n                    collection: 'product',\r\n                    itemId: productDetailData.id\r\n                }\r\n            }\r\n        });\r\n\r\n        console.log('thumbnailRes', thumbnailRes);\r\n\r\n        // @ts-ignore\r\n        if (thumbnailRes && thumbnailRes.status === 'ok') {\r\n            openSuccessNotification('Seted as thumbnail!')\r\n            // const positionInBrand = () => {\r\n            //     return productList.map(item => item.id).indexOf(productDetailData.id);\r\n            // }\r\n\r\n            // const index = positionInBrand();\r\n\r\n            // const prevItem = productList.find(item => item.id === productDetailData.id);\r\n\r\n            // if (prevItem) {\r\n            //     console.log('prevItem--', prevItem, 'image--', image);\r\n            //     const updatedItem = Object.assign({}, productList[index], { ...prevItem, cover: image.cover });\r\n            //     const updateProductList = [...productList.slice(0, index), updatedItem, ...productList.slice(index + 1)];\r\n            //     setProductList(updateProductList);\r\n\r\n            // }\r\n        }\r\n        else {\r\n            openErrorNotification(\"Couldn't set as thumbnail, Something went wrong\")\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n    const makeEmptyCategoryOptions = (setEmpty) => {\r\n        setEmpty([]);\r\n    }\r\n\r\n    const handleSubmit = async (values: any, actions: any) => {\r\n        // @ts-ignore\r\n        const imagesIds = myImages ? myImages.map(image => {\r\n            return image.id;\r\n        }) : [];\r\n\r\n        const updatedProductRes = await handleUpdateProductFetch({\r\n            urlOptions: {\r\n                placeHolders: {\r\n                    id: productDetailData.id\r\n                }\r\n            },\r\n            body: {\r\n                name: values.name.trim(),\r\n                description: description,\r\n                model: values.model,\r\n                unit: values.unit,\r\n                category: categoryOptions,\r\n                tags: tagIds,\r\n                brand: brandId,\r\n                image: imagesIds,\r\n                cover: coverImageId || imagesIds[0] ? imagesIds[0] : '',\r\n                pricing: pricing,\r\n            },\r\n        });\r\n\r\n\r\n        // @ts-ignore\r\n        if (updatedProductRes && updatedProductRes.status === 'ok') {\r\n            openSuccessNotification('Product Updated');\r\n            setProductEditVisible(false);\r\n\r\n            console.log('updatedProductRes', updatedProductRes);\r\n            // setProductList([...productList, {\r\n            //     id: updatedProductRes['id'] || '',\r\n            //     key: updatedProductRes['id'] || '',\r\n            //     name: updatedProductRes['name'] || '',\r\n            //     description: updatedProductRes['description'] || '',\r\n            //     // @ts-ignore\r\n            //     ...updatedProductRes\r\n            // }])\r\n            // @ts-ignore\r\n            setmyImages([]);\r\n            setCoverImageId('');\r\n            setPricing([]);\r\n            setTagIds([]);\r\n            setSelectedTags([]);\r\n            setBrandId(\"\");\r\n            setcategoryIds([]);\r\n            setCategoryOptions([]);\r\n            actions.resetForm();\r\n        }\r\n        else {\r\n            // openErrorNotification();\r\n        }\r\n\r\n        actions.setSubmitting(false);\r\n\r\n\r\n    };\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        if (!updateProductState['isLoading']) {\r\n            const error = updateProductState['error'];\r\n            if (error['isError'] && Object.keys(error['error']).length > 0) {\r\n\r\n\r\n                const errors =\r\n                    Object.values(error['error']).length > 0\r\n                        ? Object.values(error['error'])\r\n                        : [];\r\n                errors.forEach((err, i) => {\r\n                    if (typeof err === 'string') {\r\n                        openErrorNotification(err)\r\n                    }\r\n                    else if (typeof err === 'object') {\r\n                        if (err && Object.keys(err).length > 0) {\r\n                            const errs = Object.values(err);\r\n                            errs.forEach(err => {\r\n                                openErrorNotification(err)\r\n                            })\r\n\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n        }\r\n    }, [updateProductState])\r\n\r\n\r\n    const handleCancel = (e: any) => {\r\n        setProductEditVisible(false);\r\n    };\r\n\r\n\r\n    const getisSubmitButtonDisabled = (values, isValid) => {\r\n        if (!values.name || !(pricing.length > 0) || !isValid) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n\r\n    const handleImagesDelete = (id) => {\r\n        // @ts-ignore\r\n        const newImages = myImages && myImages.filter(image => {\r\n            return image.id !== id;\r\n        })\r\n\r\n        setmyImages(newImages);\r\n    }\r\n\r\n    const handleDeleteFromSelectedImage = () => {\r\n\r\n    };\r\n\r\n    const handleThumbnailImageDelete = (id) => {\r\n        // @ts-ignore\r\n        const newImages = myThumbnailImage && myThumbnailImage.filter(image => {\r\n            return image.id !== id;\r\n        })\r\n\r\n        if (newImages.length > 0) {\r\n            setmyThumbnailImage(newImages);\r\n\r\n        }\r\n        else setmyThumbnailImage(false);\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    const handleAddPricing = (priceItem) => {\r\n\r\n        setPricing([{\r\n            ...priceItem,\r\n            id: pricing.length\r\n        }, ...pricing])\r\n        message.info('Product Pricing Added');\r\n    }\r\n\r\n\r\n    const handleDeletePricing = (id) => {\r\n        const newPricing = pricing.filter(item => item.id !== id);\r\n        setPricing(newPricing);\r\n        message.info('Product Pricing Deleted');\r\n    }\r\n\r\n\r\n\r\n    const isCategoryInValid = () => {\r\n        if (updateProductState.error['error']['category'] && !categoryids && categoryids.length) {\r\n            return true;\r\n        }\r\n        else if (categoryids && categoryids.length > 0) {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    const handleDateChange = (date, dateString) => {\r\n        setDateFeild(dateString);\r\n        // console.log('date', date, dateString);\r\n    }\r\n\r\n    const handleTimeChange = (date, dateString) => {\r\n        setTimeFeild(dateString);\r\n        // console.log('date', date, dateString);\r\n    }\r\n\r\n\r\n    console.log('productDetailData', productDetailData);\r\n    console.log('productDetailState', productDetailState);\r\n\r\n\r\n    return (\r\n        <Formik\r\n            onSubmit={(values, actions) => handleSubmit(values, actions)}\r\n            validationSchema={validationSchema}\r\n            validateOnBlur={false}\r\n            enableReinitialize={true}\r\n            initialValues={\r\n                { ...initialValues, ...productDetailData }\r\n            }\r\n        >\r\n            {({\r\n                handleChange,\r\n                values,\r\n                handleSubmit,\r\n                errors,\r\n                isValid,\r\n                isSubmitting,\r\n                touched,\r\n                handleBlur,\r\n                setFieldTouched,\r\n                handleReset,\r\n            }) => (\r\n                    <>\r\n                        <Modal\r\n                            style={{\r\n                                top: '40px',\r\n\r\n                            }}\r\n                            bodyStyle={{\r\n                                margin: 0,\r\n                                padding: 0,\r\n                            }}\r\n                            width={'70vw'}\r\n                            title=\"Product Edit\"\r\n                            visible={productEditVisible}\r\n                            onOk={(e: any) => handleSubmit(e)}\r\n                            onCancel={handleCancel}\r\n                            destroyOnClose={true}\r\n                            okText='Update'\r\n                            okButtonProps={{\r\n                                loading: isSubmitting,\r\n                                htmlType: \"submit\",\r\n                                disabled: getisSubmitButtonDisabled(values, isValid)\r\n                            }}\r\n                        >\r\n                            <section className='addProductGridContainer'>\r\n                                <div className='addProductGridContainer__left'>\r\n                                    <div className='addProductGridContainer__name'>\r\n                                        <div className='addProductGridContainer__item-header'>\r\n                                            <h3>\r\n                                                Product Information\r\n\t\t                                \t</h3>\r\n                                            <div className={values.name && values.name.length > 2 ? 'checkicon-active' : 'checkicon'}>\r\n                                                <CheckCircleOutlined />\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className='addProductGridContainer__item-body'>\r\n                                            <Input\r\n                                                label='Title'\r\n                                                value={values.name}\r\n                                                name='name'\r\n                                                isError={(touched.name && errors.name) ||\r\n                                                    (!isSubmitting && updateProductState.error['error']['name'])}\r\n\r\n                                                errorString={(touched.name && errors.name) ||\r\n                                                    (!isSubmitting && updateProductState.error['error']['name'])}\r\n                                                onChange={(e: any) => {\r\n                                                    handleChange(e);\r\n                                                    setFieldTouched('name');\r\n                                                }}\r\n                                            />\r\n                                            {/* <div style={{\r\n                                                display: 'flex',\r\n                                                justifyContent: 'space-between'\r\n                                            }}>\r\n                                                <div style={{\r\n                                                    width: '48%',\r\n                                                }}>\r\n                                                    <DatePicker\r\n                                                        time={time}\r\n                                                        date={date}\r\n                                                        label='Date'\r\n                                                        onChange={handleDateChange} />\r\n\r\n                                                </div>\r\n                                                <div style={{\r\n                                                    width: '48%'\r\n                                                }}>\r\n\r\n                                                    <DatePicker\r\n                                                        time={time}\r\n                                                        date={date}\r\n                                                        withTime={true}\r\n                                                        placeholder='Select time'\r\n                                                        label='Time'\r\n                                                        onChange={handleTimeChange} />\r\n\r\n                                                </div>\r\n                                            </div>\r\n                                            <div style={{\r\n                                                marginBottom: '15px'\r\n                                            }}></div>\r\n\r\n                                            <TextArea\r\n                                                rows={1}\r\n                                                label='Venue'\r\n                                                value={values.venue}\r\n                                                name='venue'\r\n                                                isError={(touched.venue && errors.venue) ||\r\n                                                    (!isSubmitting && updateProductState.error['error']['venue'])}\r\n\r\n                                                errorString={(touched.venue && errors.venue) ||\r\n                                                    (!isSubmitting && updateProductState.error['error']['venue'])}\r\n                                                onChange={(e: any) => {\r\n                                                    handleChange(e);\r\n                                                    setFieldTouched('venue');\r\n                                                }}\r\n                                            />\r\n\r\n\r\n\r\n                                            <Input\r\n                                                label='Purchase Limit'\r\n                                                value={values.purchaseLimit}\r\n                                                type='number'\r\n                                                name='purchaseLimit'\r\n                                                isError={(touched.purchaseLimit && errors.purchaseLimit) ||\r\n                                                    (!isSubmitting && updateProductState.error['error']['purchaseLimit'])}\r\n\r\n                                                errorString={(touched.purchaseLimit && errors.purchaseLimit) ||\r\n                                                    (!isSubmitting && updateProductState.error['error']['purchaseLimit'])}\r\n                                                onChange={(e: any) => {\r\n                                                    handleChange(e);\r\n                                                    setFieldTouched('purchaseLimit');\r\n                                                }}\r\n                                            /> */}\r\n\r\n\r\n\r\n                                            <h3 className='inputFieldLabel'>\r\n                                                Description\r\n                                            </h3>\r\n\r\n                                            <div style={{\r\n                                                width: '100%',\r\n                                                maxWidth: '100%'\r\n                                            }}>\r\n                                                <CKEditor\r\n                                                    editor={ClassicEditor}\r\n                                                    data={description}\r\n                                                    onInit={editor => {\r\n                                                        // You can store the \"editor\" and use when it is needed.\r\n                                                        console.log('Editor is ready to use!', editor);\r\n                                                    }}\r\n                                                    onChange={(event, editor) => {\r\n                                                        const data = editor.getData();\r\n                                                        setDescription(data);\r\n                                                    }}\r\n                                                    onBlur={(event, editor) => {\r\n                                                        console.log('Blur.', editor);\r\n                                                    }}\r\n                                                    onFocus={(event, editor) => {\r\n                                                        console.log('Focus.', editor);\r\n                                                    }}\r\n                                                />\r\n                                            </div>\r\n\r\n                                            <Input\r\n                                                label='Model Number'\r\n                                                value={values.model}\r\n                                                name='model'\r\n                                                isError={(touched.model && errors.model) ||\r\n                                                    (!isSubmitting && updateProductState.error['error']['model'])}\r\n\r\n                                                errorString={(touched.model && errors.model) ||\r\n                                                    (!isSubmitting && updateProductState.error['error']['model'])}\r\n                                                onChange={(e: any) => {\r\n                                                    handleChange(e);\r\n                                                    setFieldTouched('model');\r\n                                                }}\r\n                                            />\r\n\r\n\r\n                                            <Input\r\n                                                label='Unit'\r\n                                                value={values.unit}\r\n                                                name='unit'\r\n                                                isError={(touched.unit && errors.unit) ||\r\n                                                    (!isSubmitting && updateProductState.error['error']['unit'])}\r\n\r\n                                                errorString={(touched.unit && errors.unit) ||\r\n                                                    (!isSubmitting && updateProductState.error['error']['unit'])}\r\n                                                onChange={(e: any) => {\r\n                                                    handleChange(e);\r\n                                                    setFieldTouched('unit');\r\n                                                }}\r\n                                            />\r\n\r\n                                        </div>\r\n\r\n                                    </div>\r\n\r\n                                    <div className='addProductGridContainer__price'>\r\n                                        <div className='addProductGridContainer__item-header'>\r\n                                            <h3>\r\n                                                Product Pricing\r\n\t\t\t</h3>\r\n\r\n                                            <div className={pricing && pricing.length > 0 ? 'checkicon-active' : 'checkicon'}>\r\n                                                <CheckCircleOutlined />\r\n                                            </div>\r\n                                        </div>\r\n\r\n\r\n                                        <div className='addProductGridContainer__item-body'>\r\n\r\n                                            <Tabs\r\n                                                animated={true}\r\n                                                tabPosition=\"top\"\r\n                                                type='card'\r\n                                                defaultActiveKey='2'\r\n                                            >\r\n\r\n                                                <TabPane tab=\"Add Variation\" key=\"1\">\r\n                                                    <Pricing handleAddPricing={handleAddPricing} />\r\n                                                </TabPane>\r\n                                                <TabPane tab=\"Pricing List\" key=\"2\">\r\n                                                    <div className='addProductGridContainer__item-body-pricingContainer'>\r\n\r\n                                                        {pricing.length > 0 && pricing.map(item => {\r\n                                                            return (\r\n                                                                <div className='addProductGridContainer__item-body-pricingContainer-item'>\r\n                                                                    <div className='addProductGridContainer__item-body-pricingContainer-item-edit'>\r\n                                                                        {/* <span>\r\n\t\t\t\t\t\t\t<EditOutlined />\r\n\t\t\t\t\t\t\t</span> */}\r\n                                                                        <span className='d' onClick={() => handleDeletePricing(item.id)}>\r\n                                                                            <DeleteOutlined />\r\n                                                                        </span>\r\n                                                                    </div>\r\n                                                                    <div className='addProductGridContainer__item-body-pricingContainer-item-two'>\r\n                                                                        <div>\r\n                                                                            <h3>\r\n                                                                                Price\r\n\t\t\t\t\t\t</h3>\r\n                                                                            <div className='addProductGridContainer__item-body-pricingContainer-item-body'>\r\n\r\n\r\n                                                                                {item.price.offer ? (\r\n                                                                                    <>\r\n                                                                                        <h4 >\r\n                                                                                            {item.price.offer}\r\n\r\n                                                                                        </h4>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<h5 style={{\r\n                                                                                            textDecoration: \"line-through\"\r\n                                                                                        }}>\r\n\r\n                                                                                            {item.price.regular}\r\n                                                                                        </h5>\r\n                                                                                    </>\r\n                                                                                ) : (\r\n                                                                                        <h4>\r\n                                                                                            {item.price.regular}\r\n\r\n                                                                                        </h4>\r\n                                                                                    )}\r\n\r\n\r\n                                                                            </div>\r\n                                                                        </div>\r\n\r\n                                                                        {item.stock && (\r\n                                                                            <div>\r\n                                                                                <Badge\r\n                                                                                    overflowCount={999}\r\n                                                                                    count={item.stock.available}>\r\n                                                                                    <h3>\r\n                                                                                        Stock\r\n\t\t\t\t\t\t\t\t\t</h3>\r\n                                                                                </Badge>\r\n                                                                                <div className='addProductGridContainer__item-body-pricingContainer-item-body'>\r\n                                                                                    <div>\r\n                                                                                        <h6>\r\n                                                                                            min\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Badge\r\n                                                                                                className=\"site-badge-count-4\"\r\n                                                                                                overflowCount={999}\r\n                                                                                                count={item.stock.minimum} />\r\n                                                                                        </h6>\r\n\r\n\r\n                                                                                    </div>\r\n\r\n                                                                                </div>\r\n                                                                            </div>\r\n                                                                        )}\r\n\r\n\r\n\r\n                                                                    </div>\r\n\r\n                                                                    {item.attribute\r\n                                                                        && Object.values(item.attribute).length > 0 && (\r\n                                                                            <>\r\n                                                                                <h3>\r\n                                                                                    Attributes\r\n\t\t\t\t\t\t</h3>\r\n                                                                                <div className='addProductGridContainer__item-body-pricingContainer-item-body'>\r\n                                                                                    {item.attribute\r\n                                                                                        && Object.keys(item.attribute).length > 0\r\n                                                                                        && Object.keys(item.attribute).map(attributeItem => {\r\n                                                                                            return (\r\n                                                                                                <div>\r\n                                                                                                    <h6>\r\n                                                                                                        {attributeItem}\r\n                                                                                                    </h6>\r\n                                                                                                    <h4>\r\n                                                                                                        {item.attribute[attributeItem]}\r\n                                                                                                    </h4>\r\n                                                                                                </div>\r\n                                                                                            )\r\n                                                                                        })}\r\n                                                                                </div>\r\n                                                                            </>\r\n                                                                        )}\r\n\r\n                                                                </div>\r\n                                                            )\r\n                                                        })}\r\n\r\n\r\n                                                        {!(pricing.length > 0) && <div style={{\r\n                                                            width: '100%',\r\n                                                            display: 'flex',\r\n                                                            justifyContent: 'center'\r\n                                                        }}>\r\n                                                            <Empty description='No Pricing added' image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n                                                        </div>}\r\n                                                    </div>\r\n                                                </TabPane>\r\n\r\n                                            </Tabs>\r\n\r\n                                            <div className='addProductGridContainer__item-body-container'>\r\n\r\n                                            </div>\r\n\r\n                                        </div>\r\n                                    </div>\r\n\r\n\r\n                                    <div className='addProductGridContainer__image'>\r\n\r\n                                        <div className='addProductGridContainer__item-header'>\r\n                                            <h3>\r\n                                                Image\r\n\t\t\t</h3>\r\n\r\n                                            <Tooltip\r\n                                                placement=\"left\" title={'Click on the image to select cover image, By default 1st image is selected as cover'}>\r\n                                                <a href='###'>\r\n                                                    <InfoCircleOutlined />\r\n                                                </a>\r\n                                            </Tooltip>\r\n                                        </div>\r\n\r\n                                        <div\r\n                                            style={{\r\n                                                padding: \"10px\"\r\n                                            }}\r\n                                            className='aboutToUploadImagesContainer'>\r\n                                            {productDetailState.isLoading && (\r\n                                                <div style={{\r\n                                                    padding: '20px 0'\r\n                                                }}>\r\n                                                    <Spin />\r\n                                                </div>\r\n                                            )}\r\n                                            {productDetailState.done && (\r\n                                                <>\r\n                                                    {myImages &&\r\n                                                        // @ts-ignore\r\n                                                        myImages.length > 0 && myImages.map((image, index) => {\r\n                                                            return (\r\n                                                                <div className='aboutToUploadImagesContainer__item'>\r\n                                                                    <div\r\n                                                                        className='aboutToUploadImagesContainer__item-imgContainer'\r\n                                                                        onClick={() => {\r\n                                                                            setCoverImageId(image.id);\r\n                                                                            handleSetImageAsThumnail(image);\r\n                                                                        }}\r\n                                                                    >\r\n                                                                        <img src={image.cover} alt={image.alt} />\r\n                                                                    </div>\r\n\r\n                                                                    <span\r\n                                                                        onClick={() => {\r\n                                                                            handleImagesDelete(image.id)\r\n                                                                            handleDetachSingleImage(image.id)\r\n                                                                        }\r\n\r\n                                                                        }\r\n                                                                        className='aboutToUploadImagesContainer__item-remove'>\r\n                                                                        <CloseOutlined />\r\n                                                                    </span>\r\n\r\n\r\n                                                                    {coverImageId === image.id ? (\r\n                                                                        <span className='aboutToUploadImagesContainer__item-cover'>\r\n                                                                            <CheckOutlined />\r\n                                                                        </span>\r\n                                                                    ) : !coverImageId && index === 0 && (\r\n                                                                        <span className='aboutToUploadImagesContainer__item-cover'>\r\n                                                                            <CheckOutlined />\r\n                                                                        </span>\r\n                                                                    )}\r\n\r\n\r\n                                                                </div>\r\n                                                            )\r\n                                                        })}\r\n\r\n\r\n                                                    <Tooltip\r\n                                                        title={'Attach images'}>\r\n\r\n                                                        <div\r\n                                                            onClick={() => {\r\n                                                                setvisible(true);\r\n                                                                setisModalOpenForImages(true);\r\n                                                                setisModalOpenForThumbnail(false);\r\n                                                            }}\r\n                                                            className='aboutToUploadImagesContainer__uploadItem'>\r\n                                                            {/* <FileAddOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FileImageTwoTone />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FileImageOutlined /> */}\r\n                                                            <FileImageFilled />\r\n                                                            {/* <h5>\r\n\t\t\t\t\t\t\t\t\t\t\t\t     Select From Library\r\n\t\t\t\t\t\t\t\t\t\t\t<     /h5> */}\r\n                                                            <span className='aboutToUploadImagesContainer__uploadItem-plus'>\r\n                                                                <PlusOutlined />\r\n                                                            </span>\r\n                                                        </div>\r\n                                                    </Tooltip>\r\n                                                </>\r\n                                            )}\r\n\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                </div>\r\n                                <div className='addProductGridContainer__right'>\r\n                                    <div className='addProductGridContainer__category'>\r\n\r\n                                        <div className='addProductGridContainer-rightItemContainer'>\r\n                                            <div className='addProductGridContainer-rightItemContainer-header'>\r\n                                                <h3>\r\n                                                    Categories\r\n\t\t\t\t</h3>\r\n\r\n                                                <Tooltip\r\n                                                    color='red'\r\n                                                    visible={updateProductState.error['error']['category'] && !(categoryids.length > 0)}\r\n                                                    placement=\"left\" title={'Select at least one category'}>\r\n                                                    <div className={!(categoryids.length > 0)\r\n                                                        && !updateProductState.error['error']['category'] ? 'checkicon' : updateProductState.error['error']['category'] ? 'checkicon-error' : 'checkicon-active'}>\r\n                                                        <CheckCircleOutlined />\r\n                                                    </div>\r\n                                                </Tooltip>\r\n\r\n                                            </div>\r\n                                            <div className='addProductGridContainer-rightItemContainer-body'>\r\n                                                <Categories\r\n                                                    setCategoryOptions={setCategoryOptions}\r\n                                                    categoryOptions={categoryOptions}\r\n                                                    setcategoryIds={setcategoryIds} />\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                    </div>\r\n\r\n                                    <div className='addProductGridContainer__tag'>\r\n                                        <div className='addProductGridContainer-rightItemContainer'>\r\n                                            <div className='addProductGridContainer-rightItemContainer-header'>\r\n                                                <h3>\r\n                                                    Tags\r\n\t\t\t\t</h3>\r\n                                            </div>\r\n                                            <div className='addProductGridContainer-rightItemContainer-body'>\r\n                                                <Tags\r\n                                                    setSelectedTags={setSelectedTags}\r\n                                                    selectedTags={selectedTags}\r\n                                                    setTagIds={setTagIds} />\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                    </div>\r\n                                    <div className='addProductGridContainer__brand'>\r\n                                        <div className='addProductGridContainer-rightItemContainer'>\r\n                                            <div className='addProductGridContainer-rightItemContainer-header'>\r\n                                                <h3>\r\n                                                    Brand\r\n\t\t\t\t</h3>\r\n                                            </div>\r\n                                            <div className='addProductGridContainer-rightItemContainer-body'>\r\n                                                <Brands\r\n                                                    productDetailState={productDetailState}\r\n                                                    brandId={brandId}\r\n                                                    setBrandId={setBrandId} />\r\n                                            </div>\r\n                                        </div>\r\n\r\n\r\n                                    </div>\r\n\r\n                                </div>\r\n                            </section>\r\n\r\n\r\n                        </Modal>\r\n\r\n                        <MediaLibrary\r\n                            setvisible={setvisible}\r\n                            visible={visible}\r\n                            setmyImages={setmyImages}\r\n                            myImages={myImages}\r\n                            setmyThumbnailImage={setmyThumbnailImage}\r\n                            isModalOpenForThumbnail={isModalOpenForThumbnail}\r\n                            isModalOpenForImages={isModalOpenForImages}\r\n\r\n                        />\r\n                    </>\r\n                )}\r\n        </Formik>\r\n\r\n\r\n\r\n\r\n    );\r\n};\r\n\r\nexport default AddNewProduct;\r\n\r\n\r\n\r\n\r\n/*\r\n\r\n\r\nProduct variation ---->\r\n\r\nPrice [title]\r\n\t[regular input field] [offer inputfield]\r\n\r\nStock [title]\r\n\t[available input field] [minimum inputfield]\r\n\r\ndefault [default can be set to true]\r\n\r\nattributes [title]\r\n\t[add attributes name]\r\n\t\t[add attrubutes value]\r\n\r\n\t[add attributes name]\r\n\t\t[add attrubutes value\r\n\r\n*///","import React, { useEffect, useState } from 'react';\r\nimport { useParams, useHistory } from \"react-router\";\r\n\r\n\r\n// import hooks\r\nimport { useHandleFetch } from \"../../hooks\";\r\n\r\n// import lib\r\nimport {\r\n    EditOutlined,\r\n    DeleteOutlined\r\n} from '@ant-design/icons';\r\n\r\nimport { Skeleton, Empty, Button, notification, Table, Space, Input as CoolInput, Tooltip, Modal, Badge } from 'antd';\r\n\r\n\r\n\r\n// import components\r\nimport { DataTableSkeleton } from \"../../components/Placeholders\";\r\nimport ProductEdit from \"./ProductEdit\";\r\n\r\n\r\nconst { Column, ColumnGroup } = Table;\r\nconst { Search } = CoolInput;\r\n\r\n\r\ninterface Props {\r\n    productRecord?: any;\r\n}\r\n\r\nconst NewBrandDetail = (props: Props) => {\r\n    const [productDetailState, handleProductDetailFetch] = useHandleFetch({}, 'productDetailById');\r\n\r\n    const params = useParams();\r\n    const history = useHistory();\r\n    const productId = params['id'];\r\n    const [productEditVisible, setProductEditVisible] = useState(false);\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        const getProductDetail = async () => {\r\n            await handleProductDetailFetch({\r\n                urlOptions: {\r\n                    placeHolders: {\r\n                        id: productId\r\n                    }\r\n                }\r\n            })\r\n        };\r\n\r\n        getProductDetail();\r\n\r\n    }, [productId]);\r\n\r\n\r\n\r\n\r\n    console.log('productDetailState', productDetailState);\r\n\r\n    console.log('brandParams', params);\r\n\r\n    const getImagesInCollumn = (imgs) => {\r\n        if (!imgs[0]) return false;\r\n        imgs = imgs.map(item => item.cover);\r\n        const columns = {};\r\n\r\n        let localIndex = 0;\r\n        let columnNumber = 0;\r\n\r\n\r\n        imgs.forEach((item, index) => {\r\n            if (localIndex < 3) {\r\n                if (columns[columnNumber]) {\r\n                    columns[columnNumber] = [...columns[columnNumber], item]\r\n                }\r\n                else columns[columnNumber] = [item];\r\n\r\n                localIndex = localIndex + 1;\r\n                columnNumber = columnNumber + 1;\r\n\r\n            }\r\n            else {\r\n                localIndex = 0;\r\n                columnNumber = 0;\r\n                console.log('localIndex', localIndex)\r\n            }\r\n        });\r\n\r\n        return columns;\r\n    }\r\n\r\n\r\n    const row = productDetailState.done && productDetailState.data && productDetailState.data['image'] ? getImagesInCollumn(productDetailState.data['image']) : [];\r\n\r\n    return (\r\n        <div className='brandDetailContainer'>\r\n\r\n            <div className='brandDetailContainer__heading'>\r\n                <h3>\r\n                    Product Detail\r\n                </h3>\r\n\r\n                {productDetailState.done && productDetailState.data && (Object.keys(productDetailState.data).length > 0) && (\r\n                    <>\r\n                        <ProductEdit\r\n                            productEditVisible={productEditVisible}\r\n                            setProductEditVisible={setProductEditVisible}\r\n                            productDetailData={productDetailState.data}\r\n                        />\r\n                        <Button\r\n                            onClick={() => setProductEditVisible(true)}\r\n                            type='link'\r\n                            icon={<EditOutlined />}\r\n                        >\r\n                            Edit\r\n                      </Button>\r\n                    </>\r\n                )}\r\n\r\n            </div>\r\n            <Skeleton\r\n                avatar paragraph={{ rows: 3 }}\r\n                loading={productDetailState.isLoading}>\r\n                {productDetailState.done && productDetailState.data && !(Object.keys(productDetailState.data).length > 0) && (\r\n                    <Empty description='No Product found' image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n                )}\r\n\r\n                {productDetailState.done && productDetailState.data && (Object.keys(productDetailState.data).length > 0) && (\r\n                    <>\r\n                        <div className='brandDetailContainer__header'>\r\n                            <div className='brandDetailContainer__header-coverContainer brandDetailContainer__header-coverContainer-product'>\r\n                                <img src={productDetailState.data['cover'] && productDetailState.data['cover']['cover']} alt=\"\" />\r\n                            </div>\r\n                            <div className='brandDetailContainer__header-info'>\r\n                                <h2>\r\n                                    {productDetailState.data['name']}\r\n                                </h2>\r\n                                <h4>\r\n                                    {productDetailState.data['price']}\r\n                                </h4>\r\n                                <h3>\r\n                                    {productDetailState.data['description']}\r\n                                </h3>\r\n\r\n\r\n                                {productDetailState.data['url'] && (\r\n                                    <h3>\r\n                                        URL:\r\n                                        <span>\r\n                                            {productDetailState.data['url']}\r\n                                        </span>\r\n\r\n                                    </h3>\r\n                                )}\r\n                                {/* \r\n                                {productDetailState.data['tags'] && productDetailState.data['tags'].length > 0 &&\r\n                                    (<>\r\n                                        <h3>\r\n                                            TAGS:\r\n                                        {productDetailState.data['tags'].map(tag => {\r\n                                            return (\r\n                                                <span>\r\n                                                    {tag.name}\r\n                                                </span>\r\n                                            )\r\n                                        })}\r\n                                        </h3>\r\n\r\n                                    </>)\r\n                                } */}\r\n\r\n                                {productDetailState.data['category'] && productDetailState.data['category'].length > 0 &&\r\n                                    (<>\r\n                                        <h3>\r\n                                            CATEGORIES:\r\n                                        {productDetailState.data['category'].map(cat => {\r\n                                            return (\r\n                                                <span\r\n                                                    onClick={() => history.push(`/admin/category/${cat.id}`)}\r\n\r\n                                                >\r\n                                                    {cat.name}\r\n                                                </span>\r\n                                            )\r\n                                        })}\r\n                                        </h3>\r\n\r\n                                    </>)\r\n                                }\r\n\r\n                            </div>\r\n                        </div>\r\n\r\n\r\n                        {productDetailState.data['icon'] && (\r\n                            <>\r\n                                <div className='brandDetailContainer__heading'>\r\n                                    <h3>\r\n                                        Icon\r\n                            </h3>\r\n                                </div>\r\n\r\n                                <div className='brandDetailContainer__inlineBox'>\r\n                                    <div className='brandDetailContainer__header-coverContainer brandDetailContainer__header-coverContainer-icon'>\r\n                                        <img src={productDetailState.data['icon'] && productDetailState.data['icon']} alt=\"\" />\r\n                                    </div>\r\n\r\n                                </div>\r\n\r\n                                <div style={{\r\n                                    marginBottom: \"25px\"\r\n                                }}></div>\r\n                            </>\r\n                        )}\r\n\r\n                        {productDetailState.data['pricing'] && productDetailState.data['pricing'].length > 0 && (\r\n                            <>\r\n                                <div className='brandDetailContainer__heading'>\r\n                                    <h3>\r\n                                        Pricing\r\n                                   </h3>\r\n                                </div>\r\n\r\n                                <div className='brandDetailContainer__pricing'>\r\n                                    <div className='addProductGridContainer__item-body-pricingContainer'>\r\n                                        {productDetailState.data['pricing'].map(item => {\r\n                                            return (\r\n                                                <div className='addProductGridContainer__item-body-pricingContainer-item'>\r\n\r\n                                                    <div className='addProductGridContainer__item-body-pricingContainer-item-two'>\r\n                                                        <div>\r\n                                                            <h3>\r\n                                                                Price\r\n    </h3>\r\n                                                            <div className='addProductGridContainer__item-body-pricingContainer-item-body'>\r\n\r\n\r\n                                                                {item.price.offer ? (\r\n                                                                    <>\r\n                                                                        <h4 >\r\n                                                                            {item.price.offer}\r\n\r\n                                                                        </h4>\r\n                                                        /\r\n                                                        <h5 style={{\r\n                                                                            textDecoration: \"line-through\"\r\n                                                                        }}>\r\n\r\n                                                                            {item.price.regular}\r\n                                                                        </h5>\r\n                                                                    </>\r\n                                                                ) : (\r\n                                                                        <h4>\r\n                                                                            {item.price.regular}\r\n\r\n                                                                        </h4>\r\n                                                                    )}\r\n\r\n\r\n                                                            </div>\r\n                                                        </div>\r\n\r\n                                                        {item.stock && (\r\n                                                            <div>\r\n                                                                <Badge\r\n                                                                    overflowCount={999}\r\n                                                                    count={item.stock.available}>\r\n                                                                    <h3>\r\n                                                                        Stock\r\n                </h3>\r\n                                                                </Badge>\r\n                                                                <div className='addProductGridContainer__item-body-pricingContainer-item-body'>\r\n                                                                    <div>\r\n                                                                        <h6>\r\n                                                                            min\r\n                                                                        <Badge\r\n                                                                                className=\"site-badge-count-4\"\r\n                                                                                overflowCount={999}\r\n                                                                                count={item.stock.minimum} />\r\n                                                                        </h6>\r\n\r\n                                                                    </div>\r\n\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        )}\r\n\r\n\r\n\r\n                                                    </div>\r\n\r\n                                                    {item.attribute\r\n                                                        && Object.values(item.attribute).length > 0 && (\r\n                                                            <>\r\n                                                                <h3>\r\n                                                                    Attributes\r\n    </h3>\r\n                                                                <div className='addProductGridContainer__item-body-pricingContainer-item-body'>\r\n                                                                    {item.attribute\r\n                                                                        && Object.keys(item.attribute).length > 0\r\n                                                                        && Object.keys(item.attribute).map(attributeItem => {\r\n                                                                            return (\r\n                                                                                <div>\r\n                                                                                    <h6>\r\n                                                                                        {attributeItem}\r\n                                                                                    </h6>\r\n                                                                                    <h4>\r\n                                                                                        {item.attribute[attributeItem]}\r\n                                                                                    </h4>\r\n                                                                                </div>\r\n                                                                            )\r\n                                                                        })}\r\n                                                                </div>\r\n                                                            </>\r\n                                                        )}\r\n\r\n                                                </div>\r\n                                            )\r\n                                        })}\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div style={{\r\n                                    marginBottom: \"25px\"\r\n                                }}></div>\r\n                            </>\r\n                        )}\r\n\r\n\r\n\r\n                        {productDetailState.data['image'] && productDetailState.data['image'].length > 0 && (\r\n                            <>\r\n                                <div className='brandDetailContainer__heading'>\r\n                                    <h3>\r\n                                        Image Gallary\r\n                                   </h3>\r\n                                </div>\r\n\r\n                                <div className='brandDetailContainer__imageGallary'>\r\n                                    <div className='imgGallaryContainer'>\r\n\r\n                                        <div className=\"imgGallary-row\">\r\n                                            {row && Object.keys(row).map(column => {\r\n                                                return (\r\n                                                    <div className=\"imgGallary-column\">\r\n                                                        {row[column] && row[column].map(img => {\r\n                                                            return <img src={img} style={{\r\n                                                                width: '100%'\r\n                                                            }} />\r\n                                                        })}\r\n\r\n                                                    </div>\r\n                                                )\r\n                                            })}\r\n\r\n\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                </div>\r\n\r\n                                <div style={{\r\n                                    marginBottom: \"25px\"\r\n                                }}></div>\r\n                            </>\r\n                        )}\r\n\r\n                        {productDetailState.data['brand'] && Object.keys(productDetailState.data['brand']).length > 0 && (\r\n                            <>\r\n                                <div className='brandDetailContainer__heading'>\r\n                                    <h3>\r\n                                        Brand\r\n                                   </h3>\r\n                                </div>\r\n\r\n                                <div\r\n                                    onClick={() => history.push(`/admin/brand/${productDetailState.data['brand']['id']}`)}\r\n\r\n                                    className='brandDetailContainer__brand'>\r\n                                    <div className='brandDetailContainer__brand-coverbox'>\r\n                                        <img src={productDetailState.data['brand']['cover'] && productDetailState.data['brand']['cover']} alt=\"\" />\r\n                                    </div>\r\n                                    <div className='brandDetailContainer__brand-info'>\r\n                                        <h2>\r\n                                            {productDetailState.data['brand']['name']}\r\n                                        </h2>\r\n                                        <h3>\r\n                                            {productDetailState.data['brand']['description']}\r\n                                        </h3>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div style={{\r\n                                    marginBottom: \"25px\"\r\n                                }}></div>\r\n                            </>\r\n                        )}\r\n\r\n\r\n                        {productDetailState.data['primaryCategory'] && Object.keys(productDetailState.data['primaryCategory']).length > 0 && (\r\n                            <>\r\n                                <div className='brandDetailContainer__heading'>\r\n                                    <h3>\r\n                                        Primary Category\r\n                                   </h3>\r\n                                </div>\r\n\r\n                                <div\r\n                                    onClick={() => history.push(`/admin/category/${productDetailState.data['primaryCategory']['id']}`)}\r\n                                    className='brandDetailContainer__brand'>\r\n                                    <div className='brandDetailContainer__brand-coverbox'>\r\n                                        <img src={productDetailState.data['primaryCategory']['cover'] && productDetailState.data['primaryCategory']['cover']} alt=\"\" />\r\n                                    </div>\r\n                                    <div className='brandDetailContainer__brand-info'>\r\n                                        <h2>\r\n                                            {productDetailState.data['primaryCategory']['name']}\r\n                                        </h2>\r\n                                        <h3>\r\n                                            {productDetailState.data['primaryCategory']['description']}\r\n                                        </h3>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div style={{\r\n                                    marginBottom: \"25px\"\r\n                                }}></div>\r\n                            </>\r\n                        )}\r\n\r\n                    </>\r\n\r\n                )}\r\n\r\n            </Skeleton>\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NewBrandDetail\r\n","import React, { useState } from 'react';\r\nimport { Modal, notification } from 'antd';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport { useHandleFetch } from '../../hooks';\r\nimport { CheckCircleOutlined, PlusOutlined, EditOutlined, DeleteOutlined, EditFilled } from '@ant-design/icons';\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n\tname: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t\tmessage: message || 'Tag Updated',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t\tmessage: message || 'Something Went Wrong',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n};\r\n\r\n\r\n\r\ninterface Props {\r\n\tcategory: any;\r\n\tsetvisible: any;\r\n\tvisible: any;\r\n\ttagList: any;\r\n\tsetTagList: any;\r\n\r\n}\r\n\r\nconst QuickEdit = ({ category, setvisible, visible, tagList, setTagList }: Props) => {\r\n\tconst [updateTagState, handleUpdateCategoryFetch] = useHandleFetch({}, 'updateTag');\r\n\r\n\tconst handleSubmit = async (values: any, actions: any) => {\r\n\t\tconst updateTagRes = await handleUpdateCategoryFetch({\r\n\t\t\turlOptions: {\r\n\t\t\t\tplaceHolders: {\r\n\t\t\t\t\tid: values.id,\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tbody: {\r\n\t\t\t\tname: values.name,\r\n\t\t\t\tdescription: values.description,\r\n\t\t\t},\r\n\t\t});\r\n\r\n\t\t// @ts-ignore\r\n\t\tif (updateTagRes && updateTagRes.status === 'ok') {\r\n\t\t\topenSuccessNotification();\r\n\r\n\t\t\tconst positionInTag = () => {\r\n\t\t\t\treturn tagList.map(item => item.id).indexOf(category.id);\r\n\t\t\t}\r\n\r\n\t\t\tconst index = positionInTag();\r\n\r\n\t\t\t// @ts-ignore\r\n\t\t\tconst updatedItem = Object.assign({}, tagList[index], { ...updateTagRes });\r\n\t\t\tconst updateTagList = [...tagList.slice(0, index), updatedItem, ...tagList.slice(index + 1)];\r\n\t\t\tsetTagList(updateTagList);\r\n\r\n\t\t}\r\n\t\telse {\r\n\t\t\topenErrorNotification();\r\n\t\t}\r\n\r\n\t\tactions.setSubmitting(false);\r\n\t\tsetvisible(false)\r\n\t};\r\n\r\n\r\n\tconst handleCancel = (e: any) => {\r\n\t\tsetvisible(false);\r\n\t};\r\n\r\n\r\n\tconst getisSubmitButtonDisabled = (values, isValid) => {\r\n\t\tif (!values.name || !isValid) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\treturn (\r\n\t\t<Formik\r\n\t\t\tonSubmit={(values, actions) => handleSubmit(values, actions)}\r\n\t\t\tvalidationSchema={validationSchema}\r\n\t\t\tvalidateOnBlur={false}\r\n\t\t\tenableReinitialize={true}\r\n\t\t\tinitialValues={\r\n\t\t\t\t{ ...category }\r\n\t\t\t}\r\n\t\t>\r\n\t\t\t{({\r\n\t\t\t\thandleChange,\r\n\t\t\t\tvalues,\r\n\t\t\t\thandleSubmit,\r\n\t\t\t\terrors,\r\n\t\t\t\tisValid,\r\n\t\t\t\tisSubmitting,\r\n\t\t\t\ttouched,\r\n\t\t\t\thandleBlur,\r\n\t\t\t\tsetFieldTouched,\r\n\t\t\t\thandleReset,\r\n\t\t\t}) => (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<Modal\r\n\t\t\t\t\t\t\ttitle=\"Quick Edit\"\r\n\t\t\t\t\t\t\tvisible={visible}\r\n\t\t\t\t\t\t\tonOk={(e: any) => handleSubmit(e)}\r\n\t\t\t\t\t\t\tonCancel={handleCancel}\r\n\t\t\t\t\t\t\tokText='Update'\r\n\t\t\t\t\t\t\tokButtonProps={{\r\n\t\t\t\t\t\t\t\tloading: isSubmitting,\r\n\t\t\t\t\t\t\t\thtmlType: \"submit\",\r\n\t\t\t\t\t\t\t\tdisabled: getisSubmitButtonDisabled(values, isValid)\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\tlabel='Title'\r\n\t\t\t\t\t\t\t\tvalue={values.name}\r\n\t\t\t\t\t\t\t\tname='name'\r\n\t\t\t\t\t\t\t\tisError={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateTagState.error['error']['name'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateTagState.error['error']['name'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('name');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\tlabel='Description'\r\n\t\t\t\t\t\t\t\tvalue={values.description}\r\n\t\t\t\t\t\t\t\tname='description'\r\n\t\t\t\t\t\t\t\tisError={(touched.description && errors.description) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateTagState.error['error']['description'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.description && errors.description) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateTagState.error['error']['description'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('description');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</Modal>\r\n\r\n\t\t\t\t\t</>\r\n\t\t\t\t)}\r\n\t\t</Formik>\r\n\t);\r\n};\r\n\r\n\r\nexport default QuickEdit;\r\n","import React, { useState } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n\r\nimport { useHandleFetch } from '../../hooks';\r\n// import third party ui lib\r\nimport { Upload, message, Switch, Select, Button, notification, Modal, Tooltip } from 'antd';\r\n\r\nimport {\r\n    FileOutlined,\r\n    InboxOutlined,\r\n    FileAddOutlined,\r\n    DeleteOutlined,\r\n    CheckCircleOutlined,\r\n    CloseOutlined,\r\n    CheckOutlined,\r\n    InfoCircleOutlined,\r\n    PlusOutlined,\r\n    FileImageFilled\r\n} from '@ant-design/icons';\r\n\r\n\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport MediaLibrary from \"../../components/MediaLibrary\";\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    name: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Tag Created',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n    notification.error({\r\n        message: message || 'Something Went Wrong',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst initialValues = {\r\n    name: '',\r\n    description: '',\r\n}\r\n\r\n\r\n\r\ninterface Props {\r\n    addNewCategoryVisible?: any;\r\n    setAddNewCategoryVisible?: any;\r\n    tagList?: any;\r\n    setTagList?: any;\r\n\r\n}\r\n\r\nconst AddNewBrand = ({ addNewCategoryVisible, setAddNewCategoryVisible, tagList, setTagList }: Props) => {\r\n\r\n    const [addTagState, handleAddTagFetch] = useHandleFetch({}, 'addTag');\r\n    const [myImages, setmyImages] = useState(false);\r\n    const [visibleMedia, setvisibleMedia] = useState(false);\r\n    const [coverImageId, setCoverImageId] = useState('');\r\n\r\n\r\n    const handleSubmit = async (values: any, actions: any) => {\r\n        const addTagRes = await handleAddTagFetch({\r\n            urlOptions: {\r\n                placeHolders: {\r\n                    id: values.id,\r\n                }\r\n            },\r\n            body: {\r\n                name: values.name.trim(),\r\n                description: values.description,\r\n            },\r\n        });\r\n\r\n        // @ts-ignore\r\n        if (addTagRes && addTagRes.status === 'ok') {\r\n            openSuccessNotification();\r\n\r\n            setTagList([...tagList, {\r\n                id: addTagRes['id'] || '',\r\n                key: addTagRes['id'] || '',\r\n                name: addTagRes['name'] || '',\r\n                description: addTagRes['description'] || '',\r\n            }])\r\n            actions.resetForm();\r\n            setAddNewCategoryVisible(false);\r\n        }\r\n        else {\r\n            openErrorNotification();\r\n        }\r\n\r\n\r\n        actions.setSubmitting(false);\r\n\r\n    };\r\n\r\n\r\n    const handleCancel = (e: any) => {\r\n        setAddNewCategoryVisible(false);\r\n    };\r\n\r\n\r\n    const getisSubmitButtonDisabled = (values, isValid) => {\r\n        if (!values.name || !isValid) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n\r\n\r\n\r\n    const handleImagesDelete = (id) => {\r\n        // @ts-ignore\r\n        const newImages = myImages && myImages.filter(image => {\r\n            return image.id !== id;\r\n        })\r\n\r\n        setmyImages(newImages);\r\n    }\r\n\r\n\r\n\r\n\r\n    return (\r\n        <Formik\r\n            onSubmit={(values, actions) => handleSubmit(values, actions)}\r\n            validationSchema={validationSchema}\r\n            validateOnBlur={false}\r\n            enableReinitialize={true}\r\n            initialValues={\r\n                { ...initialValues }\r\n            }\r\n        >\r\n            {({\r\n                handleChange,\r\n                values,\r\n                handleSubmit,\r\n                errors,\r\n                isValid,\r\n                isSubmitting,\r\n                touched,\r\n                handleBlur,\r\n                setFieldTouched,\r\n                handleReset,\r\n            }) => (\r\n                    <>\r\n                        <Modal\r\n                            style={{\r\n                                top: '40px'\r\n                            }}\r\n                            title=\"Add New Tag\"\r\n                            visible={addNewCategoryVisible}\r\n                            onOk={(e: any) => handleSubmit(e)}\r\n                            onCancel={handleCancel}\r\n                            okText='Create'\r\n                            okButtonProps={{\r\n                                loading: isSubmitting,\r\n                                htmlType: \"submit\",\r\n                                disabled: getisSubmitButtonDisabled(values, isValid)\r\n                            }}\r\n                        >\r\n                            <Input\r\n                                label='Title'\r\n                                value={values.name}\r\n                                name='name'\r\n                                isError={(touched.name && errors.name) ||\r\n                                    (!isSubmitting && addTagState.error['error']['name'])}\r\n\r\n                                errorString={(touched.name && errors.name) ||\r\n                                    (!isSubmitting && addTagState.error['error']['name'])}\r\n                                onChange={(e: any) => {\r\n                                    handleChange(e);\r\n                                    setFieldTouched('name');\r\n                                }}\r\n                            />\r\n                            <TextArea\r\n                                label='Description'\r\n                                value={values.description}\r\n                                name='description'\r\n                                isError={(touched.description && errors.description) ||\r\n                                    (!isSubmitting && addTagState.error['error']['description'])}\r\n\r\n                                errorString={(touched.description && errors.description) ||\r\n                                    (!isSubmitting && addTagState.error['error']['description'])}\r\n                                onChange={(e: any) => {\r\n                                    handleChange(e);\r\n                                    setFieldTouched('description');\r\n                                }}\r\n                            />\r\n\r\n                        </Modal>\r\n\r\n                        <MediaLibrary\r\n                            setvisible={setvisibleMedia}\r\n                            visible={visibleMedia}\r\n                            setmyImages={setmyImages}\r\n                            myImages={myImages}\r\n                            isModalOpenForImages={true}\r\n\r\n                        />\r\n                    </>\r\n                )}\r\n        </Formik>\r\n\r\n\r\n\r\n\r\n    );\r\n};\r\n\r\nexport default AddNewBrand;\r\n","import React, { useState, useEffect } from 'react';\r\n\r\n// import third party ui lib\r\nimport { Empty, Popconfirm, Upload, message, Switch, Select, Button, notification, Table, Space, Input as CoolInput, Tooltip, Modal } from 'antd';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { useHistory } from 'react-router';\r\n\r\n\r\n\r\nimport {\r\n\tFileOutlined,\r\n\tInboxOutlined,\r\n\tRadiusUpleftOutlined,\r\n\tRadiusUprightOutlined,\r\n\tRadiusBottomleftOutlined,\r\n\tRadiusBottomrightOutlined,\r\n\tPlusOutlined,\r\n\tDeleteOutlined,\r\n\tEditOutlined,\r\n\tCheckCircleOutlined\r\n} from '@ant-design/icons';\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n\r\n\r\n/// import hooks\r\nimport { useFetch, useHandleFetch } from \"../../hooks\";\r\n\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport { DataTableSkeleton } from \"../../components/Placeholders\";\r\nimport QuickEdit from \"./QuickEdit\"\r\nimport AddNewTag from \"./AddNewTag\"\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t\tmessage: message || 'Tag Created',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n\tnotification.error({\r\n\t\tmessage: message || 'Something Went Wrong',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n};\r\n\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n\tname: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\n\r\nconst initialValues = {\r\n\tname: '',\r\n\tdescription: ''\r\n}\r\n\r\n\r\nconst { Column, ColumnGroup } = Table;\r\nconst { Search } = CoolInput;\r\n\r\n\r\n\r\nconst MyTable = ({ data, setTagList }) => {\r\n\tconst [visible, setvisible] = useState(false);\r\n\tconst [activeCategoryForEdit, setactiveCategoryForEdit] = useState(false);\r\n\tconst [deleteTagState, handleDeleteTagFetch] = useHandleFetch({}, 'deleteTag');\r\n\r\n\tconst history = useHistory();\r\n\r\n\r\n\tconst handleDeleteTag = async (id) => {\r\n\t\tconst deleteTagRes = await handleDeleteTagFetch({\r\n\t\t\turlOptions: {\r\n\t\t\t\tplaceHolders: {\r\n\t\t\t\t\tid,\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\r\n\r\n\t\t// @ts-ignore\r\n\t\tif (deleteTagRes && deleteTagRes.status === 'ok') {\r\n\t\t\topenSuccessNotification('Deleted Tag');\r\n\t\t\tconst newtagList = data.filter(item => item.id !== id);\r\n\t\t\tsetTagList(newtagList);\r\n\t\t}\r\n\r\n\r\n\t}\r\n\r\n\r\n\tconst handleOk = (e: any) => {\r\n\t\tsetvisible(false);\r\n\r\n\t};\r\n\r\n\tconst handleCancel = (e: any) => {\r\n\t\tsetvisible(false);\r\n\t};\r\n\r\n\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Table\r\n\t\t\t\t// expandable={{\r\n\t\t\t\t//     expandedRowRender: record => <p style={{ margin: 0 }}>{record.name}</p>,\r\n\t\t\t\t//     rowExpandable: record => record.name !== 'Not Expandable',\r\n\t\t\t\t//   }}\r\n\t\t\t\t// bordered={true}\r\n\t\t\t\tsize='small'\r\n\t\t\t\t// pagination={false}\r\n\t\t\t\tdataSource={data}\r\n\t\t\t>\r\n\r\n\t\t\t\t<Column\r\n\t\t\t\t\ttitle=\"Name\"\r\n\t\t\t\t\tdataIndex=\"name\"\r\n\t\t\t\t\tkey=\"id\"\r\n\t\t\t\t\tclassName='classnameofthecolumn'\r\n\t\t\t\t\trender={(text, record: any) => (\r\n\t\t\t\t\t\t<>\r\n\r\n\t\t\t\t\t\t\t<h4\r\n\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\thistory.push(`/admin/tag/${record.id}`)\r\n\t\t\t\t\t\t\t\t\t// setBrandDetailVisible(true);\r\n\t\t\t\t\t\t\t\t\tsetactiveCategoryForEdit(record)\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\tfontWeight: 400,\r\n\t\t\t\t\t\t\t\t\tcolor: '#555',\r\n\t\t\t\t\t\t\t\t\tcursor: 'pointer'\r\n\r\n\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t{text}\r\n\t\t\t\t\t\t\t</h4>\r\n\r\n\r\n\t\t\t\t\t\t</>\r\n\t\t\t\t\t)}\r\n\t\t\t\t/>\r\n\r\n\t\t\t\t<Column\r\n\t\t\t\t\ttitle=\"Description\"\r\n\t\t\t\t\tdataIndex=\"description\"\r\n\t\t\t\t\tkey=\"id\"\r\n\t\t\t\t\tclassName='classnameofthecolumn'\r\n\r\n\t\t\t\t/>\r\n\r\n\r\n\t\t\t\t<Column\r\n\t\t\t\t\ttitle=\"Product\"\r\n\t\t\t\t\tdataIndex=\"productCount\"\r\n\t\t\t\t\tkey=\"id\"\r\n\t\t\t\t\tclassName='classnameofthecolumn'\r\n\t\t\t\t/>\r\n\r\n\t\t\t\t<Column\r\n\r\n\t\t\t\t\tclassName='classnameofthecolumn'\r\n\t\t\t\t\ttitle=\"\"\r\n\t\t\t\t\tkey=\"action\"\r\n\t\t\t\t\talign='right'\r\n\t\t\t\t\trender={(text, record: any) => (\r\n\t\t\t\t\t\t<Space size=\"middle\">\r\n\t\t\t\t\t\t\t<a href='##'>\r\n\t\t\t\t\t\t\t\t<Tooltip placement=\"top\" title='Quick Edit Tag'>\r\n\t\t\t\t\t\t\t\t\t<span className='iconSize' onClick={() => {\r\n\t\t\t\t\t\t\t\t\t\tsetvisible(true)\r\n\t\t\t\t\t\t\t\t\t\tsetactiveCategoryForEdit(record);\r\n\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t<EditOutlined />\r\n\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t\t</a>\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t<Popconfirm\r\n\t\t\t\t\t\t\t\tonConfirm={() => handleDeleteTag(record.id)}\r\n\t\t\t\t\t\t\t\ttitle=\"Are you sure？\" okText=\"Yes\" cancelText=\"No\">\r\n\t\t\t\t\t\t\t\t<span\r\n\t\t\t\t\t\t\t\t\tclassName='iconSize iconSize-danger'\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t<DeleteOutlined />\r\n\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t</Popconfirm>\r\n\t\t\t\t\t\t</Space>\r\n\t\t\t\t\t)}\r\n\t\t\t\t/>\r\n\t\t\t</Table>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\t\t\t{activeCategoryForEdit && <QuickEdit\r\n\t\t\t\ttagList={data}\r\n\t\t\t\tsetTagList={setTagList}\r\n\t\t\t\tsetvisible={setvisible}\r\n\t\t\t\tvisible={visible}\r\n\t\t\t\tcategory={activeCategoryForEdit} />}\r\n\t\t</>\r\n\t)\r\n}\r\n\r\n\r\n\r\n\r\ninterface Props { }\r\n\r\nconst TagList = ({ }: Props) => {\r\n\r\n\r\n\tconst [tagList, setTagList] = useState([]);\r\n\r\n\tconst [tagState, handleTagListFetch] = useHandleFetch({}, 'tagList');\r\n\r\n\r\n\tuseEffect(() => {\r\n\t\tconst setTags = async () => {\r\n\t\t\tconst tags = await handleTagListFetch({});\r\n\t\t\t// @ts-ignore\r\n\t\t\tsetTagList(tags);\r\n\t\t}\r\n\t\tsetTags();\r\n\t}, [])\r\n\r\n\r\n\r\n\tconst [addTagState, handleAddTagFetch] = useHandleFetch({}, 'addTag');\r\n\tconst [addNewCategoryVisible, setAddNewCategoryVisible] = useState(false);\r\n\r\n\tconst handleSubmit = async (values: any, actions: any) => {\r\n\t\tconst addTagRes = await handleAddTagFetch({\r\n\t\t\turlOptions: {\r\n\t\t\t\tplaceHolders: {\r\n\t\t\t\t\tid: values.id,\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tbody: {\r\n\t\t\t\tname: values.name.trim(),\r\n\t\t\t\tdescription: values.description,\r\n\t\t\t},\r\n\t\t});\r\n\r\n\t\t// @ts-ignore\r\n\t\tif (addTagRes && addTagRes.status === 'ok') {\r\n\t\t\topenSuccessNotification();\r\n\r\n\t\t\tsetTagList([...tagList, {\r\n\t\t\t\tid: addTagRes['id'] || '',\r\n\t\t\t\tkey: addTagRes['id'] || '',\r\n\t\t\t\tname: addTagRes['name'] || '',\r\n\t\t\t\tdescription: addTagRes['description'] || '',\r\n\t\t\t}])\r\n\t\t\tactions.resetForm();\r\n\t\t}\r\n\t\tactions.setSubmitting(false);\r\n\r\n\t};\r\n\r\n\r\n\r\n\tconst getisSubmitButtonDisabled = (values, isValid) => {\r\n\t\tif (!values.name || !isValid) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\r\n\tconst handleOkAddNewCategory = (e: any) => {\r\n\t\tsetAddNewCategoryVisible(false);\r\n\r\n\t};\r\n\r\n\tconst handleCancelAddNewCategory = (e: any) => {\r\n\t\tsetAddNewCategoryVisible(false);\r\n\t};\r\n\r\n\tconst handleSearch = (value) => {\r\n\t\tif (tagState.data.length > 0) {\r\n\t\t\tconst newTagList = tagState.data.filter(item => item.name.toLowerCase().includes(value.toLowerCase()));\r\n\t\t\tsetTagList(newTagList);\r\n\t\t}\r\n\r\n\t}\r\n\r\n\treturn (\r\n\t\t<>\r\n\r\n\t\t\t<div className='categoryListContainer'>\r\n\t\t\t\t<div className='categoryListContainer__header'>\r\n\t\t\t\t\t<div className='categoryListContainer__header-searchBar-tag'>\r\n\t\t\t\t\t\t<h2 className='categoryListContainer__header-title'>\r\n\t\t\t\t\t\t\tTags\r\n            </h2>\r\n\r\n\r\n\t\t\t\t\t\t<Search\r\n\t\t\t\t\t\t\tenterButton={false}\r\n\t\t\t\t\t\t\tclassName='searchbarClassName'\r\n\t\t\t\t\t\t\tplaceholder=\"search tags..\"\r\n\t\t\t\t\t\t\tonSearch={value => handleSearch(value)}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\t// type=\"primary\"\r\n\t\t\t\t\t\tclassName='btnPrimaryClassNameoutline'\r\n\t\t\t\t\t\ticon={<PlusOutlined />}\r\n\t\t\t\t\t\tonClick={() => setAddNewCategoryVisible(true)}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tAdd New\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className='categoryListContainer__categoryList'>\r\n\t\t\t\t\t{tagState.done && tagList.length > 0 && <MyTable\r\n\t\t\t\t\t\tsetTagList={setTagList}\r\n\t\t\t\t\t\tdata={tagList} />}\r\n\t\t\t\t\t{tagState.isLoading && <DataTableSkeleton />}\r\n\r\n\r\n\t\t\t\t\t{tagState.done && !(tagList.length > 0) && (\r\n\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\tmarginTop: '50px'\r\n\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t<Empty description='No Tags found' image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\r\n\t\t\t<AddNewTag\r\n\t\t\t\ttagList={tagList}\r\n\t\t\t\tsetTagList={setTagList}\r\n\t\t\t\taddNewCategoryVisible={addNewCategoryVisible}\r\n\t\t\t\tsetAddNewCategoryVisible={setAddNewCategoryVisible}\r\n\t\t\t/>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default TagList;\r\n","import React, { useState } from 'react';\r\nimport { Modal, notification } from 'antd';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport { useHandleFetch } from '../../hooks';\r\nimport { CheckCircleOutlined, PlusOutlined, EditOutlined, DeleteOutlined, EditFilled } from '@ant-design/icons';\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    name: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n    description: Yup.string().label('Description').required('Description is required')\r\n});\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Tag Updated',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Something Went Wrong',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n    });\r\n};\r\n\r\n\r\ninterface Props {\r\n    tagEditVisible?: any;\r\n    setTagEditVisible?: any;\r\n    tagDetailData?: any;\r\n}\r\n\r\nconst QuickEdit = ({ tagEditVisible, setTagEditVisible, tagDetailData }: Props) => {\r\n    const [updateTagState, handleUpdateCategoryFetch] = useHandleFetch({}, 'updateTag');\r\n\r\n    const handleSubmit = async (values: any, actions: any) => {\r\n        const updateTagRes = await handleUpdateCategoryFetch({\r\n            urlOptions: {\r\n                placeHolders: {\r\n                    id: values.id,\r\n                }\r\n            },\r\n            body: {\r\n                name: values.name,\r\n                description: values.description,\r\n            },\r\n        });\r\n\r\n        // @ts-ignore\r\n        if (updateTagRes && updateTagRes.status === 'ok') {\r\n            openSuccessNotification();\r\n\r\n            // const positionInTag = () => {\r\n            //     return tagList.map(item => item.id).indexOf(category.id);\r\n            // }\r\n\r\n            // const index = positionInTag();\r\n\r\n            // const updatedItem = Object.assign({}, tagList[index], { ...updateTagRes });\r\n            // const updateTagList = [...tagList.slice(0, index), updatedItem, ...tagList.slice(index + 1)];\r\n            // setTagList(updateTagList);\r\n\r\n        }\r\n        else {\r\n            openErrorNotification();\r\n        }\r\n\r\n        actions.setSubmitting(false);\r\n        setTagEditVisible(false)\r\n    };\r\n\r\n\r\n    const handleCancel = (e: any) => {\r\n        setTagEditVisible(false);\r\n    };\r\n\r\n\r\n    const getisSubmitButtonDisabled = (values, isValid) => {\r\n        if (!values.name || !values.description || !isValid) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    return (\r\n        <Formik\r\n            onSubmit={(values, actions) => handleSubmit(values, actions)}\r\n            validationSchema={validationSchema}\r\n            validateOnBlur={false}\r\n            enableReinitialize={true}\r\n            initialValues={\r\n                { ...tagDetailData }\r\n            }\r\n        >\r\n            {({\r\n                handleChange,\r\n                values,\r\n                handleSubmit,\r\n                errors,\r\n                isValid,\r\n                isSubmitting,\r\n                touched,\r\n                handleBlur,\r\n                setFieldTouched,\r\n                handleReset,\r\n            }) => (\r\n                    <>\r\n                        <Modal\r\n                            title=\"Tag Edit\"\r\n                            visible={tagEditVisible}\r\n                            onOk={(e: any) => handleSubmit(e)}\r\n                            onCancel={handleCancel}\r\n                            okText='Update'\r\n                            okButtonProps={{\r\n                                loading: isSubmitting,\r\n                                htmlType: \"submit\",\r\n                                disabled: getisSubmitButtonDisabled(values, isValid)\r\n                            }}\r\n                        >\r\n                            <Input\r\n                                label='Title'\r\n                                value={values.name}\r\n                                name='name'\r\n                                isError={(touched.name && errors.name) ||\r\n                                    (!isSubmitting && updateTagState.error['error']['name'])}\r\n\r\n                                errorString={(touched.name && errors.name) ||\r\n                                    (!isSubmitting && updateTagState.error['error']['name'])}\r\n                                onChange={(e: any) => {\r\n                                    handleChange(e);\r\n                                    setFieldTouched('name');\r\n                                }}\r\n                            />\r\n                            <TextArea\r\n                                label='Description'\r\n                                value={values.description}\r\n                                name='description'\r\n                                isError={(touched.description && errors.description) ||\r\n                                    (!isSubmitting && updateTagState.error['error']['description'])}\r\n\r\n                                errorString={(touched.description && errors.description) ||\r\n                                    (!isSubmitting && updateTagState.error['error']['description'])}\r\n                                onChange={(e: any) => {\r\n                                    handleChange(e);\r\n                                    setFieldTouched('description');\r\n                                }}\r\n                            />\r\n                        </Modal>\r\n\r\n                    </>\r\n                )}\r\n        </Formik>\r\n    );\r\n};\r\n\r\n\r\nexport default QuickEdit;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useParams, useHistory } from \"react-router\";\r\n\r\n\r\n// import hooks\r\nimport { useHandleFetch } from \"../../hooks\";\r\n\r\n// import lib\r\nimport {\r\n    FileOutlined,\r\n    InboxOutlined,\r\n    RadiusUpleftOutlined,\r\n    RadiusUprightOutlined,\r\n    RadiusBottomleftOutlined,\r\n    RadiusBottomrightOutlined,\r\n    PlusOutlined,\r\n    DeleteOutlined,\r\n    EditOutlined,\r\n    CheckCircleOutlined\r\n} from '@ant-design/icons';\r\n\r\nimport { Skeleton, Empty, Popconfirm, Upload, message, Switch, Select, Button, notification, Table, Space, Input as CoolInput, Tooltip, Modal } from 'antd';\r\n\r\n\r\n// import components\r\nimport { DataTableSkeleton } from \"../../components/Placeholders\";\r\nimport TagEdit from \"./TagEdit\";\r\n\r\n\r\nconst { Column, ColumnGroup } = Table;\r\nconst { Search } = CoolInput;\r\n\r\n\r\ninterface Props {\r\n    productRecord?: any;\r\n}\r\n\r\nconst NewBrandDetail = (props: Props) => {\r\n    const [tagDetailState, handleTagDetailFetch] = useHandleFetch({}, 'tagDetail');\r\n    const [tagProductsState, handleTagProductsFetch] = useHandleFetch({}, 'tagProducts');\r\n    const [tagEditVisible, setTagEditVisible] = useState(false);\r\n\r\n\r\n    const params = useParams();\r\n    const history = useHistory();\r\n    const tagId = params['id'];\r\n\r\n    useEffect(() => {\r\n\r\n        const getBrandDetail = async () => {\r\n            await handleTagDetailFetch({\r\n                urlOptions: {\r\n                    placeHolders: {\r\n                        id: tagId\r\n                    }\r\n                }\r\n            })\r\n        };\r\n\r\n        getBrandDetail();\r\n\r\n    }, [tagId]);\r\n\r\n    useEffect(() => {\r\n        const getTagProducts = async () => {\r\n            await handleTagProductsFetch({\r\n                urlOptions: {\r\n                    placeHolders: {\r\n                        id: tagId\r\n                    }\r\n                }\r\n            })\r\n        };\r\n\r\n        getTagProducts();\r\n\r\n    }, [tagId]);\r\n\r\n\r\n\r\n\r\n    console.log('tagProductsState', tagProductsState);\r\n\r\n    console.log('brandParams', params);\r\n\r\n\r\n    return (\r\n        <div className='brandDetailContainer'>\r\n            <div className='brandDetailContainer__heading'>\r\n                <h3>\r\n                    Tag Detail\r\n                </h3>\r\n\r\n                {tagDetailState.done && tagDetailState.data && (Object.keys(tagDetailState.data).length > 0) && (\r\n                    <>\r\n                        <TagEdit\r\n                            tagEditVisible={tagEditVisible}\r\n                            setTagEditVisible={setTagEditVisible}\r\n                            tagDetailData={tagDetailState.data}\r\n                        />\r\n                        <Button\r\n                            onClick={() => setTagEditVisible(true)}\r\n                            type='link'\r\n                            icon={<EditOutlined />}\r\n                        >\r\n                            Edit\r\n                      </Button>\r\n                    </>\r\n                )}\r\n            </div>\r\n            <Skeleton\r\n                paragraph={{ rows: 2 }}\r\n                loading={tagDetailState.isLoading}>\r\n                {tagDetailState.done && tagDetailState.data && !(Object.keys(tagDetailState.data).length > 0) && (\r\n                    <Empty description='No Tag found' image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n                )}\r\n\r\n                {tagDetailState.done && tagDetailState.data && (Object.keys(tagDetailState.data).length > 0) && (\r\n                    <div className='brandDetailContainer__header'>\r\n\r\n                        <div className='brandDetailContainer__header-info'>\r\n                            <h2>\r\n                                {tagDetailState.data['name']}\r\n                            </h2>\r\n                            <h3>\r\n                                {tagDetailState.data['description']}\r\n                            </h3>\r\n                            {tagDetailState.data['url'] && (\r\n                                <h3>\r\n                                    URL:\r\n                                    <span>\r\n                                        {tagDetailState.data['url']}\r\n                                    </span>\r\n\r\n                                </h3>\r\n                            )}\r\n                        </div>\r\n                    </div>\r\n                )}\r\n\r\n            </Skeleton>\r\n\r\n            <div className='brandDetailContainer__heading'>\r\n                <h3>\r\n                    Products\r\n                </h3>\r\n            </div>\r\n            <div className='brandDetailContainer__body'>\r\n                {tagProductsState.isLoading && <DataTableSkeleton />}\r\n                {tagProductsState.done && !(tagProductsState.data.length > 0) && (\r\n                    <div style={{\r\n                        marginTop: '100px'\r\n                    }}>\r\n                        <Empty description='No Products exists for this tag' image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n                    </div>\r\n                )}\r\n\r\n                {tagProductsState.done && tagProductsState.data && tagProductsState.data.length > 0 && (\r\n                    <>\r\n                        <Table\r\n                            style={{\r\n                                paddingTop: '10px',\r\n                                borderRadius: '5px !important',\r\n                                overflow: 'hidden',\r\n                                boxShadow: '0 0.125rem 0.625rem rgba(227, 231, 250, 0.3), 0 0.0625rem 0.125rem rgba(206, 220, 233, 0.4)'\r\n                            }}\r\n                            // expandable={{\r\n                            //     expandedRowRender: record => <p style={{ margin: 0 }}>{record.name}</p>,\r\n                            //     rowExpandable: record => record.name !== 'Not Expandable',\r\n                            //   }}\r\n                            // bordered={true}\r\n                            size='small'\r\n                            // pagination={false}\r\n                            dataSource={tagProductsState.data}\r\n                            tableLayout={'auto'}\r\n                            onHeaderRow={column => {\r\n                                return {\r\n                                    style: {\r\n                                        color: 'red !important'\r\n                                    }\r\n\r\n                                };\r\n                            }}\r\n                        >\r\n                            <Column\r\n                                title=\"\"\r\n                                dataIndex=\"cover\"\r\n                                key=\"id\"\r\n                                width={'80px'}\r\n\r\n                                className='classnameofthecolumn'\r\n\r\n                                render={(cover, record: any) => (\r\n                                    <>\r\n                                        <img\r\n                                            onClick={() => {\r\n                                                history.push(`/admin/product/${record.id}`)\r\n                                            }}\r\n                                            src={cover} alt='cover img' style={{\r\n                                                height: '40px',\r\n                                                width: '40px',\r\n                                                objectFit: \"contain\",\r\n                                                borderRadius: '3px',\r\n                                                cursor: 'pointer'\r\n                                            }} />\r\n\r\n\r\n\r\n\r\n                                    </>\r\n                                )}\r\n                            />\r\n\r\n                            <Column\r\n                                title=\"Name\"\r\n                                dataIndex=\"name\"\r\n                                key=\"id\"\r\n                                className='classnameofthecolumn'\r\n                                render={(text, record: any) => (\r\n                                    <>\r\n                                        <h4\r\n                                            onClick={() => {\r\n                                                history.push(`/admin/product/${record.id}`)\r\n                                            }}\r\n                                            style={{\r\n                                                fontWeight: 400,\r\n                                                color: '#555',\r\n                                                cursor: 'pointer'\r\n\r\n                                            }}>\r\n                                            {text}\r\n                                        </h4>\r\n\r\n\r\n                                    </>\r\n                                )}\r\n\r\n                            />\r\n\r\n                            <Column\r\n                                title=\"Offer Price\"\r\n                                dataIndex=\"offerPrice\"\r\n                                key=\"id\"\r\n                                className='classnameofthecolumn'\r\n\r\n                            />\r\n\r\n\r\n                            <Column\r\n                                title=\"Price\"\r\n                                dataIndex=\"price\"\r\n                                key=\"id\"\r\n                                className='classnameofthecolumn'\r\n\r\n                            />\r\n\r\n                        </Table>\r\n                    </>\r\n                )}\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NewBrandDetail\r\n","import React, { useState } from 'react';\r\nimport { Modal, notification } from 'antd';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport { useHandleFetch } from '../../hooks';\r\nimport { CheckCircleOutlined, PlusOutlined, EditOutlined, DeleteOutlined, EditFilled } from '@ant-design/icons';\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    name: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n    description: Yup.string().label('Description').required('Description is required')\r\n});\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Coupon Updated',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Something Went Wrong',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n    });\r\n};\r\n\r\n\r\ninterface Props {\r\n    tagEditVisible?: any;\r\n    setTagEditVisible?: any;\r\n    tagDetailData?: any;\r\n}\r\n\r\nconst QuickEdit = ({ tagEditVisible, setTagEditVisible, tagDetailData }: Props) => {\r\n    const [updateTagState, handleUpdateCategoryFetch] = useHandleFetch({}, 'updateCoupon');\r\n\r\n    const handleSubmit = async (values: any, actions: any) => {\r\n        const updateTagRes = await handleUpdateCategoryFetch({\r\n            urlOptions: {\r\n                placeHolders: {\r\n                    id: values.id,\r\n                }\r\n            },\r\n            body: {\r\n                name: values.name,\r\n                description: values.description,\r\n            },\r\n        });\r\n\r\n        // @ts-ignore\r\n        if (updateTagRes && updateTagRes.status === 'ok') {\r\n            openSuccessNotification();\r\n\r\n            // const positionInTag = () => {\r\n            //     return tagList.map(item => item.id).indexOf(category.id);\r\n            // }\r\n\r\n            // const index = positionInTag();\r\n\r\n            // const updatedItem = Object.assign({}, tagList[index], { ...updateTagRes });\r\n            // const updateTagList = [...tagList.slice(0, index), updatedItem, ...tagList.slice(index + 1)];\r\n            // setTagList(updateTagList);\r\n\r\n        }\r\n        else {\r\n            openErrorNotification();\r\n        }\r\n\r\n        actions.setSubmitting(false);\r\n        setTagEditVisible(false)\r\n    };\r\n\r\n\r\n    const handleCancel = (e: any) => {\r\n        setTagEditVisible(false);\r\n    };\r\n\r\n\r\n    const getisSubmitButtonDisabled = (values, isValid) => {\r\n        if (!values.name || !values.description || !isValid) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    return (\r\n        <Formik\r\n            onSubmit={(values, actions) => handleSubmit(values, actions)}\r\n            validationSchema={validationSchema}\r\n            validateOnBlur={false}\r\n            enableReinitialize={true}\r\n            initialValues={\r\n                { ...tagDetailData }\r\n            }\r\n        >\r\n            {({\r\n                handleChange,\r\n                values,\r\n                handleSubmit,\r\n                errors,\r\n                isValid,\r\n                isSubmitting,\r\n                touched,\r\n                handleBlur,\r\n                setFieldTouched,\r\n                handleReset,\r\n            }) => (\r\n                    <>\r\n                        <Modal\r\n                            title=\"Coupon Edit\"\r\n                            visible={tagEditVisible}\r\n                            onOk={(e: any) => handleSubmit(e)}\r\n                            onCancel={handleCancel}\r\n                            okText='Update'\r\n                            okButtonProps={{\r\n                                loading: isSubmitting,\r\n                                htmlType: \"submit\",\r\n                                disabled: getisSubmitButtonDisabled(values, isValid)\r\n                            }}\r\n                        >\r\n                            <Input\r\n                                label='Title'\r\n                                value={values.name}\r\n                                name='name'\r\n                                isError={(touched.name && errors.name) ||\r\n                                    (!isSubmitting && updateTagState.error['error']['name'])}\r\n\r\n                                errorString={(touched.name && errors.name) ||\r\n                                    (!isSubmitting && updateTagState.error['error']['name'])}\r\n                                onChange={(e: any) => {\r\n                                    handleChange(e);\r\n                                    setFieldTouched('name');\r\n                                }}\r\n                            />\r\n                            <TextArea\r\n                                label='Description'\r\n                                value={values.description}\r\n                                name='description'\r\n                                isError={(touched.description && errors.description) ||\r\n                                    (!isSubmitting && updateTagState.error['error']['description'])}\r\n\r\n                                errorString={(touched.description && errors.description) ||\r\n                                    (!isSubmitting && updateTagState.error['error']['description'])}\r\n                                onChange={(e: any) => {\r\n                                    handleChange(e);\r\n                                    setFieldTouched('description');\r\n                                }}\r\n                            />\r\n                        </Modal>\r\n\r\n                    </>\r\n                )}\r\n        </Formik>\r\n    );\r\n};\r\n\r\n\r\nexport default QuickEdit;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useParams, useHistory } from \"react-router\";\r\n\r\n\r\n// import hooks\r\nimport { useHandleFetch } from \"../../hooks\";\r\n\r\n// import lib\r\nimport {\r\n    FileOutlined,\r\n    InboxOutlined,\r\n    RadiusUpleftOutlined,\r\n    RadiusUprightOutlined,\r\n    RadiusBottomleftOutlined,\r\n    RadiusBottomrightOutlined,\r\n    PlusOutlined,\r\n    DeleteOutlined,\r\n    EditOutlined,\r\n    CheckCircleOutlined\r\n} from '@ant-design/icons';\r\n\r\nimport { Skeleton, Empty, Button, notification, Table, Space, Input as CoolInput, Tooltip, Modal } from 'antd';\r\n\r\n\r\n// import components\r\nimport { DataTableSkeleton } from \"../../components/Placeholders\";\r\nimport CouponEdit from \"./CouponEdit\";\r\nimport CouponProducts from \"./CouponProducts\";\r\n\r\n\r\nconst { Column, ColumnGroup } = Table;\r\nconst { Search } = CoolInput;\r\n\r\n\r\ninterface Props {\r\n    productRecord?: any;\r\n}\r\n\r\nconst NewBrandDetail = (props: Props) => {\r\n    const [tagDetailState, handleTagDetailFetch] = useHandleFetch({}, 'couponDetail');\r\n    const [tagProductsState, handleTagProductsFetch] = useHandleFetch({}, 'tagProducts');\r\n    const [tagEditVisible, setTagEditVisible] = useState(false);\r\n\r\n\r\n    const params = useParams();\r\n    const history = useHistory();\r\n    const tagId = params['id'];\r\n\r\n    useEffect(() => {\r\n\r\n        const getBrandDetail = async () => {\r\n            await handleTagDetailFetch({\r\n                urlOptions: {\r\n                    placeHolders: {\r\n                        id: tagId\r\n                    }\r\n                }\r\n            })\r\n        };\r\n\r\n        getBrandDetail();\r\n\r\n    }, [tagId]);\r\n\r\n\r\n\r\n\r\n\r\n\r\n    console.log('tagDetailState', tagDetailState);\r\n\r\n    console.log('brandParams', params);\r\n\r\n\r\n    return (\r\n        <div className='brandDetailContainer'>\r\n            <div className='brandDetailContainer__heading'>\r\n                <h3>\r\n                    Coupon Detail\r\n                </h3>\r\n\r\n                {tagDetailState.done && tagDetailState.data && (Object.keys(tagDetailState.data).length > 0) && (\r\n                    <>\r\n                        <CouponEdit\r\n                            tagEditVisible={tagEditVisible}\r\n                            setTagEditVisible={setTagEditVisible}\r\n                            tagDetailData={tagDetailState.data}\r\n                        />\r\n                        <Button\r\n                            onClick={() => setTagEditVisible(true)}\r\n                            type='link'\r\n                            icon={<EditOutlined />}\r\n                        >\r\n                            Edit\r\n                      </Button>\r\n                    </>\r\n                )}\r\n            </div>\r\n            <Skeleton\r\n                paragraph={{ rows: 2 }}\r\n                loading={tagDetailState.isLoading}>\r\n                {tagDetailState.done && tagDetailState.data && !(Object.keys(tagDetailState.data).length > 0) && (\r\n                    <Empty description='No Coupon found' image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n                )}\r\n\r\n                {tagDetailState.done && tagDetailState.data && (Object.keys(tagDetailState.data).length > 0) && (\r\n                    <div className='brandDetailContainer__header'>\r\n\r\n                        <div className='brandDetailContainer__header-info'>\r\n                            <h2>\r\n                                {tagDetailState.data['name']}\r\n                            </h2>\r\n                            <h3>\r\n                                {tagDetailState.data['description']}\r\n                            </h3>\r\n                            {tagDetailState.data['code'] && (\r\n                                <h3>\r\n                                    CODE:\r\n                                    <span>\r\n                                        {tagDetailState.data['code']}\r\n                                    </span>\r\n\r\n                                </h3>\r\n                            )}\r\n                            {tagDetailState.data['code'] && (\r\n                                <h3>\r\n                                    CODE:\r\n                                    <span>\r\n                                        {tagDetailState.data['code']}\r\n                                    </span>\r\n\r\n                                </h3>\r\n                            )}\r\n\r\n                            {tagDetailState.data['amount'] && (\r\n                                <h3>\r\n                                    AMOUT:\r\n                                    <span>\r\n                                        {tagDetailState.data['amount']}\r\n                                    </span>\r\n\r\n                                </h3>\r\n                            )}\r\n\r\n                            {tagDetailState.data['freeDelivery'] && (\r\n                                <h3>\r\n                                    FREE DELIVERY:\r\n                                    <span>\r\n                                        {tagDetailState.data['freeDelivery']}\r\n                                    </span>\r\n\r\n                                </h3>\r\n                            )}\r\n\r\n\r\n                        </div>\r\n                    </div>\r\n                )}\r\n\r\n            </Skeleton>\r\n\r\n            {/* <div className='brandDetailContainer__heading'>\r\n                <h3>\r\n                    Ordered Products\r\n                </h3>\r\n            </div>\r\n            <div className='brandDetailContainer__body'>\r\n                {tagProductsState.isLoading && <DataTableSkeleton />}\r\n                {tagDetailState.done && tagDetailState.data && tagDetailState.data['orderedProducts'] && !(tagDetailState.data['orderedProducts'].length > 0) && (\r\n                    <div style={{\r\n                        marginTop: '100px'\r\n                    }}>\r\n                        <Empty description='No Products exists for this coupon' image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n                    </div>\r\n\r\n                )}\r\n\r\n                {tagDetailState.done && tagDetailState.data && Object.keys(tagDetailState.data).length > 0 && (\r\n                    <>\r\n                        {tagDetailState.data['orderedProducts'] && tagDetailState.data['orderedProducts'].length > 0 &&\r\n                            tagDetailState.data['orderedProducts'].map(product => {\r\n                                return (\r\n                                    <CouponProducts productId={product['_id']} />\r\n                                )\r\n                            })}\r\n                    </>\r\n                )}\r\n\r\n\r\n            </div> */}\r\n            {tagDetailState.done && tagDetailState.data && Object.keys(tagDetailState.data).length > 0 && tagDetailState.data['freeProducts'] && (\r\n                <div className='brandDetailContainer__heading'>\r\n                    <h3>\r\n                        Free Products\r\n                       </h3>\r\n                </div>\r\n            )\r\n            }\r\n\r\n            <div className='brandDetailContainer__body'>\r\n                {tagProductsState.isLoading && <DataTableSkeleton />}\r\n                {tagDetailState.done && tagDetailState.data && tagDetailState.data['freeProducts'] && !(tagDetailState.data['freeProducts'].length > 0) && (\r\n                    <div style={{\r\n                        marginTop: '100px'\r\n                    }}>\r\n                        <Empty description='No Products exists for this coupon' image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n                    </div>\r\n                )}\r\n\r\n                {tagDetailState.done && tagDetailState.data && Object.keys(tagDetailState.data).length > 0 && (\r\n                    <>\r\n                        {tagDetailState.data['freeProducts'] && tagDetailState.data['freeProducts'].length > 0 &&\r\n                            tagDetailState.data['freeProducts'].map(product => {\r\n                                return (\r\n                                    <CouponProducts\r\n                                        quantity={product.quantity}\r\n                                        productId={product['_id']} />\r\n                                )\r\n                            })}\r\n                    </>\r\n                )}\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NewBrandDetail\r\n","import React, { useState } from 'react';\r\nimport { Modal, notification } from 'antd';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport { useHandleFetch } from '../../hooks';\r\nimport { CheckCircleOutlined, PlusOutlined, EditOutlined, DeleteOutlined, EditFilled } from '@ant-design/icons';\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    name: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n    description: Yup.string().label('Description').required('Description is required')\r\n});\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Coupon Updated',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Something Went Wrong',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n    });\r\n};\r\n\r\n\r\ninterface Props {\r\n    category: any;\r\n    setvisible: any;\r\n    visible: any;\r\n    tagList: any;\r\n    setTagList: any;\r\n}\r\n\r\nconst ProductBundleQuickEdit = ({ category, setvisible, visible, tagList, setTagList }: Props) => {\r\n    const [updateTagState, handleUpdateCategoryFetch] = useHandleFetch({}, 'updateCoupon');\r\n\r\n    const handleSubmit = async (values: any, actions: any) => {\r\n        const updateTagRes = await handleUpdateCategoryFetch({\r\n            urlOptions: {\r\n                placeHolders: {\r\n                    id: values.id,\r\n                }\r\n            },\r\n            body: {\r\n                name: values.name,\r\n                description: values.description,\r\n            },\r\n        });\r\n\r\n        // @ts-ignore\r\n        if (updateTagRes && updateTagRes.status === 'ok') {\r\n            openSuccessNotification();\r\n\r\n            const positionInTag = () => {\r\n                return tagList.map(item => item.id).indexOf(category.id);\r\n            }\r\n\r\n            const index = positionInTag();\r\n\r\n            // @ts-ignore\r\n            const updatedItem = Object.assign({}, tagList[index], { ...updateTagRes });\r\n            const updateTagList = [...tagList.slice(0, index), updatedItem, ...tagList.slice(index + 1)];\r\n            setTagList(updateTagList);\r\n\r\n        }\r\n        else {\r\n            openErrorNotification();\r\n        }\r\n\r\n        actions.setSubmitting(false);\r\n        setvisible(false)\r\n    };\r\n\r\n\r\n    const handleCancel = (e: any) => {\r\n        setvisible(false);\r\n    };\r\n\r\n\r\n    const getisSubmitButtonDisabled = (values, isValid) => {\r\n        if (!values.name || !values.description || !isValid) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    return (\r\n        <Formik\r\n            onSubmit={(values, actions) => handleSubmit(values, actions)}\r\n            validationSchema={validationSchema}\r\n            validateOnBlur={false}\r\n            enableReinitialize={true}\r\n            initialValues={\r\n                { ...category }\r\n            }\r\n        >\r\n            {({\r\n                handleChange,\r\n                values,\r\n                handleSubmit,\r\n                errors,\r\n                isValid,\r\n                isSubmitting,\r\n                touched,\r\n                handleBlur,\r\n                setFieldTouched,\r\n                handleReset,\r\n            }) => (\r\n                    <>\r\n                        <Modal\r\n                            title=\"Quick Edit\"\r\n                            visible={visible}\r\n                            onOk={(e: any) => handleSubmit(e)}\r\n                            onCancel={handleCancel}\r\n                            okText='Update'\r\n                            okButtonProps={{\r\n                                loading: isSubmitting,\r\n                                htmlType: \"submit\",\r\n                                disabled: getisSubmitButtonDisabled(values, isValid)\r\n                            }}\r\n                        >\r\n                            <Input\r\n                                label='Title'\r\n                                value={values.name}\r\n                                name='name'\r\n                                isError={(touched.name && errors.name) ||\r\n                                    (!isSubmitting && updateTagState.error['error']['name'])}\r\n\r\n                                errorString={(touched.name && errors.name) ||\r\n                                    (!isSubmitting && updateTagState.error['error']['name'])}\r\n                                onChange={(e: any) => {\r\n                                    handleChange(e);\r\n                                    setFieldTouched('name');\r\n                                }}\r\n                            />\r\n                            <TextArea\r\n                                label='Description'\r\n                                value={values.description}\r\n                                name='description'\r\n                                isError={(touched.description && errors.description) ||\r\n                                    (!isSubmitting && updateTagState.error['error']['description'])}\r\n\r\n                                errorString={(touched.description && errors.description) ||\r\n                                    (!isSubmitting && updateTagState.error['error']['description'])}\r\n                                onChange={(e: any) => {\r\n                                    handleChange(e);\r\n                                    setFieldTouched('description');\r\n                                }}\r\n                            />\r\n                        </Modal>\r\n\r\n                    </>\r\n                )}\r\n        </Formik>\r\n    );\r\n};\r\n\r\n\r\nexport default ProductBundleQuickEdit;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useHandleFetch } from '../../hooks';\r\nimport { Select, Skeleton } from 'antd';\r\n\r\n\r\ninterface Props {\r\n    setProductIds?: any;\r\n    productIds?: any;\r\n}\r\n\r\n\r\nconst Tags = ({\r\n    setProductIds,\r\n    productIds\r\n}: Props) => {\r\n    const [options, setoptions] = useState([]);\r\n    const [selectedOpions, setselectedOptions] = useState([]);\r\n    const [tagState, handleTagListFetch] = useHandleFetch({}, 'productList');\r\n\r\n    useEffect(() => {\r\n        const setTags = async () => {\r\n            const tagListRes = await handleTagListFetch({\r\n                urlOptions: {\r\n                    params: {\r\n                        isSubCategory: false\r\n                    }\r\n                }\r\n            });\r\n\r\n            // @ts-ignore\r\n            if (tagListRes && tagListRes.length > 0) {\r\n                // @ts-ignore\r\n                const tagOptions = tagListRes.map((tag) => {\r\n                    return tag.name\r\n                });\r\n                setoptions(tagOptions);\r\n            }\r\n\r\n        };\r\n\r\n        setTags();\r\n    }, []);\r\n\r\n\r\n\r\n    const handleChange = (selectItems) => {\r\n        setselectedOptions(selectItems);\r\n\r\n        console.log('selectedProducts', selectItems);\r\n\r\n        if (tagState.done && tagState.data.length > 0 && selectItems.length > 0) {\r\n            const selectedCategoryIds = selectItems.map((item) => {\r\n                const selectedcategory = tagState.data.find(\r\n                    (cat) => cat.name.toLowerCase() === item.toLowerCase()\r\n                );\r\n                if (selectedcategory) {\r\n                    return selectedcategory;\r\n                }\r\n            });\r\n            console.log('selectedCategoryIds', selectedCategoryIds);\r\n            setProductIds(selectedCategoryIds);\r\n        }\r\n        else {\r\n            setProductIds([])\r\n        }\r\n\r\n\r\n    }\r\n\r\n\r\n    // console.log('selectedOpions', selectedOpions);\r\n\r\n\r\n    return (\r\n        <>\r\n\r\n            <Skeleton loading={tagState.isLoading}>\r\n                {tagState.done && tagState.data.length > 0 && <Select\r\n                    mode=\"multiple\"\r\n                    placeholder=\"search products\"\r\n                    value={selectedOpions}\r\n                    onChange={handleChange}\r\n                    style={{ width: '100%' }}\r\n                >\r\n                    {options.filter(o => !selectedOpions.includes(o)).map(item => (\r\n                        <Select.Option key={item} value={item}>\r\n                            {item}\r\n                        </Select.Option>\r\n                    ))}\r\n                </Select>}\r\n            </Skeleton>\r\n\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Tags\r\n","import React from 'react'\r\n\r\n\r\n// import components\r\nimport AddNewOrderProductItem from \"../order/AddNewOrderProductItem\";\r\nimport Empty from \"../../components/Empty\";\r\n\r\nimport {\r\n    ShopOutlined\r\n} from '@ant-design/icons';\r\n\r\n\r\ninterface Props {\r\n    productList?: any;\r\n    setProductList?: any;\r\n}\r\n\r\nconst AddNewOrderSummary = ({\r\n    setProductList,\r\n    productList\r\n}: Props) => {\r\n    return (\r\n        <div\r\n            style={{\r\n                // @ts-ignore\r\n                flexDirection: 'flex'\r\n            }}\r\n            className='addOrderContainer__container-orderSummary'>\r\n            <div className='addOrderContainer__container-productItemContainer'>\r\n                {productList && productList.length > 0 && productList.map(item => {\r\n                    return <AddNewOrderProductItem\r\n                        setProductList={setProductList}\r\n                        productList={productList}\r\n                        productId={item._id}\r\n                        quantity={item.quantity}\r\n                        item={item}\r\n                        variation={item.variation}\r\n                    />;\r\n                })}\r\n\r\n                {!(productList.length > 0) && (\r\n                    <div style={{\r\n                        marginLeft: '32px'\r\n                    }}>\r\n                        <Empty title='No Product Added' height={150} />\r\n                    </div>\r\n                )}\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddNewOrderSummary\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n\r\nimport { useHandleFetch } from '../../hooks';\r\n\r\n\r\n// import third party ui lib\r\nimport { notification, Modal } from 'antd';\r\n\r\nimport {\r\n    FileOutlined,\r\n    InboxOutlined,\r\n    FileAddOutlined,\r\n    DeleteOutlined,\r\n    CheckCircleOutlined,\r\n    CloseOutlined,\r\n    CheckOutlined,\r\n    InfoCircleOutlined,\r\n    PlusOutlined,\r\n    FileImageFilled\r\n} from '@ant-design/icons';\r\n\r\n\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport MediaLibrary from \"../../components/MediaLibrary\";\r\nimport OrderedProductsSelectProducts from \"./OrderedProductsSelectProducts\";\r\nimport OrderedProductsSelectedProductItems from \"./OrderedProductsSelectedProductItems\";\r\nimport FreeSelectProducts from \"./FreeSelectProducts\";\r\nimport FreeSelectedProductItems from \"./FreeSelectedProductItems\";\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    name: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Coupon Created',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n    notification.error({\r\n        message: message || 'Something Went Wrong',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst initialValues = {\r\n    \"name\": \"\",\r\n    \"code\": \"\",\r\n    \"minimumOrder\": null,\r\n    \"amount\": \"\",\r\n    \"amountType\": \"\",\r\n    \"orderedProducts\": [],\r\n    \"freeDelivery\": true,\r\n    \"freeProducts\": []\r\n}\r\n\r\n\r\n\r\ninterface Props {\r\n    addNewCategoryVisible?: any;\r\n    setAddNewCategoryVisible?: any;\r\n    tagList?: any;\r\n    setTagList?: any;\r\n\r\n}\r\n\r\nconst AddNewBrand = ({ addNewCategoryVisible, setAddNewCategoryVisible, tagList, setTagList }: Props) => {\r\n\r\n    const [addCouponState, handleAddCouponStateFetch] = useHandleFetch({}, 'addCoupon');\r\n    const [myImages, setmyImages] = useState(false);\r\n    const [visibleMedia, setvisibleMedia] = useState(false);\r\n    const [coverImageId, setCoverImageId] = useState('');\r\n    const [productIds, setProductIds] = useState([]);\r\n    const [productList, setProductList] = useState([]);\r\n    const [freeProductIds, setFreeProductIds] = useState([]);\r\n    const [freeProductList, setFreeProductList] = useState([]);\r\n\r\n\r\n\r\n    const handleSubmit = async (values: any, actions: any) => {\r\n\r\n        const orderedProducts = productList.length > 0 ? productList.map(product => {\r\n            return {\r\n                _id: product._id,\r\n                variation: product.variation,\r\n                quantity: product.quantity,\r\n            }\r\n        }) : [];\r\n\r\n\r\n        const freeProducts = freeProductList.length > 0 ? freeProductList.map(product => {\r\n            return {\r\n                _id: product._id,\r\n                variation: product.variation,\r\n                quantity: product.quantity,\r\n            }\r\n        }) : [];\r\n\r\n\r\n        const addTagRes = await handleAddCouponStateFetch({\r\n            urlOptions: {\r\n                placeHolders: {\r\n                    id: values.id,\r\n                }\r\n            },\r\n            body: {\r\n                name: values.name.trim(),\r\n                code: values.code.trim(),\r\n                minimumOrder: values.minimumOrder.trim(),\r\n                amount: values.amount.trim(),\r\n                amountType: values.amountType.trim(),\r\n                freeDelivery: false,\r\n                orderedProducts: orderedProducts,\r\n                freeProducts: freeProducts,\r\n            },\r\n        });\r\n\r\n        // @ts-ignore\r\n        if (addTagRes && addTagRes.status === 'ok') {\r\n            openSuccessNotification();\r\n\r\n            setTagList([...tagList, {\r\n                id: addTagRes['id'] || '',\r\n                key: addTagRes['id'] || '',\r\n                name: addTagRes['name'] || '',\r\n                description: addTagRes['description'] || '',\r\n            }])\r\n            actions.resetForm();\r\n            setAddNewCategoryVisible(false);\r\n        }\r\n        else {\r\n            openErrorNotification();\r\n        }\r\n\r\n\r\n        actions.setSubmitting(false);\r\n\r\n    };\r\n\r\n\r\n    const handleCancel = (e: any) => {\r\n        setAddNewCategoryVisible(false);\r\n    };\r\n\r\n\r\n    const getisSubmitButtonDisabled = (values, isValid) => {\r\n        if (!values.name || !isValid) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        if (!addCouponState['isLoading']) {\r\n            const error = addCouponState['error'];\r\n            if (error['isError'] && Object.keys(error['error']).length > 0) {\r\n\r\n\r\n                const errors =\r\n                    Object.values(error['error']).length > 0\r\n                        ? Object.values(error['error'])\r\n                        : [];\r\n                errors.forEach((err, i) => {\r\n                    if (typeof err === 'string') {\r\n                        openErrorNotification(err)\r\n                    }\r\n                    else if (typeof err === 'object') {\r\n                        if (err && Object.keys(err).length > 0) {\r\n                            const errs = Object.values(err);\r\n                            errs.forEach(err => {\r\n                                openErrorNotification(err)\r\n                            })\r\n\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n        }\r\n    }, [addCouponState])\r\n\r\n\r\n\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        if (productIds.length > 0) {\r\n            if (productIds.length > productList.length) {\r\n                const variation = productIds[productIds.length - 1]['pricing'].length > 0 && productIds[productIds.length - 1]['pricing'][0]['_id'];\r\n                console.log('variation', variation)\r\n\r\n                setProductList([...productList, {\r\n                    ...productIds[productIds.length - 1],\r\n                    _id: productIds[productIds.length - 1]['id'],\r\n                    variation: variation,\r\n                    quantity: 1\r\n                }]);\r\n            }\r\n\r\n\r\n            else if (productIds.length < productList.length) {\r\n                console.log('productIds', productIds);\r\n                console.log('productList', productList);\r\n\r\n                const newProductList = productList.filter(item => {\r\n                    let isTrue = false;\r\n                    productIds.forEach(product => {\r\n                        if (product.id === item._id) {\r\n                            isTrue = true;\r\n                        }\r\n                    });\r\n                    return isTrue;\r\n                })\r\n                setProductList(newProductList);\r\n\r\n            }\r\n\r\n        }\r\n        else {\r\n            setProductList([]);\r\n        }\r\n        // console.log('productIds', productIds)\r\n\r\n\r\n    }, [productIds])\r\n\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        if (freeProductIds.length > 0) {\r\n            if (freeProductIds.length > freeProductList.length) {\r\n                const variation = freeProductIds[freeProductIds.length - 1]['pricing'].length > 0 && freeProductIds[freeProductIds.length - 1]['pricing'][0]['_id'];\r\n                console.log('variation', variation)\r\n\r\n                setFreeProductList([...freeProductList, {\r\n                    ...freeProductIds[freeProductIds.length - 1],\r\n                    _id: freeProductIds[freeProductIds.length - 1]['id'],\r\n                    variation: variation,\r\n                    quantity: 1\r\n                }]);\r\n            }\r\n\r\n\r\n            else if (freeProductIds.length < freeProductList.length) {\r\n                console.log('freeProductIds', freeProductIds);\r\n                console.log('productList', productList);\r\n\r\n                const newProductList = freeProductList.filter(item => {\r\n                    let isTrue = false;\r\n                    freeProductIds.forEach(product => {\r\n                        if (product.id === item._id) {\r\n                            isTrue = true;\r\n                        }\r\n                    });\r\n                    return isTrue;\r\n                })\r\n                setFreeProductList(newProductList);\r\n\r\n            }\r\n\r\n        }\r\n        else {\r\n            setFreeProductList([]);\r\n        }\r\n        // console.log('freeProductIds', freeProductIds)\r\n\r\n\r\n    }, [freeProductIds])\r\n\r\n\r\n\r\n    const handleImagesDelete = (id) => {\r\n        // @ts-ignore\r\n        const newImages = myImages && myImages.filter(image => {\r\n            return image.id !== id;\r\n        })\r\n\r\n        setmyImages(newImages);\r\n    }\r\n\r\n\r\n\r\n\r\n    return (\r\n        <Formik\r\n            onSubmit={(values, actions) => handleSubmit(values, actions)}\r\n            validationSchema={validationSchema}\r\n            validateOnBlur={false}\r\n            enableReinitialize={true}\r\n            initialValues={\r\n                { ...initialValues }\r\n            }\r\n        >\r\n            {({\r\n                handleChange,\r\n                values,\r\n                handleSubmit,\r\n                errors,\r\n                isValid,\r\n                isSubmitting,\r\n                touched,\r\n                handleBlur,\r\n                setFieldTouched,\r\n                handleReset,\r\n            }) => (\r\n                    <>\r\n                        <Modal\r\n                            width={'45vw'}\r\n                            style={{\r\n                                top: '40px'\r\n                            }}\r\n                            title=\"Add New Coupon\"\r\n                            visible={addNewCategoryVisible}\r\n                            onOk={(e: any) => handleSubmit(e)}\r\n                            onCancel={handleCancel}\r\n                            okText='Create'\r\n                            okButtonProps={{\r\n                                loading: isSubmitting,\r\n                                htmlType: \"submit\",\r\n                                disabled: getisSubmitButtonDisabled(values, isValid)\r\n                            }}\r\n                        >\r\n\r\n                            <div className='dubbleRowInputs'>\r\n                                <div className='dubbleRowInputs__item'>\r\n                                    <Input\r\n                                        label='Name'\r\n                                        value={values.name}\r\n                                        name='name'\r\n                                        isError={(touched.name && errors.name) ||\r\n                                            (!isSubmitting && addCouponState.error['error']['name'])}\r\n\r\n                                        errorString={(touched.name && errors.name) ||\r\n                                            (!isSubmitting && addCouponState.error['error']['name'])}\r\n                                        onChange={(e: any) => {\r\n                                            handleChange(e);\r\n                                            setFieldTouched('name');\r\n                                        }}\r\n                                    />\r\n                                </div>\r\n                                <div className='dubbleRowInputs__item'>\r\n                                    <Input\r\n                                        label='Code'\r\n                                        value={values.code}\r\n                                        name='code'\r\n                                        isError={(touched.code && errors.code) ||\r\n                                            (!isSubmitting && addCouponState.error['error']['code'])}\r\n\r\n                                        errorString={(touched.code && errors.code) ||\r\n                                            (!isSubmitting && addCouponState.error['error']['code'])}\r\n                                        onChange={(e: any) => {\r\n                                            handleChange(e);\r\n                                            setFieldTouched('code');\r\n                                        }}\r\n                                    />\r\n                                </div>\r\n\r\n                            </div>\r\n\r\n                            <Input\r\n                                label='Minimum Order'\r\n                                value={values.minimumOrder}\r\n                                name='minimumOrder'\r\n                                isError={(touched.minimumOrder && errors.minimumOrder) ||\r\n                                    (!isSubmitting && addCouponState.error['error']['minimumOrder'])}\r\n\r\n                                errorString={(touched.minimumOrder && errors.minimumOrder) ||\r\n                                    (!isSubmitting && addCouponState.error['error']['minimumOrder'])}\r\n                                onChange={(e: any) => {\r\n                                    handleChange(e);\r\n                                    setFieldTouched('minimumOrder');\r\n                                }}\r\n                            />\r\n\r\n\r\n\r\n                            <div className='dubbleRowInputs'>\r\n                                <div className='dubbleRowInputs__item'>\r\n                                    <Input\r\n                                        label='Amount'\r\n                                        value={values.amount}\r\n                                        name='amount'\r\n                                        isError={(touched.amount && errors.amount) ||\r\n                                            (!isSubmitting && addCouponState.error['error']['amount'])}\r\n\r\n                                        errorString={(touched.amount && errors.amount) ||\r\n                                            (!isSubmitting && addCouponState.error['error']['amount'])}\r\n                                        onChange={(e: any) => {\r\n                                            handleChange(e);\r\n                                            setFieldTouched('amount');\r\n                                        }}\r\n                                    />\r\n                                </div>\r\n                                <div className='dubbleRowInputs__item'>\r\n                                    <Input\r\n                                        label='Amount Type'\r\n                                        value={values.amountType}\r\n                                        name='amountType'\r\n                                        isError={(touched.amountType && errors.amountType) ||\r\n                                            (!isSubmitting && addCouponState.error['error']['amountType'])}\r\n\r\n                                        errorString={(touched.amountType && errors.amountType) ||\r\n                                            (!isSubmitting && addCouponState.error['error']['amountType'])}\r\n                                        onChange={(e: any) => {\r\n                                            handleChange(e);\r\n                                            setFieldTouched('amountType');\r\n                                        }}\r\n                                    />\r\n                                </div>\r\n\r\n\r\n\r\n\r\n                            </div>\r\n\r\n\r\n\r\n\r\n                            <h3 className='inputFieldLabel'>\r\n                                Ordered Products\r\n                                </h3>\r\n\r\n                            <OrderedProductsSelectProducts\r\n                                setProductIds={setProductIds}\r\n                                productIds={productIds}\r\n                            />\r\n\r\n                            <div style={{\r\n                                marginTop: \"15px\"\r\n                            }}></div>\r\n\r\n                            <h3 className='inputFieldLabel'>\r\n                                Selected Ordered Products\r\n                                </h3>\r\n\r\n                            <OrderedProductsSelectedProductItems\r\n                                productList={productList}\r\n                                setProductList={setProductList}\r\n                            />\r\n\r\n\r\n                            <h3 className='inputFieldLabel'>\r\n                                Free Products\r\n                                </h3>\r\n\r\n                            <OrderedProductsSelectProducts\r\n                                setProductIds={setFreeProductIds}\r\n                                productIds={freeProductIds}\r\n                            />\r\n\r\n                            <div style={{\r\n                                marginTop: \"15px\"\r\n                            }}></div>\r\n\r\n                            <h3 className='inputFieldLabel'>\r\n                                Selected Free Products\r\n                                </h3>\r\n\r\n                            <OrderedProductsSelectedProductItems\r\n                                productList={freeProductList}\r\n                                setProductList={setFreeProductList}\r\n                            />\r\n\r\n\r\n\r\n                        </Modal>\r\n\r\n                        <MediaLibrary\r\n                            setvisible={setvisibleMedia}\r\n                            visible={visibleMedia}\r\n                            setmyImages={setmyImages}\r\n                            myImages={myImages}\r\n                            isModalOpenForImages={true}\r\n\r\n                        />\r\n                    </>\r\n                )}\r\n        </Formik>\r\n    );\r\n};\r\n\r\nexport default AddNewBrand;\r\n","import React, { useState, useEffect } from 'react';\r\n\r\n// import third party ui lib\r\nimport { Empty, Popconfirm, Upload, message, Switch, Select, Button, notification, Table, Space, Input as CoolInput, Tooltip, Modal } from 'antd';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { useHistory } from 'react-router';\r\n\r\n\r\n\r\nimport {\r\n    FileOutlined,\r\n    InboxOutlined,\r\n    RadiusUpleftOutlined,\r\n    RadiusUprightOutlined,\r\n    RadiusBottomleftOutlined,\r\n    RadiusBottomrightOutlined,\r\n    PlusOutlined,\r\n    DeleteOutlined,\r\n    EditOutlined,\r\n    CheckCircleOutlined\r\n} from '@ant-design/icons';\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n\r\n\r\n/// import hooks\r\nimport { useFetch, useHandleFetch } from \"../../hooks\";\r\n\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport { DataTableSkeleton } from \"../../components/Placeholders\";\r\nimport CouponQuickEdit from \"./CouponQuickEdit\"\r\nimport AddNewCoupon from \"./AddNewCoupon\"\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Coupon Created',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n    notification.error({\r\n        message: message || 'Something Went Wrong',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n    });\r\n};\r\n\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    name: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\n\r\nconst initialValues = {\r\n    name: '',\r\n    description: ''\r\n}\r\n\r\n\r\nconst { Column, ColumnGroup } = Table;\r\nconst { Search } = CoolInput;\r\n\r\n\r\n\r\nconst MyTable = ({ data, setTagList }) => {\r\n    const [visible, setvisible] = useState(false);\r\n    const [activeCategoryForEdit, setactiveCategoryForEdit] = useState(false);\r\n    const [deleteTagState, handleDeleteTagFetch] = useHandleFetch({}, 'deleteCoupon');\r\n\r\n    const history = useHistory();\r\n\r\n\r\n    const handleDeleteTag = async (id) => {\r\n        const deleteTagRes = await handleDeleteTagFetch({\r\n            urlOptions: {\r\n                placeHolders: {\r\n                    id,\r\n                }\r\n            }\r\n        });\r\n\r\n\r\n\r\n        // @ts-ignore\r\n        if (deleteTagRes && deleteTagRes.status === 'ok') {\r\n            openSuccessNotification('Deleted Coupon');\r\n            const newtagList = data.filter(item => item.id !== id);\r\n            setTagList(newtagList);\r\n        }\r\n\r\n\r\n    }\r\n\r\n\r\n    const handleOk = (e: any) => {\r\n        setvisible(false);\r\n\r\n    };\r\n\r\n    const handleCancel = (e: any) => {\r\n        setvisible(false);\r\n    };\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <Table\r\n                // expandable={{\r\n                //     expandedRowRender: record => <p style={{ margin: 0 }}>{record.name}</p>,\r\n                //     rowExpandable: record => record.name !== 'Not Expandable',\r\n                //   }}\r\n                // bordered={true}\r\n                size='small'\r\n                // pagination={false}\r\n                dataSource={data}\r\n            >\r\n\r\n                <Column\r\n                    title=\"Name\"\r\n                    dataIndex=\"name\"\r\n                    key=\"id\"\r\n                    className='classnameofthecolumn'\r\n                    render={(text, record: any) => (\r\n                        <>\r\n\r\n                            <h4\r\n                                onClick={() => {\r\n                                    history.push(`/admin/coupon/${record.id}`)\r\n                                    // setBrandDetailVisible(true);\r\n                                    setactiveCategoryForEdit(record)\r\n                                }}\r\n                                style={{\r\n                                    fontWeight: 400,\r\n                                    color: '#555',\r\n                                    cursor: 'pointer'\r\n                                }}>\r\n                                {text}\r\n                            </h4>\r\n\r\n\r\n                        </>\r\n                    )}\r\n                />\r\n\r\n                <Column\r\n                    title=\"Order Products\"\r\n                    dataIndex=\"orderedProductsCount\"\r\n                    key=\"id\"\r\n                    className='classnameofthecolumn'\r\n\r\n                />\r\n\r\n\r\n                <Column\r\n                    title=\"Free Products\"\r\n                    dataIndex=\"freeProductsCount\"\r\n                    key=\"id\"\r\n                    className='classnameofthecolumn'\r\n                />\r\n\r\n                <Column\r\n                    title=\"Start Date\"\r\n                    dataIndex=\"startDate\"\r\n                    key=\"id\"\r\n                    className='classnameofthecolumn'\r\n\r\n                />\r\n\r\n                <Column\r\n                    title=\"End Date\"\r\n                    dataIndex=\"endDate\"\r\n                    key=\"id\"\r\n                    className='classnameofthecolumn'\r\n\r\n                />\r\n\r\n                <Column\r\n\r\n                    className='classnameofthecolumn'\r\n                    title=\"\"\r\n                    key=\"action\"\r\n                    align='right'\r\n                    render={(text, record: any) => (\r\n                        <Space size=\"middle\">\r\n                            <a href='##'>\r\n                                <Tooltip placement=\"top\" title='Quick Edit Bundle'>\r\n                                    <span className='iconSize' onClick={() => {\r\n                                        setvisible(true)\r\n                                        setactiveCategoryForEdit(record);\r\n                                    }}>\r\n                                        <EditOutlined />\r\n                                    </span>\r\n                                </Tooltip>\r\n                            </a>\r\n\r\n\r\n\r\n                            <Popconfirm\r\n                                onConfirm={() => handleDeleteTag(record.id)}\r\n                                title=\"Are you sure？\" okText=\"Yes\" cancelText=\"No\">\r\n                                <span\r\n                                    className='iconSize iconSize-danger'\r\n                                >\r\n                                    <DeleteOutlined />\r\n                                </span>\r\n                            </Popconfirm>\r\n                        </Space>\r\n                    )}\r\n                />\r\n            </Table>\r\n\r\n\r\n\r\n\r\n\r\n\r\n            {activeCategoryForEdit && <CouponQuickEdit\r\n                tagList={data}\r\n                setTagList={setTagList}\r\n                setvisible={setvisible}\r\n                visible={visible}\r\n                category={activeCategoryForEdit} />}\r\n        </>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\ninterface Props { }\r\n\r\nconst Couponlist = ({ }: Props) => {\r\n\r\n\r\n    const [tagList, setTagList] = useState([]);\r\n\r\n    const [tagState, handleTagListFetch] = useHandleFetch({}, 'couponList');\r\n\r\n\r\n    useEffect(() => {\r\n        const setTags = async () => {\r\n            const tags = await handleTagListFetch({});\r\n            // @ts-ignore\r\n            setTagList(tags);\r\n        }\r\n        setTags();\r\n    }, [])\r\n\r\n\r\n    console.log('tagState', tagState)\r\n\r\n    const [addNewCategoryVisible, setAddNewCategoryVisible] = useState(false);\r\n\r\n    const getisSubmitButtonDisabled = (values, isValid) => {\r\n        if (!values.name || !isValid) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n\r\n    const handleOkAddNewCategory = (e: any) => {\r\n        setAddNewCategoryVisible(false);\r\n\r\n    };\r\n\r\n    const handleCancelAddNewCategory = (e: any) => {\r\n        setAddNewCategoryVisible(false);\r\n    };\r\n\r\n    const handleSearch = (value) => {\r\n        if (tagState.data.length > 0) {\r\n            const newTagList = tagState.data.filter(item => item.name.toLowerCase().includes(value.toLowerCase()));\r\n            setTagList(newTagList);\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <>\r\n\r\n            <div className='categoryListContainer'>\r\n                <div className='categoryListContainer__header'>\r\n                    <div className='categoryListContainer__header-searchBar-tag'>\r\n                        <h2 className='categoryListContainer__header-title'>\r\n                            Coupons\r\n                       </h2>\r\n\r\n                        <Search\r\n                            enterButton={false}\r\n                            className='searchbarClassName'\r\n                            placeholder=\"search coupon..\"\r\n                            onSearch={value => handleSearch(value)}\r\n                        />\r\n                    </div>\r\n                    <Button\r\n                        // type=\"primary\"\r\n                        className='btnPrimaryClassNameoutline'\r\n                        icon={<PlusOutlined />}\r\n                        onClick={() => setAddNewCategoryVisible(true)}\r\n                    >\r\n                        Add New\r\n\t\t\t\t\t</Button>\r\n                </div>\r\n                <div className='categoryListContainer__categoryList'>\r\n                    {tagState.done && tagList.length > 0 && <MyTable\r\n                        setTagList={setTagList}\r\n                        data={tagList} />}\r\n                    {tagState.isLoading && <DataTableSkeleton />}\r\n\r\n\r\n                    {tagState.done && !(tagList.length > 0) && (\r\n                        <div style={{\r\n                            marginTop: '200px'\r\n                        }}>\r\n                            <Empty description='No Coupon found' image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            </div>\r\n\r\n            <AddNewCoupon\r\n                tagList={tagList}\r\n                setTagList={setTagList}\r\n                addNewCategoryVisible={addNewCategoryVisible}\r\n                setAddNewCategoryVisible={setAddNewCategoryVisible}\r\n            />\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Couponlist;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n\r\nimport { useHandleFetch } from '../../hooks';\r\n// import third party ui lib\r\nimport { Upload, message, Switch, Select, Button, notification, Modal, Empty, Form } from 'antd';\r\n\r\nimport {\r\n\tFileOutlined,\r\n\tInboxOutlined,\r\n\tRadiusUpleftOutlined,\r\n\tRadiusUprightOutlined,\r\n\tRadiusBottomleftOutlined,\r\n\tRadiusBottomrightOutlined,\r\n\tDeleteOutlined,\r\n\tFileAddOutlined,\r\n\tCheckCircleOutlined\r\n} from '@ant-design/icons';\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\n\r\n\r\nconst { Option } = Select;\r\n\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n\tfirstName: Yup.string()\r\n\t\t.label('First name')\r\n\t\t.required()\r\n\t\t.min(2, 'First name must have at least 2 characters '),\r\n\tlastName: Yup.string()\r\n\t\t.label('Lastname')\r\n\t\t.required()\r\n\t\t.min(2, 'Last name must have at least 2 characters '),\r\n\tphone: Yup.string()\r\n\t\t.required('Please tell us your mobile number.')\r\n\t\t.max(13, 'Please enter a valid mobile number.'),\r\n\tpassword: Yup.string()\r\n\t\t.label('Password')\r\n\t\t.required()\r\n\t\t.min(6, 'Password must have at least 6 characters'),\r\n\taddress1: Yup.string()\r\n\t\t.label('Address line 1')\r\n\t\t.required()\r\n\t\t.min(3, 'Address line 1 must have at least 3 characters '),\r\n\r\n\temail: Yup.string().label('Email').email('Please enter a valid email'),\r\n});\r\n\r\n\r\n\r\n\r\nconst initialValues = {\r\n\tphone: '',\r\n\temail: '',\r\n\tfirstName: '',\r\n\tlastName: '',\r\n\taddress1: '',\r\n\taddress2: '',\r\n\tzipCode: '',\r\n\tpassword: ''\r\n};\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t\tmessage: message || 'Tag Created',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n\tnotification.error({\r\n\t\tmessage: message || 'Something Went Wrong',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n};\r\n\r\n\r\ninterface Props {\r\n\taddNewCategoryVisible: any;\r\n\tsetAddNewCategoryVisible: any;\r\n\tcustomerList?: any;\r\n\tsetCustomerList?: any;\r\n}\r\n\r\nconst AddNewCategory = ({ addNewCategoryVisible, setAddNewCategoryVisible, customerList, setCustomerList }: Props) => {\r\n\r\n\tconst [addCustomerState, handleAddCustomerFetch] = useHandleFetch({}, 'addCustomer');\r\n\tconst [selectedCountryValue, setselectedCountryValue] = useState('');\r\n\tconst [selectedCityValue, setselectedCityValue] = useState('');\r\n\r\n\tconst [countryOptions, setcountryOptions] = useState([]);\r\n\tconst [cityOptions, setcityOptions] = useState([]);\r\n\r\n\tconst [countryListState, handleCountryListFetch] = useHandleFetch(\r\n\t\t[],\r\n\t\t'countryList'\r\n\t);\r\n\r\n\tconst [cityListState, handleCityListFetch] = useHandleFetch([], 'cityList');\r\n\r\n\tconst [countryList, setCountryList] = useState([]);\r\n\tconst [cityList, setCityList] = useState([]);\r\n\r\n\r\n\r\n\r\n\tconst handleSubmit = async (values: any, actions: any) => {\r\n\r\n\t\tconst addCustomerRes = await handleAddCustomerFetch({\r\n\r\n\t\t\tbody: {\r\n\t\t\t\tphone: values.phone,\r\n\t\t\t\temail: values.email,\r\n\t\t\t\tpassword: values.password,\r\n\t\t\t\taddress1: values.address1,\r\n\t\t\t\taddress2: values.address2,\r\n\t\t\t\tfirstName: values.firstName,\r\n\t\t\t\tlastName: values.lastName,\r\n\t\t\t\tcountry: selectedCountryValue,\r\n\t\t\t\tcity: selectedCityValue,\r\n\t\t\t},\r\n\t\t});\r\n\r\n\r\n\t\t// @ts-ignore\r\n\t\tif (addCustomerRes && addCustomerRes.status === 'ok') {\r\n\t\t\topenSuccessNotification();\r\n\r\n\t\t\tsetCustomerList([...customerList, {\r\n\t\t\t\tid: addCustomerRes['id'] || '',\r\n\t\t\t\tkey: addCustomerRes['id'] || '',\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\t...addCustomerRes\r\n\t\t\t}])\r\n\t\t\tsetAddNewCategoryVisible(false);\r\n\t\t\tactions.resetForm();\r\n\t\t}\r\n\t\telse {\r\n\t\t\topenErrorNotification();\r\n\t\t}\r\n\r\n\r\n\r\n\t\tactions.setSubmitting(false);\r\n\t};\r\n\r\n\r\n\r\n\tconst onChangeCity = (value) => {\r\n\t\tsetselectedCityValue(value);\r\n\t}\r\n\r\n\tconst onChangeCountry = (value) => {\r\n\t\tsetselectedCountryValue(value);\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tconst setCountries = async () => {\r\n\t\t\tconst CountryListRes = await handleCountryListFetch({});\r\n\r\n\t\t\t// @ts-ignore\r\n\t\t\tif (CountryListRes && CountryListRes.length > 0) {\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\tconst countryOptions = CountryListRes.map((country) => {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tvalue: country.name,\r\n\t\t\t\t\t\tname: country.name\r\n\t\t\t\t\t};\r\n\t\t\t\t});\r\n\t\t\t\tsetcountryOptions(countryOptions);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tsetCountries();\r\n\t}, []);\r\n\r\n\r\n\tuseEffect(() => {\r\n\t\tconst setCities = async () => {\r\n\t\t\tconst cityListRes = await handleCityListFetch({\r\n\t\t\t\turlOptions: {\r\n\t\t\t\t\tplaceHolders: {\r\n\t\t\t\t\t\tcountry: selectedCountryValue,\r\n\t\t\t\t\t},\r\n\t\t\t\t},\r\n\t\t\t});\r\n\r\n\t\t\t// @ts-ignore\r\n\t\t\tif (cityListRes && cityListRes.length > 0) {\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\tconst cityOptions = cityListRes.map((city) => {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tvalue: city.name,\r\n\t\t\t\t\t\tname: city.name\r\n\t\t\t\t\t};\r\n\t\t\t\t});\r\n\t\t\t\tsetcityOptions(cityOptions);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tsetCities();\r\n\t}, [selectedCountryValue]);\r\n\r\n\r\n\r\n\r\n\tconst handleCancel = (e: any) => {\r\n\t\tsetAddNewCategoryVisible(false);\r\n\t};\r\n\r\n\r\n\tconst getisSubmitButtonDisabled = (values, isValid) => {\r\n\t\tif (!isValid ||\r\n\t\t\t!values.firstName ||\r\n\t\t\t!values.lastName ||\r\n\t\t\t!values.password ||\r\n\t\t\t!values.phone ||\r\n\t\t\t!values.address1) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\r\n\r\n\tconsole.log('cityListState', cityListState)\r\n\r\n\r\n\r\n\r\n\treturn (\r\n\t\t<Formik\r\n\t\t\tonSubmit={(values, actions) => handleSubmit(values, actions)}\r\n\t\t\tvalidationSchema={validationSchema}\r\n\t\t\tvalidateOnBlur={false}\r\n\t\t\tenableReinitialize={true}\r\n\t\t\tinitialValues={\r\n\t\t\t\t{ ...initialValues }\r\n\t\t\t}\r\n\t\t>\r\n\t\t\t{({\r\n\t\t\t\thandleChange,\r\n\t\t\t\tvalues,\r\n\t\t\t\thandleSubmit,\r\n\t\t\t\terrors,\r\n\t\t\t\tisValid,\r\n\t\t\t\tisSubmitting,\r\n\t\t\t\ttouched,\r\n\t\t\t\thandleBlur,\r\n\t\t\t\tsetFieldTouched,\r\n\t\t\t\thandleReset,\r\n\t\t\t}) => (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<Modal\r\n\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\ttop: '40px'\r\n\t\t\t\t\t\t\t}}\r\n\r\n\r\n\r\n\t\t\t\t\t\t\tbodyStyle={{\r\n\t\t\t\t\t\t\t\tmargin: '0',\r\n\t\t\t\t\t\t\t\tpadding: '10px'\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\ttitle=\"Add New Customer\"\r\n\t\t\t\t\t\t\tvisible={addNewCategoryVisible}\r\n\t\t\t\t\t\t\tonOk={(e: any) => handleSubmit(e)}\r\n\t\t\t\t\t\t\tonCancel={handleCancel}\r\n\t\t\t\t\t\t\tokText='Create'\r\n\t\t\t\t\t\t\tokButtonProps={{\r\n\t\t\t\t\t\t\t\tloading: isSubmitting,\r\n\t\t\t\t\t\t\t\thtmlType: \"submit\",\r\n\t\t\t\t\t\t\t\tdisabled: getisSubmitButtonDisabled(values, isValid)\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\r\n\r\n\t\t\t\t\t\t\t<div className='dubbleRowInputs'>\r\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\tlabel='First Name'\r\n\t\t\t\t\t\t\t\t\t\tvalue={values.firstName}\r\n\t\t\t\t\t\t\t\t\t\tname='firstName'\r\n\t\t\t\t\t\t\t\t\t\tisError={(touched.firstName && errors.firstName) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['firstName'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\terrorString={(touched.firstName && errors.firstName) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['firstName'])}\r\n\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('firstName');\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\tlabel='Last Name'\r\n\t\t\t\t\t\t\t\t\t\tvalue={values.lastName}\r\n\t\t\t\t\t\t\t\t\t\tname='lastName'\r\n\t\t\t\t\t\t\t\t\t\tisError={(touched.lastName && errors.lastName) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['lastName'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\terrorString={(touched.lastName && errors.lastName) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['lastName'])}\r\n\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('lastName');\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t<div className='dubbleRowInputs'>\r\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\tlabel='Phone'\r\n\t\t\t\t\t\t\t\t\t\tvalue={values.phone}\r\n\t\t\t\t\t\t\t\t\t\tname='phone'\r\n\t\t\t\t\t\t\t\t\t\tisError={(touched.phone && errors.phone) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['phone'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\terrorString={(touched.phone && errors.phone) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['phone'])}\r\n\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('phone');\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\tlabel='Email'\r\n\t\t\t\t\t\t\t\t\t\tvalue={values.email}\r\n\t\t\t\t\t\t\t\t\t\tname='email'\r\n\t\t\t\t\t\t\t\t\t\tisError={(touched.email && errors.email) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['email'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\terrorString={(touched.email && errors.email) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['email'])}\r\n\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('email');\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\tmarginRight: '10px'\r\n\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\tlabel='Password'\r\n\t\t\t\t\t\t\t\t\tvalue={values.password}\r\n\t\t\t\t\t\t\t\t\tname='password'\r\n\t\t\t\t\t\t\t\t\tisError={(touched.password && errors.password) ||\r\n\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['password'])}\r\n\r\n\t\t\t\t\t\t\t\t\terrorString={(touched.password && errors.password) ||\r\n\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['password'])}\r\n\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\tsetFieldTouched('password');\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t<div className='dubbleRowInputs'>\r\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\t\t\t\tCountry\r\n\t\t\t\t\t\t\t\t\t</h3>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t<Form.Item\r\n\t\t\t\t\t\t\t\t\t\tvalidateStatus={(addCustomerState.error['error']['country']) ? \"error\" : \"\"}\r\n\t\t\t\t\t\t\t\t\t\thelp={addCustomerState.error['error']['country']}\r\n\t\t\t\t\t\t\t\t\t// noStyle={true}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t<Select\r\n\t\t\t\t\t\t\t\t\t\t\tnotFoundContent={<Empty description='No Country Found' image={Empty.PRESENTED_IMAGE_SIMPLE} />}\r\n\t\t\t\t\t\t\t\t\t\t\tshowSearch\r\n\t\t\t\t\t\t\t\t\t\t\tstyle={{ width: '100%' }}\r\n\t\t\t\t\t\t\t\t\t\t\tplaceholder='Select a Country'\r\n\t\t\t\t\t\t\t\t\t\t\toptionFilterProp='children'\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={onChangeCountry}\r\n\t\t\t\t\t\t\t\t\t\t\tfilterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t{countryListState.done &&\r\n\t\t\t\t\t\t\t\t\t\t\t\tcountryListState.data.length > 0 &&\r\n\t\t\t\t\t\t\t\t\t\t\t\tcountryOptions.map((option) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn <Option value={option.value}>{option.name}</Option>;\r\n\t\t\t\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t\t\t</Select>\r\n\r\n\t\t\t\t\t\t\t\t\t</Form.Item>\r\n\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\t\t\t\tCity\r\n                                    </h3>\r\n\t\t\t\t\t\t\t\t\t<Form.Item\r\n\t\t\t\t\t\t\t\t\t\t// noStyle={true}\r\n\t\t\t\t\t\t\t\t\t\tvalidateStatus={(addCustomerState.error['error']['city']) ? \"error\" : \"\"}\r\n\t\t\t\t\t\t\t\t\t\thelp={addCustomerState.error['error']['city']}\r\n\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t<Select\r\n\t\t\t\t\t\t\t\t\t\t\tclassName='selectClassName'\r\n\t\t\t\t\t\t\t\t\t\t\tnotFoundContent={<Empty description='First Select a Country' image={Empty.PRESENTED_IMAGE_SIMPLE} />}\r\n\t\t\t\t\t\t\t\t\t\t\tshowSearch\r\n\t\t\t\t\t\t\t\t\t\t\tstyle={{ width: '100%' }}\r\n\t\t\t\t\t\t\t\t\t\t\tplaceholder='Select a city'\r\n\t\t\t\t\t\t\t\t\t\t\toptionFilterProp='children'\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={onChangeCity}\r\n\t\t\t\t\t\t\t\t\t\t\tfilterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t{cityListState.done &&\r\n\t\t\t\t\t\t\t\t\t\t\t\tcityListState.data.length > 0 &&\r\n\t\t\t\t\t\t\t\t\t\t\t\tcityOptions.map((option) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn <Option value={option.value}>{option.name}</Option>;\r\n\t\t\t\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t\t\t</Select>\r\n\t\t\t\t\t\t\t\t\t</Form.Item>\r\n\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\tmarginTop: '12px'\r\n\t\t\t\t\t\t\t}}></div>\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t<div className='dubbleRowInputs'>\r\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\tlabel='Address'\r\n\t\t\t\t\t\t\t\t\t\tvalue={values.address1}\r\n\t\t\t\t\t\t\t\t\t\tname='address1'\r\n\t\t\t\t\t\t\t\t\t\tisError={(touched.address1 && errors.address1) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['address1'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\terrorString={(touched.address1 && errors.address1) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['address1'])}\r\n\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('address1');\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\tlabel='More specific address'\r\n\t\t\t\t\t\t\t\t\t\tvalue={values.address2}\r\n\t\t\t\t\t\t\t\t\t\tname='address2'\r\n\t\t\t\t\t\t\t\t\t\tisError={(touched.address2 && errors.address2) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['address2'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\terrorString={(touched.address2 && errors.address2) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['address2'])}\r\n\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('address2');\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\t\t\t\t\t\t</Modal>\r\n\r\n\t\t\t\t\t</>\r\n\t\t\t\t)}\r\n\t\t</Formik>\r\n\r\n\r\n\r\n\r\n\t);\r\n};\r\n\r\nexport default AddNewCategory;\r\n","import React,{useState, useEffect} from 'react';\r\nimport { Modal, Select,notification  } from 'antd';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\nimport { PlusOutlined, EditOutlined, DeleteOutlined,EditFilled, CheckCircleOutlined } from '@ant-design/icons';\r\n\r\n\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport {useHandleFetch} from '../../hooks';\r\n\r\n\r\nconst { Option } = Select;\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    firstName: Yup.string()\r\n      .label('Firstname')\r\n      .required()\r\n      .min(2, 'First name must have at least 2 characters '),\r\n    lastName: Yup.string()\r\n      .label('Lastname')\r\n      .required()\r\n      .min(2, 'Lastname must have at least 2 characters '),\r\n    phone: Yup.string()\r\n      .required('Please tell us your mobile number.')\r\n      .max(13, 'Please enter a valid mobile number.'),\r\n    password: Yup.string()\r\n      .label('Password')\r\n      .required()\r\n      .min(6, 'Password must have at least 6 characters'),\r\n    address1: Yup.string()\r\n      .label('Address line 1')\r\n      .required()\r\n      .min(3, 'Address line 1 must have at least 3 characters '),\r\n  \r\n    email: Yup.string().label('Email').email('Please enter a valid email'),\r\n  });\r\n\r\n\r\n\r\n  \r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t  message: message || 'Tag Created',\r\n\t  description: '',\r\n\t  icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n  };\r\n\r\n\r\n  const openErrorNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t  message: message || 'Something Went Wrong',\r\n\t  description: '',\r\n\t  icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n  };\r\n\r\n\r\n\r\n\r\n\r\n\r\ninterface Props {\r\n\tcustomer: any;\r\n\tsetvisible: any; \r\n\tvisible: any;\r\n\tcustomerList?: any; \r\n\tsetCustomerList?:any\r\n\r\n}\r\n\r\nconst QuickEdit = ({ customer, setvisible, visible, customerList, setCustomerList }: Props) => {\r\n\tconst [updateCustomerState, handleUpdateCustomerFetch] = useHandleFetch({}, 'updateCustomer');\r\n\r\n\r\n\tconst [selectedCountryValue,setselectedCountryValue] = useState(''); \r\n    const [selectedCityValue,setselectedCityValue] = useState(''); \r\n\r\n    const [countryOptions,setcountryOptions] = useState([]); \r\n    const [cityOptions,setcityOptions] = useState([]); \r\n\r\n    const [countryListState, handleCountryListFetch] = useHandleFetch(\r\n        [],\r\n        'countryList'\r\n      );\r\n    \r\n      const [cityListState, handleCityListFetch] = useHandleFetch([], 'cityList');\r\n    \r\n      const [countryList, setCountryList] = useState([]);\r\n      const [cityList, setCityList] = useState([]);\r\n\r\n\r\n\r\n\r\n\tconst handleSubmit = async (values : any, actions : any) => {\r\n\t  const updateCustomerRes = await handleUpdateCustomerFetch({\r\n\t\turlOptions: {\r\n\t\t\tplaceHolders: {\r\n\t\t\t  id: values.id,\r\n\t\t\t}\r\n\t\t  },\r\n\t\tbody: {\r\n\t\t\tphone: values.phone,\r\n            email: values.email,\r\n            password: values.password,\r\n            address1: values.address1,\r\n            address2: values.address2,\r\n            firstName: values.firstName,\r\n            lastName: values.lastName,\r\n            country: selectedCountryValue,\r\n            city: selectedCityValue,\r\n\t\t},\r\n\t  });\r\n\t\r\n\r\n\t   \t  // @ts-ignore\r\n\t\t\t if(updateCustomerRes && updateCustomerRes.status === 'ok'){\r\n\t\t\t\topenSuccessNotification(); \r\n\t\t\r\n\t\t\t\tconst positionInTag = () => {\r\n\t\t\t\t\treturn customerList.map(item => item.id).indexOf(customer.id);\r\n\t\t\t\t  }\r\n\t\t\r\n\t\t\t\t  const index = positionInTag();\r\n\t\t\r\n\t\t\t\t  // @ts-ignore\r\n\t\t\t\t  const updatedItem = Object.assign({}, tagList[index], { ...updateCustomerRes });\r\n\t\t\t\t  const updateTagList = [...customerList.slice(0, index), updatedItem, ...customerList.slice(index + 1)];\r\n\t\t\t\t  setCustomerList(updateTagList); \r\n\t\t\t\t\r\n\t\t\t  }\r\n\t\t\t  else {\r\n\t\t\t\topenErrorNotification();\r\n\t\t\t  }\r\n\t\t\t\r\n\t\t\t  actions.setSubmitting(false);\r\n\t\t\t  setvisible(false)\r\n\t};\r\n\t\r\n\r\n\t\r\n    const onChangeCity = (value) => {\r\n        setselectedCityValue(value); \r\n    }\r\n\r\n    const onChangeCountry = (value) => {\r\n        setselectedCountryValue(value); \r\n    }\r\n    \r\n\tuseEffect(() => {\r\n\t\tconst setCountries = async () => {\r\n\t\t\tconst CountryListRes = await handleCountryListFetch({});\r\n\r\n\t\t\t// @ts-ignore\r\n\t\t\tif (CountryListRes && CountryListRes.length > 0) {\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\tconst countryOptions = CountryListRes.map((country) => {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tvalue: country.name,\r\n\t\t\t\t\t\tname: country.name\r\n\t\t\t\t\t};\r\n\t\t\t\t});\r\n\t\t\t\tsetcountryOptions(countryOptions);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tsetCountries();\r\n    }, []);\r\n    \r\n\r\n    useEffect(() => {\r\n\t\tconst setCities = async () => {\r\n\t\t\tconst cityListRes = await handleCityListFetch({\r\n                urlOptions: {\r\n                    placeHolders: {\r\n                      country: selectedCountryValue,\r\n                    },\r\n                  },\r\n            });\r\n\r\n\t\t\t// @ts-ignore\r\n\t\t\tif (cityListRes && cityListRes.length > 0) {\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\tconst cityOptions = cityListRes.map((city) => {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tvalue: city.name,\r\n\t\t\t\t\t\tname: city.name\r\n\t\t\t\t\t};\r\n\t\t\t\t});\r\n\t\t\t\tsetcityOptions(cityOptions);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tsetCities();\r\n    }, [selectedCountryValue]);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\tconst handleCancel = (e: any) => {\r\n        setvisible(false);\r\n      };\r\n\r\n\r\n\r\n\t  const getisSubmitButtonDisabled = (values,isValid) => {\r\n\t\tif(!isValid ||\r\n            !values.firstName ||\r\n            !values.lastName ||\r\n            !values.password ||\r\n            !values.phone ||\r\n            !values.address1){\r\n\t\t\treturn true; \r\n\t\t}\r\n\t\treturn false; \r\n\t  }\r\n\r\n\treturn (\r\n\t\t<Formik\r\n\t\tonSubmit={(values, actions) => handleSubmit(values, actions)}\r\n\t\tvalidationSchema={validationSchema}\r\n\t\tvalidateOnBlur={false}\r\n\t\tenableReinitialize={true}\r\n\t\tinitialValues={\r\n\t\t  {...customer}\r\n\t\t}\r\n\t  >\r\n\t\t{({\r\n\t\t  handleChange,\r\n\t\t  values,\r\n\t\t  handleSubmit,\r\n\t\t  errors,\r\n\t\t  isValid,\r\n\t\t  isSubmitting,\r\n\t\t  touched,\r\n\t\t  handleBlur,\r\n\t\t  setFieldTouched,\r\n\t\t  handleReset,\r\n\t\t}) => (\r\n\t\t\t<>\r\n\t\t\t<Modal\r\n\t\t\ttitle=\"Quick Edit\"\r\n\t\t\tvisible={visible}\r\n\t\t\tonOk={(e : any) => handleSubmit(e)}\r\n\t\t\tonCancel={handleCancel}\r\n\t\t\tokText='Update'\r\n\t\t\tokButtonProps={{\r\n\t\t\tloading: isSubmitting,\r\n\t\t\thtmlType: \"submit\",\r\n\t\t\tdisabled: getisSubmitButtonDisabled(values, isValid)\r\n\t\t\t}}\r\n\t\t\tbodyStyle={{\r\n                margin: '0',\r\n                padding: '10px'\r\n            }}\r\n  >\r\n      <div className='dubbleRowInputs'>\r\n         <div className='dubbleRowInputs__item'>\r\n         <Input \r\n\t\t\t   label='First Name'\r\n\t\t\t   value={values.firstName}\r\n\t\t\t   name='firstName'\r\n\t\t\t   isError={(touched.firstName && errors.firstName) ||\r\n\t\t\t\t  (!isSubmitting && updateCustomerState.error['error']['firstName'])}\r\n\t\t\t  \r\n\t\t\t\t  errorString={(touched.firstName && errors.firstName) ||\r\n\t\t\t\t\t  (!isSubmitting && updateCustomerState.error['error']['firstName'])}\r\n\t\t\t   onChange={(e : any) => {\r\n\t\t\t\t  handleChange(e);\r\n\t\t\t\t  setFieldTouched('firstName');\r\n\t\t\t\t}}\r\n\t\t\t   />\r\n         </div>\r\n         <div className='dubbleRowInputs__item'>\r\n         <Input \r\n\t\t\t   label='Last Name'\r\n\t\t\t   value={values.lastName}\r\n\t\t\t   name='lastName'\r\n\t\t\t   isError={(touched.lastName && errors.lastName) ||\r\n\t\t\t\t  (!isSubmitting && updateCustomerState.error['error']['lastName'])}\r\n\t\t\t  \r\n\t\t\t\t  errorString={(touched.lastName && errors.lastName) ||\r\n\t\t\t\t\t  (!isSubmitting && updateCustomerState.error['error']['lastName'])}\r\n\t\t\t   onChange={(e : any) => {\r\n\t\t\t\t  handleChange(e);\r\n\t\t\t\t  setFieldTouched('lastName');\r\n\t\t\t\t}}\r\n\t\t\t   />\r\n         </div>\r\n\r\n\r\n\r\n\r\n            </div>\r\n\r\n\t\t\t \r\n\r\n            <div className='dubbleRowInputs'>\r\n         <div className='dubbleRowInputs__item'>\r\n         <Input \r\n\t\t\t   label='Phone'\r\n\t\t\t   value={values.phone}\r\n\t\t\t   name='phone'\r\n\t\t\t   isError={(touched.phone && errors.phone) ||\r\n\t\t\t\t  (!isSubmitting && updateCustomerState.error['error']['phone'])}\r\n\t\t\t  \r\n\t\t\t\t  errorString={(touched.phone && errors.phone) ||\r\n\t\t\t\t\t  (!isSubmitting && updateCustomerState.error['error']['phone'])}\r\n\t\t\t   onChange={(e : any) => {\r\n\t\t\t\t  handleChange(e);\r\n\t\t\t\t  setFieldTouched('phone');\r\n\t\t\t\t}}\r\n\t\t\t   />\r\n         </div>\r\n         <div className='dubbleRowInputs__item'>\r\n         <Input \r\n\t\t\t   label='Email'\r\n\t\t\t   value={values.email}\r\n\t\t\t   name='email'\r\n\t\t\t   isError={(touched.email && errors.email) ||\r\n\t\t\t\t  (!isSubmitting && updateCustomerState.error['error']['email'])}\r\n\t\t\t  \r\n\t\t\t\t  errorString={(touched.email && errors.email) ||\r\n\t\t\t\t\t  (!isSubmitting && updateCustomerState.error['error']['email'])}\r\n\t\t\t   onChange={(e : any) => {\r\n\t\t\t\t  handleChange(e);\r\n\t\t\t\t  setFieldTouched('email');\r\n\t\t\t\t}}\r\n\t\t\t   />\r\n         </div>\r\n\r\n\r\n\r\n\r\n            </div>\r\n\r\n            \r\n\r\n\r\n    \r\n<div className='dubbleRowInputs'>\r\n         <div className='dubbleRowInputs__item'>\r\n         <h3 className='inputFieldLabel'>\r\n                Country\r\n            </h3>\r\n         <Select\r\n\t\t\tshowSearch\r\n\t\t\tstyle={{ width: '100%' }}\r\n\t\t\tplaceholder='Select a Country'\r\n\t\t\toptionFilterProp='children'\r\n\t\t\tdefaultValue={customer && customer.country}\r\n\t\t\tonChange={onChangeCountry}\r\n\t\t\tfilterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n\t\t>\r\n\t\t\t{countryListState.done &&\r\n\t\t\t\tcountryListState.data.length > 0 &&\r\n\t\t\t\tcountryOptions.map((option) => {\r\n\t\t\t\t\treturn <Option value={option.value}>{option.name}</Option>;\r\n\t\t\t\t})}\r\n\t\t</Select>\r\n         </div>\r\n         <div className='dubbleRowInputs__item'>\r\n         <h3 className='inputFieldLabel'>\r\n                City\r\n            </h3>\r\n         <Select\r\n\t\t\tdefaultValue={customer && customer.city}\r\n\t\t\tshowSearch\r\n\t\t\tstyle={{ width: '100%' }}\r\n\t\t\tplaceholder='Select a city'\r\n\t\t\toptionFilterProp='children'\r\n\t\t\tonChange={onChangeCity}\r\n\t\t\tfilterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n\t\t>\r\n\t\t\t{cityListState.done &&\r\n\t\t\t\tcityListState.data.length > 0 &&\r\n\t\t\t\tcityOptions.map((option) => {\r\n\t\t\t\t\treturn <Option value={option.value}>{option.name}</Option>;\r\n\t\t\t\t})}\r\n\t\t</Select>\r\n         </div>\r\n\r\n            </div>\r\n\r\n            <div style={{\r\n                marginTop: '12px'\r\n            }}></div>\r\n\r\n\r\n\r\n            <div className='dubbleRowInputs'>\r\n         <div className='dubbleRowInputs__item'>\r\n         <Input \r\n\t\t\t   label='Address'\r\n\t\t\t   value={values.address1}\r\n\t\t\t   name='address1'\r\n\t\t\t   isError={(touched.address1 && errors.address1) ||\r\n\t\t\t\t  (!isSubmitting && updateCustomerState.error['error']['address1'])}\r\n\t\t\t  \r\n\t\t\t\t  errorString={(touched.address1 && errors.address1) ||\r\n\t\t\t\t\t  (!isSubmitting && updateCustomerState.error['error']['address1'])}\r\n\t\t\t   onChange={(e : any) => {\r\n\t\t\t\t  handleChange(e);\r\n\t\t\t\t  setFieldTouched('address1');\r\n\t\t\t\t}}\r\n\t\t\t   />\r\n         </div>\r\n         <div className='dubbleRowInputs__item'>\r\n         <Input \r\n\t\t\t   label='More specific address'\r\n\t\t\t   value={values.address2}\r\n\t\t\t   name='address2'\r\n\t\t\t   isError={(touched.address2 && errors.address2) ||\r\n\t\t\t\t  (!isSubmitting && updateCustomerState.error['error']['address2'])}\r\n\t\t\t  \r\n\t\t\t\t  errorString={(touched.address2 && errors.address2) ||\r\n\t\t\t\t\t  (!isSubmitting && updateCustomerState.error['error']['address2'])}\r\n\t\t\t   onChange={(e : any) => {\r\n\t\t\t\t  handleChange(e);\r\n\t\t\t\t  setFieldTouched('address2');\r\n\t\t\t\t}}\r\n\t\t\t   />\r\n         </div>\r\n\r\n            </div>\r\n\r\n\r\n\r\n\r\n  </Modal>\r\n\t\t\t  \r\n\t\t\t</>\r\n\t\t  )}\r\n\t  </Formik>\r\n\t);\r\n};\r\n\r\n\r\nexport default QuickEdit;\r\n","import React, {useState,useEffect} from 'react';\r\nimport {withRouter, useHistory} from 'react-router-dom';\r\nimport { Table, Badge, Menu, Dropdown, notification, Space, Tag,Button, Input,Tooltip, Modal , Popconfirm} from 'antd';\r\nimport { PlusOutlined, EditOutlined, DeleteOutlined,EditFilled, CheckCircleOutlined } from '@ant-design/icons';\r\nimport Moment from 'react-moment';\r\n\r\n/// import hooks\r\nimport { useFetch, useHandleFetch } from \"../../hooks\";\r\n\r\n// import components\r\nimport { DataTableSkeleton } from \"../../components/Placeholders\";\r\nimport AddNewCustomer from \"./AddNewCustomer\";\r\nimport QuickEdit from \"./QuickEdit\";\r\nimport Empty from \"../../components/Empty\";\r\nconst { Column, ColumnGroup } = Table;\r\nconst { Search } = Input;\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t  message: message || 'Tag Created',\r\n\t  description: '',\r\n\t  icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n  };\r\n\r\n\r\n  const openErrorNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t  message: message || 'Something Went Wrong',\r\n\t  description: '',\r\n\t  icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n  };\r\n\r\n\r\n\r\n\r\n\r\ninterface myTableProps {\r\n  data: any; \r\n  setCustomerList?:any; \r\n} \r\n\r\n\r\nconst MyTable = ({data,setCustomerList}: myTableProps) => {\r\n    const [visible,setvisible] = useState(false);   \r\n    const [activeCategoryForEdit,setactiveCategoryForEdit] = useState(false); \r\n\r\n   const history = useHistory(); \r\n\r\n    const [deleteCustomerState, handleDeleteCustomerFetch] = useHandleFetch({}, 'deleteCustomer');\r\n      const handleDeleteCustomer = async (id) => {\r\n        const deleteCustomerRes = await handleDeleteCustomerFetch({\r\n          urlOptions: {\r\n            placeHolders: {\r\n              id,\r\n            }\r\n            }\r\n          });\r\n\r\n\r\n           // @ts-ignore\r\n\t\t  if(deleteCustomerRes && deleteCustomerRes.status === 'ok'){\r\n\t\t\t  openSuccessNotification('Deleted Customer'); \r\n\t\t\t  const newCustomerList =  data.filter(item => item.id !== id);\r\n\t\t\t  setCustomerList(newCustomerList); \r\n\t\t  }\r\n      }\r\n      \r\n\r\n    return (\r\n        <>\r\n        <Table \r\n        // expandable={{\r\n        //     expandedRowRender: record => <p style={{ margin: 0 }}>{record.name}</p>,\r\n        //     rowExpandable: record => record.name !== 'Not Expandable',\r\n        //   }}\r\n        // bordered={true}\r\n        size='small'\r\n        // pagination={false}\r\n        dataSource={data}\r\n        >\r\n\r\n          <Column\r\n           title=\"Name\" \r\n           dataIndex=\"name\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n           render={(text, record: any) => (\r\n            <>\r\n              <h4\r\n                onClick={() => {\r\n                  history.push(`/admin/customer/${record.id}`)\r\n                  // setcategoryDetailVisible(true);\r\n                  setactiveCategoryForEdit(record)\r\n                }}\r\n                style={{\r\n                  fontWeight: 400,\r\n                  color: '#555',\r\n                  cursor: 'pointer'\r\n                }}>\r\n                {text}\r\n              </h4>\r\n            </>\r\n          )}\r\n            />\r\n\r\n         \r\n          <Column\r\n           title=\"Phone\" \r\n           dataIndex=\"phone\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n         \r\n            />\r\n\r\n\r\n          <Column\r\n           title=\"Country\" \r\n           dataIndex=\"country\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n         \r\n            />\r\n\r\n\r\n          <Column\r\n           title=\"City\" \r\n           dataIndex=\"city\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n         \r\n            />\r\n\r\n           <Column\r\n           title=\"Created\" \r\n           dataIndex=\"created\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n           render={(text, record : any) => (\r\n            <Space size=\"middle\">\r\n            \r\n            <h5>\r\n              <Moment>\r\n                {text}\r\n              </Moment>\r\n            </h5>\r\n             \r\n            </Space>\r\n          )}\r\n            />\r\n\r\n\r\n\r\n          {/* <Column \r\n          \r\n          className='classnameofthecolumn'\r\n\r\n          title=\"Product\" dataIndex=\"product\" key=\"product\" /> */}\r\n\r\n          {/* <Column \r\n          \r\n          className='classnameofthecolumn'\r\n\r\n          title=\"Sub Category\" dataIndex=\"subCategory\" key=\"subCategory\" /> */}\r\n        \r\n        {/* <Column\r\n          title=\"Tags\"\r\n          dataIndex=\"tags\"\r\n          key=\"tags\"\r\n          render={tags => (\r\n            <>\r\n              {tags.map((tag : any) => (\r\n                <Tag color=\"blue\" key={tag}>\r\n                  {tag}\r\n                </Tag>\r\n              ))}\r\n            </>\r\n          )}\r\n        /> */}\r\n        <Column\r\n        \r\n        className='classnameofthecolumn'\r\n          title=\"\"\r\n          key=\"action\"\r\n          align='right'\r\n          render={(text, record : any) => (\r\n            <Space size=\"middle\">\r\n              <a href='##'>\r\n               <Tooltip placement=\"top\" title='Quick Edit Customer'>\r\n              <span className='iconSize' onClick={() => {\r\n                setvisible(true)\r\n                setactiveCategoryForEdit(record); \r\n              }}> \r\n              <EditOutlined />\r\n            \r\n              </span>\r\n               </Tooltip>\r\n               </a>\r\n\r\n             \r\n\r\n              \r\n               <Popconfirm \r\n               \r\n               onConfirm={() => handleDeleteCustomer(record.id)}\r\n               title=\"Are you sure？\" okText=\"Yes\" cancelText=\"No\">\r\n           \r\n           <span \r\n             className='iconSize iconSize-danger'\r\n             > \r\n             <DeleteOutlined/>\r\n            </span>\r\n       \r\n           </Popconfirm>\r\n             \r\n            </Space>\r\n          )}\r\n        />\r\n      </Table>\r\n\r\n    \r\n\r\n    {activeCategoryForEdit &&   <QuickEdit \r\n    customerList={data}\r\n    setCustomerList={setCustomerList}\r\n    setvisible={setvisible}\r\n    visible={visible}\r\n    customer={activeCategoryForEdit}/>}\r\n    \r\n    \r\n    </>\r\n    )\r\n}\r\n\r\n\r\ninterface Props {\r\n    history: any; \r\n}\r\n\r\nconst CustomerList = ({history}: Props) => {\r\n\r\n\r\n    const [customerList,setCustomerList] = useState([]); \r\n\r\n    const [customerState, handleCustomerListFetch] = useHandleFetch({}, 'customerList');\r\n  \r\n  \r\n    useEffect(()=>{\r\n     const setCustomers = async () => {\r\n       const customers = await handleCustomerListFetch({}); \r\n       // @ts-ignore\r\n       setCustomerList(customers); \r\n     }\r\n     setCustomers(); \r\n    },[])\r\n\r\n\r\n    \r\n\r\n  \r\n  const handleSearch = (value) => {\r\n    if(customerState.data.length > 0 ){\r\n      const newCustomerList = customerState.data.filter(item => item.name.toLowerCase().includes(value.toLowerCase())); \r\n      setCustomerList(newCustomerList); \r\n    }\r\n     \r\n  }\r\n\r\n\r\n\r\n    \r\n\r\n  const [addNewCategoryVisible,setAddNewCategoryVisible] = useState(false);   \r\n\r\n  // console.log('customerState',customerState)\r\n\r\n\r\n\r\n\treturn (\r\n\t\t<>\r\n    {/* <h2 className='containerPageTitle'>\r\n      Categories\r\n    </h2> */}\r\n    <div className='categoryListContainer'>\r\n            <div className='categoryListContainer__header'>\r\n           \r\n\r\n          <div className='categoryListContainer__header-searchBar'>\r\n          <h2 className='categoryListContainer__header-title'>\r\n            Customers\r\n            </h2>\r\n\r\n\r\n          <Search\r\n            enterButton={false}\r\n            className='searchbarClassName'\r\n          placeholder=\"search customer..\"\r\n          onSearch={value =>handleSearch(value)}\r\n          // style={{ width: 300 }}\r\n        />\r\n          </div>\r\n            <Button\r\n          // type=\"primary\"\r\n          className='btnPrimaryClassNameoutline'\r\n          icon={<PlusOutlined />}\r\n          onClick={() => setAddNewCategoryVisible(true)}\r\n        >\r\n        Add New\r\n            \r\n            </Button>\r\n            </div>\r\n\r\n            <div className='categoryListContainer__afterHeader'>\r\n            {/* <Search\r\n      placeholder=\"search categories..\"\r\n      size=\"large\"\r\n      onSearch={value => console.log(value)}\r\n      style={{ width: 300 }}\r\n    /> */}\r\n            </div>\r\n\r\n     \r\n\t\t\t\r\n\t\t\t<div className='categoryListContainer__categoryList'>\r\n        {customerState.done && customerList.length > 0 && <MyTable\r\n        setCustomerList={setCustomerList}\r\n         data={customerList} />}\r\n        {customerState.isLoading && <DataTableSkeleton />}\r\n        {customerState.done && !(customerList.length > 0) && (\r\n\t\t\t<Empty title='No Customer found'  />\r\n\t\t)}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\r\n\r\n{customerState.done && \r\n    <AddNewCustomer \r\n    setCustomerList={setCustomerList}\r\n          addNewCategoryVisible={addNewCategoryVisible} \r\n          setAddNewCategoryVisible={setAddNewCategoryVisible}\r\n          customerList={customerState.data}\r\n          \r\n           />}\r\n\r\n      \r\n\r\n        \r\n    </>\r\n\t);\r\n};\r\n\r\nexport default withRouter(CustomerList);\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Modal, Select, notification } from 'antd';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\nimport { PlusOutlined, EditOutlined, DeleteOutlined, EditFilled, CheckCircleOutlined } from '@ant-design/icons';\r\n\r\n\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport { useHandleFetch } from '../../hooks';\r\n\r\n\r\nconst { Option } = Select;\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    firstName: Yup.string()\r\n        .label('Firstname')\r\n        .required()\r\n        .min(2, 'First name must have at least 2 characters '),\r\n    lastName: Yup.string()\r\n        .label('Lastname')\r\n        .required()\r\n        .min(2, 'Lastname must have at least 2 characters '),\r\n    phone: Yup.string()\r\n        .required('Please tell us your mobile number.')\r\n        .max(13, 'Please enter a valid mobile number.'),\r\n    password: Yup.string()\r\n        .label('Password')\r\n        .required()\r\n        .min(6, 'Password must have at least 6 characters'),\r\n    address1: Yup.string()\r\n        .label('Address line 1')\r\n        .required()\r\n        .min(3, 'Address line 1 must have at least 3 characters '),\r\n\r\n    email: Yup.string().label('Email').email('Please enter a valid email'),\r\n});\r\n\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Tag Created',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Something Went Wrong',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n    });\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\r\ninterface Props {\r\n    customer: any;\r\n    setvisible: any;\r\n    visible: any;\r\n\r\n\r\n}\r\n\r\nconst QuickEdit = ({ customer, setvisible, visible }: Props) => {\r\n    const [updateCustomerState, handleUpdateCustomerFetch] = useHandleFetch({}, 'updateCustomer');\r\n\r\n\r\n    const [selectedCountryValue, setselectedCountryValue] = useState('');\r\n    const [selectedCityValue, setselectedCityValue] = useState('');\r\n\r\n    const [countryOptions, setcountryOptions] = useState([]);\r\n    const [cityOptions, setcityOptions] = useState([]);\r\n\r\n    const [countryListState, handleCountryListFetch] = useHandleFetch(\r\n        [],\r\n        'countryList'\r\n    );\r\n\r\n    const [cityListState, handleCityListFetch] = useHandleFetch([], 'cityList');\r\n\r\n    const [countryList, setCountryList] = useState([]);\r\n    const [cityList, setCityList] = useState([]);\r\n\r\n\r\n\r\n\r\n    const handleSubmit = async (values: any, actions: any) => {\r\n        const updateCustomerRes = await handleUpdateCustomerFetch({\r\n            urlOptions: {\r\n                placeHolders: {\r\n                    id: values.id,\r\n                }\r\n            },\r\n            body: {\r\n                phone: values.phone,\r\n                email: values.email,\r\n                password: values.password,\r\n                address1: values.address1,\r\n                address2: values.address2,\r\n                firstName: values.firstName,\r\n                lastName: values.lastName,\r\n                country: selectedCountryValue,\r\n                city: selectedCityValue,\r\n            },\r\n        });\r\n\r\n\r\n        // @ts-ignore\r\n        if (updateCustomerRes && updateCustomerRes.status === 'ok') {\r\n            openSuccessNotification();\r\n\r\n            // const positionInTag = () => {\r\n            //     return customerList.map(item => item.id).indexOf(customer.id);\r\n            // }\r\n\r\n            // const index = positionInTag();\r\n\r\n            // const updatedItem = Object.assign({}, tagList[index], { ...updateCustomerRes });\r\n            // const updateTagList = [...customerList.slice(0, index), updatedItem, ...customerList.slice(index + 1)];\r\n            // setCustomerList(updateTagList);\r\n\r\n        }\r\n        else {\r\n            openErrorNotification();\r\n        }\r\n\r\n        actions.setSubmitting(false);\r\n        setvisible(false)\r\n    };\r\n\r\n\r\n\r\n    const onChangeCity = (value) => {\r\n        setselectedCityValue(value);\r\n    }\r\n\r\n    const onChangeCountry = (value) => {\r\n        setselectedCountryValue(value);\r\n    }\r\n\r\n    useEffect(() => {\r\n        const setCountries = async () => {\r\n            const CountryListRes = await handleCountryListFetch({});\r\n\r\n            // @ts-ignore\r\n            if (CountryListRes && CountryListRes.length > 0) {\r\n                // @ts-ignore\r\n                const countryOptions = CountryListRes.map((country) => {\r\n                    return {\r\n                        value: country.name,\r\n                        name: country.name\r\n                    };\r\n                });\r\n                setcountryOptions(countryOptions);\r\n            }\r\n        };\r\n\r\n        setCountries();\r\n    }, []);\r\n\r\n\r\n    useEffect(() => {\r\n        const setCities = async () => {\r\n            const cityListRes = await handleCityListFetch({\r\n                urlOptions: {\r\n                    placeHolders: {\r\n                        country: selectedCountryValue,\r\n                    },\r\n                },\r\n            });\r\n\r\n            // @ts-ignore\r\n            if (cityListRes && cityListRes.length > 0) {\r\n                // @ts-ignore\r\n                const cityOptions = cityListRes.map((city) => {\r\n                    return {\r\n                        value: city.name,\r\n                        name: city.name\r\n                    };\r\n                });\r\n                setcityOptions(cityOptions);\r\n            }\r\n        };\r\n\r\n        setCities();\r\n    }, [selectedCountryValue]);\r\n\r\n\r\n    const handleCancel = (e: any) => {\r\n        setvisible(false);\r\n    };\r\n\r\n\r\n\r\n    const getisSubmitButtonDisabled = (values, isValid) => {\r\n        if (!isValid ||\r\n            !values.firstName ||\r\n            !values.lastName ||\r\n            !values.password ||\r\n            !values.phone ||\r\n            !values.address1) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    return (\r\n        <Formik\r\n            onSubmit={(values, actions) => handleSubmit(values, actions)}\r\n            validationSchema={validationSchema}\r\n            validateOnBlur={false}\r\n            enableReinitialize={true}\r\n            initialValues={\r\n                { ...customer }\r\n            }\r\n        >\r\n            {({\r\n                handleChange,\r\n                values,\r\n                handleSubmit,\r\n                errors,\r\n                isValid,\r\n                isSubmitting,\r\n                touched,\r\n                handleBlur,\r\n                setFieldTouched,\r\n                handleReset,\r\n            }) => (\r\n                    <>\r\n                        <Modal\r\n                            title=\"Quick Edit\"\r\n                            visible={visible}\r\n                            onOk={(e: any) => handleSubmit(e)}\r\n                            onCancel={handleCancel}\r\n                            okText='Update'\r\n                            okButtonProps={{\r\n                                loading: isSubmitting,\r\n                                htmlType: \"submit\",\r\n                                disabled: getisSubmitButtonDisabled(values, isValid)\r\n                            }}\r\n                            bodyStyle={{\r\n                                margin: '0',\r\n                                padding: '10px'\r\n                            }}\r\n                        >\r\n                            <div className='dubbleRowInputs'>\r\n                                <div className='dubbleRowInputs__item'>\r\n                                    <Input\r\n                                        label='First Name'\r\n                                        value={values.firstName}\r\n                                        name='firstName'\r\n                                        isError={(touched.firstName && errors.firstName) ||\r\n                                            (!isSubmitting && updateCustomerState.error['error']['firstName'])}\r\n\r\n                                        errorString={(touched.firstName && errors.firstName) ||\r\n                                            (!isSubmitting && updateCustomerState.error['error']['firstName'])}\r\n                                        onChange={(e: any) => {\r\n                                            handleChange(e);\r\n                                            setFieldTouched('firstName');\r\n                                        }}\r\n                                    />\r\n                                </div>\r\n                                <div className='dubbleRowInputs__item'>\r\n                                    <Input\r\n                                        label='Last Name'\r\n                                        value={values.lastName}\r\n                                        name='lastName'\r\n                                        isError={(touched.lastName && errors.lastName) ||\r\n                                            (!isSubmitting && updateCustomerState.error['error']['lastName'])}\r\n\r\n                                        errorString={(touched.lastName && errors.lastName) ||\r\n                                            (!isSubmitting && updateCustomerState.error['error']['lastName'])}\r\n                                        onChange={(e: any) => {\r\n                                            handleChange(e);\r\n                                            setFieldTouched('lastName');\r\n                                        }}\r\n                                    />\r\n                                </div>\r\n\r\n\r\n\r\n\r\n                            </div>\r\n\r\n\r\n\r\n                            <div className='dubbleRowInputs'>\r\n                                <div className='dubbleRowInputs__item'>\r\n                                    <Input\r\n                                        label='Phone'\r\n                                        value={values.phone}\r\n                                        name='phone'\r\n                                        isError={(touched.phone && errors.phone) ||\r\n                                            (!isSubmitting && updateCustomerState.error['error']['phone'])}\r\n\r\n                                        errorString={(touched.phone && errors.phone) ||\r\n                                            (!isSubmitting && updateCustomerState.error['error']['phone'])}\r\n                                        onChange={(e: any) => {\r\n                                            handleChange(e);\r\n                                            setFieldTouched('phone');\r\n                                        }}\r\n                                    />\r\n                                </div>\r\n                                <div className='dubbleRowInputs__item'>\r\n                                    <Input\r\n                                        label='Email'\r\n                                        value={values.email}\r\n                                        name='email'\r\n                                        isError={(touched.email && errors.email) ||\r\n                                            (!isSubmitting && updateCustomerState.error['error']['email'])}\r\n\r\n                                        errorString={(touched.email && errors.email) ||\r\n                                            (!isSubmitting && updateCustomerState.error['error']['email'])}\r\n                                        onChange={(e: any) => {\r\n                                            handleChange(e);\r\n                                            setFieldTouched('email');\r\n                                        }}\r\n                                    />\r\n                                </div>\r\n\r\n\r\n\r\n\r\n                            </div>\r\n\r\n\r\n\r\n\r\n\r\n                            <div className='dubbleRowInputs'>\r\n                                <div className='dubbleRowInputs__item'>\r\n                                    <h3 className='inputFieldLabel'>\r\n                                        Country\r\n            </h3>\r\n                                    <Select\r\n                                        showSearch\r\n                                        style={{ width: '100%' }}\r\n                                        placeholder='Select a Country'\r\n                                        optionFilterProp='children'\r\n                                        defaultValue={customer && customer.country}\r\n                                        onChange={onChangeCountry}\r\n                                        filterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n                                    >\r\n                                        {countryListState.done &&\r\n                                            countryListState.data.length > 0 &&\r\n                                            countryOptions.map((option) => {\r\n                                                return <Option value={option.value}>{option.name}</Option>;\r\n                                            })}\r\n                                    </Select>\r\n                                </div>\r\n                                <div className='dubbleRowInputs__item'>\r\n                                    <h3 className='inputFieldLabel'>\r\n                                        City\r\n            </h3>\r\n                                    <Select\r\n                                        defaultValue={customer && customer.city}\r\n                                        showSearch\r\n                                        style={{ width: '100%' }}\r\n                                        placeholder='Select a city'\r\n                                        optionFilterProp='children'\r\n                                        onChange={onChangeCity}\r\n                                        filterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n                                    >\r\n                                        {cityListState.done &&\r\n                                            cityListState.data.length > 0 &&\r\n                                            cityOptions.map((option) => {\r\n                                                return <Option value={option.value}>{option.name}</Option>;\r\n                                            })}\r\n                                    </Select>\r\n                                </div>\r\n\r\n                            </div>\r\n\r\n                            <div style={{\r\n                                marginTop: '12px'\r\n                            }}></div>\r\n\r\n\r\n\r\n                            <div className='dubbleRowInputs'>\r\n                                <div className='dubbleRowInputs__item'>\r\n                                    <Input\r\n                                        label='Address'\r\n                                        value={values.address1}\r\n                                        name='address1'\r\n                                        isError={(touched.address1 && errors.address1) ||\r\n                                            (!isSubmitting && updateCustomerState.error['error']['address1'])}\r\n\r\n                                        errorString={(touched.address1 && errors.address1) ||\r\n                                            (!isSubmitting && updateCustomerState.error['error']['address1'])}\r\n                                        onChange={(e: any) => {\r\n                                            handleChange(e);\r\n                                            setFieldTouched('address1');\r\n                                        }}\r\n                                    />\r\n                                </div>\r\n                                <div className='dubbleRowInputs__item'>\r\n                                    <Input\r\n                                        label='More specific address'\r\n                                        value={values.address2}\r\n                                        name='address2'\r\n                                        isError={(touched.address2 && errors.address2) ||\r\n                                            (!isSubmitting && updateCustomerState.error['error']['address2'])}\r\n\r\n                                        errorString={(touched.address2 && errors.address2) ||\r\n                                            (!isSubmitting && updateCustomerState.error['error']['address2'])}\r\n                                        onChange={(e: any) => {\r\n                                            handleChange(e);\r\n                                            setFieldTouched('address2');\r\n                                        }}\r\n                                    />\r\n                                </div>\r\n\r\n                            </div>\r\n\r\n\r\n\r\n\r\n                        </Modal>\r\n\r\n                    </>\r\n                )}\r\n        </Formik>\r\n    );\r\n};\r\n\r\n\r\nexport default QuickEdit;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useParams, useHistory } from \"react-router\";\r\n\r\n\r\n// import hooks\r\nimport { useHandleFetch } from \"../../hooks\";\r\n\r\n// import lib\r\nimport {\r\n    FileOutlined,\r\n    InboxOutlined,\r\n    RadiusUpleftOutlined,\r\n    RadiusUprightOutlined,\r\n    RadiusBottomleftOutlined,\r\n    RadiusBottomrightOutlined,\r\n    PlusOutlined,\r\n    DeleteOutlined,\r\n    EditOutlined,\r\n    CheckCircleOutlined\r\n} from '@ant-design/icons';\r\n\r\nimport { Skeleton, Empty, Popconfirm, Upload, message, Switch, Select, Button, notification, Table, Space, Input as CoolInput, Tooltip, Modal } from 'antd';\r\n\r\n\r\n// import components\r\nimport { DataTableSkeleton } from \"../../components/Placeholders\";\r\nimport CustomerEdit from \"./CustomerEdit\";\r\n\r\n\r\nconst { Column, ColumnGroup } = Table;\r\nconst { Search } = CoolInput;\r\n\r\n\r\ninterface Props {\r\n    productRecord?: any;\r\n}\r\n\r\nconst NewBrandDetail = (props: Props) => {\r\n    const [tagDetailState, handleTagDetailFetch] = useHandleFetch({}, 'tagDetail');\r\n    const [tagProductsState, handleTagProductsFetch] = useHandleFetch({}, 'tagProducts');\r\n    const [tagEditVisible, setTagEditVisible] = useState(false);\r\n\r\n\r\n    const params = useParams();\r\n    const history = useHistory();\r\n    const tagId = params['id'];\r\n\r\n    useEffect(() => {\r\n\r\n        const getBrandDetail = async () => {\r\n            await handleTagDetailFetch({\r\n                urlOptions: {\r\n                    placeHolders: {\r\n                        id: tagId\r\n                    }\r\n                }\r\n            })\r\n        };\r\n\r\n        getBrandDetail();\r\n\r\n    }, [tagId]);\r\n\r\n    useEffect(() => {\r\n        const getTagProducts = async () => {\r\n            await handleTagProductsFetch({\r\n                urlOptions: {\r\n                    placeHolders: {\r\n                        id: tagId\r\n                    }\r\n                }\r\n            })\r\n        };\r\n\r\n        getTagProducts();\r\n\r\n    }, [tagId]);\r\n\r\n\r\n\r\n\r\n    console.log('tagProductsState', tagProductsState);\r\n\r\n    console.log('brandParams', params);\r\n\r\n\r\n    return (\r\n        <div className='brandDetailContainer'>\r\n            <div className='brandDetailContainer__heading'>\r\n                <h3>\r\n                    Customer Detail\r\n                </h3>\r\n\r\n                {tagDetailState.done && tagDetailState.data && (Object.keys(tagDetailState.data).length > 0) && (\r\n                    <>\r\n                        <CustomerEdit\r\n                            visible={tagEditVisible}\r\n                            setvisible={setTagEditVisible}\r\n                            customer={tagDetailState.data}\r\n                        />\r\n                        <Button\r\n                            onClick={() => setTagEditVisible(true)}\r\n                            type='link'\r\n                            icon={<EditOutlined />}\r\n                        >\r\n                            Edit\r\n                      </Button>\r\n                    </>\r\n                )}\r\n            </div>\r\n            <Skeleton\r\n                paragraph={{ rows: 2 }}\r\n                loading={tagDetailState.isLoading}>\r\n                {tagDetailState.done && tagDetailState.data && !(Object.keys(tagDetailState.data).length > 0) && (\r\n                    <Empty description='No Tag found' image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n                )}\r\n\r\n                {tagDetailState.done && tagDetailState.data && (Object.keys(tagDetailState.data).length > 0) && (\r\n                    <div className='brandDetailContainer__header'>\r\n\r\n                        <div className='brandDetailContainer__header-info'>\r\n                            <h2>\r\n                                {tagDetailState.data['name']}\r\n                            </h2>\r\n                            <h3>\r\n                                {tagDetailState.data['description']}\r\n                            </h3>\r\n                            {tagDetailState.data['url'] && (\r\n                                <h3>\r\n                                    URL:\r\n                                    <span>\r\n                                        {tagDetailState.data['url']}\r\n                                    </span>\r\n\r\n                                </h3>\r\n                            )}\r\n                        </div>\r\n                    </div>\r\n                )}\r\n\r\n            </Skeleton>\r\n\r\n            <div className='brandDetailContainer__heading'>\r\n                <h3>\r\n                    Products\r\n                </h3>\r\n            </div>\r\n            <div className='brandDetailContainer__body'>\r\n                {tagProductsState.isLoading && <DataTableSkeleton />}\r\n                {tagProductsState.done && !(tagProductsState.data.length > 0) && (\r\n                    <div style={{\r\n                        marginTop: '100px'\r\n                    }}>\r\n                        <Empty description='No Orderss exists for this Customer ' image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n                    </div>\r\n                )}\r\n\r\n                {tagProductsState.done && tagProductsState.data && tagProductsState.data.length > 0 && (\r\n                    <>\r\n                        <Table\r\n                            style={{\r\n                                paddingTop: '10px',\r\n                                borderRadius: '5px !important',\r\n                                overflow: 'hidden',\r\n                                boxShadow: '0 0.125rem 0.625rem rgba(227, 231, 250, 0.3), 0 0.0625rem 0.125rem rgba(206, 220, 233, 0.4)'\r\n                            }}\r\n                            // expandable={{\r\n                            //     expandedRowRender: record => <p style={{ margin: 0 }}>{record.name}</p>,\r\n                            //     rowExpandable: record => record.name !== 'Not Expandable',\r\n                            //   }}\r\n                            // bordered={true}\r\n                            size='small'\r\n                            // pagination={false}\r\n                            dataSource={tagProductsState.data}\r\n                            tableLayout={'auto'}\r\n                            onHeaderRow={column => {\r\n                                return {\r\n                                    style: {\r\n                                        color: 'red !important'\r\n                                    }\r\n\r\n                                };\r\n                            }}\r\n                        >\r\n                            <Column\r\n                                title=\"\"\r\n                                dataIndex=\"cover\"\r\n                                key=\"id\"\r\n                                width={'80px'}\r\n\r\n                                className='classnameofthecolumn'\r\n\r\n                                render={(cover, record: any) => (\r\n                                    <>\r\n                                        <img\r\n                                            onClick={() => {\r\n                                                history.push(`/admin/product/${record.id}`)\r\n                                            }}\r\n                                            src={cover} alt='cover img' style={{\r\n                                                height: '40px',\r\n                                                width: '40px',\r\n                                                objectFit: \"contain\",\r\n                                                borderRadius: '3px',\r\n                                                cursor: 'pointer'\r\n                                            }} />\r\n\r\n\r\n\r\n\r\n                                    </>\r\n                                )}\r\n                            />\r\n\r\n                            <Column\r\n                                title=\"Name\"\r\n                                dataIndex=\"name\"\r\n                                key=\"id\"\r\n                                className='classnameofthecolumn'\r\n                                render={(text, record: any) => (\r\n                                    <>\r\n                                        <h4\r\n                                            onClick={() => {\r\n                                                history.push(`/admin/product/${record.id}`)\r\n                                            }}\r\n                                            style={{\r\n                                                fontWeight: 400,\r\n                                                color: '#555',\r\n                                                cursor: 'pointer'\r\n\r\n                                            }}>\r\n                                            {text}\r\n                                        </h4>\r\n\r\n\r\n                                    </>\r\n                                )}\r\n\r\n                            />\r\n\r\n                            <Column\r\n                                title=\"Offer Price\"\r\n                                dataIndex=\"offerPrice\"\r\n                                key=\"id\"\r\n                                className='classnameofthecolumn'\r\n\r\n                            />\r\n\r\n\r\n                            <Column\r\n                                title=\"Price\"\r\n                                dataIndex=\"price\"\r\n                                key=\"id\"\r\n                                className='classnameofthecolumn'\r\n\r\n                            />\r\n\r\n                        </Table>\r\n                    </>\r\n                )}\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NewBrandDetail\r\n","import React, {useState,useEffect} from 'react';\r\nimport {useHistory} from 'react-router-dom';\r\nimport { Table,Empty, Popconfirm, Space,Button, Input,Tooltip, notification  } from 'antd';\r\nimport { PlusOutlined, EditOutlined, DeleteOutlined,CheckCircleOutlined } from '@ant-design/icons';\r\n\r\n\r\n\r\n/// import hooks\r\nimport {  useHandleFetch } from \"../../hooks\";\r\n\r\n// import components\r\nimport { DataTableSkeleton } from \"../../components/Placeholders\";\r\n\r\n\r\n\r\nconst { Column } = Table;\r\nconst { Search } = Input;\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t  message: message || 'Page Created',\r\n\t  description: '',\r\n\t  icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n  };\r\n\r\n\r\n  const openErrorNotification = (message?: any) => {\r\n\tnotification.error({\r\n\t  message: message || 'Something Went Wrong',\r\n\t  description: '',\r\n\t  icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n  };\r\n\r\n\r\n\r\n\r\n\r\ninterface myTableProps {\r\n  data: any; \r\n  setBrandList: any; \r\n} \r\n\r\n\r\nconst MyTable = ({data,setBrandList}: myTableProps) => {\r\n    const [activeCategoryForEdit,setactiveCategoryForEdit] = useState(false); \r\n    const [deletePageState, handleDeletePageFetch] = useHandleFetch({}, 'deletePage');\r\n\r\n    const history = useHistory(); \r\n      \r\n      const handleDeletePage = async (id) => {\r\n        const deletePageRes = await handleDeletePageFetch({\r\n          urlOptions: {\r\n            placeHolders: {\r\n              id,\r\n            }\r\n            }\r\n          });\r\n\r\n            // @ts-ignore\r\n\t\t  if(deletePageRes && deletePageRes.status === 'ok'){\r\n\t\t\t  openSuccessNotification('Deleted Page'); \r\n\t\t\t  const newBrandList =  data.filter(item => item.id !== id);\r\n\t\t\t  setBrandList(newBrandList); \r\n\t\t  }\r\n      }\r\n      \r\n\r\n    return (\r\n        <>\r\n        <Table \r\n        // expandable={{\r\n        //     expandedRowRender: record => <p style={{ margin: 0 }}>{record.name}</p>,\r\n        //     rowExpandable: record => record.name !== 'Not Expandable',\r\n        //   }}\r\n        // bordered={true}\r\n        size='small'\r\n        // pagination={false}\r\n        dataSource={data}\r\n        >\r\n            <Column \r\n          title=\"\"\r\n           dataIndex=\"cover\"\r\n            key=\"id\" \r\n            width={'100px'}\r\n            \r\n           className='classnameofthecolumn'\r\n\r\n           render={(cover, record: any) => (\r\n            <>\r\n              <img\r\n                onClick={() => {\r\n                  setactiveCategoryForEdit(record);\r\n                  history.push('/admin/page/pageName')\r\n                }}\r\n                src={cover} alt='cover img' style={{\r\n                  height: '40px',\r\n                  width: '40px',\r\n                  objectFit: \"contain\",\r\n                  borderRadius: '3px',\r\n                  cursor: 'pointer'\r\n                }} />\r\n\r\n\r\n\r\n\r\n            </>\r\n          )}\r\n            />\r\n          <Column\r\n           title=\"Name\" \r\n           dataIndex=\"name\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n           render={(text, record: any) => (\r\n            <>\r\n\r\n              <h4\r\n                onClick={() => {\r\n                  setactiveCategoryForEdit(record);\r\n                  history.push('/admin/page/pageName')\r\n                }}\r\n                style={{\r\n                  fontWeight: 400,\r\n                  color: '#555',\r\n                  cursor: 'pointer'\r\n                }}>\r\n                {text}\r\n              </h4>\r\n\r\n\r\n            </>\r\n          )}\r\n            />\r\n\r\n<Column\r\n           title=\"Description\" \r\n           dataIndex=\"description\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n         \r\n            />\r\n          {/* <Column \r\n          \r\n          className='classnameofthecolumn'\r\n\r\n          title=\"Product\" dataIndex=\"product\" key=\"product\" /> */}\r\n\r\n          {/* <Column \r\n          \r\n          className='classnameofthecolumn'\r\n\r\n          title=\"Sub Category\" dataIndex=\"subCategory\" key=\"subCategory\" /> */}\r\n        \r\n        {/* <Column\r\n          title=\"Tags\"\r\n          dataIndex=\"tags\"\r\n          key=\"tags\"\r\n          render={tags => (\r\n            <>\r\n              {tags.map((tag : any) => (\r\n                <Tag color=\"blue\" key={tag}>\r\n                  {tag}\r\n                </Tag>\r\n              ))}\r\n            </>\r\n          )}\r\n        /> */}\r\n        <Column\r\n        \r\n        className='classnameofthecolumn'\r\n          title=\"\"\r\n          key=\"action\"\r\n          align='right'\r\n          render={(text, record : any) => (\r\n            <Space size=\"middle\">\r\n                <a href='##'>\r\n               <Tooltip placement=\"top\" title='Quick Edit Page'>\r\n              <span className='iconSize' onClick={() => {\r\n                setactiveCategoryForEdit(record); \r\n              }}> \r\n              <EditOutlined />\r\n            \r\n              </span>\r\n               </Tooltip>\r\n               </a>\r\n\r\n\r\n \r\n               <Popconfirm \r\n               \r\n               onConfirm={() => handleDeletePage(record.id)}\r\n               title=\"Are you sure？\" okText=\"Yes\" cancelText=\"No\">\r\n           \r\n           <span \r\n             className='iconSize iconSize-danger'\r\n             > \r\n             <DeleteOutlined/>\r\n            </span>\r\n           </Popconfirm>\r\n\r\n\r\n            </Space>\r\n          )}\r\n        />\r\n      </Table>\r\n\r\n\r\n  \r\n\r\n\r\n    \r\n\r\n\r\n    \r\n    </>\r\n    )\r\n}\r\n\r\n\r\ninterface Props {\r\n}\r\n\r\nconst PageList = ({}: Props) => {\r\n\r\n\r\n  const [pageList,setPageList] = useState([]);\r\n  const [pageState, handlePagsListFetch] = useHandleFetch({}, 'pageList');\r\n\r\n  const history = useHistory(); \r\n\r\n  useEffect(()=>{\r\n   const setPages = async () => {\r\n     const pages = await handlePagsListFetch({}); \r\n     // @ts-ignore\r\n     setPageList(pages); \r\n   }\r\n   setPages(); \r\n  },[])\r\n\r\n\r\n\r\n\r\n    \r\n  const handleSearch = (value) => {\r\n    if(pageState.data.length > 0 ){\r\n      const newBrandList = pageState.data.filter(item => item.name.toLowerCase().includes(value.toLowerCase())); \r\n      setPageList(newBrandList); \r\n    }\r\n     \r\n  }\r\n\r\n\treturn (\r\n\t\t<>\r\n  \r\n    <div className='categoryListContainer'>\r\n        <div className='categoryListContainer__header'>\r\n           <div className='categoryListContainer__header-searchBar'>\r\n\r\n          <h2 className='categoryListContainer__header-title'>\r\n            Pages\r\n            </h2>\r\n\r\n          <Search\r\n            enterButton={false}\r\n            className='searchbarClassName'\r\n          placeholder=\"search pages..\"\r\n          onSearch={value => handleSearch(value)}\r\n        />\r\n          </div>\r\n            <Button\r\n          // type=\"primary\"\r\n          className='btnPrimaryClassNameoutline'\r\n          icon={<PlusOutlined />}\r\n          onClick={() => history.push('/admin/page/new')}\r\n        >\r\n        Add New\r\n            \r\n            </Button>\r\n            </div>\r\n\r\n            <div className='categoryListContainer__afterHeader'>\r\n            {/* <Search\r\n      placeholder=\"search categories..\"\r\n      size=\"large\"\r\n      onSearch={value => console.log(value)}\r\n      style={{ width: 300 }}\r\n    /> */}\r\n            </div>\r\n\r\n     \r\n\t\t\t\r\n\t\t\t<div className='categoryListContainer__categoryList'>\r\n        {pageState.done && pageList.length > 0 && <MyTable \r\n          setBrandList={setPageList}\r\n        data={pageList} />}\r\n        {pageState.isLoading && <DataTableSkeleton />}\r\n        {pageState.done && !(pageList.length > 0) && (\r\n\t\t\t<div style={{\r\n\t\t\t\tmarginTop: '100px'\r\n\t\t\t}}>\r\n\t\t\t\t<Empty description='No Page found'  image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n\t\t\t</div>\r\n\t\t)}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\r\n\r\n    </>\r\n\t);\r\n};\r\n\r\nexport default PageList;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n\r\n// import hhooks\r\nimport { useHandleFetch } from '../../hooks';\r\n\r\n\r\n// import third party ui lib\r\nimport { Upload, message, Switch, Select, Button, notification, Modal, Empty, Steps, Tooltip } from 'antd';\r\n\r\nimport {\r\n\tCheckCircleOutlined,\r\n\tCaretRightOutlined,\r\n\tCaretLeftOutlined,\r\n\tCaretRightFilled,\r\n\tUserOutlined,\r\n\tInfoCircleOutlined,\r\n\tFileOutlined,\r\n\tInboxOutlined,\r\n\tFileAddOutlined,\r\n\tDeleteOutlined,\r\n\tCloseOutlined,\r\n\tCheckOutlined,\r\n\tPlusOutlined,\r\n\tFileImageFilled\r\n} from '@ant-design/icons';\r\n\r\nimport CKEditor from '@ckeditor/ckeditor5-react';\r\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\r\n\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport MediaLibrary from \"../../components/MediaLibrary\";\r\n\r\n\r\n\r\nconst { Option } = Select;\r\nconst { Step } = Steps;\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t\tmessage: message || 'Page Created',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n\tnotification.error({\r\n\t\tmessage: message || 'Something Went Wrong',\r\n\t\tdescription: '',\r\n\t\ticon: <InfoCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n\tname: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\n\r\n\r\n\r\nconst initialValues = {\r\n\tname: '',\r\n\turl: ''\r\n};\r\n\r\n\r\nconst steps = [\r\n\t{\r\n\t\ttitle: 'Order Information',\r\n\t\tcontent: '',\r\n\t\t// description: 'Add Customer & Products'\r\n\t},\r\n\t{\r\n\t\ttitle: 'Billing Address',\r\n\r\n\t},\r\n\t{\r\n\t\ttitle: 'Confirm Order',\r\n\t\tcontent: '',\r\n\t},\r\n];\r\n\r\n\r\n\r\n\r\ninterface Props {\r\n\r\n}\r\n\r\nconst AddNewPage = ({ }: Props) => {\r\n\r\n\tconst [addPageState, handleAddPageFetch] = useHandleFetch({}, 'addpage');\r\n\tconst [content, setContent] = useState(\"<p>Hello from the new page !</p>\");\r\n\tconst [myImages, setmyImages] = useState(false);\r\n\tconst [visibleMedia, setvisibleMedia] = useState(false);\r\n\tconst [coverImageId, setCoverImageId] = useState('');\r\n\r\n\r\n\tconst handleAddPageSubmit = async (values: any, actions: any) => {\r\n\t\tconsole.log('content', content);\r\n\t\tconsole.log('values', values);\r\n\t\tconst addOrderRes = await handleAddPageFetch({\r\n\t\t\tbody: {\r\n\t\t\t\tname: values.name,\r\n\t\t\t\tcontent: content,\r\n\t\t\t\turl: values.name,\r\n\t\t\t\tcover: myImages ? myImages[0] && myImages[0].id : '',\r\n\t\t\t},\r\n\t\t});\r\n\r\n\t\t// @ts-ignore\r\n\t\tif (addOrderRes && addOrderRes.status === 'ok') {\r\n\t\t\topenSuccessNotification();\r\n\r\n\r\n\t\t\tactions.resetForm();\r\n\t\t}\r\n\t\telse {\r\n\t\t\topenErrorNotification(\"Couldn't create page, Something went wrong\")\r\n\t\t}\r\n\r\n\t\tactions.setSubmitting(false);\r\n\t};\r\n\r\n\r\n\tconst getisSubmitButtonDisabled = (values, isValid) => {\r\n\t\tif (!isValid ||\r\n\t\t\t!values.name ||\r\n\t\t\t!values.pickUpLocation ||\r\n\t\t\t!values.time) {\r\n\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\r\n\tconst handleImagesDelete = (id) => {\r\n\t\t// @ts-ignore\r\n\t\tconst newImages = myImages && myImages.filter(image => {\r\n\t\t\treturn image.id !== id;\r\n\t\t})\r\n\r\n\t\tsetmyImages(newImages);\r\n\t}\r\n\r\n\r\n\r\n\r\n\tconsole.log('myImagesdx', myImages)\r\n\r\n\treturn (\r\n\t\t<Formik\r\n\t\t\tonSubmit={(values, actions) => handleAddPageSubmit(values, actions)}\r\n\t\t\tvalidationSchema={validationSchema}\r\n\t\t\tvalidateOnBlur={false}\r\n\t\t\tenableReinitialize={true}\r\n\t\t\tinitialValues={\r\n\t\t\t\t{ ...initialValues }\r\n\t\t\t}\r\n\t\t>\r\n\t\t\t{({\r\n\t\t\t\thandleChange,\r\n\t\t\t\tvalues,\r\n\t\t\t\thandleSubmit,\r\n\t\t\t\terrors,\r\n\t\t\t\tisValid,\r\n\t\t\t\tisSubmitting,\r\n\t\t\t\ttouched,\r\n\t\t\t\thandleBlur,\r\n\t\t\t\tsetFieldTouched,\r\n\t\t\t\thandleReset,\r\n\t\t\t}) => (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<div className=\"addNewPageContainer\">\r\n\t\t\t\t\t\t\t<h3 className='addNewPageContainer__heading'>\r\n\t\t\t\t\t\t\t\tAdd New Page\r\n\t\t                 \t</h3>\r\n\r\n\t\t\t\t\t\t\t<div className='addNewPageContainer__header'>\r\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs'>\r\n\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\tlabel='Title'\r\n\t\t\t\t\t\t\t\t\t\t\tvalue={values.name}\r\n\t\t\t\t\t\t\t\t\t\t\tname='name'\r\n\t\t\t\t\t\t\t\t\t\t\tisError={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addPageState.error['error']['name'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addPageState.error['error']['name'])}\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('name');\r\n\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\tlabel='URL'\r\n\t\t\t\t\t\t\t\t\t\t\tvalue={values.url}\r\n\t\t\t\t\t\t\t\t\t\t\tname='url'\r\n\t\t\t\t\t\t\t\t\t\t\tisError={(touched.url && errors.url) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addPageState.error['error']['url'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.url && errors.url) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addPageState.error['error']['url'])}\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('url');\r\n\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>Thumbnail</h3>\r\n\r\n\t\t\t\t\t\t\t\t<div className='aboutToUploadImagesContainer'>\r\n\t\t\t\t\t\t\t\t\t{myImages &&\r\n\t\t\t\t\t\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\t\t\t\t\t\tmyImages.length > 0 && myImages.map((image, index) => {\r\n\t\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div className='aboutToUploadImagesContainer__item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='aboutToUploadImagesContainer__item-imgContainer'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => setCoverImageId(image.id)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<img src={image.cover} alt={image.alt} />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<span\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => handleImagesDelete(image.id)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='aboutToUploadImagesContainer__item-remove'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<CloseOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t\t})}\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t{myImages ? !myImages[0] && (\r\n\t\t\t\t\t\t\t\t\t\t<Tooltip\r\n\t\t\t\t\t\t\t\t\t\t\ttitle={'Attach images'}>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetvisibleMedia(true);\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\tclassName='aboutToUploadImagesContainer__uploadItem'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t{/* <FileAddOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<FileImageTwoTone />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<FileImageOutlined /> */}\r\n\t\t\t\t\t\t\t\t\t\t\t\t<FileImageFilled />\r\n\t\t\t\t\t\t\t\t\t\t\t\t{/* <h5>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t Select From Library\r\n\t\t\t\t\t\t\t\t\t\t\t\t<     /h5> */}\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span className='aboutToUploadImagesContainer__uploadItem-plus'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<PlusOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t\t\t\t) : <Tooltip\r\n\t\t\t\t\t\t\t\t\t\ttitle={'Attach images'}>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetvisibleMedia(true);\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\tclassName='aboutToUploadImagesContainer__uploadItem'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t{/* <FileAddOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t<FileImageTwoTone />\r\n\t\t\t\t\t\t\t\t\t\t\t\t<FileImageOutlined /> */}\r\n\t\t\t\t\t\t\t\t\t\t\t\t<FileImageFilled />\r\n\t\t\t\t\t\t\t\t\t\t\t\t{/* <h5>\r\n\t\t\t\t\t\t\t\t\t\t\t\t Select From Library\r\n\t\t\t\t\t\t\t\t\t\t<     /h5> */}\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span className='aboutToUploadImagesContainer__uploadItem-plus'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<PlusOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</Tooltip>}\r\n\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className='addNewPageContainer__body'>\r\n\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\t\t\tContent\r\n                               </h3>\r\n\r\n\t\t\t\t\t\t\t\t<CKEditor\r\n\t\t\t\t\t\t\t\t\teditor={ClassicEditor}\r\n\t\t\t\t\t\t\t\t\tdata={content}\r\n\t\t\t\t\t\t\t\t\tonInit={editor => {\r\n\t\t\t\t\t\t\t\t\t\t// You can store the \"editor\" and use when it is needed.\r\n\t\t\t\t\t\t\t\t\t\tconsole.log('Editor is ready to use!', editor);\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\tonChange={(event, editor) => {\r\n\t\t\t\t\t\t\t\t\t\tconst data = editor.getData();\r\n\t\t\t\t\t\t\t\t\t\tsetContent(data);\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\tonBlur={(event, editor) => {\r\n\t\t\t\t\t\t\t\t\t\tconsole.log('Blur.', editor);\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\tonFocus={(event, editor) => {\r\n\t\t\t\t\t\t\t\t\t\tconsole.log('Focus.', editor);\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\tmarginTop: '20px'\r\n\t\t\t\t\t\t\t}}></div>\r\n\r\n\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\tloading={addPageState.isLoading}\r\n\t\t\t\t\t\t\t\tonClick={(e: any) => handleSubmit(e)}\r\n\t\t\t\t\t\t\t\tclassName='btnPrimaryClassNameoutline'\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\tCreate page\r\n                            </Button>\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t<MediaLibrary\r\n\t\t\t\t\t\t\tsetvisible={setvisibleMedia}\r\n\t\t\t\t\t\t\tvisible={visibleMedia}\r\n\t\t\t\t\t\t\tsetmyImages={setmyImages}\r\n\t\t\t\t\t\t\tmyImages={myImages}\r\n\t\t\t\t\t\t\tisModalOpenForImages={true}\r\n\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</>\r\n\t\t\t\t)}\r\n\t\t</Formik>\r\n\r\n\r\n\r\n\r\n\t);\r\n};\r\n\r\nexport default AddNewPage;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/*\r\n\r\n<div className=\"addNewPageContainer\">\r\n\t\t\t<h3 className='addNewPageContainer__heading'>\r\n\t\t\t\tAdd New Order\r\n\t\t\t</h3>\r\n\t\t\t<div className='addNewPageContainer__header'>\r\n\r\n\t\t\t</div>\r\n\t\t\t<div className='addNewPageContainer__body'>\r\n\r\n\t\t\t</div>\r\n\t\t</div>\r\n\r\n\r\n*/","import React,{useState} from 'react';\r\nimport { Modal  } from 'antd';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport {useHandleFetch} from '../../hooks';\r\n\r\nconst validationSchema = Yup.object().shape({\r\n\tname: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n\tdescription: Yup.string().label('Description').required('Description is required')\r\n});\r\n\r\n\r\n\r\n\r\n\r\ninterface Props {\r\n\tcategory: any;\r\n\tsetvisible: any; \r\n\tvisible: any;\r\n}\r\n\r\nconst QuickEdit = ({ category, setvisible, visible }: Props) => {\r\n\tconst [updateCategoryState, handleUpdateCategoryFetch] = useHandleFetch({}, 'updateCategory');\r\n\r\n\tconst handleSubmit = async (values : any, actions : any) => {\r\n\t  const updateCategoryRes = await handleUpdateCategoryFetch({\r\n\t\turlOptions: {\r\n\t\t\tplaceHolders: {\r\n\t\t\t  id: values.id,\r\n\t\t\t}\r\n\t\t  },\r\n\t\tbody: {\r\n\t\t\tname: values.name,\r\n\t\t\tdescription: values.description,\r\n\t\t},\r\n\t  });\r\n\t\r\n\t  actions.setSubmitting(false);\r\n\t};\r\n\t\r\n\r\n\tconst handleCancel = (e: any) => {\r\n        setvisible(false);\r\n      };\r\n\r\n\r\n\r\n\t  const getisSubmitButtonDisabled = (values,isValid) => {\r\n\t\tif(!values.name || !values.description || !isValid){\r\n\t\t\treturn true; \r\n\t\t}\r\n\t\treturn false; \r\n\t  }\r\n\r\n\treturn (\r\n\t\t<Formik\r\n\t\tonSubmit={(values, actions) => handleSubmit(values, actions)}\r\n\t\tvalidationSchema={validationSchema}\r\n\t\tvalidateOnBlur={false}\r\n\t\tenableReinitialize={true}\r\n\t\tinitialValues={\r\n\t\t  {...category}\r\n\t\t}\r\n\t  >\r\n\t\t{({\r\n\t\t  handleChange,\r\n\t\t  values,\r\n\t\t  handleSubmit,\r\n\t\t  errors,\r\n\t\t  isValid,\r\n\t\t  isSubmitting,\r\n\t\t  touched,\r\n\t\t  handleBlur,\r\n\t\t  setFieldTouched,\r\n\t\t  handleReset,\r\n\t\t}) => (\r\n\t\t\t<>\r\n\t\t\t<Modal\r\n\t\t\ttitle=\"Quick Edit\"\r\n\t\t\tvisible={visible}\r\n\t\t\tonOk={(e : any) => handleSubmit(e)}\r\n\t\t\tonCancel={handleCancel}\r\n\t\t\tokText='Update'\r\n\t\t\tokButtonProps={{\r\n\t\t\tloading: isSubmitting,\r\n\t\t\thtmlType: \"submit\",\r\n\t\t\tdisabled: getisSubmitButtonDisabled(values, isValid)\r\n\t\t\t}}\r\n  >\r\n  <Input \r\n\t\t\t   label='Title'\r\n\t\t\t   value={values.name}\r\n\t\t\t   name='name'\r\n\t\t\t   isError={(touched.name && errors.name) ||\r\n\t\t\t\t  (!isSubmitting && updateCategoryState.error['error']['name'])}\r\n\t\t\t  \r\n\t\t\t\t  errorString={(touched.name && errors.name) ||\r\n\t\t\t\t\t  (!isSubmitting && updateCategoryState.error['error']['name'])}\r\n\t\t\t   onChange={(e : any) => {\r\n\t\t\t\t  handleChange(e);\r\n\t\t\t\t  setFieldTouched('name');\r\n\t\t\t\t}}\r\n\t\t\t   />\r\n\t\t\t  <TextArea\r\n\t\t\t   label='Description' \r\n\t\t\t   value={values.description}\r\n\t\t\t   name='description'\r\n\t\t\t   isError={(touched.description && errors.description) ||\r\n\t\t\t\t  (!isSubmitting && updateCategoryState.error['error']['description'])}\r\n\t\t\t  \r\n\t\t\t\t  errorString={(touched.description && errors.description) ||\r\n\t\t\t\t\t  (!isSubmitting && updateCategoryState.error['error']['description'])}\r\n\t\t\t   onChange={(e : any) => {\r\n\t\t\t\t  handleChange(e);\r\n\t\t\t\t  setFieldTouched('description');\r\n\t\t\t\t}}\r\n\t\t\t\t />\r\n  </Modal>\r\n\t\t\t  \r\n\t\t\t</>\r\n\t\t  )}\r\n\t  </Formik>\r\n\t);\r\n};\r\n\r\n\r\nexport default QuickEdit;\r\n","// @ts-nocheck\r\n\r\nimport React from 'react'; \r\nimport { Tag, Input, Tooltip } from 'antd';\r\nimport { PlusOutlined } from '@ant-design/icons';\r\n\r\nclass EditableTagGroup extends React.Component {\r\n  state = {\r\n    tags: [],\r\n    inputVisible: false,\r\n    inputValue: '',\r\n    editInputIndex: -1,\r\n    editInputValue: '',\r\n  };\r\n\r\n  handleClose = removedTag => {\r\n    const tags = this.state.tags.filter(tag => tag !== removedTag);\r\n    this.setState({ tags });\r\n  };\r\n\r\n  showInput = () => {\r\n    this.setState({ inputVisible: true }, () => this.input.focus());\r\n  };\r\n\r\n  handleInputChange = e => {\r\n    this.setState({ inputValue: e.target.value });\r\n  };\r\n\r\n  handleInputConfirm = () => {\r\n    const { inputValue } = this.state;\r\n    let { tags } = this.state;\r\n    if (inputValue && tags.indexOf(inputValue) === -1) {\r\n      tags = [...tags, inputValue];\r\n    }\r\n    this.setState({\r\n      tags,\r\n      inputVisible: false,\r\n      inputValue: '',\r\n    });\r\n  };\r\n\r\n  handleEditInputChange = e => {\r\n    this.setState({ editInputValue: e.target.value });\r\n  };\r\n\r\n  handleEditInputConfirm = () => {\r\n    this.setState(({ tags, editInputIndex, editInputValue }) => {\r\n      const newTags = [...tags];\r\n      newTags[editInputIndex] = editInputValue;\r\n\r\n      return {\r\n        tags: newTags,\r\n        editInputIndex: -1,\r\n        editInputValue: '',\r\n      };\r\n    });\r\n  };\r\n\r\n  saveInputRef = input => {\r\n    this.input = input;\r\n  };\r\n\r\n  saveEditInputRef = input => {\r\n    this.editInput = input;\r\n  };\r\n\r\n  render() {\r\n    const { tags, inputVisible, inputValue, editInputIndex, editInputValue } = this.state;\r\n    return (\r\n      <>\r\n        {tags.map((tag, index) => {\r\n          if (editInputIndex === index) {\r\n            return (\r\n              <Input\r\n                ref={this.saveEditInputRef}\r\n                key={tag}\r\n                size=\"small\"\r\n                className=\"tag-input\"\r\n                value={editInputValue}\r\n                onChange={this.handleEditInputChange}\r\n                onBlur={this.handleEditInputConfirm}\r\n                onPressEnter={this.handleEditInputConfirm}\r\n              />\r\n            );\r\n          }\r\n\r\n          const isLongTag = tag.length > 20;\r\n\r\n          const tagElem = (\r\n            <Tag\r\n              className=\"edit-tag\"\r\n              key={tag}\r\n              closable={index !== 0}\r\n              onClose={() => this.handleClose(tag)}\r\n            >\r\n              <span\r\n                onDoubleClick={e => {\r\n                  if (index !== 0) {\r\n                    this.setState({ editInputIndex: index, editInputValue: tag }, () => {\r\n                      this.editInput.focus();\r\n                    });\r\n                    e.preventDefault();\r\n                  }\r\n                }}\r\n              >\r\n                {isLongTag ? `${tag.slice(0, 20)}...` : tag}\r\n              </span>\r\n            </Tag>\r\n          );\r\n          return isLongTag ? (\r\n            <Tooltip title={tag} key={tag}>\r\n              {tagElem}\r\n            </Tooltip>\r\n          ) : (\r\n            tagElem\r\n          );\r\n        })}\r\n        {inputVisible && (\r\n          <Input\r\n          style={{\r\n            margin: \"10px 0\"\r\n          }}\r\n            ref={this.saveInputRef}\r\n            type=\"text\"\r\n            size=\"small\"\r\n            className=\"tag-input\"\r\n            value={inputValue}\r\n            onChange={this.handleInputChange}\r\n            onBlur={this.handleInputConfirm}\r\n            onPressEnter={this.handleInputConfirm}\r\n          />\r\n        )}\r\n        {!inputVisible && (\r\n          <Tag className=\"site-tag-plus\" onClick={this.showInput}>\r\n            <PlusOutlined /> New Value\r\n          </Tag>\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EditableTagGroup","import React, {useState} from 'react';\r\n\r\n// import third party ui lib\r\nimport { Upload, message, Switch, Select, Button, notification,Table, Space, Input as CoolInput,Tooltip, Modal,\r\n\r\n} from 'antd';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n\r\n\r\nimport {\r\n\tFileOutlined,\r\n\tInboxOutlined,\r\n\tRadiusUpleftOutlined,\r\n\tRadiusUprightOutlined,\r\n\tRadiusBottomleftOutlined,\r\n\tRadiusBottomrightOutlined,\r\n\tPlusOutlined,\r\n\tDeleteOutlined,\r\n\tEditOutlined\r\n} from '@ant-design/icons';\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n\r\n\r\n/// import hooks\r\nimport { useFetch, useHandleFetch } from \"../../hooks\";\r\n\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport { DataTableSkeleton } from \"../../components/Placeholders\";\r\nimport QuickEdit from \"./QuickEdit\"\r\nimport AddAttributeValues from \"./AddAttributeValues\"\r\n\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n\tname: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n\tdescription: Yup.string().label('Description').required('Description is required')\r\n});\r\n\r\n\r\nconst initialValues = {\r\n\tname: '',\r\n\tdescription: ''\r\n}\r\n\r\n\r\nconst { Column, ColumnGroup } = Table;\r\nconst { Search } = CoolInput;\r\n\r\n\r\n\r\nconst MyTable = ({data}) => {\r\n    const [visible,setvisible] = useState(false);   \r\n\tconst [activeCategoryForEdit,setactiveCategoryForEdit] = useState(false); \r\n    const [deleteTagState, handleDeleteTagFetch] = useHandleFetch({}, 'deleteTag');\r\n\r\n\r\n\tconst handleDeleteCategory = async (id) => {\r\n        const deleteTagRes = await handleDeleteTagFetch({\r\n          urlOptions: {\r\n            placeHolders: {\r\n              id,\r\n            }\r\n            }\r\n          });\r\n      }\r\n\r\n\r\n    const handleOk = (e: any) => {\r\n        setvisible(false);\r\n      \r\n      };\r\n    \r\n      const handleCancel = (e: any) => {\r\n        setvisible(false);\r\n      };\r\n\r\n      \r\n\r\n    return (\r\n        <>\r\n         <Table \r\n        // expandable={{\r\n        //     expandedRowRender: record => <p style={{ margin: 0 }}>{record.name}</p>,\r\n        //     rowExpandable: record => record.name !== 'Not Expandable',\r\n        //   }}\r\n        // bordered={true}\r\n        size='small'\r\n        // pagination={false}\r\n        dataSource={data}\r\n        >\r\n\r\n          <Column\r\n           title=\"Name\" \r\n           dataIndex=\"name\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n         \r\n            />\r\n\r\n<Column\r\n           title=\"Description\" \r\n           dataIndex=\"description\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n         \r\n            />\r\n        <Column\r\n        \r\n        className='classnameofthecolumn'\r\n          title=\"\"\r\n          key=\"action\"\r\n          align='right'\r\n          render={(text, record : any) => (\r\n            <Space size=\"middle\">\r\n            \r\n               <Tooltip placement=\"top\" title='Quick Edit Tag'>\r\n              <span className='iconSize' onClick={() => {\r\n                setvisible(true)\r\n                setactiveCategoryForEdit(record); \r\n              }}> \r\n              <EditOutlined />\r\n            \r\n              </span>\r\n               </Tooltip>\r\n\r\n\r\n             \r\n              <Tooltip placement=\"top\" title='Delete Tag'>\r\n            \r\n\r\n             <span \r\n             className='iconSize iconSize-danger'\r\n             onClick={() => handleDeleteCategory(record.id)}\r\n             > \r\n             <DeleteOutlined/>\r\n            </span>\r\n            \r\n          </Tooltip>\r\n             \r\n            </Space>\r\n          )}\r\n        />\r\n      </Table>\r\n\r\n\r\n\r\n     \r\n\r\n\t\t{activeCategoryForEdit &&   <QuickEdit \r\n    setvisible={setvisible}\r\n    visible={visible}\r\n    category={activeCategoryForEdit}/>}\r\n    </>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\n\r\nconst props = {\r\n\tname: 'file',\r\n\tmultiple: true,\r\n\taction: 'https://www.mocky.io/v2/5cc8019d300000980a055e76',\r\n\tonChange(info: any) {\r\n\t\tconst { status } = info.file;\r\n\t\tif (status !== 'uploading') {\r\n\t\t\t// console.log(info.file, info.fileList);\r\n\t\t}\r\n\t\tif (status === 'done') {\r\n\t\t\tmessage.success(`${info.file.name} file uploaded successfully.`);\r\n\t\t} else if (status === 'error') {\r\n\t\t\tmessage.error(`${info.file.name} file upload failed.`);\r\n\t\t}\r\n\t}\r\n};\r\n\r\ninterface Props {}\r\n\r\nconst AttributeList = ({  }: Props) => {\r\n\tconst tagState = useFetch([], [], 'brandList', {\r\n\t\turlOptions: {\r\n\t\t  params: {\r\n\t\t\tisSubCategory: true,\r\n\t\t  },\r\n\t\t},\r\n\t  });\r\n\r\n\t  const [updateCategoryState, handleUpdateCategoryFetch] = useHandleFetch({}, 'updateCategory');\r\n\t  const [addNewCategoryVisible,setAddNewCategoryVisible] = useState(false);   \r\n\r\n\r\n\r\n\t  const handleSubmit = async (values : any, actions : any) => {\r\n\t\tconst updateCategoryRes = await handleUpdateCategoryFetch({\r\n\t\t  urlOptions: {\r\n\t\t\t  placeHolders: {\r\n\t\t\t\tid: values.id,\r\n\t\t\t  }\r\n\t\t\t},\r\n\t\t  body: {\r\n\t\t\t  name: values.name,\r\n\t\t\t  description: values.description,\r\n\t\t  },\r\n\t\t});\r\n\t  \r\n\t\tactions.setSubmitting(false);\r\n\t  };\r\n\t  \r\n \r\n  \r\n  \r\n  \r\n\t\tconst getisSubmitButtonDisabled = (values,isValid) => {\r\n\t\t  if(!values.name || !values.description || !isValid){\r\n\t\t\t  return true; \r\n\t\t  }\r\n\t\t  return false; \r\n\t\t}\r\n\r\n\r\n\r\n\r\n  const handleOkAddNewCategory = (e: any) => {\r\n    setAddNewCategoryVisible(false);\r\n  \r\n  };\r\n\r\n  const handleCancelAddNewCategory = (e: any) => {\r\n    setAddNewCategoryVisible(false);\r\n  };\r\n\r\n\treturn (\r\n\t\t<div className='site-layout-background' style={{ padding: '30px 20px 30px 20px', minHeight: 360 }}>\r\n\t\t\t<div className='addproductSectionTitleContainer'>\r\n\t\t\t\t<h2 className='addprouctSectionTitle'>Add Attribute</h2>\r\n\t\t\t</div>\r\n\t\t\t<div className='addproductSectionContainer addproductSectionContainer-tags'>\r\n\t\t\t\t<div className='addproductSection addproductSection-left'>\r\n\t\t\t\t<Formik\r\n\t\tonSubmit={(values, actions) => handleSubmit(values, actions)}\r\n\t\tvalidationSchema={validationSchema}\r\n\t\tvalidateOnBlur={false}\r\n\t\tenableReinitialize={true}\r\n\t\tinitialValues={\r\n\t\t  {...initialValues}\r\n\t\t}\r\n\t  >\r\n\t\t{({\r\n\t\t  handleChange,\r\n\t\t  values,\r\n\t\t  handleSubmit,\r\n\t\t  errors,\r\n\t\t  isValid,\r\n\t\t  isSubmitting,\r\n\t\t  touched,\r\n\t\t  handleBlur,\r\n\t\t  setFieldTouched,\r\n\t\t  handleReset,\r\n\t\t}) => (\r\n\t\t\t<>\r\n  <Input \r\n\t\t\t   label='Title'\r\n\t\t\t   value={values.name}\r\n\t\t\t   name='name'\r\n\t\t\t   isError={(touched.name && errors.name) ||\r\n\t\t\t\t  (!isSubmitting && updateCategoryState.error['error']['name'])}\r\n\t\t\t  \r\n\t\t\t\t  errorString={(touched.name && errors.name) ||\r\n\t\t\t\t\t  (!isSubmitting && updateCategoryState.error['error']['name'])}\r\n\t\t\t   onChange={(e : any) => {\r\n\t\t\t\t  handleChange(e);\r\n\t\t\t\t  setFieldTouched('name');\r\n\t\t\t\t}}\r\n\t\t\t   />\r\n\r\n\t\t\t   <div style={{\r\n\t\t\t\t   marginTop: '0px'\r\n\t\t\t   }}></div>\r\n\t\t\t  \r\n\r\n\t\t\t  <h3 className='inputFieldLabel'> Values</h3>\r\n\t\t\t\t\r\n\t\t\t\t<AddAttributeValues />\r\n\t\t\t\t\t  <Button \r\n\t\t\t\t\t  style={{\r\n\t\t\t\t\t\t  display: 'block',\r\n\t\t\t\t\t\t  marginTop: '20px'\r\n\t\t\t\t\t  }}\r\n\t\t\t\t\t\t\ttype='primary'\r\n\t\t\t\t\t\t\tonClick={(e: any) => handleSubmit(e)}\r\n\t\t\t\t\t\t\tdisabled={getisSubmitButtonDisabled(values,isValid)}\r\n\t\t\t\t\t\t\tloading={isSubmitting}\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t >\r\n\t\t\t\t\t\tCreate\r\n\t\t\t\t\t</Button>\r\n\t\t\t</>\r\n\t\t  )}\r\n\t  </Formik>\r\n\r\n\r\n\t\t\t\t</div>\r\n                <div className='addproductSection addproductSection-right'> \r\n\r\n\t\t\t\t<div className='categoryListContainer'>\r\n            <div className='categoryListContainer__header'>\r\n           \r\n\r\n          <div className='categoryListContainer__header-searchBar-tag'>\r\n          {/* <h2 className='categoryListContainer__header-title'>\r\n            Brand\r\n            </h2> */}\r\n\r\n\r\n          <Search\r\n            enterButton={false}\r\n            className='searchbarClassName'\r\n          placeholder=\"search categories..\"\r\n          onSearch={value => console.log(value)}\r\n          // style={{ width: 300 }}\r\n        />\r\n          </div>\r\n            {/* <Button\r\n          // type=\"primary\"\r\n          className='btnPrimaryClassNameoutline'\r\n          icon={<PlusOutlined />}\r\n          onClick={() => setAddNewCategoryVisible(true)}\r\n        >\r\n        Add New\r\n            \r\n            </Button> */}\r\n            </div>\r\n\r\n            <div className='categoryListContainer__afterHeader'>\r\n            {/* <Search\r\n      placeholder=\"search categories..\"\r\n      size=\"large\"\r\n      onSearch={value => console.log(value)}\r\n      style={{ width: 300 }}\r\n    /> */}\r\n            </div>\r\n\r\n     \r\n\t\t\t\r\n\t\t\t<div className='categoryListContainer__categoryList'>\r\n\t\t\t\t{tagState.done && tagState.data.length > 0 && <MyTable data={tagState.data} />}\r\n\t\t\t\t{tagState.isLoading && <DataTableSkeleton />}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\r\n                </div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default AttributeList;\r\n","import React, {useState, useEffect} from 'react';\r\nimport {withRouter, useHistory} from 'react-router-dom';\r\nimport { Table, Badge, Menu, Dropdown, Space, Tag,Button, Input,Tooltip, Modal, notification, Popconfirm } from 'antd';\r\nimport { PlusOutlined, EditOutlined, DeleteOutlined,CheckOutlined,CheckCircleOutlined,DownOutlined  } from '@ant-design/icons';\r\n\r\n\r\n/// import hooks\r\nimport { useFetch, useHandleFetch } from \"../../hooks\";\r\n\r\n// import components\r\nimport { DataTableSkeleton } from \"../../components/Placeholders\";\r\nimport AddNewOrder from \"./AddNewOrder\";\r\nimport QuickEdit from \"./QuickEdit\";\r\nimport Empty from \"../../components/Empty\";\r\n\r\n\r\n\r\n// import lib \r\nimport Moment from \"react-moment\";\r\n\r\nconst { Column, ColumnGroup } = Table;\r\nconst { Search } = Input;\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t  message: message || 'Tag Created',\r\n\t  description: '',\r\n\t  icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n  };\r\n\r\n\r\n  const openErrorNotification = (message?: any) => {\r\n\tnotification.error({\r\n\t  message: message || 'Something Went Wrong',\r\n\t  description: '',\r\n\t  icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n  };\r\n\r\n\r\n\r\n\r\n\r\ninterface myTableProps {\r\n  data: any; \r\n  setOrderList: any; \r\n} \r\n\r\n\r\nconst MyTable = ({data,setOrderList}: myTableProps) => {\r\n    const [visible,setvisible] = useState(false);   \r\n    const [activeCategoryForEdit,setactiveCategoryForEdit] = useState(false); \r\n    const [deleteOrderState, handleDeleteOrderFetch] = useHandleFetch({}, 'deleteOrder');\r\n    const [updateOrderStatusState, handleUpdateOrderStatusFetch] = useHandleFetch({}, 'updateOrderStatus');\r\n\r\n    const history = useHistory();\r\n\r\n      const handleDeleteRegion = async (id) => {\r\n        const deleteOrderRes = await handleDeleteOrderFetch({\r\n          urlOptions: {\r\n            placeHolders: {\r\n              id,\r\n            }\r\n            }\r\n          });\r\n\r\n            // @ts-ignore\r\n\t\t  if(deleteOrderRes && deleteOrderRes.status === 'ok'){\r\n\t\t\t  openSuccessNotification('Deleted Order'); \r\n\t\t\t  const newOrderList =  data.filter(item => item.id !== id);\r\n\t\t\t  setOrderList(newOrderList); \r\n\t\t  }\r\n\r\n      }\r\n      \r\n\r\n\r\n      \r\n      const handleUpdateOrderStatus = async (record,id,newStatus) => {\r\n        const updateOrderStatusRes = await handleUpdateOrderStatusFetch({\r\n          urlOptions: {\r\n            params: {\r\n              newOrderstatus: newStatus,\r\n            },\r\n            placeHolders: {\r\n              id,\r\n            }\r\n            }\r\n          });\r\n\r\n            // @ts-ignore\r\n\t\t  if(updateOrderStatusRes && updateOrderStatusRes.status === 'ok'){\r\n\t\t\t  openSuccessNotification('Updated Order Status'); \r\n\t\t\t  \r\n        const positionInTag = () => {\r\n          return data.map(item => item.id).indexOf(id);\r\n          }\r\n\r\n      const index = positionInTag();\r\n      console.log('recordis',record,index );\r\n\r\n      // @ts-ignore\r\n      const updatedItem = Object.assign({}, data[index], { status: newStatus });\r\n      const updateOrderList = [...data.slice(0, index), updatedItem, ...data.slice(index + 1)];\r\n      console.log('updateOrderList',updateOrderList,'-----',setOrderList );\r\n      setOrderList(updateOrderList);\r\n\r\n\r\n      }\r\n\r\n      \r\n      else {\r\n        openErrorNotification(\"Couldn't changed order status, Something went wrong\")\r\n      }\r\n\r\n      }\r\n      \r\n\r\n      const StatusItemMenu = (record,id) => {\r\n        return (\r\n          (\r\n            <Menu>\r\n\r\n<Menu.Item\r\n                onClick={() => handleUpdateOrderStatus(record,id,'pending')}\r\n                key=\"1\" icon={<CheckOutlined />}>\r\n                Pending\r\n              </Menu.Item>\r\n  \r\n\r\n  \r\n              <Menu.Item\r\n                onClick={() => handleUpdateOrderStatus(record,id,'complete')}\r\n                key=\"1\" icon={<CheckOutlined />}>\r\n                Completed\r\n    \r\n              </Menu.Item>\r\n    \r\n              {/* <Menu.Item\r\n                onClick={() => handleUpdateOrderStatus(record,id,'deliver')}\r\n                key=\"1\" icon={<CheckOutlined />}>\r\n                Delivered\r\n              </Menu.Item>\r\n     */}\r\n            \r\n            </Menu >\r\n          )\r\n        )\r\n      };\r\n\r\n\r\n\r\n\r\n    \r\n\r\n    return (\r\n        <>\r\n         <Table \r\n        // expandable={{\r\n        //     expandedRowRender: record => <p style={{ margin: 0 }}>{record.name}</p>,\r\n        //     rowExpandable: record => record.name !== 'Not Expandable',\r\n        //   }}\r\n        // bordered={true}\r\n        size='small'\r\n        // pagination={false}\r\n        dataSource={data}\r\n        >\r\n\r\n          \r\n        <Column\r\n          title=\"Name\"\r\n          dataIndex=\"name\"\r\n          key=\"id\"\r\n          className='classnameofthecolumn'\r\n          render={(text, record: any) => (\r\n            <>\r\n\r\n              <h4\r\n                onClick={() => {\r\n                  // setvisible(true)\r\n                  history.push(`/admin/order/${record.id}`)\r\n                  setactiveCategoryForEdit(record); \r\n                }}\r\n                style={{\r\n                  fontWeight: 400,\r\n                  color: '#555',\r\n                  cursor: 'pointer'\r\n\r\n                }}>\r\n                {text}\r\n              </h4>\r\n\r\n\r\n            </>\r\n          )}\r\n\r\n        />\r\n\r\n<Column\r\n           title=\"Country\" \r\n           dataIndex=\"country\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n         \r\n            />\r\n\r\n\r\n<Column\r\n           title=\"City\" \r\n           dataIndex=\"city\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n         \r\n            />\r\n\r\n          <Column\r\n           title=\"Created\" \r\n           dataIndex=\"date_created\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n           render={(text, record: any) => (\r\n            <>\r\n\r\n              <h4\r\n               \r\n                style={{\r\n                  fontWeight: 400,\r\n                  color: '#555',\r\n\r\n                }}>\r\n                  <Moment  withTitle>\r\n                    {text}\r\n                  </Moment>\r\n              </h4>\r\n\r\n\r\n            </>\r\n          )}\r\n            />\r\n\r\n\r\n          <Column\r\n          width={150}\r\n           title=\"Status\" \r\n           dataIndex=\"status\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n           render={(text, record: any) => (\r\n            <>\r\n\r\n        <Dropdown overlay={() => StatusItemMenu(record,record.id)} placement=\"bottomRight\">\r\n           <a href='##'>\r\n            <span\r\n                // className={'product-attributeTag'}\r\n              style={{\r\n                fontSize:'12px'\r\n              }}\r\n                >\r\n\r\n                {text}\r\n                <span style={{\r\n                  marginLeft:\"5px\",\r\n                  fontSize:'10px'\r\n                }}>\r\n                   <DownOutlined />\r\n                </span>\r\n               \r\n            </span> \r\n            </a>\r\n\t\t\t\t\t</Dropdown>\r\n\r\n\r\n     \r\n            </>\r\n          )}\r\n            />\r\n\r\n\r\n          {/* <Column \r\n          \r\n          className='classnameofthecolumn'\r\n\r\n          title=\"Product\" dataIndex=\"product\" key=\"product\" /> */}\r\n\r\n          {/* <Column \r\n          \r\n          className='classnameofthecolumn'\r\n\r\n          title=\"Sub Category\" dataIndex=\"subCategory\" key=\"subCategory\" /> */}\r\n        \r\n        {/* <Column\r\n          title=\"Tags\"\r\n          dataIndex=\"tags\"\r\n          key=\"tags\"\r\n          render={tags => (\r\n            <>\r\n              {tags.map((tag : any) => (\r\n                <Tag color=\"blue\" key={tag}>\r\n                  {tag}\r\n                </Tag>\r\n              ))}\r\n            </>\r\n          )}\r\n        /> */}\r\n        <Column\r\n        \r\n        className='classnameofthecolumn'\r\n          title=\"\"\r\n          key=\"action\"\r\n          align='right'\r\n          render={(text, record : any) => (\r\n            <Space size=\"middle\">\r\n              <a href='##'>\r\n               <Tooltip placement=\"top\" title='Quick Edit Region'>\r\n              <span className='iconSize' onClick={() => {\r\n                setvisible(true)\r\n                setactiveCategoryForEdit(record); \r\n              }}> \r\n              <EditOutlined />\r\n              </span>\r\n\r\n               </Tooltip>\r\n               </a>\r\n\r\n\r\n\r\n{/*    \r\n               <Popconfirm \r\n               \r\n               onConfirm={() => handleDeleteRegion(record.id)}\r\n               title=\"Are you sure？\" okText=\"Yes\" cancelText=\"No\">\r\n           \r\n           <span \r\n             className='iconSize iconSize-danger'\r\n             > \r\n             <DeleteOutlined/>\r\n            </span>\r\n       \r\n           </Popconfirm> */}\r\n\r\n\r\n             \r\n             \r\n            </Space>\r\n          )}\r\n        />\r\n      </Table>\r\n\r\n    \r\n\r\n    {/* {activeCategoryForEdit &&   <QuickEdit \r\n    setvisible={setvisible}\r\n    visible={visible}\r\n    customer={activeCategoryForEdit}\r\n    orderList={data}\r\n    setOrderList={setOrderList}\r\n\r\n    />\r\n\r\n    }\r\n     */}\r\n    \r\n    </>\r\n    )\r\n}\r\n\r\n\r\ninterface Props {\r\n    history: any; \r\n}\r\n\r\nconst CustomerList = ({history}: Props) => {\r\n\r\n    const [orderList,setOrderList] = useState([]); \r\n\r\n    const [orderState, handleRegionListFetch] = useHandleFetch({}, 'orderList');\r\n  \r\n  \r\n    useEffect(()=>{\r\n     const setOrders = async () => {\r\n       const regions = await handleRegionListFetch({}); \r\n       // @ts-ignore\r\n       setOrderList(regions); \r\n     }\r\n     setOrders(); \r\n    },[])\r\n\r\n  const [addNewCategoryVisible,setAddNewCategoryVisible] = useState(false);   \r\n\r\n  // console.log('orderState',orderState)\r\n\r\n\r\n  const handleSearch = (value) => {\r\n    if(orderState.data.length > 0 ){\r\n      const newOrderList = orderState.data.filter(item => item.name.includes(value)); \r\n      setOrderList(newOrderList); \r\n    }\r\n     \r\n  }; \r\n\r\n\r\n\r\n\r\n\treturn (\r\n\t\t<>\r\n    {/* <h2 className='containerPageTitle'>\r\n      Categories\r\n    </h2> */}\r\n    <div className='categoryListContainer'>\r\n            <div className='categoryListContainer__header'>\r\n           \r\n\r\n          <div className='categoryListContainer__header-searchBar'>\r\n          <h2 className='categoryListContainer__header-title'>\r\n            Orders \r\n            </h2>\r\n\r\n\r\n          <Search\r\n            enterButton={false}\r\n            className='searchbarClassName'\r\n          placeholder=\"search orders..\"\r\n          onSearch={value => handleSearch(value)}\r\n          // style={{ width: 300 }}\r\n        />\r\n          </div>\r\n            <Button\r\n          // type=\"primary\"\r\n          className='btnPrimaryClassNameoutline'\r\n          icon={<PlusOutlined />}\r\n          onClick={() => history.push('/order/new')}\r\n        >\r\n        Add New\r\n            \r\n            </Button>\r\n            </div>\r\n\r\n            <div className='categoryListContainer__afterHeader'>\r\n            {/* <Search\r\n      placeholder=\"search categories..\"\r\n      size=\"large\"\r\n      onSearch={value => console.log(value)}\r\n      style={{ width: 300 }}\r\n    /> */}\r\n            </div>\r\n\r\n     \r\n\t\t\t\r\n\t\t\t<div className='categoryListContainer__categoryList'>\r\n        {orderState.done && orderList.length > 0 && <MyTable \r\n        setOrderList={setOrderList}\r\n        data={orderList} />}\r\n        {orderState.isLoading && <DataTableSkeleton />}\r\n\r\n        {orderState.done && !(orderList.length > 0) && (\r\n        <Empty title='No Order found'  />\r\n        )}\r\n        \r\n\t\t\t</div>\r\n\t\t</div>\r\n\r\n\r\n      {/* {orderState.done && \r\n          <AddNewOrder \r\n          addNewCategoryVisible={addNewCategoryVisible} \r\n          setAddNewCategoryVisible={setAddNewCategoryVisible}\r\n          orderList={orderState.data}\r\n          setOrderList={setOrderList}\r\n           />} */}\r\n\r\n  \r\n    </>\r\n\t);\r\n};\r\n\r\nexport default withRouter(CustomerList);\r\n","import React from 'react'\r\n\r\n\r\n// import components\r\nimport AddNewOrderProductItem from \"./AddNewOrderProductItem\";\r\nimport Empty from \"../../components/Empty\";\r\n\r\nimport {\r\n    ShopOutlined\r\n} from '@ant-design/icons';\r\n\r\n\r\n\r\ninterface Props {\r\n    productList?: any;\r\n    setProductList?: any;\r\n}\r\n\r\nconst AddNewOrderSummary = ({\r\n    setProductList,\r\n    productList\r\n}: Props) => {\r\n    return (\r\n        <div className='addOrderContainer__container-orderSummary'>\r\n            <h3 className='addOrderContainer-sectionTitle'>\r\n                <span>\r\n                    <ShopOutlined />\r\n                </span>\r\n                Added Products\r\n            </h3>\r\n            <div className='addOrderContainer__container-productItemContainer'>\r\n                {productList.length > 0 && productList.map(item => {\r\n                    return <AddNewOrderProductItem\r\n                        setProductList={setProductList}\r\n                        productList={productList}\r\n                        productId={item._id}\r\n                        quantity={item.quantity}\r\n                        item={item}\r\n                        variation={item.variation}\r\n                    />;\r\n                })}\r\n\r\n                {!(productList.length > 0) && (\r\n                    <div style={{\r\n                        marginLeft: '32px'\r\n                    }}>\r\n                        <Empty title='No Product Added' height={150} />\r\n                    </div>\r\n                )}\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddNewOrderSummary\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useHandleFetch } from '../../hooks';\r\nimport { Select, Skeleton } from 'antd';\r\n\r\ninterface Props {\r\n    setCustomerId?: any;\r\n    setSelectedCustomerData?: any;\r\n}\r\n\r\nconst { Option } = Select;\r\n\r\nconst Brands = ({ setCustomerId, setSelectedCustomerData }: Props) => {\r\n    const [options, setoptions] = useState([]);\r\n    const [selectedBrandId, setSelectedBrandId] = useState('');\r\n    const [brandState, handleTagListFetch] = useHandleFetch({}, 'customerList');\r\n\r\n    function onChange(option) {\r\n        if (options && options.length > 0) {\r\n            const customerData = options.find(item => item.value === option);\r\n            if (customerData) {\r\n                setSelectedCustomerData(customerData);\r\n            }\r\n        }\r\n        setSelectedBrandId(option);\r\n        setCustomerId(option);\r\n        // console.log(`selected ${value}`);\r\n    }\r\n\r\n    function onBlur() {\r\n        // console.log('blur');\r\n    }\r\n\r\n    function onFocus() {\r\n        // console.log('focus');\r\n    }\r\n\r\n    function onSearch(val) {\r\n        // console.log('search:', val);\r\n    }\r\n\r\n    useEffect(() => {\r\n        const setBrands = async () => {\r\n            const brandListRes = await handleTagListFetch({});\r\n\r\n            // @ts-ignore\r\n            if (brandListRes && brandListRes.length > 0) {\r\n                // @ts-ignore\r\n                const brandOptions = brandListRes.map((brand) => {\r\n                    return {\r\n                        ...brand,\r\n                        value: brand.id,\r\n                        name: `${brand.firstName} ${brand.lastName}`\r\n                    };\r\n                });\r\n                setoptions(brandOptions);\r\n            }\r\n        };\r\n\r\n        setBrands();\r\n    }, []);\r\n\r\n    return (\r\n        <Skeleton loading={brandState.isLoading}>\r\n            <Select\r\n                showSearch\r\n                size='middle'\r\n                style={{ width: '100%' }}\r\n                placeholder='Select a Customer'\r\n                optionFilterProp='children'\r\n                onChange={onChange}\r\n                onFocus={onFocus}\r\n                onBlur={onBlur}\r\n                onSearch={onSearch}\r\n                filterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n            >\r\n                {brandState.done &&\r\n                    brandState.data.length > 0 &&\r\n                    options.map((option) => {\r\n                        return <Option value={option.value}>{option.name}</Option>;\r\n                    })}\r\n            </Select>\r\n        </Skeleton>\r\n\r\n    );\r\n};\r\n\r\nexport default Brands;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useHandleFetch } from '../../hooks';\r\nimport { Select, Skeleton } from 'antd';\r\n\r\n\r\ninterface Props {\r\n    setProductIds?: any;\r\n    productIds?: any;\r\n}\r\n\r\n\r\nconst Tags = ({\r\n    setProductIds,\r\n    productIds\r\n}: Props) => {\r\n    const [options, setoptions] = useState([]);\r\n    const [selectedOpions, setselectedOptions] = useState([]);\r\n    const [tagState, handleTagListFetch] = useHandleFetch({}, 'productList');\r\n\r\n    useEffect(() => {\r\n        const setTags = async () => {\r\n            const tagListRes = await handleTagListFetch({\r\n                urlOptions: {\r\n                    params: {\r\n                        isSubCategory: false\r\n                    }\r\n                }\r\n            });\r\n\r\n            // @ts-ignore\r\n            if (tagListRes && tagListRes.length > 0) {\r\n                // @ts-ignore\r\n                const tagOptions = tagListRes.map((tag) => {\r\n                    return tag.name\r\n                });\r\n                setoptions(tagOptions);\r\n            }\r\n\r\n        };\r\n\r\n        setTags();\r\n    }, []);\r\n\r\n\r\n\r\n    const handleChange = (selectItems) => {\r\n        setselectedOptions(selectItems)\r\n\r\n        if (tagState.done && tagState.data.length > 0 && selectItems.length > 0) {\r\n            const selectedCategoryIds = selectItems.map((item) => {\r\n                const selectedcategory = tagState.data.find(\r\n                    (cat) => cat.name.toLowerCase() === item.toLowerCase()\r\n                );\r\n                if (selectedcategory) {\r\n                    return selectedcategory;\r\n                }\r\n            });\r\n            setProductIds(selectedCategoryIds);\r\n        }\r\n        else {\r\n            setProductIds([])\r\n        }\r\n\r\n\r\n    }\r\n\r\n\r\n    // console.log('selectedOpions', selectedOpions);\r\n\r\n\r\n    return (\r\n        <>\r\n\r\n            <Skeleton loading={tagState.isLoading}>\r\n                {tagState.done && tagState.data.length > 0 && <Select\r\n                    mode=\"multiple\"\r\n                    placeholder=\"search products\"\r\n                    value={selectedOpions}\r\n                    onChange={handleChange}\r\n                    style={{ width: '100%' }}\r\n                >\r\n                    {options.filter(o => !selectedOpions.includes(o)).map(item => (\r\n                        <Select.Option key={item} value={item}>\r\n                            {item}\r\n                        </Select.Option>\r\n                    ))}\r\n                </Select>}\r\n            </Skeleton>\r\n\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Tags\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n\r\nimport { useHandleFetch } from '../../hooks';\r\n// import third party ui lib\r\nimport { Upload, message, Switch, Select, Button, notification, Modal, Empty, Steps, Form, Checkbox } from 'antd';\r\n\r\nimport {\r\n\tFileOutlined,\r\n\tInboxOutlined,\r\n\tRadiusUpleftOutlined,\r\n\tRadiusUprightOutlined,\r\n\tRadiusBottomleftOutlined,\r\n\tRadiusBottomrightOutlined,\r\n\tDeleteOutlined,\r\n\tFileAddOutlined,\r\n\tPlusOutlined,\r\n\tCheckCircleOutlined,\r\n\tCaretRightOutlined,\r\n\tCaretLeftOutlined,\r\n\tCaretRightFilled,\r\n\tUserOutlined,\r\n\tInfoCircleOutlined\r\n} from '@ant-design/icons';\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport AddNewOrderSummary from './AddNewOrderSummary';\r\nimport CustomersId from './CustomersId';\r\nimport AddProducts from './AddProducts';\r\nimport { product } from '../../state/ducks';\r\n\r\n\r\nconst { Option } = Select;\r\nconst { Step } = Steps;\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t\tmessage: message || 'Order Created',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n\tnotification.error({\r\n\t\tmessage: message || 'Something Went Wrong',\r\n\t\tdescription: '',\r\n\t\ticon: <InfoCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n\r\n\r\n});\r\n\r\n\r\n\r\n\r\nconst initialValues = {\r\n\tphone: '',\r\n\temail: '',\r\n\tfirstName: '',\r\n\tlastName: '',\r\n\taddress1: '',\r\n\taddress2: '',\r\n\tzipCode: '',\r\n\tadditionalInfo: '',\r\n\tcountry: '',\r\n\tcity: '',\r\n\r\n};\r\n\r\n\r\nconst steps = [\r\n\t{\r\n\t\ttitle: 'Order Information',\r\n\t\tcontent: '',\r\n\t\t// description: 'Add Customer & Products'\r\n\t},\r\n\t{\r\n\t\ttitle: 'Billing Address',\r\n\r\n\t},\r\n\t{\r\n\t\ttitle: 'Confirm Order',\r\n\t\tcontent: '',\r\n\t},\r\n];\r\n\r\n\r\n\r\n\r\ninterface Props {\r\n\r\n}\r\n\r\nconst AddNewOrder = ({ }: Props) => {\r\n\r\n\tconst [addOrderState, handleOrderFetch] = useHandleFetch({}, 'addOrder');\r\n\tconst [selectedCountryValue, setselectedCountryValue] = useState('');\r\n\tconst [selectedCityValue, setselectedCityValue] = useState('');\r\n\tconst [productIds, setProductIds] = useState([]);\r\n\tconst [productList, setProductList] = useState([]);\r\n\tconst [customerId, setCustomerId] = useState([]);\r\n\r\n\tconst [countryOptions, setcountryOptions] = useState([]);\r\n\tconst [cityOptions, setcityOptions] = useState([]);\r\n\r\n\tconst [countryListState, handleCountryListFetch] = useHandleFetch(\r\n\t\t[],\r\n\t\t'countryList'\r\n\t);\r\n\r\n\r\n\r\n\tconst [cityListState, handleCityListFetch] = useHandleFetch([], 'cityList');\r\n\r\n\tconst [countryList, setCountryList] = useState([]);\r\n\tconst [cityList, setCityList] = useState([]);\r\n\tconst [current, setCurrent] = useState(0);\r\n\tconst [selectedCustomerData, setSelectedCustomerData] = useState({});\r\n\r\n\r\n\tconst next = () => {\r\n\t\tconst newCurrent = current + 1;\r\n\t\tsetCurrent(newCurrent);\r\n\t}\r\n\r\n\r\n\tconst prev = () => {\r\n\t\tconst newCurrent = current - 1;\r\n\t\tsetCurrent(newCurrent);\r\n\t}\r\n\r\n\r\n\tconst handleCheckoutSubmit = async (values: any, actions: any) => {\r\n\t\t// console.log('selectedCityValue', selectedCityValue)\r\n\t\tconsole.log('values', values);\r\n\t\tconsole.log('productListcool', productList);\r\n\r\n\t\tconst products = productList && productList.length > 0 ? productList.map(item => {\r\n\t\t\treturn {\r\n\t\t\t\tproduct: item._id,\r\n\t\t\t\tquantity: item.quantity,\r\n\t\t\t\tvariation: item.variation\r\n\t\t\t}\r\n\t\t}) : [];\r\n\r\n\t\tconst addOrderRes = await handleOrderFetch({\r\n\r\n\t\t\tbody: {\r\n\t\t\t\tbillingAddress: {\r\n\t\t\t\t\tphone: values.phone,\r\n\t\t\t\t\temail: values.email,\r\n\t\t\t\t\taddress1: values.address1,\r\n\t\t\t\t\taddress2: values.address2,\r\n\t\t\t\t\tfirstName: values.firstName,\r\n\t\t\t\t\tlastName: values.lastName,\r\n\t\t\t\t\tcity: selectedCityValue || selectedCustomerData['city'],\r\n\t\t\t\t\tcountry: selectedCountryValue || selectedCustomerData['country'],\r\n\t\t\t\t},\r\n\t\t\t\tproducts,\r\n\t\t\t\tcustomerId: customerId\r\n\t\t\t\t// charge\r\n\t\t\t},\r\n\t\t});\r\n\r\n\t\t// @ts-ignore\r\n\t\tif (addOrderRes && addOrderRes.status === 'ok') {\r\n\t\t\topenSuccessNotification();\r\n\r\n\r\n\t\t\tactions.resetForm();\r\n\t\t}\r\n\t\telse {\r\n\t\t\topenErrorNotification(\"Couldn't create order, Something went wrong\")\r\n\t\t}\r\n\r\n\t\tactions.setSubmitting(false);\r\n\t};\r\n\r\n\r\n\r\n\tuseEffect(() => {\r\n\t\tif (!addOrderState['isLoading']) {\r\n\t\t\tconst error = addOrderState['error'];\r\n\t\t\tif (error['isError'] && Object.keys(error['error']).length > 0) {\r\n\t\t\t\tif (error['error']['registerError']) {\r\n\t\t\t\t\t// setServerErrors(error['error']['registerError']);\r\n\t\t\t\t} else if (error['error']['checkoutError']) {\r\n\t\t\t\t\t// setServerErrors(error['error']['checkoutError']);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\t// setServerErrors(error['error']);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst errors =\r\n\t\t\t\t\tObject.values(error['error']).length > 0\r\n\t\t\t\t\t\t? Object.values(error['error'])\r\n\t\t\t\t\t\t: [];\r\n\t\t\t\terrors.forEach((err, i) => {\r\n\t\t\t\t\tif (typeof err === 'string') {\r\n\t\t\t\t\t\topenErrorNotification(err);\r\n\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if (typeof err === 'object') {\r\n\t\t\t\t\t\tif (err && Object.keys(err).length > 0) {\r\n\t\t\t\t\t\t\tconst errs = Object.values(err);\r\n\t\t\t\t\t\t\terrs.forEach(err => {\r\n\t\t\t\t\t\t\t\topenErrorNotification(err);\r\n\t\t\t\t\t\t\t})\r\n\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (\r\n\t\t\t!addOrderState['isLoading'] &&\r\n\t\t\tObject.keys(addOrderState.data).length > 0\r\n\t\t) {\r\n\t\t\tif (addOrderState['data']['status'] === 'ok') {\r\n\t\t\t\topenSuccessNotification('Order Created Successfully');\r\n\t\t\t\t// history.push({\r\n\t\t\t\t//   pathname: '/orderDetails',\r\n\t\t\t\t//   state: checkoutState['data']\r\n\t\t\t\t// })\r\n\r\n\t\t\t\t// clearCart();\r\n\t\t\t\t// setIsModalShown(true);\r\n\t\t\t}\r\n\t\t}\r\n\t}, [addOrderState]);\r\n\r\n\r\n\r\n\r\n\tconst onChangeCity = (value) => {\r\n\t\tsetselectedCityValue(value);\r\n\t}\r\n\r\n\tconst onChangeCountry = (value) => {\r\n\t\tsetselectedCountryValue(value);\r\n\t};\r\n\r\n\r\n\r\n\tuseEffect(() => {\r\n\t\tconst setCountries = async () => {\r\n\t\t\tconst CountryListRes = await handleCountryListFetch({});\r\n\r\n\t\t\t// @ts-ignore\r\n\t\t\tif (CountryListRes && CountryListRes.length > 0) {\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\tconst countryOptions = CountryListRes.map((country) => {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tvalue: country.id,\r\n\t\t\t\t\t\tname: country.name\r\n\t\t\t\t\t};\r\n\t\t\t\t});\r\n\t\t\t\tsetcountryOptions(countryOptions);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tsetCountries();\r\n\t}, []);\r\n\r\n\r\n\tuseEffect(() => {\r\n\t\tconst setCities = async () => {\r\n\t\t\tconst cityListRes = await handleCityListFetch({\r\n\t\t\t\turlOptions: {\r\n\t\t\t\t\tplaceHolders: {\r\n\t\t\t\t\t\tcountry: selectedCountryValue,\r\n\t\t\t\t\t},\r\n\t\t\t\t},\r\n\t\t\t});\r\n\r\n\t\t\t// @ts-ignore\r\n\t\t\tif (cityListRes && cityListRes.length > 0) {\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\tconst cityOptions = cityListRes.map((city) => {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tvalue: city.name,\r\n\t\t\t\t\t\tname: city.name\r\n\t\t\t\t\t};\r\n\t\t\t\t});\r\n\t\t\t\tsetcityOptions(cityOptions);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tsetCities();\r\n\t}, [selectedCountryValue]);\r\n\r\n\r\n\r\n\r\n\r\n\tconst getisSubmitButtonDisabled = (values, isValid) => {\r\n\t\tif (!isValid ||\r\n\t\t\t!values.name ||\r\n\t\t\t!values.pickUpLocation ||\r\n\t\t\t!values.time) {\r\n\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\r\n\r\n\tconst handleAddDeliveryCharge = () => {\r\n\r\n\t};\r\n\r\n\r\n\r\n\tuseEffect(() => {\r\n\r\n\t\tif (productIds.length > 0) {\r\n\t\t\tif (productIds.length > productList.length) {\r\n\t\t\t\tconst variation = productIds[productIds.length - 1]['pricing'].length > 0 && productIds[productIds.length - 1]['pricing'][0]['_id'];\r\n\t\t\t\tconsole.log('variation', variation)\r\n\r\n\t\t\t\tsetProductList([...productList, {\r\n\t\t\t\t\t...productIds[productIds.length - 1],\r\n\t\t\t\t\t_id: productIds[productIds.length - 1]['id'],\r\n\t\t\t\t\tvariation: variation,\r\n\t\t\t\t\tquantity: 1\r\n\t\t\t\t}]);\r\n\t\t\t}\r\n\r\n\r\n\t\t\telse if (productIds.length < productList.length) {\r\n\t\t\t\tconst newProductList = productList.filter(item => {\r\n\t\t\t\t\tlet isTrue = false;\r\n\t\t\t\t\tproductIds.forEach(product => {\r\n\t\t\t\t\t\tif (product._id === item._id) {\r\n\t\t\t\t\t\t\tisTrue = true;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t\treturn isTrue;\r\n\t\t\t\t})\r\n\t\t\t\tsetProductList(newProductList);\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\t\telse {\r\n\t\t\tsetProductList([]);\r\n\t\t}\r\n\t\t// console.log('productIds', productIds)\r\n\r\n\r\n\t}, [productIds])\r\n\r\n\r\n\t// console.log('productList', productList)\r\n\tconsole.log('selectedCustomerData', selectedCustomerData)\r\n\r\n\treturn (\r\n\t\t<Formik\r\n\t\t\tonSubmit={(values, actions) => handleCheckoutSubmit(values, actions)}\r\n\t\t\tvalidationSchema={validationSchema}\r\n\t\t\tvalidateOnBlur={false}\r\n\t\t\tenableReinitialize={true}\r\n\t\t\tinitialValues={\r\n\t\t\t\t{ ...initialValues, ...selectedCustomerData }\r\n\t\t\t}\r\n\t\t>\r\n\t\t\t{({\r\n\t\t\t\thandleChange,\r\n\t\t\t\tvalues,\r\n\t\t\t\thandleSubmit,\r\n\t\t\t\terrors,\r\n\t\t\t\tisValid,\r\n\t\t\t\tisSubmitting,\r\n\t\t\t\ttouched,\r\n\t\t\t\thandleBlur,\r\n\t\t\t\tsetFieldTouched,\r\n\t\t\t\thandleReset,\r\n\t\t\t}) => (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<div className='addOrderContainer'>\r\n\t\t\t\t\t\t\t<h3>\r\n\t\t\t\t\t\t\t\tAdd New Order\r\n\t\t\t\t\t\t\t</h3>\r\n\t\t\t\t\t\t\t<div className='addOrderContainer__container'>\r\n\t\t\t\t\t\t\t\t<Steps current={current}>\r\n\t\t\t\t\t\t\t\t\t{steps.map(item => (\r\n\t\t\t\t\t\t\t\t\t\t<Step\r\n\t\t\t\t\t\t\t\t\t\t\tkey={item.title}\r\n\t\t\t\t\t\t\t\t\t\t\ttitle={item.title} />\r\n\t\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t\t</Steps>\r\n\r\n\t\t\t\t\t\t\t\t{current === 0 && (\r\n\t\t\t\t\t\t\t\t\t<div className='addOrderContainer__container-OrderInfoContainer'>\r\n\t\t\t\t\t\t\t\t\t\t<div className='addOrderContainer__container-OrderInfoContainer-left'>\r\n\t\t\t\t\t\t\t\t\t\t\t<h3 className='addOrderContainer-sectionTitle'>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<UserOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n                                            Customers And products\r\n                                           </h3>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<h4 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\t\t\t\t\t\tCustomer\r\n\t\t\t\t\t\t\t\t\t\t\t</h4>\r\n\t\t\t\t\t\t\t\t\t\t\t<CustomersId\r\n\t\t\t\t\t\t\t\t\t\t\t\tsetSelectedCustomerData={setSelectedCustomerData}\r\n\t\t\t\t\t\t\t\t\t\t\t\tsetCustomerId={setCustomerId} />\r\n\t\t\t\t\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\tmarginTop: '15px'\r\n\t\t\t\t\t\t\t\t\t\t\t}}></div>\r\n\t\t\t\t\t\t\t\t\t\t\t<h4 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\t\t\t\t\t\tProducts\r\n\t\t\t\t\t\t\t\t\t\t\t</h4>\r\n\t\t\t\t\t\t\t\t\t\t\t<AddProducts\r\n\t\t\t\t\t\t\t\t\t\t\t\tproductIds={productIds}\r\n\t\t\t\t\t\t\t\t\t\t\t\tsetProductIds={setProductIds} />\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t<div className='addOrderContainer__container-OrderInfoContainer-right'>\r\n\t\t\t\t\t\t\t\t\t\t\t<AddNewOrderSummary\r\n\t\t\t\t\t\t\t\t\t\t\t\tsetProductList={setProductList}\r\n\t\t\t\t\t\t\t\t\t\t\t\tproductList={productList} />\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t)}\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t{current === 1 && (\r\n\t\t\t\t\t\t\t\t\t<div className='addOrderContainer__container-address'>\r\n\r\n\t\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs'>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tlabel='First Name'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.firstName}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tname='firstName'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.firstName && errors.firstName) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addOrderState.error['error']['firstName'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.firstName && errors.firstName) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addOrderState.error['error']['firstName'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('firstName');\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tlabel='Last Name'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.lastName}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tname='lastName'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.lastName && errors.lastName) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addOrderState.error['error']['lastName'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.lastName && errors.lastName) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addOrderState.error['error']['lastName'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('lastName');\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs'>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tlabel='Phone'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.phone}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tname='phone'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.phone && errors.phone) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addOrderState.error['error']['phone'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.phone && errors.phone) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addOrderState.error['error']['phone'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('phone');\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tlabel='Email'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.email}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tname='email'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.email && errors.email) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addOrderState.error['error']['email'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.email && errors.email) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addOrderState.error['error']['email'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('email');\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs'>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tCountry\r\n\t\t\t\t\t\t\t\t\t</h3>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Form.Item\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalidateStatus={(addOrderState.error['error']['country']) ? \"error\" : \"\"}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\thelp={addOrderState.error['error']['country']}\r\n\t\t\t\t\t\t\t\t\t\t\t\t// noStyle={true}\r\n\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Select\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tdefaultValue={values.country}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tnotFoundContent={<Empty description='No Country Found' image={Empty.PRESENTED_IMAGE_SIMPLE} />}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tshowSearch\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{ width: '100%' }}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder='Select a Country'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\toptionFilterProp='children'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={onChangeCountry}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tfilterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{countryListState.done &&\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcountryListState.data.length > 0 &&\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcountryOptions.map((option) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn <Option value={option.value}>{option.name}</Option>;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Select>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Form.Item>\r\n\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tCity\r\n                                    </h3>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Form.Item\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t// noStyle={true}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalidateStatus={(addOrderState.error['error']['city']) ? \"error\" : \"\"}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\thelp={addOrderState.error['error']['city']}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Select\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tdefaultValue={values.city}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='selectClassName'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tnotFoundContent={<Empty description='First Select a Country' image={Empty.PRESENTED_IMAGE_SIMPLE} />}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tshowSearch\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{ width: '100%' }}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder='Select a city'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\toptionFilterProp='children'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={onChangeCity}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tfilterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{cityListState.done &&\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcityListState.data.length > 0 &&\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcityOptions.map((option) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn <Option value={option.value}>{option.name}</Option>;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Select>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Form.Item>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\t\t\t\tmarginTop: '12px'\r\n\t\t\t\t\t\t\t\t\t\t}}></div>\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs'>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tlabel='Address'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.address1}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tname='address1'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.address1 && errors.address1) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addOrderState.error['error']['address1'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.address1 && errors.address1) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addOrderState.error['error']['address1'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('address1');\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tlabel='More specific address'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.address2}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tname='address2'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.address2 && errors.address2) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addOrderState.error['error']['address2'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.address2 && errors.address2) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addOrderState.error['error']['address2'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('address2');\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t)}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t{current === 10 && (\r\n\t\t\t\t\t\t\t\t\t<div className='addOrderContainer__container-address'>\r\n\r\n\t\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs'>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tlabel='First Name'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.firstName}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tname='firstName'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.firstName && errors.firstName) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addOrderState.error['error']['firstName'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.firstName && errors.firstName) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addOrderState.error['error']['firstName'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('firstName');\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tlabel='Last Name'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.lastName}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tname='lastName'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.lastName && errors.lastName) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addOrderState.error['error']['lastName'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.lastName && errors.lastName) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addOrderState.error['error']['lastName'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('lastName');\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs'>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tlabel='Phone'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.phone}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tname='phone'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.phone && errors.phone) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addOrderState.error['error']['phone'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.phone && errors.phone) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addOrderState.error['error']['phone'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('phone');\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tlabel='Email'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.email}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tname='email'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.email && errors.email) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addOrderState.error['error']['email'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.email && errors.email) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addOrderState.error['error']['email'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('email');\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs'>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tCountry\r\n\t\t\t\t\t\t\t\t\t</h3>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Form.Item\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalidateStatus={(addOrderState.error['error']['country']) ? \"error\" : \"\"}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\thelp={addOrderState.error['error']['country']}\r\n\t\t\t\t\t\t\t\t\t\t\t\t// noStyle={true}\r\n\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Select\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tdefaultValue={'Comoros'}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tnotFoundContent={<Empty description='No Country Found' image={Empty.PRESENTED_IMAGE_SIMPLE} />}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tshowSearch\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{ width: '100%' }}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder='Select a Country'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\toptionFilterProp='children'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={onChangeCountry}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tfilterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{countryListState.done &&\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcountryListState.data.length > 0 &&\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcountryOptions.map((option) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn <Option value={option.value}>{option.name}</Option>;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Select>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Form.Item>\r\n\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tCity\r\n                                    </h3>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Form.Item\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t// noStyle={true}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalidateStatus={(addOrderState.error['error']['city']) ? \"error\" : \"\"}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\thelp={addOrderState.error['error']['city']}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Select\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tdefaultValue={values.city}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='selectClassName'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tnotFoundContent={<Empty description='First Select a Country' image={Empty.PRESENTED_IMAGE_SIMPLE} />}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tshowSearch\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{ width: '100%' }}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder='Select a city'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\toptionFilterProp='children'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={onChangeCity}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tfilterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{cityListState.done &&\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcityListState.data.length > 0 &&\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcityOptions.map((option) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn <Option value={option.value}>{option.name}</Option>;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Select>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Form.Item>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\t\t\t\tmarginTop: '12px'\r\n\t\t\t\t\t\t\t\t\t\t}}></div>\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs'>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tlabel='Address'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.address1}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tname='address1'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.address1 && errors.address1) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addOrderState.error['error']['address1'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.address1 && errors.address1) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addOrderState.error['error']['address1'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('address1');\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tlabel='More specific address'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.address2}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tname='address2'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.address2 && errors.address2) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addOrderState.error['error']['address2'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.address2 && errors.address2) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addOrderState.error['error']['address2'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('address2');\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t)}\r\n\r\n\r\n\t\t\t\t\t\t\t\t{current === 2 && (\r\n\t\t\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\t\t\tdisplay: 'flex',\r\n\t\t\t\t\t\t\t\t\t\tjustifyContent: 'center',\r\n\t\t\t\t\t\t\t\t\t\tmarginTop: '40px',\r\n\t\t\t\t\t\t\t\t\t\talignItems: 'center',\r\n\t\t\t\t\t\t\t\t\t\tflexDirection: \"column\"\r\n\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t<AddNewOrderSummary\r\n\t\t\t\t\t\t\t\t\t\t\tsetProductList={setProductList}\r\n\t\t\t\t\t\t\t\t\t\t\tproductList={productList} />\r\n\r\n\t\t\t\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\t\t\t\tdisplay: 'flex',\r\n\t\t\t\t\t\t\t\t\t\t\tmarginTop: '40px',\r\n\t\t\t\t\t\t\t\t\t\t\twidth: '300px',\r\n\t\t\t\t\t\t\t\t\t\t\tmarginBottom: '50px'\r\n\r\n\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t\t{/* <h3\r\n\t\t\t\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tcolor: '#666'\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\tTotal\r\n\t\t\t\t\t\t\t\t\t\t\t\t</h3>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<h3\r\n\t\t\t\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tcolor: '#333'\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t500\r\n\t\t\t\t\t\t\t\t\t\t\t\t</h3> */}\r\n\t\t\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\t\t\tloading={addOrderState.isLoading}\r\n\t\t\t\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tmarginTop: '10px',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tmarginLeft: '15px'\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\tclassName='btnPrimaryClassNameoutline-blue'\r\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={(e: any) => handleSubmit(e)}\r\n\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\tPlace Order\r\n\t\t\t\t\t\t\t\t\t\t\t<CaretRightOutlined />\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t)}\r\n\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\t\tdisplay: 'flex',\r\n\t\t\t\t\t\t\t\t\tjustifyContent: 'space-between'\r\n\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t{current > 0 && (\r\n\t\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\t\tstyle={{ marginRight: '15px', marginTop: '10px' }}\r\n\t\t\t\t\t\t\t\t\t\t\t// type=\"primary\"\r\n\t\t\t\t\t\t\t\t\t\t\tclassName='btnPrimaryClassNameoutline'\r\n\t\t\t\t\t\t\t\t\t\t\ttype=\"primary\" onClick={() => prev()}\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t<CaretLeftOutlined />\tPrevious\r\n\r\n\t\t\t\t\t\t\t\t\t\t</Button>\r\n\r\n\t\t\t\t\t\t\t\t\t)}\r\n\r\n\t\t\t\t\t\t\t\t\t{current < steps.length - 1 && (\r\n\t\t\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tmarginTop: '10px'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='btnPrimaryClassNameoutline'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"primary\" onClick={() => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (current === 1) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetCurrent(2)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tnext()\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tNext< CaretRightOutlined />\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Button>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t{/* {current === 1 && <Button\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tmarginTop: '10px',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tmarginLeft: '15px'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='btnPrimaryClassNameoutline'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"primary\" onClick={() => setCurrent(2)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tUse different address< CaretRightOutlined />\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t\t\t\t\t} */}\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t\t\t)}\r\n\r\n\t\t\t\t\t\t\t\t\t{/* {current === steps.length - 1 && (\r\n\t\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\t\t\tmarginTop: '10px',\r\n\t\t\t\t\t\t\t\t\t\t\t\tmarginLeft: '15px'\r\n\t\t\t\t\t\t\t\t\t\t\t}}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\tclassName='btnPrimaryClassNameoutline'\r\n\t\t\t\t\t\t\t\t\t\t\ttype=\"primary\" onClick={(e: any) => handleSubmit(e)}\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\tPlace Order\r\n\t\t\t\t\t\t\t\t\t\t\t<CaretRightOutlined />\r\n\r\n\t\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t\t)} */}\r\n\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t{/* <div className='addOrderContainer__container-left'>\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className='addOrderContainer__container-right'>\r\n\t\t\t\t\t\t\t\t\t<AddNewOrderSummary />\r\n\t\t\t\t\t\t\t\t</div> */}\r\n\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t</>\r\n\t\t\t\t)}\r\n\t\t</Formik>\r\n\r\n\r\n\r\n\r\n\t);\r\n};\r\n\r\nexport default AddNewOrder;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Modal, Select, notification, Empty, Spin } from 'antd';\r\nimport * as Yup from 'yup';\r\nimport { CheckCircleOutlined, InfoCircleOutlined } from '@ant-design/icons';\r\n\r\n// import components\r\nimport { useHandleFetch } from '../../hooks';\r\n\r\n\r\nconst { Option } = Select;\r\n\r\n\r\nconst QuickEdit = ({ id, setShowInvoice, showInvoice }) => {\r\n    const [orderDetailState, handleOrderDetailFetch] = useHandleFetch({}, 'orderDetail');\r\n\r\n    useEffect(() => {\r\n        const getOrderDetail = async () => {\r\n            await handleOrderDetailFetch({\r\n                urlOptions: {\r\n                    placeHolders: {\r\n                        id\r\n                    }\r\n                }\r\n            })\r\n        };\r\n\r\n        getOrderDetail();\r\n\r\n    }, [id]);\r\n\r\n\r\n    console.log('orderDetailState', orderDetailState)\r\n\r\n    const handleOk = () => {\r\n        window.print()\r\n    }\r\n\r\n    return (\r\n        <Modal\r\n            title=\"Invoice\"\r\n            visible={showInvoice}\r\n            bodyStyle={{\r\n                margin: '0',\r\n                padding: '10px'\r\n            }}\r\n            onCancel={() => setShowInvoice(false)}\r\n            width={'60vw'}\r\n            okText='Print'\r\n            onOk={() => handleOk()}\r\n        >\r\n            {orderDetailState.isLoading && <Spin />}\r\n            {orderDetailState.data && Object.keys(orderDetailState.data).length > 0 && (\r\n                <>\r\n                    <div className='invoiceContainer'>\r\n                        <table\r\n                            width=\"100%\"\r\n                            border={0}\r\n                            cellPadding={0}\r\n                            cellSpacing={0}\r\n                            align=\"center\"\r\n                            className=\"fullTable\"\r\n                            bgcolor=\"#e1e1e1\"\r\n                        >\r\n                            <tbody>\r\n                                <tr>\r\n                                    <td height={20} />\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>\r\n                                        <table\r\n                                            width={600}\r\n                                            border={0}\r\n                                            cellPadding={0}\r\n                                            cellSpacing={0}\r\n                                            align=\"center\"\r\n                                            className=\"fullTable\"\r\n                                            bgcolor=\"#ffffff\"\r\n                                            style={{ borderRadius: \"10px 10px 0 0\" }}\r\n                                        >\r\n                                            <tbody>\r\n                                                <tr className=\"hiddenMobile\">\r\n                                                    <td height={40} />\r\n                                                </tr>\r\n                                                <tr className=\"visibleMobile\">\r\n                                                    <td height={30} />\r\n                                                </tr>\r\n                                                <tr>\r\n                                                    <td>\r\n                                                        <table\r\n                                                            width={480}\r\n                                                            border={0}\r\n                                                            cellPadding={0}\r\n                                                            cellSpacing={0}\r\n                                                            align=\"center\"\r\n                                                            className=\"fullPadding\"\r\n                                                        >\r\n                                                            <tbody>\r\n                                                                <tr>\r\n                                                                    <td>\r\n                                                                        <table\r\n                                                                            width={220}\r\n                                                                            border={0}\r\n                                                                            cellPadding={0}\r\n                                                                            cellSpacing={0}\r\n                                                                            align=\"left\"\r\n                                                                            className=\"col\"\r\n                                                                        >\r\n                                                                            <tbody>\r\n                                                                                {/* <tr>\r\n                                                                                    <td align=\"left\">\r\n                                                                                        {\" \"}\r\n                                                                                        // <img\r\n                                                                                        //     src=\"http://www.supah.it/dribbble/017/logo.png\"\r\n                                                                                        //     width={32}\r\n                                                                                        //     height={32}\r\n                                                                                        //     alt=\"logo\"\r\n                                                                                        //     border={0}\r\n                                                                                        // />\r\n                                                                                    </td>\r\n                                                                                </tr> */}\r\n                                                                                <tr className=\"hiddenMobile\">\r\n                                                                                    <td height={40} />\r\n                                                                                </tr>\r\n                                                                                <tr className=\"visibleMobile\">\r\n                                                                                    <td height={20} />\r\n                                                                                </tr>\r\n                                                                                <tr>\r\n                                                                                    <td\r\n                                                                                        style={{\r\n                                                                                            fontSize: 12,\r\n                                                                                            color: \"#5b5b5b\",\r\n                                                                                            fontFamily: '\"Open Sans\", sans-serif',\r\n                                                                                            lineHeight: 1.6,\r\n                                                                                            verticalAlign: \"top\",\r\n                                                                                            textAlign: \"left\"\r\n                                                                                        }}\r\n                                                                                    >\r\n                                                                                        Hello, {orderDetailState.data['name']}\r\n                                                                                        <br /> Thank you for your order.\r\n                                </td>\r\n                                                                                </tr>\r\n                                                                            </tbody>\r\n                                                                        </table>\r\n                                                                        <table\r\n                                                                            width={220}\r\n                                                                            border={0}\r\n                                                                            cellPadding={0}\r\n                                                                            cellSpacing={0}\r\n                                                                            align=\"right\"\r\n                                                                            className=\"col\"\r\n                                                                        >\r\n                                                                            <tbody>\r\n                                                                                <tr className=\"visibleMobile\">\r\n                                                                                    <td height={20} />\r\n                                                                                </tr>\r\n                                                                                <tr>\r\n                                                                                    <td height={5} />\r\n                                                                                </tr>\r\n                                                                                <tr>\r\n                                                                                    <td\r\n                                                                                        style={{\r\n                                                                                            fontSize: 21,\r\n                                                                                            color: \"#ff0000\",\r\n                                                                                            letterSpacing: \"-1px\",\r\n                                                                                            fontFamily: '\"Open Sans\", sans-serif',\r\n                                                                                            lineHeight: 1.6,\r\n                                                                                            verticalAlign: \"top\",\r\n                                                                                            textAlign: \"right\"\r\n                                                                                        }}\r\n                                                                                    >\r\n                                                                                        Invoice\r\n                                </td>\r\n                                                                                </tr>\r\n                                                                                <tr></tr>\r\n                                                                                <tr className=\"hiddenMobile\">\r\n                                                                                    <td height={50} />\r\n                                                                                </tr>\r\n                                                                                <tr className=\"visibleMobile\">\r\n                                                                                    <td height={20} />\r\n                                                                                </tr>\r\n                                                                                <tr>\r\n                                                                                    <td\r\n                                                                                        style={{\r\n                                                                                            fontSize: 12,\r\n                                                                                            color: \"#5b5b5b\",\r\n                                                                                            fontFamily: '\"Open Sans\", sans-serif',\r\n                                                                                            lineHeight: 1.6,\r\n                                                                                            verticalAlign: \"top\",\r\n                                                                                            textAlign: \"right\"\r\n                                                                                        }}\r\n                                                                                    >\r\n                                                                                        <small>ORDER</small> #{orderDetailState.data['id']}\r\n                                                                                        <br />\r\n                                                                                        <small>\r\n                                                                                            {orderDetailState.data['date_created']}\r\n\r\n                                                                                        </small>\r\n                                                                                    </td>\r\n                                                                                </tr>\r\n                                                                            </tbody>\r\n                                                                        </table>\r\n                                                                    </td>\r\n                                                                </tr>\r\n                                                            </tbody>\r\n                                                        </table>\r\n                                                    </td>\r\n                                                </tr>\r\n                                            </tbody>\r\n                                        </table>\r\n                                    </td>\r\n                                </tr>\r\n                            </tbody>\r\n                        </table>\r\n                        {/* /Header */}\r\n                        {/* Order Details */}\r\n                        {orderDetailState.data && orderDetailState.data['products'] && orderDetailState.data['products'].length > 0 && (\r\n                            <table\r\n                                width=\"100%\"\r\n                                border={0}\r\n                                cellPadding={0}\r\n                                cellSpacing={0}\r\n                                align=\"center\"\r\n                                className=\"fullTable\"\r\n                                bgcolor=\"#e1e1e1\"\r\n                            >\r\n                                <tbody>\r\n                                    <tr>\r\n                                        <td>\r\n                                            <table\r\n                                                width={600}\r\n                                                border={0}\r\n                                                cellPadding={0}\r\n                                                cellSpacing={0}\r\n                                                align=\"center\"\r\n                                                className=\"fullTable\"\r\n                                                bgcolor=\"#ffffff\"\r\n                                            >\r\n                                                <tbody>\r\n                                                    <tr></tr>\r\n                                                    <tr className=\"hiddenMobile\">\r\n                                                        <td height={60} />\r\n                                                    </tr>\r\n                                                    <tr className=\"visibleMobile\">\r\n                                                        <td height={40} />\r\n                                                    </tr>\r\n                                                    <tr>\r\n                                                        <td>\r\n                                                            <table\r\n                                                                width={480}\r\n                                                                border={0}\r\n                                                                cellPadding={0}\r\n                                                                cellSpacing={0}\r\n                                                                align=\"center\"\r\n                                                                className=\"fullPadding\"\r\n                                                            >\r\n                                                                <tbody>\r\n                                                                    <tr>\r\n                                                                        <th\r\n                                                                            style={{\r\n                                                                                fontSize: 12,\r\n                                                                                fontFamily: '\"Open Sans\", sans-serif',\r\n                                                                                color: \"#5b5b5b\",\r\n                                                                                fontWeight: \"normal\",\r\n                                                                                lineHeight: 1.6,\r\n                                                                                verticalAlign: \"top\",\r\n                                                                                padding: \"0 10px 7px 0\"\r\n                                                                            }}\r\n                                                                            width=\"52%\"\r\n                                                                            align=\"left\"\r\n                                                                        >\r\n                                                                            Name\r\n                        </th>\r\n\r\n                                                                        <th\r\n                                                                            style={{\r\n                                                                                fontSize: 12,\r\n                                                                                fontFamily: '\"Open Sans\", sans-serif',\r\n                                                                                color: \"#5b5b5b\",\r\n                                                                                fontWeight: \"normal\",\r\n                                                                                lineHeight: 1.6,\r\n                                                                                verticalAlign: \"top\",\r\n                                                                                padding: \"0 0 7px\"\r\n                                                                            }}\r\n                                                                            align=\"center\"\r\n                                                                        >\r\n                                                                            Quantity\r\n                        </th>\r\n                                                                        <th\r\n                                                                            style={{\r\n                                                                                fontSize: 12,\r\n                                                                                fontFamily: '\"Open Sans\", sans-serif',\r\n                                                                                color: \"#1e2b33\",\r\n                                                                                fontWeight: \"normal\",\r\n                                                                                lineHeight: 1.6,\r\n                                                                                verticalAlign: \"top\",\r\n                                                                                padding: \"0 0 7px\"\r\n                                                                            }}\r\n                                                                            align=\"right\"\r\n                                                                        >\r\n                                                                            Subtotal\r\n                        </th>\r\n                                                                    </tr>\r\n\r\n\r\n                                                                    {orderDetailState.data['products'].map(item => {\r\n                                                                        return (\r\n                                                                            <>\r\n                                                                                <tr>\r\n                                                                                    <td\r\n                                                                                        height={1}\r\n                                                                                        style={{ background: \"#bebebe\" }}\r\n                                                                                        colSpan={4}\r\n                                                                                    />\r\n                                                                                </tr>\r\n                                                                                <tr>\r\n                                                                                    <td height={10} colSpan={4} />\r\n                                                                                </tr>\r\n                                                                                <tr>\r\n                                                                                    <td\r\n                                                                                        style={{\r\n                                                                                            fontSize: 12,\r\n                                                                                            fontFamily: '\"Open Sans\", sans-serif',\r\n                                                                                            color: \"#ff0000\",\r\n                                                                                            lineHeight: 1.6,\r\n                                                                                            verticalAlign: \"top\",\r\n                                                                                            padding: \"10px 0\"\r\n                                                                                        }}\r\n                                                                                        className=\"article\"\r\n                                                                                    >\r\n                                                                                        {item.name}\r\n                                                                                    </td>\r\n\r\n                                                                                    <td\r\n                                                                                        style={{\r\n                                                                                            fontSize: 12,\r\n                                                                                            fontFamily: '\"Open Sans\", sans-serif',\r\n                                                                                            color: \"#646a6e\",\r\n                                                                                            lineHeight: 1.6,\r\n                                                                                            verticalAlign: \"top\",\r\n                                                                                            padding: \"10px 0\"\r\n                                                                                        }}\r\n                                                                                        align=\"center\"\r\n                                                                                    >\r\n                                                                                        {item.quantity}\r\n                                                                                    </td>\r\n                                                                                    <td\r\n                                                                                        style={{\r\n                                                                                            fontSize: 12,\r\n                                                                                            fontFamily: '\"Open Sans\", sans-serif',\r\n                                                                                            color: \"#1e2b33\",\r\n                                                                                            lineHeight: 1.6,\r\n                                                                                            verticalAlign: \"top\",\r\n                                                                                            padding: \"10px 0\"\r\n                                                                                        }}\r\n                                                                                        align=\"right\"\r\n                                                                                    >\r\n                                                                                        {item.quantity * item.price}\r\n                                                                                    </td>\r\n                                                                                </tr>\r\n                                                                            </>\r\n                                                                        )\r\n                                                                    })}\r\n\r\n\r\n                                                                    <tr>\r\n                                                                        <td\r\n                                                                            height={1}\r\n                                                                            colSpan={4}\r\n                                                                            style={{ borderBottom: \"1px solid #e4e4e4\" }}\r\n                                                                        />\r\n                                                                    </tr>\r\n                                                                </tbody>\r\n                                                            </table>\r\n                                                        </td>\r\n                                                    </tr>\r\n                                                    <tr>\r\n                                                        <td height={20} />\r\n                                                    </tr>\r\n                                                </tbody>\r\n                                            </table>\r\n                                        </td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </table>\r\n                        )}\r\n                        {/* /Order Details */}\r\n                        {/* Total */}\r\n                        <table\r\n                            width=\"100%\"\r\n                            border={0}\r\n                            cellPadding={0}\r\n                            cellSpacing={0}\r\n                            align=\"center\"\r\n                            className=\"fullTable\"\r\n                            bgcolor=\"#e1e1e1\"\r\n                        >\r\n                            <tbody>\r\n                                <tr>\r\n                                    <td>\r\n                                        <table\r\n                                            width={600}\r\n                                            border={0}\r\n                                            cellPadding={0}\r\n                                            cellSpacing={0}\r\n                                            align=\"center\"\r\n                                            className=\"fullTable\"\r\n                                            bgcolor=\"#ffffff\"\r\n                                        >\r\n                                            <tbody>\r\n                                                <tr>\r\n                                                    <td>\r\n                                                        {/* Table Total */}\r\n                                                        <table\r\n                                                            width={480}\r\n                                                            border={0}\r\n                                                            cellPadding={0}\r\n                                                            cellSpacing={0}\r\n                                                            align=\"center\"\r\n                                                            className=\"fullPadding\"\r\n                                                        >\r\n                                                            <tbody>\r\n                                                                <tr>\r\n                                                                    <td\r\n                                                                        style={{\r\n                                                                            fontSize: 12,\r\n                                                                            fontFamily: '\"Open Sans\", sans-serif',\r\n                                                                            color: \"#646a6e\",\r\n                                                                            lineHeight: 1.6,\r\n                                                                            verticalAlign: \"top\",\r\n                                                                            textAlign: \"right\"\r\n                                                                        }}\r\n                                                                    >\r\n                                                                        Total\r\n                        </td>\r\n                                                                    <td\r\n                                                                        style={{\r\n                                                                            fontSize: 12,\r\n                                                                            fontFamily: '\"Open Sans\", sans-serif',\r\n                                                                            color: \"#646a6e\",\r\n                                                                            lineHeight: 1.6,\r\n                                                                            verticalAlign: \"top\",\r\n                                                                            textAlign: \"right\",\r\n                                                                            whiteSpace: \"nowrap\"\r\n                                                                        }}\r\n                                                                        width={80}\r\n                                                                    >\r\n                                                                        {orderDetailState.data['total']}\r\n                                                                    </td>\r\n                                                                </tr>\r\n                                                                {/* <tr>\r\n                                                                    <td\r\n                                                                        style={{\r\n                                                                            fontSize: 12,\r\n                                                                            fontFamily: '\"Open Sans\", sans-serif',\r\n                                                                            color: \"#646a6e\",\r\n                                                                            lineHeight: 1.6,\r\n                                                                            verticalAlign: \"top\",\r\n                                                                            textAlign: \"right\"\r\n                                                                        }}\r\n                                                                    >\r\n                                                                        Shipping &amp; Handling\r\n                        </td>\r\n                                                                    <td\r\n                                                                        style={{\r\n                                                                            fontSize: 12,\r\n                                                                            fontFamily: '\"Open Sans\", sans-serif',\r\n                                                                            color: \"#646a6e\",\r\n                                                                            lineHeight: 1.6,\r\n                                                                            verticalAlign: \"top\",\r\n                                                                            textAlign: \"right\"\r\n                                                                        }}\r\n                                                                    >\r\n                                                                        $15.00\r\n                        </td>\r\n                                                                </tr> */}\r\n                                                                {/* <tr>\r\n                                                                    <td\r\n                                                                        style={{\r\n                                                                            fontSize: 12,\r\n                                                                            fontFamily: '\"Open Sans\", sans-serif',\r\n                                                                            color: \"#000\",\r\n                                                                            lineHeight: 1.6,\r\n                                                                            verticalAlign: \"top\",\r\n                                                                            textAlign: \"right\"\r\n                                                                        }}\r\n                                                                    >\r\n                                                                        <strong>Grand Total (Incl.Tax)</strong>\r\n                                                                    </td>\r\n                                                                    <td\r\n                                                                        style={{\r\n                                                                            fontSize: 12,\r\n                                                                            fontFamily: '\"Open Sans\", sans-serif',\r\n                                                                            color: \"#000\",\r\n                                                                            lineHeight: 1.6,\r\n                                                                            verticalAlign: \"top\",\r\n                                                                            textAlign: \"right\"\r\n                                                                        }}\r\n                                                                    >\r\n                                                                        <strong>$344.90</strong>\r\n                                                                    </td>\r\n                                                                </tr> */}\r\n                                                                {/* <tr>\r\n                                                                    <td\r\n                                                                        style={{\r\n                                                                            fontSize: 12,\r\n                                                                            fontFamily: '\"Open Sans\", sans-serif',\r\n                                                                            color: \"#b0b0b0\",\r\n                                                                            lineHeight: 1.6,\r\n                                                                            verticalAlign: \"top\",\r\n                                                                            textAlign: \"right\"\r\n                                                                        }}\r\n                                                                    >\r\n                                                                        <small>TAX</small>\r\n                                                                    </td>\r\n                                                                    <td\r\n                                                                        style={{\r\n                                                                            fontSize: 12,\r\n                                                                            fontFamily: '\"Open Sans\", sans-serif',\r\n                                                                            color: \"#b0b0b0\",\r\n                                                                            lineHeight: 1.6,\r\n                                                                            verticalAlign: \"top\",\r\n                                                                            textAlign: \"right\"\r\n                                                                        }}\r\n                                                                    >\r\n                                                                        <small>$72.40</small>\r\n                                                                    </td>\r\n                                                                </tr> */}\r\n                                                            </tbody>\r\n                                                        </table>\r\n                                                        {/* /Table Total */}\r\n                                                    </td>\r\n                                                </tr>\r\n                                            </tbody>\r\n                                        </table>\r\n                                    </td>\r\n                                </tr>\r\n                            </tbody>\r\n                        </table>\r\n                        {/* /Total */}\r\n                        {/* Information */}\r\n                        <table\r\n                            width=\"100%\"\r\n                            border={0}\r\n                            cellPadding={0}\r\n                            cellSpacing={0}\r\n                            align=\"center\"\r\n                            className=\"fullTable\"\r\n                            bgcolor=\"#e1e1e1\"\r\n                        >\r\n                            <tbody>\r\n                                <tr>\r\n                                    <td>\r\n                                        <table\r\n                                            width={600}\r\n                                            border={0}\r\n                                            cellPadding={0}\r\n                                            cellSpacing={0}\r\n                                            align=\"center\"\r\n                                            className=\"fullTable\"\r\n                                            bgcolor=\"#ffffff\"\r\n                                        >\r\n                                            <tbody>\r\n                                                <tr></tr>\r\n                                                <tr className=\"hiddenMobile\">\r\n                                                    <td height={60} />\r\n                                                </tr>\r\n                                                <tr className=\"visibleMobile\">\r\n                                                    <td height={40} />\r\n                                                </tr>\r\n                                                <tr>\r\n                                                    <td>\r\n                                                        <table\r\n                                                            width={480}\r\n                                                            border={0}\r\n                                                            cellPadding={0}\r\n                                                            cellSpacing={0}\r\n                                                            align=\"center\"\r\n                                                            className=\"fullPadding\"\r\n                                                        >\r\n                                                            <tbody>\r\n                                                                <tr>\r\n                                                                    <td>\r\n                                                                        <table\r\n                                                                            width={220}\r\n                                                                            border={0}\r\n                                                                            cellPadding={0}\r\n                                                                            cellSpacing={0}\r\n                                                                            align=\"left\"\r\n                                                                            className=\"col\"\r\n                                                                        >\r\n                                                                            <tbody>\r\n                                                                                <tr>\r\n                                                                                    <td\r\n                                                                                        style={{\r\n                                                                                            fontSize: 11,\r\n                                                                                            fontFamily: '\"Open Sans\", sans-serif',\r\n                                                                                            color: \"#5b5b5b\",\r\n                                                                                            lineHeight: 1.6,\r\n                                                                                            verticalAlign: \"top\"\r\n                                                                                        }}\r\n                                                                                    >\r\n                                                                                        <strong>BILLING INFORMATION</strong>\r\n                                                                                    </td>\r\n                                                                                </tr>\r\n                                                                                <tr>\r\n                                                                                    <td width=\"100%\" height={10} />\r\n                                                                                </tr>\r\n                                                                                <tr>\r\n                                                                                    <td\r\n                                                                                        style={{\r\n                                                                                            fontSize: 12,\r\n                                                                                            fontFamily: '\"Open Sans\", sans-serif',\r\n                                                                                            color: \"#5b5b5b\",\r\n                                                                                            lineHeight: 1.6,\r\n                                                                                            verticalAlign: \"top\"\r\n                                                                                        }}\r\n                                                                                    >\r\n                                                                                        {orderDetailState.data['name']}\r\n                                                                                        <br /> {orderDetailState.data['country']}\r\n                                                                                        <br /> {orderDetailState.data['city']}\r\n                                                                                        <br />{orderDetailState.data['address']}\r\n                                                                                        <br /> {orderDetailState.data['phone']}\r\n                                                                                        <br /> {orderDetailState.data['email']}\r\n                                                                                    </td>\r\n                                                                                </tr>\r\n                                                                            </tbody>\r\n                                                                        </table>\r\n                                                                        <table\r\n                                                                            width={220}\r\n                                                                            border={0}\r\n                                                                            cellPadding={0}\r\n                                                                            cellSpacing={0}\r\n                                                                            align=\"right\"\r\n                                                                            className=\"col\"\r\n                                                                        >\r\n                                                                            <tbody>\r\n                                                                                <tr className=\"visibleMobile\">\r\n                                                                                    <td height={20} />\r\n                                                                                </tr>\r\n                                                                                <tr>\r\n                                                                                    <td\r\n                                                                                        style={{\r\n                                                                                            fontSize: 11,\r\n                                                                                            fontFamily: '\"Open Sans\", sans-serif',\r\n                                                                                            color: \"#5b5b5b\",\r\n                                                                                            lineHeight: 1.6,\r\n                                                                                            verticalAlign: \"top\"\r\n                                                                                        }}\r\n                                                                                    >\r\n                                                                                        <strong>Status</strong>\r\n\r\n                                                                                    </td>\r\n                                                                                </tr>\r\n                                                                                <tr>\r\n                                                                                    <td width=\"100%\" height={10} />\r\n                                                                                </tr>\r\n                                                                                <tr>\r\n                                                                                    <td\r\n                                                                                        style={{\r\n                                                                                            fontSize: 12,\r\n                                                                                            fontFamily: '\"Open Sans\", sans-serif',\r\n                                                                                            color: \"#5b5b5b\",\r\n                                                                                            lineHeight: 1.6,\r\n                                                                                            verticalAlign: \"top\"\r\n                                                                                        }}\r\n                                                                                    >\r\n                                                                                        {orderDetailState.data['paymentStatus']}\r\n\r\n                                                                                    </td>\r\n                                                                                </tr>\r\n                                                                            </tbody>\r\n                                                                        </table>\r\n                                                                    </td>\r\n                                                                </tr>\r\n                                                            </tbody>\r\n                                                        </table>\r\n                                                    </td>\r\n                                                </tr>\r\n                                                <tr>\r\n                                                    <td>\r\n                                                        <table\r\n                                                            width={480}\r\n                                                            border={0}\r\n                                                            cellPadding={0}\r\n                                                            cellSpacing={0}\r\n                                                            align=\"center\"\r\n                                                            className=\"fullPadding\"\r\n                                                        >\r\n                                                            <tbody>\r\n                                                                <tr>\r\n                                                                    <td>\r\n                                                                        <table\r\n                                                                            width={220}\r\n                                                                            border={0}\r\n                                                                            cellPadding={0}\r\n                                                                            cellSpacing={0}\r\n                                                                            align=\"left\"\r\n                                                                            className=\"col\"\r\n                                                                        >\r\n                                                                            <tbody>\r\n                                                                                <tr className=\"hiddenMobile\">\r\n                                                                                    <td height={35} />\r\n                                                                                </tr>\r\n                                                                                <tr className=\"visibleMobile\">\r\n                                                                                    <td height={20} />\r\n                                                                                </tr>\r\n                                                                                <tr>\r\n                                                                                    {/* <td\r\n                                                                                        style={{\r\n                                                                                            fontSize: 11,\r\n                                                                                            fontFamily: '\"Open Sans\", sans-serif',\r\n                                                                                            color: \"#5b5b5b\",\r\n                                                                                            lineHeight: 1.6,\r\n                                                                                            verticalAlign: \"top\"\r\n                                                                                        }}\r\n                                                                                    >\r\n                                                                                        <strong>SHIPPING INFORMATION</strong>\r\n                                                                                    </td> */}\r\n                                                                                </tr>\r\n                                                                                <tr>\r\n                                                                                    <td width=\"100%\" height={10} />\r\n                                                                                </tr>\r\n                                                                                <tr>\r\n                                                                                    {/* <td\r\n                                                                                        style={{\r\n                                                                                            fontSize: 12,\r\n                                                                                            fontFamily: '\"Open Sans\", sans-serif',\r\n                                                                                            color: \"#5b5b5b\",\r\n                                                                                            lineHeight: 1.6,\r\n                                                                                            verticalAlign: \"top\"\r\n                                                                                        }}\r\n                                                                                    >\r\n                                                                                        Sup Inc\r\n                                  <br /> Another Place, Somewhere\r\n                                  <br /> New York NY\r\n                                  <br /> 4468, United States\r\n                                  <br /> T: 202-555-0171\r\n                                </td> */}\r\n                                                                                </tr>\r\n                                                                            </tbody>\r\n                                                                        </table>\r\n                                                                        <table\r\n                                                                            width={220}\r\n                                                                            border={0}\r\n                                                                            cellPadding={0}\r\n                                                                            cellSpacing={0}\r\n                                                                            align=\"right\"\r\n                                                                            className=\"col\"\r\n                                                                        >\r\n                                                                            <tbody>\r\n                                                                                <tr className=\"hiddenMobile\">\r\n                                                                                    <td height={35} />\r\n                                                                                </tr>\r\n                                                                                <tr className=\"visibleMobile\">\r\n                                                                                    <td height={20} />\r\n                                                                                </tr>\r\n                                                                                <tr>\r\n                                                                                    <td\r\n                                                                                        style={{\r\n                                                                                            fontSize: 11,\r\n                                                                                            fontFamily: '\"Open Sans\", sans-serif',\r\n                                                                                            color: \"#5b5b5b\",\r\n                                                                                            lineHeight: 1.6,\r\n                                                                                            verticalAlign: \"top\"\r\n                                                                                        }}\r\n                                                                                    >\r\n                                                                                        {/* <strong>SHIPPING METHOD</strong> */}\r\n                                                                                    </td>\r\n                                                                                </tr>\r\n                                                                                <tr>\r\n                                                                                    <td width=\"100%\" height={10} />\r\n                                                                                </tr>\r\n                                                                                <tr>\r\n                                                                                    <td\r\n                                                                                        style={{\r\n                                                                                            fontSize: 12,\r\n                                                                                            fontFamily: '\"Open Sans\", sans-serif',\r\n                                                                                            color: \"#5b5b5b\",\r\n                                                                                            lineHeight: 1.6,\r\n                                                                                            verticalAlign: \"top\"\r\n                                                                                        }}\r\n                                                                                    >\r\n                                                                                        {/* UPS: U.S. Shipping Services */}\r\n                                                                                    </td>\r\n                                                                                </tr>\r\n                                                                            </tbody>\r\n                                                                        </table>\r\n                                                                    </td>\r\n                                                                </tr>\r\n                                                            </tbody>\r\n                                                        </table>\r\n                                                    </td>\r\n                                                </tr>\r\n                                                <tr className=\"hiddenMobile\">\r\n                                                    <td height={60} />\r\n                                                </tr>\r\n                                                <tr className=\"visibleMobile\">\r\n                                                    <td height={30} />\r\n                                                </tr>\r\n                                            </tbody>\r\n                                        </table>\r\n                                    </td>\r\n                                </tr>\r\n                            </tbody>\r\n                        </table>\r\n                        {/* /Information */}\r\n                        <table\r\n                            width=\"100%\"\r\n                            border={0}\r\n                            cellPadding={0}\r\n                            cellSpacing={0}\r\n                            align=\"center\"\r\n                            className=\"fullTable\"\r\n                            bgcolor=\"#e1e1e1\"\r\n                        >\r\n                            <tbody>\r\n                                <tr>\r\n                                    <td>\r\n                                        <table\r\n                                            width={600}\r\n                                            border={0}\r\n                                            cellPadding={0}\r\n                                            cellSpacing={0}\r\n                                            align=\"center\"\r\n                                            className=\"fullTable\"\r\n                                            bgcolor=\"#ffffff\"\r\n                                            style={{ borderRadius: \"0 0 10px 10px\" }}\r\n                                        >\r\n                                            <tbody>\r\n                                                <tr>\r\n                                                    <td>\r\n                                                        <table\r\n                                                            width={480}\r\n                                                            border={0}\r\n                                                            cellPadding={0}\r\n                                                            cellSpacing={0}\r\n                                                            align=\"center\"\r\n                                                            className=\"fullPadding\"\r\n                                                        >\r\n                                                            <tbody>\r\n                                                                <tr>\r\n                                                                    <td\r\n                                                                        style={{\r\n                                                                            fontSize: 12,\r\n                                                                            color: \"#5b5b5b\",\r\n                                                                            fontFamily: '\"Open Sans\", sans-serif',\r\n                                                                            lineHeight: 1.6,\r\n                                                                            verticalAlign: \"top\",\r\n                                                                            textAlign: \"left\"\r\n                                                                        }}\r\n                                                                    >\r\n                                                                        Have a nice day.\r\n                        </td>\r\n                                                                </tr>\r\n                                                            </tbody>\r\n                                                        </table>\r\n                                                    </td>\r\n                                                </tr>\r\n                                                <tr className=\"spacer\">\r\n                                                    <td height={50} />\r\n                                                </tr>\r\n                                            </tbody>\r\n                                        </table>\r\n                                    </td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td height={20} />\r\n                                </tr>\r\n                            </tbody>\r\n                        </table>\r\n                    </div>;\r\n                </>\r\n            )}\r\n        </Modal>\r\n\r\n    );\r\n};\r\n\r\n\r\nexport default QuickEdit;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useHandleFetch } from '../../hooks';\r\n\r\n\r\n\r\n\r\n// import lib \r\nimport { Skeleton } from 'antd'\r\n\r\n\r\n\r\ninterface Props {\r\n    productId?: any;\r\n    quantity?: any;\r\n    item?: any\r\n    variation?: any;\r\n}\r\n\r\nconst CartOverLayCartItem = ({\r\n    productId,\r\n    quantity,\r\n    item,\r\n    variation\r\n}: Props) => {\r\n\r\n\r\n    const [productDetailState, handleProductFetch] = useHandleFetch(\r\n        {},\r\n        'productDetailById'\r\n    );\r\n    const [product, setProduct] = useState({});\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [modifiedPrice, setModifiedPrice] = useState('');\r\n    const [selectedVariationId, setSelectedVariationId] = useState(variation);\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        setIsLoading(true);\r\n        const getAndSetProduct = async () => {\r\n            const product = await handleProductFetch({\r\n                urlOptions: {\r\n                    placeHolders: {\r\n                        id: productId,\r\n                    },\r\n                },\r\n            });\r\n\r\n            // @ts-ignore\r\n            setProduct(product);\r\n            setIsLoading(false);\r\n        };\r\n        getAndSetProduct()\r\n    }, []);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    console.log('modifiedPrice', modifiedPrice);\r\n    return (\r\n        <>\r\n\r\n            <Skeleton loading={productDetailState.isLoading}>\r\n                {productDetailState.data && Object.keys(productDetailState.data).length > 0 && (\r\n                    <div className='cart-item' key={''}>\r\n\r\n\r\n                        <img\r\n\r\n                            src={productDetailState.data['cover'] && productDetailState.data['cover']['cover']}\r\n                            alt='Img'\r\n                            style={{\r\n                                cursor: 'pointer',\r\n                            }}\r\n                        />\r\n                        <div className='cart-item-info'>\r\n                            <h4\r\n\r\n                            >\r\n                                {productDetailState.data['name']}\r\n                            </h4>\r\n                            <h5\r\n                            >\r\n                                Quantity : {quantity}\r\n                            </h5>\r\n                            <h5\r\n                            >\r\n                                {item['unitPrice']}\r\n                            </h5>\r\n\r\n\r\n                            {/* {pricingOptions && pricingOptions.length > 0 && pricingOptions.map(tag => (\r\n                            <>\r\n                                <span\r\n                                    onClick={() => handleAttributeChange(tag.value)}\r\n                                    className={selectedVariationId === tag.value ? 'product-attributeTag product-attributeTag-active' : 'product-attributeTag'}>\r\n                                    {tag.label}\r\n                                </span>\r\n                            </>\r\n                        ))} */}\r\n\r\n                            {/* <span\r\n             style={{\r\n               display: 'inline-block',\r\n               background: '#fafafa',\r\n               padding: '3px 3px',\r\n               borderRadius: 1,\r\n               fontSize: '12px',\r\n               marginRight: '5px',\r\n               color: '#777',\r\n               marginTop: '5px'\r\n             }}\r\n           >\r\n             15KG\r\n             </span> */}\r\n\r\n                        </div>\r\n                        {/* <span\r\n                        onClick={handleAttributeDelete}\r\n                        className='remove-item' >\r\n                        <i className='fa fa-times'></i>\r\n                    </span> */}\r\n\r\n                    </div>\r\n                )}\r\n            </Skeleton>\r\n\r\n        </>\r\n    );\r\n};\r\n\r\n// @ts-ignore\r\nexport default CartOverLayCartItem;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Modal, Select, notification, Form, Empty, Button } from 'antd';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { CheckCircleOutlined, InfoCircleOutlined } from '@ant-design/icons';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport { useHandleFetch } from '../../hooks';\r\nimport OrderInvoice from \"./OrderInvoice.jsx\";\r\nimport ProductItemForOrderDetail from \"./productItemForOrderDetail\";\r\n\r\n\r\nconst { Option } = Select;\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    // name: Yup.string()\r\n    //     .label('Name')\r\n    //     .required()\r\n    //     .min(2, 'Name must have at least 2 characters '),\r\n    // pickUpLocation: Yup.string()\r\n    //     .label('Pick up Location')\r\n    //     .required()\r\n    //     .min(2, 'Pick up Location must have at least 2 characters '),\r\n    // time: Yup.string()\r\n    //     .label('Time')\r\n    //     .required()\r\n    //     .min(2, 'Time must have at least 2 characters '),\r\n\r\n});\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Tag Created',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n    notification.error({\r\n        message: message || 'Something Went Wrong',\r\n        description: '',\r\n        icon: <InfoCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n    });\r\n};\r\n\r\n\r\ninterface Props {\r\n    customer: any;\r\n    setTagEditVisible: any;\r\n    tagEditVisible: any;\r\n}\r\n\r\nconst QuickEdit = ({ customer, setTagEditVisible, tagEditVisible }: Props) => {\r\n    const [updateOrderState, handleUpdateOrderFetch] = useHandleFetch({}, 'updateOrder');\r\n\r\n    console.log('customerVie', customer);\r\n\r\n    const [selectedCountryValue, setselectedCountryValue] = useState('');\r\n    const [selectedCityValue, setselectedCityValue] = useState('');\r\n\r\n    const [countryOptions, setcountryOptions] = useState([]);\r\n    const [cityOptions, setcityOptions] = useState([]);\r\n\r\n    const [countryListState, handleCountryListFetch] = useHandleFetch(\r\n        [],\r\n        'countryList'\r\n    );\r\n\r\n    const [cityListState, handleCityListFetch] = useHandleFetch([], 'cityList');\r\n\r\n    const [countryList, setCountryList] = useState([]);\r\n    const [cityList, setCityList] = useState([]);\r\n    const [showInvoice, setShowInvoice] = useState(false);\r\n\r\n\r\n\r\n    const handleSubmit = async (values: any, actions: any) => {\r\n        // console.log('selectedCityValue', selectedCityValue); \r\n        console.log('cooles', customer)\r\n\r\n        const addRegionRes = await handleUpdateOrderFetch({\r\n            urlOptions: {\r\n                placeHolders: {\r\n                    id: customer.id,\r\n                }\r\n            },\r\n            body: {\r\n                billingAddress: {\r\n                    phone: values.phone,\r\n                    email: values.email,\r\n                    address1: values.address1,\r\n                    address2: values.address2,\r\n                    firstName: values.firstName,\r\n                    lastName: values.lastName,\r\n                    city: selectedCityValue || customer['billingAddress']['city'],\r\n                    country: selectedCountryValue || customer['billingAddress']['country'],\r\n                },\r\n                products: customer.products,\r\n                customerId: customer.customerId\r\n                // charge\r\n            },\r\n        });\r\n\r\n        // @ts-ignore\r\n        if (addRegionRes && addRegionRes.status === 'ok') {\r\n            openSuccessNotification();\r\n\r\n            // const positionInTag = () => {\r\n            //     return orderList.map(item => item.id).indexOf(customer.id);\r\n            // }\r\n\r\n            // const index = positionInTag();\r\n\r\n            // const updatedItem = Object.assign({}, orderList[index], { ...addRegionRes });\r\n            // const updateRegionList = [...orderList.slice(0, index), updatedItem, ...orderList.slice(index + 1)];\r\n            // setOrderList(updateRegionList);\r\n\r\n        }\r\n        else {\r\n            openErrorNotification();\r\n        }\r\n\r\n        actions.setSubmitting(false);\r\n        setTagEditVisible(false)\r\n\r\n    };\r\n\r\n\r\n    const onChangeCity = (value) => {\r\n        setselectedCityValue(value);\r\n    }\r\n\r\n    const onChangeCountry = (value) => {\r\n        setselectedCountryValue(value);\r\n    }\r\n\r\n    useEffect(() => {\r\n        const setCountries = async () => {\r\n            const CountryListRes = await handleCountryListFetch({});\r\n\r\n            // @ts-ignore\r\n            if (CountryListRes && CountryListRes.length > 0) {\r\n                // @ts-ignore\r\n                const countryOptions = CountryListRes.map((country) => {\r\n                    return {\r\n                        value: country.name,\r\n                        name: country.name\r\n                    };\r\n                });\r\n                setcountryOptions(countryOptions);\r\n            }\r\n        };\r\n\r\n        setCountries();\r\n    }, []);\r\n\r\n\r\n    useEffect(() => {\r\n        const setCities = async () => {\r\n            const cityListRes = await handleCityListFetch({\r\n                urlOptions: {\r\n                    placeHolders: {\r\n                        country: selectedCountryValue,\r\n                    },\r\n                },\r\n            });\r\n\r\n            // @ts-ignore\r\n            if (cityListRes && cityListRes.length > 0) {\r\n                // @ts-ignore\r\n                const cityOptions = cityListRes.map((city) => {\r\n                    return {\r\n                        value: city.name,\r\n                        name: city.name\r\n                    };\r\n                });\r\n                setcityOptions(cityOptions);\r\n            }\r\n        };\r\n\r\n        setCities();\r\n    }, [selectedCountryValue]);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    const handleCancel = (e: any) => {\r\n        setTagEditVisible(false);\r\n    };\r\n\r\n\r\n\r\n    const getisSubmitButtonDisabled = (values, isValid) => {\r\n        if (!isValid ||\r\n            !values.firstName ||\r\n            !values.LastName) {\r\n\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    return (\r\n        <Formik\r\n            onSubmit={(values, actions) => handleSubmit(values, actions)}\r\n            validationSchema={validationSchema}\r\n            validateOnBlur={false}\r\n            enableReinitialize={true}\r\n            initialValues={\r\n                { ...customer.billingAddress ? customer.billingAddress : {} }\r\n            }\r\n        >\r\n            {({\r\n                handleChange,\r\n                values,\r\n                handleSubmit,\r\n                errors,\r\n                isValid,\r\n                isSubmitting,\r\n                touched,\r\n                handleBlur,\r\n                setFieldTouched,\r\n                handleReset,\r\n            }) => (\r\n                    <>\r\n                        <Modal\r\n                            title=\"Order Edit\"\r\n                            visible={tagEditVisible}\r\n                            onOk={(e: any) => handleSubmit(e)}\r\n                            onCancel={handleCancel}\r\n                            okText='Update'\r\n                            okButtonProps={{\r\n                                loading: isSubmitting,\r\n                                htmlType: \"submit\",\r\n                                // disabled: getisSubmitButtonDisabled(values, isValid)\r\n                            }}\r\n                            bodyStyle={{\r\n                                margin: '0',\r\n                                padding: '10px'\r\n                            }}\r\n                            width={'70vw'}\r\n                        >\r\n\r\n\r\n                            <div className='dubbleRowInputs'>\r\n                                <div className='dubbleRowInputs__item'>\r\n                                    <Input\r\n                                        label='First Name'\r\n                                        value={values.firstName}\r\n                                        name='firstName'\r\n                                        isError={(touched.firstName && errors.firstName) ||\r\n                                            (!isSubmitting && updateOrderState.error['error']['firstName'])}\r\n\r\n                                        errorString={(touched.firstName && errors.firstName) ||\r\n                                            (!isSubmitting && updateOrderState.error['error']['firstName'])}\r\n                                        onChange={(e: any) => {\r\n                                            handleChange(e);\r\n                                            setFieldTouched('firstName');\r\n                                        }}\r\n                                    />\r\n                                </div>\r\n                                <div className='dubbleRowInputs__item'>\r\n                                    <Input\r\n                                        label='Last Name'\r\n                                        value={values.lastName}\r\n                                        name='lastName'\r\n                                        isError={(touched.lastName && errors.lastName) ||\r\n                                            (!isSubmitting && updateOrderState.error['error']['lastName'])}\r\n\r\n                                        errorString={(touched.lastName && errors.lastName) ||\r\n                                            (!isSubmitting && updateOrderState.error['error']['lastName'])}\r\n                                        onChange={(e: any) => {\r\n                                            handleChange(e);\r\n                                            setFieldTouched('lastName');\r\n                                        }}\r\n                                    />\r\n                                </div>\r\n\r\n\r\n\r\n\r\n                            </div>\r\n\r\n\r\n\r\n                            <div className='dubbleRowInputs'>\r\n                                <div className='dubbleRowInputs__item'>\r\n                                    <Input\r\n                                        label='Phone'\r\n                                        value={values.phone}\r\n                                        name='phone'\r\n                                        isError={(touched.phone && errors.phone) ||\r\n                                            (!isSubmitting && updateOrderState.error['error']['phone'])}\r\n\r\n                                        errorString={(touched.phone && errors.phone) ||\r\n                                            (!isSubmitting && updateOrderState.error['error']['phone'])}\r\n                                        onChange={(e: any) => {\r\n                                            handleChange(e);\r\n                                            setFieldTouched('phone');\r\n                                        }}\r\n                                    />\r\n                                </div>\r\n                                <div className='dubbleRowInputs__item'>\r\n                                    <Input\r\n                                        label='Email'\r\n                                        value={values.email}\r\n                                        name='email'\r\n                                        isError={(touched.email && errors.email) ||\r\n                                            (!isSubmitting && updateOrderState.error['error']['email'])}\r\n\r\n                                        errorString={(touched.email && errors.email) ||\r\n                                            (!isSubmitting && updateOrderState.error['error']['email'])}\r\n                                        onChange={(e: any) => {\r\n                                            handleChange(e);\r\n                                            setFieldTouched('email');\r\n                                        }}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n\r\n\r\n                            <div className='dubbleRowInputs'>\r\n                                <div className='dubbleRowInputs__item'>\r\n                                    <h3 className='inputFieldLabel'>\r\n                                        Country\r\n\t\t\t\t\t\t\t\t\t</h3>\r\n\r\n\r\n                                    <Form.Item\r\n                                        validateStatus={(updateOrderState.error['error']['country']) ? \"error\" : \"\"}\r\n                                        help={updateOrderState.error['error']['country']}\r\n                                    // noStyle={true}\r\n                                    >\r\n                                        <Select\r\n                                            defaultValue={values.country}\r\n                                            notFoundContent={<Empty description='No Country Found' image={Empty.PRESENTED_IMAGE_SIMPLE} />}\r\n                                            showSearch\r\n                                            style={{ width: '100%' }}\r\n                                            placeholder='Select a Country'\r\n                                            optionFilterProp='children'\r\n                                            onChange={onChangeCountry}\r\n                                            filterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n                                        >\r\n                                            {countryListState.done &&\r\n                                                countryListState.data.length > 0 &&\r\n                                                countryOptions.map((option) => {\r\n                                                    return <Option value={option.value}>{option.name}</Option>;\r\n                                                })}\r\n                                        </Select>\r\n\r\n                                    </Form.Item>\r\n\r\n\r\n\r\n\r\n                                </div>\r\n                                <div className='dubbleRowInputs__item'>\r\n                                    <h3 className='inputFieldLabel'>\r\n                                        City\r\n                                    </h3>\r\n                                    <Form.Item\r\n                                        // noStyle={true}\r\n                                        validateStatus={(updateOrderState.error['error']['city']) ? \"error\" : \"\"}\r\n                                        help={updateOrderState.error['error']['city']}\r\n\r\n                                    >\r\n                                        <Select\r\n                                            defaultValue={values.city}\r\n                                            className='selectClassName'\r\n                                            notFoundContent={<Empty description='First Select a Country' image={Empty.PRESENTED_IMAGE_SIMPLE} />}\r\n                                            showSearch\r\n                                            style={{ width: '100%' }}\r\n                                            placeholder='Select a city'\r\n                                            optionFilterProp='children'\r\n                                            onChange={onChangeCity}\r\n                                            filterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n                                        >\r\n                                            {cityListState.done &&\r\n                                                cityListState.data.length > 0 &&\r\n                                                cityOptions.map((option) => {\r\n                                                    return <Option value={option.value}>{option.name}</Option>;\r\n                                                })}\r\n                                        </Select>\r\n                                    </Form.Item>\r\n                                </div>\r\n\r\n                            </div>\r\n\r\n                            <div style={{\r\n                                marginTop: '12px'\r\n                            }}></div>\r\n\r\n\r\n\r\n                            <div className='dubbleRowInputs'>\r\n                                <div className='dubbleRowInputs__item'>\r\n                                    <Input\r\n                                        label='Address'\r\n                                        value={values.address1}\r\n                                        name='address1'\r\n                                        isError={(touched.address1 && errors.address1) ||\r\n                                            (!isSubmitting && updateOrderState.error['error']['address1'])}\r\n\r\n                                        errorString={(touched.address1 && errors.address1) ||\r\n                                            (!isSubmitting && updateOrderState.error['error']['address1'])}\r\n                                        onChange={(e: any) => {\r\n                                            handleChange(e);\r\n                                            setFieldTouched('address1');\r\n                                        }}\r\n                                    />\r\n                                </div>\r\n                                <div className='dubbleRowInputs__item'>\r\n                                    <Input\r\n                                        label='Address 2'\r\n                                        value={values.address2}\r\n                                        name='address2'\r\n                                        isError={(touched.address2 && errors.address2) ||\r\n                                            (!isSubmitting && updateOrderState.error['error']['address2'])}\r\n\r\n                                        errorString={(touched.address2 && errors.address2) ||\r\n                                            (!isSubmitting && updateOrderState.error['error']['address2'])}\r\n                                        onChange={(e: any) => {\r\n                                            handleChange(e);\r\n                                            setFieldTouched('address2');\r\n                                        }}\r\n                                    />\r\n                                </div>\r\n\r\n                            </div>\r\n\r\n                            <div style={{\r\n                                marginTop: '12px'\r\n                            }}></div>\r\n\r\n\r\n\r\n                                    {customer.products && customer.products.length > 0 && (\r\n                                        <h3 className='inputFieldLabel'>\r\n                                        Products \r\n                                    </h3>\r\n                                    )}\r\n\r\n\r\n                            {customer.products && customer.products.length > 0 && <> \r\n                            \r\n                                {customer.products.map(item => {\r\n                    return <ProductItemForOrderDetail\r\n                        productId={item._id}\r\n                        quantity={item.quantity}\r\n                        item={item}\r\n                        variation={item.variation}\r\n                    />;\r\n                })}\r\n\r\n                            </>}\r\n\r\n\r\n                            <div style={{\r\n                                marginTop: '20px'\r\n                            }}></div>\r\n                    <Button\r\n                    onClick={() => setShowInvoice(true)}\r\n                    className='btnPrimaryClassNameoutline'\r\n                    >\r\n                        Generate Invoice\r\n                        \r\n                        </Button>\r\n\r\n            <div style={{\r\n                                marginBottom: '20px'\r\n                            }}></div>\r\n\r\n            <OrderInvoice\r\n            id={customer.id}\r\n            setShowInvoice={setShowInvoice}\r\n             showInvoice={showInvoice} \r\n            />\r\n\r\n                            \r\n\r\n\r\n                        </Modal>\r\n\r\n                    </>\r\n                )}\r\n\r\n\r\n\r\n        </Formik>\r\n    );\r\n};\r\n\r\n\r\nexport default QuickEdit;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useParams, useHistory } from \"react-router\";\r\n\r\n\r\n// import hooks\r\nimport { useHandleFetch } from \"../../hooks\";\r\n\r\n// import lib\r\nimport {\r\n    FileOutlined,\r\n    InboxOutlined,\r\n    RadiusUpleftOutlined,\r\n    RadiusUprightOutlined,\r\n    RadiusBottomleftOutlined,\r\n    RadiusBottomrightOutlined,\r\n    PlusOutlined,\r\n    DeleteOutlined,\r\n    EditOutlined,\r\n    CheckCircleOutlined\r\n} from '@ant-design/icons';\r\n\r\nimport { Skeleton, Empty, Popconfirm, Upload, message, Switch, Select, Button, notification, Table, Space, Input as CoolInput, Tooltip, Modal } from 'antd';\r\n\r\n\r\n// import components\r\nimport { DataTableSkeleton } from \"../../components/Placeholders\";\r\nimport OrderEdit from \"./OrderEdit\";\r\nimport { OrderDetail } from '.';\r\n\r\n\r\nconst { Column, ColumnGroup } = Table;\r\nconst { Search } = CoolInput;\r\n\r\n\r\ninterface Props {\r\n    productRecord?: any;\r\n}\r\n\r\nconst NewBrandDetail = (props: Props) => {\r\n    const [tagDetailState, handleTagDetailFetch] = useHandleFetch({}, 'orderDetail');\r\n    const [tagProductsState, handleTagProductsFetch] = useHandleFetch({}, 'tagProducts');\r\n    const [tagEditVisible, setTagEditVisible] = useState(false);\r\n\r\n\r\n    const params = useParams();\r\n    const history = useHistory();\r\n    const tagId = params['id'];\r\n\r\n    useEffect(() => {\r\n\r\n        const getBrandDetail = async () => {\r\n            await handleTagDetailFetch({\r\n                urlOptions: {\r\n                    placeHolders: {\r\n                        id: tagId\r\n                    }\r\n                }\r\n            })\r\n        };\r\n\r\n        getBrandDetail();\r\n\r\n    }, [tagId]);\r\n\r\n\r\n    console.log('orderDetailState', tagDetailState)\r\n\r\n    useEffect(() => {\r\n        const getTagProducts = async () => {\r\n            await handleTagProductsFetch({\r\n                urlOptions: {\r\n                    placeHolders: {\r\n                        id: tagId\r\n                    }\r\n                }\r\n            })\r\n        };\r\n\r\n        getTagProducts();\r\n\r\n    }, [tagId]);\r\n\r\n\r\n\r\n\r\n    console.log('tagProductsState', tagProductsState);\r\n\r\n    console.log('brandParams', params);\r\n\r\n\r\n    return (\r\n        <div className='brandDetailContainer'>\r\n            <div className='brandDetailContainer__heading'>\r\n                <h3>\r\n                    Order Detail\r\n                </h3>\r\n\r\n                {tagDetailState.done && tagDetailState.data && (Object.keys(tagDetailState.data).length > 0) && (\r\n                    <>\r\n                        <OrderEdit\r\n                            tagEditVisible={tagEditVisible}\r\n                            setTagEditVisible={setTagEditVisible}\r\n                            customer={tagDetailState.data}\r\n                        />\r\n                        <Button\r\n                            onClick={() => setTagEditVisible(true)}\r\n                            type='link'\r\n                            icon={<EditOutlined />}\r\n                        >\r\n                            Edit\r\n                      </Button>\r\n                    </>\r\n                )}\r\n            </div>\r\n            <Skeleton\r\n                paragraph={{ rows: 2 }}\r\n                loading={tagDetailState.isLoading}>\r\n                {tagDetailState.done && tagDetailState.data && !(Object.keys(tagDetailState.data).length > 0) && (\r\n                    <Empty description='No Order found' image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n                )}\r\n\r\n                {tagDetailState.done && tagDetailState.data && (Object.keys(tagDetailState.data).length > 0) && (\r\n                    <div className='brandDetailContainer__header'>\r\n\r\n                        <div className='brandDetailContainer__header-info'>\r\n                            <h2>\r\n                                {tagDetailState.data['name']}\r\n                            </h2>\r\n                            <h3>\r\n                                {tagDetailState.data['description']}\r\n                            </h3>\r\n                            {tagDetailState.data['url'] && (\r\n                                <h3>\r\n                                    URL:\r\n                                    <span>\r\n                                        {tagDetailState.data['url']}\r\n                                    </span>\r\n\r\n                                </h3>\r\n                            )}\r\n                        </div>\r\n                    </div>\r\n                )}\r\n\r\n            </Skeleton>\r\n\r\n            <div className='brandDetailContainer__heading'>\r\n                <h3>\r\n                    Products\r\n                </h3>\r\n            </div>\r\n            <div className='brandDetailContainer__body'>\r\n                {tagProductsState.isLoading && <DataTableSkeleton />}\r\n                {tagProductsState.done && !(tagProductsState.data.length > 0) && (\r\n                    <div style={{\r\n                        marginTop: '100px'\r\n                    }}>\r\n                        <Empty description='No Products exists for this order' image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n                    </div>\r\n                )}\r\n\r\n                {tagProductsState.done && tagProductsState.data && tagProductsState.data.length > 0 && (\r\n                    <>\r\n                        <Table\r\n                            style={{\r\n                                paddingTop: '10px',\r\n                                borderRadius: '5px !important',\r\n                                overflow: 'hidden',\r\n                                boxShadow: '0 0.125rem 0.625rem rgba(227, 231, 250, 0.3), 0 0.0625rem 0.125rem rgba(206, 220, 233, 0.4)'\r\n                            }}\r\n                            // expandable={{\r\n                            //     expandedRowRender: record => <p style={{ margin: 0 }}>{record.name}</p>,\r\n                            //     rowExpandable: record => record.name !== 'Not Expandable',\r\n                            //   }}\r\n                            // bordered={true}\r\n                            size='small'\r\n                            // pagination={false}\r\n                            dataSource={tagProductsState.data}\r\n                            tableLayout={'auto'}\r\n                            onHeaderRow={column => {\r\n                                return {\r\n                                    style: {\r\n                                        color: 'red !important'\r\n                                    }\r\n\r\n                                };\r\n                            }}\r\n                        >\r\n                            <Column\r\n                                title=\"\"\r\n                                dataIndex=\"cover\"\r\n                                key=\"id\"\r\n                                width={'80px'}\r\n\r\n                                className='classnameofthecolumn'\r\n\r\n                                render={(cover, record: any) => (\r\n                                    <>\r\n                                        <img\r\n                                            onClick={() => {\r\n                                                history.push(`/admin/product/${record.id}`)\r\n                                            }}\r\n                                            src={cover} alt='cover img' style={{\r\n                                                height: '40px',\r\n                                                width: '40px',\r\n                                                objectFit: \"contain\",\r\n                                                borderRadius: '3px',\r\n                                                cursor: 'pointer'\r\n                                            }} />\r\n\r\n\r\n\r\n\r\n                                    </>\r\n                                )}\r\n                            />\r\n\r\n                            <Column\r\n                                title=\"Name\"\r\n                                dataIndex=\"name\"\r\n                                key=\"id\"\r\n                                className='classnameofthecolumn'\r\n                                render={(text, record: any) => (\r\n                                    <>\r\n                                        <h4\r\n                                            onClick={() => {\r\n                                                history.push(`/admin/product/${record.id}`)\r\n                                            }}\r\n                                            style={{\r\n                                                fontWeight: 400,\r\n                                                color: '#555',\r\n                                                cursor: 'pointer'\r\n\r\n                                            }}>\r\n                                            {text}\r\n                                        </h4>\r\n\r\n\r\n                                    </>\r\n                                )}\r\n\r\n                            />\r\n\r\n                            <Column\r\n                                title=\"Offer Price\"\r\n                                dataIndex=\"offerPrice\"\r\n                                key=\"id\"\r\n                                className='classnameofthecolumn'\r\n\r\n                            />\r\n\r\n\r\n                            <Column\r\n                                title=\"Price\"\r\n                                dataIndex=\"price\"\r\n                                key=\"id\"\r\n                                className='classnameofthecolumn'\r\n\r\n                            />\r\n\r\n                        </Table>\r\n                    </>\r\n                )}\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NewBrandDetail\r\n","import React, { useState, useEffect } from 'react';\r\nimport { AutoComplete, Tooltip } from 'antd';\r\n\r\nimport InputSmall from '../../components/Field/InputSmall';\r\nimport MediaLibrary from '../../components/MediaLibrary';\r\n\r\nimport { useFetch } from \"../../hooks\";\r\nimport {\r\n    DeleteOutlined,\r\n    FileAddOutlined,\r\n    FileImageFilled,\r\n    PlusOutlined,\r\n    CheckCircleOutlined,\r\n    CloseOutlined,\r\n    CheckOutlined,\r\n    InfoCircleOutlined\r\n} from '@ant-design/icons';\r\n\r\n\r\n\r\nconst Complete = ({ setItemsList, itemsList, componentItem }) => {\r\n\r\n\r\n    const [localComponentItem, setlocalComponentItem] = useState({\r\n        title: componentItem.title,\r\n        target: componentItem.target,\r\n        text: componentItem.text,\r\n        image: componentItem.image,\r\n    })\r\n\r\n    const [myImages, setmyImages] = useState([]);\r\n    const [visibleMedia, setvisibleMedia] = useState(false);\r\n\r\n    const handleComponentItemsChange = (e) => {\r\n        const name = e.target.name;\r\n        const value = e.target.value;\r\n\r\n        setlocalComponentItem({\r\n            ...localComponentItem,\r\n            [name]: value\r\n        });\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (myImages.length > 0) {\r\n            const newImages = myImages.map(item => item.id);\r\n            setlocalComponentItem({\r\n                ...localComponentItem,\r\n                image: [...newImages]\r\n            })\r\n        }\r\n        else {\r\n            setlocalComponentItem({\r\n                ...localComponentItem,\r\n                image: []\r\n            })\r\n        }\r\n\r\n    }, [myImages])\r\n\r\n    useEffect(() => {\r\n        const positionInAttribute = () => {\r\n            return itemsList.map(item => item.id).indexOf(componentItem.id);\r\n        }\r\n\r\n        const index = positionInAttribute();\r\n\r\n        const updatedItem = Object.assign({}, itemsList[index], { ...localComponentItem });\r\n        const updateComponentList = [...itemsList.slice(0, index), updatedItem, ...itemsList.slice(index + 1)];\r\n        setItemsList(updateComponentList);\r\n\r\n    }, [localComponentItem])\r\n\r\n\r\n    const handleAttributeDelete = () => {\r\n\r\n        const updateComponentList = itemsList.filter(item => item.id !== componentItem.id);\r\n        setItemsList(updateComponentList);\r\n    }\r\n\r\n\r\n    const handleImagesDelete = (id) => {\r\n        // @ts-ignore\r\n        const newImages = myImages && myImages.filter(image => {\r\n            return image.id !== id;\r\n        })\r\n\r\n        setmyImages(newImages);\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n\r\n\r\n            <div className='componentItemsContainer__item'>\r\n                <InputSmall\r\n                    label='Title'\r\n                    value={localComponentItem.title}\r\n                    name='title'\r\n                    onChange={handleComponentItemsChange}\r\n                />\r\n                <InputSmall\r\n                    label='Text'\r\n                    value={localComponentItem.text}\r\n                    name='text'\r\n                    onChange={handleComponentItemsChange}\r\n                />\r\n\r\n                <InputSmall\r\n                    label='Target'\r\n                    value={localComponentItem.target}\r\n                    name='target'\r\n                    onChange={handleComponentItemsChange}\r\n                />\r\n\r\n\r\n                <h3 className='inputFieldLabel-small'>Images</h3>\r\n                <div style={{\r\n                    marginBottom: \"-1px\"\r\n                }}></div>\r\n\r\n                <div className='aboutToUploadImagesContainer'>\r\n                    {myImages &&\r\n                        // @ts-ignore\r\n                        myImages.length > 0 && myImages.map((image, index) => {\r\n                            return (\r\n                                <div className='aboutToUploadImagesContainer__item aboutToUploadImagesContainer__item-small'>\r\n                                    <div\r\n                                        className='aboutToUploadImagesContainer__item-imgContainer'\r\n                                    >\r\n                                        <img src={image.cover} alt={image.alt} />\r\n                                    </div>\r\n\r\n                                    <span\r\n                                        onClick={() => handleImagesDelete(image.id)}\r\n                                        className='aboutToUploadImagesContainer__item-remove'>\r\n                                        <CloseOutlined />\r\n                                    </span>\r\n                                </div>\r\n                            )\r\n                        })}\r\n\r\n\r\n                    <Tooltip\r\n                        title={'Attach images'}>\r\n\r\n                        <div\r\n                            onClick={() => {\r\n                                setvisibleMedia(true);\r\n                            }}\r\n                            className='aboutToUploadImagesContainer__uploadItem aboutToUploadImagesContainer__uploadItem-small'>\r\n                            {/* <FileAddOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FileImageTwoTone />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FileImageOutlined /> */}\r\n                            <FileImageFilled />\r\n                            {/* <h5>\r\n\t\t\t\t\t\t\t\t\t\t\t\t     Select From Library\r\n\t\t\t\t\t\t\t\t\t\t\t<     /h5> */}\r\n                            <span className='aboutToUploadImagesContainer__uploadItem-plus'>\r\n                                <PlusOutlined />\r\n                            </span>\r\n                        </div>\r\n                    </Tooltip>\r\n\r\n                </div>\r\n\r\n\r\n\r\n            </div>\r\n            <MediaLibrary\r\n                setvisible={setvisibleMedia}\r\n                visible={visibleMedia}\r\n                myImages={myImages}\r\n                setmyImages={setmyImages}\r\n                isModalOpenForImages={true}\r\n\r\n            />\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Complete;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n\r\nimport { useHandleFetch } from '../../hooks';\r\n// import third party ui lib\r\nimport { Upload, message, Switch, Select, Button, notification, Modal } from 'antd';\r\n\r\nimport {\r\n    FileOutlined,\r\n    InboxOutlined,\r\n    FileAddOutlined,\r\n    DeleteOutlined,\r\n    CheckCircleOutlined,\r\n    PlusOutlined\r\n} from '@ant-design/icons';\r\n\r\n\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport MediaLibrary from \"../../components/MediaLibrary\";\r\nimport ComponentItem from \"./ComponentItem\";\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    groupName: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Component Created',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Something Went Wrong',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst initialValues = {\r\n    groupName: '',\r\n    items: [],\r\n}\r\n\r\n\r\n\r\ninterface Props {\r\n    addNewCategoryVisible?: any;\r\n    setAddNewCategoryVisible?: any;\r\n    componentList?: any;\r\n    setComponentList?: any;\r\n\r\n}\r\n\r\nconst AddNewBrand = ({ addNewCategoryVisible, setAddNewCategoryVisible, componentList, setComponentList }: Props) => {\r\n\r\n    const [addComponentState, handleAddComponentFetch] = useHandleFetch({}, 'addComponent');\r\n    const [myImages, setmyImages] = useState(false);\r\n    const [itemsList, setItemsList] = useState([])\r\n\r\n\r\n    const handleSubmit = async (values: any, actions: any) => {\r\n\r\n\r\n        const addComponentRes = await handleAddComponentFetch({\r\n            body: {\r\n                groupName: values.groupName,\r\n                items: itemsList\r\n            },\r\n        });\r\n\r\n        // @ts-ignore\r\n        if (addComponentRes && addComponentRes.status === 'ok') {\r\n            openSuccessNotification();\r\n            setComponentList([...componentList, {\r\n                id: addComponentRes['id'] || '',\r\n                key: addComponentRes['id'] || '',\r\n                groupName: addComponentRes['groupName'] || '',\r\n                // @ts-ignore\r\n                ...addComponentRes\r\n            }])\r\n            actions.resetForm();\r\n            setItemsList([])\r\n            setAddNewCategoryVisible(false);\r\n        }\r\n\r\n        else {\r\n            openErrorNotification();\r\n        }\r\n\r\n\r\n\r\n\r\n        actions.setSubmitting(false);\r\n\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (!addComponentState['isLoading']) {\r\n            const error = addComponentState['error'];\r\n            if (error['isError'] && Object.keys(error['error']).length > 0) {\r\n\r\n\r\n                const errors =\r\n                    Object.values(error['error']).length > 0\r\n                        ? Object.values(error['error'])\r\n                        : [];\r\n                errors.forEach((err, i) => {\r\n                    if (typeof err === 'string') {\r\n                        openErrorNotification(err)\r\n                    }\r\n                    else if (typeof err === 'object') {\r\n                        if (err && Object.keys(err).length > 0) {\r\n                            const errs = Object.values(err);\r\n                            errs.forEach(err => {\r\n                                openErrorNotification(err)\r\n                            })\r\n\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n        }\r\n    }, [addComponentState])\r\n\r\n\r\n\r\n\r\n\r\n\r\n    const handleCancel = (e: any) => {\r\n        setAddNewCategoryVisible(false);\r\n    };\r\n\r\n\r\n    const getisSubmitButtonDisabled = (values, isValid) => {\r\n        if (!values.groupName) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n    const handleAddComponentItem = () => {\r\n        setItemsList([...itemsList, {\r\n            title: '',\r\n            target: '',\r\n            text: '',\r\n            image: [],\r\n            id: `${itemsList.length}`\r\n        }])\r\n    }\r\n\r\n\r\n\r\n\r\n    return (\r\n        <Formik\r\n            onSubmit={(values, actions) => handleSubmit(values, actions)}\r\n            validationSchema={validationSchema}\r\n            validateOnBlur={false}\r\n            enableReinitialize={true}\r\n            initialValues={\r\n                { ...initialValues }\r\n            }\r\n        >\r\n            {({\r\n                handleChange,\r\n                values,\r\n                handleSubmit,\r\n                errors,\r\n                isValid,\r\n                isSubmitting,\r\n                touched,\r\n                handleBlur,\r\n                setFieldTouched,\r\n                handleReset,\r\n            }) => (\r\n                    <>\r\n                        <Modal\r\n                            style={{\r\n                                top: '40px'\r\n                            }}\r\n                            title=\"Add New Component\"\r\n                            visible={addNewCategoryVisible}\r\n                            onOk={(e: any) => handleSubmit(e)}\r\n                            onCancel={handleCancel}\r\n                            okText='Create'\r\n                            okButtonProps={{\r\n                                loading: isSubmitting,\r\n                                htmlType: \"submit\",\r\n                                disabled: getisSubmitButtonDisabled(values, isValid)\r\n                            }}\r\n                            width={'50vw'}\r\n                            bodyStyle={{\r\n                                margin: '0',\r\n                                padding: '10px'\r\n                            }}\r\n                        >\r\n                            <Input\r\n                                label='Group Component Name'\r\n                                value={values.groupName}\r\n                                name='groupName'\r\n                                isError={(touched.groupName && errors.groupName) ||\r\n                                    (!isSubmitting && addComponentState.error['error']['name'])}\r\n\r\n                                errorString={(touched.groupName && errors.groupName) ||\r\n                                    (!isSubmitting && addComponentState.error['error']['name'])}\r\n                                onChange={(e: any) => {\r\n                                    handleChange(e);\r\n                                    setFieldTouched('groupName');\r\n                                }}\r\n                            />\r\n                            <div style={{\r\n                                marginTop: '15px',\r\n                            }}></div>\r\n                            <h3 className='inputFieldLabel'>Children</h3>\r\n\r\n                            <div className='componentItemsContainer'>\r\n                                {itemsList.map(itemComponent => {\r\n                                    return <ComponentItem\r\n                                        componentItem={itemComponent}\r\n                                        itemsList={itemsList} setItemsList={setItemsList} />\r\n                                })}\r\n\r\n                                <Button size='small'\r\n                                    onClick={handleAddComponentItem}\r\n                                    style={{\r\n                                        width: '290px',\r\n                                        minHeight: '145px',\r\n                                        marginTop: '0px',\r\n                                        borderRadius: '8px'\r\n                                    }} type=\"dashed\" icon={<PlusOutlined />}>Add Childrens</Button>\r\n                            </div>\r\n\r\n                            <div\r\n                                style={{\r\n                                    marginTop: '20px'\r\n                                }}\r\n                            />\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n                        </Modal>\r\n\r\n\r\n                    </>\r\n                )}\r\n        </Formik>\r\n\r\n\r\n\r\n\r\n    );\r\n};\r\n\r\nexport default AddNewBrand;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { AutoComplete, Button, Tooltip } from 'antd';\r\n\r\n// import configs\r\nimport config from \"../../config.json\";\r\n\r\nimport InputSmall from '../../components/Field/InputSmall';\r\nimport MediaLibrary from '../../components/MediaLibrary';\r\n\r\nimport { useFetch } from \"../../hooks\";\r\nimport {\r\n    DeleteOutlined,\r\n    FileAddOutlined, \r\n    SaveOutlined,\r\n    FileImageFilled,\r\n    PlusOutlined,\r\n    CheckCircleOutlined,\r\n    CloseOutlined,\r\n    CheckOutlined,\r\n    InfoCircleOutlined\r\n} from '@ant-design/icons';\r\n\r\n\r\n\r\nconst Complete = ({ setComponentList, componentList, item, component,componentUpdate }) => {\r\n\r\n    const [localComponentItem, setlocalComponentItem] = useState({\r\n        title: item.title,\r\n        target: item.target,\r\n        text: item.text,\r\n        image: item.image,\r\n    })\r\n\r\n    const [myImages, setmyImages] = useState([]);\r\n    const [visibleMedia, setvisibleMedia] = useState(false);\r\n\r\n    const handleComponentItemsChange = (e) => {\r\n        const name = e.target.name;\r\n        const value = e.target.value;\r\n\r\n        setlocalComponentItem({\r\n            ...localComponentItem,\r\n            [name]: value\r\n        });\r\n    };\r\n\r\n\r\n\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        if (myImages.length > 0) {\r\n            setlocalComponentItem({\r\n                ...localComponentItem,\r\n                // @ts-ignore\r\n                image: [...new Set([...localComponentItem.image, ...myImages])]\r\n            })\r\n        }\r\n        else {\r\n            setlocalComponentItem({\r\n                ...localComponentItem,\r\n                image: []\r\n            })\r\n        }\r\n\r\n    }, [myImages])\r\n\r\n\r\n\r\n\r\n\r\n    const handleImagesDelete = (id) => {\r\n        // @ts-ignore\r\n        const newImages = localComponentItem.image && localComponentItem.image.length > 0 && localComponentItem.image.filter(image => {\r\n            return image.id !== id;\r\n        })\r\n\r\n        setlocalComponentItem({\r\n            ...localComponentItem,\r\n            image: [...newImages]\r\n        })\r\n\r\n        setmyImages(newImages);\r\n    }\r\n\r\n\r\n    const handleComponentItemUpdate = () => {\r\n        componentUpdate(item,component,localComponentItem); \r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <div\r\n                style={{\r\n                    width: '100%',\r\n                    boxShadow: \"none\"\r\n                }}\r\n                className='componentItemsContainer__item'>\r\n                <InputSmall\r\n                    label='Title'\r\n                    value={localComponentItem.title}\r\n                    name='title'\r\n                    onChange={handleComponentItemsChange}\r\n                />\r\n                <InputSmall\r\n                    label='Text'\r\n                    value={localComponentItem.text}\r\n                    name='text'\r\n                    onChange={handleComponentItemsChange}\r\n                />\r\n\r\n                <InputSmall\r\n                    label='Target'\r\n                    value={localComponentItem.target}\r\n                    name='target'\r\n                    onChange={handleComponentItemsChange}\r\n                />\r\n\r\n\r\n                <h3 className='inputFieldLabel-small'>Images</h3>\r\n                <div style={{\r\n                    marginBottom: \"-1px\"\r\n                }}></div>\r\n\r\n\r\n                <div className='aboutToUploadImagesContainer'>\r\n                    {localComponentItem.image &&\r\n                        // @ts-ignore\r\n                        localComponentItem.image.length > 0 && localComponentItem.image.map((image, index) => {\r\n                            return (\r\n                                <div className='aboutToUploadImagesContainer__item aboutToUploadImagesContainer__item-small'>\r\n                                    <div\r\n                                        className='aboutToUploadImagesContainer__item-imgContainer'\r\n                                    >\r\n                                        <img src={image.cover} alt={image.alt} />\r\n                                    </div>\r\n\r\n                                    <span\r\n                                        onClick={() => handleImagesDelete(image.id)}\r\n                                        className='aboutToUploadImagesContainer__item-remove'>\r\n                                        <CloseOutlined />\r\n                                    </span>\r\n                                </div>\r\n                            )\r\n                        })}\r\n\r\n\r\n                    <Tooltip\r\n                        title={'Attach images'}>\r\n\r\n                        <div\r\n                            onClick={() => {\r\n                                setvisibleMedia(true);\r\n                            }}\r\n                            className='aboutToUploadImagesContainer__uploadItem aboutToUploadImagesContainer__uploadItem-small'>\r\n                            {/* <FileAddOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FileImageTwoTone />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FileImageOutlined /> */}\r\n                            <FileImageFilled />\r\n                            {/* <h5>\r\n\t\t\t\t\t\t\t\t\t\t\t\t     Select From Library\r\n\t\t\t\t\t\t\t\t\t\t\t<     /h5> */}\r\n                            <span className='aboutToUploadImagesContainer__uploadItem-plus'>\r\n                                <PlusOutlined />\r\n                            </span>\r\n                        </div>\r\n                    </Tooltip>\r\n\r\n                </div>\r\n                <Button\r\n                style={{\r\n                    marginTop: '15px'\r\n                }}\r\n                    icon={<SaveOutlined />}\r\n          className='btnPrimaryClassNameoutline'\r\n          onClick={() => handleComponentItemUpdate()}\r\n        >\r\n        Save\r\n            \r\n            </Button>\r\n            </div>\r\n            <MediaLibrary\r\n                setvisible={setvisibleMedia}\r\n                visible={visibleMedia}\r\n                myImages={myImages}\r\n                setmyImages={setmyImages}\r\n                isModalOpenForImages={true}\r\n\r\n            />\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Complete;\r\n","import React, { useState, useEffect } from 'react';\r\nimport * as Yup from 'yup';\r\n\r\n\r\nimport { useHandleFetch } from '../../hooks';\r\n// import third party ui lib\r\nimport { Upload, message, Switch, Select, Button, notification, Modal } from 'antd';\r\n\r\nimport {\r\n    FileOutlined,\r\n    InboxOutlined,\r\n    FileAddOutlined,\r\n    DeleteOutlined,\r\n    CheckCircleOutlined,\r\n    PlusOutlined\r\n} from '@ant-design/icons';\r\n\r\n\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport MediaLibrary from \"../../components/MediaLibrary\";\r\nimport ComponentItem from \"./ComponentItem\";\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    groupName: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Component Created',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Something Went Wrong',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst initialValues = {\r\n    groupName: '',\r\n    items: [],\r\n}\r\n\r\n\r\n\r\ninterface Props {\r\n    addNewCategoryVisible?: any;\r\n    setAddNewCategoryVisible?: any;\r\n    componentList?: any;\r\n    setComponentList?: any;\r\n    updateComponentByAddingItem?: any;\r\n    componentId?: any\r\n\r\n}\r\n\r\nconst AddNewBrand = ({ addNewCategoryVisible,\r\n    setAddNewCategoryVisible, componentList,\r\n    setComponentList,\r\n    updateComponentByAddingItem, componentId }: Props) => {\r\n\r\n\r\n    const [localComponentItem, setlocalComponentItem] = useState({\r\n        title: '',\r\n        target: '',\r\n        text: '',\r\n        image: [],\r\n    })\r\n\r\n    const [myImages, setmyImages] = useState([]);\r\n    const [visibleMedia, setvisibleMedia] = useState(false);\r\n\r\n    const handleComponentItemsChange = (e) => {\r\n        const name = e.target.name;\r\n        const value = e.target.value;\r\n\r\n        setlocalComponentItem({\r\n            ...localComponentItem,\r\n            [name]: value\r\n        });\r\n    };\r\n\r\n\r\n    const handleCancel = (e: any) => {\r\n        setAddNewCategoryVisible(false);\r\n    };\r\n\r\n\r\n    const getisSubmitButtonDisabled = (values, isValid) => {\r\n        if (!values.groupName) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        if (myImages.length > 0) {\r\n            const newImages = myImages.map(item => item.id);\r\n            setlocalComponentItem({\r\n                ...localComponentItem,\r\n                image: [...newImages]\r\n            })\r\n        }\r\n        else {\r\n            setlocalComponentItem({\r\n                ...localComponentItem,\r\n                image: []\r\n            })\r\n        }\r\n\r\n    }, [myImages])\r\n\r\n\r\n\r\n\r\n\r\n\r\n    const handleImagesDelete = (id) => {\r\n        // @ts-ignore\r\n        const newImages = myImages && myImages.filter(image => {\r\n            return image.id !== id;\r\n        })\r\n\r\n        setmyImages(newImages);\r\n    }\r\n\r\n\r\n    const handleAddItem = (e) => {\r\n        updateComponentByAddingItem(localComponentItem, componentId)\r\n    }\r\n\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <Modal\r\n                style={{\r\n                    top: '40px'\r\n                }}\r\n                destroyOnClose={true}\r\n                title=\"Add New Component Item\"\r\n                visible={addNewCategoryVisible}\r\n                onOk={(e: any) => handleAddItem(e)}\r\n                onCancel={handleCancel}\r\n                okText='Add'\r\n                okButtonProps={{\r\n                    htmlType: \"submit\",\r\n                }}\r\n                width={'400px'}\r\n                bodyStyle={{\r\n                    margin: '0',\r\n                    padding: '10px'\r\n                }}\r\n            >\r\n                <Input\r\n                    label='Title'\r\n                    value={localComponentItem.title}\r\n                    name='title'\r\n                    onChange={handleComponentItemsChange}\r\n                />\r\n                <Input\r\n                    label='Text'\r\n                    value={localComponentItem.text}\r\n                    name='text'\r\n                    onChange={handleComponentItemsChange}\r\n                />\r\n\r\n                <Input\r\n                    label='Target'\r\n                    value={localComponentItem.target}\r\n                    name='target'\r\n                    onChange={handleComponentItemsChange}\r\n                />\r\n\r\n\r\n                <h3 className='inputFieldLabel-small'>Images</h3>\r\n                <div className='aboutToUploadImagesContainer'>\r\n                    {myImages &&\r\n                        // @ts-ignore\r\n                        myImages.length > 0 && myImages.map(image => {\r\n                            return (\r\n                                <div className='aboutToUploadImagesContainer__item'>\r\n                                    <div\r\n                                        onClick={() => handleImagesDelete(image.id)}\r\n                                        className='aboutToUploadImagesContainer__item-overlay'>\r\n                                        <DeleteOutlined />\r\n                                    </div>\r\n                                    <img src={image.cover} alt={image.alt} />\r\n                                </div>\r\n                            )\r\n                        })}\r\n\r\n                    <div\r\n                        onClick={() => {\r\n                            setvisibleMedia(true);\r\n                        }}\r\n                        className='aboutToUploadImagesContainer__uploadItem'>\r\n                        <FileAddOutlined />\r\n                    </div>\r\n                </div>\r\n                <MediaLibrary\r\n                    setvisible={setvisibleMedia}\r\n                    visible={visibleMedia}\r\n                    myImages={myImages}\r\n                    setmyImages={setmyImages}\r\n                    isModalOpenForImages={true} />\r\n\r\n            </Modal>\r\n        </>\r\n\r\n\r\n    );\r\n};\r\n\r\nexport default AddNewBrand;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Collapse, Button, Tooltip, Upload, Modal,Input, notification, Popconfirm } from 'antd';\r\nimport { CaretRightOutlined,CheckCircleOutlined,  PlusOutlined, DeleteOutlined, EditOutlined } from '@ant-design/icons';\r\n\r\n// import components\r\nimport InputField from '../../components/Field/Input';\r\nimport Empty from '../../components/Empty';\r\nimport ComponentImageUpload from './ComponentImageUpload';\r\nimport {useHandleFetch} from '../../hooks';\r\nimport { DataTableSkeleton } from \"../../components/Placeholders\";\r\nimport AddNewComponent from \"./AddNewComponent\";\r\nimport ComponentListComponentItem from './ComponentListComponentItem';\r\nimport AddNewComponentItem from './AddNewComponentItem';\r\nimport { category } from '../../state/ducks';\r\n\r\n\r\n\r\n\r\nconst { Panel } = Collapse;\r\nconst { Search } = Input;\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Component Created',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n    notification.error({\r\n        message: message || 'Something Went Wrong',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n    });\r\n};\r\n\r\n\r\n\r\nconst text = `\r\n  A dog is a type of domesticated animal.\r\n  Known for its loyalty and faithfulness,\r\n  it can be found as a welcome guest in many households across the world.\r\n`;\r\n\r\nfunction getBase64(file: any) {\r\n\treturn new Promise((resolve, reject) => {\r\n\t\tconst reader = new FileReader();\r\n\t\treader.readAsDataURL(file);\r\n\t\treader.onload = () => resolve(reader.result);\r\n\t\treader.onerror = (error) => reject(error);\r\n\t});\r\n}\r\n\r\n\r\nconst genExtra = (updateComponentByDeleting,component,id) => (\r\n\t<div\r\n\t\tstyle={{\r\n\t\t\tdisplay: 'flex'\r\n\t\t}}\r\n\t>\r\n\t\t\r\n\t\t<Tooltip placement='top' title='Edit Component'>\r\n\t\t<a href='##'>\r\n\t<EditOutlined\r\n\t\t\t\tonClick={(event) => {\r\n\t\t\t\t\t// If you don't want click extra trigger collapse, you can prevent this:\r\n\t\t\t\t\t// event.stopPropagation();\r\n\t\t\t\t}}\r\n\t\t\t/>\r\n\t\t</a>\r\n\t\t\r\n\t\t\t\r\n\t\t</Tooltip>\r\n\t\t\r\n\r\n\t\t<div\r\n\t\t\tstyle={{\r\n\t\t\t\tmarginLeft: '15px'\r\n\t\t\t}}\r\n\t\t/>\r\n\t\t   <a href='##' style={{\r\n\t\t\t\t   color:'rgb(241, 67, 67)'\r\n\t\t\t   }}>\r\n\t\t \r\n\t\t\t<Popconfirm \r\n               \r\n               onConfirm={() => updateComponentByDeleting(id,component)}\r\n               title=\"Are you sure？\" okText=\"Yes\" cancelText=\"No\">\r\n       \r\n\t\t   <DeleteOutlined\r\n\t\t\t\tonClick={(event) => {\r\n\t\t\t\t\t// If you don't want click extra trigger collapse, you can prevent this:\r\n\t\t\t\t\tevent.stopPropagation();\r\n\t\t\t\t}}\r\n\t\t\t/>\r\n\t\t\t\r\n           </Popconfirm>\r\n\t\t   </a>\r\n\t</div>\r\n);\r\n\r\nconst genExtraForGroup = (setitemVisible: any, handleDeleteComponent:any, id: any,setComponentId:any) => (\r\n\t<div\r\n\t\tstyle={{\r\n\t\t\tdisplay: 'flex'\r\n\t\t}}\r\n\t>\r\n\t\t<Tooltip placement='top' title='Add new item Component'>\r\n\t\t<a href='##'>\r\n\t\t\t<PlusOutlined\r\n\t\t\t\tonClick={(event) => {\r\n\t\t\t\t\t// If you don't want click extra trigger collapse, you can prevent this:\r\n\t\t\t\t\t// event.stopPropagation();\r\n\t\t\t\t\tsetitemVisible(true);\r\n\t\t\t\t\tsetComponentId(id)\r\n\t\t\t\t}}\r\n\t\t\t/>\r\n\t\t\t</a>\r\n\t\t</Tooltip>\r\n\r\n\t\t<div\r\n\t\t\tstyle={{\r\n\t\t\t\tmarginLeft: '15px'\r\n\t\t\t}}\r\n\t\t/>\r\n\t\t<Tooltip placement='top' title='Edit Component'>\r\n\t\t<a href='##'>\r\n\t\t\t<EditOutlined\r\n\t\t\t\tonClick={(event) => {\r\n\t\t\t\t\t// If you don't want click extra trigger collapse, you can prevent this:\r\n\t\t\t\t\t// event.stopPropagation();\r\n\t\t\t\t}}\r\n\t\t\t/>\r\n\t\t\t</a>\r\n\t\t</Tooltip>\r\n\r\n\t\t<div\r\n\t\t\tstyle={{\r\n\t\t\t\tmarginLeft: '15px'\r\n\t\t\t}}\r\n\t\t/>\r\n\t\t   <a href='##' style={{\r\n\t\t\t\t   color:'rgb(241, 67, 67)'\r\n\t\t\t   }}>\r\n\t\t \r\n\t\t<Popconfirm \r\n               \r\n               onConfirm={() => handleDeleteComponent(id)}\r\n               title=\"Are you sure？\" okText=\"Yes\" cancelText=\"No\">\r\n           \r\n\t\t   <DeleteOutlined\r\n\t\t\t\tonClick={(event) => {\r\n\t\t\t\t\t// If you don't want click extra trigger collapse, you can prevent this:\r\n\t\t\t\t\tevent.stopPropagation();\r\n\t\t\t\t}}\r\n\t\t\t/>\r\n\t\t\t\r\n\t\t\r\n\t\t\r\n           </Popconfirm>\r\n\t\t   </a>\r\n\r\n\t\t\t\r\n\t</div>\r\n);\r\n\r\nconst Component = (props) => {\r\n\r\n\r\n\tconst [visible, setvisible] = useState(false);\r\n\tconst [groupVisible, setgroupVisible] = useState(false);\r\n\tconst [itemVisible, setitemVisible] = useState(false);\r\n\tconst [componentId,setComponentId] = useState(''); \r\n\r\n\r\n\t\r\n\tconst [componentState, handleComponentListFetch] = useHandleFetch({}, 'componentList');\r\n\tconst [deleteComponentState, handleDeleteComponentFetch] = useHandleFetch({}, 'deleteComponent');\r\n\tconst [updateComponentState, handleUpdateComponentFetch] = useHandleFetch({}, 'updateComponent');\r\n\t\r\n\tconst [componentList,setComponentList] = useState([]); \r\n  \r\n\tuseEffect(()=>{\r\n\t const setComponents = async () => {\r\n\t   const components = await handleComponentListFetch({}); \r\n\t   // @ts-ignore\r\n\t   setComponentList(components); \r\n\t }\r\n\t setComponents(); \r\n\t},[])\r\n\r\n\t\r\n\r\n\tconst handleSearch = (value) => {\r\n\t\tif(componentState.data.length > 0 ){\r\n\t\t  const newComponentList = componentState.data.filter(item => item.name.toLowerCase().includes(value.toLowerCase())); \r\n\t\t  setComponentList(newComponentList); \r\n\t\t}\r\n\t\t \r\n\t  }\r\n\t\r\n\r\n\r\n\r\n\t  \r\n      const handleDeleteComponent = async (id) => {\r\n        const deleteComponentRes = await handleDeleteComponentFetch({\r\n          urlOptions: {\r\n            placeHolders: {\r\n              id,\r\n            }\r\n            }\r\n          });\r\n\r\n            // @ts-ignore\r\n\t\t  if(deleteComponentRes && deleteComponentRes.status === 'ok'){\r\n\t\t\t  openSuccessNotification('Component Deleted'); \r\n\t\t\t  const newComponentList =  componentList.filter(item => item.id !== id);\r\n\t\t\t  setComponentList(newComponentList); \r\n\t\t  }\r\n\t\t  else {\r\n\t\t\topenErrorNotification(\"Couldn't delete, Something went wrong\")\r\n\t\t  }\r\n\t  }\r\n\t  \r\n\r\n\r\n\r\n\tconst handleOk = (e: any) => {\r\n\t\tsetvisible(false);\r\n\r\n\t};\r\n\r\n\tconst handleCancel = (e: any) => {\r\n\t\tsetvisible(false);\r\n\t};\r\n\tconst handleOkGroup = (e: any) => {\r\n\t\tsetgroupVisible(false);\r\n\r\n\t};\r\n\r\n\tconst handleCancelGroup = (e: any) => {\r\n\t\tsetgroupVisible(false);\r\n\t};\r\n\r\n\r\n\tconst componentUpdate = async (item,component,localComponentItem) => {\r\n\t\tconst positionInComponents = () => {\r\n            return componentList.map(item => item.id).indexOf(component.id);\r\n          };\r\n      \r\n          const positionInItemsOfComponent = () => {\r\n            return component.items.map(item => item.id).indexOf(item.id);\r\n          };\r\n      \r\n          const componentIndex = positionInComponents();\r\n      \r\n\t\t  const itemIndex = positionInItemsOfComponent();\r\n\t\t  \r\n\r\n\t\t  const manupulatedLocalComponentForTheReq = localComponentItem.image.length > 0 ? \r\n\t\t  {\r\n\t\t\t...localComponentItem,\r\n\t\t\timage: localComponentItem.image.length > 0 ? localComponentItem.image.map(img => img.id) : []\r\n\t\t}\r\n\t\t  : localComponentItem;\r\n      \r\n          const updatedItems = [\r\n            ...component.items.slice(0, itemIndex),\r\n            localComponentItem,\r\n            ...component.items.slice(itemIndex + 1)\r\n\t\t  ];\r\n\t\t  \r\n\t\t  const manupulatedUpdatedItems = [\r\n            ...component.items.slice(0, itemIndex),\r\n            manupulatedLocalComponentForTheReq,\r\n            ...component.items.slice(itemIndex + 1)\r\n\t\t  ];\r\n\t\t  \r\n\t\t\r\n\t\t  const manupulatedUpdatedItem = Object.assign({}, componentList[componentIndex], {\r\n            ...component,\r\n            items: manupulatedUpdatedItems\r\n          });\r\n      \r\n          const updatedItem = Object.assign({}, componentList[componentIndex], {\r\n            ...component,\r\n            items: updatedItems\r\n          });\r\n      \r\n          const updateComponentList = [\r\n            ...componentList.slice(0, componentIndex),\r\n            updatedItem,\r\n            ...componentList.slice(componentIndex + 1)\r\n          ];\r\n\t\t\r\n\t\t  \r\n\r\n\r\n\t\tconst updateComponentRes = await handleUpdateComponentFetch({\r\n\t\t\turlOptions: {\r\n\t\t\t\tplaceHolders: {\r\n\t\t\t\t  id: component.id,\r\n\t\t\t\t}\r\n\t\t\t  },\r\n\t\t\tbody: {\r\n\t\t\t\t...manupulatedUpdatedItem,\r\n\t\t\t\tgroupName: updatedItem.name\r\n\t\t\t},\r\n\t\t  });\r\n\t\t\r\n\t\t\t   // @ts-ignore\r\n\t\t\t   if(updateComponentRes && updateComponentRes.status === 'ok'){\r\n\t\t\t\topenSuccessNotification(\"Component Updated\"); \r\n\t\t\t\tsetComponentList(updateComponentList);\r\n\t\t\t\t\r\n\t\t\t  }\r\n\t\t\t  else {\r\n\t\t\t\topenErrorNotification();\r\n\t\t\t  }\r\n\t}\r\n\r\n\r\n\tconst updateComponentByDeleting = async (id,component) => {\r\n\r\n\t\tconst positionInComponents = () => {\r\n            return componentList.map(item => item.id).indexOf(component.id);\r\n          };\r\n      \r\n          const positionInItemsOfComponent = () => {\r\n            return component.items.map(item => item.id).indexOf(id);\r\n          };\r\n      \r\n          const componentIndex = positionInComponents();\r\n      \r\n          const itemIndex = positionInItemsOfComponent();\r\n      \r\n          const updatedItems = [\r\n            ...component.items.slice(0, itemIndex),\r\n            ...component.items.slice(itemIndex + 1)\r\n          ];\r\n      \r\n          const updatedItem = Object.assign({}, componentList[componentIndex], {\r\n            ...component,\r\n            items: updatedItems\r\n          });\r\n      \r\n          const updateComponentList = [\r\n            ...componentList.slice(0, componentIndex),\r\n            updatedItem,\r\n            ...componentList.slice(componentIndex + 1)\r\n          ];\r\n\t\t\r\n\t\t  \r\n\r\n\r\n\t\tconst updateComponentRes = await handleUpdateComponentFetch({\r\n\t\t\turlOptions: {\r\n\t\t\t\tplaceHolders: {\r\n\t\t\t\t  id: component.id,\r\n\t\t\t\t}\r\n\t\t\t  },\r\n\t\t\tbody: {\r\n\t\t\t\t...updatedItem,\r\n\t\t\t\tgroupName: updatedItem.name\r\n\t\t\t},\r\n\t\t  });\r\n\t\t\r\n\t\t\t   // @ts-ignore\r\n\t\t\t   if(updateComponentRes && updateComponentRes.status === 'ok'){\r\n\t\t\t\topenSuccessNotification(\"Component Item deleted\"); \r\n\t\t\t\tsetComponentList(updateComponentList);\r\n\t\t\t\t\r\n\t\t\t  }\r\n\t\t\t  else {\r\n\t\t\t\topenErrorNotification();\r\n\t\t\t  }\r\n\t};\r\n\r\n\r\n\tconst updateComponentByAddingItem = async (localComponentItem,id) => {\r\n\t\tconst positionInComponents = () => {\r\n            return componentList.map(item => item.id).indexOf(id);\r\n          };\r\n      \r\n      \r\n          const componentIndex = positionInComponents();\r\n      \r\n    \r\n      \r\n          const updatedItems = [\r\n            ...componentList[componentIndex].items,\r\n            localComponentItem,\r\n          ];\r\n      \r\n          const updatedItem = Object.assign({}, componentList[componentIndex], {\r\n            ...componentList[componentIndex],\r\n            items: updatedItems\r\n          });\r\n      \r\n          const updateComponentList = [\r\n            ...componentList.slice(0, componentIndex),\r\n            updatedItem,\r\n            ...componentList.slice(componentIndex + 1)\r\n          ];\r\n\t\t\r\n\t\t  \r\n\r\n\r\n\t\tconst updateComponentRes = await handleUpdateComponentFetch({\r\n\t\t\turlOptions: {\r\n\t\t\t\tplaceHolders: {\r\n\t\t\t\t  id: id,\r\n\t\t\t\t}\r\n\t\t\t  },\r\n\t\t\tbody: {\r\n\t\t\t\t...updatedItem,\r\n\t\t\t\tgroupName: updatedItem.name\r\n\t\t\t},\r\n\t\t  });\r\n\t\t\r\n\t\t\t   // @ts-ignore\r\n\t\t\t   if(updateComponentRes && updateComponentRes.status === 'ok'){\r\n\t\t\t\topenSuccessNotification(\"Component Item Added\"); \r\n\t\t\t\tsetComponentList(updateComponentList);\r\n\t\t\t\tsetitemVisible(false);\r\n\t\t\t\t\r\n\t\t\t  }\r\n\t\t\t  else {\r\n\t\t\t\topenErrorNotification();\r\n\t\t\t  }\r\n\t};\r\n\r\n\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t    <div className='categoryListContainer'>\r\n            <div className='categoryListContainer__header'>\r\n           \r\n\r\n          <div className='categoryListContainer__header-searchBar'>\r\n          <h2 className='categoryListContainer__header-title'>\r\n            Components\r\n            </h2>\r\n\r\n\r\n          <Search\r\n            enterButton={false}\r\n            className='searchbarClassName'\r\n          placeholder=\"search components..\"\r\n          onSearch={value => handleSearch(value)}\r\n        />\r\n          </div>\r\n            <Button\r\n          // type=\"primary\"\r\n          className='btnPrimaryClassNameoutline'\r\n          icon={<PlusOutlined />}\r\n\t\t  onClick={() => setgroupVisible(true)}\r\n        >\r\n        Add New\r\n            \r\n            </Button>\r\n            </div>\r\n\r\n            <div className='categoryListContainer__afterHeader'>\r\n \r\n            </div>\r\n\r\n     \r\n\t\t\t\r\n\t\t\t<div className='categoryListContainer__categoryList'>\r\n     \r\n        {componentState.isLoading && <DataTableSkeleton />}\r\n\r\n        {componentState.done && !(componentList.length > 0) && (\r\n\t\t\t<div style={{\r\n\t\t\t\tmarginTop: '50px'\r\n\t\t\t}}>\r\n\t\t\t\t<Empty title='No Component found' />\r\n\t\t\t</div>\r\n\t\t)}\r\n\r\n\t\t{componentState.done && componentList.length > 0 && (\r\n\t\t\t\t\t<div className='componentsItemContainer'>\r\n\t\t\t\t\t{componentList.map(component => {\r\n\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t<div className='componentsItemContainer-item'>\r\n\t\t\t\t\t\t\t<Collapse\r\n\t\t\t\t\t\t\t\taccordion={false}\r\n\t\t\t\t\t\t\t\tbordered={false}\r\n\t\t\t\t\t\t\t\texpandIconPosition='left'\r\n\t\t\t\t\t\t\t\texpandIcon={({ isActive }) => <CaretRightOutlined rotate={isActive ? 90 : 0} />}\r\n\t\t\t\t\t\t\t\tclassName='site-collapse-custom-collapse'\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<Panel\r\n\t\t\t\t\t\t\t\t\theader={component.name}\r\n\t\t\t\t\t\t\t\t\tkey='1'\r\n\t\t\t\t\t\t\t\t\tclassName='site-collapse-custom-panel'\r\n\t\t\t\t\t\t\t\t\textra={genExtraForGroup(setitemVisible,handleDeleteComponent, component.id,setComponentId)}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t<div className=' componentsItemContainer-white'>\r\n\t\t\t\t\t\t\t\t\t\t{component.items && component.items.length > 0 && component.items.map(item => {\r\n\t\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div className='componentsItemContainer-item-item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Collapse\r\n\t\t\t\t\t\t\t\t\t\t\t\t\taccordion={false}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tbordered={false}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\texpandIconPosition='left'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\texpandIcon={({ isActive }) => (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<CaretRightOutlined rotate={isActive ? 90 : 0} />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='site-collapse-custom-collapse'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Panel\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\theader={item.title || ''}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tkey='1'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='site-collapse-custom-panel'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\textra={genExtra(updateComponentByDeleting,component,item.id)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<ComponentListComponentItem\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetComponentList={setComponentList}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tcomponentList={componentList}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\titem={item}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tcomponent={component}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tcomponentUpdate={componentUpdate}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Panel>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Collapse>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t\t})}\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t{!(component.items.length > 0 ) && <Empty title='No item Found'/>}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</Panel>\r\n\t\t\t\t\t\t\t</Collapse>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t})}\r\n\t\t\t\t</div>\r\n\t\t)}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\r\n\r\n\t\t<AddNewComponent \r\n          addNewCategoryVisible={groupVisible} \r\n          setAddNewCategoryVisible={setgroupVisible} \r\n          setComponentList={setComponentList}\r\n          componentList={componentList}\r\n          />\r\n\t\t  <AddNewComponentItem \r\n          addNewCategoryVisible={itemVisible} \r\n          setAddNewCategoryVisible={setitemVisible} \r\n          setComponentList={setComponentList}\r\n\t\t  componentList={componentList}\r\n\t\t  updateComponentByAddingItem={updateComponentByAddingItem}\r\n\t\t  componentId={componentId}\r\n          />\r\n\r\n\r\n\t\t  \r\n\r\n\t\t\t<Modal\r\n\t\t\t\ttitle=\"Add New Group Component\"\r\n\t\t\t\tvisible={false}\r\n\t\t\t\tonOk={handleOkGroup}\r\n\t\t\t\tonCancel={handleCancelGroup}\r\n\t\t\t\tfooter={null}\r\n\t\t\t\tokText='Done'\r\n\t\t\t>\r\n\t\t\t\t<InputField label='Group Component Name' />\r\n\t\t\r\n\t\t\t</Modal>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default Component;\r\n","import React, { useState } from 'react';\r\n\r\n// import third libraries\r\nimport { Upload, message, notification, Modal } from 'antd';\r\n// import { Formik } from 'formik';\r\n// import * as Yup from 'yup';\r\nimport reqwest from 'reqwest';\r\n\r\n\r\n\r\n// import hooks\r\nimport { useHandleFetch } from '../../hooks';\r\n\r\n\r\n// import configs\r\nimport config from \"../../config.json\";\r\n\r\n\r\nimport {\r\n    InboxOutlined,\r\n    CheckCircleOutlined,\r\n    LoadingOutlined,\r\n    PlusOutlined\r\n} from '@ant-design/icons';\r\n\r\n\r\n// import ReactQuill from 'react-quill';\r\n// import 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport MediaLibrary from \"../../components/MediaLibrary\";\r\n\r\n\r\nconst { Dragger } = Upload;\r\n\r\n\r\n// const validationSchema = Yup.object().shape({\r\n//     name: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n// });\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n    notification.error({\r\n        message: message || 'Brand Created',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Something Went Wrong',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst initialValues = {\r\n    name: '',\r\n    description: '',\r\n    image: [],\r\n    url: '',\r\n    cover: ''\r\n}\r\n\r\n\r\n\r\ninterface Props {\r\n    addNewCategoryVisible?: any;\r\n    setAddNewCategoryVisible?: any;\r\n    themeList?: any;\r\n    setThemeList?: any;\r\n\r\n}\r\n\r\nconst AddNewBrand = ({ addNewCategoryVisible, setAddNewCategoryVisible, themeList, setThemeList }: Props) => {\r\n\r\n    const [addThemeState, handleAddthemeFetch] = useHandleFetch({}, 'addTheme', 'form');\r\n    const [myImages, setmyImages] = useState(false);\r\n    const [visibleMedia, setvisibleMedia] = useState(false);\r\n    const [myThumbnailImage, setmyThumbnailImage] = useState([]);\r\n    const [isModalOpenForThumbnail, setisModalOpenForThumbnail] = useState(false);\r\n    const [selectedThemeTypeValue, setselectedThemeTypeValue] = useState('');\r\n    const [fileList, setfileList] = useState([]);\r\n    const [uploading, setuploading] = useState(false);\r\n    const [loadingThumnail, setLoadingThumbnail] = useState(false);\r\n    const [imageUrl, setImageUrl] = useState('');\r\n    const [name, setname] = useState('')\r\n    const [thumbnailFile, setThumbnailFile] = useState('')\r\n\r\n\r\n\r\n\r\n\r\n    const handleSubmit = async () => {\r\n        setuploading(true);\r\n\r\n        const formData = new FormData();\r\n        fileList.forEach(file => {\r\n            formData.append('folder', file, file.name);\r\n        });\r\n        formData.append(\"name\", name);\r\n        formData.append('thumbnail', thumbnailFile)\r\n\r\n\r\n        const addThemeRes = await handleAddthemeFetch({\r\n            body: formData,\r\n        });\r\n\r\n\r\n        setuploading(false);\r\n        // @ts-ignore\r\n        if (addThemeRes && addThemeRes.status === 'ok') {\r\n\r\n            setThemeList([...themeList, {\r\n                id: addThemeRes['_id'] || '',\r\n                key: addThemeRes['_id'] || '',\r\n                name: addThemeRes['name'] || '',\r\n                thumbnail: addThemeRes['thumbnail'] || '',\r\n                path: addThemeRes['path'] || '',\r\n                added: addThemeRes['added'] || '',\r\n                // @ts-ignore\r\n                ...addThemeRes\r\n            }]);\r\n\r\n            setfileList([]);\r\n            setuploading(false);\r\n            openSuccessNotification('Theme Uploaded!')\r\n            setAddNewCategoryVisible(false);\r\n            setname('');\r\n            setselectedThemeTypeValue('');\r\n\r\n\r\n\r\n\r\n            setAddNewCategoryVisible(false);\r\n        }\r\n        else {\r\n            openErrorNotification('Theme upload failed, Something went wrong');\r\n        }\r\n\r\n    };\r\n\r\n\r\n\r\n\r\n    const handleCancel = (e: any) => {\r\n        setAddNewCategoryVisible(false);\r\n    };\r\n\r\n\r\n    const getisSubmitButtonDisabled = () => {\r\n        if (addThemeState.isLoading) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n\r\n\r\n\r\n    const handleImagesDelete = (id) => {\r\n        // @ts-ignore\r\n        const newImages = myImages && myImages.filter(image => {\r\n            return image.id !== id;\r\n        })\r\n\r\n        setmyImages(newImages);\r\n    }\r\n\r\n\r\n\r\n    const handleThumbnailImageDelete = (id) => {\r\n        // @ts-ignore\r\n        const newImages = myThumbnailImage && myThumbnailImage.filter(image => {\r\n            return image.id !== id;\r\n        })\r\n\r\n        if (newImages.length > 0) {\r\n            setmyThumbnailImage(newImages);\r\n\r\n        }\r\n        // @ts-ignore\r\n        else setmyThumbnailImage([]);\r\n    }\r\n\r\n\r\n    const onChangeThemeType = (value) => {\r\n        setselectedThemeTypeValue(value);\r\n    }\r\n\r\n\r\n\r\n    const uploadProps = {\r\n        //  listType: 'picture',\r\n        onRemove: file => {\r\n            setfileList(filelist => {\r\n                const index = fileList.indexOf(file);\r\n                const newFileList = fileList.slice();\r\n                newFileList.splice(index, 1);\r\n                return newFileList;\r\n            })\r\n\r\n        },\r\n        beforeUpload: file => {\r\n            setfileList(filelist => {\r\n                return [...fileList, file]\r\n            })\r\n            return false;\r\n        },\r\n        fileList,\r\n    };\r\n\r\n    const handleUpload = async () => {\r\n        const formData = new FormData();\r\n        fileList.forEach(file => {\r\n            formData.append('folder', file, file.name);\r\n        });\r\n        formData.append(\"name\", name);\r\n        formData.append('thumbnail', imageUrl)\r\n\r\n        setuploading(true);\r\n\r\n        //  const addImageToLibraryRes = awAddait handleMediaLibraryFetch({\r\n        // \tbody: formData\r\n        //   });\r\n\r\n        //   console.log('addImageToLibraryRes',addImageToLibraryRes)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n        // You can use any AJAX library you like\r\n        reqwest({\r\n            url: `${config.baseURL}/admin/theme/add`,\r\n            method: 'post',\r\n            processData: false,\r\n            data: formData,\r\n            withCredentials: true,\r\n            success: () => {\r\n                setfileList([]);\r\n                setuploading(false);\r\n                openSuccessNotification('Theme Uploaded!')\r\n                setAddNewCategoryVisible(false);\r\n                setname('');\r\n                setselectedThemeTypeValue('');\r\n                setThemeList([...themeList, {\r\n\r\n                }])\r\n                // setThemeList([...themeList, {\r\n                //     id: addCategoryRes['id'] || '',\r\n                //     key: addCategoryRes['id'] || '',\r\n                //     name: addCategoryRes['name'] || '',\r\n                //     description: addCategoryRes['description'] || '',\r\n                //     // @ts-ignore\r\n                //     ...addCategoryRes\r\n                // }])\r\n            },\r\n            error: () => {\r\n                setuploading(false);\r\n                openErrorNotification('Theme Upload failed!')\r\n                message.error('upload failed.');\r\n            },\r\n        });\r\n    };\r\n\r\n\r\n    function getBase64(img, callback) {\r\n        const reader = new FileReader();\r\n        reader.addEventListener('load', () => callback(reader.result));\r\n        reader.readAsDataURL(img);\r\n    }\r\n\r\n    function beforeUpload(file) {\r\n        const isJpgOrPng = file.type === 'image/jpeg' || file.type === 'image/png';\r\n        if (!isJpgOrPng) {\r\n            message.error('You can only upload JPG/PNG file!');\r\n        }\r\n        const isLt2M = file.size / 1024 / 1024 < 2;\r\n        if (!isLt2M) {\r\n            message.error('Image must smaller than 2MB!');\r\n        }\r\n\r\n\r\n        getBase64(file, imageUrl => {\r\n            setImageUrl(imageUrl)\r\n            setThumbnailFile(file);\r\n            setLoadingThumbnail(false)\r\n        })\r\n\r\n        return false;\r\n    }\r\n\r\n\r\n\r\n    const uploadButton = (\r\n        <div>\r\n            {loadingThumnail ? <LoadingOutlined /> : <PlusOutlined />}\r\n            <div className=\"ant-upload-text\">Upload</div>\r\n        </div>\r\n    );\r\n\r\n    return (\r\n        <>\r\n            <Modal\r\n                style={{\r\n                    top: '40px'\r\n                }}\r\n                title=\"Add New Theme\"\r\n                visible={addNewCategoryVisible}\r\n                onOk={handleSubmit}\r\n                onCancel={handleCancel}\r\n                okText='Upload Theme'\r\n                okButtonProps={{\r\n                    loading: uploading,\r\n                    htmlType: \"submit\",\r\n                    disabled: getisSubmitButtonDisabled()\r\n                }}\r\n\r\n                bodyStyle={{\r\n                    margin: '0',\r\n                    padding: '10px'\r\n                }}\r\n            >\r\n\r\n                <Input\r\n                    label='Name'\r\n                    value={name}\r\n                    name='name'\r\n                    onChange={(e: any) => setname(e.target.value)}\r\n                    isError={addThemeState.error['error']['name']}\r\n\r\n                    errorString={addThemeState.error['error']['name']}\r\n                />\r\n\r\n                <div style={{\r\n                    marginTop: '20px'\r\n                }}></div>\r\n\r\n\r\n                <h3 className='inputFieldLabel'>Thumbnail</h3>\r\n                <Upload\r\n                    name=\"avatar\"\r\n                    listType=\"picture-card\"\r\n                    className=\"avatar-uploader\"\r\n                    showUploadList={false}\r\n                    beforeUpload={beforeUpload}\r\n                    multiple={false}\r\n                >\r\n                    {imageUrl ? <img src={imageUrl} alt=\"avatar\" style={{ width: '100%' }} /> : uploadButton}\r\n                </Upload>\r\n\r\n\r\n\r\n                <div style={{\r\n                    marginTop: '3px'\r\n                }}></div>\r\n                <h3 className='inputFieldLabel'>\r\n                    Theme Folder (.zip)\r\n\t\t\t\t\t\t\t\t\t</h3>\r\n\r\n\r\n                <Dragger\r\n                    multiple={false}\r\n                    className='upload-list-inline'\r\n                    listType='picture'\r\n                    style={{\r\n                        background: '#fff'\r\n                    }}\r\n                    {...uploadProps}\r\n                >\r\n                    <p className='ant-upload-drag-icon'>\r\n                        <InboxOutlined />\r\n                    </p>\r\n                    <p className='ant-upload-text'>Click or drag file to this area to upload</p>\r\n                    <p className='ant-upload-hint'>\r\n                        Support for a single or bulk upload. Strictly prohibit from uploading company data or\r\n                        other band files\r\n\t\t\t\t\t\t\t</p>\r\n                </Dragger>\r\n\r\n                {addThemeState.error['error']['folder'] && (\r\n                    <p style={{\r\n                        color: 'rgba(255, 0, 0, 0.507)'\r\n                    }}>{addThemeState.error['error']['folder']}</p>\r\n                )}\r\n\r\n\r\n\r\n\r\n\r\n            </Modal>\r\n\r\n            <MediaLibrary\r\n                setvisible={setvisibleMedia}\r\n                visible={visibleMedia}\r\n                setmyImages={setmyImages}\r\n                isModalOpenForImages={false}\r\n                setmyThumbnailImage={setmyThumbnailImage}\r\n                isModalOpenForThumbnail={isModalOpenForThumbnail}\r\n                myThumbnailImage={myThumbnailImage}\r\n            />\r\n        </>\r\n    );\r\n};\r\n\r\nexport default AddNewBrand;\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React, {useState, useEffect} from 'react';\r\nimport {withRouter} from 'react-router-dom';\r\nimport { Button, Input,Tooltip, Modal, notification, Popconfirm,Badge} from 'antd';\r\nimport { \r\n  PlusOutlined, EditOutlined, \r\n  DeleteOutlined,EditFilled,\r\n  CheckOutlined,\r\n  CheckCircleOutlined,\r\n  CheckCircleTwoTone } from '@ant-design/icons';\r\n\r\n\r\n/// import hooks\r\nimport { useFetch, useHandleFetch } from \"../../hooks\";\r\n\r\n// import components\r\nimport { DataTableSkeleton } from \"../../components/Placeholders\";\r\nimport AddNewTheme from \"./AddNewTheme\";\r\n\r\nimport Empty from \"../../components/Empty\";\r\n\r\nconst { Search } = Input;\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t  message: message || 'Tag Created',\r\n\t  description: '',\r\n\t  icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n  };\r\n\r\n\r\n  const openErrorNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t  message: message || 'Something Went Wrong',\r\n\t  description: '',\r\n\t  icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n  };\r\n\r\n\r\n\r\ninterface Props {\r\n    history: any; \r\n}\r\n\r\nconst CustomerList = ({history}: Props) => {\r\n\r\n    const [themeList,setThemeList] = useState([]); \r\n\r\n    const [themeState, handleThemeListFetch] = useHandleFetch({}, 'themeList');\r\n    const [activeThemeState, handleActiveThemeFetch] = useHandleFetch({}, 'activeTheme');\r\n    const [updateDeleteThemeState, handleDeleteThemeFetch] = useHandleFetch({}, 'deletetheme');\r\n  \r\n\r\n    \r\n    useEffect(()=>{\r\n     const setThemes = async () => {\r\n       const themes = await handleThemeListFetch({}); \r\n       // @ts-ignore\r\n       setThemeList(themes); \r\n     }\r\n     setThemes(); \r\n    },[])\r\n\r\n\r\n\r\n\r\n  \r\n  const [addNewCategoryVisible,setAddNewCategoryVisible] = useState(false);   \r\n\r\n\r\n\r\n  const handleSearch = (value) => {\r\n    if(themeState.data.length > 0 ){\r\n      const newThemeList = themeState.data.filter(item => item.name.includes(value)); \r\n      setThemeList(newThemeList); \r\n    }\r\n     \r\n  }\r\n\r\n\r\n\r\n\r\n  const handleActiveTheme = async (id) => {\r\n    const activeThemeRes = await handleActiveThemeFetch({\r\n      urlOptions: {\r\n        placeHolders: {\r\n          id,\r\n        }\r\n        }\r\n      });\r\n\r\n        // @ts-ignore\r\n  if(activeThemeRes && activeThemeRes.status === 'ok'){\r\n    openSuccessNotification('Theme activated'); \r\n   \r\n  }\r\n  else {\r\n    openErrorNotification(\"Couldn't activate the theme, Something went wrong\")\r\n  }\r\n     \r\n     \r\n  }\r\n\r\n\r\n  const handleDeleteTheme = async (id) => {\r\n    const deleteThemeRes = await handleDeleteThemeFetch({\r\n      urlOptions: {\r\n        placeHolders: {\r\n          id,\r\n        }\r\n        }\r\n      });\r\n\r\n        // @ts-ignore\r\n  if(deleteThemeRes && deleteThemeRes.status === 'ok'){\r\n    openSuccessNotification('Theme Deleted'); \r\n    const newThemeList =  themeList.filter(item => item.id !== id);\r\n    setThemeList(newThemeList); \r\n  }\r\n  else {\r\n  openErrorNotification(\"Couldn't delete, Something went wrong\")\r\n  }\r\n  }\r\n\r\n\r\n\r\n\r\n\treturn (\r\n\t\t<>\r\n    {/* <h2 className='containerPageTitle'>\r\n      Categories\r\n    </h2> */}\r\n    <div className='categoryListContainer'>\r\n            <div className='categoryListContainer__header'>\r\n           \r\n\r\n          <div className='categoryListContainer__header-searchBar'>\r\n          <h2 className='categoryListContainer__header-title'>\r\n\t\t Themes\r\n \r\n            </h2>\r\n\r\n\r\n          <Search\r\n            enterButton={false}\r\n            className='searchbarClassName'\r\n          placeholder=\"search themes..\"\r\n          onSearch={value => handleSearch(value)}\r\n          // style={{ width: 300 }}\r\n        />\r\n          </div>\r\n            <Button\r\n          // type=\"primary\"\r\n          className='btnPrimaryClassNameoutline'\r\n          icon={<PlusOutlined />}\r\n          onClick={() => setAddNewCategoryVisible(true)}\r\n        >\r\n        Add New\r\n            \r\n            </Button>\r\n            </div>\r\n\r\n            <div className='categoryListContainer__afterHeader'>\r\n\r\n            </div>\r\n\r\n     \r\n\t\t\t\r\n\t\t\t<div className='categoryListContainer__categoryList'>\r\n        {themeState.done && themeList.length > 0 && (\r\n   \r\n   <div className='categoryListContainer__bodyContainerList'>\r\n\t\t\r\n          {themeList.map(theme => {\r\n            return (\r\n              <div className='categoryListContainer__bodyContainerList-item'>\r\n              {/* <Badge count={<CheckCircleTwoTone style={{ color: '#3FA3FF' }} />}>\r\n               \r\n                  </Badge> */}\r\n                  <div className='categoryListContainer__bodyContainerList-item-top'>\r\n                  <img\r\n                    alt='theme img'\r\n                    src={theme.thumbnail}\r\n                  />\r\n                </div>\r\n                <div className='categoryListContainer__bodyContainerList-item-body'>\r\n                  <h3> {theme.name} </h3>\r\n     \r\n                  <div\r\n                    style={{\r\n                      display: 'flex',\r\n                      justifyContent: 'space-between'\r\n                    }}\r\n                  >\r\n                    <Tooltip placement='top' title='Active this theme'>\r\n                    <Button\r\n                  \r\n                   size='small'\r\n                   className='btnPrimaryClassNameoutline'\r\n                   icon={<CheckOutlined />}\r\n                   onClick={() => handleActiveTheme(theme.id)}\r\n                  >\r\n                    <span style={{\r\n                      fontSize:'11px'\r\n                    }}>\r\n                    Set Active\r\n                 \r\n                    </span>\r\n                \r\n                 </Button>\r\n     \r\n     \r\n                      \r\n                    </Tooltip>\r\n     \r\n                    <Tooltip placement='top' title='Delete theme'>\r\n                    <Popconfirm \r\n               \r\n               onConfirm={() => handleDeleteTheme(theme.id)}\r\n               title=\"Are you sure？\" okText=\"Yes\" cancelText=\"No\">\r\n           \r\n           <Button\r\n                        size='small'\r\n                        type='link'\r\n                        danger={true}\r\n                        icon={<DeleteOutlined />}\r\n                      >\r\n                        \r\n                        </Button>\r\n           </Popconfirm>\r\n\r\n\r\n                     \r\n     \r\n                        \r\n                        </Tooltip>\r\n                      </div>\r\n                    </div>\r\n                </div>\r\n            )\r\n          })}\r\n         </div>\r\n\t\t)}\r\n\r\n\r\n        {themeState.isLoading && <DataTableSkeleton />}\r\n\r\n        {themeState.done && !(themeList.length > 0) && (\r\n        <Empty title='No Theme found'  />\r\n        )}\r\n        \r\n\r\n\t\t\t</div>\r\n\t\t</div>\r\n\r\n\r\n    {themeState.done && \r\n    <AddNewTheme \r\n          addNewCategoryVisible={addNewCategoryVisible} \r\n          setAddNewCategoryVisible={setAddNewCategoryVisible}\r\n          themeList={themeState.data}\r\n          setThemeList={setThemeList}\r\n           />}\r\n    </>\r\n\t);\r\n};\r\n\r\nexport default withRouter(CustomerList);\r\n","import React from 'react'\r\n\r\ninterface Props {\r\n    \r\n}\r\n\r\nconst Image = (props: Props) => {\r\n    return (\r\n        <div>\r\n            Image\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Image\r\n","import React from 'react';\r\n\r\ninterface Props {}\r\n\r\nconst Invoice = (props: Props) => {\r\n\treturn <div>Invoice</div>;\r\n};\r\n\r\nexport default Invoice;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n\r\nimport { useHandleFetch } from '../../hooks';\r\n// import third party ui lib\r\nimport { notification, Button } from 'antd';\r\n\r\nimport {\r\n    CheckCircleOutlined\r\n} from '@ant-design/icons';\r\n\r\n\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport MediaLibrary from \"../../components/MediaLibrary\";\r\n\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    title: Yup.string()\r\n        .label('Title')\r\n        .required('Site title can not be empty'),\r\n    adminEmail: Yup.string()\r\n        .label('Admin Email')\r\n        .required('Admin Email can not be empty'),\r\n\r\n});\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Site Info Updated',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Something Went Wrong',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst initialValues = {\r\n    title: '',\r\n    adminName: '',\r\n    adminEmail: '',\r\n}\r\n\r\n\r\n\r\ninterface Props {\r\n\r\n\r\n}\r\n\r\nconst UpdateSiteinfo = ({ }: Props) => {\r\n\r\n    const [UpdateSiteSettingsState, handleUpdateSiteSettingsFetch] = useHandleFetch({}, 'updateSiteSettings');\r\n    const [siteSettingsState, handlSiteSettingsFetch] = useHandleFetch({}, 'siteSettings');\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        const getSiteSettings = async () => {\r\n            const siteSettingsRes = await handlSiteSettingsFetch({});\r\n\r\n            // console.log('siteSettingsRes', siteSettingsRes)\r\n        }\r\n        getSiteSettings();\r\n    }, [UpdateSiteSettingsState])\r\n\r\n\r\n    // console.log('siteSettingsState', siteSettingsState);\r\n\r\n    const handleSubmit = async (values: any, actions: any) => {\r\n\r\n\r\n        const addSiteInfoRes = await handleUpdateSiteSettingsFetch({\r\n\r\n            body: {\r\n                title: values.title,\r\n                adminName: values.adminName,\r\n                adminEmail: values.adminEmail,\r\n            },\r\n        });\r\n\r\n        // @ts-ignore\r\n        if (addSiteInfoRes && addSiteInfoRes.status === 'ok') {\r\n            openSuccessNotification();\r\n\r\n\r\n            // setBrandList([...brandList, {\r\n            //     id: addBrandRes['id'] || '',\r\n            //     key: addBrandRes['id'] || '',\r\n            //     name: addBrandRes['name'] || '',\r\n            //     description: addBrandRes['description'] || '',\r\n            //     // @ts-ignore\r\n            //     ...addBrandRes\r\n            // }]);\r\n\r\n            actions.resetForm();\r\n        }\r\n        else {\r\n            openErrorNotification();\r\n        }\r\n\r\n\r\n\r\n\r\n        actions.setSubmitting(false);\r\n\r\n    };\r\n\r\n\r\n\r\n\r\n\r\n    const getisSubmitButtonDisabled = (values, isValid) => {\r\n        if (!values.title || !values.adminEmail || !isValid) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    const getInitialValues = () => {\r\n        if (siteSettingsState.data && Object.keys(siteSettingsState.data).length > 0) {\r\n            return { ...siteSettingsState.data }\r\n        }\r\n        else {\r\n            return initialValues\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n    return (\r\n        <Formik\r\n            onSubmit={(values, actions) => handleSubmit(values, actions)}\r\n            enableReinitialize={true}\r\n            initialValues={\r\n                getInitialValues()\r\n            }\r\n        >\r\n            {({\r\n                handleChange,\r\n                values,\r\n                handleSubmit,\r\n                errors,\r\n                isValid,\r\n                isSubmitting,\r\n                touched,\r\n                handleBlur,\r\n                setFieldTouched,\r\n                handleReset,\r\n            }) => (\r\n                    <>\r\n                        <div className='siteInfoContainer__item'>\r\n                            <div className='siteInfoContainer__item-item'>\r\n                                <Input\r\n                                    label='Site Title'\r\n                                    value={values.title}\r\n                                    name='title'\r\n                                    isError={(touched.title && errors.title) ||\r\n                                        (!isSubmitting && UpdateSiteSettingsState.error['error']['title'])}\r\n\r\n                                    errorString={(touched.title && errors.title) ||\r\n                                        (!isSubmitting && UpdateSiteSettingsState.error['error']['title'])}\r\n                                    onChange={(e: any) => {\r\n                                        handleChange(e);\r\n                                        setFieldTouched('title');\r\n                                    }}\r\n                                />\r\n                            </div>\r\n                            <div className='siteInfoContainer__item-item'>\r\n                                <Input\r\n                                    label='Admin Name'\r\n                                    value={values.adminName}\r\n                                    name='adminName'\r\n                                    isError={(touched.adminName && errors.adminName) ||\r\n                                        (!isSubmitting && UpdateSiteSettingsState.error['error']['adminName'])}\r\n\r\n                                    errorString={(touched.adminName && errors.adminName) ||\r\n                                        (!isSubmitting && UpdateSiteSettingsState.error['error']['adminName'])}\r\n                                    onChange={(e: any) => {\r\n                                        handleChange(e);\r\n                                        setFieldTouched('adminName');\r\n                                    }}\r\n                                />\r\n                            </div>\r\n                            <div className='siteInfoContainer__item-item-left'>\r\n                                <Input\r\n                                    label='Admin Email'\r\n                                    value={values.adminEmail}\r\n                                    name='adminEmail'\r\n                                    isError={(touched.adminEmail && errors.adminEmail) ||\r\n                                        (!isSubmitting && UpdateSiteSettingsState.error['error']['adminEmail'])}\r\n\r\n                                    errorString={(touched.adminEmail && errors.adminEmail) ||\r\n                                        (!isSubmitting && UpdateSiteSettingsState.error['error']['adminEmail'])}\r\n                                    onChange={(e: any) => {\r\n                                        handleChange(e);\r\n                                        setFieldTouched('adminEmail');\r\n                                    }}\r\n                                />\r\n\r\n                            </div>\r\n\r\n                        </div>\r\n\r\n\r\n                        <div style={{\r\n                            marginTop: '10px'\r\n                        }}></div>\r\n\r\n                        <Button\r\n\r\n                            onClick={(e: any) => handleSubmit(e)}\r\n                            loading={isSubmitting}\r\n                            disabled={getisSubmitButtonDisabled(values, isValid)}\r\n                            className='btnPrimaryClassNameoutline'\r\n                        >\r\n                            Update Admin Info\r\n                            </Button>\r\n\r\n                        <div style={{\r\n                            marginBottom: '10px'\r\n                        }}></div>\r\n\r\n                    </>\r\n                )}\r\n        </Formik >\r\n\r\n\r\n\r\n\r\n    );\r\n};\r\n\r\nexport default UpdateSiteinfo;\r\n//","import React, { useEffect } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n\r\nimport { useHandleFetch } from '../../hooks';\r\n// import third party ui lib\r\nimport { notification, Button } from 'antd';\r\n\r\nimport {\r\n    CheckCircleOutlined\r\n} from '@ant-design/icons';\r\n\r\n\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\n// import MediaLibrary from \"../../components/MediaLibrary\";\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    invoiceTitle: Yup.string().label('Title').required('Invoice title is required')\r\n});\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Site Info Updated',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Something Went Wrong',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst initialValues = {\r\n    invoiceTitle: \"\",\r\n    address: \"\",\r\n    phone: \"\",\r\n    email: \"\",\r\n    additionalText: \"\"\r\n};\r\n\r\n\r\n\r\n\r\ninterface Props {\r\n\r\n\r\n}\r\n\r\nconst UpdateSiteinfo = ({ }: Props) => {\r\n\r\n    const [updateInfovSettingsState, handleUpdateInvoiceSettingsFetch] = useHandleFetch({}, 'updateInvoiceSettings');\r\n    const [InvoiceSettingsState, handlSiteInvoiceSettingsFetch] = useHandleFetch({}, 'invoiceSettingsDetail');\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        const getSiteSettings = async () => {\r\n            const siteSettingsRes = await handlSiteInvoiceSettingsFetch({});\r\n\r\n            // console.log('siteSettingsRes', siteSettingsRes)\r\n        }\r\n        getSiteSettings();\r\n    }, [updateInfovSettingsState])\r\n\r\n\r\n\r\n    const handleSubmit = async (values: any, actions: any) => {\r\n\r\n        const updateInvoiceRes = await handleUpdateInvoiceSettingsFetch({\r\n\r\n            body: {\r\n                invoiceTitle: values.invoiceTitle,\r\n                address: values.address,\r\n                phone: values.phone,\r\n                email: values.email,\r\n                additionalText: values.additionalText\r\n\r\n            },\r\n        });\r\n\r\n        // @ts-ignore\r\n        if (updateInvoiceRes && updateInvoiceRes.status === 'ok') {\r\n            openSuccessNotification();\r\n\r\n\r\n            // setBrandList([...brandList, {\r\n            //     id: addBrandRes['id'] || '',\r\n            //     key: addBrandRes['id'] || '',\r\n            //     name: addBrandRes['name'] || '',\r\n            //     description: addBrandRes['description'] || '',\r\n            //     // @ts-ignore\r\n            //     ...addBrandRes\r\n            // }]);\r\n\r\n            actions.resetForm();\r\n        }\r\n        else {\r\n            openErrorNotification();\r\n        }\r\n\r\n\r\n        actions.setSubmitting(false);\r\n\r\n    };\r\n\r\n\r\n\r\n\r\n\r\n    const getisSubmitButtonDisabled = (values, isValid) => {\r\n        if (!values.invoiceTitle || !isValid) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n\r\n\r\n    const getInitialValues = () => {\r\n        if (InvoiceSettingsState.data && Object.keys(InvoiceSettingsState.data).length > 0) {\r\n            return { ...InvoiceSettingsState.data }\r\n        }\r\n        else {\r\n            return initialValues\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <Formik\r\n            onSubmit={(values, actions) => handleSubmit(values, actions)}\r\n            validationSchema={validationSchema}\r\n            enableReinitialize={true}\r\n            initialValues={\r\n                getInitialValues()\r\n            }\r\n        >\r\n            {({\r\n                handleChange,\r\n                values,\r\n                handleSubmit,\r\n                errors,\r\n                isValid,\r\n                isSubmitting,\r\n                touched,\r\n                handleBlur,\r\n                setFieldTouched,\r\n                handleReset,\r\n            }) => (\r\n                    <>\r\n                        <div className='siteInfoContainer__item'>\r\n                            <div className='siteInfoContainer__item-item'>\r\n                                <Input\r\n                                    label='Company Name'\r\n                                    value={values.invoiceTitle}\r\n                                    name='invoiceTitle'\r\n                                    isError={(touched.invoiceTitle && errors.invoiceTitle) ||\r\n                                        (!isSubmitting && updateInfovSettingsState.error['error']['invoiceTitle'])}\r\n\r\n                                    errorString={(touched.invoiceTitle && errors.invoiceTitle) ||\r\n                                        (!isSubmitting && updateInfovSettingsState.error['error']['invoiceTitle'])}\r\n                                    onChange={(e: any) => {\r\n                                        handleChange(e);\r\n                                        setFieldTouched('invoiceTitle');\r\n                                    }}\r\n                                />\r\n                            </div>\r\n                            <div className='siteInfoContainer__item-item'>\r\n                                <Input\r\n                                    label='Phone Number'\r\n                                    value={values.phone}\r\n                                    name='phone'\r\n                                    isError={(touched.phone && errors.phone) ||\r\n                                        (!isSubmitting && updateInfovSettingsState.error['error']['phone'])}\r\n\r\n                                    errorString={(touched.phone && errors.phone) ||\r\n                                        (!isSubmitting && updateInfovSettingsState.error['error']['phone'])}\r\n                                    onChange={(e: any) => {\r\n                                        handleChange(e);\r\n                                        setFieldTouched('phone');\r\n                                    }}\r\n                                />\r\n                            </div>\r\n                            <div className='siteInfoContainer__item-item'>\r\n                                <Input\r\n                                    label='Email'\r\n                                    value={values.email}\r\n                                    name='email'\r\n                                    isError={(touched.email && errors.email) ||\r\n                                        (!isSubmitting && updateInfovSettingsState.error['error']['email'])}\r\n\r\n                                    errorString={(touched.email && errors.email) ||\r\n                                        (!isSubmitting && updateInfovSettingsState.error['error']['email'])}\r\n                                    onChange={(e: any) => {\r\n                                        handleChange(e);\r\n                                        setFieldTouched('email');\r\n                                    }}\r\n                                />\r\n\r\n                            </div>\r\n\r\n                            <div className='siteInfoContainer__item-item'>\r\n                                <Input\r\n                                    label='Additional Text'\r\n                                    value={values.additionalText}\r\n                                    name='additionalText'\r\n                                    isError={(touched.additionalText && errors.additionalText) ||\r\n                                        (!isSubmitting && updateInfovSettingsState.error['error']['additionalText'])}\r\n\r\n                                    errorString={(touched.additionalText && errors.additionalText) ||\r\n                                        (!isSubmitting && updateInfovSettingsState.error['error']['additionalText'])}\r\n                                    onChange={(e: any) => {\r\n                                        handleChange(e);\r\n                                        setFieldTouched('additionalText');\r\n                                    }}\r\n                                />\r\n\r\n                            </div>\r\n\r\n                            <div className='siteInfoContainer__item-item-left'>\r\n                                <TextArea\r\n                                    label='Address'\r\n                                    value={values.address}\r\n                                    name='address'\r\n                                    isError={(touched.address && errors.address) ||\r\n                                        (!isSubmitting && updateInfovSettingsState.error['error']['address'])}\r\n\r\n                                    errorString={(touched.address && errors.address) ||\r\n                                        (!isSubmitting && updateInfovSettingsState.error['error']['address'])}\r\n                                    onChange={(e: any) => {\r\n                                        handleChange(e);\r\n                                        setFieldTouched('address');\r\n                                    }}\r\n                                />\r\n\r\n                            </div>\r\n\r\n                        </div>\r\n\r\n\r\n                        <div style={{\r\n                            marginTop: '10px'\r\n                        }}></div>\r\n\r\n                        <Button\r\n\r\n                            onClick={(e: any) => handleSubmit(e)}\r\n                            loading={isSubmitting}\r\n                            disabled={getisSubmitButtonDisabled(values, isValid)}\r\n                            className='btnPrimaryClassNameoutline'\r\n                        >\r\n                            Update Admin Info\r\n                            </Button>\r\n\r\n                        <div style={{\r\n                            marginBottom: '10px'\r\n                        }}></div>\r\n                    </>\r\n                )}\r\n        </Formik>\r\n\r\n\r\n\r\n\r\n    );\r\n};\r\n\r\nexport default UpdateSiteinfo;\r\n","import React, { useState } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n\r\nimport { useHandleFetch } from '../../hooks';\r\n// import third party ui lib\r\nimport { Upload, message, Switch, Select, Button, notification, Modal, Tabs, Tooltip } from 'antd';\r\n\r\n\r\nimport {\r\n\tFileOutlined,\r\n\tInboxOutlined,\r\n\tFileAddOutlined,\r\n\tDeleteOutlined,\r\n\tCheckCircleOutlined,\r\n\tPlusOutlined,\r\n\tFileImageFilled,\r\n\tCheckOutlined,\r\n\tCloseOutlined\r\n} from '@ant-design/icons';\r\n\r\n\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport MediaLibrary from \"../../components/MediaLibrary\";\r\nimport AdminSiteInfo from \"./AdminSiteInfo\";\r\nimport SiteInfoInvoice from \"./SiteInfoInvoice\";\r\n\r\nconst validationSchema = Yup.object().shape({\r\n\tname: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\nconst { TabPane } = Tabs;\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t\tmessage: message || 'Brand Created',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t\tmessage: message || 'Something Went Wrong',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n};\r\n\r\n\r\nconst initialValues = {\r\n\tname: '',\r\n\tdescription: '',\r\n\timage: [],\r\n\turl: '',\r\n\tcover: ''\r\n}\r\n\r\n\r\n\r\ninterface Props {\r\n\taddNewCategoryVisible?: any;\r\n\tsetAddNewCategoryVisible?: any;\r\n\tbrandList?: any;\r\n\tsetBrandList?: any;\r\n\r\n}\r\n\r\nconst AddNewBrand = ({ addNewCategoryVisible, setAddNewCategoryVisible, brandList, setBrandList }: Props) => {\r\n\r\n\tconst [updateSiteLogoAndIcon, handleUpdateSiteLogoAndIconFetch] = useHandleFetch({}, 'updateSiteLogoAndIcon');\r\n\tconst [myImages, setmyImages] = useState(false);\r\n\tconst [visibleMedia, setvisibleMedia] = useState(false);\r\n\tconst [coverImageId, setCoverImageId] = useState('');\r\n\r\n\r\n\r\n\tconst handleSubmit = async () => {\r\n\r\n\r\n\t\tconst updateSiteIconAndLogoRes = await handleUpdateSiteLogoAndIconFetch({\r\n\r\n\t\t\tbody: {\r\n\t\t\t\tlogo: myImages ? myImages[0] && myImages[0].id : '',\r\n\t\t\t},\r\n\t\t});\r\n\r\n\t\t// @ts-ignore\r\n\t\tif (updateSiteIconAndLogoRes && updateSiteIconAndLogoRes.status === 'ok') {\r\n\t\t\topenSuccessNotification('Updated Site Logo');\r\n\t\t}\r\n\t\telse {\r\n\t\t\topenErrorNotification(\"Couldn't updated site logo, Something went wrong\");\r\n\t\t}\r\n\r\n\t};\r\n\r\n\r\n\tconst handleImagesDelete = (id) => {\r\n\t\t// @ts-ignore\r\n\t\tconst newImages = myImages && myImages.filter(image => {\r\n\t\t\treturn image.id !== id;\r\n\t\t})\r\n\r\n\t\tsetmyImages(newImages);\r\n\t}\r\n\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<div className='siteInfoContainer'>\r\n\r\n\t\t\t\t<Tabs defaultActiveKey=\"1\" >\r\n\t\t\t\t\t<TabPane tab=\"Site Info\" key=\"1\">\r\n\t\t\t\t\t\t<AdminSiteInfo />\r\n\t\t\t\t\t</TabPane>\r\n\t\t\t\t\t<TabPane tab=\"Site logo\" key=\"2\">\r\n\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\tdisplay: 'flex',\r\n\t\t\t\t\t\t\talignItems: 'center'\r\n\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\tmarginRight: '20px'\r\n\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>Logo</h3>\r\n\t\t\t\t\t\t\t\t<div className='aboutToUploadImagesContainer'>\r\n\t\t\t\t\t\t\t\t\t{myImages &&\r\n\t\t\t\t\t\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\t\t\t\t\t\tmyImages.length > 0 && myImages.map((image, index) => {\r\n\t\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div className='aboutToUploadImagesContainer__item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='aboutToUploadImagesContainer__item-imgContainer'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => setCoverImageId(image.id)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<img src={image.cover} alt={image.alt} />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<span\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => handleImagesDelete(image.id)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='aboutToUploadImagesContainer__item-remove'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<CloseOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t\t})}\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t{myImages ? !myImages[0] && (\r\n\t\t\t\t\t\t\t\t\t\t<Tooltip\r\n\t\t\t\t\t\t\t\t\t\t\ttitle={'Attach images'}>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetvisibleMedia(true);\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\tclassName='aboutToUploadImagesContainer__uploadItem'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t{/* <FileAddOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<FileImageTwoTone />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<FileImageOutlined /> */}\r\n\t\t\t\t\t\t\t\t\t\t\t\t<FileImageFilled />\r\n\t\t\t\t\t\t\t\t\t\t\t\t{/* <h5>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t Select From Library\r\n\t\t\t\t\t\t\t\t\t\t\t\t<     /h5> */}\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span className='aboutToUploadImagesContainer__uploadItem-plus'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<PlusOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t\t\t\t) : <Tooltip\r\n\t\t\t\t\t\t\t\t\t\ttitle={'Attach images'}>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetvisibleMedia(true);\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\tclassName='aboutToUploadImagesContainer__uploadItem'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t{/* <FileAddOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t<FileImageTwoTone />\r\n\t\t\t\t\t\t\t\t\t\t\t\t<FileImageOutlined /> */}\r\n\t\t\t\t\t\t\t\t\t\t\t\t<FileImageFilled />\r\n\t\t\t\t\t\t\t\t\t\t\t\t{/* <h5>\r\n\t\t\t\t\t\t\t\t\t\t\t\t Select From Library\r\n\t\t\t\t\t\t\t\t\t\t<     /h5> */}\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span className='aboutToUploadImagesContainer__uploadItem-plus'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<PlusOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</Tooltip>}\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t{/* \r\n\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'> Icon</h3>\r\n\r\n\r\n\t\t\t\t\t\t\t\t<div className='aboutToUploadImagesContainer'>\r\n\t\t\t\t\t\t\t\t\t{myImages &&\r\n\t\t\t\t\t\t\t\t\t\tmyImages.length > 0 && myImages.map((image, index) => {\r\n\t\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div className='aboutToUploadImagesContainer__item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='aboutToUploadImagesContainer__item-imgContainer'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => setCoverImageId(image.id)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<img src={image.cover} alt={image.alt} />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<span\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => handleImagesDelete(image.id)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='aboutToUploadImagesContainer__item-remove'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<CloseOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t\t})}\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t{myImages ? !myImages[0] && (\r\n\t\t\t\t\t\t\t\t\t\t<Tooltip\r\n\t\t\t\t\t\t\t\t\t\t\ttitle={'Attach images'}>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetvisibleMedia(true);\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\tclassName='aboutToUploadImagesContainer__uploadItem'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t<FileImageFilled />\r\n\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span className='aboutToUploadImagesContainer__uploadItem-plus'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<PlusOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t\t\t\t) : <Tooltip\r\n\t\t\t\t\t\t\t\t\t\ttitle={'Attach images'}>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetvisibleMedia(true);\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\tclassName='aboutToUploadImagesContainer__uploadItem'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t<FileImageFilled />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span className='aboutToUploadImagesContainer__uploadItem-plus'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<PlusOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</Tooltip>}\r\n\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t</div> */}\r\n\r\n\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t<Button\r\n\r\n\t\t\t\t\t\t\tloading={updateSiteLogoAndIcon.isLoading}\r\n\t\t\t\t\t\t\tonClick={() => handleSubmit()}\r\n\t\t\t\t\t\t\tclassName='btnPrimaryClassNameoutline'\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\tUpdate site Logo\r\n                            </Button>\r\n\r\n\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\tmarginBottom: '10px'\r\n\t\t\t\t\t\t}}></div>\r\n\t\t\t\t\t</TabPane>\r\n\r\n\r\n\t\t\t\t\t<TabPane tab=\"Admin Information\" key=\"3\">\r\n\r\n\t\t\t\t\t\t<SiteInfoInvoice />\r\n\t\t\t\t\t</TabPane>\r\n\r\n\t\t\t\t</Tabs>\r\n\r\n\t\t\t</div>\r\n\r\n\r\n\r\n\t\t\t<MediaLibrary\r\n\t\t\t\tsetvisible={setvisibleMedia}\r\n\t\t\t\tvisible={visibleMedia}\r\n\t\t\t\tsetmyImages={setmyImages}\r\n\t\t\t\tisModalOpenForImages={true}\r\n\r\n\t\t\t/>\r\n\t\t</>\r\n\r\n\r\n\t);\r\n};\r\n\r\nexport default AddNewBrand;\r\n\r\n\r\n\r\n/*\r\n\t<div className='categoryListContainer__bodyContainerList'>\r\n\t\t\t\t<div className='categoryListContainer__bodyContainerList-item'>\r\n\t\t\t\t\t<Badge count={<CheckCircleTwoTone style={{ color: '#3FA3FF' }} />}>\r\n\t\t\t\t\t\t<div className='categoryListContainer__bodyContainerList-item-top'>\r\n\t\t\t\t\t\t\t<img\r\n\t\t\t\t\t\t\t\talt='theme img'\r\n\t\t\t\t\t\t\t\tsrc='https://homebazarshibchar.com/images/homeBazar.zip-thumb-homebazarLogo.jpg'\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className='categoryListContainer__bodyContainerList-item-body'>\r\n\t\t\t\t\t\t\t<h3>Home Bazar</h3>\r\n\r\n\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\tdisplay: 'flex',\r\n\t\t\t\t\t\t\t\t\tjustifyContent: 'space-between'\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<Tooltip placement='top' title='Active this theme'>\r\n\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\tsize='small'\r\n\t\t\t\t\t\t\t\t\t\ttype='primary'\r\n\t\t\t\t\t\t\t\t\t\ticon={<CheckOutlined />}\r\n\t\t\t\t\t\t\t\t\t\tonClick={() => console.log('upload thme')}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\tSet Active\r\n\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t</Tooltip>\r\n\r\n\t\t\t\t\t\t\t\t<Tooltip placement='top' title='Delete theme'>\r\n\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\tsize='small'\r\n\t\t\t\t\t\t\t\t\t\ttype='link'\r\n\t\t\t\t\t\t\t\t\t\tdanger={true}\r\n\t\t\t\t\t\t\t\t\t\ticon={<DeleteOutlined />}\r\n\t\t\t\t\t\t\t\t\t\tonClick={() => console.log('upload thme')}\r\n\t\t\t\t\t\t\t\t\t>\r\n\r\n\t\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</Badge>\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t<div className='categoryListContainer__bodyContainerList-item'>\r\n\t\t\t\t\t\t\t<div className='categoryListContainer__bodyContainerList-item-top'>\r\n\t\t\t\t\t\t\t\t<img\r\n\t\t\t\t\t\t\t\t\talt='theme img'\r\n\t\t\t\t\t\t\t\t\tsrc='https://homebazarshibchar.com/images/homeBazar.zip-thumb-homebazarLogo.jpg'\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className='categoryListContainer__bodyContainerList-item-body'>\r\n\t\t\t\t\t\t\t\t<h3>Home Bazar</h3>\r\n\r\n\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\tdisplay: 'flex',\r\n\t\t\t\t\t\t\t\t\t\tjustifyContent: 'space-between'\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t<Tooltip placement='top' title='Active this theme'>\r\n\t\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\t\tsize='small'\r\n\t\t\t\t\t\t\t\t\t\t\ttype='primary'\r\n\t\t\t\t\t\t\t\t\t\t\ticon={<CheckOutlined />}\r\n\t\t\t\t\t\t\t\t\t\t\tonClick={() => console.log('upload thme')}\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\tSet Active\r\n\t\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t\t</Tooltip>\r\n\r\n\t\t\t\t\t\t\t\t\t<Tooltip placement='top' title='Delete theme'>\r\n\t\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\t\tsize='small'\r\n\t\t\t\t\t\t\t\t\t\t\ttype='link'\r\n\t\t\t\t\t\t\t\t\t\t\tdanger={true}\r\n\t\t\t\t\t\t\t\t\t\t\ticon={<DeleteOutlined />}\r\n\t\t\t\t\t\t\t\t\t\t\tonClick={() => console.log('upload thme')}\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\r\n\r\n*/","import React, { useState, useEffect } from 'react';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\n\r\ninterface Props {\r\n\tsetdeliveryChargeList: any;\r\n\tdeliveryChargeList: any;\r\n\tdeliveryChargeItem: any;\r\n}\r\n\r\nconst DeliveryCharge = ({ deliveryChargeItem, setdeliveryChargeList, deliveryChargeList }: Props) => {\r\n\tconst [ deliveryCharge, setdeliveryCharge ] = useState({\r\n\t\tminimumOrder: deliveryChargeItem.minimumOrder,\r\n\t\tcharge: deliveryChargeItem.charge\r\n\t});\r\n\r\n\tconst handleDeliveryChargeChange = (e) => {\r\n\t\tconst name = e.target.name;\r\n\t\tconst value = e.target.value;\r\n\r\n\t\tsetdeliveryCharge({\r\n\t\t\t...deliveryCharge,\r\n\t\t\t[name]: value\r\n\t\t});\r\n\t};\r\n\r\n\tuseEffect(\r\n\t\t() => {\r\n\t\t\tconst positionInAttribute = () => {\r\n\t\t\t\treturn deliveryChargeList.map((item) => item.id).indexOf(deliveryChargeItem.id);\r\n\t\t\t};\r\n\r\n\t\t\tconst index = positionInAttribute();\r\n\r\n\t\t\tconst updatedItem = Object.assign({}, deliveryChargeList[index], { ...deliveryCharge });\r\n\t\t\tconst updateAttributeList = [\r\n\t\t\t\t...deliveryChargeList.slice(0, index),\r\n\t\t\t\tupdatedItem,\r\n\t\t\t\t...deliveryChargeList.slice(index + 1)\r\n\t\t\t];\r\n\t\t\tsetdeliveryChargeList(updateAttributeList);\r\n\t\t},\r\n\t\t[ deliveryCharge ]\r\n\t);\r\n\r\n\tconst handleAttributeDelete = () => {\r\n\t\tconst updateAttributeList = deliveryChargeList.filter((item) => item.id !== deliveryChargeItem.id);\r\n\t\tsetdeliveryChargeList(updateAttributeList);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className='dubbleRowInputs'>\r\n\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t<Input\r\n\t\t\t\t\ttype='number'\r\n\t\t\t\t\taddonBefore='Minimum Order'\r\n\t\t\t\t\tvalue={deliveryCharge.minimumOrder}\r\n\t\t\t\t\tname='minimumOrder'\r\n\t\t\t\t\tonChange={handleDeliveryChargeChange}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t<Input\r\n\t\t\t\t\ttype='number'\r\n\t\t\t\t\taddonBefore='Charge'\r\n\t\t\t\t\tvalue={deliveryCharge.charge}\r\n\t\t\t\t\tname='charge'\r\n\t\t\t\t\tonChange={handleDeliveryChargeChange}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default DeliveryCharge;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n\r\nimport { useHandleFetch } from '../../hooks';\r\n// import third party ui lib\r\nimport { Upload, message, Switch, Select, Button, notification, Modal, Empty } from 'antd';\r\n\r\nimport {\r\n\tFileOutlined,\r\n\tInboxOutlined,\r\n\tRadiusUpleftOutlined,\r\n\tRadiusUprightOutlined,\r\n\tRadiusBottomleftOutlined,\r\n\tRadiusBottomrightOutlined,\r\n\tDeleteOutlined,\r\n\tFileAddOutlined,\r\n\tPlusOutlined,\r\n\tCheckCircleOutlined\r\n} from '@ant-design/icons';\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport DeliveryCharge from './DeliveryCharge';\r\n\r\n\r\nconst { Option } = Select;\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t\tmessage: message || 'Category Updated',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t\tmessage: message || 'Something Went Wrong',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n\tname: Yup.string()\r\n\t\t.label('Name')\r\n\t\t.required()\r\n\t\t.min(2, 'Name must have at least 2 characters '),\r\n\tpickUpLocation: Yup.string()\r\n\t\t.label('Pick up Location')\r\n\t\t.required()\r\n\t\t.min(2, 'Pick up Location must have at least 2 characters '),\r\n\ttime: Yup.string()\r\n\t\t.label('Time')\r\n\t\t.required()\r\n\t\t.min(2, 'Time must have at least 2 characters '),\r\n\r\n});\r\n\r\n\r\n\r\n\r\nconst initialValues = {\r\n\tname: '',\r\n\tpickUpLocation: '',\r\n\ttime: '',\r\n};\r\n\r\n\r\n\r\n\r\ninterface Props {\r\n\taddNewCategoryVisible: any;\r\n\tsetAddNewCategoryVisible: any;\r\n\tregionList?: any;\r\n\tsetRegionList?: any;\r\n}\r\n\r\nconst AddNewRegion = ({ addNewCategoryVisible, setAddNewCategoryVisible, regionList, setRegionList }: Props) => {\r\n\r\n\tconst [addRegionState, handleRegionFetch] = useHandleFetch({}, 'addRegion');\r\n\tconst [selectedCountryValue, setselectedCountryValue] = useState('');\r\n\tconst [selectedCityValue, setselectedCityValue] = useState('');\r\n\r\n\tconst [countryOptions, setcountryOptions] = useState([]);\r\n\tconst [cityOptions, setcityOptions] = useState([]);\r\n\r\n\tconst [countryListState, handleCountryListFetch] = useHandleFetch(\r\n\t\t[],\r\n\t\t'countryList'\r\n\t);\r\n\r\n\tconst [cityListState, handleCityListFetch] = useHandleFetch([], 'cityList');\r\n\r\n\tconst [countryList, setCountryList] = useState([]);\r\n\tconst [cityList, setCityList] = useState([]);\r\n\r\n\tconst [deliveryChargeList, setdeliveryChargeList] = useState([{\r\n\t\tminimumOrder: '',\r\n\t\tcharge: '',\r\n\t\tid: '0'\r\n\t}]);\r\n\r\n\r\n\tconst handleSubmit = async (values: any, actions: any) => {\r\n\t\t// console.log('selectedCityValue', selectedCityValue)\r\n\r\n\t\tif (deliveryChargeList.length > 0) {\r\n\t\t\tconst charge = {};\r\n\r\n\t\t\tfor (let item of deliveryChargeList) {\r\n\t\t\t\tif (charge[item['minimumOrder']] !== '' && item['charge'] !== '') {\r\n\t\t\t\t\tcharge[item['minimumOrder']] = item['charge']\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tconst addRegionRes = await handleRegionFetch({\r\n\r\n\t\t\t\tbody: {\r\n\t\t\t\t\tname: values.name,\r\n\t\t\t\t\tpickUpLocation: values.pickUpLocation,\r\n\t\t\t\t\ttime: values.time,\r\n\t\t\t\t\tcountry: selectedCountryValue,\r\n\t\t\t\t\tcity: selectedCityValue,\r\n\t\t\t\t\tcharge\r\n\t\t\t\t},\r\n\t\t\t});\r\n\r\n\r\n\t\t\t// @ts-ignore\r\n\t\t\tif (addRegionRes && addRegionRes.status === 'ok') {\r\n\t\t\t\topenSuccessNotification();\r\n\r\n\t\t\t\tsetRegionList([...regionList, {\r\n\t\t\t\t\tid: addRegionRes['id'] || '',\r\n\t\t\t\t\tkey: addRegionRes['id'] || '',\r\n\t\t\t\t\tname: addRegionRes['name'] || '',\r\n\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\t...addRegionRes\r\n\t\t\t\t}])\r\n\t\t\t\tsetAddNewCategoryVisible(false)\r\n\t\t\t\tactions.resetForm();\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\topenErrorNotification();\r\n\t\t\t}\r\n\r\n\r\n\r\n\t\t}\r\n\t\telse {\r\n\t\t\tconst addRegionRes = await handleRegionFetch({\r\n\r\n\t\t\t\tbody: {\r\n\t\t\t\t\tname: values.name,\r\n\t\t\t\t\tpickUpLocation: values.pickUpLocation,\r\n\t\t\t\t\ttime: values.time,\r\n\t\t\t\t\tcountry: selectedCountryValue,\r\n\t\t\t\t\tcity: selectedCityValue,\r\n\t\t\t\t\tcharge: {}\r\n\t\t\t\t},\r\n\t\t\t});\r\n\r\n\r\n\t\t\t// @ts-ignore\r\n\t\t\tif (addRegionRes && addRegionRes.status === 'ok') {\r\n\t\t\t\topenSuccessNotification();\r\n\r\n\t\t\t\tsetRegionList([...regionList, {\r\n\t\t\t\t\tid: addRegionRes['id'] || '',\r\n\t\t\t\t\tkey: addRegionRes['id'] || '',\r\n\t\t\t\t\tname: addRegionRes['name'] || '',\r\n\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\t...addRegionRes\r\n\t\t\t\t}])\r\n\t\t\t\tsetAddNewCategoryVisible(false)\r\n\t\t\t\tactions.resetForm();\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\topenErrorNotification();\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\r\n\r\n\t\tactions.setSubmitting(false);\r\n\t};\r\n\r\n\r\n\r\n\tconst onChangeCity = (value) => {\r\n\t\tsetselectedCityValue(value);\r\n\t}\r\n\r\n\tconst onChangeCountry = (value) => {\r\n\t\tsetselectedCountryValue(value);\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tconst setCountries = async () => {\r\n\t\t\tconst CountryListRes = await handleCountryListFetch({});\r\n\r\n\t\t\t// @ts-ignore\r\n\t\t\tif (CountryListRes && CountryListRes.length > 0) {\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\tconst countryOptions = CountryListRes.map((country) => {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tvalue: country.name,\r\n\t\t\t\t\t\tname: country.name\r\n\t\t\t\t\t};\r\n\t\t\t\t});\r\n\t\t\t\tsetcountryOptions(countryOptions);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tsetCountries();\r\n\t}, []);\r\n\r\n\r\n\tuseEffect(() => {\r\n\t\tconst setCities = async () => {\r\n\t\t\tconst cityListRes = await handleCityListFetch({\r\n\t\t\t\turlOptions: {\r\n\t\t\t\t\tplaceHolders: {\r\n\t\t\t\t\t\tcountry: selectedCountryValue,\r\n\t\t\t\t\t},\r\n\t\t\t\t},\r\n\t\t\t});\r\n\r\n\t\t\t// @ts-ignore\r\n\t\t\tif (cityListRes && cityListRes.length > 0) {\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\tconst cityOptions = cityListRes.map((city) => {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tvalue: city.name,\r\n\t\t\t\t\t\tname: city.name\r\n\t\t\t\t\t};\r\n\t\t\t\t});\r\n\t\t\t\tsetcityOptions(cityOptions);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tsetCities();\r\n\t}, [selectedCountryValue]);\r\n\r\n\r\n\r\n\r\n\tconst handleCancel = (e: any) => {\r\n\t\tsetAddNewCategoryVisible(false);\r\n\t};\r\n\r\n\r\n\tconst getisSubmitButtonDisabled = (values, isValid) => {\r\n\t\tif (!isValid ||\r\n\t\t\t!values.name ||\r\n\t\t\t!values.pickUpLocation ||\r\n\t\t\t!values.time) {\r\n\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\r\n\r\n\tconst handleAddDeliveryCharge = () => {\r\n\t\tsetdeliveryChargeList([...deliveryChargeList, {\r\n\t\t\tminimumOrder: '',\r\n\t\t\tcharge: '',\r\n\t\t\tid: `${deliveryChargeList.length}`\r\n\t\t}])\r\n\t};\r\n\r\n\r\n\r\n\r\n\t// console.log('deliveryChargeList', deliveryChargeList)\r\n\treturn (\r\n\t\t<Formik\r\n\t\t\tonSubmit={(values, actions) => handleSubmit(values, actions)}\r\n\t\t\tvalidationSchema={validationSchema}\r\n\t\t\tvalidateOnBlur={false}\r\n\t\t\tenableReinitialize={true}\r\n\t\t\tinitialValues={\r\n\t\t\t\t{ ...initialValues }\r\n\t\t\t}\r\n\t\t>\r\n\t\t\t{({\r\n\t\t\t\thandleChange,\r\n\t\t\t\tvalues,\r\n\t\t\t\thandleSubmit,\r\n\t\t\t\terrors,\r\n\t\t\t\tisValid,\r\n\t\t\t\tisSubmitting,\r\n\t\t\t\ttouched,\r\n\t\t\t\thandleBlur,\r\n\t\t\t\tsetFieldTouched,\r\n\t\t\t\thandleReset,\r\n\t\t\t}) => (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<Modal\r\n\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\ttop: '40px'\r\n\t\t\t\t\t\t\t}}\r\n\r\n\t\t\t\t\t\t\tbodyStyle={{\r\n\t\t\t\t\t\t\t\tmargin: '0',\r\n\t\t\t\t\t\t\t\tpadding: '10px'\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\ttitle=\"Add New Region\"\r\n\t\t\t\t\t\t\tvisible={addNewCategoryVisible}\r\n\t\t\t\t\t\t\tonOk={(e: any) => handleSubmit(e)}\r\n\t\t\t\t\t\t\tonCancel={handleCancel}\r\n\t\t\t\t\t\t\tokText='Create'\r\n\t\t\t\t\t\t\tokButtonProps={{\r\n\t\t\t\t\t\t\t\tloading: isSubmitting,\r\n\t\t\t\t\t\t\t\thtmlType: \"submit\",\r\n\t\t\t\t\t\t\t\tdisabled: getisSubmitButtonDisabled(values, isValid)\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\r\n\r\n\t\t\t\t\t\t\t<div className='dubbleRowInputs'>\r\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\tlabel='Name'\r\n\t\t\t\t\t\t\t\t\t\tvalue={values.name}\r\n\t\t\t\t\t\t\t\t\t\tname='name'\r\n\t\t\t\t\t\t\t\t\t\tisError={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addRegionState.error['error']['name'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\terrorString={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addRegionState.error['error']['name'])}\r\n\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('name');\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\tlabel='Pick up Location'\r\n\t\t\t\t\t\t\t\t\t\tvalue={values.pickUpLocation}\r\n\t\t\t\t\t\t\t\t\t\tname='pickUpLocation'\r\n\t\t\t\t\t\t\t\t\t\tisError={(touched.pickUpLocation && errors.pickUpLocation) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addRegionState.error['error']['pickUpLocation'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\terrorString={(touched.pickUpLocation && errors.pickUpLocation) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addRegionState.error['error']['pickUpLocation'])}\r\n\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('pickUpLocation');\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\tmarginRight: '10px'\r\n\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\tlabel='Time'\r\n\t\t\t\t\t\t\t\t\tvalue={values.time}\r\n\t\t\t\t\t\t\t\t\tname='time'\r\n\t\t\t\t\t\t\t\t\tisError={(touched.time && errors.time) ||\r\n\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addRegionState.error['error']['time'])}\r\n\r\n\t\t\t\t\t\t\t\t\terrorString={(touched.time && errors.time) ||\r\n\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addRegionState.error['error']['time'])}\r\n\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\tsetFieldTouched('time');\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t<div className='dubbleRowInputs'>\r\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\t\t\t\tCountry\r\n            </h3>\r\n\t\t\t\t\t\t\t\t\t<Select\r\n\t\t\t\t\t\t\t\t\t\tnotFoundContent={<Empty description='No Country Found' image={Empty.PRESENTED_IMAGE_SIMPLE} />}\r\n\t\t\t\t\t\t\t\t\t\tshowSearch\r\n\t\t\t\t\t\t\t\t\t\tstyle={{ width: '100%' }}\r\n\t\t\t\t\t\t\t\t\t\tplaceholder='Select a Country'\r\n\t\t\t\t\t\t\t\t\t\toptionFilterProp='children'\r\n\t\t\t\t\t\t\t\t\t\tonChange={onChangeCountry}\r\n\t\t\t\t\t\t\t\t\t\tfilterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t{countryListState.done &&\r\n\t\t\t\t\t\t\t\t\t\t\tcountryListState.data.length > 0 &&\r\n\t\t\t\t\t\t\t\t\t\t\tcountryOptions.map((option) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\treturn <Option value={option.value}>{option.name}</Option>;\r\n\t\t\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t\t</Select>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\t\t\t\tCity\r\n            </h3>\r\n\t\t\t\t\t\t\t\t\t<Select\r\n\t\t\t\t\t\t\t\t\t\tnotFoundContent={<Empty description='First Select a Country' image={Empty.PRESENTED_IMAGE_SIMPLE} />}\r\n\t\t\t\t\t\t\t\t\t\tmode=\"multiple\"\r\n\t\t\t\t\t\t\t\t\t\tshowSearch\r\n\t\t\t\t\t\t\t\t\t\tstyle={{ width: '100%' }}\r\n\t\t\t\t\t\t\t\t\t\tplaceholder='Select a city'\r\n\t\t\t\t\t\t\t\t\t\toptionFilterProp='children'\r\n\t\t\t\t\t\t\t\t\t\tonChange={onChangeCity}\r\n\t\t\t\t\t\t\t\t\t\tfilterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t{cityListState.done &&\r\n\t\t\t\t\t\t\t\t\t\t\tcityListState.data.length > 0 &&\r\n\t\t\t\t\t\t\t\t\t\t\tcityOptions.map((option) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\treturn <Option value={option.value}>{option.name}</Option>;\r\n\t\t\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t\t</Select>\r\n\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\tmarginTop: '12px'\r\n\t\t\t\t\t\t\t}}></div>\r\n\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\t\tDelivery Charges\r\n            </h3>\r\n\r\n\t\t\t\t\t\t\t{deliveryChargeList.map(deliveryChargeItem => {\r\n\t\t\t\t\t\t\t\treturn <DeliveryCharge\r\n\t\t\t\t\t\t\t\t\tdeliveryChargeItem={deliveryChargeItem}\r\n\t\t\t\t\t\t\t\t\tdeliveryChargeList={deliveryChargeList} setdeliveryChargeList={setdeliveryChargeList} />\r\n\t\t\t\t\t\t\t})}\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\tmarginTop: '5px',\r\n\t\t\t\t\t\t\t}}></div>\r\n\t\t\t\t\t\t\t<Button size='middle'\r\n\t\t\t\t\t\t\t\tonClick={handleAddDeliveryCharge}\r\n\t\t\t\t\t\t\t\ttype=\"dashed\" icon={<PlusOutlined />}>Add Charge</Button>\r\n\r\n\t\t\t\t\t\t</Modal>\r\n\r\n\r\n\r\n\r\n\t\t\t\t\t</>\r\n\t\t\t\t)}\r\n\t\t</Formik>\r\n\r\n\r\n\r\n\r\n\t);\r\n};\r\n\r\nexport default AddNewRegion;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Modal, Select, notification } from 'antd';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { CheckCircleOutlined } from '@ant-design/icons';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport { useHandleFetch } from '../../hooks';\r\n\r\n\r\nconst { Option } = Select;\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n\tname: Yup.string()\r\n\t\t.label('Name')\r\n\t\t.required()\r\n\t\t.min(2, 'Name must have at least 2 characters '),\r\n\tpickUpLocation: Yup.string()\r\n\t\t.label('Pick up Location')\r\n\t\t.required()\r\n\t\t.min(2, 'Pick up Location must have at least 2 characters '),\r\n\ttime: Yup.string()\r\n\t\t.label('Time')\r\n\t\t.required()\r\n\t\t.min(2, 'Time must have at least 2 characters '),\r\n\r\n});\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t\tmessage: message || 'Tag Created',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t\tmessage: message || 'Something Went Wrong',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n};\r\n\r\n\r\ninterface Props {\r\n\tcustomer: any;\r\n\tsetvisible: any;\r\n\tvisible: any;\r\n\tregionList?: any;\r\n\tsetRegionList?: any;\r\n}\r\n\r\nconst QuickEdit = ({ customer, setvisible, visible, setRegionList, regionList }: Props) => {\r\n\tconst [updateRegionState, handleUpdateRegionFetch] = useHandleFetch({}, 'updateRegion');\r\n\r\n\r\n\tconst [selectedCountryValue, setselectedCountryValue] = useState('');\r\n\tconst [selectedCityValue, setselectedCityValue] = useState('');\r\n\r\n\tconst [countryOptions, setcountryOptions] = useState([]);\r\n\tconst [cityOptions, setcityOptions] = useState([]);\r\n\r\n\tconst [countryListState, handleCountryListFetch] = useHandleFetch(\r\n\t\t[],\r\n\t\t'countryList'\r\n\t);\r\n\r\n\tconst [cityListState, handleCityListFetch] = useHandleFetch([], 'cityList');\r\n\r\n\tconst [countryList, setCountryList] = useState([]);\r\n\tconst [cityList, setCityList] = useState([]);\r\n\r\n\r\n\r\n\tconst handleSubmit = async (values: any, actions: any) => {\r\n\t\t// console.log('selectedCityValue',selectedCityValue)\r\n\r\n\t\tconst addRegionRes = await handleUpdateRegionFetch({\r\n\r\n\t\t\tbody: {\r\n\t\t\t\tname: values.name,\r\n\t\t\t\tpickUpLocation: values.pickUpLocation,\r\n\t\t\t\ttime: values.time,\r\n\t\t\t\tcountry: selectedCountryValue,\r\n\t\t\t\tcity: selectedCityValue,\r\n\t\t\t\tcharge: {}\r\n\t\t\t},\r\n\t\t});\r\n\r\n\t\t// @ts-ignore\r\n\t\tif (addRegionRes && addRegionRes.status === 'ok') {\r\n\t\t\topenSuccessNotification();\r\n\r\n\t\t\tconst positionInTag = () => {\r\n\t\t\t\treturn regionList.map(item => item.id).indexOf(customer.id);\r\n\t\t\t}\r\n\r\n\t\t\tconst index = positionInTag();\r\n\r\n\t\t\t// @ts-ignore\r\n\t\t\tconst updatedItem = Object.assign({}, regionList[index], { ...addRegionRes });\r\n\t\t\tconst updateRegionList = [...regionList.slice(0, index), updatedItem, ...regionList.slice(index + 1)];\r\n\t\t\tsetRegionList(updateRegionList);\r\n\r\n\t\t}\r\n\t\telse {\r\n\t\t\topenErrorNotification();\r\n\t\t}\r\n\r\n\t\tactions.setSubmitting(false);\r\n\t\tsetvisible(false)\r\n\r\n\t};\r\n\r\n\r\n\r\n\r\n\tconst onChangeCity = (value) => {\r\n\t\tsetselectedCityValue(value);\r\n\t}\r\n\r\n\tconst onChangeCountry = (value) => {\r\n\t\tsetselectedCountryValue(value);\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tconst setCountries = async () => {\r\n\t\t\tconst CountryListRes = await handleCountryListFetch({});\r\n\r\n\t\t\t// @ts-ignore\r\n\t\t\tif (CountryListRes && CountryListRes.length > 0) {\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\tconst countryOptions = CountryListRes.map((country) => {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tvalue: country.name,\r\n\t\t\t\t\t\tname: country.name\r\n\t\t\t\t\t};\r\n\t\t\t\t});\r\n\t\t\t\tsetcountryOptions(countryOptions);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tsetCountries();\r\n\t}, []);\r\n\r\n\r\n\tuseEffect(() => {\r\n\t\tconst setCities = async () => {\r\n\t\t\tconst cityListRes = await handleCityListFetch({\r\n\t\t\t\turlOptions: {\r\n\t\t\t\t\tplaceHolders: {\r\n\t\t\t\t\t\tcountry: selectedCountryValue,\r\n\t\t\t\t\t},\r\n\t\t\t\t},\r\n\t\t\t});\r\n\r\n\t\t\t// @ts-ignore\r\n\t\t\tif (cityListRes && cityListRes.length > 0) {\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\tconst cityOptions = cityListRes.map((city) => {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tvalue: city.name,\r\n\t\t\t\t\t\tname: city.name\r\n\t\t\t\t\t};\r\n\t\t\t\t});\r\n\t\t\t\tsetcityOptions(cityOptions);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tsetCities();\r\n\t}, [selectedCountryValue]);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\tconst handleCancel = (e: any) => {\r\n\t\tsetvisible(false);\r\n\t};\r\n\r\n\r\n\r\n\tconst getisSubmitButtonDisabled = (values, isValid) => {\r\n\t\tif (!isValid ||\r\n\t\t\t!values.name ||\r\n\t\t\t!values.pickUpLocation ||\r\n\t\t\t!values.time) {\r\n\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\treturn (\r\n\t\t<Formik\r\n\t\t\tonSubmit={(values, actions) => handleSubmit(values, actions)}\r\n\t\t\tvalidationSchema={validationSchema}\r\n\t\t\tvalidateOnBlur={false}\r\n\t\t\tenableReinitialize={true}\r\n\t\t\tinitialValues={\r\n\t\t\t\t{ ...customer }\r\n\t\t\t}\r\n\t\t>\r\n\t\t\t{({\r\n\t\t\t\thandleChange,\r\n\t\t\t\tvalues,\r\n\t\t\t\thandleSubmit,\r\n\t\t\t\terrors,\r\n\t\t\t\tisValid,\r\n\t\t\t\tisSubmitting,\r\n\t\t\t\ttouched,\r\n\t\t\t\thandleBlur,\r\n\t\t\t\tsetFieldTouched,\r\n\t\t\t\thandleReset,\r\n\t\t\t}) => (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<Modal\r\n\t\t\t\t\t\t\ttitle=\"Quick Edit\"\r\n\t\t\t\t\t\t\tvisible={visible}\r\n\t\t\t\t\t\t\tonOk={(e: any) => handleSubmit(e)}\r\n\t\t\t\t\t\t\tonCancel={handleCancel}\r\n\t\t\t\t\t\t\tokText='Update'\r\n\t\t\t\t\t\t\tokButtonProps={{\r\n\t\t\t\t\t\t\t\tloading: isSubmitting,\r\n\t\t\t\t\t\t\t\thtmlType: \"submit\",\r\n\t\t\t\t\t\t\t\tdisabled: getisSubmitButtonDisabled(values, isValid)\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\tbodyStyle={{\r\n\t\t\t\t\t\t\t\tmargin: '0',\r\n\t\t\t\t\t\t\t\tpadding: '10px'\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\r\n\r\n\t\t\t\t\t\t\t<div className='dubbleRowInputs'>\r\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\tlabel='Name'\r\n\t\t\t\t\t\t\t\t\t\tvalue={values.name}\r\n\t\t\t\t\t\t\t\t\t\tname='name'\r\n\t\t\t\t\t\t\t\t\t\tisError={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateRegionState.error['error']['name'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\terrorString={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateRegionState.error['error']['name'])}\r\n\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('name');\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\tlabel='Pick up Location'\r\n\t\t\t\t\t\t\t\t\t\tvalue={values.pickUpLocation}\r\n\t\t\t\t\t\t\t\t\t\tname='pickUpLocation'\r\n\t\t\t\t\t\t\t\t\t\tisError={(touched.pickUpLocation && errors.pickUpLocation) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateRegionState.error['error']['pickUpLocation'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\terrorString={(touched.pickUpLocation && errors.pickUpLocation) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateRegionState.error['error']['pickUpLocation'])}\r\n\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('pickUpLocation');\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\tmarginRight: '10px'\r\n\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\tlabel='Time'\r\n\t\t\t\t\t\t\t\t\tvalue={values.time}\r\n\t\t\t\t\t\t\t\t\tname='time'\r\n\t\t\t\t\t\t\t\t\tisError={(touched.time && errors.time) ||\r\n\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateRegionState.error['error']['time'])}\r\n\r\n\t\t\t\t\t\t\t\t\terrorString={(touched.time && errors.time) ||\r\n\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateRegionState.error['error']['time'])}\r\n\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\tsetFieldTouched('time');\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t<div className='dubbleRowInputs'>\r\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\t\t\t\tCountry\r\n            </h3>\r\n\t\t\t\t\t\t\t\t\t<Select\r\n\t\t\t\t\t\t\t\t\t\tshowSearch\r\n\t\t\t\t\t\t\t\t\t\tstyle={{ width: '100%' }}\r\n\t\t\t\t\t\t\t\t\t\tplaceholder='Select a Country'\r\n\t\t\t\t\t\t\t\t\t\toptionFilterProp='children'\r\n\t\t\t\t\t\t\t\t\t\tdefaultValue={customer && customer.country}\r\n\t\t\t\t\t\t\t\t\t\tonChange={onChangeCountry}\r\n\t\t\t\t\t\t\t\t\t\tfilterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t{countryListState.done &&\r\n\t\t\t\t\t\t\t\t\t\t\tcountryListState.data.length > 0 &&\r\n\t\t\t\t\t\t\t\t\t\t\tcountryOptions.map((option) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\treturn <Option value={option.value}>{option.name}</Option>;\r\n\t\t\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t\t</Select>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\t\t\t\tCity\r\n            </h3>\r\n\t\t\t\t\t\t\t\t\t<Select\r\n\t\t\t\t\t\t\t\t\t\tshowSearch\r\n\t\t\t\t\t\t\t\t\t\tstyle={{ width: '100%' }}\r\n\t\t\t\t\t\t\t\t\t\tplaceholder='Select a city'\r\n\t\t\t\t\t\t\t\t\t\toptionFilterProp='children'\r\n\t\t\t\t\t\t\t\t\t\tdefaultValue={customer && customer.city}\r\n\t\t\t\t\t\t\t\t\t\tonChange={onChangeCity}\r\n\t\t\t\t\t\t\t\t\t\tfilterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t{cityListState.done &&\r\n\t\t\t\t\t\t\t\t\t\t\tcityListState.data.length > 0 &&\r\n\t\t\t\t\t\t\t\t\t\t\tcityOptions.map((option) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\treturn <Option value={option.value}>{option.name}</Option>;\r\n\t\t\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t\t</Select>\r\n\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\tmarginTop: '12px'\r\n\t\t\t\t\t\t\t}}></div>\r\n\r\n\t\t\t\t\t\t</Modal>\r\n\r\n\t\t\t\t\t</>\r\n\t\t\t\t)}\r\n\t\t</Formik>\r\n\t);\r\n};\r\n\r\n\r\nexport default QuickEdit;\r\n","import React, {useState, useEffect} from 'react';\r\nimport {withRouter} from 'react-router-dom';\r\nimport { Table, Badge, Menu, Dropdown, Space, Tag,Button, Input,Tooltip, Modal, notification, Popconfirm } from 'antd';\r\nimport { PlusOutlined, EditOutlined, DeleteOutlined,EditFilled,CheckCircleOutlined } from '@ant-design/icons';\r\n\r\n\r\n/// import hooks\r\nimport { useFetch, useHandleFetch } from \"../../hooks\";\r\n\r\n// import components\r\nimport { DataTableSkeleton } from \"../../components/Placeholders\";\r\nimport AddNewRegion from \"./AddNewRegion\";\r\nimport QuickEdit from \"./QuickEdit\";\r\nimport Empty from \"../../components/Empty\";\r\n\r\nconst { Column, ColumnGroup } = Table;\r\nconst { Search } = Input;\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t  message: message || 'Tag Created',\r\n\t  description: '',\r\n\t  icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n  };\r\n\r\n\r\n  const openErrorNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t  message: message || 'Something Went Wrong',\r\n\t  description: '',\r\n\t  icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n  };\r\n\r\n\r\n\r\n\r\n\r\ninterface myTableProps {\r\n  data: any; \r\n  setRegionList: any; \r\n} \r\n\r\n\r\nconst MyTable = ({data,setRegionList}: myTableProps) => {\r\n    const [visible,setvisible] = useState(false);   \r\n    const [activeCategoryForEdit,setactiveCategoryForEdit] = useState(false); \r\n    const [deleteRegionState, handleDeleteRegioFetch] = useHandleFetch({}, 'deleteRegion');\r\n\r\n\r\n      const handleDeleteRegion = async (id) => {\r\n        const deleteRegionRes = await handleDeleteRegioFetch({\r\n          urlOptions: {\r\n            placeHolders: {\r\n              id,\r\n            }\r\n            }\r\n          });\r\n\r\n            // @ts-ignore\r\n\t\t  if(deleteRegionRes && deleteRegionRes.status === 'ok'){\r\n\t\t\t  openSuccessNotification('Deleted Region'); \r\n\t\t\t  const newRegionList =  data.filter(item => item.id !== id);\r\n\t\t\t  setRegionList(newRegionList); \r\n\t\t  }\r\n\r\n      }\r\n      \r\n\r\n    return (\r\n        <>\r\n        <Table \r\n        // expandable={{\r\n        //     expandedRowRender: record => <p style={{ margin: 0 }}>{record.name}</p>,\r\n        //     rowExpandable: record => record.name !== 'Not Expandable',\r\n        //   }}\r\n        // bordered={true}\r\n        size='small'\r\n        // pagination={false}\r\n        dataSource={data}\r\n        >\r\n         \r\n          <Column\r\n           title=\"Name\" \r\n           dataIndex=\"name\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n         \r\n            />\r\n\r\n\r\n<Column\r\n           title=\"Pick up Location\" \r\n           dataIndex=\"pickUpLocation\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n         \r\n            />\r\n\r\n\r\n\r\n\r\n<Column\r\n           title=\"Country\" \r\n           dataIndex=\"countryName\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n         \r\n            />\r\n\r\n\r\n<Column\r\n           title=\"City\" \r\n           dataIndex=\"city\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n         \r\n            />\r\n\r\n<Column\r\n           title=\"Time\" \r\n           dataIndex=\"time\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n         \r\n            />\r\n\r\n\r\n<Column\r\n           title=\"Charge\" \r\n           dataIndex=\"time\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n         \r\n            />\r\n\r\n\r\n          {/* <Column \r\n          \r\n          className='classnameofthecolumn'\r\n\r\n          title=\"Product\" dataIndex=\"product\" key=\"product\" /> */}\r\n\r\n          {/* <Column \r\n          \r\n          className='classnameofthecolumn'\r\n\r\n          title=\"Sub Category\" dataIndex=\"subCategory\" key=\"subCategory\" /> */}\r\n        \r\n        {/* <Column\r\n          title=\"Tags\"\r\n          dataIndex=\"tags\"\r\n          key=\"tags\"\r\n          render={tags => (\r\n            <>\r\n              {tags.map((tag : any) => (\r\n                <Tag color=\"blue\" key={tag}>\r\n                  {tag}\r\n                </Tag>\r\n              ))}\r\n            </>\r\n          )}\r\n        /> */}\r\n        <Column\r\n        \r\n        className='classnameofthecolumn'\r\n          title=\"\"\r\n          key=\"action\"\r\n          align='right'\r\n          render={(text, record : any) => (\r\n            <Space size=\"middle\">\r\n            \r\n            <a href='##'>\r\n               <Tooltip placement=\"top\" title='Quick Edit Region'>\r\n              <span className='iconSize' onClick={() => {\r\n                setvisible(true)\r\n                setactiveCategoryForEdit(record); \r\n              }}> \r\n              <EditOutlined />\r\n            \r\n              </span>\r\n               </Tooltip>\r\n</a>\r\n\r\n\r\n   \r\n               <Popconfirm \r\n               \r\n               onConfirm={() => handleDeleteRegion(record.id)}\r\n               title=\"Are you sure？\" okText=\"Yes\" cancelText=\"No\">\r\n           \r\n           <span \r\n             className='iconSize iconSize-danger'\r\n             > \r\n             <DeleteOutlined/>\r\n            </span>\r\n       \r\n           </Popconfirm>\r\n\r\n\r\n             \r\n             \r\n            </Space>\r\n          )}\r\n        />\r\n      </Table>\r\n\r\n    \r\n\r\n    {activeCategoryForEdit &&   <QuickEdit \r\n    setvisible={setvisible}\r\n    visible={visible}\r\n    customer={activeCategoryForEdit}\r\n    regionList={data}\r\n    setRegionList={setRegionList}\r\n\r\n    />\r\n\r\n    }\r\n    \r\n    \r\n    </>\r\n    )\r\n}\r\n\r\n\r\ninterface Props {\r\n    history: any; \r\n}\r\n\r\nconst CustomerList = ({history}: Props) => {\r\n\r\n    const [regionList,setRegionList] = useState([]); \r\n\r\n    const [regionState, handleRegionListFetch] = useHandleFetch({}, 'regionList');\r\n  \r\n  \r\n    useEffect(()=>{\r\n     const setRegions = async () => {\r\n       const regions = await handleRegionListFetch({}); \r\n       // @ts-ignore\r\n       setRegionList(regions); \r\n     }\r\n     setRegions(); \r\n    },[])\r\n\r\n\r\n\r\n\r\n  \r\n  const [addNewCategoryVisible,setAddNewCategoryVisible] = useState(false);   \r\n\r\n  console.log('regionState',regionState)\r\n\r\n\r\n  const handleSearch = (value) => {\r\n    if(regionState.data.length > 0 ){\r\n      const newTagList = regionState.data.filter(item => item.name.toLowerCase().includes(value.toLowerCase())); \r\n      setRegionList(newTagList); \r\n    }\r\n     \r\n  }\r\n\r\n\r\n\r\n\treturn (\r\n\t\t<>\r\n    {/* <h2 className='containerPageTitle'>\r\n      Categories\r\n    </h2> */}\r\n    <div className='categoryListContainer'>\r\n            <div className='categoryListContainer__header'>\r\n           \r\n\r\n          <div className='categoryListContainer__header-searchBar'>\r\n          <h2 className='categoryListContainer__header-title'>\r\n            Regions \r\n            </h2>\r\n\r\n\r\n          <Search\r\n            enterButton={false}\r\n            className='searchbarClassName'\r\n          placeholder=\"search regions..\"\r\n          onSearch={value => handleSearch(value)}\r\n          // style={{ width: 300 }}\r\n        />\r\n          </div>\r\n            <Button\r\n          // type=\"primary\"\r\n          className='btnPrimaryClassNameoutline'\r\n          icon={<PlusOutlined />}\r\n          onClick={() => setAddNewCategoryVisible(true)}\r\n        >\r\n        Add New\r\n            \r\n            </Button>\r\n            </div>\r\n\r\n            <div className='categoryListContainer__afterHeader'>\r\n            {/* <Search\r\n      placeholder=\"search categories..\"\r\n      size=\"large\"\r\n      onSearch={value => console.log(value)}\r\n      style={{ width: 300 }}\r\n    /> */}\r\n            </div>\r\n\r\n     \r\n\t\t\t\r\n\t\t\t<div className='categoryListContainer__categoryList'>\r\n        {regionState.done && regionList.length > 0 && <MyTable \r\n        setRegionList={setRegionList}\r\n        data={regionList} />}\r\n        {regionState.isLoading && <DataTableSkeleton />}\r\n\r\n        {regionState.done && !(regionList.length > 0) && (\r\n\t\t<Empty title='No Region found'  />\r\n\t\t)}\r\n        \r\n\t\t\t</div>\r\n\t\t</div>\r\n\r\n\r\n{regionState.done && \r\n    <AddNewRegion \r\n          addNewCategoryVisible={addNewCategoryVisible} \r\n          setAddNewCategoryVisible={setAddNewCategoryVisible}\r\n          regionList={regionState.data}\r\n          setRegionList={setRegionList}\r\n           />}\r\n\r\n      \r\n\r\n        \r\n    </>\r\n\t);\r\n};\r\n\r\nexport default withRouter(CustomerList);\r\n","import React, { useEffect, useState } from 'react'\r\n\r\n\r\n// import components \r\nimport TextArea from \"../../components/Field/TextArea\";\r\n\r\n// import lib \r\nimport { Select, Button, notification } from 'antd';\r\n\r\nimport {\r\n    SendOutlined,\r\n    CheckCircleOutlined,\r\n    InfoCircleFilled\r\n} from '@ant-design/icons';\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'SMS sent successfully',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n    notification.error({\r\n        message: message || 'Something Went Wrong',\r\n        description: '',\r\n        icon: <InfoCircleFilled style={{ color: 'rgb(241, 67, 67)' }} />,\r\n    });\r\n};\r\n\r\n\r\n\r\n\r\n\r\ninterface Props {\r\n\r\n}\r\n\r\nconst SendCustomSMS = (props: Props) => {\r\n    const [text, setText] = useState('');\r\n    const [recipient, setrecipient] = useState([]);\r\n\r\n\r\n    function handleChange(value) {\r\n        const recipient = `${value}`.split(',');\r\n        setrecipient(recipient)\r\n    }\r\n\r\n\r\n    const handleMsgSend = () => {\r\n\r\n    }\r\n\r\n\r\n    const getMsgSendIsDisabled = () => {\r\n        return !text || !recipient[0]\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div style={{\r\n                width: '450px'\r\n            }}>\r\n                <h3 className='inputFieldLabel'>\r\n                    Recipient\r\n                </h3>\r\n\r\n                <Select\r\n                    style={{\r\n                        height: '30px',\r\n                        borderRadius: '3px',\r\n                        borderColor: '#eee !important',\r\n                        width: '100%'\r\n                    }}\r\n                    mode=\"tags\" onChange={handleChange} tokenSeparators={[',']}>\r\n                </Select>\r\n\r\n                <div style={{\r\n                    marginTop: \"15px\"\r\n                }}></div>\r\n                <TextArea\r\n                    label='Text'\r\n                    value={text}\r\n                    name='text'\r\n                    onChange={(e: any) => {\r\n                        setText(e.target.value);\r\n                    }}\r\n                />\r\n\r\n                <Button\r\n\r\n                    style={{\r\n                        marginTop: '10px'\r\n                    }}\r\n                    onClick={handleMsgSend}\r\n                    disabled={getMsgSendIsDisabled()}\r\n\r\n                    className='btnAddToPrice'\r\n                >\r\n                    Send <span style={{\r\n                        marginLeft: '10px'\r\n                    }}> <SendOutlined /></span>\r\n                </Button>\r\n            </div>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SendCustomSMS\r\n","import React from 'react';\r\n\r\n// import components \r\nimport TextArea from \"../../components/Field/TextArea\";\r\nimport Input from \"../../components/Field/Input\";\r\n\r\n\r\n// import lib \r\nimport { Button, notification } from 'antd';\r\n\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\nimport {\r\n    CheckCircleOutlined,\r\n    InfoCircleFilled\r\n} from '@ant-design/icons';\r\n\r\n\r\n// import hooks\r\nimport { useHandleFetch } from \"../../hooks\";\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'SMS sent successfully',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n    notification.error({\r\n        message: message || 'Something Went Wrong',\r\n        description: '',\r\n        icon: <InfoCircleFilled style={{ color: 'rgb(241, 67, 67)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst initialValues = {\r\n    name: '',\r\n    description: '',\r\n}\r\n\r\n\r\ninterface Props {\r\n\r\n}\r\n\r\nconst SMSConfiguaration = (props: Props) => {\r\n    const [configureSMSStata, handleconfigureSMSFetch] = useHandleFetch({}, 'configureSMS');\r\n\r\n\r\n    const handleSubmit = async (values: any, actions: any) => {\r\n        const addTagRes = await handleconfigureSMSFetch({\r\n            urlOptions: {\r\n                placeHolders: {\r\n                    id: values.id,\r\n                }\r\n            },\r\n            body: {\r\n                name: values.name.trim(),\r\n                description: values.description,\r\n            },\r\n        });\r\n\r\n        // @ts-ignore\r\n        if (addTagRes && addTagRes.status === 'ok') {\r\n            openSuccessNotification();\r\n\r\n\r\n            actions.resetForm();\r\n        }\r\n        else {\r\n            openErrorNotification();\r\n        }\r\n\r\n\r\n        actions.setSubmitting(false);\r\n\r\n    };\r\n\r\n\r\n    const getisSubmitButtonDisabled = (values, isValid) => {\r\n        if (!values.name || !isValid) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    return (\r\n        <Formik\r\n            onSubmit={(values, actions) => handleSubmit(values, actions)}\r\n            // validationSchema={validationSchema}\r\n            validateOnBlur={false}\r\n            enableReinitialize={true}\r\n            initialValues={\r\n                { ...initialValues }\r\n            }\r\n        >\r\n            {({\r\n                handleChange,\r\n                values,\r\n                handleSubmit,\r\n                errors,\r\n                isValid,\r\n                isSubmitting,\r\n                touched,\r\n                handleBlur,\r\n                setFieldTouched,\r\n                handleReset,\r\n            }) => (\r\n                    <>\r\n                        <Input\r\n                            label='Title'\r\n                            value={values.name}\r\n                            name='name'\r\n                            isError={(touched.name && errors.name) ||\r\n                                (!isSubmitting && configureSMSStata.error['error']['name'])}\r\n\r\n                            errorString={(touched.name && errors.name) ||\r\n                                (!isSubmitting && configureSMSStata.error['error']['name'])}\r\n                            onChange={(e: any) => {\r\n                                handleChange(e);\r\n                                setFieldTouched('name');\r\n                            }}\r\n                        />\r\n                        <TextArea\r\n                            label='Description'\r\n                            value={values.description}\r\n                            name='description'\r\n                            isError={(touched.description && errors.description) ||\r\n                                (!isSubmitting && configureSMSStata.error['error']['description'])}\r\n\r\n                            errorString={(touched.description && errors.description) ||\r\n                                (!isSubmitting && configureSMSStata.error['error']['description'])}\r\n                            onChange={(e: any) => {\r\n                                handleChange(e);\r\n                                setFieldTouched('description');\r\n                            }}\r\n                        />\r\n                    </>\r\n                )}\r\n        </Formik>\r\n\r\n    )\r\n}\r\n\r\nexport default SMSConfiguaration\r\n","import React from 'react';\r\n\r\n\r\n// import lib\r\nimport { Upload, message, Switch, Select, Button, notification, Modal, Tabs } from 'antd';\r\n\r\n// import components \r\nimport SendCustomSMS from \"./SendCustomSMS\";\r\nimport SMSConfiguaration from \"./SMSConfiguaration\";\r\n\r\n\r\nconst { TabPane } = Tabs;\r\n\r\n\r\n\r\ninterface Props {\r\n\r\n}\r\n\r\nconst Sms = (props: Props) => {\r\n    return (\r\n        <>\r\n            <div className='siteInfoContainer'>\r\n\r\n                <Tabs defaultActiveKey=\"1\" >\r\n                    <TabPane tab=\"Send custom SMS\" key=\"1\">\r\n                        <SendCustomSMS />\r\n                    </TabPane>\r\n\r\n                    <TabPane tab=\"SMS configuaration\" key=\"2\">\r\n                        <SMSConfiguaration />\r\n                    </TabPane>\r\n\r\n                </Tabs>\r\n\r\n            </div>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Sms\r\n","import Sms from \"./Sms\";\r\nexport default Sms; ","import React from 'react'\r\n\r\n\r\n// import pages\r\nimport { Overview } from '../../pages/overview';\r\nimport { CategoryList, NewCategoryDetail } from '../../pages/category';\r\nimport { ProductBundleDetail, ProductBundleList } from '../../pages/productBundle';\r\nimport { BrandList, AddNewBrand, NewBrandDetail } from '../../pages/brand';\r\nimport { ProductList, NewProductDetail } from '../../pages/product';\r\nimport { TagList, AddNewTag, NewTagDetail } from '../../pages/tag';\r\nimport { CouponList, CouponDetail } from '../../pages/coupon';\r\nimport { CustomerList, CustomerDetail } from '../../pages/customer';\r\nimport { PagesList, AddNewPage } from '../../pages/pages';\r\nimport { AttributeList } from '../../pages/attribute';\r\nimport { OrderList, AddNewOrder, OrderDetail } from '../../pages/order';\r\nimport { Component, ManageThemes, Image, Invoice, SiteInfo } from '../../pages/settings';\r\nimport { Delivery } from '../../pages/delivery';\r\nimport Sms from '../../pages/sms';\r\n\r\n\r\n// import Login from '../../pages/auth/login';\r\n\r\n\r\n// import libraries\r\nimport { Layout } from 'antd';\r\nimport { Switch, Route, Redirect } from 'react-router-dom';\r\n\r\n\r\n\r\nconst { Content } = Layout;\r\n\r\ninterface Props {\r\n\r\n}\r\n\r\nconst ContentComponent = (props: Props) => {\r\n    return (\r\n        <Content\r\n            hasSider={true}\r\n            style={{\r\n                backgroundColor: '#fff',\r\n                paddingTop: '20px'\r\n            }}\r\n        >\r\n            <Switch>\r\n                <Route\r\n                    exact\r\n                    path='/'\r\n                    render={() => <Redirect to='/admin/overview' />}\r\n                />\r\n\r\n                <Route\r\n                    exact\r\n                    path='/admin'\r\n                    render={() => <Redirect to='/admin/overview' />}\r\n                />\r\n\r\n                <Route path='/admin/overview' exact>\r\n                    <Overview />\r\n                </Route>\r\n                <Route path='/admin/category' exact>\r\n                    <CategoryList />\r\n                </Route>\r\n                <Route path='/admin/category/:id' exact>\r\n                    <NewCategoryDetail />\r\n                </Route>\r\n                {/* <Route path='/admin/category/:name' exact>\r\n                    <CategoryDetail />\r\n                </Route> */}\r\n\r\n                {/* CategoryDetail */}\r\n                <Route path='/admin/brand/new' exact>\r\n                    <AddNewBrand />\r\n                </Route>\r\n                <Route path='/admin/brand' exact>\r\n                    <BrandList />\r\n                </Route>\r\n                <Route path='/admin/brand/:id' exact>\r\n                    <NewBrandDetail />\r\n                </Route>\r\n                <Route path='/admin/product' exact>\r\n                    <ProductList />\r\n                </Route>\r\n                <Route path='/admin/product/:id' exact>\r\n                    <NewProductDetail />\r\n                </Route>\r\n\r\n                <Route path='/admin/bundle' exact>\r\n                    <ProductBundleList />\r\n                </Route>\r\n\r\n                <Route path='/admin/bundle/:id' exact>\r\n                    <ProductBundleDetail />\r\n                </Route>\r\n\r\n                <Route path='/admin/coupon' exact>\r\n                    <CouponList />\r\n                </Route>\r\n\r\n                <Route path='/admin/coupon/:id' exact>\r\n                    <CouponDetail />\r\n                </Route>\r\n\r\n                {/* <Route path='/product/new' exact>\r\n                     <AddNewProduct />\r\n                   </Route> */}\r\n                <Route path='/admin/tag' exact>\r\n                    <TagList />\r\n                </Route>\r\n                <Route path='/admin/tag/new' exact>\r\n                    <AddNewTag />\r\n                </Route>\r\n                <Route path='/admin/tag/:id' exact>\r\n                    <NewTagDetail />\r\n                </Route>\r\n                <Route path='/admin/attribute' exact>\r\n                    <AttributeList />\r\n                </Route>\r\n                <Route path='/admin/order' exact>\r\n                    <OrderList />\r\n                </Route>\r\n                <Route path='/admin/order/new' exact>\r\n                    <AddNewOrder />\r\n                </Route>\r\n                <Route path='/admin/order/:id' exact>\r\n                    <OrderDetail />\r\n                </Route>\r\n                <Route path='/admin/customer' exact>\r\n                    <CustomerList />\r\n                </Route>\r\n                <Route path='/admin/customer/:id' exact>\r\n                    <CustomerDetail />\r\n                </Route>\r\n                <Route path='/admin/page' exact>\r\n                    <PagesList />\r\n                </Route>\r\n                <Route path='/admin/delivery' exact>\r\n                    <Delivery />\r\n                </Route>\r\n                <Route path='/admin/page/new' exact>\r\n                    <AddNewPage />\r\n                </Route>\r\n                <Route path='/admin/settings/components' exact>\r\n                    <Component />\r\n                </Route>\r\n                <Route path='/admin/settings/image' exact>\r\n                    <Image />\r\n                </Route>\r\n                <Route path='/admin/settings/themes' exact>\r\n                    <ManageThemes />\r\n                </Route>\r\n                <Route path='/admin/settings/invoice' exact>\r\n                    <Invoice />\r\n                </Route>\r\n                <Route path='/admin/settings/siteInfo' exact>\r\n                    <SiteInfo />\r\n                </Route>\r\n                <Route path='/admin/sms' exact>\r\n                    <Sms />\r\n                </Route>\r\n            </Switch>\r\n        </Content>\r\n    )\r\n}\r\n\r\nexport default ContentComponent\r\n","import Content from \"./Content\";\r\nexport default Content; ","import React from 'react';\n\n// import pages\nimport Login from './pages/auth/login';\n\n\n\n// import layouts\nimport Sider from \"./layout/sider\";\nimport Header from './layout/header';\nimport Content from './layout/content';\n// import Footer from './layout/footer';\n\n// import libraries\nimport { Layout } from 'antd';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\n\n\nconst App = () => {\n\treturn (\n\t\t<Router>\n\t\t\t<Switch>\n\t\t\t\t<Route path='/admin/login' exact>\n\t\t\t\t\t<Login />\n\t\t\t\t</Route>\n\t\t\t</Switch>\n\t\t\t<Switch>\n\n\t\t\t\t<Layout style={{ minHeight: '100vh' }}>\n\t\t\t\t\t<Header />\n\n\t\t\t\t\t<Layout className='site-layout'>\n\t\t\t\t\t\t<Sider />\n\t\t\t\t\t\t<Content />\n\t\t\t\t\t</Layout>\n\t\t\t\t\t{/* <Footer /> */}\n\t\t\t\t</Layout>\n\t\t\t</Switch>\n\t\t</Router>\n\t);\n};\n\nexport default App;\n","export function actionShouldBlock( meta ) {\r\n    return !meta || !meta.async || !meta.blocking;\r\n}\r\n\r\nexport function actionFinished ( type ) {\r\n    return type.includes( \"_COMPLETED\" ) || type.includes( \"_FAILED\" );\r\n}\r\n","import * as utils from \"./utils\";\r\n\r\nconst busyReducer = ( state = 0, action ) => {\r\n    if ( utils.actionShouldBlock( action.meta ) ) {\r\n        return state;\r\n    }\r\n    if ( utils.actionFinished( action.type ) ) {\r\n        return state - 1;\r\n    }\r\n    return state + 1;\r\n};\r\n\r\nexport default busyReducer;\r\n","import reducer from \"./reducers\";\r\n\r\nexport default reducer;\r\n","export function productPositionInCart(cart, product) {\r\n  return cart.map(item => item.product.id).indexOf(product.id);\r\n}\r\n\r\nexport function newCartItem(product, quantity, isSelectedForCheckout) {\r\n  return {\r\n    product,\r\n    quantity,\r\n    isSelectedForCheckout,\r\n  };\r\n}\r\n","export default ( initialState ) => ( reducerMap ) => ( state = initialState, action ) => {\r\n    const reducer = reducerMap[ action.type ];\r\n    return reducer ? reducer( state, action ) : state;\r\n};\r\n","import isomorphicFetch from 'isomorphic-fetch';\r\n\r\nexport default (url, method, body) => {\r\n\tconst options = {\r\n\t\tmethod,\r\n\t\theaders: requestHeaders(),\r\n\t\tbody: method !== 'GET' ? JSON.stringify(body) : null\r\n\t};\r\n\r\n\treturn isomorphicFetch(url, options).then(res =>\r\n\t\tparseStatus(res.status, res.json())\r\n\t);\r\n};\r\n\r\nfunction parseStatus(status, res) {\r\n\treturn new Promise((resolve, reject) => {\r\n\t\tif (status >= 200 && status < 300) {\r\n\t\t\tres.then(response => resolve(response));\r\n\t\t} else {\r\n\t\t\tres.then(response => reject({ status, response }));\r\n\t\t}\r\n\t});\r\n}\r\n\r\nfunction requestHeaders() {\r\n\treturn {\r\n\t\tAccept: 'application/json',\r\n\t\t'Content-Type': 'application/json'\r\n\t};\r\n}\r\n","export function getCartItemQuantity(cart, id) {\r\n  return cart.find((item) => item.product.id === id).quantity;\r\n}\r\n\r\nexport const getTotalPriceOfCartItems = (cartItems) => {\r\n  if (!cartItems.length > 0) {\r\n    return 0;\r\n  }\r\n\r\n  const prices = cartItems.map((cartItem) => {\r\n    return cartItem.quantity * parseInt(cartItem.product['price']) || 0;\r\n  });\r\n\r\n  const totalPrice = prices.reduce((a, b) => {\r\n    return a + b;\r\n  }, 0);\r\n  return totalPrice;\r\n};\r\n","import reducer from \"./reducers\";\r\n\r\nimport * as cartOperations from \"./operations\";\r\nimport * as cartSelectors from \"./selectors\";\r\n\r\nexport {\r\n    cartOperations,\r\n    cartSelectors,\r\n};\r\n\r\nexport default reducer;\r\n","import * as types from './types';\r\nimport * as utils from './utils';\r\nimport { createReducer } from '../../utils';\r\n\r\n/* State shape\r\n[\r\n    {\r\n        product,\r\n        quantity,\r\n    }\r\n]\r\n*/\r\n\r\nconst initialState = [];\r\n\r\nconst cartReducer = createReducer(initialState)({\r\n  [types.TOGGLE]: (state, action) => {\r\n    const { product, quantity, isSelectedForCheckout } = action.payload;\r\n    const index = utils.productPositionInCart(state, product);\r\n    if (index === -1) {\r\n      return [\r\n        utils.newCartItem(product, quantity, isSelectedForCheckout),\r\n        ...state,\r\n      ];\r\n    }\r\n\r\n    const tempArrayWithOutOldProduct = state.filter(\r\n      (item) => item.product.id !== product.id\r\n    );\r\n\r\n    return tempArrayWithOutOldProduct;\r\n  },\r\n\r\n  [types.ADD_PRODUCTS_TO_CART]: (state, action) => {\r\n    const { cartItems } = action.payload;\r\n\r\n    if (cartItems.length > 0) {\r\n      return cartItems;\r\n    } else {\r\n      return [...state];\r\n    }\r\n  },\r\n\r\n  [types.SELECT_PRODUCT_FOR_CHECKOUT]: (state, action) => {\r\n    const { product } = action.payload;\r\n\r\n    const index = utils.productPositionInCart(state, product.product);\r\n    if (index === -1) {\r\n      return [...state, { ...product, isSelectedForCheckout: true }];\r\n    } else if (index !== -1 && !product.isSelectedForCheckout) {\r\n      const tempArrayWithOutOldProduct = state.filter(\r\n        (item) => item.product.id !== product.product.id\r\n      );\r\n\r\n      return [\r\n        ...tempArrayWithOutOldProduct,\r\n        { ...product, isSelectedForCheckout: true },\r\n      ];\r\n    }\r\n\r\n    const tempArrayWithOutOldProduct = state.filter(\r\n      (item) => item.product.id !== product.product.id\r\n    );\r\n\r\n    return [\r\n      ...tempArrayWithOutOldProduct,\r\n      { ...product, isSelectedForCheckout: false },\r\n    ];\r\n  },\r\n\r\n  [types.CHANGE_QUANTITY]: (state, action) => {\r\n    const { product, quantity } = action.payload;\r\n    const index = utils.productPositionInCart(state, product);\r\n\r\n    const updatedItem = Object.assign({}, state[index], { quantity });\r\n    return [...state.slice(0, index), updatedItem, ...state.slice(index + 1)];\r\n  },\r\n  [types.REMOVE]: (state, action) => {\r\n    const { product } = action.payload;\r\n    const index = utils.productPositionInCart(state, product);\r\n    return [...state.slice(0, index), ...state.slice(index + 1)];\r\n  },\r\n  [types.CLEAR]: () => [],\r\n});\r\n\r\nexport default cartReducer;\r\n","export const SET_CART = 'cart/SET';\r\nexport const TOGGLE = 'cart/TOGGLE';\r\nexport const ADD_PRODUCTS_TO_CART = 'cart/ADD_PRODUCTS_TO_CART';\r\nexport const SELECT_PRODUCT_FOR_CHECKOUT = 'wishList/SELECT_PRODUCT_FOR_CHECKOUT';\r\nexport const CHANGE_QUANTITY = 'cart/CHANGE_QUANTITY';\r\nexport const REMOVE = 'cart/REMOVE';\r\nexport const CLEAR = 'cart/CLEAR';\r\n","export function productPositionInWishList(wishList, productId) {\r\n  return wishList.map(item => item).indexOf(productId);\r\n}\r\n","import reducer from './reducers';\r\n\r\nimport * as wishListOperations from './operations';\r\nimport * as wishListSelectors from './selectors';\r\n\r\nexport { wishListOperations, wishListSelectors };\r\n\r\nexport default reducer;\r\n","import * as types from './types';\r\nimport * as utils from './utils';\r\nimport { createReducer } from '../../utils';\r\n\r\n/* State shape\r\n[\r\n    {\r\n        product\r\n    }\r\n]\r\n*/\r\n\r\nconst initialState = [];\r\n\r\nconst wishListReducer = createReducer(initialState)({\r\n  [types.TOGGLE]: (state, action) => {\r\n    const { productId } = action.payload;\r\n\r\n    const index = utils.productPositionInWishList(state, productId);\r\n    if (index === -1) {\r\n      return [...state, productId];\r\n    }\r\n\r\n    const tempArrayWithOutOldProduct = state.filter(\r\n      (item) => item !== productId\r\n    );\r\n\r\n    return tempArrayWithOutOldProduct;\r\n  },\r\n  [types.ADD_WISHLIST]: (state, action) => {\r\n    const wishlist = action.payload;\r\n    return [...wishlist];\r\n  },\r\n\r\n  [types.REMOVE]: (state, action) => {\r\n    const { productId } = action.payload;\r\n    const index = utils.productPositionInWishList(state, productId);\r\n    return [...state.slice(0, index), ...state.slice(index + 1)];\r\n  },\r\n  [types.CLEAR]: () => [],\r\n});\r\n\r\nexport default wishListReducer;\r\n","export const TOGGLE = 'wishList/TOGGLE';\r\nexport const ADD_WISHLIST = 'wishList/ADD_WISHLIST';\r\nexport const REMOVE = 'wishList/REMOVE';\r\nexport const CLEAR = 'wishList/CLEAR';\r\n","export function getCartItemQuantity( cart, id ) {\r\n    return cart.find( item => item.product.id === id ).quantity;\r\n}\r\n\r\n\r\nexport const getTotalPriceOfCartItems = (cartItems) => {\r\n    if(!cartItems.length > 0){\r\n        return 0; \r\n    }\r\n\r\n    return cartItems.reduce((a,b) => {\r\n        return !(b.quantity > 1) && a + +b.product.price || +b.product.price * b.quantity\r\n    },0); \r\n\r\n}","import reducer from './reducers';\r\n\r\nimport * as checkoutOperations from './operations';\r\nimport * as checkoutSelectors from './selectors';\r\n\r\nexport { checkoutOperations, checkoutSelectors };\r\n\r\nexport default reducer;\r\n","import * as types from './types';\r\nimport * as utils from './utils';\r\nimport { createReducer } from '../../utils';\r\n\r\n/* State shape\r\n[\r\n    {\r\n        product,\r\n        quantity,\r\n    }\r\n]\r\n*/\r\n\r\nconst initialState = [];\r\n\r\nconst checkoutReducer = createReducer(initialState)({\r\n  [types.ADD_PRODUCTS_TO_CHECKOUT]: (state, action) => {\r\n    const { products } = action.payload;\r\n\r\n    if (products.length > 0) {\r\n      const uniqueProductsOfCheckout = products.filter(function(product) {\r\n        return state.indexOf(product) == -1;\r\n      });\r\n      return uniqueProductsOfCheckout;\r\n    } else {\r\n      return [...state];\r\n    }\r\n  },\r\n  [types.REMOVE]: (state, action) => {\r\n    const { product } = action.payload;\r\n    const index = utils.productPositionInCart(state, product);\r\n    return [...state.slice(0, index), ...state.slice(index + 1)];\r\n  },\r\n  [types.CLEAR]: () => [],\r\n});\r\n\r\nexport default checkoutReducer;\r\n","export const SET_CART = 'checkout/SET';\r\nexport const TOGGLE = 'checkout/TOGGLE';\r\nexport const ADD_PRODUCTS_TO_CHECKOUT = 'checkout/ADD_PRODUCTS_TO_CHECKOUT';\r\nexport const CHANGE_QUANTITY = 'checkout/CHANGE_QUANTITY';\r\nexport const REMOVE = 'checkout/REMOVE';\r\nexport const CLEAR = 'checkout/CLEAR';\r\n","export function productPositionInCart( cart, product ) {\r\n    return cart.map( item => item.product.id ).indexOf( product.id );\r\n}\r\n\r\nexport function newCartItem( product, quantity ) {\r\n    return {\r\n        product,\r\n        quantity,\r\n    };\r\n}\r\n","export const ADD = 'serach/ADD';\r\nexport const UPDATE = 'serach/UPDATE';\r\nexport const REMOVE = 'serach/REMOVE';\r\nexport const CLEAR = 'serach/CLEAR';\r\n","export function queryPositionInQueryList(queryList, query) {\r\n  return queryList.map(item => item.key).indexOf(query.key);\r\n}\r\n\r\nexport function newQueryItem(query) {\r\n  return query;\r\n}\r\n","import reducer from './reducers';\r\n\r\nimport * as queryOperations from './operations';\r\nimport * as querySelectors from './selectors';\r\n\r\nexport { queryOperations, querySelectors };\r\n\r\nexport default reducer;\r\n","import * as types from './types';\r\nimport * as utils from './utils';\r\nimport { createReducer } from '../../utils';\r\n\r\n/* State shape\r\n[\r\n    {\r\n       id: uniqueId,\r\n       key: 'searchQuery',\r\n       value: string | product => {name,id,image}\r\n       created: Date,\r\n       lastUpdated: Date\r\n    }\r\n]\r\n*/\r\n\r\nconst initialState = [];\r\n\r\nconst searyQueryReducer = createReducer(initialState)({\r\n  [types.ADD]: (state, action) => {\r\n    const { query } = action.payload;\r\n    const index = utils.queryPositionInQueryList(state, query);\r\n    if (index === -1) {\r\n      return [utils.newQueryItem(query), ...state];\r\n    }\r\n\r\n    const currentItem = state[index];\r\n    const updatedItem = Object.assign({}, currentItem);\r\n    return [...state.slice(0, index), updatedItem, ...state.slice(index + 1)];\r\n  },\r\n  [types.UPDATE]: (state, action) => {\r\n    const { query } = action.payload;\r\n    const oldQuery = state.find(item => item.key !== query.key);\r\n    const tempArrayWithOutOldQueries = state.filter(item => item.key !== query.key);\r\n    return [...tempArrayWithOutOldQueries, { ...oldQuery, ...query }];\r\n  },\r\n  [types.REMOVE]: (state, action) => {\r\n    const { product } = action.payload;\r\n    const index = utils.queryPositionInQueryList(state, product);\r\n    return [...state.slice(0, index), ...state.slice(index + 1)];\r\n  },\r\n  [types.CLEAR]: () => [],\r\n});\r\n\r\nexport default searyQueryReducer;\r\n","import { combineReducers } from \"redux\";\r\nimport * as types from \"./types\";\r\nimport { createReducer } from \"../../utils\";\r\n\r\n/* State shape\r\n{\r\n    details: product,\r\n    list: [ product ],\r\n}\r\n*/\r\n\r\nconst detailsReducer = createReducer( null )( {\r\n    [ types.FETCH_DETAILS_COMPLETED ]: ( state, action ) => action.payload.product,\r\n} );\r\n\r\nconst listReducer = createReducer( [ ] )( {\r\n    [ types.FETCH_LIST_COMPLETED ]: ( state, action ) => action.payload.products,\r\n} );\r\n\r\nexport default combineReducers( {\r\n    details: detailsReducer,\r\n    list: listReducer,\r\n} );\r\n","export const FETCH_DETAILS = \"product/FETCH_DETAILS\";\r\nexport const FETCH_DETAILS_COMPLETED = \"product/FETCH_DETAILS_COMPLETED\";\r\nexport const FETCH_DETAILS_FAILED = \"product/FETCH_DETAILS_FAILED\";\r\n\r\nexport const FETCH_LIST = \"product/FETCH_LIST\";\r\nexport const FETCH_LIST_COMPLETED = \"product/FETCH_LIST_COMPLETED\";\r\nexport const FETCH_LIST_FAILED = \"product/FETCH_LIST_FAILED\";\r\n","import reducer from \"./reducers\";\r\n\r\nimport * as productOperations from \"./operations\";\r\n\r\nexport {\r\n    productOperations,\r\n};\r\n\r\nexport default reducer;\r\n","import { combineReducers } from 'redux';\r\nimport * as types from './types';\r\nimport { createReducer } from '../../utils';\r\n\r\n/* State shape\r\n{\r\n    isAuthenticated: bool,\r\n    redirectAfterLogin: string\r\n}\r\n*/\r\n\r\nconst authReducer = createReducer(false)({\r\n  [types.LOGIN]: () => true,\r\n  [types.LOGOUT]: () => false,\r\n});\r\n\r\nconst redirectAfterLoginReducer = createReducer(null)({\r\n  [types.SET_REDIRECT_AFTER_LOGIN]: (state, action) => action.payload.redirectUrl,\r\n});\r\n\r\nexport default combineReducers({\r\n  isAuthenticated: authReducer,\r\n  redirectAfterLogin: redirectAfterLoginReducer,\r\n});\r\n","export const LOGIN = \"session/LOGIN\";\r\nexport const LOGIN_COMPLETED = \"session/LOGIN_COMPLETED\";\r\nexport const LOGIN_FAILED = \"session/LOGIN_FAILED\";\r\nexport const LOGOUT = \"session/LOGOUT\";\r\nexport const INITIALIZE = \"session/INITIALIZE_SESSION\";\r\nexport const SET_REDIRECT_AFTER_LOGIN = \"session/SET_REDIRECT_AFTER_LOGIN\";\r\nexport const ADD_CUSTOMER_DATA = \"session/ADD_CUSTOMER_DATA\";\r\n","import reducer from \"./reducers\";\r\n\r\nimport * as sessionOperations from \"./operations\";\r\n\r\nexport {\r\n    sessionOperations,\r\n};\r\n\r\nexport default reducer;\r\n","import * as types from './types';\r\nimport { createReducer } from '../../utils';\r\n\r\nconst initialState = [];\r\n\r\nconst cartReducer = createReducer(initialState)({\r\n  [types.ADD_CATEGORIES]: (state, action) => {\r\n    const { categories } = action.payload;\r\n\r\n    if (categories) {\r\n      return categories;\r\n    }\r\n\r\n    return [...state];\r\n  },\r\n\r\n  [types.GET_CATEGORIES]: (state, action) => {\r\n    return [...state];\r\n  },\r\n});\r\n\r\nexport default cartReducer;\r\n","export const ADD_CATEGORIES = 'category/ADD_CATEGORIES';\r\nexport const GET_CATEGORIES = 'category/GET_CATEGORIES';\r\n","import reducer from './reducers';\r\n\r\nimport * as categoryOperations from './operations';\r\nimport * as categorySelectors from './selectors';\r\n\r\nexport { categoryOperations, categorySelectors };\r\n\r\nexport default reducer;\r\n","import * as types from './types';\r\nimport { createReducer } from '../../utils';\r\n\r\nconst initialState = {};\r\n\r\nconst cartReducer = createReducer(initialState)({\r\n  [types.ADD_ITEM_TO_CACHE]: (state, action) => {\r\n    const { response } = action.payload;\r\n\r\n    if (response) {\r\n      return { ...state, ...response };\r\n    }\r\n\r\n    return { ...state };\r\n  },\r\n});\r\n\r\nexport default cartReducer;\r\n","export const ADD_ITEM_TO_CACHE = 'category/ADD_ITEM_TO_CACHE';\r\n","import reducer from './reducers';\r\n\r\nimport * as cacheOperations from './operations';\r\nimport * as cacheSelectors from './selectors';\r\n\r\nexport { cacheOperations, cacheSelectors };\r\n\r\nexport default reducer;\r\n","import * as types from './types';\r\nimport { createReducer } from '../../utils';\r\n\r\nconst initialState = [];\r\n\r\nconst cartReducer = createReducer(initialState)({\r\n  [types.ADD_BRAND]: (state, action) => {\r\n    const { brands } = action.payload;\r\n\r\n    if (brands) {\r\n      return brands;\r\n    }\r\n\r\n    return [...state];\r\n  },\r\n\r\n  [types.GET_BRAND]: (state, action) => {\r\n    return [...state];\r\n  },\r\n});\r\n\r\nexport default cartReducer;\r\n","export const ADD_BRAND = 'category/ADD_BRAND';\r\nexport const GET_BRAND = 'category/GET_BRAND';\r\n","import reducer from './reducers';\r\n\r\nimport * as brandOperations from './operations';\r\nimport * as brandSelectors from './selectors';\r\n\r\nexport { brandOperations, brandSelectors };\r\n\r\nexport default reducer;\r\n","import * as types from './types';\r\nimport { createReducer } from '../../utils';\r\n\r\nconst initialState = [];\r\n\r\nconst cartReducer = createReducer(initialState)({\r\n  [types.ADD_TAGS]: (state, action) => {\r\n    const { tags } = action.payload;\r\n\r\n    if (tags) {\r\n      return tags;\r\n    }\r\n\r\n    return [...state];\r\n  },\r\n\r\n  [types.GET_TAGS]: (state, action) => {\r\n    return [...state];\r\n  },\r\n});\r\n\r\nexport default cartReducer;\r\n","export const ADD_TAGS = 'tag/ADD_TAGS';\r\nexport const GET_TAGS = 'tag/GET_TAGS';\r\n","import reducer from './reducers';\r\n\r\nimport * as tagOperations from './operations';\r\nimport * as tagSelectors from './selectors';\r\n\r\nexport { tagOperations, tagSelectors };\r\n\r\nexport default reducer;\r\n","import { fetch } from \"../utils\";\r\n\r\nconst baseUrl = typeof document === \"undefined\" ? \"http://localhost:7777/api\" : \"/api\";\r\n\r\nconst apiService = ( ) => ( next ) => ( action ) => {\r\n    const result = next( action );\r\n    if ( !action.meta || !action.meta.async ) {\r\n        return result;\r\n    }\r\n\r\n    const { path, method = \"GET\", body } = action.meta;\r\n\r\n    if ( !path ) {\r\n        throw new Error( `'path' not specified for async action ${ action.type }` );\r\n    }\r\n\r\n    const url = `${ baseUrl }${ path }`;\r\n\r\n    return fetch( url, method, body ).then(\r\n        res => handleResponse( res, action, next ),\r\n        err => handleErrors( err, action, next ),\r\n    );\r\n};\r\n\r\nexport default apiService;\r\n\r\nfunction handleErrors( err, action, next ) {\r\n    next( {\r\n        type: `${ action.type }_FAILED`,\r\n        payload: err,\r\n        meta: action.meta,\r\n    } );\r\n\r\n    return Promise.reject( err );\r\n}\r\n\r\nfunction handleResponse( res, action, next ) {\r\n    next( {\r\n        type: `${ action.type }_COMPLETED`,\r\n        payload: res,\r\n        meta: action.meta,\r\n    } );\r\n\r\n    return res;\r\n}\r\n","const REGULAR = [\r\n    \"background: blue\",\r\n    \"color: white\",\r\n].join( \";\" );\r\n\r\nconst SUCCESS = [\r\n    \"background: green\",\r\n    \"color: white\",\r\n].join( \";\" );\r\n\r\nconst STARTED = [\r\n    \"background: darkorange\",\r\n    \"color: white\",\r\n].join( \";\" );\r\n\r\nconst FAILURE = [\r\n    \"background: red\",\r\n    \"color: white\",\r\n].join( \";\" );\r\n\r\nconst createLogger = ( active = true ) => ( store ) => ( next ) => ( action ) => {\r\n    if ( !active ) {\r\n        return next( action );\r\n    }\r\n\r\n    const prevState = store.getState( );\r\n    const result = next( action );\r\n    const nextState = store.getState( );\r\n    logGroupCollapsed( `%c ${ action.type } `, determineStyle( action ) );\r\n    logInfo( \"%cprev state\", \"color: darkorange\", prevState );\r\n    logInfo( \"%caction payload\", \"color: blue\", action.payload );\r\n    logInfo( \"%cnext state\", \"color: darkgreen\", nextState );\r\n    logGroupEnd( );\r\n    return result;\r\n};\r\n\r\nexport default createLogger;\r\n\r\nfunction logGroupCollapsed( ...args ) {\r\n    const logFunction = typeof console.groupCollapsed === \"function\" ? console.groupCollapsed : console.info;\r\n    logFunction( ...args );\r\n}\r\n\r\nfunction logGroupEnd( ...args ) {\r\n    const logFunction = typeof console.groupEnd === \"function\" ? console.groupEnd : console.info;\r\n    logFunction( ...args );\r\n}\r\n\r\nfunction logInfo( ...args ) {\r\n    console.info( ...args );\r\n}\r\n\r\nfunction determineStyle( action ) {\r\n    if ( !action.meta || !action.meta.async ) {\r\n        return REGULAR;\r\n    }\r\n\r\n    if ( action.type.indexOf( \"_COMPLETED\" ) > -1 ) {\r\n        return SUCCESS;\r\n    }\r\n\r\n    if ( action.type.indexOf( \"_FAILED\" ) > -1 ) {\r\n        return FAILURE;\r\n    }\r\n\r\n    return STARTED;\r\n}\r\n","import { createStore, applyMiddleware, combineReducers, compose } from 'redux';\r\nimport { persistStore, persistReducer } from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\nimport * as reducers from './ducks';\r\nimport { apiService } from './middlewares';\r\n\r\nconst rootReducer = combineReducers(reducers);\r\n\r\nconst persistConfig = {\r\n  key: 'shop',\r\n  storage: storage,\r\n  whitelist: ['session'], // which reducer want to store\r\n};\r\n\r\nconst pReducer = persistReducer(persistConfig, rootReducer);\r\n\r\nfunction configureStore(initialState) {\r\n  return createStore(\r\n    pReducer,\r\n    initialState,\r\n    compose(\r\n      applyMiddleware(apiService),\r\n      window.__REDUX_DEVTOOLS_EXTENSION__\r\n        ? window.__REDUX_DEVTOOLS_EXTENSION__()\r\n        : (f) => f\r\n    )\r\n  );\r\n}\r\n\r\nconst store = configureStore({});\r\n\r\nconst persistor = persistStore(store);\r\n\r\nexport { persistor, store };\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider as ReduxProvider } from 'react-redux';\nimport App from './App';\n\n// import redux store\nimport { store } from './state/store';\n\n// import the main files of styles\nimport './styles/_main.scss';\n\n\n// importing react hot loader for hot loading\nimport { AppContainer } from 'react-hot-loader';\n\n\n// Wrap the rendering in a function:\nconst render = () => {\n\tReactDOM.render(\n\t\t<ReduxProvider store={store}>\n\t\t\t<AppContainer>\n\t\t\t\t<App />\n\t\t\t</AppContainer>\n\t\t</ReduxProvider>,\n\t\tdocument.getElementById('root')\n\t);\n};\n\n\n// Render once\nrender();\n\n\n\n// Webpack Hot Module Replacement API\nif (module['hot']) {\n\tmodule['hot'].accept('./App', () => {\n\t\trender();\n\t});\n}\n\n\n"],"sourceRoot":""}