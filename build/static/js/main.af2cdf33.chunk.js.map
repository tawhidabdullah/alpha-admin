{"version":3,"sources":["components/Field/Input.tsx","state/ducks/busy/utils.js","state/ducks/busy/reducers.js","state/ducks/busy/index.js","state/ducks/cart/utils.js","state/utils/createReducer.js","state/utils/fetch.js","state/ducks/cart/selectors.js","state/ducks/cart/index.js","state/ducks/cart/reducers.js","state/ducks/cart/types.js","state/ducks/wishList/utils.js","state/ducks/wishList/index.js","state/ducks/wishList/reducers.js","state/ducks/wishList/types.js","state/ducks/checkout/selectors.js","state/ducks/checkout/index.js","state/ducks/checkout/reducers.js","state/ducks/checkout/types.js","state/ducks/checkout/utils.js","state/ducks/search/types.js","state/ducks/search/utils.js","state/ducks/search/index.js","state/ducks/search/reducers.js","state/ducks/product/reducers.js","state/ducks/product/types.js","state/ducks/product/index.js","state/ducks/session/reducers.js","state/ducks/session/types.js","state/ducks/session/index.js","state/ducks/category/reducers.js","state/ducks/category/types.js","state/ducks/category/index.js","state/ducks/cache/reducers.js","state/ducks/cache/types.js","state/ducks/cache/index.js","state/ducks/brand/reducers.js","state/ducks/brand/types.js","state/ducks/brand/index.js","state/ducks/tag/reducers.js","state/ducks/tag/types.js","state/ducks/tag/index.js","lib/utils/manupulateURL.js","lib/connector.js","lib/converter.js","hooks/useFetch.ts","hooks/useHandleFetch.ts","pages/auth/login/Login.tsx","pages/auth/login/index.ts","layout/sider/Sider.tsx","layout/sider/index.ts","components/Empty/index.ts","components/Empty/Empty.tsx","layout/header/Header.tsx","layout/header/index.ts","pages/overview/ApiVisits.tsx","pages/overview/OrderOverView.tsx","pages/overview/PlatformVisits.tsx","pages/overview/PageVisits.tsx","pages/overview/Overview.tsx","components/Placeholders/DataTableSkeleton.tsx","pages/category/CategoryList.tsx","components/Field/TextArea.tsx","components/MediaLibrary/MediaLibrary.tsx","components/MediaLibrary/index.ts","pages/category/MetaTags.tsx","pages/category/AddNewCategory.tsx","pages/category/QuickEdit.tsx","pages/category/CategoryEdit.tsx","pages/category/NewCategoryDetail.tsx","pages/productBundle/ProductBundleQuickEdit.tsx","components/Field/InputSmall.tsx","components/Field/DatePicker.tsx","components/Notification/Notification.tsx","pages/product/Tags.tsx","pages/product/Brands.tsx","pages/product/Categories.tsx","pages/productBundle/SelectProducts.tsx","pages/order/AddNewOrderProductItem.tsx","pages/productBundle/SelectedProductItems.tsx","pages/productBundle/AddNewProductBundle.tsx","pages/productBundle/ProductBundleList.tsx","pages/coupon/CouponProducts.tsx","pages/productBundle/ProductBundleDetail.tsx","pages/brand/AddNewBrand.tsx","pages/brand/QuickEdit.tsx","pages/brand/BrandList.tsx","pages/brand/BrandEdit.tsx","pages/brand/NewBrandDetail.tsx","pages/product/Attributes.tsx","pages/product/Pricing.tsx","pages/product/AddNewProduct.tsx","pages/product/QuickEdit.tsx","pages/product/ProductList.tsx","pages/product/ProductEdit.tsx","pages/product/NewProductDetail.tsx","pages/tag/QuickEdit.tsx","pages/tag/AddNewTag.tsx","pages/tag/TagList.tsx","pages/tag/TagEdit.tsx","pages/tag/NewTagDetail.tsx","pages/coupon/CouponEdit.tsx","pages/coupon/CouponDetail.tsx","pages/coupon/CouponQuickEdit.tsx","pages/coupon/OrderedProductsSelectProducts.tsx","pages/coupon/OrderedProductsSelectedProductItems.tsx","pages/coupon/AddNewCoupon.tsx","pages/coupon/CouponList.tsx","pages/customer/AddNewCustomer.tsx","pages/customer/QuickEdit.tsx","pages/customer/CustomerList.tsx","pages/customer/CustomerEdit.tsx","pages/customer/CustomerDetail.tsx","pages/pages/PagesList.tsx","pages/pages/AddNewPage.tsx","pages/attribute/QuickEdit.tsx","pages/attribute/AddAttributeValues.tsx","pages/attribute/AttributeList.tsx","pages/order/OrderList.tsx","pages/order/AddNewOrderSummary.tsx","pages/order/CustomersId.tsx","pages/order/AddProducts.tsx","pages/order/AddNewOrder.tsx","pages/order/OrderInvoice.jsx","pages/order/productItemForOrderDetail.tsx","pages/order/OrderEdit.tsx","pages/order/OrderDetail.tsx","pages/order/orderAnalytics/ThisMonthOrderReport.tsx","pages/order/orderAnalytics/ThisWeekOrderReport.tsx","pages/order/orderAnalytics/DateOrderReport.tsx","pages/order/orderAnalytics/HourOrderReport.tsx","pages/order/orderAnalytics/MonthOrderReport.tsx","pages/order/orderAnalytics/YearOrderReport.tsx","pages/order/orderAnalytics/index.ts","pages/order/orderAnalytics/OrderOverviewReport.tsx","pages/settings/ComponentItem.tsx","pages/settings/AddNewComponent.tsx","pages/settings/ComponentListComponentItem.tsx","pages/settings/AddNewComponentItem.tsx","pages/settings/Component.tsx","pages/settings/AddNewTheme.tsx","pages/settings/ManageThemes.tsx","pages/settings/Image.tsx","pages/settings/Invoice.tsx","pages/settings/AdminSiteInfo.tsx","pages/settings/SiteInfoInvoice.tsx","pages/settings/SiteInfo.tsx","pages/delivery/DeliveryCharge.tsx","pages/delivery/AddNewRegion.tsx","pages/delivery/QuickEdit.tsx","pages/delivery/Delivery.tsx","pages/sms/SendCustomSMS.tsx","pages/sms/SMSConfiguaration.tsx","pages/sms/Sms.tsx","pages/sms/index.ts","pages/email/ConfigureSTMP.tsx","pages/email/NewCustomerTemplate.tsx","pages/email/OrderStatusTemplateAutoEmail.tsx","pages/email/OrderTemplateAutoEmail.tsx","pages/email/ConfigureAutoEmail.tsx","pages/email/ComposeCustomEmail.tsx","pages/email/Inbox.tsx","pages/email/Email.tsx","pages/notification/NotificationList.tsx","pages/admins/AccessCheckbox.tsx","pages/admins/QuickEdit.tsx","pages/admins/AddNewAdmin.tsx","pages/admins/AdminList.tsx","pages/admins/AdminEdit.tsx","pages/admins/AdminDetail.tsx","pages/post/PostQuickEdit.tsx","pages/post/Tags.tsx","pages/post/Brands.tsx","pages/post/Categories.tsx","pages/post/SelectProducts.tsx","pages/post/SelectedProductItems.tsx","pages/post/AddNewPost.tsx","pages/post/PostList.tsx","pages/post/PostDetail.tsx","pages/post/postTags/QuickEdit.tsx","pages/post/postTags/AddNewPostTag.tsx","pages/post/postTags/PostTagList.tsx","pages/post/postTags/TagEdit.tsx","pages/post/postTags/NewPostTagDetail.tsx","pages/post/postCategory/MetaTags.tsx","pages/post/postCategory/AddNewPostCategory.tsx","pages/post/postCategory/PostCategoryList.tsx","pages/post/postCategory/PostCategoryEdit.tsx","pages/post/postCategory/QuickEdit.tsx","pages/post/postCategory/NewPostCategoryDetail.tsx","pages/staff/AddNewStaff.tsx","pages/staff/QuickEdit.tsx","pages/staff/StaffList.tsx","pages/staff/StaffEdit.tsx","pages/staff/StaffDetail.tsx","pages/expense/QuickEdit.tsx","pages/expense/AddNewExpense.tsx","pages/expense/ExpenseList.tsx","pages/expense/ExpenseEdit.tsx","pages/expense/ExpenseDetail.tsx","layout/content/Content.tsx","layout/content/index.ts","App.tsx","state/middlewares/apiService.js","state/middlewares/logger.js","state/store.js","index.tsx"],"names":["Demo","Input","TextArea","required","addonBefore","label","type","value","defaultValue","onChange","disabled","isError","errorString","name","placeHolder","className","Item","validateStatus","help","style","borderRadius","placeholder","actionShouldBlock","meta","async","blocking","actionFinished","includes","reducer","state","action","utils","productPositionInCart","cart","product","map","item","id","indexOf","newCartItem","quantity","isSelectedForCheckout","initialState","reducerMap","url","method","body","options","headers","Accept","JSON","stringify","isomorphicFetch","then","res","status","Promise","resolve","reject","response","parseStatus","json","createReducer","payload","filter","cartItems","length","index","tempArrayWithOutOldProduct","updatedItem","Object","assign","slice","productPositionInWishList","wishList","productId","wishlist","products","ADD","queryPositionInQueryList","queryList","query","key","types","currentItem","oldQuery","find","tempArrayWithOutOldQueries","detailsReducer","listReducer","combineReducers","details","list","authReducer","redirectAfterLoginReducer","redirectUrl","isAuthenticated","redirectAfterLogin","cartReducer","categories","brands","tags","isObjectEmpty","keys","manupulateURL","urlOptions","params","placeHolders","split","currentValue","actualPlaceholderValue","replace","param","join","converter","resData","data","formatedData","category","_id","description","productCount","parent","cover","config","thumbnail","subCount","subCategory","children","subCat","noti","heading","text","link","added","read","title","page","next","convertedData","regularPrice","price","offerPrice","unit","pricing","date","time","venue","brand","parseInt","available","minimum","items","cartItem","medium","cartKey","updated","avalable","isNext","startDate","endDate","actualPrice","console","log","visit","count","itemId","orders","firstName","lastName","country","city","email","phone","address1","address2","created","code","minimumOrder","maximumOrder","orderedProducts","freeProducts","orderedProductsCount","freeProductsCount","amountType","amount","freeDelivery","maxUsePerUser","tag","success","original","image","img","labels","alt","caption","customer","theme","components","component","region","pickUpLocation","countryCode","countryName","charge","availableStock","minimumStock","cat","primaryCategory","inserted","icon","order","shippingAddress","address","total","totalPrice","date_created","paymentMethod","paymentStatus","payment","customerId","billingAddress","generalFormat","dataMap","line_items","paymentItems","number","src","target","navLinkItems","sliderItems","images","sliderRightItems","servicesItems","accountItems","aboutUsItems","Connector","this","format","api","apiMap","server","credentials","Headers","fetch","baseURL","formattedData","error","connector","dataFetchReducer","isLoading","done","Error","useFetch","dependencies","initialData","useReducer","dispatch","useEffect","didCancel","a","request","fetchData","useHandleFetch","validationSchema","Yup","shape","username","min","password","initialValues","Login","loginState","handleLoginFetch","handleSubmit","values","actions","setSubmitting","getisSubmitButtonDisabled","isValid","onSubmit","validateOnBlur","enableReinitialize","handleChange","errors","isSubmitting","touched","setFieldTouched","handleBlur","handleReset","maxWidth","margin","e","onClick","loading","Sider","Layout","Header","Content","Footer","SubMenu","Menu","withRouter","props","useState","collapsed","setcollapsed","width","boxShadow","border","collapsible","onCollapse","selectable","mode","PieChartOutlined","to","GoldOutlined","RadarChartOutlined","BankOutlined","TagsOutlined","TagOutlined","BranchesOutlined","FireOutlined","CarOutlined","CalculatorOutlined","UsergroupAddOutlined","MoneyCollectOutlined","ShoppingCartOutlined","TeamOutlined","MailOutlined","MessageOutlined","FileOutlined","FileSearchOutlined","FileAddOutlined","SlidersOutlined","SettingOutlined","UserOutlined","UserAddOutlined","BgColorsOutlined","Empty","height","display","justifyContent","alignItems","PRESENTED_IMAGE_SIMPLE","history","useHistory","getAllNotificationState","handleGetAllNOticationFetch","getAllNotification","typeIcon","background","zIndex","transition","alignContent","push","color","marginTop","marginLeft","cursor","marginRight","placement","overlay","textAlign","backgroundColor","padding","fontSize","href","overflowCount","showZero","TwitterSquareFilled","fontWeight","BellOutlined","LogoutOutlined","TooltipContainerStyles","Select","Option","ApiVisits","demoGraphicVisitsState","handleDemoGraphicVisitsStateFetch","userData","setuserData","metricType","uservisitsDataRes","getDemoGraphicVisitsValue","size","x1","y1","x2","y2","offset","stopColor","vertical","strokeDasharray","stroke","dataKey","orientation","axisLine","tickLine","contentStyle","formatter","fill","MONTHS","getMonthNameByOrder","selectedApiValue","setSelectedApiValue","orderAnalyticsVisitsState","handleOrderAnalyticsVisitsStateFetch","orderData","setorderData","ordersDataRes","getAnalyticsOrders","Date","thisMonth","getMonth","bordered","showSearch","optionFilterProp","filterOption","input","option","toLowerCase","tickFormatter","localOptions","COLORS","PlatformVisits","demographicData","setdemographicData","RADIAN","Math","PI","marginBottom","outerRadius","innerRadius","nameKey","cx","cy","midAngle","percent","radius","x","cos","y","sin","dominantBaseline","toFixed","labelLine","entry","CalendarOutlined","Column","Table","ColumnGroup","PageVisits","pageVisitsState","handlePageVisitsStateFetch","visitType","getPageVisitsValue","dataSource","tableLayout","onHeaderRow","column","dataIndex","render","record","textTransform","Overview","analyticsProductVisitCountState","handleAnalyticsProductVisitCountFetch","analyticsCategoryVisitCountState","handleAnalyticsCategoryVisitCountFetch","totalUserCountState","handleGetTotalUserCountFetch","getTotalUserCount","getProductVisitCount","getCategoryVisitCount","OrderOverView","DataTable","speed","viewBox","foregroundColor","rx","ry","r","metadata","github","filename","Search","MyTable","setcategoryList","visible","setvisible","activeCategoryForEdit","setactiveCategoryForEdit","handleDeleteCategoryFetch","handleDeleteCategory","deleteCategoryRes","message","notification","CheckCircleOutlined","newCategoryList","objectFit","align","EditOutlined","onConfirm","okText","cancelText","DeleteOutlined","categoryList","categoryState","handleCategoryListFetch","isSubCategory","productCountValue","setCategories","addNewCategoryVisible","setAddNewCategoryVisible","enterButton","onSearch","handleSearch","PlusOutlined","DataTableSkeleton","rows","Dragger","Upload","TabPane","Tabs","openSuccessNotification","MediaLibrary","setmyImages","isModalOpenForImages","setmyThumbnailImage","isModalOpenForThumbnail","myImages","myThumbnailImage","fileList","setfileList","uploading","setuploading","selectedimages","setselectedImages","activeImageItem","setactiveImageItem","updateMediaLibrary","handleUpdateMediaLibraryFetch","imageListFromLibraryState","handleImageListFromLibraryFetch","handleDeleteImageFromLibraryFetch","localImageList","setLocalImageList","isDoneOk","setisDoneOk","handleDeleteImageFromImageLibrary","deleteImageLibraryItemRes","newImageList","getImageList","imageListRes","handleUpload","formData","FormData","forEach","file","append","reqwest","processData","withCredentials","uploadProps","multiple","onRemove","filelist","newFileList","splice","beforeUpload","handleAddToSelectedList","newselectedImages","handleUpdateSubmit","captoin","updateImageLibraryItemRes","positionInImageList","updateImageList","openErrorNotification","getisUpdateSubmitButtonDisabled","top","onOk","onCancel","bodyStyle","defaultActiveKey","tab","listType","FileImageOutlined","ArrowUpOutlined","lenght","CloseOutlined","CheckOutlined","ImageItemMenu","EllipsisOutlined","MetaTags","inputVisible","inputValue","editInputIndex","editInputValue","handleClose","removedTag","setTags","showInput","setState","focus","handleInputChange","handleInputConfirm","handleEditInputChange","handleEditInputConfirm","newTags","saveInputRef","saveEditInputRef","editInput","ref","onBlur","onPressEnter","isLongTag","tagElem","closable","onClose","onDoubleClick","preventDefault","React","Component","bnName","bnDescription","metaTitle","bnMetaTitle","metaDescription","bnMetaDescription","metaTags","bnMetaTags","AddNewCategory","addCategoryState","handleAddCategoryFetch","isparentCategoryChecked","setisparentcategoryChecked","setisModalOpenForThumbnail","setisModalOpenForImages","coverImageId","setCoverImageId","selectedParentId","setselectedParentId","imageUrl","setImageUrl","loadingThumnail","setLoadingThumbnail","imageFile","setImagefile","bnTags","setBnTags","imagesIds","trim","bn","addCategoryRes","resetForm","onSwitchChange","checked","handleCancel","onChangeSelect","callback","reader","FileReader","addEventListener","result","readAsDataURL","getBase64","uploadButton","LoadingOutlined","okButtonProps","htmlType","defaultChecked","InfoCircleOutlined","showUploadList","newImages","handleImagesDelete","FileImageFilled","QuickEdit","updateCategoryState","handleUpdateCategoryFetch","updateCategoryRes","positionInTag","updateCategoryList","AddNewBrand","categoryEditVisible","setCategoryEditVisible","categoryDetailData","setcategoryDetailData","updateBrandState","handleUpdateBrandFetch","brandDetailState","handleAttachImageToItemMultipleFetch","handleAttachImageToItemSingleFetch","handleDetachImageFromItemSingleFetch","handleSetImageAsThumbnailToItemFetch","visibleMedia","setvisibleMedia","myGoddamnImages","setMyGoddamnImages","handleSetImageAsThumnail","handleDetachSingleImage","imageId","collection","thumbnailRes","updateTagRes","NewBrandDetail","CoolInput","categoryDetailState","handleCategoryDetailFetch","categoryProductsState","handleCategoryProductsFetch","useParams","categoryId","categoryDetail","setcategoryDetail","categoryDetailDataRes","getCategoryDetail","getCategoryProducts","row","imgs","columns","localIndex","columnNumber","getImagesInCollumn","CategoryEdit","avatar","paragraph","paddingTop","overflow","ProductBundleQuickEdit","tagList","setTagList","updateTagState","updateTagList","allowClear","DatePickerComponent","withTime","borderColor","moment","DatePicker","RangePicker","ExclamationCircleOutlined","CheckableTag","Tag","Tags","setTagIds","setSelectedTags","selectedTags","setoptions","tagState","handleTagListFetch","searchValue","setsearchValue","selectedCategoryIds","selectedcategory","tagListRes","tagOptions","categoryNames","newOptions","nextSelectedTags","t","Brands","setBrandId","brandId","productDetailState","setSelectedBrandId","brandState","brandListRes","brandOptions","setBrands","onFocus","val","Categories","setcategoryIds","categoryOptions","setCategoryOptions","categoryListRes","checkable","checkedKeys","onSelect","selectedKeys","info","onCheck","checkedIds","treeData","defaultExpandAll","checkStrictly","setProductIds","productIds","selectedOpions","setselectedOptions","selectItems","o","CartOverLayCartItem","productList","setProductList","variation","handleProductFetch","setProduct","setIsLoading","modifiedPrice","setModifiedPrice","selectedVariationId","setSelectedVariationId","getAndSetProduct","handleChangeQuantity","positionInAttribute","updateAttributeList","convertAttributeValuesToStringValue","attribute","attributeValue","pricingOptions","pricingItem","pricingOption","getPricingOptions","priceItem","regular","offer","getPriceByVariationId","tagId","handleAttributeChange","AddNewOrderSummary","flexDirection","AddNewOrderProductItem","bundlePrice","AddNewProduct","bundleList","setBundleList","addProductState","handleAddProductFetch","categoryids","tagIds","setPricing","setDateFeild","setTimeFeild","setDescription","setPrice","model","addProductRes","err","i","newProductList","isTrue","handleDateChange","dateString","handleTimeChange","editor","ClassicEditor","onInit","event","getData","InputSmall","SelectProducts","SelectedProductItems","handleDeleteTagFetch","handleDeleteTag","deleteTagRes","newtagList","TagList","newTagList","AddNewProductBundle","CouponProducts","handleProductDetailFetch","getProductDetail","brandList","setBrandList","addBrandRes","updatebrandState","updateBrandRes","positionInBrand","updateBrandList","handleDeleteBrandFetch","handleDeleteBrand","deleteBrandRes","newBrandList","handlebrandListFetch","brandDetailData","brandEditVisible","setBrandEditVisible","setBrandDetailData","handleBrandDetailFetch","brandProductsState","handleBrandProductsFetch","brandDetailRes","getBrandDetail","getBrandProducts","BrandEdit","Complete","setAttributeList","attributeList","suggestedOptions","setsuggesteOptions","attributeLisState","attributeItem","setAttributeITem","manupulatedOptions","suggestedOption","toUpperCase","Pricing","handleAddPricing","setprice","stock","setStock","handlePriceChange","handleStockChange","Attributes","minHeight","purchaseLimit","bnUnit","setBNDescription","setMetaTags","setBnMetaTags","metaUnit","animated","tabPosition","newPricing","handleDeletePricing","textDecoration","updateProductState","handleUpdateProductFetch","updateProductRes","updateProductList","handleDeleteProductFetch","handleDeleteProduct","deleteProductRes","productState","handleProductListFetch","setProducts","productEditVisible","setProductEditVisible","productDetailData","setProductDetailData","categoryIds","updatedProductRes","destroyOnClose","productDetailRes","ProductEdit","addTagState","handleAddTagFetch","addTagRes","AddNewTag","tagEditVisible","setTagEditVisible","tagDetailData","setTagDetailData","tagDetailState","handleTagDetailFetch","tagProductsState","handleTagProductsFetch","tagDetailRes","getTagProducts","TagEdit","CouponEdit","addCouponState","handleAddCouponStateFetch","freeProductIds","setFreeProductIds","freeProductList","setFreeProductList","OrderedProductsSelectProducts","OrderedProductsSelectedProductItems","CouponQuickEdit","Couponlist","AddNewCoupon","max","zipCode","customerList","setCustomerList","addCustomerState","handleAddCustomerFetch","selectedCountryValue","setselectedCountryValue","selectedCityValue","setselectedCityValue","countryOptions","setcountryOptions","cityOptions","setcityOptions","countryListState","handleCountryListFetch","cityListState","handleCityListFetch","addCustomerRes","onChangeCity","onChangeCountry","CountryListRes","setCountries","cityListRes","setCities","notFoundContent","updateCustomerState","handleUpdateCustomerFetch","updateCustomerRes","handleDeleteCustomerFetch","handleDeleteCustomer","deleteCustomerRes","newCustomerList","customerState","handleCustomerListFetch","customers","setCustomers","AddNewCustomer","customerDetailState","handleCustomerDetailFetch","orderListState","handleOrderListFetch","customerDetailData","setCustomerDetailData","customerDetailDataRes","getCustomerDetail","getOrderList","CustomerEdit","withTitle","handleDeletePageFetch","handleDeletePage","deletePageRes","PageList","pageList","setPageList","pageState","handlePagsListFetch","pages","setPages","Steps","Step","content","bnContent","AddNewPage","addPageState","handleAddPageFetch","setContent","setBnContent","handleAddPageSubmit","addOrderRes","EditableTagGroup","AttributeList","AddAttributeValues","setOrderList","handleUpdateOrderStatusFetch","handleUpdateOrderStatus","newStatus","newOrderstatus","updateOrderStatusRes","updateOrderList","StatusItemMenu","DownOutlined","orderList","orderState","handleRegionListFetch","regions","setOrders","newOrderList","memo","ShopOutlined","setCustomerId","setSelectedCustomerData","customerData","productListState","productOptions","additionalInfo","steps","AddNewOrder","addOrderState","handleOrderFetch","current","setCurrent","selectedCustomerData","customerListState","deliveryRegionState","handleDeliveryRegionFetch","deliveryRegionName","setDeliveryRegionName","selectedRegion","setSelectedRegion","regionDeliveryCharge","setregionDeliveryCharge","isDeliveryChargeExists","cityName","getAndSetShippingDeliveryCharge","handleCheckoutSubmit","delivery","CustomersId","AddProducts","Group","deliveryRegionItem","handleDeviliveryRegionChange","ClockCircleOutlined","CaretRightOutlined","CaretLeftOutlined","setShowInvoice","showInvoice","orderDetailState","handleOrderDetailFetch","getOrderDetail","window","print","cellPadding","cellSpacing","bgcolor","fontFamily","lineHeight","verticalAlign","letterSpacing","colSpan","borderBottom","whiteSpace","updateOrderState","handleUpdateOrderFetch","addRegionRes","OrderInvoice","OrderEdit","WEEEK","getWeekNameByOrder","getHourFormatter","OrderOverviewReport","ThisWeekOrderReport","ThisMonthOrderReport","DateOrderReport","HourOrderReport","MonthOrderReport","YearOrderReport","setItemsList","itemsList","componentItem","localComponentItem","setlocalComponentItem","handleComponentItemsChange","updateComponentList","groupName","componentList","setComponentList","addComponentState","handleAddComponentFetch","addComponentRes","handleAddComponentItem","itemComponent","ComponentItem","componentUpdate","Set","SaveOutlined","updateComponentByAddingItem","componentId","Panel","Collapse","genExtra","updateComponentByDeleting","stopPropagation","genExtraForGroup","setitemVisible","handleDeleteComponent","setComponentId","groupVisible","setgroupVisible","itemVisible","componentState","handleComponentListFetch","handleDeleteComponentFetch","handleUpdateComponentFetch","setComponents","deleteComponentRes","newComponentList","positionInItemsOfComponent","componentIndex","positionInComponents","itemIndex","manupulatedLocalComponentForTheReq","updatedItems","manupulatedUpdatedItems","manupulatedUpdatedItem","updateComponentRes","accordion","expandIconPosition","expandIcon","isActive","rotate","header","extra","ComponentListComponentItem","AddNewComponent","AddNewComponentItem","footer","themeList","setThemeList","addThemeState","handleAddthemeFetch","setselectedThemeTypeValue","setname","thumbnailFile","setThumbnailFile","addThemeRes","path","InboxOutlined","themeState","handleThemeListFetch","handleActiveThemeFetch","handleDeleteThemeFetch","themes","setThemes","handleActiveTheme","activeThemeRes","handleDeleteTheme","deleteThemeRes","newThemeList","danger","AddNewTheme","Image","Invoice","adminEmail","adminName","UpdateSiteinfo","UpdateSiteSettingsState","handleUpdateSiteSettingsFetch","siteSettingsState","handlSiteSettingsFetch","getSiteSettings","addSiteInfoRes","invoiceTitle","additionalText","updateInfovSettingsState","handleUpdateInvoiceSettingsFetch","InvoiceSettingsState","handlSiteInvoiceSettingsFetch","updateInvoiceRes","updateSiteLogoAndIcon","handleUpdateSiteLogoAndIconFetch","logo","updateSiteIconAndLogoRes","AdminSiteInfo","SiteInfoInvoice","DeliveryCharge","deliveryChargeItem","setdeliveryChargeList","deliveryChargeList","deliveryCharge","setdeliveryCharge","handleDeliveryChargeChange","AddNewRegion","regionList","setRegionList","addRegionState","handleRegionFetch","handleAddDeliveryCharge","updateRegionState","handleUpdateRegionFetch","updateRegionList","handleDeleteRegioFetch","handleDeleteRegion","deleteRegionRes","newRegionList","regionState","setRegions","SendCustomSMS","setText","recipient","setrecipient","tokenSeparators","SendOutlined","InfoCircleFilled","SMSConfiguaration","configureSMSStata","handleconfigureSMSFetch","Sms","ConfigureSTMP","emailConfigurationState","handleEmailConfigurationFetch","setIsAuthenticated","fromEmail","fromName","host","encryption","port","smtpUsername","smtpPassword","handleAuthenticatedChange","setVisible","autoEmailTemplate","handleAutoEmailTemplateFetch","subject","setcustomer","admin","setadmin","getConfigurationAutoEmailTemplateRes","eventName","getCustomerAutoEmail","overflowY","ConfigureAutoEmail","configureAutoEmailConfigurationState","handleAutoEmailConfigurationFetch","isnewCustomerAdmin","setnewCustomerAdmin","isnewCustomerCustomer","setnewCustomerCustomer","isorderAdmin","setorderAdmin","isorderStatusAdmin","setorderStatusAdmin","isorderCustomer","setorderCustomer","isorderStatusCustomer","setIsorderStatusCustomer","newcustomermodal","setnewcustomermodal","ordermodal","setordermodal","orderStatusmodal","setorderStatusmodal","handleUpdateAutoEmail","NewCustomerTemplate","OrderStatusTemplateAutoEmail","OrderTemplateAutoEmail","ComposeCustomEmail","sendCustomerEmailState","handleSendCustomEmailFetch","html","sethtml","Inbox","substring","PlusCircleOutlined","NotificationList","AccessCheckbox","checkedList","setCheckedList","plainOptions","interminate","setInterminate","checkAll","setCheckAll","indeterminate","accessItem","span","role","accesscheckedList","setAccessCheckedList","access","passwordConfirmation","oneOf","AddNewAdminRoles","password2","AddNewAdmin","AdminEdit","setBody","AddNewPostCategory","AddNewStaff","StaffEdit","AddNewExpense","ExpenseEdit","hasSider","exact","NewCategoryDetail","BrandList","NewProductDetail","ProductBundleList","ProductBundleDetail","CouponList","PostList","PostTagList","PostCategoryList","PostDetail","NewPostTagDetail","NewPostCategoryDetail","CouponDetail","NewTagDetail","OrderList","OrderDetail","StaffList","StaffDetail","ExpenseList","ExpenseDetail","CustomerDetail","PagesList","Delivery","ManageThemes","SiteInfo","AdminList","AdminDetail","Email","App","baseUrl","document","apiService","handleResponse","handleErrors","rootReducer","reducers","persistConfig","storage","whitelist","pReducer","persistReducer","store","createStore","compose","applyMiddleware","__REDUX_DEVTOOLS_EXTENSION__","f","persistStore","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.af2cdf33.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Form, Input } from 'antd';\r\n\r\nconst { TextArea } = Input;\r\n\r\n\r\n\r\ninterface Props {\r\n    label?: string;\r\n    type?: string;\r\n    defaultValue?: string;\r\n    value?: string;\r\n    onChange?: any;\r\n    disabled?: boolean;\r\n    isError?: boolean;\r\n    errorString?: string;\r\n    name?: string;\r\n    addonBefore?: string;\r\n    required?: boolean;\r\n    placeHolder?:string; \r\n}\r\n\r\nconst Demo = ({ required, addonBefore, label, \r\n    type, defaultValue,value, onChange, disabled,\r\n     isError, errorString, name,\r\n     placeHolder\r\n    }: Props) => {\r\n    return (\r\n        <>\r\n            {label && (\r\n                <h3 className='inputFieldLabel'>\r\n                    {label}\r\n                </h3>\r\n            )}\r\n\r\n            <Form.Item\r\n                // hasFeedback={true}\r\n                validateStatus={isError ? \"error\" : \"\"}\r\n                // hasFeedback validateStatus=\"success\"\r\n                help={errorString}\r\n                // rules={[{ required: true }]}\r\n                >\r\n\r\n                <Input\r\n                    required={required}\r\n                    type={type}\r\n                    addonBefore={addonBefore}\r\n                    style={{\r\n                        borderRadius: '0'\r\n                    }}\r\n                    name={name}\r\n                    disabled={disabled}\r\n                    value={value}\r\n                    onChange={onChange}\r\n                    className='inputclassName'\r\n                    placeholder={placeHolder}\r\n                     />\r\n\r\n            </Form.Item>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Demo; ","export function actionShouldBlock( meta ) {\r\n    return !meta || !meta.async || !meta.blocking;\r\n}\r\n\r\nexport function actionFinished ( type ) {\r\n    return type.includes( \"_COMPLETED\" ) || type.includes( \"_FAILED\" );\r\n}\r\n","import * as utils from \"./utils\";\r\n\r\nconst busyReducer = ( state = 0, action ) => {\r\n    if ( utils.actionShouldBlock( action.meta ) ) {\r\n        return state;\r\n    }\r\n    if ( utils.actionFinished( action.type ) ) {\r\n        return state - 1;\r\n    }\r\n    return state + 1;\r\n};\r\n\r\nexport default busyReducer;\r\n","import reducer from \"./reducers\";\r\n\r\nexport default reducer;\r\n","export function productPositionInCart(cart, product) {\r\n  return cart.map(item => item.product.id).indexOf(product.id);\r\n}\r\n\r\nexport function newCartItem(product, quantity, isSelectedForCheckout) {\r\n  return {\r\n    product,\r\n    quantity,\r\n    isSelectedForCheckout,\r\n  };\r\n}\r\n","export default ( initialState ) => ( reducerMap ) => ( state = initialState, action ) => {\r\n    const reducer = reducerMap[ action.type ];\r\n    return reducer ? reducer( state, action ) : state;\r\n};\r\n","import isomorphicFetch from 'isomorphic-fetch';\r\n\r\nexport default (url, method, body) => {\r\n\tconst options = {\r\n\t\tmethod,\r\n\t\theaders: requestHeaders(),\r\n\t\tbody: method !== 'GET' ? JSON.stringify(body) : null\r\n\t};\r\n\r\n\treturn isomorphicFetch(url, options).then(res =>\r\n\t\tparseStatus(res.status, res.json())\r\n\t);\r\n};\r\n\r\nfunction parseStatus(status, res) {\r\n\treturn new Promise((resolve, reject) => {\r\n\t\tif (status >= 200 && status < 300) {\r\n\t\t\tres.then(response => resolve(response));\r\n\t\t} else {\r\n\t\t\tres.then(response => reject({ status, response }));\r\n\t\t}\r\n\t});\r\n}\r\n\r\nfunction requestHeaders() {\r\n\treturn {\r\n\t\tAccept: 'application/json',\r\n\t\t'Content-Type': 'application/json'\r\n\t};\r\n}\r\n","export function getCartItemQuantity(cart, id) {\r\n  return cart.find((item) => item.product.id === id).quantity;\r\n}\r\n\r\nexport const getTotalPriceOfCartItems = (cartItems) => {\r\n  if (!cartItems.length > 0) {\r\n    return 0;\r\n  }\r\n\r\n  const prices = cartItems.map((cartItem) => {\r\n    return cartItem.quantity * parseInt(cartItem.product['price']) || 0;\r\n  });\r\n\r\n  const totalPrice = prices.reduce((a, b) => {\r\n    return a + b;\r\n  }, 0);\r\n  return totalPrice;\r\n};\r\n","import reducer from \"./reducers\";\r\n\r\nimport * as cartOperations from \"./operations\";\r\nimport * as cartSelectors from \"./selectors\";\r\n\r\nexport {\r\n    cartOperations,\r\n    cartSelectors,\r\n};\r\n\r\nexport default reducer;\r\n","import * as types from './types';\r\nimport * as utils from './utils';\r\nimport { createReducer } from '../../utils';\r\n\r\n/* State shape\r\n[\r\n    {\r\n        product,\r\n        quantity,\r\n    }\r\n]\r\n*/\r\n\r\nconst initialState = [];\r\n\r\nconst cartReducer = createReducer(initialState)({\r\n  [types.TOGGLE]: (state, action) => {\r\n    const { product, quantity, isSelectedForCheckout } = action.payload;\r\n    const index = utils.productPositionInCart(state, product);\r\n    if (index === -1) {\r\n      return [\r\n        utils.newCartItem(product, quantity, isSelectedForCheckout),\r\n        ...state,\r\n      ];\r\n    }\r\n\r\n    const tempArrayWithOutOldProduct = state.filter(\r\n      (item) => item.product.id !== product.id\r\n    );\r\n\r\n    return tempArrayWithOutOldProduct;\r\n  },\r\n\r\n  [types.ADD_PRODUCTS_TO_CART]: (state, action) => {\r\n    const { cartItems } = action.payload;\r\n\r\n    if (cartItems.length > 0) {\r\n      return cartItems;\r\n    } else {\r\n      return [...state];\r\n    }\r\n  },\r\n\r\n  [types.SELECT_PRODUCT_FOR_CHECKOUT]: (state, action) => {\r\n    const { product } = action.payload;\r\n\r\n    const index = utils.productPositionInCart(state, product.product);\r\n    if (index === -1) {\r\n      return [...state, { ...product, isSelectedForCheckout: true }];\r\n    } else if (index !== -1 && !product.isSelectedForCheckout) {\r\n      const tempArrayWithOutOldProduct = state.filter(\r\n        (item) => item.product.id !== product.product.id\r\n      );\r\n\r\n      return [\r\n        ...tempArrayWithOutOldProduct,\r\n        { ...product, isSelectedForCheckout: true },\r\n      ];\r\n    }\r\n\r\n    const tempArrayWithOutOldProduct = state.filter(\r\n      (item) => item.product.id !== product.product.id\r\n    );\r\n\r\n    return [\r\n      ...tempArrayWithOutOldProduct,\r\n      { ...product, isSelectedForCheckout: false },\r\n    ];\r\n  },\r\n\r\n  [types.CHANGE_QUANTITY]: (state, action) => {\r\n    const { product, quantity } = action.payload;\r\n    const index = utils.productPositionInCart(state, product);\r\n\r\n    const updatedItem = Object.assign({}, state[index], { quantity });\r\n    return [...state.slice(0, index), updatedItem, ...state.slice(index + 1)];\r\n  },\r\n  [types.REMOVE]: (state, action) => {\r\n    const { product } = action.payload;\r\n    const index = utils.productPositionInCart(state, product);\r\n    return [...state.slice(0, index), ...state.slice(index + 1)];\r\n  },\r\n  [types.CLEAR]: () => [],\r\n});\r\n\r\nexport default cartReducer;\r\n","export const SET_CART = 'cart/SET';\r\nexport const TOGGLE = 'cart/TOGGLE';\r\nexport const ADD_PRODUCTS_TO_CART = 'cart/ADD_PRODUCTS_TO_CART';\r\nexport const SELECT_PRODUCT_FOR_CHECKOUT = 'wishList/SELECT_PRODUCT_FOR_CHECKOUT';\r\nexport const CHANGE_QUANTITY = 'cart/CHANGE_QUANTITY';\r\nexport const REMOVE = 'cart/REMOVE';\r\nexport const CLEAR = 'cart/CLEAR';\r\n","export function productPositionInWishList(wishList, productId) {\r\n  return wishList.map(item => item).indexOf(productId);\r\n}\r\n","import reducer from './reducers';\r\n\r\nimport * as wishListOperations from './operations';\r\nimport * as wishListSelectors from './selectors';\r\n\r\nexport { wishListOperations, wishListSelectors };\r\n\r\nexport default reducer;\r\n","import * as types from './types';\r\nimport * as utils from './utils';\r\nimport { createReducer } from '../../utils';\r\n\r\n/* State shape\r\n[\r\n    {\r\n        product\r\n    }\r\n]\r\n*/\r\n\r\nconst initialState = [];\r\n\r\nconst wishListReducer = createReducer(initialState)({\r\n  [types.TOGGLE]: (state, action) => {\r\n    const { productId } = action.payload;\r\n\r\n    const index = utils.productPositionInWishList(state, productId);\r\n    if (index === -1) {\r\n      return [...state, productId];\r\n    }\r\n\r\n    const tempArrayWithOutOldProduct = state.filter(\r\n      (item) => item !== productId\r\n    );\r\n\r\n    return tempArrayWithOutOldProduct;\r\n  },\r\n  [types.ADD_WISHLIST]: (state, action) => {\r\n    const wishlist = action.payload;\r\n    return [...wishlist];\r\n  },\r\n\r\n  [types.REMOVE]: (state, action) => {\r\n    const { productId } = action.payload;\r\n    const index = utils.productPositionInWishList(state, productId);\r\n    return [...state.slice(0, index), ...state.slice(index + 1)];\r\n  },\r\n  [types.CLEAR]: () => [],\r\n});\r\n\r\nexport default wishListReducer;\r\n","export const TOGGLE = 'wishList/TOGGLE';\r\nexport const ADD_WISHLIST = 'wishList/ADD_WISHLIST';\r\nexport const REMOVE = 'wishList/REMOVE';\r\nexport const CLEAR = 'wishList/CLEAR';\r\n","export function getCartItemQuantity( cart, id ) {\r\n    return cart.find( item => item.product.id === id ).quantity;\r\n}\r\n\r\n\r\nexport const getTotalPriceOfCartItems = (cartItems) => {\r\n    if(!cartItems.length > 0){\r\n        return 0; \r\n    }\r\n\r\n    return cartItems.reduce((a,b) => {\r\n        return !(b.quantity > 1) && a + +b.product.price || +b.product.price * b.quantity\r\n    },0); \r\n\r\n}","import reducer from './reducers';\r\n\r\nimport * as checkoutOperations from './operations';\r\nimport * as checkoutSelectors from './selectors';\r\n\r\nexport { checkoutOperations, checkoutSelectors };\r\n\r\nexport default reducer;\r\n","import * as types from './types';\r\nimport * as utils from './utils';\r\nimport { createReducer } from '../../utils';\r\n\r\n/* State shape\r\n[\r\n    {\r\n        product,\r\n        quantity,\r\n    }\r\n]\r\n*/\r\n\r\nconst initialState = [];\r\n\r\nconst checkoutReducer = createReducer(initialState)({\r\n  [types.ADD_PRODUCTS_TO_CHECKOUT]: (state, action) => {\r\n    const { products } = action.payload;\r\n\r\n    if (products.length > 0) {\r\n      const uniqueProductsOfCheckout = products.filter(function(product) {\r\n        return state.indexOf(product) == -1;\r\n      });\r\n      return uniqueProductsOfCheckout;\r\n    } else {\r\n      return [...state];\r\n    }\r\n  },\r\n  [types.REMOVE]: (state, action) => {\r\n    const { product } = action.payload;\r\n    const index = utils.productPositionInCart(state, product);\r\n    return [...state.slice(0, index), ...state.slice(index + 1)];\r\n  },\r\n  [types.CLEAR]: () => [],\r\n});\r\n\r\nexport default checkoutReducer;\r\n","export const SET_CART = 'checkout/SET';\r\nexport const TOGGLE = 'checkout/TOGGLE';\r\nexport const ADD_PRODUCTS_TO_CHECKOUT = 'checkout/ADD_PRODUCTS_TO_CHECKOUT';\r\nexport const CHANGE_QUANTITY = 'checkout/CHANGE_QUANTITY';\r\nexport const REMOVE = 'checkout/REMOVE';\r\nexport const CLEAR = 'checkout/CLEAR';\r\n","export function productPositionInCart( cart, product ) {\r\n    return cart.map( item => item.product.id ).indexOf( product.id );\r\n}\r\n\r\nexport function newCartItem( product, quantity ) {\r\n    return {\r\n        product,\r\n        quantity,\r\n    };\r\n}\r\n","export const ADD = 'serach/ADD';\r\nexport const UPDATE = 'serach/UPDATE';\r\nexport const REMOVE = 'serach/REMOVE';\r\nexport const CLEAR = 'serach/CLEAR';\r\n","export function queryPositionInQueryList(queryList, query) {\r\n  return queryList.map(item => item.key).indexOf(query.key);\r\n}\r\n\r\nexport function newQueryItem(query) {\r\n  return query;\r\n}\r\n","import reducer from './reducers';\r\n\r\nimport * as queryOperations from './operations';\r\nimport * as querySelectors from './selectors';\r\n\r\nexport { queryOperations, querySelectors };\r\n\r\nexport default reducer;\r\n","import * as types from './types';\r\nimport * as utils from './utils';\r\nimport { createReducer } from '../../utils';\r\n\r\n/* State shape\r\n[\r\n    {\r\n       id: uniqueId,\r\n       key: 'searchQuery',\r\n       value: string | product => {name,id,image}\r\n       created: Date,\r\n       lastUpdated: Date\r\n    }\r\n]\r\n*/\r\n\r\nconst initialState = [];\r\n\r\nconst searyQueryReducer = createReducer(initialState)({\r\n  [types.ADD]: (state, action) => {\r\n    const { query } = action.payload;\r\n    const index = utils.queryPositionInQueryList(state, query);\r\n    if (index === -1) {\r\n      return [utils.newQueryItem(query), ...state];\r\n    }\r\n\r\n    const currentItem = state[index];\r\n    const updatedItem = Object.assign({}, currentItem);\r\n    return [...state.slice(0, index), updatedItem, ...state.slice(index + 1)];\r\n  },\r\n  [types.UPDATE]: (state, action) => {\r\n    const { query } = action.payload;\r\n    const oldQuery = state.find(item => item.key !== query.key);\r\n    const tempArrayWithOutOldQueries = state.filter(item => item.key !== query.key);\r\n    return [...tempArrayWithOutOldQueries, { ...oldQuery, ...query }];\r\n  },\r\n  [types.REMOVE]: (state, action) => {\r\n    const { product } = action.payload;\r\n    const index = utils.queryPositionInQueryList(state, product);\r\n    return [...state.slice(0, index), ...state.slice(index + 1)];\r\n  },\r\n  [types.CLEAR]: () => [],\r\n});\r\n\r\nexport default searyQueryReducer;\r\n","import { combineReducers } from \"redux\";\r\nimport * as types from \"./types\";\r\nimport { createReducer } from \"../../utils\";\r\n\r\n/* State shape\r\n{\r\n    details: product,\r\n    list: [ product ],\r\n}\r\n*/\r\n\r\nconst detailsReducer = createReducer( null )( {\r\n    [ types.FETCH_DETAILS_COMPLETED ]: ( state, action ) => action.payload.product,\r\n} );\r\n\r\nconst listReducer = createReducer( [ ] )( {\r\n    [ types.FETCH_LIST_COMPLETED ]: ( state, action ) => action.payload.products,\r\n} );\r\n\r\nexport default combineReducers( {\r\n    details: detailsReducer,\r\n    list: listReducer,\r\n} );\r\n","export const FETCH_DETAILS = \"product/FETCH_DETAILS\";\r\nexport const FETCH_DETAILS_COMPLETED = \"product/FETCH_DETAILS_COMPLETED\";\r\nexport const FETCH_DETAILS_FAILED = \"product/FETCH_DETAILS_FAILED\";\r\n\r\nexport const FETCH_LIST = \"product/FETCH_LIST\";\r\nexport const FETCH_LIST_COMPLETED = \"product/FETCH_LIST_COMPLETED\";\r\nexport const FETCH_LIST_FAILED = \"product/FETCH_LIST_FAILED\";\r\n","import reducer from \"./reducers\";\r\n\r\nimport * as productOperations from \"./operations\";\r\n\r\nexport {\r\n    productOperations,\r\n};\r\n\r\nexport default reducer;\r\n","import { combineReducers } from 'redux';\r\nimport * as types from './types';\r\nimport { createReducer } from '../../utils';\r\n\r\n/* State shape\r\n{\r\n    isAuthenticated: bool,\r\n    redirectAfterLogin: string\r\n}\r\n*/\r\n\r\nconst authReducer = createReducer(false)({\r\n  [types.LOGIN]: () => true,\r\n  [types.LOGOUT]: () => false,\r\n});\r\n\r\nconst redirectAfterLoginReducer = createReducer(null)({\r\n  [types.SET_REDIRECT_AFTER_LOGIN]: (state, action) => action.payload.redirectUrl,\r\n});\r\n\r\nexport default combineReducers({\r\n  isAuthenticated: authReducer,\r\n  redirectAfterLogin: redirectAfterLoginReducer,\r\n});\r\n","export const LOGIN = \"session/LOGIN\";\r\nexport const LOGIN_COMPLETED = \"session/LOGIN_COMPLETED\";\r\nexport const LOGIN_FAILED = \"session/LOGIN_FAILED\";\r\nexport const LOGOUT = \"session/LOGOUT\";\r\nexport const INITIALIZE = \"session/INITIALIZE_SESSION\";\r\nexport const SET_REDIRECT_AFTER_LOGIN = \"session/SET_REDIRECT_AFTER_LOGIN\";\r\nexport const ADD_CUSTOMER_DATA = \"session/ADD_CUSTOMER_DATA\";\r\n","import reducer from \"./reducers\";\r\n\r\nimport * as sessionOperations from \"./operations\";\r\n\r\nexport {\r\n    sessionOperations,\r\n};\r\n\r\nexport default reducer;\r\n","import * as types from './types';\r\nimport { createReducer } from '../../utils';\r\n\r\nconst initialState = [];\r\n\r\nconst cartReducer = createReducer(initialState)({\r\n  [types.ADD_CATEGORIES]: (state, action) => {\r\n    const { categories } = action.payload;\r\n\r\n    if (categories) {\r\n      return categories;\r\n    }\r\n\r\n    return [...state];\r\n  },\r\n\r\n  [types.GET_CATEGORIES]: (state, action) => {\r\n    return [...state];\r\n  },\r\n});\r\n\r\nexport default cartReducer;\r\n","export const ADD_CATEGORIES = 'category/ADD_CATEGORIES';\r\nexport const GET_CATEGORIES = 'category/GET_CATEGORIES';\r\n","import reducer from './reducers';\r\n\r\nimport * as categoryOperations from './operations';\r\nimport * as categorySelectors from './selectors';\r\n\r\nexport { categoryOperations, categorySelectors };\r\n\r\nexport default reducer;\r\n","import * as types from './types';\r\nimport { createReducer } from '../../utils';\r\n\r\nconst initialState = {};\r\n\r\nconst cartReducer = createReducer(initialState)({\r\n  [types.ADD_ITEM_TO_CACHE]: (state, action) => {\r\n    const { response } = action.payload;\r\n\r\n    if (response) {\r\n      return { ...state, ...response };\r\n    }\r\n\r\n    return { ...state };\r\n  },\r\n});\r\n\r\nexport default cartReducer;\r\n","export const ADD_ITEM_TO_CACHE = 'category/ADD_ITEM_TO_CACHE';\r\n","import reducer from './reducers';\r\n\r\nimport * as cacheOperations from './operations';\r\nimport * as cacheSelectors from './selectors';\r\n\r\nexport { cacheOperations, cacheSelectors };\r\n\r\nexport default reducer;\r\n","import * as types from './types';\r\nimport { createReducer } from '../../utils';\r\n\r\nconst initialState = [];\r\n\r\nconst cartReducer = createReducer(initialState)({\r\n  [types.ADD_BRAND]: (state, action) => {\r\n    const { brands } = action.payload;\r\n\r\n    if (brands) {\r\n      return brands;\r\n    }\r\n\r\n    return [...state];\r\n  },\r\n\r\n  [types.GET_BRAND]: (state, action) => {\r\n    return [...state];\r\n  },\r\n});\r\n\r\nexport default cartReducer;\r\n","export const ADD_BRAND = 'category/ADD_BRAND';\r\nexport const GET_BRAND = 'category/GET_BRAND';\r\n","import reducer from './reducers';\r\n\r\nimport * as brandOperations from './operations';\r\nimport * as brandSelectors from './selectors';\r\n\r\nexport { brandOperations, brandSelectors };\r\n\r\nexport default reducer;\r\n","import * as types from './types';\r\nimport { createReducer } from '../../utils';\r\n\r\nconst initialState = [];\r\n\r\nconst cartReducer = createReducer(initialState)({\r\n  [types.ADD_TAGS]: (state, action) => {\r\n    const { tags } = action.payload;\r\n\r\n    if (tags) {\r\n      return tags;\r\n    }\r\n\r\n    return [...state];\r\n  },\r\n\r\n  [types.GET_TAGS]: (state, action) => {\r\n    return [...state];\r\n  },\r\n});\r\n\r\nexport default cartReducer;\r\n","export const ADD_TAGS = 'tag/ADD_TAGS';\r\nexport const GET_TAGS = 'tag/GET_TAGS';\r\n","import reducer from './reducers';\r\n\r\nimport * as tagOperations from './operations';\r\nimport * as tagSelectors from './selectors';\r\n\r\nexport { tagOperations, tagSelectors };\r\n\r\nexport default reducer;\r\n","const isObjectEmpty = value => {\r\n  return !value || !Object.keys(value).length > 0;\r\n};\r\n\r\nconst manupulateURL = (url, urlOptions = {}) => {\r\n  if (isObjectEmpty(urlOptions)) return url;\r\n\r\n  const params = urlOptions.params || {};\r\n  const placeHolders = urlOptions.placeHolders || {};\r\n\r\n\r\n\r\n  return url\r\n    .split('/')\r\n    .map(currentValue => {\r\n      if (currentValue.includes(':') && !isObjectEmpty(placeHolders)) {\r\n        let actualPlaceholderValue = placeHolders[currentValue.replace(':', '')];\r\n        currentValue = actualPlaceholderValue;\r\n      }\r\n\r\n      if (currentValue.includes('?')) {\r\n        currentValue = currentValue\r\n          .split('&')\r\n          .map(currentValue => {\r\n            const param = currentValue.slice(currentValue.indexOf('=') + 1);\r\n            return currentValue.replace(param, params[param] || '');\r\n          })\r\n          .join('&');\r\n      }\r\n      return currentValue;\r\n    })\r\n    .join('/');\r\n};\r\n\r\nexport default manupulateURL;\r\n","import config from '../config.json';\r\nimport apiMap from '../apiMap.json';\r\nimport Converter from './converter.js';\r\n\r\n// import utils\r\nimport { manupulateURL } from './utils';\r\n\r\nlet converter = new Converter();\r\n\r\nclass Connector {\r\n  //TODO\r\n  constructor() {\r\n    this.options = {};\r\n  }\r\n\r\n  /**\r\n   * @method request sends request to server\r\n   * this function determines api url and method from config.json\r\n   * and sends request and converts recieved data to general format\r\n   * @param {String} item\r\n   * @param {String} format\r\n   * @param {Object} data optional\r\n   * @returns {Object}  converted data\r\n   */\r\n\r\n  async request(item, format = 'json', options = {}) {\r\n    let api = apiMap[config.server][item]; //api url & method\r\n\r\n    // configuring options for fetch request\r\n\r\n    this.options = {\r\n      ...this.options,\r\n      method: api.method,\r\n      credentials: 'include',\r\n      headers: new Headers({\r\n        ...(format === 'json' && {\r\n          'Content-Type': 'application/json',\r\n        }),\r\n        // \"Content-Type\": \"application/x-www-form-urlencoded\",\r\n        ...(options.headers && {\r\n          ...options.headers,\r\n        }),\r\n      }),\r\n\r\n      ...(format === 'json' ? {\r\n        body: api.method !== 'get' ? JSON.stringify(options.body) : null,\r\n      } : {\r\n          body: api.method !== 'get' ? options.body : null,\r\n        }),\r\n    };\r\n\r\n    //*replace variable parts in url with actual data if params exists |or| just return the url\r\n\r\n    const url = manupulateURL(api.url, options.urlOptions);\r\n\r\n    // change the formate to text if the server is wooCommerce\r\n    if (config['server'] === 'wooCommerce') {\r\n      // format = 'text';\r\n    }\r\n\r\n    try {\r\n      let res = await fetch(config.baseURL + url, this.options);\r\n\r\n      if (res.status >= 200 && res.status < 300) {\r\n        let formattedData = await res['json'](); //await res.json(), res.text()\r\n        if (formattedData.status === 'error') {\r\n          throw formattedData.error;\r\n        }\r\n\r\n        let convertedData = await converter[item](formattedData); //convert recieved data to app general format\r\n        return convertedData;\r\n      } else {\r\n        let error = await res[format]();\r\n\r\n        throw error;\r\n      }\r\n    } catch (err) {\r\n\r\n      throw err;\r\n      //TODO: breakdown errors\r\n    }\r\n  }\r\n}\r\n\r\nexport default Connector;\r\n","import config from '../config.json';\r\nimport dataMap from '../dataMap.json';\r\nimport { product } from '../state/ducks';\r\n\r\nclass Converter {\r\n\t/**\r\n   * @public\r\n   * @method categoryList convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync categoryList(resData) {\r\n\t\tconst data = resData.data || [];\r\n\r\n\t\tconst formatedData =\r\n\t\t\tdata.length > 0 &&\r\n\t\t\tdata.map((category) => {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tid: category._id || '',\r\n\t\t\t\t\tkey: category._id || '',\r\n\t\t\t\t\tname: category.name && category.name,\r\n\t\t\t\t\tdescription: category.description && category.description,\r\n\t\t\t\t\tproductCount: category.productCount || 0,\r\n\t\t\t\t\tparent: category.parent || '',\r\n\t\t\t\t\tcover: category.cover ? `${config['baseURL']}${category.cover.thumbnail}` : null,\r\n\t\t\t\t\tsubCount:\r\n\t\t\t\t\t\tcategory.subCategory.length === 1\r\n\t\t\t\t\t\t\t? category.subCategory[0] && category.subCategory[0].name ? category.subCategory.length : 0\r\n\t\t\t\t\t\t\t: category.subCategory.length,\r\n\t\t\t\t\t...(category.subCategory &&\r\n\t\t\t\t\t\tcategory.subCategory.length > 0 &&\r\n\t\t\t\t\t\tcategory.subCategory[0] &&\r\n\t\t\t\t\t\tcategory.subCategory[0]['name'] && {\r\n\t\t\t\t\t\tchildren: category.subCategory.map((subCat) => {\r\n\t\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\t\tid: subCat._id || '',\r\n\t\t\t\t\t\t\t\tkey: subCat._id,\r\n\t\t\t\t\t\t\t\tname: subCat.name && subCat.name,\r\n\t\t\t\t\t\t\t\tdescription: subCat.description && subCat.description,\r\n\t\t\t\t\t\t\t\tcover: subCat.cover ? `${config['baseURL']}${subCat.cover.thumbnail}` : ''\r\n\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t})\r\n\t\t\t\t};\r\n\t\t\t});\r\n\r\n\t\treturn formatedData;\r\n\t};\r\n\r\n\r\n\t\t/**\r\n   * @public\r\n   * @method postCategoryList convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n  async postCategoryList(resData) {\r\n\tconst data = resData.data || [];\r\n\r\n\tconst formatedData =\r\n\t\tdata.length > 0 &&\r\n\t\tdata.map((category) => {\r\n\t\t\treturn {\r\n\t\t\t\tid: category._id || '',\r\n\t\t\t\tkey: category._id || '',\r\n\t\t\t\tname: category.name && category.name,\r\n\t\t\t\tdescription: category.description && category.description,\r\n\t\t\t\t// productCount: category.productCount || 0,\r\n\t\t\t\tparent: category.parent || '',\r\n\t\t\t\tcover: category.cover ? `${config['baseURL']}${category.cover.thumbnail}` : null,\r\n\t\t\t\tsubCount:\r\n\t\t\t\t\tcategory.subCategory.length === 1\r\n\t\t\t\t\t\t? category.subCategory[0] && category.subCategory[0].name ? category.subCategory.length : 0\r\n\t\t\t\t\t\t: category.subCategory.length,\r\n\t\t\t\t...(category.subCategory &&\r\n\t\t\t\t\tcategory.subCategory.length > 0 &&\r\n\t\t\t\t\tcategory.subCategory[0] &&\r\n\t\t\t\t\tcategory.subCategory[0]['name'] && {\r\n\t\t\t\t\tchildren: category.subCategory.map((subCat) => {\r\n\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\tid: subCat._id || '',\r\n\t\t\t\t\t\t\tkey: subCat._id,\r\n\t\t\t\t\t\t\tname: subCat.name && subCat.name,\r\n\t\t\t\t\t\t\tdescription: subCat.description && subCat.description,\r\n\t\t\t\t\t\t\tcover: subCat.cover ? `${config['baseURL']}${subCat.cover.thumbnail}` : ''\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t})\r\n\t\t\t\t})\r\n\t\t\t};\r\n\t\t});\r\n\r\n\treturn formatedData;\r\n};\r\n\r\n\r\n\t\r\n\r\n\t/**\r\n* @public\r\n* @method getAllNotification convert api data from API to general format based on config server\r\n* @param {Object} data response objectc from alpha\r\n* @returns {Object}  converted data\r\n*/\r\n\tasync getAllNotification(resData) {\r\n\t\tconst data = resData.data || [];\r\n\r\n\t\tconst formatedData =\r\n\t\t\tdata.length > 0 &&\r\n\t\t\tdata.map((noti) => {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tid: noti._id || '',\r\n\t\t\t\t\tkey: noti._id || '',\r\n\t\t\t\t\theading: noti.heading && noti.heading,\r\n\t\t\t\t\ttext: noti.text && noti.text,\r\n\t\t\t\t\ttype: noti.type,\r\n\t\t\t\t\tlink: noti.link || '',\r\n\t\t\t\t\tadded: noti.added || '',\r\n\t\t\t\t\tread: noti.read\r\n\t\t\t\t};\r\n\t\t\t});\r\n\r\n\t\treturn formatedData;\r\n\t}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\t/**\r\n* @public\r\n* @method categorySelectist convert api data from API to general format based on config server\r\n* @param {Object} data response objectc from alpha\r\n* @returns {Object}  converted data\r\n*/\r\n\tasync categorySelectist(resData) {\r\n\t\tconst data = resData.data || [];\r\n\r\n\t\tconst formatedData =\r\n\t\t\tdata.length > 0 &&\r\n\t\t\tdata.map((category) => {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tid: category._id || '',\r\n\t\t\t\t\tkey: category._id || '',\r\n\t\t\t\t\ttitle: category.name && category.name,\r\n\t\t\t\t\t...(category.subCategory &&\r\n\t\t\t\t\t\tcategory.subCategory.length > 0 &&\r\n\t\t\t\t\t\tcategory.subCategory[0] &&\r\n\t\t\t\t\t\tcategory.subCategory[0]['name'] && {\r\n\t\t\t\t\t\tchildren: category.subCategory.map((subCat) => {\r\n\t\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\t\tid: subCat._id || '',\r\n\t\t\t\t\t\t\t\tkey: subCat._id,\r\n\t\t\t\t\t\t\t\ttitle: subCat.name && subCat.name,\r\n\t\t\t\t\t\t\t\tcover: subCat.cover ? `${config['baseURL']}${subCat.cover.thumbnail ? subCat.cover.thumbnail : \"\"}` : ''\r\n\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t})\r\n\t\t\t\t};\r\n\t\t\t});\r\n\r\n\t\treturn formatedData;\r\n\t}\r\n\r\n\r\n\r\n\r\n\t/**\r\n   * @public\r\n   * @method categoryProducts convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync categoryProducts(resData) {\r\n\t\tconst data = resData.data || [];\r\n\t\tconst isNext = resData.page.next;\r\n\r\n\t\tconst convertedData =\r\n\t\t\tdata.length > 0 &&\r\n\t\t\tdata.map((product) => {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tid: product._id || '',\r\n\t\t\t\t\tname: product.name && product.name,\r\n\t\t\t\t\tdescription: product.description && product.description,\r\n\t\t\t\t\tcover: `${config['baseURL']}${(product.cover && product.cover['thumbnail']) || ''}`,\r\n\t\t\t\t\tregularPrice: product.price && product.price['regular'],\r\n\t\t\t\t\tofferPrice: product.price && product.price['offer'],\r\n\t\t\t\t\turl: product.url,\r\n\t\t\t\t\tunit: product.unit,\r\n\t\t\t\t\tcategory: product.category,\r\n\t\t\t\t\tpricing: product.pricing,\r\n\t\t\t\t\tdate: product.date,\r\n\t\t\t\t\ttime: product.time,\r\n\t\t\t\t\tvenue: product.venue,\r\n\t\t\t\t\tbrand: product.brand,\r\n\t\t\t\t\ttags: product.tags,\r\n\t\t\t\t\tprice:\r\n\t\t\t\t\t\tparseInt(product.price['offer']) > parseInt(product.price['regular'])\r\n\t\t\t\t\t\t\t? product.price['offer']\r\n\t\t\t\t\t\t\t: product.price['regular'],\r\n\t\t\t\t\tavailable: product.pricing &&\r\n\t\t\t\t\tproduct.pricing.length > 0 ?\r\n\t\t\t\t\t\t\t product.pricing[0]['stock'] && product.pricing[0]['stock']['available']\r\n\t\t\t\t\t\t\t : 0,\r\n\t\t\t\t\tminimum: product.pricing &&\r\n\t\t\t\t\tproduct.pricing.length > 0 ?\r\n\t\t\t\t\tproduct.pricing[0]['stock'] && product.pricing[0]['stock']['minimum']\r\n\t\t\t\t\t: 0\r\n\t\t\t\t};\r\n\t\t\t});\r\n\r\n\t\t// return {\r\n\t\t// \tdata: convertedData,\r\n\t\t// \tisNext: isNext\r\n\t\t// };\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method getCart convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync getCart(resData) {\r\n\t\tconst cartItems = resData.items || [];\r\n\t\tconst convertedData =\r\n\t\t\tcartItems.length > 0 &&\r\n\t\t\tcartItems.map((cartItem) => {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tid: cartItem._id || '',\r\n\t\t\t\t\tname: cartItem.name && cartItem.name,\r\n\t\t\t\t\tcover: `${config['baseURL']}${cartItem.cover.medium}`,\r\n\t\t\t\t\tregularPrice: cartItem.price && cartItem.price['regular'],\r\n\t\t\t\t\tofferPrice: cartItem.price && cartItem.price['offer'],\r\n\t\t\t\t\tquantity: cartItem.quantity,\r\n\t\t\t\t\turl: cartItem.url,\r\n\t\t\t\t\tcartKey: cartItem.cartKey\r\n\t\t\t\t};\r\n\t\t\t});\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method addtoCart convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync addtoCart(resData) {\r\n\t\tlet data = false;\r\n\r\n\t\tif (resData['inserted']) {\r\n\t\t\tdata = {\r\n\t\t\t\tid: resData['inserted']._id || '',\r\n\t\t\t\tname: resData['inserted'].name && resData['inserted'].name,\r\n\t\t\t\tcover: `${config['baseURL']}${resData['inserted'].cover.medium}`,\r\n\t\t\t\tregularPrice: resData['inserted'].price && resData['inserted'].price['regular'],\r\n\t\t\t\tofferPrice: resData['inserted'].price && resData['inserted'].price['offer'],\r\n\t\t\t\tquantity: resData['inserted'].quantity,\r\n\t\t\t\turl: resData['inserted'].url,\r\n\t\t\t\tcartKey: resData['inserted'].cartKey\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tconst convertedData = data;\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method removeFromCart convert api data from API to general format based on config server\r\n   * @param {Object} resData response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync removeFromCart(resData) {\r\n\t\tlet convertedData = false;\r\n\t\tif (resData) {\r\n\t\t\tconvertedData = true;\r\n\t\t}\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method updateCartItem convert api data from API to general format based on config server\r\n   * @param {Object} resData response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync updateCartItem(resData) {\r\n\t\tlet convertedData = false;\r\n\t\tif (resData['updated']) {\r\n\t\t\tconvertedData = {\r\n\t\t\t\tquantity: resData.updated['quantity']\r\n\t\t\t};\r\n\t\t}\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method clearCart convert api data from API to general format based on config server\r\n   * @param {Object} resData response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync clearCart(data) {\r\n\t\tif (data && data['msg']) {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\t\treturn data;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method getWishlist convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync getWishlist(resData) {\r\n\t\t// const cartItems = resData.items || [];\r\n\t\tconst convertedData = resData;\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method addWishlist convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync addWishlist(resData) {\r\n\t\tif (resData && resData['msg'] === 'wishlist updated') {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method removeFromWishlist convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync removeFromWishlist(resData) {\r\n\t\tif (resData && resData['msg'] === 'wishlist updated') {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method removeAllWishlist convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync removeAllWishlist(resData) {\r\n\t\tif (resData && resData['msg'] === 'wishlist updated') {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method tagProducts convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync tagProducts(resData) {\r\n\t\tconst data = resData.data || [];\r\n\t\tconst isNext = resData.page.next;\r\n\r\n\t\tconst convertedData =\r\n\t\t\tdata.length > 0 &&\r\n\t\t\tdata.map((product) => {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tid: product._id || '',\r\n\t\t\t\t\tname: product.name && product.name,\r\n\t\t\t\t\tdescription: product.description && product.description,\r\n\t\t\t\t\tcover: `${config['baseURL']}${(product.cover && product.cover['thumbnail']) || ''}`,\r\n\t\t\t\t\tregularPrice: product.price && product.price['regular'],\r\n\t\t\t\t\tofferPrice: product.price && product.price['offer'],\r\n\t\t\t\t\turl: product.url,\r\n\t\t\t\t\tunit: product.unit,\r\n\t\t\t\t\tcategory: product.category,\r\n\t\t\t\t\tpricing: product.pricing,\r\n\t\t\t\t\tdate: product.date,\r\n\t\t\t\t\ttime: product.time,\r\n\t\t\t\t\tvenue: product.venue,\r\n\t\t\t\t\tbrand: product.brand,\r\n\t\t\t\t\ttags: product.tags,\r\n\t\t\t\t\tprice:\r\n\t\t\t\t\t\tparseInt(product.price['offer']) > parseInt(product.price['regular'])\r\n\t\t\t\t\t\t\t? product.price['offer']\r\n\t\t\t\t\t\t\t: product.price['regular'],\r\n\t\t\t\t\tavalable: product.pricing &&\r\n\t\t\t\t\tproduct.pricing.length > 0 ?\r\n\t\t\t\t\t\t\t product.pricing[0]['stock'] && product.pricing[0]['stock']['available']\r\n\t\t\t\t\t\t\t : 0,\r\n\t\t\t\t\tminimum: product.pricing &&\r\n\t\t\t\t\tproduct.pricing.length > 0 ?\r\n\t\t\t\t\tproduct.pricing[0]['stock'] && product.pricing[0]['stock']['minimum'] : 0\r\n\t\t\t\t};\r\n\t\t\t});\r\n\r\n\t\t// return {\r\n\t\t// \tdata: convertedData,\r\n\t\t// \tisNext: isNext\r\n\t\t// };\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method brandProducts convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync brandProducts(resData) {\r\n\t\tconst data = resData.data || [];\r\n\t\tconst isNext = resData.page.next;\r\n\r\n\t\tconst convertedData =\r\n\t\t\tdata.length > 0 &&\r\n\t\t\tdata.map((product) => {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tid: product._id || '',\r\n\t\t\t\t\tname: product.name && product.name,\r\n\t\t\t\t\tdescription: product.description && product.description,\r\n\t\t\t\t\tcover: `${config['baseURL']}${(product.cover && product.cover['thumbnail']) || ''}`,\r\n\t\t\t\t\tregularPrice: product.price && product.price['regular'],\r\n\t\t\t\t\tofferPrice: product.price && product.price['offer'],\r\n\t\t\t\t\turl: product.url,\r\n\t\t\t\t\tunit: product.unit,\r\n\t\t\t\t\tcategory: product.category,\r\n\t\t\t\t\tpricing: product.pricing,\r\n\t\t\t\t\tdate: product.date,\r\n\t\t\t\t\ttime: product.time,\r\n\t\t\t\t\tvenue: product.venue,\r\n\t\t\t\t\tbrand: product.brand,\r\n\t\t\t\t\ttags: product.tags,\r\n\t\t\t\t\tprice:\r\n\t\t\t\t\t\tparseInt(product.price['offer']) > parseInt(product.price['regular'])\r\n\t\t\t\t\t\t\t? product.price['offer']\r\n\t\t\t\t\t\t\t: product.price['regular'],\r\n\t\t\t\t\tavalable: product.pricing &&\r\n\t\t\t\t\tproduct.pricing.length > 0 ?\r\n\t\t\t\t\t\t\t product.pricing[0]['stock'] && product.pricing[0]['stock']['available']\r\n\t\t\t\t\t\t\t : 0,\r\n\t\t\t\t\tminimum: product.pricing &&\r\n\t\t\t\t\tproduct.pricing.length > 0 ?\r\n\t\t\t\t\tproduct.pricing[0]['stock'] && product.pricing[0]['stock']['minimum']\r\n\t\t\t\t\t: 0\r\n\t\t\t\t};\r\n\t\t\t});\r\n\r\n\t\t// return {\r\n\t\t// \tdata: convertedData,\r\n\t\t// \tisNext: isNext\r\n\t\t// };\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method productSearch convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync productSearch(resData) {\r\n\t\tconst data = resData.data || [];\r\n\t\tconst isNext = resData.page.next;\r\n\r\n\t\tconst convertedData =\r\n\t\t\t(data.length > 0 &&\r\n\t\t\t\tdata.map((product) => {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tid: product._id || '',\r\n\t\t\t\t\t\tname: product.name && product.name,\r\n\t\t\t\t\t\tdescription: product.description && product.description,\r\n\t\t\t\t\t\tcover: `${config['baseURL']}${product.cover.thumbnail}`,\r\n\t\t\t\t\t\tregularPrice: product.price && product.price['regular'],\r\n\t\t\t\t\t\tofferPrice: product.price && product.price['offer'],\r\n\t\t\t\t\t\turl: product.url,\r\n\t\t\t\t\t\tunit: product.unit,\r\n\t\t\t\t\t\tdate: product.date,\r\n\t\t\t\t\t\tvenue: product.venue,\r\n\t\t\t\t\t\tpricing: product.pricing\r\n\t\t\t\t\t};\r\n\t\t\t\t})) ||\r\n\t\t\t[];\r\n\r\n\t\treturn {\r\n\t\t\tdata: convertedData,\r\n\t\t\tisNext\r\n\t\t};\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method productList convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync productList(resData) {\r\n\t\tconst data = resData.data || [];\r\n\t\tconst isNext = resData.page.next;\r\n\r\n\t\tlet convertedData =\r\n\t\t\tdata.length > 0 &&\r\n\t\t\tdata.map((product) => {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tid: product._id || '',\r\n\t\t\t\t\tname: product.name && product.name,\r\n\t\t\t\t\tdescription: product.description && product.description,\r\n\t\t\t\t\tcover: `${config['baseURL']}${(product.cover && product.cover['thumbnail']) || ''}`,\r\n\t\t\t\t\tregularPrice: product.price && product.price['regular'],\r\n\t\t\t\t\tofferPrice: product.price && product.price['offer'],\r\n\t\t\t\t\turl: product.url,\r\n\t\t\t\t\tunit: product.unit,\r\n\t\t\t\t\tcategory: product.category,\r\n\t\t\t\t\tpricing: product.pricing,\r\n\t\t\t\t\tdate: product.date,\r\n\t\t\t\t\ttime: product.time,\r\n\t\t\t\t\tvenue: product.venue,\r\n\t\t\t\t\tbrand: product.brand,\r\n\t\t\t\t\ttags: product.tags,\r\n\t\t\t\t\tprice:\r\n\t\t\t\t\tparseInt(product.price['offer']) > parseInt(product.price['regular'])\r\n\t\t\t\t\t\t\t? product.price['offer']\r\n\t\t\t\t\t\t\t: product.price['regular'],\r\n\t\t\t\t\tavailable: product.pricing &&\r\n\t\t\t\t\tproduct.pricing.length > 0 ?\r\n\t\t\t\t\t\t\t product.pricing[0]['stock'] && product.pricing[0]['stock']['available']\r\n\t\t\t\t\t\t\t : 0,\r\n\t\t\t\t\tminimum: product.pricing &&\r\n\t\t\t\t\tproduct.pricing.length > 0 ?\r\n\t\t\t\t\tproduct.pricing[0]['stock'] && product.pricing[0]['stock']['minimum']\r\n\t\t\t\t\t: 0\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t};\r\n\t\t\t});\r\n\r\n\t\t// convertedData = {\r\n\t\t// \tdata: convertedData,\r\n\t\t// \tisNext\r\n\t\t// };\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n   * @public\r\n   * @method bundleList convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync bundleList(resData) {\r\n\t\tconst data = resData || [];\r\n\r\n\t\tlet convertedData =\r\n\t\t\tdata.length > 0 &&\r\n\t\t\tdata.map((product) => {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tid: product._id || '',\r\n\t\t\t\t\tname: product.name && product.name,\r\n\t\t\t\t\tdescription: product.description && product.description,\r\n\t\t\t\t\tcover: `${config['baseURL']}${(product.cover && product.cover['thumbnail']) || ''}`,\r\n\t\t\t\t\tregularPrice: product.price && product.price['regular'],\r\n\t\t\t\t\tofferPrice: product.price && product.price['offer'],\r\n\t\t\t\t\turl: product.url,\r\n\t\t\t\t\tstartDate: product.startDate,\r\n\t\t\t\t\tendDate: product.endDate,\r\n\t\t\t\t\tactualPrice: product.actualPrice,\r\n\t\t\t\t\tunit: product.unit,\r\n\t\t\t\t\tcategory: product.category,\r\n\t\t\t\t\tpricing: product.pricing,\r\n\t\t\t\t\tdate: product.date,\r\n\t\t\t\t\ttime: product.time,\r\n\t\t\t\t\tvenue: product.venue,\r\n\t\t\t\t\tbrand: product.brand,\r\n\t\t\t\t\ttags: product.tags,\r\n\t\t\t\t\tproduct: product['product'],\r\n\t\t\t\t\tproductCount: product['product'].length,\r\n\t\t\t\t\tprice:\r\n\t\t\t\t\t\tparseInt(product.price['offer']) > parseInt(product.price['regular'])\r\n\t\t\t\t\t\t\t? product.price['offer']\r\n\t\t\t\t\t\t\t: product.price['regular'],\r\n\t\t\t\t};\r\n\t\t\t});\r\n\r\n\t\t// convertedData = {\r\n\t\t// \tdata: convertedData,\r\n\t\t// \tisNext\r\n\t\t// };\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n* @public\r\n* @method bundleDetail convert api data from API to general format based on config server\r\n* @param {Object} data response objectc from wc\r\n* @returns {Object}  converted data\r\n*/\r\n\tasync bundleDetail(resData) {\r\n\t\tconst data = resData || {};\r\n\r\n\t\tif (Object.keys(data).length > 0) {\r\n\t\t\treturn {\r\n\t\t\t\tid: data._id || '',\r\n\t\t\t\tname: data.name && data.name,\r\n\t\t\t\tdescription: data.description && data.description,\r\n\t\t\t\tcover: `${config['baseURL']}${(data.cover && data.cover['thumbnail']) || ''}`,\r\n\t\t\t\tregularPrice: data.price && data.price['regular'],\r\n\t\t\t\tofferPrice: data.price && data.price['offer'],\r\n\t\t\t\turl: data.url,\r\n\t\t\t\tstartDate: data.startDate,\r\n\t\t\t\tendDate: data.endDate,\r\n\t\t\t\tactualPrice: data.actualPrice,\r\n\t\t\t\tunit: data.unit,\r\n\t\t\t\tcategory: data.category,\r\n\t\t\t\tpricing: data.pricing,\r\n\t\t\t\tdate: data.date,\r\n\t\t\t\ttime: data.time,\r\n\t\t\t\tvenue: data.venue,\r\n\t\t\t\tbrand: data.brand,\r\n\t\t\t\ttags: data.tags,\r\n\t\t\t\tproducts: data.product,\r\n\t\t\t\tproductCount: data['product'].length,\r\n\t\t\t\tprice:\r\n\t\t\t\t\tparseInt(data.price['offer']) > parseInt(data.price['regular'])\r\n\t\t\t\t\t\t? data.price['offer']\r\n\t\t\t\t\t\t: data.price['regular'],\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\telse return data;\r\n\r\n\t\t// convertedData = {\r\n\t\t// \tdata: convertedData,\r\n\t\t// \tisNext\r\n\t\t// };\r\n\r\n\t}\r\n\r\n\r\n\r\n\t\r\n\r\n\r\n\t\r\n\t/**\r\n   * @public\r\n   * @method getAnalyticsPageVisits convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async getAnalyticsPageVisits(resData) {\r\n\tconst data = resData && resData.data ? resData.data : [];\r\n\r\n\tconsole.log('getAnalyticsPageVisits',resData); \r\n\r\n\tlet convertedData =\r\n\t\tdata.length > 0 &&\r\n\t\tdata.map((item) => {\r\n\t\t\treturn {\r\n\t\t\t\tid: item._id || '',\r\n\t\t\t\tvisit: item.count || '',\r\n\t\t\t\tname: item['item'] && item['item']['name'] ,\r\n\t\t\t\turl: item['item'] && item['item']['url'] ,\r\n\t\t\t\titemId: item['item'] && item['item']['_id'] ,\r\n\t\t\t};\r\n\t\t});\r\n\r\n\t// convertedData = {\r\n\t// \tdata: convertedData,\r\n\t// \tisNext\r\n\t// };\r\n\r\n\treturn convertedData;\r\n}\r\n\r\n\r\n\r\n\t\r\n\t/**\r\n   * @public\r\n   * @method getAnalyticsPageVisitCount convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async getAnalyticsPageVisitCount(resData) {\r\n\treturn resData; \r\n\t}\r\n\r\n\r\n\t/**\r\n   * @public\r\n   * @method getAnalyticsDemographicVisits convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  \tasync getAnalyticsDemographicVisits(resData) {\r\n\r\n\t\tconst data = resData && resData.data ? resData.data : [];\r\n\t\tif(data){\r\n\t\t\treturn data; \r\n\t\t}\r\n\t\telse return []\r\n\t}\r\n\r\n\r\n\t/**\r\n   * @public\r\n   * @method getAnalyticsOrders convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n   async getAnalyticsOrders(resData) {\r\n\tif(resData.orders && Object.keys(resData.orders).length > 0){\r\n\t\treturn resData.orders['data']; \r\n\t}\r\n \treturn []; \r\n\t}\r\n\r\n\r\n\r\n\t\t/**\r\n\t * @public\r\n\t * @method getAnalyticsTotalUserCount convert api data from API to general format based on config server\r\n\t * @param {Object} data response objectc from wc\r\n\t * @returns {Object}  converted data\r\n\t */\r\n\tasync getAnalyticsTotalUserCount(resData) {\r\n\t\treturn resData; \r\n\t}\r\n\r\n\r\n\t\t/**\r\n\t * @public\r\n\t * @method customerDetail convert api data from API to general format based on config server\r\n\t * @param {Object} data response objectc from wc\r\n\t * @returns {Object}  converted data\r\n\t */\r\n\tasync customerDetail(resData) {\r\n\t\tif(resData){\r\n\t\t\treturn {\r\n\t\t\t\tid: resData._id || '',\r\n\t\t\t\tkey: resData._id || '',\r\n\t\t\t\tfirstName: resData.firstName || '',\r\n\t\t\t\tlastName: resData.lastName || '',\r\n\t\t\t\tname: resData.firstName + ' ' + resData.lastName,\r\n\t\t\t\tcountry: resData.country || '',\r\n\t\t\t\tcity: resData.city || '',\r\n\t\t\t\temail: resData.email || '',\r\n\t\t\t\tphone: resData.phone || '',\r\n\t\t\t\taddress1: resData.address1 || '',\r\n\t\t\t\taddress2: resData.address2 || '',\r\n\t\t\t\tcreated: resData.created || ''\r\n\t\t\t}\r\n\t\t}\r\n\t\telse return resData; \r\n\t}\r\n\r\n\t\r\n\t/**\r\n   * @public\r\n   * @method couponList convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync couponList(resData) {\r\n\t\tconst data = resData || [];\r\n\r\n\t\tlet convertedData =\r\n\t\t\tdata.length > 0 &&\r\n\t\t\tdata.map((product) => {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tid: product._id || '',\r\n\t\t\t\t\tname: product.name && product.name,\r\n\t\t\t\t\tcode: product.code,\r\n\t\t\t\t\tminimumOrder: product.minimumOrder,\r\n\t\t\t\t\tmaximumOrder: product.maximumOrder,\r\n\t\t\t\t\tofferPrice: product.price && product.price['offer'],\r\n\t\t\t\t\torderedProducts: product.orderedProducts,\r\n\t\t\t\t\tfreeProducts: product.freeProducts,\r\n\t\t\t\t\torderedProductsCount: product.orderedProducts && product.orderedProducts.length,\r\n\t\t\t\t\tfreeProductsCount: product.freeProducts && product.orderedProducts.length,\r\n\t\t\t\t\tamountType: product.amountType,\r\n\t\t\t\t\tamount: product.amount,\r\n\t\t\t\t\tfreeDelivery: product.freeDelivery,\r\n\t\t\t\t\tstartDate: product.startDate,\r\n\t\t\t\t\tendDate: product.endDate,\r\n\t\t\t\t\tmaxUsePerUser: product.maxUsePerUser,\r\n\t\t\t\t\tactualPrice: product.actualPrice,\r\n\t\t\t\t\tunit: product.unit,\r\n\t\t\t\t\tcategory: product.category,\r\n\t\t\t\t\tpricing: product.pricing,\r\n\t\t\t\t\tdate: product.date,\r\n\t\t\t\t\ttime: product.time,\r\n\t\t\t\t\tvenue: product.venue,\r\n\t\t\t\t\tbrand: product.brand,\r\n\t\t\t\t\ttags: product.tags,\r\n\r\n\t\t\t\t};\r\n\t\t\t});\r\n\r\n\t\t// convertedData = {\r\n\t\t// \tdata: convertedData,\r\n\t\t// \tisNext\r\n\t\t// };\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\t/**\r\n   * @public\r\n   * @method tagList convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync tagList(resData) {\r\n\t\tconst data = resData.data || [];\r\n\r\n\t\tconst convertedData =\r\n\t\t\tdata.length > 0 &&\r\n\t\t\tdata.map((tag) => {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tid: tag._id || '',\r\n\t\t\t\t\tkey: tag._id || '',\r\n\t\t\t\t\tname: tag.name && tag.name,\r\n\t\t\t\t\tdescription: tag.description && tag.description\r\n\t\t\t\t};\r\n\t\t\t});\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method brandList convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync brandList(resData) {\r\n\t\tconst data = resData.data || [];\r\n\r\n\t\tconst convertedData =\r\n\t\t\tdata.length > 0 &&\r\n\t\t\tdata.map((brand) => {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tid: brand._id || '',\r\n\t\t\t\t\tkey: brand._id || '',\r\n\t\t\t\t\tname: brand.name && brand.name,\r\n\t\t\t\t\tdescription: brand.description && brand.description,\r\n\t\t\t\t\tcover: `${config['baseURL']}${brand.cover ? brand.cover.thumbnail : ''}`\r\n\t\t\t\t};\r\n\t\t\t});\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\r\n\t/**\r\n* @public\r\n* @method setImageAsThumbnailToItem convert api data from API to general format based on config server\r\n* @param {Object} data response objectc from alpha\r\n* @returns {Object}  converted data\r\n*/\r\n\tasync setImageAsThumbnailToItem(resData) {\r\n\t\tif (resData.success) {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn {};\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n* @public\r\n* @method brandDetail convert api data from API to general format based on config server\r\n* @param {Object} data response objectc from alpha\r\n* @returns {Object}  converted data\r\n*/\r\n\tasync brandDetail(resData) {\r\n\t\tconst data = Object.keys(resData).length > 0 ? resData : null;\r\n\t\tif (data) {\r\n\t\t\treturn {\r\n\t\t\t\tid: data._id || '',\r\n\t\t\t\tkey: data._id || '',\r\n\t\t\t\tname: data.name && data.name,\r\n\t\t\t\tdescription: data.description && data.description,\r\n\t\t\t\turl: data.url && data.url,\r\n\t\t\t\tcover: {\r\n\t\t\t\t\tcover: `${config['baseURL']}${data.cover ? data.cover.original && data.cover.original : ''}`,\r\n\t\t\t\t\tid: data.cover ? data.cover._id : ''\r\n\t\t\t\t},\r\n\t\t\t\timage:\r\n\t\t\t\t\t(data.image &&\r\n\t\t\t\t\t\tdata.image.length > 0 &&\r\n\t\t\t\t\t\tdata.image.map((img) => {\r\n\t\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\t\tid: img._id || '',\r\n\t\t\t\t\t\t\t\tname: img.name && img.name,\r\n\t\t\t\t\t\t\t\tcover: `${config['baseURL']}${img.thumbnail}`,\r\n\t\t\t\t\t\t\t\tadded: img.added,\r\n\t\t\t\t\t\t\t\ttitle: img.title,\r\n\t\t\t\t\t\t\t\tlabels: img.labels,\r\n\t\t\t\t\t\t\t\talt: img.alt,\r\n\t\t\t\t\t\t\t\tcaption: img.caption\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t})) ||\r\n\t\t\t\t\t[]\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn {};\r\n\t}\r\n\r\n\r\n\t/**\r\n* @public\r\n* @method tagDetail convert api data from API to general format based on config server\r\n* @param {Object} data response objectc from alpha\r\n* @returns {Object}  converted data\r\n*/\r\n\tasync tagDetail(resData) {\r\n\t\tconst data = Object.keys(resData).length > 0 ? resData : null;\r\n\t\tif (data) {\r\n\t\t\treturn {\r\n\t\t\t\tid: data._id || '',\r\n\t\t\t\tkey: data._id || '',\r\n\t\t\t\tname: data.name && data.name,\r\n\t\t\t\turl: data.url && data.url,\r\n\t\t\t\tdescription: data.description && data.description,\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn {};\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method customerList convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync customerList(resData) {\r\n\t\tconst data = resData.data || [];\r\n\r\n\t\tconst convertedData =\r\n\t\t\tdata.length > 0 &&\r\n\t\t\tdata.map((customer) => {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tid: customer._id || '',\r\n\t\t\t\t\tkey: customer._id || '',\r\n\t\t\t\t\tfirstName: customer.firstName || '',\r\n\t\t\t\t\tlastName: customer.lastName || '',\r\n\t\t\t\t\tname: customer.firstName + ' ' + customer.lastName,\r\n\t\t\t\t\tcountry: customer.country || '',\r\n\t\t\t\t\tcity: customer.city || '',\r\n\t\t\t\t\temail: customer.email || '',\r\n\t\t\t\t\tphone: customer.phone || '',\r\n\t\t\t\t\taddress1: customer.address1 || '',\r\n\t\t\t\t\taddress2: customer.address2 || '',\r\n\t\t\t\t\tcreated: customer.created || ''\r\n\t\t\t\t};\r\n\t\t\t});\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n   * @public\r\n   * @method pageList convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync pageList(resData) {\r\n\t\tconst data = resData.data || [];\r\n\r\n\t\tconst convertedData =\r\n\t\t\tdata.length > 0 &&\r\n\t\t\tdata.map((page) => {\r\n\t\t\t\treturn {\r\n\t\t\t\t\t...page\r\n\t\t\t\t};\r\n\t\t\t});\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n* @public\r\n* @method themeList convert api data from API to general format based on config server\r\n* @param {Object} data response objectc from alpha\r\n* @returns {Object}  converted data\r\n*/\r\n\tasync themeList(resData) {\r\n\t\tconst data = resData || [];\r\n\r\n\t\tconst convertedData =\r\n\t\t\tdata.length > 0 &&\r\n\t\t\tdata.map((theme) => {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tid: theme._id || '',\r\n\t\t\t\t\tkey: theme._id || '',\r\n\t\t\t\t\tname: theme.name || '',\r\n\t\t\t\t\tadded: theme.added || '',\r\n\t\t\t\t\tthumbnail: `${config['baseURL']}${theme.thumbnail ? theme.thumbnail : \"\"}`,\r\n\r\n\t\t\t\t};\r\n\t\t\t});\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\r\n\t/**\r\n   * @public\r\n   * @method componentList convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync componentList(resData) {\r\n\t\tconst components = resData.components || {};\r\n\r\n\t\tif (components && components.length > 0) {\r\n\t\t\tconst convertedData =\r\n\t\t\t\tcomponents.length > 0 &&\r\n\t\t\t\tcomponents.map((component) => {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tid: component._id || '',\r\n\t\t\t\t\t\tkey: component._id || '',\r\n\t\t\t\t\t\tname: component.name || '',\r\n\t\t\t\t\t\titems: component.items.length > 0 ? component.items.map(item => {\r\n\t\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\t\t...item,\r\n\t\t\t\t\t\t\t\timage: item.image.length > 0 ? item.image.map(img => {\r\n\t\t\t\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\t\t\t\tcover: `${config['baseURL']}${img.thumbnail ? img.thumbnail : \"\"}`,\r\n\t\t\t\t\t\t\t\t\t\tid: img._id,\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}) : []\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}) : []\r\n\t\t\t\t\t};\r\n\t\t\t\t});\r\n\r\n\t\t\treturn convertedData;\r\n\t\t}\r\n\r\n\t\treturn [];\r\n\t}\r\n\r\n\r\n\r\n\r\n\r\n\t/**\r\n   * @public\r\n   * @method regionList convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync regionList(data) {\r\n\t\tconst convertedData =\r\n\t\t\tdata.length > 0 &&\r\n\t\t\tdata.map((region) => {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tid: region._id || '',\r\n\t\t\t\t\tkey: region._id || '',\r\n\t\t\t\t\tname: region.name || '',\r\n\t\t\t\t\tpickUpLocation: region.pickUpLocation || '',\r\n\t\t\t\t\tcountry: region.country || '',\r\n\t\t\t\t\tcountryCode: region.countryCode || '',\r\n\t\t\t\t\tcountryName: region.countryName || '',\r\n\t\t\t\t\tcity: region.city || '',\r\n\t\t\t\t\ttime: region.time || '',\r\n\t\t\t\t\tcharge: region.charge || {}\r\n\t\t\t\t};\r\n\t\t\t});\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method attributeList convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync attributeList(data) {\r\n\t\tconst convertedData = Object.keys(data).length > 0 && data;\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method ImageListFromLibrary convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync ImageListFromLibrary(resData) {\r\n\t\tconst data = resData.data || [];\r\n\r\n\t\tconst convertedData =\r\n\t\t\tdata.length > 0 &&\r\n\t\t\tdata.map((image) => {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tid: image._id || '',\r\n\t\t\t\t\tname: image.name && image.name,\r\n\t\t\t\t\tcover: `${config['baseURL']}${image.thumbnail}`,\r\n\t\t\t\t\tadded: image.added,\r\n\t\t\t\t\ttitle: image.title,\r\n\t\t\t\t\tlabels: image.labels,\r\n\t\t\t\t\talt: image.alt,\r\n\t\t\t\t\tcaption: image.caption\r\n\t\t\t\t};\r\n\t\t\t});\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method countryList convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync countryList(resData) {\r\n\t\tconst data = resData || [];\r\n\r\n\t\tconst convertedData =\r\n\t\t\tdata.length > 0 &&\r\n\t\t\tdata.map((country) => {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tid: country._id || '',\r\n\t\t\t\t\tname: country.name && country.name\r\n\t\t\t\t};\r\n\t\t\t});\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method getDeliveryRegion convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\r\n\r\n   \r\n\tasync getDeliveryRegion(data) {\r\n\t\tconst convertedData = data;\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t\r\n\t/**\r\n   * @public\r\n   * @method cityList convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync cityList(resData) {\r\n\t\tconst data = resData || [];\r\n\r\n\t\tconst convertedData =\r\n\t\t\tdata.length > 0 &&\r\n\t\t\tdata.map((city) => {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tid: city._id || '',\r\n\t\t\t\t\tname: city.name && city.name\r\n\t\t\t\t};\r\n\t\t\t});\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method forAnalytics convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync forAnalytics(resData) {\r\n\t\treturn resData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method productDetail convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\r\n\tasync productDetail(data) {\r\n\t\tconst convertedData =\r\n\t\t\t(Object.keys(data).length > 0 && {\r\n\t\t\t\tid: data._id || data.id || '',\r\n\t\t\t\tname: data.name || '',\r\n\t\t\t\tdescription: data.description.replace(/<[^>]+>/g, '') || '',\r\n\t\t\t\tregularPrice: data.price && data.price['regular'],\r\n\t\t\t\tofferPrice: data.price && data.price['offer'],\r\n\t\t\t\turl: data.url,\r\n\t\t\t\tavailableStock: data.availableStock,\r\n\t\t\t\tminimumStock: data.minimumStock,\r\n\t\t\t\tunit: data.unit,\r\n\t\t\t\tdate: data.date,\r\n\t\t\t\tvenue: data.venue,\r\n\t\t\t\tbrand: data.brand && Object.key(data.brand).length > 0 ? {\r\n\t\t\t\t\tid: data.brand.id,\r\n\t\t\t\t\tname: data.brand.name,\r\n\r\n\t\t\t\t} : {},\r\n\t\t\t\tprice:\r\n\t\t\t\t\tparseInt(data.price['offer']) > parseInt(data.price['regular'])\r\n\t\t\t\t\t\t? data.price['offer']\r\n\t\t\t\t\t\t: data.price['regular'],\r\n\t\t\t\tpricing: data.pricing,\r\n\t\t\t\tcategory:\r\n\t\t\t\t\t(data.category &&\r\n\t\t\t\t\t\tdata.category.length > 0 &&\r\n\t\t\t\t\t\tdata.category.map((cat) => {\r\n\t\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\t\tid: cat._id,\r\n\t\t\t\t\t\t\t\tname: cat.name\r\n\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t})) ||\r\n\t\t\t\t\tdata.category,\r\n\t\t\t\ttags: data.tags && data.tags.length > 0 ? data.tags : [],\r\n\r\n\t\t\t\tcover: {\r\n\t\t\t\t\tcover: `${config['baseURL']}${data.cover ? data.cover.original && data.cover.original : ''}`,\r\n\t\t\t\t\tid: data.cover ? data.cover._id : ''\r\n\t\t\t\t},\r\n\t\t\t\timage:\r\n\t\t\t\t\t(data.image &&\r\n\t\t\t\t\t\tdata.image.length > 0 &&\r\n\t\t\t\t\t\tdata.image.map((img) => {\r\n\t\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\t\tid: img._id || '',\r\n\t\t\t\t\t\t\t\tname: img.name && img.name,\r\n\t\t\t\t\t\t\t\tcover: `${config['baseURL']}${img.original}`,\r\n\t\t\t\t\t\t\t\tadded: img.added,\r\n\t\t\t\t\t\t\t\ttitle: img.title,\r\n\t\t\t\t\t\t\t\tlabels: img.labels,\r\n\t\t\t\t\t\t\t\talt: img.alt,\r\n\t\t\t\t\t\t\t\tcaption: img.caption\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t})) ||\r\n\t\t\t\t\t[],\r\n\t\t\t\t\tavailable: product.pricing &&\r\n\t\t\t\t\tproduct.pricing.length > 0 ?\r\n\t\t\t\t\t\t\t product.pricing[0]['stock'] && product.pricing[0]['stock']['available']\r\n\t\t\t\t\t\t\t : 0,\r\n\t\t\t\t\tminimum: product.pricing &&\r\n\t\t\t\t\tproduct.pricing.length > 0 ?\r\n\t\t\t\t\tproduct.pricing[0]['stock'] && product.pricing[0]['stock']['minimum']\r\n\t\t\t\t\t: 0\r\n\t\t\t}) ||\r\n\t\t\t{};\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\r\n\r\n\r\n\r\n\t/**\r\n   * @public\r\n   * @method couponDetail convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\r\n\tasync couponDetail(data) {\r\n\t\tconst convertedData =\r\n\t\t\t(Object.keys(data).length > 0 && {\r\n\t\t\t\tid: data._id || '',\r\n\t\t\t\tname: data.name && data.name,\r\n\t\t\t\tcode: data.code,\r\n\t\t\t\tminimumOrder: data.minimumOrder,\r\n\t\t\t\tmaximumOrder: data.maximumOrder,\r\n\t\t\t\torderedProducts: data.orderedProducts | [],\r\n\t\t\t\tfreeProducts: data.freeProducts || [],\r\n\t\t\t\torderedProductsCount: data.orderedProducts && data.orderedProducts.length,\r\n\t\t\t\tfreeProductsCount: data.freeProducts && data.orderedProducts.length,\r\n\t\t\t\tamountType: data.amountType,\r\n\t\t\t\tamount: data.amount,\r\n\t\t\t\tfreeDelivery: data.freeDelivery,\r\n\t\t\t\tstartDate: data.startDate,\r\n\t\t\t\tendDate: data.endDate,\r\n\t\t\t\tmaxUsePerUser: data.maxUsePerUser,\r\n\t\t\t\tactualPrice: data.actualPrice,\r\n\t\t\t\tunit: data.unit,\r\n\t\t\t\tcategory: data.category,\r\n\t\t\t\tpricing: data.pricing,\r\n\t\t\t\tdate: data.date,\r\n\t\t\t\ttime: data.time,\r\n\t\t\t\tvenue: data.venue,\r\n\t\t\t\tbrand: data.brand,\r\n\t\t\t\ttags: data.tags,\r\n\t\t\t}) ||\r\n\t\t\t{};\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\r\n\r\n    /**\r\n   * @public\r\n   * @method productDetailById convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync productDetailById(data) {\r\n\t\tconst convertedData =\r\n\t\t\t(Object.keys(data).length > 0 && {\r\n\t\t\t\tid: data._id || data.id || '',\r\n\t\t\t\tname: data.name || '',\r\n\t\t\t\tdescription: data.description.replace(/<[^>]+>/g, '') || '',\r\n\t\t\t\tregularPrice: data.price && data.price['regular'],\r\n\t\t\t\tofferPrice: data.price && data.price['offer'],\r\n\t\t\t\turl: data.url,\r\n\t\t\t\tunit: data.unit,\r\n\t\t\t\tdate: data.date,\r\n\t\t\t\tvenue: data.venue,\r\n\t\t\t\tpricing: data.pricing,\r\n\t\t\t\tprice:\r\n\t\t\t\t\tparseInt(data.price['offer']) > parseInt(data.price['regular'])\r\n\t\t\t\t\t\t? data.price['offer']\r\n\t\t\t\t\t\t: data.price['regular'],\r\n\t\t\t\tcategory:\r\n\t\t\t\t\t(data.category &&\r\n\t\t\t\t\t\tdata.category.length > 0 &&\r\n\t\t\t\t\t\tdata.category.map((cat) => {\r\n\t\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\t\tid: cat._id,\r\n\t\t\t\t\t\t\t\tname: cat.name,\r\n\t\t\t\t\t\t\t\tcover: `${config['baseURL']}${cat.cover ? cat.cover.original && cat.cover.original : ''}`\r\n\r\n\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t})) ||\r\n\t\t\t\t\tdata.category,\r\n\t\t\t\tbrand:\r\n\t\t\t\t\tdata.brand &&\r\n\t\t\t\t\t\tObject.keys(data.brand).length > 0 ? {\r\n\t\t\t\t\t\t\tid: data.brand._id,\r\n\t\t\t\t\t\t\tname: data.brand.name,\r\n\t\t\t\t\t\t\tcover: `${config['baseURL']}${data.brand.cover ? data.brand.cover.original && data.brand.cover.original : ''}`\r\n\t\t\t\t\t\t} :\r\n\t\t\t\t\t\tdata.brand,\r\n\t\t\t\tprimaryCategory: data.primaryCategory &&\r\n\t\t\t\t\tObject.keys(data.primaryCategory).length > 0 ? {\r\n\t\t\t\t\t\tid: data.primaryCategory._id,\r\n\t\t\t\t\t\tname: data.primaryCategory.name,\r\n\t\t\t\t\t\tcover: `${config['baseURL']}${data.primaryCategory.cover ? data.primaryCategory.cover.original && data.primaryCategory.cover.original : ''}`\r\n\t\t\t\t\t} :\r\n\t\t\t\t\tdata.primaryCategory,\r\n\t\t\t\ttags: data.tags && data.tags.length > 0 ? data.tags : [],\r\n\t\t\t\tavailableStock: data.availableStock,\r\n\t\t\t\tcover: {\r\n\t\t\t\t\tcover: `${config['baseURL']}${data.cover ? data.cover.original && data.cover.original : ''}`,\r\n\t\t\t\t\tid: data.cover ? data.cover._id : ''\r\n\t\t\t\t},\r\n\t\t\t\timage:\r\n\t\t\t\t\t(data.image &&\r\n\t\t\t\t\t\tdata.image.length > 0 &&\r\n\t\t\t\t\t\tdata.image.map((img) => {\r\n\t\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\t\tid: img._id || '',\r\n\t\t\t\t\t\t\t\tname: img.name && img.name,\r\n\t\t\t\t\t\t\t\tcover: `${config['baseURL']}${img.original}`,\r\n\t\t\t\t\t\t\t\tadded: img.added,\r\n\t\t\t\t\t\t\t\ttitle: img.title,\r\n\t\t\t\t\t\t\t\tlabels: img.labels,\r\n\t\t\t\t\t\t\t\talt: img.alt,\r\n\t\t\t\t\t\t\t\tcaption: img.caption\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t})) ||\r\n\t\t\t\t\t[]\r\n\t\t\t}) ||\r\n\t\t\t{};\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method updateProduct convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync updateProduct(data) {\r\n\t\tconst convertedData = data;\r\n\r\n\t\tif (data && data.updated) {\r\n\t\t\treturn {\r\n\t\t\t\t...data.updated,\r\n\t\t\t\tid: data.updated._id || data.updated.id || '',\r\n\t\t\t\tname: data.updated.name || '',\r\n\t\t\t\tdescription: data.updated.description.replace(/<[^>]+>/g, '') || '',\r\n\t\t\t\tregularPrice: data.updated.price && data.updated.price['regular'],\r\n\t\t\t\tofferPrice: data.updated.price && data.updated.price['offer'],\r\n\t\t\t\turl: data.updated.url,\r\n\t\t\t\tavailableStock: data.updated.availableStock,\r\n\t\t\t\tminimumStock: data.updated.minimumStock,\r\n\t\t\t\tunit: data.updated.unit,\r\n\t\t\t\tdate: data.updated.date,\r\n\t\t\t\tvenue: data.updated.venue,\r\n\t\t\t\tbrand: data.updated.brand && Object.key(data.updated.brand).length > 0 ? {\r\n\t\t\t\t\tid: data.updated.brand.id,\r\n\t\t\t\t\tname: data.updated.brand.name,\r\n\r\n\t\t\t\t} : {},\r\n\t\t\t\tprice:\r\n\t\t\t\t\tparseInt(data.updated.price['offer']) > parseInt(data.updated.price['regular'])\r\n\t\t\t\t\t\t? data.updated.price['offer']\r\n\t\t\t\t\t\t: data.updated.price['regular'],\r\n\t\t\t\tpricing: data.updated.pricing,\r\n\t\t\t\tcategory:\r\n\t\t\t\t\t(data.updated.category &&\r\n\t\t\t\t\t\tdata.updated.category.length > 0 &&\r\n\t\t\t\t\t\tdata.updated.category.map((cat) => {\r\n\t\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\t\tid: cat._id,\r\n\t\t\t\t\t\t\t\tname: cat.name\r\n\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t})) ||\r\n\t\t\t\t\tdata.updated.category,\r\n\t\t\t\ttags: data.updated.tags && data.updated.tags.length > 0 ? data.updated.tags : [],\r\n\r\n\t\t\t\tcover: {\r\n\t\t\t\t\tcover: `${config['baseURL']}${data.updated.cover ? data.updated.cover.original && data.updated.cover.original : ''}`,\r\n\t\t\t\t\tid: data.updated.cover ? data.updated.cover._id : ''\r\n\t\t\t\t},\r\n\t\t\t\timage:\r\n\t\t\t\t\t(data.updated.image &&\r\n\t\t\t\t\t\tdata.updated.image.length > 0 &&\r\n\t\t\t\t\t\tdata.updated.image.map((img) => {\r\n\t\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\t\tid: img._id || '',\r\n\t\t\t\t\t\t\t\tname: img.name && img.name,\r\n\t\t\t\t\t\t\t\tcover: `${config['baseURL']}${img.original}`,\r\n\t\t\t\t\t\t\t\tadded: img.added,\r\n\t\t\t\t\t\t\t\ttitle: img.title,\r\n\t\t\t\t\t\t\t\tlabels: img.labels,\r\n\t\t\t\t\t\t\t\talt: img.alt,\r\n\t\t\t\t\t\t\t\tcaption: img.caption\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t})) ||\r\n\t\t\t\t\t[],\r\n\t\t\t\t\tstatus: 'ok'\r\n\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\r\n\t/**\r\n* @public\r\n* @method updateComponent convert api data from API to general format based on config server\r\n* @param {Object} data response objectc from wc\r\n* @returns {Object}  converted data\r\n*/\r\n\tasync updateComponent(data) {\r\n\t\tconst convertedData = data;\r\n\r\n\t\tif (data && data.updated) {\r\n\t\t\treturn {\r\n\t\t\t\t...data.updated,\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\r\n\t/**\r\n   * @public\r\n   * @method updateImageFromLibrary convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync updateImageFromLibrary(data) {\r\n\t\tconst convertedData = data;\r\n\r\n\t\tif (data && data.updated) {\r\n\t\t\treturn {\r\n\t\t\t\t...data.updated,\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method updateTag convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync updateTag(data) {\r\n\t\tconst convertedData = data;\r\n\r\n\t\tif (data && data.updated) {\r\n\t\t\treturn {\r\n\t\t\t\t...data.updated,\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n* @public\r\n* @method updatePage convert api data from API to general format based on config server\r\n* @param {Object} data response objectc from wc\r\n* @returns {Object}  converted data\r\n*/\r\n\tasync updatePage(data) {\r\n\t\tconst convertedData = data;\r\n\r\n\t\tif (data && data.updated) {\r\n\t\t\treturn {\r\n\t\t\t\t...data.updated,\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method updateBrand convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync updateBrand(data) {\r\n\t\tconst convertedData = data;\r\n\r\n\t\tif (data && data.updated) {\r\n\t\t\treturn {\r\n\t\t\t\t...data.updated,\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method updateCategory convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync updateCategory(data) {\r\n\t\tconst convertedData = data;\r\n\r\n\t\tif (data && data.updated) {\r\n\t\t\treturn {\r\n\t\t\t\t...data.updated,\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method updateCustomer convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync updateCustomer(data) {\r\n\t\tconst convertedData = data;\r\n\r\n\t\tif (data && data.updated) {\r\n\t\t\treturn {\r\n\t\t\t\t...data.updated,\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method updateRegion convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync updateRegion(data) {\r\n\t\tconst convertedData = data;\r\n\r\n\t\tif (data && data.updated) {\r\n\t\t\treturn {\r\n\t\t\t\t...data.updated,\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method deleteProduct convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync deleteProduct(data) {\r\n\t\tconst convertedData = data;\r\n\t\tif (data && data.success) {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n   * @public\r\n   * @method deleteBundle convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync deleteBundle(data) {\r\n\t\tconst convertedData = data;\r\n\t\tif (data && data.success) {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n   * @public\r\n   * @method deleteCoupon convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync deleteCoupon(data) {\r\n\t\tconst convertedData = data;\r\n\t\tif (data && data.success) {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\r\n\r\n\r\n\t/**\r\n* @public\r\n* @method pageDetail convert api data from API to general format based on config server\r\n* @param {Object} data response objectc from wc\r\n* @returns {Object}  converted data\r\n*/\r\n\tasync pageDetail(data) {\r\n\t\tconst convertedData = data;\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\r\n\t/**\r\n   * @public\r\n   * @method updateOrderStatus convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync updateOrderStatus(data) {\r\n\t\tconst convertedData = data;\r\n\t\tif (data && data.success) {\r\n\t\t\treturn {\r\n\t\t\t\t...data,\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method deleteImageFromLibrary convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync deleteImageFromLibrary(data) {\r\n\t\tconst convertedData = data;\r\n\t\tif (data && data.success) {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n* @public\r\n* @method deletePage convert api data from API to general format based on config server\r\n* @param {Object} data response objectc from wc\r\n* @returns {Object}  converted data\r\n*/\r\n\tasync deletePage(data) {\r\n\t\tconst convertedData = data;\r\n\t\tif (data && data.success) {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n   * @public\r\n   * @method addTag convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync addTag(data) {\r\n\t\tconst convertedData = data;\r\n\t\tif (data && data.inserted) {\r\n\t\t\treturn {\r\n\t\t\t\t...data.inserted[0],\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method addCategory convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync addCategory(data) {\r\n\t\tconst convertedData = data;\r\n\t\tif (data && data.inserted) {\r\n\t\t\treturn {\r\n\t\t\t\t...data.inserted[0],\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}; \r\n\r\n\r\n\t\t/**\r\n   * @public\r\n   * @method postAddCategory convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync postAddCategory(data) {\r\n\t\tconst convertedData = data;\r\n\t\tif (data && data.inserted) {\r\n\t\t\treturn {\r\n\t\t\t\t...data.inserted[0],\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t};\r\n\t/**\r\n   * @public\r\n   * @method addProduct convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync addProduct(data) {\r\n\t\tconst convertedData = data;\r\n\t\tif (data && data.inserted) {\r\n\t\t\treturn {\r\n\t\t\t\t...data.inserted[0],\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\r\n\t\t/**\r\n   * @public\r\n   * @method addPost convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\r\n  async addPost(data) {\r\n\tconst convertedData = data;\r\n\tif (data && data.inserted) {\r\n\t\treturn {\r\n\t\t\t...data.inserted[0],\r\n\t\t\tstatus: 'ok'\r\n\t\t};\r\n\t}\r\n\treturn convertedData;\r\n}\r\n\r\n\r\n\t\r\n\t/**\r\n   * @public\r\n   * @method addOrder convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\r\n\r\n\r\n  async addOrder(data) {\r\n\tconst convertedData = data;\r\n\tif (data && data.inserted) {\r\n\t\treturn {\r\n\t\t\t...data.inserted[0],\r\n\t\t\tstatus: 'ok'\r\n\t\t};\r\n\t}\r\n\treturn convertedData;\r\n}\r\n\r\n\r\n\r\n\t/**\r\n* @public\r\n* @method addTheme convert api data from API to general format based on config server\r\n* @param {Object} data response objectc from wc\r\n* @returns {Object}  converted data\r\n*/\r\n\tasync addTheme(data) {\r\n\t\tconst convertedData = data;\r\n\t\tif (data && data.success) {\r\n\t\t\treturn {\r\n\t\t\t\t...data.inserted[0],\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n* @public\r\n* @method addPage convert api data from API to general format based on config server\r\n* @param {Object} data response objectc from wc\r\n* @returns {Object}  converted data\r\n*/\r\n\tasync addPage(data) {\r\n\t\tconst convertedData = data;\r\n\t\tif (data && data.success) {\r\n\t\t\treturn {\r\n\t\t\t\t...data.inserted[0],\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\r\n\t/**\r\n   * @public\r\n   * @method addBrand convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync addBrand(data) {\r\n\t\tconst convertedData = data;\r\n\t\tif (data && data.inserted) {\r\n\t\t\treturn {\r\n\t\t\t\t...data.inserted[0],\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\t/**\r\n   * @public\r\n   * @method addComponent convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync addComponent(data) {\r\n\t\tconst convertedData = data;\r\n\t\tif (data && data.inserted) {\r\n\t\t\treturn {\r\n\t\t\t\t...data.inserted[0],\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\r\n\r\n\r\n\t/**\r\n   * @public\r\n   * @method addCustomer convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync addCustomer(data) {\r\n\t\tconst convertedData = data;\r\n\t\tif (data && data.inserted) {\r\n\t\t\treturn {\r\n\t\t\t\t...data.inserted[0],\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method addRegion convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync addRegion(data) {\r\n\t\tconst convertedData = data;\r\n\t\tif (data && data.inserted) {\r\n\t\t\treturn {\r\n\t\t\t\t...data.inserted[0],\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method deleteTag convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync deleteTag(data) {\r\n\t\tconst convertedData = data;\r\n\t\tif (data && data.success) {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n   * @public\r\n   * @method logout convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync logout(data) {\r\n\t\tconst convertedData = data;\r\n\t\tif (data && data.success) {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\r\n\t/**\r\n* @public\r\n* @method activeTheme convert api data from API to general format based on config server\r\n* @param {Object} data response objectc from wc\r\n* @returns {Object}  converted data\r\n*/\r\n\tasync activeTheme(data) {\r\n\t\tconst convertedData = data;\r\n\t\tif (data && data.success) {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method deletetheme convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync deletetheme(data) {\r\n\t\tconst convertedData = data;\r\n\t\tif (data && data.success) {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\r\n\t/**\r\n   * @public\r\n   * @method deleteCustomer convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync deleteCustomer(data) {\r\n\t\tconst convertedData = data;\r\n\t\tif (data && data.success) {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\r\n\t/**\r\n* @public\r\n* @method deleteComponent convert api data from API to general format based on config server\r\n* @param {Object} data response objectc from wc\r\n* @returns {Object}  converted data\r\n*/\r\n\tasync deleteComponent(data) {\r\n\t\tconst convertedData = data;\r\n\t\tif (data && data.success) {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\r\n\t/**\r\n   * @public\r\n   * @method deleteBrand convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync deleteBrand(data) {\r\n\t\tconst convertedData = data;\r\n\t\tif (data && data.success) {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method deleteCategory convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync deleteCategory(data) {\r\n\t\tconst convertedData = data;\r\n\t\tif (data && data.success) {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method deleteRegion convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync deleteRegion(data) {\r\n\t\tconst convertedData = data;\r\n\t\tif (data && data.success) {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n   * @public\r\n   * @method siteSettings convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync siteSettings(resData) {\r\n\t\tconst convertedData = resData;\r\n\r\n\t\tif (resData.data) {\r\n\t\t\treturn {\r\n\t\t\t\t...resData.data\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\r\n\t/**\r\n* @public\r\n* @method updateSiteSettings convert api data from API to general format based on config server\r\n* @param {Object} data response objectc from wc\r\n* @returns {Object}  converted data\r\n*/\r\n\tasync updateSiteSettings(data) {\r\n\r\n\t\tif (data['updated']) {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn data;\r\n\t}\r\n\r\n\t/**\r\n* @public\r\n* @method updateInvoiceSettings convert api data from API to general format based on config server\r\n* @param {Object} data response objectc from wc\r\n* @returns {Object}  converted data\r\n*/\r\n\tasync updateInvoiceSettings(data) {\r\n\r\n\t\tif (data['updated']) {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn data;\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n   * @public\r\n   * @method invoiceSettingsDetail convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync invoiceSettingsDetail(resData) {\r\n\t\tconst convertedData = resData;\r\n\r\n\t\tif (resData.data) {\r\n\t\t\treturn {\r\n\t\t\t\t...resData.data\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\t/**\r\n   * @public\r\n   * @method categoryDetail convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync categoryDetail(data) {\r\n\r\n\t\tconst convertedData = {\r\n\t\t\tid: data.id || data._id || '',\r\n\t\t\tname: data.name && data.name,\r\n\t\t\tdescription: data.description && data.description,\r\n\t\t\tproductCount: data.productCount || 0,\r\n\t\t\ticon: data.icon ? `${config['baseURL']}${data.icon}` : '',\r\n\t\t\ttype: data.subCategory.length > 0 && data.subCategory[0] && data.subCategory[0]['name'] ? 'Top category' : 'Child category',\r\n\t\t\turl: data.url || '',\r\n\t\t\tsubCategory:\r\n\t\t\t\tdata.subCategory.length > 0 && data.subCategory[0] && data.subCategory[0]['name']\r\n\t\t\t\t\t? data.subCategory.map((subCat) => {\r\n\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\tid: subCat._id || '',\r\n\t\t\t\t\t\t\tname: subCat.name && subCat.name,\r\n\t\t\t\t\t\t\tdescription: subCat.description && subCat.description,\r\n\t\t\t\t\t\t\tcover: subCat.cover ? `${config['baseURL']}${subCat.cover.medium}` : ''\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t})\r\n\t\t\t\t\t: [],\r\n\t\t\tcover: {\r\n\t\t\t\tcover: `${config['baseURL']}${data.cover ? data.cover.original && data.cover.original : ''}`,\r\n\t\t\t\tid: data.cover ? data.cover._id : ''\r\n\t\t\t},\r\n\t\t\timage:\r\n\t\t\t\t(data.image &&\r\n\t\t\t\t\tdata.image.length > 0 &&\r\n\t\t\t\t\tdata.image.map((img) => {\r\n\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\tid: img._id || '',\r\n\t\t\t\t\t\t\tname: img.name && img.name,\r\n\t\t\t\t\t\t\tcover: `${config['baseURL']}${img.medium}`,\r\n\t\t\t\t\t\t\tadded: img.added,\r\n\t\t\t\t\t\t\ttitle: img.title,\r\n\t\t\t\t\t\t\tlabels: img.labels,\r\n\t\t\t\t\t\t\talt: img.alt,\r\n\t\t\t\t\t\t\tcaption: img.caption\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})) ||\r\n\t\t\t\t[]\r\n\t\t};\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\t/**\r\n   * @public\r\n   * @method createOrder convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync createOrder(data) {\r\n\t\t//map props\r\n\r\n\t\tconst formatedData = {\r\n\t\t\t...data\r\n\t\t};\r\n\r\n\t\treturn formatedData;\r\n\t}\r\n\r\n\r\n\t\r\n\r\n\t\t/**\r\n   * @public\r\n   * @method adminRoleRegister convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync adminRoleRegister(data) {\r\n\t\t//map props\r\n\r\n\t\tif(data && data.length > 0){\r\n\t\t\treturn {\r\n\t\t\t\tstatus: 'ok',\r\n\t\t\t\t...data[0]\r\n\t\t\t}\r\n\t\t}\r\n\t\telse return {}; \r\n\t}\r\n\r\n\r\n\t\t\t/**\r\n   * @public\r\n   * @method adminList convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync adminList(resData) {\r\n\t\t//map props\r\n\r\n\t\treturn resData; \r\n\t}; \r\n\r\n\r\n\t\t\t\t/**\r\n   * @public\r\n   * @method adminDetail convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async adminDetail(resData) {\r\n\t//map props\r\n\r\n\treturn resData; \r\n}; \r\n\r\n\r\n\t\r\n\r\n\r\n\t/**\r\n* @public\r\n* @method orderDetail convert api data from API to general format based on config server\r\n* @param {Object} data response objectc from wc\r\n* @returns {Object}  converted data\r\n*/\r\n\tasync orderDetail(data) {\r\n\t\t//map props\r\n\t\tconst order = data.order || false;\r\n\t\tif (order) {\r\n\t\t\treturn {\r\n\t\t\t\tid: order.id || order._id,\r\n\t\t\t\tshippingAddress: order.shippingAddress,\r\n\t\t\t\tname: order.shippingAddress['firstName'] + \" \" + order.shippingAddress['lastName'],\r\n\t\t\t\tcountry: order.shippingAddress['country'],\r\n\t\t\t\tcity: order.shippingAddress['city'],\r\n\t\t\t\taddress: order.shippingAddress['address'],\r\n\t\t\t\tphone: order.shippingAddress['phone'],\r\n\t\t\t\temail: order.shippingAddress['email'],\r\n\t\t\t\tstatus: order.status,\r\n\t\t\t\ttotal: order.totalPrice,\r\n\t\t\t\tproducts: order.products && order.products.length > 0 ? order.products.map(product => {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tid: product._id || '',\r\n\t\t\t\t\t\tname: product.name && product.name,\r\n\t\t\t\t\t\tdescription: product.description && product.description,\r\n\t\t\t\t\t\tcover: `${config['baseURL']}${(product.cover && product.cover['thumbnail']) || ''}`,\r\n\t\t\t\t\t\tregularPrice: product.price && product.price['regular'],\r\n\t\t\t\t\t\tofferPrice: product.price && product.price['offer'],\r\n\t\t\t\t\t\turl: product.url,\r\n\t\t\t\t\t\tunit: product.unit,\r\n\t\t\t\t\t\tcategory: product.category,\r\n\t\t\t\t\t\tpricing: product.pricing,\r\n\t\t\t\t\t\tdate: product.date,\r\n\t\t\t\t\t\ttime: product.time,\r\n\t\t\t\t\t\tvenue: product.venue,\r\n\t\t\t\t\t\tbrand: product.brand,\r\n\t\t\t\t\t\ttags: product.tags,\r\n\t\t\t\t\t\tprice: product.price,\r\n\t\t\t\t\t\tavailable: product.pricing &&\r\n\t\t\t\t\t\t product.pricing.length > 0 ?\r\n\t\t\t\t\t\t  product.pricing[0]['stock'] && product.pricing[0]['stock']['available']\r\n\t\t\t\t\t\t  : 0,\r\n\t\t\t\t\t\t  minimum: product.pricing &&\r\n\t\t\t\t\t\t product.pricing.length > 0 ?\r\n\t\t\t\t\t\t  product.pricing[0]['stock'] && product.pricing[0]['stock']['minimum']\r\n\t\t\t\t\t\t  : 0\r\n\t\t\t\t\t}\r\n\t\t\t\t}) : [],\r\n\t\t\t\tdate_created: order.added,\r\n\t\t\t\tpaymentMethod: order['payment']['paymentMethod'],\r\n\t\t\t\tpaymentStatus: order['payment']['status'],\r\n\t\t\t\tpayment: order['payment'],\r\n\t\t\t\tcustomerId: order['customer'] ? order['customer']['_id'] : ''\r\n\t\t\t}\r\n\t\t}\r\n\t\telse return {}\r\n\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method signup convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync signup(data) {\r\n\t\treturn {\r\n\t\t\tstatus: 'ok'\r\n\t\t};\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method signin convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync signin(data) {\r\n\t\tif (data['msg']) {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method login convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync login(data) {\r\n\t\tif (data['msg']) {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method addImageToLibrary convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync addImageToLibrary(data) {\r\n\t\treturn data;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method getCurrentUserData convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync getCurrentCustomerData(data) {\r\n\t\t//map props\r\n\t\t// let generalFormat = dataMap[config['server']]['getCurrentUserData']; //get genereal format from dataMap\r\n\r\n\t\tconst formatedData = {\r\n\t\t\t...data\r\n\t\t};\r\n\r\n\t\treturn formatedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method currentCustomerData convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync currentCustomerData(data) {\r\n\t\t//map props\r\n\t\t// let generalFormat = dataMap[config['server']]['currentCustomerData']; //get genereal format from dataMap\r\n\r\n\t\tconst convertedData = {\r\n\t\t\t...data\r\n\t\t};\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method updateCurrentCustomerData convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync updateCurrentCustomerData(data) {\r\n\t\t//map props\r\n\t\t// let generalFormat = dataMap[config['server']]['updateCurrentCustomerData']; //get genereal format from dataMap\r\n\r\n\t\tconst convertedData = {\r\n\t\t\tstatus: 'ok'\r\n\t\t};\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method changePassword convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync changePassword(data) {\r\n\t\tif (data['success']) {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn data;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method getCurrentUserOrders convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync getCurrentUserOrders(resData) {\r\n\t\tconst data = resData.data || [];\r\n\t\tconst isNext = resData.page.next;\r\n\r\n\t\tlet convertedData =\r\n\t\t\t(data.length > 0 &&\r\n\t\t\t\tdata.map((item) => {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\t...item,\r\n\t\t\t\t\t\tid: item.id || item._id,\r\n\t\t\t\t\t\tbillingAddress: item.billingAddress,\r\n\t\t\t\t\t\tstatus: item.status,\r\n\t\t\t\t\t\ttotal: item.totalPrice,\r\n\t\t\t\t\t\tproducts: item.products,\r\n\t\t\t\t\t\tdate_created: item.date,\r\n\t\t\t\t\t\tpaymentMethod: item['payment']['paymentMethod'],\r\n\t\t\t\t\t\tcustomerId: item.customer['_id']\r\n\t\t\t\t\t};\r\n\t\t\t\t})) ||\r\n\t\t\t[];\r\n\r\n\t\tconvertedData = {\r\n\t\t\tdata: convertedData,\r\n\t\t\tisNext\r\n\t\t};\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\r\n\t/**\r\n* @public\r\n* @method orderList convert api data from API to general format based on config server\r\n* @param {Object} data response objectc from wc\r\n* @returns {Object}  converted data\r\n*/\r\n\tasync orderList(resData) {\r\n\t\tconst data = resData.orders ? resData.orders.data : [];\r\n\t\t// const isNext = resData.page.next;\r\n\r\n\t\tconsole.log('orderListDAta',data);\r\n\r\n\t\tlet convertedData =\r\n\t\t\t(data.length > 0 &&\r\n\t\t\t\tdata.map((item) => {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\tid: item.id || item._id,\r\n\t\t\t\t\t\t\tshippingAddress: item.billingAddress,\r\n\t\t\t\t\t\t\tname: item.shippingAddress && item.shippingAddress['firstName'] && item.shippingAddress['firstName'] + \" \" +\r\n\t\t\t\t\t\t\t item.shippingAddress && item.shippingAddress['lastName'] && item.shippingAddress['lastName'],\r\n\t\t\t\t\t\t\tcountry: item.shippingAddress && item.shippingAddress['country'] && item.shippingAddress['country'],\r\n\t\t\t\t\t\t\tcity: item.shippingAddress && item.shippingAddress['city'] && item.shippingAddress['city'],\r\n\t\t\t\t\t\t\tstatus: item.status,\r\n\t\t\t\t\t\t\ttotal: item.totalPrice,\r\n\t\t\t\t\t\t\tproducts: item.products,\r\n\t\t\t\t\t\t\tdate_created: item.added,\r\n\t\t\t\t\t\t\tpaymentMethod: item['payment'] && item['payment']['paymentMethod'],\r\n\t\t\t\t\t\t\tpaymentStatus: item['payment'] && item['payment']['status'],\r\n\t\t\t\t\t\t\tpayment: item['payment'],\r\n\t\t\t\t\t\t\tcustomerId: item['customer'] ? item['customer']['_id'] : ''\r\n\r\n\t\t\t\t\t};\r\n\t\t\t\t})) ||\r\n\t\t\t[];\r\n\r\n\t\t// convertedData = {\r\n\t\t// \tdata: convertedData,\r\n\t\t// \tisNext\r\n\t\t// };\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\r\n\t\t/**\r\n\t\t* @public\r\n\t\t* @method orderListForCustomer convert api data from API to general format based on config server\r\n\t\t* @param {Object} data response objectc from wc\r\n\t\t* @returns {Object}  converted data\r\n\t\t*/\r\n\t\tasync orderListForCustomer(resData) {\r\n\t\t\tconst data = resData.orders ? resData.orders.data : [];\r\n\t\t\t// const isNext = resData.page.next;\r\n\r\n\t\t\tlet convertedData =\r\n\t\t\t\t(data.length > 0 &&\r\n\t\t\t\t\tdata.map((item) => {\r\n\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\tid: item.id || item._id,\r\n\t\t\t\t\t\t\tshippingAddress: item.billingAddress,\r\n\t\t\t\t\t\t\tname: item.shippingAddress && item.shippingAddress['firstName'] && item.shippingAddress['firstName'] + \" \" +\r\n\t\t\t\t\t\t\t item.shippingAddress && item.shippingAddress['lastName'] && item.shippingAddress['lastName'],\r\n\t\t\t\t\t\t\tcountry: item.shippingAddress && item.shippingAddress['country'] && item.shippingAddress['country'],\r\n\t\t\t\t\t\t\tcity: item.shippingAddress && item.shippingAddress['city'] && item.shippingAddress['city'],\r\n\t\t\t\t\t\t\tstatus: item.status,\r\n\t\t\t\t\t\t\ttotal: item.totalPrice,\r\n\t\t\t\t\t\t\tproducts: item.products,\r\n\t\t\t\t\t\t\tdate_created: item.added,\r\n\t\t\t\t\t\t\tpaymentMethod: item['payment'] && item['payment']['paymentMethod'],\r\n\t\t\t\t\t\t\tpaymentStatus: item['payment'] && item['payment']['status'],\r\n\t\t\t\t\t\t\tpayment: item['payment'],\r\n\t\t\t\t\t\t\tcustomerId: item['customer'] ? item['customer']['_id'] : ''\r\n\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t})) ||\r\n\t\t\t\t[];\r\n\r\n\t\t\t// convertedData = {\r\n\t\t\t// \tdata: convertedData,\r\n\t\t\t// \tisNext\r\n\t\t\t// };\r\n\r\n\t\t\treturn convertedData;\r\n\t\t}\r\n\r\n\r\n\t/**\r\n   * @public\r\n   * @method currentUserOrders convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync currentUserOrders(data) {\r\n\t\t//map props\r\n\t\tlet generalFormat = dataMap[config['server']]['currentUserOrders']; //get genereal format from dataMap\r\n\r\n\t\tconst convertedData =\r\n\t\t\t(data.length > 0 &&\r\n\t\t\t\tdata.map((item) => {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\t...generalFormat,\r\n\t\t\t\t\t\tid: item.id,\r\n\t\t\t\t\t\tstatus: item.status,\r\n\t\t\t\t\t\ttotal: item.total,\r\n\t\t\t\t\t\tline_items: item.line_items,\r\n\t\t\t\t\t\tdate_created: item.date_created\r\n\t\t\t\t\t};\r\n\t\t\t\t})) ||\r\n\t\t\t[];\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method payment convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\r\n\tasync payment(data) {\r\n\t\tconst paymentItems = data.items;\r\n\t\tif (!paymentItems.length > 0) {\r\n\t\t\treturn paymentItems;\r\n\t\t}\r\n\r\n\t\tconst items = paymentItems.map((item) => {\r\n\t\t\treturn {\r\n\t\t\t\tname: item.name || '',\r\n\t\t\t\tnumber: item.text || ''\r\n\t\t\t};\r\n\t\t});\r\n\t\treturn items;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method welcome convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync welcome(data) {\r\n\t\treturn {\r\n\t\t\ttext: data.text\r\n\t\t};\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method logo convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync logo(data) {\r\n\t\tconst src = data.image && data.image.length > 0 ? `${config['baseURL']}${data.image[0]['original']}` : '';\r\n\t\treturn {\r\n\t\t\tsrc,\r\n\t\t\ttarget: data.target\r\n\t\t};\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method hotline convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync hotline(data) {\r\n\t\treturn {\r\n\t\t\ttext: data.text\r\n\t\t};\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method navLinks convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync navLinks(data) {\r\n\t\tconst navLinkItems = data.items;\r\n\t\tif (!navLinkItems.length > 0) {\r\n\t\t\treturn [];\r\n\t\t}\r\n\r\n\t\tconst items = navLinkItems.map((item) => {\r\n\t\t\treturn {\r\n\t\t\t\ttext: item.name || item.text,\r\n\t\t\t\ttarget: item.target\r\n\t\t\t};\r\n\t\t});\r\n\r\n\t\treturn items;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method slider convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync slider(data) {\r\n\t\tconst sliderItems = data.items;\r\n\t\tif (!sliderItems.length > 0) {\r\n\t\t\treturn sliderItems;\r\n\t\t}\r\n\r\n\t\tconst images = sliderItems.map((item) => {\r\n\t\t\treturn {\r\n\t\t\t\ttarget: item.target,\r\n\t\t\t\tsrc: `${config['baseURL']}${item.image[0]['medium']}`\r\n\t\t\t};\r\n\t\t});\r\n\t\treturn images;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method sliderRight convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync sliderRight(data) {\r\n\t\tconst sliderRightItems = data.items;\r\n\t\tif (!sliderRightItems.length > 0) {\r\n\t\t\treturn sliderRightItems;\r\n\t\t}\r\n\r\n\t\tconst images = sliderRightItems.map((item) => {\r\n\t\t\treturn {\r\n\t\t\t\ttarget: item.target,\r\n\t\t\t\tsrc: `${config['baseURL']}${item.image[0]['medium']}`\r\n\t\t\t};\r\n\t\t});\r\n\t\treturn images;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method address convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync address(data) {\r\n\t\treturn {\r\n\t\t\tname: data.name,\r\n\t\t\ttext: data.text\r\n\t\t};\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method Links convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync Links(data) {\r\n\t\tconst servicesItems = data.items;\r\n\t\tif (!servicesItems.length > 0) {\r\n\t\t\treturn servicesItems;\r\n\t\t}\r\n\r\n\t\tconst items = servicesItems.map((item) => {\r\n\t\t\treturn {\r\n\t\t\t\ttarget: item.target,\r\n\t\t\t\tname: item.name || item.text\r\n\t\t\t};\r\n\t\t});\r\n\t\treturn items;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method Account convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync Account(data) {\r\n\t\tconst accountItems = data.items;\r\n\t\tif (!accountItems.length > 0) {\r\n\t\t\treturn accountItems;\r\n\t\t}\r\n\r\n\t\tconst items = accountItems.map((item) => {\r\n\t\t\treturn {\r\n\t\t\t\ttarget: item.target,\r\n\t\t\t\tname: item.name || item.text\r\n\t\t\t};\r\n\t\t});\r\n\t\treturn items;\r\n\t}\r\n\r\n\r\n\r\n\r\n\t/**\r\n   * @public\r\n   * @method 'About Us' convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync 'About Us'(data) {\r\n\t\tconst aboutUsItems = data.items;\r\n\t\tif (!aboutUsItems.length > 0) {\r\n\t\t\treturn aboutUsItems;\r\n\t\t}\r\n\r\n\t\tconst items = aboutUsItems.map((item) => {\r\n\t\t\treturn {\r\n\t\t\t\ttarget: item.target,\r\n\t\t\t\tname: item.name || item.text\r\n\t\t\t};\r\n\t\t});\r\n\t\treturn items;\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n   * @public\r\n   * @method 'getTotalUserCount Us' convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync getTotalUserCount(data) {\r\n\t\treturn data;\r\n\t}\r\n\r\n\r\n\t/**\r\n   * @public\r\n   * @method addCoupon Us' convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync addCoupon(data) {\r\n\t\tif (data && data[0]) {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: 'ok',\r\n\t\t\t\t...data[0]\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn {};\r\n\t}\r\n\r\n\r\n\r\n\r\n\r\n}\r\n\r\nexport default Converter;\r\n","import { useEffect, useReducer } from 'react';\r\nimport Connector from '../lib/connector.js';\r\n\r\ntype TInitialData = any;\r\ntype Tdependecies = any[] | [];\r\ntype TItem = string;\r\ntype IFormat = string | undefined;\r\n\r\ntype Actions = {\r\n  type: string;\r\n  payload?: any;\r\n};\r\n\r\ninterface IState {\r\n  readonly isLoading: boolean;\r\n  readonly error: object;\r\n  readonly data: TInitialData;\r\n  readonly done: boolean;\r\n}\r\n\r\nconst connector = new Connector();\r\n\r\nconst dataFetchReducer = (state: IState, action: Actions) => {\r\n  switch (action.type) {\r\n    case 'FETCH_INIT':\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n        error: {\r\n          isError: false,\r\n          error: {},\r\n        },\r\n        done: false,\r\n      };\r\n    case 'FETCH_SUCCESS':\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        data: action.payload,\r\n        done: true,\r\n      };\r\n    case 'FETCH_FAILURE':\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        error: {\r\n          isError: true,\r\n          error: action.payload,\r\n          done: true,\r\n        },\r\n      };\r\n    default:\r\n      throw new Error();\r\n  }\r\n};\r\n\r\nconst useFetch = (\r\n  dependencies: Tdependecies = [],\r\n  initialData: TInitialData,\r\n  item: TItem,\r\n  options?: any,\r\n  format?: IFormat\r\n): IState => {\r\n  const initialState: IState = {\r\n    isLoading: false,\r\n    error: {\r\n      isError: false,\r\n      error: {},\r\n    },\r\n    data: initialData,\r\n    done: false,\r\n  };\r\n  const [state, dispatch] = useReducer(dataFetchReducer, initialState);\r\n\r\n  useEffect(() => {\r\n    let didCancel = false;\r\n    const fetchData = async () => {\r\n      dispatch({ type: 'FETCH_INIT' });\r\n      try {\r\n        // @ts-ignore\r\n        let data = await connector.request(item, format, options);\r\n        if (!didCancel) {\r\n          dispatch({ type: 'FETCH_SUCCESS', payload: data });\r\n        }\r\n      } catch (error) {\r\n        if (!didCancel) {\r\n          dispatch({ type: 'FETCH_FAILURE', payload: error });\r\n        }\r\n      }\r\n    };\r\n    fetchData();\r\n    return () => {\r\n      didCancel = true;\r\n    };\r\n  }, dependencies);\r\n\r\n  return state;\r\n};\r\n\r\nexport default useFetch;\r\n","import { useReducer } from 'react';\r\nimport Connector from '../lib/connector.js';\r\n\r\ntype TInitialData = any;\r\ntype TItem = string;\r\n\r\ntype Actions = {\r\n  type: string;\r\n  payload?: any;\r\n};\r\n\r\ninterface IState {\r\n  readonly isLoading: boolean;\r\n  readonly error: object;\r\n  readonly data: TInitialData;\r\n  readonly done: boolean;\r\n}\r\n\r\nconst connector = new Connector();\r\n\r\nconst dataFetchReducer = (state: IState, action: Actions) => {\r\n  switch (action.type) {\r\n    case 'FETCH_INIT':\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n        error: {\r\n          isError: false,\r\n          error: {},\r\n        },\r\n        done: false,\r\n      };\r\n    case 'FETCH_SUCCESS':\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        data: action.payload,\r\n        done: true,\r\n      };\r\n    case 'FETCH_FAILURE':\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        error: {\r\n          isError: true,\r\n          error: action.payload,\r\n        },\r\n        done: true,\r\n      };\r\n    default:\r\n      throw new Error();\r\n  }\r\n};\r\n\r\nconst useHandleFetch = (\r\n  initialData: TInitialData,\r\n  item: TItem,\r\n  format?: string\r\n): [IState, (values: any) => void] => {\r\n  const initialState: IState = {\r\n    isLoading: false,\r\n    error: {\r\n      isError: false,\r\n      error: {},\r\n    },\r\n    data: initialData,\r\n    done: false,\r\n  };\r\n\r\n  const [state, dispatch] = useReducer(dataFetchReducer, initialState);\r\n\r\n  const handlePost = async (options: any) => {\r\n    dispatch({ type: 'FETCH_INIT' });\r\n\r\n    try {\r\n      // @ts-ignore\r\n      let data = await connector.request(item, format || 'json', options);\r\n      dispatch({ type: 'FETCH_SUCCESS', payload: data });\r\n      return data;\r\n    } catch (error) {\r\n      dispatch({ type: 'FETCH_FAILURE', payload: error });\r\n      return initialData;\r\n    }\r\n  };\r\n\r\n  return [state, handlePost];\r\n};\r\n\r\nexport default useHandleFetch;\r\n","import React, { useState } from 'react';\r\nimport { Button } from 'antd';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n// import components\r\nimport Input from '../../../components/Field/Input';\r\nimport TextArea from '../../../components/Field/TextArea';\r\nimport { useHandleFetch } from '../../../hooks';\r\n\r\nconst validationSchema = Yup.object().shape({\r\n\tusername: Yup.string()\r\n\t\t.label('Username')\r\n\t\t.required('Username is required')\r\n\t\t.min(3, 'Username must have at least 3 characters'),\r\n\r\n\tpassword: Yup.string().label('Password').required('Password is required'),\r\n});\r\n\r\nconst initialValues = {\r\n\tusername: '',\r\n\tpassword: '',\r\n};\r\n\r\ninterface Props {\r\n\r\n}\r\n\r\nconst QuickEdit = ({ }: Props) => {\r\n\tconst [loginState, handleLoginFetch] = useHandleFetch({}, 'login');\r\n\r\n\tconst handleSubmit = async (values: any, actions: any) => {\r\n\t\tconst updateCategoryRes = await handleLoginFetch({\r\n\t\t\tbody: {\r\n\t\t\t\tusername: values.username,\r\n\t\t\t\tpassword: values.password,\r\n\t\t\t},\r\n\t\t});\r\n\r\n\t\tactions.setSubmitting(false);\r\n\t};\r\n\r\n\r\n\r\n\r\n\tconst getisSubmitButtonDisabled = (values, isValid) => {\r\n\t\tif (!values.username || !values.password || !isValid) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\treturn (\r\n\t\t<Formik\r\n\t\t\tonSubmit={(values, actions) => handleSubmit(values, actions)}\r\n\t\t\tvalidationSchema={validationSchema}\r\n\t\t\tvalidateOnBlur={false}\r\n\t\t\tenableReinitialize={true}\r\n\t\t\tinitialValues={\r\n\t\t\t\t{ ...initialValues }\r\n\t\t\t}\r\n\t\t>\r\n\t\t\t{({\r\n\t\t\t\thandleChange,\r\n\t\t\t\tvalues,\r\n\t\t\t\thandleSubmit,\r\n\t\t\t\terrors,\r\n\t\t\t\tisValid,\r\n\t\t\t\tisSubmitting,\r\n\t\t\t\ttouched,\r\n\t\t\t\thandleBlur,\r\n\t\t\t\tsetFieldTouched,\r\n\t\t\t\thandleReset,\r\n\t\t\t}) => (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\tmaxWidth: '400px',\r\n\t\t\t\t\t\t\tmargin: '20px'\r\n\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\tlabel='Username'\r\n\t\t\t\t\t\t\t\tvalue={values.username}\r\n\t\t\t\t\t\t\t\tname='username'\r\n\t\t\t\t\t\t\t\tisError={(touched.username && errors.username) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && loginState.error['error']['username'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.username && errors.username) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && loginState.error['error']['username'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('username');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\tlabel='Password'\r\n\t\t\t\t\t\t\t\tvalue={values.password}\r\n\t\t\t\t\t\t\t\tname='password'\r\n\t\t\t\t\t\t\t\tisError={(touched.password && errors.password) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && loginState.error['error']['password'])}\r\n\t\t\t\t\t\t\t\terrorString={(touched.password && errors.password) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && loginState.error['error']['password'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('password');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\ttype='primary'\r\n\t\t\t\t\t\t\t\tonClick={(e: any) => handleSubmit(e)}\r\n\t\t\t\t\t\t\t\tdisabled={getisSubmitButtonDisabled(values, isValid)}\r\n\t\t\t\t\t\t\t\tloading={isSubmitting}\r\n\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t// marginTop: '20px'\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\tLogin\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</>\r\n\t\t\t\t)}\r\n\t\t</Formik>\r\n\t);\r\n};\r\n\r\n\r\nexport default QuickEdit;\r\n","import Login from './Login';\r\nexport default Login;\r\n","import React, { useState } from 'react';\r\nimport { BrowserRouter as Router, Link, Switch, withRouter } from 'react-router-dom';\r\nimport { Layout, Menu, Upload, message } from 'antd';\r\n\r\n\r\nimport {\r\n    PieChartOutlined,\r\n    FileOutlined,\r\n    TeamOutlined,\r\n    TagOutlined,\r\n    BranchesOutlined,\r\n    GoldOutlined,\r\n    FilterOutlined,\r\n    TagsOutlined,\r\n    CarOutlined,\r\n    ShoppingCartOutlined,\r\n    MailOutlined,\r\n    SettingOutlined,\r\n    InboxOutlined,\r\n    SlidersOutlined,\r\n    DesktopOutlined,\r\n    RadarChartOutlined,\r\n    MessageOutlined,\r\n    UserOutlined,\r\n    FileAddOutlined,\r\n    FileSearchOutlined,\r\n    BgColorsOutlined,\r\n    BankOutlined,\r\n    FireOutlined,\r\n    MailTwoTone,\r\n    UserAddOutlined,\r\n    FileExcelOutlined,\r\n    CalculatorOutlined,\r\n    CustomerServiceOutlined,\r\n    MoneyCollectOutlined,\r\n    UsergroupAddOutlined\r\n} from '@ant-design/icons';\r\n\r\nconst { Header, Content, Footer, Sider } = Layout;\r\nconst { SubMenu } = Menu;\r\n\r\nconst SiderComponent = (props: any) => {\r\n    const [collapsed, setcollapsed] = useState(false);\r\n    const onCollapse = (collapsed: any) => {\r\n        // console.log(collapsed);\r\n        setcollapsed(collapsed);\r\n    };\r\n\r\n\r\n\r\n    return (\r\n        <Sider\r\n            width={260}\r\n            style={{\r\n                boxShadow: '7px 0 60px rgba(0,0,0,.05)',\r\n                border: 'none'\r\n            }}\r\n            collapsible collapsed={collapsed} onCollapse={onCollapse} theme='light'>\r\n\r\n            <Menu selectable={true} mode='inline'>\r\n                <Menu.Item key='1' icon={<PieChartOutlined />}>\r\n                    <Link to='/admin'>Dashboard</Link>\r\n                </Menu.Item>\r\n\r\n                {/* <SubMenu key='sub1' icon={<TagOutlined />} title='Category'>\r\n\t\t\t\t\t<Menu.Item key='2'>\r\n\t\t\t\t\t\t<Link to='/category'>List Categories</Link>\r\n\t\t\t\t\t</Menu.Item>\r\n\t\t\t\t</SubMenu> */}\r\n\r\n                {/* <SubMenu key='sub2' icon={<BranchesOutlined />} title='Brand'>\r\n\r\n\t\t\t\t\t<Menu.Item key='5'>\r\n\t\t\t\t\t\t<Link to='/brand'>List Brand</Link>\r\n\t\t\t\t\t</Menu.Item>\r\n\t\t\t\t</SubMenu> */}\r\n\r\n                <SubMenu\r\n                    key='sub3'\r\n                    icon={<GoldOutlined />}\r\n                    title='Product'\r\n                // onTitleClick={() => props.history.push('/product')}\r\n                >\r\n                    <Menu.Item\r\n                        icon={<RadarChartOutlined />}\r\n                        key='6'>\r\n                        <Link to='/admin/product'>Products</Link>\r\n                    </Menu.Item>\r\n\r\n                    <Menu.Item\r\n                        icon={<BankOutlined />}\r\n                        key='2222'>\r\n                        <Link to='/admin/bundle'>Bundle</Link>\r\n                    </Menu.Item>\r\n\r\n                    <Menu.Item key='9' icon={<TagsOutlined />}>\r\n                        <Link to='/admin/tag'>Tags</Link>\r\n\r\n                    </Menu.Item>\r\n\r\n                    <Menu.Item key='2' icon={<TagOutlined />}>\r\n                        <Link to='/admin/category'>Categories</Link>\r\n                    </Menu.Item>\r\n\r\n                    <Menu.Item key='5' icon={<BranchesOutlined />}>\r\n                        <Link to='/admin/brand'>Brand</Link>\r\n                    </Menu.Item>\r\n\r\n                </SubMenu>\r\n\r\n                <SubMenu\r\n                    key='sub333'\r\n                    icon={<GoldOutlined />}\r\n                    title='Recipies'\r\n                // onTitleClick={() => props.history.push('/product')}\r\n                >\r\n                    <Menu.Item\r\n                        icon={<RadarChartOutlined />}\r\n                        key='655'>\r\n                        <Link to='/admin/posts'>List Posts</Link>\r\n                    </Menu.Item>\r\n\r\n                    <Menu.Item\r\n                        icon={<TagOutlined />}\r\n                        key='2222444'>\r\n                        <Link to='/admin/posts/category'>Post Category</Link>\r\n                    </Menu.Item>\r\n\r\n                    <Menu.Item key='955' icon={<TagsOutlined />}>\r\n                        <Link to='/admin/posts/tag'>Post Tags</Link>\r\n                    </Menu.Item>\r\n\r\n                </SubMenu>\r\n\r\n\r\n\r\n                {/* <Menu.Item key='9' icon={<TagsOutlined />}>\r\n\t\t\t\t\t<Link to='/tag'>Tags</Link>\r\n\t\t\t\t</Menu.Item> */}\r\n\r\n                {/* <Menu.Item key='1012' icon={<FileExcelOutlined />}>\r\n                    <Link to='/admin/posts'>\r\n                        Recipies\r\n                    </Link>\r\n                </Menu.Item> */}\r\n\r\n                <Menu.Item key='1011' icon={<FireOutlined />}>\r\n                    <Link to='/admin/coupon'>Coupon</Link>\r\n                </Menu.Item>\r\n\r\n                <Menu.Item key='10' icon={<CarOutlined />}>\r\n                    <Link to='/admin/delivery'>Delivery</Link>\r\n                </Menu.Item>\r\n\r\n                \r\n                <SubMenu\r\n                    key='sub33'\r\n                    icon={<CalculatorOutlined />}\r\n                    title='Accounting'\r\n                // onTitleClick={() => props.history.push('/product')}\r\n                >\r\n                    <Menu.Item\r\n                        icon={<UsergroupAddOutlined />}\r\n                        key='66'>\r\n                        <Link to='/admin/staff'>\r\n                            Staff\r\n                        </Link>\r\n                    </Menu.Item>\r\n\r\n                    <Menu.Item\r\n                        icon={<MoneyCollectOutlined />}\r\n                        key='67'>\r\n                        <Link to='/admin/expense'>\r\n                            Expense\r\n                        </Link>\r\n                    </Menu.Item>\r\n\r\n                </SubMenu>\r\n\r\n\r\n\r\n                <SubMenu key='sub4' icon={<ShoppingCartOutlined />} title='Orders'>\r\n                    <Menu.Item key='11'>\r\n                        <Link to='/admin/order'>List Orders</Link>\r\n                    </Menu.Item>\r\n                    <Menu.Item key='11222'>\r\n                        <Link to='/admin/order/overview'>\r\n                            Order Analytics\r\n                        </Link>\r\n                    </Menu.Item>\r\n                    <Menu.Item key='12'>\r\n                        <Link to='/admin/order/new'>Add Order</Link>\r\n                    </Menu.Item>\r\n                </SubMenu>\r\n\r\n                <Menu.Item key='13' icon={<TeamOutlined />}>\r\n                    <Link to='/admin/customer'>Customer</Link>\r\n                </Menu.Item>\r\n\r\n\r\n                <Menu.Item key='1888' icon={<MailOutlined />}>\r\n                    <Link to='/admin/email'>Email</Link>\r\n                </Menu.Item>\r\n\r\n\r\n                <Menu.Item key='199' icon={<MessageOutlined />}>\r\n                    <Link to='/admin/sms'>SMS</Link>\r\n                </Menu.Item>\r\n\r\n                <SubMenu key='sub6' icon={<FileOutlined />} title='Pages'>\r\n                    <Menu.Item key='18'\r\n                        icon={<FileSearchOutlined />}\r\n                    >\r\n                        <Link to='/admin/page'> List Pages</Link>\r\n                    </Menu.Item>\r\n                    <Menu.Item\r\n                        icon={<FileAddOutlined />}\r\n                        key='17'>\r\n                        <Link to='/admin/page/new'> Add new Page</Link>\r\n                    </Menu.Item>\r\n\r\n                </SubMenu>\r\n\r\n                <Menu.Item key='23'\r\n                    icon={<SlidersOutlined />}\r\n                >\r\n                    <Link to='/admin/settings/components'>Components</Link>\r\n                </Menu.Item>\r\n\r\n                <SubMenu key='sub7' icon={<SettingOutlined />} title='Settings'>\r\n                    <Menu.Item\r\n                        icon={<UserOutlined />}\r\n                        key='19'>\r\n                        <Link to='/admin/settings/siteInfo'>Site information</Link>\r\n                    </Menu.Item>\r\n\r\n                    <Menu.Item\r\n                        icon={<UserAddOutlined />}\r\n                        key='19999'>\r\n                        <Link to='/admin/settings/admins'>Admins</Link>\r\n                    </Menu.Item>\r\n\r\n                    <Menu.Item\r\n                        icon={<BgColorsOutlined />}\r\n                        key='20'>\r\n                        <Link to='/admin/settings/themes'>Themes</Link>\r\n                    </Menu.Item>\r\n\r\n                    {/* <Menu.Item key='21'>\r\n\t\t\t\t\t\t<Link to='/settings/image'>Image</Link>\r\n\t\t\t\t\t</Menu.Item> */}\r\n                    {/* <Menu.Item key='22'>\r\n                        <Link to='/admin/settings/invoice'>Invoice</Link>\r\n                    </Menu.Item> */}\r\n\r\n                </SubMenu>\r\n            </Menu>\r\n        </Sider>\r\n    );\r\n};\r\n\r\nexport default withRouter(SiderComponent);\r\n","import Sider from \"./Sider\";\r\nexport default Sider; ","import Empty from \"./Empty\";\r\nexport default Empty; ","import React from 'react'\r\nimport { Empty } from 'antd';\r\n\r\n\r\ninterface Props {\r\n    title?: string;\r\n    height?: number\r\n}\r\n\r\nconst EmptyComponent = ({\r\n    title = 'No Data found',\r\n    height = 300\r\n}: Props) => {\r\n    return (\r\n        <div style={{\r\n            height: height,\r\n            display: 'flex',\r\n            justifyContent: 'center',\r\n            alignItems: 'center'\r\n        }}>\r\n            <Empty description={title} image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EmptyComponent\r\n","import React, { useEffect } from 'react';\r\n\r\n\r\n// import hooks \r\nimport { useHandleFetch } from \"../../hooks\";\r\n\r\n// import components\r\n// import { openSuccessNotification, openErrorNotification } from \"../../components/Notification\";\r\nimport Empty from \"../../components/Empty\";\r\n\r\n// import libraries \r\nimport { useHistory } from \"react-router\";\r\nimport { LogoutOutlined,\r\n     BellOutlined, \r\n     OrderedListOutlined,\r\n    TwitterSquareFilled,\r\n    ShoppingCartOutlined,\r\n    UserOutlined,\r\n     } from '@ant-design/icons';\r\nimport Moment from 'react-moment';\r\nimport moment from 'moment';\r\nimport { Layout, Badge, Dropdown, Menu, Spin } from 'antd';\r\nconst { Header } = Layout;\r\n\r\n\r\n// import styles\r\n\r\n\r\ninterface Props {\r\n\r\n}\r\n\r\nconst HeaderComponent = (props: Props) => {\r\n    const history = useHistory();\r\n\r\n    const [getAllNotificationState, handleGetAllNOticationFetch] = useHandleFetch({}, 'getAllNotification');\r\n\r\n\r\n    const handleMenuClick = (e) => {\r\n        if (e.key === '3') {\r\n        }\r\n    };\r\n\r\n\r\n    useEffect(() => {\r\n        const getAllNotification = async () => {\r\n            await handleGetAllNOticationFetch({});\r\n        }\r\n\r\n        getAllNotification();\r\n    }, [])\r\n\r\n\r\n\r\n\r\n    console.log('getAllNotificationState',getAllNotificationState);\r\n\r\n\r\n    const typeIcon = {\r\n        customer: <UserOutlined />,\r\n        order: <ShoppingCartOutlined />\r\n    }\r\n\r\n    const menu = () => {\r\n\r\n        if (getAllNotificationState.isLoading) return (\r\n            <div style={{\r\n                height:'100%',\r\n                display:'flex',\r\n                justifyContent:'center',\r\n                alignItems:'center',\r\n                marginTop:'100px'\r\n            }}>\r\n                <Spin />\r\n            </div>\r\n        );\r\n\r\n        if (getAllNotificationState.done && getAllNotificationState.data && !getAllNotificationState.data[0]) {\r\n            return (\r\n                <div style={{\r\n                    height:'100%',\r\n                    display:'flex',\r\n                    justifyContent:'center',\r\n                    alignItems:'center',\r\n                    marginTop:'100px'\r\n                }}>\r\n                     <Empty title='No Notification found' />\r\n                </div>\r\n            )\r\n        }\r\n        return (\r\n            <div \r\n            style={{\r\n                \r\n            }}\r\n            className='notificationListItemContainer'>\r\n                                 \r\n                                 {getAllNotificationState.done\r\n                 && getAllNotificationState.data[0]\r\n                 && (\r\n                    <div style={{\r\n                      \r\n                    }}>\r\n                    <div style={{\r\n                        width:'100%',\r\n                        display:'flex',\r\n                        justifyContent:\"space-around\",\r\n                    }}>\r\n                    <a\r\n                     style={{\r\n                          textAlign:'center',\r\n                          backgroundColor:'#f7f7f7' ,\r\n                          padding:\"10px\",\r\n                          width:'50%',\r\n                          fontSize:'13px'\r\n\r\n                     }}\r\n                      href=\"##\">\r\n                        CLEAR ALL\r\n                     </a>\r\n                     <a\r\n                     onClick={() => history.push('/admin/notification')}\r\n                     style={{\r\n                          textAlign:'center',\r\n                          backgroundColor:'#eee'   ,\r\n                          padding:\"10px\",\r\n                          width:'50%' ,\r\n                          fontSize:'13px'\r\n                     }}\r\n                      href=\"##\">\r\n                      SEE ALL \r\n                     </a>\r\n                    </div>\r\n                    </div>\r\n                 )\r\n               }\r\n\r\n            {getAllNotificationState.done\r\n            && getAllNotificationState.data[0]\r\n            && getAllNotificationState.data.map((item,index) => {\r\n            return (\r\n            <div\r\n              onClick={() => history.push(`/admin/${item.type}/${item.id}`)}\r\n              className='notificationListItemContainer__item'>\r\n                <span className='notificationListItemContainer__item-icon'>\r\n                  {typeIcon[item['type']]}\r\n                </span>\r\n                <div className='notificationListItemContainer__item-info'>\r\n                    <h3>\r\n                        {item.heading}\r\n                    </h3>\r\n                    <h4>\r\n                        {item.text}\r\n                    </h4>\r\n                    <h2>\r\n                    <Moment >\r\n                        {item.added}\r\n                    </Moment>\r\n                    </h2>\r\n                </div>\r\n            </div>\r\n        )\r\n    })}\r\n</div>\r\n\r\n          \r\n        )\r\n    }\r\n\r\n    \r\n\r\n    return (\r\n        <Header\r\n            style={{\r\n                background: '#fff',\r\n                height: '60px',\r\n                display: 'flex',\r\n                justifyContent: 'space-between',\r\n                boxShadow: '0 0.46875rem 2.1875rem rgba(8,10,37,.01), 0 0.9375rem 1.40625rem rgba(8,10,37,.01), 0 0.25rem 0.53125rem rgba(8,10,37,.02), 0 0.125rem 0.1875rem rgba(8,10,37,.01)',\r\n                zIndex: 10,\r\n                transition: ' all .2s',\r\n                alignItems: 'center',\r\n                alignContent: 'center'\r\n            }}\r\n        >\r\n            <h2\r\n\r\n                onClick={() => history.push('/admin')}\r\n                style={{\r\n                    color: '#0072EA', marginTop: '10px', marginLeft: '-20px',\r\n                    cursor: 'pointer'\r\n\r\n                }}\r\n            >\r\n                Admin\r\n            </h2>\r\n\r\n            <div\r\n                style={{\r\n                    marginRight: '-28px'\r\n                }}>\r\n\r\n\r\n                <Dropdown\r\n                    placement=\"bottomLeft\"\r\n\r\n                    overlay={menu}\r\n                // visible={this.state.visible}\r\n                >\r\n                    <a\r\n                        style={{\r\n                            marginRight: '10px'\r\n                        }}\r\n                        href='###' className='notificationIconContainer'>\r\n\r\n                        <Badge\r\n                            overflowCount={100}\r\n                            // @ts-ignore\r\n                            showZero={TwitterSquareFilled}\r\n                            count={getAllNotificationState.done && !getAllNotificationState.data ? 0 : getAllNotificationState.data.length ? getAllNotificationState.data.length : 0}\r\n                        >\r\n                            <span style={{\r\n                                marginLeft: '10px',\r\n                                fontWeight: 600,\r\n                                borderRadius: '25px',\r\n                                color: '#1890ff',\r\n                                padding: '2px 20px',\r\n                                cursor: 'pointer',\r\n                                marginRight: '-5px'\r\n                            }}>\r\n                                <BellOutlined />\r\n\r\n                            </span>\r\n                        </Badge>\r\n                    </a>\r\n                </Dropdown>\r\n\r\n\r\n\r\n\r\n                <a href='/admin/auth/logout'>\r\n                    <span style={{\r\n                        marginLeft: '10px',\r\n                        fontWeight: 600,\r\n                        borderRadius: '25px',\r\n                        color: '#1890ff',\r\n                        padding: '2px 20px',\r\n                        cursor: 'pointer'\r\n                    }}>\r\n                        <LogoutOutlined />\r\n                        <span style={{\r\n                            marginLeft: '10px',\r\n\r\n                        }}>\r\n                            logout\r\n                    </span>\r\n                    </span>\r\n                </a>\r\n\r\n            </div>\r\n        </Header>\r\n    )\r\n}\r\n\r\nexport default HeaderComponent;\r\n","import Header from \"./Header\";\r\nexport default Header; ","import React, { useState, useEffect } from 'react'\r\n\r\n\r\n\r\n// import libraries \r\nimport {\r\n    ResponsiveContainer,\r\n    AreaChart,\r\n    CartesianGrid,\r\n    XAxis,\r\n    YAxis,\r\n    Tooltip,\r\n    Legend,\r\n    Area,\r\n    Line\r\n} from \"recharts\";\r\n\r\nimport {\r\n    DeleteOutlined,\r\n    FileAddOutlined,\r\n    CheckCircleOutlined,\r\n    FileImageFilled,\r\n    FileImageOutlined,\r\n    FileImageTwoTone,\r\n    PlusOutlined,\r\n    PlusCircleOutlined,\r\n    CloseOutlined,\r\n    CheckOutlined,\r\n    InfoCircleOutlined,\r\n    UserOutlined,\r\n    CalendarOutlined,\r\n    GoldOutlined,\r\n    ShoppingCartOutlined,\r\n    TagOutlined\r\n} from '@ant-design/icons';\r\n\r\n\r\nimport { useHandleFetch } from \"../../hooks\";\r\n\r\n\r\n\r\nimport { Select, Button, Spin, Empty } from 'antd';\r\nimport Moment from \"react-moment\";\r\n\r\nconst { Option } = Select;\r\n\r\n\r\n\r\n\r\nexport const RAINFALL = {\r\n    \"2018\": [\r\n        {\r\n            month: 1,\r\n            rainfall: 65.4\r\n        },\r\n        {\r\n            month: 2,\r\n            rainfall: 1.6\r\n        },\r\n        {\r\n            month: 3,\r\n            rainfall: 23\r\n        },\r\n        {\r\n            month: 4,\r\n            rainfall: 16.4\r\n        },\r\n        {\r\n            month: 5,\r\n            rainfall: 65.6\r\n        },\r\n        {\r\n            month: 6,\r\n            rainfall: 43.2\r\n        },\r\n        {\r\n            month: 7,\r\n            rainfall: 19.4\r\n        },\r\n        {\r\n            month: 8,\r\n            rainfall: 42.8\r\n        },\r\n        {\r\n            month: 9,\r\n            rainfall: 16.4\r\n        },\r\n        {\r\n            month: 11,\r\n            rainfall: 97.8\r\n        },\r\n        {\r\n            month: 12,\r\n            rainfall: 104.8\r\n        }\r\n    ],\r\n    \"2019\": [\r\n        {\r\n            month: 1,\r\n            rainfall: 11.2\r\n        },\r\n        {\r\n            month: 2,\r\n            rainfall: 18.6\r\n        },\r\n        {\r\n            month: 3,\r\n            rainfall: 12\r\n        },\r\n        {\r\n            month: 4,\r\n            rainfall: 7.2\r\n        },\r\n        {\r\n            month: 5,\r\n            rainfall: 53.4\r\n        },\r\n        {\r\n            month: 6,\r\n            rainfall: 49.8\r\n        },\r\n        {\r\n            month: 7,\r\n            rainfall: 45.2\r\n        },\r\n        {\r\n            month: 8,\r\n            rainfall: 51.4\r\n        },\r\n        {\r\n            month: 9,\r\n            rainfall: 41\r\n        },\r\n        {\r\n            month: 10,\r\n            rainfall: 24\r\n        },\r\n        {\r\n            month: 11,\r\n            rainfall: 54.4\r\n        },\r\n        {\r\n            month: 12,\r\n            rainfall: 6.2\r\n        }\r\n    ]\r\n};\r\n\r\n\r\n\r\n\r\nconst MONTHS = [\r\n    \"Jan\",\r\n    \"Feb\",\r\n    \"Mar\",\r\n    \"Apr\",\r\n    \"May\",\r\n    \"Jun\",\r\n    \"Jul\",\r\n    \"Aug\",\r\n    \"Sep\",\r\n    \"Oct\",\r\n    \"Nov\",\r\n    \"Dec\"\r\n];\r\n\r\nexport const getMonthNameByOrder = (order: number): string | undefined =>\r\n    MONTHS[order - 1];\r\n\r\n\r\n\r\n\r\n\r\nexport const TooltipContainerStyles = {\r\n    border: 0,\r\n    borderRadius: \"8px\",\r\n    fontSize: 14,\r\n    boxShadow: \"2px 2px 5px 3px rgba(0,0,0,0.15)\"\r\n};\r\n\r\n\r\n\r\n\r\ninterface Props {\r\n\r\n}\r\n\r\nconst localOptions = [\r\n    {\r\n        value: 'category',\r\n        name: 'Category'\r\n    }, {\r\n        value: 'product',\r\n        name: 'Product'\r\n    }\r\n\r\n]\r\n\r\nconst ApiVisits = (props: Props) => {\r\n    const [selectedApiValue, setSelectedApiValue] = useState('');\r\n\r\n\r\n\r\n    \r\n\r\n    const [demoGraphicVisitsState, handleDemoGraphicVisitsStateFetch] = useHandleFetch({}, 'getAnalyticsDemographicVisits');\r\n\r\n\r\n    const [userData, setuserData] = useState([]);\r\n\r\n    useEffect(()=>{\r\n        const getDemoGraphicVisitsValue = async () => {\r\n            const uservisitsDataRes =  await handleDemoGraphicVisitsStateFetch({\r\n                urlOptions: {\r\n                    params: {\r\n                        metricType: 'day',\r\n                    }\r\n                }\r\n            }); \r\n\r\n           console.log('uservisitsData',uservisitsDataRes); \r\n\r\n           // @ts-ignore\r\n           if(uservisitsDataRes){\r\n            // @ts-ignore\r\n            setuserData(uservisitsDataRes)\r\n           }\r\n\r\n\r\n           };\r\n\r\n\r\n           getDemoGraphicVisitsValue(); \r\n\r\n    },[])\r\n\r\n\r\n\r\n\r\n    const onChange = (value) => {\r\n        setSelectedApiValue(value);\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div className='overviewContainer__userVisits'>\r\n            <div className='overviewContainer__body-apiVisits-header'>\r\n                <div className='overviewContainer__body-apiVisits-header-info'>\r\n                    <h2>\r\n                        Users \r\n                    </h2>\r\n\r\n                        <h3>\r\n                          All users that visited\r\n                        </h3>\r\n                </div>\r\n            </div>\r\n\r\n            <div className='overviewContainer__body-body'>\r\n            {demoGraphicVisitsState.isLoading && (\r\n            <>\r\n            <div style={{\r\n                margin:'100px 0',\r\n                display:'flex',\r\n                justifyContent:'center',\r\n                alignItems:\"center\"\r\n            }}>\r\n              <Spin size='large' />\r\n            </div>\r\n\r\n            </>\r\n        )}\r\n                {demoGraphicVisitsState.done && !(demoGraphicVisitsState.data.length > 0) && (\r\n                    <div style={{\r\n                        marginTop: '00px'\r\n                    }}>\r\n                        <Empty description={`No User visited`} image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n                    </div>\r\n                )}\r\n\r\n\r\n               {demoGraphicVisitsState.done && userData && userData.length > 0 && (\r\n                    <ResponsiveContainer width=\"100%\" height={300}>\r\n                    <AreaChart data={userData} fontSize={12}>\r\n                        <defs>\r\n                            <linearGradient id=\"rainGradient\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\r\n                                <stop offset=\"0%\" stopColor=\"#1890ff\" />\r\n                                <stop offset=\"100%\" stopColor=\"#3066BE22\" />\r\n                            </linearGradient>\r\n                        </defs>\r\n                        <CartesianGrid\r\n                            vertical={false}\r\n                            strokeDasharray=\"3 3\"\r\n                            stroke=\"#d6d9da\"\r\n                        />\r\n                        <XAxis dataKey=\"day\" \r\n                        // tickFormatter={getMonthNameByOrder}\r\n                         />\r\n                        <YAxis\r\n                            // unit=\"ml\"\r\n                            orientation=\"left\"\r\n                            width={20}\r\n                            axisLine={false}\r\n                            tickLine={false}\r\n                        />\r\n                        <Tooltip\r\n                            cursor={false}\r\n                            contentStyle={TooltipContainerStyles}\r\n                            formatter={(value, name) => [`${value}`, `${name}`]}\r\n                        />\r\n                        <Area\r\n                            dataKey=\"count\"\r\n                            name=\"Count\"\r\n                            // unit=\"times\"\r\n                            type=\"basis\"\r\n                            fill=\"url(#rainGradient)\"\r\n                        />\r\n                    </AreaChart>\r\n                </ResponsiveContainer>\r\n               )}\r\n\r\n\r\n            </div>\r\n            {/* <div className=\"overviewContainer__body-footer\">\r\n                <h3>\r\n                    <span>\r\n                        <CalendarOutlined />\r\n                    </span>\r\n\r\n\t\t\t\t\tIn the last month\r\n\t\t\t\t</h3>\r\n            </div> */}\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ApiVisits\r\n","import React, { useState, useEffect } from 'react'\r\n\r\n\r\n\r\n// import libraries \r\nimport {\r\n    ResponsiveContainer,\r\n    AreaChart,\r\n    CartesianGrid,\r\n    XAxis,\r\n    YAxis,\r\n    Tooltip,\r\n    Legend,\r\n    Area,\r\n    Line\r\n} from \"recharts\";\r\n\r\nimport {\r\n    DeleteOutlined,\r\n    FileAddOutlined,\r\n    CheckCircleOutlined,\r\n    FileImageFilled,\r\n    FileImageOutlined,\r\n    FileImageTwoTone,\r\n    PlusOutlined,\r\n    PlusCircleOutlined,\r\n    CloseOutlined,\r\n    CheckOutlined,\r\n    InfoCircleOutlined,\r\n    UserOutlined,\r\n    CalendarOutlined,\r\n    GoldOutlined,\r\n    ShoppingCartOutlined,\r\n    TagOutlined\r\n} from '@ant-design/icons';\r\n\r\n\r\nimport { useHandleFetch } from \"../../hooks\";\r\n\r\n\r\n\r\nimport { Select, Button, Spin, Empty } from 'antd';\r\nimport Moment from \"react-moment\";\r\n\r\nconst { Option } = Select;\r\n\r\n\r\n\r\n\r\nexport const RAINFALL = {\r\n    \"2018\": [\r\n        {\r\n            month: 1,\r\n            rainfall: 65.4\r\n        },\r\n        {\r\n            month: 2,\r\n            rainfall: 1.6\r\n        },\r\n        {\r\n            month: 3,\r\n            rainfall: 23\r\n        },\r\n        {\r\n            month: 4,\r\n            rainfall: 16.4\r\n        },\r\n        {\r\n            month: 5,\r\n            rainfall: 65.6\r\n        },\r\n        {\r\n            month: 6,\r\n            rainfall: 43.2\r\n        },\r\n        {\r\n            month: 7,\r\n            rainfall: 19.4\r\n        },\r\n        {\r\n            month: 8,\r\n            rainfall: 42.8\r\n        },\r\n        {\r\n            month: 9,\r\n            rainfall: 16.4\r\n        },\r\n        {\r\n            month: 11,\r\n            rainfall: 97.8\r\n        },\r\n        {\r\n            month: 12,\r\n            rainfall: 104.8\r\n        }\r\n    ],\r\n    \"2019\": [\r\n        {\r\n            month: 1,\r\n            rainfall: 11.2\r\n        },\r\n        {\r\n            month: 2,\r\n            rainfall: 18.6\r\n        },\r\n        {\r\n            month: 3,\r\n            rainfall: 12\r\n        },\r\n        {\r\n            month: 4,\r\n            rainfall: 7.2\r\n        },\r\n        {\r\n            month: 5,\r\n            rainfall: 53.4\r\n        },\r\n        {\r\n            month: 6,\r\n            rainfall: 49.8\r\n        },\r\n        {\r\n            month: 7,\r\n            rainfall: 45.2\r\n        },\r\n        {\r\n            month: 8,\r\n            rainfall: 51.4\r\n        },\r\n        {\r\n            month: 9,\r\n            rainfall: 41\r\n        },\r\n        {\r\n            month: 10,\r\n            rainfall: 24\r\n        },\r\n        {\r\n            month: 11,\r\n            rainfall: 54.4\r\n        },\r\n        {\r\n            month: 12,\r\n            rainfall: 6.2\r\n        }\r\n    ]\r\n};\r\n\r\n\r\n\r\n\r\nconst MONTHS = [\r\n    \"Jan\",\r\n    \"Feb\",\r\n    \"Mar\",\r\n    \"Apr\",\r\n    \"May\",\r\n    \"Jun\",\r\n    \"Jul\",\r\n    \"Aug\",\r\n    \"Sep\",\r\n    \"Oct\",\r\n    \"Nov\",\r\n    \"Dec\"\r\n];\r\n\r\n\r\nexport const getMonthNameByOrder = (order: number): string | undefined =>\r\n    MONTHS[order - 1];\r\n\r\n\r\n\r\n\r\n\r\nexport const TooltipContainerStyles = {\r\n    border: 0,\r\n    borderRadius: \"8px\",\r\n    fontSize: 14,\r\n    boxShadow: \"2px 2px 5px 3px rgba(0,0,0,0.15)\"\r\n};\r\n\r\n\r\n\r\n\r\ninterface Props {\r\n\r\n}\r\n\r\nconst localOptions = [\r\n    {\r\n        value: 'category',\r\n        name: 'Category'\r\n    }, {\r\n        value: 'product',\r\n        name: 'Product'\r\n    }\r\n]\r\n\r\nconst ApiVisits = (props: Props) => {\r\n    const [selectedApiValue, setSelectedApiValue] = useState('date');\r\n    const [orderAnalyticsVisitsState, handleOrderAnalyticsVisitsStateFetch] = useHandleFetch({}, 'getAnalyticsOrders');\r\n    const [orderData, setorderData] = useState([]);\r\n\r\n\r\n    useEffect(()=>{\r\n        const getAnalyticsOrders = async () => {\r\n\r\n            const ordersDataRes =  await handleOrderAnalyticsVisitsStateFetch({\r\n                urlOptions: {\r\n                    params: {\r\n                        metricType: selectedApiValue,\r\n                    }\r\n                }\r\n            }); \r\n\r\n           console.log('ordersDataRes',ordersDataRes); \r\n\r\n           // @ts-ignore\r\n           if(ordersDataRes){\r\n            // @ts-ignore\r\n            setorderData(ordersDataRes);\r\n           }\r\n\r\n           };\r\n           getAnalyticsOrders(); \r\n\r\n    },[selectedApiValue]); \r\n\r\n\r\n    console.log('orderAnalyticsVisitsState',orderAnalyticsVisitsState);\r\n\r\n\r\n    const onChange = (value) => {\r\n        setSelectedApiValue(value);\r\n    }\r\n\r\n\r\n    const options = [\r\n        {\r\n            value: 'date',\r\n            name: 'Date'\r\n        },\r\n        {\r\n            value: 'hour',\r\n            name: 'Hour'\r\n        },\r\n        {\r\n            value: 'dayOfWeek',\r\n            name: 'Day of week'\r\n        },\r\n        {\r\n            value: 'dayOfMonth',\r\n            name: 'Day of month'\r\n        },\r\n         {\r\n            value: 'month',\r\n            name: 'Month'\r\n        },\r\n        {\r\n            value: 'year',\r\n            name: 'Year'\r\n        }\r\n    ]\r\n\r\n\r\n\r\n    const date = new Date();\r\n    const thisMonth = MONTHS[date.getMonth()]\r\n    \r\n\r\n    return (\r\n        <div className='overviewContainer__userVisits'>\r\n            <div className='overviewContainer__body-apiVisits-header'>\r\n                <div className='overviewContainer__body-apiVisits-header-info'>\r\n                    <h2>\r\n                        Orders \r\n                    </h2>\r\n\r\n                        <h3>\r\n                          All orders that visited\r\n                        </h3>\r\n                </div>\r\n\r\n                <div className='overviewContainer__body-apiVisits-header-controller'>\r\n                <Select\r\n                    bordered={false}\r\n                    showSearch\r\n                    style={{ width: '130px', borderRadius: '6px', color: '#1890ff' }}\r\n                    placeholder='Select an api'\r\n                    optionFilterProp='children'\r\n                    onChange={onChange}\r\n                    defaultValue={selectedApiValue}\r\n                    filterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n                >\r\n                    {\r\n                        options.map((option) => {\r\n                            return <Option value={option.value}>{option.name}</Option>;\r\n                        })}\r\n                </Select>\r\n            </div>\r\n            </div>\r\n\r\n            <div className='overviewContainer__body-body'>\r\n            {orderAnalyticsVisitsState.isLoading && (\r\n            <>\r\n\r\n            <div style={{\r\n                margin:'100px 0',\r\n                display:'flex',\r\n                justifyContent:'center',\r\n                alignItems:\"center\"\r\n            }}>\r\n                <Spin size='large' />\r\n             </div>\r\n            </>\r\n          )}\r\n                {orderAnalyticsVisitsState.done && !(orderAnalyticsVisitsState.data.length > 0) && (\r\n                    <div style={{\r\n                        marginTop: '00px'\r\n                    }}>\r\n                        <Empty description={`No Orders Created`} image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n                    </div>\r\n                )}\r\n\r\n\r\n               {orderAnalyticsVisitsState.done && orderData && orderData.length > 0 && (\r\n                    <ResponsiveContainer width=\"100%\" height={300}>\r\n                    <AreaChart data={orderData} fontSize={12}>\r\n                        <defs>\r\n                            <linearGradient id=\"rainGradient\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\r\n                                <stop offset=\"0%\" stopColor=\"#1890ff\" />\r\n                                <stop offset=\"100%\" stopColor=\"#3066BE22\" />\r\n                            </linearGradient>\r\n                        </defs>\r\n                        <CartesianGrid\r\n                            vertical={false}\r\n                            strokeDasharray=\"3 3\"\r\n                            stroke=\"#d6d9da\"\r\n                        />\r\n                        <XAxis \r\n                        dataKey={selectedApiValue} \r\n                        tickFormatter={selectedApiValue === 'month' && getMonthNameByOrder}\r\n                         />\r\n                        <YAxis\r\n                            // unit=\"ml\"\r\n                            orientation=\"left\"\r\n                            width={20}\r\n                            axisLine={false}\r\n                            tickLine={false}\r\n                        />\r\n                        <Tooltip\r\n                            cursor={false}\r\n                            contentStyle={TooltipContainerStyles}\r\n                            formatter={(value, name) => [`${value}`, `${name}`]}\r\n                        />\r\n                        <Area\r\n                            dataKey=\"count\"\r\n                            name=\"Count\"\r\n                            unit={selectedApiValue === 'month' ? thisMonth : ''}\r\n                            type=\"basis\"\r\n                            fill=\"url(#rainGradient)\"\r\n                        />\r\n                    </AreaChart>\r\n                </ResponsiveContainer>\r\n               )}\r\n\r\n\r\n            </div>\r\n            {/* <div className=\"overviewContainer__body-footer\">\r\n                <h3>\r\n                    <span>\r\n                        <CalendarOutlined />\r\n                    </span>\r\n\r\n\t\t\t\t\tIn the last month\r\n\t\t\t\t</h3>\r\n            </div> */}\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ApiVisits\r\n","import React, { useState, useEffect } from 'react'\r\n\r\n\r\n\r\n\r\n// import lib \r\n\r\nimport { ResponsiveContainer, PieChart, Tooltip, Pie, Cell } from \"recharts\";\r\n\r\n\r\n// import hooks\r\nimport { useHandleFetch } from \"../../hooks\";\r\n\r\nimport {\r\n    DeleteOutlined,\r\n    FileAddOutlined,\r\n    CheckCircleOutlined,\r\n    FileImageFilled,\r\n    FileImageOutlined,\r\n    FileImageTwoTone,\r\n    PlusOutlined,\r\n    PlusCircleOutlined,\r\n    CloseOutlined,\r\n    CheckOutlined,\r\n    InfoCircleOutlined,\r\n    UserOutlined,\r\n    CalendarOutlined,\r\n    GoldOutlined,\r\n    ShoppingCartOutlined,\r\n    TagOutlined\r\n} from '@ant-design/icons';\r\n\r\nimport { Select, Button, Spin, Empty } from 'antd';\r\n\r\nconst { Option } = Select;\r\n\r\n\r\n\r\n\r\ninterface Props {\r\n\r\n}\r\n\r\nconst localOptions = [\r\n    {\r\n        value: 'browser',\r\n        name: 'Browser'\r\n    },\r\n    {\r\n        value: 'device',\r\n        name: 'Device'\r\n    },\r\n    {\r\n        value: 'os',\r\n        name: 'OS'\r\n    }, {\r\n        value: 'platform',\r\n        name: 'Platform'\r\n    },\r\n  \r\n\r\n];\r\n\r\n\r\nexport const AGE_GROUP = [\r\n    {\r\n        device: \"18-24\",\r\n        percentage: 14\r\n    },\r\n    {\r\n        device: \"25-34\",\r\n        percentage: 24\r\n    },\r\n    {\r\n        device: \"35-44\",\r\n        percentage: 22\r\n    },\r\n    {\r\n        device: \"45-54\",\r\n        percentage: 18\r\n    },\r\n    {\r\n        device: \"55-64\",\r\n        percentage: 16\r\n    },\r\n    {\r\n        device: \"65+\",\r\n        percentage: 6\r\n    }\r\n];\r\n\r\nexport const COLORS = [\r\n    '#1890ff',\r\n    '#20A39E',\r\n    '#61D095',\r\n    '#FFBA49',\r\n    '#EF5B5B',\r\n    '#A4036F',\r\n];\r\n\r\n\r\n\r\n\r\nexport const TooltipContainerStyles = {\r\n    border: 0,\r\n    borderRadius: \"8px\",\r\n    fontSize: 14,\r\n    boxShadow: \"2px 2px 5px 3px rgba(0,0,0,0.15)\"\r\n};\r\n\r\n\r\n\r\n\r\nconst PlatformVisits = (props: Props) => {\r\n    const [options, setoptions] = useState(localOptions);\r\n    const [selectedApiValue, setSelectedApiValue] = useState('browser');\r\n\r\n\r\n    const [demoGraphicVisitsState, handleDemoGraphicVisitsStateFetch] = useHandleFetch({}, 'getAnalyticsDemographicVisits');\r\n\r\n\r\n    const [demographicData, setdemographicData] = useState([]);\r\n\r\n    useEffect(()=>{\r\n        const getDemoGraphicVisitsValue = async () => {\r\n            const demograpicVisitsDataRes =  await handleDemoGraphicVisitsStateFetch({\r\n                urlOptions: {\r\n                    params: {\r\n                        metricType: selectedApiValue,\r\n                    }\r\n                }\r\n            }); \r\n           };\r\n\r\n           getDemoGraphicVisitsValue(); \r\n\r\n    },[selectedApiValue])\r\n\r\n\r\n\r\n    useEffect(()=>{\r\n        if(demoGraphicVisitsState.done && demoGraphicVisitsState.data){\r\n            setdemographicData(demoGraphicVisitsState.data); \r\n        }; \r\n    },[demoGraphicVisitsState])\r\n\r\n\r\n\r\n    console.log('demoGraphicVisitsState',demoGraphicVisitsState)\r\n    console.log('demographicData',demographicData)\r\n\r\n\r\n    const onChange = (value) => {\r\n        setSelectedApiValue(value);\r\n    }\r\n\r\n    const RADIAN = Math.PI / 180;\r\n\r\n\r\n    const renderCustomizedLabel = ({\r\n        cx,\r\n        cy,\r\n        midAngle,\r\n        innerRadius,\r\n        outerRadius,\r\n        value,\r\n        name,\r\n        index,\r\n        percent,\r\n    }) => {\r\n        const radius = innerRadius + (outerRadius - innerRadius) * 0.5;\r\n        const x = cx + radius * Math.cos(-midAngle * RADIAN) - 10;\r\n        const y = cy + radius * Math.sin(-midAngle * RADIAN);\r\n\r\n        console.log('percent..',percent);\r\n        return (\r\n            <text x={x} y={y} fill=\"white\" fontSize={12} dominantBaseline=\"central\">\r\n                {`${(percent * 100).toFixed(0)}%`}\r\n            </text>\r\n        );\r\n    };\r\n\r\n\r\n\r\n    return (\r\n        <div className='overviewContainer__body-platformVisits'>\r\n            <div className='overviewContainer__body-platformVisits-header'>\r\n                <div className='overviewContainer__body-platformVisits-header-info'>\r\n                    <h2>\r\n                        Demographic\r\n                        </h2>\r\n                    <h3>\r\n                       {selectedApiValue} demography\r\n                        </h3>\r\n                </div>\r\n                <div className='overviewContainer__body-platformVisits-header-controller'>\r\n                    <Select\r\n                        bordered={false}\r\n                        showSearch\r\n                        style={{ width: '130px', borderRadius: '6px', color: '#1890ff' }}\r\n                        placeholder='Select Type'\r\n                        optionFilterProp='children'\r\n                        onChange={onChange}\r\n                        defaultValue={'browser'}\r\n                        filterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n                    >\r\n                        {\r\n                            options.map((option) => {\r\n                                return <Option value={option.value}>{option.name}</Option>;\r\n                            })}\r\n                    </Select>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"overviewContainer__body-body\">\r\n\r\n            {demoGraphicVisitsState.isLoading && (\r\n            <>\r\n                <div style={{\r\n                    display:'flex',\r\n                    justifyContent:'center',\r\n                    alignItems:\"center\",\r\n                    marginTop:'100px',\r\n                    marginBottom:'100px',\r\n                }}>\r\n                <Spin\r\n                size='large'\r\n                />\r\n                </div>\r\n\r\n            </>\r\n        )}\r\n                {demoGraphicVisitsState.done && !(demoGraphicVisitsState.data.length > 0) && (\r\n                    <div style={{\r\n                        marginTop: '00px'\r\n                    }}>\r\n                        <Empty description={`No Visits for ${selectedApiValue}`} image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n                    </div>\r\n                )}\r\n\r\n\r\n                    {demoGraphicVisitsState.done && demographicData && demographicData.length > 0 && (\r\n                        <ResponsiveContainer width=\"100%\" height={300}>\r\n                        <PieChart fontSize={14}>\r\n                            <Tooltip\r\n                                cursor={false}\r\n                                contentStyle={TooltipContainerStyles}\r\n                                formatter={(value, name) => [`${value}`, `${name}`]}\r\n                            />\r\n\r\n                            <Pie\r\n                                dataKey=\"count\"\r\n                                data={demographicData}\r\n                                outerRadius={100}\r\n                                innerRadius={40}\r\n                                name={selectedApiValue}\r\n                                nameKey={selectedApiValue}\r\n                                unit=\"%\"\r\n                                label={renderCustomizedLabel}\r\n                                labelLine={false}\r\n                            >\r\n                                {demographicData && demographicData.map((entry, index) => (\r\n                                    <Cell\r\n                                        key={`cell-${index}`}\r\n                                        fill={COLORS[index % COLORS.length]}\r\n                                    />\r\n                                ))}\r\n                            </Pie>\r\n                            </PieChart>\r\n                        </ResponsiveContainer>\r\n                    )}\r\n            </div>\r\n\r\n            <div className=\"overviewContainer__body-footer\">\r\n                <h3>\r\n                    <span>\r\n                        <CalendarOutlined />\r\n                    </span>\r\n\r\n\t\t\t\t\t\t\t\tIn the last month\r\n\t\t\t\t\t     </h3>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PlatformVisits\r\n\r\n\r\n// http://localhost:5000/admin/analytics/user?metric=day?start=date&end=datae\r\n// /http://localhost:5000/admin/analytics/item?type=product&item=534534534534&metric=day","import React,{useState, useEffect} from 'react'\r\n\r\n\r\n// import hooks\r\nimport { useHandleFetch } from \"../../hooks\";\r\n\r\n// import components\r\nimport { DataTableSkeleton } from \"../../components/Placeholders\";\r\n\r\n// \r\n\r\n\r\n// import lib\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {\r\n    FileOutlined,\r\n    InboxOutlined,\r\n    RadiusUpleftOutlined,\r\n    RadiusUprightOutlined,\r\n    RadiusBottomleftOutlined,\r\n    RadiusBottomrightOutlined,\r\n    PlusOutlined,\r\n    DeleteOutlined,\r\n    EditOutlined,\r\n    CheckCircleOutlined,\r\n    CalendarOutlined\r\n} from '@ant-design/icons';\r\n\r\nimport { Skeleton, Empty, Popconfirm, Upload, message, Switch, Select, Button, notification, Table, Space, Input as CoolInput, Tooltip, Modal, Spin } from 'antd';\r\n\r\n\r\nconst { Option } = Select;\r\n\r\nconst { Column, ColumnGroup } = Table;\r\n\r\n\r\n\r\ninterface Props {\r\n    \r\n}\r\n\r\nconst localOptions = [\r\n    {\r\n        value: 'category',\r\n        name: 'Category'\r\n    },\r\n     {\r\n        value: 'product',\r\n        name: 'Product'\r\n    }\r\n\r\n]\r\n\r\n\r\nconst PageVisits = (props: Props) => {\r\n\r\n    const history = useHistory(); \r\n\r\n\r\n    const [options, setoptions] = useState(localOptions);\r\n    const [selectedApiValue, setSelectedApiValue] = useState('product');\r\n    const [pageVisitsState, handlePageVisitsStateFetch] = useHandleFetch({}, 'getAnalyticsPageVisits');\r\n\r\n\r\n    useEffect(()=>{\r\n        const getPageVisitsValue = async () => {\r\n            const pageVisitsDataRes =  await handlePageVisitsStateFetch({\r\n                urlOptions: {\r\n                    params: {\r\n                        visitType: selectedApiValue,\r\n                        item: 'item',\r\n                    }\r\n                }\r\n            }); \r\n           };\r\n\r\n           getPageVisitsValue(); \r\n\r\n    },[selectedApiValue])\r\n\r\n    const onChange = (value) => {\r\n        setSelectedApiValue(value);\r\n    }\r\n\r\n\r\n    console.log('pageVisitsState',pageVisitsState)\r\n\r\n\r\n    return (\r\n\r\n        <div className='overviewContainer__body-apiVisits'>\r\n        <div className='overviewContainer__body-apiVisits-header'>\r\n            <div className='overviewContainer__body-apiVisits-header-info'>\r\n                <h2>\r\n                    Popularity\r\n                    </h2>\r\n                <h3>\r\n                      All {selectedApiValue} that were visited\r\n                    </h3>\r\n            </div>\r\n            <div className='overviewContainer__body-apiVisits-header-controller'>\r\n                <Select\r\n                    bordered={false}\r\n                    showSearch\r\n                    style={{ width: '130px', borderRadius: '6px', color: '#1890ff' }}\r\n                    placeholder='Select an api'\r\n                    optionFilterProp='children'\r\n                    onChange={onChange}\r\n                    defaultValue={selectedApiValue}\r\n                    filterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n                >\r\n                    {\r\n                        options.map((option) => {\r\n                            return <Option value={option.value}>{option.name}</Option>;\r\n                        })}\r\n                </Select>\r\n            </div>\r\n        </div>\r\n\r\n        <div className='overviewContainer__body-body'>    \r\n        {pageVisitsState.isLoading && (\r\n            <>\r\n            <div style={{\r\n                display:'flex',\r\n                justifyContent:'center',\r\n                alignItems:\"center\"\r\n            }}>\r\n            <Spin\r\n            size='large'\r\n             />\r\n                </div>\r\n\r\n            </>\r\n        )}\r\n                {pageVisitsState.done && !(pageVisitsState.data.length > 0) && (\r\n                    <div style={{\r\n                        marginTop: '00px'\r\n                    }}>\r\n                        <Empty description={`No Visits for ${selectedApiValue}`} image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n                    </div>\r\n                )}\r\n\r\n                {pageVisitsState.done && pageVisitsState.data && pageVisitsState.data.length > 0 && (\r\n                    <>\r\n                        <Table\r\n                            style={{\r\n                            }}\r\n                            // expandable={{\r\n                            //     expandedRowRender: record => <p style={{ margin: 0 }}>{record.name}</p>,\r\n                            //     rowExpandable: record => record.name !== 'Not Expandable',\r\n                            //   }}\r\n                            // bordered={true}\r\n                            size='small'\r\n                            // pagination={false}\r\n                            dataSource={pageVisitsState.data}\r\n                            tableLayout={'auto'}\r\n                            onHeaderRow={column => {\r\n                                return {\r\n                                    style: {\r\n                                        color: 'red !important'\r\n                                    }\r\n\r\n                                };\r\n                            }}\r\n                        >\r\n                \r\n\r\n                            <Column\r\n                                title=\"Name\"\r\n                                dataIndex=\"name\"\r\n                                key=\"id\"\r\n                                className='classnameofthecolumn'\r\n                                render={(text, record: any) => (\r\n                                    <>\r\n                                       <a href='##'>\r\n                                       <h4\r\n                                            onClick={() => {\r\n                                                console.log('myRecord',record);\r\n                                                history.push(`/admin/${selectedApiValue && selectedApiValue.toLowerCase()}/${record.itemId}`)\r\n                                            }}  \r\n                                            style={{\r\n                                                fontWeight: 400,\r\n                                                color: '#555',\r\n                                                textTransform:'uppercase',\r\n                                                cursor: 'pointer'\r\n                                            }}>\r\n                                            {text}\r\n                                        </h4>\r\n                                       </a>\r\n                                    </>\r\n                                )}\r\n                            />\r\n\r\n                            <Column\r\n                                title=\"Count\"\r\n                                dataIndex=\"visit\"\r\n                                key=\"id\"\r\n                                className='classnameofthecolumn'\r\n\r\n                            />\r\n\r\n\r\n                        </Table>\r\n                    </>\r\n                )}\r\n\r\n        </div>\r\n        <div className=\"overviewContainer__body-footer\">\r\n            <h3>\r\n                <span>\r\n                    <CalendarOutlined />\r\n                </span>\r\n\r\n                            In the last month\r\n                     </h3>\r\n        </div>\r\n\r\n    </div>\r\n\r\n    )\r\n}\r\n\r\nexport default PageVisits\r\n","import React, { useEffect, useState } from 'react';\r\n\r\n// import components \r\nimport ApiVisits from \"./ApiVisits\";\r\nimport OrderOverView from \"./OrderOverView\";\r\nimport PlatformVisits from \"./PlatformVisits\";\r\nimport PageVisits from \"./PageVisits\";\r\n\r\n// import lib \r\nimport { message, Tooltip, Modal, Tabs, Empty, Badge } from 'antd';\r\n\r\nimport {\r\n\tDeleteOutlined,\r\n\tFileAddOutlined,\r\n\tCheckCircleOutlined,\r\n\tFileImageFilled,\r\n\tFileImageOutlined,\r\n\tFileImageTwoTone,\r\n\tPlusOutlined,\r\n\tPlusCircleOutlined,\r\n\tCloseOutlined,\r\n\tCheckOutlined,\r\n\tInfoCircleOutlined,\r\n\tUserOutlined,\r\n\tCalendarOutlined,\r\n\tGoldOutlined,\r\n\tShoppingCartOutlined,\r\n\tTagOutlined\r\n} from '@ant-design/icons';\r\n\r\n// import hooks\r\nimport { useHandleFetch } from \"../../hooks\";\r\n\r\n\r\ninterface Props { }\r\n\r\nconst Overview = (props: Props) => {\r\n\tconst [analyticsProductVisitCountState, handleAnalyticsProductVisitCountFetch] = useHandleFetch({}, 'getAnalyticsPageVisitCount');\r\n\tconst [analyticsCategoryVisitCountState, handleAnalyticsCategoryVisitCountFetch] = useHandleFetch({}, 'getAnalyticsPageVisitCount');\r\n\tconst [totalUserCountState, handleGetTotalUserCountFetch] = useHandleFetch({}, 'getAnalyticsTotalUserCount');\r\n\r\n\r\n\r\n\tuseEffect(() => {\r\n\r\n\t\tconst getTotalUserCount = async () => {\r\n\t\t\tawait handleGetTotalUserCountFetch({});\r\n\t\t}\r\n\r\n\t\tgetTotalUserCount();\r\n\t}, []);\r\n\r\n\r\n\t\r\n\tuseEffect(()=>{\r\n\t\tconst getProductVisitCount = async () => {\r\n\t\t\tawait handleAnalyticsProductVisitCountFetch({\r\n\t\t\t\tparams: 'product'\r\n\t\t\t})\r\n\t\t}; \r\n\t\tgetProductVisitCount();\r\n\t},[])\r\n\r\n\r\n\r\n\tuseEffect(()=>{\r\n\t\tconst getCategoryVisitCount = async () => {\r\n\t\t\tawait handleAnalyticsCategoryVisitCountFetch({\r\n\t\t\t\tparams: 'category'\r\n\t\t\t})\r\n\t\t}; \r\n\t\tgetCategoryVisitCount();\r\n\t},[])\r\n\r\n\r\n\r\n\r\n\r\n\r\n\treturn (\r\n\t\t<div className='overviewContainer'>\r\n\t\t\t<div className=\"overviewContainer__header\">\r\n\r\n\t\t\t\t{totalUserCountState.done && totalUserCountState.data && (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t<div className=\"overviewContainer__header-card\">\r\n\t\t\t\t\t<div className=\"overviewContainer__header-card-body\">\r\n\t\t\t\t\t\t<div className='overviewContainer__header-card-body-iconbox'>\r\n\t\t\t\t\t\t\t<UserOutlined />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className='overviewContainer__header-card-body-info'>\r\n\t\t\t\t\t\t\t<h3>\r\n\t\t\t\t\t\t\t\t+ Users\r\n\t\t\t\t\t\t\t</h3>\r\n\t\t\t\t\t\t\t<h2>\r\n\t\t\t\t\t\t\t\t{totalUserCountState.data['totalIndex'] || 0}\r\n\t\t\t\t\t\t\t</h2>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"overviewContainer__header-card-footer\">\r\n\t\t\t\t\t\t<h3>\r\n\t\t\t\t\t\t\t<span>\r\n\t\t\t\t\t\t\t\t<CalendarOutlined />\r\n\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\tIn the last month\r\n\t\t\t\t\t     </h3>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t\t</>\r\n\t\t\t\t)}\r\n\r\n\r\n\t\t\t\t{analyticsProductVisitCountState.done && analyticsProductVisitCountState.data && (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t<div className=\"overviewContainer__header-card\">\r\n\t\t\t\t\t<div className=\"overviewContainer__header-card-body\">\r\n\t\t\t\t\t\t<div className='overviewContainer__header-card-body-iconbox'>\r\n\t\t\t\t\t\t\t<UserOutlined />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className='overviewContainer__header-card-body-info'>\r\n\t\t\t\t\t\t\t<h3>\r\n\t\t\t\t\t\t\t\t+ Products\r\n\t\t\t\t\t\t\t</h3>\r\n\t\t\t\t\t\t\t<h2>\r\n\t\t\t\t\t\t\t\t{analyticsProductVisitCountState.data['totalIndex'] || 0}\r\n\t\t\t\t\t\t\t</h2>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"overviewContainer__header-card-footer\">\r\n\t\t\t\t\t\t<h3>\r\n\t\t\t\t\t\t\t<span>\r\n\t\t\t\t\t\t\t\t<CalendarOutlined />\r\n\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\tIn the last month\r\n\t\t\t\t\t     </h3>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t\t</>\r\n\t\t\t\t)}\r\n\r\n\r\n\r\n\r\n\t\t\t\t{analyticsCategoryVisitCountState.done && analyticsCategoryVisitCountState.data && (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t<div className=\"overviewContainer__header-card\">\r\n\t\t\t\t\t<div className=\"overviewContainer__header-card-body\">\r\n\t\t\t\t\t\t<div className='overviewContainer__header-card-body-iconbox'>\r\n\t\t\t\t\t\t\t<UserOutlined />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className='overviewContainer__header-card-body-info'>\r\n\t\t\t\t\t\t\t<h3>\r\n\t\t\t\t\t\t\t\t+ Category\r\n\t\t\t\t\t\t\t</h3>\r\n\t\t\t\t\t\t\t<h2>\r\n\t\t\t\t\t\t\t\t{analyticsCategoryVisitCountState.data['totalIndex'] || 0}\r\n\t\t\t\t\t\t\t</h2>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"overviewContainer__header-card-footer\">\r\n\t\t\t\t\t\t<h3>\r\n\t\t\t\t\t\t\t<span>\r\n\t\t\t\t\t\t\t\t<CalendarOutlined />\r\n\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\tIn the last month\r\n\t\t\t\t\t     </h3>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t\t</>\r\n\t\t\t\t)}\r\n\r\n\r\n\r\n\t\t\t\t<div className=\"overviewContainer__header-card\">\r\n\t\t\t\t\t<div className=\"overviewContainer__header-card-body\">\r\n\t\t\t\t\t\t<div className='overviewContainer__header-card-body-iconbox'>\r\n\t\t\t\t\t\t\t<ShoppingCartOutlined />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className='overviewContainer__header-card-body-info'>\r\n\t\t\t\t\t\t\t<h3>\r\n\t\t\t\t\t\t\t\t+ Orders\r\n\t\t\t\t\t\t\t</h3>\r\n\t\t\t\t\t\t\t<h2>\r\n\t\t\t\t\t\t\t\t8503\r\n\t\t\t\t\t\t\t</h2>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"overviewContainer__header-card-footer\">\r\n\t\t\t\t\t\t<h3>\r\n\t\t\t\t\t\t\t<span>\r\n\t\t\t\t\t\t\t\t<CalendarOutlined />\r\n\t\t\t\t\t\t\t</span>\r\n\r\n\t\t\t\t\t\t\t\tIn the last month\r\n\t\t\t\t\t     </h3>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\r\n\r\n\t\t\t</div>\r\n\r\n\r\n\t\t\t<div className=\"overviewContainer__body\">\r\n\t\t\t\t<PageVisits />\r\n\t\t\t\t<PlatformVisits />\r\n\t\t\t</div>\r\n\t\t\t<div className=\"overviewContainer__body\">\r\n\t\t\t</div>\r\n\t\t\t<OrderOverView />\r\n\t\t\t<ApiVisits />\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Overview;\r\n","import React from 'react';\r\nimport ContentLoader from 'react-content-loader';\r\n\r\nconst DataTable = (props: any) => (\r\n\t<ContentLoader\r\n\t\tspeed={0.5}\r\n\t\twidth={1300}\r\n\t\theight={400}\r\n\t\tviewBox='0 0 1300 400'\r\n\t\tbackgroundColor='#f3f3f3'\r\n\t\tforegroundColor='#ecebeb'\r\n\t\t{...props}\r\n\t>\r\n\t\t<rect x='27' y='139' rx='4' ry='4' width='20' height='20' />\r\n\t\t<rect x='67' y='140' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='188' y='141' rx='10' ry='10' width='169' height='19' />\r\n\t\t<rect x='402' y='140' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='523' y='141' rx='10' ry='10' width='169' height='19' />\r\n\t\t<rect x='731' y='139' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='852' y='138' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='1424' y='137' rx='10' ry='10' width='68' height='19' />\r\n\t\t<rect x='26' y='196' rx='4' ry='4' width='20' height='20' />\r\n\t\t<rect x='66' y='197' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='187' y='198' rx='10' ry='10' width='169' height='19' />\r\n\t\t<rect x='401' y='197' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='522' y='198' rx='10' ry='10' width='169' height='19' />\r\n\t\t<rect x='730' y='196' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='851' y='195' rx='10' ry='10' width='85' height='19' />\r\n\t\t<circle cx='1456' cy='203' r='12' />\r\n\t\t<rect x='26' y='258' rx='4' ry='4' width='20' height='20' />\r\n\t\t<rect x='66' y='259' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='187' y='260' rx='10' ry='10' width='169' height='19' />\r\n\t\t<rect x='401' y='259' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='522' y='260' rx='10' ry='10' width='169' height='19' />\r\n\t\t<rect x='730' y='258' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='851' y='257' rx='10' ry='10' width='85' height='19' />\r\n\t\t<circle cx='1456' cy='265' r='12' />\r\n\t\t<rect x='26' y='316' rx='4' ry='4' width='20' height='20' />\r\n\t\t<rect x='66' y='317' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='187' y='318' rx='10' ry='10' width='169' height='19' />\r\n\t\t<rect x='401' y='317' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='522' y='318' rx='10' ry='10' width='169' height='19' />\r\n\t\t<rect x='730' y='316' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='851' y='315' rx='10' ry='10' width='85' height='19' />\r\n\t\t<circle cx='1456' cy='323' r='12' />\r\n\t\t<rect x='26' y='379' rx='4' ry='4' width='20' height='20' />\r\n\t\t<rect x='66' y='380' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='187' y='381' rx='10' ry='10' width='169' height='19' />\r\n\t\t<rect x='401' y='380' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='522' y='381' rx='10' ry='10' width='169' height='19' />\r\n\t\t<rect x='730' y='379' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='851' y='378' rx='10' ry='10' width='85' height='19' />\r\n\t\t<circle cx='1456' cy='386' r='12' />\r\n\t\t<rect x='978' y='138' rx='10' ry='10' width='169' height='19' />\r\n\t\t<rect x='977' y='195' rx='10' ry='10' width='169' height='19' />\r\n\t\t<rect x='977' y='257' rx='10' ry='10' width='169' height='19' />\r\n\t\t<rect x='977' y='315' rx='10' ry='10' width='169' height='19' />\r\n\t\t<rect x='977' y='378' rx='10' ry='10' width='169' height='19' />\r\n\t\t<rect x='1183' y='139' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='1182' y='196' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='1182' y='258' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='1182' y='316' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='1182' y='379' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='1305' y='137' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='1304' y='194' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='1304' y='256' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='1304' y='314' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='1304' y='377' rx='10' ry='10' width='85' height='19' />\r\n\t\t<circle cx='37' cy='97' r='11' />\r\n\t\t<rect x='26' y='23' rx='5' ry='5' width='153' height='30' />\r\n\t\t<circle cx='1316' cy='88' r='11' />\r\n\t\t<rect x='1337' y='94' rx='0' ry='0' width='134' height='3' />\r\n\t\t<circle cx='77' cy='96' r='11' />\r\n\t</ContentLoader>\r\n);\r\n\r\nDataTable.metadata = {\r\n\tname: 'Mohd Arif Un',\r\n\tgithub: 'arif-un',\r\n\tdescription: 'Data Table skeleton',\r\n\tfilename: 'DataTable'\r\n};\r\n\r\nexport default DataTable;\r\n","import React, {useState, useEffect} from 'react';\r\nimport {withRouter} from 'react-router-dom';\r\nimport { Table, notification,  Space, Tag,Button, Input,Tooltip, Popconfirm  } from 'antd';\r\nimport { PlusOutlined, EditOutlined, DeleteOutlined,CheckCircleOutlined } from '@ant-design/icons';\r\n\r\nimport {AddNewCategory,QuickEdit} from \"../category\"\r\n\r\n/// import hooks\r\nimport { useFetch, useHandleFetch } from \"../../hooks\";\r\n\r\n// import components\r\nimport { DataTableSkeleton } from \"../../components/Placeholders\";\r\nimport Empty from \"../../components/Empty\";\r\n\r\nconst { Column, ColumnGroup } = Table;\r\nconst { Search } = Input;\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t  message: message || 'Tag Created',\r\n\t  description: '',\r\n\t  icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n  };\r\n\r\n\r\n  const openErrorNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t  message: message || 'Something Went Wrong',\r\n\t  description: '',\r\n\t  icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n  };\r\n\r\n\r\n\r\n\r\n\r\ninterface myTableProps {\r\n  data: any; \r\n  setcategoryList?:any; \r\n  history?: any; \r\n} \r\n\r\n\r\nconst MyTable = ({data, setcategoryList, history}: myTableProps) => {\r\n    const [visible,setvisible] = useState(false);   \r\n    const [activeCategoryForEdit,setactiveCategoryForEdit] = useState(false); \r\n    const [deleteCategoryState, handleDeleteCategoryFetch] = useHandleFetch({}, 'deleteCategory');\r\n      // console.log('activeCategoryForEdit',activeCategoryForEdit); \r\n\r\n\r\n      const handleDeleteCategory = async (id) => {\r\n        const deleteCategoryRes = await handleDeleteCategoryFetch({\r\n          urlOptions: {\r\n            placeHolders: {\r\n              id,\r\n            }\r\n            }\r\n          });\r\n\r\n          \t  // @ts-ignore\r\n\t\t  if(deleteCategoryRes && deleteCategoryRes.status === 'ok'){\r\n\t\t\t  openSuccessNotification('Deleted Category'); \r\n\t\t\t  const newCategoryList =  data.filter(item => item.id !== id);\r\n\t\t\t  setcategoryList(newCategoryList); \r\n\t\t  }\r\n      }\r\n      \r\n\r\n    return (\r\n        <>\r\n        <Table \r\n        // expandable={{\r\n        //     expandedRowRender: record => <p style={{ margin: 0 }}>{record.name}</p>,\r\n        //     rowExpandable: record => record.name !== 'Not Expandable',\r\n        //   }}\r\n        // bordered={true}\r\n        size='small'\r\n        // pagination={false}\r\n        dataSource={data}\r\n        >\r\n            <Column \r\n          title=\"\"\r\n           dataIndex=\"cover\"\r\n            key=\"id\" \r\n            width={'80px'}\r\n            \r\n           className='classnameofthecolumn'\r\n\r\n            render={(cover,record: any) => (\r\n                <>\r\n                <img src={cover} \r\n                   onClick={() => {\r\n                    history.push(`/admin/category/${record.id}`)\r\n                    // setcategoryDetailVisible(true);\r\n                    setactiveCategoryForEdit(record)\r\n                  }}\r\n                alt='cover img' \r\n                style={{\r\n                    height: '40px',\r\n                    width: '40px',\r\n                    objectFit: \"contain\",\r\n                    borderRadius:'3px',\r\n                  cursor: 'pointer'\r\n\r\n                }} />\r\n                </>\r\n              )}\r\n            />\r\n          <Column\r\n           title=\"Name\" \r\n           dataIndex=\"name\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n           render={(text, record: any) => (\r\n            <>\r\n\r\n              <h4\r\n                onClick={() => {\r\n                  history.push(`/admin/category/${record.id}`)\r\n                  // setcategoryDetailVisible(true);\r\n                  setactiveCategoryForEdit(record)\r\n                }}\r\n                style={{\r\n                  fontWeight: 400,\r\n                  color: '#555',\r\n                  cursor: 'pointer'\r\n\r\n                }}>\r\n                {text}\r\n              </h4>\r\n\r\n\r\n            </>\r\n          )}\r\n            />\r\n\r\n\r\n<Column\r\n           title=\"Description\" \r\n           dataIndex=\"description\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n         \r\n            />\r\n\r\n\r\n         <Column\r\n           title=\"Sub Cateogory\" \r\n           dataIndex=\"subCount\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n         \r\n            />\r\n\r\n<Column\r\n           title=\"Product\" \r\n           dataIndex=\"productCount\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n         \r\n            />\r\n\r\n\r\n\r\n          {/* <Column \r\n          \r\n          className='classnameofthecolumn'\r\n\r\n          title=\"Product\" dataIndex=\"product\" key=\"product\" /> */}\r\n\r\n          {/* <Column \r\n          \r\n          className='classnameofthecolumn'\r\n\r\n          title=\"Sub Category\" dataIndex=\"subCategory\" key=\"subCategory\" /> */}\r\n        \r\n        {/* <Column\r\n          title=\"Tags\"\r\n          dataIndex=\"tags\"\r\n          key=\"tags\"\r\n          render={tags => (\r\n            <>\r\n              {tags.map((tag : any) => (\r\n                <Tag color=\"blue\" key={tag}>\r\n                  {tag}\r\n                </Tag>\r\n              ))}\r\n            </>\r\n          )}\r\n        /> */}\r\n        <Column\r\n        \r\n        className='classnameofthecolumn'\r\n          title=\"\"\r\n          key=\"action\"\r\n          align='right'\r\n          render={(text, record : any) => (\r\n            <Space size=\"middle\">\r\n              <a href='##'>\r\n               <Tooltip placement=\"top\" title='Quick Edit Category'>\r\n              <span className='iconSize' onClick={() => {\r\n                setvisible(true)\r\n                setactiveCategoryForEdit(record); \r\n              }}> \r\n              <EditOutlined />\r\n            \r\n              </span>\r\n               </Tooltip>\r\n               </a>\r\n\r\n\r\n               <Popconfirm \r\n               \r\n               onConfirm={() => handleDeleteCategory(record.id)}\r\n               title=\"Are you sure？\" okText=\"Yes\" cancelText=\"No\">\r\n           \r\n\t\t   <span \r\n             className='iconSize iconSize-danger'\r\n             > \r\n             <DeleteOutlined/>\r\n            </span>\r\n       \r\n           </Popconfirm>\r\n\r\n\r\n       \r\n             \r\n            </Space>\r\n          )}\r\n        />\r\n      </Table>\r\n\r\n    \r\n\r\n    {activeCategoryForEdit &&   <QuickEdit \r\n    setcategoryList={setcategoryList}\r\n    categoryList={data}\r\n    setvisible={setvisible}\r\n    visible={visible}\r\n    category={activeCategoryForEdit}/>}\r\n    \r\n    </>\r\n    )\r\n}\r\n\r\n\r\ninterface Props {\r\n    history: any; \r\n}\r\n\r\nconst CategoryList = ({history}: Props) => {\r\n\r\n\r\n  \r\n\r\n  const [categoryState, handleCategoryListFetch] = useHandleFetch({}, 'categoryList');\r\n  const [categoryList,setcategoryList] = useState([]); \r\n\r\n  useEffect(()=>{\r\n   const setCategories = async () => {\r\n     const categories = await handleCategoryListFetch({\r\n      urlOptions: {\r\n        params: {\r\n          isSubCategory: true,\r\n          productCountValue: true \r\n        },\r\n      },\r\n     }); \r\n     // @ts-ignore\r\n     setcategoryList(categories); \r\n   }\r\n   setCategories(); \r\n  },[])\r\n\r\n\r\n  \r\n  const [addNewCategoryVisible,setAddNewCategoryVisible] = useState(false);   \r\n\r\n  const handleOkAddNewCategory = (e: any) => {\r\n    setAddNewCategoryVisible(false);\r\n  };\r\n\r\n  const handleCancelAddNewCategory = (e: any) => {\r\n    setAddNewCategoryVisible(false);\r\n  };\r\n\r\n  // console.log('categoryState',categoryState); \r\n\r\n  \r\n\r\n  const handleSearch = (value) => {\r\n    if(categoryState.data.length > 0 ){\r\n      const newCategoryList = categoryState.data.filter(item => item.name.toLowerCase().includes(value.toLowerCase())); \r\n      setcategoryList(newCategoryList); \r\n    }\r\n     \r\n  }\r\n\r\n\r\n\r\n\treturn (\r\n\t\t<>\r\n    {/* <h2 className='containerPageTitle'>\r\n      Categories\r\n    </h2> */}\r\n    <div className='categoryListContainer'>\r\n            <div className='categoryListContainer__header'>\r\n           \r\n\r\n          <div className='categoryListContainer__header-searchBar'>\r\n          <h2 className='categoryListContainer__header-title'>\r\n            Categories\r\n            </h2>\r\n\r\n\r\n          <Search\r\n            enterButton={false}\r\n            className='searchbarClassName'\r\n          placeholder=\"search categories..\"\r\n          onSearch={value => handleSearch(value)}\r\n        />\r\n          </div>\r\n            <Button\r\n          // type=\"primary\"\r\n          className='btnPrimaryClassNameoutline'\r\n          icon={<PlusOutlined />}\r\n          onClick={() => setAddNewCategoryVisible(true)}\r\n        >\r\n        Add New\r\n            \r\n            </Button>\r\n            </div>\r\n\r\n            <div className='categoryListContainer__afterHeader'>\r\n            {/* <Search\r\n      placeholder=\"search categories..\"\r\n      size=\"large\"\r\n      onSearch={value => console.log(value)}\r\n      style={{ width: 300 }}\r\n    /> */}\r\n            </div>\r\n\r\n     \r\n\t\t\t\r\n\t\t\t<div className='categoryListContainer__categoryList'>\r\n        {categoryState.done && categoryList.length > 0 && <MyTable \r\n        history={history}\r\n        setcategoryList={setcategoryList}\r\n        data={categoryList} />}\r\n        {categoryState.isLoading && <DataTableSkeleton />}\r\n\r\n        {categoryState.done && !(categoryList.length > 0) && (\r\n\t\t\t<div style={{\r\n\t\t\t\tmarginTop: '50px'\r\n\t\t\t}}>\r\n\t\t\t\t<Empty title='No Category found'   />\r\n\t\t\t</div>\r\n\t\t)}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\r\n\r\n{categoryState.done && \r\n    <AddNewCategory \r\n          addNewCategoryVisible={addNewCategoryVisible} \r\n          setAddNewCategoryVisible={setAddNewCategoryVisible}\r\n          categoryList={categoryList}\r\n          setcategoryList={setcategoryList}\r\n          \r\n           />}\r\n\r\n      \r\n\r\n        \r\n    </>\r\n\t);\r\n};\r\n\r\nexport default withRouter(CategoryList);\r\n","import React from 'react';\r\nimport { Form, Input } from 'antd';\r\n\r\nconst { TextArea } = Input;\r\n\r\n\r\n\r\ninterface Props {\r\n    label?: string;\r\n    type?: string;\r\n    defaultValue?: string;\r\n    value?: string;\r\n    onChange?: any;\r\n    disabled?: boolean;\r\n    isError?: boolean;\r\n    errorString?: string;\r\n    name?: string;\r\n    rows?: number\r\n    placeholder?:any; \r\n}\r\n\r\nconst Demo = ({ label, type, defaultValue, value, \r\n    onChange, disabled, isError,\r\n     errorString, name, rows = 4,\r\n     placeholder\r\n     }: Props) => {\r\n    return (\r\n        <>\r\n            {label && (\r\n                <h3 className='inputFieldLabel'>\r\n                    {label}\r\n                </h3>\r\n            )}\r\n\r\n            <Form.Item\r\n                validateStatus={isError ? \"error\" : \"\"}\r\n                help={errorString}\r\n            // rules={[{ required: true }]}\r\n            >\r\n                <TextArea\r\n                    disabled={disabled}\r\n                    onChange={onChange}\r\n                    value={value}\r\n                    name={name}\r\n                    className='inputclassName'\r\n                    rows={rows} \r\n                    placeholder={placeholder}\r\n                    />\r\n\r\n            </Form.Item>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Demo; ","import React, { useState, useEffect } from 'react';\r\n\r\n\r\n\r\n\r\n// import libraries\r\nimport { Upload, Button, Modal, Tabs, message, notification, Popconfirm, Menu, Dropdown, } from 'antd';\r\nimport reqwest from 'reqwest';\r\nimport { Formik } from 'formik';\r\nimport Moment from 'react-moment';\r\n// import * as Yup from 'yup';\r\n\r\n\r\nimport {\r\n\tCheckOutlined,\r\n\tArrowUpOutlined,\r\n\tCheckCircleOutlined,\r\n\tEllipsisOutlined,\r\n\tFileImageOutlined,\r\n\tDeleteOutlined,\r\n\tCloseOutlined\r\n\r\n} from '@ant-design/icons';\r\n\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport Empty from '../../components/Empty';\r\n\r\n// import hooks\r\nimport { useHandleFetch } from \"../../hooks\";\r\n\r\n// import configs\r\nimport config from \"../../config.json\";\r\n\r\nconst { Dragger } = Upload;\r\nconst { TabPane } = Tabs;\r\n\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t\tmessage: message || 'Category Updated',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t\tmessage: message || 'Something Went Wrong',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n};\r\n\r\n\r\n\r\ninterface Props {\r\n\tvisible: boolean;\r\n\tsetvisible: (isVisible: any) => void;\r\n\tsetmyImages?: any;\r\n\tsetmyThumbnailImage?: any;\r\n\tisModalOpenForThumbnail?: boolean;\r\n\tisModalOpenForImages?: boolean;\r\n\tmyImages?: any;\r\n\tmyThumbnailImage?: any;\r\n\tsetMyGoddamnImages?: any;\r\n\tmyGoddamnImages?: any;\r\n}\r\n\r\n\r\nconst MediaLibrary = ({\r\n\tvisible,\r\n\tsetvisible,\r\n\tsetmyImages,\r\n\tisModalOpenForImages,\r\n\tisModalOpenForThumbnail,\r\n\tsetmyThumbnailImage,\r\n\tmyImages,\r\n\tmyThumbnailImage,\r\n\t...rest\r\n}: Props) => {\r\n\r\n\tconst [fileList, setfileList] = useState([]);\r\n\tconst [uploading, setuploading] = useState(false);\r\n\tconst [selectedimages, setselectedImages] = useState([]);\r\n\tconst [activeImageItem, setactiveImageItem] = useState(false);\r\n\tconst [updateMediaLibrary, handleUpdateMediaLibraryFetch] = useHandleFetch({}, 'updateImageFromLibrary');\r\n\tconst [imageListFromLibraryState, handleImageListFromLibraryFetch] = useHandleFetch({}, 'ImageListFromLibrary');\r\n\tconst [deleteImageFromLibraryFetchState, handleDeleteImageFromLibraryFetch] = useHandleFetch({}, 'deleteImageFromLibrary');\r\n\tconst [localImageList, setLocalImageList] = useState([]);\r\n\tconst [isDoneOk, setisDoneOk] = useState(false);\r\n\r\n\r\n\tconst handleDeleteImageFromImageLibrary = async (id) => {\r\n\r\n\t\tconst deleteImageLibraryItemRes = await handleDeleteImageFromLibraryFetch({\r\n\t\t\turlOptions: {\r\n\t\t\t\tplaceHolders: {\r\n\t\t\t\t\tid,\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\r\n\t\t// @ts-ignore\r\n\t\tif (deleteImageLibraryItemRes && deleteImageLibraryItemRes.status === 'ok') {\r\n\t\t\topenSuccessNotification('Imaged Deleted');\r\n\t\t\tconst newImageList = localImageList.filter(item => item.id !== id);\r\n\t\t\tsetLocalImageList(newImageList);\r\n\t\t}\r\n\t};\r\n\r\n\r\n\tconst getImageList = async () => {\r\n\t\tconst imageListRes = await handleImageListFromLibraryFetch({});\r\n\r\n\r\n\t\t// @ts-ignore\r\n\t\tif (imageListRes) {\r\n\t\t\t// @ts-ignore\r\n\t\t\tsetLocalImageList(imageListRes);\r\n\t\t}\r\n\r\n\t\t// console.log('imageListRes', imageListRes);\r\n\t}\r\n\r\n\r\n\r\n\tuseEffect(() => {\r\n\r\n\t\tgetImageList();\r\n\t}, [])\r\n\r\n\r\n\r\n\r\n\tconst handleUpload = async () => {\r\n\t\tconst formData = new FormData();\r\n\t\tfileList.forEach(file => {\r\n\t\t\tformData.append('images', file, file.name);\r\n\t\t});\r\n\r\n\t\tsetuploading(true);\r\n\r\n\t\t//  const addImageToLibraryRes = awAddait handleMediaLibraryFetch({\r\n\t\t// \tbody: formData\r\n\t\t//   });\r\n\r\n\t\t//   console.log('addImageToLibraryRes',addImageToLibraryRes)\r\n\r\n\r\n\r\n\t\t// You can use any AJAX library you like\r\n\t\treqwest({\r\n\t\t\turl: `${config.baseURL}/admin/api/image/add`,\r\n\t\t\tmethod: 'post',\r\n\t\t\tprocessData: false,\r\n\t\t\tdata: formData,\r\n\t\t\twithCredentials: true,\r\n\t\t\tsuccess: () => {\r\n\t\t\t\tsetfileList([]);\r\n\t\t\t\tsetuploading(false);\r\n\t\t\t\tgetImageList();\r\n\t\t\t\tmessage.success('upload successfully.');\r\n\t\t\t},\r\n\t\t\terror: () => {\r\n\t\t\t\tsetuploading(false);\r\n\t\t\t\tmessage.error('upload failed.');\r\n\t\t\t},\r\n\t\t});\r\n\t};\r\n\r\n\r\n\r\n\tconst handleOk = (e: any) => {\r\n\r\n\t\tif (isModalOpenForImages) {\r\n\t\t\tsetmyImages(selectedimages);\r\n\t\t\tsetisDoneOk(true);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tsetmyThumbnailImage(selectedimages);\r\n\t\t\tsetisDoneOk(true);\r\n\t\t}\r\n\t\tsetvisible(false);\r\n\r\n\t};\r\n\r\n\tconst handleCancel = (e: any) => {\r\n\t\tsetvisible(false);\r\n\t};\r\n\r\n\r\n\tuseEffect(() => {\r\n\t\tif (myImages && myImages.length > 0)\r\n\t\t\tsetselectedImages([...myImages]);\r\n\t}, [myImages])\r\n\r\n\r\n\tuseEffect(() => {\r\n\t\tif (isDoneOk && isModalOpenForImages && myImages) {\r\n\t\t\tsetselectedImages([...myImages]);\r\n\t\t}\r\n\t}, [myImages, isDoneOk]);\r\n\r\n\r\n\r\n\tuseEffect(() => {\r\n\t\tif (isDoneOk) {\r\n\t\t\t// console.log('myThumbnail', myThumbnailImage)\r\n\t\t\t// setselectedImages([...myThumbnailImage]);\r\n\t\t}\r\n\t}, [myThumbnailImage, isDoneOk])\r\n\r\n\tconst uploadProps = {\r\n\t\t//  listType: 'picture',\r\n\t\tmultiple: true,\r\n\t\tonRemove: file => {\r\n\t\t\tsetfileList(filelist => {\r\n\t\t\t\tconst index = fileList.indexOf(file);\r\n\t\t\t\tconst newFileList = fileList.slice();\r\n\t\t\t\tnewFileList.splice(index, 1);\r\n\t\t\t\treturn newFileList;\r\n\t\t\t})\r\n\r\n\t\t},\r\n\t\tbeforeUpload: file => {\r\n\t\t\tsetfileList(filelist => {\r\n\t\t\t\treturn [...fileList, file]\r\n\t\t\t})\r\n\t\t\treturn false;\r\n\t\t},\r\n\t\tfileList,\r\n\t};\r\n\r\n\r\n\r\n\r\n\tconst handleAddToSelectedList = (image, id) => {\r\n\r\n\t\tif (selectedimages && selectedimages.length > 0) {\r\n\t\t\tconst isImageExist = selectedimages.find(image => image.id === id);\r\n\t\t\tif (!isImageExist) {\r\n\t\t\t\tsetselectedImages([...selectedimages, image]);\r\n\t\t\t\tsetactiveImageItem(image);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tconst newselectedImages = selectedimages.filter(image => image.id !== id);\r\n\t\t\t\tsetselectedImages(newselectedImages);\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\tsetselectedImages([...selectedimages, image]);\r\n\t\t\tsetactiveImageItem(image);\r\n\t\t}\r\n\r\n\t}\r\n\r\n\r\n\tconst getisSelectedImage = (id) => {\r\n\t\tif (selectedimages && selectedimages.length > 0) {\r\n\t\t\tconst isImageExist = selectedimages.find(image => image.id === id);\r\n\t\t\tif (isImageExist) {\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t};\r\n\r\n\r\n\tconst handleUpdateSubmit = async (values, actions) => {\r\n\t\tconst updateImageLibraryItemRes = await handleUpdateMediaLibraryFetch({\r\n\t\t\tbody: {\r\n\t\t\t\tid: values.id,\r\n\t\t\t\talt: values.alt,\r\n\t\t\t\ttitle: values.title,\r\n\t\t\t\tcaptoin: values.captoin,\r\n\t\t\t\tlabels: values.labels,\r\n\r\n\t\t\t},\r\n\t\t});\r\n\r\n\r\n\t\t// @ts-ignore\r\n\t\tif (updateImageLibraryItemRes && updateImageLibraryItemRes.status === 'ok') {\r\n\t\t\topenSuccessNotification('Image Updated');\r\n\r\n\t\t\tconst positionInImageList = () => {\r\n\t\t\t\treturn localImageList.map(item => item.id).indexOf(values.id);\r\n\t\t\t}\r\n\r\n\t\t\tconst index = positionInImageList();\r\n\r\n\t\t\t// @ts-ignore\r\n\t\t\tconst updatedItem = Object.assign({}, localImageList[index], { ...updateImageLibraryItemRes });\r\n\t\t\tconst updateImageList = [...localImageList.slice(0, index), updatedItem, ...localImageList.slice(index + 1)];\r\n\t\t\tsetLocalImageList(updateImageList);\r\n\r\n\t\t}\r\n\t\telse {\r\n\t\t\topenErrorNotification();\r\n\t\t}\r\n\r\n\r\n\r\n\t\tactions.setSubmitting(false);\r\n\t}\r\n\r\n\r\n\tconst getisUpdateSubmitButtonDisabled = (values, isValid) => {\r\n\t\t// if(!values.alt || !values.title || !values.title || !values.caption || !isValid){\r\n\t\t// \treturn true; \r\n\t\t// }\r\n\t\tif (!isValid) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\t// console.log('selectedimages', selectedimages)\r\n\r\n\tconst ImageItemMenu = (handleDeleteImageFromImageLibrary, id, handleAddToSelectedList, image) => {\r\n\t\treturn (\r\n\t\t\t(\r\n\t\t\t\t<Menu>\r\n\t\t\t\t\t<Menu.Item\r\n\t\t\t\t\t\tonClick={() => handleAddToSelectedList(image, id)}\r\n\t\t\t\t\t\tkey=\"1\" icon={<CheckOutlined />}>\r\n\t\t\t\t\t\tSelect\r\n\r\n\t\t\t\t\t</Menu.Item>\r\n\r\n\r\n\r\n\t\t\t\t\t<Menu.Item\r\n\t\t\t\t\t\tonClick={() => handleDeleteImageFromImageLibrary(id)}\r\n\t\t\t\t\t\tkey=\"1\" icon={<DeleteOutlined color='red' />}>\r\n\t\t\t\t\t\tDelete\r\n\t\t\t\t\t</Menu.Item>\r\n\t\t\t\t</Menu >\r\n\t\t\t)\r\n\t\t)\r\n\t};\r\n\r\n\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Modal\r\n\t\t\t\tstyle={{\r\n\t\t\t\t\ttop: '40px'\r\n\t\t\t\t}}\r\n\t\t\t\ttitle=\"Media Library\"\r\n\t\t\t\tvisible={visible}\r\n\t\t\t\tonOk={handleOk}\r\n\t\t\t\tonCancel={handleCancel}\r\n\t\t\t\twidth={'80vw'}\r\n\t\t\t\tbodyStyle={{\r\n\t\t\t\t\tmargin: '0',\r\n\t\t\t\t\tpadding: '0'\r\n\t\t\t\t}}\r\n\t\t\t\tokText='Done'\r\n\t\t\t>\r\n\t\t\t\t<div className='mediaLibraryBodyContainer'>\r\n\t\t\t\t\t<div className='mediaLibraryBodyContainer-left'>\r\n\r\n\t\t\t\t\t\t<Tabs defaultActiveKey=\"2\" type=\"card\" size='middle'>\r\n\t\t\t\t\t\t\t<TabPane tab=\"Upload New Media\" key=\"1\">\r\n\t\t\t\t\t\t\t\t<div className='mediaLibraryBodyContainer-left-header'>\r\n\r\n\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t<Dragger\r\n\t\t\t\t\t\t\t\t\t\t\tclassName='upload-list-inline'\r\n\t\t\t\t\t\t\t\t\t\t\tlistType='picture'\r\n\t\t\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\t\t\tbackground: '#fff',\r\n\t\t\t\t\t\t\t\t\t\t\t\tborderRadius: '8px'\r\n\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t{...uploadProps}\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t<p className='ant-upload-drag-icon'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<FileImageOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t\t\t\t\t<p className='ant-upload-text'>Click or drag file to this area to upload</p>\r\n\t\t\t\t\t\t\t\t\t\t\t<p className='ant-upload-hint'>\r\n\t\t\t\t\t\t\t\t\t\t\t\tSupport for a single or bulk upload.\r\n\t\t\t\t\t\t                \t</p>\r\n\t\t\t\t\t\t\t\t\t\t</Dragger>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\tclassName='btnPrimaryClassNameoutline'\r\n\t\t\t\t\t\t\t\t\ttype='primary'\r\n\t\t\t\t\t\t\t\t\tonClick={handleUpload}\r\n\t\t\t\t\t\t\t\t\tdisabled={fileList.length === 0}\r\n\t\t\t\t\t\t\t\t\tloading={uploading}\r\n\t\t\t\t\t\t\t\t\ticon={<ArrowUpOutlined />}\r\n\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\tmarginTop: '20px',\r\n\t\t\t\t\t\t\t\t\t\tmarginBottom: '10px'\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\tUpload\r\n\t\t\t\t\t</Button>\r\n\r\n\t\t\t\t\t\t\t</TabPane>\r\n\t\t\t\t\t\t\t<TabPane tab=\"Media Library\" key=\"2\">\r\n\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t{myImages && myImages.lenght > 0 && (\r\n\t\t\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\t\t\t\t\t\tSelected Items\r\n                               </h3>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='mediaLibraryBodyContainer-selectedImages'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t{imageListFromLibraryState.done\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t&& myImages.length > 0\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t&& myImages.map(image => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tkey={image.id}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='mediaLibraryBodyContainer-selectedImages-imageListContainer-item'>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleAddToSelectedList(image, image.id)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='mediaLibraryBodyContainer-selectedImages-imageListContainer-item-menu'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<CloseOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className='mediaLibraryBodyContainer-selectedImages-imgContainer'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<img src={image.cover} alt='img' />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t})}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t</>\r\n\r\n\t\t\t\t\t\t\t\t<div className='mediaLibraryBodyContainer-left-imageListContainer'>\r\n\r\n\t\t\t\t\t\t\t\t\t{imageListFromLibraryState.done\r\n\t\t\t\t\t\t\t\t\t\t&& localImageList.length > 0\r\n\t\t\t\t\t\t\t\t\t\t&& localImageList.map(image => {\r\n\t\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tkey={image.id}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='mediaLibraryBodyContainer-left-imageListContainer-item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t{getisSelectedImage(image.id) ? <div className='mediaLibraryBodyContainer-left-imageListContainer-item-icon'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<CheckOutlined\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div> : ''}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Dropdown overlay={() => ImageItemMenu(handleDeleteImageFromImageLibrary, image.id, handleAddToSelectedList, image)} placement=\"bottomRight\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className='mediaLibraryBodyContainer-left-imageListContainer-item-menu'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<EllipsisOutlined\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Dropdown>\r\n\r\n\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<img onClick={() => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleAddToSelectedList(image, image.id)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}} src={image.cover} alt='img' />\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t\t})}\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t{imageListFromLibraryState.done && !(localImageList.length > 0) && (\r\n\t\t\t\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\t\t\t\tdisplay: 'flex',\r\n\t\t\t\t\t\t\t\t\t\t\tjustifyContent: 'center',\r\n\t\t\t\t\t\t\t\t\t\t\twidth: '100%'\r\n\t\t\t\t\t\t\t\t\t\t}}>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<Empty title='No Image Found in the library' />\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t)}\r\n\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</TabPane>\r\n\r\n\t\t\t\t\t\t</Tabs>\r\n\r\n\r\n\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className='mediaLibraryBodyContainer-right'>\r\n\r\n\t\t\t\t\t\t{activeImageItem && (\r\n\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t<Formik\r\n\t\t\t\t\t\t\t\t\tonSubmit={(values, actions) => handleUpdateSubmit(values, actions)}\r\n\t\t\t\t\t\t\t\t\tvalidateOnBlur={false}\r\n\t\t\t\t\t\t\t\t\tenableReinitialize={true}\r\n\t\t\t\t\t\t\t\t\tinitialValues={\r\n\t\t\t\t\t\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\t\t\t\t\t\t{ ...activeImageItem }\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t{({\r\n\t\t\t\t\t\t\t\t\t\thandleChange,\r\n\t\t\t\t\t\t\t\t\t\tvalues,\r\n\t\t\t\t\t\t\t\t\t\thandleSubmit,\r\n\t\t\t\t\t\t\t\t\t\terrors,\r\n\t\t\t\t\t\t\t\t\t\tisValid,\r\n\t\t\t\t\t\t\t\t\t\tisSubmitting,\r\n\t\t\t\t\t\t\t\t\t\ttouched,\r\n\t\t\t\t\t\t\t\t\t\thandleBlur,\r\n\t\t\t\t\t\t\t\t\t\tsetFieldTouched,\r\n\t\t\t\t\t\t\t\t\t\thandleReset,\r\n\t\t\t\t\t\t\t\t\t}) => (\r\n\t\t\t\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<h4>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tAttachment Details\r\n\t\t\t\t\t\t\t</h4>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div className='mediaLibraryBodyContainer-right-ImageDetails'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div className='mediaLibraryBodyContainer-right-ImageDetails-imageContainer'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<img src={activeImageItem['cover']} alt='img' />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div className='mediaLibraryBodyContainer-right-ImageDetails-infoContainer'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<h5 className='imageLibnameText'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{activeImageItem['name']}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</h5>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<h5>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Moment>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{activeImageItem['added']}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Moment>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</h5>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* <h5>\r\n\t\t\t\t\t\t\t\t\t\t5000 X 500\r\n\t\t\t\t\t\t\t\t\t</h5> */}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Popconfirm\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonConfirm={() => handleDeleteImageFromImageLibrary(activeImageItem['id'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttitle=\"Are you sure？\" okText=\"Yes\" cancelText=\"No\">\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<h5\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='imageLibdeleteText'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tDelete parmanently\r\n\t\t\t\t\t\t\t\t\t                       </h5>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Popconfirm>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tlabel='Alternate Text'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.alt}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tname='alt'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.alt && errors.alt) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateMediaLibrary.error['error']['alt'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.alt && errors.alt) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateMediaLibrary.error['error']['alt'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('alt');\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tlabel='Title'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.title}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tname='title'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.title && errors.title) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateMediaLibrary.error['error']['title'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.title && errors.title) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateMediaLibrary.error['error']['title'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('title');\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tlabel='Caption'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.caption}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tname='title'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.caption && errors.caption) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateMediaLibrary.error['error']['caption'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.caption && errors.caption) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateMediaLibrary.error['error']['caption'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('caption');\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\t\t\t\ttype='default'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={(e: any) => handleSubmit(e)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tdisabled={getisUpdateSubmitButtonDisabled(values, isValid)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tloading={isSubmitting}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t// marginTop: '20px'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tUpdate\r\n\t\t\t\t\t</Button>\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t</Formik>\r\n\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t)}\r\n\r\n\t\t\t\t\t\t{!activeImageItem && (\r\n\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\theight: '100%',\r\n\t\t\t\t\t\t\t\tdisplay: \"flex\",\r\n\t\t\t\t\t\t\t\tjustifyContent: \"center\",\r\n\t\t\t\t\t\t\t\talignItems: \"center\",\r\n\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t<h4 style={{\r\n\t\t\t\t\t\t\t\t\ttextAlign: \"center\",\r\n\t\t\t\t\t\t\t\t\tfontSize: \"13px\",\r\n\t\t\t\t\t\t\t\t\tcolor: '#8888'\r\n\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\tSelect an image to preview details\r\n\t\t\t\t\t\t\t\t</h4>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t)}\r\n\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t</Modal>\r\n\t\t</>\r\n\t)\r\n};\r\n\r\nexport default MediaLibrary;\r\n","import MediaLibrary from './MediaLibrary';\r\nexport default MediaLibrary;\r\n","// @ts-nocheck\r\nimport React,{useEffect, useState} from 'react'; \r\nimport { Tag, Input, Tooltip } from 'antd';\r\nimport { PlusOutlined } from '@ant-design/icons';\r\n\r\nclass MetaTags extends React.Component {\r\n  state = {\r\n    tags: [],\r\n    inputVisible: false,\r\n    inputValue: '',\r\n    editInputIndex: -1,\r\n    editInputValue: '',\r\n  };\r\n\r\n\r\n\r\n  handleClose = removedTag => {\r\n    const {setTags,tags} = this.props;\r\n    const localTags = tags.filter(tag => tag !== removedTag);\r\n    setTags(localTags);\r\n  };\r\n\r\n  showInput = () => {\r\n    this.setState({ inputVisible: true }, () => this.input.focus());\r\n  };\r\n\r\n  handleInputChange = e => {\r\n    this.setState({ inputValue: e.target.value });\r\n  };\r\n\r\n  handleInputConfirm = () => {\r\n      console.log('handleInputConfirm',this.props);\r\n    const { inputValue } = this.state;\r\n    let { tags, setTags } = this.props;\r\n    if (inputValue && tags && tags.indexOf(inputValue) === -1) {\r\n      tags = [...tags, inputValue];\r\n    }\r\n    setTags(tags);\r\n    this.setState({\r\n      inputVisible: false,\r\n      inputValue: '',\r\n    });\r\n  };\r\n\r\n  handleEditInputChange = e => {\r\n    this.setState({ editInputValue: e.target.value });\r\n    console.log('tagValue',e.target.value);\r\n  };\r\n\r\n  handleEditInputConfirm = () => {\r\n    this.setState(({ editInputIndex, editInputValue }) => {\r\n      return {\r\n        editInputIndex: -1,\r\n        editInputValue: '',\r\n      };\r\n    });\r\n\r\n    const newTags = [...this.props.tags];\r\n    newTags[editInputIndex] = editInputValue;\r\n    this.props.setTags(newTags);\r\n  };\r\n\r\n  saveInputRef = input => {\r\n    this.input = input;\r\n  };\r\n\r\n  saveEditInputRef = input => {\r\n    this.editInput = input;\r\n  };\r\n\r\n\r\n\r\n  render() {\r\n    const { inputVisible, inputValue, editInputIndex, editInputValue } = this.state;\r\n    const { placeholder,tags } = this.props;\r\n\r\n    return (\r\n      <>\r\n        {tags && tags.length > 0 && tags.map((tag, index) => {\r\n          if (editInputIndex === index) {\r\n            return (\r\n              <Input\r\n                ref={this.saveEditInputRef}\r\n                key={tag}\r\n                size=\"small\"\r\n                placeholder={placeholder}\r\n                className=\"tag-input\"\r\n                value={editInputValue}\r\n                onChange={this.handleEditInputChange}\r\n                onBlur={this.handleEditInputConfirm}\r\n                onPressEnter={this.handleEditInputConfirm}\r\n              />\r\n            );\r\n          }\r\n\r\n          const isLongTag = tag.length > 20;\r\n\r\n          const tagElem = (\r\n            <Tag\r\n              className=\"edit-tag\"\r\n              key={tag}\r\n              closable={index !== 0}\r\n              onClose={() => this.handleClose(tag)}\r\n            >\r\n              <span\r\n                onDoubleClick={e => {\r\n                  if (index !== 0) {\r\n                    this.setState({ editInputIndex: index, editInputValue: tag }, () => {\r\n                      this.editInput.focus();\r\n                    });\r\n                    e.preventDefault();\r\n                  }\r\n                }}\r\n              >\r\n                {isLongTag ? `${tag.slice(0, 20)}...` : tag}\r\n              </span>\r\n            </Tag>\r\n          );\r\n          return isLongTag ? (\r\n            <Tooltip title={tag} key={tag}>\r\n              {tagElem}\r\n            </Tooltip>\r\n          ) : (\r\n            tagElem\r\n          );\r\n        })}\r\n        {inputVisible && (\r\n          <Input\r\n          style={{\r\n            margin: \"10px 0\"\r\n          }}\r\n            ref={this.saveInputRef}\r\n            type=\"text\"\r\n            size=\"small\"\r\n            className=\"tag-input\"\r\n            value={inputValue}\r\n            onChange={this.handleInputChange}\r\n            onBlur={this.handleInputConfirm}\r\n            onPressEnter={this.handleInputConfirm}\r\n          />\r\n        )}\r\n        {!inputVisible && (\r\n          <Tag className=\"site-tag-plus edit-tag\" onClick={this.showInput}>\r\n            <PlusOutlined /> New Value\r\n          </Tag>\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MetaTags","import React, { useState } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n\r\nimport { useHandleFetch } from '../../hooks';\r\n// import third party ui lib\r\nimport { Switch, Select, notification, Modal, Tooltip, Upload, message } from 'antd';\r\n\r\nimport {\r\n\tDeleteOutlined,\r\n\tFileAddOutlined,\r\n\tFileImageFilled,\r\n\tPlusOutlined,\r\n\tCheckCircleOutlined,\r\n\tCloseOutlined,\r\n\tCheckOutlined,\r\n\tInfoCircleOutlined,\r\n\tLoadingOutlined\r\n} from '@ant-design/icons';\r\n\r\n\r\n\r\n// import ReactQuill from 'react-quill';\r\n// import 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport MediaLibrary from \"../../components/MediaLibrary\";\r\nimport MetaTags from \"./MetaTags\";\r\n\r\n\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n\tname: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t\tmessage: message || 'Category Updated',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n\tnotification.error({\r\n\t\tmessage: message || 'Something Went Wrong',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n};\r\n\r\n\r\n\r\n\r\n\r\nconst initialValues = {\r\n\tname: '',\r\n\tbnName: '',\r\n\tdescription: '',\r\n\tbnDescription: '',\r\n\tmetaTitle: '',\r\n\tbnMetaTitle: '',\r\n\tmetaDescription: '',\r\n\tbnMetaDescription: '',\r\n\tmetaTags: '',\r\n\tbnMetaTags: '',\r\n\timage: [],\r\n\turl: '',\r\n\tcover: ''\r\n}\r\n\r\nconst { Option } = Select;\r\n\r\ninterface Props {\r\n\taddNewCategoryVisible: any;\r\n\tsetAddNewCategoryVisible: any;\r\n\tcategoryList?: any;\r\n\tsetcategoryList?: any;\r\n}\r\n\r\nconst AddNewCategory = ({ addNewCategoryVisible, setAddNewCategoryVisible, categoryList, setcategoryList }: Props) => {\r\n\r\n\tconst [addCategoryState, handleAddCategoryFetch] = useHandleFetch({}, 'addCategory');\r\n\tconst [visible, setvisible] = useState(false);\r\n\tconst [myImages, setmyImages] = useState(false);\r\n\tconst [myThumbnailImage, setmyThumbnailImage] = useState(false);\r\n\tconst [isparentCategoryChecked, setisparentcategoryChecked] = useState(true);\r\n\tconst [isModalOpenForThumbnail, setisModalOpenForThumbnail] = useState(false);\r\n\tconst [isModalOpenForImages, setisModalOpenForImages] = useState(false);\r\n\tconst [coverImageId, setCoverImageId] = useState('');\r\n\tconst [selectedParentId, setselectedParentId] = useState('');\r\n\tconst [imageUrl, setImageUrl] = useState('');\r\n\tconst [loadingThumnail, setLoadingThumbnail] = useState(false);\r\n\tconst [imageFile, setImagefile] = useState('');\r\n\tconst [tags,setTags] = useState([]);\r\n\tconst [bnTags,setBnTags] = useState([]);\r\n\r\n\r\n\tconst handleSubmit = async (values: any, actions: any) => {\r\n\t\t// @ts-ignore\r\n\t\tconst imagesIds = myImages ? myImages.map(image => {\r\n\t\t\treturn image.id;\r\n\t\t}) : [];\r\n\r\n\t\tconst formData = new FormData();\r\n\r\n\t\tformData.append(\"name\", values.name.trim());\r\n\t\tformData.append(\"description\", values.description);\r\n\t\tformData.append(\"image\", JSON.stringify(imagesIds));\r\n\t\tformData.append(\"cover\", coverImageId || imagesIds[0] ? imagesIds[0] : '');\r\n\t\tformData.append(\"parent\", selectedParentId);\r\n\t\tformData.append('icon', imageFile)\r\n\r\n\r\n\r\n\t\tconst addCategoryRes = await handleAddCategoryFetch({\r\n\t\t\tbody: {\r\n\t\t\t\tname: values.name.trim(),\r\n\t\t\t\tdescription: values.description,\r\n\t\t\t\timage: imagesIds,\r\n\t\t\t\tcover: coverImageId || imagesIds[0] ? imagesIds[0] : '',\r\n\t\t\t\tparent: selectedParentId,\r\n\t\t\t\ticon: imageFile,\r\n\t\t\t\tmetaTitle: values.metaTitle,\r\n\t\t\t\tmetaDescription: values.metaDescription,\r\n\t\t\t\tmetaTags: tags.join(','),\r\n\t\t\t\tbn: {\r\n\t\t\t\t\tmetaTitle: values.bnMetaTitle,\r\n\t\t\t\t\tmetaDescription: values.bnMetaDescription,\r\n\t\t\t\t\tmetaTags: bnTags.join(','),\r\n\t\t\t\t\tname: values.bnName.trim(),\r\n\t\t\t\t\tdescription: values.bnDescription,\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t});\r\n\r\n\r\n\t\t// @ts-ignore\r\n\t\tif (addCategoryRes && addCategoryRes.status === 'ok') {\r\n\t\t\topenSuccessNotification('Category Created!');\r\n\t\t\tsetAddNewCategoryVisible(false)\r\n\r\n\t\t\tsetcategoryList([...categoryList, {\r\n\t\t\t\tid: addCategoryRes['_id'] || '',\r\n\t\t\t\tkey: addCategoryRes['_id'] || '',\r\n\t\t\t\tname: addCategoryRes['name'] || '',\r\n\t\t\t\tdescription: addCategoryRes['description'] || '',\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\t...addCategoryRes\r\n\t\t\t}])\r\n\r\n\t\t\tactions.resetForm();\r\n\t\t\t// @ts-ignore\r\n\t\t\tsetmyImages([]);\r\n\t\t\tsetCoverImageId('')\r\n\t\t\tsetselectedParentId('')\r\n\t\t\tsetisparentcategoryChecked(true);\r\n\t\t\tsetImageUrl('');\r\n\t\t}\r\n\t\telse {\r\n\t\t\topenErrorNotification();\r\n\t\t}\r\n\r\n\r\n\r\n\r\n\t\tactions.setSubmitting(false);\r\n\t};\r\n\r\n\r\n\r\n\tconst onSwitchChange = (checked: any) => {\r\n\t\tsetisparentcategoryChecked(checked)\r\n\t};\r\n\r\n\r\n\tconst handleCancel = (e: any) => {\r\n\t\tsetAddNewCategoryVisible(false);\r\n\t};\r\n\r\n\r\n\tconst getisSubmitButtonDisabled = (values, isValid) => {\r\n\t\tif (!values.name || !isValid) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\r\n\tconst handleImagesDelete = (id) => {\r\n\t\t// @ts-ignore\r\n\t\tconst newImages = myImages && myImages.filter(image => {\r\n\t\t\treturn image.id !== id;\r\n\t\t})\r\n\r\n\t\tsetmyImages(newImages);\r\n\t}\r\n\r\n\r\n\tconst handleThumbnailImageDelete = (id) => {\r\n\t\t// @ts-ignore\r\n\t\tconst newImages = myThumbnailImage && myThumbnailImage.filter(image => {\r\n\t\t\treturn image.id !== id;\r\n\t\t})\r\n\r\n\t\tif (newImages.length > 0) {\r\n\t\t\tsetmyThumbnailImage(newImages);\r\n\r\n\t\t}\r\n\t\telse setmyThumbnailImage(false);\r\n\t}\r\n\r\n\r\n\tconst onChangeSelect = (value) => {\r\n\t\tsetselectedParentId(value);\r\n\t}\r\n\r\n\r\n\r\n\tfunction getBase64(img, callback) {\r\n\t\tconst reader = new FileReader();\r\n\t\treader.addEventListener('load', () => callback(reader.result));\r\n\t\treader.readAsDataURL(img);\r\n\t}\r\n\r\n\r\n\tfunction beforeUpload(file) {\r\n\t\tconst isJpgOrPng = file.type === 'image/jpeg' || file.type === 'image/png';\r\n\t\tif (!isJpgOrPng) {\r\n\t\t\tmessage.error('You can only upload JPG/PNG file!');\r\n\t\t}\r\n\t\tconst isLt2M = file.size / 1024 / 1024 < 2;\r\n\t\tif (!isLt2M) {\r\n\t\t\tmessage.error('Image must smaller than 2MB!');\r\n\t\t}\r\n\r\n\r\n\t\tgetBase64(file, imageUrl => {\r\n\t\t\tsetImageUrl(imageUrl)\r\n\t\t\tsetImagefile(file)\r\n\t\t\tsetLoadingThumbnail(false)\r\n\t\t})\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\r\n\tconst uploadButton = (\r\n\t\t<div>\r\n\t\t\t{loadingThumnail ? <LoadingOutlined /> : <PlusOutlined />}\r\n\t\t\t<div className=\"ant-upload-text\">Upload</div>\r\n\t\t</div>\r\n\t);\r\n\r\n\r\n\tconsole.log('addnewCategoryTags',tags);\r\n\r\n\treturn (\r\n\t\t<Formik\r\n\t\t\tonSubmit={(values, actions) => handleSubmit(values, actions)}\r\n\t\t\tvalidationSchema={validationSchema}\r\n\t\t\tvalidateOnBlur={false}\r\n\t\t\tenableReinitialize={true}\r\n\t\t\tinitialValues={\r\n\t\t\t\t{ ...initialValues }\r\n\t\t\t}\r\n\t\t>\r\n\t\t\t{({\r\n\t\t\t\thandleChange,\r\n\t\t\t\tvalues,\r\n\t\t\t\thandleSubmit,\r\n\t\t\t\terrors,\r\n\t\t\t\tisValid,\r\n\t\t\t\tisSubmitting,\r\n\t\t\t\ttouched,\r\n\t\t\t\thandleBlur,\r\n\t\t\t\tsetFieldTouched,\r\n\t\t\t\thandleReset,\r\n\t\t\t}) => (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<Modal\r\n\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\ttop: '40px'\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\ttitle=\"Add New Category\"\r\n\t\t\t\t\t\t\tvisible={addNewCategoryVisible}\r\n\t\t\t\t\t\t\tonOk={(e: any) => handleSubmit(e)}\r\n\t\t\t\t\t\t\tonCancel={handleCancel}\r\n\t\t\t\t\t\t\tokText='Create'\r\n\t\t\t\t\t\t\tokButtonProps={{\r\n\t\t\t\t\t\t\t\tloading: isSubmitting,\r\n\t\t\t\t\t\t\t\thtmlType: \"submit\",\r\n\t\t\t\t\t\t\t\tdisabled: getisSubmitButtonDisabled(values, isValid)\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\tlabel='Name'\r\n\t\t\t\t\t\t\t\tvalue={values.name}\r\n\t\t\t\t\t\t\t\tplaceHolder={'grocery,fashion'}\r\n\t\t\t\t\t\t\t\tname='name'\r\n\t\t\t\t\t\t\t\tisError={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['name'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['name'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('name');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\tlabel='BN Name'\r\n\t\t\t\t\t\t\t\tvalue={values.bnName}\r\n\t\t\t\t\t\t\t\tplaceHolder={'মুদিখানা,ফ্যাশন'}\r\n\t\t\t\t\t\t\t\tname='bnName'\r\n\t\t\t\t\t\t\t\tisError={(touched.bnName && errors.bnName) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['bnName'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.bnName && errors.bnName) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['bnName'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('bnName');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\tlabel='Description'\r\n\t\t\t\t\t\t\t\tvalue={values.description}\r\n\t\t\t\t\t\t\t\tplaceholder={'This category...'}\r\n\t\t\t\t\t\t\t\tname='description'\r\n\t\t\t\t\t\t\t\tisError={(touched.description && errors.description) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['description'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.description && errors.description) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['description'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('description');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\tlabel='BN Description'\r\n\t\t\t\t\t\t\t\tvalue={values.bnDescription}\r\n\t\t\t\t\t\t\t\tplaceholder={'এই ক্যাটাগড়ি...'}\r\n\t\t\t\t\t\t\t\tname='bnDescription'\r\n\t\t\t\t\t\t\t\tisError={(touched.bnDescription && errors.bnDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['bnDescription'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.bnDescription && errors.bnDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['bnDescription'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('bnDescription');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\tmarginTop: '25px'\r\n\t\t\t\t\t\t\t}}></div>\r\n\r\n\t\t\t\t\t\t\t<div className='switchLabelContainer'>\r\n\t\t\t\t\t\t\t\t<Switch\r\n\t\t\t\t\t\t\t\t\tchecked={isparentCategoryChecked}\r\n\t\t\t\t\t\t\t\t\tdefaultChecked onChange={onSwitchChange} />\r\n\t\t\t\t\t\t\t\t<div className='switchLabelContainer-textContainer'>\r\n\t\t\t\t\t\t\t\t\t<h5 >Top level Category</h5>\r\n\t\t\t\t\t\t\t\t\t<h5 className='switchLabelContainer-desc'>Disable to select a Parent Category</h5>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t{!isparentCategoryChecked && (\r\n\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>Parent Category</h3>\r\n\t\t\t\t\t\t\t\t\t<Select\r\n\t\t\t\t\t\t\t\t\t\tshowSearch\r\n\t\t\t\t\t\t\t\t\t\tstyle={{ width: 300 }}\r\n\t\t\t\t\t\t\t\t\t\tplaceholder='Select a Parent Category'\r\n\t\t\t\t\t\t\t\t\t\toptionFilterProp='children'\r\n\t\t\t\t\t\t\t\t\t\tonChange={onChangeSelect}\r\n\t\t\t\t\t\t\t\t\t\t// onFocus={onFocus}\r\n\t\t\t\t\t\t\t\t\t\t// onBlur={onBlur}\r\n\t\t\t\t\t\t\t\t\t\t// onSearch={onSearch}\r\n\t\t\t\t\t\t\t\t\t\tfilterOption={(input, option: any) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t{categoryList.length > 0 && categoryList.map(category => {\r\n\t\t\t\t\t\t\t\t\t\t\treturn <Option value={category.id}>{category.name}</Option>\r\n\t\t\t\t\t\t\t\t\t\t})}\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t</Select>\r\n\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t)}\r\n\r\n\r\n\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\tmarginTop: '20px'\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\r\n\t\t\t\t\t\t\t<div className='addproductSection-left-header' >\r\n\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>Icon </h3>\r\n\t\t\t\t\t\t\t\t<Tooltip\r\n\t\t\t\t\t\t\t\t\tplacement=\"left\" title={'Add Icon image for this category'}>\r\n\t\t\t\t\t\t\t\t\t<a href='###'>\r\n\t\t\t\t\t\t\t\t\t\t<InfoCircleOutlined />\r\n\t\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t<Upload\r\n\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\tborderRadius: \"8px\"\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\tname=\"avatar\"\r\n\t\t\t\t\t\t\t\tlistType=\"picture-card\"\r\n\t\t\t\t\t\t\t\tclassName=\"avatar-uploader\"\r\n\t\t\t\t\t\t\t\tshowUploadList={false}\r\n\t\t\t\t\t\t\t\tbeforeUpload={beforeUpload}\r\n\t\t\t\t\t\t\t\tmultiple={false}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t{imageUrl ? <img src={imageUrl} alt=\"avatar\" style={{ width: '100%' }} /> : uploadButton}\r\n\t\t\t\t\t\t\t</Upload>\r\n\r\n\r\n\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\tmarginTop: '10px'\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\r\n\t\t\t\t\t\t\t<div className='addproductSection-left-header' style={{\r\n\t\t\t\t\t\t\t\tmarginBottom: '-5px'\r\n\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>Images</h3>\r\n\t\t\t\t\t\t\t\t<Tooltip\r\n\t\t\t\t\t\t\t\t\tplacement=\"left\" title={'Click on the image to select cover image, By default 1st image is selected as cover'}>\r\n\t\t\t\t\t\t\t\t\t<a href='###'>\r\n\t\t\t\t\t\t\t\t\t\t<InfoCircleOutlined />\r\n\t\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className='aboutToUploadImagesContainer'>\r\n\t\t\t\t\t\t\t\t{myImages &&\r\n\t\t\t\t\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\t\t\t\t\tmyImages.length > 0 && myImages.map((image, index) => {\r\n\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='aboutToUploadImagesContainer__item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='aboutToUploadImagesContainer__item-imgContainer'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => setCoverImageId(image.id)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<img src={image.cover} alt={image.alt} />\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => handleImagesDelete(image.id)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='aboutToUploadImagesContainer__item-remove'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<CloseOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t{coverImageId === image.id ? (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<span className='aboutToUploadImagesContainer__item-cover'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<CheckOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t) : !coverImageId && index === 0 && (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<span className='aboutToUploadImagesContainer__item-cover'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<CheckOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t})}\r\n\r\n\r\n\t\t\t\t\t\t\t\t<Tooltip\r\n\t\t\t\t\t\t\t\t\ttitle={'Attach images'}>\r\n\r\n\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\t\t\tsetvisible(true);\r\n\t\t\t\t\t\t\t\t\t\t\tsetisModalOpenForImages(true);\r\n\t\t\t\t\t\t\t\t\t\t\tsetisModalOpenForThumbnail(false);\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\tclassName='aboutToUploadImagesContainer__uploadItem'>\r\n\t\t\t\t\t\t\t\t\t\t{/* <FileAddOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FileImageTwoTone />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FileImageOutlined /> */}\r\n\t\t\t\t\t\t\t\t\t\t<FileImageFilled />\r\n\t\t\t\t\t\t\t\t\t\t{/* <h5>\r\n\t\t\t\t\t\t\t\t\t\t\t\t     Select From Library\r\n\t\t\t\t\t\t\t\t\t\t\t<     /h5> */}\r\n\t\t\t\t\t\t\t\t\t\t<span className='aboutToUploadImagesContainer__uploadItem-plus'>\r\n\t\t\t\t\t\t\t\t\t\t\t<PlusOutlined />\r\n\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</Tooltip>\r\n\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\t\t\t\t\t\t\t\r\n\r\n\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\tlabel='Meta title'\r\n\t\t\t\t\t\t\t\tvalue={values.metaTitle}\r\n\t\t\t\t\t\t\t\tplaceHolder={'category...'}\r\n\t\t\t\t\t\t\t\tname='metaTitle'\r\n\t\t\t\t\t\t\t\tisError={(touched.metaTitle && errors.metaTitle) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['metaTitle'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.metaTitle && errors.metaTitle) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['metaTitle'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('metaTitle')\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\tlabel='BN Meta title'\r\n\t\t\t\t\t\t\t\tvalue={values.bnMetaTitle}\r\n\t\t\t\t\t\t\t\tplaceHolder={'ক্যাটাগড়ি...'}\r\n\t\t\t\t\t\t\t\tname='bnMetaTitle'\r\n\t\t\t\t\t\t\t\tisError={(touched.bnMetaTitle && errors.bnMetaTitle) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['bnMetaTitle'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.bnMetaTitle && errors.bnMetaTitle) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['bnMetaTitle'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('bnMetaTitle');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\tlabel='Meta description'\r\n\t\t\t\t\t\t\t\tvalue={values.metaDescription}\r\n\t\t\t\t\t\t\t\tplaceholder={'meta...'}\r\n\t\t\t\t\t\t\t\tname='metaDescription'\r\n\t\t\t\t\t\t\t\tisError={(touched.metaDescription && errors.metaDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['metaDescription'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.metaDescription && errors.metaDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['metaDescription'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('metaDescription');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\tlabel='BN Meta Description'\r\n\t\t\t\t\t\t\t\tvalue={values.bnMetaDescription}\r\n\t\t\t\t\t\t\t\tplaceholder={'এইয় মেট...'}\r\n\t\t\t\t\t\t\t\tname='bnMetaDescription'\r\n\t\t\t\t\t\t\t\tisError={(touched.bnMetaDescription && errors.bnMetaDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['bnMetaDescription'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.bnMetaDescription && errors.bnMetaDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['bnMetaDescription'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('bnMetaDescription');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\tMeta Tags (grocery,fashion)\r\n\t\t\t\t\t\t\t</h3>\r\n\r\n\t\t\t\t\t\t\t<MetaTags\r\n\t\t\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\t\t\tsetTags={setTags}\r\n\t\t\t\t\t\t\ttags={tags}\r\n\t\t\t\t\t\t\t />\r\n\r\n\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\tmarginTop:'15px'\r\n\t\t\t\t\t\t\t}}></div>\r\n\r\n\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\tBN Meta Tags (মুদিখানা,ফ্যাশন)\r\n\t\t\t\t\t\t\t</h3>\r\n\r\n\t\t\t\t\t\t\t<MetaTags\r\n\t\t\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\t\t\tsetTags={setBnTags}\r\n\t\t\t\t\t\t\ttags={bnTags}\r\n\t\t\t\t\t\t\t />\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t</Modal>\r\n\r\n\t\t\t\t\t\t<MediaLibrary\r\n\t\t\t\t\t\t\tsetvisible={setvisible}\r\n\t\t\t\t\t\t\tvisible={visible}\r\n\t\t\t\t\t\t\tsetmyImages={setmyImages}\r\n\t\t\t\t\t\t\tmyImages={myImages}\r\n\t\t\t\t\t\t\tsetmyThumbnailImage={setmyThumbnailImage}\r\n\t\t\t\t\t\t\tisModalOpenForThumbnail={isModalOpenForThumbnail}\r\n\t\t\t\t\t\t\tisModalOpenForImages={isModalOpenForImages}\r\n\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</>\r\n\t\t\t\t)}\r\n\t\t</Formik>\r\n\r\n\r\n\r\n\r\n\t);\r\n};\r\n\r\nexport default AddNewCategory;\r\n","import React, { useState } from 'react';\r\nimport { Modal, notification } from 'antd';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport { useHandleFetch } from '../../hooks';\r\n\r\nimport { CheckCircleOutlined, PlusOutlined, EditOutlined, DeleteOutlined, EditFilled } from '@ant-design/icons';\r\n\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n\tname: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\n\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t\tmessage: message || 'Category Updated',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t\tmessage: message || 'Something Went Wrong',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n};\r\n\r\n\r\n\r\n\r\n\r\ninterface Props {\r\n\tcategory: any;\r\n\tsetvisible: any;\r\n\tvisible: any;\r\n\tsetcategoryList?: any;\r\n\tcategoryList?: any;\r\n}\r\n\r\nconst QuickEdit = ({ category, setvisible, visible, categoryList, setcategoryList }: Props) => {\r\n\tconst [updateCategoryState, handleUpdateCategoryFetch] = useHandleFetch({}, 'updateCategory');\r\n\r\n\tconst handleSubmit = async (values: any, actions: any) => {\r\n\t\tconst updateCategoryRes = await handleUpdateCategoryFetch({\r\n\t\t\turlOptions: {\r\n\t\t\t\tplaceHolders: {\r\n\t\t\t\t\tid: values.id,\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tbody: {\r\n\t\t\t\tname: values.name,\r\n\t\t\t\tdescription: values.description,\r\n\t\t\t},\r\n\t\t});\r\n\r\n\t\t//   console.log('updateCategoryRes',updateCategoryRes); \r\n\r\n\t\t// @ts-ignore\r\n\t\tif (updateCategoryRes && updateCategoryRes.status === 'ok') {\r\n\t\t\topenSuccessNotification();\r\n\r\n\t\t\tconst positionInTag = () => {\r\n\t\t\t\treturn categoryList.map(item => item.id).indexOf(category.id);\r\n\t\t\t}\r\n\r\n\t\t\tconst index = positionInTag();\r\n\r\n\t\t\t// @ts-ignore\r\n\t\t\tconst updatedItem = Object.assign({}, categoryList[index], { ...updateCategoryRes });\r\n\t\t\tconst updateCategoryList = [...categoryList.slice(0, index), updatedItem, ...categoryList.slice(index + 1)];\r\n\t\t\tsetcategoryList(updateCategoryList);\r\n\r\n\t\t}\r\n\t\telse {\r\n\t\t\topenErrorNotification();\r\n\t\t}\r\n\r\n\t\tactions.setSubmitting(false);\r\n\t\tsetvisible(false)\r\n\r\n\t};\r\n\r\n\r\n\tconst handleCancel = (e: any) => {\r\n\t\tsetvisible(false);\r\n\t};\r\n\r\n\r\n\r\n\tconst getisSubmitButtonDisabled = (values, isValid) => {\r\n\t\tif (!values.name || !isValid) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\treturn (\r\n\t\t<Formik\r\n\t\t\tonSubmit={(values, actions) => handleSubmit(values, actions)}\r\n\t\t\tvalidationSchema={validationSchema}\r\n\t\t\tvalidateOnBlur={false}\r\n\t\t\tenableReinitialize={true}\r\n\t\t\tinitialValues={\r\n\t\t\t\t{ ...category }\r\n\t\t\t}\r\n\t\t>\r\n\t\t\t{({\r\n\t\t\t\thandleChange,\r\n\t\t\t\tvalues,\r\n\t\t\t\thandleSubmit,\r\n\t\t\t\terrors,\r\n\t\t\t\tisValid,\r\n\t\t\t\tisSubmitting,\r\n\t\t\t\ttouched,\r\n\t\t\t\thandleBlur,\r\n\t\t\t\tsetFieldTouched,\r\n\t\t\t\thandleReset,\r\n\t\t\t}) => (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<Modal\r\n\t\t\t\t\t\t\ttitle=\"Quick Edit\"\r\n\t\t\t\t\t\t\tvisible={visible}\r\n\t\t\t\t\t\t\tonOk={(e: any) => handleSubmit(e)}\r\n\t\t\t\t\t\t\tonCancel={handleCancel}\r\n\t\t\t\t\t\t\tokText='Update'\r\n\t\t\t\t\t\t\tokButtonProps={{\r\n\t\t\t\t\t\t\t\tloading: isSubmitting,\r\n\t\t\t\t\t\t\t\thtmlType: \"submit\",\r\n\t\t\t\t\t\t\t\tdisabled: getisSubmitButtonDisabled(values, isValid)\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\tlabel='Title'\r\n\t\t\t\t\t\t\t\tvalue={values.name}\r\n\t\t\t\t\t\t\t\tname='name'\r\n\t\t\t\t\t\t\t\tisError={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateCategoryState.error['error']['name'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateCategoryState.error['error']['name'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('name');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\tlabel='Description'\r\n\t\t\t\t\t\t\t\tvalue={values.description}\r\n\t\t\t\t\t\t\t\tname='description'\r\n\t\t\t\t\t\t\t\tisError={(touched.description && errors.description) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateCategoryState.error['error']['description'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.description && errors.description) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateCategoryState.error['error']['description'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('description');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</Modal>\r\n\r\n\t\t\t\t\t</>\r\n\t\t\t\t)}\r\n\t\t</Formik>\r\n\t);\r\n};\r\n\r\n\r\nexport default QuickEdit;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n\r\nimport { useHandleFetch } from '../../hooks';\r\n// import third party ui lib\r\nimport { Upload, message, Switch, Select, Button, notification, Modal, Tooltip, Spin } from 'antd';\r\n\r\nimport {\r\n\tFileOutlined,\r\n\tInboxOutlined,\r\n\tFileAddOutlined,\r\n\tDeleteOutlined,\r\n\tCheckCircleOutlined,\r\n\tCloseOutlined,\r\n\tCheckOutlined,\r\n\tInfoCircleOutlined,\r\n\tPlusOutlined,\r\n\tFileImageFilled,\r\n\tLoadingOutlined\r\n} from '@ant-design/icons';\r\n\r\n\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport MediaLibrary from \"../../components/MediaLibrary\";\r\n\r\nconst validationSchema = Yup.object().shape({\r\n\tname: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t\tmessage: message || 'Category Updated',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n\tnotification.error({\r\n\t\tmessage: message || 'Something Went Wrong',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n};\r\n\r\n\r\nconst initialValues = {\r\n\tname: '',\r\n\tdescription: '',\r\n\timage: [],\r\n\turl: '',\r\n\tcover: ''\r\n}\r\n\r\n\r\nconst { Option } = Select;\r\n\r\n\r\n\r\ninterface Props {\r\n\tcategoryEditVisible?: any;\r\n\tsetCategoryEditVisible?: any;\r\n\tcategoryDetailData?: any;\r\n\tsetcategoryDetailData?:any; \r\n}\r\n\r\nconst AddNewBrand = ({ categoryEditVisible, \r\n\tsetCategoryEditVisible,\r\n\t categoryDetailData,\r\n\t setcategoryDetailData }: Props) => {\r\n\r\n\tconst [updateBrandState, handleUpdateBrandFetch] = useHandleFetch({}, 'updateCategory');\r\n\tconst [brandDetailState, handleBrandDetailFetch] = useHandleFetch({}, 'categoryDetail');\r\n\tconst [attachImageToItemMultipleState, handleAttachImageToItemMultipleFetch] = useHandleFetch({}, 'attachImageToItemMultiple');\r\n\tconst [attachImageToItemSingleState, handleAttachImageToItemSingleFetch] = useHandleFetch({}, 'attachImageToItemSingle');\r\n\tconst [detachImageFromItemMultipleState, handleDetachImageFromItemMultipleFetch] = useHandleFetch({}, 'detachImageFromItemMultiple');\r\n\tconst [detachImageFromItemSingleState, handleDetachImageFromItemSingleFetch] = useHandleFetch({}, 'detachImageFromItemSingle');\r\n\tconst [setImageAsThumbnailToItemState, handleSetImageAsThumbnailToItemFetch] = useHandleFetch({}, 'setImageAsThumbnailToItem');\r\n\r\n\r\n\tconst [myImages, setmyImages] = useState(false);\r\n\tconst [visibleMedia, setvisibleMedia] = useState(false);\r\n\tconst [coverImageId, setCoverImageId] = useState('');\r\n\tconst [myGoddamnImages, setMyGoddamnImages] = useState([]);\r\n\tconst [selectedParentId, setselectedParentId] = useState('');\r\n\tconst [imageUrl, setImageUrl] = useState('');\r\n\tconst [loadingThumnail, setLoadingThumbnail] = useState(false);\r\n\tconst [imageFile, setImagefile] = useState('');\r\n\tconst [isparentCategoryChecked, setisparentcategoryChecked] = useState(true);\r\n\r\n\r\n\r\n\r\n\tuseEffect(() => {\r\n\t\tif (categoryDetailData && Object.keys(categoryDetailData).length > 0) {\r\n\r\n\t\t\tconst images = categoryDetailData.image;\r\n\t\t\tif (images && images.length > 0) {\r\n\t\t\t\tsetmyImages(images);\r\n\t\t\t\tsetMyGoddamnImages(images);\r\n\t\t\t}\r\n\r\n\t\t\tif (categoryDetailData.cover && categoryDetailData.cover['id']) {\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\tsetmyImages([categoryDetailData.cover, ...images]);\r\n\t\t\t\tsetCoverImageId(categoryDetailData.cover['id']);\r\n\t\t\t}\r\n\r\n\t\t}\r\n\t}, [categoryDetailData])\r\n\r\n\r\n\tuseEffect(() => {\r\n\t\t// @ts-ignore\r\n\t\tif (myImages && myImages[0] && myImages.length < 2) {\r\n\r\n\t\t\tif (coverImageId !== myImages[0].id) {\r\n\t\t\t\tsetCoverImageId(myImages[0].id);\r\n\t\t\t\thandleSetImageAsThumnail(myImages[0]);\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}, [myImages])\r\n\r\n\r\n\tconst handleDetachSingleImage = async id => {\r\n\t\tawait handleDetachImageFromItemSingleFetch({\r\n\t\t\turlOptions: {\r\n\t\t\t\tplaceHolders: {\r\n\t\t\t\t\timageId: id,\r\n\t\t\t\t\tcollection: 'category',\r\n\t\t\t\t\titemId: categoryDetailData.id\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\r\n\t}\r\n\r\n\r\n\r\n\tconst handleSetImageAsThumnail = async image => {\r\n\r\n\t\tconst thumbnailRes = await handleSetImageAsThumbnailToItemFetch({\r\n\t\t\turlOptions: {\r\n\t\t\t\tplaceHolders: {\r\n\t\t\t\t\timageId: image.id,\r\n\t\t\t\t\tcollection: 'category',\r\n\t\t\t\t\titemId: categoryDetailData.id\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\r\n\t\t// @ts-ignore\r\n\t\tif (thumbnailRes && thumbnailRes.status === 'ok') {\r\n\t\t\topenSuccessNotification('Seted as thumbnail!')\r\n\t\t\t// const positionInBrand = () => {\r\n\t\t\t// \treturn brandList.map(item => item.id).indexOf(categoryDetailData.id);\r\n\t\t\t// }\r\n\r\n\t\t\t// const index = positionInBrand();\r\n\r\n\t\t\t// const prevItem = brandList.find(item => item.id === categoryDetailData.id);\r\n\r\n\t\t\t// if (prevItem) {\r\n\t\t\t// \tconst updatedItem = Object.assign({}, brandList[index], { ...prevItem, cover: image.cover });\r\n\t\t\t// \tconst updateBrandList = [...brandList.slice(0, index), updatedItem, ...brandList.slice(index + 1)];\r\n\t\t\t// \tsetBrandList(updateBrandList);\r\n\r\n\t\t\t// }\r\n\t\t}\r\n\t\telse {\r\n\t\t\topenErrorNotification(\"Couldn't set as thumbnail, Something went wrong\")\r\n\t\t}\r\n\r\n\t}\r\n\r\n\r\n\r\n\tconsole.log('categoryDetailState', brandDetailState);\r\n\r\n\tconst handleSubmit = async (values: any, actions: any) => {\r\n\r\n\r\n\t\tif (brandDetailState && brandDetailState.done && Object.keys(categoryDetailData).length > 0) {\r\n\t\t\t// @ts-ignore\r\n\t\t\tconst images = myImages && myImages.length > 0 ? myImages.map(item => item.id) : [];\r\n\r\n\t\t\tif (images[0] && images.length > 1) {\r\n\t\t\t\tawait handleAttachImageToItemMultipleFetch({\r\n\t\t\t\t\turlOptions: {\r\n\t\t\t\t\t\tplaceHolders: {\r\n\t\t\t\t\t\t\tcollection: 'category',\r\n\t\t\t\t\t\t\titemId: categoryDetailData.id\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t},\r\n\t\t\t\t\tbody: {\r\n\t\t\t\t\t\timage: images\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\telse if (images[0] && images.length < 1) {\r\n\t\t\t\tawait handleAttachImageToItemSingleFetch({\r\n\t\t\t\t\turlOptions: {\r\n\t\t\t\t\t\tplaceHolders: {\r\n\t\t\t\t\t\t\timageId: images[0].id,\r\n\t\t\t\t\t\t\tcollection: 'category',\r\n\t\t\t\t\t\t\titemId: categoryDetailData.id\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\r\n\r\n\r\n\r\n\t\tconst updateTagRes = await handleUpdateBrandFetch({\r\n\t\t\turlOptions: {\r\n\t\t\t\tplaceHolders: {\r\n\t\t\t\t\tid: categoryDetailData.id\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tbody: {\r\n\t\t\t\tname: values.name.trim(),\r\n\t\t\t\tdescription: values.description,\r\n\t\t\t\ticon: imageFile,\r\n\t\t\t\ttype: 'bottom'\r\n\t\t\t},\r\n\t\t});\r\n\r\n\t\t// @ts-ignore\r\n\t\tif (updateTagRes && updateTagRes.status === 'ok') {\r\n\t\t\tsetcategoryDetailData({\r\n\t\t\t\t...categoryDetailData,\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\t...updateTagRes\r\n\t\t\t})\r\n\t\t\tconsole.log('updateTagRes',updateTagRes);\r\n\t\t\tconsole.log('categoryDetailData',categoryDetailData);\r\n\t\t\t// setcategoryDetailData()\r\n\t\t\topenSuccessNotification();\r\n\t\t\tsetCategoryEditVisible(false);\r\n\r\n\r\n\t\t\t// const positionInBrand = () => {\r\n\t\t\t// \treturn brandList.map(item => item.id).indexOf(categoryDetailData.id);\r\n\t\t\t// }\r\n\r\n\t\t\t// const index = positionInBrand();\r\n\t\t\t// const updatedItem = Object.assign({}, brandList[index], { ...updateBrandRes });\r\n\t\t\t// console.log('updateBrandList', updatedItem)\r\n\r\n\t\t\t// const updateBrandList = [...brandList.slice(0, index), updatedItem, ...brandList.slice(index + 1)];\r\n\r\n\t\t\t// setBrandList(updateBrandList);\r\n\r\n\r\n\t\t\tactions.resetForm();\r\n\r\n\t\t}\r\n\t\telse {\r\n\t\t\topenErrorNotification();\r\n\t\t}\r\n\r\n\t\tactions.setSubmitting(false);\r\n\t};\r\n\r\n\r\n\r\n\r\n\r\n\tuseEffect(() => {\r\n\t\tif (categoryDetailData.type === 'top') {\r\n\t\t\t// setisparentcategoryChecked()\r\n\t\t}\r\n\t}, [categoryDetailData])\r\n\r\n\r\n\tconst handleCancel = (e: any) => {\r\n\t\tsetCategoryEditVisible(false);\r\n\t\tsetmyImages(false);\r\n\t};\r\n\r\n\r\n\tconst getisSubmitButtonDisabled = (values, isValid) => {\r\n\t\tif (!values.name || !isValid) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\r\n\tconst onChangeSelect = (value) => {\r\n\t\tsetselectedParentId(value);\r\n\t}\r\n\r\n\r\n\r\n\r\n\tfunction getBase64(img, callback) {\r\n\t\tconst reader = new FileReader();\r\n\t\treader.addEventListener('load', () => callback(reader.result));\r\n\t\treader.readAsDataURL(img);\r\n\t}\r\n\r\n\r\n\tfunction beforeUpload(file) {\r\n\t\tconst isJpgOrPng = file.type === 'image/jpeg' || file.type === 'image/png';\r\n\t\tif (!isJpgOrPng) {\r\n\t\t\tmessage.error('You can only upload JPG/PNG file!');\r\n\t\t}\r\n\t\tconst isLt2M = file.size / 1024 / 1024 < 2;\r\n\t\tif (!isLt2M) {\r\n\t\t\tmessage.error('Image must smaller than 2MB!');\r\n\t\t}\r\n\r\n\r\n\t\tgetBase64(file, imageUrl => {\r\n\t\t\tsetImageUrl(imageUrl)\r\n\t\t\tsetImagefile(file)\r\n\t\t\tsetLoadingThumbnail(false)\r\n\t\t})\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\r\n\r\n\r\n\tconst handleImagesDelete = (id) => {\r\n\t\t// @ts-ignore\r\n\t\tconst newImages = myImages && myImages.filter(image => {\r\n\t\t\treturn image.id !== id;\r\n\t\t})\r\n\r\n\t\t// @ts-ignore\r\n\t\tsetmyImages([]);\r\n\t}\r\n\r\n\r\n\tconst uploadButton = (\r\n\t\t<div>\r\n\t\t\t{loadingThumnail ? <LoadingOutlined /> : <PlusOutlined />}\r\n\t\t\t<div className=\"ant-upload-text\">Upload</div>\r\n\t\t</div>\r\n\t);\r\n\r\n\r\n\r\n\r\n\r\n\tconsole.log('cateogryDetailmyImages', myImages)\r\n\r\n\treturn (\r\n\t\t<Formik\r\n\t\t\tonSubmit={(values, actions) => handleSubmit(values, actions)}\r\n\t\t\tvalidationSchema={validationSchema}\r\n\t\t\tvalidateOnBlur={false}\r\n\t\t\tenableReinitialize={true}\r\n\t\t\tinitialValues={\r\n\t\t\t\t{ ...initialValues, ...categoryDetailData }\r\n\t\t\t}\r\n\t\t>\r\n\t\t\t{({\r\n\t\t\t\thandleChange,\r\n\t\t\t\tvalues,\r\n\t\t\t\thandleSubmit,\r\n\t\t\t\terrors,\r\n\t\t\t\tisValid,\r\n\t\t\t\tisSubmitting,\r\n\t\t\t\ttouched,\r\n\t\t\t\thandleBlur,\r\n\t\t\t\tsetFieldTouched,\r\n\t\t\t\thandleReset,\r\n\t\t\t}) => (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<Modal\r\n\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\ttop: '40px'\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\ttitle=\"Category Edit\"\r\n\t\t\t\t\t\t\tvisible={categoryEditVisible}\r\n\t\t\t\t\t\t\tonOk={(e: any) => handleSubmit(e)}\r\n\t\t\t\t\t\t\tonCancel={handleCancel}\r\n\t\t\t\t\t\t\tokText='Update'\r\n\t\t\t\t\t\t\tokButtonProps={{\r\n\t\t\t\t\t\t\t\tloading: isSubmitting,\r\n\t\t\t\t\t\t\t\thtmlType: \"submit\",\r\n\t\t\t\t\t\t\t\tdisabled: getisSubmitButtonDisabled(values, isValid)\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\tlabel='Title'\r\n\t\t\t\t\t\t\t\tvalue={values.name}\r\n\t\t\t\t\t\t\t\tname='name'\r\n\t\t\t\t\t\t\t\tisError={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateBrandState.error['error']['name'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateBrandState.error['error']['name'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('name');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\trows={3}\r\n\t\t\t\t\t\t\t\tlabel='Description'\r\n\t\t\t\t\t\t\t\tvalue={values.description}\r\n\t\t\t\t\t\t\t\tname='description'\r\n\t\t\t\t\t\t\t\tisError={(touched.description && errors.description) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateBrandState.error['error']['description'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.description && errors.description) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateBrandState.error['error']['description'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('description');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t{/* <div style={{\r\n\t\t\t\t\t\t\t\tmarginTop: '25px'\r\n\t\t\t\t\t\t\t}}></div>\r\n\r\n\t\t\t\t\t\t\t<div className='switchLabelContainer'>\r\n\t\t\t\t\t\t\t\t<Switch\r\n\t\t\t\t\t\t\t\t\tchecked={isparentCategoryChecked}\r\n\t\t\t\t\t\t\t\t\tonChange={onSwitchChange} />\r\n\t\t\t\t\t\t\t\t<div className='switchLabelContainer-textContainer'>\r\n\t\t\t\t\t\t\t\t\t<h5 >Top level Category</h5>\r\n\t\t\t\t\t\t\t\t\t<h5 className='switchLabelContainer-desc'>Disable to select a Parent Category</h5>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t{!isparentCategoryChecked && (\r\n\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>Parent Category</h3>\r\n\t\t\t\t\t\t\t\t\t<Select\r\n\t\t\t\t\t\t\t\t\t\tshowSearch\r\n\t\t\t\t\t\t\t\t\t\tstyle={{ width: 400 }}\r\n\t\t\t\t\t\t\t\t\t\tplaceholder='Select a Parent Category'\r\n\t\t\t\t\t\t\t\t\t\toptionFilterProp='children'\r\n\t\t\t\t\t\t\t\t\t\tonChange={onChangeSelect}\r\n\t\t\t\t\t\t\t\t\t\t// onFocus={onFocus}\r\n\t\t\t\t\t\t\t\t\t\t// onBlur={onBlur}\r\n\t\t\t\t\t\t\t\t\t\t// onSearch={onSearch}\r\n\t\t\t\t\t\t\t\t\t\tfilterOption={(input, option: any) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t{brandList.length > 0 && brandList.map(category => {\r\n\t\t\t\t\t\t\t\t\t\t\treturn <Option value={category.id}>{category.name}</Option>\r\n\t\t\t\t\t\t\t\t\t\t})}\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t</Select>\r\n\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t)}\r\n\r\n\r\n\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\tmarginTop: '20px'\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\r\n\t\t\t\t\t\t\t<div className='addproductSection-left-header' >\r\n\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>Icon </h3>\r\n\t\t\t\t\t\t\t\t<Tooltip\r\n\t\t\t\t\t\t\t\t\tplacement=\"left\" title={'Add Icon image for this category'}>\r\n\t\t\t\t\t\t\t\t\t<a href='###'>\r\n\t\t\t\t\t\t\t\t\t\t<InfoCircleOutlined />\r\n\t\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t<Upload\r\n\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\tborderRadius: \"8px\"\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\tname=\"avatar\"\r\n\t\t\t\t\t\t\t\tlistType=\"picture-card\"\r\n\t\t\t\t\t\t\t\tclassName=\"avatar-uploader\"\r\n\t\t\t\t\t\t\t\tshowUploadList={false}\r\n\t\t\t\t\t\t\t\tbeforeUpload={beforeUpload}\r\n\t\t\t\t\t\t\t\tmultiple={false}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t{imageUrl ? <img src={imageUrl} alt=\"avatar\" style={{ width: '100%' }} /> : uploadButton}\r\n\t\t\t\t\t\t\t</Upload>\r\n */}\r\n\r\n\r\n\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\tmarginTop: '20px'\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\r\n\t\t\t\t\t\t\t<div className='addproductSection-left-header'\r\n\r\n\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\tmarginBottom: '-5px'\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>Images</h3>\r\n\t\t\t\t\t\t\t\t{/* <div  >\r\n\t\t\t\t\t<FileOutlined />\r\n\t\t\t\t\t<span>Media Center</span>\r\n\t\t\t\t</div> */}\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\t\t\t\t\t\t\t<div className='aboutToUploadImagesContainer'>\r\n\r\n\t\t\t\t\t\t\t\t{brandDetailState && (\r\n\t\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t\t{myImages &&\r\n\t\t\t\t\t\t\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\t\t\t\t\t\t\tmyImages.length > 0 && myImages.map((image, index) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div className='aboutToUploadImagesContainer__item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='aboutToUploadImagesContainer__item-imgContainer'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetCoverImageId(image.id);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleSetImageAsThumnail(image);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<img src={image.cover} alt={image.alt} />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleImagesDelete(image.id)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleDetachSingleImage(image.id)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='aboutToUploadImagesContainer__item-remove'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<CloseOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{coverImageId === image.id ? (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className='aboutToUploadImagesContainer__item-cover'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<CheckOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t) : !coverImageId && index === 0 && (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className='aboutToUploadImagesContainer__item-cover'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<CheckOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t\t\t})}\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t<Tooltip\r\n\t\t\t\t\t\t\t\t\t\t\ttitle={'Attach images'}>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetvisibleMedia(true);\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\tclassName='aboutToUploadImagesContainer__uploadItem'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t{/* <FileAddOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FileImageTwoTone />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FileImageOutlined /> */}\r\n\t\t\t\t\t\t\t\t\t\t\t\t<FileImageFilled />\r\n\t\t\t\t\t\t\t\t\t\t\t\t{/* <h5>\r\n\t\t\t\t\t\t\t\t\t\t\t\t     Select From Library\r\n\t\t\t\t\t\t\t\t\t\t\t<     /h5> */}\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span className='aboutToUploadImagesContainer__uploadItem-plus'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<PlusOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t\t)}\r\n\r\n\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t</Modal>\r\n\r\n\t\t\t\t\t\t<MediaLibrary\r\n\t\t\t\t\t\t\tsetvisible={setvisibleMedia}\r\n\t\t\t\t\t\t\tvisible={visibleMedia}\r\n\t\t\t\t\t\t\tsetmyImages={setmyImages}\r\n\t\t\t\t\t\t\tmyImages={myImages}\r\n\t\t\t\t\t\t\tmyGoddamnImages={myGoddamnImages}\r\n\t\t\t\t\t\t\tsetMyGoddamnImages={setMyGoddamnImages}\r\n\t\t\t\t\t\t\tisModalOpenForImages={true}\r\n\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</>\r\n\t\t\t\t)}\r\n\t\t</Formik>\r\n\r\n\r\n\r\n\r\n\t);\r\n};\r\n\r\nexport default AddNewBrand;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useParams, useHistory } from \"react-router\";\r\n\r\n\r\n// import hooks\r\nimport { useHandleFetch } from \"../../hooks\";\r\n\r\n// import lib\r\nimport {\r\n    EditOutlined,\r\n} from '@ant-design/icons';\r\n\r\nimport { Skeleton, Empty, Button, notification, Table, Space, Input as CoolInput, Tooltip, Modal } from 'antd';\r\n\r\n\r\n\r\n// import components\r\nimport { DataTableSkeleton } from \"../../components/Placeholders\";\r\nimport CategoryEdit from \"./CategoryEdit\";\r\n\r\n\r\nconst { Column, ColumnGroup } = Table;\r\nconst { Search } = CoolInput;\r\n\r\n\r\ninterface Props {\r\n    productRecord?: any;\r\n}\r\n\r\nconst NewBrandDetail = (props: Props) => {\r\n    const [categoryDetailState, handleCategoryDetailFetch] = useHandleFetch({}, 'categoryDetail');\r\n    const [categoryProductsState, handleCategoryProductsFetch] = useHandleFetch({}, 'categoryProducts');\r\n\r\n    const params = useParams();\r\n    const history = useHistory();\r\n    const categoryId = params['id'];\r\n    const [categoryEditVisible, setCategoryEditVisible] = useState(false);\r\n    const [categoryDetail,setcategoryDetail] = useState({}); \r\n\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        const getCategoryDetail = async () => {\r\n            const categoryDetailDataRes =  await handleCategoryDetailFetch({\r\n                urlOptions: {\r\n                    placeHolders: {\r\n                        id: categoryId\r\n                    }\r\n                }\r\n            }); \r\n\r\n            // @ts-ignore\r\n            if(categoryDetailDataRes){\r\n                  // @ts-ignore\r\n                setcategoryDetail(categoryDetailDataRes)\r\n\r\n            }\r\n\r\n        };\r\n\r\n        getCategoryDetail();\r\n\r\n    }, [categoryId]);\r\n\r\n    useEffect(() => {\r\n\r\n        const getCategoryProducts = async () => {\r\n            await handleCategoryProductsFetch({\r\n                urlOptions: {\r\n                    placeHolders: {\r\n                        id: categoryId\r\n                    }\r\n                }\r\n            })\r\n        };\r\n\r\n        getCategoryProducts();\r\n\r\n    }, [categoryId]);\r\n\r\n\r\n\r\n\r\n    console.log('categoryProductsState', categoryProductsState);\r\n\r\n    console.log('brandParams', params);\r\n\r\n\r\n    const getImagesInCollumn = (imgs) => {\r\n        if (!imgs[0]) return false;\r\n        imgs = imgs.map(item => item.cover);\r\n        const columns = {};\r\n\r\n        let localIndex = 0;\r\n        let columnNumber = 0;\r\n\r\n\r\n        imgs.forEach((item, index) => {\r\n            if (localIndex < 3) {\r\n                if (columns[columnNumber]) {\r\n                    columns[columnNumber] = [...columns[columnNumber], item]\r\n                }\r\n                else columns[columnNumber] = [item];\r\n\r\n                localIndex = localIndex + 1;\r\n                columnNumber = columnNumber + 1;\r\n\r\n            }\r\n            else {\r\n                localIndex = 0;\r\n                columnNumber = 0;\r\n                console.log('localIndex', localIndex)\r\n            }\r\n        });\r\n\r\n        return columns;\r\n    }\r\n\r\n\r\n    const row = categoryDetailState.done && categoryDetail && categoryDetail['image'] ? getImagesInCollumn(categoryDetail['image']) : [];\r\n\r\n\r\n\r\n    return (\r\n        <div className='brandDetailContainer'>\r\n\r\n            <div className='brandDetailContainer__heading'>\r\n                <h3>\r\n                    Category Detail\r\n                </h3>\r\n\r\n                {categoryDetailState.done && categoryDetail && (Object.keys(categoryDetail).length > 0) && (\r\n                    <>\r\n                        <CategoryEdit\r\n                            categoryEditVisible={categoryEditVisible}\r\n                            setCategoryEditVisible={setCategoryEditVisible}\r\n                            categoryDetailData={categoryDetail}\r\n                            setcategoryDetailData={setcategoryDetail}\r\n                        />\r\n\r\n                        <Button\r\n                            onClick={() => setCategoryEditVisible(true)}\r\n                            type='link'\r\n                            icon={<EditOutlined />}\r\n                        >\r\n                            Edit\r\n                      </Button>\r\n                    </>\r\n                )}\r\n\r\n            </div>\r\n            <Skeleton\r\n                avatar paragraph={{ rows: 3 }}\r\n                loading={categoryDetailState.isLoading}>\r\n                {categoryDetailState.done && categoryDetail && !(Object.keys(categoryDetail).length > 0) && (\r\n                    <Empty description='No Category found' image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n                )}\r\n\r\n\r\n\r\n                {categoryDetailState.done && categoryDetail && (Object.keys(categoryDetail).length > 0) && (\r\n                    <>\r\n                        <div className='brandDetailContainer__header'>\r\n                            <div className='brandDetailContainer__header-coverContainer brandDetailContainer__header-coverContainer-category'>\r\n                                <img src={categoryDetail['cover'] && categoryDetail['cover']['cover']} alt=\"\" />\r\n                            </div>\r\n                            <div className='brandDetailContainer__header-info'>\r\n                                <h2>\r\n                                    {categoryDetail['name']}\r\n                                </h2>\r\n                                <h3>\r\n                                    {categoryDetail['description']}\r\n                                </h3>\r\n                                <h3>\r\n                                    Category type: <span>\r\n                                        {categoryDetail['type']}\r\n                                    </span>\r\n                                </h3>\r\n\r\n                                {categoryDetail['url'] && (\r\n                                    <h3>\r\n                                        URL:\r\n                                        <span>\r\n                                            {categoryDetail['url']}\r\n                                        </span>\r\n\r\n                                    </h3>\r\n                                )}\r\n\r\n                            </div>\r\n                        </div>\r\n\r\n\r\n                        {categoryDetail['icon'] && (\r\n                            <>\r\n                                <div className='brandDetailContainer__heading'>\r\n                                    <h3>\r\n                                        Icon\r\n                            </h3>\r\n                                </div>\r\n\r\n                                <div className='brandDetailContainer__inlineBox'>\r\n                                    <div className='brandDetailContainer__header-coverContainer brandDetailContainer__header-coverContainer-icon'>\r\n                                        <img src={categoryDetail['icon'] && categoryDetail['icon']} alt=\"\" />\r\n                                    </div>\r\n\r\n                                </div>\r\n\r\n                                <div style={{\r\n                                    marginBottom: \"25px\"\r\n                                }}></div>\r\n                            </>\r\n                        )}\r\n\r\n\r\n                        {categoryDetail['image'] && categoryDetail['image'].length > 0 && (\r\n                            <>\r\n                                <div className='brandDetailContainer__heading'>\r\n                                    <h3>\r\n                                        Image Gallary\r\n                                   </h3>\r\n                                </div>\r\n\r\n                                <div className='brandDetailContainer__imageGallary'>\r\n                                    <div className='imgGallaryContainer'>\r\n\r\n                                        <div className=\"imgGallary-row\">\r\n                                            {row && Object.keys(row).map(column => {\r\n                                                return (\r\n                                                    <div className=\"imgGallary-column\">\r\n                                                        {row[column] && row[column].map(img => {\r\n                                                            return <img \r\n                                                            alt='..'\r\n                                                            src={img} style={{\r\n                                                                width: '100%'\r\n                                                            }} />\r\n                                                        })}\r\n\r\n                                                    </div>\r\n                                                )\r\n                                            })}\r\n\r\n\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                </div>\r\n\r\n                                <div style={{\r\n                                    marginBottom: \"25px\"\r\n                                }}></div>\r\n                            </>\r\n                        )}\r\n\r\n\r\n                        {categoryDetail['subCategory'] && categoryDetail['subCategory'].length > 0 && (\r\n                            <>\r\n                                <div className='brandDetailContainer__heading'>\r\n                                    <h3>\r\n                                        Child Categories\r\n                                   </h3>\r\n                                </div>\r\n\r\n                                <div className='smallcatCardContainer'>\r\n                                    {categoryDetail['subCategory'].map(subCat => {\r\n                                        return (\r\n                                            <div\r\n                                                onClick={() => history.push(`/admin/category/${subCat.id}`)}\r\n                                                className='smallcatCardContainer__card'>\r\n                                                <div className='smallcatCardContainer__card-coverbox'>\r\n                                                    <img src={subCat.cover} alt=\"\" />\r\n                                                </div>\r\n                                                <div className='smallcatCardContainer__card-info'>\r\n                                                    <h3>\r\n                                                        {subCat.name}\r\n                                                    </h3>\r\n                                                </div>\r\n                                            </div>\r\n                                        )\r\n                                    })}\r\n\r\n                                </div>\r\n\r\n                                <div style={{\r\n                                    marginBottom: \"25px\"\r\n                                }}></div>\r\n                            </>\r\n                        )}\r\n\r\n\r\n                    </>\r\n\r\n                )}\r\n\r\n            </Skeleton>\r\n\r\n            <div className='brandDetailContainer__heading'>\r\n                <h3>\r\n                    Products\r\n                </h3>\r\n            </div>\r\n            <div className='brandDetailContainer__body'>\r\n                {categoryProductsState.isLoading && <DataTableSkeleton />}\r\n                {categoryProductsState.done && !(categoryProductsState.data.length > 0) && (\r\n                    <div style={{\r\n                        marginTop: '100px'\r\n                    }}>\r\n                        <Empty description='No Products exists in this category' image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n                    </div>\r\n                )}\r\n\r\n                {categoryProductsState.done && categoryProductsState.data && categoryProductsState.data.length > 0 && (\r\n                    <>\r\n                        <Table\r\n                            style={{\r\n                                paddingTop: '10px',\r\n                                borderRadius: '5px !important',\r\n                                overflow: 'hidden',\r\n                                boxShadow: '0 0.125rem 0.625rem rgba(227, 231, 250, 0.3), 0 0.0625rem 0.125rem rgba(206, 220, 233, 0.4)'\r\n                            }}\r\n\r\n                            size='small'\r\n                            dataSource={categoryProductsState.data}\r\n                            tableLayout={'auto'}\r\n                            onHeaderRow={column => {\r\n                                return {\r\n                                    style: {\r\n                                        color: 'red !important'\r\n                                    }\r\n\r\n                                };\r\n                            }}\r\n                        >\r\n                            <Column\r\n                                title=\"\"\r\n                                dataIndex=\"cover\"\r\n                                key=\"id\"\r\n                                width={'80px'}\r\n\r\n                                className='classnameofthecolumn'\r\n\r\n                                render={(cover, record: any) => (\r\n                                    <>\r\n                                        <img\r\n                                            onClick={() => {\r\n                                                history.push(`/admin/product/${record.id}`)\r\n                                                // go to product detail\r\n                                            }}\r\n                                            src={cover} alt='cover img' style={{\r\n                                                height: '40px',\r\n                                                width: '40px',\r\n                                                objectFit: \"contain\",\r\n                                                borderRadius: '3px',\r\n                                                cursor: 'pointer'\r\n                                            }} />\r\n\r\n\r\n\r\n\r\n                                    </>\r\n                                )}\r\n                            />\r\n\r\n                            <Column\r\n                                title=\"Name\"\r\n                                dataIndex=\"name\"\r\n                                key=\"id\"\r\n                                className='classnameofthecolumn'\r\n                                render={(text, record: any) => (\r\n                                    <>\r\n                                        <h4\r\n                                            onClick={() => {\r\n                                                history.push(`/admin/product/${record.id}`)\r\n                                            }}\r\n                                            style={{\r\n                                                fontWeight: 400,\r\n                                                color: '#555',\r\n                                                cursor: 'pointer'\r\n\r\n                                            }}>\r\n                                            {text}\r\n                                        </h4>\r\n\r\n\r\n                                    </>\r\n                                )}\r\n\r\n                            />\r\n\r\n                            <Column\r\n                                title=\"Offer Price\"\r\n                                dataIndex=\"offerPrice\"\r\n                                key=\"id\"\r\n                                className='classnameofthecolumn'\r\n\r\n                            />\r\n\r\n\r\n                            <Column\r\n                                title=\"Price\"\r\n                                dataIndex=\"price\"\r\n                                key=\"id\"\r\n                                className='classnameofthecolumn'\r\n\r\n                            />\r\n\r\n<Column\r\n                                title=\"Available\"\r\n                                dataIndex=\"available\"\r\n                                key=\"id\"\r\n                                className='classnameofthecolumn'\r\n\r\n                            />\r\n\r\n\r\n                            <Column\r\n                                title=\"Minimum\"\r\n                                dataIndex=\"minimum\"\r\n                                key=\"id\"\r\n                                className='classnameofthecolumn'\r\n\r\n                            />\r\n\r\n\r\n                        </Table>\r\n                    </>\r\n                )}\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NewBrandDetail\r\n","import React, { useState } from 'react';\r\nimport { Modal, notification } from 'antd';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport { useHandleFetch } from '../../hooks';\r\nimport { CheckCircleOutlined, PlusOutlined, EditOutlined, DeleteOutlined, EditFilled } from '@ant-design/icons';\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    name: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Bundle Updated',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Something Went Wrong',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n    });\r\n};\r\n\r\n\r\ninterface Props {\r\n    category: any;\r\n    setvisible: any;\r\n    visible: any;\r\n    tagList: any;\r\n    setTagList: any;\r\n}\r\n\r\nconst ProductBundleQuickEdit = ({ category, setvisible, visible, tagList, setTagList }: Props) => {\r\n    const [updateTagState, handleUpdateCategoryFetch] = useHandleFetch({}, 'updateBundle');\r\n\r\n    const handleSubmit = async (values: any, actions: any) => {\r\n\r\n        const updateTagRes = await handleUpdateCategoryFetch({\r\n            urlOptions: {\r\n                placeHolders: {\r\n                    id: values.id,\r\n                }\r\n            },\r\n            body: {\r\n                name: values.name,\r\n                description: values.description,\r\n                price: category.price,\r\n                ...category\r\n            },\r\n        });\r\n\r\n        // @ts-ignore\r\n        if (updateTagRes && updateTagRes.status === 'ok') {\r\n            openSuccessNotification();\r\n\r\n            const positionInTag = () => {\r\n                return tagList.map(item => item.id).indexOf(category.id);\r\n            }\r\n\r\n            const index = positionInTag();\r\n\r\n            // @ts-ignore\r\n            const updatedItem = Object.assign({}, tagList[index], { ...updateTagRes });\r\n            const updateTagList = [...tagList.slice(0, index), updatedItem, ...tagList.slice(index + 1)];\r\n            setTagList(updateTagList);\r\n\r\n        }\r\n        else {\r\n            openErrorNotification();\r\n        }\r\n\r\n        actions.setSubmitting(false);\r\n        setvisible(false)\r\n    };\r\n\r\n\r\n    const handleCancel = (e: any) => {\r\n        setvisible(false);\r\n    };\r\n\r\n\r\n    const getisSubmitButtonDisabled = (values, isValid) => {\r\n        if (!values.name || !isValid) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    return (\r\n        <Formik\r\n            onSubmit={(values, actions) => handleSubmit(values, actions)}\r\n            validationSchema={validationSchema}\r\n            validateOnBlur={false}\r\n            enableReinitialize={true}\r\n            initialValues={\r\n                { ...category }\r\n            }\r\n        >\r\n            {({\r\n                handleChange,\r\n                values,\r\n                handleSubmit,\r\n                errors,\r\n                isValid,\r\n                isSubmitting,\r\n                touched,\r\n                handleBlur,\r\n                setFieldTouched,\r\n                handleReset,\r\n            }) => (\r\n                    <>\r\n                        <Modal\r\n                            title=\"Quick Edit\"\r\n                            visible={visible}\r\n                            onOk={(e: any) => handleSubmit(e)}\r\n                            onCancel={handleCancel}\r\n                            okText='Update'\r\n                            okButtonProps={{\r\n                                loading: isSubmitting,\r\n                                htmlType: \"submit\",\r\n                                disabled: getisSubmitButtonDisabled(values, isValid)\r\n                            }}\r\n                        >\r\n                            <Input\r\n                                label='Title'\r\n                                value={values.name}\r\n                                name='name'\r\n                                isError={(touched.name && errors.name) ||\r\n                                    (!isSubmitting && updateTagState.error['error']['name'])}\r\n\r\n                                errorString={(touched.name && errors.name) ||\r\n                                    (!isSubmitting && updateTagState.error['error']['name'])}\r\n                                onChange={(e: any) => {\r\n                                    handleChange(e);\r\n                                    setFieldTouched('name');\r\n                                }}\r\n                            />\r\n                            <TextArea\r\n                                label='Description'\r\n                                value={values.description}\r\n                                name='description'\r\n                                isError={(touched.description && errors.description) ||\r\n                                    (!isSubmitting && updateTagState.error['error']['description'])}\r\n\r\n                                errorString={(touched.description && errors.description) ||\r\n                                    (!isSubmitting && updateTagState.error['error']['description'])}\r\n                                onChange={(e: any) => {\r\n                                    handleChange(e);\r\n                                    setFieldTouched('description');\r\n                                }}\r\n                            />\r\n                        </Modal>\r\n\r\n                    </>\r\n                )}\r\n        </Formik>\r\n    );\r\n};\r\n\r\n\r\nexport default ProductBundleQuickEdit;\r\n","import React from 'react';\r\nimport { Form, Input } from 'antd';\r\n\r\n\r\ninterface Props {\r\n    label?: string;\r\n    type?: string;\r\n    defaultValue?:string;\r\n    value?: string; \r\n    onChange?: any; \r\n    disabled?: boolean; \r\n    isError?: boolean; \r\n    errorString?: string; \r\n    name?:string;\r\n    size?: any; \r\n}\r\n\r\nconst Demo = ({ label, type, defaultValue, value, onChange, disabled, isError, errorString,  name, size='middle'}: Props) => {\r\n    return (\r\n        <>\r\n        {label && <h3 className='inputFieldLabel-small'>\r\n                {label}\r\n            </h3>}\r\n           \r\n            <Form.Item\r\n            validateStatus={isError ? \"error\" : \"\"}\r\n            // hasFeedback validateStatus=\"success\"\r\n            help={errorString}\r\n            // rules={[{ required: true }]}\r\n                >\r\n                     <Input\r\n                     size={size}\r\n                    allowClear \r\n                    name={name}\r\n                    disabled={disabled}\r\n                    value={value}\r\n                    onChange={onChange}\r\n                    className='inputclassName-small' />\r\n               \r\n            </Form.Item>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Demo; ","import React from 'react'\r\nimport { DatePicker } from 'antd';\r\nimport moment from 'moment';\r\n\r\n\r\n\r\ninterface Props {\r\n    onChange: any;\r\n    label?: string;\r\n    withTime?: boolean;\r\n    placeholder?: string;\r\n    date?: string;\r\n    time?: string;\r\n}\r\n\r\n\r\nconst DatePickerComponent = ({ onChange, label, withTime, placeholder, date, time }: Props) => {\r\n    function disabledDate(current) {\r\n        // Can not select days before today and today\r\n        return current && current < moment(date) && current > moment(date);\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <h3 className='inputFieldLabel'>{label}</h3>\r\n\r\n            {withTime ? <DatePicker\r\n                format=\"YYYY-MM-DD HH:mm:ss\"\r\n                className='inputclassName'\r\n                placeholder={placeholder}\r\n                style={{\r\n                    width: \"100%\",\r\n                    borderColor: \"#eee\"\r\n                }}\r\n\r\n\r\n                onChange={onChange}\r\n                {...(time && {\r\n                    defaultValue: moment(time),\r\n                })}\r\n            />\r\n                : (\r\n                    <DatePicker\r\n\r\n                        placeholder={placeholder}\r\n                        className='inputclassName'\r\n                        style={{\r\n                            width: \"100%\",\r\n                            borderColor: \"#eee\"\r\n                        }}\r\n                        onChange={onChange}\r\n                        {...(date && {\r\n                            defaultValue: moment(date),\r\n                        })}\r\n                    />\r\n                )}\r\n\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default DatePickerComponent\r\n\r\n\r\n\r\n\r\nconst { RangePicker } = DatePicker;\r\n\r\nfunction range(start, end) {\r\n    const result = [];\r\n    for (let i = start; i < end; i++) {\r\n        result.push(i);\r\n    }\r\n    return result;\r\n}\r\n\r\n// function disabledDate(current) {\r\n//   // Can not select days before today and today\r\n//   return current && current < moment().endOf('day');\r\n// }\r\n\r\n","import React from 'react';\r\nimport { notification } from 'antd';\r\n\r\nimport {\r\n    CheckCircleOutlined,\r\n    ExclamationCircleOutlined\r\n} from '@ant-design/icons';\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Succeed',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n    notification.error({\r\n        message: message || 'Something Went Wrong',\r\n        description: '',\r\n        icon: <ExclamationCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n    });\r\n};\r\n\r\n\r\nexport {\r\n    openSuccessNotification,\r\n    openErrorNotification\r\n}","import React, { useEffect, useState } from 'react';\r\n\r\n\r\n// import hooks\r\nimport { useHandleFetch } from '../../hooks';\r\n\r\n// import components \r\nimport Empty from \"../../components/Empty\";\r\n\r\n\r\n// import libraries \r\nimport { Button, Tag, Input, Spin } from 'antd';\r\nimport {\r\n  PlusOutlined\r\n} from '@ant-design/icons';\r\n\r\n\r\n\r\n\r\nconst { CheckableTag } = Tag;\r\nconst { Search } = Input;\r\n\r\ninterface Props {\r\n  setTagIds?: any;\r\n  selectedTags?: any;\r\n  setSelectedTags?: any;\r\n}\r\n\r\n\r\nconst Tags = ({\r\n  setTagIds,\r\n  setSelectedTags,\r\n  selectedTags\r\n\r\n}: Props) => {\r\n  const [options, setoptions] = useState([]);\r\n  const [selectedOpions, setselectedOptions] = useState([]);\r\n  const [tagState, handleTagListFetch] = useHandleFetch({}, 'tagList');\r\n  const [searchValue, setsearchValue] = useState('');\r\n\r\n\r\n  const handleChange = (tag, checked) => {\r\n    const nextSelectedTags = checked ? [...selectedTags, tag] : selectedTags.filter(t => t !== tag);\r\n    setSelectedTags(nextSelectedTags);\r\n\r\n    if (tagState.done && tagState.data.length > 0 && nextSelectedTags.length > 0) {\r\n      const selectedCategoryIds = nextSelectedTags.map((item) => {\r\n        const selectedcategory = tagState.data.find(\r\n          (cat) => cat.name.toLowerCase() === item.toLowerCase()\r\n        );\r\n        if (selectedcategory) {\r\n          return selectedcategory.id;\r\n        }\r\n      });\r\n      setTagIds(selectedCategoryIds);\r\n    }\r\n  }\r\n\r\n\r\n  useEffect(() => {\r\n    if (tagState.done && tagState.data.length > 0 && selectedTags.length > 0) {\r\n      const selectedCategoryIds = selectedTags.map((item) => {\r\n        const selectedcategory = tagState.data.find(\r\n          (cat) => cat.id === item\r\n        );\r\n        if (selectedcategory) {\r\n          return selectedcategory.name;\r\n        }\r\n      });\r\n      setSelectedTags(selectedCategoryIds);\r\n    }\r\n  }, [tagState]);\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    const setTags = async () => {\r\n      const tagListRes = await handleTagListFetch({\r\n        urlOptions: {\r\n          params: {\r\n            isSubCategory: false\r\n          }\r\n        }\r\n      });\r\n\r\n      // @ts-ignoref\r\n      if (tagListRes && tagListRes.length > 0) {\r\n        // @ts-ignore\r\n        const tagOptions = tagListRes.map((tag) => {\r\n          return tag.name\r\n        });\r\n        setoptions(tagOptions);\r\n      }\r\n\r\n    };\r\n\r\n    setTags();\r\n  }, []);\r\n\r\n\r\n\r\n  // const handleChange = (selectItems) => {\r\n  //   setselectedOptions(selectItems)\r\n\r\n  //   if (tagState.done && tagState.data.length > 0 && selectItems.length > 0) {\r\n  //     const selectedCategoryIds = selectItems.map((item) => {\r\n  //       const selectedcategory = tagState.data.find(\r\n  //         (cat) => cat.name.toLowerCase() === item.toLowerCase()\r\n  //       );\r\n  //       if (selectedcategory) {\r\n  //         return selectedcategory.id;\r\n  //       }\r\n  //     });\r\n  //     setTagIds(selectedCategoryIds);\r\n  //   }\r\n\r\n\r\n  // }\r\n\r\n\r\n  const onSearchChange = (e) => {\r\n    setsearchValue(e.target.value);\r\n\r\n    if (e.target.value === '') {\r\n      if (tagState.data && tagState.data.length > 0) {\r\n        // @ts-ignore\r\n        const categoryNames = tagState.data.map((cat) => cat.name);\r\n        setoptions(categoryNames);\r\n      }\r\n    } else {\r\n      const newOptions =\r\n        options.length > 0\r\n          ? options.filter((option) => {\r\n            return option.toLowerCase().includes(searchValue.toLowerCase());\r\n          })\r\n          : [];\r\n\r\n      setoptions(newOptions);\r\n    }\r\n  };\r\n\r\n\r\n  console.log('selectedTags', selectedTags)\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n\r\n      {tagState.isLoading && (\r\n        <div style={{\r\n          padding: '15px 0',\r\n          width: '100%',\r\n          height: \"100%\",\r\n          display: \"flex\",\r\n          justifyContent: 'center',\r\n          alignItems: 'center'\r\n        }}>\r\n          <Spin />\r\n        </div>\r\n      )}\r\n\r\n\r\n\r\n      {tagState.done && !(tagState.data.length > 0) && (\r\n        <div style={{\r\n          width: '100%',\r\n          height: \"100%\",\r\n          display: \"flex\",\r\n          justifyContent: 'center',\r\n          alignItems: 'center'\r\n        }}>\r\n          <Empty title='No Tag found' height={100} />\r\n        </div>\r\n      )}\r\n\r\n\r\n      {/* \r\n      {tagState.done && tagState.data.length > 0 && options.length > 0 && <Select\r\n        mode=\"multiple\"\r\n        placeholder=\"search tags\"\r\n        value={selectedOpions}\r\n        onChange={handleChange}\r\n        style={{ width: '100%' }}\r\n      >\r\n        {options.filter(o => !selectedOpions.includes(o)).map(item => (\r\n          <Select.Option key={item} value={item}>\r\n            {item}\r\n          </Select.Option>\r\n        ))}\r\n      </Select>} */}\r\n\r\n      {tagState.done && tagState.data.length > 0 && options.length > 0 && (\r\n        <>\r\n          <div className='addProduct__categoryBoxContainer-searchBox'>\r\n            <Search\r\n              width={'90%'}\r\n              style={{\r\n                height: '30px',\r\n                borderRadius: '3px !important',\r\n                borderColor: '#eee !important'\r\n              }}\r\n              size='middle'\r\n              placeholder='top, hot'\r\n              onSearch={(value) => console.log(value)}\r\n              onChange={onSearchChange}\r\n            />\r\n          </div>\r\n\r\n          {options.map(tag => (\r\n            <>\r\n              <CheckableTag\r\n                key={tag}\r\n                checked={selectedTags.indexOf(tag) > -1}\r\n                onChange={checked => handleChange(tag, checked)}\r\n              >\r\n                {tag}\r\n              </CheckableTag>\r\n            </>\r\n          ))}\r\n        </>\r\n      )}\r\n\r\n\r\n\r\n\r\n      {/* \r\n      <div style={{\r\n        marginTop: '15px'\r\n      }}>\r\n\r\n      </div>\r\n      <Button\r\n\r\n        // type=\"primary\"\r\n        className='btnSecondaryPlusOutline'\r\n        icon={<PlusOutlined />}\r\n      >\r\n        Add New\r\n      </Button> */}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Tags\r\n","import React, { useEffect, useState } from 'react';\r\n\r\n\r\n// import hooks\r\nimport { useHandleFetch } from '../../hooks';\r\n\r\n// import components \r\nimport Empty from \"../../components/Empty\";\r\n\r\n\r\n// import libraries \r\nimport { Select, Button, Spin } from 'antd';\r\nimport {\r\n\tPlusOutlined\r\n} from '@ant-design/icons';\r\n\r\n\r\ninterface Props {\r\n\tsetBrandId?: any;\r\n\tbrandId?: any;\r\n\tproductDetailState?: any;\r\n}\r\n\r\nconst { Option } = Select;\r\n\r\nconst Brands = ({ setBrandId, brandId, productDetailState }: Props) => {\r\n\tconst [options, setoptions] = useState([]);\r\n\tconst [selectedBrandId, setSelectedBrandId] = useState('');\r\n\tconst [brandState, handleTagListFetch] = useHandleFetch({}, 'brandList');\r\n\r\n\tfunction onChange(value) {\r\n\t\tsetSelectedBrandId(value);\r\n\t\tsetBrandId(value);\r\n\t\t// console.log(`selected ${value}`);\r\n\t}\r\n\r\n\tfunction onBlur() {\r\n\t\t// console.log('blur');\r\n\t}\r\n\r\n\tfunction onFocus() {\r\n\t\t// console.log('focus');\r\n\t}\r\n\r\n\tfunction onSearch(val) {\r\n\t\t// console.log('search:', val);\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tconst setBrands = async () => {\r\n\t\t\tconst brandListRes = await handleTagListFetch({});\r\n\r\n\t\t\t// @ts-ignore\r\n\t\t\tif (brandListRes && brandListRes.length > 0) {\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\tconst brandOptions = brandListRes.map((brand) => {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tvalue: brand.id,\r\n\t\t\t\t\t\tname: brand.name\r\n\t\t\t\t\t};\r\n\t\t\t\t});\r\n\t\t\t\tsetoptions(brandOptions);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tsetBrands();\r\n\t}, []);\r\n\r\n\treturn (\r\n\t\t<>\r\n\r\n\t\t\t<div></div>\r\n\r\n\t\t\t{brandState.isLoading && (\r\n\t\t\t\t<div style={{\r\n\t\t\t\t\tpadding: '15px 0',\r\n\t\t\t\t\twidth: '100%',\r\n\t\t\t\t\theight: \"100%\",\r\n\t\t\t\t\tdisplay: \"flex\",\r\n\t\t\t\t\tjustifyContent: 'center',\r\n\t\t\t\t\talignItems: 'center'\r\n\t\t\t\t}}>\r\n\t\t\t\t\t<Spin />\r\n\t\t\t\t</div>\r\n\t\t\t)}\r\n\r\n\r\n\r\n\t\t\t{brandState.done && !(brandState.data.length > 0) && (\r\n\t\t\t\t<div style={{\r\n\t\t\t\t\twidth: '100%',\r\n\t\t\t\t\theight: \"100%\",\r\n\t\t\t\t\tdisplay: \"flex\",\r\n\t\t\t\t\tjustifyContent: 'center',\r\n\t\t\t\t\talignItems: 'center'\r\n\t\t\t\t}}>\r\n\t\t\t\t\t<Empty title='No Brand found' height={100} />\r\n\t\t\t\t</div>\r\n\t\t\t)}\r\n\r\n\r\n\t\t\t{brandState.done && brandState.data && brandState.data.length > 0 && options.length > 0 && (\r\n\r\n\t\t\t\t<Select\r\n\t\t\t\t\tshowSearch\r\n\t\t\t\t\tstyle={{ width: '210px', borderRadius: '6px' }}\r\n\t\t\t\t\tplaceholder='Select a Brand'\r\n\t\t\t\t\toptionFilterProp='children'\r\n\t\t\t\t\tonChange={onChange}\r\n\t\t\t\t\tonFocus={onFocus}\r\n\t\t\t\t\tonBlur={onBlur}\r\n\t\t\t\t\tonSearch={onSearch}\r\n\t\t\t\t\tdefaultValue={brandId}\r\n\t\t\t\t\tfilterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n\t\t\t\t>\r\n\t\t\t\t\t{brandState.done &&\r\n\t\t\t\t\t\tbrandState.data.length > 0 &&\r\n\t\t\t\t\t\toptions.map((option) => {\r\n\t\t\t\t\t\t\treturn <Option value={option.value}>{option.name}</Option>;\r\n\t\t\t\t\t\t})}\r\n\t\t\t\t</Select>\r\n\t\t\t)}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\t\t\t{/* \r\n\t\t\t<div style={{\r\n\t\t\t\tmarginTop: '15px'\r\n\t\t\t}}>\r\n\r\n\t\t\t</div>\r\n\t\t\t<Button\r\n\r\n\t\t\t\t// type=\"primary\"\r\n\t\t\t\tclassName='btnSecondaryPlusOutline'\r\n\t\t\t\ticon={<PlusOutlined />}\r\n\t\t\t>\r\n\t\t\t\tAdd New\r\n      </Button> */}\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default Brands;\r\n","import React, { useState, useEffect } from 'react';\r\n\r\n// import components \r\nimport Empty from \"../../components/Empty\";\r\n\r\n// import hoooks\r\nimport { useHandleFetch } from '../../hooks';\r\n\r\n\r\n// import libraries \r\nimport { Input, Tree, Button, Spin } from 'antd';\r\nimport {\r\n\tPlusOutlined\r\n} from '@ant-design/icons';\r\n\r\n\r\nconst { Search } = Input;\r\n\r\n\r\n\r\ninterface Props {\r\n\tsetcategoryIds?: any;\r\n\tcategoryOptions?: any;\r\n\tsetCategoryOptions?: any;\r\n}\r\n\r\n\r\nconst Categories = ({ setcategoryIds, categoryOptions, setCategoryOptions }: Props) => {\r\n\tconst [options, setoptions] = useState([]);\r\n\tconst [searchValue, setsearchValue] = useState('');\r\n\r\n\tconst [categoryState, handleCategoryListFetch] = useHandleFetch({}, 'categorySelectist');\r\n\r\n\tuseEffect(() => {\r\n\t\tconst setCategories = async () => {\r\n\t\t\tconst categoryListRes = await handleCategoryListFetch({});\r\n\r\n\t\t\t// @ts-ignore\r\n\t\t\tif (categoryListRes && categoryListRes.length > 0) {\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\tsetoptions(categoryListRes);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tsetCategories();\r\n\t}, []);\r\n\r\n\tconst onSelect = (selectedKeys, info) => {\r\n\t\t// console.log('selectedKeys', selectedKeys, info);\r\n\t};\r\n\r\n\r\n\tconst onCheck = (checkedKeys, info) => {\r\n\t\tconst checkedIds = checkedKeys.checked || [];\r\n\t\tsetcategoryIds(checkedIds);\r\n\t\tsetCategoryOptions(checkedIds);\r\n\t};\r\n\r\n\tconst onSearchChange = (e) => {\r\n\t\tsetsearchValue(e.target.value);\r\n\r\n\t\tif (e.target.value === '') {\r\n\t\t\tif (categoryState.data && categoryState.data.length > 0) {\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\tconst categoryNames = categoryState.data.map((cat) => cat.name);\r\n\t\t\t\tsetoptions(categoryNames);\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tconst newOptions =\r\n\t\t\t\toptions.length > 0\r\n\t\t\t\t\t? options.filter((option) => {\r\n\t\t\t\t\t\treturn option.toLowerCase().includes(searchValue.toLowerCase());\r\n\t\t\t\t\t})\r\n\t\t\t\t\t: [];\r\n\r\n\t\t\tsetoptions(newOptions);\r\n\t\t}\r\n\t};\r\n\r\n\tconsole.log('categoryState', categoryState);\r\n\tconsole.log('optionsCat', options);\r\n\r\n\r\n\treturn (\r\n\t\t<div className='addProduct__categoryBoxContainer'>\r\n\r\n\t\t\t{categoryState.isLoading && (\r\n\t\t\t\t<div style={{\r\n\t\t\t\t\tpadding: '15px 0',\r\n\t\t\t\t\twidth: '100%',\r\n\t\t\t\t\theight: \"100%\",\r\n\t\t\t\t\tdisplay: \"flex\",\r\n\t\t\t\t\tjustifyContent: 'center',\r\n\t\t\t\t\talignItems: 'center'\r\n\t\t\t\t}}>\r\n\t\t\t\t\t<Spin />\r\n\t\t\t\t</div>\r\n\t\t\t)}\r\n\r\n\r\n\t\t\t{categoryState.done && !(categoryState.data.length > 0) && (\r\n\t\t\t\t<div style={{\r\n\t\t\t\t\twidth: '100%',\r\n\t\t\t\t\theight: \"100%\",\r\n\t\t\t\t\tdisplay: \"flex\",\r\n\t\t\t\t\tjustifyContent: 'center',\r\n\t\t\t\t\talignItems: 'center'\r\n\t\t\t\t}}>\r\n\t\t\t\t\t<Empty title='No category found' height={100} />\r\n\t\t\t\t</div>\r\n\t\t\t)}\r\n\r\n\t\t\t{categoryState.done && categoryState.data.length > 0 && options.length > 0 && (\r\n\t\t\t\t<>\r\n\t\t\t\t\t<div className='addProduct__categoryBoxContainer-searchBox'>\r\n\t\t\t\t\t\t<Search\r\n\t\t\t\t\t\t\twidth={'100%'}\r\n\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\theight: '30px',\r\n\t\t\t\t\t\t\t\tborderRadius: '3px !important',\r\n\t\t\t\t\t\t\t\tborderColor: '#eee !important'\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\tsize='middle'\r\n\t\t\t\t\t\t\tplaceholder='cloths, grocery'\r\n\t\t\t\t\t\t\tonSearch={(value) => console.log(value)}\r\n\t\t\t\t\t\t\tonChange={onSearchChange}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t// marginLeft: \"-20px\",\r\n\t\t\t\t\t}}>\r\n\t\t\t\t\t\t{options.length > 0 && (\r\n\t\t\t\t\t\t\t<Tree\r\n\t\t\t\t\t\t\t\tcheckable\r\n\t\t\t\t\t\t\t\tcheckedKeys={categoryOptions}\r\n\t\t\t\t\t\t\t\tonSelect={onSelect}\r\n\t\t\t\t\t\t\t\tonCheck={onCheck}\r\n\t\t\t\t\t\t\t\ttreeData={options}\r\n\t\t\t\t\t\t\t\tdefaultExpandAll={true}\r\n\t\t\t\t\t\t\t\tcheckStrictly={true}\r\n\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</>\r\n\r\n\t\t\t)}\r\n\t\t\t{/* <div style={{\r\n\t\t\t\tmarginTop: '15px'\r\n\t\t\t}}>\r\n\r\n\t\t\t</div>\r\n\t\t\t<Button\r\n\r\n\t\t\t\t// type=\"primary\"\r\n\t\t\t\tclassName='btnSecondaryPlusOutline'\r\n\t\t\t\ticon={<PlusOutlined />}\r\n\t\t\t>\r\n\t\t\t\tAdd New\r\n      </Button> */}\r\n\r\n\t\t\t{/* <CheckboxGroup options={options} value={checkedList} onChange={onChange} /> */}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Categories;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useHandleFetch } from '../../hooks';\r\nimport { Select, Skeleton } from 'antd';\r\n\r\n\r\ninterface Props {\r\n    setProductIds?: any;\r\n    productIds?: any;\r\n}\r\n\r\n\r\nconst Tags = ({\r\n    setProductIds,\r\n    productIds\r\n}: Props) => {\r\n    const [options, setoptions] = useState([]);\r\n    const [selectedOpions, setselectedOptions] = useState([]);\r\n    const [tagState, handleTagListFetch] = useHandleFetch({}, 'productList');\r\n\r\n    useEffect(() => {\r\n        const setTags = async () => {\r\n            const tagListRes = await handleTagListFetch({\r\n                urlOptions: {\r\n                    params: {\r\n                        isSubCategory: false\r\n                    }\r\n                }\r\n            });\r\n\r\n            // @ts-ignore\r\n            if (tagListRes && tagListRes.length > 0) {\r\n                // @ts-ignore\r\n                const tagOptions = tagListRes.map((tag) => {\r\n                    return tag.name\r\n                });\r\n                setoptions(tagOptions);\r\n            }\r\n\r\n        };\r\n\r\n        setTags();\r\n    }, []);\r\n\r\n\r\n\r\n    const handleChange = (selectItems) => {\r\n        setselectedOptions(selectItems);\r\n\r\n        console.log('selectedProducts', selectItems);\r\n\r\n        if (tagState.done && tagState.data.length > 0 && selectItems.length > 0) {\r\n            const selectedCategoryIds = selectItems.map((item) => {\r\n                const selectedcategory = tagState.data.find(\r\n                    (cat) => cat.name.toLowerCase() === item.toLowerCase()\r\n                );\r\n                if (selectedcategory) {\r\n                    return selectedcategory;\r\n                }\r\n            });\r\n            console.log('selectedCategoryIds', selectedCategoryIds);\r\n            setProductIds(selectedCategoryIds);\r\n        }\r\n        else {\r\n            setProductIds([])\r\n        }\r\n\r\n\r\n    }\r\n\r\n\r\n    // console.log('selectedOpions', selectedOpions);\r\n\r\n\r\n    return (\r\n        <>\r\n\r\n            <Skeleton loading={tagState.isLoading}>\r\n                {tagState.done && tagState.data.length > 0 && <Select\r\n                    mode=\"multiple\"\r\n                    placeholder=\"search products\"\r\n                    value={selectedOpions}\r\n                    onChange={handleChange}\r\n                    style={{ width: '100%' }}\r\n                >\r\n                    {options.filter(o => !selectedOpions.includes(o)).map(item => (\r\n                        <Select.Option key={item} value={item}>\r\n                            {item}\r\n                        </Select.Option>\r\n                    ))}\r\n                </Select>}\r\n            </Skeleton>\r\n\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Tags\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useHandleFetch } from '../../hooks';\r\n\r\n\r\n// import lib \r\n\r\n\r\n\r\n\r\ninterface Props {\r\n    setProductList?: any;\r\n    productList?: any;\r\n    productId?: any;\r\n    quantity?: any;\r\n    item?: any\r\n    variation?: any;\r\n}\r\n\r\nconst CartOverLayCartItem = ({\r\n    productList,\r\n    setProductList,\r\n    productId,\r\n    quantity,\r\n    item,\r\n    variation\r\n}: Props) => {\r\n\r\n\r\n    const [productDetailState, handleProductFetch] = useHandleFetch(\r\n        {},\r\n        'productDetailById'\r\n    );\r\n    const [product, setProduct] = useState({});\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [modifiedPrice, setModifiedPrice] = useState('');\r\n    const [selectedVariationId, setSelectedVariationId] = useState(variation);\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        setIsLoading(true);\r\n        const getAndSetProduct = async () => {\r\n            const product = await handleProductFetch({\r\n                urlOptions: {\r\n                    placeHolders: {\r\n                        id: productId,\r\n                    },\r\n                },\r\n            });\r\n\r\n            // @ts-ignore\r\n            setProduct(product);\r\n            setIsLoading(false);\r\n        };\r\n        getAndSetProduct()\r\n    }, []);\r\n\r\n\r\n\r\n    // useEffect(() => {\r\n    //     const positionInAttribute = () => {\r\n    //         return attributeList.map(item => item.id).indexOf(attribute.id);\r\n    //     }\r\n\r\n    //     const index = positionInAttribute();\r\n\r\n    //     const updatedItem = Object.assign({}, attributeList[index], { ...attributeItem });\r\n    //     const updateProductList = [...attributeList.slice(0, index), updatedItem, ...attributeList.slice(index + 1)];\r\n    //     setProductList(updateProductList);\r\n\r\n    // }, [attributeItem])\r\n\r\n\r\n    const handleAttributeDelete = () => {\r\n\r\n        const updateProductList = productList.filter(item => item._id !== productId);\r\n        setProductList(updateProductList);\r\n    }\r\n\r\n\r\n    const handleChangeQuantity = async (value) => {\r\n        if (value === 'minus') {\r\n            if (quantity === 1) {\r\n                return;\r\n            }\r\n\r\n            const positionInAttribute = () => {\r\n                return productList.map(item => item._id).indexOf(productId);\r\n            }\r\n\r\n            const index = positionInAttribute();\r\n\r\n            const updatedItem = Object.assign({}, productList[index], { ...item, quantity: --quantity });\r\n            const updateAttributeList = [...productList.slice(0, index), updatedItem, ...productList.slice(index + 1)];\r\n            setProductList(updateAttributeList);\r\n\r\n\r\n        } else {\r\n            const positionInAttribute = () => {\r\n                return productList.map(item => item._id).indexOf(productId);\r\n            }\r\n\r\n            const index = positionInAttribute();\r\n\r\n            const updatedItem = Object.assign({}, productList[index], { ...item, quantity: ++quantity });\r\n            const updateAttributeList = [...productList.slice(0, index), updatedItem, ...productList.slice(index + 1)];\r\n            setProductList(updateAttributeList)\r\n\r\n        }\r\n    };\r\n\r\n\r\n    const convertAttributeValuesToStringValue = (attribute) => {\r\n        const value = [];\r\n\r\n        let attributeValues = Object.values(attribute);\r\n        attributeValues.forEach(attributeValue => {\r\n            // @ts-ignore\r\n            value.push(attributeValue)\r\n        })\r\n\r\n        return value.join(',');\r\n    };\r\n\r\n\r\n\r\n\r\n    const getPricingOptions = (pricing) => {\r\n        if (pricing && pricing.length > 0) {\r\n            const pricingOptions = [];\r\n\r\n            pricing.forEach(pricingItem => {\r\n\r\n                if (Object.values(pricingItem.attribute).length > 0 && pricingItem._id) {\r\n                    let pricingOption = {\r\n                        value: pricingItem._id,\r\n                        label: `${convertAttributeValuesToStringValue(pricingItem.attribute) || ''}`\r\n                    }\r\n                    // @ts-ignore\r\n                    pricingOptions.push(pricingOption)\r\n                }\r\n\r\n            })\r\n\r\n            return pricingOptions;\r\n        }\r\n        else return false\r\n    };\r\n\r\n    const pricingOptions = item && Object.keys(item).length > 0 ? getPricingOptions(item.pricing) : [];\r\n\r\n\r\n    console.log('pricingOptions', pricingOptions);\r\n\r\n    const handleAttributeChange = (tagId) => {\r\n        setSelectedVariationId(tagId);\r\n\r\n        const positionInAttribute = () => {\r\n            return productList.map(item => item._id).indexOf(productId);\r\n        }\r\n\r\n        const index = positionInAttribute();\r\n\r\n        const updatedItem = Object.assign({}, productList[index], { ...item, quantity: 1 });\r\n        const updateAttributeList = [...productList.slice(0, index), updatedItem, ...productList.slice(index + 1)];\r\n        setProductList(updateAttributeList);\r\n\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        const getPriceByVariationId = (id) => {\r\n            const pricing = item && Object.keys(item).length > 0 ? item.pricing : false;\r\n            if (pricing) {\r\n                const priceItem = pricing.find(pricingItem => pricingItem._id === id);\r\n                console.log('priceItem', id);\r\n\r\n                if (priceItem && priceItem.price.regular) {\r\n                    return priceItem.price.offer\r\n                        && parseInt(priceItem.price.offer)\r\n                        ? priceItem.price.offer : priceItem.price.regular\r\n                }\r\n                else return false;\r\n            }\r\n        }\r\n\r\n        if (selectedVariationId) {\r\n            const price = getPriceByVariationId(selectedVariationId);\r\n            setModifiedPrice(price);\r\n        }\r\n\r\n    }, [selectedVariationId]);\r\n\r\n\r\n\r\n    console.log('modifiedPrice', modifiedPrice);\r\n    return (\r\n        <>\r\n\r\n            {item && Object.keys(item).length > 0 && (\r\n                <div className='cart-item' key={''}>\r\n                    <div className='cart-item-quantityCounter'>\r\n                        <i\r\n                            onClick={() => {\r\n                                handleChangeQuantity('plus');\r\n                            }}\r\n                            className='fa fa-chevron-up'\r\n\r\n                        ></i>\r\n                        <p className='item-amount'>{quantity}</p>\r\n                        <i\r\n                            onClick={() => {\r\n                                handleChangeQuantity('minus');\r\n                            }}\r\n                            className='fa fa-chevron-down'\r\n\r\n                        ></i>\r\n                    </div>\r\n\r\n\r\n                    <img\r\n\r\n                        src={item['cover'] && item['cover']}\r\n                        alt='Img'\r\n                        style={{\r\n                            cursor: 'pointer',\r\n                        }}\r\n                    />\r\n                    <div className='cart-item-info'>\r\n                        <h4\r\n\r\n                        >\r\n                            {item['name']}\r\n                        </h4>\r\n                        <h5\r\n                        >\r\n                            {modifiedPrice || item['price']}\r\n                        </h5>\r\n\r\n\r\n                        {pricingOptions && pricingOptions.length > 0 && pricingOptions.map(tag => (\r\n                            <>\r\n                                <span\r\n                                    onClick={() => handleAttributeChange(tag.value)}\r\n                                    className={selectedVariationId === tag.value ? 'product-attributeTag product-attributeTag-active' : 'product-attributeTag'}>\r\n                                    {tag.label}\r\n                                </span>\r\n                            </>\r\n                        ))}\r\n\r\n                        {/* <span\r\n             style={{\r\n               display: 'inline-block',\r\n               background: '#fafafa',\r\n               padding: '3px 3px',\r\n               borderRadius: 1,\r\n               fontSize: '12px',\r\n               marginRight: '5px',\r\n               color: '#777',\r\n               marginTop: '5px'\r\n             }}\r\n           >\r\n             15KG\r\n             </span> */}\r\n\r\n                    </div>\r\n                    {/* <span\r\n                        onClick={handleAttributeDelete}\r\n                        className='remove-item' >\r\n                        <i className='fa fa-times'></i>\r\n                    </span> */}\r\n\r\n                </div>\r\n            )}\r\n        </>\r\n    );\r\n};\r\n\r\n// @ts-ignore\r\nexport default CartOverLayCartItem;\r\n","import React from 'react'\r\n\r\n\r\n// import components\r\nimport AddNewOrderProductItem from \"../order/AddNewOrderProductItem\";\r\nimport Empty from \"../../components/Empty\";\r\n\r\nimport {\r\n    ShopOutlined\r\n} from '@ant-design/icons';\r\n\r\n\r\ninterface Props {\r\n    productList?: any;\r\n    setProductList?: any;\r\n}\r\n\r\nconst AddNewOrderSummary = ({\r\n    setProductList,\r\n    productList\r\n}: Props) => {\r\n    return (\r\n        <div\r\n            style={{\r\n                // @ts-ignore\r\n                flexDirection: 'flex'\r\n            }}\r\n            className='addOrderContainer__container-orderSummary'>\r\n            <div className='addOrderContainer__container-productItemContainer'>\r\n                {productList && productList.length > 0 && productList.map(item => {\r\n                    return <AddNewOrderProductItem\r\n                        setProductList={setProductList}\r\n                        productList={productList}\r\n                        productId={item._id}\r\n                        quantity={item.quantity}\r\n                        item={item}\r\n                        variation={item.variation}\r\n                    />;\r\n                })}\r\n\r\n                {!(productList.length > 0) && (\r\n                    <div style={{\r\n                        marginLeft: '32px'\r\n                    }}>\r\n                        <Empty title='No Product Added' height={150} />\r\n                    </div>\r\n                )}\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddNewOrderSummary\r\n","import React, { useState, useEffect } from 'react';\r\n\r\n// import hooks \r\nimport { useHandleFetch } from '../../hooks';\r\n\r\n\r\n// import libraries \r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { message, Tooltip, Modal, Tabs, Empty, Badge } from 'antd';\r\nimport CKEditor from '@ckeditor/ckeditor5-react';\r\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\r\n\r\n\r\nimport {\r\n    DeleteOutlined,\r\n    FileAddOutlined,\r\n    CheckCircleOutlined,\r\n    FileImageFilled,\r\n    FileImageOutlined,\r\n    FileImageTwoTone,\r\n    PlusOutlined,\r\n    PlusCircleOutlined,\r\n    CloseOutlined,\r\n    CheckOutlined,\r\n    InfoCircleOutlined\r\n} from '@ant-design/icons';\r\n\r\n// import ReactQuill from 'react-quill';\r\n// import 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport InputSmall from '../../components/Field/InputSmall';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport MediaLibrary from \"../../components/MediaLibrary\";\r\nimport DatePicker from \"../../components/Field/DatePicker\";\r\nimport { openSuccessNotification, openErrorNotification } from \"../../components/Notification\";\r\nimport Tags from \"../product/Tags\";\r\nimport Brands from \"../product/Brands\";\r\nimport Categories from \"../product/Categories\";\r\nimport Pricing from \"../product/Pricing\";\r\nimport SelectProducts from \"./SelectProducts\";\r\nimport SelectedProductItems from \"./SelectedProductItems\";\r\n\r\nconst { TabPane } = Tabs;\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    name: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\n\r\nconst initialValues = {\r\n    name: \"\",\r\n    bundlePrice: null,\r\n    startDate: \"\",\r\n    endDate: \"\",\r\n    description: ''\r\n}\r\n\r\n\r\n\r\ninterface Props {\r\n    addNewCategoryVisible: any;\r\n    setAddNewCategoryVisible: any;\r\n    productList?: any;\r\n    setProductList?: any;\r\n}\r\n\r\nconst AddNewProduct = ({ addNewCategoryVisible, setAddNewCategoryVisible, productList: bundleList, setProductList: setBundleList }: Props) => {\r\n\r\n    const [addProductState, handleAddProductFetch] = useHandleFetch({}, 'addBundle');\r\n    const [visible, setvisible] = useState(false);\r\n    const [myImages, setmyImages] = useState(false);\r\n    const [myThumbnailImage, setmyThumbnailImage] = useState(false);\r\n    const [isModalOpenForThumbnail, setisModalOpenForThumbnail] = useState(false);\r\n    const [isModalOpenForImages, setisModalOpenForImages] = useState(false);\r\n    const [categoryids, setcategoryIds] = useState([]);\r\n    const [tagIds, setTagIds] = useState([]);\r\n    const [brandId, setBrandId] = useState('');\r\n    const [pricing, setPricing] = useState([]);\r\n    const [coverImageId, setCoverImageId] = useState('');\r\n    const [categoryOptions, setCategoryOptions] = useState([]);\r\n    const [selectedTags, setSelectedTags] = useState([]);\r\n    const [date, setDateFeild] = useState('');\r\n    const [time, setTimeFeild] = useState('');\r\n    const [description, setDescription] = useState('');\r\n    const [productIds, setProductIds] = useState([]);\r\n    const [productList, setProductList] = useState([]);\r\n\r\n\r\n    const [price, setPrice] = useState({\r\n        regular: null,\r\n        offer: null,\r\n    });\r\n\r\n\r\n    const makeEmptyCategoryOptions = (setEmpty) => {\r\n        setEmpty([]);\r\n    }\r\n\r\n    const handleSubmit = async (values: any, actions: any) => {\r\n        // @ts-ignore\r\n        const imagesIds = myImages ? myImages.map(image => {\r\n            return image.id;\r\n        }) : [];\r\n\r\n        const products = productList.length > 0 ? productList.map(product => {\r\n            return {\r\n                _id: product._id,\r\n                variation: product.variation,\r\n                quantity: product.quantity,\r\n            }\r\n        }) : [];\r\n\r\n\r\n        const addProductRes = await handleAddProductFetch({\r\n            body: {\r\n                name: values.name.trim(),\r\n                category: categoryids,\r\n                tags: tagIds,\r\n                brand: [brandId],\r\n                price: price,\r\n                description: description,\r\n                model: values.model,\r\n                unit: values.unit,\r\n                image: imagesIds,\r\n                products\r\n            }\r\n        });\r\n\r\n\r\n        // @ts-ignore\r\n        if (addProductRes && addProductRes.status === 'ok') {\r\n            openSuccessNotification('Bundle Created');\r\n\r\n            setBundleList([...bundleList, {\r\n                id: addProductRes['id'] || '',\r\n                key: addProductRes['id'] || '',\r\n                name: addProductRes['name'] || '',\r\n                description: addProductRes['description'] || '',\r\n                // @ts-ignore\r\n                ...addProductRes\r\n            }])\r\n            setAddNewCategoryVisible(false)\r\n            // @ts-ignore\r\n            setmyImages([]);\r\n            setCoverImageId('');\r\n            setPricing([]);\r\n            setTagIds([]);\r\n            setSelectedTags([]);\r\n            setBrandId(\"\");\r\n            setcategoryIds([]);\r\n            setCategoryOptions([]);\r\n            actions.resetForm();\r\n        }\r\n        else {\r\n            // openErrorNotification();\r\n        }\r\n\r\n        actions.setSubmitting(false);\r\n\r\n\r\n    };\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        if (!addProductState['isLoading']) {\r\n            const error = addProductState['error'];\r\n            if (error['isError'] && Object.keys(error['error']).length > 0) {\r\n\r\n\r\n                const errors =\r\n                    Object.values(error['error']).length > 0\r\n                        ? Object.values(error['error'])\r\n                        : [];\r\n                errors.forEach((err, i) => {\r\n                    if (typeof err === 'string') {\r\n                        openErrorNotification(err)\r\n                    }\r\n                    else if (typeof err === 'object') {\r\n                        if (err && Object.keys(err).length > 0) {\r\n                            const errs = Object.values(err);\r\n                            errs.forEach(err => {\r\n                                openErrorNotification(err)\r\n                            })\r\n\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n        }\r\n    }, [addProductState])\r\n\r\n\r\n\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        if (productIds.length > 0) {\r\n            if (productIds.length > productList.length) {\r\n                const variation = productIds[productIds.length - 1]['pricing'].length > 0 && productIds[productIds.length - 1]['pricing'][0]['_id'];\r\n                console.log('variation', variation)\r\n\r\n                setProductList([...productList, {\r\n                    ...productIds[productIds.length - 1],\r\n                    _id: productIds[productIds.length - 1]['id'],\r\n                    variation: variation,\r\n                    quantity: 1\r\n                }]);\r\n            }\r\n\r\n\r\n            else if (productIds.length < productList.length) {\r\n                console.log('productIds', productIds);\r\n                console.log('productList', productList);\r\n\r\n                const newProductList = productList.filter(item => {\r\n                    let isTrue = false;\r\n                    productIds.forEach(product => {\r\n                        if (product.id === item._id) {\r\n                            isTrue = true;\r\n                        }\r\n                    });\r\n                    return isTrue;\r\n                })\r\n                setProductList(newProductList);\r\n\r\n            }\r\n\r\n        }\r\n        else {\r\n            setProductList([]);\r\n        }\r\n        // console.log('productIds', productIds)\r\n\r\n\r\n    }, [productIds])\r\n\r\n\r\n\r\n\r\n\r\n\r\n    const handleCancel = (e: any) => {\r\n        setAddNewCategoryVisible(false);\r\n    };\r\n\r\n\r\n    const getisSubmitButtonDisabled = (values, isValid) => {\r\n        if (!values.name || !(pricing.length > 0) || !isValid) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n\r\n    const handleImagesDelete = (id) => {\r\n        // @ts-ignore\r\n        const newImages = myImages && myImages.filter(image => {\r\n            return image.id !== id;\r\n        })\r\n\r\n        setmyImages(newImages);\r\n    }\r\n\r\n    const handleDeleteFromSelectedImage = () => {\r\n\r\n    };\r\n\r\n    const handleThumbnailImageDelete = (id) => {\r\n        // @ts-ignore\r\n        const newImages = myThumbnailImage && myThumbnailImage.filter(image => {\r\n            return image.id !== id;\r\n        })\r\n\r\n        if (newImages.length > 0) {\r\n            setmyThumbnailImage(newImages);\r\n\r\n        }\r\n        else setmyThumbnailImage(false);\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    const handleAddPricing = (priceItem) => {\r\n        setPricing([{\r\n            ...priceItem,\r\n            id: pricing.length\r\n        }, ...pricing])\r\n        message.info('Product Pricing Added');\r\n    }\r\n\r\n\r\n    const handleDeletePricing = (id) => {\r\n        const newPricing = pricing.filter(item => item.id !== id);\r\n        setPricing(newPricing);\r\n        message.info('Product Pricing Deleted');\r\n    }\r\n\r\n\r\n\r\n    const isCategoryInValid = () => {\r\n        if (addProductState.error['error']['category'] && !categoryids && categoryids.length) {\r\n            return true;\r\n        }\r\n        else if (categoryids && categoryids.length > 0) {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    const handleDateChange = (date, dateString) => {\r\n        setDateFeild(dateString);\r\n        // console.log('date', date, dateString);\r\n    }\r\n\r\n    const handleTimeChange = (date, dateString) => {\r\n        setTimeFeild(dateString);\r\n        // console.log('date', date, dateString);\r\n    }\r\n\r\n\r\n\r\n\r\n    return (\r\n        <Formik\r\n            onSubmit={(values, actions) => handleSubmit(values, actions)}\r\n            validationSchema={validationSchema}\r\n            validateOnBlur={false}\r\n            enableReinitialize={true}\r\n            initialValues={\r\n                { ...initialValues }\r\n            }\r\n        >\r\n            {({\r\n                handleChange,\r\n                values,\r\n                handleSubmit,\r\n                errors,\r\n                isValid,\r\n                isSubmitting,\r\n                touched,\r\n                handleBlur,\r\n                setFieldTouched,\r\n                handleReset,\r\n            }) => (\r\n                    <>\r\n                        <Modal\r\n                            style={{\r\n                                top: '40px',\r\n\r\n                            }}\r\n                            bodyStyle={{\r\n                                margin: 0,\r\n                                padding: 0,\r\n                            }}\r\n                            width={'70vw'}\r\n                            title=\"Add New Bundle\"\r\n                            visible={addNewCategoryVisible}\r\n                            onOk={(e: any) => handleSubmit(e)}\r\n                            onCancel={handleCancel}\r\n                            okText='Create'\r\n                            okButtonProps={{\r\n                                loading: isSubmitting,\r\n                                htmlType: \"submit\",\r\n                            }}\r\n                        >\r\n\r\n\r\n                            <section className='addProductGridContainer'>\r\n                                <div className='addProductGridContainer__left'>\r\n                                    <div className='addProductGridContainer__name'>\r\n                                        <div className='addProductGridContainer__item-header'>\r\n                                            <h3>\r\n                                                Bundle Information\r\n\t\t\t                                </h3>\r\n\r\n                                            <div className={values.name && values.name.length > 2 ? 'checkicon-active' : 'checkicon'}>\r\n                                                <CheckCircleOutlined />\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className='addProductGridContainer__item-body'>\r\n                                            <Input\r\n                                                label='Title'\r\n                                                value={values.name}\r\n                                                name='name'\r\n                                                isError={(touched.name && errors.name) ||\r\n                                                    (!isSubmitting && addProductState.error['error']['name'])}\r\n\r\n                                                errorString={(touched.name && errors.name) ||\r\n                                                    (!isSubmitting && addProductState.error['error']['name'])}\r\n                                                onChange={(e: any) => {\r\n                                                    handleChange(e);\r\n                                                    setFieldTouched('name');\r\n                                                }}\r\n                                            />\r\n\r\n                                            <h3 className='inputFieldLabel'>\r\n                                                Description\r\n                                            </h3>\r\n\r\n                                            <div style={{\r\n                                                width: '100%',\r\n                                                maxWidth: '100%'\r\n                                            }}>\r\n                                                <CKEditor\r\n                                                    editor={ClassicEditor}\r\n                                                    data={description}\r\n                                                    onInit={editor => {\r\n                                                        // You can store the \"editor\" and use when it is needed.\r\n                                                        console.log('Editor is ready to use!', editor);\r\n                                                    }}\r\n                                                    onChange={(event, editor) => {\r\n                                                        const data = editor.getData();\r\n                                                        setDescription(data);\r\n                                                    }}\r\n                                                    onBlur={(event, editor) => {\r\n                                                        console.log('Blur.', editor);\r\n                                                    }}\r\n                                                    onFocus={(event, editor) => {\r\n                                                        console.log('Focus.', editor);\r\n                                                    }}\r\n                                                />\r\n                                            </div>\r\n\r\n                                            {/* <div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\tdisplay: 'flex',\r\n\t\t\t\t\t\t\t\t\t\t\t\tjustifyContent: 'space-between'\r\n\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\twidth: '48%',\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<DatePicker\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabel='Date'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={handleDateChange} />\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\twidth: '48%'\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<DatePicker\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tdate={date}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\twithTime={true}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder='Select time'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabel='Time'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={handleTimeChange} />\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t</div> */}\r\n                                            <div style={{\r\n                                                marginBottom: '15px'\r\n                                            }}></div>\r\n                                            {/* \r\n\t\t\t\t\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\t\t\t\t\trows={1}\r\n\t\t\t\t\t\t\t\t\t\t\t\tlabel='Venue'\r\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.venue}\r\n\t\t\t\t\t\t\t\t\t\t\t\tname='venue'\r\n\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.venue && errors.venue) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['venue'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.venue && errors.venue) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['venue'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('venue');\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\t\tlabel='Purchase Limit'\r\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.purchaseLimit}\r\n\t\t\t\t\t\t\t\t\t\t\t\ttype='number'\r\n\t\t\t\t\t\t\t\t\t\t\t\tname='purchaseLimit'\r\n\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.purchaseLimit && errors.purchaseLimit) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['purchaseLimit'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.purchaseLimit && errors.purchaseLimit) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['purchaseLimit'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('purchaseLimit');\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t/> */}\r\n\r\n                                            <div className='addProductGridContainer__item-body-variationCard-item'>\r\n                                                <h4>\r\n                                                    Price\r\n\t\t\t                                \t</h4>\r\n                                                <div className='addProductGridContainer__item-body-variationCard-item-container'>\r\n                                                    <div className='addProductGridContainer__item-body-variationCard-item-container-left'>\r\n                                                        <InputSmall\r\n                                                            label='Regular'\r\n                                                            value={price.regular}\r\n                                                            name='regular'\r\n                                                            onChange={(e) => setPrice({\r\n                                                                ...price,\r\n                                                                regular: e.target.value\r\n                                                            })}\r\n                                                        />\r\n\r\n\r\n                                                    </div>\r\n                                                    <div className='addProductGridContainer__item-body-variationCard-item-container-right'>\r\n\r\n                                                        <InputSmall\r\n                                                            label='Offer'\r\n                                                            value={price.offer}\r\n                                                            name='offer'\r\n                                                            onChange={(e) => setPrice({\r\n                                                                ...price,\r\n                                                                offer: e.target.value\r\n                                                            })}\r\n                                                        />\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n\r\n\r\n\r\n                                            <div style={{\r\n                                                display: 'flex',\r\n                                                justifyContent: 'space-between'\r\n                                            }}>\r\n                                                <div style={{\r\n                                                    width: '48%',\r\n                                                }}>\r\n                                                    <DatePicker\r\n                                                        date={date}\r\n                                                        withTime={true}\r\n                                                        label='Start Time'\r\n                                                        onChange={handleDateChange} />\r\n\r\n                                                </div>\r\n                                                <div style={{\r\n                                                    width: '48%'\r\n                                                }}>\r\n\r\n                                                    <DatePicker\r\n                                                        date={date}\r\n                                                        withTime={true}\r\n                                                        placeholder='Select time'\r\n                                                        label='End Time'\r\n                                                        onChange={handleTimeChange} />\r\n\r\n                                                </div>\r\n                                            </div>\r\n\r\n\r\n                                        </div>\r\n\r\n\r\n\r\n                                    </div>\r\n\r\n                                    <div className='addProductGridContainer__price'>\r\n                                        <div className='addProductGridContainer__item-header'>\r\n                                            <h3>\r\n                                                Products\r\n\t\t                                    </h3>\r\n\r\n                                            <div className={pricing && pricing.length > 0 ? 'checkicon-active' : 'checkicon'}>\r\n                                                <CheckCircleOutlined />\r\n                                            </div>\r\n                                        </div>\r\n\r\n\r\n                                        <div className='addProductGridContainer__item-body'>\r\n\r\n                                            <h3 className='inputFieldLabel'>\r\n                                                Products\r\n                                            </h3>\r\n                                            <SelectProducts\r\n                                                setProductIds={setProductIds}\r\n                                                productIds={productIds}\r\n                                            />\r\n\r\n                                            <div style={{\r\n                                                marginTop: \"15px\"\r\n                                            }}></div>\r\n\r\n                                            <h3 className='inputFieldLabel'>\r\n                                                Selcted Products\r\n                                            </h3>\r\n\r\n                                            <SelectedProductItems\r\n                                                productList={productList}\r\n                                                setProductList={setProductList}\r\n                                            />\r\n                                        </div>\r\n                                    </div>\r\n\r\n\r\n\r\n\r\n                                    <div className='addProductGridContainer__image'>\r\n\r\n                                        <div className='addProductGridContainer__item-header'>\r\n                                            <h3>\r\n                                                Image\r\n</h3>\r\n\r\n                                            <Tooltip\r\n                                                placement=\"left\" title={'Click on the image to select cover image, By default 1st image is selected as cover'}>\r\n                                                <a href='###'>\r\n                                                    <InfoCircleOutlined />\r\n                                                </a>\r\n                                            </Tooltip>\r\n                                        </div>\r\n                                        <div className='addProductGridContainer__item-body'>\r\n\r\n\r\n\r\n                                            <div className='aboutToUploadImagesContainer'>\r\n                                                {myImages &&\r\n                                                    // @ts-ignore\r\n                                                    myImages.length > 0 && myImages.map((image, index) => {\r\n                                                        return (\r\n                                                            <div className='aboutToUploadImagesContainer__item'>\r\n                                                                <div\r\n                                                                    className='aboutToUploadImagesContainer__item-imgContainer'\r\n                                                                    onClick={() => setCoverImageId(image.id)}\r\n                                                                >\r\n                                                                    <img src={image.cover} alt={image.alt} />\r\n                                                                </div>\r\n\r\n                                                                <span\r\n                                                                    onClick={() => handleImagesDelete(image.id)}\r\n                                                                    className='aboutToUploadImagesContainer__item-remove'>\r\n                                                                    <CloseOutlined />\r\n                                                                </span>\r\n\r\n\r\n                                                                {coverImageId === image.id ? (\r\n                                                                    <span className='aboutToUploadImagesContainer__item-cover'>\r\n                                                                        <CheckOutlined />\r\n                                                                    </span>\r\n                                                                ) : !coverImageId && index === 0 && (\r\n                                                                    <span className='aboutToUploadImagesContainer__item-cover'>\r\n                                                                        <CheckOutlined />\r\n                                                                    </span>\r\n                                                                )}\r\n                                                            </div>\r\n                                                        )\r\n                                                    })}\r\n\r\n\r\n                                                <Tooltip\r\n                                                    title={'Attach images'}>\r\n\r\n                                                    <div\r\n                                                        onClick={() => {\r\n                                                            setvisible(true);\r\n                                                            setisModalOpenForImages(true);\r\n                                                            setisModalOpenForThumbnail(false);\r\n                                                        }}\r\n                                                        className='aboutToUploadImagesContainer__uploadItem'>\r\n                                                        {/* <FileAddOutlined />\r\n            <FileImageTwoTone />\r\n            <FileImageOutlined /> */}\r\n                                                        <FileImageFilled />\r\n                                                        {/* <h5>\r\n             Select From Library\r\n    <     /h5> */}\r\n                                                        <span className='aboutToUploadImagesContainer__uploadItem-plus'>\r\n                                                            <PlusOutlined />\r\n                                                        </span>\r\n                                                    </div>\r\n                                                </Tooltip>\r\n\r\n\r\n\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n\r\n\r\n                                </div>\r\n                                <div className='addProductGridContainer__right'>\r\n                                    <div className='addProductGridContainer__category'>\r\n\r\n                                        <div className='addProductGridContainer-rightItemContainer'>\r\n                                            <div className='addProductGridContainer-rightItemContainer-header'>\r\n                                                <h3>\r\n                                                    Categories\r\n\t\t\t\t</h3>\r\n\r\n                                                <Tooltip\r\n                                                    color='red'\r\n                                                    visible={addProductState.error['error']['category'] && !(categoryids.length > 0)}\r\n                                                    placement=\"left\" title={'Select at least one category'}>\r\n                                                    <div className={!(categoryids.length > 0)\r\n                                                        && !addProductState.error['error']['category'] ? 'checkicon' : addProductState.error['error']['category'] ? 'checkicon-error' : 'checkicon-active'}>\r\n                                                        <CheckCircleOutlined />\r\n                                                    </div>\r\n                                                </Tooltip>\r\n\r\n                                            </div>\r\n                                            <div className='addProductGridContainer-rightItemContainer-body'>\r\n                                                <Categories\r\n                                                    setCategoryOptions={setCategoryOptions}\r\n                                                    categoryOptions={categoryOptions}\r\n                                                    setcategoryIds={setcategoryIds} />\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                    </div>\r\n\r\n                                    <div className='addProductGridContainer__tag'>\r\n                                        <div className='addProductGridContainer-rightItemContainer'>\r\n                                            <div className='addProductGridContainer-rightItemContainer-header'>\r\n                                                <h3>\r\n                                                    Tags\r\n\t\t\t\t</h3>\r\n                                            </div>\r\n                                            <div className='addProductGridContainer-rightItemContainer-body'>\r\n                                                <Tags\r\n                                                    setSelectedTags={setSelectedTags}\r\n                                                    selectedTags={selectedTags}\r\n                                                    setTagIds={setTagIds} />\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                    </div>\r\n                                    <div className='addProductGridContainer__brand'>\r\n                                        <div className='addProductGridContainer-rightItemContainer'>\r\n                                            <div className='addProductGridContainer-rightItemContainer-header'>\r\n                                                <h3>\r\n                                                    Brand\r\n\t\t\t\t</h3>\r\n                                            </div>\r\n                                            <div className='addProductGridContainer-rightItemContainer-body'>\r\n                                                <Brands setBrandId={setBrandId} />\r\n                                            </div>\r\n                                        </div>\r\n\r\n\r\n                                    </div>\r\n\r\n                                </div>\r\n                            </section>\r\n\r\n\r\n                        </Modal>\r\n\r\n                        <MediaLibrary\r\n                            setvisible={setvisible}\r\n                            visible={visible}\r\n                            setmyImages={setmyImages}\r\n                            myImages={myImages}\r\n                            setmyThumbnailImage={setmyThumbnailImage}\r\n                            isModalOpenForThumbnail={isModalOpenForThumbnail}\r\n                            isModalOpenForImages={isModalOpenForImages}\r\n\r\n                        />\r\n                    </>\r\n                )}\r\n        </Formik>\r\n\r\n\r\n\r\n\r\n    );\r\n};\r\n\r\nexport default AddNewProduct;\r\n\r\n\r\n\r\n\r\n/*\r\n\r\n\r\nProduct variation ---->\r\n\r\nPrice [title]\r\n\t[regular input field] [offer inputfield]\r\n\r\nStock [title]\r\n\t[available input field] [minimum inputfield]\r\n\r\ndefault [default can be set to true]\r\n\r\nattributes [title]\r\n\t[add attributes name]\r\n\t\t[add attrubutes value]\r\n\r\n\t[add attributes name]\r\n\t\t[add attrubutes value\r\n\r\n*///","import React, { useState, useEffect } from 'react';\r\n\r\n// import third party ui lib\r\nimport { Empty, Popconfirm, Upload, message, Switch, Select, Button, notification, Table, Space, Input as CoolInput, Tooltip, Modal } from 'antd';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { useHistory } from 'react-router';\r\nimport Moment from 'react-moment';\r\n\r\n\r\n\r\nimport {\r\n    FileOutlined,\r\n    InboxOutlined,\r\n    RadiusUpleftOutlined,\r\n    RadiusUprightOutlined,\r\n    RadiusBottomleftOutlined,\r\n    RadiusBottomrightOutlined,\r\n    PlusOutlined,\r\n    DeleteOutlined,\r\n    EditOutlined,\r\n    CheckCircleOutlined\r\n} from '@ant-design/icons';\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n\r\n\r\n/// import hooks\r\nimport { useFetch, useHandleFetch } from \"../../hooks\";\r\n\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport { DataTableSkeleton } from \"../../components/Placeholders\";\r\nimport ProductBundleQuickEdit from \"./ProductBundleQuickEdit\"\r\nimport AddNewProductBundle from \"./AddNewProductBundle\"\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Bundle Created',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n    notification.error({\r\n        message: message || 'Something Went Wrong',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n    });\r\n};\r\n\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    name: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\n\r\nconst initialValues = {\r\n    name: '',\r\n    description: ''\r\n}\r\n\r\n\r\nconst { Column, ColumnGroup } = Table;\r\nconst { Search } = CoolInput;\r\n\r\n\r\n\r\nconst MyTable = ({ data, setTagList }) => {\r\n    const [visible, setvisible] = useState(false);\r\n    const [activeCategoryForEdit, setactiveCategoryForEdit] = useState(false);\r\n    const [deleteTagState, handleDeleteTagFetch] = useHandleFetch({}, 'deleteBundle');\r\n\r\n    const history = useHistory();\r\n\r\n\r\n    const handleDeleteTag = async (id) => {\r\n        const deleteTagRes = await handleDeleteTagFetch({\r\n            urlOptions: {\r\n                placeHolders: {\r\n                    id,\r\n                }\r\n            }\r\n        });\r\n\r\n\r\n\r\n        // @ts-ignore\r\n        if (deleteTagRes && deleteTagRes.status === 'ok') {\r\n            openSuccessNotification('Deleted Bundle');\r\n            const newtagList = data.filter(item => item.id !== id);\r\n            setTagList(newtagList);\r\n        }\r\n\r\n\r\n    }\r\n\r\n\r\n    const handleOk = (e: any) => {\r\n        setvisible(false);\r\n\r\n    };\r\n\r\n    const handleCancel = (e: any) => {\r\n        setvisible(false);\r\n    };\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <Table\r\n                // expandable={{\r\n                //     expandedRowRender: record => <p style={{ margin: 0 }}>{record.name}</p>,\r\n                //     rowExpandable: record => record.name !== 'Not Expandable',\r\n                //   }}\r\n                // bordered={true}\r\n                size='small'\r\n                // pagination={false}\r\n                dataSource={data}\r\n            >\r\n\r\n                <Column\r\n                    title=\"\"\r\n                    dataIndex=\"cover\"\r\n                    key=\"id\"\r\n                    width={'80px'}\r\n\r\n                    className='classnameofthecolumn'\r\n\r\n                    render={(cover, record: any) => (\r\n                        <>\r\n                            <img\r\n                                onClick={() => {\r\n                                    history.push(`/admin/bundle/${record.id}`)\r\n                                    setactiveCategoryForEdit(record)\r\n                                }}\r\n                                src={cover} alt='cover img' style={{\r\n                                    height: '40px',\r\n                                    width: '40px',\r\n                                    objectFit: \"contain\",\r\n                                    borderRadius: '3px',\r\n                                    cursor: 'pointer'\r\n                                }} />\r\n                        </>\r\n                    )}\r\n                />\r\n\r\n                <Column\r\n                    title=\"Name\"\r\n                    dataIndex=\"name\"\r\n                    key=\"id\"\r\n                    className='classnameofthecolumn'\r\n                    render={(text, record: any) => (\r\n                        <>\r\n\r\n                            <h4\r\n                                onClick={() => {\r\n                                    history.push(`/admin/bundle/${record.id}`)\r\n                                    // setBrandDetailVisible(true);\r\n                                    setactiveCategoryForEdit(record)\r\n                                }}\r\n                                style={{\r\n                                    fontWeight: 400,\r\n                                    color: '#555',\r\n                                    cursor: 'pointer'\r\n                                }}>\r\n                                {text}\r\n                            </h4>\r\n\r\n\r\n                        </>\r\n                    )}\r\n                />\r\n\r\n                <Column\r\n                    title=\"Price\"\r\n                    dataIndex=\"price\"\r\n                    key=\"id\"\r\n                    className='classnameofthecolumn'\r\n\r\n                />\r\n\r\n\r\n                <Column\r\n                    title=\"Product\"\r\n                    dataIndex=\"productCount\"\r\n                    key=\"id\"\r\n                    className='classnameofthecolumn'\r\n                />\r\n\r\n                <Column\r\n                    title=\"Start Date\"\r\n                    dataIndex=\"startDate\"\r\n                    key=\"id\"\r\n                    className='classnameofthecolumn'\r\n                    render={(text, record: any) => (\r\n                        <>\r\n                            <h4\r\n                                style={{\r\n                                    fontWeight: 400,\r\n                                    color: '#555',\r\n                                    cursor: 'pointer'\r\n                                }}>\r\n                                <Moment >\r\n                                    {text}\r\n                                </Moment>\r\n\r\n                            </h4>\r\n                        </>\r\n                    )}\r\n\r\n                />\r\n\r\n                <Column\r\n                    title=\"End Date\"\r\n                    dataIndex=\"endDate\"\r\n                    key=\"id\"\r\n                    className='classnameofthecolumn'\r\n\r\n                />\r\n\r\n                <Column\r\n\r\n                    className='classnameofthecolumn'\r\n                    title=\"\"\r\n                    key=\"action\"\r\n                    align='right'\r\n                    render={(text, record: any) => (\r\n                        <Space size=\"middle\">\r\n                            <a href='##'>\r\n                                <Tooltip placement=\"top\" title='Quick Edit Bundle'>\r\n                                    <span className='iconSize' onClick={() => {\r\n                                        setvisible(true)\r\n                                        setactiveCategoryForEdit(record);\r\n                                    }}>\r\n                                        <EditOutlined />\r\n                                    </span>\r\n                                </Tooltip>\r\n                            </a>\r\n\r\n\r\n\r\n                            <Popconfirm\r\n                                onConfirm={() => handleDeleteTag(record.id)}\r\n                                title=\"Are you sure？\" okText=\"Yes\" cancelText=\"No\">\r\n                                <span\r\n                                    className='iconSize iconSize-danger'\r\n                                >\r\n                                    <DeleteOutlined />\r\n                                </span>\r\n                            </Popconfirm>\r\n                        </Space>\r\n                    )}\r\n                />\r\n            </Table>\r\n\r\n\r\n\r\n\r\n\r\n\r\n            {activeCategoryForEdit && <ProductBundleQuickEdit\r\n                tagList={data}\r\n                setTagList={setTagList}\r\n                setvisible={setvisible}\r\n                visible={visible}\r\n                category={activeCategoryForEdit} />}\r\n        </>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\ninterface Props { }\r\n\r\nconst TagList = ({ }: Props) => {\r\n\r\n\r\n    const [tagList, setTagList] = useState([]);\r\n\r\n    const [tagState, handleTagListFetch] = useHandleFetch({}, 'bundleList');\r\n\r\n\r\n    useEffect(() => {\r\n        const setTags = async () => {\r\n            const tags = await handleTagListFetch({});\r\n            // @ts-ignore\r\n            setTagList(tags);\r\n        }\r\n        setTags();\r\n    }, [])\r\n\r\n\r\n\r\n    const [addNewCategoryVisible, setAddNewCategoryVisible] = useState(false);\r\n\r\n    const getisSubmitButtonDisabled = (values, isValid) => {\r\n        if (!values.name || !isValid) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n\r\n    const handleOkAddNewCategory = (e: any) => {\r\n        setAddNewCategoryVisible(false);\r\n\r\n    };\r\n\r\n    const handleCancelAddNewCategory = (e: any) => {\r\n        setAddNewCategoryVisible(false);\r\n    };\r\n\r\n    const handleSearch = (value) => {\r\n        if (tagState.data.length > 0) {\r\n            const newTagList = tagState.data.filter(item => item.name.toLowerCase().includes(value.toLowerCase()));\r\n            setTagList(newTagList);\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <>\r\n\r\n            <div className='categoryListContainer'>\r\n                <div className='categoryListContainer__header'>\r\n                    <div className='categoryListContainer__header-searchBar-tag'>\r\n                        <h2 className='categoryListContainer__header-title'>\r\n                            Bundles\r\n                       </h2>\r\n\r\n                        <Search\r\n                            enterButton={false}\r\n                            className='searchbarClassName'\r\n                            placeholder=\"search bundles..\"\r\n                            onSearch={value => handleSearch(value)}\r\n                        />\r\n                    </div>\r\n                    <Button\r\n                        // type=\"primary\"\r\n                        className='btnPrimaryClassNameoutline'\r\n                        icon={<PlusOutlined />}\r\n                        onClick={() => setAddNewCategoryVisible(true)}\r\n                    >\r\n                        Add New\r\n\t\t\t\t\t</Button>\r\n                </div>\r\n                <div className='categoryListContainer__categoryList'>\r\n                    {tagState.done && tagList.length > 0 && <MyTable\r\n                        setTagList={setTagList}\r\n                        data={tagList} />}\r\n                    {tagState.isLoading && <DataTableSkeleton />}\r\n\r\n\r\n                    {tagState.done && !(tagList.length > 0) && (\r\n                        <div style={{\r\n                            marginTop: '200px'\r\n                        }}>\r\n                            <Empty description='No Bundle found' image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            </div>\r\n\r\n            <AddNewProductBundle\r\n                productList={tagList}\r\n                setProductList={setTagList}\r\n                addNewCategoryVisible={addNewCategoryVisible}\r\n                setAddNewCategoryVisible={setAddNewCategoryVisible}\r\n\r\n            />\r\n        </>\r\n    );\r\n};\r\n\r\nexport default TagList;\r\n","import React, { useEffect } from 'react';\r\n\r\n// import hooks\r\nimport { useHandleFetch } from \"../../hooks\";\r\n\r\n// import lib\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport { Skeleton, Empty, Button, notification, Table, Space, Input as CoolInput, Tooltip, Modal } from 'antd';\r\n\r\n\r\n\r\ninterface Props {\r\n    productId?: any;\r\n    quantity?: any;\r\n}\r\n\r\n\r\n\r\nconst CouponProducts = ({\r\n    productId,\r\n    quantity\r\n}: Props) => {\r\n\r\n    const history = useHistory();\r\n\r\n    const [productDetailState, handleProductFetch] = useHandleFetch(\r\n        {},\r\n        'productDetailById'\r\n    );\r\n\r\n    useEffect(() => {\r\n        const getAndSetProduct = async () => {\r\n            await handleProductFetch({\r\n                urlOptions: {\r\n                    placeHolders: {\r\n                        id: productId,\r\n                    },\r\n                },\r\n            });\r\n\r\n        };\r\n        getAndSetProduct();\r\n    }, []);\r\n\r\n\r\n    console.log('productDetailStatecoupon', productDetailState)\r\n\r\n\r\n    return (\r\n        <Skeleton\r\n            paragraph={{ rows: 2 }}\r\n            loading={productDetailState.isLoading}>\r\n            {productDetailState.data && Object.keys(productDetailState.data).length > 0 && (\r\n                <>\r\n                    <div className='couponDetailProductItem'>\r\n                        <div\r\n                            onClick={() => history.push(`/admin/product/${productId}`)}\r\n                            className='couponDetailProductItem__cover'>\r\n                            <img src={productDetailState.data.cover} alt=\"\" />\r\n                        </div>\r\n                        <div className='couponDetailProductItem__info'>\r\n                            <h2\r\n                                onClick={() => history.push(`/admin/product/${productId}`)}\r\n                            >\r\n                                {productDetailState.data.name}\r\n                            </h2>\r\n                            <h3>\r\n                                {productDetailState.data.price}\r\n                            </h3>\r\n                            <h3>\r\n                                Quantity: {quantity}\r\n                            </h3>\r\n                        </div>\r\n                    </div>\r\n                </>\r\n            )}\r\n\r\n        </Skeleton>\r\n    )\r\n}\r\n\r\n\r\nexport default CouponProducts; ","import React, { useEffect, useState } from 'react';\r\nimport { useParams, useHistory } from \"react-router\";\r\n\r\n\r\n// import hooks\r\nimport { useHandleFetch } from \"../../hooks\";\r\n\r\n// import lib\r\nimport {\r\n    EditOutlined,\r\n    DeleteOutlined\r\n} from '@ant-design/icons';\r\n\r\nimport { Skeleton, Empty, Button, notification, Table, Space, Input as CoolInput, Tooltip, Modal, Badge } from 'antd';\r\n\r\n\r\n// import moment\r\nimport Moment from \"react-moment\";\r\n\r\n// import components\r\nimport { DataTableSkeleton } from \"../../components/Placeholders\";\r\nimport ProductBundleEdit from \"./ProductBundleEdit\";\r\nimport CouponProducts from \"../coupon/CouponProducts\";\r\n\r\n\r\nconst { Column, ColumnGroup } = Table;\r\nconst { Search } = CoolInput;\r\n\r\n\r\ninterface Props {\r\n    productRecord?: any;\r\n}\r\n\r\nconst NewBrandDetail = (props: Props) => {\r\n    const [productDetailState, handleProductDetailFetch] = useHandleFetch({}, 'bundleDetail');\r\n\r\n    const params = useParams();\r\n    const history = useHistory();\r\n    const productId = params['id'];\r\n    const [productEditVisible, setProductEditVisible] = useState(false);\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        const getProductDetail = async () => {\r\n            await handleProductDetailFetch({\r\n                urlOptions: {\r\n                    placeHolders: {\r\n                        id: productId\r\n                    }\r\n                }\r\n            })\r\n        };\r\n\r\n        getProductDetail();\r\n\r\n    }, [productId]);\r\n\r\n\r\n\r\n\r\n    console.log('productDetailState', productDetailState);\r\n\r\n    console.log('brandParams', params);\r\n\r\n    const getImagesInCollumn = (imgs) => {\r\n        if (!imgs[0]) return false;\r\n        imgs = imgs.map(item => item.cover);\r\n        const columns = {};\r\n\r\n        let localIndex = 0;\r\n        let columnNumber = 0;\r\n\r\n\r\n        imgs.forEach((item, index) => {\r\n            if (localIndex < 3) {\r\n                if (columns[columnNumber]) {\r\n                    columns[columnNumber] = [...columns[columnNumber], item]\r\n                }\r\n                else columns[columnNumber] = [item];\r\n\r\n                localIndex = localIndex + 1;\r\n                columnNumber = columnNumber + 1;\r\n\r\n            }\r\n            else {\r\n                localIndex = 0;\r\n                columnNumber = 0;\r\n                console.log('localIndex', localIndex)\r\n            }\r\n        });\r\n\r\n        return columns;\r\n    }\r\n\r\n\r\n    const row = productDetailState.done && productDetailState.data && productDetailState.data['image'] ? getImagesInCollumn(productDetailState.data['image']) : [];\r\n\r\n\r\n    console.log('bundleDetail', productDetailState);\r\n    return (\r\n        <div className='brandDetailContainer'>\r\n\r\n            <div className='brandDetailContainer__heading'>\r\n                <h3>\r\n                    Bundle Detail\r\n                </h3>\r\n\r\n                {productDetailState.done && productDetailState.data && (Object.keys(productDetailState.data).length > 0) && (\r\n                    <>\r\n                        {/* <ProductBundleEdit\r\n                            productEditVisible={productEditVisible}\r\n                            setProductEditVisible={setProductEditVisible}\r\n                            productDetailData={productDetailState.data}\r\n                        /> */}\r\n                        {/* <Button\r\n                            onClick={() => setProductEditVisible(true)}\r\n                            type='link'\r\n                            icon={<EditOutlined />}\r\n                        >\r\n                            Edit\r\n                      </Button> */}\r\n                    </>\r\n                )}\r\n\r\n            </div>\r\n            <Skeleton\r\n                avatar paragraph={{ rows: 3 }}\r\n                loading={productDetailState.isLoading}>\r\n                {productDetailState.done && productDetailState.data && !(Object.keys(productDetailState.data).length > 0) && (\r\n                    <Empty description='No Product found' image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n                )}\r\n\r\n                {productDetailState.done && productDetailState.data && (Object.keys(productDetailState.data).length > 0) && (\r\n                    <>\r\n                        <div className='brandDetailContainer__header'>\r\n                            <div className='brandDetailContainer__header-coverContainer brandDetailContainer__header-coverContainer-product'>\r\n                                <img src={productDetailState.data['cover'] && productDetailState.data['cover']['cover']} alt=\"\" />\r\n                            </div>\r\n                            <div className='brandDetailContainer__header-info'>\r\n                                <h2>\r\n                                    {productDetailState.data['name']}\r\n                                </h2>\r\n                                <h4>\r\n                                    {productDetailState.data['price']}\r\n                                </h4>\r\n                                <h3>\r\n                                    {productDetailState.data['description']}\r\n                                </h3>\r\n\r\n                                {productDetailState.data['startDate'] && (\r\n                                    <h3>\r\n                                        START DATE:\r\n                                        <span>\r\n                                            {productDetailState.data['url']}\r\n                                        </span>\r\n\r\n                                    </h3>\r\n                                )}\r\n\r\n                                {productDetailState.data['endDate'] && (\r\n                                    <h3>\r\n                                        END DATE:\r\n                                        <span>\r\n                                            {productDetailState.data['url']}\r\n                                        </span>\r\n\r\n                                    </h3>\r\n                                )}\r\n\r\n\r\n\r\n                                {productDetailState.data['url'] && (\r\n                                    <h3>\r\n                                        URL:\r\n                                        <span>\r\n                                            {productDetailState.data['url']}\r\n                                        </span>\r\n\r\n                                    </h3>\r\n                                )}\r\n                                {/* \r\n                                {productDetailState.data['tags'] && productDetailState.data['tags'].length > 0 &&\r\n                                    (<>\r\n                                        <h3>\r\n                                            TAGS:\r\n                                        {productDetailState.data['tags'].map(tag => {\r\n                                            return (\r\n                                                <span>\r\n                                                    {tag.name}\r\n                                                </span>\r\n                                            )\r\n                                        })}\r\n                                        </h3>\r\n\r\n                                    </>)\r\n                                } */}\r\n\r\n                                {productDetailState.data['category'] && productDetailState.data['category'].length > 0 &&\r\n                                    (<>\r\n                                        <h3>\r\n                                            CATEGORIES:\r\n                                        {productDetailState.data['category'].map(cat => {\r\n                                            return (\r\n                                                <span\r\n                                                    onClick={() => history.push(`/admin/category/${cat.id}`)}\r\n\r\n                                                >\r\n                                                    {cat.name}\r\n                                                </span>\r\n                                            )\r\n                                        })}\r\n                                        </h3>\r\n\r\n                                    </>)\r\n                                }\r\n\r\n                            </div>\r\n                        </div>\r\n\r\n\r\n                        {productDetailState.data['icon'] && (\r\n                            <>\r\n                                <div className='brandDetailContainer__heading'>\r\n                                    <h3>\r\n                                        Icon\r\n                            </h3>\r\n                                </div>\r\n\r\n                                <div className='brandDetailContainer__inlineBox'>\r\n                                    <div className='brandDetailContainer__header-coverContainer brandDetailContainer__header-coverContainer-icon'>\r\n                                        <img src={productDetailState.data['icon'] && productDetailState.data['icon']} alt=\"\" />\r\n                                    </div>\r\n\r\n                                </div>\r\n\r\n                                <div style={{\r\n                                    marginBottom: \"25px\"\r\n                                }}></div>\r\n                            </>\r\n                        )}\r\n\r\n\r\n\r\n                        {productDetailState.done && productDetailState.data && Object.keys(productDetailState.data).length > 0 && productDetailState.data['products'] && (\r\n                            <div className='brandDetailContainer__heading'>\r\n                                <h3>\r\n                                    Products\r\n                       </h3>\r\n                            </div>\r\n                        )\r\n                        }\r\n\r\n\r\n                        <div className='brandDetailContainer__body'>\r\n                            {productDetailState.done && productDetailState.data && productDetailState.data['products'] && !(productDetailState.data['products'].length > 0) && (\r\n                                <div style={{\r\n                                    marginTop: '100px'\r\n                                }}>\r\n                                    <Empty description='No Products exists for this Bundle' image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n                                </div>\r\n                            )}\r\n\r\n                            {productDetailState.done && productDetailState.data && Object.keys(productDetailState.data).length > 0 && (\r\n                                <>\r\n                                    {productDetailState.data['products'] && productDetailState.data['products'].length > 0 &&\r\n                                        productDetailState.data['products'].map(product => {\r\n                                            return (\r\n                                                <CouponProducts\r\n                                                    quantity={product.quantity}\r\n                                                    productId={product['_id']} />\r\n                                            )\r\n                                        })}\r\n                                </>\r\n                            )}\r\n                        </div>\r\n\r\n                        {productDetailState.data['image'] && productDetailState.data['image'].length > 0 && (\r\n                            <>\r\n                                <div className='brandDetailContainer__heading'>\r\n                                    <h3>\r\n                                        Image Gallary\r\n                                   </h3>\r\n                                </div>\r\n\r\n                                <div className='brandDetailContainer__imageGallary'>\r\n                                    <div className='imgGallaryContainer'>\r\n\r\n                                        <div className=\"imgGallary-row\">\r\n                                            {row && Object.keys(row).map(column => {\r\n                                                return (\r\n                                                    <div className=\"imgGallary-column\">\r\n                                                        {row[column] && row[column].map(img => {\r\n                                                            return <img src={img} style={{\r\n                                                                width: '100%'\r\n                                                            }} />\r\n                                                        })}\r\n\r\n                                                    </div>\r\n                                                )\r\n                                            })}\r\n\r\n\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                </div>\r\n\r\n                                <div style={{\r\n                                    marginBottom: \"25px\"\r\n                                }}></div>\r\n                            </>\r\n                        )}\r\n\r\n                        {productDetailState.data['brand'] && Object.keys(productDetailState.data['brand']).length > 0 && (\r\n                            <>\r\n                                <div className='brandDetailContainer__heading'>\r\n                                    <h3>\r\n                                        Brand\r\n                                   </h3>\r\n                                </div>\r\n\r\n                                <div\r\n                                    onClick={() => history.push(`/admin/brand/${productDetailState.data['brand']['id']}`)}\r\n\r\n                                    className='brandDetailContainer__brand'>\r\n                                    <div className='brandDetailContainer__brand-coverbox'>\r\n                                        <img src={productDetailState.data['brand']['cover'] && productDetailState.data['brand']['cover']} alt=\"\" />\r\n                                    </div>\r\n                                    <div className='brandDetailContainer__brand-info'>\r\n                                        <h2>\r\n                                            {productDetailState.data['brand']['name']}\r\n                                        </h2>\r\n                                        <h3>\r\n                                            {productDetailState.data['brand']['description']}\r\n                                        </h3>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div style={{\r\n                                    marginBottom: \"25px\"\r\n                                }}></div>\r\n                            </>\r\n                        )}\r\n\r\n\r\n                        {productDetailState.data['primaryCategory'] && Object.keys(productDetailState.data['primaryCategory']).length > 0 && (\r\n                            <>\r\n                                <div className='brandDetailContainer__heading'>\r\n                                    <h3>\r\n                                        Primary Category\r\n                                   </h3>\r\n                                </div>\r\n\r\n                                <div\r\n                                    onClick={() => history.push(`/admin/category/${productDetailState.data['primaryCategory']['id']}`)}\r\n                                    className='brandDetailContainer__brand'>\r\n                                    <div className='brandDetailContainer__brand-coverbox'>\r\n                                        <img src={productDetailState.data['primaryCategory']['cover'] && productDetailState.data['primaryCategory']['cover']} alt=\"\" />\r\n                                    </div>\r\n                                    <div className='brandDetailContainer__brand-info'>\r\n                                        <h2>\r\n                                            {productDetailState.data['primaryCategory']['name']}\r\n                                        </h2>\r\n                                        <h3>\r\n                                            {productDetailState.data['primaryCategory']['description']}\r\n                                        </h3>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div style={{\r\n                                    marginBottom: \"25px\"\r\n                                }}></div>\r\n                            </>\r\n                        )}\r\n\r\n                    </>\r\n\r\n                )}\r\n\r\n            </Skeleton>\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NewBrandDetail\r\n","import React, { useState } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n\r\nimport { useHandleFetch } from '../../hooks';\r\n// import third party ui lib\r\nimport { Upload, message, Switch, Select, Button, notification, Modal, Tooltip } from 'antd';\r\n\r\nimport {\r\n\tFileOutlined,\r\n\tInboxOutlined,\r\n\tFileAddOutlined,\r\n\tDeleteOutlined,\r\n\tCheckCircleOutlined,\r\n\tCloseOutlined,\r\n\tCheckOutlined,\r\n\tInfoCircleOutlined,\r\n\tPlusOutlined,\r\n\tFileImageFilled\r\n} from '@ant-design/icons';\r\n\r\n\r\n\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport MediaLibrary from \"../../components/MediaLibrary\";\r\n\r\nimport MetaTags from \"../../pages/category/MetaTags\";\r\nconst validationSchema = Yup.object().shape({\r\n\tname: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t\tmessage: message || 'Brand Created',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n\tnotification.error({\r\n\t\tmessage: message || 'Something Went Wrong',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n};\r\n\r\n\r\nconst initialValues = {\r\n\tname: '',\r\n\tbnName: '',\r\n\tdescription: '',\r\n\tbnDescription: '',\r\n\tmetaTitle: '',\r\n\tbnMetaTitle: '',\r\n\tmetaDescription: '',\r\n\tbnMetaDescription: '',\r\n\tmetaTags: '',\r\n\tbnMetaTags: '',\r\n\timage: [],\r\n\turl: '',\r\n\tcover: ''\r\n}\r\n\r\n\r\n\r\ninterface Props {\r\n\taddNewCategoryVisible?: any;\r\n\tsetAddNewCategoryVisible?: any;\r\n\tbrandList?: any;\r\n\tsetBrandList?: any;\r\n\r\n}\r\n\r\nconst AddNewBrand = ({ addNewCategoryVisible, setAddNewCategoryVisible, brandList, setBrandList }: Props) => {\r\n\r\n\tconst [updateBrandState, handleUpdateBrandFetch] = useHandleFetch({}, 'updateBrand');\r\n\tconst [visible, setvisible] = useState(false);\r\n\tconst [myImages, setmyImages] = useState(false);\r\n\tconst [visibleMedia, setvisibleMedia] = useState(false);\r\n\tconst [coverImageId, setCoverImageId] = useState('');\r\n\tconst [tags,setTags] = useState([]);\r\n\tconst [bnTags,setBnTags] = useState([]);\r\n\r\n\tconst handleSubmit = async (values: any, actions: any) => {\r\n\r\n\t\t// @ts-ignore\r\n\t\tconst imagesIds = myImages ? myImages.map(image => {\r\n\t\t\treturn image.id;\r\n\t\t}) : [];\r\n\r\n\r\n\t\tconst addBrandRes = await handleUpdateBrandFetch({\r\n\r\n\t\t\tbody: {\r\n\t\t\t\tname: values.name.trim(),\r\n\t\t\t\tdescription: values.description,\r\n\t\t\t\ttype: values.type,\r\n\t\t\t\timage: imagesIds,\r\n\t\t\t\tcover: coverImageId || imagesIds[0] ? imagesIds[0] : '',\r\n\t\t\t\tmetaTitle: values.metaTitle,\r\n                metaDescription: values.metaDescription,\r\n\t\t\t\tmetaTags: tags.join(','),\r\n\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t\tbn: {\r\n\t\t\t\t\tmetaTitle: values.bnMetaTitle,\r\n\t\t\t\t\tmetaDescription: values.bnMetaDescription,\r\n\t\t\t\t\tmetaTags: bnTags.join(','),\r\n\t\t\t\t\tname: values.bnName.trim(),\r\n\t\t\t\t\tdescription: values.bnDescription,\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t});\r\n\r\n\t\t// @ts-ignore\r\n\t\tif (addBrandRes && addBrandRes.status === 'ok') {\r\n\t\t\topenSuccessNotification();\r\n\r\n\t\t\tsetBrandList([...brandList, {\r\n\t\t\t\tid: addBrandRes['id'] || '',\r\n\t\t\t\tkey: addBrandRes['id'] || '',\r\n\t\t\t\tname: addBrandRes['name'] || '',\r\n\t\t\t\tdescription: addBrandRes['description'] || '',\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\t...addBrandRes\r\n\t\t\t}])\r\n\t\t\tactions.resetForm();\r\n\t\t\tsetAddNewCategoryVisible(false);\r\n\t\t}\r\n\t\telse {\r\n\t\t\topenErrorNotification();\r\n\t\t}\r\n\r\n\t\tactions.setSubmitting(false);\r\n\r\n\t};\r\n\r\n\r\n\tconst onSwitchChange = (checked: any) => {\r\n\t\t// console.log(checked);\r\n\t};\r\n\r\n\r\n\tconst handleCancel = (e: any) => {\r\n\t\tsetAddNewCategoryVisible(false);\r\n\t};\r\n\r\n\r\n\tconst getisSubmitButtonDisabled = (values, isValid) => {\r\n\t\tif (!values.name || !isValid) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\tconst handleImagesDelete = (id) => {\r\n\t\t// @ts-ignore\r\n\t\tconst newImages = myImages && myImages.filter(image => {\r\n\t\t\treturn image.id !== id;\r\n\t\t})\r\n\r\n\t\tsetmyImages(newImages);\r\n\t}\r\n\r\n\r\n\r\n\treturn (\r\n\t\t<Formik\r\n\t\t\tonSubmit={(values, actions) => handleSubmit(values, actions)}\r\n\t\t\tvalidationSchema={validationSchema}\r\n\t\t\tvalidateOnBlur={false}\r\n\t\t\tenableReinitialize={true}\r\n\t\t\tinitialValues={\r\n\t\t\t\t{ ...initialValues }\r\n\t\t\t}\r\n\t\t>\r\n\t\t\t{({\r\n\t\t\t\thandleChange,\r\n\t\t\t\tvalues,\r\n\t\t\t\thandleSubmit,\r\n\t\t\t\terrors,\r\n\t\t\t\tisValid,\r\n\t\t\t\tisSubmitting,\r\n\t\t\t\ttouched,\r\n\t\t\t\thandleBlur,\r\n\t\t\t\tsetFieldTouched,\r\n\t\t\t\thandleReset,\r\n\t\t\t}) => (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<Modal\r\n\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\ttop: '40px'\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\ttitle=\"Add New Organizer\"\r\n\t\t\t\t\t\t\tvisible={addNewCategoryVisible}\r\n\t\t\t\t\t\t\tonOk={(e: any) => handleSubmit(e)}\r\n\t\t\t\t\t\t\tonCancel={handleCancel}\r\n\t\t\t\t\t\t\tokText='Create'\r\n\t\t\t\t\t\t\tokButtonProps={{\r\n\t\t\t\t\t\t\t\tloading: isSubmitting,\r\n\t\t\t\t\t\t\t\thtmlType: \"submit\",\r\n\t\t\t\t\t\t\t\tdisabled: getisSubmitButtonDisabled(values, isValid)\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\tlabel='Name'\r\n\t\t\t\t\t\t\t\tvalue={values.name}\r\n\t\t\t\t\t\t\t\tname='name'\r\n\t\t\t\t\t\t\t\tplaceHolder={'microsoft,apple'}\r\n\t\t\t\t\t\t\t\tisError={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateBrandState.error['error']['name'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateBrandState.error['error']['name'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('name');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\tlabel='BN Name'\r\n\t\t\t\t\t\t\t\tvalue={values.bnName}\r\n\t\t\t\t\t\t\t\tplaceHolder={'প্রান,নোকিয়া'}\r\n\t\t\t\t\t\t\t\tname='bnName'\r\n\t\t\t\t\t\t\t\tisError={(touched.bnName && errors.bnName) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateBrandState.error['error']['bnName'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.bnName && errors.bnName) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateBrandState.error['error']['bnName'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('bnName');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\r\n\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\tlabel='Description'\r\n\t\t\t\t\t\t\t\tvalue={values.description}\r\n\t\t\t\t\t\t\t\tname='description'\r\n\t\t\t\t\t\t\t\tplaceholder={'This brand...'}\r\n\t\t\t\t\t\t\t\tisError={(touched.description && errors.description) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateBrandState.error['error']['description'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.description && errors.description) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateBrandState.error['error']['description'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('description');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\tlabel='BN Description'\r\n\t\t\t\t\t\t\t\tvalue={values.bnDescription}\r\n\t\t\t\t\t\t\t\tplaceholder={'এই ব্র্যান্ড...'}\r\n\t\t\t\t\t\t\t\tname='bnDescription'\r\n\t\t\t\t\t\t\t\tisError={(touched.bnDescription && errors.bnDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateBrandState.error['error']['bnDescription'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.bnDescription && errors.bnDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateBrandState.error['error']['bnDescription'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('bnDescription');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\tmarginTop: '20px'\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\r\n\t\t\t\t\t\t\t<div className='addproductSection-left-header'\r\n\r\n\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\tmarginBottom: '-5px'\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>Images</h3>\r\n\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\t\t\t\t\t\t\t<div className='aboutToUploadImagesContainer'>\r\n\t\t\t\t\t\t\t\t{myImages &&\r\n\t\t\t\t\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\t\t\t\t\tmyImages.length > 0 && myImages.map((image, index) => {\r\n\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='aboutToUploadImagesContainer__item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='aboutToUploadImagesContainer__item-imgContainer'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => setCoverImageId(image.id)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<img src={image.cover} alt={image.alt} />\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => handleImagesDelete(image.id)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='aboutToUploadImagesContainer__item-remove'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<CloseOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t{coverImageId === image.id ? (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<span className='aboutToUploadImagesContainer__item-cover'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<CheckOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t) : !coverImageId && index === 0 && (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<span className='aboutToUploadImagesContainer__item-cover'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<CheckOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t})}\r\n\r\n\r\n\t\t\t\t\t\t\t\t<Tooltip\r\n\t\t\t\t\t\t\t\t\ttitle={'Attach images'}>\r\n\r\n\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\t\t\tsetvisibleMedia(true);\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\tclassName='aboutToUploadImagesContainer__uploadItem'>\r\n\t\t\t\t\t\t\t\t\t\t{/* <FileAddOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FileImageTwoTone />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FileImageOutlined /> */}\r\n\t\t\t\t\t\t\t\t\t\t<FileImageFilled />\r\n\t\t\t\t\t\t\t\t\t\t{/* <h5>\r\n\t\t\t\t\t\t\t\t\t\t\t\t     Select From Library\r\n\t\t\t\t\t\t\t\t\t\t\t<     /h5> */}\r\n\t\t\t\t\t\t\t\t\t\t<span className='aboutToUploadImagesContainer__uploadItem-plus'>\r\n\t\t\t\t\t\t\t\t\t\t\t<PlusOutlined />\r\n\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</Tooltip>\r\n\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\tlabel='Meta title'\r\n\t\t\t\t\t\t\t\tvalue={values.metaTitle}\r\n\t\t\t\t\t\t\t\tplaceHolder={'category...'}\r\n\t\t\t\t\t\t\t\tname='metaTitle'\r\n\t\t\t\t\t\t\t\tisError={(touched.metaTitle && errors.metaTitle) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateBrandState.error['error']['metaTitle'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.metaTitle && errors.metaTitle) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateBrandState.error['error']['metaTitle'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('metaTitle')\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\tlabel='BN Meta title'\r\n\t\t\t\t\t\t\t\tvalue={values.bnMetaTitle}\r\n\t\t\t\t\t\t\t\tplaceHolder={'ক্যাটাগড়ি...'}\r\n\t\t\t\t\t\t\t\tname='bnMetaTitle'\r\n\t\t\t\t\t\t\t\tisError={(touched.bnMetaTitle && errors.bnMetaTitle) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateBrandState.error['error']['bnMetaTitle'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.bnMetaTitle && errors.bnMetaTitle) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateBrandState.error['error']['bnMetaTitle'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('bnMetaTitle');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\tlabel='Meta description'\r\n\t\t\t\t\t\t\t\tvalue={values.metaDescription}\r\n\t\t\t\t\t\t\t\tplaceholder={'meta...'}\r\n\t\t\t\t\t\t\t\tname='metaDescription'\r\n\t\t\t\t\t\t\t\tisError={(touched.metaDescription && errors.metaDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateBrandState.error['error']['metaDescription'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.metaDescription && errors.metaDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateBrandState.error['error']['metaDescription'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('metaDescription');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\tlabel='BN Meta Description'\r\n\t\t\t\t\t\t\t\tvalue={values.bnMetaDescription}\r\n\t\t\t\t\t\t\t\tplaceholder={'এইয় মেট...'}\r\n\t\t\t\t\t\t\t\tname='bnMetaDescription'\r\n\t\t\t\t\t\t\t\tisError={(touched.bnMetaDescription && errors.bnMetaDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateBrandState.error['error']['bnMetaDescription'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.bnMetaDescription && errors.bnMetaDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateBrandState.error['error']['bnMetaDescription'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('bnMetaDescription');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\tMeta Tags (grocery,fashion)\r\n\t\t\t\t\t\t\t</h3>\r\n\r\n\t\t\t\t\t\t\t<MetaTags\r\n\t\t\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\t\t\tsetTags={setTags}\r\n\t\t\t\t\t\t\ttags={tags}\r\n\t\t\t\t\t\t\t />\r\n\r\n\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\tmarginTop:'15px'\r\n\t\t\t\t\t\t\t}}></div>\r\n\r\n\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\tBN Meta Tags (মুদিখানা,ফ্যাশন)\r\n\t\t\t\t\t\t\t</h3>\r\n\r\n\t\t\t\t\t\t\t<MetaTags\r\n\t\t\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\t\t\tsetTags={setBnTags}\r\n\t\t\t\t\t\t\ttags={bnTags}\r\n\t\t\t\t\t\t\t />\r\n\r\n\r\n\t\t\t\t\t\t</Modal>\r\n\r\n\t\t\t\t\t\t<MediaLibrary\r\n\t\t\t\t\t\t\tsetvisible={setvisibleMedia}\r\n\t\t\t\t\t\t\tvisible={visibleMedia}\r\n\t\t\t\t\t\t\tsetmyImages={setmyImages}\r\n\t\t\t\t\t\t\tmyImages={myImages}\r\n\t\t\t\t\t\t\tisModalOpenForImages={true}\r\n\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</>\r\n\t\t\t\t)}\r\n\t\t</Formik>\r\n\r\n\r\n\r\n\r\n\t);\r\n};\r\n\r\nexport default AddNewBrand;\r\n","import React,{useState} from 'react';\r\nimport { Modal, notification  } from 'antd';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport {useHandleFetch} from '../../hooks';\r\nimport { CheckCircleOutlined } from '@ant-design/icons';\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n\tname: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t  message: message || 'Tag Updated',\r\n\t  description: '',\r\n\t  icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n  };\r\n\r\n\r\n  const openErrorNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t  message: message || 'Something Went Wrong',\r\n\t  description: '',\r\n\t  icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n  };\r\n\r\n\r\n\r\n\r\n\r\ninterface Props {\r\n\tcategory: any;\r\n\tsetvisible: any; \r\n\tvisible: any;\r\n\tbrandList: any; \r\n\tsetBrandList?: any; \r\n\r\n}\r\n\r\nconst QuickEdit = ({ category, setvisible, visible, brandList, setBrandList }: Props) => {\r\n\tconst [updatebrandState, handleUpdateBrandFetch] = useHandleFetch({}, 'updateBrand');\r\n\r\n\tconst handleSubmit = async (values : any, actions : any) => {\r\n\t  const updateBrandRes = await handleUpdateBrandFetch({\r\n\t\turlOptions: {\r\n\t\t\tplaceHolders: {\r\n\t\t\t  id: values.id,\r\n\t\t\t}\r\n\t\t  },\r\n\t\tbody: {\r\n\t\t\tname: values.name,\r\n\t\t\tdescription: values.description,\r\n\t\t},\r\n\t  });\r\n\r\n\t  \r\n\t \t  // @ts-ignore\r\n\t\t   if(updateBrandRes && updateBrandRes.status === 'ok'){\r\n\t\t\topenSuccessNotification(); \r\n\t\r\n\t\t\tconst positionInBrand = () => {\r\n\t\t\t\treturn brandList.map(item => item.id).indexOf(category.id);\r\n\t\t\t  }\r\n\t\r\n\t\t\t  const index = positionInBrand();\r\n\t\r\n\t\t\t  // @ts-ignore\r\n\t\t\t  const updatedItem = Object.assign({}, brandList[index], { ...updateBrandRes });\r\n\t\t\t  const updateBrandList = [...brandList.slice(0, index), updatedItem, ...brandList.slice(index + 1)];\r\n\t\t\t  setBrandList(updateBrandList); \r\n\t\t\t\r\n\t\t  }\r\n\t\t  else {\r\n\t\t\topenErrorNotification();\r\n\t\t  }\r\n\t\t\r\n\t\t  actions.setSubmitting(false);\r\n\t\t  setvisible(false)\r\n\r\n\r\n\t\r\n\t};\r\n\t\r\n\r\n\tconst handleCancel = (e: any) => {\r\n        setvisible(false);\r\n      };\r\n\r\n\r\n\r\n\t  const getisSubmitButtonDisabled = (values,isValid) => {\r\n\t\tif(!values.name || !isValid){\r\n\t\t\treturn true; \r\n\t\t}\r\n\t\treturn false; \r\n\t  }\r\n\r\n\treturn (\r\n\t\t<Formik\r\n\t\tonSubmit={(values, actions) => handleSubmit(values, actions)}\r\n\t\tvalidationSchema={validationSchema}\r\n\t\tvalidateOnBlur={false}\r\n\t\tenableReinitialize={true}\r\n\t\tinitialValues={\r\n\t\t  {...category}\r\n\t\t}\r\n\t  >\r\n\t\t{({\r\n\t\t  handleChange,\r\n\t\t  values,\r\n\t\t  handleSubmit,\r\n\t\t  errors,\r\n\t\t  isValid,\r\n\t\t  isSubmitting,\r\n\t\t  touched,\r\n\t\t  handleBlur,\r\n\t\t  setFieldTouched,\r\n\t\t  handleReset,\r\n\t\t}) => (\r\n\t\t\t<>\r\n\t\t\t<Modal\r\n\t\t\ttitle=\"Quick Edit\"\r\n\t\t\tvisible={visible}\r\n\t\t\tonOk={(e : any) => handleSubmit(e)}\r\n\t\t\tonCancel={handleCancel}\r\n\t\t\tokText='Update'\r\n\t\t\tokButtonProps={{\r\n\t\t\tloading: isSubmitting,\r\n\t\t\thtmlType: \"submit\",\r\n\t\t\tdisabled: getisSubmitButtonDisabled(values, isValid)\r\n\t\t\t}}\r\n  >\r\n  <Input \r\n\t\t\t   label='Title'\r\n\t\t\t   value={values.name}\r\n\t\t\t   name='name'\r\n\t\t\t   isError={(touched.name && errors.name) ||\r\n\t\t\t\t  (!isSubmitting && updatebrandState.error['error']['name'])}\r\n\t\t\t  \r\n\t\t\t\t  errorString={(touched.name && errors.name) ||\r\n\t\t\t\t\t  (!isSubmitting && updatebrandState.error['error']['name'])}\r\n\t\t\t   onChange={(e : any) => {\r\n\t\t\t\t  handleChange(e);\r\n\t\t\t\t  setFieldTouched('name');\r\n\t\t\t\t}}\r\n\t\t\t   />\r\n\t\t\t  <TextArea\r\n\t\t\t   label='Description' \r\n\t\t\t   value={values.description}\r\n\t\t\t   name='description'\r\n\t\t\t   isError={(touched.description && errors.description) ||\r\n\t\t\t\t  (!isSubmitting && updatebrandState.error['error']['description'])}\r\n\t\t\t  \r\n\t\t\t\t  errorString={(touched.description && errors.description) ||\r\n\t\t\t\t\t  (!isSubmitting && updatebrandState.error['error']['description'])}\r\n\t\t\t   onChange={(e : any) => {\r\n\t\t\t\t  handleChange(e);\r\n\t\t\t\t  setFieldTouched('description');\r\n\t\t\t\t}}\r\n\t\t\t\t />\r\n  </Modal>\r\n\t\t\t  \r\n\t\t\t</>\r\n\t\t  )}\r\n\t  </Formik>\r\n\t);\r\n};\r\n\r\n\r\nexport default QuickEdit;\r\n","import React, {useState,useEffect} from 'react';\r\nimport {withRouter, useHistory} from 'react-router-dom';\r\nimport { Table,Empty, Popconfirm, Space,Button, Input,Tooltip, notification  } from 'antd';\r\nimport { PlusOutlined, EditOutlined, DeleteOutlined,CheckCircleOutlined } from '@ant-design/icons';\r\n\r\n\r\n\r\n/// import hooks\r\nimport {  useHandleFetch } from \"../../hooks\";\r\n\r\n// import components\r\nimport { DataTableSkeleton } from \"../../components/Placeholders\";\r\nimport AddNewBrand from \"./AddNewBrand\"\r\nimport QuickEdit from \"./QuickEdit\"\r\n\r\n\r\n\r\nconst { Column } = Table;\r\nconst { Search } = Input;\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t  message: message || 'Tag Created',\r\n\t  description: '',\r\n\t  icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n  };\r\n\r\n\r\n  const openErrorNotification = (message?: any) => {\r\n\tnotification.error({\r\n\t  message: message || 'Something Went Wrong',\r\n\t  description: '',\r\n\t  icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n  };\r\n\r\n\r\n\r\n\r\n\r\ninterface myTableProps {\r\n  data: any; \r\n  setBrandList: any; \r\n} \r\n\r\n\r\nconst MyTable = ({data,setBrandList}: myTableProps) => {\r\n    const [visible,setvisible] = useState(false);   \r\n    const [activeCategoryForEdit,setactiveCategoryForEdit] = useState(false); \r\n    const [deleteBrandState, handleDeleteBrandFetch] = useHandleFetch({}, 'deleteBrand');\r\n    const [brandDetailVisible,setBrandDetailVisible] = useState(false); \r\n    const history = useHistory(); \r\n\r\n\r\n \r\n      const handleDeleteBrand = async (id) => {\r\n        const deleteBrandRes = await handleDeleteBrandFetch({\r\n          urlOptions: {\r\n            placeHolders: {\r\n              id,\r\n            }\r\n            }\r\n          });\r\n\r\n            // @ts-ignore\r\n\t\t  if(deleteBrandRes && deleteBrandRes.status === 'ok'){\r\n\t\t\t  openSuccessNotification('Deleted Brand'); \r\n\t\t\t  const newBrandList =  data.filter(item => item.id !== id);\r\n\t\t\t  setBrandList(newBrandList); \r\n\t\t  }\r\n      }\r\n      \r\n\r\n    return (\r\n        <>\r\n        <Table \r\n        // expandable={{\r\n        //     expandedRowRender: record => <p style={{ margin: 0 }}>{record.name}</p>,\r\n        //     rowExpandable: record => record.name !== 'Not Expandable',\r\n        //   }}\r\n        // bordered={true}\r\n        size='small'\r\n        // pagination={false}\r\n        dataSource={data}\r\n        >\r\n            <Column \r\n          title=\"\"\r\n           dataIndex=\"cover\"\r\n            key=\"id\" \r\n            width={'80px'}\r\n            \r\n           className='classnameofthecolumn'\r\n\r\n           render={(cover, record: any) => (\r\n            <>\r\n              <img\r\n                onClick={() => {\r\n                  // setBrandDetailVisible(true);\r\n                  history.push(`/admin/brand/${record.id}`)\r\n                  setactiveCategoryForEdit(record)\r\n                }}\r\n                src={cover} alt='cover img' style={{\r\n                  height: '40px',\r\n                  width: '40px',\r\n                  objectFit: \"contain\",\r\n                  borderRadius: '3px',\r\n                  cursor: 'pointer'\r\n                }} />\r\n\r\n\r\n\r\n\r\n            </>\r\n          )}\r\n            />\r\n          <Column\r\n           title=\"Name\" \r\n           dataIndex=\"name\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n           render={(text, record: any) => (\r\n            <>\r\n\r\n              <h4\r\n                onClick={() => {\r\n                  history.push(`/admin/brand/${record.id}`)\r\n                  // setBrandDetailVisible(true);\r\n                  setactiveCategoryForEdit(record)\r\n                }}\r\n                style={{\r\n                  fontWeight: 400,\r\n                  color: '#555',\r\n                  cursor: 'pointer'\r\n\r\n                }}>\r\n                {text}\r\n              </h4>\r\n\r\n\r\n            </>\r\n          )}\r\n            />\r\n\r\n<Column\r\n           title=\"Description\" \r\n           dataIndex=\"description\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n         \r\n            />\r\n\r\n\r\n       <Column\r\n           title=\"Product\" \r\n           dataIndex=\"productCount\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n         \r\n            />\r\n          {/* <Column \r\n          \r\n          className='classnameofthecolumn'\r\n\r\n          title=\"Product\" dataIndex=\"product\" key=\"product\" /> */}\r\n\r\n          {/* <Column \r\n          \r\n          className='classnameofthecolumn'\r\n\r\n          title=\"Sub Category\" dataIndex=\"subCategory\" key=\"subCategory\" /> */}\r\n        \r\n        {/* <Column\r\n          title=\"Tags\"\r\n          dataIndex=\"tags\"\r\n          key=\"tags\"\r\n          render={tags => (\r\n            <>\r\n              {tags.map((tag : any) => (\r\n                <Tag color=\"blue\" key={tag}>\r\n                  {tag}\r\n                </Tag>\r\n              ))}\r\n            </>\r\n          )}\r\n        /> */}\r\n        <Column\r\n        \r\n        className='classnameofthecolumn'\r\n          title=\"\"\r\n          key=\"action\"\r\n          align='right'\r\n          render={(text, record : any) => (\r\n            <Space size=\"middle\">\r\n                <a href='##'>\r\n               <Tooltip placement=\"top\" title='Quick Edit Brand'>\r\n              <span className='iconSize' onClick={() => {\r\n                setvisible(true)\r\n                setactiveCategoryForEdit(record); \r\n              }}> \r\n              <EditOutlined />\r\n            \r\n              </span>\r\n               </Tooltip>\r\n               </a>\r\n\r\n\r\n \r\n               <Popconfirm \r\n               \r\n               onConfirm={() => handleDeleteBrand(record.id)}\r\n               title=\"Are you sure？\" okText=\"Yes\" cancelText=\"No\">\r\n           \r\n           <span \r\n             className='iconSize iconSize-danger'\r\n             > \r\n             <DeleteOutlined/>\r\n            </span>\r\n           </Popconfirm>\r\n\r\n\r\n            </Space>\r\n          )}\r\n        />\r\n      </Table>\r\n\r\n\r\n\r\n    {activeCategoryForEdit &&   <QuickEdit \r\n    brandList={data}\r\n    setBrandList={setBrandList}\r\n    setvisible={setvisible}\r\n    visible={visible}\r\n    category={activeCategoryForEdit}/>}\r\n    \r\n    \r\n    </>\r\n    )\r\n}\r\n\r\n\r\ninterface Props {\r\n    history: any; \r\n}\r\n\r\nconst CategoryList = ({history}: Props) => {\r\n\r\n\r\n  const [brandList,setBrandList] = useState([]);\r\n\r\n  \r\n  const [brandState, handlebrandListFetch] = useHandleFetch({}, 'brandList');\r\n\r\n\r\n  useEffect(()=>{\r\n   const setBrands = async () => {\r\n     const brands = await handlebrandListFetch({}); \r\n     // @ts-ignore\r\n     setBrandList(brands); \r\n   }\r\n   setBrands(); \r\n  },[])\r\n\r\n\r\n  \r\n  const [addNewCategoryVisible,setAddNewCategoryVisible] = useState(false);   \r\n\r\n  const handleOkAddNewCategory = (e: any) => {\r\n    setAddNewCategoryVisible(false);\r\n  \r\n  };\r\n\r\n  const handleCancelAddNewCategory = (e: any) => {\r\n    setAddNewCategoryVisible(false);\r\n  };\r\n\r\n\r\n    \r\n  const handleSearch = (value) => {\r\n    if(brandState.data.length > 0 ){\r\n      const newBrandList = brandState.data.filter(item => item.name.toLowerCase().includes(value.toLowerCase())); \r\n      setBrandList(newBrandList); \r\n    }\r\n     \r\n  }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\treturn (\r\n\t\t<>\r\n    {/* <h2 className='containerPageTitle'>\r\n      Categories\r\n    </h2> */}\r\n    <div className='categoryListContainer'>\r\n            <div className='categoryListContainer__header'>\r\n           \r\n\r\n          <div className='categoryListContainer__header-searchBar'>\r\n          <h2 className='categoryListContainer__header-title'>\r\n            Brand\r\n            </h2>\r\n\r\n\r\n          <Search\r\n            enterButton={false}\r\n            className='searchbarClassName'\r\n          placeholder=\"search brand..\"\r\n          onSearch={value => handleSearch(value)}\r\n          // style={{ width: 300 }}\r\n        />\r\n          </div>\r\n            <Button\r\n          // type=\"primary\"\r\n          className='btnPrimaryClassNameoutline'\r\n          icon={<PlusOutlined />}\r\n          onClick={() => setAddNewCategoryVisible(true)}\r\n        >\r\n        Add New\r\n            \r\n            </Button>\r\n            </div>\r\n\r\n            <div className='categoryListContainer__afterHeader'>\r\n            {/* <Search\r\n      placeholder=\"search categories..\"\r\n      size=\"large\"\r\n      onSearch={value => console.log(value)}\r\n      style={{ width: 300 }}\r\n    /> */}\r\n            </div>\r\n\r\n     \r\n\t\t\t\r\n\t\t\t<div className='categoryListContainer__categoryList'>\r\n        {brandState.done && brandList.length > 0 && <MyTable \r\n          setBrandList={setBrandList}\r\n        data={brandList} />}\r\n        {brandState.isLoading && <DataTableSkeleton />}\r\n        {brandState.done && !(brandList.length > 0) && (\r\n\t\t\t<div style={{\r\n\t\t\t\tmarginTop: '200px'\r\n\t\t\t}}>\r\n\t\t\t\t<Empty description='No Brand found'  image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n\t\t\t</div>\r\n\t\t)}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\r\n    <AddNewBrand \r\n          addNewCategoryVisible={addNewCategoryVisible} \r\n          setAddNewCategoryVisible={setAddNewCategoryVisible} \r\n          setBrandList={setBrandList}\r\n          brandList={brandList}\r\n          />\r\n\r\n    </>\r\n\t);\r\n};\r\n\r\nexport default withRouter(CategoryList);\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n\r\nimport { useHandleFetch } from '../../hooks';\r\n// import third party ui lib\r\nimport { Upload, message, Switch, Select, Button, notification, Modal, Tooltip, Spin } from 'antd';\r\n\r\nimport {\r\n    FileOutlined,\r\n    InboxOutlined,\r\n    FileAddOutlined,\r\n    DeleteOutlined,\r\n    CheckCircleOutlined,\r\n    CloseOutlined,\r\n    CheckOutlined,\r\n    InfoCircleOutlined,\r\n    PlusOutlined,\r\n    FileImageFilled\r\n} from '@ant-design/icons';\r\n\r\n\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport MediaLibrary from \"../../components/MediaLibrary\";\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    name: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Brand Updated',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n    notification.error({\r\n        message: message || 'Something Went Wrong',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst initialValues = {\r\n    name: '',\r\n    description: '',\r\n    image: [],\r\n    url: '',\r\n    cover: ''\r\n}\r\n\r\n\r\n\r\ninterface Props {\r\n    brandDetailData?: any;\r\n    brandEditVisible?: any;\r\n    setBrandEditVisible?: any;\r\n    setBrandDetailData?:any; \r\n}\r\n\r\nconst AddNewBrand = ({ brandDetailData, brandEditVisible, setBrandEditVisible,setBrandDetailData }: Props) => {\r\n\r\n    const [updateBrandState, handleUpdateBrandFetch] = useHandleFetch({}, 'updateBrand');\r\n    const [attachImageToItemMultipleState, handleAttachImageToItemMultipleFetch] = useHandleFetch({}, 'attachImageToItemMultiple');\r\n    const [attachImageToItemSingleState, handleAttachImageToItemSingleFetch] = useHandleFetch({}, 'attachImageToItemSingle');\r\n    const [detachImageFromItemMultipleState, handleDetachImageFromItemMultipleFetch] = useHandleFetch({}, 'detachImageFromItemMultiple');\r\n    const [detachImageFromItemSingleState, handleDetachImageFromItemSingleFetch] = useHandleFetch({}, 'detachImageFromItemSingle');\r\n    const [setImageAsThumbnailToItemState, handleSetImageAsThumbnailToItemFetch] = useHandleFetch({}, 'setImageAsThumbnailToItem');\r\n\r\n\r\n    const [myImages, setmyImages] = useState(false);\r\n    const [visibleMedia, setvisibleMedia] = useState(false);\r\n    const [coverImageId, setCoverImageId] = useState('');\r\n    const [myGoddamnImages, setMyGoddamnImages] = useState([]);\r\n\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        if (brandDetailData && Object.keys(brandDetailData).length > 0) {\r\n\r\n            const images = brandDetailData.image;\r\n            if (images && images.length > 0) {\r\n                setmyImages(images);\r\n                setMyGoddamnImages(images);\r\n            }\r\n\r\n            if (brandDetailData.cover && brandDetailData.cover['id']) {\r\n                // @ts-ignore\r\n                setmyImages([brandDetailData.cover, ...images]);\r\n                setCoverImageId(brandDetailData.cover['id']);\r\n            }\r\n\r\n        }\r\n    }, [brandDetailData])\r\n\r\n\r\n    useEffect(() => {\r\n        // @ts-ignore\r\n        if (myImages && myImages[0] && myImages.length < 2) {\r\n\r\n            if (coverImageId !== myImages[0].id) {\r\n                setCoverImageId(myImages[0].id);\r\n                handleSetImageAsThumnail(myImages[0]);\r\n            }\r\n\r\n        }\r\n\r\n    }, [myImages])\r\n\r\n\r\n    const handleDetachSingleImage = async id => {\r\n        await handleDetachImageFromItemSingleFetch({\r\n            urlOptions: {\r\n                placeHolders: {\r\n                    imageId: id,\r\n                    collection: 'brand',\r\n                    itemId: brandDetailData.id\r\n                }\r\n            }\r\n        });\r\n\r\n\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n    const handleSetImageAsThumnail = async image => {\r\n\r\n        const thumbnailRes = await handleSetImageAsThumbnailToItemFetch({\r\n            urlOptions: {\r\n                placeHolders: {\r\n                    imageId: image.id,\r\n                    collection: 'brand',\r\n                    itemId: brandDetailData.id\r\n                }\r\n            }\r\n        });\r\n\r\n\r\n        // @ts-ignore\r\n        if (thumbnailRes && thumbnailRes.status === 'ok') {\r\n            openSuccessNotification('Seted as thumbnail!')\r\n            // const positionInBrand = () => {\r\n            //     return brandList.map(item => item.id).indexOf(brandDetailData.id);\r\n            // }\r\n\r\n            // const index = positionInBrand();\r\n\r\n            // const prevItem = brandList.find(item => item.id === productRecord.id);\r\n\r\n            // if (prevItem) {\r\n            //     const updatedItem = Object.assign({}, brandList[index], { ...prevItem, cover: image.cover });\r\n            //     const updateBrandList = [...brandList.slice(0, index), updatedItem, ...brandList.slice(index + 1)];\r\n            //     setBrandList(updateBrandList);\r\n            // }\r\n        }\r\n        else {\r\n            openErrorNotification(\"Couldn't set as thumbnail, Something went wrong\")\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    const handleSubmit = async (values: any, actions: any) => {\r\n\r\n        console.log('myReadyToGoImages', myImages);\r\n\r\n        if (brandDetailData && Object.keys(brandDetailData).length > 0) {\r\n            // @ts-ignore\r\n            const images = myImages && myImages.length > 0 ? myImages.map(item => item.id) : [];\r\n\r\n            if (images[0] && images.length > 1) {\r\n                await handleAttachImageToItemMultipleFetch({\r\n                    urlOptions: {\r\n                        placeHolders: {\r\n                            collection: 'brand',\r\n                            itemId: brandDetailData.id\r\n                        }\r\n                    },\r\n                    body: {\r\n                        image: images\r\n                    }\r\n                });\r\n            }\r\n            else if (images[0] && images.length < 1) {\r\n                await handleAttachImageToItemSingleFetch({\r\n                    urlOptions: {\r\n                        placeHolders: {\r\n                            imageId: images[0].id,\r\n                            collection: 'brand',\r\n                            itemId: brandDetailData.id\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n        }\r\n\r\n\r\n\r\n\r\n        const updateBrandRes = await handleUpdateBrandFetch({\r\n            urlOptions: {\r\n                placeHolders: {\r\n                    id: brandDetailData.id\r\n                }\r\n            },\r\n            body: {\r\n                name: values.name.trim(),\r\n                description: values.description,\r\n            },\r\n        });\r\n\r\n        // @ts-ignore\r\n        if (updateBrandRes && updateBrandRes.status === 'ok') {\r\n            console.log('updateBrandRes',updateBrandRes);\r\n            setBrandDetailData({\r\n                ...brandDetailData,\r\n                // @ts-ignore\r\n                ...updateBrandRes\r\n            })\r\n            openSuccessNotification();\r\n            setBrandEditVisible(false);\r\n\r\n\r\n            // const positionInBrand = () => {\r\n            //     return brandList.map(item => item.id).indexOf(productRecord.id);\r\n            // }\r\n\r\n            // const index = positionInBrand();\r\n            // const updatedItem = Object.assign({}, brandList[index], { ...updateBrandRes });\r\n            // console.log('updateBrandList', updatedItem)\r\n\r\n            // const updateBrandList = [...brandList.slice(0, index), updatedItem, ...brandList.slice(index + 1)];\r\n\r\n            // setBrandList(updateBrandList);\r\n\r\n\r\n            actions.resetForm();\r\n\r\n        }\r\n        else {\r\n            openErrorNotification();\r\n        }\r\n\r\n        actions.setSubmitting(false);\r\n    };\r\n\r\n\r\n\r\n    const onSwitchChange = (checked: any) => {\r\n        // console.log(checked);\r\n    };\r\n\r\n\r\n    const handleCancel = (e: any) => {\r\n        setBrandEditVisible(false);\r\n    };\r\n\r\n\r\n    const getisSubmitButtonDisabled = (values, isValid) => {\r\n        if (!values.name || !isValid) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n\r\n\r\n\r\n    const handleImagesDelete = (id) => {\r\n        // @ts-ignore\r\n        const newImages = myImages && myImages.filter(image => {\r\n            return image.id !== id;\r\n        })\r\n\r\n        setmyImages(newImages);\r\n    }\r\n\r\n\r\n\r\n    console.log('myImages', myImages)\r\n\r\n    return (\r\n        <Formik\r\n            onSubmit={(values, actions) => handleSubmit(values, actions)}\r\n            validationSchema={validationSchema}\r\n            validateOnBlur={false}\r\n            enableReinitialize={true}\r\n            initialValues={\r\n                { ...initialValues, ...brandDetailData }\r\n            }\r\n        >\r\n            {({\r\n                handleChange,\r\n                values,\r\n                handleSubmit,\r\n                errors,\r\n                isValid,\r\n                isSubmitting,\r\n                touched,\r\n                handleBlur,\r\n                setFieldTouched,\r\n                handleReset,\r\n            }) => (\r\n                    <>\r\n                        <Modal\r\n                            style={{\r\n                                top: '40px'\r\n                            }}\r\n                            title=\"Brand Edit\"\r\n                            visible={brandEditVisible}\r\n                            onOk={(e: any) => handleSubmit(e)}\r\n                            onCancel={handleCancel}\r\n                            okText='Update'\r\n                            okButtonProps={{\r\n                                loading: isSubmitting,\r\n                                htmlType: \"submit\",\r\n                                disabled: getisSubmitButtonDisabled(values, isValid)\r\n                            }}\r\n                        >\r\n                            <Input\r\n                                label='Title'\r\n                                value={values.name}\r\n                                name='name'\r\n                                isError={(touched.name && errors.name) ||\r\n                                    (!isSubmitting && updateBrandState.error['error']['name'])}\r\n\r\n                                errorString={(touched.name && errors.name) ||\r\n                                    (!isSubmitting && updateBrandState.error['error']['name'])}\r\n                                onChange={(e: any) => {\r\n                                    handleChange(e);\r\n                                    setFieldTouched('name');\r\n                                }}\r\n                            />\r\n                            <TextArea\r\n                                rows={3}\r\n                                label='Description'\r\n                                value={values.description}\r\n                                name='description'\r\n                                isError={(touched.description && errors.description) ||\r\n                                    (!isSubmitting && updateBrandState.error['error']['description'])}\r\n\r\n                                errorString={(touched.description && errors.description) ||\r\n                                    (!isSubmitting && updateBrandState.error['error']['description'])}\r\n                                onChange={(e: any) => {\r\n                                    handleChange(e);\r\n                                    setFieldTouched('description');\r\n                                }}\r\n                            />\r\n\r\n                            <div\r\n                                style={{\r\n                                    marginTop: '20px'\r\n                                }}\r\n                            />\r\n\r\n\r\n                            <div className='addproductSection-left-header'\r\n\r\n                                style={{\r\n                                    marginBottom: '-5px'\r\n                                }}\r\n                            >\r\n                                <h3 className='inputFieldLabel'>Images</h3>\r\n                                {/* <div  >\r\n\t\t\t\t\t<FileOutlined />\r\n\t\t\t\t\t<span>Media Center</span>\r\n\t\t\t\t</div> */}\r\n                            </div>\r\n\r\n\r\n                            <div className='aboutToUploadImagesContainer'>\r\n\r\n                                {brandDetailData && Object.keys(brandDetailData).length > 0 && (\r\n                                    <>\r\n                                        {myImages &&\r\n                                            // @ts-ignore\r\n                                            myImages.length > 0 && myImages.map((image, index) => {\r\n                                                return (\r\n                                                    <div className='aboutToUploadImagesContainer__item'>\r\n                                                        <div\r\n                                                            className='aboutToUploadImagesContainer__item-imgContainer'\r\n                                                            onClick={() => {\r\n                                                                setCoverImageId(image.id);\r\n                                                                handleSetImageAsThumnail(image);\r\n                                                            }}\r\n                                                        >\r\n                                                            <img src={image.cover} alt={image.alt} />\r\n                                                        </div>\r\n\r\n                                                        <span\r\n                                                            onClick={() => {\r\n                                                                handleImagesDelete(image.id)\r\n                                                                handleDetachSingleImage(image.id)\r\n                                                            }\r\n\r\n                                                            }\r\n                                                            className='aboutToUploadImagesContainer__item-remove'>\r\n                                                            <CloseOutlined />\r\n                                                        </span>\r\n\r\n\r\n                                                        {coverImageId === image.id ? (\r\n                                                            <span className='aboutToUploadImagesContainer__item-cover'>\r\n                                                                <CheckOutlined />\r\n                                                            </span>\r\n                                                        ) : !coverImageId && index === 0 && (\r\n                                                            <span className='aboutToUploadImagesContainer__item-cover'>\r\n                                                                <CheckOutlined />\r\n                                                            </span>\r\n                                                        )}\r\n\r\n\r\n                                                    </div>\r\n                                                )\r\n                                            })}\r\n\r\n\r\n                                        <Tooltip\r\n                                            title={'Attach images'}>\r\n\r\n                                            <div\r\n                                                onClick={() => {\r\n                                                    setvisibleMedia(true);\r\n                                                }}\r\n                                                className='aboutToUploadImagesContainer__uploadItem'>\r\n                                                {/* <FileAddOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FileImageTwoTone />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FileImageOutlined /> */}\r\n                                                <FileImageFilled />\r\n                                                {/* <h5>\r\n\t\t\t\t\t\t\t\t\t\t\t\t     Select From Library\r\n\t\t\t\t\t\t\t\t\t\t\t<     /h5> */}\r\n                                                <span className='aboutToUploadImagesContainer__uploadItem-plus'>\r\n                                                    <PlusOutlined />\r\n                                                </span>\r\n                                            </div>\r\n                                        </Tooltip>\r\n                                    </>\r\n                                )}\r\n\r\n\r\n                            </div>\r\n\r\n                        </Modal>\r\n\r\n                        <MediaLibrary\r\n                            setvisible={setvisibleMedia}\r\n                            visible={visibleMedia}\r\n                            setmyImages={setmyImages}\r\n                            myImages={myImages}\r\n                            myGoddamnImages={myGoddamnImages}\r\n                            setMyGoddamnImages={setMyGoddamnImages}\r\n                            isModalOpenForImages={true}\r\n\r\n                        />\r\n                    </>\r\n                )}\r\n        </Formik>\r\n\r\n\r\n\r\n\r\n    );\r\n};\r\n\r\nexport default AddNewBrand;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useParams, useHistory } from \"react-router\";\r\n\r\n\r\n// import hooks\r\nimport { useHandleFetch } from \"../../hooks\";\r\n\r\n// import lib\r\nimport {\r\n    FileOutlined,\r\n    InboxOutlined,\r\n    RadiusUpleftOutlined,\r\n    RadiusUprightOutlined,\r\n    RadiusBottomleftOutlined,\r\n    RadiusBottomrightOutlined,\r\n    PlusOutlined,\r\n    DeleteOutlined,\r\n    EditOutlined,\r\n    CheckCircleOutlined\r\n} from '@ant-design/icons';\r\n\r\nimport { Skeleton, Empty, Popconfirm, Upload, message, Switch, Select, Button, notification, Table, Space, Input as CoolInput, Tooltip, Modal } from 'antd';\r\n\r\n\r\n// import components\r\nimport { DataTableSkeleton } from \"../../components/Placeholders\";\r\nimport BrandEdit from \"./BrandEdit\";\r\n\r\n\r\nconst { Column, ColumnGroup } = Table;\r\nconst { Search } = CoolInput;\r\n\r\n\r\ninterface Props {\r\n    productRecord?: any;\r\n}\r\n\r\nconst NewBrandDetail = (props: Props) => {\r\n    const [brandDetailState, handleBrandDetailFetch] = useHandleFetch({}, 'brandDetail');\r\n    const [brandProductsState, handleBrandProductsFetch] = useHandleFetch({}, 'brandProducts');\r\n\r\n    const params = useParams();\r\n    const history = useHistory();\r\n    const brandId = params['id'];\r\n    const [brandEditVisible, setBrandEditVisible] = useState(false);\r\n    const [brandDetailData, setBrandDetailData] = useState(false);\r\n\r\n\r\n    useEffect(() => {\r\n        const getBrandDetail = async () => {\r\n            const brandDetailRes = await handleBrandDetailFetch({\r\n                urlOptions: {\r\n                    placeHolders: {\r\n                        id: brandId\r\n                    }\r\n                }\r\n            }); \r\n\r\n            // @ts-ignore\r\n            if(brandDetailRes){\r\n                // @ts-ignore\r\n                setBrandDetailData(brandDetailRes)\r\n            }; \r\n\r\n\r\n            console.log('brandDetailRes',brandDetailRes);\r\n\r\n\r\n        };\r\n\r\n        getBrandDetail();\r\n\r\n    }, [brandId]);\r\n\r\n    useEffect(() => {\r\n\r\n        const getBrandProducts = async () => {\r\n            await handleBrandProductsFetch({\r\n                urlOptions: {\r\n                    placeHolders: {\r\n                        id: brandId\r\n                    }\r\n                }\r\n            })\r\n        };\r\n\r\n        getBrandProducts();\r\n\r\n    }, [brandId]);\r\n\r\n\r\n\r\n\r\n    console.log('brandProductsState', brandProductsState);\r\n\r\n    console.log('brandParams', params);\r\n\r\n\r\n    return (\r\n        <div className='brandDetailContainer'>\r\n\r\n\r\n\r\n\r\n            <div className='brandDetailContainer__heading'>\r\n                <h3>\r\n                    Brand Detail\r\n                </h3>\r\n\r\n\r\n                {brandDetailState.done && brandDetailData && (Object.keys(brandDetailData).length > 0) && (\r\n                    <>\r\n                        <BrandEdit\r\n                            brandEditVisible={brandEditVisible}\r\n                            setBrandEditVisible={setBrandEditVisible}\r\n                            brandDetailData={brandDetailData}\r\n                            setBrandDetailData={setBrandDetailData}\r\n                        />\r\n                        <Button\r\n                            onClick={() => setBrandEditVisible(true)}\r\n                            type='link'\r\n                            icon={<EditOutlined />}\r\n                        >\r\n                            Edit\r\n                      </Button>\r\n                    </>\r\n                )}\r\n\r\n            </div>\r\n            <Skeleton\r\n                avatar paragraph={{ rows: 3 }}\r\n                loading={brandDetailState.isLoading}>\r\n                {brandDetailState.done && brandDetailData && !(Object.keys(brandDetailData).length > 0) && (\r\n                    <Empty description='No Brand found' image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n                )}\r\n\r\n                {brandDetailState.done && brandDetailData && (Object.keys(brandDetailData).length > 0) && (\r\n                    <div className='brandDetailContainer__header'>\r\n                        <div className='brandDetailContainer__header-coverContainer'>\r\n                            <img src={brandDetailData['cover'] && brandDetailData['cover']['cover']} alt=\"\" />\r\n                        </div>\r\n                        <div className='brandDetailContainer__header-info'>\r\n                            <h2>\r\n                                {brandDetailData['name']}\r\n                            </h2>\r\n                            <h3>\r\n                                {brandDetailData['description']}\r\n                            </h3>\r\n\r\n                            {brandDetailData['url'] && (\r\n                                <h3>\r\n                                    URL:\r\n                                    <span>\r\n                                        {brandDetailData['url']}\r\n                                    </span>\r\n\r\n                                </h3>\r\n                            )}\r\n                        </div>\r\n                    </div>\r\n                )}\r\n\r\n            </Skeleton>\r\n\r\n            <div className='brandDetailContainer__heading'>\r\n                <h3>\r\n                    Products\r\n                </h3>\r\n            </div>\r\n            <div className='brandDetailContainer__body'>\r\n                {brandProductsState.isLoading && <DataTableSkeleton />}\r\n                {brandProductsState.done && !(brandProductsState.data.length > 0) && (\r\n                    <div style={{\r\n                        marginTop: '100px'\r\n                    }}>\r\n                        <Empty description='No Products exists for this brand' image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n                    </div>\r\n                )}\r\n\r\n                {brandProductsState.done && brandProductsState.data && brandProductsState.data.length > 0 && (\r\n                    <>\r\n                        <Table\r\n                            style={{\r\n                                paddingTop: '10px',\r\n                                borderRadius: '5px !important',\r\n                                overflow: 'hidden',\r\n                                boxShadow: '0 0.125rem 0.625rem rgba(227, 231, 250, 0.3), 0 0.0625rem 0.125rem rgba(206, 220, 233, 0.4)'\r\n                            }}\r\n                            // expandable={{\r\n                            //     expandedRowRender: record => <p style={{ margin: 0 }}>{record.name}</p>,\r\n                            //     rowExpandable: record => record.name !== 'Not Expandable',\r\n                            //   }}\r\n                            // bordered={true}\r\n                            size='small'\r\n                            // pagination={false}\r\n                            dataSource={brandProductsState.data}\r\n                            tableLayout={'auto'}\r\n                            onHeaderRow={column => {\r\n                                return {\r\n                                    style: {\r\n                                        color: 'red !important'\r\n                                    }\r\n\r\n                                };\r\n                            }}\r\n                        >\r\n                            <Column\r\n                                title=\"\"\r\n                                dataIndex=\"cover\"\r\n                                key=\"id\"\r\n                                width={'80px'}\r\n\r\n                                className='classnameofthecolumn'\r\n\r\n                                render={(cover, record: any) => (\r\n                                    <>\r\n                                        <img\r\n                                            onClick={() => {\r\n                                                history.push(`/admin/product/${record.id}`)\r\n                                            }}\r\n                                            src={cover} alt='cover img' style={{\r\n                                                height: '40px',\r\n                                                width: '40px',\r\n                                                objectFit: \"contain\",\r\n                                                borderRadius: '3px',\r\n                                                cursor: 'pointer'\r\n                                            }} />\r\n\r\n\r\n\r\n\r\n                                    </>\r\n                                )}\r\n                            />\r\n\r\n                            <Column\r\n                                title=\"Name\"\r\n                                dataIndex=\"name\"\r\n                                key=\"id\"\r\n                                className='classnameofthecolumn'\r\n                                render={(text, record: any) => (\r\n                                    <>\r\n                                        <h4\r\n                                            onClick={() => {\r\n                                                history.push(`/admin/product/${record.id}`)\r\n                                            }}\r\n                                            style={{\r\n                                                fontWeight: 400,\r\n                                                color: '#555',\r\n                                                cursor: 'pointer'\r\n\r\n                                            }}>\r\n                                            {text}\r\n                                        </h4>\r\n\r\n\r\n                                    </>\r\n                                )}\r\n\r\n                            />\r\n\r\n                            <Column\r\n                                title=\"Offer Price\"\r\n                                dataIndex=\"offerPrice\"\r\n                                key=\"id\"\r\n                                className='classnameofthecolumn'\r\n\r\n                            />\r\n\r\n\r\n                            <Column\r\n                                title=\"Price\"\r\n                                dataIndex=\"price\"\r\n                                key=\"id\"\r\n                                className='classnameofthecolumn'\r\n\r\n                            />\r\n\r\n                            \r\n                            <Column\r\n                                title=\"Available\"\r\n                                dataIndex=\"available\"\r\n                                key=\"id\"\r\n                                className='classnameofthecolumn'\r\n\r\n                            />\r\n\r\n\r\n                            <Column\r\n                                title=\"Minimum\"\r\n                                dataIndex=\"minimum\"\r\n                                key=\"id\"\r\n                                className='classnameofthecolumn'\r\n\r\n                            />\r\n\r\n\r\n                        </Table>\r\n                    </>\r\n                )}\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NewBrandDetail\r\n","import React, { useState, useEffect } from 'react';\r\nimport { AutoComplete } from 'antd';\r\n\r\nimport InputSmall from '../../components/Field/InputSmall';\r\nimport { useFetch } from \"../../hooks\";\r\nimport {\r\n    DeleteOutlined\r\n} from '@ant-design/icons';\r\n\r\nconst Complete = ({ setAttributeList, attributeList, attribute }) => {\r\n\r\n    const [suggestedOptions, setsuggesteOptions] = useState([]);\r\n    const attributeLisState = useFetch([], [], 'attributeList', {});\r\n\r\n\r\n    const [attributeItem, setAttributeITem] = useState({\r\n        name: attribute.name,\r\n        value: attribute.value\r\n    })\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        const positionInAttribute = () => {\r\n            return attributeList.map(item => item.id).indexOf(attribute.id);\r\n        }\r\n\r\n        const index = positionInAttribute();\r\n\r\n        const updatedItem = Object.assign({}, attributeList[index], { ...attributeItem });\r\n        const updateAttributeList = [...attributeList.slice(0, index), updatedItem, ...attributeList.slice(index + 1)];\r\n        setAttributeList(updateAttributeList);\r\n\r\n    }, [attributeItem])\r\n\r\n\r\n    const handleAttributeDelete = () => {\r\n\r\n        const updateAttributeList = attributeList.filter(item => item.id !== attribute.id);\r\n        setAttributeList(updateAttributeList);\r\n    }\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        if (attributeLisState.data && Object.keys(attributeLisState.data).length > 0) {\r\n            const options = Object.keys(attributeLisState.data);\r\n            const manupulatedOptions = options.map(option => {\r\n                return {\r\n                    value: option\r\n                }\r\n            })\r\n            setsuggesteOptions(manupulatedOptions);\r\n        };\r\n    }, [attributeLisState.data]);\r\n\r\n\r\n\r\n\r\n\r\n\r\n    const handleAttributeSelect = (value) => {\r\n\r\n        if (attributeLisState && Object.keys(attributeLisState.data).length > 0) {\r\n            if (attributeLisState.data[value]) {\r\n                setAttributeITem({\r\n                    ...attribute,\r\n                    name: value,\r\n                    value: attributeLisState.data[value]\r\n                })\r\n            }\r\n\r\n        }\r\n\r\n        else {\r\n            setAttributeITem({\r\n                ...attribute,\r\n                name: value\r\n            })\r\n        }\r\n\r\n\r\n    }\r\n\r\n    const handleAttributeValueChange = (e) => {\r\n        setAttributeITem({\r\n            ...attribute,\r\n            value: e.target.value\r\n        });\r\n    }\r\n\r\n    return (\r\n        <>\r\n\r\n            <div\r\n                key={attribute.id}\r\n                className='addProductGridContainer__item-body-variationCard-item-attribute-item'>\r\n                <div\r\n                    onClick={handleAttributeDelete}\r\n                    className='addProductGridContainer__item-body-variationCard-item-attribute-item-delete'>\r\n                    <DeleteOutlined />\r\n                </div>\r\n\r\n                <h3 className='inputFieldLabel-small'>\r\n                    Name\r\n                </h3>\r\n                <AutoComplete\r\n                    value={attribute.name}\r\n                    style={{ width: '100%' }}\r\n                    options={suggestedOptions}\r\n                    placeholder=\"attribute\"\r\n                    onChange={handleAttributeSelect}\r\n                    filterOption={(inputValue, suggestedOption) =>\r\n                        suggestedOption.value.toUpperCase().indexOf(inputValue.toUpperCase()) !== -1\r\n                    }\r\n                />\r\n\r\n                {attribute.name && (\r\n                    <>\r\n                        <div style={{ marginTop: '10px' }}></div>\r\n                        <InputSmall\r\n                            label='Value'\r\n                            value={attribute.value}\r\n                            name='value'\r\n                            onChange={handleAttributeValueChange}\r\n                        />\r\n                    </>\r\n                )}\r\n\r\n\r\n            </div>\r\n\r\n\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Complete;\r\n","import React, { useState } from 'react';\r\nimport Attributes from \"./Attributes\";\r\nimport AddAttributeValues from \"../attribute/AddAttributeValues\";\r\nimport InputSmall from '../../components/Field/InputSmall';\r\nimport { Button } from 'antd';\r\nimport {\r\n\r\n\tPlusOutlined,\r\n\tCheckOutlined\r\n} from '@ant-design/icons';\r\n\r\ninterface Props {\r\n\thandleAddPricing: any;\r\n}\r\n\r\nconst Pricing = ({\r\n\thandleAddPricing\r\n}: Props) => {\r\n\r\n\tconst [price, setprice] = useState({\r\n\t\tregular: \"\",\r\n\t\toffer: \"\"\r\n\t});\r\n\tconst [stock, setStock] = useState({\r\n\t\tavailable: \"\",\r\n\t\tminimum: \"\"\r\n\t});\r\n\r\n\r\n\tconst [attributeList, setAttributeList] = useState([]);\r\n\r\n\tconst handlePriceChange = e => {\r\n\t\tconst name = e.target.name;\r\n\t\tconst value = e.target.value;\r\n\r\n\r\n\t\tsetprice({\r\n\t\t\t...price,\r\n\t\t\t[name]: value\r\n\t\t});\r\n\t};\r\n\r\n\tconst handleStockChange = e => {\r\n\t\tconst name = e.target.name;\r\n\t\tconst value = e.target.value;\r\n\r\n\t\tsetStock({\r\n\t\t\t...stock,\r\n\t\t\t[name]: value\r\n\t\t});\r\n\t};\r\n\r\n\r\n\tconst handleSavePricing = (e) => {\r\n\t\te.preventDefault();\r\n\r\n\t\tif (attributeList.length > 0) {\r\n\t\t\tconst attribute = {};\r\n\r\n\t\t\tfor (let item of attributeList) {\r\n\r\n\t\t\t\tconsole.log('itemofattribute', item);\r\n\t\t\t\tif (item['value'] && item['name']) {\r\n\t\t\t\t\tattribute[item['name']] = item['value']\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\r\n\t\t\tconst priceItem = {\r\n\t\t\t\tprice: price,\r\n\t\t\t\tstock: stock,\r\n\t\t\t\tattribute: attribute\r\n\t\t\t}\r\n\r\n\r\n\t\t\tsetprice({\r\n\t\t\t\tregular: \"\",\r\n\t\t\t\toffer: \"\"\r\n\t\t\t})\r\n\t\t\tsetStock({ available: \"\", minimum: \"\" })\r\n\t\t\thandleAddPricing(priceItem);\r\n\t\t\tsetAttributeList([]);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tconst priceItem = {\r\n\t\t\t\tprice: price,\r\n\t\t\t\tstock: stock,\r\n\t\t\t\tattribute: {}\r\n\t\t\t}\r\n\r\n\t\t\tsetprice({\r\n\t\t\t\tregular: \"\",\r\n\t\t\t\toffer: \"\"\r\n\t\t\t})\r\n\t\t\tsetStock({ available: \"\", minimum: \"\" })\r\n\t\t\tsetAttributeList([]);\r\n\t\t\thandleAddPricing(priceItem);\r\n\t\t}\r\n\r\n\t}\r\n\r\n\r\n\tconst handleAddAttribute = () => {\r\n\t\tsetAttributeList([...attributeList, {\r\n\t\t\tname: '',\r\n\t\t\tvalue: '',\r\n\t\t\tid: `${attributeList.length}`\r\n\t\t}])\r\n\t}\r\n\r\n\r\n\tconst getiCreatePricingIsDisabled = () => {\r\n\t\tif (!price.regular || !stock.available) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\telse return false;\r\n\t}\r\n\r\n\t// console.log('attributeList', attributeList);\r\n\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<div className='addProductGridContainer__item-body-variationCard'>\r\n\r\n\t\t\t\t<div className='addProductGridContainer__item-body-variationCard-left'>\r\n\r\n\t\t\t\t\t<div className='addProductGridContainer__item-body-variationCard-item'>\r\n\t\t\t\t\t\t<h4>\r\n\t\t\t\t\t\t\tPrice\r\n\t\t\t\t</h4>\r\n\t\t\t\t\t\t<div className='addProductGridContainer__item-body-variationCard-item-container'>\r\n\t\t\t\t\t\t\t<div className='addProductGridContainer__item-body-variationCard-item-container-left'>\r\n\t\t\t\t\t\t\t\t<InputSmall\r\n\t\t\t\t\t\t\t\t\tlabel='Regular  *'\r\n\t\t\t\t\t\t\t\t\tvalue={price.regular}\r\n\t\t\t\t\t\t\t\t\tname='regular'\r\n\t\t\t\t\t\t\t\t\tonChange={handlePriceChange}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className='addProductGridContainer__item-body-variationCard-item-container-right'>\r\n\t\t\t\t\t\t\t\t<InputSmall\r\n\t\t\t\t\t\t\t\t\tsize='small'\r\n\t\t\t\t\t\t\t\t\tlabel='Offer'\r\n\t\t\t\t\t\t\t\t\tvalue={price.offer}\r\n\t\t\t\t\t\t\t\t\tname='offer'\r\n\t\t\t\t\t\t\t\t\tonChange={handlePriceChange}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\t\t\t\t\t\t<div className='addProductGridContainer__item-body-variationCard-item'>\r\n\t\t\t\t\t\t\t<h4>\r\n\t\t\t\t\t\t\t\tStock\r\n\t\t\t\t</h4>\r\n\t\t\t\t\t\t\t<div className='addProductGridContainer__item-body-variationCard-item-container'>\r\n\t\t\t\t\t\t\t\t<div className='addProductGridContainer__item-body-variationCard-item-container-left'>\r\n\t\t\t\t\t\t\t\t\t<InputSmall\r\n\t\t\t\t\t\t\t\t\t\tlabel='Available  *'\r\n\t\t\t\t\t\t\t\t\t\tvalue={stock.available}\r\n\t\t\t\t\t\t\t\t\t\tname='available'\r\n\t\t\t\t\t\t\t\t\t\tonChange={handleStockChange}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\r\n\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className='addProductGridContainer__item-body-variationCard-item-container-right'>\r\n\r\n\t\t\t\t\t\t\t\t\t<InputSmall\r\n\t\t\t\t\t\t\t\t\t\tlabel='Minimum'\r\n\t\t\t\t\t\t\t\t\t\tvalue={stock.minimum}\r\n\t\t\t\t\t\t\t\t\t\tname='minimum'\r\n\t\t\t\t\t\t\t\t\t\tonChange={handleStockChange}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\t\t\t\t\t<div className='addProductGridContainer__item-body-variationCard-right'>\r\n\t\t\t\t\t\t<div className='addProductGridContainer__item-body-variationCard-item'>\r\n\t\t\t\t\t\t\t<h4>\r\n\t\t\t\t\t\t\t\tAttributes\r\n\t\t\t\t</h4>\r\n\t\t\t\t\t\t\t<div className='addProductGridContainer__item-body-variationCard-item-attribute'>\r\n\r\n\t\t\t\t\t\t\t\t{attributeList.map(attribute => {\r\n\t\t\t\t\t\t\t\t\treturn <Attributes\r\n\t\t\t\t\t\t\t\t\t\tattribute={attribute}\r\n\t\t\t\t\t\t\t\t\t\tattributeList={attributeList} setAttributeList={setAttributeList} />\r\n\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t<Button size='small'\r\n\t\t\t\t\t\t\t\t\tonClick={handleAddAttribute}\r\n\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\twidth: '180px',\r\n\t\t\t\t\t\t\t\t\t\tminHeight: '75px',\r\n\t\t\t\t\t\t\t\t\t\tmarginTop: '0px',\r\n\t\t\t\t\t\t\t\t\t\tborderRadius: \"8px\"\r\n\t\t\t\t\t\t\t\t\t}} type=\"dashed\" icon={<PlusOutlined />}>Add Attribute</Button>\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\r\n\r\n\t\t\t{/* <Button\r\n          // type=\"primary\"\r\n         \r\n          icon={<PlusOutlined />}\r\n          onClick={() => setAddNewCategoryVisible(true)}\r\n        >\r\n        Add New\r\n      </Button> */}\r\n\r\n\t\t\t<Button\r\n\r\n\t\t\t\tstyle={{\r\n\t\t\t\t\tmarginLeft: '10px'\r\n\t\t\t\t}}\r\n\t\t\t\tonClick={handleSavePricing}\r\n\t\t\t\tdisabled={getiCreatePricingIsDisabled()}\r\n\t\t\t\tclassName='btnAddToPrice'\r\n\t\t\t\ticon={<CheckOutlined />}\r\n\t\t\t>\r\n\t\t\t\tAdd To Pricing\r\n\t\t\t\t</Button>\r\n\r\n\r\n\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nexport default Pricing\r\n","import React, { useState, useEffect } from 'react';\r\n\r\n// import hooks \r\nimport { useHandleFetch } from '../../hooks';\r\n\r\n\r\n// import libraries \r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { message, Tooltip, Modal, Tabs, Empty, Badge } from 'antd';\r\nimport CKEditor from '@ckeditor/ckeditor5-react';\r\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\r\n\r\n\r\nimport {\r\n\tDeleteOutlined,\r\n\tFileAddOutlined,\r\n\tCheckCircleOutlined,\r\n\tFileImageFilled,\r\n\tFileImageOutlined,\r\n\tFileImageTwoTone,\r\n\tPlusOutlined,\r\n\tPlusCircleOutlined,\r\n\tCloseOutlined,\r\n\tCheckOutlined,\r\n\tInfoCircleOutlined\r\n} from '@ant-design/icons';\r\n\r\n// import ReactQuill from 'react-quill';\r\n// import 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport MediaLibrary from \"../../components/MediaLibrary\";\r\nimport DatePicker from \"../../components/Field/DatePicker\";\r\nimport { openSuccessNotification, openErrorNotification } from \"../../components/Notification\";\r\nimport Tags from \"./Tags\";\r\nimport Brands from \"./Brands\";\r\nimport Categories from \"./Categories\";\r\nimport Pricing from \"./Pricing\";\r\nimport MetaTags from \"../category/MetaTags\";\r\n\r\nconst { TabPane } = Tabs;\r\n\r\nconst validationSchema = Yup.object().shape({\r\n\tname: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\n\r\nconst initialValues = {\r\n\tname: '',\r\n\tdescription: '',\r\n\tmodel: '',\r\n\tunit: '',\r\n\tregular: '',\r\n\toffer: '',\r\n\tavailable: '',\r\n\tminimum: '',\r\n\timage: [],\r\n\turl: '',\r\n\tcover: '',\r\n\tpricing: [],\r\n\tvenue: '',\r\n\tdate: '',\r\n\ttime: '',\r\n\tpurchaseLimit: null,\r\n\tbnUnit: '',\r\n\tbnName: '',\r\n\tbnDescription: '',\r\n\tmetaTitle: '',\r\n\tbnMetaTitle: '',\r\n\tmetaDescription: '',\r\n\tbnMetaDescription: '',\r\n\tmetaTags: '',\r\n\tbnMetaTags: '',\r\n}\r\n\r\n\r\ninterface Props {\r\n\taddNewCategoryVisible: any;\r\n\tsetAddNewCategoryVisible: any;\r\n\tproductList?: any;\r\n\tsetProductList?: any;\r\n}\r\n\r\nconst AddNewProduct = ({ addNewCategoryVisible, setAddNewCategoryVisible, productList, setProductList }: Props) => {\r\n\r\n\tconst [addProductState, handleAddProductFetch] = useHandleFetch({}, 'addProduct');\r\n\tconst [visible, setvisible] = useState(false);\r\n\tconst [myImages, setmyImages] = useState(false);\r\n\tconst [myThumbnailImage, setmyThumbnailImage] = useState(false);\r\n\tconst [isModalOpenForThumbnail, setisModalOpenForThumbnail] = useState(false);\r\n\tconst [isModalOpenForImages, setisModalOpenForImages] = useState(false);\r\n\tconst [categoryids, setcategoryIds] = useState([]);\r\n\tconst [tagIds, setTagIds] = useState([]);\r\n\tconst [brandId, setBrandId] = useState('');\r\n\tconst [pricing, setPricing] = useState([]);\r\n\tconst [coverImageId, setCoverImageId] = useState('');\r\n\tconst [categoryOptions, setCategoryOptions] = useState([]);\r\n\tconst [selectedTags, setSelectedTags] = useState([]);\r\n\tconst [date, setDateFeild] = useState('');\r\n\tconst [time, setTimeFeild] = useState('');\r\n\tconst [description, setDescription] = useState('This product...');\r\n\tconst [bnDescription, setBNDescription] = useState('এই পণ্য...');\r\n\tconst [metaTags,setMetaTags] = useState([]);\r\n\tconst [bnMetaTags,setBnMetaTags] = useState([]);\r\n\r\n\tconst makeEmptyCategoryOptions = (setEmpty) => {\r\n\t\tsetEmpty([]);\r\n\t}\r\n\r\n\tconst handleSubmit = async (values: any, actions: any) => {\r\n\t\t// @ts-ignore\r\n\t\tconst imagesIds = myImages ? myImages.map(image => {\r\n\t\t\treturn image.id;\r\n\t\t}) : [];\r\n\r\n\t\tconst addProductRes = await handleAddProductFetch({\r\n\r\n\t\t\tbody: {\r\n\t\t\t\tname: values.name.trim(),\r\n\t\t\t\tdescription: description,\r\n\t\t\t\tmodel: values.model,\r\n\t\t\t\tunit: values.unit,\r\n\t\t\t\tcategory: categoryids,\r\n\t\t\t\ttags: tagIds,\r\n\t\t\t\tbrand: brandId,\r\n\t\t\t\timage: imagesIds,\r\n\t\t\t\tcover: coverImageId || imagesIds[0] ? imagesIds[0] : '',\r\n\t\t\t\tpricing: pricing,\r\n\t\t\t\t// date: date,\r\n\t\t\t\t// time: time,\r\n\t\t\t\t// venue: values.venue,\r\n\t\t\t\t// purchaseLimit: values.purchaseLimit,\r\n\t\t\t\tmetaTitle: values.metaTitle,\r\n\t\t\t\tmetaDescription: values.metaDescription,\r\n\t\t\t\tmetaTags: metaTags.join(','),\r\n\r\n\t\t\t\t\r\n\t\t\t\tbn: {\r\n\t\t\t\t\tmetaTitle: values.bnMetaTitle,\r\n\t\t\t\t\tmetaDescription: values.bnMetaDescription,\r\n\t\t\t\t\tmetaTags: bnMetaTags.join(','),\r\n\t\t\t\t\tname: values.bnName.trim(),\r\n\t\t\t\t\tunit: values.metaUnit,\r\n\t\t\t\t\tdescription: values.bnDescription,\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t});\r\n\r\n\r\n\t\t// @ts-ignore\r\n\t\tif (addProductRes && addProductRes.status === 'ok') {\r\n\t\t\topenSuccessNotification('Product Created');\r\n\r\n\t\t\tsetProductList([...productList, {\r\n\t\t\t\tid: addProductRes['id'] || '',\r\n\t\t\t\tkey: addProductRes['id'] || '',\r\n\t\t\t\tname: addProductRes['name'] || '',\r\n\t\t\t\tdescription: addProductRes['description'] || '',\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\t...addProductRes\r\n\t\t\t}])\r\n\t\t\tsetAddNewCategoryVisible(false)\r\n\t\t\t// @ts-ignore\r\n\t\t\tsetmyImages([]);\r\n\t\t\tsetCoverImageId('');\r\n\t\t\tsetPricing([]);\r\n\t\t\tsetTagIds([]);\r\n\t\t\tsetSelectedTags([]);\r\n\t\t\tsetBrandId(\"\");\r\n\t\t\tsetcategoryIds([]);\r\n\t\t\tsetCategoryOptions([]);\r\n\t\t\tactions.resetForm();\r\n\t\t}\r\n\t\telse {\r\n\t\t\t// openErrorNotification();\r\n\t\t}\r\n\r\n\t\tactions.setSubmitting(false);\r\n\r\n\r\n\t};\r\n\r\n\r\n\r\n\tuseEffect(() => {\r\n\t\tif (!addProductState['isLoading']) {\r\n\t\t\tconst error = addProductState['error'];\r\n\t\t\tif (error['isError'] && Object.keys(error['error']).length > 0) {\r\n\r\n\r\n\t\t\t\tconst errors =\r\n\t\t\t\t\tObject.values(error['error']).length > 0\r\n\t\t\t\t\t\t? Object.values(error['error'])\r\n\t\t\t\t\t\t: [];\r\n\t\t\t\terrors.forEach((err, i) => {\r\n\t\t\t\t\tif (typeof err === 'string') {\r\n\t\t\t\t\t\topenErrorNotification(err)\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if (typeof err === 'object') {\r\n\t\t\t\t\t\tif (err && Object.keys(err).length > 0) {\r\n\t\t\t\t\t\t\tconst errs = Object.values(err);\r\n\t\t\t\t\t\t\terrs.forEach(err => {\r\n\t\t\t\t\t\t\t\topenErrorNotification(err)\r\n\t\t\t\t\t\t\t})\r\n\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t}, [addProductState])\r\n\r\n\r\n\tconst handleCancel = (e: any) => {\r\n\t\tsetAddNewCategoryVisible(false);\r\n\t};\r\n\r\n\r\n\tconst getisSubmitButtonDisabled = (values, isValid) => {\r\n\t\tif (!values.name || !(pricing.length > 0) || !isValid) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\r\n\tconst handleImagesDelete = (id) => {\r\n\t\t// @ts-ignore\r\n\t\tconst newImages = myImages && myImages.filter(image => {\r\n\t\t\treturn image.id !== id;\r\n\t\t})\r\n\r\n\t\tsetmyImages(newImages);\r\n\t}\r\n\r\n\tconst handleDeleteFromSelectedImage = () => {\r\n\r\n\t};\r\n\r\n\tconst handleThumbnailImageDelete = (id) => {\r\n\t\t// @ts-ignore\r\n\t\tconst newImages = myThumbnailImage && myThumbnailImage.filter(image => {\r\n\t\t\treturn image.id !== id;\r\n\t\t})\r\n\r\n\t\tif (newImages.length > 0) {\r\n\t\t\tsetmyThumbnailImage(newImages);\r\n\r\n\t\t}\r\n\t\telse setmyThumbnailImage(false);\r\n\t}\r\n\r\n\r\n\r\n\r\n\r\n\tconst handleAddPricing = (priceItem) => {\r\n\r\n\t\tsetPricing([{\r\n\t\t\t...priceItem,\r\n\t\t\tid: pricing.length\r\n\t\t}, ...pricing])\r\n\t\tmessage.info('Product Pricing Added');\r\n\t}\r\n\r\n\r\n\tconst handleDeletePricing = (id) => {\r\n\t\tconst newPricing = pricing.filter(item => item.id !== id);\r\n\t\tsetPricing(newPricing);\r\n\t\tmessage.info('Product Pricing Deleted');\r\n\t}\r\n\r\n\r\n\r\n\tconst isCategoryInValid = () => {\r\n\t\tif (addProductState.error['error']['category'] && !categoryids && categoryids.length) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\telse if (categoryids && categoryids.length > 0) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\r\n\tconst handleDateChange = (date, dateString) => {\r\n\t\tsetDateFeild(dateString);\r\n\t\t// console.log('date', date, dateString);\r\n\t}\r\n\r\n\tconst handleTimeChange = (date, dateString) => {\r\n\t\tsetTimeFeild(dateString);\r\n\t\t// console.log('date', date, dateString);\r\n\t}\r\n\r\n\r\n\r\n\treturn (\r\n\t\t<Formik\r\n\t\t\tonSubmit={(values, actions) => handleSubmit(values, actions)}\r\n\t\t\tvalidationSchema={validationSchema}\r\n\t\t\tvalidateOnBlur={false}\r\n\t\t\tenableReinitialize={true}\r\n\t\t\tinitialValues={\r\n\t\t\t\t{ ...initialValues }\r\n\t\t\t}\r\n\t\t>\r\n\t\t\t{({\r\n\t\t\t\thandleChange,\r\n\t\t\t\tvalues,\r\n\t\t\t\thandleSubmit,\r\n\t\t\t\terrors,\r\n\t\t\t\tisValid,\r\n\t\t\t\tisSubmitting,\r\n\t\t\t\ttouched,\r\n\t\t\t\thandleBlur,\r\n\t\t\t\tsetFieldTouched,\r\n\t\t\t\thandleReset,\r\n\t\t\t}) => (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<Modal\r\n\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\ttop: '40px',\r\n\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\tbodyStyle={{\r\n\t\t\t\t\t\t\t\tmargin: 0,\r\n\t\t\t\t\t\t\t\tpadding: 0,\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\twidth={'70vw'}\r\n\t\t\t\t\t\t\ttitle=\"Add New Product\"\r\n\t\t\t\t\t\t\tvisible={addNewCategoryVisible}\r\n\t\t\t\t\t\t\tonOk={(e: any) => handleSubmit(e)}\r\n\t\t\t\t\t\t\tonCancel={handleCancel}\r\n\t\t\t\t\t\t\tokText='Create'\r\n\t\t\t\t\t\t\tokButtonProps={{\r\n\t\t\t\t\t\t\t\tloading: isSubmitting,\r\n\t\t\t\t\t\t\t\thtmlType: \"submit\",\r\n\t\t\t\t\t\t\t\tdisabled: getisSubmitButtonDisabled(values, isValid)\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\r\n\r\n\t\t\t\t\t\t\t<section className='addProductGridContainer'>\r\n\t\t\t\t\t\t\t\t<div className='addProductGridContainer__left'>\r\n\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__name'>\r\n\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__item-header'>\r\n\t\t\t\t\t\t\t\t\t\t\t<h3>\r\n\t\t\t\t\t\t\t\t\t\t\t\tProduct Information\r\n\t\t\t</h3>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<div className={values.name && values.name.length > 2 ? 'checkicon-active' : 'checkicon'}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<CheckCircleOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__item-body'>\r\n\t\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\t\tlabel='Name'\r\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.name}\r\n\t\t\t\t\t\t\t\t\t\t\t\tplaceHolder={'Rafty ox'}\r\n\t\t\t\t\t\t\t\t\t\t\t\tname='name'\r\n\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['name'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['name'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('name');\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\tlabel='BN Name'\r\n\t\t\t\t\t\t\t\t\t\t\tvalue={values.bnName}\r\n\t\t\t\t\t\t\t\t\t\t\tplaceHolder={'রাফতি অক্স'}\r\n\t\t\t\t\t\t\t\t\t\t\tname='bnName'\r\n\t\t\t\t\t\t\t\t\t\t\tisError={(touched.bnName && errors.bnName) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['bnName'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.bnName && errors.bnName) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['bnName'])}\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('bnName');\r\n\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t{/* <div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\tdisplay: 'flex',\r\n\t\t\t\t\t\t\t\t\t\t\t\tjustifyContent: 'space-between'\r\n\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\twidth: '48%',\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<DatePicker\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabel='Date'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={handleDateChange} />\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\twidth: '48%'\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<DatePicker\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tdate={date}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\twithTime={true}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder='Select time'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabel='Time'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={handleTimeChange} />\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t</div> */}\r\n\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t{/* \r\n\t\t\t\t\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\t\t\t\t\trows={1}\r\n\t\t\t\t\t\t\t\t\t\t\t\tlabel='Venue'\r\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.venue}\r\n\t\t\t\t\t\t\t\t\t\t\t\tname='venue'\r\n\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.venue && errors.venue) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['venue'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.venue && errors.venue) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['venue'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('venue');\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\t\tlabel='Purchase Limit'\r\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.purchaseLimit}\r\n\t\t\t\t\t\t\t\t\t\t\t\ttype='number'\r\n\t\t\t\t\t\t\t\t\t\t\t\tname='purchaseLimit'\r\n\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.purchaseLimit && errors.purchaseLimit) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['purchaseLimit'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.purchaseLimit && errors.purchaseLimit) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['purchaseLimit'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('purchaseLimit');\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t/> */}\r\n\r\n\r\n\t\t\t\t\t\t\t\t\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\t\tlabel='Unit'\r\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.unit}\r\n\t\t\t\t\t\t\t\t\t\t\t\tname='unit'\r\n\t\t\t\t\t\t\t\t\t\t    \tplaceHolder={'1KG,4KG,250GM'}\r\n\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.unit && errors.unit) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['unit'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.unit && errors.unit) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['unit'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('unit');\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\tlabel='BN Unit'\r\n\t\t\t\t\t\t\t\t\t\t\tvalue={values.bnUnit}\r\n\t\t\t\t\t\t\t\t\t\t\tplaceHolder={'১কেজি,২কেজি'}\r\n\t\t\t\t\t\t\t\t\t\t\tname='bnUnit'\r\n\t\t\t\t\t\t\t\t\t\t\tisError={(touched.bnUnit && errors.bnUnit) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['bnUnit'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.bnUnit && errors.bnUnit) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['bnUnit'])}\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('bnUnit');\r\n\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\t\tlabel='Model Number'\r\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.model}\r\n\t\t\t\t\t\t\t\t\t\t\t\tname='model'\r\n\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.model && errors.model) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['model'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.model && errors.model) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['model'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('model');\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\t\t\t\t\t\tDescription\r\n                                             </h3>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\twidth: '100%',\r\n\t\t\t\t\t\t\t\t\t\t\t\tmaxWidth: '100%'\r\n\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<CKEditor\r\n\t\t\t\t\t\t\t\t\t\t\t\t\teditor={ClassicEditor}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tdata={description}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonInit={editor => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t// You can store the \"editor\" and use when it is needed.\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tconsole.log('Editor is ready to use!', editor);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(event, editor) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tconst data = editor.getData();\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetDescription(data);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonBlur={(event, editor) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tconsole.log('Blur.', editor);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonFocus={(event, editor) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tconsole.log('Focus.', editor);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\t\t\t\t\t\tBN Description\r\n                                             </h3>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\twidth: '100%',\r\n\t\t\t\t\t\t\t\t\t\t\t\tmaxWidth: '100%'\r\n\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<CKEditor\r\n\t\t\t\t\t\t\t\t\t\t\t\t\teditor={ClassicEditor}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tdata={bnDescription}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonInit={editor => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t// You can store the \"editor\" and use when it is needed.\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tconsole.log('Editor is ready to use!', editor);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(event, editor) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tconst data = editor.getData();\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetBNDescription(data);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonBlur={(event, editor) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tconsole.log('Blur.', editor);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonFocus={(event, editor) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tconsole.log('Focus.', editor);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\r\n\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__price'>\r\n\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__item-header'>\r\n\t\t\t\t\t\t\t\t\t\t\t<h3>\r\n\t\t\t\t\t\t\t\t\t\t\t\tProduct Pricing\r\n\t\t\t</h3>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<div className={pricing && pricing.length > 0 ? 'checkicon-active' : 'checkicon'}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<CheckCircleOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__item-body'>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<Tabs\r\n\t\t\t\t\t\t\t\t\t\t\t\tanimated={true}\r\n\t\t\t\t\t\t\t\t\t\t\t\ttabPosition=\"top\"\r\n\t\t\t\t\t\t\t\t\t\t\t\ttype='card'\r\n\t\t\t\t\t\t\t\t\t\t\t>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t<TabPane tab=\"Add Variation\" key=\"1\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Pricing handleAddPricing={handleAddPricing} />\r\n\t\t\t\t\t\t\t\t\t\t\t\t</TabPane>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<TabPane tab=\"Pricing List\" key=\"2\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__item-body-pricingContainer'>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{pricing.length > 0 && pricing.map(item => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__item-body-pricingContainer-item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__item-body-pricingContainer-item-edit'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* <span>\r\n\t\t\t\t\t\t\t<EditOutlined />\r\n\t\t\t\t\t\t\t</span> */}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className='d' onClick={() => handleDeletePricing(item.id)}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<DeleteOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__item-body-pricingContainer-item-two'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<h3>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tPrice\r\n\t\t\t\t\t\t</h3>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__item-body-pricingContainer-item-body'>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{item.price.offer ? (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<h4 >\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{item.price.offer}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</h4>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<h5 style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttextDecoration: \"line-through\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{item.price.regular}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</h5>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<h4>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{item.price.regular}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</h4>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{item.stock && (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Badge\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\toverflowCount={999}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcount={item.stock.available}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<h3>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tStock\r\n\t\t\t\t\t\t\t\t\t</h3>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Badge>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__item-body-pricingContainer-item-body'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<h6>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmin\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Badge\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"site-badge-count-4\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\toverflowCount={999}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcount={item.stock.minimum} />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</h6>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{item.attribute\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&& Object.values(item.attribute).length > 0 && (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<h3>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tAttributes\r\n\t\t\t\t\t\t</h3>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__item-body-pricingContainer-item-body'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{item.attribute\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&& Object.keys(item.attribute).length > 0\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&& Object.keys(item.attribute).map(attributeItem => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<h6>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{attributeItem}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</h6>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<h4>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{item.attribute[attributeItem]}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</h4>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t})}\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{!(pricing.length > 0) && <div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\twidth: '100%',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdisplay: 'flex',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tjustifyContent: 'center'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Empty description='No Pricing added' image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</TabPane>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t</Tabs>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__item-body-container'>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__image'>\r\n\r\n\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__item-header'>\r\n\t\t\t\t\t\t\t\t\t\t\t<h3>\r\n\t\t\t\t\t\t\t\t\t\t\t\tImage\r\n\t\t\t\t\t\t\t\t\t\t\t</h3>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<Tooltip\r\n\t\t\t\t\t\t\t\t\t\t\t\tplacement=\"left\" title={'Click on the image to select cover image, By default 1st image is selected as cover'}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<a href='###'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<InfoCircleOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__item-body'>\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='aboutToUploadImagesContainer'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t{myImages &&\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tmyImages.length > 0 && myImages.map((image, index) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className='aboutToUploadImagesContainer__item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='aboutToUploadImagesContainer__item-imgContainer'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => setCoverImageId(image.id)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<img src={image.cover} alt={image.alt} />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => handleImagesDelete(image.id)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='aboutToUploadImagesContainer__item-remove'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<CloseOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{coverImageId === image.id ? (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className='aboutToUploadImagesContainer__item-cover'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<CheckOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t) : !coverImageId && index === 0 && (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className='aboutToUploadImagesContainer__item-cover'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<CheckOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t})}\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Tooltip\r\n\t\t\t\t\t\t\t\t\t\t\t\t\ttitle={'Attach images'}>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetvisible(true);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetisModalOpenForImages(true);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetisModalOpenForThumbnail(false);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='aboutToUploadImagesContainer__uploadItem'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* <FileAddOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FileImageTwoTone />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FileImageOutlined /> */}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<FileImageFilled />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* <h5>\r\n\t\t\t\t\t\t\t\t\t\t\t\t     Select From Library\r\n\t\t\t\t\t\t\t\t\t\t\t<     /h5> */}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className='aboutToUploadImagesContainer__uploadItem-plus'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<PlusOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Tooltip>\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__image'>\r\n\r\n<div className='addProductGridContainer__item-header'>\r\n\t<h3>\r\n\tMeta Data\r\n</h3>\r\n\r\n\t<Tooltip\r\n\t\tplacement=\"left\" title={\"Meta data will be used to make the user's easy and for search engine optimization.\"}>\r\n\t\t<a href='###'>\r\n\t\t\t<InfoCircleOutlined />\r\n\t\t</a>\r\n\t</Tooltip>\r\n</div>\r\n<div className='addProductGridContainer__item-body'>\r\n\r\n                                \r\n<Input\r\n\t\t\t\t\t\t\t\tlabel='Meta title'\r\n\t\t\t\t\t\t\t\tvalue={values.metaTitle}\r\n\t\t\t\t\t\t\t\tplaceHolder={'category...'}\r\n\t\t\t\t\t\t\t\tname='metaTitle'\r\n\t\t\t\t\t\t\t\tisError={(touched.metaTitle && errors.metaTitle) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['metaTitle'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.metaTitle && errors.metaTitle) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['metaTitle'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('metaTitle')\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\tlabel='BN Meta title'\r\n\t\t\t\t\t\t\t\tvalue={values.bnMetaTitle}\r\n\t\t\t\t\t\t\t\tplaceHolder={'ক্যাটাগড়ি...'}\r\n\t\t\t\t\t\t\t\tname='bnMetaTitle'\r\n\t\t\t\t\t\t\t\tisError={(touched.bnMetaTitle && errors.bnMetaTitle) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['bnMetaTitle'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.bnMetaTitle && errors.bnMetaTitle) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['bnMetaTitle'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('bnMetaTitle');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\tlabel='Meta description'\r\n\t\t\t\t\t\t\t\tvalue={values.metaDescription}\r\n\t\t\t\t\t\t\t\tplaceholder={'meta...'}\r\n\t\t\t\t\t\t\t\tname='metaDescription'\r\n\t\t\t\t\t\t\t\tisError={(touched.metaDescription && errors.metaDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['metaDescription'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.metaDescription && errors.metaDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['metaDescription'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('metaDescription');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\tlabel='BN Meta Description'\r\n\t\t\t\t\t\t\t\tvalue={values.bnMetaDescription}\r\n\t\t\t\t\t\t\t\tplaceholder={'এইয় মেট...'}\r\n\t\t\t\t\t\t\t\tname='bnMetaDescription'\r\n\t\t\t\t\t\t\t\tisError={(touched.bnMetaDescription && errors.bnMetaDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['bnMetaDescription'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.bnMetaDescription && errors.bnMetaDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['bnMetaDescription'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('bnMetaDescription');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\tMeta Tags (grocery,fashion)\r\n\t\t\t\t\t\t\t</h3>\r\n\r\n\t\t\t\t\t\t\t<MetaTags\r\n\t\t\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\t\t\tsetTags={setMetaTags}\r\n\t\t\t\t\t\t\ttags={metaTags}\r\n\t\t\t\t\t\t\t />\r\n\r\n\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\tmarginTop:'15px'\r\n\t\t\t\t\t\t\t}}></div>\r\n\r\n\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\tBN Meta Tags (মুদিখানা,ফ্যাশন)\r\n\t\t\t\t\t\t\t</h3>\r\n\r\n\t\t\t\t\t\t\t<MetaTags\r\n\t\t\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\t\t\tsetTags={setBnMetaTags}\r\n\t\t\t\t\t\t\ttags={metaTags}\r\n\t\t\t\t\t\t\t />\r\n\r\n\t\r\n</div>\r\n</div>\r\n\r\n\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className='addProductGridContainer__right'>\r\n\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__category'>\r\n\r\n\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer-rightItemContainer'>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer-rightItemContainer-header'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<h3>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tCategories\r\n\t\t\t\t</h3>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Tooltip\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tcolor='red'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvisible={addProductState.error['error']['category'] && !(categoryids.length > 0)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tplacement=\"left\" title={'Select at least one category'}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div className={!(categoryids.length > 0)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t&& !addProductState.error['error']['category'] ? 'checkicon' : addProductState.error['error']['category'] ? 'checkicon-error' : 'checkicon-active'}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<CheckCircleOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Tooltip>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer-rightItemContainer-body'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Categories\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetCategoryOptions={setCategoryOptions}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tcategoryOptions={categoryOptions}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetcategoryIds={setcategoryIds} />\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__tag'>\r\n\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer-rightItemContainer'>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer-rightItemContainer-header'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<h3>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tTags\r\n\t\t\t\t</h3>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer-rightItemContainer-body'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Tags\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetSelectedTags={setSelectedTags}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tselectedTags={selectedTags}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetTagIds={setTagIds} />\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__brand'>\r\n\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer-rightItemContainer'>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer-rightItemContainer-header'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<h3>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tBrand\r\n\t\t\t\t</h3>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer-rightItemContainer-body'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Brands setBrandId={setBrandId} />\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</section>\r\n\r\n\r\n\t\t\t\t\t\t</Modal>\r\n\r\n\t\t\t\t\t\t<MediaLibrary\r\n\t\t\t\t\t\t\tsetvisible={setvisible}\r\n\t\t\t\t\t\t\tvisible={visible}\r\n\t\t\t\t\t\t\tsetmyImages={setmyImages}\r\n\t\t\t\t\t\t\tmyImages={myImages}\r\n\t\t\t\t\t\t\tsetmyThumbnailImage={setmyThumbnailImage}\r\n\t\t\t\t\t\t\tisModalOpenForThumbnail={isModalOpenForThumbnail}\r\n\t\t\t\t\t\t\tisModalOpenForImages={isModalOpenForImages}\r\n\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</>\r\n\t\t\t\t)}\r\n\t\t</Formik>\r\n\r\n\r\n\r\n\r\n\t);\r\n};\r\n\r\nexport default AddNewProduct;\r\n\r\n\r\n\r\n\r\n/*\r\n\r\n\r\nProduct variation ---->\r\n\r\nPrice [title]\r\n\t[regular input field] [offer inputfield]\r\n\r\nStock [title]\r\n\t[available input field] [minimum inputfield]\r\n\r\ndefault [default can be set to true]\r\n\r\nattributes [title]\r\n\t[add attributes name]\r\n\t\t[add attrubutes value]\r\n\r\n\t[add attributes name]\r\n\t\t[add attrubutes value\r\n\r\n*///","import React, { useState } from 'react';\r\nimport { Modal, notification } from 'antd';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport { useHandleFetch } from '../../hooks';\r\nimport { CheckCircleOutlined } from '@ant-design/icons';\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n\tname: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\n\r\nconst openSuccessNotification = () => {\r\n\tnotification.success({\r\n\t\tmessage: 'Product Updated',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t\tmessage: message || 'Something Went Wrong',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n};\r\n\r\n\r\n\r\ninterface Props {\r\n\tcategory: any;\r\n\tsetvisible: any;\r\n\tvisible: any;\r\n\tsetProductList?: any;\r\n\tproductList?: any;\r\n}\r\n\r\nconst QuickEdit = ({ category, setvisible, visible, setProductList, productList }: Props) => {\r\n\tconst [updateProductState, handleUpdateProductFetch] = useHandleFetch({}, 'updateProduct');\r\n\r\n\tconst handleSubmit = async (values: any, actions: any) => {\r\n\t\tconst updateProductRes = await handleUpdateProductFetch({\r\n\t\t\turlOptions: {\r\n\t\t\t\tplaceHolders: {\r\n\t\t\t\t\tid: values.id,\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tbody: {\r\n\t\t\t\tname: values.name,\r\n\t\t\t\tdescription: values.description,\r\n\t\t\t\tcategory: category.category,\r\n\t\t\t\tpricing: category.pricing\r\n\t\t\t},\r\n\t\t});\r\n\r\n\t\t// @ts-ignore\r\n\t\tif (updateProductRes && updateProductRes.status === 'ok') {\r\n\t\t\topenSuccessNotification();\r\n\r\n\t\t\tconst positionInAttribute = () => {\r\n\t\t\t\treturn productList.map(item => item.id).indexOf(category.id);\r\n\t\t\t}\r\n\r\n\t\t\tconst index = positionInAttribute();\r\n\r\n\t\t\t// @ts-ignore\r\n\t\t\tconst updatedItem = Object.assign({}, productList[index], { ...updateProductRes });\r\n\t\t\tconst updateProductList = [...productList.slice(0, index), updatedItem, ...productList.slice(index + 1)];\r\n\t\t\tsetProductList(updateProductList);\r\n\r\n\t\t}\r\n\t\telse {\r\n\t\t\topenErrorNotification();\r\n\t\t}\r\n\r\n\t\tactions.setSubmitting(false);\r\n\t\tsetvisible(false)\r\n\t};\r\n\r\n\r\n\tconst handleCancel = (e: any) => {\r\n\t\tsetvisible(false);\r\n\t};\r\n\r\n\r\n\tconst getisSubmitButtonDisabled = (values, isValid) => {\r\n\t\tif (!values.name || !isValid) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\treturn (\r\n\t\t<Formik\r\n\t\t\tonSubmit={(values, actions) => handleSubmit(values, actions)}\r\n\t\t\tvalidationSchema={validationSchema}\r\n\t\t\tvalidateOnBlur={false}\r\n\t\t\tenableReinitialize={true}\r\n\t\t\tinitialValues={\r\n\t\t\t\t{ ...category }\r\n\t\t\t}\r\n\t\t>\r\n\t\t\t{({\r\n\t\t\t\thandleChange,\r\n\t\t\t\tvalues,\r\n\t\t\t\thandleSubmit,\r\n\t\t\t\terrors,\r\n\t\t\t\tisValid,\r\n\t\t\t\tisSubmitting,\r\n\t\t\t\ttouched,\r\n\t\t\t\thandleBlur,\r\n\t\t\t\tsetFieldTouched,\r\n\t\t\t\thandleReset,\r\n\t\t\t}) => (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<Modal\r\n\t\t\t\t\t\t\ttitle=\"Quick Edit\"\r\n\t\t\t\t\t\t\tvisible={visible}\r\n\t\t\t\t\t\t\tonOk={(e: any) => handleSubmit(e)}\r\n\t\t\t\t\t\t\tonCancel={handleCancel}\r\n\t\t\t\t\t\t\tokText='Update'\r\n\t\t\t\t\t\t\tokButtonProps={{\r\n\t\t\t\t\t\t\t\tloading: isSubmitting,\r\n\t\t\t\t\t\t\t\thtmlType: \"submit\",\r\n\t\t\t\t\t\t\t\tdisabled: getisSubmitButtonDisabled(values, isValid)\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\tlabel='Title'\r\n\t\t\t\t\t\t\t\tvalue={values.name}\r\n\t\t\t\t\t\t\t\tname='name'\r\n\t\t\t\t\t\t\t\tisError={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateProductState.error['error']['name'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateProductState.error['error']['name'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('name');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\r\n\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\tlabel='Description'\r\n\t\t\t\t\t\t\t\tvalue={values.description}\r\n\t\t\t\t\t\t\t\tname='description'\r\n\t\t\t\t\t\t\t\tisError={(touched.description && errors.description) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateProductState.error['error']['description'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.description && errors.description) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateProductState.error['error']['description'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('description');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</Modal>\r\n\t\t\t\t\t</>\r\n\t\t\t\t)}\r\n\t\t</Formik>\r\n\t);\r\n};\r\n\r\n\r\nexport default QuickEdit;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { withRouter, useHistory } from 'react-router-dom';\r\nimport { notification, Empty, Table, Badge, Menu, Dropdown, Space, Tag, Button, Input, Tooltip, Popconfirm } from 'antd';\r\nimport { CheckCircleOutlined, PlusOutlined, EditOutlined, DeleteOutlined, EditFilled } from '@ant-design/icons';\r\n\r\n\r\n/// import hooks\r\nimport { useHandleFetch } from \"../../hooks\";\r\n\r\n// import components\r\nimport { DataTableSkeleton } from \"../../components/Placeholders\";\r\nimport AddNewProduct from \"./AddNewProduct\";\r\nimport ProductDetail from \"./ProductEdit\";\r\nimport QuickEdit from \"./QuickEdit\";\r\n\r\nconst { Column, ColumnGroup } = Table;\r\nconst { Search } = Input;\r\n\r\n\r\n\r\nconst openSuccessNotification = () => {\r\n  notification.success({\r\n    message: 'Product Deleted',\r\n    description: '',\r\n    icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n  });\r\n};\r\n\r\n\r\n\r\ninterface myTableProps {\r\n  data: any;\r\n  setProductList: any;\r\n}\r\n\r\n\r\nconst MyTable = ({ data, setProductList }: myTableProps) => {\r\n  const [visible, setvisible] = useState(false);\r\n  const [activeCategoryForEdit, setactiveCategoryForEdit] = useState(false);\r\n  const [deleteProductState, handleDeleteProductFetch] = useHandleFetch({}, 'deleteProduct');\r\n  const [productDetailVisible, setproductDetailVisible] = useState(false);\r\n\r\n  const history = useHistory();\r\n\r\n  const handleDeleteProduct = async (id) => {\r\n    const deleteProductRes = await handleDeleteProductFetch({\r\n      urlOptions: {\r\n        placeHolders: {\r\n          id,\r\n        }\r\n      }\r\n    });\r\n\r\n    // @ts-ignore\r\n    if (deleteProductRes && deleteProductRes.status === 'ok') {\r\n      openSuccessNotification();\r\n      const newProductList = data.filter(item => item.id !== id);\r\n      setProductList(newProductList);\r\n    }\r\n\r\n    // console.log('deleteProductRes', deleteProductRes)\r\n  }\r\n\r\n\r\n  return (\r\n    <>\r\n      <Table\r\n        style={{\r\n          paddingTop: '10px',\r\n          borderRadius: '5px !important',\r\n          overflow: 'hidden',\r\n          boxShadow: '0 0.125rem 0.625rem rgba(227, 231, 250, 0.3), 0 0.0625rem 0.125rem rgba(206, 220, 233, 0.4)'\r\n        }}\r\n        // expandable={{\r\n        //     expandedRowRender: record => <p style={{ margin: 0 }}>{record.name}</p>,\r\n        //     rowExpandable: record => record.name !== 'Not Expandable',\r\n        //   }}\r\n        // bordered={true}\r\n        size='small'\r\n        // pagination={false}\r\n        dataSource={data}\r\n        tableLayout={'auto'}\r\n        onHeaderRow={column => {\r\n          return {\r\n            style: {\r\n              color: 'red !important'\r\n            }\r\n\r\n          };\r\n        }}\r\n      >\r\n        <Column\r\n          title=\"\"\r\n          dataIndex=\"cover\"\r\n          key=\"id\"\r\n          width={'80px'}\r\n\r\n          className='classnameofthecolumn'\r\n\r\n          render={(cover, record: any) => (\r\n            <>\r\n              <img\r\n                onClick={() => {\r\n                  history.push(`/admin/product/${record.id}`)\r\n                  setactiveCategoryForEdit(record)\r\n                }}\r\n                src={cover} alt='cover img' style={{\r\n                  height: '40px',\r\n                  width: '40px',\r\n                  objectFit: \"contain\",\r\n                  borderRadius: '3px',\r\n                  cursor: 'pointer'\r\n                }} />\r\n\r\n\r\n\r\n\r\n            </>\r\n          )}\r\n        />\r\n\r\n        <Column\r\n          title=\"Name\"\r\n          dataIndex=\"name\"\r\n          key=\"id\"\r\n          className='classnameofthecolumn'\r\n          render={(text, record: any) => (\r\n            <>\r\n\r\n              <h4\r\n                onClick={() => {\r\n                  history.push(`/admin/product/${record.id}`)\r\n                  setactiveCategoryForEdit(record)\r\n                }}\r\n                style={{\r\n                  fontWeight: 400,\r\n                  color: '#555',\r\n                  cursor: 'pointer'\r\n\r\n                }}>\r\n                {text}\r\n              </h4>\r\n\r\n\r\n            </>\r\n          )}\r\n\r\n        />\r\n\r\n        <Column\r\n          title=\"Offer Price\"\r\n          dataIndex=\"offerPrice\"\r\n          key=\"id\"\r\n          className='classnameofthecolumn'\r\n\r\n        />\r\n\r\n\r\n        <Column\r\n          title=\"Price\"\r\n          dataIndex=\"price\"\r\n          key=\"id\"\r\n          className='classnameofthecolumn'\r\n\r\n        />\r\n\r\n\r\n                      <Column\r\n                                title=\"Available\"\r\n                                dataIndex=\"available\"\r\n                                key=\"id\"\r\n                                className='classnameofthecolumn'\r\n\r\n                            />\r\n\r\n\r\n                            <Column\r\n                                title=\"Minimum\"\r\n                                dataIndex=\"minimum\"\r\n                                key=\"id\"\r\n                                className='classnameofthecolumn'\r\n\r\n                            />\r\n\r\n\r\n\r\n        {/* <Column\r\n          title=\"Unit\"\r\n          dataIndex=\"unit\"\r\n          key=\"id\"\r\n          className='classnameofthecolumn'\r\n\r\n        /> */}\r\n        {/* <Column \r\n          \r\n          className='classnameofthecolumn'\r\n\r\n          title=\"Product\" dataIndex=\"product\" key=\"product\" /> */}\r\n\r\n        {/* <Column \r\n          \r\n          className='classnameofthecolumn'\r\n\r\n          title=\"Sub Category\" dataIndex=\"subCategory\" key=\"subCategory\" /> */}\r\n\r\n        {/* <Column\r\n          title=\"Tags\"\r\n          dataIndex=\"tags\"\r\n          key=\"tags\"\r\n          render={tags => (\r\n            <>\r\n              {tags.map((tag : any) => (\r\n                <Tag color=\"blue\" key={tag}>\r\n                  {tag}\r\n                </Tag>\r\n              ))}\r\n            </>\r\n          )}\r\n        /> */}\r\n        <Column\r\n\r\n          className='classnameofthecolumn'\r\n          title=\"\"\r\n          key=\"action\"\r\n          align='right'\r\n          render={(text, record: any) => (\r\n            <Space size=\"middle\">\r\n              <a href='##'>\r\n                <Tooltip\r\n\r\n                  placement=\"top\" title='Quick Edit Product'>\r\n                  <span className='iconSize' onClick={() => {\r\n                    setvisible(true)\r\n                    setactiveCategoryForEdit(record);\r\n                  }}>\r\n                    <EditOutlined />\r\n\r\n                  </span>\r\n                </Tooltip>\r\n              </a>\r\n\r\n              <Popconfirm\r\n\r\n                onConfirm={() => handleDeleteProduct(record.id)}\r\n                title=\"Are you sure？\" okText=\"Yes\" cancelText=\"No\">\r\n                <span\r\n                  className='iconSize iconSize-danger'\r\n                >\r\n                  <DeleteOutlined />\r\n                </span>\r\n\r\n              </Popconfirm>\r\n\r\n\r\n\r\n\r\n            </Space>\r\n          )}\r\n        />\r\n      </Table>\r\n\r\n\r\n\r\n      {activeCategoryForEdit && <QuickEdit\r\n        productList={data}\r\n        setProductList={setProductList}\r\n        setvisible={setvisible}\r\n        visible={visible}\r\n        category={activeCategoryForEdit} />}\r\n\r\n\r\n\r\n\r\n    </>\r\n  )\r\n}\r\n\r\n\r\ninterface Props {\r\n  history: any;\r\n}\r\n\r\nconst ProductList = ({ history }: Props) => {\r\n\r\n\r\n\r\n  const [productList, setProductList] = useState([]);\r\n\r\n  const [productState, handleProductListFetch] = useHandleFetch({}, 'productList');\r\n\r\n\r\n  useEffect(() => {\r\n    const setProducts = async () => {\r\n      const products = await handleProductListFetch({});\r\n      // @ts-ignore\r\n      setProductList(products);\r\n    }\r\n    setProducts();\r\n  }, [])\r\n\r\n\r\n  const [addNewCategoryVisible, setAddNewCategoryVisible] = useState(false);\r\n\r\n\r\n  // console.log('productState', productState)\r\n\r\n\r\n  const handleSearch = (value) => {\r\n    if (productState.data.length > 0) {\r\n      const newProductList = productState.data.filter(item => item.name.toLowerCase().includes(value.toLowerCase()));\r\n      setProductList(newProductList);\r\n    }\r\n\r\n  }\r\n\r\n\r\n  return (\r\n    <>\r\n      {/* <h2 className='containerPageTitle'>\r\n      Categories\r\n    </h2> */}\r\n      <div className='categoryListContainer'>\r\n        <div className='categoryListContainer__header'>\r\n\r\n\r\n          <div className='categoryListContainer__header-searchBar'>\r\n            <h2 className='categoryListContainer__header-title'>\r\n              Products\r\n            </h2>\r\n\r\n\r\n            <Search\r\n              enterButton={false}\r\n              className='searchbarClassName'\r\n              placeholder=\"search products..\"\r\n              onSearch={value => handleSearch(value)}\r\n            // style={{ width: 300 }}\r\n            />\r\n          </div>\r\n\r\n          <Button\r\n            // type=\"primary\"\r\n            className='btnPrimaryClassNameoutline'\r\n            icon={<PlusOutlined />}\r\n            onClick={() => setAddNewCategoryVisible(true)}\r\n          >\r\n            Add New\r\n      </Button>\r\n\r\n\r\n        </div>\r\n\r\n        <div className='categoryListContainer__afterHeader'>\r\n          {/* <Search\r\n      placeholder=\"search categories..\"\r\n      size=\"large\"\r\n      onSearch={value => console.log(value)}\r\n      style={{ width: 300 }}\r\n    /> */}\r\n        </div>\r\n\r\n\r\n        <div className='categoryListContainer__categoryList'>\r\n          {productState.done && productList.length > 0 && <MyTable\r\n            setProductList={setProductList}\r\n            data={productList} />}\r\n          {productState.isLoading && <DataTableSkeleton />}\r\n          {productState.done && !(productList.length > 0) && (\r\n            <div style={{\r\n              marginTop: '200px'\r\n            }}>\r\n              <Empty description='No Products found' image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n\r\n      {productState.done &&\r\n        <AddNewProduct\r\n          addNewCategoryVisible={addNewCategoryVisible}\r\n          setAddNewCategoryVisible={setAddNewCategoryVisible}\r\n          productList={productState.data}\r\n          setProductList={setProductList}\r\n\r\n\r\n        />}\r\n\r\n\r\n\r\n\r\n    </>\r\n  );\r\n};\r\n\r\nexport default withRouter(ProductList);\r\n","import React, { useState, useEffect } from 'react';\r\n\r\n// import hooks \r\nimport { useHandleFetch } from '../../hooks';\r\n\r\n\r\n// import libraries \r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { message, Tooltip, Modal, Tabs, Empty, Badge, Spin } from 'antd';\r\n\r\nimport {\r\n    DeleteOutlined,\r\n    FileAddOutlined,\r\n    CheckCircleOutlined,\r\n    FileImageFilled,\r\n    FileImageOutlined,\r\n    FileImageTwoTone,\r\n    PlusOutlined,\r\n    PlusCircleOutlined,\r\n    CloseOutlined,\r\n    CheckOutlined,\r\n    InfoCircleOutlined\r\n} from '@ant-design/icons';\r\nimport CKEditor from '@ckeditor/ckeditor5-react';\r\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\r\n\r\n\r\n\r\n// import ReactQuill from 'react-quill';\r\n// import 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport MediaLibrary from \"../../components/MediaLibrary\";\r\nimport DatePicker from \"../../components/Field/DatePicker\";\r\nimport { openSuccessNotification, openErrorNotification } from \"../../components/Notification\";\r\nimport Tags from \"./Tags\";\r\nimport Brands from \"./Brands\";\r\nimport Categories from \"./Categories\";\r\nimport Pricing from \"./Pricing\";\r\n\r\nconst { TabPane } = Tabs;\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    name: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\n\r\nconst initialValues = {\r\n    name: '',\r\n    description: '',\r\n    model: '',\r\n    unit: '',\r\n    regular: '',\r\n    offer: '',\r\n    available: '',\r\n    minimum: '',\r\n    image: [],\r\n    url: '',\r\n    cover: '',\r\n    pricing: [],\r\n    venue: '',\r\n    date: '',\r\n    time: '',\r\n    purchaseLimit: null\r\n}\r\n\r\ninterface Props {\r\n    productEditVisible?: any;\r\n    setProductEditVisible?: any;\r\n    productDetailData?: any;\r\n    setProductDetailData?:any; \r\n}\r\n\r\nconst AddNewProduct = ({ productEditVisible, \r\n    setProductEditVisible, \r\n    productDetailData,\r\n    setProductDetailData\r\n }: Props) => {\r\n\r\n    const [updateProductState, handleUpdateProductFetch] = useHandleFetch({}, 'updateProduct');\r\n    const [productDetailState, handleProductDetailFetch] = useHandleFetch({}, 'productDetailById');\r\n    const [attachImageToItemMultipleState, handleAttachImageToItemMultipleFetch] = useHandleFetch({}, 'attachImageToItemMultiple');\r\n    const [attachImageToItemSingleState, handleAttachImageToItemSingleFetch] = useHandleFetch({}, 'attachImageToItemSingle');\r\n    const [detachImageFromItemMultipleState, handleDetachImageFromItemMultipleFetch] = useHandleFetch({}, 'detachImageFromItemMultiple');\r\n    const [detachImageFromItemSingleState, handleDetachImageFromItemSingleFetch] = useHandleFetch({}, 'detachImageFromItemSingle');\r\n    const [setImageAsThumbnailToItemState, handleSetImageAsThumbnailToItemFetch] = useHandleFetch({}, 'setImageAsThumbnailToItem');\r\n\r\n\r\n\r\n    const [visible, setvisible] = useState(false);\r\n    const [myImages, setmyImages] = useState(false);\r\n    const [myThumbnailImage, setmyThumbnailImage] = useState(false);\r\n    const [isModalOpenForThumbnail, setisModalOpenForThumbnail] = useState(false);\r\n    const [isModalOpenForImages, setisModalOpenForImages] = useState(false);\r\n    const [categoryids, setcategoryIds] = useState([]);\r\n    const [tagIds, setTagIds] = useState([]);\r\n    const [brandId, setBrandId] = useState('');\r\n    const [pricing, setPricing] = useState([]);\r\n    const [coverImageId, setCoverImageId] = useState('');\r\n    const [categoryOptions, setCategoryOptions] = useState([]);\r\n    const [selectedTags, setSelectedTags] = useState([]);\r\n    const [date, setDateFeild] = useState('');\r\n    const [time, setTimeFeild] = useState('');\r\n    const [description, setDescription] = useState('');\r\n\r\n\r\n\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        const getProductDetail = async () => {\r\n            await handleProductDetailFetch({\r\n                urlOptions: {\r\n                    placeHolders: {\r\n                        id: productDetailData.id\r\n                    }\r\n                }\r\n            })\r\n        };\r\n\r\n        getProductDetail();\r\n\r\n    }, [productDetailData]);\r\n\r\n    useEffect(() => {\r\n\r\n        if (productDetailData && productDetailData.brand) {\r\n            setBrandId(productDetailData.brand['id']);\r\n        }\r\n        else {\r\n            setBrandId('');\r\n        }\r\n        if (productDetailData && productDetailData.tags && productDetailData.tags.length > 0) {\r\n            // const tagIds = productDetailData.tags.map(item => item.id);\r\n            setSelectedTags(productDetailData.tags);\r\n        }\r\n        else {\r\n            setSelectedTags([]);\r\n\r\n        }\r\n        if (productDetailData && productDetailData.category && productDetailData.category.length > 0) {\r\n            const categoryIds = productDetailData.category.map(item => item.id);\r\n            setCategoryOptions(categoryIds);\r\n        }\r\n        else {\r\n            setCategoryOptions([]);\r\n\r\n        }\r\n\r\n        if (productDetailData && productDetailData.pricing && productDetailData.pricing) {\r\n            setPricing(productDetailData.pricing)\r\n        }\r\n        else {\r\n            setPricing([]);\r\n\r\n        }\r\n\r\n\r\n        if (productDetailData && productDetailData.date && productDetailData.date) {\r\n            setDateFeild(productDetailData.date)\r\n        }\r\n        else {\r\n            setDateFeild('');\r\n\r\n        }\r\n\r\n        if (productDetailData && productDetailData.time && productDetailData.time) {\r\n            setTimeFeild(productDetailData.time);\r\n        }\r\n        else {\r\n            setTimeFeild('');\r\n        }\r\n\r\n\r\n\r\n    }, [productDetailData]);\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        if (productDetailState.done && Object.keys(productDetailState).length > 0) {\r\n\r\n            const images = productDetailState.data.image;\r\n            if (images && images.length > 0) {\r\n                setmyImages(images);\r\n            }\r\n\r\n            if (productDetailState.data.cover && productDetailState.data.cover['id']) {\r\n                // @ts-ignore\r\n                setmyImages([productDetailState.data.cover, ...images]);\r\n                console.log('catcat', [productDetailState.data.cover, ...images]);\r\n                setCoverImageId(productDetailState.data.cover['id']);\r\n            }\r\n        }\r\n    }, [productDetailState])\r\n\r\n\r\n    useEffect(() => {\r\n        console.log('thumnail', myImages);\r\n        // @ts-ignore\r\n        if (myImages && myImages[0] && myImages.length < 2) {\r\n            console.log('thumnail2', myImages);\r\n\r\n            if (coverImageId !== myImages[0].id) {\r\n                setCoverImageId(myImages[0].id);\r\n                handleSetImageAsThumnail(myImages[0]);\r\n            }\r\n\r\n        }\r\n\r\n    }, [myImages])\r\n\r\n\r\n    const handleDetachSingleImage = async id => {\r\n        await handleDetachImageFromItemSingleFetch({\r\n            urlOptions: {\r\n                placeHolders: {\r\n                    imageId: id,\r\n                    collection: 'product',\r\n                    itemId: productDetailData.id\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n\r\n\r\n    const handleSetImageAsThumnail = async image => {\r\n\r\n        const thumbnailRes = await handleSetImageAsThumbnailToItemFetch({\r\n            urlOptions: {\r\n                placeHolders: {\r\n                    imageId: image.id,\r\n                    collection: 'product',\r\n                    itemId: productDetailData.id\r\n                }\r\n            }\r\n        });\r\n\r\n        console.log('thumbnailRes', thumbnailRes);\r\n\r\n        // @ts-ignore\r\n        if (thumbnailRes && thumbnailRes.status === 'ok') {\r\n            openSuccessNotification('Seted as thumbnail!')\r\n            // const positionInBrand = () => {\r\n            //     return productList.map(item => item.id).indexOf(productDetailData.id);\r\n            // }\r\n\r\n            // const index = positionInBrand();\r\n\r\n            // const prevItem = productList.find(item => item.id === productDetailData.id);\r\n\r\n            // if (prevItem) {\r\n            //     console.log('prevItem--', prevItem, 'image--', image);\r\n            //     const updatedItem = Object.assign({}, productList[index], { ...prevItem, cover: image.cover });\r\n            //     const updateProductList = [...productList.slice(0, index), updatedItem, ...productList.slice(index + 1)];\r\n            //     setProductList(updateProductList);\r\n\r\n            // }\r\n        }\r\n        else {\r\n            openErrorNotification(\"Couldn't set as thumbnail, Something went wrong\")\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n    const makeEmptyCategoryOptions = (setEmpty) => {\r\n        setEmpty([]);\r\n    }\r\n\r\n    const handleSubmit = async (values: any, actions: any) => {\r\n        // @ts-ignore\r\n        const imagesIds = myImages ? myImages.map(image => {\r\n            return image.id;\r\n        }) : [];\r\n\r\n        const updatedProductRes = await handleUpdateProductFetch({\r\n            urlOptions: {\r\n                placeHolders: {\r\n                    id: productDetailData.id\r\n                }\r\n            },\r\n            body: {\r\n                name: values.name.trim(),\r\n                description: description,\r\n                model: values.model,\r\n                unit: values.unit,\r\n                category: categoryOptions,\r\n                tags: tagIds,\r\n                brand: brandId,\r\n                image: imagesIds,\r\n                cover: coverImageId || imagesIds[0] ? imagesIds[0] : '',\r\n                pricing: pricing,\r\n            },\r\n        });\r\n\r\n\r\n        // @ts-ignore\r\n        if (updatedProductRes && updatedProductRes.status === 'ok') {\r\n            openSuccessNotification('Product Updated');\r\n            setProductEditVisible(false);\r\n            setProductDetailData({\r\n                // @ts-ignore\r\n                ...updatedProductRes,\r\n                category: productDetailData.category,\r\n                brand: productDetailData.brand,\r\n                tags: productDetailData.tags,\r\n                cover: productDetailData.cover,\r\n                image: productDetailData.image,\r\n            }); \r\n\r\n\r\n            console.log('updatedProductRes', updatedProductRes);\r\n            // setProductList([...productList, {\r\n            //     id: updatedProductRes['id'] || '',\r\n            //     key: updatedProductRes['id'] || '',\r\n            //     name: updatedProductRes['name'] || '',\r\n            //     description: updatedProductRes['description'] || '',\r\n            //     // @ts-ignore\r\n            //     ...updatedProductRes\r\n            // }])\r\n            // @ts-ignore\r\n            setmyImages([]);\r\n            setCoverImageId('');\r\n            setPricing([]);\r\n            setTagIds([]);\r\n            setSelectedTags([]);\r\n            setBrandId(\"\");\r\n            setcategoryIds([]);\r\n            setCategoryOptions([]);\r\n            actions.resetForm();\r\n        }\r\n        else {\r\n            // openErrorNotification();\r\n        }\r\n\r\n        actions.setSubmitting(false);\r\n\r\n\r\n    };\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        if (!updateProductState['isLoading']) {\r\n            const error = updateProductState['error'];\r\n            if (error['isError'] && Object.keys(error['error']).length > 0) {\r\n\r\n\r\n                const errors =\r\n                    Object.values(error['error']).length > 0\r\n                        ? Object.values(error['error'])\r\n                        : [];\r\n                errors.forEach((err, i) => {\r\n                    if (typeof err === 'string') {\r\n                        openErrorNotification(err)\r\n                    }\r\n                    else if (typeof err === 'object') {\r\n                        if (err && Object.keys(err).length > 0) {\r\n                            const errs = Object.values(err);\r\n                            errs.forEach(err => {\r\n                                openErrorNotification(err)\r\n                            })\r\n\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n        }\r\n    }, [updateProductState])\r\n\r\n\r\n    const handleCancel = (e: any) => {\r\n        setProductEditVisible(false);\r\n    };\r\n\r\n\r\n    const getisSubmitButtonDisabled = (values, isValid) => {\r\n        if (!values.name || !(pricing.length > 0) || !isValid) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n\r\n    const handleImagesDelete = (id) => {\r\n        // @ts-ignore\r\n        const newImages = myImages && myImages.filter(image => {\r\n            return image.id !== id;\r\n        })\r\n\r\n        setmyImages(newImages);\r\n    }\r\n\r\n    const handleDeleteFromSelectedImage = () => {\r\n\r\n    };\r\n\r\n    const handleThumbnailImageDelete = (id) => {\r\n        // @ts-ignore\r\n        const newImages = myThumbnailImage && myThumbnailImage.filter(image => {\r\n            return image.id !== id;\r\n        })\r\n\r\n        if (newImages.length > 0) {\r\n            setmyThumbnailImage(newImages);\r\n\r\n        }\r\n        else setmyThumbnailImage(false);\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    const handleAddPricing = (priceItem) => {\r\n\r\n        setPricing([{\r\n            ...priceItem,\r\n            id: pricing.length\r\n        }, ...pricing])\r\n        message.info('Product Pricing Added');\r\n    }\r\n\r\n\r\n    const handleDeletePricing = (id) => {\r\n        const newPricing = pricing.filter(item => item.id !== id);\r\n        setPricing(newPricing);\r\n        message.info('Product Pricing Deleted');\r\n    }\r\n\r\n\r\n\r\n    const isCategoryInValid = () => {\r\n        if (updateProductState.error['error']['category'] && !categoryids && categoryids.length) {\r\n            return true;\r\n        }\r\n        else if (categoryids && categoryids.length > 0) {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    const handleDateChange = (date, dateString) => {\r\n        setDateFeild(dateString);\r\n        // console.log('date', date, dateString);\r\n    }\r\n\r\n    const handleTimeChange = (date, dateString) => {\r\n        setTimeFeild(dateString);\r\n        // console.log('date', date, dateString);\r\n    }\r\n\r\n\r\n    console.log('productDetailData', productDetailData);\r\n    console.log('productDetailState', productDetailState);\r\n\r\n\r\n    return (\r\n        <Formik\r\n            onSubmit={(values, actions) => handleSubmit(values, actions)}\r\n            validationSchema={validationSchema}\r\n            validateOnBlur={false}\r\n            enableReinitialize={true}\r\n            initialValues={\r\n                { ...initialValues, ...productDetailData }\r\n            }\r\n        >\r\n            {({\r\n                handleChange,\r\n                values,\r\n                handleSubmit,\r\n                errors,\r\n                isValid,\r\n                isSubmitting,\r\n                touched,\r\n                handleBlur,\r\n                setFieldTouched,\r\n                handleReset,\r\n            }) => (\r\n                    <>\r\n                        <Modal\r\n                            style={{\r\n                                top: '40px',\r\n\r\n                            }}\r\n                            bodyStyle={{\r\n                                margin: 0,\r\n                                padding: 0,\r\n                            }}\r\n                            width={'70vw'}\r\n                            title=\"Product Edit\"\r\n                            visible={productEditVisible}\r\n                            onOk={(e: any) => handleSubmit(e)}\r\n                            onCancel={handleCancel}\r\n                            destroyOnClose={true}\r\n                            okText='Update'\r\n                            okButtonProps={{\r\n                                loading: isSubmitting,\r\n                                htmlType: \"submit\",\r\n                                disabled: getisSubmitButtonDisabled(values, isValid)\r\n                            }}\r\n                        >\r\n                            <section className='addProductGridContainer'>\r\n                                <div className='addProductGridContainer__left'>\r\n                                    <div className='addProductGridContainer__name'>\r\n                                        <div className='addProductGridContainer__item-header'>\r\n                                            <h3>\r\n                                                Product Information\r\n\t\t                                \t</h3>\r\n                                            <div className={values.name && values.name.length > 2 ? 'checkicon-active' : 'checkicon'}>\r\n                                                <CheckCircleOutlined />\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className='addProductGridContainer__item-body'>\r\n                                            <Input\r\n                                                label='Title'\r\n                                                value={values.name}\r\n                                                name='name'\r\n                                                isError={(touched.name && errors.name) ||\r\n                                                    (!isSubmitting && updateProductState.error['error']['name'])}\r\n\r\n                                                errorString={(touched.name && errors.name) ||\r\n                                                    (!isSubmitting && updateProductState.error['error']['name'])}\r\n                                                onChange={(e: any) => {\r\n                                                    handleChange(e);\r\n                                                    setFieldTouched('name');\r\n                                                }}\r\n                                            />\r\n                                            {/* <div style={{\r\n                                                display: 'flex',\r\n                                                justifyContent: 'space-between'\r\n                                            }}>\r\n                                                <div style={{\r\n                                                    width: '48%',\r\n                                                }}>\r\n                                                    <DatePicker\r\n                                                        time={time}\r\n                                                        date={date}\r\n                                                        label='Date'\r\n                                                        onChange={handleDateChange} />\r\n\r\n                                                </div>\r\n                                                <div style={{\r\n                                                    width: '48%'\r\n                                                }}>\r\n\r\n                                                    <DatePicker\r\n                                                        time={time}\r\n                                                        date={date}\r\n                                                        withTime={true}\r\n                                                        placeholder='Select time'\r\n                                                        label='Time'\r\n                                                        onChange={handleTimeChange} />\r\n\r\n                                                </div>\r\n                                            </div>\r\n                                            <div style={{\r\n                                                marginBottom: '15px'\r\n                                            }}></div>\r\n\r\n                                            <TextArea\r\n                                                rows={1}\r\n                                                label='Venue'\r\n                                                value={values.venue}\r\n                                                name='venue'\r\n                                                isError={(touched.venue && errors.venue) ||\r\n                                                    (!isSubmitting && updateProductState.error['error']['venue'])}\r\n\r\n                                                errorString={(touched.venue && errors.venue) ||\r\n                                                    (!isSubmitting && updateProductState.error['error']['venue'])}\r\n                                                onChange={(e: any) => {\r\n                                                    handleChange(e);\r\n                                                    setFieldTouched('venue');\r\n                                                }}\r\n                                            />\r\n\r\n\r\n\r\n                                            <Input\r\n                                                label='Purchase Limit'\r\n                                                value={values.purchaseLimit}\r\n                                                type='number'\r\n                                                name='purchaseLimit'\r\n                                                isError={(touched.purchaseLimit && errors.purchaseLimit) ||\r\n                                                    (!isSubmitting && updateProductState.error['error']['purchaseLimit'])}\r\n\r\n                                                errorString={(touched.purchaseLimit && errors.purchaseLimit) ||\r\n                                                    (!isSubmitting && updateProductState.error['error']['purchaseLimit'])}\r\n                                                onChange={(e: any) => {\r\n                                                    handleChange(e);\r\n                                                    setFieldTouched('purchaseLimit');\r\n                                                }}\r\n                                            /> */}\r\n\r\n\r\n\r\n                                            <h3 className='inputFieldLabel'>\r\n                                                Description\r\n                                            </h3>\r\n\r\n                                            <div style={{\r\n                                                width: '100%',\r\n                                                maxWidth: '100%'\r\n                                            }}>\r\n                                                <CKEditor\r\n                                                    editor={ClassicEditor}\r\n                                                    data={description}\r\n                                                    onInit={editor => {\r\n                                                        // You can store the \"editor\" and use when it is needed.\r\n                                                        console.log('Editor is ready to use!', editor);\r\n                                                    }}\r\n                                                    onChange={(event, editor) => {\r\n                                                        const data = editor.getData();\r\n                                                        setDescription(data);\r\n                                                    }}\r\n                                                    onBlur={(event, editor) => {\r\n                                                        console.log('Blur.', editor);\r\n                                                    }}\r\n                                                    onFocus={(event, editor) => {\r\n                                                        console.log('Focus.', editor);\r\n                                                    }}\r\n                                                />\r\n                                            </div>\r\n\r\n                                            <div style={{\r\n                                                marginTop:\"15px\"\r\n                                            }}> </div>\r\n\r\n                                            <Input\r\n                                                label='Model Number'\r\n                                                value={values.model}\r\n                                                name='model'\r\n                                                isError={(touched.model && errors.model) ||\r\n                                                    (!isSubmitting && updateProductState.error['error']['model'])}\r\n\r\n                                                errorString={(touched.model && errors.model) ||\r\n                                                    (!isSubmitting && updateProductState.error['error']['model'])}\r\n                                                onChange={(e: any) => {\r\n                                                    handleChange(e);\r\n                                                    setFieldTouched('model');\r\n                                                }}\r\n                                            />\r\n\r\n\r\n                                            <Input\r\n                                                label='Unit'\r\n                                                value={values.unit}\r\n                                                name='unit'\r\n                                                isError={(touched.unit && errors.unit) ||\r\n                                                    (!isSubmitting && updateProductState.error['error']['unit'])}\r\n\r\n                                                errorString={(touched.unit && errors.unit) ||\r\n                                                    (!isSubmitting && updateProductState.error['error']['unit'])}\r\n                                                onChange={(e: any) => {\r\n                                                    handleChange(e);\r\n                                                    setFieldTouched('unit');\r\n                                                }}\r\n                                            />\r\n\r\n                                        </div>\r\n\r\n                                    </div>\r\n\r\n                                    <div className='addProductGridContainer__price'>\r\n                                        <div className='addProductGridContainer__item-header'>\r\n                                            <h3>\r\n                                                Product Pricing\r\n\t\t\t</h3>\r\n\r\n                                            <div className={pricing && pricing.length > 0 ? 'checkicon-active' : 'checkicon'}>\r\n                                                <CheckCircleOutlined />\r\n                                            </div>\r\n                                        </div>\r\n\r\n\r\n                                        <div className='addProductGridContainer__item-body'>\r\n\r\n                                            <Tabs\r\n                                                animated={true}\r\n                                                tabPosition=\"top\"\r\n                                                type='card'\r\n                                                defaultActiveKey='2'\r\n                                            >\r\n\r\n                                                <TabPane tab=\"Add Variation\" key=\"1\">\r\n                                                    <Pricing handleAddPricing={handleAddPricing} />\r\n                                                </TabPane>\r\n                                                <TabPane tab=\"Pricing List\" key=\"2\">\r\n                                                    <div className='addProductGridContainer__item-body-pricingContainer'>\r\n\r\n                                                        {pricing.length > 0 && pricing.map(item => {\r\n                                                            return (\r\n                                                                <div className='addProductGridContainer__item-body-pricingContainer-item'>\r\n                                                                    <div className='addProductGridContainer__item-body-pricingContainer-item-edit'>\r\n                                                                        {/* <span>\r\n\t\t\t\t\t\t\t<EditOutlined />\r\n\t\t\t\t\t\t\t</span> */}\r\n                                                                        <span className='d' onClick={() => handleDeletePricing(item.id)}>\r\n                                                                            <DeleteOutlined />\r\n                                                                        </span>\r\n                                                                    </div>\r\n                                                                    <div className='addProductGridContainer__item-body-pricingContainer-item-two'>\r\n                                                                        <div>\r\n                                                                            <h3>\r\n                                                                                Price\r\n\t\t\t\t\t\t</h3>\r\n                                                                            <div className='addProductGridContainer__item-body-pricingContainer-item-body'>\r\n\r\n\r\n                                                                                {item.price.offer ? (\r\n                                                                                    <>\r\n                                                                                        <h4 >\r\n                                                                                            {item.price.offer}\r\n\r\n                                                                                        </h4>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<h5 style={{\r\n                                                                                            textDecoration: \"line-through\"\r\n                                                                                        }}>\r\n\r\n                                                                                            {item.price.regular}\r\n                                                                                        </h5>\r\n                                                                                    </>\r\n                                                                                ) : (\r\n                                                                                        <h4>\r\n                                                                                            {item.price.regular}\r\n\r\n                                                                                        </h4>\r\n                                                                                    )}\r\n\r\n\r\n                                                                            </div>\r\n                                                                        </div>\r\n\r\n                                                                        {item.stock && (\r\n                                                                            <div>\r\n                                                                                <Badge\r\n                                                                                    overflowCount={999}\r\n                                                                                    count={item.stock.available}>\r\n                                                                                    <h3>\r\n                                                                                        Stock\r\n\t\t\t\t\t\t\t\t\t</h3>\r\n                                                                                </Badge>\r\n                                                                                <div className='addProductGridContainer__item-body-pricingContainer-item-body'>\r\n                                                                                    <div>\r\n                                                                                        <h6>\r\n                                                                                            min\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Badge\r\n                                                                                                className=\"site-badge-count-4\"\r\n                                                                                                overflowCount={999}\r\n                                                                                                count={item.stock.minimum} />\r\n                                                                                        </h6>\r\n\r\n\r\n                                                                                    </div>\r\n\r\n                                                                                </div>\r\n                                                                            </div>\r\n                                                                        )}\r\n\r\n\r\n\r\n                                                                    </div>\r\n\r\n                                                                    {item.attribute\r\n                                                                        && Object.values(item.attribute).length > 0 && (\r\n                                                                            <>\r\n                                                                                <h3>\r\n                                                                                    Attributes\r\n\t\t\t\t\t\t</h3>\r\n                                                                                <div className='addProductGridContainer__item-body-pricingContainer-item-body'>\r\n                                                                                    {item.attribute\r\n                                                                                        && Object.keys(item.attribute).length > 0\r\n                                                                                        && Object.keys(item.attribute).map(attributeItem => {\r\n                                                                                            return (\r\n                                                                                                <div>\r\n                                                                                                    <h6>\r\n                                                                                                        {attributeItem}\r\n                                                                                                    </h6>\r\n                                                                                                    <h4>\r\n                                                                                                        {item.attribute[attributeItem]}\r\n                                                                                                    </h4>\r\n                                                                                                </div>\r\n                                                                                            )\r\n                                                                                        })}\r\n                                                                                </div>\r\n                                                                            </>\r\n                                                                        )}\r\n\r\n                                                                </div>\r\n                                                            )\r\n                                                        })}\r\n\r\n\r\n                                                        {!(pricing.length > 0) && <div style={{\r\n                                                            width: '100%',\r\n                                                            display: 'flex',\r\n                                                            justifyContent: 'center'\r\n                                                        }}>\r\n                                                            <Empty description='No Pricing added' image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n                                                        </div>}\r\n                                                    </div>\r\n                                                </TabPane>\r\n\r\n                                            </Tabs>\r\n\r\n                                            <div className='addProductGridContainer__item-body-container'>\r\n\r\n                                            </div>\r\n\r\n                                        </div>\r\n                                    </div>\r\n\r\n\r\n                                    <div className='addProductGridContainer__image'>\r\n\r\n                                        <div className='addProductGridContainer__item-header'>\r\n                                            <h3>\r\n                                                Image\r\n\t\t\t</h3>\r\n\r\n                                            <Tooltip\r\n                                                placement=\"left\" title={'Click on the image to select cover image, By default 1st image is selected as cover'}>\r\n                                                <a href='###'>\r\n                                                    <InfoCircleOutlined />\r\n                                                </a>\r\n                                            </Tooltip>\r\n                                        </div>\r\n\r\n                                        <div\r\n                                            style={{\r\n                                                padding: \"10px\"\r\n                                            }}\r\n                                            className='aboutToUploadImagesContainer'>\r\n                                            {productDetailState.isLoading && (\r\n                                                <div style={{\r\n                                                    padding: '20px 0'\r\n                                                }}>\r\n                                                    <Spin />\r\n                                                </div>\r\n                                            )}\r\n                                            {productDetailState.done && (\r\n                                                <>\r\n                                                    {myImages &&\r\n                                                        // @ts-ignore\r\n                                                        myImages.length > 0 && myImages.map((image, index) => {\r\n                                                            return (\r\n                                                                <div className='aboutToUploadImagesContainer__item'>\r\n                                                                    <div\r\n                                                                        className='aboutToUploadImagesContainer__item-imgContainer'\r\n                                                                        onClick={() => {\r\n                                                                            setCoverImageId(image.id);\r\n                                                                            handleSetImageAsThumnail(image);\r\n                                                                        }}\r\n                                                                    >\r\n                                                                        <img src={image.cover} alt={image.alt} />\r\n                                                                    </div>\r\n\r\n                                                                    <span\r\n                                                                        onClick={() => {\r\n                                                                            handleImagesDelete(image.id)\r\n                                                                            handleDetachSingleImage(image.id)\r\n                                                                        }\r\n\r\n                                                                        }\r\n                                                                        className='aboutToUploadImagesContainer__item-remove'>\r\n                                                                        <CloseOutlined />\r\n                                                                    </span>\r\n\r\n\r\n                                                                    {coverImageId === image.id ? (\r\n                                                                        <span className='aboutToUploadImagesContainer__item-cover'>\r\n                                                                            <CheckOutlined />\r\n                                                                        </span>\r\n                                                                    ) : !coverImageId && index === 0 && (\r\n                                                                        <span className='aboutToUploadImagesContainer__item-cover'>\r\n                                                                            <CheckOutlined />\r\n                                                                        </span>\r\n                                                                    )}\r\n\r\n\r\n                                                                </div>\r\n                                                            )\r\n                                                        })}\r\n\r\n\r\n                                                    <Tooltip\r\n                                                        title={'Attach images'}>\r\n\r\n                                                        <div\r\n                                                            onClick={() => {\r\n                                                                setvisible(true);\r\n                                                                setisModalOpenForImages(true);\r\n                                                                setisModalOpenForThumbnail(false);\r\n                                                            }}\r\n                                                            className='aboutToUploadImagesContainer__uploadItem'>\r\n                                                            {/* <FileAddOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FileImageTwoTone />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FileImageOutlined /> */}\r\n                                                            <FileImageFilled />\r\n                                                            {/* <h5>\r\n\t\t\t\t\t\t\t\t\t\t\t\t     Select From Library\r\n\t\t\t\t\t\t\t\t\t\t\t<     /h5> */}\r\n                                                            <span className='aboutToUploadImagesContainer__uploadItem-plus'>\r\n                                                                <PlusOutlined />\r\n                                                            </span>\r\n                                                        </div>\r\n                                                    </Tooltip>\r\n                                                </>\r\n                                            )}\r\n\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                </div>\r\n                                <div className='addProductGridContainer__right'>\r\n                                    <div className='addProductGridContainer__category'>\r\n\r\n                                        <div className='addProductGridContainer-rightItemContainer'>\r\n                                            <div className='addProductGridContainer-rightItemContainer-header'>\r\n                                                <h3>\r\n                                                    Categories\r\n\t\t\t\t</h3>\r\n\r\n                                                <Tooltip\r\n                                                    color='red'\r\n                                                    visible={updateProductState.error['error']['category'] && !(categoryids.length > 0)}\r\n                                                    placement=\"left\" title={'Select at least one category'}>\r\n                                                    <div className={!(categoryids.length > 0)\r\n                                                        && !updateProductState.error['error']['category'] ? 'checkicon' : updateProductState.error['error']['category'] ? 'checkicon-error' : 'checkicon-active'}>\r\n                                                        <CheckCircleOutlined />\r\n                                                    </div>\r\n                                                </Tooltip>\r\n\r\n                                            </div>\r\n                                            <div className='addProductGridContainer-rightItemContainer-body'>\r\n                                                <Categories\r\n                                                    setCategoryOptions={setCategoryOptions}\r\n                                                    categoryOptions={categoryOptions}\r\n                                                    setcategoryIds={setcategoryIds} />\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                    </div>\r\n\r\n                                    <div className='addProductGridContainer__tag'>\r\n                                        <div className='addProductGridContainer-rightItemContainer'>\r\n                                            <div className='addProductGridContainer-rightItemContainer-header'>\r\n                                                <h3>\r\n                                                    Tags\r\n\t\t\t\t</h3>\r\n                                            </div>\r\n                                            <div className='addProductGridContainer-rightItemContainer-body'>\r\n                                                <Tags\r\n                                                    setSelectedTags={setSelectedTags}\r\n                                                    selectedTags={selectedTags}\r\n                                                    setTagIds={setTagIds} />\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                    </div>\r\n                                    <div className='addProductGridContainer__brand'>\r\n                                        <div className='addProductGridContainer-rightItemContainer'>\r\n                                            <div className='addProductGridContainer-rightItemContainer-header'>\r\n                                                <h3>\r\n                                                    Brand\r\n\t\t\t\t</h3>\r\n                                            </div>\r\n                                            <div className='addProductGridContainer-rightItemContainer-body'>\r\n                                                <Brands\r\n                                                    productDetailState={productDetailState}\r\n                                                    brandId={brandId}\r\n                                                    setBrandId={setBrandId} />\r\n                                            </div>\r\n                                        </div>\r\n\r\n\r\n                                    </div>\r\n\r\n                                </div>\r\n                            </section>\r\n\r\n\r\n                        </Modal>\r\n\r\n                        <MediaLibrary\r\n                            setvisible={setvisible}\r\n                            visible={visible}\r\n                            setmyImages={setmyImages}\r\n                            myImages={myImages}\r\n                            setmyThumbnailImage={setmyThumbnailImage}\r\n                            isModalOpenForThumbnail={isModalOpenForThumbnail}\r\n                            isModalOpenForImages={isModalOpenForImages}\r\n\r\n                        />\r\n                    </>\r\n                )}\r\n        </Formik>\r\n\r\n\r\n\r\n\r\n    );\r\n};\r\n\r\nexport default AddNewProduct;\r\n\r\n\r\n\r\n\r\n/*\r\n\r\n\r\nProduct variation ---->\r\n\r\nPrice [title]\r\n\t[regular input field] [offer inputfield]\r\n\r\nStock [title]\r\n\t[available input field] [minimum inputfield]\r\n\r\ndefault [default can be set to true]\r\n\r\nattributes [title]\r\n\t[add attributes name]\r\n\t\t[add attrubutes value]\r\n\r\n\t[add attributes name]\r\n\t\t[add attrubutes value\r\n\r\n*///","import React, { useEffect, useState } from 'react';\r\nimport { useParams, useHistory } from \"react-router\";\r\n\r\n\r\n// import hooks\r\nimport { useHandleFetch } from \"../../hooks\";\r\n\r\n// import lib\r\nimport {\r\n    EditOutlined,\r\n    DeleteOutlined\r\n} from '@ant-design/icons';\r\n\r\nimport { Skeleton, Empty, Button, notification, Table, Space, Input as CoolInput, Tooltip, Modal, Badge } from 'antd';\r\n\r\n\r\n\r\n// import components\r\nimport { DataTableSkeleton } from \"../../components/Placeholders\";\r\nimport ProductEdit from \"./ProductEdit\";\r\n\r\n\r\nconst { Column, ColumnGroup } = Table;\r\nconst { Search } = CoolInput;\r\n\r\n\r\ninterface Props {\r\n    productRecord?: any;\r\n}\r\n\r\nconst NewBrandDetail = (props: Props) => {\r\n    const [productDetailState, handleProductDetailFetch] = useHandleFetch({}, 'productDetailById');\r\n\r\n    const params = useParams();\r\n    const history = useHistory();\r\n    const productId = params['id'];\r\n    const [productEditVisible, setProductEditVisible] = useState(false);\r\n    const [productDetailData,setProductDetailData] = useState({}); \r\n\r\n\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        const getProductDetail = async () => {\r\n            const productDetailRes = await handleProductDetailFetch({\r\n                urlOptions: {\r\n                    placeHolders: {\r\n                        id: productId\r\n                    }\r\n                }\r\n            }); \r\n\r\n            // @ts-ignore\r\n            if(productDetailRes){\r\n                // @ts-ignore\r\n                setProductDetailData(productDetailRes); \r\n            };\r\n\r\n            console.log('productDetailRes',productDetailRes);\r\n        };\r\n\r\n        getProductDetail();\r\n\r\n    }, [productId]);\r\n\r\n\r\n\r\n\r\n    console.log('productDetailState', productDetailState);\r\n\r\n    console.log('brandParams', params);\r\n\r\n    const getImagesInCollumn = (imgs) => {\r\n        if (!imgs[0]) return false;\r\n        imgs = imgs.map(item => item.cover);\r\n        const columns = {};\r\n\r\n        let localIndex = 0;\r\n        let columnNumber = 0;\r\n\r\n\r\n        imgs.forEach((item, index) => {\r\n            if (localIndex < 3) {\r\n                if (columns[columnNumber]) {\r\n                    columns[columnNumber] = [...columns[columnNumber], item]\r\n                }\r\n                else columns[columnNumber] = [item];\r\n\r\n                localIndex = localIndex + 1;\r\n                columnNumber = columnNumber + 1;\r\n\r\n            }\r\n            else {\r\n                localIndex = 0;\r\n                columnNumber = 0;\r\n                console.log('localIndex', localIndex)\r\n            }\r\n        });\r\n\r\n        return columns;\r\n    }\r\n\r\n\r\n    const row = productDetailState.done && productDetailData && productDetailData['image'] ? getImagesInCollumn(productDetailData['image']) : [];\r\n\r\n    return (\r\n        <div className='brandDetailContainer'>\r\n\r\n            <div className='brandDetailContainer__heading'>\r\n                <h3>\r\n                    Product Detail\r\n                </h3>\r\n\r\n                {productDetailState.done && productDetailData && (Object.keys(productDetailData).length > 0) && (\r\n                    <>\r\n                        <ProductEdit\r\n                            productEditVisible={productEditVisible}\r\n                            setProductEditVisible={setProductEditVisible}\r\n                            productDetailData={productDetailData}\r\n                            setProductDetailData={setProductDetailData}\r\n                        />\r\n                        <Button\r\n                            onClick={() => setProductEditVisible(true)}\r\n                            type='link'\r\n                            icon={<EditOutlined />}\r\n                        >\r\n                            Edit\r\n                      </Button>\r\n                    </>\r\n                )}\r\n\r\n            </div>\r\n            <Skeleton\r\n                avatar paragraph={{ rows: 3 }}\r\n                loading={productDetailState.isLoading}>\r\n                {productDetailState.done && productDetailData && !(Object.keys(productDetailData).length > 0) && (\r\n                    <Empty description='No Product found' image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n                )}\r\n\r\n                {productDetailState.done && productDetailData && (Object.keys(productDetailData).length > 0) && (\r\n                    <>\r\n                        <div className='brandDetailContainer__header'>\r\n                            <div className='brandDetailContainer__header-coverContainer brandDetailContainer__header-coverContainer-product'>\r\n                                <img src={productDetailData['cover'] && productDetailData['cover']['cover']} alt=\"\" />\r\n                            </div>\r\n                            <div className='brandDetailContainer__header-info'>\r\n                                <h2>\r\n                                    {productDetailData['name']}\r\n                                </h2>\r\n                                <h4>\r\n                                    {productDetailData['price']}\r\n                                </h4>\r\n                                <h3>\r\n                                    {productDetailData['description']}\r\n                                </h3>\r\n\r\n\r\n                                {productDetailData['url'] && (\r\n                                    <h3>\r\n                                        URL:\r\n                                        <span>\r\n                                            {productDetailData['url']}\r\n                                        </span>\r\n\r\n                                    </h3>\r\n                                )}\r\n                                {/* \r\n                                {productDetailData['tags'] && productDetailData['tags'].length > 0 &&\r\n                                    (<>\r\n                                        <h3>\r\n                                            TAGS:\r\n                                        {productDetailData['tags'].map(tag => {\r\n                                            return (\r\n                                                <span>\r\n                                                    {tag.name}\r\n                                                </span>\r\n                                            )\r\n                                        })}\r\n                                        </h3>\r\n\r\n                                    </>)\r\n                                } */}\r\n\r\n                                {productDetailData['category'] && productDetailData['category'].length > 0 &&\r\n                                    (<>\r\n                                        <h3>\r\n                                            CATEGORIES:\r\n                                        {productDetailData['category'].map(cat => {\r\n                                            return (\r\n                                                <span\r\n                                                    onClick={() => history.push(`/admin/category/${cat.id}`)}\r\n\r\n                                                >\r\n                                                    {cat.name}\r\n                                                </span>\r\n                                            )\r\n                                        })}\r\n                                        </h3>\r\n\r\n                                    </>)\r\n                                }\r\n\r\n                            </div>\r\n                        </div>\r\n\r\n\r\n                        {productDetailData['icon'] && (\r\n                            <>\r\n                                <div className='brandDetailContainer__heading'>\r\n                                    <h3>\r\n                                        Icon\r\n                            </h3>\r\n                                </div>\r\n\r\n                                <div className='brandDetailContainer__inlineBox'>\r\n                                    <div className='brandDetailContainer__header-coverContainer brandDetailContainer__header-coverContainer-icon'>\r\n                                        <img src={productDetailData['icon'] && productDetailData['icon']} alt=\"\" />\r\n                                    </div>\r\n\r\n                                </div>\r\n\r\n                                <div style={{\r\n                                    marginBottom: \"25px\"\r\n                                }}></div>\r\n                            </>\r\n                        )}\r\n\r\n                        {productDetailData['pricing'] && productDetailData['pricing'].length > 0 && (\r\n                            <>\r\n                                <div className='brandDetailContainer__heading'>\r\n                                    <h3>\r\n                                        Pricing\r\n                                   </h3>\r\n                                </div>\r\n\r\n                                <div className='brandDetailContainer__pricing'>\r\n                                    <div className='addProductGridContainer__item-body-pricingContainer'>\r\n                                        {productDetailData['pricing'].map(item => {\r\n                                            return (\r\n                                                <div className='addProductGridContainer__item-body-pricingContainer-item'>\r\n\r\n                                                    <div className='addProductGridContainer__item-body-pricingContainer-item-two'>\r\n                                                        <div>\r\n                                                            <h3>\r\n                                                                Price\r\n    </h3>\r\n                                                            <div className='addProductGridContainer__item-body-pricingContainer-item-body'>\r\n\r\n\r\n                                                                {item.price.offer ? (\r\n                                                                    <>\r\n                                                                        <h4 >\r\n                                                                            {item.price.offer}\r\n\r\n                                                                        </h4>\r\n                                                        /\r\n                                                        <h5 style={{\r\n                                                                            textDecoration: \"line-through\"\r\n                                                                        }}>\r\n\r\n                                                                            {item.price.regular}\r\n                                                                        </h5>\r\n                                                                    </>\r\n                                                                ) : (\r\n                                                                        <h4>\r\n                                                                            {item.price.regular}\r\n\r\n                                                                        </h4>\r\n                                                                    )}\r\n\r\n\r\n                                                            </div>\r\n                                                        </div>\r\n\r\n                                                        {item.stock && (\r\n                                                            <div>\r\n                                                                <Badge\r\n                                                                    overflowCount={999}\r\n                                                                    count={item.stock.available}>\r\n                                                                    <h3>\r\n                                                                        Stock\r\n                </h3>\r\n                                                                </Badge>\r\n                                                                <div className='addProductGridContainer__item-body-pricingContainer-item-body'>\r\n                                                                    <div>\r\n                                                                        <h6>\r\n                                                                            min\r\n                                                                        <Badge\r\n                                                                                className=\"site-badge-count-4\"\r\n                                                                                overflowCount={999}\r\n                                                                                count={item.stock.minimum} />\r\n                                                                        </h6>\r\n\r\n                                                                    </div>\r\n\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        )}\r\n\r\n\r\n\r\n                                                    </div>\r\n\r\n                                                    {item.attribute\r\n                                                        && Object.values(item.attribute).length > 0 && (\r\n                                                            <>\r\n                                                                <h3>\r\n                                                                    Attributes\r\n    </h3>\r\n                                                                <div className='addProductGridContainer__item-body-pricingContainer-item-body'>\r\n                                                                    {item.attribute\r\n                                                                        && Object.keys(item.attribute).length > 0\r\n                                                                        && Object.keys(item.attribute).map(attributeItem => {\r\n                                                                            return (\r\n                                                                                <div>\r\n                                                                                    <h6>\r\n                                                                                        {attributeItem}\r\n                                                                                    </h6>\r\n                                                                                    <h4>\r\n                                                                                        {item.attribute[attributeItem]}\r\n                                                                                    </h4>\r\n                                                                                </div>\r\n                                                                            )\r\n                                                                        })}\r\n                                                                </div>\r\n                                                            </>\r\n                                                        )}\r\n\r\n                                                </div>\r\n                                            )\r\n                                        })}\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div style={{\r\n                                    marginBottom: \"25px\"\r\n                                }}></div>\r\n                            </>\r\n                        )}\r\n\r\n\r\n\r\n                        {productDetailData['image'] && productDetailData['image'].length > 0 && (\r\n                            <>\r\n                                <div className='brandDetailContainer__heading'>\r\n                                    <h3>\r\n                                        Image Gallary\r\n                                   </h3>\r\n                                </div>\r\n\r\n                                <div className='brandDetailContainer__imageGallary'>\r\n                                    <div className='imgGallaryContainer'>\r\n\r\n                                        <div className=\"imgGallary-row\">\r\n                                            {row && Object.keys(row).map(column => {\r\n                                                return (\r\n                                                    <div className=\"imgGallary-column\">\r\n                                                        {row[column] && row[column].map(img => {\r\n                                                            return <img src={img} style={{\r\n                                                                width: '100%'\r\n                                                            }} />\r\n                                                        })}\r\n\r\n                                                    </div>\r\n                                                )\r\n                                            })}\r\n\r\n\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                </div>\r\n\r\n                                <div style={{\r\n                                    marginBottom: \"25px\"\r\n                                }}></div>\r\n                            </>\r\n                        )}\r\n\r\n                        {productDetailData['brand'] && Object.keys(productDetailData['brand']).length > 0 && (\r\n                            <>\r\n                                <div className='brandDetailContainer__heading'>\r\n                                    <h3>\r\n                                        Brand\r\n                                   </h3>\r\n                                </div>\r\n\r\n                                <div\r\n                                    onClick={() => history.push(`/admin/brand/${productDetailData['brand']['id']}`)}\r\n\r\n                                    className='brandDetailContainer__brand'>\r\n                                    <div className='brandDetailContainer__brand-coverbox'>\r\n                                        <img src={productDetailData['brand']['cover'] && productDetailData['brand']['cover']} alt=\"\" />\r\n                                    </div>\r\n                                    <div className='brandDetailContainer__brand-info'>\r\n                                        <h2>\r\n                                            {productDetailData['brand']['name']}\r\n                                        </h2>\r\n                                        <h3>\r\n                                            {productDetailData['brand']['description']}\r\n                                        </h3>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div style={{\r\n                                    marginBottom: \"25px\"\r\n                                }}></div>\r\n                            </>\r\n                        )}\r\n\r\n\r\n                        {productDetailData['primaryCategory'] && Object.keys(productDetailData['primaryCategory']).length > 0 && (\r\n                            <>\r\n                                <div className='brandDetailContainer__heading'>\r\n                                    <h3>\r\n                                        Primary Category\r\n                                   </h3>\r\n                                </div>\r\n\r\n                                <div\r\n                                    onClick={() => history.push(`/admin/category/${productDetailData['primaryCategory']['id']}`)}\r\n                                    className='brandDetailContainer__brand'>\r\n                                    <div className='brandDetailContainer__brand-coverbox'>\r\n                                        <img src={productDetailData['primaryCategory']['cover'] && productDetailData['primaryCategory']['cover']} alt=\"\" />\r\n                                    </div>\r\n                                    <div className='brandDetailContainer__brand-info'>\r\n                                        <h2>\r\n                                            {productDetailData['primaryCategory']['name']}\r\n                                        </h2>\r\n                                        <h3>\r\n                                            {productDetailData['primaryCategory']['description']}\r\n                                        </h3>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div style={{\r\n                                    marginBottom: \"25px\"\r\n                                }}></div>\r\n                            </>\r\n                        )}\r\n\r\n                    </>\r\n\r\n                )}\r\n\r\n            </Skeleton>\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NewBrandDetail\r\n","import React, { useState } from 'react';\r\nimport { Modal, notification } from 'antd';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport { useHandleFetch } from '../../hooks';\r\nimport { CheckCircleOutlined, PlusOutlined, EditOutlined, DeleteOutlined, EditFilled } from '@ant-design/icons';\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n\tname: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t\tmessage: message || 'Tag Updated',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t\tmessage: message || 'Something Went Wrong',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n};\r\n\r\n\r\n\r\ninterface Props {\r\n\tcategory: any;\r\n\tsetvisible: any;\r\n\tvisible: any;\r\n\ttagList: any;\r\n\tsetTagList: any;\r\n\r\n}\r\n\r\nconst QuickEdit = ({ category, setvisible, visible, tagList, setTagList }: Props) => {\r\n\tconst [updateTagState, handleUpdateCategoryFetch] = useHandleFetch({}, 'updateTag');\r\n\r\n\tconst handleSubmit = async (values: any, actions: any) => {\r\n\t\tconst updateTagRes = await handleUpdateCategoryFetch({\r\n\t\t\turlOptions: {\r\n\t\t\t\tplaceHolders: {\r\n\t\t\t\t\tid: values.id,\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tbody: {\r\n\t\t\t\tname: values.name,\r\n\t\t\t\tdescription: values.description,\r\n\t\t\t},\r\n\t\t});\r\n\r\n\t\t// @ts-ignore\r\n\t\tif (updateTagRes && updateTagRes.status === 'ok') {\r\n\t\t\topenSuccessNotification();\r\n\r\n\t\t\tconst positionInTag = () => {\r\n\t\t\t\treturn tagList.map(item => item.id).indexOf(category.id);\r\n\t\t\t}\r\n\r\n\t\t\tconst index = positionInTag();\r\n\r\n\t\t\t// @ts-ignore\r\n\t\t\tconst updatedItem = Object.assign({}, tagList[index], { ...updateTagRes });\r\n\t\t\tconst updateTagList = [...tagList.slice(0, index), updatedItem, ...tagList.slice(index + 1)];\r\n\t\t\tsetTagList(updateTagList);\r\n\r\n\t\t}\r\n\t\telse {\r\n\t\t\topenErrorNotification();\r\n\t\t}\r\n\r\n\t\tactions.setSubmitting(false);\r\n\t\tsetvisible(false)\r\n\t};\r\n\r\n\r\n\tconst handleCancel = (e: any) => {\r\n\t\tsetvisible(false);\r\n\t};\r\n\r\n\r\n\tconst getisSubmitButtonDisabled = (values, isValid) => {\r\n\t\tif (!values.name || !isValid) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\treturn (\r\n\t\t<Formik\r\n\t\t\tonSubmit={(values, actions) => handleSubmit(values, actions)}\r\n\t\t\tvalidationSchema={validationSchema}\r\n\t\t\tvalidateOnBlur={false}\r\n\t\t\tenableReinitialize={true}\r\n\t\t\tinitialValues={\r\n\t\t\t\t{ ...category }\r\n\t\t\t}\r\n\t\t>\r\n\t\t\t{({\r\n\t\t\t\thandleChange,\r\n\t\t\t\tvalues,\r\n\t\t\t\thandleSubmit,\r\n\t\t\t\terrors,\r\n\t\t\t\tisValid,\r\n\t\t\t\tisSubmitting,\r\n\t\t\t\ttouched,\r\n\t\t\t\thandleBlur,\r\n\t\t\t\tsetFieldTouched,\r\n\t\t\t\thandleReset,\r\n\t\t\t}) => (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<Modal\r\n\t\t\t\t\t\t\ttitle=\"Quick Edit\"\r\n\t\t\t\t\t\t\tvisible={visible}\r\n\t\t\t\t\t\t\tonOk={(e: any) => handleSubmit(e)}\r\n\t\t\t\t\t\t\tonCancel={handleCancel}\r\n\t\t\t\t\t\t\tokText='Update'\r\n\t\t\t\t\t\t\tokButtonProps={{\r\n\t\t\t\t\t\t\t\tloading: isSubmitting,\r\n\t\t\t\t\t\t\t\thtmlType: \"submit\",\r\n\t\t\t\t\t\t\t\tdisabled: getisSubmitButtonDisabled(values, isValid)\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\tlabel='Title'\r\n\t\t\t\t\t\t\t\tvalue={values.name}\r\n\t\t\t\t\t\t\t\tname='name'\r\n\t\t\t\t\t\t\t\tisError={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateTagState.error['error']['name'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateTagState.error['error']['name'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('name');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\tlabel='Description'\r\n\t\t\t\t\t\t\t\tvalue={values.description}\r\n\t\t\t\t\t\t\t\tname='description'\r\n\t\t\t\t\t\t\t\tisError={(touched.description && errors.description) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateTagState.error['error']['description'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.description && errors.description) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateTagState.error['error']['description'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('description');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</Modal>\r\n\r\n\t\t\t\t\t</>\r\n\t\t\t\t)}\r\n\t\t</Formik>\r\n\t);\r\n};\r\n\r\n\r\nexport default QuickEdit;\r\n","import React, { useState } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n\r\nimport { useHandleFetch } from '../../hooks';\r\n// import third party ui lib\r\nimport { Upload, message, Switch, Select, Button, notification, Modal, Tooltip } from 'antd';\r\n\r\nimport {\r\n    FileOutlined,\r\n    InboxOutlined,\r\n    FileAddOutlined,\r\n    DeleteOutlined,\r\n    CheckCircleOutlined,\r\n    CloseOutlined,\r\n    CheckOutlined,\r\n    InfoCircleOutlined,\r\n    PlusOutlined,\r\n    FileImageFilled\r\n} from '@ant-design/icons';\r\n\r\n\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport MediaLibrary from \"../../components/MediaLibrary\";\r\nimport MetaTags from \"../../pages/category/MetaTags\";\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    name: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Tag Created',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n    notification.error({\r\n        message: message || 'Something Went Wrong',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst initialValues = {\r\n    name: '',\r\n\tbnName: '',\r\n\tdescription: '',\r\n\tbnDescription: '',\r\n\tmetaTitle: '',\r\n\tbnMetaTitle: '',\r\n\tmetaDescription: '',\r\n\tbnMetaDescription: '',\r\n\tmetaTags: '',\r\n\tbnMetaTags: '',\r\n}\r\n\r\n\r\n\r\ninterface Props {\r\n    addNewCategoryVisible?: any;\r\n    setAddNewCategoryVisible?: any;\r\n    tagList?: any;\r\n    setTagList?: any;\r\n\r\n}\r\n\r\nconst AddNewBrand = ({ addNewCategoryVisible, setAddNewCategoryVisible, tagList, setTagList }: Props) => {\r\n\r\n    const [addTagState, handleAddTagFetch] = useHandleFetch({}, 'addTag');\r\n    const [myImages, setmyImages] = useState(false);\r\n    const [visibleMedia, setvisibleMedia] = useState(false);\r\n    const [coverImageId, setCoverImageId] = useState('');\r\n    const [tags,setTags] = useState([]);\r\n\tconst [bnTags,setBnTags] = useState([]);\r\n\r\n    const handleSubmit = async (values: any, actions: any) => {\r\n        const addTagRes = await handleAddTagFetch({\r\n            urlOptions: {\r\n                placeHolders: {\r\n                    id: values.id,\r\n                }\r\n            },\r\n            body: {\r\n                name: values.name.trim(),\r\n                description: values.description,\r\n                metaTitle: values.metaTitle,\r\n                metaDescription: values.metaDescription,\r\n                metaTags: tags.join(','),\r\n\r\n\r\n                \r\n                bn: {\r\n\t\t\t\t\tmetaTitle: values.bnMetaTitle,\r\n\t\t\t\t\tmetaDescription: values.bnMetaDescription,\r\n\t\t\t\t\tmetaTags: bnTags.join(','),\r\n\t\t\t\t\tname: values.bnName.trim(),\r\n\t\t\t\t\tdescription: values.bnDescription,\r\n\t\t\t\t}\r\n            },\r\n        });\r\n\r\n        // @ts-ignore\r\n        if (addTagRes && addTagRes.status === 'ok') {\r\n            openSuccessNotification();\r\n\r\n            setTagList([...tagList, {\r\n                id: addTagRes['id'] || '',\r\n                key: addTagRes['id'] || '',\r\n                name: addTagRes['name'] || '',\r\n                description: addTagRes['description'] || '',\r\n            }])\r\n            actions.resetForm();\r\n            setAddNewCategoryVisible(false);\r\n        }\r\n        else {\r\n            openErrorNotification();\r\n        }\r\n\r\n\r\n        actions.setSubmitting(false);\r\n\r\n    };\r\n\r\n\r\n    const handleCancel = (e: any) => {\r\n        setAddNewCategoryVisible(false);\r\n    };\r\n\r\n\r\n    const getisSubmitButtonDisabled = (values, isValid) => {\r\n        if (!values.name || !isValid) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n\r\n\r\n\r\n    const handleImagesDelete = (id) => {\r\n        // @ts-ignore\r\n        const newImages = myImages && myImages.filter(image => {\r\n            return image.id !== id;\r\n        })\r\n\r\n        setmyImages(newImages);\r\n    }\r\n\r\n\r\n\r\n\r\n    return (\r\n        <Formik\r\n            onSubmit={(values, actions) => handleSubmit(values, actions)}\r\n            validationSchema={validationSchema}\r\n            validateOnBlur={false}\r\n            enableReinitialize={true}\r\n            initialValues={\r\n                { ...initialValues }\r\n            }\r\n        >\r\n            {({\r\n                handleChange,\r\n                values,\r\n                handleSubmit,\r\n                errors,\r\n                isValid,\r\n                isSubmitting,\r\n                touched,\r\n                handleBlur,\r\n                setFieldTouched,\r\n                handleReset,\r\n            }) => (\r\n                    <>\r\n                        <Modal\r\n                            style={{\r\n                                top: '40px'\r\n                            }}\r\n                            title=\"Add New Tag\"\r\n                            visible={addNewCategoryVisible}\r\n                            onOk={(e: any) => handleSubmit(e)}\r\n                            onCancel={handleCancel}\r\n                            okText='Create'\r\n                            okButtonProps={{\r\n                                loading: isSubmitting,\r\n                                htmlType: \"submit\",\r\n                                disabled: getisSubmitButtonDisabled(values, isValid)\r\n                            }}\r\n                        >\r\n                  \t\t\t<Input\r\n\t\t\t\t\t\t\t\tlabel='Name'\r\n\t\t\t\t\t\t\t\tvalue={values.name}\r\n\t\t\t\t\t\t\t\tname='name'\r\n\t\t\t\t\t\t\t\tplaceHolder={'new,fresh'}\r\n\t\t\t\t\t\t\t\tisError={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addTagState.error['error']['name'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addTagState.error['error']['name'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('name');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\tlabel='BN Name'\r\n\t\t\t\t\t\t\t\tvalue={values.bnName}\r\n\t\t\t\t\t\t\t\tplaceHolder={'নতুন,ফ্রেশ'}\r\n\t\t\t\t\t\t\t\tname='bnName'\r\n\t\t\t\t\t\t\t\tisError={(touched.bnName && errors.bnName) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addTagState.error['error']['bnName'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.bnName && errors.bnName) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addTagState.error['error']['bnName'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('bnName');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\r\n\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\tlabel='Description'\r\n\t\t\t\t\t\t\t\tvalue={values.description}\r\n                                name='description'\r\n                                placeholder={'This tag...'}\r\n\t\t\t\t\t\t\t\tisError={(touched.description && errors.description) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addTagState.error['error']['description'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.description && errors.description) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addTagState.error['error']['description'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('description');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\tlabel='BN Description'\r\n\t\t\t\t\t\t\t\tvalue={values.bnDescription}\r\n\t\t\t\t\t\t\t\tplaceholder={'এই ট্যাগ...'}\r\n\t\t\t\t\t\t\t\tname='bnDescription'\r\n\t\t\t\t\t\t\t\tisError={(touched.bnDescription && errors.bnDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addTagState.error['error']['bnDescription'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.bnDescription && errors.bnDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addTagState.error['error']['bnDescription'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('bnDescription');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n                                \r\n<Input\r\n\t\t\t\t\t\t\t\tlabel='Meta title'\r\n\t\t\t\t\t\t\t\tvalue={values.metaTitle}\r\n\t\t\t\t\t\t\t\tplaceHolder={'category...'}\r\n\t\t\t\t\t\t\t\tname='metaTitle'\r\n\t\t\t\t\t\t\t\tisError={(touched.metaTitle && errors.metaTitle) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addTagState.error['error']['metaTitle'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.metaTitle && errors.metaTitle) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addTagState.error['error']['metaTitle'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('metaTitle')\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\tlabel='BN Meta title'\r\n\t\t\t\t\t\t\t\tvalue={values.bnMetaTitle}\r\n\t\t\t\t\t\t\t\tplaceHolder={'ক্যাটাগড়ি...'}\r\n\t\t\t\t\t\t\t\tname='bnMetaTitle'\r\n\t\t\t\t\t\t\t\tisError={(touched.bnMetaTitle && errors.bnMetaTitle) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addTagState.error['error']['bnMetaTitle'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.bnMetaTitle && errors.bnMetaTitle) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addTagState.error['error']['bnMetaTitle'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('bnMetaTitle');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\tlabel='Meta description'\r\n\t\t\t\t\t\t\t\tvalue={values.metaDescription}\r\n\t\t\t\t\t\t\t\tplaceholder={'meta...'}\r\n\t\t\t\t\t\t\t\tname='metaDescription'\r\n\t\t\t\t\t\t\t\tisError={(touched.metaDescription && errors.metaDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addTagState.error['error']['metaDescription'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.metaDescription && errors.metaDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addTagState.error['error']['metaDescription'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('metaDescription');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\tlabel='BN Meta Description'\r\n\t\t\t\t\t\t\t\tvalue={values.bnMetaDescription}\r\n\t\t\t\t\t\t\t\tplaceholder={'এইয় মেট...'}\r\n\t\t\t\t\t\t\t\tname='bnMetaDescription'\r\n\t\t\t\t\t\t\t\tisError={(touched.bnMetaDescription && errors.bnMetaDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addTagState.error['error']['bnMetaDescription'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.bnMetaDescription && errors.bnMetaDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addTagState.error['error']['bnMetaDescription'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('bnMetaDescription');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\tMeta Tags (grocery,fashion)\r\n\t\t\t\t\t\t\t</h3>\r\n\r\n\t\t\t\t\t\t\t<MetaTags\r\n\t\t\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\t\t\tsetTags={setTags}\r\n\t\t\t\t\t\t\ttags={tags}\r\n\t\t\t\t\t\t\t />\r\n\r\n\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\tmarginTop:'15px'\r\n\t\t\t\t\t\t\t}}></div>\r\n\r\n\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\tBN Meta Tags (মুদিখানা,ফ্যাশন)\r\n\t\t\t\t\t\t\t</h3>\r\n\r\n\t\t\t\t\t\t\t<MetaTags\r\n\t\t\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\t\t\tsetTags={setBnTags}\r\n\t\t\t\t\t\t\ttags={bnTags}\r\n\t\t\t\t\t\t\t />\r\n\r\n                        </Modal>\r\n\r\n                        <MediaLibrary\r\n                            setvisible={setvisibleMedia}\r\n                            visible={visibleMedia}\r\n                            setmyImages={setmyImages}\r\n                            myImages={myImages}\r\n                            isModalOpenForImages={true}\r\n\r\n                        />\r\n                    </>\r\n                )}\r\n        </Formik>\r\n\r\n\r\n\r\n\r\n    );\r\n};\r\n\r\nexport default AddNewBrand;\r\n","import React, { useState, useEffect } from 'react';\r\n\r\n// import third party ui lib\r\nimport { Empty, Popconfirm, Upload, message, Switch, Select, Button, notification, Table, Space, Input as CoolInput, Tooltip, Modal } from 'antd';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { useHistory } from 'react-router';\r\n\r\n\r\n\r\nimport {\r\n\tFileOutlined,\r\n\tInboxOutlined,\r\n\tRadiusUpleftOutlined,\r\n\tRadiusUprightOutlined,\r\n\tRadiusBottomleftOutlined,\r\n\tRadiusBottomrightOutlined,\r\n\tPlusOutlined,\r\n\tDeleteOutlined,\r\n\tEditOutlined,\r\n\tCheckCircleOutlined\r\n} from '@ant-design/icons';\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n\r\n\r\n/// import hooks\r\nimport { useFetch, useHandleFetch } from \"../../hooks\";\r\n\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport { DataTableSkeleton } from \"../../components/Placeholders\";\r\nimport QuickEdit from \"./QuickEdit\"\r\nimport AddNewTag from \"./AddNewTag\"\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t\tmessage: message || 'Tag Created',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n\tnotification.error({\r\n\t\tmessage: message || 'Something Went Wrong',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n};\r\n\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n\tname: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\n\r\nconst initialValues = {\r\n\tname: '',\r\n\tdescription: ''\r\n}\r\n\r\n\r\nconst { Column, ColumnGroup } = Table;\r\nconst { Search } = CoolInput;\r\n\r\n\r\n\r\nconst MyTable = ({ data, setTagList }) => {\r\n\tconst [visible, setvisible] = useState(false);\r\n\tconst [activeCategoryForEdit, setactiveCategoryForEdit] = useState(false);\r\n\tconst [deleteTagState, handleDeleteTagFetch] = useHandleFetch({}, 'deleteTag');\r\n\r\n\tconst history = useHistory();\r\n\r\n\r\n\tconst handleDeleteTag = async (id) => {\r\n\t\tconst deleteTagRes = await handleDeleteTagFetch({\r\n\t\t\turlOptions: {\r\n\t\t\t\tplaceHolders: {\r\n\t\t\t\t\tid,\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\r\n\r\n\t\t// @ts-ignore\r\n\t\tif (deleteTagRes && deleteTagRes.status === 'ok') {\r\n\t\t\topenSuccessNotification('Deleted Tag');\r\n\t\t\tconst newtagList = data.filter(item => item.id !== id);\r\n\t\t\tsetTagList(newtagList);\r\n\t\t}\r\n\r\n\r\n\t}\r\n\r\n\r\n\tconst handleOk = (e: any) => {\r\n\t\tsetvisible(false);\r\n\r\n\t};\r\n\r\n\tconst handleCancel = (e: any) => {\r\n\t\tsetvisible(false);\r\n\t};\r\n\r\n\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Table\r\n\t\t\t\t// expandable={{\r\n\t\t\t\t//     expandedRowRender: record => <p style={{ margin: 0 }}>{record.name}</p>,\r\n\t\t\t\t//     rowExpandable: record => record.name !== 'Not Expandable',\r\n\t\t\t\t//   }}\r\n\t\t\t\t// bordered={true}\r\n\t\t\t\tsize='small'\r\n\t\t\t\t// pagination={false}\r\n\t\t\t\tdataSource={data}\r\n\t\t\t>\r\n\r\n\t\t\t\t<Column\r\n\t\t\t\t\ttitle=\"Name\"\r\n\t\t\t\t\tdataIndex=\"name\"\r\n\t\t\t\t\tkey=\"id\"\r\n\t\t\t\t\tclassName='classnameofthecolumn'\r\n\t\t\t\t\trender={(text, record: any) => (\r\n\t\t\t\t\t\t<>\r\n\r\n\t\t\t\t\t\t\t<h4\r\n\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\thistory.push(`/admin/tag/${record.id}`)\r\n\t\t\t\t\t\t\t\t\t// setBrandDetailVisible(true);\r\n\t\t\t\t\t\t\t\t\tsetactiveCategoryForEdit(record)\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\tfontWeight: 400,\r\n\t\t\t\t\t\t\t\t\tcolor: '#555',\r\n\t\t\t\t\t\t\t\t\tcursor: 'pointer'\r\n\r\n\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t{text}\r\n\t\t\t\t\t\t\t</h4>\r\n\r\n\r\n\t\t\t\t\t\t</>\r\n\t\t\t\t\t)}\r\n\t\t\t\t/>\r\n\r\n\t\t\t\t<Column\r\n\t\t\t\t\ttitle=\"Description\"\r\n\t\t\t\t\tdataIndex=\"description\"\r\n\t\t\t\t\tkey=\"id\"\r\n\t\t\t\t\tclassName='classnameofthecolumn'\r\n\r\n\t\t\t\t/>\r\n\r\n\r\n\t\t\t\t<Column\r\n\t\t\t\t\ttitle=\"Product\"\r\n\t\t\t\t\tdataIndex=\"productCount\"\r\n\t\t\t\t\tkey=\"id\"\r\n\t\t\t\t\tclassName='classnameofthecolumn'\r\n\t\t\t\t/>\r\n\r\n\t\t\t\t<Column\r\n\r\n\t\t\t\t\tclassName='classnameofthecolumn'\r\n\t\t\t\t\ttitle=\"\"\r\n\t\t\t\t\tkey=\"action\"\r\n\t\t\t\t\talign='right'\r\n\t\t\t\t\trender={(text, record: any) => (\r\n\t\t\t\t\t\t<Space size=\"middle\">\r\n\t\t\t\t\t\t\t<a href='##'>\r\n\t\t\t\t\t\t\t\t<Tooltip placement=\"top\" title='Quick Edit Tag'>\r\n\t\t\t\t\t\t\t\t\t<span className='iconSize' onClick={() => {\r\n\t\t\t\t\t\t\t\t\t\tsetvisible(true)\r\n\t\t\t\t\t\t\t\t\t\tsetactiveCategoryForEdit(record);\r\n\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t<EditOutlined />\r\n\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t\t</a>\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t<Popconfirm\r\n\t\t\t\t\t\t\t\tonConfirm={() => handleDeleteTag(record.id)}\r\n\t\t\t\t\t\t\t\ttitle=\"Are you sure？\" okText=\"Yes\" cancelText=\"No\">\r\n\t\t\t\t\t\t\t\t<span\r\n\t\t\t\t\t\t\t\t\tclassName='iconSize iconSize-danger'\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t<DeleteOutlined />\r\n\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t</Popconfirm>\r\n\t\t\t\t\t\t</Space>\r\n\t\t\t\t\t)}\r\n\t\t\t\t/>\r\n\t\t\t</Table>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\t\t\t{activeCategoryForEdit && <QuickEdit\r\n\t\t\t\ttagList={data}\r\n\t\t\t\tsetTagList={setTagList}\r\n\t\t\t\tsetvisible={setvisible}\r\n\t\t\t\tvisible={visible}\r\n\t\t\t\tcategory={activeCategoryForEdit} />}\r\n\t\t</>\r\n\t)\r\n}\r\n\r\n\r\n\r\n\r\ninterface Props { }\r\n\r\nconst TagList = ({ }: Props) => {\r\n\r\n\r\n\tconst [tagList, setTagList] = useState([]);\r\n\r\n\tconst [tagState, handleTagListFetch] = useHandleFetch({}, 'tagList');\r\n\r\n\r\n\tuseEffect(() => {\r\n\t\tconst setTags = async () => {\r\n\t\t\tconst tags = await handleTagListFetch({});\r\n\t\t\t// @ts-ignore\r\n\t\t\tsetTagList(tags);\r\n\t\t}\r\n\t\tsetTags();\r\n\t}, [])\r\n\r\n\r\n\r\n\tconst [addTagState, handleAddTagFetch] = useHandleFetch({}, 'addTag');\r\n\tconst [addNewCategoryVisible, setAddNewCategoryVisible] = useState(false);\r\n\r\n\tconst handleSubmit = async (values: any, actions: any) => {\r\n\t\tconst addTagRes = await handleAddTagFetch({\r\n\t\t\turlOptions: {\r\n\t\t\t\tplaceHolders: {\r\n\t\t\t\t\tid: values.id,\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tbody: {\r\n\t\t\t\tname: values.name.trim(),\r\n\t\t\t\tdescription: values.description,\r\n\t\t\t},\r\n\t\t});\r\n\r\n\t\t// @ts-ignore\r\n\t\tif (addTagRes && addTagRes.status === 'ok') {\r\n\t\t\topenSuccessNotification();\r\n\r\n\t\t\tsetTagList([...tagList, {\r\n\t\t\t\tid: addTagRes['id'] || '',\r\n\t\t\t\tkey: addTagRes['id'] || '',\r\n\t\t\t\tname: addTagRes['name'] || '',\r\n\t\t\t\tdescription: addTagRes['description'] || '',\r\n\t\t\t}])\r\n\t\t\tactions.resetForm();\r\n\t\t}\r\n\t\tactions.setSubmitting(false);\r\n\r\n\t};\r\n\r\n\r\n\r\n\tconst getisSubmitButtonDisabled = (values, isValid) => {\r\n\t\tif (!values.name || !isValid) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\r\n\tconst handleOkAddNewCategory = (e: any) => {\r\n\t\tsetAddNewCategoryVisible(false);\r\n\r\n\t};\r\n\r\n\tconst handleCancelAddNewCategory = (e: any) => {\r\n\t\tsetAddNewCategoryVisible(false);\r\n\t};\r\n\r\n\tconst handleSearch = (value) => {\r\n\t\tif (tagState.data.length > 0) {\r\n\t\t\tconst newTagList = tagState.data.filter(item => item.name.toLowerCase().includes(value.toLowerCase()));\r\n\t\t\tsetTagList(newTagList);\r\n\t\t}\r\n\r\n\t}\r\n\r\n\treturn (\r\n\t\t<>\r\n\r\n\t\t\t<div className='categoryListContainer'>\r\n\t\t\t\t<div className='categoryListContainer__header'>\r\n\t\t\t\t\t<div className='categoryListContainer__header-searchBar-tag'>\r\n\t\t\t\t\t\t<h2 className='categoryListContainer__header-title'>\r\n\t\t\t\t\t\t\tTags\r\n            </h2>\r\n\r\n\r\n\t\t\t\t\t\t<Search\r\n\t\t\t\t\t\t\tenterButton={false}\r\n\t\t\t\t\t\t\tclassName='searchbarClassName'\r\n\t\t\t\t\t\t\tplaceholder=\"search tags..\"\r\n\t\t\t\t\t\t\tonSearch={value => handleSearch(value)}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\t// type=\"primary\"\r\n\t\t\t\t\t\tclassName='btnPrimaryClassNameoutline'\r\n\t\t\t\t\t\ticon={<PlusOutlined />}\r\n\t\t\t\t\t\tonClick={() => setAddNewCategoryVisible(true)}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tAdd New\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className='categoryListContainer__categoryList'>\r\n\t\t\t\t\t{tagState.done && tagList.length > 0 && <MyTable\r\n\t\t\t\t\t\tsetTagList={setTagList}\r\n\t\t\t\t\t\tdata={tagList} />}\r\n\t\t\t\t\t{tagState.isLoading && <DataTableSkeleton />}\r\n\r\n\r\n\t\t\t\t\t{tagState.done && !(tagList.length > 0) && (\r\n\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\tmarginTop: '50px'\r\n\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t<Empty description='No Tags found' image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\r\n\t\t\t<AddNewTag\r\n\t\t\t\ttagList={tagList}\r\n\t\t\t\tsetTagList={setTagList}\r\n\t\t\t\taddNewCategoryVisible={addNewCategoryVisible}\r\n\t\t\t\tsetAddNewCategoryVisible={setAddNewCategoryVisible}\r\n\t\t\t/>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default TagList;\r\n","import React, { useState } from 'react';\r\nimport { Modal, notification } from 'antd';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport { useHandleFetch } from '../../hooks';\r\nimport { CheckCircleOutlined, PlusOutlined, EditOutlined, DeleteOutlined, EditFilled } from '@ant-design/icons';\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    name: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n    description: Yup.string().label('Description').required('Description is required')\r\n});\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Tag Updated',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Something Went Wrong',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n    });\r\n};\r\n\r\n\r\ninterface Props {\r\n    tagEditVisible?: any;\r\n    setTagEditVisible?: any;\r\n    tagDetailData?: any;\r\n    setTagDetailData?:any; \r\n}\r\n\r\nconst QuickEdit = ({ tagEditVisible, setTagEditVisible, tagDetailData,setTagDetailData }: Props) => {\r\n    const [updateTagState, handleUpdateCategoryFetch] = useHandleFetch({}, 'updateTag');\r\n\r\n    const handleSubmit = async (values: any, actions: any) => {\r\n        const updateTagRes = await handleUpdateCategoryFetch({\r\n            urlOptions: {\r\n                placeHolders: {\r\n                    id: values.id,\r\n                }\r\n            },\r\n            body: {\r\n                name: values.name,\r\n                description: values.description,\r\n            },\r\n        });\r\n\r\n        // @ts-ignore\r\n        if (updateTagRes && updateTagRes.status === 'ok') {\r\n            setTagDetailData({\r\n                id:values.id,\r\n                key:values.id,\r\n                name: values.name,\r\n                description: values.description,\r\n            })\r\n            console.log('categoryupdateTagRes',updateTagRes);\r\n            openSuccessNotification();\r\n\r\n            // const positionInTag = () => {\r\n            //     return tagList.map(item => item.id).indexOf(category.id);\r\n            // }\r\n\r\n            // const index = positionInTag();\r\n\r\n            // const updatedItem = Object.assign({}, tagList[index], { ...updateTagRes });\r\n            // const updateTagList = [...tagList.slice(0, index), updatedItem, ...tagList.slice(index + 1)];\r\n            // setTagList(updateTagList);\r\n\r\n        }\r\n        else {\r\n            openErrorNotification();\r\n        }\r\n\r\n        actions.setSubmitting(false);\r\n        setTagEditVisible(false)\r\n    };\r\n\r\n\r\n    const handleCancel = (e: any) => {\r\n        setTagEditVisible(false);\r\n    };\r\n\r\n\r\n    const getisSubmitButtonDisabled = (values, isValid) => {\r\n        if (!values.name || !values.description || !isValid) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    return (\r\n        <Formik\r\n            onSubmit={(values, actions) => handleSubmit(values, actions)}\r\n            validationSchema={validationSchema}\r\n            validateOnBlur={false}\r\n            enableReinitialize={true}\r\n            initialValues={\r\n                { ...tagDetailData }\r\n            }\r\n        >\r\n            {({\r\n                handleChange,\r\n                values,\r\n                handleSubmit,\r\n                errors,\r\n                isValid,\r\n                isSubmitting,\r\n                touched,\r\n                handleBlur,\r\n                setFieldTouched,\r\n                handleReset,\r\n            }) => (\r\n                    <>\r\n                        <Modal\r\n                            title=\"Tag Edit\"\r\n                            visible={tagEditVisible}\r\n                            onOk={(e: any) => handleSubmit(e)}\r\n                            onCancel={handleCancel}\r\n                            okText='Update'\r\n                            okButtonProps={{\r\n                                loading: isSubmitting,\r\n                                htmlType: \"submit\",\r\n                                disabled: getisSubmitButtonDisabled(values, isValid)\r\n                            }}\r\n                        >\r\n                            <Input\r\n                                label='Title'\r\n                                value={values.name}\r\n                                name='name'\r\n                                isError={(touched.name && errors.name) ||\r\n                                    (!isSubmitting && updateTagState.error['error']['name'])}\r\n\r\n                                errorString={(touched.name && errors.name) ||\r\n                                    (!isSubmitting && updateTagState.error['error']['name'])}\r\n                                onChange={(e: any) => {\r\n                                    handleChange(e);\r\n                                    setFieldTouched('name');\r\n                                }}\r\n                            />\r\n                            <TextArea\r\n                                label='Description'\r\n                                value={values.description}\r\n                                name='description'\r\n                                isError={(touched.description && errors.description) ||\r\n                                    (!isSubmitting && updateTagState.error['error']['description'])}\r\n\r\n                                errorString={(touched.description && errors.description) ||\r\n                                    (!isSubmitting && updateTagState.error['error']['description'])}\r\n                                onChange={(e: any) => {\r\n                                    handleChange(e);\r\n                                    setFieldTouched('description');\r\n                                }}\r\n                            />\r\n                        </Modal>\r\n\r\n                    </>\r\n                )}\r\n        </Formik>\r\n    );\r\n};\r\n\r\n\r\nexport default QuickEdit;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useParams, useHistory } from \"react-router\";\r\n\r\n\r\n// import hooks\r\nimport { useHandleFetch } from \"../../hooks\";\r\n\r\n// import lib\r\nimport {\r\n    FileOutlined,\r\n    InboxOutlined,\r\n    RadiusUpleftOutlined,\r\n    RadiusUprightOutlined,\r\n    RadiusBottomleftOutlined,\r\n    RadiusBottomrightOutlined,\r\n    PlusOutlined,\r\n    DeleteOutlined,\r\n    EditOutlined,\r\n    CheckCircleOutlined\r\n} from '@ant-design/icons';\r\n\r\nimport { Skeleton, Empty, Popconfirm, Upload, message, Switch, Select, Button, notification, Table, Space, Input as CoolInput, Tooltip, Modal } from 'antd';\r\n\r\n\r\n// import components\r\nimport { DataTableSkeleton } from \"../../components/Placeholders\";\r\nimport TagEdit from \"./TagEdit\";\r\n\r\n\r\nconst { Column, ColumnGroup } = Table;\r\nconst { Search } = CoolInput;\r\n\r\n\r\ninterface Props {\r\n    productRecord?: any;\r\n}\r\n\r\nconst NewBrandDetail = (props: Props) => {\r\n    const [tagDetailState, handleTagDetailFetch] = useHandleFetch({}, 'tagDetail');\r\n    const [tagProductsState, handleTagProductsFetch] = useHandleFetch({}, 'tagProducts');\r\n    const [tagEditVisible, setTagEditVisible] = useState(false);\r\n    const [tagDetailData,setTagDetailData] = useState({}); \r\n\r\n\r\n    const params = useParams();\r\n    const history = useHistory();\r\n    const tagId = params['id'];\r\n\r\n    useEffect(() => {\r\n\r\n        const getBrandDetail = async () => {\r\n            const tagDetailRes =  await handleTagDetailFetch({\r\n                urlOptions: {\r\n                    placeHolders: {\r\n                        id: tagId\r\n                    }\r\n                }\r\n            }); \r\n\r\n            // @ts-ignore\r\n            if(tagDetailRes){\r\n                console.log('tagDetailRes',tagDetailRes);\r\n                // @ts-ignore\r\n                setTagDetailData(tagDetailRes);\r\n            }\r\n        };\r\n\r\n        getBrandDetail();\r\n\r\n    }, [tagId]);\r\n\r\n    useEffect(() => {\r\n        const getTagProducts = async () => {\r\n            await handleTagProductsFetch({\r\n                urlOptions: {\r\n                    placeHolders: {\r\n                        id: tagId\r\n                    }\r\n                }\r\n            })\r\n        };\r\n\r\n        getTagProducts();\r\n\r\n    }, [tagId]);\r\n\r\n\r\n\r\n\r\n    console.log('tagProductsState', tagProductsState);\r\n\r\n    console.log('brandParams', params);\r\n\r\n\r\n    return (\r\n        <div className='brandDetailContainer'>\r\n            <div className='brandDetailContainer__heading'>\r\n                <h3>\r\n                    Tag Detail\r\n                </h3>\r\n\r\n                {tagDetailState.done && tagDetailData && (Object.keys(tagDetailData).length > 0) && (\r\n                    <>\r\n                        <TagEdit\r\n                            tagEditVisible={tagEditVisible}\r\n                            setTagEditVisible={setTagEditVisible}\r\n                            tagDetailData={tagDetailData}\r\n                            setTagDetailData={setTagDetailData}\r\n                        />\r\n                        <Button\r\n                            onClick={() => setTagEditVisible(true)}\r\n                            type='link'\r\n                            icon={<EditOutlined />}\r\n                        >\r\n                            Edit\r\n                      </Button>\r\n                    </>\r\n                )}\r\n            </div>\r\n            <Skeleton\r\n                paragraph={{ rows: 2 }}\r\n                loading={tagDetailState.isLoading}>\r\n                {tagDetailState.done && tagDetailData && !(Object.keys(tagDetailData).length > 0) && (\r\n                    <Empty description='No Tag found' image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n                )}\r\n\r\n                {tagDetailState.done && tagDetailData && (Object.keys(tagDetailData).length > 0) && (\r\n                    <div className='brandDetailContainer__header'>\r\n\r\n                        <div className='brandDetailContainer__header-info'>\r\n                            <h2>\r\n                                {tagDetailData['name']}\r\n                            </h2>\r\n                            <h3>\r\n                                {tagDetailData['description']}\r\n                            </h3>\r\n                            {tagDetailData['url'] && (\r\n                                <h3>\r\n                                    URL:\r\n                                    <span>\r\n                                        {tagDetailData['url']}\r\n                                    </span>\r\n\r\n                                </h3>\r\n                            )}\r\n                        </div>\r\n                    </div>\r\n                )}\r\n\r\n            </Skeleton>\r\n\r\n            <div className='brandDetailContainer__heading'>\r\n                <h3>\r\n                    Products\r\n                </h3>\r\n            </div>\r\n            <div className='brandDetailContainer__body'>\r\n                {tagProductsState.isLoading && <DataTableSkeleton />}\r\n                {tagProductsState.done && !(tagProductsState.data.length > 0) && (\r\n                    <div style={{\r\n                        marginTop: '100px'\r\n                    }}>\r\n                        <Empty description='No Products exists for this tag' image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n                    </div>\r\n                )}\r\n\r\n                {tagProductsState.done && tagProductsState.data && tagProductsState.data.length > 0 && (\r\n                    <>\r\n                        <Table\r\n                            style={{\r\n                                paddingTop: '10px',\r\n                                borderRadius: '5px !important',\r\n                                overflow: 'hidden',\r\n                                boxShadow: '0 0.125rem 0.625rem rgba(227, 231, 250, 0.3), 0 0.0625rem 0.125rem rgba(206, 220, 233, 0.4)'\r\n                            }}\r\n                            // expandable={{\r\n                            //     expandedRowRender: record => <p style={{ margin: 0 }}>{record.name}</p>,\r\n                            //     rowExpandable: record => record.name !== 'Not Expandable',\r\n                            //   }}\r\n                            // bordered={true}\r\n                            size='small'\r\n                            // pagination={false}\r\n                            dataSource={tagProductsState.data}\r\n                            tableLayout={'auto'}\r\n                            onHeaderRow={column => {\r\n                                return {\r\n                                    style: {\r\n                                        color: 'red !important'\r\n                                    }\r\n\r\n                                };\r\n                            }}\r\n                        >\r\n                            <Column\r\n                                title=\"\"\r\n                                dataIndex=\"cover\"\r\n                                key=\"id\"\r\n                                width={'80px'}\r\n\r\n                                className='classnameofthecolumn'\r\n\r\n                                render={(cover, record: any) => (\r\n                                    <>\r\n                                        <img\r\n                                            onClick={() => {\r\n                                                history.push(`/admin/product/${record.id}`)\r\n                                            }}\r\n                                            src={cover} alt='cover img' style={{\r\n                                                height: '40px',\r\n                                                width: '40px',\r\n                                                objectFit: \"contain\",\r\n                                                borderRadius: '3px',\r\n                                                cursor: 'pointer'\r\n                                            }} />\r\n\r\n\r\n\r\n\r\n                                    </>\r\n                                )}\r\n                            />\r\n\r\n                            <Column\r\n                                title=\"Name\"\r\n                                dataIndex=\"name\"\r\n                                key=\"id\"\r\n                                className='classnameofthecolumn'\r\n                                render={(text, record: any) => (\r\n                                    <>\r\n                                        <h4\r\n                                            onClick={() => {\r\n                                                history.push(`/admin/product/${record.id}`)\r\n                                            }}\r\n                                            style={{\r\n                                                fontWeight: 400,\r\n                                                color: '#555',\r\n                                                cursor: 'pointer'\r\n\r\n                                            }}>\r\n                                            {text}\r\n                                        </h4>\r\n\r\n\r\n                                    </>\r\n                                )}\r\n\r\n                            />\r\n\r\n                            <Column\r\n                                title=\"Offer Price\"\r\n                                dataIndex=\"offerPrice\"\r\n                                key=\"id\"\r\n                                className='classnameofthecolumn'\r\n\r\n                            />\r\n\r\n\r\n                            <Column\r\n                                title=\"Price\"\r\n                                dataIndex=\"price\"\r\n                                key=\"id\"\r\n                                className='classnameofthecolumn'\r\n\r\n                            />\r\n\r\n\r\n                            <Column\r\n                                title=\"Available\"\r\n                                dataIndex=\"available\"\r\n                                key=\"id\"\r\n                                className='classnameofthecolumn'\r\n\r\n                            />\r\n\r\n\r\n                            <Column\r\n                                title=\"Minimum\"\r\n                                dataIndex=\"minimum\"\r\n                                key=\"id\"\r\n                                className='classnameofthecolumn'\r\n\r\n                            />\r\n\r\n                        </Table>\r\n                    </>\r\n                )}\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NewBrandDetail\r\n","import React, { useState } from 'react';\r\nimport { Modal, notification } from 'antd';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport { useHandleFetch } from '../../hooks';\r\nimport { CheckCircleOutlined, PlusOutlined, EditOutlined, DeleteOutlined, EditFilled } from '@ant-design/icons';\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    name: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n    description: Yup.string().label('Description').required('Description is required')\r\n});\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Coupon Updated',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Something Went Wrong',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n    });\r\n};\r\n\r\n\r\ninterface Props {\r\n    tagEditVisible?: any;\r\n    setTagEditVisible?: any;\r\n    tagDetailData?: any;\r\n}\r\n\r\nconst QuickEdit = ({ tagEditVisible, setTagEditVisible, tagDetailData }: Props) => {\r\n    const [updateTagState, handleUpdateCategoryFetch] = useHandleFetch({}, 'updateCoupon');\r\n\r\n    const handleSubmit = async (values: any, actions: any) => {\r\n        const updateTagRes = await handleUpdateCategoryFetch({\r\n            urlOptions: {\r\n                placeHolders: {\r\n                    id: values.id,\r\n                }\r\n            },\r\n            body: {\r\n                name: values.name,\r\n                description: values.description,\r\n            },\r\n        });\r\n\r\n        // @ts-ignore\r\n        if (updateTagRes && updateTagRes.status === 'ok') {\r\n            openSuccessNotification();\r\n\r\n            // const positionInTag = () => {\r\n            //     return tagList.map(item => item.id).indexOf(category.id);\r\n            // }\r\n\r\n            // const index = positionInTag();\r\n\r\n            // const updatedItem = Object.assign({}, tagList[index], { ...updateTagRes });\r\n            // const updateTagList = [...tagList.slice(0, index), updatedItem, ...tagList.slice(index + 1)];\r\n            // setTagList(updateTagList);\r\n\r\n        }\r\n        else {\r\n            openErrorNotification();\r\n        }\r\n\r\n        actions.setSubmitting(false);\r\n        setTagEditVisible(false)\r\n    };\r\n\r\n\r\n    const handleCancel = (e: any) => {\r\n        setTagEditVisible(false);\r\n    };\r\n\r\n\r\n    const getisSubmitButtonDisabled = (values, isValid) => {\r\n        if (!values.name || !values.description || !isValid) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    return (\r\n        <Formik\r\n            onSubmit={(values, actions) => handleSubmit(values, actions)}\r\n            validationSchema={validationSchema}\r\n            validateOnBlur={false}\r\n            enableReinitialize={true}\r\n            initialValues={\r\n                { ...tagDetailData }\r\n            }\r\n        >\r\n            {({\r\n                handleChange,\r\n                values,\r\n                handleSubmit,\r\n                errors,\r\n                isValid,\r\n                isSubmitting,\r\n                touched,\r\n                handleBlur,\r\n                setFieldTouched,\r\n                handleReset,\r\n            }) => (\r\n                    <>\r\n                        <Modal\r\n                            title=\"Coupon Edit\"\r\n                            visible={tagEditVisible}\r\n                            onOk={(e: any) => handleSubmit(e)}\r\n                            onCancel={handleCancel}\r\n                            okText='Update'\r\n                            okButtonProps={{\r\n                                loading: isSubmitting,\r\n                                htmlType: \"submit\",\r\n                                disabled: getisSubmitButtonDisabled(values, isValid)\r\n                            }}\r\n                        >\r\n                            <Input\r\n                                label='Title'\r\n                                value={values.name}\r\n                                name='name'\r\n                                isError={(touched.name && errors.name) ||\r\n                                    (!isSubmitting && updateTagState.error['error']['name'])}\r\n\r\n                                errorString={(touched.name && errors.name) ||\r\n                                    (!isSubmitting && updateTagState.error['error']['name'])}\r\n                                onChange={(e: any) => {\r\n                                    handleChange(e);\r\n                                    setFieldTouched('name');\r\n                                }}\r\n                            />\r\n                            <TextArea\r\n                                label='Description'\r\n                                value={values.description}\r\n                                name='description'\r\n                                isError={(touched.description && errors.description) ||\r\n                                    (!isSubmitting && updateTagState.error['error']['description'])}\r\n\r\n                                errorString={(touched.description && errors.description) ||\r\n                                    (!isSubmitting && updateTagState.error['error']['description'])}\r\n                                onChange={(e: any) => {\r\n                                    handleChange(e);\r\n                                    setFieldTouched('description');\r\n                                }}\r\n                            />\r\n                        </Modal>\r\n\r\n                    </>\r\n                )}\r\n        </Formik>\r\n    );\r\n};\r\n\r\n\r\nexport default QuickEdit;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useParams, useHistory } from \"react-router\";\r\n\r\n\r\n// import hooks\r\nimport { useHandleFetch } from \"../../hooks\";\r\n\r\n// import lib\r\nimport {\r\n    FileOutlined,\r\n    InboxOutlined,\r\n    RadiusUpleftOutlined,\r\n    RadiusUprightOutlined,\r\n    RadiusBottomleftOutlined,\r\n    RadiusBottomrightOutlined,\r\n    PlusOutlined,\r\n    DeleteOutlined,\r\n    EditOutlined,\r\n    CheckCircleOutlined\r\n} from '@ant-design/icons';\r\n\r\nimport { Skeleton, Empty, Button, notification, Table, Space, Input as CoolInput, Tooltip, Modal } from 'antd';\r\n\r\n\r\n// import components\r\nimport { DataTableSkeleton } from \"../../components/Placeholders\";\r\nimport CouponEdit from \"./CouponEdit\";\r\nimport CouponProducts from \"./CouponProducts\";\r\n\r\n\r\nconst { Column, ColumnGroup } = Table;\r\nconst { Search } = CoolInput;\r\n\r\n\r\ninterface Props {\r\n    productRecord?: any;\r\n}\r\n\r\nconst NewBrandDetail = (props: Props) => {\r\n    const [tagDetailState, handleTagDetailFetch] = useHandleFetch({}, 'couponDetail');\r\n    const [tagProductsState, handleTagProductsFetch] = useHandleFetch({}, 'tagProducts');\r\n    const [tagEditVisible, setTagEditVisible] = useState(false);\r\n\r\n\r\n    const params = useParams();\r\n    const history = useHistory();\r\n    const tagId = params['id'];\r\n\r\n    useEffect(() => {\r\n\r\n        const getBrandDetail = async () => {\r\n            await handleTagDetailFetch({\r\n                urlOptions: {\r\n                    placeHolders: {\r\n                        id: tagId\r\n                    }\r\n                }\r\n            })\r\n        };\r\n\r\n        getBrandDetail();\r\n\r\n    }, [tagId]);\r\n\r\n\r\n\r\n\r\n\r\n\r\n    console.log('tagDetailState', tagDetailState);\r\n\r\n    console.log('brandParams', params);\r\n\r\n\r\n    return (\r\n        <div className='brandDetailContainer'>\r\n            <div className='brandDetailContainer__heading'>\r\n                <h3>\r\n                    Coupon Detail\r\n                </h3>\r\n\r\n                {tagDetailState.done && tagDetailState.data && (Object.keys(tagDetailState.data).length > 0) && (\r\n                    <>\r\n                        <CouponEdit\r\n                            tagEditVisible={tagEditVisible}\r\n                            setTagEditVisible={setTagEditVisible}\r\n                            tagDetailData={tagDetailState.data}\r\n                        />\r\n                        <Button\r\n                            onClick={() => setTagEditVisible(true)}\r\n                            type='link'\r\n                            icon={<EditOutlined />}\r\n                        >\r\n                            Edit\r\n                      </Button>\r\n                    </>\r\n                )}\r\n            </div>\r\n            <Skeleton\r\n                paragraph={{ rows: 2 }}\r\n                loading={tagDetailState.isLoading}>\r\n                {tagDetailState.done && tagDetailState.data && !(Object.keys(tagDetailState.data).length > 0) && (\r\n                    <Empty description='No Coupon found' image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n                )}\r\n\r\n                {tagDetailState.done && tagDetailState.data && (Object.keys(tagDetailState.data).length > 0) && (\r\n                    <div className='brandDetailContainer__header'>\r\n\r\n                        <div className='brandDetailContainer__header-info'>\r\n                            <h2>\r\n                                {tagDetailState.data['name']}\r\n                            </h2>\r\n                            <h3>\r\n                                {tagDetailState.data['description']}\r\n                            </h3>\r\n                            {tagDetailState.data['code'] && (\r\n                                <h3>\r\n                                    CODE:\r\n                                    <span>\r\n                                        {tagDetailState.data['code']}\r\n                                    </span>\r\n\r\n                                </h3>\r\n                            )}\r\n                            {tagDetailState.data['code'] && (\r\n                                <h3>\r\n                                    CODE:\r\n                                    <span>\r\n                                        {tagDetailState.data['code']}\r\n                                    </span>\r\n\r\n                                </h3>\r\n                            )}\r\n\r\n                            {tagDetailState.data['amount'] && (\r\n                                <h3>\r\n                                    AMOUT:\r\n                                    <span>\r\n                                        {tagDetailState.data['amount']}\r\n                                    </span>\r\n\r\n                                </h3>\r\n                            )}\r\n\r\n                            {tagDetailState.data['freeDelivery'] && (\r\n                                <h3>\r\n                                    FREE DELIVERY:\r\n                                    <span>\r\n                                        {tagDetailState.data['freeDelivery']}\r\n                                    </span>\r\n\r\n                                </h3>\r\n                            )}\r\n\r\n\r\n                        </div>\r\n                    </div>\r\n                )}\r\n\r\n            </Skeleton>\r\n\r\n            {/* <div className='brandDetailContainer__heading'>\r\n                <h3>\r\n                    Ordered Products\r\n                </h3>\r\n            </div>\r\n            <div className='brandDetailContainer__body'>\r\n                {tagProductsState.isLoading && <DataTableSkeleton />}\r\n                {tagDetailState.done && tagDetailState.data && tagDetailState.data['orderedProducts'] && !(tagDetailState.data['orderedProducts'].length > 0) && (\r\n                    <div style={{\r\n                        marginTop: '100px'\r\n                    }}>\r\n                        <Empty description='No Products exists for this coupon' image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n                    </div>\r\n\r\n                )}\r\n\r\n                {tagDetailState.done && tagDetailState.data && Object.keys(tagDetailState.data).length > 0 && (\r\n                    <>\r\n                        {tagDetailState.data['orderedProducts'] && tagDetailState.data['orderedProducts'].length > 0 &&\r\n                            tagDetailState.data['orderedProducts'].map(product => {\r\n                                return (\r\n                                    <CouponProducts productId={product['_id']} />\r\n                                )\r\n                            })}\r\n                    </>\r\n                )}\r\n\r\n\r\n            </div> */}\r\n            {tagDetailState.done && tagDetailState.data && Object.keys(tagDetailState.data).length > 0 && tagDetailState.data['freeProducts'] && (\r\n                <div className='brandDetailContainer__heading'>\r\n                    <h3>\r\n                        Free Products\r\n                       </h3>\r\n                </div>\r\n            )\r\n            }\r\n\r\n            <div className='brandDetailContainer__body'>\r\n                {tagProductsState.isLoading && <DataTableSkeleton />}\r\n                {tagDetailState.done && tagDetailState.data && tagDetailState.data['freeProducts'] && !(tagDetailState.data['freeProducts'].length > 0) && (\r\n                    <div style={{\r\n                        marginTop: '100px'\r\n                    }}>\r\n                        <Empty description='No Products exists for this coupon' image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n                    </div>\r\n                )}\r\n\r\n                {tagDetailState.done && tagDetailState.data && Object.keys(tagDetailState.data).length > 0 && (\r\n                    <>\r\n                        {tagDetailState.data['freeProducts'] && tagDetailState.data['freeProducts'].length > 0 &&\r\n                            tagDetailState.data['freeProducts'].map(product => {\r\n                                return (\r\n                                    <CouponProducts\r\n                                        quantity={product.quantity}\r\n                                        productId={product['_id']} />\r\n                                )\r\n                            })}\r\n                    </>\r\n                )}\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NewBrandDetail\r\n","import React, { useState } from 'react';\r\nimport { Modal, notification } from 'antd';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport { useHandleFetch } from '../../hooks';\r\nimport { CheckCircleOutlined, PlusOutlined, EditOutlined, DeleteOutlined, EditFilled } from '@ant-design/icons';\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    name: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n    description: Yup.string().label('Description').required('Description is required')\r\n});\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Coupon Updated',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Something Went Wrong',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n    });\r\n};\r\n\r\n\r\ninterface Props {\r\n    category: any;\r\n    setvisible: any;\r\n    visible: any;\r\n    tagList: any;\r\n    setTagList: any;\r\n}\r\n\r\nconst ProductBundleQuickEdit = ({ category, setvisible, visible, tagList, setTagList }: Props) => {\r\n    const [updateTagState, handleUpdateCategoryFetch] = useHandleFetch({}, 'updateCoupon');\r\n\r\n    const handleSubmit = async (values: any, actions: any) => {\r\n        const updateTagRes = await handleUpdateCategoryFetch({\r\n            urlOptions: {\r\n                placeHolders: {\r\n                    id: values.id,\r\n                }\r\n            },\r\n            body: {\r\n                name: values.name,\r\n                description: values.description,\r\n            },\r\n        });\r\n\r\n        // @ts-ignore\r\n        if (updateTagRes && updateTagRes.status === 'ok') {\r\n            openSuccessNotification();\r\n\r\n            const positionInTag = () => {\r\n                return tagList.map(item => item.id).indexOf(category.id);\r\n            }\r\n\r\n            const index = positionInTag();\r\n\r\n            // @ts-ignore\r\n            const updatedItem = Object.assign({}, tagList[index], { ...updateTagRes });\r\n            const updateTagList = [...tagList.slice(0, index), updatedItem, ...tagList.slice(index + 1)];\r\n            setTagList(updateTagList);\r\n\r\n        }\r\n        else {\r\n            openErrorNotification();\r\n        }\r\n\r\n        actions.setSubmitting(false);\r\n        setvisible(false)\r\n    };\r\n\r\n\r\n    const handleCancel = (e: any) => {\r\n        setvisible(false);\r\n    };\r\n\r\n\r\n    const getisSubmitButtonDisabled = (values, isValid) => {\r\n        if (!values.name || !values.description || !isValid) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    return (\r\n        <Formik\r\n            onSubmit={(values, actions) => handleSubmit(values, actions)}\r\n            validationSchema={validationSchema}\r\n            validateOnBlur={false}\r\n            enableReinitialize={true}\r\n            initialValues={\r\n                { ...category }\r\n            }\r\n        >\r\n            {({\r\n                handleChange,\r\n                values,\r\n                handleSubmit,\r\n                errors,\r\n                isValid,\r\n                isSubmitting,\r\n                touched,\r\n                handleBlur,\r\n                setFieldTouched,\r\n                handleReset,\r\n            }) => (\r\n                    <>\r\n                        <Modal\r\n                            title=\"Quick Edit\"\r\n                            visible={visible}\r\n                            onOk={(e: any) => handleSubmit(e)}\r\n                            onCancel={handleCancel}\r\n                            okText='Update'\r\n                            okButtonProps={{\r\n                                loading: isSubmitting,\r\n                                htmlType: \"submit\",\r\n                                disabled: getisSubmitButtonDisabled(values, isValid)\r\n                            }}\r\n                        >\r\n                            <Input\r\n                                label='Title'\r\n                                value={values.name}\r\n                                name='name'\r\n                                isError={(touched.name && errors.name) ||\r\n                                    (!isSubmitting && updateTagState.error['error']['name'])}\r\n\r\n                                errorString={(touched.name && errors.name) ||\r\n                                    (!isSubmitting && updateTagState.error['error']['name'])}\r\n                                onChange={(e: any) => {\r\n                                    handleChange(e);\r\n                                    setFieldTouched('name');\r\n                                }}\r\n                            />\r\n                            <TextArea\r\n                                label='Description'\r\n                                value={values.description}\r\n                                name='description'\r\n                                isError={(touched.description && errors.description) ||\r\n                                    (!isSubmitting && updateTagState.error['error']['description'])}\r\n\r\n                                errorString={(touched.description && errors.description) ||\r\n                                    (!isSubmitting && updateTagState.error['error']['description'])}\r\n                                onChange={(e: any) => {\r\n                                    handleChange(e);\r\n                                    setFieldTouched('description');\r\n                                }}\r\n                            />\r\n                        </Modal>\r\n\r\n                    </>\r\n                )}\r\n        </Formik>\r\n    );\r\n};\r\n\r\n\r\nexport default ProductBundleQuickEdit;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useHandleFetch } from '../../hooks';\r\nimport { Select, Skeleton } from 'antd';\r\n\r\n\r\ninterface Props {\r\n    setProductIds?: any;\r\n    productIds?: any;\r\n}\r\n\r\n\r\nconst Tags = ({\r\n    setProductIds,\r\n    productIds\r\n}: Props) => {\r\n    const [options, setoptions] = useState([]);\r\n    const [selectedOpions, setselectedOptions] = useState([]);\r\n    const [tagState, handleTagListFetch] = useHandleFetch({}, 'productList');\r\n\r\n    useEffect(() => {\r\n        const setTags = async () => {\r\n            const tagListRes = await handleTagListFetch({\r\n                urlOptions: {\r\n                    params: {\r\n                        isSubCategory: false\r\n                    }\r\n                }\r\n            });\r\n\r\n            // @ts-ignore\r\n            if (tagListRes && tagListRes.length > 0) {\r\n                // @ts-ignore\r\n                const tagOptions = tagListRes.map((tag) => {\r\n                    return tag.name\r\n                });\r\n                setoptions(tagOptions);\r\n            }\r\n\r\n        };\r\n\r\n        setTags();\r\n    }, []);\r\n\r\n\r\n\r\n    const handleChange = (selectItems) => {\r\n        setselectedOptions(selectItems);\r\n\r\n        console.log('selectedProducts', selectItems);\r\n\r\n        if (tagState.done && tagState.data.length > 0 && selectItems.length > 0) {\r\n            const selectedCategoryIds = selectItems.map((item) => {\r\n                const selectedcategory = tagState.data.find(\r\n                    (cat) => cat.name.toLowerCase() === item.toLowerCase()\r\n                );\r\n                if (selectedcategory) {\r\n                    return selectedcategory;\r\n                }\r\n            });\r\n            console.log('selectedCategoryIds', selectedCategoryIds);\r\n            setProductIds(selectedCategoryIds);\r\n        }\r\n        else {\r\n            setProductIds([])\r\n        }\r\n\r\n\r\n    }\r\n\r\n\r\n    // console.log('selectedOpions', selectedOpions);\r\n\r\n\r\n    return (\r\n        <>\r\n\r\n            <Skeleton loading={tagState.isLoading}>\r\n                {tagState.done && tagState.data.length > 0 && <Select\r\n                    mode=\"multiple\"\r\n                    placeholder=\"search products\"\r\n                    value={selectedOpions}\r\n                    onChange={handleChange}\r\n                    style={{ width: '100%' }}\r\n                >\r\n                    {options.filter(o => !selectedOpions.includes(o)).map(item => (\r\n                        <Select.Option key={item} value={item}>\r\n                            {item}\r\n                        </Select.Option>\r\n                    ))}\r\n                </Select>}\r\n            </Skeleton>\r\n\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Tags\r\n","import React from 'react'\r\n\r\n\r\n// import components\r\nimport AddNewOrderProductItem from \"../order/AddNewOrderProductItem\";\r\nimport Empty from \"../../components/Empty\";\r\n\r\nimport {\r\n    ShopOutlined\r\n} from '@ant-design/icons';\r\n\r\n\r\ninterface Props {\r\n    productList?: any;\r\n    setProductList?: any;\r\n}\r\n\r\nconst AddNewOrderSummary = ({\r\n    setProductList,\r\n    productList\r\n}: Props) => {\r\n    return (\r\n        <div\r\n            style={{\r\n                // @ts-ignore\r\n                flexDirection: 'flex'\r\n            }}\r\n            className='addOrderContainer__container-orderSummary'>\r\n            <div className='addOrderContainer__container-productItemContainer'>\r\n                {productList && productList.length > 0 && productList.map(item => {\r\n                    return <AddNewOrderProductItem\r\n                        setProductList={setProductList}\r\n                        productList={productList}\r\n                        productId={item._id}\r\n                        quantity={item.quantity}\r\n                        item={item}\r\n                        variation={item.variation}\r\n                    />;\r\n                })}\r\n\r\n                {!(productList.length > 0) && (\r\n                    <div style={{\r\n                        marginLeft: '32px'\r\n                    }}>\r\n                        <Empty title='No Product Added' height={150} />\r\n                    </div>\r\n                )}\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddNewOrderSummary\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n\r\nimport { useHandleFetch } from '../../hooks';\r\n\r\n\r\n// import third party ui lib\r\nimport { notification, Modal } from 'antd';\r\n\r\nimport {\r\n    FileOutlined,\r\n    InboxOutlined,\r\n    FileAddOutlined,\r\n    DeleteOutlined,\r\n    CheckCircleOutlined,\r\n    CloseOutlined,\r\n    CheckOutlined,\r\n    InfoCircleOutlined,\r\n    PlusOutlined,\r\n    FileImageFilled\r\n} from '@ant-design/icons';\r\n\r\n\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport MediaLibrary from \"../../components/MediaLibrary\";\r\nimport OrderedProductsSelectProducts from \"./OrderedProductsSelectProducts\";\r\nimport OrderedProductsSelectedProductItems from \"./OrderedProductsSelectedProductItems\";\r\nimport FreeSelectProducts from \"./FreeSelectProducts\";\r\nimport FreeSelectedProductItems from \"./FreeSelectedProductItems\";\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    name: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Coupon Created',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n    notification.error({\r\n        message: message || 'Something Went Wrong',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst initialValues = {\r\n    \"name\": \"\",\r\n    \"code\": \"\",\r\n    \"minimumOrder\": null,\r\n    \"amount\": \"\",\r\n    \"amountType\": \"\",\r\n    \"orderedProducts\": [],\r\n    \"freeDelivery\": true,\r\n    \"freeProducts\": []\r\n}\r\n\r\n\r\n\r\ninterface Props {\r\n    addNewCategoryVisible?: any;\r\n    setAddNewCategoryVisible?: any;\r\n    tagList?: any;\r\n    setTagList?: any;\r\n\r\n}\r\n\r\nconst AddNewBrand = ({ addNewCategoryVisible, setAddNewCategoryVisible, tagList, setTagList }: Props) => {\r\n\r\n    const [addCouponState, handleAddCouponStateFetch] = useHandleFetch({}, 'addCoupon');\r\n    const [myImages, setmyImages] = useState(false);\r\n    const [visibleMedia, setvisibleMedia] = useState(false);\r\n    const [coverImageId, setCoverImageId] = useState('');\r\n    const [productIds, setProductIds] = useState([]);\r\n    const [productList, setProductList] = useState([]);\r\n    const [freeProductIds, setFreeProductIds] = useState([]);\r\n    const [freeProductList, setFreeProductList] = useState([]);\r\n\r\n\r\n\r\n    const handleSubmit = async (values: any, actions: any) => {\r\n\r\n        const orderedProducts = productList.length > 0 ? productList.map(product => {\r\n            return {\r\n                _id: product._id,\r\n                variation: product.variation,\r\n                quantity: product.quantity,\r\n            }\r\n        }) : [];\r\n\r\n\r\n        const freeProducts = freeProductList.length > 0 ? freeProductList.map(product => {\r\n            return {\r\n                _id: product._id,\r\n                variation: product.variation,\r\n                quantity: product.quantity,\r\n            }\r\n        }) : [];\r\n\r\n\r\n        const addTagRes = await handleAddCouponStateFetch({\r\n            urlOptions: {\r\n                placeHolders: {\r\n                    id: values.id,\r\n                }\r\n            },\r\n            body: {\r\n                name: values.name.trim(),\r\n                code: values.code.trim(),\r\n                minimumOrder: values.minimumOrder.trim(),\r\n                amount: values.amount.trim(),\r\n                amountType: values.amountType.trim(),\r\n                freeDelivery: false,\r\n                orderedProducts: orderedProducts,\r\n                freeProducts: freeProducts,\r\n            },\r\n        });\r\n\r\n        // @ts-ignore\r\n        if (addTagRes && addTagRes.status === 'ok') {\r\n            openSuccessNotification();\r\n\r\n            setTagList([...tagList, {\r\n                id: addTagRes['id'] || '',\r\n                key: addTagRes['id'] || '',\r\n                name: addTagRes['name'] || '',\r\n                description: addTagRes['description'] || '',\r\n            }])\r\n            actions.resetForm();\r\n            setAddNewCategoryVisible(false);\r\n        }\r\n        else {\r\n            openErrorNotification();\r\n        }\r\n\r\n\r\n        actions.setSubmitting(false);\r\n\r\n    };\r\n\r\n\r\n    const handleCancel = (e: any) => {\r\n        setAddNewCategoryVisible(false);\r\n    };\r\n\r\n\r\n    const getisSubmitButtonDisabled = (values, isValid) => {\r\n        if (!values.name || !isValid) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        if (!addCouponState['isLoading']) {\r\n            const error = addCouponState['error'];\r\n            if (error['isError'] && Object.keys(error['error']).length > 0) {\r\n\r\n\r\n                const errors =\r\n                    Object.values(error['error']).length > 0\r\n                        ? Object.values(error['error'])\r\n                        : [];\r\n                errors.forEach((err, i) => {\r\n                    if (typeof err === 'string') {\r\n                        openErrorNotification(err)\r\n                    }\r\n                    else if (typeof err === 'object') {\r\n                        if (err && Object.keys(err).length > 0) {\r\n                            const errs = Object.values(err);\r\n                            errs.forEach(err => {\r\n                                openErrorNotification(err)\r\n                            })\r\n\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n        }\r\n    }, [addCouponState])\r\n\r\n\r\n\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        if (productIds.length > 0) {\r\n            if (productIds.length > productList.length) {\r\n                const variation = productIds[productIds.length - 1]['pricing'].length > 0 && productIds[productIds.length - 1]['pricing'][0]['_id'];\r\n                console.log('variation', variation)\r\n\r\n                setProductList([...productList, {\r\n                    ...productIds[productIds.length - 1],\r\n                    _id: productIds[productIds.length - 1]['id'],\r\n                    variation: variation,\r\n                    quantity: 1\r\n                }]);\r\n            }\r\n\r\n\r\n            else if (productIds.length < productList.length) {\r\n                console.log('productIds', productIds);\r\n                console.log('productList', productList);\r\n\r\n                const newProductList = productList.filter(item => {\r\n                    let isTrue = false;\r\n                    productIds.forEach(product => {\r\n                        if (product.id === item._id) {\r\n                            isTrue = true;\r\n                        }\r\n                    });\r\n                    return isTrue;\r\n                })\r\n                setProductList(newProductList);\r\n\r\n            }\r\n\r\n        }\r\n        else {\r\n            setProductList([]);\r\n        }\r\n        // console.log('productIds', productIds)\r\n\r\n\r\n    }, [productIds])\r\n\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        if (freeProductIds.length > 0) {\r\n            if (freeProductIds.length > freeProductList.length) {\r\n                const variation = freeProductIds[freeProductIds.length - 1]['pricing'].length > 0 && freeProductIds[freeProductIds.length - 1]['pricing'][0]['_id'];\r\n                console.log('variation', variation)\r\n\r\n                setFreeProductList([...freeProductList, {\r\n                    ...freeProductIds[freeProductIds.length - 1],\r\n                    _id: freeProductIds[freeProductIds.length - 1]['id'],\r\n                    variation: variation,\r\n                    quantity: 1\r\n                }]);\r\n            }\r\n\r\n\r\n            else if (freeProductIds.length < freeProductList.length) {\r\n                console.log('freeProductIds', freeProductIds);\r\n                console.log('productList', productList);\r\n\r\n                const newProductList = freeProductList.filter(item => {\r\n                    let isTrue = false;\r\n                    freeProductIds.forEach(product => {\r\n                        if (product.id === item._id) {\r\n                            isTrue = true;\r\n                        }\r\n                    });\r\n                    return isTrue;\r\n                })\r\n                setFreeProductList(newProductList);\r\n\r\n            }\r\n\r\n        }\r\n        else {\r\n            setFreeProductList([]);\r\n        }\r\n        // console.log('freeProductIds', freeProductIds)\r\n\r\n\r\n    }, [freeProductIds])\r\n\r\n\r\n\r\n    const handleImagesDelete = (id) => {\r\n        // @ts-ignore\r\n        const newImages = myImages && myImages.filter(image => {\r\n            return image.id !== id;\r\n        })\r\n\r\n        setmyImages(newImages);\r\n    }\r\n\r\n\r\n\r\n\r\n    return (\r\n        <Formik\r\n            onSubmit={(values, actions) => handleSubmit(values, actions)}\r\n            validationSchema={validationSchema}\r\n            validateOnBlur={false}\r\n            enableReinitialize={true}\r\n            initialValues={\r\n                { ...initialValues }\r\n            }\r\n        >\r\n            {({\r\n                handleChange,\r\n                values,\r\n                handleSubmit,\r\n                errors,\r\n                isValid,\r\n                isSubmitting,\r\n                touched,\r\n                handleBlur,\r\n                setFieldTouched,\r\n                handleReset,\r\n            }) => (\r\n                    <>\r\n                        <Modal\r\n                            width={'45vw'}\r\n                            style={{\r\n                                top: '40px'\r\n                            }}\r\n                            title=\"Add New Coupon\"\r\n                            visible={addNewCategoryVisible}\r\n                            onOk={(e: any) => handleSubmit(e)}\r\n                            onCancel={handleCancel}\r\n                            okText='Create'\r\n                            okButtonProps={{\r\n                                loading: isSubmitting,\r\n                                htmlType: \"submit\",\r\n                                disabled: getisSubmitButtonDisabled(values, isValid)\r\n                            }}\r\n                        >\r\n\r\n                            <div className='dubbleRowInputs'>\r\n                                <div className='dubbleRowInputs__item'>\r\n                                    <Input\r\n                                        label='Name'\r\n                                        value={values.name}\r\n                                        name='name'\r\n                                        isError={(touched.name && errors.name) ||\r\n                                            (!isSubmitting && addCouponState.error['error']['name'])}\r\n\r\n                                        errorString={(touched.name && errors.name) ||\r\n                                            (!isSubmitting && addCouponState.error['error']['name'])}\r\n                                        onChange={(e: any) => {\r\n                                            handleChange(e);\r\n                                            setFieldTouched('name');\r\n                                        }}\r\n                                    />\r\n                                </div>\r\n                                <div className='dubbleRowInputs__item'>\r\n                                    <Input\r\n                                        label='Code'\r\n                                        value={values.code}\r\n                                        name='code'\r\n                                        isError={(touched.code && errors.code) ||\r\n                                            (!isSubmitting && addCouponState.error['error']['code'])}\r\n\r\n                                        errorString={(touched.code && errors.code) ||\r\n                                            (!isSubmitting && addCouponState.error['error']['code'])}\r\n                                        onChange={(e: any) => {\r\n                                            handleChange(e);\r\n                                            setFieldTouched('code');\r\n                                        }}\r\n                                    />\r\n                                </div>\r\n\r\n                            </div>\r\n\r\n                            <Input\r\n                                label='Minimum Order'\r\n                                value={values.minimumOrder}\r\n                                name='minimumOrder'\r\n                                isError={(touched.minimumOrder && errors.minimumOrder) ||\r\n                                    (!isSubmitting && addCouponState.error['error']['minimumOrder'])}\r\n\r\n                                errorString={(touched.minimumOrder && errors.minimumOrder) ||\r\n                                    (!isSubmitting && addCouponState.error['error']['minimumOrder'])}\r\n                                onChange={(e: any) => {\r\n                                    handleChange(e);\r\n                                    setFieldTouched('minimumOrder');\r\n                                }}\r\n                            />\r\n\r\n\r\n\r\n                            <div className='dubbleRowInputs'>\r\n                                <div className='dubbleRowInputs__item'>\r\n                                    <Input\r\n                                        label='Amount'\r\n                                        value={values.amount}\r\n                                        name='amount'\r\n                                        isError={(touched.amount && errors.amount) ||\r\n                                            (!isSubmitting && addCouponState.error['error']['amount'])}\r\n\r\n                                        errorString={(touched.amount && errors.amount) ||\r\n                                            (!isSubmitting && addCouponState.error['error']['amount'])}\r\n                                        onChange={(e: any) => {\r\n                                            handleChange(e);\r\n                                            setFieldTouched('amount');\r\n                                        }}\r\n                                    />\r\n                                </div>\r\n                                <div className='dubbleRowInputs__item'>\r\n                                    <Input\r\n                                        label='Amount Type'\r\n                                        value={values.amountType}\r\n                                        name='amountType'\r\n                                        isError={(touched.amountType && errors.amountType) ||\r\n                                            (!isSubmitting && addCouponState.error['error']['amountType'])}\r\n\r\n                                        errorString={(touched.amountType && errors.amountType) ||\r\n                                            (!isSubmitting && addCouponState.error['error']['amountType'])}\r\n                                        onChange={(e: any) => {\r\n                                            handleChange(e);\r\n                                            setFieldTouched('amountType');\r\n                                        }}\r\n                                    />\r\n                                </div>\r\n\r\n\r\n\r\n\r\n                            </div>\r\n\r\n\r\n\r\n\r\n                            <h3 className='inputFieldLabel'>\r\n                                Ordered Products\r\n                                </h3>\r\n\r\n                            <OrderedProductsSelectProducts\r\n                                setProductIds={setProductIds}\r\n                                productIds={productIds}\r\n                            />\r\n\r\n                            <div style={{\r\n                                marginTop: \"15px\"\r\n                            }}></div>\r\n\r\n                            <h3 className='inputFieldLabel'>\r\n                                Selected Ordered Products\r\n                                </h3>\r\n\r\n                            <OrderedProductsSelectedProductItems\r\n                                productList={productList}\r\n                                setProductList={setProductList}\r\n                            />\r\n\r\n\r\n                            <h3 className='inputFieldLabel'>\r\n                                Free Products\r\n                                </h3>\r\n\r\n                            <OrderedProductsSelectProducts\r\n                                setProductIds={setFreeProductIds}\r\n                                productIds={freeProductIds}\r\n                            />\r\n\r\n                            <div style={{\r\n                                marginTop: \"15px\"\r\n                            }}></div>\r\n\r\n                            <h3 className='inputFieldLabel'>\r\n                                Selected Free Products\r\n                                </h3>\r\n\r\n                            <OrderedProductsSelectedProductItems\r\n                                productList={freeProductList}\r\n                                setProductList={setFreeProductList}\r\n                            />\r\n\r\n\r\n\r\n                        </Modal>\r\n\r\n                        <MediaLibrary\r\n                            setvisible={setvisibleMedia}\r\n                            visible={visibleMedia}\r\n                            setmyImages={setmyImages}\r\n                            myImages={myImages}\r\n                            isModalOpenForImages={true}\r\n\r\n                        />\r\n                    </>\r\n                )}\r\n        </Formik>\r\n    );\r\n};\r\n\r\nexport default AddNewBrand;\r\n","import React, { useState, useEffect } from 'react';\r\n\r\n// import third party ui lib\r\nimport { Empty, Popconfirm, Upload, message, Switch, Select, Button, notification, Table, Space, Input as CoolInput, Tooltip, Modal } from 'antd';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { useHistory } from 'react-router';\r\nimport Moment from 'react-moment'\r\n\r\n\r\nimport {\r\n    FileOutlined,\r\n    InboxOutlined,\r\n    RadiusUpleftOutlined,\r\n    RadiusUprightOutlined,\r\n    RadiusBottomleftOutlined,\r\n    RadiusBottomrightOutlined,\r\n    PlusOutlined,\r\n    DeleteOutlined,\r\n    EditOutlined,\r\n    CheckCircleOutlined\r\n} from '@ant-design/icons';\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n\r\n\r\n/// import hooks\r\nimport { useFetch, useHandleFetch } from \"../../hooks\";\r\n\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport { DataTableSkeleton } from \"../../components/Placeholders\";\r\nimport CouponQuickEdit from \"./CouponQuickEdit\"\r\nimport AddNewCoupon from \"./AddNewCoupon\"\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Coupon Created',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n    notification.error({\r\n        message: message || 'Something Went Wrong',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n    });\r\n};\r\n\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    name: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\n\r\nconst initialValues = {\r\n    name: '',\r\n    description: ''\r\n}\r\n\r\n\r\nconst { Column, ColumnGroup } = Table;\r\nconst { Search } = CoolInput;\r\n\r\n\r\n\r\nconst MyTable = ({ data, setTagList }) => {\r\n    const [visible, setvisible] = useState(false);\r\n    const [activeCategoryForEdit, setactiveCategoryForEdit] = useState(false);\r\n    const [deleteTagState, handleDeleteTagFetch] = useHandleFetch({}, 'deleteCoupon');\r\n\r\n    const history = useHistory();\r\n\r\n\r\n    const handleDeleteTag = async (id) => {\r\n        const deleteTagRes = await handleDeleteTagFetch({\r\n            urlOptions: {\r\n                placeHolders: {\r\n                    id,\r\n                }\r\n            }\r\n        });\r\n\r\n\r\n\r\n        // @ts-ignore\r\n        if (deleteTagRes && deleteTagRes.status === 'ok') {\r\n            openSuccessNotification('Deleted Coupon');\r\n            const newtagList = data.filter(item => item.id !== id);\r\n            setTagList(newtagList);\r\n        }\r\n\r\n\r\n    }\r\n\r\n\r\n    const handleOk = (e: any) => {\r\n        setvisible(false);\r\n\r\n    };\r\n\r\n    const handleCancel = (e: any) => {\r\n        setvisible(false);\r\n    };\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <Table\r\n                // expandable={{\r\n                //     expandedRowRender: record => <p style={{ margin: 0 }}>{record.name}</p>,\r\n                //     rowExpandable: record => record.name !== 'Not Expandable',\r\n                //   }}\r\n                // bordered={true}\r\n                size='small'\r\n                // pagination={false}\r\n                dataSource={data}\r\n            >\r\n\r\n                <Column\r\n                    title=\"Name\"\r\n                    dataIndex=\"name\"\r\n                    key=\"id\"\r\n                    className='classnameofthecolumn'\r\n                    render={(text, record: any) => (\r\n                        <>\r\n\r\n                            <h4\r\n                                onClick={() => {\r\n                                    history.push(`/admin/coupon/${record.id}`)\r\n                                    // setBrandDetailVisible(true);\r\n                                    setactiveCategoryForEdit(record)\r\n                                }}\r\n                                style={{\r\n                                    fontWeight: 400,\r\n                                    color: '#555',\r\n                                    cursor: 'pointer'\r\n                                }}>\r\n                                {text}\r\n                            </h4>\r\n\r\n\r\n                        </>\r\n                    )}\r\n                />\r\n\r\n                <Column\r\n                    title=\"Order Products\"\r\n                    dataIndex=\"orderedProductsCount\"\r\n                    key=\"id\"\r\n                    className='classnameofthecolumn'\r\n\r\n                />\r\n\r\n\r\n                <Column\r\n                    title=\"Free Products\"\r\n                    dataIndex=\"freeProductsCount\"\r\n                    key=\"id\"\r\n                    className='classnameofthecolumn'\r\n                />\r\n\r\n                <Column\r\n                    title=\"Start Date\"\r\n                    dataIndex=\"startDate\"\r\n                    key=\"id\"\r\n                    className='classnameofthecolumn'\r\n\r\n                    render={(text, record: any) => (\r\n                        <>\r\n\r\n                            <h4\r\n                                style={{\r\n                                    fontWeight: 400,\r\n                                    color: '#555',\r\n                                    cursor: 'pointer'\r\n                                }}>\r\n                                    \r\n                               <Moment>\r\n                                {text}\r\n                               </Moment>\r\n                            </h4>\r\n\r\n\r\n                        </>\r\n                    )}\r\n\r\n\r\n                />\r\n\r\n                <Column\r\n                    title=\"End Date\"\r\n                    dataIndex=\"endDate\"\r\n                    key=\"id\"\r\n                    className='classnameofthecolumn'\r\n\r\n                    render={(text, record: any) => (\r\n                        <>\r\n\r\n                            <h4\r\n                                style={{\r\n                                    fontWeight: 400,\r\n                                    color: '#555',\r\n                                    cursor: 'pointer'\r\n                                }}>\r\n                                    \r\n                               <Moment>\r\n                                {text}\r\n                               </Moment>\r\n                            </h4>\r\n                        </>\r\n                    )}\r\n\r\n                />\r\n\r\n                <Column\r\n\r\n                    className='classnameofthecolumn'\r\n                    title=\"\"\r\n                    key=\"action\"\r\n                    align='right'\r\n                    render={(text, record: any) => (\r\n                        <Space size=\"middle\">\r\n                            <a href='##'>\r\n                                <Tooltip placement=\"top\" title='Quick Edit Bundle'>\r\n                                    <span className='iconSize' onClick={() => {\r\n                                        setvisible(true)\r\n                                        setactiveCategoryForEdit(record);\r\n                                    }}>\r\n                                        <EditOutlined />\r\n                                    </span>\r\n                                </Tooltip>\r\n                            </a>\r\n\r\n\r\n\r\n                            <Popconfirm\r\n                                onConfirm={() => handleDeleteTag(record.id)}\r\n                                title=\"Are you sure？\" okText=\"Yes\" cancelText=\"No\">\r\n                                <span\r\n                                    className='iconSize iconSize-danger'\r\n                                >\r\n                                    <DeleteOutlined />\r\n                                </span>\r\n                            </Popconfirm>\r\n                        </Space>\r\n                    )}\r\n                />\r\n            </Table>\r\n\r\n\r\n\r\n\r\n\r\n\r\n            {activeCategoryForEdit && <CouponQuickEdit\r\n                tagList={data}\r\n                setTagList={setTagList}\r\n                setvisible={setvisible}\r\n                visible={visible}\r\n                category={activeCategoryForEdit} />}\r\n        </>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\ninterface Props { }\r\n\r\nconst Couponlist = ({ }: Props) => {\r\n\r\n\r\n    const [tagList, setTagList] = useState([]);\r\n\r\n    const [tagState, handleTagListFetch] = useHandleFetch({}, 'couponList');\r\n\r\n\r\n    useEffect(() => {\r\n        const setTags = async () => {\r\n            const tags = await handleTagListFetch({});\r\n            // @ts-ignore\r\n            setTagList(tags);\r\n        }\r\n        setTags();\r\n    }, [])\r\n\r\n\r\n    console.log('tagState', tagState)\r\n\r\n    const [addNewCategoryVisible, setAddNewCategoryVisible] = useState(false);\r\n\r\n    const getisSubmitButtonDisabled = (values, isValid) => {\r\n        if (!values.name || !isValid) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n\r\n    const handleOkAddNewCategory = (e: any) => {\r\n        setAddNewCategoryVisible(false);\r\n\r\n    };\r\n\r\n    const handleCancelAddNewCategory = (e: any) => {\r\n        setAddNewCategoryVisible(false);\r\n    };\r\n\r\n    const handleSearch = (value) => {\r\n        if (tagState.data.length > 0) {\r\n            const newTagList = tagState.data.filter(item => item.name.toLowerCase().includes(value.toLowerCase()));\r\n            setTagList(newTagList);\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <>\r\n\r\n            <div className='categoryListContainer'>\r\n                <div className='categoryListContainer__header'>\r\n                    <div className='categoryListContainer__header-searchBar-tag'>\r\n                        <h2 className='categoryListContainer__header-title'>\r\n                            Coupons\r\n                       </h2>\r\n\r\n                        <Search\r\n                            enterButton={false}\r\n                            className='searchbarClassName'\r\n                            placeholder=\"search coupon..\"\r\n                            onSearch={value => handleSearch(value)}\r\n                        />\r\n                    </div>\r\n                    <Button\r\n                        // type=\"primary\"\r\n                        className='btnPrimaryClassNameoutline'\r\n                        icon={<PlusOutlined />}\r\n                        onClick={() => setAddNewCategoryVisible(true)}\r\n                    >\r\n                        Add New\r\n\t\t\t\t\t</Button>\r\n                </div>\r\n                <div className='categoryListContainer__categoryList'>\r\n                    {tagState.done && tagList.length > 0 && <MyTable\r\n                        setTagList={setTagList}\r\n                        data={tagList} />}\r\n                    {tagState.isLoading && <DataTableSkeleton />}\r\n\r\n\r\n                    {tagState.done && !(tagList.length > 0) && (\r\n                        <div style={{\r\n                            marginTop: '200px'\r\n                        }}>\r\n                            <Empty description='No Coupon found' image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            </div>\r\n\r\n            <AddNewCoupon\r\n                tagList={tagList}\r\n                setTagList={setTagList}\r\n                addNewCategoryVisible={addNewCategoryVisible}\r\n                setAddNewCategoryVisible={setAddNewCategoryVisible}\r\n            />\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Couponlist;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n\r\nimport { useHandleFetch } from '../../hooks';\r\n// import third party ui lib\r\nimport { Upload, message, Switch, Select, Button, notification, Modal, Empty, Form } from 'antd';\r\n\r\nimport {\r\n\tFileOutlined,\r\n\tInboxOutlined,\r\n\tRadiusUpleftOutlined,\r\n\tRadiusUprightOutlined,\r\n\tRadiusBottomleftOutlined,\r\n\tRadiusBottomrightOutlined,\r\n\tDeleteOutlined,\r\n\tFileAddOutlined,\r\n\tCheckCircleOutlined\r\n} from '@ant-design/icons';\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\n\r\n\r\nconst { Option } = Select;\r\n\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n\tfirstName: Yup.string()\r\n\t\t.label('First name')\r\n\t\t.required()\r\n\t\t.min(2, 'First name must have at least 2 characters '),\r\n\tlastName: Yup.string()\r\n\t\t.label('Lastname')\r\n\t\t.required()\r\n\t\t.min(2, 'Last name must have at least 2 characters '),\r\n\tphone: Yup.string()\r\n\t\t.required('Please tell us your mobile number.')\r\n\t\t.max(13, 'Please enter a valid mobile number.'),\r\n\tpassword: Yup.string()\r\n\t\t.label('Password')\r\n\t\t.required()\r\n\t\t.min(6, 'Password must have at least 6 characters'),\r\n\taddress1: Yup.string()\r\n\t\t.label('Address line 1')\r\n\t\t.required()\r\n\t\t.min(3, 'Address line 1 must have at least 3 characters '),\r\n\r\n\temail: Yup.string().label('Email').email('Please enter a valid email'),\r\n});\r\n\r\n\r\n\r\n\r\nconst initialValues = {\r\n\tphone: '',\r\n\temail: '',\r\n\tfirstName: '',\r\n\tlastName: '',\r\n\taddress1: '',\r\n\taddress2: '',\r\n\tzipCode: '',\r\n\tpassword: ''\r\n};\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t\tmessage: message || 'Tag Created',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n\tnotification.error({\r\n\t\tmessage: message || 'Something Went Wrong',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n};\r\n\r\n\r\ninterface Props {\r\n\taddNewCategoryVisible: any;\r\n\tsetAddNewCategoryVisible: any;\r\n\tcustomerList?: any;\r\n\tsetCustomerList?: any;\r\n}\r\n\r\nconst AddNewCategory = ({ addNewCategoryVisible, setAddNewCategoryVisible, customerList, setCustomerList }: Props) => {\r\n\r\n\tconst [addCustomerState, handleAddCustomerFetch] = useHandleFetch({}, 'addCustomer');\r\n\tconst [selectedCountryValue, setselectedCountryValue] = useState('');\r\n\tconst [selectedCityValue, setselectedCityValue] = useState('');\r\n\r\n\tconst [countryOptions, setcountryOptions] = useState([]);\r\n\tconst [cityOptions, setcityOptions] = useState([]);\r\n\r\n\tconst [countryListState, handleCountryListFetch] = useHandleFetch(\r\n\t\t[],\r\n\t\t'countryList'\r\n\t);\r\n\r\n\tconst [cityListState, handleCityListFetch] = useHandleFetch([], 'cityList');\r\n\r\n\tconst [countryList, setCountryList] = useState([]);\r\n\tconst [cityList, setCityList] = useState([]);\r\n\r\n\r\n\r\n\r\n\tconst handleSubmit = async (values: any, actions: any) => {\r\n\r\n\t\tconst addCustomerRes = await handleAddCustomerFetch({\r\n\r\n\t\t\tbody: {\r\n\t\t\t\tphone: values.phone,\r\n\t\t\t\temail: values.email,\r\n\t\t\t\tpassword: values.password,\r\n\t\t\t\taddress1: values.address1,\r\n\t\t\t\taddress2: values.address2,\r\n\t\t\t\tfirstName: values.firstName,\r\n\t\t\t\tlastName: values.lastName,\r\n\t\t\t\tcountry: selectedCountryValue,\r\n\t\t\t\tcity: selectedCityValue,\r\n\t\t\t},\r\n\t\t});\r\n\r\n\r\n\t\t// @ts-ignore\r\n\t\tif (addCustomerRes && addCustomerRes.status === 'ok') {\r\n\t\t\topenSuccessNotification();\r\n\r\n\t\t\tsetCustomerList([...customerList, {\r\n\t\t\t\tid: addCustomerRes['id'] || '',\r\n\t\t\t\tkey: addCustomerRes['id'] || '',\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\t...addCustomerRes\r\n\t\t\t}])\r\n\t\t\tsetAddNewCategoryVisible(false);\r\n\t\t\tactions.resetForm();\r\n\t\t}\r\n\t\telse {\r\n\t\t\topenErrorNotification();\r\n\t\t}\r\n\r\n\r\n\r\n\t\tactions.setSubmitting(false);\r\n\t};\r\n\r\n\r\n\r\n\tconst onChangeCity = (value) => {\r\n\t\tsetselectedCityValue(value);\r\n\t}\r\n\r\n\tconst onChangeCountry = (value) => {\r\n\t\tsetselectedCountryValue(value);\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tconst setCountries = async () => {\r\n\t\t\tconst CountryListRes = await handleCountryListFetch({});\r\n\r\n\t\t\t// @ts-ignore\r\n\t\t\tif (CountryListRes && CountryListRes.length > 0) {\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\tconst countryOptions = CountryListRes.map((country) => {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tvalue: country.name,\r\n\t\t\t\t\t\tname: country.name\r\n\t\t\t\t\t};\r\n\t\t\t\t});\r\n\t\t\t\tsetcountryOptions(countryOptions);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tsetCountries();\r\n\t}, []);\r\n\r\n\r\n\tuseEffect(() => {\r\n\t\tconst setCities = async () => {\r\n\t\t\tconst cityListRes = await handleCityListFetch({\r\n\t\t\t\turlOptions: {\r\n\t\t\t\t\tplaceHolders: {\r\n\t\t\t\t\t\tcountry: selectedCountryValue,\r\n\t\t\t\t\t},\r\n\t\t\t\t},\r\n\t\t\t});\r\n\r\n\t\t\t// @ts-ignore\r\n\t\t\tif (cityListRes && cityListRes.length > 0) {\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\tconst cityOptions = cityListRes.map((city) => {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tvalue: city.name,\r\n\t\t\t\t\t\tname: city.name\r\n\t\t\t\t\t};\r\n\t\t\t\t});\r\n\t\t\t\tsetcityOptions(cityOptions);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tsetCities();\r\n\t}, [selectedCountryValue]);\r\n\r\n\r\n\r\n\r\n\tconst handleCancel = (e: any) => {\r\n\t\tsetAddNewCategoryVisible(false);\r\n\t};\r\n\r\n\r\n\tconst getisSubmitButtonDisabled = (values, isValid) => {\r\n\t\tif (!isValid ||\r\n\t\t\t!values.firstName ||\r\n\t\t\t!values.lastName ||\r\n\t\t\t!values.password ||\r\n\t\t\t!values.phone ||\r\n\t\t\t!values.address1) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\r\n\r\n\tconsole.log('cityListState', cityListState)\r\n\r\n\r\n\r\n\r\n\treturn (\r\n\t\t<Formik\r\n\t\t\tonSubmit={(values, actions) => handleSubmit(values, actions)}\r\n\t\t\tvalidationSchema={validationSchema}\r\n\t\t\tvalidateOnBlur={false}\r\n\t\t\tenableReinitialize={true}\r\n\t\t\tinitialValues={\r\n\t\t\t\t{ ...initialValues }\r\n\t\t\t}\r\n\t\t>\r\n\t\t\t{({\r\n\t\t\t\thandleChange,\r\n\t\t\t\tvalues,\r\n\t\t\t\thandleSubmit,\r\n\t\t\t\terrors,\r\n\t\t\t\tisValid,\r\n\t\t\t\tisSubmitting,\r\n\t\t\t\ttouched,\r\n\t\t\t\thandleBlur,\r\n\t\t\t\tsetFieldTouched,\r\n\t\t\t\thandleReset,\r\n\t\t\t}) => (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<Modal\r\n\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\ttop: '40px'\r\n\t\t\t\t\t\t\t}}\r\n\r\n\r\n\r\n\t\t\t\t\t\t\tbodyStyle={{\r\n\t\t\t\t\t\t\t\tmargin: '0',\r\n\t\t\t\t\t\t\t\tpadding: '10px'\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\ttitle=\"Add New Customer\"\r\n\t\t\t\t\t\t\tvisible={addNewCategoryVisible}\r\n\t\t\t\t\t\t\tonOk={(e: any) => handleSubmit(e)}\r\n\t\t\t\t\t\t\tonCancel={handleCancel}\r\n\t\t\t\t\t\t\tokText='Create'\r\n\t\t\t\t\t\t\tokButtonProps={{\r\n\t\t\t\t\t\t\t\tloading: isSubmitting,\r\n\t\t\t\t\t\t\t\thtmlType: \"submit\",\r\n\t\t\t\t\t\t\t\tdisabled: getisSubmitButtonDisabled(values, isValid)\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\r\n\r\n\t\t\t\t\t\t\t<div className='dubbleRowInputs'>\r\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\tlabel='First Name'\r\n\t\t\t\t\t\t\t\t\t\tvalue={values.firstName}\r\n\t\t\t\t\t\t\t\t\t\tname='firstName'\r\n\t\t\t\t\t\t\t\t\t\tisError={(touched.firstName && errors.firstName) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['firstName'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\terrorString={(touched.firstName && errors.firstName) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['firstName'])}\r\n\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('firstName');\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\tlabel='Last Name'\r\n\t\t\t\t\t\t\t\t\t\tvalue={values.lastName}\r\n\t\t\t\t\t\t\t\t\t\tname='lastName'\r\n\t\t\t\t\t\t\t\t\t\tisError={(touched.lastName && errors.lastName) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['lastName'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\terrorString={(touched.lastName && errors.lastName) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['lastName'])}\r\n\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('lastName');\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t<div className='dubbleRowInputs'>\r\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\tlabel='Phone'\r\n\t\t\t\t\t\t\t\t\t\tvalue={values.phone}\r\n\t\t\t\t\t\t\t\t\t\tname='phone'\r\n\t\t\t\t\t\t\t\t\t\tisError={(touched.phone && errors.phone) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['phone'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\terrorString={(touched.phone && errors.phone) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['phone'])}\r\n\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('phone');\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\tlabel='Email'\r\n\t\t\t\t\t\t\t\t\t\tvalue={values.email}\r\n\t\t\t\t\t\t\t\t\t\tname='email'\r\n\t\t\t\t\t\t\t\t\t\tisError={(touched.email && errors.email) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['email'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\terrorString={(touched.email && errors.email) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['email'])}\r\n\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('email');\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\tmarginRight: '10px'\r\n\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\tlabel='Password'\r\n\t\t\t\t\t\t\t\t\tvalue={values.password}\r\n\t\t\t\t\t\t\t\t\tname='password'\r\n\t\t\t\t\t\t\t\t\tisError={(touched.password && errors.password) ||\r\n\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['password'])}\r\n\r\n\t\t\t\t\t\t\t\t\terrorString={(touched.password && errors.password) ||\r\n\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['password'])}\r\n\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\tsetFieldTouched('password');\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t<div className='dubbleRowInputs'>\r\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\t\t\t\tCountry\r\n\t\t\t\t\t\t\t\t\t</h3>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t<Form.Item\r\n\t\t\t\t\t\t\t\t\t\tvalidateStatus={(addCustomerState.error['error']['country']) ? \"error\" : \"\"}\r\n\t\t\t\t\t\t\t\t\t\thelp={addCustomerState.error['error']['country']}\r\n\t\t\t\t\t\t\t\t\t// noStyle={true}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t<Select\r\n\t\t\t\t\t\t\t\t\t\t\tnotFoundContent={<Empty description='No Country Found' image={Empty.PRESENTED_IMAGE_SIMPLE} />}\r\n\t\t\t\t\t\t\t\t\t\t\tshowSearch\r\n\t\t\t\t\t\t\t\t\t\t\tstyle={{ width: '100%' }}\r\n\t\t\t\t\t\t\t\t\t\t\tplaceholder='Select a Country'\r\n\t\t\t\t\t\t\t\t\t\t\toptionFilterProp='children'\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={onChangeCountry}\r\n\t\t\t\t\t\t\t\t\t\t\tfilterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t{countryListState.done &&\r\n\t\t\t\t\t\t\t\t\t\t\t\tcountryListState.data.length > 0 &&\r\n\t\t\t\t\t\t\t\t\t\t\t\tcountryOptions.map((option) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn <Option value={option.value}>{option.name}</Option>;\r\n\t\t\t\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t\t\t</Select>\r\n\r\n\t\t\t\t\t\t\t\t\t</Form.Item>\r\n\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\t\t\t\tCity\r\n                                    </h3>\r\n\t\t\t\t\t\t\t\t\t<Form.Item\r\n\t\t\t\t\t\t\t\t\t\t// noStyle={true}\r\n\t\t\t\t\t\t\t\t\t\tvalidateStatus={(addCustomerState.error['error']['city']) ? \"error\" : \"\"}\r\n\t\t\t\t\t\t\t\t\t\thelp={addCustomerState.error['error']['city']}\r\n\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t<Select\r\n\t\t\t\t\t\t\t\t\t\t\tclassName='selectClassName'\r\n\t\t\t\t\t\t\t\t\t\t\tnotFoundContent={<Empty description='First Select a Country' image={Empty.PRESENTED_IMAGE_SIMPLE} />}\r\n\t\t\t\t\t\t\t\t\t\t\tshowSearch\r\n\t\t\t\t\t\t\t\t\t\t\tstyle={{ width: '100%' }}\r\n\t\t\t\t\t\t\t\t\t\t\tplaceholder='Select a city'\r\n\t\t\t\t\t\t\t\t\t\t\toptionFilterProp='children'\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={onChangeCity}\r\n\t\t\t\t\t\t\t\t\t\t\tfilterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t{cityListState.done &&\r\n\t\t\t\t\t\t\t\t\t\t\t\tcityListState.data.length > 0 &&\r\n\t\t\t\t\t\t\t\t\t\t\t\tcityOptions.map((option) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn <Option value={option.value}>{option.name}</Option>;\r\n\t\t\t\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t\t\t</Select>\r\n\t\t\t\t\t\t\t\t\t</Form.Item>\r\n\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\tmarginTop: '12px'\r\n\t\t\t\t\t\t\t}}></div>\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t<div className='dubbleRowInputs'>\r\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\tlabel='Address'\r\n\t\t\t\t\t\t\t\t\t\tvalue={values.address1}\r\n\t\t\t\t\t\t\t\t\t\tname='address1'\r\n\t\t\t\t\t\t\t\t\t\tisError={(touched.address1 && errors.address1) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['address1'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\terrorString={(touched.address1 && errors.address1) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['address1'])}\r\n\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('address1');\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\tlabel='More specific address'\r\n\t\t\t\t\t\t\t\t\t\tvalue={values.address2}\r\n\t\t\t\t\t\t\t\t\t\tname='address2'\r\n\t\t\t\t\t\t\t\t\t\tisError={(touched.address2 && errors.address2) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['address2'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\terrorString={(touched.address2 && errors.address2) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['address2'])}\r\n\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('address2');\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\t\t\t\t\t\t</Modal>\r\n\r\n\t\t\t\t\t</>\r\n\t\t\t\t)}\r\n\t\t</Formik>\r\n\r\n\r\n\r\n\r\n\t);\r\n};\r\n\r\nexport default AddNewCategory;\r\n","import React,{useState, useEffect} from 'react';\r\nimport { Modal, Select,notification  } from 'antd';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\nimport { PlusOutlined, EditOutlined, DeleteOutlined,EditFilled, CheckCircleOutlined } from '@ant-design/icons';\r\n\r\n\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport {useHandleFetch} from '../../hooks';\r\n\r\n\r\nconst { Option } = Select;\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    firstName: Yup.string()\r\n      .label('Firstname')\r\n      .required()\r\n      .min(2, 'First name must have at least 2 characters '),\r\n    lastName: Yup.string()\r\n      .label('Lastname')\r\n      .required()\r\n      .min(2, 'Lastname must have at least 2 characters '),\r\n    phone: Yup.string()\r\n      .required('Please tell us your mobile number.')\r\n      .max(13, 'Please enter a valid mobile number.'),\r\n    password: Yup.string()\r\n      .label('Password')\r\n      .required()\r\n      .min(6, 'Password must have at least 6 characters'),\r\n    address1: Yup.string()\r\n      .label('Address line 1')\r\n      .required()\r\n      .min(3, 'Address line 1 must have at least 3 characters '),\r\n  \r\n    email: Yup.string().label('Email').email('Please enter a valid email'),\r\n  });\r\n\r\n\r\n\r\n  \r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t  message: message || 'Tag Created',\r\n\t  description: '',\r\n\t  icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n  };\r\n\r\n\r\n  const openErrorNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t  message: message || 'Something Went Wrong',\r\n\t  description: '',\r\n\t  icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n  };\r\n\r\n\r\n\r\n\r\n\r\n\r\ninterface Props {\r\n\tcustomer: any;\r\n\tsetvisible: any; \r\n\tvisible: any;\r\n\tcustomerList?: any; \r\n\tsetCustomerList?:any\r\n\r\n}\r\n\r\nconst QuickEdit = ({ customer, setvisible, visible, customerList, setCustomerList }: Props) => {\r\n\tconst [updateCustomerState, handleUpdateCustomerFetch] = useHandleFetch({}, 'updateCustomer');\r\n\r\n\r\n\tconst [selectedCountryValue,setselectedCountryValue] = useState(''); \r\n    const [selectedCityValue,setselectedCityValue] = useState(''); \r\n\r\n    const [countryOptions,setcountryOptions] = useState([]); \r\n    const [cityOptions,setcityOptions] = useState([]); \r\n\r\n    const [countryListState, handleCountryListFetch] = useHandleFetch(\r\n        [],\r\n        'countryList'\r\n      );\r\n    \r\n      const [cityListState, handleCityListFetch] = useHandleFetch([], 'cityList');\r\n    \r\n      const [countryList, setCountryList] = useState([]);\r\n      const [cityList, setCityList] = useState([]);\r\n\r\n\r\n\r\n\r\n\tconst handleSubmit = async (values : any, actions : any) => {\r\n\t  const updateCustomerRes = await handleUpdateCustomerFetch({\r\n\t\turlOptions: {\r\n\t\t\tplaceHolders: {\r\n\t\t\t  id: values.id,\r\n\t\t\t}\r\n\t\t  },\r\n\t\tbody: {\r\n\t\t\tphone: values.phone,\r\n            email: values.email,\r\n            password: values.password,\r\n            address1: values.address1,\r\n            address2: values.address2,\r\n            firstName: values.firstName,\r\n            lastName: values.lastName,\r\n            country: selectedCountryValue,\r\n            city: selectedCityValue,\r\n\t\t},\r\n\t  });\r\n\t\r\n\r\n\t   \t  // @ts-ignore\r\n\t\t\t if(updateCustomerRes && updateCustomerRes.status === 'ok'){\r\n\t\t\t\topenSuccessNotification(); \r\n\t\t\r\n\t\t\t\tconst positionInTag = () => {\r\n\t\t\t\t\treturn customerList.map(item => item.id).indexOf(customer.id);\r\n\t\t\t\t  }\r\n\t\t\r\n\t\t\t\t  const index = positionInTag();\r\n\t\t\r\n\t\t\t\t  // @ts-ignore\r\n\t\t\t\t  const updatedItem = Object.assign({}, tagList[index], { ...updateCustomerRes });\r\n\t\t\t\t  const updateTagList = [...customerList.slice(0, index), updatedItem, ...customerList.slice(index + 1)];\r\n\t\t\t\t  setCustomerList(updateTagList); \r\n\t\t\t\t\r\n\t\t\t  }\r\n\t\t\t  else {\r\n\t\t\t\topenErrorNotification();\r\n\t\t\t  }\r\n\t\t\t\r\n\t\t\t  actions.setSubmitting(false);\r\n\t\t\t  setvisible(false)\r\n\t};\r\n\t\r\n\r\n\t\r\n    const onChangeCity = (value) => {\r\n        setselectedCityValue(value); \r\n    }\r\n\r\n    const onChangeCountry = (value) => {\r\n        setselectedCountryValue(value); \r\n    }\r\n    \r\n\tuseEffect(() => {\r\n\t\tconst setCountries = async () => {\r\n\t\t\tconst CountryListRes = await handleCountryListFetch({});\r\n\r\n\t\t\t// @ts-ignore\r\n\t\t\tif (CountryListRes && CountryListRes.length > 0) {\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\tconst countryOptions = CountryListRes.map((country) => {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tvalue: country.name,\r\n\t\t\t\t\t\tname: country.name\r\n\t\t\t\t\t};\r\n\t\t\t\t});\r\n\t\t\t\tsetcountryOptions(countryOptions);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tsetCountries();\r\n    }, []);\r\n    \r\n\r\n    useEffect(() => {\r\n\t\tconst setCities = async () => {\r\n\t\t\tconst cityListRes = await handleCityListFetch({\r\n                urlOptions: {\r\n                    placeHolders: {\r\n                      country: selectedCountryValue,\r\n                    },\r\n                  },\r\n            });\r\n\r\n\t\t\t// @ts-ignore\r\n\t\t\tif (cityListRes && cityListRes.length > 0) {\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\tconst cityOptions = cityListRes.map((city) => {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tvalue: city.name,\r\n\t\t\t\t\t\tname: city.name\r\n\t\t\t\t\t};\r\n\t\t\t\t});\r\n\t\t\t\tsetcityOptions(cityOptions);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tsetCities();\r\n    }, [selectedCountryValue]);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\tconst handleCancel = (e: any) => {\r\n        setvisible(false);\r\n      };\r\n\r\n\r\n\r\n\t  const getisSubmitButtonDisabled = (values,isValid) => {\r\n\t\tif(!isValid ||\r\n            !values.firstName ||\r\n            !values.lastName ||\r\n            !values.password ||\r\n            !values.phone ||\r\n            !values.address1){\r\n\t\t\treturn true; \r\n\t\t}\r\n\t\treturn false; \r\n\t  }\r\n\r\n\treturn (\r\n\t\t<Formik\r\n\t\tonSubmit={(values, actions) => handleSubmit(values, actions)}\r\n\t\tvalidationSchema={validationSchema}\r\n\t\tvalidateOnBlur={false}\r\n\t\tenableReinitialize={true}\r\n\t\tinitialValues={\r\n\t\t  {...customer}\r\n\t\t}\r\n\t  >\r\n\t\t{({\r\n\t\t  handleChange,\r\n\t\t  values,\r\n\t\t  handleSubmit,\r\n\t\t  errors,\r\n\t\t  isValid,\r\n\t\t  isSubmitting,\r\n\t\t  touched,\r\n\t\t  handleBlur,\r\n\t\t  setFieldTouched,\r\n\t\t  handleReset,\r\n\t\t}) => (\r\n\t\t\t<>\r\n\t\t\t<Modal\r\n\t\t\ttitle=\"Quick Edit\"\r\n\t\t\tvisible={visible}\r\n\t\t\tonOk={(e : any) => handleSubmit(e)}\r\n\t\t\tonCancel={handleCancel}\r\n\t\t\tokText='Update'\r\n\t\t\tokButtonProps={{\r\n\t\t\tloading: isSubmitting,\r\n\t\t\thtmlType: \"submit\",\r\n\t\t\tdisabled: getisSubmitButtonDisabled(values, isValid)\r\n\t\t\t}}\r\n\t\t\tbodyStyle={{\r\n                margin: '0',\r\n                padding: '10px'\r\n            }}\r\n  >\r\n      <div className='dubbleRowInputs'>\r\n         <div className='dubbleRowInputs__item'>\r\n         <Input \r\n\t\t\t   label='First Name'\r\n\t\t\t   value={values.firstName}\r\n\t\t\t   name='firstName'\r\n\t\t\t   isError={(touched.firstName && errors.firstName) ||\r\n\t\t\t\t  (!isSubmitting && updateCustomerState.error['error']['firstName'])}\r\n\t\t\t  \r\n\t\t\t\t  errorString={(touched.firstName && errors.firstName) ||\r\n\t\t\t\t\t  (!isSubmitting && updateCustomerState.error['error']['firstName'])}\r\n\t\t\t   onChange={(e : any) => {\r\n\t\t\t\t  handleChange(e);\r\n\t\t\t\t  setFieldTouched('firstName');\r\n\t\t\t\t}}\r\n\t\t\t   />\r\n         </div>\r\n         <div className='dubbleRowInputs__item'>\r\n         <Input \r\n\t\t\t   label='Last Name'\r\n\t\t\t   value={values.lastName}\r\n\t\t\t   name='lastName'\r\n\t\t\t   isError={(touched.lastName && errors.lastName) ||\r\n\t\t\t\t  (!isSubmitting && updateCustomerState.error['error']['lastName'])}\r\n\t\t\t  \r\n\t\t\t\t  errorString={(touched.lastName && errors.lastName) ||\r\n\t\t\t\t\t  (!isSubmitting && updateCustomerState.error['error']['lastName'])}\r\n\t\t\t   onChange={(e : any) => {\r\n\t\t\t\t  handleChange(e);\r\n\t\t\t\t  setFieldTouched('lastName');\r\n\t\t\t\t}}\r\n\t\t\t   />\r\n         </div>\r\n\r\n\r\n\r\n\r\n            </div>\r\n\r\n\t\t\t \r\n\r\n            <div className='dubbleRowInputs'>\r\n         <div className='dubbleRowInputs__item'>\r\n         <Input \r\n\t\t\t   label='Phone'\r\n\t\t\t   value={values.phone}\r\n\t\t\t   name='phone'\r\n\t\t\t   isError={(touched.phone && errors.phone) ||\r\n\t\t\t\t  (!isSubmitting && updateCustomerState.error['error']['phone'])}\r\n\t\t\t  \r\n\t\t\t\t  errorString={(touched.phone && errors.phone) ||\r\n\t\t\t\t\t  (!isSubmitting && updateCustomerState.error['error']['phone'])}\r\n\t\t\t   onChange={(e : any) => {\r\n\t\t\t\t  handleChange(e);\r\n\t\t\t\t  setFieldTouched('phone');\r\n\t\t\t\t}}\r\n\t\t\t   />\r\n         </div>\r\n         <div className='dubbleRowInputs__item'>\r\n         <Input \r\n\t\t\t   label='Email'\r\n\t\t\t   value={values.email}\r\n\t\t\t   name='email'\r\n\t\t\t   isError={(touched.email && errors.email) ||\r\n\t\t\t\t  (!isSubmitting && updateCustomerState.error['error']['email'])}\r\n\t\t\t  \r\n\t\t\t\t  errorString={(touched.email && errors.email) ||\r\n\t\t\t\t\t  (!isSubmitting && updateCustomerState.error['error']['email'])}\r\n\t\t\t   onChange={(e : any) => {\r\n\t\t\t\t  handleChange(e);\r\n\t\t\t\t  setFieldTouched('email');\r\n\t\t\t\t}}\r\n\t\t\t   />\r\n         </div>\r\n\r\n\r\n\r\n\r\n            </div>\r\n\r\n            \r\n\r\n\r\n    \r\n<div className='dubbleRowInputs'>\r\n         <div className='dubbleRowInputs__item'>\r\n         <h3 className='inputFieldLabel'>\r\n                Country\r\n            </h3>\r\n         <Select\r\n\t\t\tshowSearch\r\n\t\t\tstyle={{ width: '100%' }}\r\n\t\t\tplaceholder='Select a Country'\r\n\t\t\toptionFilterProp='children'\r\n\t\t\tdefaultValue={customer && customer.country}\r\n\t\t\tonChange={onChangeCountry}\r\n\t\t\tfilterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n\t\t>\r\n\t\t\t{countryListState.done &&\r\n\t\t\t\tcountryListState.data.length > 0 &&\r\n\t\t\t\tcountryOptions.map((option) => {\r\n\t\t\t\t\treturn <Option value={option.value}>{option.name}</Option>;\r\n\t\t\t\t})}\r\n\t\t</Select>\r\n         </div>\r\n         <div className='dubbleRowInputs__item'>\r\n         <h3 className='inputFieldLabel'>\r\n                City\r\n            </h3>\r\n         <Select\r\n\t\t\tdefaultValue={customer && customer.city}\r\n\t\t\tshowSearch\r\n\t\t\tstyle={{ width: '100%' }}\r\n\t\t\tplaceholder='Select a city'\r\n\t\t\toptionFilterProp='children'\r\n\t\t\tonChange={onChangeCity}\r\n\t\t\tfilterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n\t\t>\r\n\t\t\t{cityListState.done &&\r\n\t\t\t\tcityListState.data.length > 0 &&\r\n\t\t\t\tcityOptions.map((option) => {\r\n\t\t\t\t\treturn <Option value={option.value}>{option.name}</Option>;\r\n\t\t\t\t})}\r\n\t\t</Select>\r\n         </div>\r\n\r\n            </div>\r\n\r\n            <div style={{\r\n                marginTop: '12px'\r\n            }}></div>\r\n\r\n\r\n\r\n            <div className='dubbleRowInputs'>\r\n         <div className='dubbleRowInputs__item'>\r\n         <Input \r\n\t\t\t   label='Address'\r\n\t\t\t   value={values.address1}\r\n\t\t\t   name='address1'\r\n\t\t\t   isError={(touched.address1 && errors.address1) ||\r\n\t\t\t\t  (!isSubmitting && updateCustomerState.error['error']['address1'])}\r\n\t\t\t  \r\n\t\t\t\t  errorString={(touched.address1 && errors.address1) ||\r\n\t\t\t\t\t  (!isSubmitting && updateCustomerState.error['error']['address1'])}\r\n\t\t\t   onChange={(e : any) => {\r\n\t\t\t\t  handleChange(e);\r\n\t\t\t\t  setFieldTouched('address1');\r\n\t\t\t\t}}\r\n\t\t\t   />\r\n         </div>\r\n         <div className='dubbleRowInputs__item'>\r\n         <Input \r\n\t\t\t   label='More specific address'\r\n\t\t\t   value={values.address2}\r\n\t\t\t   name='address2'\r\n\t\t\t   isError={(touched.address2 && errors.address2) ||\r\n\t\t\t\t  (!isSubmitting && updateCustomerState.error['error']['address2'])}\r\n\t\t\t  \r\n\t\t\t\t  errorString={(touched.address2 && errors.address2) ||\r\n\t\t\t\t\t  (!isSubmitting && updateCustomerState.error['error']['address2'])}\r\n\t\t\t   onChange={(e : any) => {\r\n\t\t\t\t  handleChange(e);\r\n\t\t\t\t  setFieldTouched('address2');\r\n\t\t\t\t}}\r\n\t\t\t   />\r\n         </div>\r\n\r\n            </div>\r\n\r\n\r\n\r\n\r\n  </Modal>\r\n\t\t\t  \r\n\t\t\t</>\r\n\t\t  )}\r\n\t  </Formik>\r\n\t);\r\n};\r\n\r\n\r\nexport default QuickEdit;\r\n","import React, {useState,useEffect} from 'react';\r\nimport {withRouter, useHistory} from 'react-router-dom';\r\nimport { Table, Badge, Menu, Dropdown, notification, Space, Tag,Button, Input,Tooltip, Modal , Popconfirm} from 'antd';\r\nimport { PlusOutlined, EditOutlined, DeleteOutlined,EditFilled, CheckCircleOutlined } from '@ant-design/icons';\r\nimport Moment from 'react-moment';\r\n\r\n/// import hooks\r\nimport { useFetch, useHandleFetch } from \"../../hooks\";\r\n\r\n// import components\r\nimport { DataTableSkeleton } from \"../../components/Placeholders\";\r\nimport AddNewCustomer from \"./AddNewCustomer\";\r\nimport QuickEdit from \"./QuickEdit\";\r\nimport Empty from \"../../components/Empty\";\r\nconst { Column, ColumnGroup } = Table;\r\nconst { Search } = Input;\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t  message: message || 'Tag Created',\r\n\t  description: '',\r\n\t  icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n  };\r\n\r\n\r\n  const openErrorNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t  message: message || 'Something Went Wrong',\r\n\t  description: '',\r\n\t  icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n  };\r\n\r\n\r\n\r\n\r\n\r\ninterface myTableProps {\r\n  data: any; \r\n  setCustomerList?:any; \r\n} \r\n\r\n\r\nconst MyTable = ({data,setCustomerList}: myTableProps) => {\r\n    const [visible,setvisible] = useState(false);   \r\n    const [activeCategoryForEdit,setactiveCategoryForEdit] = useState(false); \r\n\r\n   const history = useHistory(); \r\n\r\n    const [deleteCustomerState, handleDeleteCustomerFetch] = useHandleFetch({}, 'deleteCustomer');\r\n      const handleDeleteCustomer = async (id) => {\r\n        const deleteCustomerRes = await handleDeleteCustomerFetch({\r\n          urlOptions: {\r\n            placeHolders: {\r\n              id,\r\n            }\r\n            }\r\n          });\r\n\r\n\r\n           // @ts-ignore\r\n\t\t  if(deleteCustomerRes && deleteCustomerRes.status === 'ok'){\r\n\t\t\t  openSuccessNotification('Deleted Customer'); \r\n\t\t\t  const newCustomerList =  data.filter(item => item.id !== id);\r\n\t\t\t  setCustomerList(newCustomerList); \r\n\t\t  }\r\n      }\r\n      \r\n\r\n    return (\r\n        <>\r\n        <Table \r\n        // expandable={{\r\n        //     expandedRowRender: record => <p style={{ margin: 0 }}>{record.name}</p>,\r\n        //     rowExpandable: record => record.name !== 'Not Expandable',\r\n        //   }}\r\n        // bordered={true}\r\n        size='small'\r\n        // pagination={false}\r\n        dataSource={data}\r\n        >\r\n\r\n          <Column\r\n           title=\"Name\" \r\n           dataIndex=\"name\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n           render={(text, record: any) => (\r\n            <>\r\n              <h4\r\n                onClick={() => {\r\n                  history.push(`/admin/customer/${record.id}`)\r\n                  // setcategoryDetailVisible(true);\r\n                  setactiveCategoryForEdit(record)\r\n                }}\r\n                style={{\r\n                  fontWeight: 400,\r\n                  color: '#555',\r\n                  cursor: 'pointer'\r\n                }}>\r\n                {text}\r\n              </h4>\r\n            </>\r\n          )}\r\n            />\r\n\r\n         \r\n          <Column\r\n           title=\"Phone\" \r\n           dataIndex=\"phone\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n         \r\n            />\r\n\r\n\r\n          <Column\r\n           title=\"Country\" \r\n           dataIndex=\"country\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n         \r\n            />\r\n\r\n\r\n          <Column\r\n           title=\"City\" \r\n           dataIndex=\"city\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n         \r\n            />\r\n\r\n           <Column\r\n           title=\"Created\" \r\n           dataIndex=\"created\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n           render={(text, record : any) => (\r\n            <Space size=\"middle\">\r\n            \r\n            <h5>\r\n              <Moment>\r\n                {text}\r\n              </Moment>\r\n            </h5>\r\n             \r\n            </Space>\r\n          )}\r\n            />\r\n\r\n\r\n\r\n          {/* <Column \r\n          \r\n          className='classnameofthecolumn'\r\n\r\n          title=\"Product\" dataIndex=\"product\" key=\"product\" /> */}\r\n\r\n          {/* <Column \r\n          \r\n          className='classnameofthecolumn'\r\n\r\n          title=\"Sub Category\" dataIndex=\"subCategory\" key=\"subCategory\" /> */}\r\n        \r\n        {/* <Column\r\n          title=\"Tags\"\r\n          dataIndex=\"tags\"\r\n          key=\"tags\"\r\n          render={tags => (\r\n            <>\r\n              {tags.map((tag : any) => (\r\n                <Tag color=\"blue\" key={tag}>\r\n                  {tag}\r\n                </Tag>\r\n              ))}\r\n            </>\r\n          )}\r\n        /> */}\r\n        <Column\r\n        \r\n        className='classnameofthecolumn'\r\n          title=\"\"\r\n          key=\"action\"\r\n          align='right'\r\n          render={(text, record : any) => (\r\n            <Space size=\"middle\">\r\n              <a href='##'>\r\n               <Tooltip placement=\"top\" title='Quick Edit Customer'>\r\n              <span className='iconSize' onClick={() => {\r\n                setvisible(true)\r\n                setactiveCategoryForEdit(record); \r\n              }}> \r\n              <EditOutlined />\r\n            \r\n              </span>\r\n               </Tooltip>\r\n               </a>\r\n\r\n             \r\n\r\n              \r\n               <Popconfirm \r\n               \r\n               onConfirm={() => handleDeleteCustomer(record.id)}\r\n               title=\"Are you sure？\" okText=\"Yes\" cancelText=\"No\">\r\n           \r\n           <span \r\n             className='iconSize iconSize-danger'\r\n             > \r\n             <DeleteOutlined/>\r\n            </span>\r\n       \r\n           </Popconfirm>\r\n             \r\n            </Space>\r\n          )}\r\n        />\r\n      </Table>\r\n\r\n    \r\n\r\n    {activeCategoryForEdit &&   <QuickEdit \r\n    customerList={data}\r\n    setCustomerList={setCustomerList}\r\n    setvisible={setvisible}\r\n    visible={visible}\r\n    customer={activeCategoryForEdit}/>}\r\n    \r\n    \r\n    </>\r\n    )\r\n}\r\n\r\n\r\ninterface Props {\r\n    history: any; \r\n}\r\n\r\nconst CustomerList = ({history}: Props) => {\r\n\r\n\r\n    const [customerList,setCustomerList] = useState([]); \r\n\r\n    const [customerState, handleCustomerListFetch] = useHandleFetch({}, 'customerList');\r\n  \r\n  \r\n    useEffect(()=>{\r\n     const setCustomers = async () => {\r\n       const customers = await handleCustomerListFetch({}); \r\n       // @ts-ignore\r\n       setCustomerList(customers); \r\n     }\r\n     setCustomers(); \r\n    },[])\r\n\r\n\r\n    \r\n\r\n  \r\n  const handleSearch = (value) => {\r\n    if(customerState.data.length > 0 ){\r\n      const newCustomerList = customerState.data.filter(item => item.name.toLowerCase().includes(value.toLowerCase())); \r\n      setCustomerList(newCustomerList); \r\n    }\r\n     \r\n  }\r\n\r\n\r\n\r\n    \r\n\r\n  const [addNewCategoryVisible,setAddNewCategoryVisible] = useState(false);   \r\n\r\n  // console.log('customerState',customerState)\r\n\r\n\r\n\r\n\treturn (\r\n\t\t<>\r\n    {/* <h2 className='containerPageTitle'>\r\n      Categories\r\n    </h2> */}\r\n    <div className='categoryListContainer'>\r\n            <div className='categoryListContainer__header'>\r\n           \r\n\r\n          <div className='categoryListContainer__header-searchBar'>\r\n          <h2 className='categoryListContainer__header-title'>\r\n            Customers\r\n            </h2>\r\n\r\n\r\n          <Search\r\n            enterButton={false}\r\n            className='searchbarClassName'\r\n          placeholder=\"search customer..\"\r\n          onSearch={value =>handleSearch(value)}\r\n          // style={{ width: 300 }}\r\n        />\r\n          </div>\r\n            <Button\r\n          // type=\"primary\"\r\n          className='btnPrimaryClassNameoutline'\r\n          icon={<PlusOutlined />}\r\n          onClick={() => setAddNewCategoryVisible(true)}\r\n        >\r\n        Add New\r\n            \r\n            </Button>\r\n            </div>\r\n\r\n            <div className='categoryListContainer__afterHeader'>\r\n            {/* <Search\r\n      placeholder=\"search categories..\"\r\n      size=\"large\"\r\n      onSearch={value => console.log(value)}\r\n      style={{ width: 300 }}\r\n    /> */}\r\n            </div>\r\n\r\n     \r\n\t\t\t\r\n\t\t\t<div className='categoryListContainer__categoryList'>\r\n        {customerState.done && customerList.length > 0 && <MyTable\r\n        setCustomerList={setCustomerList}\r\n         data={customerList} />}\r\n        {customerState.isLoading && <DataTableSkeleton />}\r\n        {customerState.done && !(customerList.length > 0) && (\r\n\t\t\t<Empty title='No Customer found'  />\r\n\t\t)}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\r\n\r\n{customerState.done && \r\n    <AddNewCustomer \r\n    setCustomerList={setCustomerList}\r\n          addNewCategoryVisible={addNewCategoryVisible} \r\n          setAddNewCategoryVisible={setAddNewCategoryVisible}\r\n          customerList={customerState.data}\r\n          \r\n           />}\r\n\r\n      \r\n\r\n        \r\n    </>\r\n\t);\r\n};\r\n\r\nexport default withRouter(CustomerList);\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Modal, Select, notification } from 'antd';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\nimport { PlusOutlined, EditOutlined, DeleteOutlined, EditFilled, CheckCircleOutlined } from '@ant-design/icons';\r\n\r\n\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport { useHandleFetch } from '../../hooks';\r\n\r\n\r\nconst { Option } = Select;\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    firstName: Yup.string()\r\n        .label('Firstname')\r\n        .required()\r\n        .min(2, 'First name must have at least 2 characters '),\r\n    lastName: Yup.string()\r\n        .label('Lastname')\r\n        .required()\r\n        .min(2, 'Lastname must have at least 2 characters '),\r\n    phone: Yup.string()\r\n        .required('Please tell us your mobile number.')\r\n        .max(13, 'Please enter a valid mobile number.'),\r\n    address1: Yup.string()\r\n        .label('Address line 1')\r\n        .required()\r\n        .min(3, 'Address line 1 must have at least 3 characters '),\r\n\r\n    email: Yup.string().label('Email').email('Please enter a valid email'),\r\n});\r\n\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Tag Created',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Something Went Wrong',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n    });\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\r\ninterface Props {\r\n    customer: any;\r\n    setvisible: any;\r\n    visible: any;\r\n\r\n\r\n}\r\n\r\nconst QuickEdit = ({ customer, setvisible, visible }: Props) => {\r\n    const [updateCustomerState, handleUpdateCustomerFetch] = useHandleFetch({}, 'updateCustomer');\r\n\r\n\r\n    const [selectedCountryValue, setselectedCountryValue] = useState('');\r\n    const [selectedCityValue, setselectedCityValue] = useState('');\r\n\r\n    const [countryOptions, setcountryOptions] = useState([]);\r\n    const [cityOptions, setcityOptions] = useState([]);\r\n\r\n    const [countryListState, handleCountryListFetch] = useHandleFetch(\r\n        [],\r\n        'countryList'\r\n    );\r\n\r\n    const [cityListState, handleCityListFetch] = useHandleFetch([], 'cityList');\r\n\r\n    const [countryList, setCountryList] = useState([]);\r\n    const [cityList, setCityList] = useState([]);\r\n\r\n\r\n\r\n\r\n    const handleSubmit = async (values: any, actions: any) => {\r\n        const updateCustomerRes = await handleUpdateCustomerFetch({\r\n            urlOptions: {\r\n                placeHolders: {\r\n                    id: values.id,\r\n                }\r\n            },\r\n            body: {\r\n                phone: values.phone,\r\n                email: values.email,\r\n                password: values.password,\r\n                address1: values.address1,\r\n                address2: values.address2,\r\n                firstName: values.firstName,\r\n                lastName: values.lastName,\r\n                country: selectedCountryValue,\r\n                city: selectedCityValue,\r\n            },\r\n        });\r\n\r\n\r\n        // @ts-ignore\r\n        if (updateCustomerRes && updateCustomerRes.status === 'ok') {\r\n            openSuccessNotification();\r\n\r\n            // const positionInTag = () => {\r\n            //     return customerList.map(item => item.id).indexOf(customer.id);\r\n            // }\r\n\r\n            // const index = positionInTag();\r\n\r\n            // const updatedItem = Object.assign({}, tagList[index], { ...updateCustomerRes });\r\n            // const updateTagList = [...customerList.slice(0, index), updatedItem, ...customerList.slice(index + 1)];\r\n            // setCustomerList(updateTagList);\r\n\r\n        }\r\n        else {\r\n            openErrorNotification();\r\n        }\r\n\r\n        actions.setSubmitting(false);\r\n        setvisible(false)\r\n    };\r\n\r\n\r\n\r\n    const onChangeCity = (value) => {\r\n        setselectedCityValue(value);\r\n    }\r\n\r\n    const onChangeCountry = (value) => {\r\n        setselectedCountryValue(value);\r\n    }\r\n\r\n    useEffect(() => {\r\n        const setCountries = async () => {\r\n            const CountryListRes = await handleCountryListFetch({});\r\n\r\n            // @ts-ignore\r\n            if (CountryListRes && CountryListRes.length > 0) {\r\n                // @ts-ignore\r\n                const countryOptions = CountryListRes.map((country) => {\r\n                    return {\r\n                        value: country.name,\r\n                        name: country.name\r\n                    };\r\n                });\r\n                setcountryOptions(countryOptions);\r\n            }\r\n        };\r\n\r\n        setCountries();\r\n    }, []);\r\n\r\n\r\n    useEffect(() => {\r\n        const setCities = async () => {\r\n            const cityListRes = await handleCityListFetch({\r\n                urlOptions: {\r\n                    placeHolders: {\r\n                        country: selectedCountryValue,\r\n                    },\r\n                },\r\n            });\r\n\r\n            // @ts-ignore\r\n            if (cityListRes && cityListRes.length > 0) {\r\n                // @ts-ignore\r\n                const cityOptions = cityListRes.map((city) => {\r\n                    return {\r\n                        value: city.name,\r\n                        name: city.name\r\n                    };\r\n                });\r\n                setcityOptions(cityOptions);\r\n            }\r\n        };\r\n\r\n        setCities();\r\n    }, [selectedCountryValue]);\r\n\r\n\r\n    const handleCancel = (e: any) => {\r\n        setvisible(false);\r\n    };\r\n\r\n\r\n\r\n    const getisSubmitButtonDisabled = (values, isValid) => {\r\n        if (!isValid ||\r\n            !values.firstName ||\r\n            !values.lastName ||\r\n            !values.phone ||\r\n            !values.address1) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    return (\r\n        <Formik\r\n            onSubmit={(values, actions) => handleSubmit(values, actions)}\r\n            validationSchema={validationSchema}\r\n            validateOnBlur={false}\r\n            enableReinitialize={true}\r\n            initialValues={\r\n                { ...customer }\r\n            }\r\n        >\r\n            {({\r\n                handleChange,\r\n                values,\r\n                handleSubmit,\r\n                errors,\r\n                isValid,\r\n                isSubmitting,\r\n                touched,\r\n                handleBlur,\r\n                setFieldTouched,\r\n                handleReset,\r\n            }) => (\r\n                    <>\r\n                        <Modal\r\n                            title=\"Customer Edit\"\r\n                            visible={visible}\r\n                            onOk={(e: any) => handleSubmit(e)}\r\n                            onCancel={handleCancel}\r\n                            okText='Update'\r\n                            okButtonProps={{\r\n                                loading: isSubmitting,\r\n                                htmlType: \"submit\",\r\n                                disabled: getisSubmitButtonDisabled(values, isValid)\r\n                            }}\r\n                            bodyStyle={{\r\n                                margin: '0',\r\n                                padding: '10px'\r\n                            }}\r\n                        >\r\n                            <div className='dubbleRowInputs'>\r\n                                <div className='dubbleRowInputs__item'>\r\n                                    <Input\r\n                                        label='First Name'\r\n                                        value={values.firstName}\r\n                                        name='firstName'\r\n                                        isError={(touched.firstName && errors.firstName) ||\r\n                                            (!isSubmitting && updateCustomerState.error['error']['firstName'])}\r\n\r\n                                        errorString={(touched.firstName && errors.firstName) ||\r\n                                            (!isSubmitting && updateCustomerState.error['error']['firstName'])}\r\n                                        onChange={(e: any) => {\r\n                                            handleChange(e);\r\n                                            setFieldTouched('firstName');\r\n                                        }}\r\n                                    />\r\n                                </div>\r\n                                <div className='dubbleRowInputs__item'>\r\n                                    <Input\r\n                                        label='Last Name'\r\n                                        value={values.lastName}\r\n                                        name='lastName'\r\n                                        isError={(touched.lastName && errors.lastName) ||\r\n                                            (!isSubmitting && updateCustomerState.error['error']['lastName'])}\r\n\r\n                                        errorString={(touched.lastName && errors.lastName) ||\r\n                                            (!isSubmitting && updateCustomerState.error['error']['lastName'])}\r\n                                        onChange={(e: any) => {\r\n                                            handleChange(e);\r\n                                            setFieldTouched('lastName');\r\n                                        }}\r\n                                    />\r\n                                </div>\r\n\r\n\r\n\r\n\r\n                            </div>\r\n\r\n\r\n\r\n                            <div className='dubbleRowInputs'>\r\n                                <div className='dubbleRowInputs__item'>\r\n                                    <Input\r\n                                        label='Phone'\r\n                                        value={values.phone}\r\n                                        name='phone'\r\n                                        isError={(touched.phone && errors.phone) ||\r\n                                            (!isSubmitting && updateCustomerState.error['error']['phone'])}\r\n\r\n                                        errorString={(touched.phone && errors.phone) ||\r\n                                            (!isSubmitting && updateCustomerState.error['error']['phone'])}\r\n                                        onChange={(e: any) => {\r\n                                            handleChange(e);\r\n                                            setFieldTouched('phone');\r\n                                        }}\r\n                                    />\r\n                                </div>\r\n                                <div className='dubbleRowInputs__item'>\r\n                                    <Input\r\n                                        label='Email'\r\n                                        value={values.email}\r\n                                        name='email'\r\n                                        isError={(touched.email && errors.email) ||\r\n                                            (!isSubmitting && updateCustomerState.error['error']['email'])}\r\n\r\n                                        errorString={(touched.email && errors.email) ||\r\n                                            (!isSubmitting && updateCustomerState.error['error']['email'])}\r\n                                        onChange={(e: any) => {\r\n                                            handleChange(e);\r\n                                            setFieldTouched('email');\r\n                                        }}\r\n                                    />\r\n                                </div>\r\n\r\n\r\n\r\n\r\n                            </div>\r\n\r\n\r\n\r\n\r\n\r\n                            <div className='dubbleRowInputs'>\r\n                                <div className='dubbleRowInputs__item'>\r\n                                    <h3 className='inputFieldLabel'>\r\n                                        Country\r\n            </h3>\r\n                                    <Select\r\n                                        showSearch\r\n                                        style={{ width: '100%' }}\r\n                                        placeholder='Select a Country'\r\n                                        optionFilterProp='children'\r\n                                        defaultValue={customer && customer.country}\r\n                                        onChange={onChangeCountry}\r\n                                        filterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n                                    >\r\n                                        {countryListState.done &&\r\n                                            countryListState.data.length > 0 &&\r\n                                            countryOptions.map((option) => {\r\n                                                return <Option value={option.value}>{option.name}</Option>;\r\n                                            })}\r\n                                    </Select>\r\n                                </div>\r\n                                <div className='dubbleRowInputs__item'>\r\n                                    <h3 className='inputFieldLabel'>\r\n                                        City\r\n            </h3>\r\n                                    <Select\r\n                                        defaultValue={customer && customer.city}\r\n                                        showSearch\r\n                                        style={{ width: '100%' }}\r\n                                        placeholder='Select a city'\r\n                                        optionFilterProp='children'\r\n                                        onChange={onChangeCity}\r\n                                        filterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n                                    >\r\n                                        {cityListState.done &&\r\n                                            cityListState.data.length > 0 &&\r\n                                            cityOptions.map((option) => {\r\n                                                return <Option value={option.value}>{option.name}</Option>;\r\n                                            })}\r\n                                    </Select>\r\n                                </div>\r\n\r\n                            </div>\r\n\r\n                            <div style={{\r\n                                marginTop: '12px'\r\n                            }}></div>\r\n\r\n\r\n\r\n                            <div className='dubbleRowInputs'>\r\n                                <div className='dubbleRowInputs__item'>\r\n                                    <Input\r\n                                        label='Address'\r\n                                        value={values.address1}\r\n                                        name='address1'\r\n                                        isError={(touched.address1 && errors.address1) ||\r\n                                            (!isSubmitting && updateCustomerState.error['error']['address1'])}\r\n\r\n                                        errorString={(touched.address1 && errors.address1) ||\r\n                                            (!isSubmitting && updateCustomerState.error['error']['address1'])}\r\n                                        onChange={(e: any) => {\r\n                                            handleChange(e);\r\n                                            setFieldTouched('address1');\r\n                                        }}\r\n                                    />\r\n                                </div>\r\n                                <div className='dubbleRowInputs__item'>\r\n                                    <Input\r\n                                        label='More specific address'\r\n                                        value={values.address2}\r\n                                        name='address2'\r\n                                        isError={(touched.address2 && errors.address2) ||\r\n                                            (!isSubmitting && updateCustomerState.error['error']['address2'])}\r\n\r\n                                        errorString={(touched.address2 && errors.address2) ||\r\n                                            (!isSubmitting && updateCustomerState.error['error']['address2'])}\r\n                                        onChange={(e: any) => {\r\n                                            handleChange(e);\r\n                                            setFieldTouched('address2');\r\n                                        }}\r\n                                    />\r\n                                </div>\r\n\r\n                            </div>\r\n\r\n\r\n\r\n\r\n                        </Modal>\r\n\r\n                    </>\r\n                )}\r\n        </Formik>\r\n    );\r\n};\r\n\r\n\r\nexport default QuickEdit;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useParams, useHistory } from \"react-router\";\r\n\r\n\r\n// import hooks\r\nimport { useHandleFetch } from \"../../hooks\";\r\n\r\n// import \r\nimport Moment from \"react-moment\";\r\n\r\n// import lib\r\nimport {\r\n    FileOutlined,\r\n    InboxOutlined,\r\n    RadiusUpleftOutlined,\r\n    RadiusUprightOutlined,\r\n    RadiusBottomleftOutlined,\r\n    RadiusBottomrightOutlined,\r\n    PlusOutlined,\r\n    DeleteOutlined,\r\n    EditOutlined,\r\n    CheckCircleOutlined\r\n} from '@ant-design/icons';\r\n\r\nimport { Skeleton, Empty, Popconfirm, Upload, message, Switch, Select, Button, notification, Table, Space, Input as CoolInput, Tooltip, Modal } from 'antd';\r\n\r\n\r\n// import components\r\nimport { DataTableSkeleton } from \"../../components/Placeholders\";\r\nimport CustomerEdit from \"./CustomerEdit\";\r\n\r\n\r\nconst { Column, ColumnGroup } = Table;\r\nconst { Search } = CoolInput;\r\n\r\n\r\ninterface Props {\r\n    productRecord?: any;\r\n}\r\n\r\nconst NewBrandDetail = (props: Props) => {\r\n    const [customerDetailState, handleCustomerDetailFetch] = useHandleFetch({}, 'customerDetail');\r\n    const [orderListState, handleOrderListFetch] = useHandleFetch({}, 'orderListForCustomer');\r\n    const [tagEditVisible, setTagEditVisible] = useState(false);\r\n    const [customerDetailData,setCustomerDetailData] = useState({}); \r\n\r\n\r\n    const params = useParams();\r\n    const history = useHistory();\r\n    const customerId = params['id'];\r\n\r\n    useEffect(() => {\r\n\r\n        const getCustomerDetail = async () => {\r\n            const customerDetailDataRes = await handleCustomerDetailFetch({\r\n                urlOptions: {\r\n                    placeHolders: {\r\n                        id: customerId\r\n                    }\r\n                }\r\n            });\r\n\r\n            // @ts-ignore\r\n            if(customerDetailDataRes){\r\n                // @ts-ignore\r\n                setCustomerDetailData(customerDetailDataRes); \r\n            }\r\n\r\n            console.log('customerDetailDataRes',customerDetailDataRes)\r\n        };\r\n\r\n        getCustomerDetail();\r\n\r\n    }, [customerId]);\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        const getOrderList = async () => {\r\n            await handleOrderListFetch({\r\n                urlOptions: {\r\n                    params: {\r\n                        customerId: customerId\r\n                    }\r\n                }\r\n            })\r\n        };\r\n\r\n        getOrderList();\r\n\r\n    }, [customerId]);\r\n\r\n\r\n\r\n\r\n    console.log('customerDetailData', customerDetailData);\r\n\r\n\r\n\r\n    return (\r\n        <div className='brandDetailContainer'>\r\n            <div className='brandDetailContainer__heading'>\r\n                <h3>\r\n                    Customer Detail\r\n                </h3>\r\n\r\n                {customerDetailState.done && customerDetailData && (Object.keys(customerDetailData).length > 0) && (\r\n                    <>\r\n                        <CustomerEdit\r\n                            visible={tagEditVisible}\r\n                            setvisible={setTagEditVisible}\r\n                            customer={customerDetailData}\r\n                        />\r\n                        <Button\r\n                            onClick={() => setTagEditVisible(true)}\r\n                            type='link'\r\n                            icon={<EditOutlined />}\r\n                        >\r\n                            Edit\r\n                      </Button>\r\n                    </>\r\n                )}\r\n            </div>\r\n            <Skeleton\r\n                paragraph={{ rows: 2 }}\r\n                loading={customerDetailState.isLoading}>\r\n                {customerDetailState.done && customerDetailData && !(Object.keys(customerDetailData).length > 0) && (\r\n                    <Empty description='No Customer found' image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n                )}\r\n\r\n                {customerDetailState.done && customerDetailData && (Object.keys(customerDetailData).length > 0) && (\r\n                    <div className='brandDetailContainer__header'>\r\n\r\n                        <div className='brandDetailContainer__header-info'>\r\n                            <h2>\r\n                                {customerDetailData['name']}\r\n                            </h2>\r\n                            <h3>\r\n                                {customerDetailData['description']}\r\n                            </h3>\r\n\r\n                            {customerDetailData['country'] && (\r\n                                <h3>\r\n                                    COUNTRY:\r\n                                    <span>\r\n                                        {customerDetailData['country']}\r\n                                    </span>\r\n                                </h3>\r\n                            )}\r\n\r\n\r\n                            {customerDetailData['city'] && (\r\n                                <h3>\r\n                                    CITY:\r\n                                    <span>\r\n                                        {customerDetailData['city']}\r\n                                    </span>\r\n                                </h3>\r\n                            )}\r\n                        \r\n\r\n\r\n                            {customerDetailData['address1'] && (\r\n                                <h3>\r\n                                    ADDRESS:\r\n                                    <span>\r\n                                        {customerDetailData['address1']}\r\n                                    </span>\r\n                                </h3>\r\n                            )}\r\n                         \r\n\r\n                            {customerDetailData['phone'] && (\r\n                                <h3>\r\n                                    PHONE:\r\n                                    <span>\r\n                                        {customerDetailData['phone']}\r\n                                    </span>\r\n                                </h3>\r\n                            )}\r\n\r\n                             {customerDetailData['email'] && (\r\n                                <h3>\r\n                                    EMAIL:\r\n                                    <span>\r\n                                        {customerDetailData['email']}\r\n                                    </span>\r\n                                </h3>\r\n                            )}\r\n\r\n                        </div>\r\n                    </div>\r\n                )}\r\n\r\n            </Skeleton>\r\n\r\n            <div className='brandDetailContainer__heading'>\r\n                <h3>\r\n                    Orders \r\n                </h3>\r\n            </div>\r\n            <div className='brandDetailContainer__body'>\r\n                {orderListState.isLoading && <DataTableSkeleton />}\r\n                {orderListState.done && !(orderListState.data.length > 0) && (\r\n                    <div style={{\r\n                        marginTop: '100px'\r\n                    }}>\r\n                        <Empty description='No Orders exists for this Customer ' image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n                    </div>\r\n                )}\r\n\r\n                {orderListState.done && orderListState.data && orderListState.data.length > 0 && (\r\n                    <>\r\n                        <Table\r\n                            style={{\r\n                                paddingTop: '10px',\r\n                                borderRadius: '5px !important',\r\n                                overflow: 'hidden',\r\n                                boxShadow: '0 0.125rem 0.625rem rgba(227, 231, 250, 0.3), 0 0.0625rem 0.125rem rgba(206, 220, 233, 0.4)'\r\n                            }}\r\n                            // expandable={{\r\n                            //     expandedRowRender: record => <p style={{ margin: 0 }}>{record.name}</p>,\r\n                            //     rowExpandable: record => record.name !== 'Not Expandable',\r\n                            //   }}\r\n                            // bordered={true}\r\n                            size='small'\r\n                            // pagination={false}\r\n                            dataSource={orderListState.data}\r\n                            tableLayout={'auto'}\r\n                            onHeaderRow={column => {\r\n                                return {\r\n                                    style: {\r\n                                        color: 'red !important'\r\n                                    }\r\n\r\n                                };\r\n                            }}\r\n                        >\r\n                          \r\n          \r\n        <Column\r\n          title=\"Name\"\r\n          dataIndex=\"name\"\r\n          key=\"id\"\r\n          className='classnameofthecolumn'\r\n          render={(text, record: any) => (\r\n            <>\r\n\r\n              <h4\r\n                onClick={() => {\r\n                  // setvisible(true)\r\n                  history.push(`/admin/order/${record.id}`)\r\n                }}\r\n                style={{\r\n                  fontWeight: 400,\r\n                  color: '#555',\r\n                  cursor: 'pointer'\r\n\r\n                }}>\r\n                {text}\r\n              </h4>\r\n\r\n\r\n            </>\r\n          )}\r\n\r\n        />\r\n\r\n               <Column\r\n                title=\"Country\" \r\n                dataIndex=\"country\" \r\n                key=\"id\" \r\n                className='classnameofthecolumn'\r\n                \r\n                    />\r\n\r\n\r\n                <Column\r\n                title=\"City\" \r\n                dataIndex=\"city\" \r\n                key=\"id\" \r\n                className='classnameofthecolumn'\r\n                />\r\n\r\n                <Column\r\n                title=\"Created\" \r\n                dataIndex=\"date_created\" \r\n                key=\"id\" \r\n                className='classnameofthecolumn'\r\n                render={(text, record: any) => (\r\n            <>\r\n\r\n              <h4\r\n                style={{\r\n                  fontWeight: 400,\r\n                  color: '#555',\r\n\r\n                }}>\r\n                  <Moment  withTitle>\r\n                    {text}\r\n                  </Moment>\r\n              </h4>\r\n            </>\r\n          )}\r\n            />\r\n\r\n\r\n          <Column\r\n            width={150}\r\n           title=\"Status\" \r\n           dataIndex=\"status\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n           render={(text, record: any) => (\r\n            <>\r\n\r\n             <a href='##'>\r\n              <span\r\n              style={{\r\n                fontSize:'12px'\r\n              }}\r\n                >\r\n                {text}\r\n             </span> \r\n            </a>\r\n            </>\r\n          )}\r\n            />\r\n\r\n\r\n                        </Table>\r\n                    </>\r\n                )}\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NewBrandDetail\r\n","import React, {useState,useEffect} from 'react';\r\nimport {useHistory} from 'react-router-dom';\r\nimport { Table,Empty, Popconfirm, Space,Button, Input,Tooltip, notification  } from 'antd';\r\nimport { PlusOutlined, EditOutlined, DeleteOutlined,CheckCircleOutlined } from '@ant-design/icons';\r\n\r\n\r\n\r\n/// import hooks\r\nimport {  useHandleFetch } from \"../../hooks\";\r\n\r\n// import components\r\nimport { DataTableSkeleton } from \"../../components/Placeholders\";\r\n\r\n\r\n\r\nconst { Column } = Table;\r\nconst { Search } = Input;\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t  message: message || 'Page Created',\r\n\t  description: '',\r\n\t  icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n  };\r\n\r\n\r\n  const openErrorNotification = (message?: any) => {\r\n\tnotification.error({\r\n\t  message: message || 'Something Went Wrong',\r\n\t  description: '',\r\n\t  icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n  };\r\n\r\n\r\n\r\n\r\n\r\ninterface myTableProps {\r\n  data: any; \r\n  setBrandList: any; \r\n} \r\n\r\n\r\nconst MyTable = ({data,setBrandList}: myTableProps) => {\r\n    const [activeCategoryForEdit,setactiveCategoryForEdit] = useState(false); \r\n    const [deletePageState, handleDeletePageFetch] = useHandleFetch({}, 'deletePage');\r\n\r\n    const history = useHistory(); \r\n      \r\n      const handleDeletePage = async (id) => {\r\n        const deletePageRes = await handleDeletePageFetch({\r\n          urlOptions: {\r\n            placeHolders: {\r\n              id,\r\n            }\r\n            }\r\n          });\r\n\r\n            // @ts-ignore\r\n\t\t  if(deletePageRes && deletePageRes.status === 'ok'){\r\n\t\t\t  openSuccessNotification('Deleted Page'); \r\n\t\t\t  const newBrandList =  data.filter(item => item.id !== id);\r\n\t\t\t  setBrandList(newBrandList); \r\n\t\t  }\r\n      }\r\n      \r\n\r\n    return (\r\n        <>\r\n        <Table \r\n        // expandable={{\r\n        //     expandedRowRender: record => <p style={{ margin: 0 }}>{record.name}</p>,\r\n        //     rowExpandable: record => record.name !== 'Not Expandable',\r\n        //   }}\r\n        // bordered={true}\r\n        size='small'\r\n        // pagination={false}\r\n        dataSource={data}\r\n        >\r\n            <Column \r\n          title=\"\"\r\n           dataIndex=\"cover\"\r\n            key=\"id\" \r\n            width={'100px'}\r\n            \r\n           className='classnameofthecolumn'\r\n\r\n           render={(cover, record: any) => (\r\n            <>\r\n              <img\r\n                onClick={() => {\r\n                  setactiveCategoryForEdit(record);\r\n                  history.push('/admin/page/pageName')\r\n                }}\r\n                src={cover} alt='cover img' style={{\r\n                  height: '40px',\r\n                  width: '40px',\r\n                  objectFit: \"contain\",\r\n                  borderRadius: '3px',\r\n                  cursor: 'pointer'\r\n                }} />\r\n\r\n\r\n\r\n\r\n            </>\r\n          )}\r\n            />\r\n          <Column\r\n           title=\"Name\" \r\n           dataIndex=\"name\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n           render={(text, record: any) => (\r\n            <>\r\n\r\n              <h4\r\n                onClick={() => {\r\n                  setactiveCategoryForEdit(record);\r\n                  history.push('/admin/page/pageName')\r\n                }}\r\n                style={{\r\n                  fontWeight: 400,\r\n                  color: '#555',\r\n                  cursor: 'pointer'\r\n                }}>\r\n                {text}\r\n              </h4>\r\n\r\n\r\n            </>\r\n          )}\r\n            />\r\n\r\n<Column\r\n           title=\"Description\" \r\n           dataIndex=\"description\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n         \r\n            />\r\n          {/* <Column \r\n          \r\n          className='classnameofthecolumn'\r\n\r\n          title=\"Product\" dataIndex=\"product\" key=\"product\" /> */}\r\n\r\n          {/* <Column \r\n          \r\n          className='classnameofthecolumn'\r\n\r\n          title=\"Sub Category\" dataIndex=\"subCategory\" key=\"subCategory\" /> */}\r\n        \r\n        {/* <Column\r\n          title=\"Tags\"\r\n          dataIndex=\"tags\"\r\n          key=\"tags\"\r\n          render={tags => (\r\n            <>\r\n              {tags.map((tag : any) => (\r\n                <Tag color=\"blue\" key={tag}>\r\n                  {tag}\r\n                </Tag>\r\n              ))}\r\n            </>\r\n          )}\r\n        /> */}\r\n        <Column\r\n        \r\n        className='classnameofthecolumn'\r\n          title=\"\"\r\n          key=\"action\"\r\n          align='right'\r\n          render={(text, record : any) => (\r\n            <Space size=\"middle\">\r\n                <a href='##'>\r\n               <Tooltip placement=\"top\" title='Quick Edit Page'>\r\n              <span className='iconSize' onClick={() => {\r\n                setactiveCategoryForEdit(record); \r\n              }}> \r\n              <EditOutlined />\r\n            \r\n              </span>\r\n               </Tooltip>\r\n               </a>\r\n\r\n\r\n \r\n               <Popconfirm \r\n               \r\n               onConfirm={() => handleDeletePage(record.id)}\r\n               title=\"Are you sure？\" okText=\"Yes\" cancelText=\"No\">\r\n           \r\n           <span \r\n             className='iconSize iconSize-danger'\r\n             > \r\n             <DeleteOutlined/>\r\n            </span>\r\n           </Popconfirm>\r\n\r\n\r\n            </Space>\r\n          )}\r\n        />\r\n      </Table>\r\n\r\n\r\n  \r\n\r\n\r\n    \r\n\r\n\r\n    \r\n    </>\r\n    )\r\n}\r\n\r\n\r\ninterface Props {\r\n}\r\n\r\nconst PageList = ({}: Props) => {\r\n\r\n\r\n  const [pageList,setPageList] = useState([]);\r\n  const [pageState, handlePagsListFetch] = useHandleFetch({}, 'pageList');\r\n\r\n  const history = useHistory(); \r\n\r\n  useEffect(()=>{\r\n   const setPages = async () => {\r\n     const pages = await handlePagsListFetch({}); \r\n     // @ts-ignore\r\n     setPageList(pages); \r\n   }\r\n   setPages(); \r\n  },[])\r\n\r\n\r\n\r\n\r\n    \r\n  const handleSearch = (value) => {\r\n    if(pageState.data.length > 0 ){\r\n      const newBrandList = pageState.data.filter(item => item.name.toLowerCase().includes(value.toLowerCase())); \r\n      setPageList(newBrandList); \r\n    }\r\n     \r\n  }\r\n\r\n\treturn (\r\n\t\t<>\r\n  \r\n    <div className='categoryListContainer'>\r\n        <div className='categoryListContainer__header'>\r\n           <div className='categoryListContainer__header-searchBar'>\r\n\r\n          <h2 className='categoryListContainer__header-title'>\r\n            Pages\r\n            </h2>\r\n\r\n          <Search\r\n            enterButton={false}\r\n            className='searchbarClassName'\r\n          placeholder=\"search pages..\"\r\n          onSearch={value => handleSearch(value)}\r\n        />\r\n          </div>\r\n            <Button\r\n          // type=\"primary\"\r\n          className='btnPrimaryClassNameoutline'\r\n          icon={<PlusOutlined />}\r\n          onClick={() => history.push('/admin/page/new')}\r\n        >\r\n        Add New\r\n            \r\n            </Button>\r\n            </div>\r\n\r\n            <div className='categoryListContainer__afterHeader'>\r\n            {/* <Search\r\n      placeholder=\"search categories..\"\r\n      size=\"large\"\r\n      onSearch={value => console.log(value)}\r\n      style={{ width: 300 }}\r\n    /> */}\r\n            </div>\r\n\r\n     \r\n\t\t\t\r\n\t\t\t<div className='categoryListContainer__categoryList'>\r\n        {pageState.done && pageList.length > 0 && <MyTable \r\n          setBrandList={setPageList}\r\n        data={pageList} />}\r\n        {pageState.isLoading && <DataTableSkeleton />}\r\n        {pageState.done && !(pageList.length > 0) && (\r\n\t\t\t<div style={{\r\n\t\t\t\tmarginTop: '200px'\r\n\t\t\t}}>\r\n\t\t\t\t<Empty description='No Page found'  image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n\t\t\t</div>\r\n\t\t)}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\r\n\r\n    </>\r\n\t);\r\n};\r\n\r\nexport default PageList;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n\r\n// import hhooks\r\nimport { useHandleFetch } from '../../hooks';\r\n\r\n\r\n// import third party ui lib\r\nimport { Upload, message, Switch, Select, Button, notification, Modal, Empty, Steps, Tooltip } from 'antd';\r\n\r\nimport {\r\n\tCheckCircleOutlined,\r\n\tCaretRightOutlined,\r\n\tCaretLeftOutlined,\r\n\tCaretRightFilled,\r\n\tUserOutlined,\r\n\tInfoCircleOutlined,\r\n\tFileOutlined,\r\n\tInboxOutlined,\r\n\tFileAddOutlined,\r\n\tDeleteOutlined,\r\n\tCloseOutlined,\r\n\tCheckOutlined,\r\n\tPlusOutlined,\r\n\tFileImageFilled\r\n} from '@ant-design/icons';\r\n\r\nimport CKEditor from '@ckeditor/ckeditor5-react';\r\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\r\n\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport MediaLibrary from \"../../components/MediaLibrary\";\r\nimport MetaTags from \"../../pages/category/MetaTags\";\r\n\r\n\r\n\r\nconst { Option } = Select;\r\nconst { Step } = Steps;\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t\tmessage: message || 'Page Created',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n\tnotification.error({\r\n\t\tmessage: message || 'Something Went Wrong',\r\n\t\tdescription: '',\r\n\t\ticon: <InfoCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n\tname: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\n\r\n\r\n\r\nconst initialValues = {\r\n\tname: '',\r\n\tbnName: '',\r\n\tcontent: '',\r\n\tbnContent: '',\r\n\tmetaTitle: '',\r\n\tbnMetaTitle: '',\r\n\tmetaDescription: '',\r\n\tbnMetaDescription: '',\r\n\tmetaTags: '',\r\n\tbnMetaTags: '',\r\n\turl: ''\r\n};\r\n\r\n\r\nconst steps = [\r\n\t{\r\n\t\ttitle: 'Order Information',\r\n\t\tcontent: '',\r\n\t\t// description: 'Add Customer & Products'\r\n\t},\r\n\t{\r\n\t\ttitle: 'Billing Address',\r\n\r\n\t},\r\n\t{\r\n\t\ttitle: 'Confirm Order',\r\n\t\tcontent: '',\r\n\t},\r\n];\r\n\r\n\r\n\r\n\r\ninterface Props {\r\n\r\n}\r\n\r\nconst AddNewPage = ({ }: Props) => {\r\n\r\n\tconst [addPageState, handleAddPageFetch] = useHandleFetch({}, 'addPage');\r\n\tconst [content, setContent] = useState(\"<p>Hello from the new page !</p>\");\r\n\tconst [bnContent, setBnContent] = useState(\"<p>হ্যালো নতুন পেজ থেকে!</p>\");\r\n\tconst [myImages, setmyImages] = useState(false);\r\n\tconst [visibleMedia, setvisibleMedia] = useState(false);\r\n\tconst [coverImageId, setCoverImageId] = useState('');\r\n\tconst [tags,setTags] = useState([]);\r\n\tconst [bnTags,setBnTags] = useState([]);\r\n\r\n\r\n\tconst handleAddPageSubmit = async (values: any, actions: any) => {\r\n\t\tconsole.log('fuckit', values);\r\n\t\tconsole.log('values', values);\r\n\t\t\r\n\t\tconst addOrderRes = await handleAddPageFetch({\r\n\t\t\tbody: {\r\n\t\t\t\tname: values.name,\r\n\t\t\t\tcontent: content,\r\n\t\t\t\turl: values.name,\r\n\t\t\t\tcover: myImages ? myImages[0] && myImages[0].id : '',\r\n\t\t\t\tmetaTitle: values.metaTitle,\r\n\t\t\t\tmetaDescription: values.metaDescription,\r\n\t\t\t\tmetaTags: tags.join(','),\r\n\r\n\r\n\t\t\t\tbn: {\r\n\t\t\t\t\tmetaTitle: values.bnMetaTitle,\r\n\t\t\t\t\tmetaDescription: values.bnMetaDescription,\r\n\t\t\t\t\tmetaTags: bnTags.join(','),\r\n\t\t\t\t\tname: values.bnName.trim(),\r\n\t\t\t\t\tcontent: values.setBnContent,\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t});\r\n\r\n\t\t// @ts-ignore\r\n\t\tif (addOrderRes && addOrderRes.status === 'ok') {\r\n\t\t\topenSuccessNotification();\r\n\r\n\r\n\t\t\tactions.resetForm();\r\n\t\t}\r\n\t\telse {\r\n\t\t\topenErrorNotification(\"Couldn't create page, Something went wrong\")\r\n\t\t}\r\n\r\n\t\tactions.setSubmitting(false);\r\n\t};\r\n\r\n\r\n\tconst getisSubmitButtonDisabled = (values, isValid) => {\r\n\t\tif (!isValid ||\r\n\t\t\t!values.name ||\r\n\t\t\t!values.pickUpLocation ||\r\n\t\t\t!values.time) {\r\n\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\r\n\tconst handleImagesDelete = (id) => {\r\n\t\t// @ts-ignore\r\n\t\tconst newImages = myImages && myImages.filter(image => {\r\n\t\t\treturn image.id !== id;\r\n\t\t})\r\n\r\n\t\tsetmyImages(newImages);\r\n\t}\r\n\r\n\r\n\r\n\t\r\n    useEffect(() => {\r\n\t\tif (!addPageState['isLoading']) {\r\n\t\t\tconst error = addPageState['error'];\r\n\t\t\tif (error['isError'] && Object.keys(error['error']).length > 0) {\r\n\t\t\t\tif (error['error']['registerError']) {\r\n\t\t\t\t\t// setServerErrors(error['error']['registerError']);\r\n\t\t\t\t} else if (error['error']['checkoutError']) {\r\n\t\t\t\t\t// setServerErrors(error['error']['checkoutError']);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\t// setServerErrors(error['error']);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst errors =\r\n\t\t\t\t\tObject.values(error['error']).length > 0\r\n\t\t\t\t\t\t? Object.values(error['error'])\r\n\t\t\t\t\t\t: [];\r\n\t\t\t\terrors.forEach((err, i) => {\r\n\t\t\t\t\tif (typeof err === 'string') {\r\n\t\t\t\t\t\topenErrorNotification(err);\r\n\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if (typeof err === 'object') {\r\n\t\t\t\t\t\tif (err && Object.keys(err).length > 0) {\r\n\t\t\t\t\t\t\tconst errs = Object.values(err);\r\n\t\t\t\t\t\t\terrs.forEach(err => {\r\n\t\t\t\t\t\t\t\topenErrorNotification(err);\r\n\t\t\t\t\t\t\t})\r\n\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (\r\n\t\t\t!addPageState['isLoading'] &&\r\n\t\t\tObject.keys(addPageState.data).length > 0\r\n\t\t) {\r\n\t\t\tif (addPageState['data']['status'] === 'ok') {\r\n\t\t\t\topenSuccessNotification('Page Created Successfully');\r\n\t\t\t\t// history.push({\r\n\t\t\t\t//   pathname: '/orderDetails',\r\n\t\t\t\t//   state: checkoutState['data']\r\n\t\t\t\t// })\r\n\r\n\t\t\t\t// clearCart();\r\n\t\t\t\t// setIsModalShown(true);\r\n\t\t\t}\r\n\t\t}\r\n    }, [addPageState]);\r\n\r\n\r\n\r\n\r\n\tconsole.log('myImagesdx', myImages)\r\n\r\n\treturn (\r\n\t\t<Formik\r\n\t\t\tonSubmit={(values, actions) => handleAddPageSubmit(values, actions)}\r\n\t\t\tvalidationSchema={validationSchema}\r\n\t\t\tvalidateOnBlur={false}\r\n\t\t\tenableReinitialize={true}\r\n\t\t\tinitialValues={\r\n\t\t\t\t{ ...initialValues }\r\n\t\t\t}\r\n\t\t>\r\n\t\t\t{({\r\n\t\t\t\thandleChange,\r\n\t\t\t\tvalues,\r\n\t\t\t\thandleSubmit,\r\n\t\t\t\terrors,\r\n\t\t\t\tisValid,\r\n\t\t\t\tisSubmitting,\r\n\t\t\t\ttouched,\r\n\t\t\t\thandleBlur,\r\n\t\t\t\tsetFieldTouched,\r\n\t\t\t\thandleReset,\r\n\t\t\t}) => (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<div className=\"addNewPageContainer\">\r\n\t\t\t\t\t\t\t<h3 className='addNewPageContainer__heading'>\r\n\t\t\t\t\t\t\t\tAdd New Page\r\n\t\t                 \t</h3>\r\n\r\n\t\t\t\t\t\t\t<div className='addNewPageContainer__header'>\r\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs'>\r\n\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\tlabel='Title'\r\n\t\t\t\t\t\t\t\t\t\t\tvalue={values.name}\r\n\t\t\t\t\t\t\t\t\t\t\tname='name'\r\n\t\t\t\t\t\t\t\t\t\t\tplaceHolder='About us,Contact us'\r\n\t\t\t\t\t\t\t\t\t\t\tisError={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addPageState.error['error']['name'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addPageState.error['error']['name'])}\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('name');\r\n\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\tlabel='BN Title'\r\n\t\t\t\t\t\t\t\t\t\tvalue={values.bnName}\r\n\t\t\t\t\t\t\t\t\t\tplaceHolder={'ব্লগ...'}\r\n\t\t\t\t\t\t\t\t\t\tname='bnName'\r\n\t\t\t\t\t\t\t\t\t\tisError={(touched.bnName && errors.bnName) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addPageState.error['error']['bnName'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\terrorString={(touched.bnName && errors.bnName) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addPageState.error['error']['bnName'])}\r\n\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('bnName');\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\r\n\r\n\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\tlabel='URL'\r\n\t\t\t\t\t\t\t\t\t\t\tvalue={values.url}\r\n\t\t\t\t\t\t\t\t\t\t\tname='url'\r\n\t\t\t\t\t\t\t\t\t\t\tisError={(touched.url && errors.url) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addPageState.error['error']['url'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.url && errors.url) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addPageState.error['error']['url'])}\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('url');\r\n\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>Thumbnail</h3>\r\n\r\n\t\t\t\t\t\t\t\t<div className='aboutToUploadImagesContainer'>\r\n\t\t\t\t\t\t\t\t\t{myImages &&\r\n\t\t\t\t\t\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\t\t\t\t\t\tmyImages.length > 0 && myImages.map((image, index) => {\r\n\t\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div className='aboutToUploadImagesContainer__item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='aboutToUploadImagesContainer__item-imgContainer'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => setCoverImageId(image.id)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<img src={image.cover} alt={image.alt} />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<span\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => handleImagesDelete(image.id)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='aboutToUploadImagesContainer__item-remove'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<CloseOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t\t})}\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t{myImages ? !myImages[0] && (\r\n\t\t\t\t\t\t\t\t\t\t<Tooltip\r\n\t\t\t\t\t\t\t\t\t\t\ttitle={'Attach images'}>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetvisibleMedia(true);\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\tclassName='aboutToUploadImagesContainer__uploadItem'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t{/* <FileAddOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<FileImageTwoTone />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<FileImageOutlined /> */}\r\n\t\t\t\t\t\t\t\t\t\t\t\t<FileImageFilled />\r\n\t\t\t\t\t\t\t\t\t\t\t\t{/* <h5>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t Select From Library\r\n\t\t\t\t\t\t\t\t\t\t\t\t<     /h5> */}\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span className='aboutToUploadImagesContainer__uploadItem-plus'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<PlusOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t\t\t\t) : <Tooltip\r\n\t\t\t\t\t\t\t\t\t\ttitle={'Attach images'}>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetvisibleMedia(true);\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\tclassName='aboutToUploadImagesContainer__uploadItem'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t{/* <FileAddOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t<FileImageTwoTone />\r\n\t\t\t\t\t\t\t\t\t\t\t\t<FileImageOutlined /> */}\r\n\t\t\t\t\t\t\t\t\t\t\t\t<FileImageFilled />\r\n\t\t\t\t\t\t\t\t\t\t\t\t{/* <h5>\r\n\t\t\t\t\t\t\t\t\t\t\t\t Select From Library\r\n\t\t\t\t\t\t\t\t\t\t<     /h5> */}\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span className='aboutToUploadImagesContainer__uploadItem-plus'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<PlusOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</Tooltip>}\r\n\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t<p style={{\r\n\t\t\t\t\t\t\t\t\tcolor: '#ff4d4f',\r\n\t\t\t\t\t\t\t\t\tmarginTop:'-15px'\r\n\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t{addPageState.error['error']['cover']}\r\n\t\t\t\t\t\t\t\t</p>\r\n\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className='addNewPageContainer__body'>\r\n\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\t\t\tContent\r\n                               </h3>\r\n\r\n\t\t\t\t\t\t\t\t<CKEditor\r\n\t\t\t\t\t\t\t\t\teditor={ClassicEditor}\r\n\t\t\t\t\t\t\t\t\tdata={content}\r\n\t\t\t\t\t\t\t\t\tonInit={editor => {\r\n\t\t\t\t\t\t\t\t\t\t// You can store the \"editor\" and use when it is needed.\r\n\t\t\t\t\t\t\t\t\t\tconsole.log('Editor is ready to use!', editor);\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\tonChange={(event, editor) => {\r\n\t\t\t\t\t\t\t\t\t\tconst data = editor.getData();\r\n\t\t\t\t\t\t\t\t\t\tsetContent(data);\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\tonBlur={(event, editor) => {\r\n\t\t\t\t\t\t\t\t\t\tconsole.log('Blur.', editor);\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\tonFocus={(event, editor) => {\r\n\t\t\t\t\t\t\t\t\t\tconsole.log('Focus.', editor);\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\t\tmarginTop:'15px'\r\n\t\t\t\t\t\t\t\t}}></div>\r\n\r\n\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\t\t\tBN Content\r\n                               </h3>\r\n\r\n\t\t\t\t\t\t\t\t<CKEditor\r\n\t\t\t\t\t\t\t\t\teditor={ClassicEditor}\r\n\t\t\t\t\t\t\t\t\tdata={bnContent}\r\n\t\t\t\t\t\t\t\t\tonInit={editor => {\r\n\t\t\t\t\t\t\t\t\t\t// You can store the \"editor\" and use when it is needed.\r\n\t\t\t\t\t\t\t\t\t\tconsole.log('Editor is ready to use!', editor);\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\tonChange={(event, editor) => {\r\n\t\t\t\t\t\t\t\t\t\tconst data = editor.getData();\r\n\t\t\t\t\t\t\t\t\t\tsetBnContent(data);\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\tonBlur={(event, editor) => {\r\n\t\t\t\t\t\t\t\t\t\tconsole.log('Blur.', editor);\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\tonFocus={(event, editor) => {\r\n\t\t\t\t\t\t\t\t\t\tconsole.log('Focus.', editor);\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\tmarginTop: '20px'\r\n\t\t\t\t\t\t\t}}></div>\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t<div className='addNewPageContainer__header'>\r\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs'>\r\n\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\tlabel='Meta Title'\r\n\t\t\t\t\t\t\t\t\t\t\tvalue={values.metaTitle}\r\n\t\t\t\t\t\t\t\t\t\t\tname='metaTitle'\r\n\t\t\t\t\t\t\t\t\t\t\tisError={(touched.metaTitle && errors.metaTitle) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addPageState.error['error']['metaTitle'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.metaTitle && errors.metaTitle) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addPageState.error['error']['metaTitle'])}\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('metaTitle');\r\n\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\r\n\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\tlabel='BN Meta Title'\r\n\t\t\t\t\t\t\t\t\t\t\tvalue={values.bnMetaTitle}\r\n\t\t\t\t\t\t\t\t\t\t\tplaceHolder={'নতুন,ফ্রেশ'}\r\n\t\t\t\t\t\t\t\t\t\t\tname='bnMetaTitle'\r\n\t\t\t\t\t\t\t\t\t\t\tisError={(touched.bnMetaTitle && errors.bnMetaTitle) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addPageState.error['error']['bnMetaTitle'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.bnMetaTitle && errors.bnMetaTitle) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addPageState.error['error']['bnMetaTitle'])}\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('bnMetaTitle');\r\n\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs'>\r\n\t\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\t\tlabel='Meta description'\r\n\t\t\t\t\t\t\t\t\tvalue={values.metaDescription}\r\n\t\t\t\t\t\t\t\t\tplaceholder={'meta...'}\r\n\t\t\t\t\t\t\t\t\tname='metaDescription'\r\n\t\t\t\t\t\t\t\t\tisError={(touched.metaDescription && errors.metaDescription) ||\r\n\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addPageState.error['error']['metaDescription'])}\r\n\r\n\t\t\t\t\t\t\t\t\terrorString={(touched.metaDescription && errors.metaDescription) ||\r\n\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addPageState.error['error']['metaDescription'])}\r\n\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\tsetFieldTouched('metaDescription');\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\r\n\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\t\t\t\tlabel='BN Meta Description'\r\n\t\t\t\t\t\t\t\t\t\t\tvalue={values.bnMetaDescription}\r\n\t\t\t\t\t\t\t\t\t\t\tplaceholder={'এইয় মেট...'}\r\n\t\t\t\t\t\t\t\t\t\t\tname='bnMetaDescription'\r\n\t\t\t\t\t\t\t\t\t\t\tisError={(touched.bnMetaDescription && errors.bnMetaDescription) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addPageState.error['error']['bnMetaDescription'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.bnMetaDescription && errors.bnMetaDescription) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addPageState.error['error']['bnMetaDescription'])}\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('bnMetaDescription');\r\n\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\r\n\r\n\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs'>\r\n\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\tMeta Tags (grocery,fashion)\r\n\t\t\t\t\t\t\t</h3>\r\n\r\n\t\t\t\t\t\t\t<MetaTags\r\n\t\t\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\t\t\tsetTags={setTags}\r\n\t\t\t\t\t\t\ttags={tags}\r\n\t\t\t\t\t\t\t />\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\r\n\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\tBN Meta Tags (মুদিখানা,ফ্যাশন)\r\n\t\t\t\t\t\t\t</h3>\r\n\r\n\t\t\t\t\t\t\t<MetaTags\r\n\t\t\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\t\t\tsetTags={setBnTags}\r\n\t\t\t\t\t\t\ttags={bnTags}\r\n\t\t\t\t\t\t\t />\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\tmarginTop: '20px'\r\n\t\t\t\t\t\t\t}}></div>\r\n\r\n\r\n\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\tloading={addPageState.isLoading}\r\n\t\t\t\t\t\t\t\tonClick={(e: any) => handleSubmit(e)}\r\n\t\t\t\t\t\t\t\tclassName='btnPrimaryClassNameoutline'\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\tCreate page\r\n                            </Button>\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t<MediaLibrary\r\n\t\t\t\t\t\t\tsetvisible={setvisibleMedia}\r\n\t\t\t\t\t\t\tvisible={visibleMedia}\r\n\t\t\t\t\t\t\tsetmyImages={setmyImages}\r\n\t\t\t\t\t\t\tmyImages={myImages}\r\n\t\t\t\t\t\t\tisModalOpenForImages={true}\r\n\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</>\r\n\t\t\t\t)}\r\n\t\t</Formik>\r\n\r\n\r\n\r\n\r\n\t);\r\n};\r\n\r\nexport default AddNewPage;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/*\r\n\r\n<div className=\"addNewPageContainer\">\r\n\t\t\t<h3 className='addNewPageContainer__heading'>\r\n\t\t\t\tAdd New Order\r\n\t\t\t</h3>\r\n\t\t\t<div className='addNewPageContainer__header'>\r\n\r\n\t\t\t</div>\r\n\t\t\t<div className='addNewPageContainer__body'>\r\n\r\n\t\t\t</div>\r\n\t\t</div>\r\n\r\n\r\n*/","import React,{useState} from 'react';\r\nimport { Modal  } from 'antd';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport {useHandleFetch} from '../../hooks';\r\n\r\nconst validationSchema = Yup.object().shape({\r\n\tname: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n\tdescription: Yup.string().label('Description').required('Description is required')\r\n});\r\n\r\n\r\n\r\n\r\n\r\ninterface Props {\r\n\tcategory: any;\r\n\tsetvisible: any; \r\n\tvisible: any;\r\n}\r\n\r\nconst QuickEdit = ({ category, setvisible, visible }: Props) => {\r\n\tconst [updateCategoryState, handleUpdateCategoryFetch] = useHandleFetch({}, 'updateCategory');\r\n\r\n\tconst handleSubmit = async (values : any, actions : any) => {\r\n\t  const updateCategoryRes = await handleUpdateCategoryFetch({\r\n\t\turlOptions: {\r\n\t\t\tplaceHolders: {\r\n\t\t\t  id: values.id,\r\n\t\t\t}\r\n\t\t  },\r\n\t\tbody: {\r\n\t\t\tname: values.name,\r\n\t\t\tdescription: values.description,\r\n\t\t},\r\n\t  });\r\n\t\r\n\t  actions.setSubmitting(false);\r\n\t};\r\n\t\r\n\r\n\tconst handleCancel = (e: any) => {\r\n        setvisible(false);\r\n      };\r\n\r\n\r\n\r\n\t  const getisSubmitButtonDisabled = (values,isValid) => {\r\n\t\tif(!values.name || !values.description || !isValid){\r\n\t\t\treturn true; \r\n\t\t}\r\n\t\treturn false; \r\n\t  }\r\n\r\n\treturn (\r\n\t\t<Formik\r\n\t\tonSubmit={(values, actions) => handleSubmit(values, actions)}\r\n\t\tvalidationSchema={validationSchema}\r\n\t\tvalidateOnBlur={false}\r\n\t\tenableReinitialize={true}\r\n\t\tinitialValues={\r\n\t\t  {...category}\r\n\t\t}\r\n\t  >\r\n\t\t{({\r\n\t\t  handleChange,\r\n\t\t  values,\r\n\t\t  handleSubmit,\r\n\t\t  errors,\r\n\t\t  isValid,\r\n\t\t  isSubmitting,\r\n\t\t  touched,\r\n\t\t  handleBlur,\r\n\t\t  setFieldTouched,\r\n\t\t  handleReset,\r\n\t\t}) => (\r\n\t\t\t<>\r\n\t\t\t<Modal\r\n\t\t\ttitle=\"Quick Edit\"\r\n\t\t\tvisible={visible}\r\n\t\t\tonOk={(e : any) => handleSubmit(e)}\r\n\t\t\tonCancel={handleCancel}\r\n\t\t\tokText='Update'\r\n\t\t\tokButtonProps={{\r\n\t\t\tloading: isSubmitting,\r\n\t\t\thtmlType: \"submit\",\r\n\t\t\tdisabled: getisSubmitButtonDisabled(values, isValid)\r\n\t\t\t}}\r\n  >\r\n  <Input \r\n\t\t\t   label='Title'\r\n\t\t\t   value={values.name}\r\n\t\t\t   name='name'\r\n\t\t\t   isError={(touched.name && errors.name) ||\r\n\t\t\t\t  (!isSubmitting && updateCategoryState.error['error']['name'])}\r\n\t\t\t  \r\n\t\t\t\t  errorString={(touched.name && errors.name) ||\r\n\t\t\t\t\t  (!isSubmitting && updateCategoryState.error['error']['name'])}\r\n\t\t\t   onChange={(e : any) => {\r\n\t\t\t\t  handleChange(e);\r\n\t\t\t\t  setFieldTouched('name');\r\n\t\t\t\t}}\r\n\t\t\t   />\r\n\t\t\t  <TextArea\r\n\t\t\t   label='Description' \r\n\t\t\t   value={values.description}\r\n\t\t\t   name='description'\r\n\t\t\t   isError={(touched.description && errors.description) ||\r\n\t\t\t\t  (!isSubmitting && updateCategoryState.error['error']['description'])}\r\n\t\t\t  \r\n\t\t\t\t  errorString={(touched.description && errors.description) ||\r\n\t\t\t\t\t  (!isSubmitting && updateCategoryState.error['error']['description'])}\r\n\t\t\t   onChange={(e : any) => {\r\n\t\t\t\t  handleChange(e);\r\n\t\t\t\t  setFieldTouched('description');\r\n\t\t\t\t}}\r\n\t\t\t\t />\r\n  </Modal>\r\n\t\t\t  \r\n\t\t\t</>\r\n\t\t  )}\r\n\t  </Formik>\r\n\t);\r\n};\r\n\r\n\r\nexport default QuickEdit;\r\n","// @ts-nocheck\r\n\r\nimport React from 'react'; \r\nimport { Tag, Input, Tooltip } from 'antd';\r\nimport { PlusOutlined } from '@ant-design/icons';\r\n\r\nclass EditableTagGroup extends React.Component {\r\n  state = {\r\n    tags: [],\r\n    inputVisible: false,\r\n    inputValue: '',\r\n    editInputIndex: -1,\r\n    editInputValue: '',\r\n  };\r\n\r\n  handleClose = removedTag => {\r\n    const tags = this.state.tags.filter(tag => tag !== removedTag);\r\n    this.setState({ tags });\r\n  };\r\n\r\n  showInput = () => {\r\n    this.setState({ inputVisible: true }, () => this.input.focus());\r\n  };\r\n\r\n  handleInputChange = e => {\r\n    this.setState({ inputValue: e.target.value });\r\n  };\r\n\r\n  handleInputConfirm = () => {\r\n    const { inputValue } = this.state;\r\n    let { tags } = this.state;\r\n    if (inputValue && tags.indexOf(inputValue) === -1) {\r\n      tags = [...tags, inputValue];\r\n    }\r\n    this.setState({\r\n      tags,\r\n      inputVisible: false,\r\n      inputValue: '',\r\n    });\r\n  };\r\n\r\n  handleEditInputChange = e => {\r\n    this.setState({ editInputValue: e.target.value });\r\n  };\r\n\r\n  handleEditInputConfirm = () => {\r\n    this.setState(({ tags, editInputIndex, editInputValue }) => {\r\n      const newTags = [...tags];\r\n      newTags[editInputIndex] = editInputValue;\r\n\r\n      return {\r\n        tags: newTags,\r\n        editInputIndex: -1,\r\n        editInputValue: '',\r\n      };\r\n    });\r\n  };\r\n\r\n  saveInputRef = input => {\r\n    this.input = input;\r\n  };\r\n\r\n  saveEditInputRef = input => {\r\n    this.editInput = input;\r\n  };\r\n\r\n  render() {\r\n    const { tags, inputVisible, inputValue, editInputIndex, editInputValue } = this.state;\r\n    return (\r\n      <>\r\n        {tags.map((tag, index) => {\r\n          if (editInputIndex === index) {\r\n            return (\r\n              <Input\r\n                ref={this.saveEditInputRef}\r\n                key={tag}\r\n                size=\"small\"\r\n                className=\"tag-input\"\r\n                value={editInputValue}\r\n                onChange={this.handleEditInputChange}\r\n                onBlur={this.handleEditInputConfirm}\r\n                onPressEnter={this.handleEditInputConfirm}\r\n              />\r\n            );\r\n          }\r\n\r\n          const isLongTag = tag.length > 20;\r\n\r\n          const tagElem = (\r\n            <Tag\r\n              className=\"edit-tag\"\r\n              key={tag}\r\n              closable={index !== 0}\r\n              onClose={() => this.handleClose(tag)}\r\n            >\r\n              <span\r\n                onDoubleClick={e => {\r\n                  if (index !== 0) {\r\n                    this.setState({ editInputIndex: index, editInputValue: tag }, () => {\r\n                      this.editInput.focus();\r\n                    });\r\n                    e.preventDefault();\r\n                  }\r\n                }}\r\n              >\r\n                {isLongTag ? `${tag.slice(0, 20)}...` : tag}\r\n              </span>\r\n            </Tag>\r\n          );\r\n          return isLongTag ? (\r\n            <Tooltip title={tag} key={tag}>\r\n              {tagElem}\r\n            </Tooltip>\r\n          ) : (\r\n            tagElem\r\n          );\r\n        })}\r\n        {inputVisible && (\r\n          <Input\r\n          style={{\r\n            margin: \"10px 0\"\r\n          }}\r\n            ref={this.saveInputRef}\r\n            type=\"text\"\r\n            size=\"small\"\r\n            className=\"tag-input\"\r\n            value={inputValue}\r\n            onChange={this.handleInputChange}\r\n            onBlur={this.handleInputConfirm}\r\n            onPressEnter={this.handleInputConfirm}\r\n          />\r\n        )}\r\n        {!inputVisible && (\r\n          <Tag className=\"site-tag-plus\" onClick={this.showInput}>\r\n            <PlusOutlined /> New Value\r\n          </Tag>\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EditableTagGroup","import React, {useState} from 'react';\r\n\r\n// import third party ui lib\r\nimport { Upload, message, Switch, Select, Button, notification,Table, Space, Input as CoolInput,Tooltip, Modal,\r\n\r\n} from 'antd';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n\r\n\r\nimport {\r\n\tFileOutlined,\r\n\tInboxOutlined,\r\n\tRadiusUpleftOutlined,\r\n\tRadiusUprightOutlined,\r\n\tRadiusBottomleftOutlined,\r\n\tRadiusBottomrightOutlined,\r\n\tPlusOutlined,\r\n\tDeleteOutlined,\r\n\tEditOutlined\r\n} from '@ant-design/icons';\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n\r\n\r\n/// import hooks\r\nimport { useFetch, useHandleFetch } from \"../../hooks\";\r\n\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport { DataTableSkeleton } from \"../../components/Placeholders\";\r\nimport QuickEdit from \"./QuickEdit\"\r\nimport AddAttributeValues from \"./AddAttributeValues\"\r\n\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n\tname: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n\tdescription: Yup.string().label('Description').required('Description is required')\r\n});\r\n\r\n\r\nconst initialValues = {\r\n\tname: '',\r\n\tdescription: ''\r\n}\r\n\r\n\r\nconst { Column, ColumnGroup } = Table;\r\nconst { Search } = CoolInput;\r\n\r\n\r\n\r\nconst MyTable = ({data}) => {\r\n    const [visible,setvisible] = useState(false);   \r\n\tconst [activeCategoryForEdit,setactiveCategoryForEdit] = useState(false); \r\n    const [deleteTagState, handleDeleteTagFetch] = useHandleFetch({}, 'deleteTag');\r\n\r\n\r\n\tconst handleDeleteCategory = async (id) => {\r\n        const deleteTagRes = await handleDeleteTagFetch({\r\n          urlOptions: {\r\n            placeHolders: {\r\n              id,\r\n            }\r\n            }\r\n          });\r\n      }\r\n\r\n\r\n    const handleOk = (e: any) => {\r\n        setvisible(false);\r\n      \r\n      };\r\n    \r\n      const handleCancel = (e: any) => {\r\n        setvisible(false);\r\n      };\r\n\r\n      \r\n\r\n    return (\r\n        <>\r\n         <Table \r\n        // expandable={{\r\n        //     expandedRowRender: record => <p style={{ margin: 0 }}>{record.name}</p>,\r\n        //     rowExpandable: record => record.name !== 'Not Expandable',\r\n        //   }}\r\n        // bordered={true}\r\n        size='small'\r\n        // pagination={false}\r\n        dataSource={data}\r\n        >\r\n\r\n          <Column\r\n           title=\"Name\" \r\n           dataIndex=\"name\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n         \r\n            />\r\n\r\n<Column\r\n           title=\"Description\" \r\n           dataIndex=\"description\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n         \r\n            />\r\n        <Column\r\n        \r\n        className='classnameofthecolumn'\r\n          title=\"\"\r\n          key=\"action\"\r\n          align='right'\r\n          render={(text, record : any) => (\r\n            <Space size=\"middle\">\r\n            \r\n               <Tooltip placement=\"top\" title='Quick Edit Tag'>\r\n              <span className='iconSize' onClick={() => {\r\n                setvisible(true)\r\n                setactiveCategoryForEdit(record); \r\n              }}> \r\n              <EditOutlined />\r\n            \r\n              </span>\r\n               </Tooltip>\r\n\r\n\r\n             \r\n              <Tooltip placement=\"top\" title='Delete Tag'>\r\n            \r\n\r\n             <span \r\n             className='iconSize iconSize-danger'\r\n             onClick={() => handleDeleteCategory(record.id)}\r\n             > \r\n             <DeleteOutlined/>\r\n            </span>\r\n            \r\n          </Tooltip>\r\n             \r\n            </Space>\r\n          )}\r\n        />\r\n      </Table>\r\n\r\n\r\n\r\n     \r\n\r\n\t\t{activeCategoryForEdit &&   <QuickEdit \r\n    setvisible={setvisible}\r\n    visible={visible}\r\n    category={activeCategoryForEdit}/>}\r\n    </>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\n\r\nconst props = {\r\n\tname: 'file',\r\n\tmultiple: true,\r\n\taction: 'https://www.mocky.io/v2/5cc8019d300000980a055e76',\r\n\tonChange(info: any) {\r\n\t\tconst { status } = info.file;\r\n\t\tif (status !== 'uploading') {\r\n\t\t\t// console.log(info.file, info.fileList);\r\n\t\t}\r\n\t\tif (status === 'done') {\r\n\t\t\tmessage.success(`${info.file.name} file uploaded successfully.`);\r\n\t\t} else if (status === 'error') {\r\n\t\t\tmessage.error(`${info.file.name} file upload failed.`);\r\n\t\t}\r\n\t}\r\n};\r\n\r\ninterface Props {}\r\n\r\nconst AttributeList = ({  }: Props) => {\r\n\tconst tagState = useFetch([], [], 'brandList', {\r\n\t\turlOptions: {\r\n\t\t  params: {\r\n\t\t\tisSubCategory: true,\r\n\t\t  },\r\n\t\t},\r\n\t  });\r\n\r\n\t  const [updateCategoryState, handleUpdateCategoryFetch] = useHandleFetch({}, 'updateCategory');\r\n\t  const [addNewCategoryVisible,setAddNewCategoryVisible] = useState(false);   \r\n\r\n\r\n\r\n\t  const handleSubmit = async (values : any, actions : any) => {\r\n\t\tconst updateCategoryRes = await handleUpdateCategoryFetch({\r\n\t\t  urlOptions: {\r\n\t\t\t  placeHolders: {\r\n\t\t\t\tid: values.id,\r\n\t\t\t  }\r\n\t\t\t},\r\n\t\t  body: {\r\n\t\t\t  name: values.name,\r\n\t\t\t  description: values.description,\r\n\t\t  },\r\n\t\t});\r\n\t  \r\n\t\tactions.setSubmitting(false);\r\n\t  };\r\n\t  \r\n \r\n  \r\n  \r\n  \r\n\t\tconst getisSubmitButtonDisabled = (values,isValid) => {\r\n\t\t  if(!values.name || !values.description || !isValid){\r\n\t\t\t  return true; \r\n\t\t  }\r\n\t\t  return false; \r\n\t\t}\r\n\r\n\r\n\r\n\r\n  const handleOkAddNewCategory = (e: any) => {\r\n    setAddNewCategoryVisible(false);\r\n  \r\n  };\r\n\r\n  const handleCancelAddNewCategory = (e: any) => {\r\n    setAddNewCategoryVisible(false);\r\n  };\r\n\r\n\treturn (\r\n\t\t<div className='site-layout-background' style={{ padding: '30px 20px 30px 20px', minHeight: 360 }}>\r\n\t\t\t<div className='addproductSectionTitleContainer'>\r\n\t\t\t\t<h2 className='addprouctSectionTitle'>Add Attribute</h2>\r\n\t\t\t</div>\r\n\t\t\t<div className='addproductSectionContainer addproductSectionContainer-tags'>\r\n\t\t\t\t<div className='addproductSection addproductSection-left'>\r\n\t\t\t\t<Formik\r\n\t\tonSubmit={(values, actions) => handleSubmit(values, actions)}\r\n\t\tvalidationSchema={validationSchema}\r\n\t\tvalidateOnBlur={false}\r\n\t\tenableReinitialize={true}\r\n\t\tinitialValues={\r\n\t\t  {...initialValues}\r\n\t\t}\r\n\t  >\r\n\t\t{({\r\n\t\t  handleChange,\r\n\t\t  values,\r\n\t\t  handleSubmit,\r\n\t\t  errors,\r\n\t\t  isValid,\r\n\t\t  isSubmitting,\r\n\t\t  touched,\r\n\t\t  handleBlur,\r\n\t\t  setFieldTouched,\r\n\t\t  handleReset,\r\n\t\t}) => (\r\n\t\t\t<>\r\n  <Input \r\n\t\t\t   label='Title'\r\n\t\t\t   value={values.name}\r\n\t\t\t   name='name'\r\n\t\t\t   isError={(touched.name && errors.name) ||\r\n\t\t\t\t  (!isSubmitting && updateCategoryState.error['error']['name'])}\r\n\t\t\t  \r\n\t\t\t\t  errorString={(touched.name && errors.name) ||\r\n\t\t\t\t\t  (!isSubmitting && updateCategoryState.error['error']['name'])}\r\n\t\t\t   onChange={(e : any) => {\r\n\t\t\t\t  handleChange(e);\r\n\t\t\t\t  setFieldTouched('name');\r\n\t\t\t\t}}\r\n\t\t\t   />\r\n\r\n\t\t\t   <div style={{\r\n\t\t\t\t   marginTop: '0px'\r\n\t\t\t   }}></div>\r\n\t\t\t  \r\n\r\n\t\t\t  <h3 className='inputFieldLabel'> Values</h3>\r\n\t\t\t\t\r\n\t\t\t\t<AddAttributeValues />\r\n\t\t\t\t\t  <Button \r\n\t\t\t\t\t  style={{\r\n\t\t\t\t\t\t  display: 'block',\r\n\t\t\t\t\t\t  marginTop: '20px'\r\n\t\t\t\t\t  }}\r\n\t\t\t\t\t\t\ttype='primary'\r\n\t\t\t\t\t\t\tonClick={(e: any) => handleSubmit(e)}\r\n\t\t\t\t\t\t\tdisabled={getisSubmitButtonDisabled(values,isValid)}\r\n\t\t\t\t\t\t\tloading={isSubmitting}\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t >\r\n\t\t\t\t\t\tCreate\r\n\t\t\t\t\t</Button>\r\n\t\t\t</>\r\n\t\t  )}\r\n\t  </Formik>\r\n\r\n\r\n\t\t\t\t</div>\r\n                <div className='addproductSection addproductSection-right'> \r\n\r\n\t\t\t\t<div className='categoryListContainer'>\r\n            <div className='categoryListContainer__header'>\r\n           \r\n\r\n          <div className='categoryListContainer__header-searchBar-tag'>\r\n          {/* <h2 className='categoryListContainer__header-title'>\r\n            Brand\r\n            </h2> */}\r\n\r\n\r\n          <Search\r\n            enterButton={false}\r\n            className='searchbarClassName'\r\n          placeholder=\"search categories..\"\r\n          onSearch={value => console.log(value)}\r\n          // style={{ width: 300 }}\r\n        />\r\n          </div>\r\n            {/* <Button\r\n          // type=\"primary\"\r\n          className='btnPrimaryClassNameoutline'\r\n          icon={<PlusOutlined />}\r\n          onClick={() => setAddNewCategoryVisible(true)}\r\n        >\r\n        Add New\r\n            \r\n            </Button> */}\r\n            </div>\r\n\r\n            <div className='categoryListContainer__afterHeader'>\r\n            {/* <Search\r\n      placeholder=\"search categories..\"\r\n      size=\"large\"\r\n      onSearch={value => console.log(value)}\r\n      style={{ width: 300 }}\r\n    /> */}\r\n            </div>\r\n\r\n     \r\n\t\t\t\r\n\t\t\t<div className='categoryListContainer__categoryList'>\r\n\t\t\t\t{tagState.done && tagState.data.length > 0 && <MyTable data={tagState.data} />}\r\n\t\t\t\t{tagState.isLoading && <DataTableSkeleton />}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\r\n                </div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default AttributeList;\r\n","import React, {useState, useEffect} from 'react';\r\nimport {withRouter, useHistory} from 'react-router-dom';\r\nimport { Table, Badge, Menu, Dropdown, Space, Tag,Button, Input,Tooltip, Modal, notification, Popconfirm } from 'antd';\r\nimport { PlusOutlined, EditOutlined, DeleteOutlined,CheckOutlined,CheckCircleOutlined,DownOutlined  } from '@ant-design/icons';\r\n\r\n\r\n/// import hooks\r\nimport { useFetch, useHandleFetch } from \"../../hooks\";\r\n\r\n// import components\r\nimport { DataTableSkeleton } from \"../../components/Placeholders\";\r\nimport AddNewOrder from \"./AddNewOrder\";\r\nimport QuickEdit from \"./QuickEdit\";\r\nimport Empty from \"../../components/Empty\";\r\n\r\n\r\n\r\n// import lib \r\nimport Moment from \"react-moment\";\r\n\r\nconst { Column, ColumnGroup } = Table;\r\nconst { Search } = Input;\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t  message: message || 'Tag Created',\r\n\t  description: '',\r\n\t  icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n  };\r\n\r\n\r\n  const openErrorNotification = (message?: any) => {\r\n\tnotification.error({\r\n\t  message: message || 'Something Went Wrong',\r\n\t  description: '',\r\n\t  icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n  };\r\n\r\n\r\n\r\n\r\n\r\ninterface myTableProps {\r\n  data: any; \r\n  setOrderList: any; \r\n} \r\n\r\n\r\nconst MyTable = ({data,setOrderList}: myTableProps) => {\r\n    const [visible,setvisible] = useState(false);   \r\n    const [activeCategoryForEdit,setactiveCategoryForEdit] = useState(false); \r\n    const [deleteOrderState, handleDeleteOrderFetch] = useHandleFetch({}, 'deleteOrder');\r\n    const [updateOrderStatusState, handleUpdateOrderStatusFetch] = useHandleFetch({}, 'updateOrderStatus');\r\n\r\n    const history = useHistory();\r\n\r\n      const handleDeleteRegion = async (id) => {\r\n        const deleteOrderRes = await handleDeleteOrderFetch({\r\n          urlOptions: {\r\n            placeHolders: {\r\n              id,\r\n            }\r\n            }\r\n          });\r\n\r\n            // @ts-ignore\r\n\t\t  if(deleteOrderRes && deleteOrderRes.status === 'ok'){\r\n\t\t\t  openSuccessNotification('Deleted Order'); \r\n\t\t\t  const newOrderList =  data.filter(item => item.id !== id);\r\n\t\t\t  setOrderList(newOrderList); \r\n\t\t  }\r\n\r\n      }\r\n      \r\n\r\n\r\n      \r\n      const handleUpdateOrderStatus = async (record,id,newStatus) => {\r\n        const updateOrderStatusRes = await handleUpdateOrderStatusFetch({\r\n          urlOptions: {\r\n            params: {\r\n              newOrderstatus: newStatus,\r\n            },\r\n            placeHolders: {\r\n              id,\r\n            }\r\n            }\r\n          });\r\n\r\n            // @ts-ignore\r\n\t\t  if(updateOrderStatusRes && updateOrderStatusRes.status === 'ok'){\r\n\t\t\t  openSuccessNotification('Updated Order Status'); \r\n\t\t\t  \r\n        const positionInTag = () => {\r\n          return data.map(item => item.id).indexOf(id);\r\n          }\r\n\r\n      const index = positionInTag();\r\n      console.log('recordis',record,index );\r\n\r\n      // @ts-ignore\r\n      const updatedItem = Object.assign({}, data[index], { status: newStatus });\r\n      const updateOrderList = [...data.slice(0, index), updatedItem, ...data.slice(index + 1)];\r\n      console.log('updateOrderList',updateOrderList,'-----',setOrderList );\r\n      setOrderList(updateOrderList);\r\n\r\n\r\n      }\r\n\r\n      \r\n      else {\r\n        openErrorNotification(\"Couldn't changed order status, Something went wrong\")\r\n      }\r\n\r\n      }\r\n      \r\n\r\n      const StatusItemMenu = (record,id) => {\r\n        return (\r\n          (\r\n            <Menu>\r\n\r\n<Menu.Item\r\n                onClick={() => handleUpdateOrderStatus(record,id,'pending')}\r\n                key=\"1\" icon={<CheckOutlined />}>\r\n                Pending\r\n              </Menu.Item>\r\n  \r\n\r\n  \r\n              <Menu.Item\r\n                onClick={() => handleUpdateOrderStatus(record,id,'complete')}\r\n                key=\"1\" icon={<CheckOutlined />}>\r\n                Completed\r\n    \r\n              </Menu.Item>\r\n    \r\n              {/* <Menu.Item\r\n                onClick={() => handleUpdateOrderStatus(record,id,'deliver')}\r\n                key=\"1\" icon={<CheckOutlined />}>\r\n                Delivered\r\n              </Menu.Item>\r\n     */}\r\n            \r\n            </Menu >\r\n          )\r\n        )\r\n      };\r\n\r\n\r\n\r\n\r\n    \r\n\r\n    return (\r\n        <>\r\n         <Table \r\n        // expandable={{\r\n        //     expandedRowRender: record => <p style={{ margin: 0 }}>{record.name}</p>,\r\n        //     rowExpandable: record => record.name !== 'Not Expandable',\r\n        //   }}\r\n        // bordered={true}\r\n        size='small'\r\n        // pagination={false}\r\n        dataSource={data}\r\n        >\r\n\r\n          \r\n        <Column\r\n          title=\"Name\"\r\n          dataIndex=\"name\"\r\n          key=\"id\"\r\n          className='classnameofthecolumn'\r\n          render={(text, record: any) => (\r\n            <>\r\n\r\n              <h4\r\n                onClick={() => {\r\n                  // setvisible(true)\r\n                  history.push(`/admin/order/${record.id}`)\r\n                  setactiveCategoryForEdit(record); \r\n                }}\r\n                style={{\r\n                  fontWeight: 400,\r\n                  color: '#555',\r\n                  cursor: 'pointer'\r\n\r\n                }}>\r\n                {text}\r\n              </h4>\r\n\r\n\r\n            </>\r\n          )}\r\n\r\n        />\r\n\r\n<Column\r\n           title=\"Country\" \r\n           dataIndex=\"country\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n         \r\n            />\r\n\r\n\r\n<Column\r\n           title=\"City\" \r\n           dataIndex=\"city\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n         \r\n            />\r\n\r\n          <Column\r\n           title=\"Created\" \r\n           dataIndex=\"date_created\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n           render={(text, record: any) => (\r\n            <>\r\n\r\n              <h4\r\n               \r\n                style={{\r\n                  fontWeight: 400,\r\n                  color: '#555',\r\n\r\n                }}>\r\n                  <Moment  withTitle>\r\n                    {text}\r\n                  </Moment>\r\n              </h4>\r\n\r\n\r\n            </>\r\n          )}\r\n            />\r\n\r\n\r\n          <Column\r\n          width={150}\r\n           title=\"Status\" \r\n           dataIndex=\"status\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n           render={(text, record: any) => (\r\n            <>\r\n\r\n        <Dropdown overlay={() => StatusItemMenu(record,record.id)} placement=\"bottomRight\">\r\n           <a href='##'>\r\n            <span\r\n                // className={'product-attributeTag'}\r\n              style={{\r\n                fontSize:'12px'\r\n              }}\r\n                >\r\n\r\n                {text}\r\n                <span style={{\r\n                  marginLeft:\"5px\",\r\n                  fontSize:'10px'\r\n                }}>\r\n                   <DownOutlined />\r\n                </span>\r\n               \r\n            </span> \r\n            </a>\r\n\t\t\t\t\t</Dropdown>\r\n\r\n\r\n     \r\n            </>\r\n          )}\r\n            />\r\n\r\n\r\n          {/* <Column \r\n          \r\n          className='classnameofthecolumn'\r\n\r\n          title=\"Product\" dataIndex=\"product\" key=\"product\" /> */}\r\n\r\n          {/* <Column \r\n          \r\n          className='classnameofthecolumn'\r\n\r\n          title=\"Sub Category\" dataIndex=\"subCategory\" key=\"subCategory\" /> */}\r\n        \r\n        {/* <Column\r\n          title=\"Tags\"\r\n          dataIndex=\"tags\"\r\n          key=\"tags\"\r\n          render={tags => (\r\n            <>\r\n              {tags.map((tag : any) => (\r\n                <Tag color=\"blue\" key={tag}>\r\n                  {tag}\r\n                </Tag>\r\n              ))}\r\n            </>\r\n          )}\r\n        /> */}\r\n        <Column\r\n        \r\n        className='classnameofthecolumn'\r\n          title=\"\"\r\n          key=\"action\"\r\n          align='right'\r\n          render={(text, record : any) => (\r\n            <Space size=\"middle\">\r\n              <a href='##'>\r\n               <Tooltip placement=\"top\" title='Quick Edit Region'>\r\n              <span className='iconSize' onClick={() => {\r\n                setvisible(true)\r\n                setactiveCategoryForEdit(record); \r\n              }}> \r\n              <EditOutlined />\r\n              </span>\r\n\r\n               </Tooltip>\r\n               </a>\r\n\r\n\r\n\r\n{/*    \r\n               <Popconfirm \r\n               \r\n               onConfirm={() => handleDeleteRegion(record.id)}\r\n               title=\"Are you sure？\" okText=\"Yes\" cancelText=\"No\">\r\n           \r\n           <span \r\n             className='iconSize iconSize-danger'\r\n             > \r\n             <DeleteOutlined/>\r\n            </span>\r\n       \r\n           </Popconfirm> */}\r\n\r\n\r\n             \r\n             \r\n            </Space>\r\n          )}\r\n        />\r\n      </Table>\r\n\r\n    \r\n\r\n    {/* {activeCategoryForEdit &&   <QuickEdit \r\n    setvisible={setvisible}\r\n    visible={visible}\r\n    customer={activeCategoryForEdit}\r\n    orderList={data}\r\n    setOrderList={setOrderList}\r\n\r\n    />\r\n\r\n    }\r\n     */}\r\n    \r\n    </>\r\n    )\r\n}\r\n\r\n\r\ninterface Props {\r\n    history: any; \r\n}\r\n\r\nconst CustomerList = ({history}: Props) => {\r\n\r\n    const [orderList,setOrderList] = useState([]); \r\n\r\n    const [orderState, handleRegionListFetch] = useHandleFetch({}, 'orderList');\r\n  \r\n\r\n    console.log('orderState',orderState);\r\n  \r\n    useEffect(()=>{\r\n     const setOrders = async () => {\r\n       const regions = await handleRegionListFetch({}); \r\n       // @ts-ignore\r\n       setOrderList(regions); \r\n     }\r\n     setOrders(); \r\n    },[])\r\n\r\n  const [addNewCategoryVisible,setAddNewCategoryVisible] = useState(false);   \r\n\r\n  // console.log('orderState',orderState)\r\n\r\n\r\n  const handleSearch = (value) => {\r\n    if(orderState.data.length > 0 ){\r\n      const newOrderList = orderState.data.filter(item => item.name.includes(value)); \r\n      setOrderList(newOrderList); \r\n    }\r\n     \r\n  }; \r\n\r\n\r\n\r\n\r\n\treturn (\r\n\t\t<>\r\n    {/* <h2 className='containerPageTitle'>\r\n      Categories\r\n    </h2> */}\r\n    <div className='categoryListContainer'>\r\n            <div className='categoryListContainer__header'>\r\n           \r\n\r\n          <div className='categoryListContainer__header-searchBar'>\r\n          <h2 className='categoryListContainer__header-title'>\r\n            Orders \r\n            </h2>\r\n\r\n\r\n          <Search\r\n            enterButton={false}\r\n            className='searchbarClassName'\r\n          placeholder=\"search orders..\"\r\n          onSearch={value => handleSearch(value)}\r\n          // style={{ width: 300 }}\r\n        />\r\n          </div>\r\n            <Button\r\n          // type=\"primary\"\r\n          className='btnPrimaryClassNameoutline'\r\n          icon={<PlusOutlined />}\r\n          onClick={() => history.push('/order/new')}\r\n        >\r\n        Add New\r\n            \r\n            </Button>\r\n            </div>\r\n\r\n            <div className='categoryListContainer__afterHeader'>\r\n            {/* <Search\r\n      placeholder=\"search categories..\"\r\n      size=\"large\"\r\n      onSearch={value => console.log(value)}\r\n      style={{ width: 300 }}\r\n    /> */}\r\n            </div>\r\n\r\n     \r\n\t\t\t\r\n\t\t\t<div className='categoryListContainer__categoryList'>\r\n        {orderState.done && orderList.length > 0 && <MyTable \r\n        setOrderList={setOrderList}\r\n        data={orderList} />}\r\n        {orderState.isLoading && <DataTableSkeleton />}\r\n\r\n        {orderState.done && !(orderList.length > 0) && (\r\n        <Empty title='No Order found'  />\r\n        )}\r\n        \r\n\t\t\t</div>\r\n\t\t</div>\r\n\r\n\r\n      {/* {orderState.done && \r\n          <AddNewOrder \r\n          addNewCategoryVisible={addNewCategoryVisible} \r\n          setAddNewCategoryVisible={setAddNewCategoryVisible}\r\n          orderList={orderState.data}\r\n          setOrderList={setOrderList}\r\n           />} */}\r\n\r\n  \r\n    </>\r\n\t);\r\n};\r\n\r\nexport default withRouter(CustomerList);\r\n","import React, {memo} from 'react'\r\n\r\n\r\n// import components\r\nimport AddNewOrderProductItem from \"../order/AddNewOrderProductItem\";\r\nimport Empty from \"../../components/Empty\";\r\n\r\nimport {\r\n    ShopOutlined\r\n} from '@ant-design/icons';\r\n\r\n\r\ninterface Props {\r\n    productList?: any;\r\n    setProductList?: any;\r\n}\r\n\r\nconst AddNewOrderSummary = ({\r\n    setProductList,\r\n    productList\r\n}: Props) => {\r\n    return (\r\n        <div\r\n            style={{\r\n                // @ts-ignore\r\n                flexDirection: 'flex'\r\n            }}\r\n            className='addOrderContainer__container-orderSummary'>\r\n                  <h3 className='addOrderContainer-sectionTitle'>\r\n                <span>\r\n                    <ShopOutlined />\r\n                </span>\r\n                Added Products\r\n            </h3>\r\n            <div className='addOrderContainer__container-productItemContainer'>\r\n                {productList && productList.length > 0 && productList.map(item => {\r\n                    return <AddNewOrderProductItem\r\n                        setProductList={setProductList}\r\n                        productList={productList}\r\n                        productId={item._id}\r\n                        quantity={item.quantity}\r\n                        item={item}\r\n                        variation={item.variation}\r\n                    />;\r\n                })}\r\n\r\n                {!(productList.length > 0) && (\r\n                    <div style={{\r\n                        marginLeft: '32px'\r\n                    }}>\r\n                        <Empty title='No Product Added' height={150} />\r\n                    </div>\r\n                )}\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default memo(AddNewOrderSummary)\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useHandleFetch } from '../../hooks';\r\nimport { Select, Skeleton } from 'antd';\r\n\r\ninterface Props {\r\n    setCustomerId?: any;\r\n    setSelectedCustomerData?: any;\r\n    customerListState?:any; \r\n}\r\n\r\nconst { Option } = Select;\r\n\r\nconst Brands = ({ setCustomerId, setSelectedCustomerData }: Props) => {\r\n    const [options, setoptions] = useState([]);\r\n    const [selectedBrandId, setSelectedBrandId] = useState('');\r\n    const [brandState, handleTagListFetch] = useHandleFetch({}, 'customerList');\r\n\r\n    function onChange(option) {\r\n        if (options && options.length > 0) {\r\n            const customerData = options.find(item => item.value === option);\r\n            if (customerData) {\r\n                setSelectedCustomerData(customerData);\r\n            }\r\n        }\r\n        setSelectedBrandId(option);\r\n        setCustomerId(option);\r\n        // console.log(`selected ${value}`);\r\n    }\r\n\r\n    function onBlur() {\r\n        // console.log('blur');\r\n    }\r\n\r\n    function onFocus() {\r\n        // console.log('focus');\r\n    }\r\n\r\n    function onSearch(val) {\r\n        // console.log('search:', val);\r\n    }\r\n\r\n    useEffect(() => {\r\n        const setBrands = async () => {\r\n            const brandListRes = await handleTagListFetch({});\r\n\r\n            // @ts-ignore\r\n            if (brandListRes && brandListRes.length > 0) {\r\n                // @ts-ignore\r\n                const brandOptions = brandListRes.map((brand) => {\r\n                    return {\r\n                        ...brand,\r\n                        value: brand.id,\r\n                        name: `${brand.firstName} ${brand.lastName}`\r\n                    };\r\n                });\r\n                setoptions(brandOptions);\r\n            }\r\n        };\r\n\r\n        setBrands();\r\n    }, []);\r\n\r\n    return (\r\n        <Skeleton loading={brandState.isLoading}>\r\n            <Select\r\n                showSearch\r\n                size='middle'\r\n                style={{ width: '100%' }}\r\n                placeholder='Select a Customer'\r\n                optionFilterProp='children'\r\n                onChange={onChange}\r\n                onFocus={onFocus}\r\n                onBlur={onBlur}\r\n                onSearch={onSearch}\r\n                filterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n            >\r\n                {brandState.done &&\r\n                    brandState.data.length > 0 &&\r\n                    options.map((option) => {\r\n                        return <Option value={option.value}>{option.name}</Option>;\r\n                    })}\r\n            </Select>\r\n        </Skeleton>\r\n\r\n    );\r\n};\r\n\r\nexport default Brands;\r\n","import React, { useEffect, useState,memo } from 'react';\r\nimport { useHandleFetch } from '../../hooks';\r\nimport { Select, Skeleton } from 'antd';\r\n\r\n\r\ninterface Props {\r\n    setProductIds?: any;\r\n    productIds?: any;\r\n    productListState?:any; \r\n}\r\n\r\n\r\nconst Tags = ({\r\n    setProductIds,\r\n    productIds,\r\n    productListState\r\n}: Props) => {\r\n    const [options, setoptions] = useState([]);\r\n    const [selectedOpions, setselectedOptions] = useState([]);\r\n\r\n\r\n    useEffect(() => {\r\n        if (productListState.done && productListState.data  && productListState.data.length > 0) {\r\n            // @ts-ignore\r\n            const productOptions = productListState.data.map((product) => {\r\n                return product.name\r\n            });\r\n            setoptions(productOptions);\r\n        }\r\n\r\n    }, [productListState]);\r\n\r\n\r\n\r\n    const handleChange = (selectItems) => {\r\n        setselectedOptions(selectItems);\r\n\r\n        console.log('selectedProducts', selectItems);\r\n\r\n        if (productListState.done && productListState.data.length > 0 && selectItems.length > 0) {\r\n            const selectedCategoryIds = selectItems.map((item) => {\r\n                const selectedcategory = productListState.data.find(\r\n                    (cat) => cat.name.toLowerCase() === item.toLowerCase()\r\n                );\r\n                if (selectedcategory) {\r\n                    return selectedcategory;\r\n                }\r\n            });\r\n            console.log('selectedCategoryIds', selectedCategoryIds);\r\n            setProductIds(selectedCategoryIds);\r\n        }\r\n        else {\r\n            setProductIds([])\r\n        }\r\n    }\r\n\r\n\r\n    // console.log('selectedOpions', selectedOpions);\r\n\r\n\r\n    return (\r\n        <>\r\n            <Skeleton loading={productListState.isLoading}>\r\n                {productListState.done && productListState.data.length > 0 && <Select\r\n                    mode=\"multiple\"\r\n                    placeholder=\"search products\"\r\n                    value={selectedOpions}\r\n                    onChange={handleChange}\r\n                    style={{ width: '100%' }}\r\n                >\r\n                    {options.filter(o => !selectedOpions.includes(o)).map(item => (\r\n                        <Select.Option key={item} value={item}>\r\n                            {item}\r\n                        </Select.Option>\r\n                    ))}\r\n                </Select>}\r\n            </Skeleton>\r\n\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default memo(Tags);\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n\r\nimport { useHandleFetch } from '../../hooks';\r\n\r\n\r\n\r\n// import third party ui lib\r\nimport { Upload,Radio , message, Switch, Select, Button, notification, Modal, Empty, Steps, Form, Checkbox } from 'antd';\r\n\r\nimport {\r\n\tFileOutlined,\r\n\tInboxOutlined,\r\n\tRadiusUpleftOutlined,\r\n\tRadiusUprightOutlined,\r\n\tRadiusBottomleftOutlined,\r\n\tRadiusBottomrightOutlined,\r\n\tDeleteOutlined,\r\n\tFileAddOutlined,\r\n\tPlusOutlined,\r\n\tCheckCircleOutlined,\r\n\tCaretRightOutlined,\r\n\tCaretLeftOutlined,\r\n\tCaretRightFilled,\r\n\tUserOutlined,\r\n\tInfoCircleOutlined,\r\n\tCarOutlined,\r\n\tClockCircleOutlined\r\n} from '@ant-design/icons';\r\n\r\n\r\n\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport AddNewOrderSummary from './AddNewOrderSummary';\r\nimport CustomersId from './CustomersId';\r\nimport AddProducts from './AddProducts';\r\nimport { product } from '../../state/ducks';\r\n\r\n\r\n\r\n//import utils\r\nimport {getDeliveryChargeTotal} from '.././../utils'\r\n\r\n\r\nconst { Option } = Select;\r\nconst { Step } = Steps;\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t\tmessage: message || 'Order Created',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n\tnotification.error({\r\n\t\tmessage: message || 'Something Went Wrong',\r\n\t\tdescription: '',\r\n\t\ticon: <InfoCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n\r\n\r\n});\r\n\r\n\r\n\r\n\r\nconst initialValues = {\r\n\tphone: '',\r\n\temail: '',\r\n\tfirstName: '',\r\n\tlastName: '',\r\n\taddress1: '',\r\n\taddress2: '',\r\n\tzipCode: '',\r\n\tadditionalInfo: '',\r\n\tcountry: '',\r\n\tcity: '',\r\n\r\n};\r\n\r\n\r\nconst steps = [\r\n\t{\r\n\t\ttitle: 'Order Information',\r\n\t\tcontent: '',\r\n\t\t// description: 'Add Customer & Products'\r\n\t},\r\n\t{\r\n\t\ttitle: 'Shipping Address',\r\n\r\n\t},\r\n\t{\r\n\t\ttitle: 'Confirm Order',\r\n\t\tcontent: '',\r\n\t},\r\n];\r\n\r\n\r\n\r\n\r\ninterface Props {\r\n\r\n}\r\n\r\nconst AddNewOrder = ({ }: Props) => {\r\n\r\n\tconst [addOrderState, handleOrderFetch] = useHandleFetch({}, 'addOrder');\r\n\tconst [selectedCountryValue, setselectedCountryValue] = useState('');\r\n\tconst [selectedCityValue, setselectedCityValue] = useState('');\r\n\tconst [customerId, setCustomerId] = useState([]);\r\n\r\n\tconst [countryOptions, setcountryOptions] = useState([]);\r\n\tconst [cityOptions, setcityOptions] = useState([]);\r\n\r\n\tconst [countryListState, handleCountryListFetch] = useHandleFetch(\r\n\t\t[],\r\n\t\t'countryList'\r\n\t);\r\n\r\n\tconst [cityListState, handleCityListFetch] = useHandleFetch([], 'cityList');\r\n\r\n\tconst [countryList, setCountryList] = useState([]);\r\n\tconst [cityList, setCityList] = useState([]);\r\n\tconst [current, setCurrent] = useState(0);\r\n\tconst [selectedCustomerData, setSelectedCustomerData] = useState({});\r\n\tconst [productIds, setProductIds] = useState([]);\r\n\tconst [productList, setProductList] = useState([]);\r\n\t\r\n\tconst [productListState, handleProductListFetch] = useHandleFetch({}, 'productList');\r\n\tconst [customerListState, handleCustomerListFetch] = useHandleFetch({}, 'customerList');\r\n\r\n\r\n\r\n\tconst [deliveryRegionState, handleDeliveryRegionFetch] = useHandleFetch(\r\n\t\t[],\r\n\t\t'getDeliveryRegion'\r\n\t  );\r\n\r\n\r\n\t  const [deliveryRegionName, setDeliveryRegionName] = useState('');\r\n\t  const [selectedRegion, setSelectedRegion] = useState({});\r\n\t  const [regionDeliveryCharge,setregionDeliveryCharge] = useState([]);\r\n\r\n\t  const isDeliveryChargeExists = (regions) => {\r\n\t\tif (!regions) {\r\n\t\t  return false;\r\n\t\t} else return true;\r\n\t  };\r\n\r\n\r\n\t  useEffect(() => {\r\n\t\tconst getAndSetShippingDeliveryCharge = async () => {\r\n\t\t\tconst deliveryRegionState = await handleDeliveryRegionFetch({\r\n\t\t\t  urlOptions: {\r\n\t\t\t\tplaceHolders: {\r\n\t\t\t\t  cityName: selectedCityValue,\r\n\t\t\t\t},\r\n\t\t\t  },\r\n\t\t\t});\r\n\t\t\t// @ts-ignore\r\n\t\t\tsetregionDeliveryCharge(deliveryRegionState);\r\n\t\t  };\r\n\t\r\n\t\t  getAndSetShippingDeliveryCharge();\r\n\t  }, [selectedCityValue]);\r\n\r\n\r\n\t  const handleDeviliveryRegionChange = (value) => {\r\n\t\tsetDeliveryRegionName(value);\r\n\r\n\t\tif (\r\n\t\t  isDeliveryChargeExists(\r\n\t\t\tregionDeliveryCharge.length > 0 &&\r\n\t\t\tregionDeliveryCharge\r\n\t\t  )\r\n\t\t) {\r\n\t\t  const deliveryRegions = regionDeliveryCharge; \r\n\t\r\n\t\t  const selectedRegion = deliveryRegions.find(\r\n\t\t\t(region) => region['_id'] === value\r\n\t\t  );\r\n\t\t  if (selectedRegion) {\r\n\t\t\tsetSelectedRegion(selectedRegion);\r\n\t\t  }\r\n\t\t}\r\n\t  };\r\n\t\r\n\t  useEffect(() => {\r\n\t\tif (\r\n\t\t  isDeliveryChargeExists(\r\n\t\t  regionDeliveryCharge.length > 0 &&\r\n\t\t\tregionDeliveryCharge\r\n\t\t  )\r\n\t\t) {\r\n\t\t  const deliveryRegions = regionDeliveryCharge;\r\n\t\r\n\t\t  const selectedRegion = deliveryRegions.find(\r\n\t\t\t(region, index) => 0 === index\r\n\t\t  );\r\n\t\t  if (selectedRegion) {\r\n\t\t\tsetDeliveryRegionName(selectedRegion['name']);\r\n\t\t\tsetSelectedRegion(selectedRegion);\r\n\t\t  }\r\n\t\t}\r\n\t  }, [regionDeliveryCharge]);\r\n\r\n\r\n\tconst getTotalPrice = (total, charge) => {\r\n    if (charge) {\r\n      return parseInt(total) + parseInt(charge);\r\n    } else {\r\n      return Math.floor(total);\r\n    }\r\n  };\r\n\r\n\r\n\t  console.log('deliveryRegionState',deliveryRegionState)\r\n\t  console.log('selectedRegion',selectedRegion)\r\n\t  console.log('regionDeliveryCharge',regionDeliveryCharge)\r\n\r\n\tuseEffect(() => {\r\n        const setProducts = async () => {\r\n            const productListRes = await handleProductListFetch({});\r\n        };\r\n\r\n        setProducts();\r\n    }, []);\r\n\r\n\r\n\tuseEffect(() => {\r\n        const setCustomers = async () => {\r\n            const customerListRes = await handleCustomerListFetch({});\r\n        };\r\n        setCustomers();\r\n    }, []);\r\n\r\n\r\n\r\n\tconst next = () => {\r\n\t\tconst newCurrent = current + 1;\r\n\t\tsetCurrent(newCurrent);\r\n\t}\r\n\r\n\r\n\tconst prev = () => {\r\n\t\tconst newCurrent = current - 1;\r\n\t\tsetCurrent(newCurrent);\r\n\t}\r\n\r\n\r\n\tconst handleCheckoutSubmit = async (values: any, actions: any) => {\r\n\t\t// console.log('selectedCityValue', selectedCityValue)\r\n\t\tconsole.log('values', values);\r\n\t\tconsole.log('productListcool', productList);\r\n\r\n\t\tconst products = productList && productList.length > 0 ? productList.map(item => {\r\n\t\t\treturn {\r\n\t\t\t\tproduct: item._id,\r\n\t\t\t\tquantity: item.quantity,\r\n\t\t\t\tvariation: item.variation\r\n\t\t\t}\r\n\t\t}) : [];\r\n\r\n\t\tconst addOrderRes = await handleOrderFetch({\r\n\r\n\t\t\tbody: {\r\n\t\t\t\tshippingAddress: {\r\n\t\t\t\t\tphone: values.phone,\r\n\t\t\t\t\temail: values.email,\r\n\t\t\t\t\taddress1: values.address1,\r\n\t\t\t\t\taddress2: values.address2,\r\n\t\t\t\t\tfirstName: values.firstName,\r\n\t\t\t\t\tlastName: values.lastName,\r\n\t\t\t\t\tcity: selectedCityValue || selectedCustomerData['city'],\r\n\t\t\t\t\tcountry: selectedCountryValue || selectedCustomerData['country'],\r\n\t\t\t\t},\r\n\t\t\t\titems: products,\r\n\t\t\t\tdelivery: deliveryRegionName,\r\n\t\t\t\tcustomerId: customerId\r\n\t\t\t\t// charge\r\n\t\t\t},\r\n\t\t});\r\n\r\n\t\t// @ts-ignore\r\n\t\tif (addOrderRes && addOrderRes.status === 'ok') {\r\n\t\t\topenSuccessNotification();\r\n\r\n\r\n\t\t\tactions.resetForm();\r\n\t\t}\r\n\t\telse {\r\n\t\t\topenErrorNotification(\"Couldn't create order, Something went wrong\")\r\n\t\t}\r\n\r\n\t\tactions.setSubmitting(false);\r\n\t};\r\n\r\n\r\n\r\n\tuseEffect(() => {\r\n\t\tif (!addOrderState['isLoading']) {\r\n\t\t\tconst error = addOrderState['error'];\r\n\t\t\tif (error['isError'] && Object.keys(error['error']).length > 0) {\r\n\t\t\t\tif (error['error']['registerError']) {\r\n\t\t\t\t\t// setServerErrors(error['error']['registerError']);\r\n\t\t\t\t} else if (error['error']['checkoutError']) {\r\n\t\t\t\t\t// setServerErrors(error['error']['checkoutError']);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\t// setServerErrors(error['error']);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst errors =\r\n\t\t\t\t\tObject.values(error['error']).length > 0\r\n\t\t\t\t\t\t? Object.values(error['error'])\r\n\t\t\t\t\t\t: [];\r\n\t\t\t\terrors.forEach((err, i) => {\r\n\t\t\t\t\tif (typeof err === 'string') {\r\n\t\t\t\t\t\topenErrorNotification(err);\r\n\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if (typeof err === 'object') {\r\n\t\t\t\t\t\tif (err && Object.keys(err).length > 0) {\r\n\t\t\t\t\t\t\tconst errs = Object.values(err);\r\n\t\t\t\t\t\t\terrs.forEach(err => {\r\n\t\t\t\t\t\t\t\topenErrorNotification(err);\r\n\t\t\t\t\t\t\t})\r\n\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (\r\n\t\t\t!addOrderState['isLoading'] &&\r\n\t\t\tObject.keys(addOrderState.data).length > 0\r\n\t\t) {\r\n\t\t\tif (addOrderState['data']['status'] === 'ok') {\r\n\t\t\t\topenSuccessNotification('Order Created Successfully');\r\n\t\t\t\t// history.push({\r\n\t\t\t\t//   pathname: '/orderDetails',\r\n\t\t\t\t//   state: checkoutState['data']\r\n\t\t\t\t// })\r\n\r\n\t\t\t\t// clearCart();\r\n\t\t\t\t// setIsModalShown(true);\r\n\t\t\t}\r\n\t\t}\r\n\t}, [addOrderState]);\r\n\r\n\r\n\r\n\r\n\tconst onChangeCity = (value) => {\r\n\t\tsetselectedCityValue(value);\r\n\t}\r\n\r\n\tconst onChangeCountry = (value) => {\r\n\t\tsetselectedCountryValue(value);\r\n\t};\r\n\r\n\r\n\r\n\tuseEffect(() => {\r\n\t\tconst setCountries = async () => {\r\n\t\t\tconst CountryListRes = await handleCountryListFetch({});\r\n\r\n\t\t\t// @ts-ignore\r\n\t\t\tif (CountryListRes && CountryListRes.length > 0) {\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\tconst countryOptions = CountryListRes.map((country) => {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tvalue: country.id,\r\n\t\t\t\t\t\tname: country.name\r\n\t\t\t\t\t};\r\n\t\t\t\t});\r\n\t\t\t\tsetcountryOptions(countryOptions);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tsetCountries();\r\n\t}, []);\r\n\r\n\r\n\tuseEffect(() => {\r\n\t\tconst setCities = async () => {\r\n\t\t\tconst cityListRes = await handleCityListFetch({\r\n\t\t\t\turlOptions: {\r\n\t\t\t\t\tplaceHolders: {\r\n\t\t\t\t\t\tcountry: selectedCountryValue,\r\n\t\t\t\t\t},\r\n\t\t\t\t},\r\n\t\t\t});\r\n\r\n\t\t\t// @ts-ignore\r\n\t\t\tif (cityListRes && cityListRes.length > 0) {\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\tconst cityOptions = cityListRes.map((city) => {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tvalue: city.name,\r\n\t\t\t\t\t\tname: city.name\r\n\t\t\t\t\t};\r\n\t\t\t\t});\r\n\t\t\t\tsetcityOptions(cityOptions);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tsetCities();\r\n\t}, [selectedCountryValue]);\r\n\r\n\r\n\r\n\tconst getisSubmitButtonDisabled = (values, isValid) => {\r\n\t\tif (!isValid ||\r\n\t\t\t!values.name ||\r\n\t\t\t!values.pickUpLocation ||\r\n\t\t\t!values.time) {\r\n\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\r\n\r\n\tconst handleAddDeliveryCharge = () => {\r\n\r\n\t};\r\n\r\n\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        if (productIds && productIds.length > 0 && productList) {\r\n            if (productIds.length > productList.length) {\r\n                const variation = productIds[productIds.length - 1]['pricing'] && productIds[productIds.length - 1]['pricing'].length > 0 && productIds[productIds.length - 1]['pricing'][0]['_id'];\r\n                console.log('variation', variation)\r\n\r\n                setProductList([...productList, {\r\n                    ...productIds[productIds.length - 1],\r\n                    _id: productIds[productIds.length - 1]['id'],\r\n                    variation: variation,\r\n                    quantity: 1\r\n                }]);\r\n            }\r\n\r\n\r\n            else if (productIds.length < productList.length) {\r\n                console.log('productIds', productIds);\r\n                console.log('productList', productList);\r\n\r\n                const newProductList = productList.filter(item => {\r\n                    let isTrue = false;\r\n                    productIds.forEach(product => {\r\n                        if (product.id === item._id) {\r\n                            isTrue = true;\r\n                        }\r\n                    });\r\n                    return isTrue;\r\n                })\r\n                setProductList(newProductList);\r\n\r\n            }\r\n\r\n        }\r\n        else {\r\n            setProductList([]);\r\n        }\r\n        // console.log('productIds', productIds)\r\n\r\n\r\n    }, [productIds])\r\n\r\n\r\n\t// console.log('productList', productList)\r\n\tconsole.log('selectedCustomerData', selectedCustomerData); \r\n\r\n\tconst radioStyle = {\r\n\t\tdisplay: 'block',\r\n\t\theight: '30px',\r\n\t\tlineHeight: '30px',\r\n\t  };\r\n\r\n\treturn (\r\n\t\t<Formik\r\n\t\t\tonSubmit={(values, actions) => handleCheckoutSubmit(values, actions)}\r\n\t\t\tvalidationSchema={validationSchema}\r\n\t\t\tvalidateOnBlur={false}\r\n\t\t\tenableReinitialize={true}\r\n\t\t\tinitialValues={\r\n\t\t\t\t{ ...initialValues, ...selectedCustomerData }\r\n\t\t\t}\r\n\t\t>\r\n\t\t\t{({\r\n\t\t\t\thandleChange,\r\n\t\t\t\tvalues,\r\n\t\t\t\thandleSubmit,\r\n\t\t\t\terrors,\r\n\t\t\t\tisValid,\r\n\t\t\t\tisSubmitting,\r\n\t\t\t\ttouched,\r\n\t\t\t\thandleBlur,\r\n\t\t\t\tsetFieldTouched,\r\n\t\t\t\thandleReset,\r\n\t\t\t}) => (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<div className='addOrderContainer'>\r\n\t\t\t\t\t\t\t<h3>\r\n\t\t\t\t\t\t\t\tAdd New Order\r\n\t\t\t\t\t\t\t</h3>\r\n\t\t\t\t\t\t\t<div className='addOrderContainer__container'>\r\n\t\t\t\t\t\t\t\t<Steps current={current}>\r\n\t\t\t\t\t\t\t\t\t{steps.map(item => (\r\n\t\t\t\t\t\t\t\t\t\t<Step\r\n\t\t\t\t\t\t\t\t\t\t\tkey={item.title}\r\n\t\t\t\t\t\t\t\t\t\t\ttitle={item.title} />\r\n\t\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t\t</Steps>\r\n\r\n\t\t\t\t\t\t\t\t{current === 0 && (\r\n\t\t\t\t\t\t\t\t\t<div className='addOrderContainer__container-OrderInfoContainer'>\r\n\t\t\t\t\t\t\t\t\t\t<div className='addOrderContainer__container-OrderInfoContainer-left'>\r\n\t\t\t\t\t\t\t\t\t\t\t<h3 \r\n\t\t\t\t\t\t\t\t\t\t\tstyle={{}}\r\n\t\t\t\t\t\t\t\t\t\t\tclassName='addOrderContainer-sectionTitle'>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<UserOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n                                            Customers And products\r\n                                           </h3>\r\n\r\n\t\t\t\t\t\t\t\t\t\t   <div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\tmarginTop: '15px'\r\n\t\t\t\t\t\t\t\t\t\t\t}}></div>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<h4 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\t\t\t\t\t\tCustomer\r\n\t\t\t\t\t\t\t\t\t\t\t</h4>\r\n\t\t\t\t\t\t\t\t\t\t\t<CustomersId\r\n\t\t\t\t\t\t\t\t\t\t    \tcustomerListState={customerListState}\r\n\t\t\t\t\t\t\t\t\t\t\t\tsetSelectedCustomerData={setSelectedCustomerData}\r\n\t\t\t\t\t\t\t\t\t\t\t\tsetCustomerId={setCustomerId} />\r\n\t\t\t\t\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\tmarginTop: '15px'\r\n\t\t\t\t\t\t\t\t\t\t\t}}></div>\r\n\t\t\t\t\t\t\t\t\t\t\t<h4 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\t\t\t\t\t\tProducts\r\n\t\t\t\t\t\t\t\t\t\t\t</h4>\r\n\t\t\t\t\t\t\t\t\t\t\t<AddProducts\r\n\t\t\t\t\t\t\t\t\t\t    \tproductListState={productListState}\r\n\t\t\t\t\t\t\t\t\t\t\t\tproductIds={productIds}\r\n\t\t\t\t\t\t\t\t\t\t\t\tsetProductIds={setProductIds} />\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t<div className='addOrderContainer__container-OrderInfoContainer-right'>\r\n\t\t\t\t\t\t\t\t\t\t\t<AddNewOrderSummary\r\n\t\t\t\t\t\t\t\t\t\t\t\tsetProductList={setProductList}\r\n\t\t\t\t\t\t\t\t\t\t\t\tproductList={productList} />\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t)}\r\n\r\n\r\n\t\t\t\t\t\t\t\t{current === 1 && (\r\n\t\t\t\t\t\t\t\t\t<div className='addOrderContainer__container-address'>\r\n\r\n\t\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs'>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tlabel='First Name'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.firstName}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tname='firstName'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.firstName && errors.firstName) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addOrderState.error['error']['firstName'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.firstName && errors.firstName) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addOrderState.error['error']['firstName'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('firstName');\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tlabel='Last Name'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.lastName}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tname='lastName'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.lastName && errors.lastName) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addOrderState.error['error']['lastName'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.lastName && errors.lastName) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addOrderState.error['error']['lastName'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('lastName');\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs'>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tlabel='Phone'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.phone}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tname='phone'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.phone && errors.phone) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addOrderState.error['error']['phone'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.phone && errors.phone) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addOrderState.error['error']['phone'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('phone');\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tlabel='Email'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.email}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tname='email'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.email && errors.email) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addOrderState.error['error']['email'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.email && errors.email) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addOrderState.error['error']['email'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('email');\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs'>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tCountry\r\n\t\t\t\t\t\t\t\t\t</h3>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Form.Item\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalidateStatus={(addOrderState.error['error']['country']) ? \"error\" : \"\"}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\thelp={addOrderState.error['error']['country']}\r\n\t\t\t\t\t\t\t\t\t\t\t\t// noStyle={true}\r\n\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Select\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tdefaultValue={values.country}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tnotFoundContent={<Empty description='No Country Found' image={Empty.PRESENTED_IMAGE_SIMPLE} />}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tshowSearch\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{ width: '100%' }}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder='Select a Country'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\toptionFilterProp='children'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={onChangeCountry}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tfilterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{countryListState.done &&\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcountryListState.data.length > 0 &&\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcountryOptions.map((option) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn <Option value={option.value}>{option.name}</Option>;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Select>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Form.Item>\r\n\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tCity\r\n                                    </h3>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Form.Item\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t// noStyle={true}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalidateStatus={(addOrderState.error['error']['city']) ? \"error\" : \"\"}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\thelp={addOrderState.error['error']['city']}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Select\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tdefaultValue={values.city}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='selectClassName'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tnotFoundContent={<Empty description='First Select a Country' image={Empty.PRESENTED_IMAGE_SIMPLE} />}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tshowSearch\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{ width: '100%' }}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder='Select a city'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\toptionFilterProp='children'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={onChangeCity}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tfilterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{cityListState.done &&\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcityListState.data.length > 0 &&\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcityOptions.map((option) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn <Option value={option.value}>{option.name}</Option>;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Select>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Form.Item>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\t\t\t\tmarginTop: '12px'\r\n\t\t\t\t\t\t\t\t\t\t}}></div>\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs'>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tlabel='Address'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.address1}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tname='address1'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.address1 && errors.address1) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addOrderState.error['error']['address1'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.address1 && errors.address1) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addOrderState.error['error']['address1'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('address1');\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tlabel='Address 2'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.address2}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tname='address2'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.address2 && errors.address2) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addOrderState.error['error']['address2'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.address2 && errors.address2) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addOrderState.error['error']['address2'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('address2');\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t)}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t{current === 10 && (\r\n\t\t\t\t\t\t\t\t\t<div className='addOrderContainer__container-address'>\r\n\r\n\t\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs'>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tlabel='First Name'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.firstName}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tname='firstName'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.firstName && errors.firstName) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addOrderState.error['error']['firstName'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.firstName && errors.firstName) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addOrderState.error['error']['firstName'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('firstName');\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tlabel='Last Name'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.lastName}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tname='lastName'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.lastName && errors.lastName) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addOrderState.error['error']['lastName'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.lastName && errors.lastName) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addOrderState.error['error']['lastName'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('lastName');\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs'>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tlabel='Phone'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.phone}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tname='phone'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.phone && errors.phone) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addOrderState.error['error']['phone'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.phone && errors.phone) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addOrderState.error['error']['phone'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('phone');\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tlabel='Email'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.email}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tname='email'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.email && errors.email) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addOrderState.error['error']['email'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.email && errors.email) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addOrderState.error['error']['email'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('email');\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs'>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tCountry\r\n\t\t\t\t\t\t\t\t\t</h3>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Form.Item\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalidateStatus={(addOrderState.error['error']['country']) ? \"error\" : \"\"}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\thelp={addOrderState.error['error']['country']}\r\n\t\t\t\t\t\t\t\t\t\t\t\t// noStyle={true}\r\n\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Select\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tdefaultValue={'Comoros'}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tnotFoundContent={<Empty description='No Country Found' image={Empty.PRESENTED_IMAGE_SIMPLE} />}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tshowSearch\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{ width: '100%' }}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder='Select a Country'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\toptionFilterProp='children'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={onChangeCountry}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tfilterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{countryListState.done &&\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcountryListState.data.length > 0 &&\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcountryOptions.map((option) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn <Option value={option.value}>{option.name}</Option>;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Select>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Form.Item>\r\n\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tCity\r\n                                    </h3>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Form.Item\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t// noStyle={true}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalidateStatus={(addOrderState.error['error']['city']) ? \"error\" : \"\"}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\thelp={addOrderState.error['error']['city']}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Select\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tdefaultValue={values.city}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='selectClassName'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tnotFoundContent={<Empty description='First Select a Country' image={Empty.PRESENTED_IMAGE_SIMPLE} />}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tshowSearch\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{ width: '100%' }}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder='Select a city'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\toptionFilterProp='children'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={onChangeCity}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tfilterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{cityListState.done &&\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcityListState.data.length > 0 &&\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcityOptions.map((option) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn <Option value={option.value}>{option.name}</Option>;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Select>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Form.Item>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\t\t\t\tmarginTop: '12px'\r\n\t\t\t\t\t\t\t\t\t\t}}></div>\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs'>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tlabel='Address'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.address1}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tname='address1'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.address1 && errors.address1) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addOrderState.error['error']['address1'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.address1 && errors.address1) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addOrderState.error['error']['address1'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('address1');\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tlabel='More specific address'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.address2}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tname='address2'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.address2 && errors.address2) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addOrderState.error['error']['address2'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.address2 && errors.address2) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addOrderState.error['error']['address2'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('address2');\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t)}\r\n\r\n\r\n\t\t\t\t\t\t\t\t{current === 2 && (\r\n\t\t\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\t\t\tdisplay: 'flex',\r\n\t\t\t\t\t\t\t\t\t\tjustifyContent: 'center',\r\n\t\t\t\t\t\t\t\t\t\tmarginTop: '40px',\r\n\t\t\t\t\t\t\t\t\t\talignItems: 'center',\r\n\t\t\t\t\t\t\t\t\t\tflexDirection: \"column\"\r\n\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t<AddNewOrderSummary\r\n\t\t\t\t\t\t\t\t\t\t\tsetProductList={setProductList}\r\n\t\t\t\t\t\t\t\t\t\t\tproductList={productList} />\r\n\r\n\t\t\t\t\t\t\t\t\t\t<div>\r\n\r\n\t\t\t\t\t\t\t\t\t\t<h3 \r\n\t\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\t\tmarginTop:'20px',\r\n\t\t\t\t\t\t\t\t\t\t\tdisplay:'block'\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\tclassName='addOrderContainer-sectionTitle'>\r\n\t\t\t\t\t\t\t\t\t\t\t<span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<CarOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\tDelivery Region List ({selectedCityValue})\r\n\t\t\t\t\t\t\t\t\t    </h3>\r\n\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t<Radio.Group\r\n\t\t\t\t\t\t\t\t\t\tvalue={deliveryRegionName}\r\n\t\t\t\t\t\t\t\t\t\tdefaultValue={deliveryRegionName}\r\n\t\t\t\t\t\t\t\t\t\t name=\"radiogroup\" >\r\n\t\t\t\t\t\t\t\t\t\t\t {regionDeliveryCharge.map(deliveryRegionItem => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t return (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div \r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => handleDeviliveryRegionChange(deliveryRegionItem._id)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='deliveryRegionLabelContainer'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className='deliveryRegionLabelContainer__radio'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Radio \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={deliveryRegionItem._id}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Radio>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div className='deliveryRegionLabelContainer__info'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<h3>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{deliveryRegionItem.name}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</h3>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<h4>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<CarOutlined />\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{deliveryRegionItem.pickUpLocation}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</h4>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<h4>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<ClockCircleOutlined />\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{deliveryRegionItem.time}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</h4>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t )\r\n\t\t\t\t\t\t\t\t\t\t\t })}\r\n  \t\t\t\t\t\t\t\t\t\t</Radio.Group>\r\n\t\t\t\t\t\t\t\t\t\t</div>\t\t\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\t\t\t\tdisplay: 'flex',\r\n\t\t\t\t\t\t\t\t\t\t\tmarginTop: '40px',\r\n\t\t\t\t\t\t\t\t\t\t\tmarginBottom: '50px'\r\n\r\n\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t\t{/* <h3\r\n\t\t\t\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tcolor: '#666'\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\tTotal\r\n\t\t\t\t\t\t\t\t\t\t\t\t</h3>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<h3\r\n\t\t\t\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tcolor: '#333'\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t500\r\n\t\t\t\t\t\t\t\t\t\t\t\t</h3> */}\r\n\t\t\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\t\t\tloading={addOrderState.isLoading}\r\n\t\t\t\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tmarginTop: '10px',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tmarginLeft: '15px'\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\tclassName='btnPrimaryClassNameoutline-blue'\r\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={(e: any) => handleSubmit(e)}\r\n\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\tPlace Order\r\n\t\t\t\t\t\t\t\t\t\t\t<CaretRightOutlined />\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t)}\r\n\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\t\tdisplay: 'flex',\r\n\t\t\t\t\t\t\t\t\tjustifyContent: 'space-between'\r\n\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t{current > 0 && (\r\n\t\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\t\tstyle={{ marginRight: '15px', marginTop: '10px' }}\r\n\t\t\t\t\t\t\t\t\t\t\t// type=\"primary\"\r\n\t\t\t\t\t\t\t\t\t\t\tclassName='btnPrimaryClassNameoutline'\r\n\t\t\t\t\t\t\t\t\t\t\ttype=\"primary\" onClick={() => prev()}\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t<CaretLeftOutlined />\tPrevious\r\n\r\n\t\t\t\t\t\t\t\t\t\t</Button>\r\n\r\n\t\t\t\t\t\t\t\t\t)}\r\n\r\n\t\t\t\t\t\t\t\t\t{current < steps.length - 1 && (\r\n\t\t\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tmarginTop: '10px'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='btnPrimaryClassNameoutline'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"primary\" onClick={() => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (current === 1) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetCurrent(2)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tnext()\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tNext< CaretRightOutlined />\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Button>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t{/* {current === 1 && <Button\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tmarginTop: '10px',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tmarginLeft: '15px'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='btnPrimaryClassNameoutline'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"primary\" onClick={() => setCurrent(2)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tUse different address< CaretRightOutlined />\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t\t\t\t\t} */}\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t\t\t)}\r\n\r\n\t\t\t\t\t\t\t\t\t{/* {current === steps.length - 1 && (\r\n\t\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\t\t\tmarginTop: '10px',\r\n\t\t\t\t\t\t\t\t\t\t\t\tmarginLeft: '15px'\r\n\t\t\t\t\t\t\t\t\t\t\t}}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\tclassName='btnPrimaryClassNameoutline'\r\n\t\t\t\t\t\t\t\t\t\t\ttype=\"primary\" onClick={(e: any) => handleSubmit(e)}\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\tPlace Order\r\n\t\t\t\t\t\t\t\t\t\t\t<CaretRightOutlined />\r\n\r\n\t\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t\t)} */}\r\n\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t{/* <div className='addOrderContainer__container-left'>\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className='addOrderContainer__container-right'>\r\n\t\t\t\t\t\t\t\t\t<AddNewOrderSummary />\r\n\t\t\t\t\t\t\t\t</div> */}\r\n\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t</>\r\n\t\t\t\t)}\r\n\t\t</Formik>\r\n\r\n\r\n\r\n\r\n\t);\r\n};\r\n\r\nexport default AddNewOrder;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Modal, Select, notification, Empty, Spin } from 'antd';\r\nimport * as Yup from 'yup';\r\nimport { CheckCircleOutlined, InfoCircleOutlined } from '@ant-design/icons';\r\n\r\n// import components\r\nimport { useHandleFetch } from '../../hooks';\r\n\r\n\r\nconst { Option } = Select;\r\n\r\n\r\nconst QuickEdit = ({ id, setShowInvoice, showInvoice }) => {\r\n    const [orderDetailState, handleOrderDetailFetch] = useHandleFetch({}, 'orderDetail');\r\n\r\n    useEffect(() => {\r\n        const getOrderDetail = async () => {\r\n            await handleOrderDetailFetch({\r\n                urlOptions: {\r\n                    placeHolders: {\r\n                        id\r\n                    }\r\n                }\r\n            })\r\n        };\r\n\r\n        getOrderDetail();\r\n\r\n    }, [id]);\r\n\r\n\r\n    console.log('orderDetailState', orderDetailState)\r\n\r\n    const handleOk = () => {\r\n        window.print()\r\n    }\r\n\r\n    return (\r\n        <Modal\r\n            title=\"Invoice\"\r\n            visible={showInvoice}\r\n            bodyStyle={{\r\n                margin: '0',\r\n                padding: '10px'\r\n            }}\r\n            onCancel={() => setShowInvoice(false)}\r\n            width={'60vw'}\r\n            okText='Print'\r\n            onOk={() => handleOk()}\r\n        >\r\n            {orderDetailState.isLoading && <Spin />}\r\n            {orderDetailState.data && Object.keys(orderDetailState.data).length > 0 && (\r\n                <>\r\n                    <div className='invoiceContainer'>\r\n                        <table\r\n                            width=\"100%\"\r\n                            border={0}\r\n                            cellPadding={0}\r\n                            cellSpacing={0}\r\n                            align=\"center\"\r\n                            className=\"fullTable\"\r\n                            bgcolor=\"#e1e1e1\"\r\n                        >\r\n                            <tbody>\r\n                                <tr>\r\n                                    <td height={20} />\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>\r\n                                        <table\r\n                                            width={600}\r\n                                            border={0}\r\n                                            cellPadding={0}\r\n                                            cellSpacing={0}\r\n                                            align=\"center\"\r\n                                            className=\"fullTable\"\r\n                                            bgcolor=\"#ffffff\"\r\n                                            style={{ borderRadius: \"10px 10px 0 0\" }}\r\n                                        >\r\n                                            <tbody>\r\n                                                <tr className=\"hiddenMobile\">\r\n                                                    <td height={40} />\r\n                                                </tr>\r\n                                                <tr className=\"visibleMobile\">\r\n                                                    <td height={30} />\r\n                                                </tr>\r\n                                                <tr>\r\n                                                    <td>\r\n                                                        <table\r\n                                                            width={480}\r\n                                                            border={0}\r\n                                                            cellPadding={0}\r\n                                                            cellSpacing={0}\r\n                                                            align=\"center\"\r\n                                                            className=\"fullPadding\"\r\n                                                        >\r\n                                                            <tbody>\r\n                                                                <tr>\r\n                                                                    <td>\r\n                                                                        <table\r\n                                                                            width={220}\r\n                                                                            border={0}\r\n                                                                            cellPadding={0}\r\n                                                                            cellSpacing={0}\r\n                                                                            align=\"left\"\r\n                                                                            className=\"col\"\r\n                                                                        >\r\n                                                                            <tbody>\r\n                                                                                {/* <tr>\r\n                                                                                    <td align=\"left\">\r\n                                                                                        {\" \"}\r\n                                                                                        // <img\r\n                                                                                        //     src=\"http://www.supah.it/dribbble/017/logo.png\"\r\n                                                                                        //     width={32}\r\n                                                                                        //     height={32}\r\n                                                                                        //     alt=\"logo\"\r\n                                                                                        //     border={0}\r\n                                                                                        // />\r\n                                                                                    </td>\r\n                                                                                </tr> */}\r\n                                                                                <tr className=\"hiddenMobile\">\r\n                                                                                    <td height={40} />\r\n                                                                                </tr>\r\n                                                                                <tr className=\"visibleMobile\">\r\n                                                                                    <td height={20} />\r\n                                                                                </tr>\r\n                                                                                <tr>\r\n                                                                                    <td\r\n                                                                                        style={{\r\n                                                                                            fontSize: 12,\r\n                                                                                            color: \"#5b5b5b\",\r\n                                                                                            fontFamily: '\"Open Sans\", sans-serif',\r\n                                                                                            lineHeight: 1.6,\r\n                                                                                            verticalAlign: \"top\",\r\n                                                                                            textAlign: \"left\"\r\n                                                                                        }}\r\n                                                                                    >\r\n                                                                                        Hello, {orderDetailState.data['name']}\r\n                                                                                        <br /> Thank you for your order.\r\n                                </td>\r\n                                                                                </tr>\r\n                                                                            </tbody>\r\n                                                                        </table>\r\n                                                                        <table\r\n                                                                            width={220}\r\n                                                                            border={0}\r\n                                                                            cellPadding={0}\r\n                                                                            cellSpacing={0}\r\n                                                                            align=\"right\"\r\n                                                                            className=\"col\"\r\n                                                                        >\r\n                                                                            <tbody>\r\n                                                                                <tr className=\"visibleMobile\">\r\n                                                                                    <td height={20} />\r\n                                                                                </tr>\r\n                                                                                <tr>\r\n                                                                                    <td height={5} />\r\n                                                                                </tr>\r\n                                                                                <tr>\r\n                                                                                    <td\r\n                                                                                        style={{\r\n                                                                                            fontSize: 21,\r\n                                                                                            color: \"#ff0000\",\r\n                                                                                            letterSpacing: \"-1px\",\r\n                                                                                            fontFamily: '\"Open Sans\", sans-serif',\r\n                                                                                            lineHeight: 1.6,\r\n                                                                                            verticalAlign: \"top\",\r\n                                                                                            textAlign: \"right\"\r\n                                                                                        }}\r\n                                                                                    >\r\n                                                                                        Invoice\r\n                                </td>\r\n                                                                                </tr>\r\n                                                                                <tr></tr>\r\n                                                                                <tr className=\"hiddenMobile\">\r\n                                                                                    <td height={50} />\r\n                                                                                </tr>\r\n                                                                                <tr className=\"visibleMobile\">\r\n                                                                                    <td height={20} />\r\n                                                                                </tr>\r\n                                                                                <tr>\r\n                                                                                    <td\r\n                                                                                        style={{\r\n                                                                                            fontSize: 12,\r\n                                                                                            color: \"#5b5b5b\",\r\n                                                                                            fontFamily: '\"Open Sans\", sans-serif',\r\n                                                                                            lineHeight: 1.6,\r\n                                                                                            verticalAlign: \"top\",\r\n                                                                                            textAlign: \"right\"\r\n                                                                                        }}\r\n                                                                                    >\r\n                                                                                        <small>ORDER</small> #{orderDetailState.data['id']}\r\n                                                                                        <br />\r\n                                                                                        <small>\r\n                                                                                            {orderDetailState.data['date_created']}\r\n\r\n                                                                                        </small>\r\n                                                                                    </td>\r\n                                                                                </tr>\r\n                                                                            </tbody>\r\n                                                                        </table>\r\n                                                                    </td>\r\n                                                                </tr>\r\n                                                            </tbody>\r\n                                                        </table>\r\n                                                    </td>\r\n                                                </tr>\r\n                                            </tbody>\r\n                                        </table>\r\n                                    </td>\r\n                                </tr>\r\n                            </tbody>\r\n                        </table>\r\n                        {/* /Header */}\r\n                        {/* Order Details */}\r\n                        {orderDetailState.data && orderDetailState.data['products'] && orderDetailState.data['products'].length > 0 && (\r\n                            <table\r\n                                width=\"100%\"\r\n                                border={0}\r\n                                cellPadding={0}\r\n                                cellSpacing={0}\r\n                                align=\"center\"\r\n                                className=\"fullTable\"\r\n                                bgcolor=\"#e1e1e1\"\r\n                            >\r\n                                <tbody>\r\n                                    <tr>\r\n                                        <td>\r\n                                            <table\r\n                                                width={600}\r\n                                                border={0}\r\n                                                cellPadding={0}\r\n                                                cellSpacing={0}\r\n                                                align=\"center\"\r\n                                                className=\"fullTable\"\r\n                                                bgcolor=\"#ffffff\"\r\n                                            >\r\n                                                <tbody>\r\n                                                    <tr></tr>\r\n                                                    <tr className=\"hiddenMobile\">\r\n                                                        <td height={60} />\r\n                                                    </tr>\r\n                                                    <tr className=\"visibleMobile\">\r\n                                                        <td height={40} />\r\n                                                    </tr>\r\n                                                    <tr>\r\n                                                        <td>\r\n                                                            <table\r\n                                                                width={480}\r\n                                                                border={0}\r\n                                                                cellPadding={0}\r\n                                                                cellSpacing={0}\r\n                                                                align=\"center\"\r\n                                                                className=\"fullPadding\"\r\n                                                            >\r\n                                                                <tbody>\r\n                                                                    <tr>\r\n                                                                        <th\r\n                                                                            style={{\r\n                                                                                fontSize: 12,\r\n                                                                                fontFamily: '\"Open Sans\", sans-serif',\r\n                                                                                color: \"#5b5b5b\",\r\n                                                                                fontWeight: \"normal\",\r\n                                                                                lineHeight: 1.6,\r\n                                                                                verticalAlign: \"top\",\r\n                                                                                padding: \"0 10px 7px 0\"\r\n                                                                            }}\r\n                                                                            width=\"52%\"\r\n                                                                            align=\"left\"\r\n                                                                        >\r\n                                                                            Name\r\n                        </th>\r\n\r\n                                                                        <th\r\n                                                                            style={{\r\n                                                                                fontSize: 12,\r\n                                                                                fontFamily: '\"Open Sans\", sans-serif',\r\n                                                                                color: \"#5b5b5b\",\r\n                                                                                fontWeight: \"normal\",\r\n                                                                                lineHeight: 1.6,\r\n                                                                                verticalAlign: \"top\",\r\n                                                                                padding: \"0 0 7px\"\r\n                                                                            }}\r\n                                                                            align=\"center\"\r\n                                                                        >\r\n                                                                            Quantity\r\n                        </th>\r\n                                                                        <th\r\n                                                                            style={{\r\n                                                                                fontSize: 12,\r\n                                                                                fontFamily: '\"Open Sans\", sans-serif',\r\n                                                                                color: \"#1e2b33\",\r\n                                                                                fontWeight: \"normal\",\r\n                                                                                lineHeight: 1.6,\r\n                                                                                verticalAlign: \"top\",\r\n                                                                                padding: \"0 0 7px\"\r\n                                                                            }}\r\n                                                                            align=\"right\"\r\n                                                                        >\r\n                                                                            Subtotal\r\n                        </th>\r\n                                                                    </tr>\r\n\r\n\r\n                                                                    {orderDetailState.data['products'].map(item => {\r\n                                                                        return (\r\n                                                                            <>\r\n                                                                                <tr>\r\n                                                                                    <td\r\n                                                                                        height={1}\r\n                                                                                        style={{ background: \"#bebebe\" }}\r\n                                                                                        colSpan={4}\r\n                                                                                    />\r\n                                                                                </tr>\r\n                                                                                <tr>\r\n                                                                                    <td height={10} colSpan={4} />\r\n                                                                                </tr>\r\n                                                                                <tr>\r\n                                                                                    <td\r\n                                                                                        style={{\r\n                                                                                            fontSize: 12,\r\n                                                                                            fontFamily: '\"Open Sans\", sans-serif',\r\n                                                                                            color: \"#ff0000\",\r\n                                                                                            lineHeight: 1.6,\r\n                                                                                            verticalAlign: \"top\",\r\n                                                                                            padding: \"10px 0\"\r\n                                                                                        }}\r\n                                                                                        className=\"article\"\r\n                                                                                    >\r\n                                                                                        {item.name}\r\n                                                                                    </td>\r\n\r\n                                                                                    <td\r\n                                                                                        style={{\r\n                                                                                            fontSize: 12,\r\n                                                                                            fontFamily: '\"Open Sans\", sans-serif',\r\n                                                                                            color: \"#646a6e\",\r\n                                                                                            lineHeight: 1.6,\r\n                                                                                            verticalAlign: \"top\",\r\n                                                                                            padding: \"10px 0\"\r\n                                                                                        }}\r\n                                                                                        align=\"center\"\r\n                                                                                    >\r\n                                                                                        {item.quantity}\r\n                                                                                    </td>\r\n                                                                                    <td\r\n                                                                                        style={{\r\n                                                                                            fontSize: 12,\r\n                                                                                            fontFamily: '\"Open Sans\", sans-serif',\r\n                                                                                            color: \"#1e2b33\",\r\n                                                                                            lineHeight: 1.6,\r\n                                                                                            verticalAlign: \"top\",\r\n                                                                                            padding: \"10px 0\"\r\n                                                                                        }}\r\n                                                                                        align=\"right\"\r\n                                                                                    >\r\n                                                                                        {item.quantity * item.price}\r\n                                                                                    </td>\r\n                                                                                </tr>\r\n                                                                            </>\r\n                                                                        )\r\n                                                                    })}\r\n\r\n\r\n                                                                    <tr>\r\n                                                                        <td\r\n                                                                            height={1}\r\n                                                                            colSpan={4}\r\n                                                                            style={{ borderBottom: \"1px solid #e4e4e4\" }}\r\n                                                                        />\r\n                                                                    </tr>\r\n                                                                </tbody>\r\n                                                            </table>\r\n                                                        </td>\r\n                                                    </tr>\r\n                                                    <tr>\r\n                                                        <td height={20} />\r\n                                                    </tr>\r\n                                                </tbody>\r\n                                            </table>\r\n                                        </td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </table>\r\n                        )}\r\n                        {/* /Order Details */}\r\n                        {/* Total */}\r\n                        <table\r\n                            width=\"100%\"\r\n                            border={0}\r\n                            cellPadding={0}\r\n                            cellSpacing={0}\r\n                            align=\"center\"\r\n                            className=\"fullTable\"\r\n                            bgcolor=\"#e1e1e1\"\r\n                        >\r\n                            <tbody>\r\n                                <tr>\r\n                                    <td>\r\n                                        <table\r\n                                            width={600}\r\n                                            border={0}\r\n                                            cellPadding={0}\r\n                                            cellSpacing={0}\r\n                                            align=\"center\"\r\n                                            className=\"fullTable\"\r\n                                            bgcolor=\"#ffffff\"\r\n                                        >\r\n                                            <tbody>\r\n                                                <tr>\r\n                                                    <td>\r\n                                                        {/* Table Total */}\r\n                                                        <table\r\n                                                            width={480}\r\n                                                            border={0}\r\n                                                            cellPadding={0}\r\n                                                            cellSpacing={0}\r\n                                                            align=\"center\"\r\n                                                            className=\"fullPadding\"\r\n                                                        >\r\n                                                            <tbody>\r\n                                                                <tr>\r\n                                                                    <td\r\n                                                                        style={{\r\n                                                                            fontSize: 12,\r\n                                                                            fontFamily: '\"Open Sans\", sans-serif',\r\n                                                                            color: \"#646a6e\",\r\n                                                                            lineHeight: 1.6,\r\n                                                                            verticalAlign: \"top\",\r\n                                                                            textAlign: \"right\"\r\n                                                                        }}\r\n                                                                    >\r\n                                                                        Total\r\n                        </td>\r\n                                                                    <td\r\n                                                                        style={{\r\n                                                                            fontSize: 12,\r\n                                                                            fontFamily: '\"Open Sans\", sans-serif',\r\n                                                                            color: \"#646a6e\",\r\n                                                                            lineHeight: 1.6,\r\n                                                                            verticalAlign: \"top\",\r\n                                                                            textAlign: \"right\",\r\n                                                                            whiteSpace: \"nowrap\"\r\n                                                                        }}\r\n                                                                        width={80}\r\n                                                                    >\r\n                                                                        {orderDetailState.data['total']}\r\n                                                                    </td>\r\n                                                                </tr>\r\n                                                                {/* <tr>\r\n                                                                    <td\r\n                                                                        style={{\r\n                                                                            fontSize: 12,\r\n                                                                            fontFamily: '\"Open Sans\", sans-serif',\r\n                                                                            color: \"#646a6e\",\r\n                                                                            lineHeight: 1.6,\r\n                                                                            verticalAlign: \"top\",\r\n                                                                            textAlign: \"right\"\r\n                                                                        }}\r\n                                                                    >\r\n                                                                        Shipping &amp; Handling\r\n                        </td>\r\n                                                                    <td\r\n                                                                        style={{\r\n                                                                            fontSize: 12,\r\n                                                                            fontFamily: '\"Open Sans\", sans-serif',\r\n                                                                            color: \"#646a6e\",\r\n                                                                            lineHeight: 1.6,\r\n                                                                            verticalAlign: \"top\",\r\n                                                                            textAlign: \"right\"\r\n                                                                        }}\r\n                                                                    >\r\n                                                                        $15.00\r\n                        </td>\r\n                                                                </tr> */}\r\n                                                                {/* <tr>\r\n                                                                    <td\r\n                                                                        style={{\r\n                                                                            fontSize: 12,\r\n                                                                            fontFamily: '\"Open Sans\", sans-serif',\r\n                                                                            color: \"#000\",\r\n                                                                            lineHeight: 1.6,\r\n                                                                            verticalAlign: \"top\",\r\n                                                                            textAlign: \"right\"\r\n                                                                        }}\r\n                                                                    >\r\n                                                                        <strong>Grand Total (Incl.Tax)</strong>\r\n                                                                    </td>\r\n                                                                    <td\r\n                                                                        style={{\r\n                                                                            fontSize: 12,\r\n                                                                            fontFamily: '\"Open Sans\", sans-serif',\r\n                                                                            color: \"#000\",\r\n                                                                            lineHeight: 1.6,\r\n                                                                            verticalAlign: \"top\",\r\n                                                                            textAlign: \"right\"\r\n                                                                        }}\r\n                                                                    >\r\n                                                                        <strong>$344.90</strong>\r\n                                                                    </td>\r\n                                                                </tr> */}\r\n                                                                {/* <tr>\r\n                                                                    <td\r\n                                                                        style={{\r\n                                                                            fontSize: 12,\r\n                                                                            fontFamily: '\"Open Sans\", sans-serif',\r\n                                                                            color: \"#b0b0b0\",\r\n                                                                            lineHeight: 1.6,\r\n                                                                            verticalAlign: \"top\",\r\n                                                                            textAlign: \"right\"\r\n                                                                        }}\r\n                                                                    >\r\n                                                                        <small>TAX</small>\r\n                                                                    </td>\r\n                                                                    <td\r\n                                                                        style={{\r\n                                                                            fontSize: 12,\r\n                                                                            fontFamily: '\"Open Sans\", sans-serif',\r\n                                                                            color: \"#b0b0b0\",\r\n                                                                            lineHeight: 1.6,\r\n                                                                            verticalAlign: \"top\",\r\n                                                                            textAlign: \"right\"\r\n                                                                        }}\r\n                                                                    >\r\n                                                                        <small>$72.40</small>\r\n                                                                    </td>\r\n                                                                </tr> */}\r\n                                                            </tbody>\r\n                                                        </table>\r\n                                                        {/* /Table Total */}\r\n                                                    </td>\r\n                                                </tr>\r\n                                            </tbody>\r\n                                        </table>\r\n                                    </td>\r\n                                </tr>\r\n                            </tbody>\r\n                        </table>\r\n                        {/* /Total */}\r\n                        {/* Information */}\r\n                        <table\r\n                            width=\"100%\"\r\n                            border={0}\r\n                            cellPadding={0}\r\n                            cellSpacing={0}\r\n                            align=\"center\"\r\n                            className=\"fullTable\"\r\n                            bgcolor=\"#e1e1e1\"\r\n                        >\r\n                            <tbody>\r\n                                <tr>\r\n                                    <td>\r\n                                        <table\r\n                                            width={600}\r\n                                            border={0}\r\n                                            cellPadding={0}\r\n                                            cellSpacing={0}\r\n                                            align=\"center\"\r\n                                            className=\"fullTable\"\r\n                                            bgcolor=\"#ffffff\"\r\n                                        >\r\n                                            <tbody>\r\n                                                <tr></tr>\r\n                                                <tr className=\"hiddenMobile\">\r\n                                                    <td height={60} />\r\n                                                </tr>\r\n                                                <tr className=\"visibleMobile\">\r\n                                                    <td height={40} />\r\n                                                </tr>\r\n                                                <tr>\r\n                                                    <td>\r\n                                                        <table\r\n                                                            width={480}\r\n                                                            border={0}\r\n                                                            cellPadding={0}\r\n                                                            cellSpacing={0}\r\n                                                            align=\"center\"\r\n                                                            className=\"fullPadding\"\r\n                                                        >\r\n                                                            <tbody>\r\n                                                                <tr>\r\n                                                                    <td>\r\n                                                                        <table\r\n                                                                            width={220}\r\n                                                                            border={0}\r\n                                                                            cellPadding={0}\r\n                                                                            cellSpacing={0}\r\n                                                                            align=\"left\"\r\n                                                                            className=\"col\"\r\n                                                                        >\r\n                                                                            <tbody>\r\n                                                                                <tr>\r\n                                                                                    <td\r\n                                                                                        style={{\r\n                                                                                            fontSize: 11,\r\n                                                                                            fontFamily: '\"Open Sans\", sans-serif',\r\n                                                                                            color: \"#5b5b5b\",\r\n                                                                                            lineHeight: 1.6,\r\n                                                                                            verticalAlign: \"top\"\r\n                                                                                        }}\r\n                                                                                    >\r\n                                                                                        <strong>BILLING INFORMATION</strong>\r\n                                                                                    </td>\r\n                                                                                </tr>\r\n                                                                                <tr>\r\n                                                                                    <td width=\"100%\" height={10} />\r\n                                                                                </tr>\r\n                                                                                <tr>\r\n                                                                                    <td\r\n                                                                                        style={{\r\n                                                                                            fontSize: 12,\r\n                                                                                            fontFamily: '\"Open Sans\", sans-serif',\r\n                                                                                            color: \"#5b5b5b\",\r\n                                                                                            lineHeight: 1.6,\r\n                                                                                            verticalAlign: \"top\"\r\n                                                                                        }}\r\n                                                                                    >\r\n                                                                                        {orderDetailState.data['name']}\r\n                                                                                        <br /> {orderDetailState.data['country']}\r\n                                                                                        <br /> {orderDetailState.data['city']}\r\n                                                                                        <br />{orderDetailState.data['address']}\r\n                                                                                        <br /> {orderDetailState.data['phone']}\r\n                                                                                        <br /> {orderDetailState.data['email']}\r\n                                                                                    </td>\r\n                                                                                </tr>\r\n                                                                            </tbody>\r\n                                                                        </table>\r\n                                                                        <table\r\n                                                                            width={220}\r\n                                                                            border={0}\r\n                                                                            cellPadding={0}\r\n                                                                            cellSpacing={0}\r\n                                                                            align=\"right\"\r\n                                                                            className=\"col\"\r\n                                                                        >\r\n                                                                            <tbody>\r\n                                                                                <tr className=\"visibleMobile\">\r\n                                                                                    <td height={20} />\r\n                                                                                </tr>\r\n                                                                                <tr>\r\n                                                                                    <td\r\n                                                                                        style={{\r\n                                                                                            fontSize: 11,\r\n                                                                                            fontFamily: '\"Open Sans\", sans-serif',\r\n                                                                                            color: \"#5b5b5b\",\r\n                                                                                            lineHeight: 1.6,\r\n                                                                                            verticalAlign: \"top\"\r\n                                                                                        }}\r\n                                                                                    >\r\n                                                                                        <strong>Status</strong>\r\n\r\n                                                                                    </td>\r\n                                                                                </tr>\r\n                                                                                <tr>\r\n                                                                                    <td width=\"100%\" height={10} />\r\n                                                                                </tr>\r\n                                                                                <tr>\r\n                                                                                    <td\r\n                                                                                        style={{\r\n                                                                                            fontSize: 12,\r\n                                                                                            fontFamily: '\"Open Sans\", sans-serif',\r\n                                                                                            color: \"#5b5b5b\",\r\n                                                                                            lineHeight: 1.6,\r\n                                                                                            verticalAlign: \"top\"\r\n                                                                                        }}\r\n                                                                                    >\r\n                                                                                        {orderDetailState.data['paymentStatus']}\r\n\r\n                                                                                    </td>\r\n                                                                                </tr>\r\n                                                                            </tbody>\r\n                                                                        </table>\r\n                                                                    </td>\r\n                                                                </tr>\r\n                                                            </tbody>\r\n                                                        </table>\r\n                                                    </td>\r\n                                                </tr>\r\n                                                <tr>\r\n                                                    <td>\r\n                                                        <table\r\n                                                            width={480}\r\n                                                            border={0}\r\n                                                            cellPadding={0}\r\n                                                            cellSpacing={0}\r\n                                                            align=\"center\"\r\n                                                            className=\"fullPadding\"\r\n                                                        >\r\n                                                            <tbody>\r\n                                                                <tr>\r\n                                                                    <td>\r\n                                                                        <table\r\n                                                                            width={220}\r\n                                                                            border={0}\r\n                                                                            cellPadding={0}\r\n                                                                            cellSpacing={0}\r\n                                                                            align=\"left\"\r\n                                                                            className=\"col\"\r\n                                                                        >\r\n                                                                            <tbody>\r\n                                                                                <tr className=\"hiddenMobile\">\r\n                                                                                    <td height={35} />\r\n                                                                                </tr>\r\n                                                                                <tr className=\"visibleMobile\">\r\n                                                                                    <td height={20} />\r\n                                                                                </tr>\r\n                                                                                <tr>\r\n                                                                                    {/* <td\r\n                                                                                        style={{\r\n                                                                                            fontSize: 11,\r\n                                                                                            fontFamily: '\"Open Sans\", sans-serif',\r\n                                                                                            color: \"#5b5b5b\",\r\n                                                                                            lineHeight: 1.6,\r\n                                                                                            verticalAlign: \"top\"\r\n                                                                                        }}\r\n                                                                                    >\r\n                                                                                        <strong>SHIPPING INFORMATION</strong>\r\n                                                                                    </td> */}\r\n                                                                                </tr>\r\n                                                                                <tr>\r\n                                                                                    <td width=\"100%\" height={10} />\r\n                                                                                </tr>\r\n                                                                                <tr>\r\n                                                                                    {/* <td\r\n                                                                                        style={{\r\n                                                                                            fontSize: 12,\r\n                                                                                            fontFamily: '\"Open Sans\", sans-serif',\r\n                                                                                            color: \"#5b5b5b\",\r\n                                                                                            lineHeight: 1.6,\r\n                                                                                            verticalAlign: \"top\"\r\n                                                                                        }}\r\n                                                                                    >\r\n                                                                                        Sup Inc\r\n                                  <br /> Another Place, Somewhere\r\n                                  <br /> New York NY\r\n                                  <br /> 4468, United States\r\n                                  <br /> T: 202-555-0171\r\n                                </td> */}\r\n                                                                                </tr>\r\n                                                                            </tbody>\r\n                                                                        </table>\r\n                                                                        <table\r\n                                                                            width={220}\r\n                                                                            border={0}\r\n                                                                            cellPadding={0}\r\n                                                                            cellSpacing={0}\r\n                                                                            align=\"right\"\r\n                                                                            className=\"col\"\r\n                                                                        >\r\n                                                                            <tbody>\r\n                                                                                <tr className=\"hiddenMobile\">\r\n                                                                                    <td height={35} />\r\n                                                                                </tr>\r\n                                                                                <tr className=\"visibleMobile\">\r\n                                                                                    <td height={20} />\r\n                                                                                </tr>\r\n                                                                                <tr>\r\n                                                                                    <td\r\n                                                                                        style={{\r\n                                                                                            fontSize: 11,\r\n                                                                                            fontFamily: '\"Open Sans\", sans-serif',\r\n                                                                                            color: \"#5b5b5b\",\r\n                                                                                            lineHeight: 1.6,\r\n                                                                                            verticalAlign: \"top\"\r\n                                                                                        }}\r\n                                                                                    >\r\n                                                                                        {/* <strong>SHIPPING METHOD</strong> */}\r\n                                                                                    </td>\r\n                                                                                </tr>\r\n                                                                                <tr>\r\n                                                                                    <td width=\"100%\" height={10} />\r\n                                                                                </tr>\r\n                                                                                <tr>\r\n                                                                                    <td\r\n                                                                                        style={{\r\n                                                                                            fontSize: 12,\r\n                                                                                            fontFamily: '\"Open Sans\", sans-serif',\r\n                                                                                            color: \"#5b5b5b\",\r\n                                                                                            lineHeight: 1.6,\r\n                                                                                            verticalAlign: \"top\"\r\n                                                                                        }}\r\n                                                                                    >\r\n                                                                                        {/* UPS: U.S. Shipping Services */}\r\n                                                                                    </td>\r\n                                                                                </tr>\r\n                                                                            </tbody>\r\n                                                                        </table>\r\n                                                                    </td>\r\n                                                                </tr>\r\n                                                            </tbody>\r\n                                                        </table>\r\n                                                    </td>\r\n                                                </tr>\r\n                                                <tr className=\"hiddenMobile\">\r\n                                                    <td height={60} />\r\n                                                </tr>\r\n                                                <tr className=\"visibleMobile\">\r\n                                                    <td height={30} />\r\n                                                </tr>\r\n                                            </tbody>\r\n                                        </table>\r\n                                    </td>\r\n                                </tr>\r\n                            </tbody>\r\n                        </table>\r\n                        {/* /Information */}\r\n                        <table\r\n                            width=\"100%\"\r\n                            border={0}\r\n                            cellPadding={0}\r\n                            cellSpacing={0}\r\n                            align=\"center\"\r\n                            className=\"fullTable\"\r\n                            bgcolor=\"#e1e1e1\"\r\n                        >\r\n                            <tbody>\r\n                                <tr>\r\n                                    <td>\r\n                                        <table\r\n                                            width={600}\r\n                                            border={0}\r\n                                            cellPadding={0}\r\n                                            cellSpacing={0}\r\n                                            align=\"center\"\r\n                                            className=\"fullTable\"\r\n                                            bgcolor=\"#ffffff\"\r\n                                            style={{ borderRadius: \"0 0 10px 10px\" }}\r\n                                        >\r\n                                            <tbody>\r\n                                                <tr>\r\n                                                    <td>\r\n                                                        <table\r\n                                                            width={480}\r\n                                                            border={0}\r\n                                                            cellPadding={0}\r\n                                                            cellSpacing={0}\r\n                                                            align=\"center\"\r\n                                                            className=\"fullPadding\"\r\n                                                        >\r\n                                                            <tbody>\r\n                                                                <tr>\r\n                                                                    <td\r\n                                                                        style={{\r\n                                                                            fontSize: 12,\r\n                                                                            color: \"#5b5b5b\",\r\n                                                                            fontFamily: '\"Open Sans\", sans-serif',\r\n                                                                            lineHeight: 1.6,\r\n                                                                            verticalAlign: \"top\",\r\n                                                                            textAlign: \"left\"\r\n                                                                        }}\r\n                                                                    >\r\n                                                                        Have a nice day.\r\n                        </td>\r\n                                                                </tr>\r\n                                                            </tbody>\r\n                                                        </table>\r\n                                                    </td>\r\n                                                </tr>\r\n                                                <tr className=\"spacer\">\r\n                                                    <td height={50} />\r\n                                                </tr>\r\n                                            </tbody>\r\n                                        </table>\r\n                                    </td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td height={20} />\r\n                                </tr>\r\n                            </tbody>\r\n                        </table>\r\n                    </div>;\r\n                </>\r\n            )}\r\n        </Modal>\r\n\r\n    );\r\n};\r\n\r\n\r\nexport default QuickEdit;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useHandleFetch } from '../../hooks';\r\n\r\n\r\n\r\n\r\n// import lib \r\nimport { Skeleton } from 'antd'\r\n\r\n\r\n\r\ninterface Props {\r\n    productId?: any;\r\n    quantity?: any;\r\n    item?: any\r\n    variation?: any;\r\n}\r\n\r\nconst CartOverLayCartItem = ({\r\n    productId,\r\n    quantity,\r\n    item,\r\n    variation\r\n}: Props) => {\r\n\r\n\r\n    const [productDetailState, handleProductFetch] = useHandleFetch(\r\n        {},\r\n        'productDetailById'\r\n    );\r\n    const [product, setProduct] = useState({});\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [modifiedPrice, setModifiedPrice] = useState('');\r\n    const [selectedVariationId, setSelectedVariationId] = useState(variation);\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        setIsLoading(true);\r\n        const getAndSetProduct = async () => {\r\n            const product = await handleProductFetch({\r\n                urlOptions: {\r\n                    placeHolders: {\r\n                        id: productId,\r\n                    },\r\n                },\r\n            });\r\n\r\n            // @ts-ignore\r\n            setProduct(product);\r\n            setIsLoading(false);\r\n        };\r\n        getAndSetProduct()\r\n    }, []);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    console.log('modifiedPrice', modifiedPrice);\r\n    return (\r\n        <>\r\n\r\n            <Skeleton loading={productDetailState.isLoading}>\r\n                {productDetailState.data && Object.keys(productDetailState.data).length > 0 && (\r\n                    <div className='cart-item' key={''}>\r\n\r\n\r\n                        <img\r\n\r\n                            src={productDetailState.data['cover'] && productDetailState.data['cover']['cover']}\r\n                            alt='Img'\r\n                            style={{\r\n                                cursor: 'pointer',\r\n                            }}\r\n                        />\r\n                        <div className='cart-item-info'>\r\n                            <h4\r\n\r\n                            >\r\n                                {productDetailState.data['name']}\r\n                            </h4>\r\n                            <h5\r\n                            >\r\n                                Quantity : {quantity}\r\n                            </h5>\r\n                            <h5\r\n                            >\r\n                                {item['unitPrice']}\r\n                            </h5>\r\n\r\n\r\n                            {/* {pricingOptions && pricingOptions.length > 0 && pricingOptions.map(tag => (\r\n                            <>\r\n                                <span\r\n                                    onClick={() => handleAttributeChange(tag.value)}\r\n                                    className={selectedVariationId === tag.value ? 'product-attributeTag product-attributeTag-active' : 'product-attributeTag'}>\r\n                                    {tag.label}\r\n                                </span>\r\n                            </>\r\n                        ))} */}\r\n\r\n                            {/* <span\r\n             style={{\r\n               display: 'inline-block',\r\n               background: '#fafafa',\r\n               padding: '3px 3px',\r\n               borderRadius: 1,\r\n               fontSize: '12px',\r\n               marginRight: '5px',\r\n               color: '#777',\r\n               marginTop: '5px'\r\n             }}\r\n           >\r\n             15KG\r\n             </span> */}\r\n\r\n                        </div>\r\n                        {/* <span\r\n                        onClick={handleAttributeDelete}\r\n                        className='remove-item' >\r\n                        <i className='fa fa-times'></i>\r\n                    </span> */}\r\n\r\n                    </div>\r\n                )}\r\n            </Skeleton>\r\n\r\n        </>\r\n    );\r\n};\r\n\r\n// @ts-ignore\r\nexport default CartOverLayCartItem;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Modal, Select, notification, Form, Empty, Button } from 'antd';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { CheckCircleOutlined, InfoCircleOutlined } from '@ant-design/icons';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport { useHandleFetch } from '../../hooks';\r\nimport OrderInvoice from \"./OrderInvoice.jsx\";\r\nimport ProductItemForOrderDetail from \"./productItemForOrderDetail\";\r\n\r\n\r\nconst { Option } = Select;\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    // name: Yup.string()\r\n    //     .label('Name')\r\n    //     .required()\r\n    //     .min(2, 'Name must have at least 2 characters '),\r\n    // pickUpLocation: Yup.string()\r\n    //     .label('Pick up Location')\r\n    //     .required()\r\n    //     .min(2, 'Pick up Location must have at least 2 characters '),\r\n    // time: Yup.string()\r\n    //     .label('Time')\r\n    //     .required()\r\n    //     .min(2, 'Time must have at least 2 characters '),\r\n\r\n});\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Tag Created',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n    notification.error({\r\n        message: message || 'Something Went Wrong',\r\n        description: '',\r\n        icon: <InfoCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n    });\r\n};\r\n\r\n\r\ninterface Props {\r\n    customer: any;\r\n    setTagEditVisible: any;\r\n    tagEditVisible: any;\r\n}\r\n\r\nconst QuickEdit = ({ customer, setTagEditVisible, tagEditVisible }: Props) => {\r\n    const [updateOrderState, handleUpdateOrderFetch] = useHandleFetch({}, 'updateOrder');\r\n\r\n    console.log('customerVie', customer);\r\n\r\n    const [selectedCountryValue, setselectedCountryValue] = useState('');\r\n    const [selectedCityValue, setselectedCityValue] = useState('');\r\n\r\n    const [countryOptions, setcountryOptions] = useState([]);\r\n    const [cityOptions, setcityOptions] = useState([]);\r\n\r\n    const [countryListState, handleCountryListFetch] = useHandleFetch(\r\n        [],\r\n        'countryList'\r\n    );\r\n\r\n    const [cityListState, handleCityListFetch] = useHandleFetch([], 'cityList');\r\n\r\n    const [countryList, setCountryList] = useState([]);\r\n    const [cityList, setCityList] = useState([]);\r\n    const [showInvoice, setShowInvoice] = useState(false);\r\n\r\n\r\n\r\n    const handleSubmit = async (values: any, actions: any) => {\r\n        // console.log('selectedCityValue', selectedCityValue); \r\n        console.log('cooles', customer)\r\n\r\n        const addRegionRes = await handleUpdateOrderFetch({\r\n            urlOptions: {\r\n                placeHolders: {\r\n                    id: customer.id,\r\n                }\r\n            },\r\n            body: {\r\n                billingAddress: {\r\n                    phone: values.phone,\r\n                    email: values.email,\r\n                    address1: values.address1,\r\n                    address2: values.address2,\r\n                    firstName: values.firstName,\r\n                    lastName: values.lastName,\r\n                    city: selectedCityValue || customer['billingAddress']['city'],\r\n                    country: selectedCountryValue || customer['billingAddress']['country'],\r\n                },\r\n                products: customer.products,\r\n                customerId: customer.customerId\r\n                // charge\r\n            },\r\n        });\r\n\r\n        // @ts-ignore\r\n        if (addRegionRes && addRegionRes.status === 'ok') {\r\n            openSuccessNotification();\r\n\r\n            // const positionInTag = () => {\r\n            //     return orderList.map(item => item.id).indexOf(customer.id);\r\n            // }\r\n\r\n            // const index = positionInTag();\r\n\r\n            // const updatedItem = Object.assign({}, orderList[index], { ...addRegionRes });\r\n            // const updateRegionList = [...orderList.slice(0, index), updatedItem, ...orderList.slice(index + 1)];\r\n            // setOrderList(updateRegionList);\r\n\r\n        }\r\n        else {\r\n            openErrorNotification();\r\n        }\r\n\r\n        actions.setSubmitting(false);\r\n        setTagEditVisible(false)\r\n\r\n    };\r\n\r\n\r\n    const onChangeCity = (value) => {\r\n        setselectedCityValue(value);\r\n    }\r\n\r\n    const onChangeCountry = (value) => {\r\n        setselectedCountryValue(value);\r\n    }\r\n\r\n    useEffect(() => {\r\n        const setCountries = async () => {\r\n            const CountryListRes = await handleCountryListFetch({});\r\n\r\n            // @ts-ignore\r\n            if (CountryListRes && CountryListRes.length > 0) {\r\n                // @ts-ignore\r\n                const countryOptions = CountryListRes.map((country) => {\r\n                    return {\r\n                        value: country.name,\r\n                        name: country.name\r\n                    };\r\n                });\r\n                setcountryOptions(countryOptions);\r\n            }\r\n        };\r\n\r\n        setCountries();\r\n    }, []);\r\n\r\n\r\n    useEffect(() => {\r\n        const setCities = async () => {\r\n            const cityListRes = await handleCityListFetch({\r\n                urlOptions: {\r\n                    placeHolders: {\r\n                        country: selectedCountryValue,\r\n                    },\r\n                },\r\n            });\r\n\r\n            // @ts-ignore\r\n            if (cityListRes && cityListRes.length > 0) {\r\n                // @ts-ignore\r\n                const cityOptions = cityListRes.map((city) => {\r\n                    return {\r\n                        value: city.name,\r\n                        name: city.name\r\n                    };\r\n                });\r\n                setcityOptions(cityOptions);\r\n            }\r\n        };\r\n\r\n        setCities();\r\n    }, [selectedCountryValue]);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    const handleCancel = (e: any) => {\r\n        setTagEditVisible(false);\r\n    };\r\n\r\n\r\n\r\n    const getisSubmitButtonDisabled = (values, isValid) => {\r\n        if (!isValid ||\r\n            !values.firstName ||\r\n            !values.LastName) {\r\n\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    return (\r\n        <Formik\r\n            onSubmit={(values, actions) => handleSubmit(values, actions)}\r\n            validationSchema={validationSchema}\r\n            validateOnBlur={false}\r\n            enableReinitialize={true}\r\n            initialValues={\r\n                { ...customer.billingAddress ? customer.billingAddress : {} }\r\n            }\r\n        >\r\n            {({\r\n                handleChange,\r\n                values,\r\n                handleSubmit,\r\n                errors,\r\n                isValid,\r\n                isSubmitting,\r\n                touched,\r\n                handleBlur,\r\n                setFieldTouched,\r\n                handleReset,\r\n            }) => (\r\n                    <>\r\n                        <Modal\r\n                            title=\"Order Edit\"\r\n                            visible={tagEditVisible}\r\n                            onOk={(e: any) => handleSubmit(e)}\r\n                            onCancel={handleCancel}\r\n                            okText='Update'\r\n                            okButtonProps={{\r\n                                loading: isSubmitting,\r\n                                htmlType: \"submit\",\r\n                                // disabled: getisSubmitButtonDisabled(values, isValid)\r\n                            }}\r\n                            bodyStyle={{\r\n                                margin: '0',\r\n                                padding: '10px'\r\n                            }}\r\n                            width={'70vw'}\r\n                        >\r\n\r\n\r\n                            <div className='dubbleRowInputs'>\r\n                                <div className='dubbleRowInputs__item'>\r\n                                    <Input\r\n                                        label='First Name'\r\n                                        value={values.firstName}\r\n                                        name='firstName'\r\n                                        isError={(touched.firstName && errors.firstName) ||\r\n                                            (!isSubmitting && updateOrderState.error['error']['firstName'])}\r\n\r\n                                        errorString={(touched.firstName && errors.firstName) ||\r\n                                            (!isSubmitting && updateOrderState.error['error']['firstName'])}\r\n                                        onChange={(e: any) => {\r\n                                            handleChange(e);\r\n                                            setFieldTouched('firstName');\r\n                                        }}\r\n                                    />\r\n                                </div>\r\n                                <div className='dubbleRowInputs__item'>\r\n                                    <Input\r\n                                        label='Last Name'\r\n                                        value={values.lastName}\r\n                                        name='lastName'\r\n                                        isError={(touched.lastName && errors.lastName) ||\r\n                                            (!isSubmitting && updateOrderState.error['error']['lastName'])}\r\n\r\n                                        errorString={(touched.lastName && errors.lastName) ||\r\n                                            (!isSubmitting && updateOrderState.error['error']['lastName'])}\r\n                                        onChange={(e: any) => {\r\n                                            handleChange(e);\r\n                                            setFieldTouched('lastName');\r\n                                        }}\r\n                                    />\r\n                                </div>\r\n\r\n\r\n\r\n\r\n                            </div>\r\n\r\n\r\n\r\n                            <div className='dubbleRowInputs'>\r\n                                <div className='dubbleRowInputs__item'>\r\n                                    <Input\r\n                                        label='Phone'\r\n                                        value={values.phone}\r\n                                        name='phone'\r\n                                        isError={(touched.phone && errors.phone) ||\r\n                                            (!isSubmitting && updateOrderState.error['error']['phone'])}\r\n\r\n                                        errorString={(touched.phone && errors.phone) ||\r\n                                            (!isSubmitting && updateOrderState.error['error']['phone'])}\r\n                                        onChange={(e: any) => {\r\n                                            handleChange(e);\r\n                                            setFieldTouched('phone');\r\n                                        }}\r\n                                    />\r\n                                </div>\r\n                                <div className='dubbleRowInputs__item'>\r\n                                    <Input\r\n                                        label='Email'\r\n                                        value={values.email}\r\n                                        name='email'\r\n                                        isError={(touched.email && errors.email) ||\r\n                                            (!isSubmitting && updateOrderState.error['error']['email'])}\r\n\r\n                                        errorString={(touched.email && errors.email) ||\r\n                                            (!isSubmitting && updateOrderState.error['error']['email'])}\r\n                                        onChange={(e: any) => {\r\n                                            handleChange(e);\r\n                                            setFieldTouched('email');\r\n                                        }}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n\r\n\r\n                            <div className='dubbleRowInputs'>\r\n                                <div className='dubbleRowInputs__item'>\r\n                                    <h3 className='inputFieldLabel'>\r\n                                        Country\r\n\t\t\t\t\t\t\t\t\t</h3>\r\n\r\n\r\n                                    <Form.Item\r\n                                        validateStatus={(updateOrderState.error['error']['country']) ? \"error\" : \"\"}\r\n                                        help={updateOrderState.error['error']['country']}\r\n                                    // noStyle={true}\r\n                                    >\r\n                                        <Select\r\n                                            defaultValue={values.country}\r\n                                            notFoundContent={<Empty description='No Country Found' image={Empty.PRESENTED_IMAGE_SIMPLE} />}\r\n                                            showSearch\r\n                                            style={{ width: '100%' }}\r\n                                            placeholder='Select a Country'\r\n                                            optionFilterProp='children'\r\n                                            onChange={onChangeCountry}\r\n                                            filterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n                                        >\r\n                                            {countryListState.done &&\r\n                                                countryListState.data.length > 0 &&\r\n                                                countryOptions.map((option) => {\r\n                                                    return <Option value={option.value}>{option.name}</Option>;\r\n                                                })}\r\n                                        </Select>\r\n\r\n                                    </Form.Item>\r\n\r\n\r\n\r\n\r\n                                </div>\r\n                                <div className='dubbleRowInputs__item'>\r\n                                    <h3 className='inputFieldLabel'>\r\n                                        City\r\n                                    </h3>\r\n                                    <Form.Item\r\n                                        // noStyle={true}\r\n                                        validateStatus={(updateOrderState.error['error']['city']) ? \"error\" : \"\"}\r\n                                        help={updateOrderState.error['error']['city']}\r\n\r\n                                    >\r\n                                        <Select\r\n                                            defaultValue={values.city}\r\n                                            className='selectClassName'\r\n                                            notFoundContent={<Empty description='First Select a Country' image={Empty.PRESENTED_IMAGE_SIMPLE} />}\r\n                                            showSearch\r\n                                            style={{ width: '100%' }}\r\n                                            placeholder='Select a city'\r\n                                            optionFilterProp='children'\r\n                                            onChange={onChangeCity}\r\n                                            filterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n                                        >\r\n                                            {cityListState.done &&\r\n                                                cityListState.data.length > 0 &&\r\n                                                cityOptions.map((option) => {\r\n                                                    return <Option value={option.value}>{option.name}</Option>;\r\n                                                })}\r\n                                        </Select>\r\n                                    </Form.Item>\r\n                                </div>\r\n\r\n                            </div>\r\n\r\n                            <div style={{\r\n                                marginTop: '12px'\r\n                            }}></div>\r\n\r\n\r\n\r\n                            <div className='dubbleRowInputs'>\r\n                                <div className='dubbleRowInputs__item'>\r\n                                    <Input\r\n                                        label='Address'\r\n                                        value={values.address1}\r\n                                        name='address1'\r\n                                        isError={(touched.address1 && errors.address1) ||\r\n                                            (!isSubmitting && updateOrderState.error['error']['address1'])}\r\n\r\n                                        errorString={(touched.address1 && errors.address1) ||\r\n                                            (!isSubmitting && updateOrderState.error['error']['address1'])}\r\n                                        onChange={(e: any) => {\r\n                                            handleChange(e);\r\n                                            setFieldTouched('address1');\r\n                                        }}\r\n                                    />\r\n                                </div>\r\n                                <div className='dubbleRowInputs__item'>\r\n                                    <Input\r\n                                        label='Address 2'\r\n                                        value={values.address2}\r\n                                        name='address2'\r\n                                        isError={(touched.address2 && errors.address2) ||\r\n                                            (!isSubmitting && updateOrderState.error['error']['address2'])}\r\n\r\n                                        errorString={(touched.address2 && errors.address2) ||\r\n                                            (!isSubmitting && updateOrderState.error['error']['address2'])}\r\n                                        onChange={(e: any) => {\r\n                                            handleChange(e);\r\n                                            setFieldTouched('address2');\r\n                                        }}\r\n                                    />\r\n                                </div>\r\n\r\n                            </div>\r\n\r\n                            <div style={{\r\n                                marginTop: '12px'\r\n                            }}></div>\r\n\r\n\r\n\r\n                                    {customer.products && customer.products.length > 0 && (\r\n                                        <h3 className='inputFieldLabel'>\r\n                                        Products \r\n                                    </h3>\r\n                                    )}\r\n\r\n\r\n                            {customer.products && customer.products.length > 0 && <> \r\n                            \r\n                                {customer.products.map(item => {\r\n                    return <ProductItemForOrderDetail\r\n                        productId={item._id}\r\n                        quantity={item.quantity}\r\n                        item={item}\r\n                        variation={item.variation}\r\n                    />;\r\n                })}\r\n\r\n                            </>}\r\n\r\n\r\n                            <div style={{\r\n                                marginTop: '20px'\r\n                            }}></div>\r\n                    <Button\r\n                    onClick={() => setShowInvoice(true)}\r\n                    className='btnPrimaryClassNameoutline'\r\n                    >\r\n                        Generate Invoice\r\n                        \r\n                        </Button>\r\n\r\n            <div style={{\r\n                                marginBottom: '20px'\r\n                            }}></div>\r\n\r\n            <OrderInvoice\r\n            id={customer.id}\r\n            setShowInvoice={setShowInvoice}\r\n             showInvoice={showInvoice} \r\n            />\r\n\r\n                            \r\n\r\n\r\n                        </Modal>\r\n\r\n                    </>\r\n                )}\r\n\r\n\r\n\r\n        </Formik>\r\n    );\r\n};\r\n\r\n\r\nexport default QuickEdit;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useParams, useHistory } from \"react-router\";\r\n\r\n\r\n// import hooks\r\nimport { useHandleFetch } from \"../../hooks\";\r\n\r\n// import lib\r\nimport {\r\n    FileOutlined,\r\n    InboxOutlined,\r\n    RadiusUpleftOutlined,\r\n    RadiusUprightOutlined,\r\n    RadiusBottomleftOutlined,\r\n    RadiusBottomrightOutlined,\r\n    PlusOutlined,\r\n    DeleteOutlined,\r\n    EditOutlined,\r\n    CheckCircleOutlined\r\n} from '@ant-design/icons';\r\n\r\nimport { Skeleton, Empty, Popconfirm, Upload, message, Switch, Select, Button, notification, Table, Space, Input as CoolInput, Tooltip, Modal } from 'antd';\r\n\r\n\r\n// import components\r\nimport { DataTableSkeleton } from \"../../components/Placeholders\";\r\nimport OrderEdit from \"./OrderEdit\";\r\nimport { OrderDetail } from '.';\r\n\r\n\r\nconst { Column, ColumnGroup } = Table;\r\nconst { Search } = CoolInput;\r\n\r\n\r\ninterface Props {\r\n    productRecord?: any;\r\n}\r\n\r\nconst NewBrandDetail = (props: Props) => {\r\n    const [tagDetailState, handleTagDetailFetch] = useHandleFetch({}, 'orderDetail');\r\n    const [tagProductsState, handleTagProductsFetch] = useHandleFetch({}, 'tagProducts');\r\n    const [tagEditVisible, setTagEditVisible] = useState(false);\r\n\r\n\r\n    const params = useParams();\r\n    const history = useHistory();\r\n    const tagId = params['id'];\r\n\r\n    useEffect(() => {\r\n\r\n        const getBrandDetail = async () => {\r\n            await handleTagDetailFetch({\r\n                urlOptions: {\r\n                    placeHolders: {\r\n                        id: tagId\r\n                    }\r\n                }\r\n            })\r\n        };\r\n        getBrandDetail()  ;\r\n    }, [tagId]);\r\n\r\n\r\n    console.log('orderDetailState', tagDetailState)\r\n\r\n    useEffect(() => {\r\n        const getTagProducts = async () => {\r\n            await handleTagProductsFetch({\r\n                urlOptions: {\r\n                    placeHolders: {\r\n                        id: tagId\r\n                    }\r\n                }\r\n            })\r\n        };\r\n\r\n        getTagProducts();\r\n\r\n    }, [tagId]);\r\n\r\n\r\n\r\n\r\n    console.log('orderDetailState', tagDetailState);\r\n\r\n    console.log('brandParams', params);\r\n\r\n\r\n    return (\r\n        <div className='brandDetailContainer'>\r\n            <div className='brandDetailContainer__heading'>\r\n                <h3>\r\n                    Order Detail\r\n                </h3>\r\n\r\n                {tagDetailState.done && tagDetailState.data && (Object.keys(tagDetailState.data).length > 0) && (\r\n                    <>\r\n                        <OrderEdit\r\n                            tagEditVisible={tagEditVisible}\r\n                            setTagEditVisible={setTagEditVisible}\r\n                            customer={tagDetailState.data}\r\n                        />\r\n                        <Button\r\n                            onClick={() => setTagEditVisible(true)}\r\n                            type='link'\r\n                            icon={<EditOutlined />}\r\n                        >\r\n                            Edit\r\n                      </Button>\r\n                    </>\r\n                )}\r\n            </div>\r\n            <Skeleton\r\n                paragraph={{ rows: 2 }}\r\n                loading={tagDetailState.isLoading}>\r\n                {tagDetailState.done && tagDetailState.data && !(Object.keys(tagDetailState.data).length > 0) && (\r\n                    <Empty description='No Order found' image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n                )}\r\n\r\n                {tagDetailState.done && tagDetailState.data && (Object.keys(tagDetailState.data).length > 0) && (\r\n                    <div className='brandDetailContainer__header'>\r\n\r\n                        <div className='brandDetailContainer__header-info'>\r\n                            <h2>\r\n                                {tagDetailState.data['name']}\r\n                            </h2>\r\n                            <h3>\r\n                                {tagDetailState.data['description']}\r\n                            </h3>\r\n                            {tagDetailState.data['url'] && (\r\n                                <h3>\r\n                                    URL:\r\n                                    <span>\r\n                                        {tagDetailState.data['url']}\r\n                                    </span>\r\n\r\n                                </h3>\r\n                            )}\r\n\r\n                            {tagDetailState['data']['country'] && (\r\n                                <h3>\r\n                                    COUNTRY:\r\n                                    <span>\r\n                                        {tagDetailState['data']['country']}\r\n                                    </span>\r\n                                </h3>\r\n                            )}\r\n\r\n\r\n                            {tagDetailState['data']['city'] && (\r\n                                <h3>\r\n                                    CITY:\r\n                                    <span>\r\n                                        {tagDetailState['data']['city']}\r\n                                    </span>\r\n                                </h3>\r\n                            )}\r\n                        \r\n\r\n\r\n                            {tagDetailState['data']['address1'] && (\r\n                                <h3>\r\n                                    ADDRESS:\r\n                                    <span>\r\n                                        {tagDetailState['data']['address1']}\r\n                                    </span>\r\n                                </h3>\r\n                            )}\r\n                         \r\n\r\n                            {tagDetailState['data']['phone'] && (\r\n                                <h3>\r\n                                    PHONE:\r\n                                    <span>\r\n                                        {tagDetailState['data']['phone']}\r\n                                    </span>\r\n                                </h3>\r\n                            )}\r\n\r\n                             {tagDetailState['data']['email'] && (\r\n                                <h3>\r\n                                    EMAIL:\r\n                                    <span>\r\n                                        {tagDetailState['data']['email']}\r\n                                    </span>\r\n                                </h3>\r\n                            )}\r\n\r\n\r\n                            {tagDetailState['data']['paymentMethod'] && (\r\n                                <h3>\r\n                                    PAYMENT METHOD:\r\n                                    <span>\r\n                                        {tagDetailState['data']['paymentMethod']}\r\n                                    </span>\r\n                                </h3>\r\n                            )}\r\n\r\n\r\n                            {tagDetailState['data']['paymentStatus'] && (\r\n                                <h3>\r\n                                    PAYMENT STATUS:\r\n                                    <span>\r\n                                        {tagDetailState['data']['paymentStatus']}\r\n                                    </span>\r\n                                </h3>\r\n                            )}\r\n\r\n                            \r\n                        {tagDetailState['data']['status'] && (\r\n                                <h3>\r\n                                    ORDER STATUS:\r\n                                    <span>\r\n                                        {tagDetailState['data']['status']}\r\n                                    </span>\r\n                                </h3>\r\n                            )}\r\n\r\n                      \r\n                        </div>\r\n                    </div>\r\n                )}\r\n\r\n            </Skeleton>\r\n\r\n\r\n            <div className='brandDetailContainer__heading'>\r\n                    <h3>\r\n                        Products\r\n                    </h3>\r\n                </div>\r\n\r\n          \r\n           \r\n            <div className='brandDetailContainer__body'>\r\n\r\n\r\n                {tagDetailState.done \r\n                    && tagDetailState.data \r\n                    && (Object.keys(tagDetailState.data).length > 0) \r\n                    && tagDetailState.data['products'] && !(tagDetailState.data['products'].length > 0) && (\r\n                    <div style={{\r\n                        marginTop: '100px'\r\n                    }}>\r\n                        <Empty description='No Products exists for this order' image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n                    </div>\r\n                )}\r\n\r\n\r\n                {tagDetailState.done \r\n                    && tagDetailState.data \r\n                    && (Object.keys(tagDetailState.data).length > 0) \r\n                    && tagDetailState.data['products'] \r\n                    && tagDetailState.data['products'].length > 0 && (\r\n                <>\r\n                        <Table\r\n                            style={{\r\n                                paddingTop: '10px',\r\n                                borderRadius: '5px !important',\r\n                                overflow: 'hidden',\r\n                                boxShadow: '0 0.125rem 0.625rem rgba(227, 231, 250, 0.3), 0 0.0625rem 0.125rem rgba(206, 220, 233, 0.4)'\r\n                            }}\r\n                            // expandable={{\r\n                            //     expandedRowRender: record => <p style={{ margin: 0 }}>{record.name}</p>,\r\n                            //     rowExpandable: record => record.name !== 'Not Expandable',\r\n                            //   }}\r\n                            // bordered={true}\r\n                            size='small'\r\n                            // pagination={false}\r\n                            dataSource={tagDetailState.data['products']}\r\n                            tableLayout={'auto'}\r\n                            onHeaderRow={column => {\r\n                                return {\r\n                                    style: {\r\n                                        color: 'red !important'\r\n                                    }\r\n\r\n                                };\r\n                            }}\r\n                        >\r\n                            <Column\r\n                                title=\"\"\r\n                                dataIndex=\"cover\"\r\n                                key=\"id\"\r\n                                width={'80px'}\r\n\r\n                                className='classnameofthecolumn'\r\n\r\n                                render={(cover, record: any) => (\r\n                                    <>\r\n                                        <img\r\n                                            onClick={() => {\r\n                                                history.push(`/admin/product/${record.id}`)\r\n                                            }}\r\n                                            src={cover} alt='cover img' style={{\r\n                                                height: '40px',\r\n                                                width: '40px',\r\n                                                objectFit: \"contain\",\r\n                                                borderRadius: '3px',\r\n                                                cursor: 'pointer'\r\n                                            }} />\r\n                                    </>\r\n                                )}\r\n                            />\r\n\r\n                            <Column\r\n                                title=\"Name\"\r\n                                dataIndex=\"name\"\r\n                                key=\"id\"\r\n                                className='classnameofthecolumn'\r\n                                render={(text, record: any) => (\r\n                                    <>\r\n                                        <h4\r\n                                            onClick={() => {\r\n                                                history.push(`/admin/product/${record.id}`)\r\n                                            }}\r\n                                            style={{\r\n                                                fontWeight: 400,\r\n                                                color: '#555',\r\n                                                cursor: 'pointer'\r\n\r\n                                            }}>\r\n                                            {text}\r\n                                        </h4>\r\n\r\n\r\n                                    </>\r\n                                )}\r\n\r\n                            />\r\n\r\n\r\n                            <Column\r\n                                title=\"Price\"\r\n                                dataIndex=\"price\"\r\n                                key=\"id\"\r\n                                className='classnameofthecolumn'\r\n\r\n                            />\r\n\r\n\r\n\r\n\r\n\r\n                            \r\n                            <Column\r\n                                title=\"Available\"\r\n                                dataIndex=\"available\"\r\n                                key=\"id\"\r\n                                className='classnameofthecolumn'\r\n\r\n                            />\r\n\r\n\r\n                            <Column\r\n                                title=\"Minimum\"\r\n                                dataIndex=\"minimum\"\r\n                                key=\"id\"\r\n                                className='classnameofthecolumn'\r\n\r\n                            />\r\n\r\n\r\n                        </Table>\r\n\r\n                </>\r\n            )}\r\n\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NewBrandDetail\r\n","import React,{useState, useEffect} from 'react'\r\n\r\n\r\n// import hooks\r\nimport { useHandleFetch } from \"../../../hooks\";\r\n\r\n// import components\r\nimport { DataTableSkeleton } from \"../../../components/Placeholders\";\r\n\r\n// \r\n\r\n\r\n// import lib\r\nimport {\r\n    ResponsiveContainer,\r\n    AreaChart,\r\n    CartesianGrid,\r\n    XAxis,\r\n    YAxis,\r\n    Tooltip,\r\n    Legend,\r\n    Area,\r\n    Line\r\n} from \"recharts\";\r\n\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {\r\n    FileOutlined,\r\n    InboxOutlined,\r\n    RadiusUpleftOutlined,\r\n    RadiusUprightOutlined,\r\n    RadiusBottomleftOutlined,\r\n    RadiusBottomrightOutlined,\r\n    PlusOutlined,\r\n    DeleteOutlined,\r\n    EditOutlined,\r\n    CheckCircleOutlined,\r\n    CalendarOutlined\r\n} from '@ant-design/icons';\r\n\r\nimport { Skeleton, Empty, Popconfirm, Upload, message, Switch, Select, Button, notification, Table, Space, Input as CoolInput, Modal, Spin } from 'antd';\r\n\r\n\r\nconst { Option } = Select;\r\n\r\nconst { Column, ColumnGroup } = Table;\r\n\r\n\r\n\r\ninterface Props {\r\n    \r\n}\r\n\r\nconst localOptions = [\r\n    {\r\n        value: 'category',\r\n        name: 'Category'\r\n    },\r\n     {\r\n        value: 'product',\r\n        name: 'Product'\r\n    }\r\n\r\n]\r\n\r\n\r\n\r\nconst MONTHS = [\r\n    \"Jan\",\r\n    \"Feb\",\r\n    \"Mar\",\r\n    \"Apr\",\r\n    \"May\",\r\n    \"Jun\",\r\n    \"Jul\",\r\n    \"Aug\",\r\n    \"Sep\",\r\n    \"Oct\",\r\n    \"Nov\",\r\n    \"Dec\"\r\n];\r\n\r\nconst date = new Date();\r\nconst thisMonth = MONTHS[date.getMonth()]\r\n\r\n\r\nexport const getMonthNameByOrder = (order: number): string | undefined =>\r\n    `${order}${thisMonth}`;\r\n\r\n\r\nexport const TooltipContainerStyles = {\r\n    border: 0,\r\n    borderRadius: \"8px\",\r\n    fontSize: 14,\r\n    boxShadow: \"2px 2px 5px 3px rgba(0,0,0,0.15)\"\r\n};\r\n\r\n\r\n\r\n\r\n\r\nconst PageVisits = (props: Props) => {\r\n    const history = useHistory(); \r\n  \r\n    const [orderAnalyticsVisitsState, handleOrderAnalyticsVisitsStateFetch] = useHandleFetch({}, 'getAnalyticsOrders');\r\n    const [orderData, setorderData] = useState([]);\r\n\r\n\r\n    useEffect(()=>{\r\n        const getAnalyticsOrders = async () => {\r\n\r\n            const ordersDataRes =  await handleOrderAnalyticsVisitsStateFetch({\r\n                urlOptions: {\r\n                    params: {\r\n                        metricType: 'dayOfMonth',\r\n                    }\r\n                }\r\n            }); \r\n\r\n           // @ts-ignore\r\n           if(ordersDataRes){\r\n            // @ts-ignore\r\n            setorderData(ordersDataRes);\r\n           }\r\n\r\n           };\r\n           getAnalyticsOrders(); \r\n\r\n    },[]); \r\n\r\n\r\n    console.log('orderAnalyticsVisitsState',orderAnalyticsVisitsState);\r\n\r\n\r\n\r\n\r\n    return (\r\n\r\n        <div className='overviewContainer__body-apiVisits'>\r\n        <div className='overviewContainer__body-apiVisits-header'>\r\n            <div className='overviewContainer__body-apiVisits-header-info'>\r\n                <h2>\r\n                    This Month\r\n                </h2>\r\n                <h3>\r\n                      Order report by days of month \r\n                </h3>\r\n            </div>\r\n        </div>\r\n\r\n        <div className='overviewContainer__body-body'>    \r\n        {orderAnalyticsVisitsState.isLoading && (\r\n            <>\r\n            <div style={{\r\n                display:'flex',\r\n                justifyContent:'center',\r\n                alignItems:\"center\",\r\n                margin:\"100px 0\"\r\n            }}>\r\n            <Spin\r\n            size='large'\r\n             />\r\n                </div>\r\n\r\n            </>\r\n        )}\r\n\r\n        \r\n             {orderAnalyticsVisitsState.done && orderData && orderData.length > 0 && (\r\n                    <ResponsiveContainer width=\"100%\" height={300}>\r\n                    <AreaChart data={orderData} fontSize={12}>\r\n                        <defs>\r\n                            <linearGradient id=\"rainGradient\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\r\n                                <stop offset=\"0%\" stopColor=\"#1890ff\" />\r\n                                <stop offset=\"100%\" stopColor=\"#3066BE22\" />\r\n                            </linearGradient>\r\n                        </defs>\r\n                        <CartesianGrid\r\n                            vertical={false}\r\n                            strokeDasharray=\"3 3\"\r\n                            stroke=\"#d6d9da\"\r\n                        />\r\n                        <XAxis \r\n                         dataKey={'dayOfMonth'} \r\n                         tickFormatter={getMonthNameByOrder}\r\n                         />\r\n                        <YAxis\r\n                            // unit=\"ml\"\r\n                            orientation=\"left\"\r\n                            width={20}\r\n                            axisLine={false}\r\n                            tickLine={false}\r\n                        />\r\n                        <Tooltip\r\n                            cursor={false}\r\n                            contentStyle={TooltipContainerStyles}\r\n                            formatter={(value, name) => [`${value}`, `${name}`]}\r\n                        />\r\n                        <Area\r\n                            dataKey=\"count\"\r\n                            name=\"Count\"\r\n                            type=\"basis\"\r\n                            fill=\"url(#rainGradient)\"\r\n                        />\r\n                    </AreaChart>\r\n                </ResponsiveContainer>\r\n               )}\r\n\r\n\r\n                {orderAnalyticsVisitsState.done && !(orderAnalyticsVisitsState.data.length > 0) && (\r\n                    <div style={{\r\n                        marginTop: '00px'\r\n                    }}>\r\n                        <Empty description={`No Visits for this week`} image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n                    </div>\r\n                )}\r\n\r\n            \r\n\r\n        </div>\r\n        <div className=\"overviewContainer__body-footer\">\r\n            <h3>\r\n                <span>\r\n                    <CalendarOutlined />\r\n                </span>\r\n\r\n                            In the last month\r\n                     </h3>\r\n        </div>\r\n\r\n    </div>\r\n\r\n    )\r\n}\r\n\r\nexport default PageVisits\r\n","import React,{useState, useEffect} from 'react'\r\n\r\n\r\n// import hooks\r\nimport { useHandleFetch } from \"../../../hooks\";\r\n\r\n// import components\r\nimport { DataTableSkeleton } from \"../../../components/Placeholders\";\r\n\r\n// \r\n\r\n\r\n// import lib\r\nimport {\r\n    ResponsiveContainer,\r\n    AreaChart,\r\n    CartesianGrid,\r\n    XAxis,\r\n    YAxis,\r\n    Tooltip,\r\n    Legend,\r\n    Area,\r\n    Line\r\n} from \"recharts\";\r\n\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {\r\n    FileOutlined,\r\n    InboxOutlined,\r\n    RadiusUpleftOutlined,\r\n    RadiusUprightOutlined,\r\n    RadiusBottomleftOutlined,\r\n    RadiusBottomrightOutlined,\r\n    PlusOutlined,\r\n    DeleteOutlined,\r\n    EditOutlined,\r\n    CheckCircleOutlined,\r\n    CalendarOutlined\r\n} from '@ant-design/icons';\r\n\r\nimport { Skeleton, Empty, Popconfirm, Upload, message, Switch, Select, Button, notification, Table, Space, Input as CoolInput, Modal, Spin } from 'antd';\r\n\r\n\r\nconst { Option } = Select;\r\n\r\nconst { Column, ColumnGroup } = Table;\r\n\r\n\r\n\r\ninterface Props {\r\n    \r\n}\r\n\r\nconst localOptions = [\r\n    {\r\n        value: 'category',\r\n        name: 'Category'\r\n    },\r\n     {\r\n        value: 'product',\r\n        name: 'Product'\r\n    }\r\n\r\n]\r\n\r\n\r\n\r\nconst WEEEK = [\r\n    \"Sat\",\r\n    \"Sun\",\r\n    \"Mon\",\r\n    \"Tues\",\r\n    \"Wed\",\r\n    \"Thur\",\r\n    \"Fri\"\r\n];\r\n\r\n\r\nexport const getWeekNameByOrder = (order: number): string | undefined =>\r\n    WEEEK[order - 1];\r\n\r\n\r\n\r\n\r\n\r\nexport const TooltipContainerStyles = {\r\n    border: 0,\r\n    borderRadius: \"8px\",\r\n    fontSize: 14,\r\n    boxShadow: \"2px 2px 5px 3px rgba(0,0,0,0.15)\"\r\n};\r\n\r\n\r\n\r\n\r\n\r\nconst PageVisits = (props: Props) => {\r\n    const history = useHistory(); \r\n  \r\n    const [orderAnalyticsVisitsState, handleOrderAnalyticsVisitsStateFetch] = useHandleFetch({}, 'getAnalyticsOrders');\r\n    const [orderData, setorderData] = useState([]);\r\n\r\n\r\n    useEffect(()=>{\r\n        const getAnalyticsOrders = async () => {\r\n\r\n            const ordersDataRes =  await handleOrderAnalyticsVisitsStateFetch({\r\n                urlOptions: {\r\n                    params: {\r\n                        metricType: 'dayOfWeek',\r\n                    }\r\n                }\r\n            }); \r\n\r\n           // @ts-ignore\r\n           if(ordersDataRes){\r\n            // @ts-ignore\r\n            setorderData(ordersDataRes);\r\n           }\r\n\r\n           };\r\n           getAnalyticsOrders(); \r\n\r\n    },[]); \r\n\r\n\r\n    console.log('orderAnalyticsVisitsState',orderAnalyticsVisitsState);\r\n\r\n\r\n\r\n\r\n    return (\r\n\r\n        <div className='overviewContainer__body-apiVisits'>\r\n        <div className='overviewContainer__body-apiVisits-header'>\r\n            <div className='overviewContainer__body-apiVisits-header-info'>\r\n                <h2>\r\n                    This Week\r\n                </h2>\r\n                <h3>\r\n                      Order report by days of week \r\n                </h3>\r\n            </div>\r\n        </div>\r\n\r\n        <div className='overviewContainer__body-body'>    \r\n        {orderAnalyticsVisitsState.isLoading && (\r\n            <>\r\n            <div style={{\r\n                display:'flex',\r\n                justifyContent:'center',\r\n                alignItems:\"center\",\r\n                margin:\"100px 0\"\r\n            }}>\r\n            <Spin\r\n            size='large'\r\n             />\r\n                </div>\r\n\r\n            </>\r\n        )}\r\n\r\n        \r\n{orderAnalyticsVisitsState.done && orderData && orderData.length > 0 && (\r\n                    <ResponsiveContainer width=\"100%\" height={300}>\r\n                    <AreaChart data={orderData} fontSize={12}>\r\n                        <defs>\r\n                            <linearGradient id=\"rainGradient\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\r\n                                <stop offset=\"0%\" stopColor=\"#1890ff\" />\r\n                                <stop offset=\"100%\" stopColor=\"#3066BE22\" />\r\n                            </linearGradient>\r\n                        </defs>\r\n                        <CartesianGrid\r\n                            vertical={false}\r\n                            strokeDasharray=\"3 3\"\r\n                            stroke=\"#d6d9da\"\r\n                        />\r\n                        <XAxis \r\n                         dataKey={'dayOfWeek'} \r\n                         tickFormatter={getWeekNameByOrder}\r\n                         />\r\n                        <YAxis\r\n                            // unit=\"ml\"\r\n                            orientation=\"left\"\r\n                            width={20}\r\n                            axisLine={false}\r\n                            tickLine={false}\r\n                        />\r\n                        <Tooltip\r\n                            cursor={false}\r\n                            contentStyle={TooltipContainerStyles}\r\n                            formatter={(value, name) => [`${value}`, `${name}`]}\r\n                        />\r\n                        <Area\r\n                            dataKey=\"count\"\r\n                            name=\"Count\"\r\n                            type=\"basis\"\r\n                            fill=\"url(#rainGradient)\"\r\n                        />\r\n                    </AreaChart>\r\n                </ResponsiveContainer>\r\n               )}\r\n\r\n\r\n                {orderAnalyticsVisitsState.done && !(orderAnalyticsVisitsState.data.length > 0) && (\r\n                    <div style={{\r\n                        marginTop: '00px'\r\n                    }}>\r\n                        <Empty description={`No Visits for this week`} image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n                    </div>\r\n                )}\r\n\r\n            \r\n\r\n        </div>\r\n        <div className=\"overviewContainer__body-footer\">\r\n            <h3>\r\n                <span>\r\n                    <CalendarOutlined />\r\n                </span>\r\n\r\n                            In the last month\r\n                     </h3>\r\n        </div>\r\n\r\n    </div>\r\n\r\n    )\r\n}\r\n\r\nexport default PageVisits\r\n","import React,{useState, useEffect} from 'react'\r\n\r\n\r\n// import hooks\r\nimport { useHandleFetch } from \"../../../hooks\";\r\n\r\n// import components\r\nimport { DataTableSkeleton } from \"../../../components/Placeholders\";\r\n\r\n// \r\n\r\n\r\n// import lib\r\nimport {\r\n    ResponsiveContainer,\r\n    AreaChart,\r\n    CartesianGrid,\r\n    XAxis,\r\n    YAxis,\r\n    Tooltip,\r\n    Legend,\r\n    Area,\r\n    Line\r\n} from \"recharts\";\r\n\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {\r\n    FileOutlined,\r\n    InboxOutlined,\r\n    RadiusUpleftOutlined,\r\n    RadiusUprightOutlined,\r\n    RadiusBottomleftOutlined,\r\n    RadiusBottomrightOutlined,\r\n    PlusOutlined,\r\n    DeleteOutlined,\r\n    EditOutlined,\r\n    CheckCircleOutlined,\r\n    CalendarOutlined\r\n} from '@ant-design/icons';\r\n\r\nimport { Skeleton, Empty, Popconfirm, Upload, message, Switch, Select, Button, notification, Table, Space, Input as CoolInput, Modal, Spin } from 'antd';\r\n\r\n\r\nconst { Option } = Select;\r\n\r\nconst { Column, ColumnGroup } = Table;\r\n\r\n\r\n\r\ninterface Props {\r\n    \r\n}\r\n\r\nconst localOptions = [\r\n    {\r\n        value: 'category',\r\n        name: 'Category'\r\n    },\r\n     {\r\n        value: 'product',\r\n        name: 'Product'\r\n    }\r\n\r\n]\r\n\r\n\r\n\r\nconst WEEEK = [\r\n    \"Sat\",\r\n    \"Sun\",\r\n    \"Mon\",\r\n    \"Tues\",\r\n    \"Wed\",\r\n    \"Thur\",\r\n    \"Fri\"\r\n];\r\n\r\n\r\nexport const getWeekNameByOrder = (order: number): string | undefined =>\r\n    WEEEK[order - 1];\r\n\r\nexport const TooltipContainerStyles = {\r\n    border: 0,\r\n    borderRadius: \"8px\",\r\n    fontSize: 14,\r\n    boxShadow: \"2px 2px 5px 3px rgba(0,0,0,0.15)\"\r\n};\r\n\r\n\r\nconst PageVisits = (props: Props) => {\r\n    const history = useHistory(); \r\n  \r\n    const [orderAnalyticsVisitsState, handleOrderAnalyticsVisitsStateFetch] = useHandleFetch({}, 'getAnalyticsOrders');\r\n    const [orderData, setorderData] = useState([]);\r\n\r\n\r\n    useEffect(()=>{\r\n        const getAnalyticsOrders = async () => {\r\n\r\n            const ordersDataRes =  await handleOrderAnalyticsVisitsStateFetch({\r\n                urlOptions: {\r\n                    params: {\r\n                        metricType: 'date',\r\n                    }\r\n                }\r\n            }); \r\n\r\n           // @ts-ignore\r\n           if(ordersDataRes){\r\n            // @ts-ignore\r\n            setorderData(ordersDataRes);\r\n           }\r\n\r\n           };\r\n           getAnalyticsOrders(); \r\n\r\n    },[]); \r\n\r\n\r\n    console.log('orderAnalyticsVisitsState',orderAnalyticsVisitsState);\r\n\r\n\r\n    return (\r\n\r\n        <div className='overviewContainer__body-apiVisits'>\r\n        <div className='overviewContainer__body-apiVisits-header'>\r\n            <div className='overviewContainer__body-apiVisits-header-info'>\r\n                <h2>\r\n                   BY DATE\r\n                </h2>\r\n                <h3>\r\n                      Order report by date\r\n                </h3>\r\n            </div>\r\n        </div>\r\n\r\n        <div className='overviewContainer__body-body'>    \r\n        {orderAnalyticsVisitsState.isLoading && (\r\n            <>\r\n            <div style={{\r\n                display:'flex',\r\n                justifyContent:'center',\r\n                alignItems:\"center\",\r\n                margin:\"100px 0\"\r\n            }}>\r\n            <Spin\r\n            size='large'\r\n             />\r\n                </div>\r\n\r\n            </>\r\n        )}\r\n\r\n        \r\n             {orderAnalyticsVisitsState.done && orderData && orderData.length > 0 && (\r\n                    <ResponsiveContainer width=\"100%\" height={300}>\r\n                    <AreaChart data={orderData} fontSize={12}>\r\n                        <defs>\r\n                            <linearGradient id=\"rainGradient\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\r\n                                <stop offset=\"0%\" stopColor=\"#1890ff\" />\r\n                                <stop offset=\"100%\" stopColor=\"#3066BE22\" />\r\n                            </linearGradient>\r\n                        </defs>\r\n                        <CartesianGrid\r\n                            vertical={false}\r\n                            strokeDasharray=\"3 3\"\r\n                            stroke=\"#d6d9da\"\r\n                        />\r\n                        <XAxis \r\n                         dataKey={'date'} \r\n                        //  tickFormatter={getWeekNameByOrder}\r\n                         />\r\n                        <YAxis\r\n                            // unit=\"ml\"\r\n                            orientation=\"left\"\r\n                            width={20}\r\n                            axisLine={false}\r\n                            tickLine={false}\r\n                        />\r\n                        <Tooltip\r\n                            cursor={false}\r\n                            contentStyle={TooltipContainerStyles}\r\n                            formatter={(value, name) => [`${value}`, `${name}`]}\r\n                        />\r\n                        <Area\r\n                            dataKey=\"count\"\r\n                            name=\"Count\"\r\n                            type=\"basis\"\r\n                            fill=\"url(#rainGradient)\"\r\n                        />\r\n                    </AreaChart>\r\n                </ResponsiveContainer>\r\n               )}\r\n\r\n\r\n                {orderAnalyticsVisitsState.done && !(orderAnalyticsVisitsState.data.length > 0) && (\r\n                    <div style={{\r\n                        marginTop: '00px'\r\n                    }}>\r\n                        <Empty description={`No Visits for date`} image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n                    </div>\r\n                )}\r\n\r\n            \r\n\r\n        </div>\r\n        <div className=\"overviewContainer__body-footer\">\r\n            <h3>\r\n                <span>\r\n                    <CalendarOutlined />\r\n                </span>\r\n\r\n                            In the last month\r\n                     </h3>\r\n        </div>\r\n\r\n    </div>\r\n\r\n    )\r\n}\r\n\r\nexport default PageVisits\r\n","import React,{useState, useEffect} from 'react'\r\n\r\n\r\n// import hooks\r\nimport { useHandleFetch } from \"../../../hooks\";\r\n\r\n// import components\r\nimport { DataTableSkeleton } from \"../../../components/Placeholders\";\r\n\r\n// \r\n\r\n\r\n// import lib\r\nimport {\r\n    ResponsiveContainer,\r\n    AreaChart,\r\n    CartesianGrid,\r\n    XAxis,\r\n    YAxis,\r\n    Tooltip,\r\n    Legend,\r\n    Area,\r\n    Line\r\n} from \"recharts\";\r\n\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {\r\n    FileOutlined,\r\n    InboxOutlined,\r\n    RadiusUpleftOutlined,\r\n    RadiusUprightOutlined,\r\n    RadiusBottomleftOutlined,\r\n    RadiusBottomrightOutlined,\r\n    PlusOutlined,\r\n    DeleteOutlined,\r\n    EditOutlined,\r\n    CheckCircleOutlined,\r\n    CalendarOutlined\r\n} from '@ant-design/icons';\r\n\r\nimport { Skeleton, Empty, Popconfirm, Upload, message, Switch, Select, Button, notification, Table, Space, Input as CoolInput, Modal, Spin } from 'antd';\r\n\r\n\r\nconst { Option } = Select;\r\n\r\nconst { Column, ColumnGroup } = Table;\r\n\r\n\r\n\r\ninterface Props {\r\n    \r\n}\r\n\r\nconst localOptions = [\r\n    {\r\n        value: 'category',\r\n        name: 'Category'\r\n    },\r\n     {\r\n        value: 'product',\r\n        name: 'Product'\r\n    }\r\n\r\n]\r\n\r\nexport const getHourFormatter = (order: number): string | undefined =>\r\n    `${order}hr`;\r\n\r\n\r\nexport const TooltipContainerStyles = {\r\n    border: 0,\r\n    borderRadius: \"8px\",\r\n    fontSize: 14,\r\n    boxShadow: \"2px 2px 5px 3px rgba(0,0,0,0.15)\"\r\n};\r\n\r\n\r\n\r\nconst PageVisits = (props: Props) => {\r\n    const history = useHistory(); \r\n  \r\n    const [orderAnalyticsVisitsState, handleOrderAnalyticsVisitsStateFetch] = useHandleFetch({}, 'getAnalyticsOrders');\r\n    const [orderData, setorderData] = useState([]);\r\n\r\n\r\n    useEffect(()=>{\r\n        const getAnalyticsOrders = async () => {\r\n\r\n            const ordersDataRes =  await handleOrderAnalyticsVisitsStateFetch({\r\n                urlOptions: {\r\n                    params: {\r\n                        metricType: 'hour',\r\n                    }\r\n                }\r\n            }); \r\n\r\n           // @ts-ignore\r\n           if(ordersDataRes){\r\n            // @ts-ignore\r\n            setorderData(ordersDataRes);\r\n           }\r\n\r\n           };\r\n           getAnalyticsOrders(); \r\n\r\n    },[]); \r\n\r\n\r\n    console.log('orderAnalyticsVisitsState',orderAnalyticsVisitsState);\r\n\r\n\r\n\r\n\r\n    return (\r\n\r\n        <div className='overviewContainer__body-apiVisits'>\r\n        <div className='overviewContainer__body-apiVisits-header'>\r\n            <div className='overviewContainer__body-apiVisits-header-info'>\r\n                <h2>\r\n                    BY HOUR\r\n                </h2>\r\n                <h3>\r\n                      Order report by hours \r\n                </h3>\r\n            </div>\r\n        </div>\r\n\r\n        \r\n        <div className='overviewContainer__body-body'>    \r\n        {orderAnalyticsVisitsState.isLoading && (\r\n            <>\r\n            <div style={{\r\n                display:'flex',\r\n                justifyContent:'center',\r\n                alignItems:\"center\",\r\n                margin:\"100px 0\"\r\n            }}>\r\n            <Spin\r\n            size='large'\r\n             />\r\n                </div>\r\n\r\n            </>\r\n        )}\r\n\r\n        \r\n             {orderAnalyticsVisitsState.done && orderData && orderData.length > 0 && (\r\n                    <ResponsiveContainer width=\"100%\" height={300}>\r\n                    <AreaChart data={orderData} fontSize={12}>\r\n                        <defs>\r\n                            <linearGradient id=\"rainGradient\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\r\n                                <stop offset=\"0%\" stopColor=\"#1890ff\" />\r\n                                <stop offset=\"100%\" stopColor=\"#3066BE22\" />\r\n                            </linearGradient>\r\n                        </defs>\r\n                        <CartesianGrid\r\n                            vertical={false}\r\n                            strokeDasharray=\"3 3\"\r\n                            stroke=\"#d6d9da\"\r\n                        />\r\n                        <XAxis \r\n                         dataKey={'hour'} \r\n                         tickFormatter={getHourFormatter}\r\n                         />\r\n                        <YAxis\r\n                            // unit=\"ml\"\r\n                            orientation=\"left\"\r\n                            width={20}\r\n                            axisLine={false}\r\n                            tickLine={false}\r\n                        />\r\n                        <Tooltip\r\n                            cursor={false}\r\n                            contentStyle={TooltipContainerStyles}\r\n                            formatter={(value, name) => [`${value}`, `${name}`]}\r\n                        />\r\n                        <Area\r\n                            dataKey=\"count\"\r\n                            name=\"Count\"\r\n                            type=\"basis\"\r\n                            fill=\"url(#rainGradient)\"\r\n                        />\r\n                    </AreaChart>\r\n                </ResponsiveContainer>\r\n               )}\r\n\r\n\r\n                {orderAnalyticsVisitsState.done && !(orderAnalyticsVisitsState.data.length > 0) && (\r\n                    <div style={{\r\n                        marginTop: '00px'\r\n                    }}>\r\n                        <Empty description={`No Visits for hours`} image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n                    </div>\r\n                )}\r\n\r\n            \r\n\r\n        </div>\r\n        <div className=\"overviewContainer__body-footer\">\r\n            <h3>\r\n                <span>\r\n                    <CalendarOutlined />\r\n                </span>\r\n\r\n                            In the last month\r\n                     </h3>\r\n        </div>\r\n\r\n    </div>\r\n\r\n    )\r\n}\r\n\r\nexport default PageVisits\r\n","import React,{useState, useEffect} from 'react'\r\n\r\n\r\n// import hooks\r\nimport { useHandleFetch } from \"../../../hooks\";\r\n\r\n// import components\r\nimport { DataTableSkeleton } from \"../../../components/Placeholders\";\r\n\r\n// \r\n\r\n\r\n// import lib\r\nimport {\r\n    ResponsiveContainer,\r\n    AreaChart,\r\n    CartesianGrid,\r\n    XAxis,\r\n    YAxis,\r\n    Tooltip,\r\n    Legend,\r\n    Area,\r\n    Line\r\n} from \"recharts\";\r\n\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {\r\n    FileOutlined,\r\n    InboxOutlined,\r\n    RadiusUpleftOutlined,\r\n    RadiusUprightOutlined,\r\n    RadiusBottomleftOutlined,\r\n    RadiusBottomrightOutlined,\r\n    PlusOutlined,\r\n    DeleteOutlined,\r\n    EditOutlined,\r\n    CheckCircleOutlined,\r\n    CalendarOutlined\r\n} from '@ant-design/icons';\r\n\r\nimport { Skeleton, Empty, Popconfirm, Upload, message, Switch, Select, Button, notification, Table, Space, Input as CoolInput, Modal, Spin } from 'antd';\r\n\r\n\r\nconst { Option } = Select;\r\n\r\nconst { Column, ColumnGroup } = Table;\r\n\r\n\r\n\r\ninterface Props {\r\n    \r\n}\r\n\r\nconst localOptions = [\r\n    {\r\n        value: 'category',\r\n        name: 'Category'\r\n    },\r\n     {\r\n        value: 'product',\r\n        name: 'Product'\r\n    }\r\n\r\n]\r\n\r\n\r\nconst MONTHS = [\r\n    \"Jan\",\r\n    \"Feb\",\r\n    \"Mar\",\r\n    \"Apr\",\r\n    \"May\",\r\n    \"Jun\",\r\n    \"Jul\",\r\n    \"Aug\",\r\n    \"Sep\",\r\n    \"Oct\",\r\n    \"Nov\",\r\n    \"Dec\"\r\n];\r\n\r\n\r\nexport const getMonthNameByOrder = (order: number): string | undefined =>\r\n `${MONTHS[order - 1]}`;\r\n\r\n\r\n\r\nexport const TooltipContainerStyles = {\r\n    border: 0,\r\n    borderRadius: \"8px\",\r\n    fontSize: 14,\r\n    boxShadow: \"2px 2px 5px 3px rgba(0,0,0,0.15)\"\r\n};\r\n\r\n\r\n\r\n\r\n\r\nconst PageVisits = (props: Props) => {\r\n    const history = useHistory(); \r\n  \r\n    const [orderAnalyticsVisitsState, handleOrderAnalyticsVisitsStateFetch] = useHandleFetch({}, 'getAnalyticsOrders');\r\n    const [orderData, setorderData] = useState([]);\r\n\r\n\r\n\r\n\r\n    useEffect(()=>{\r\n        const getAnalyticsOrders = async () => {\r\n\r\n            const ordersDataRes =  await handleOrderAnalyticsVisitsStateFetch({\r\n                urlOptions: {\r\n                    params: {\r\n                        metricType: 'month',\r\n                    }\r\n                }\r\n            }); \r\n\r\n           // @ts-ignore\r\n           if(ordersDataRes){\r\n            // @ts-ignore\r\n            setorderData(ordersDataRes);\r\n           }\r\n\r\n           };\r\n           getAnalyticsOrders(); \r\n\r\n    },[]); \r\n\r\n\r\n    console.log('orderAnalyticsVisitsStateMonth',orderAnalyticsVisitsState);\r\n\r\n\r\n\r\n\r\n    return (\r\n\r\n        <div className='overviewContainer__body-apiVisits'>\r\n        <div className='overviewContainer__body-apiVisits-header'>\r\n            <div className='overviewContainer__body-apiVisits-header-info'>\r\n                <h2>\r\n                   BY MONTH\r\n                </h2>\r\n                <h3>\r\n                   Order report by month\r\n                </h3>\r\n            </div>\r\n        </div>\r\n\r\n        <div className='overviewContainer__body-body'>    \r\n        {orderAnalyticsVisitsState.isLoading && (\r\n            <>\r\n            <div style={{\r\n                display:'flex',\r\n                justifyContent:'center',\r\n                alignItems:\"center\",\r\n                margin:\"100px 0\"\r\n            }}>\r\n            <Spin\r\n            size='large'\r\n             />\r\n                </div>\r\n\r\n            </>\r\n        )}\r\n\r\n        \r\n             {orderAnalyticsVisitsState.done && orderData && orderData.length > 0 && (\r\n                    <ResponsiveContainer width=\"100%\" height={300}>\r\n                    <AreaChart data={orderData} fontSize={12}>\r\n                        <defs>\r\n                            <linearGradient id=\"rainGradient\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\r\n                                <stop offset=\"0%\" stopColor=\"#1890ff\" />\r\n                                <stop offset=\"100%\" stopColor=\"#3066BE22\" />\r\n                            </linearGradient>\r\n                        </defs>\r\n                        <CartesianGrid\r\n                            vertical={false}\r\n                            strokeDasharray=\"3 3\"\r\n                            stroke=\"#d6d9da\"\r\n                        />\r\n                        <XAxis \r\n                         dataKey={'month'} \r\n                         tickFormatter={getMonthNameByOrder}\r\n                         />\r\n                        <YAxis\r\n                            // unit=\"ml\"\r\n                            orientation=\"left\"\r\n                            width={20}\r\n                            axisLine={false}\r\n                            tickLine={false}\r\n                        />\r\n                        <Tooltip\r\n                            cursor={false}\r\n                            contentStyle={TooltipContainerStyles}\r\n                            formatter={(value, name) => [`${value}`, `${name}`]}\r\n                        />\r\n                        <Area\r\n                            dataKey=\"count\"\r\n                            name=\"Count\"\r\n                            type=\"basis\"\r\n                            fill=\"url(#rainGradient)\"\r\n                        />\r\n                    </AreaChart>\r\n                </ResponsiveContainer>\r\n               )}\r\n\r\n\r\n                {orderAnalyticsVisitsState.done && !(orderAnalyticsVisitsState.data.length > 0) && (\r\n                    <div style={{\r\n                        marginTop: '00px'\r\n                    }}>\r\n                        <Empty description={`No Visits for this months`} image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n                    </div>\r\n                )}\r\n\r\n            \r\n\r\n        </div>\r\n        <div className=\"overviewContainer__body-footer\">\r\n            <h3>\r\n                <span>\r\n                    <CalendarOutlined />\r\n                </span>\r\n\r\n                            In the last month\r\n         </h3>\r\n        </div>\r\n\r\n    </div>\r\n\r\n    )\r\n}\r\n\r\nexport default PageVisits\r\n","import React,{useState, useEffect} from 'react'\r\n\r\n\r\n// import hooks\r\nimport { useHandleFetch } from \"../../../hooks\";\r\n\r\n// import components\r\nimport { DataTableSkeleton } from \"../../../components/Placeholders\";\r\n\r\n// \r\n\r\n\r\n// import lib\r\nimport {\r\n    ResponsiveContainer,\r\n    AreaChart,\r\n    CartesianGrid,\r\n    XAxis,\r\n    YAxis,\r\n    Tooltip,\r\n    Legend,\r\n    Area,\r\n    Line\r\n} from \"recharts\";\r\n\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {\r\n    FileOutlined,\r\n    InboxOutlined,\r\n    RadiusUpleftOutlined,\r\n    RadiusUprightOutlined,\r\n    RadiusBottomleftOutlined,\r\n    RadiusBottomrightOutlined,\r\n    PlusOutlined,\r\n    DeleteOutlined,\r\n    EditOutlined,\r\n    CheckCircleOutlined,\r\n    CalendarOutlined\r\n} from '@ant-design/icons';\r\n\r\nimport { Skeleton, Empty, Popconfirm, Upload, message, Switch, Select, Button, notification, Table, Space, Input as CoolInput, Modal, Spin } from 'antd';\r\n\r\n\r\nconst { Option } = Select;\r\n\r\nconst { Column, ColumnGroup } = Table;\r\n\r\n\r\n\r\ninterface Props {\r\n    \r\n}\r\n\r\nconst localOptions = [\r\n    {\r\n        value: 'category',\r\n        name: 'Category'\r\n    },\r\n     {\r\n        value: 'product',\r\n        name: 'Product'\r\n    }\r\n\r\n]\r\n\r\n\r\n\r\nconst WEEEK = [\r\n    \"Sat\",\r\n    \"Sun\",\r\n    \"Mon\",\r\n    \"Tues\",\r\n    \"Wed\",\r\n    \"Thur\",\r\n    \"Fri\"\r\n];\r\n\r\n\r\nexport const getWeekNameByOrder = (order: number): string | undefined =>\r\n    WEEEK[order - 1];\r\n\r\n\r\n\r\n\r\n\r\nexport const TooltipContainerStyles = {\r\n    border: 0,\r\n    borderRadius: \"8px\",\r\n    fontSize: 14,\r\n    boxShadow: \"2px 2px 5px 3px rgba(0,0,0,0.15)\"\r\n};\r\n\r\n\r\n\r\n\r\n\r\nconst PageVisits = (props: Props) => {\r\n    const history = useHistory(); \r\n  \r\n    const [orderAnalyticsVisitsState, handleOrderAnalyticsVisitsStateFetch] = useHandleFetch({}, 'getAnalyticsOrders');\r\n    const [orderData, setorderData] = useState([]);\r\n\r\n\r\n    useEffect(()=>{\r\n        const getAnalyticsOrders = async () => {\r\n\r\n            const ordersDataRes =  await handleOrderAnalyticsVisitsStateFetch({\r\n                urlOptions: {\r\n                    params: {\r\n                        metricType: 'year',\r\n                    }\r\n                }\r\n            }); \r\n\r\n           // @ts-ignore\r\n           if(ordersDataRes){\r\n            // @ts-ignore\r\n            setorderData(ordersDataRes);\r\n           }\r\n\r\n           };\r\n           getAnalyticsOrders(); \r\n\r\n    },[]); \r\n\r\n\r\n    console.log('orderAnalyticsVisitsState',orderAnalyticsVisitsState);\r\n\r\n\r\n\r\n\r\n    return (\r\n\r\n        <div className='overviewContainer__body-apiVisits'>\r\n        <div className='overviewContainer__body-apiVisits-header'>\r\n            <div className='overviewContainer__body-apiVisits-header-info'>\r\n                <h2>\r\n                    By Year\r\n                </h2>\r\n                <h3>\r\n                      Order report by year \r\n                </h3>\r\n            </div>\r\n        </div>\r\n\r\n        <div className='overviewContainer__body-body'>    \r\n        {orderAnalyticsVisitsState.isLoading && (\r\n            <>\r\n            <div style={{\r\n                display:'flex',\r\n                justifyContent:'center',\r\n                alignItems:\"center\",\r\n                margin:\"100px 0\"\r\n            }}>\r\n            <Spin\r\n            size='large'\r\n             />\r\n                </div>\r\n\r\n            </>\r\n        )}\r\n\r\n        \r\n             {orderAnalyticsVisitsState.done && orderData && orderData.length > 0 && (\r\n                    <ResponsiveContainer width=\"100%\" height={300}>\r\n                    <AreaChart data={orderData} fontSize={12}>\r\n                        <defs>\r\n                            <linearGradient id=\"rainGradient\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\r\n                                <stop offset=\"0%\" stopColor=\"#1890ff\" />\r\n                                <stop offset=\"100%\" stopColor=\"#3066BE22\" />\r\n                            </linearGradient>\r\n                        </defs>\r\n                        <CartesianGrid\r\n                            vertical={false}\r\n                            strokeDasharray=\"3 3\"\r\n                            stroke=\"#d6d9da\"\r\n                        />\r\n                        <XAxis \r\n                         dataKey={'year'} \r\n                        //  tickFormatter={getWeekNameByOrder}\r\n                         />\r\n                        <YAxis\r\n                            // unit=\"ml\"\r\n                            orientation=\"left\"\r\n                            width={20}\r\n                            axisLine={false}\r\n                            tickLine={false}\r\n                        />\r\n                        <Tooltip\r\n                            cursor={false}\r\n                            contentStyle={TooltipContainerStyles}\r\n                            formatter={(value, name) => [`${value}`, `${name}`]}\r\n                        />\r\n                        <Area\r\n                            dataKey=\"count\"\r\n                            name=\"Count\"\r\n                            type=\"basis\"\r\n                            fill=\"url(#rainGradient)\"\r\n                        />\r\n                    </AreaChart>\r\n                </ResponsiveContainer>\r\n               )}\r\n\r\n\r\n                {orderAnalyticsVisitsState.done && !(orderAnalyticsVisitsState.data.length > 0) && (\r\n                    <div style={{\r\n                        marginTop: '00px'\r\n                    }}>\r\n                        <Empty description={`No Visits for this year`} image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n                    </div>\r\n                )}\r\n\r\n            \r\n\r\n        </div>\r\n        <div className=\"overviewContainer__body-footer\">\r\n            <h3>\r\n                <span>\r\n                    <CalendarOutlined />\r\n                </span>\r\n\r\n                    In the last year\r\n            </h3>\r\n        </div>\r\n\r\n    </div>\r\n\r\n    )\r\n}\r\n\r\nexport default PageVisits\r\n","import OrderOverviewReport from \"./OrderOverviewReport\";\r\nexport default OrderOverviewReport;","import React, { useEffect, useState } from 'react';\r\n\r\n// import components \r\nimport ThisMonthOrderReport from \"./ThisMonthOrderReport\";\r\nimport ThisWeekOrderReport from \"./ThisWeekOrderReport\";\r\nimport DateOrderReport from \"./DateOrderReport\";\r\nimport HourOrderReport from \"./HourOrderReport\";\r\nimport MonthOrderReport from \"./MonthOrderReport\";\r\nimport YearOrderReport from \"./YearOrderReport\";\r\n\r\n// import lib \r\nimport { message, Tooltip, Modal, Tabs, Empty, Badge } from 'antd';\r\n\r\nimport {\r\n\tDeleteOutlined,\r\n\tFileAddOutlined,\r\n\tCheckCircleOutlined,\r\n\tFileImageFilled,\r\n\tFileImageOutlined,\r\n\tFileImageTwoTone,\r\n\tPlusOutlined,\r\n\tPlusCircleOutlined,\r\n\tCloseOutlined,\r\n\tCheckOutlined,\r\n\tInfoCircleOutlined,\r\n\tUserOutlined,\r\n\tCalendarOutlined,\r\n\tGoldOutlined,\r\n\tShoppingCartOutlined,\r\n\tTagOutlined\r\n} from '@ant-design/icons';\r\n\r\n// import hooks\r\nimport { useHandleFetch } from \"../../../hooks\";\r\n\r\n\r\ninterface Props { }\r\n\r\nconst Overview = (props: Props) => {\r\n\tconst [analyticsProductVisitCountState, handleAnalyticsProductVisitCountFetch] = useHandleFetch({}, 'getAnalyticsPageVisitCount');\r\n\tconst [analyticsCategoryVisitCountState, handleAnalyticsCategoryVisitCountFetch] = useHandleFetch({}, 'getAnalyticsPageVisitCount');\r\n\tconst [totalUserCountState, handleGetTotalUserCountFetch] = useHandleFetch({}, 'getAnalyticsTotalUserCount');\r\n\r\n\r\n\r\n\tuseEffect(() => {\r\n\r\n\t\tconst getTotalUserCount = async () => {\r\n\t\t\tawait handleGetTotalUserCountFetch({});\r\n\t\t}\r\n\r\n\t\tgetTotalUserCount();\r\n\t}, []);\r\n\r\n\r\n\t\r\n\tuseEffect(()=>{\r\n\t\tconst getProductVisitCount = async () => {\r\n\t\t\tawait handleAnalyticsProductVisitCountFetch({\r\n\t\t\t\tparams: 'product'\r\n\t\t\t})\r\n\t\t}; \r\n\t\tgetProductVisitCount();\r\n\t},[])\r\n\r\n\r\n\r\n\tuseEffect(()=>{\r\n\t\tconst getCategoryVisitCount = async () => {\r\n\t\t\tawait handleAnalyticsCategoryVisitCountFetch({\r\n\t\t\t\tparams: 'category'\r\n\t\t\t})\r\n\t\t}; \r\n\t\tgetCategoryVisitCount();\r\n\t},[])\r\n\r\n\r\n\r\n\r\n\r\n\r\n\treturn (\r\n\t\t<div className='overviewContainer'>\r\n\t\t\t<div className=\"overviewContainer__body\">\r\n\t\t\t\t<ThisWeekOrderReport />\r\n\t\t\t\t<ThisMonthOrderReport />\r\n\t\t\t</div>\r\n\r\n\t\t\t<div className=\"overviewContainer__body\">\r\n\t\t\t\t<DateOrderReport />\r\n\t\t\t\t<HourOrderReport />\r\n\t\t\t</div>\r\n\r\n\t\t\t<div className=\"overviewContainer__body\">\r\n\t\t\t\t<MonthOrderReport />\r\n\t\t\t\t<YearOrderReport />\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Overview;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { AutoComplete, Tooltip } from 'antd';\r\n\r\nimport InputSmall from '../../components/Field/InputSmall';\r\nimport MediaLibrary from '../../components/MediaLibrary';\r\n\r\nimport { useFetch } from \"../../hooks\";\r\nimport {\r\n    DeleteOutlined,\r\n    FileAddOutlined,\r\n    FileImageFilled,\r\n    PlusOutlined,\r\n    CheckCircleOutlined,\r\n    CloseOutlined,\r\n    CheckOutlined,\r\n    InfoCircleOutlined\r\n} from '@ant-design/icons';\r\n\r\n\r\n\r\nconst Complete = ({ setItemsList, itemsList, componentItem }) => {\r\n\r\n\r\n    const [localComponentItem, setlocalComponentItem] = useState({\r\n        title: componentItem.title,\r\n        target: componentItem.target,\r\n        text: componentItem.text,\r\n        image: componentItem.image,\r\n    })\r\n\r\n    const [myImages, setmyImages] = useState([]);\r\n    const [visibleMedia, setvisibleMedia] = useState(false);\r\n\r\n    const handleComponentItemsChange = (e) => {\r\n        const name = e.target.name;\r\n        const value = e.target.value;\r\n\r\n        setlocalComponentItem({\r\n            ...localComponentItem,\r\n            [name]: value\r\n        });\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (myImages.length > 0) {\r\n            const newImages = myImages.map(item => item.id);\r\n            setlocalComponentItem({\r\n                ...localComponentItem,\r\n                image: [...newImages]\r\n            })\r\n        }\r\n        else {\r\n            setlocalComponentItem({\r\n                ...localComponentItem,\r\n                image: []\r\n            })\r\n        }\r\n\r\n    }, [myImages])\r\n\r\n    useEffect(() => {\r\n        const positionInAttribute = () => {\r\n            return itemsList.map(item => item.id).indexOf(componentItem.id);\r\n        }\r\n\r\n        const index = positionInAttribute();\r\n\r\n        const updatedItem = Object.assign({}, itemsList[index], { ...localComponentItem });\r\n        const updateComponentList = [...itemsList.slice(0, index), updatedItem, ...itemsList.slice(index + 1)];\r\n        setItemsList(updateComponentList);\r\n\r\n    }, [localComponentItem])\r\n\r\n\r\n    const handleAttributeDelete = () => {\r\n\r\n        const updateComponentList = itemsList.filter(item => item.id !== componentItem.id);\r\n        setItemsList(updateComponentList);\r\n    }\r\n\r\n\r\n    const handleImagesDelete = (id) => {\r\n        // @ts-ignore\r\n        const newImages = myImages && myImages.filter(image => {\r\n            return image.id !== id;\r\n        })\r\n\r\n        setmyImages(newImages);\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n\r\n\r\n            <div className='componentItemsContainer__item'>\r\n                <InputSmall\r\n                    label='Title'\r\n                    value={localComponentItem.title}\r\n                    name='title'\r\n                    onChange={handleComponentItemsChange}\r\n                />\r\n                <InputSmall\r\n                    label='Text'\r\n                    value={localComponentItem.text}\r\n                    name='text'\r\n                    onChange={handleComponentItemsChange}\r\n                />\r\n\r\n                <InputSmall\r\n                    label='Target'\r\n                    value={localComponentItem.target}\r\n                    name='target'\r\n                    onChange={handleComponentItemsChange}\r\n                />\r\n\r\n\r\n                <h3 className='inputFieldLabel-small'>Images</h3>\r\n                <div style={{\r\n                    marginBottom: \"-1px\"\r\n                }}></div>\r\n\r\n                <div className='aboutToUploadImagesContainer'>\r\n                    {myImages &&\r\n                        // @ts-ignore\r\n                        myImages.length > 0 && myImages.map((image, index) => {\r\n                            return (\r\n                                <div className='aboutToUploadImagesContainer__item aboutToUploadImagesContainer__item-small'>\r\n                                    <div\r\n                                        className='aboutToUploadImagesContainer__item-imgContainer'\r\n                                    >\r\n                                        <img src={image.cover} alt={image.alt} />\r\n                                    </div>\r\n\r\n                                    <span\r\n                                        onClick={() => handleImagesDelete(image.id)}\r\n                                        className='aboutToUploadImagesContainer__item-remove'>\r\n                                        <CloseOutlined />\r\n                                    </span>\r\n                                </div>\r\n                            )\r\n                        })}\r\n\r\n\r\n                    <Tooltip\r\n                        title={'Attach images'}>\r\n\r\n                        <div\r\n                            onClick={() => {\r\n                                setvisibleMedia(true);\r\n                            }}\r\n                            className='aboutToUploadImagesContainer__uploadItem aboutToUploadImagesContainer__uploadItem-small'>\r\n                            {/* <FileAddOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FileImageTwoTone />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FileImageOutlined /> */}\r\n                            <FileImageFilled />\r\n                            {/* <h5>\r\n\t\t\t\t\t\t\t\t\t\t\t\t     Select From Library\r\n\t\t\t\t\t\t\t\t\t\t\t<     /h5> */}\r\n                            <span className='aboutToUploadImagesContainer__uploadItem-plus'>\r\n                                <PlusOutlined />\r\n                            </span>\r\n                        </div>\r\n                    </Tooltip>\r\n\r\n                </div>\r\n\r\n\r\n\r\n            </div>\r\n            <MediaLibrary\r\n                setvisible={setvisibleMedia}\r\n                visible={visibleMedia}\r\n                myImages={myImages}\r\n                setmyImages={setmyImages}\r\n                isModalOpenForImages={true}\r\n\r\n            />\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Complete;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n\r\nimport { useHandleFetch } from '../../hooks';\r\n// import third party ui lib\r\nimport { Upload, message, Switch, Select, Button, notification, Modal } from 'antd';\r\n\r\nimport {\r\n    FileOutlined,\r\n    InboxOutlined,\r\n    FileAddOutlined,\r\n    DeleteOutlined,\r\n    CheckCircleOutlined,\r\n    PlusOutlined\r\n} from '@ant-design/icons';\r\n\r\n\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport MediaLibrary from \"../../components/MediaLibrary\";\r\nimport ComponentItem from \"./ComponentItem\";\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    groupName: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Component Created',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Something Went Wrong',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst initialValues = {\r\n    groupName: '',\r\n    items: [],\r\n}\r\n\r\n\r\n\r\ninterface Props {\r\n    addNewCategoryVisible?: any;\r\n    setAddNewCategoryVisible?: any;\r\n    componentList?: any;\r\n    setComponentList?: any;\r\n\r\n}\r\n\r\nconst AddNewBrand = ({ addNewCategoryVisible, setAddNewCategoryVisible, componentList, setComponentList }: Props) => {\r\n\r\n    const [addComponentState, handleAddComponentFetch] = useHandleFetch({}, 'addComponent');\r\n    const [myImages, setmyImages] = useState(false);\r\n    const [itemsList, setItemsList] = useState([])\r\n\r\n\r\n    const handleSubmit = async (values: any, actions: any) => {\r\n\r\n\r\n        const addComponentRes = await handleAddComponentFetch({\r\n            body: {\r\n                groupName: values.groupName,\r\n                items: itemsList\r\n            },\r\n        });\r\n\r\n        // @ts-ignore\r\n        if (addComponentRes && addComponentRes.status === 'ok') {\r\n            openSuccessNotification();\r\n            setComponentList([...componentList, {\r\n                id: addComponentRes['id'] || '',\r\n                key: addComponentRes['id'] || '',\r\n                groupName: addComponentRes['groupName'] || '',\r\n                // @ts-ignore\r\n                ...addComponentRes\r\n            }])\r\n            actions.resetForm();\r\n            setItemsList([])\r\n            setAddNewCategoryVisible(false);\r\n        }\r\n\r\n        else {\r\n            openErrorNotification();\r\n        }\r\n\r\n\r\n\r\n\r\n        actions.setSubmitting(false);\r\n\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (!addComponentState['isLoading']) {\r\n            const error = addComponentState['error'];\r\n            if (error['isError'] && Object.keys(error['error']).length > 0) {\r\n\r\n\r\n                const errors =\r\n                    Object.values(error['error']).length > 0\r\n                        ? Object.values(error['error'])\r\n                        : [];\r\n                errors.forEach((err, i) => {\r\n                    if (typeof err === 'string') {\r\n                        openErrorNotification(err)\r\n                    }\r\n                    else if (typeof err === 'object') {\r\n                        if (err && Object.keys(err).length > 0) {\r\n                            const errs = Object.values(err);\r\n                            errs.forEach(err => {\r\n                                openErrorNotification(err)\r\n                            })\r\n\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n        }\r\n    }, [addComponentState])\r\n\r\n\r\n\r\n\r\n\r\n\r\n    const handleCancel = (e: any) => {\r\n        setAddNewCategoryVisible(false);\r\n    };\r\n\r\n\r\n    const getisSubmitButtonDisabled = (values, isValid) => {\r\n        if (!values.groupName) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n    const handleAddComponentItem = () => {\r\n        setItemsList([...itemsList, {\r\n            title: '',\r\n            target: '',\r\n            text: '',\r\n            image: [],\r\n            id: `${itemsList.length}`\r\n        }])\r\n    }\r\n\r\n\r\n\r\n\r\n    return (\r\n        <Formik\r\n            onSubmit={(values, actions) => handleSubmit(values, actions)}\r\n            validationSchema={validationSchema}\r\n            validateOnBlur={false}\r\n            enableReinitialize={true}\r\n            initialValues={\r\n                { ...initialValues }\r\n            }\r\n        >\r\n            {({\r\n                handleChange,\r\n                values,\r\n                handleSubmit,\r\n                errors,\r\n                isValid,\r\n                isSubmitting,\r\n                touched,\r\n                handleBlur,\r\n                setFieldTouched,\r\n                handleReset,\r\n            }) => (\r\n                    <>\r\n                        <Modal\r\n                            style={{\r\n                                top: '40px'\r\n                            }}\r\n                            title=\"Add New Component\"\r\n                            visible={addNewCategoryVisible}\r\n                            onOk={(e: any) => handleSubmit(e)}\r\n                            onCancel={handleCancel}\r\n                            okText='Create'\r\n                            okButtonProps={{\r\n                                loading: isSubmitting,\r\n                                htmlType: \"submit\",\r\n                                disabled: getisSubmitButtonDisabled(values, isValid)\r\n                            }}\r\n                            width={'50vw'}\r\n                            bodyStyle={{\r\n                                margin: '0',\r\n                                padding: '10px'\r\n                            }}\r\n                        >\r\n                            <Input\r\n                                label='Group Component Name'\r\n                                value={values.groupName}\r\n                                name='groupName'\r\n                                isError={(touched.groupName && errors.groupName) ||\r\n                                    (!isSubmitting && addComponentState.error['error']['name'])}\r\n\r\n                                errorString={(touched.groupName && errors.groupName) ||\r\n                                    (!isSubmitting && addComponentState.error['error']['name'])}\r\n                                onChange={(e: any) => {\r\n                                    handleChange(e);\r\n                                    setFieldTouched('groupName');\r\n                                }}\r\n                            />\r\n                            <div style={{\r\n                                marginTop: '15px',\r\n                            }}></div>\r\n                            <h3 className='inputFieldLabel'>Children</h3>\r\n\r\n                            <div className='componentItemsContainer'>\r\n                                {itemsList.map(itemComponent => {\r\n                                    return <ComponentItem\r\n                                        componentItem={itemComponent}\r\n                                        itemsList={itemsList} setItemsList={setItemsList} />\r\n                                })}\r\n\r\n                                <Button size='small'\r\n                                    onClick={handleAddComponentItem}\r\n                                    style={{\r\n                                        width: '290px',\r\n                                        minHeight: '145px',\r\n                                        marginTop: '0px',\r\n                                        borderRadius: '8px'\r\n                                    }} type=\"dashed\" icon={<PlusOutlined />}>Add Childrens</Button>\r\n                            </div>\r\n\r\n                            <div\r\n                                style={{\r\n                                    marginTop: '20px'\r\n                                }}\r\n                            />\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n                        </Modal>\r\n\r\n\r\n                    </>\r\n                )}\r\n        </Formik>\r\n\r\n\r\n\r\n\r\n    );\r\n};\r\n\r\nexport default AddNewBrand;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { AutoComplete, Button, Tooltip } from 'antd';\r\n\r\n// import configs\r\nimport config from \"../../config.json\";\r\n\r\nimport InputSmall from '../../components/Field/InputSmall';\r\nimport MediaLibrary from '../../components/MediaLibrary';\r\n\r\nimport { useFetch } from \"../../hooks\";\r\nimport {\r\n    DeleteOutlined,\r\n    FileAddOutlined, \r\n    SaveOutlined,\r\n    FileImageFilled,\r\n    PlusOutlined,\r\n    CheckCircleOutlined,\r\n    CloseOutlined,\r\n    CheckOutlined,\r\n    InfoCircleOutlined\r\n} from '@ant-design/icons';\r\n\r\n\r\n\r\nconst Complete = ({ setComponentList, componentList, item, component,componentUpdate }) => {\r\n\r\n    const [localComponentItem, setlocalComponentItem] = useState({\r\n        title: item.title,\r\n        target: item.target,\r\n        text: item.text,\r\n        image: item.image,\r\n    })\r\n\r\n    const [myImages, setmyImages] = useState([]);\r\n    const [visibleMedia, setvisibleMedia] = useState(false);\r\n\r\n    const handleComponentItemsChange = (e) => {\r\n        const name = e.target.name;\r\n        const value = e.target.value;\r\n\r\n        setlocalComponentItem({\r\n            ...localComponentItem,\r\n            [name]: value\r\n        });\r\n    };\r\n\r\n\r\n\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        if (myImages.length > 0) {\r\n            setlocalComponentItem({\r\n                ...localComponentItem,\r\n                // @ts-ignore\r\n                image: [...new Set([...localComponentItem.image, ...myImages])]\r\n            })\r\n        }\r\n        else {\r\n            setlocalComponentItem({\r\n                ...localComponentItem,\r\n                image: []\r\n            })\r\n        }\r\n\r\n    }, [myImages])\r\n\r\n\r\n\r\n\r\n\r\n    const handleImagesDelete = (id) => {\r\n        // @ts-ignore\r\n        const newImages = localComponentItem.image && localComponentItem.image.length > 0 && localComponentItem.image.filter(image => {\r\n            return image.id !== id;\r\n        })\r\n\r\n        setlocalComponentItem({\r\n            ...localComponentItem,\r\n            image: [...newImages]\r\n        })\r\n\r\n        setmyImages(newImages);\r\n    }\r\n\r\n\r\n    const handleComponentItemUpdate = () => {\r\n        componentUpdate(item,component,localComponentItem); \r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <div\r\n                style={{\r\n                    width: '100%',\r\n                    boxShadow: \"none\"\r\n                }}\r\n                className='componentItemsContainer__item'>\r\n                <InputSmall\r\n                    label='Title'\r\n                    value={localComponentItem.title}\r\n                    name='title'\r\n                    onChange={handleComponentItemsChange}\r\n                />\r\n                <InputSmall\r\n                    label='Text'\r\n                    value={localComponentItem.text}\r\n                    name='text'\r\n                    onChange={handleComponentItemsChange}\r\n                />\r\n\r\n                <InputSmall\r\n                    label='Target'\r\n                    value={localComponentItem.target}\r\n                    name='target'\r\n                    onChange={handleComponentItemsChange}\r\n                />\r\n\r\n\r\n                <h3 className='inputFieldLabel-small'>Images</h3>\r\n                <div style={{\r\n                    marginBottom: \"-1px\"\r\n                }}></div>\r\n\r\n\r\n                <div className='aboutToUploadImagesContainer'>\r\n                    {localComponentItem.image &&\r\n                        // @ts-ignore\r\n                        localComponentItem.image.length > 0 && localComponentItem.image.map((image, index) => {\r\n                            return (\r\n                                <div className='aboutToUploadImagesContainer__item aboutToUploadImagesContainer__item-small'>\r\n                                    <div\r\n                                        className='aboutToUploadImagesContainer__item-imgContainer'\r\n                                    >\r\n                                        <img src={image.cover} alt={image.alt} />\r\n                                    </div>\r\n\r\n                                    <span\r\n                                        onClick={() => handleImagesDelete(image.id)}\r\n                                        className='aboutToUploadImagesContainer__item-remove'>\r\n                                        <CloseOutlined />\r\n                                    </span>\r\n                                </div>\r\n                            )\r\n                        })}\r\n\r\n\r\n                    <Tooltip\r\n                        title={'Attach images'}>\r\n\r\n                        <div\r\n                            onClick={() => {\r\n                                setvisibleMedia(true);\r\n                            }}\r\n                            className='aboutToUploadImagesContainer__uploadItem aboutToUploadImagesContainer__uploadItem-small'>\r\n                            {/* <FileAddOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FileImageTwoTone />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FileImageOutlined /> */}\r\n                            <FileImageFilled />\r\n                            {/* <h5>\r\n\t\t\t\t\t\t\t\t\t\t\t\t     Select From Library\r\n\t\t\t\t\t\t\t\t\t\t\t<     /h5> */}\r\n                            <span className='aboutToUploadImagesContainer__uploadItem-plus'>\r\n                                <PlusOutlined />\r\n                            </span>\r\n                        </div>\r\n                    </Tooltip>\r\n\r\n                </div>\r\n                <Button\r\n                style={{\r\n                    marginTop: '15px'\r\n                }}\r\n                    icon={<SaveOutlined />}\r\n          className='btnPrimaryClassNameoutline'\r\n          onClick={() => handleComponentItemUpdate()}\r\n        >\r\n        Save\r\n            \r\n            </Button>\r\n            </div>\r\n            <MediaLibrary\r\n                setvisible={setvisibleMedia}\r\n                visible={visibleMedia}\r\n                myImages={myImages}\r\n                setmyImages={setmyImages}\r\n                isModalOpenForImages={true}\r\n\r\n            />\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Complete;\r\n","import React, { useState, useEffect } from 'react';\r\nimport * as Yup from 'yup';\r\n\r\n\r\nimport { useHandleFetch } from '../../hooks';\r\n// import third party ui lib\r\nimport { Upload, message, Switch, Select, Button, notification, Modal } from 'antd';\r\n\r\nimport {\r\n    FileOutlined,\r\n    InboxOutlined,\r\n    FileAddOutlined,\r\n    DeleteOutlined,\r\n    CheckCircleOutlined,\r\n    PlusOutlined\r\n} from '@ant-design/icons';\r\n\r\n\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport MediaLibrary from \"../../components/MediaLibrary\";\r\nimport ComponentItem from \"./ComponentItem\";\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    groupName: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Component Created',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Something Went Wrong',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst initialValues = {\r\n    groupName: '',\r\n    items: [],\r\n}\r\n\r\n\r\n\r\ninterface Props {\r\n    addNewCategoryVisible?: any;\r\n    setAddNewCategoryVisible?: any;\r\n    componentList?: any;\r\n    setComponentList?: any;\r\n    updateComponentByAddingItem?: any;\r\n    componentId?: any\r\n\r\n}\r\n\r\nconst AddNewBrand = ({ addNewCategoryVisible,\r\n    setAddNewCategoryVisible, componentList,\r\n    setComponentList,\r\n    updateComponentByAddingItem, componentId }: Props) => {\r\n\r\n\r\n    const [localComponentItem, setlocalComponentItem] = useState({\r\n        title: '',\r\n        target: '',\r\n        text: '',\r\n        image: [],\r\n    })\r\n\r\n    const [myImages, setmyImages] = useState([]);\r\n    const [visibleMedia, setvisibleMedia] = useState(false);\r\n\r\n    const handleComponentItemsChange = (e) => {\r\n        const name = e.target.name;\r\n        const value = e.target.value;\r\n\r\n        setlocalComponentItem({\r\n            ...localComponentItem,\r\n            [name]: value\r\n        });\r\n    };\r\n\r\n\r\n    const handleCancel = (e: any) => {\r\n        setAddNewCategoryVisible(false);\r\n    };\r\n\r\n\r\n    const getisSubmitButtonDisabled = (values, isValid) => {\r\n        if (!values.groupName) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        if (myImages.length > 0) {\r\n            const newImages = myImages.map(item => item.id);\r\n            setlocalComponentItem({\r\n                ...localComponentItem,\r\n                image: [...newImages]\r\n            })\r\n        }\r\n        else {\r\n            setlocalComponentItem({\r\n                ...localComponentItem,\r\n                image: []\r\n            })\r\n        }\r\n\r\n    }, [myImages])\r\n\r\n\r\n\r\n\r\n\r\n\r\n    const handleImagesDelete = (id) => {\r\n        // @ts-ignore\r\n        const newImages = myImages && myImages.filter(image => {\r\n            return image.id !== id;\r\n        })\r\n\r\n        setmyImages(newImages);\r\n    }\r\n\r\n\r\n    const handleAddItem = (e) => {\r\n        updateComponentByAddingItem(localComponentItem, componentId)\r\n    }\r\n\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <Modal\r\n                style={{\r\n                    top: '40px'\r\n                }}\r\n                destroyOnClose={true}\r\n                title=\"Add New Component Item\"\r\n                visible={addNewCategoryVisible}\r\n                onOk={(e: any) => handleAddItem(e)}\r\n                onCancel={handleCancel}\r\n                okText='Add'\r\n                okButtonProps={{\r\n                    htmlType: \"submit\",\r\n                }}\r\n                width={'400px'}\r\n                bodyStyle={{\r\n                    margin: '0',\r\n                    padding: '10px'\r\n                }}\r\n            >\r\n                <Input\r\n                    label='Title'\r\n                    value={localComponentItem.title}\r\n                    name='title'\r\n                    onChange={handleComponentItemsChange}\r\n                />\r\n                <Input\r\n                    label='Text'\r\n                    value={localComponentItem.text}\r\n                    name='text'\r\n                    onChange={handleComponentItemsChange}\r\n                />\r\n\r\n                <Input\r\n                    label='Target'\r\n                    value={localComponentItem.target}\r\n                    name='target'\r\n                    onChange={handleComponentItemsChange}\r\n                />\r\n\r\n\r\n                <h3 className='inputFieldLabel-small'>Images</h3>\r\n                <div className='aboutToUploadImagesContainer'>\r\n                    {myImages &&\r\n                        // @ts-ignore\r\n                        myImages.length > 0 && myImages.map(image => {\r\n                            return (\r\n                                <div className='aboutToUploadImagesContainer__item'>\r\n                                    <div\r\n                                        onClick={() => handleImagesDelete(image.id)}\r\n                                        className='aboutToUploadImagesContainer__item-overlay'>\r\n                                        <DeleteOutlined />\r\n                                    </div>\r\n                                    <img src={image.cover} alt={image.alt} />\r\n                                </div>\r\n                            )\r\n                        })}\r\n\r\n                    <div\r\n                        onClick={() => {\r\n                            setvisibleMedia(true);\r\n                        }}\r\n                        className='aboutToUploadImagesContainer__uploadItem'>\r\n                        <FileAddOutlined />\r\n                    </div>\r\n                </div>\r\n                <MediaLibrary\r\n                    setvisible={setvisibleMedia}\r\n                    visible={visibleMedia}\r\n                    myImages={myImages}\r\n                    setmyImages={setmyImages}\r\n                    isModalOpenForImages={true} />\r\n\r\n            </Modal>\r\n        </>\r\n\r\n\r\n    );\r\n};\r\n\r\nexport default AddNewBrand;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Collapse, Button, Tooltip, Upload, Modal,Input, notification, Popconfirm } from 'antd';\r\nimport { CaretRightOutlined,CheckCircleOutlined,  PlusOutlined, DeleteOutlined, EditOutlined } from '@ant-design/icons';\r\n\r\n// import components\r\nimport InputField from '../../components/Field/Input';\r\nimport Empty from '../../components/Empty';\r\nimport ComponentImageUpload from './ComponentImageUpload';\r\nimport {useHandleFetch} from '../../hooks';\r\nimport { DataTableSkeleton } from \"../../components/Placeholders\";\r\nimport AddNewComponent from \"./AddNewComponent\";\r\nimport ComponentListComponentItem from './ComponentListComponentItem';\r\nimport AddNewComponentItem from './AddNewComponentItem';\r\nimport { category } from '../../state/ducks';\r\n\r\n\r\n\r\n\r\nconst { Panel } = Collapse;\r\nconst { Search } = Input;\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Component Created',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n    notification.error({\r\n        message: message || 'Something Went Wrong',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n    });\r\n};\r\n\r\n\r\n\r\nconst text = `\r\n  A dog is a type of domesticated animal.\r\n  Known for its loyalty and faithfulness,\r\n  it can be found as a welcome guest in many households across the world.\r\n`;\r\n\r\nfunction getBase64(file: any) {\r\n\treturn new Promise((resolve, reject) => {\r\n\t\tconst reader = new FileReader();\r\n\t\treader.readAsDataURL(file);\r\n\t\treader.onload = () => resolve(reader.result);\r\n\t\treader.onerror = (error) => reject(error);\r\n\t});\r\n}\r\n\r\n\r\nconst genExtra = (updateComponentByDeleting,component,id) => (\r\n\t<div\r\n\t\tstyle={{\r\n\t\t\tdisplay: 'flex'\r\n\t\t}}\r\n\t>\r\n\t\t\r\n\t\t<Tooltip placement='top' title='Edit Component'>\r\n\t\t<a href='##'>\r\n\t<EditOutlined\r\n\t\t\t\tonClick={(event) => {\r\n\t\t\t\t\t// If you don't want click extra trigger collapse, you can prevent this:\r\n\t\t\t\t\t// event.stopPropagation();\r\n\t\t\t\t}}\r\n\t\t\t/>\r\n\t\t</a>\r\n\t\t\r\n\t\t\t\r\n\t\t</Tooltip>\r\n\t\t\r\n\r\n\t\t<div\r\n\t\t\tstyle={{\r\n\t\t\t\tmarginLeft: '15px'\r\n\t\t\t}}\r\n\t\t/>\r\n\t\t   <a href='##' style={{\r\n\t\t\t\t   color:'rgb(241, 67, 67)'\r\n\t\t\t   }}>\r\n\t\t \r\n\t\t\t<Popconfirm \r\n               \r\n               onConfirm={() => updateComponentByDeleting(id,component)}\r\n               title=\"Are you sure？\" okText=\"Yes\" cancelText=\"No\">\r\n       \r\n\t\t   <DeleteOutlined\r\n\t\t\t\tonClick={(event) => {\r\n\t\t\t\t\t// If you don't want click extra trigger collapse, you can prevent this:\r\n\t\t\t\t\tevent.stopPropagation();\r\n\t\t\t\t}}\r\n\t\t\t/>\r\n\t\t\t\r\n           </Popconfirm>\r\n\t\t   </a>\r\n\t</div>\r\n);\r\n\r\nconst genExtraForGroup = (setitemVisible: any, handleDeleteComponent:any, id: any,setComponentId:any) => (\r\n\t<div\r\n\t\tstyle={{\r\n\t\t\tdisplay: 'flex'\r\n\t\t}}\r\n\t>\r\n\t\t<Tooltip placement='top' title='Add new item Component'>\r\n\t\t<a href='##'>\r\n\t\t\t<PlusOutlined\r\n\t\t\t\tonClick={(event) => {\r\n\t\t\t\t\t// If you don't want click extra trigger collapse, you can prevent this:\r\n\t\t\t\t\t// event.stopPropagation();\r\n\t\t\t\t\tsetitemVisible(true);\r\n\t\t\t\t\tsetComponentId(id)\r\n\t\t\t\t}}\r\n\t\t\t/>\r\n\t\t\t</a>\r\n\t\t</Tooltip>\r\n\r\n\t\t<div\r\n\t\t\tstyle={{\r\n\t\t\t\tmarginLeft: '15px'\r\n\t\t\t}}\r\n\t\t/>\r\n\t\t<Tooltip placement='top' title='Edit Component'>\r\n\t\t<a href='##'>\r\n\t\t\t<EditOutlined\r\n\t\t\t\tonClick={(event) => {\r\n\t\t\t\t\t// If you don't want click extra trigger collapse, you can prevent this:\r\n\t\t\t\t\t// event.stopPropagation();\r\n\t\t\t\t}}\r\n\t\t\t/>\r\n\t\t\t</a>\r\n\t\t</Tooltip>\r\n\r\n\t\t<div\r\n\t\t\tstyle={{\r\n\t\t\t\tmarginLeft: '15px'\r\n\t\t\t}}\r\n\t\t/>\r\n\t\t   <a href='##' style={{\r\n\t\t\t\t   color:'rgb(241, 67, 67)'\r\n\t\t\t   }}>\r\n\t\t \r\n\t\t<Popconfirm \r\n               \r\n               onConfirm={() => handleDeleteComponent(id)}\r\n               title=\"Are you sure？\" okText=\"Yes\" cancelText=\"No\">\r\n           \r\n\t\t   <DeleteOutlined\r\n\t\t\t\tonClick={(event) => {\r\n\t\t\t\t\t// If you don't want click extra trigger collapse, you can prevent this:\r\n\t\t\t\t\tevent.stopPropagation();\r\n\t\t\t\t}}\r\n\t\t\t/>\r\n\t\t\t\r\n\t\t\r\n\t\t\r\n           </Popconfirm>\r\n\t\t   </a>\r\n\r\n\t\t\t\r\n\t</div>\r\n);\r\n\r\nconst Component = (props) => {\r\n\r\n\r\n\tconst [visible, setvisible] = useState(false);\r\n\tconst [groupVisible, setgroupVisible] = useState(false);\r\n\tconst [itemVisible, setitemVisible] = useState(false);\r\n\tconst [componentId,setComponentId] = useState(''); \r\n\r\n\r\n\t\r\n\tconst [componentState, handleComponentListFetch] = useHandleFetch({}, 'componentList');\r\n\tconst [deleteComponentState, handleDeleteComponentFetch] = useHandleFetch({}, 'deleteComponent');\r\n\tconst [updateComponentState, handleUpdateComponentFetch] = useHandleFetch({}, 'updateComponent');\r\n\t\r\n\tconst [componentList,setComponentList] = useState([]); \r\n  \r\n\tuseEffect(()=>{\r\n\t const setComponents = async () => {\r\n\t   const components = await handleComponentListFetch({}); \r\n\t   // @ts-ignore\r\n\t   setComponentList(components); \r\n\t }\r\n\t setComponents(); \r\n\t},[])\r\n\r\n\t\r\n\r\n\tconst handleSearch = (value) => {\r\n\t\tif(componentState.data.length > 0 ){\r\n\t\t  const newComponentList = componentState.data.filter(item => item.name.toLowerCase().includes(value.toLowerCase())); \r\n\t\t  setComponentList(newComponentList); \r\n\t\t}\r\n\t\t \r\n\t  }\r\n\t\r\n\r\n\r\n\r\n\t  \r\n      const handleDeleteComponent = async (id) => {\r\n        const deleteComponentRes = await handleDeleteComponentFetch({\r\n          urlOptions: {\r\n            placeHolders: {\r\n              id,\r\n            }\r\n            }\r\n          });\r\n\r\n            // @ts-ignore\r\n\t\t  if(deleteComponentRes && deleteComponentRes.status === 'ok'){\r\n\t\t\t  openSuccessNotification('Component Deleted'); \r\n\t\t\t  const newComponentList =  componentList.filter(item => item.id !== id);\r\n\t\t\t  setComponentList(newComponentList); \r\n\t\t  }\r\n\t\t  else {\r\n\t\t\topenErrorNotification(\"Couldn't delete, Something went wrong\")\r\n\t\t  }\r\n\t  }\r\n\t  \r\n\r\n\r\n\r\n\tconst handleOk = (e: any) => {\r\n\t\tsetvisible(false);\r\n\r\n\t};\r\n\r\n\tconst handleCancel = (e: any) => {\r\n\t\tsetvisible(false);\r\n\t};\r\n\tconst handleOkGroup = (e: any) => {\r\n\t\tsetgroupVisible(false);\r\n\r\n\t};\r\n\r\n\tconst handleCancelGroup = (e: any) => {\r\n\t\tsetgroupVisible(false);\r\n\t};\r\n\r\n\r\n\tconst componentUpdate = async (item,component,localComponentItem) => {\r\n\t\tconst positionInComponents = () => {\r\n            return componentList.map(item => item.id).indexOf(component.id);\r\n          };\r\n      \r\n          const positionInItemsOfComponent = () => {\r\n            return component.items.map(item => item.id).indexOf(item.id);\r\n          };\r\n      \r\n          const componentIndex = positionInComponents();\r\n      \r\n\t\t  const itemIndex = positionInItemsOfComponent();\r\n\t\t  \r\n\r\n\t\t  const manupulatedLocalComponentForTheReq = localComponentItem.image.length > 0 ? \r\n\t\t  {\r\n\t\t\t...localComponentItem,\r\n\t\t\timage: localComponentItem.image.length > 0 ? localComponentItem.image.map(img => img.id) : []\r\n\t\t}\r\n\t\t  : localComponentItem;\r\n      \r\n          const updatedItems = [\r\n            ...component.items.slice(0, itemIndex),\r\n            localComponentItem,\r\n            ...component.items.slice(itemIndex + 1)\r\n\t\t  ];\r\n\t\t  \r\n\t\t  const manupulatedUpdatedItems = [\r\n            ...component.items.slice(0, itemIndex),\r\n            manupulatedLocalComponentForTheReq,\r\n            ...component.items.slice(itemIndex + 1)\r\n\t\t  ];\r\n\t\t  \r\n\t\t\r\n\t\t  const manupulatedUpdatedItem = Object.assign({}, componentList[componentIndex], {\r\n            ...component,\r\n            items: manupulatedUpdatedItems\r\n          });\r\n      \r\n          const updatedItem = Object.assign({}, componentList[componentIndex], {\r\n            ...component,\r\n            items: updatedItems\r\n          });\r\n      \r\n          const updateComponentList = [\r\n            ...componentList.slice(0, componentIndex),\r\n            updatedItem,\r\n            ...componentList.slice(componentIndex + 1)\r\n          ];\r\n\t\t\r\n\t\t  \r\n\r\n\r\n\t\tconst updateComponentRes = await handleUpdateComponentFetch({\r\n\t\t\turlOptions: {\r\n\t\t\t\tplaceHolders: {\r\n\t\t\t\t  id: component.id,\r\n\t\t\t\t}\r\n\t\t\t  },\r\n\t\t\tbody: {\r\n\t\t\t\t...manupulatedUpdatedItem,\r\n\t\t\t\tgroupName: updatedItem.name\r\n\t\t\t},\r\n\t\t  });\r\n\t\t\r\n\t\t\t   // @ts-ignore\r\n\t\t\t   if(updateComponentRes && updateComponentRes.status === 'ok'){\r\n\t\t\t\topenSuccessNotification(\"Component Updated\"); \r\n\t\t\t\tsetComponentList(updateComponentList);\r\n\t\t\t\t\r\n\t\t\t  }\r\n\t\t\t  else {\r\n\t\t\t\topenErrorNotification();\r\n\t\t\t  }\r\n\t}\r\n\r\n\r\n\tconst updateComponentByDeleting = async (id,component) => {\r\n\r\n\t\tconst positionInComponents = () => {\r\n            return componentList.map(item => item.id).indexOf(component.id);\r\n          };\r\n      \r\n          const positionInItemsOfComponent = () => {\r\n            return component.items.map(item => item.id).indexOf(id);\r\n          };\r\n      \r\n          const componentIndex = positionInComponents();\r\n      \r\n          const itemIndex = positionInItemsOfComponent();\r\n      \r\n          const updatedItems = [\r\n            ...component.items.slice(0, itemIndex),\r\n            ...component.items.slice(itemIndex + 1)\r\n          ];\r\n      \r\n          const updatedItem = Object.assign({}, componentList[componentIndex], {\r\n            ...component,\r\n            items: updatedItems\r\n          });\r\n      \r\n          const updateComponentList = [\r\n            ...componentList.slice(0, componentIndex),\r\n            updatedItem,\r\n            ...componentList.slice(componentIndex + 1)\r\n          ];\r\n\t\t\r\n\t\t  \r\n\r\n\r\n\t\tconst updateComponentRes = await handleUpdateComponentFetch({\r\n\t\t\turlOptions: {\r\n\t\t\t\tplaceHolders: {\r\n\t\t\t\t  id: component.id,\r\n\t\t\t\t}\r\n\t\t\t  },\r\n\t\t\tbody: {\r\n\t\t\t\t...updatedItem,\r\n\t\t\t\tgroupName: updatedItem.name\r\n\t\t\t},\r\n\t\t  });\r\n\t\t\r\n\t\t\t   // @ts-ignore\r\n\t\t\t   if(updateComponentRes && updateComponentRes.status === 'ok'){\r\n\t\t\t\topenSuccessNotification(\"Component Item deleted\"); \r\n\t\t\t\tsetComponentList(updateComponentList);\r\n\t\t\t\t\r\n\t\t\t  }\r\n\t\t\t  else {\r\n\t\t\t\topenErrorNotification();\r\n\t\t\t  }\r\n\t};\r\n\r\n\r\n\tconst updateComponentByAddingItem = async (localComponentItem,id) => {\r\n\t\tconst positionInComponents = () => {\r\n            return componentList.map(item => item.id).indexOf(id);\r\n          };\r\n      \r\n      \r\n          const componentIndex = positionInComponents();\r\n      \r\n    \r\n      \r\n          const updatedItems = [\r\n            ...componentList[componentIndex].items,\r\n            localComponentItem,\r\n          ];\r\n      \r\n          const updatedItem = Object.assign({}, componentList[componentIndex], {\r\n            ...componentList[componentIndex],\r\n            items: updatedItems\r\n          });\r\n      \r\n          const updateComponentList = [\r\n            ...componentList.slice(0, componentIndex),\r\n            updatedItem,\r\n            ...componentList.slice(componentIndex + 1)\r\n          ];\r\n\t\t\r\n\t\t  \r\n\r\n\r\n\t\tconst updateComponentRes = await handleUpdateComponentFetch({\r\n\t\t\turlOptions: {\r\n\t\t\t\tplaceHolders: {\r\n\t\t\t\t  id: id,\r\n\t\t\t\t}\r\n\t\t\t  },\r\n\t\t\tbody: {\r\n\t\t\t\t...updatedItem,\r\n\t\t\t\tgroupName: updatedItem.name\r\n\t\t\t},\r\n\t\t  });\r\n\t\t\r\n\t\t\t   // @ts-ignore\r\n\t\t\t   if(updateComponentRes && updateComponentRes.status === 'ok'){\r\n\t\t\t\topenSuccessNotification(\"Component Item Added\"); \r\n\t\t\t\tsetComponentList(updateComponentList);\r\n\t\t\t\tsetitemVisible(false);\r\n\t\t\t\t\r\n\t\t\t  }\r\n\t\t\t  else {\r\n\t\t\t\topenErrorNotification();\r\n\t\t\t  }\r\n\t};\r\n\r\n\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t    <div className='categoryListContainer'>\r\n            <div className='categoryListContainer__header'>\r\n           \r\n\r\n          <div className='categoryListContainer__header-searchBar'>\r\n          <h2 className='categoryListContainer__header-title'>\r\n            Components\r\n            </h2>\r\n\r\n\r\n          <Search\r\n            enterButton={false}\r\n            className='searchbarClassName'\r\n          placeholder=\"search components..\"\r\n          onSearch={value => handleSearch(value)}\r\n        />\r\n          </div>\r\n            <Button\r\n          // type=\"primary\"\r\n          className='btnPrimaryClassNameoutline'\r\n          icon={<PlusOutlined />}\r\n\t\t  onClick={() => setgroupVisible(true)}\r\n        >\r\n        Add New\r\n            \r\n            </Button>\r\n            </div>\r\n\r\n            <div className='categoryListContainer__afterHeader'>\r\n \r\n            </div>\r\n\r\n     \r\n\t\t\t\r\n\t\t\t<div className='categoryListContainer__categoryList'>\r\n     \r\n        {componentState.isLoading && <DataTableSkeleton />}\r\n\r\n        {componentState.done && !(componentList.length > 0) && (\r\n\t\t\t<div style={{\r\n\t\t\t\tmarginTop: '50px'\r\n\t\t\t}}>\r\n\t\t\t\t<Empty title='No Component found' />\r\n\t\t\t</div>\r\n\t\t)}\r\n\r\n\t\t{componentState.done && componentList.length > 0 && (\r\n\t\t\t\t\t<div className='componentsItemContainer'>\r\n\t\t\t\t\t{componentList.map(component => {\r\n\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t<div className='componentsItemContainer-item'>\r\n\t\t\t\t\t\t\t<Collapse\r\n\t\t\t\t\t\t\t\taccordion={false}\r\n\t\t\t\t\t\t\t\tbordered={false}\r\n\t\t\t\t\t\t\t\texpandIconPosition='left'\r\n\t\t\t\t\t\t\t\texpandIcon={({ isActive }) => <CaretRightOutlined rotate={isActive ? 90 : 0} />}\r\n\t\t\t\t\t\t\t\tclassName='site-collapse-custom-collapse'\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<Panel\r\n\t\t\t\t\t\t\t\t\theader={component.name}\r\n\t\t\t\t\t\t\t\t\tkey='1'\r\n\t\t\t\t\t\t\t\t\tclassName='site-collapse-custom-panel'\r\n\t\t\t\t\t\t\t\t\textra={genExtraForGroup(setitemVisible,handleDeleteComponent, component.id,setComponentId)}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t<div className=' componentsItemContainer-white'>\r\n\t\t\t\t\t\t\t\t\t\t{component.items && component.items.length > 0 && component.items.map(item => {\r\n\t\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div className='componentsItemContainer-item-item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Collapse\r\n\t\t\t\t\t\t\t\t\t\t\t\t\taccordion={false}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tbordered={false}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\texpandIconPosition='left'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\texpandIcon={({ isActive }) => (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<CaretRightOutlined rotate={isActive ? 90 : 0} />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='site-collapse-custom-collapse'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Panel\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\theader={item.title || ''}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tkey='1'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='site-collapse-custom-panel'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\textra={genExtra(updateComponentByDeleting,component,item.id)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<ComponentListComponentItem\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetComponentList={setComponentList}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tcomponentList={componentList}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\titem={item}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tcomponent={component}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tcomponentUpdate={componentUpdate}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Panel>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Collapse>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t\t})}\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t{!(component.items.length > 0 ) && <Empty title='No item Found'/>}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</Panel>\r\n\t\t\t\t\t\t\t</Collapse>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t})}\r\n\t\t\t\t</div>\r\n\t\t)}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\r\n\r\n\t\t<AddNewComponent \r\n          addNewCategoryVisible={groupVisible} \r\n          setAddNewCategoryVisible={setgroupVisible} \r\n          setComponentList={setComponentList}\r\n          componentList={componentList}\r\n          />\r\n\t\t  <AddNewComponentItem \r\n          addNewCategoryVisible={itemVisible} \r\n          setAddNewCategoryVisible={setitemVisible} \r\n          setComponentList={setComponentList}\r\n\t\t  componentList={componentList}\r\n\t\t  updateComponentByAddingItem={updateComponentByAddingItem}\r\n\t\t  componentId={componentId}\r\n          />\r\n\r\n\r\n\t\t  \r\n\r\n\t\t\t<Modal\r\n\t\t\t\ttitle=\"Add New Group Component\"\r\n\t\t\t\tvisible={false}\r\n\t\t\t\tonOk={handleOkGroup}\r\n\t\t\t\tonCancel={handleCancelGroup}\r\n\t\t\t\tfooter={null}\r\n\t\t\t\tokText='Done'\r\n\t\t\t>\r\n\t\t\t\t<InputField label='Group Component Name' />\r\n\t\t\r\n\t\t\t</Modal>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default Component;\r\n","import React, { useState } from 'react';\r\n\r\n// import third libraries\r\nimport { Upload, message, notification, Modal } from 'antd';\r\n// import { Formik } from 'formik';\r\n// import * as Yup from 'yup';\r\nimport reqwest from 'reqwest';\r\n\r\n\r\n\r\n// import hooks\r\nimport { useHandleFetch } from '../../hooks';\r\n\r\n\r\n// import configs\r\nimport config from \"../../config.json\";\r\n\r\n\r\nimport {\r\n    InboxOutlined,\r\n    CheckCircleOutlined,\r\n    LoadingOutlined,\r\n    PlusOutlined\r\n} from '@ant-design/icons';\r\n\r\n\r\n// import ReactQuill from 'react-quill';\r\n// import 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport MediaLibrary from \"../../components/MediaLibrary\";\r\n\r\n\r\nconst { Dragger } = Upload;\r\n\r\n\r\n// const validationSchema = Yup.object().shape({\r\n//     name: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n// });\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n    notification.error({\r\n        message: message || 'Brand Created',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Something Went Wrong',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst initialValues = {\r\n    name: '',\r\n    description: '',\r\n    image: [],\r\n    url: '',\r\n    cover: ''\r\n}\r\n\r\n\r\n\r\ninterface Props {\r\n    addNewCategoryVisible?: any;\r\n    setAddNewCategoryVisible?: any;\r\n    themeList?: any;\r\n    setThemeList?: any;\r\n\r\n}\r\n\r\nconst AddNewBrand = ({ addNewCategoryVisible, setAddNewCategoryVisible, themeList, setThemeList }: Props) => {\r\n\r\n    const [addThemeState, handleAddthemeFetch] = useHandleFetch({}, 'addTheme', 'form');\r\n    const [myImages, setmyImages] = useState(false);\r\n    const [visibleMedia, setvisibleMedia] = useState(false);\r\n    const [myThumbnailImage, setmyThumbnailImage] = useState([]);\r\n    const [isModalOpenForThumbnail, setisModalOpenForThumbnail] = useState(false);\r\n    const [selectedThemeTypeValue, setselectedThemeTypeValue] = useState('');\r\n    const [fileList, setfileList] = useState([]);\r\n    const [uploading, setuploading] = useState(false);\r\n    const [loadingThumnail, setLoadingThumbnail] = useState(false);\r\n    const [imageUrl, setImageUrl] = useState('');\r\n    const [name, setname] = useState('')\r\n    const [thumbnailFile, setThumbnailFile] = useState('')\r\n\r\n\r\n\r\n\r\n\r\n    const handleSubmit = async () => {\r\n        setuploading(true);\r\n\r\n        const formData = new FormData();\r\n        fileList.forEach(file => {\r\n            formData.append('folder', file, file.name);\r\n        });\r\n        formData.append(\"name\", name);\r\n        formData.append('thumbnail', thumbnailFile)\r\n\r\n\r\n        const addThemeRes = await handleAddthemeFetch({\r\n            body: formData,\r\n        });\r\n\r\n\r\n        setuploading(false);\r\n        // @ts-ignore\r\n        if (addThemeRes && addThemeRes.status === 'ok') {\r\n\r\n            setThemeList([...themeList, {\r\n                id: addThemeRes['_id'] || '',\r\n                key: addThemeRes['_id'] || '',\r\n                name: addThemeRes['name'] || '',\r\n                thumbnail: addThemeRes['thumbnail'] || '',\r\n                path: addThemeRes['path'] || '',\r\n                added: addThemeRes['added'] || '',\r\n                // @ts-ignore\r\n                ...addThemeRes\r\n            }]);\r\n\r\n            setfileList([]);\r\n            setuploading(false);\r\n            openSuccessNotification('Theme Uploaded!')\r\n            setAddNewCategoryVisible(false);\r\n            setname('');\r\n            setselectedThemeTypeValue('');\r\n\r\n\r\n\r\n\r\n            setAddNewCategoryVisible(false);\r\n        }\r\n        else {\r\n            openErrorNotification('Theme upload failed, Something went wrong');\r\n        }\r\n\r\n    };\r\n\r\n\r\n\r\n\r\n    const handleCancel = (e: any) => {\r\n        setAddNewCategoryVisible(false);\r\n    };\r\n\r\n\r\n    const getisSubmitButtonDisabled = () => {\r\n        if (addThemeState.isLoading) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n\r\n\r\n\r\n    const handleImagesDelete = (id) => {\r\n        // @ts-ignore\r\n        const newImages = myImages && myImages.filter(image => {\r\n            return image.id !== id;\r\n        })\r\n\r\n        setmyImages(newImages);\r\n    }\r\n\r\n\r\n\r\n    const handleThumbnailImageDelete = (id) => {\r\n        // @ts-ignore\r\n        const newImages = myThumbnailImage && myThumbnailImage.filter(image => {\r\n            return image.id !== id;\r\n        })\r\n\r\n        if (newImages.length > 0) {\r\n            setmyThumbnailImage(newImages);\r\n\r\n        }\r\n        // @ts-ignore\r\n        else setmyThumbnailImage([]);\r\n    }\r\n\r\n\r\n    const onChangeThemeType = (value) => {\r\n        setselectedThemeTypeValue(value);\r\n    }\r\n\r\n\r\n\r\n    const uploadProps = {\r\n        //  listType: 'picture',\r\n        onRemove: file => {\r\n            setfileList(filelist => {\r\n                const index = fileList.indexOf(file);\r\n                const newFileList = fileList.slice();\r\n                newFileList.splice(index, 1);\r\n                return newFileList;\r\n            })\r\n\r\n        },\r\n        beforeUpload: file => {\r\n            setfileList(filelist => {\r\n                return [...fileList, file]\r\n            })\r\n            return false;\r\n        },\r\n        fileList,\r\n    };\r\n\r\n    const handleUpload = async () => {\r\n        const formData = new FormData();\r\n        fileList.forEach(file => {\r\n            formData.append('folder', file, file.name);\r\n        });\r\n        formData.append(\"name\", name);\r\n        formData.append('thumbnail', imageUrl)\r\n\r\n        setuploading(true);\r\n\r\n        //  const addImageToLibraryRes = awAddait handleMediaLibraryFetch({\r\n        // \tbody: formData\r\n        //   });\r\n\r\n        //   console.log('addImageToLibraryRes',addImageToLibraryRes)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n        // You can use any AJAX library you like\r\n        reqwest({\r\n            url: `${config.baseURL}/admin/theme/add`,\r\n            method: 'post',\r\n            processData: false,\r\n            data: formData,\r\n            withCredentials: true,\r\n            success: () => {\r\n                setfileList([]);\r\n                setuploading(false);\r\n                openSuccessNotification('Theme Uploaded!')\r\n                setAddNewCategoryVisible(false);\r\n                setname('');\r\n                setselectedThemeTypeValue('');\r\n                setThemeList([...themeList, {\r\n\r\n                }])\r\n                // setThemeList([...themeList, {\r\n                //     id: addCategoryRes['id'] || '',\r\n                //     key: addCategoryRes['id'] || '',\r\n                //     name: addCategoryRes['name'] || '',\r\n                //     description: addCategoryRes['description'] || '',\r\n                //     // @ts-ignore\r\n                //     ...addCategoryRes\r\n                // }])\r\n            },\r\n            error: () => {\r\n                setuploading(false);\r\n                openErrorNotification('Theme Upload failed!')\r\n                message.error('upload failed.');\r\n            },\r\n        });\r\n    };\r\n\r\n\r\n    function getBase64(img, callback) {\r\n        const reader = new FileReader();\r\n        reader.addEventListener('load', () => callback(reader.result));\r\n        reader.readAsDataURL(img);\r\n    }\r\n\r\n    function beforeUpload(file) {\r\n        const isJpgOrPng = file.type === 'image/jpeg' || file.type === 'image/png';\r\n        if (!isJpgOrPng) {\r\n            message.error('You can only upload JPG/PNG file!');\r\n        }\r\n        const isLt2M = file.size / 1024 / 1024 < 2;\r\n        if (!isLt2M) {\r\n            message.error('Image must smaller than 2MB!');\r\n        }\r\n\r\n\r\n        getBase64(file, imageUrl => {\r\n            setImageUrl(imageUrl)\r\n            setThumbnailFile(file);\r\n            setLoadingThumbnail(false)\r\n        })\r\n\r\n        return false;\r\n    }\r\n\r\n\r\n\r\n    const uploadButton = (\r\n        <div>\r\n            {loadingThumnail ? <LoadingOutlined /> : <PlusOutlined />}\r\n            <div className=\"ant-upload-text\">Upload</div>\r\n        </div>\r\n    );\r\n\r\n    return (\r\n        <>\r\n            <Modal\r\n                style={{\r\n                    top: '40px'\r\n                }}\r\n                title=\"Add New Theme\"\r\n                visible={addNewCategoryVisible}\r\n                onOk={handleSubmit}\r\n                onCancel={handleCancel}\r\n                okText='Upload Theme'\r\n                okButtonProps={{\r\n                    loading: uploading,\r\n                    htmlType: \"submit\",\r\n                    disabled: getisSubmitButtonDisabled()\r\n                }}\r\n\r\n                bodyStyle={{\r\n                    margin: '0',\r\n                    padding: '10px'\r\n                }}\r\n            >\r\n\r\n                <Input\r\n                    label='Name'\r\n                    value={name}\r\n                    name='name'\r\n                    onChange={(e: any) => setname(e.target.value)}\r\n                    isError={addThemeState.error['error']['name']}\r\n\r\n                    errorString={addThemeState.error['error']['name']}\r\n                />\r\n\r\n                <div style={{\r\n                    marginTop: '20px'\r\n                }}></div>\r\n\r\n\r\n                <h3 className='inputFieldLabel'>Thumbnail</h3>\r\n                <Upload\r\n                    name=\"avatar\"\r\n                    listType=\"picture-card\"\r\n                    className=\"avatar-uploader\"\r\n                    showUploadList={false}\r\n                    beforeUpload={beforeUpload}\r\n                    multiple={false}\r\n                >\r\n                    {imageUrl ? <img src={imageUrl} alt=\"avatar\" style={{ width: '100%' }} /> : uploadButton}\r\n                </Upload>\r\n\r\n\r\n\r\n                <div style={{\r\n                    marginTop: '3px'\r\n                }}></div>\r\n                <h3 className='inputFieldLabel'>\r\n                    Theme Folder (.zip)\r\n\t\t\t\t\t\t\t\t\t</h3>\r\n\r\n\r\n                <Dragger\r\n                    multiple={false}\r\n                    className='upload-list-inline'\r\n                    listType='picture'\r\n                    style={{\r\n                        background: '#fff'\r\n                    }}\r\n                    {...uploadProps}\r\n                >\r\n                    <p className='ant-upload-drag-icon'>\r\n                        <InboxOutlined />\r\n                    </p>\r\n                    <p className='ant-upload-text'>Click or drag file to this area to upload</p>\r\n                    <p className='ant-upload-hint'>\r\n                        Support for a single or bulk upload. Strictly prohibit from uploading company data or\r\n                        other band files\r\n\t\t\t\t\t\t\t</p>\r\n                </Dragger>\r\n\r\n                {addThemeState.error['error']['folder'] && (\r\n                    <p style={{\r\n                        color: 'rgba(255, 0, 0, 0.507)'\r\n                    }}>{addThemeState.error['error']['folder']}</p>\r\n                )}\r\n\r\n\r\n\r\n\r\n\r\n            </Modal>\r\n\r\n            <MediaLibrary\r\n                setvisible={setvisibleMedia}\r\n                visible={visibleMedia}\r\n                setmyImages={setmyImages}\r\n                isModalOpenForImages={false}\r\n                setmyThumbnailImage={setmyThumbnailImage}\r\n                isModalOpenForThumbnail={isModalOpenForThumbnail}\r\n                myThumbnailImage={myThumbnailImage}\r\n            />\r\n        </>\r\n    );\r\n};\r\n\r\nexport default AddNewBrand;\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React, {useState, useEffect} from 'react';\r\nimport {withRouter} from 'react-router-dom';\r\nimport { Button, Input,Tooltip, Modal, notification, Popconfirm,Badge} from 'antd';\r\nimport { \r\n  PlusOutlined, EditOutlined, \r\n  DeleteOutlined,EditFilled,\r\n  CheckOutlined,\r\n  CheckCircleOutlined,\r\n  CheckCircleTwoTone } from '@ant-design/icons';\r\n\r\n\r\n/// import hooks\r\nimport { useFetch, useHandleFetch } from \"../../hooks\";\r\n\r\n// import components\r\nimport { DataTableSkeleton } from \"../../components/Placeholders\";\r\nimport AddNewTheme from \"./AddNewTheme\";\r\n\r\nimport Empty from \"../../components/Empty\";\r\n\r\nconst { Search } = Input;\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t  message: message || 'Tag Created',\r\n\t  description: '',\r\n\t  icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n  };\r\n\r\n\r\n  const openErrorNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t  message: message || 'Something Went Wrong',\r\n\t  description: '',\r\n\t  icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n  };\r\n\r\n\r\n\r\ninterface Props {\r\n    history: any; \r\n}\r\n\r\nconst CustomerList = ({history}: Props) => {\r\n\r\n    const [themeList,setThemeList] = useState([]); \r\n\r\n    const [themeState, handleThemeListFetch] = useHandleFetch({}, 'themeList');\r\n    const [activeThemeState, handleActiveThemeFetch] = useHandleFetch({}, 'activeTheme');\r\n    const [updateDeleteThemeState, handleDeleteThemeFetch] = useHandleFetch({}, 'deletetheme');\r\n  \r\n\r\n    \r\n    useEffect(()=>{\r\n     const setThemes = async () => {\r\n       const themes = await handleThemeListFetch({}); \r\n       // @ts-ignore\r\n       setThemeList(themes); \r\n     }\r\n     setThemes(); \r\n    },[])\r\n\r\n\r\n\r\n\r\n  \r\n  const [addNewCategoryVisible,setAddNewCategoryVisible] = useState(false);   \r\n\r\n\r\n\r\n  const handleSearch = (value) => {\r\n    if(themeState.data.length > 0 ){\r\n      const newThemeList = themeState.data.filter(item => item.name.includes(value)); \r\n      setThemeList(newThemeList); \r\n    }\r\n     \r\n  }\r\n\r\n\r\n\r\n\r\n  const handleActiveTheme = async (id) => {\r\n    const activeThemeRes = await handleActiveThemeFetch({\r\n      urlOptions: {\r\n        placeHolders: {\r\n          id,\r\n        }\r\n        }\r\n      });\r\n\r\n        // @ts-ignore\r\n  if(activeThemeRes && activeThemeRes.status === 'ok'){\r\n    openSuccessNotification('Theme activated'); \r\n   \r\n  }\r\n  else {\r\n    openErrorNotification(\"Couldn't activate the theme, Something went wrong\")\r\n  }\r\n     \r\n     \r\n  }\r\n\r\n\r\n  const handleDeleteTheme = async (id) => {\r\n    const deleteThemeRes = await handleDeleteThemeFetch({\r\n      urlOptions: {\r\n        placeHolders: {\r\n          id,\r\n        }\r\n        }\r\n      });\r\n\r\n        // @ts-ignore\r\n  if(deleteThemeRes && deleteThemeRes.status === 'ok'){\r\n    openSuccessNotification('Theme Deleted'); \r\n    const newThemeList =  themeList.filter(item => item.id !== id);\r\n    setThemeList(newThemeList); \r\n  }\r\n  else {\r\n  openErrorNotification(\"Couldn't delete, Something went wrong\")\r\n  }\r\n  }\r\n\r\n\r\n\r\n\r\n\treturn (\r\n\t\t<>\r\n    {/* <h2 className='containerPageTitle'>\r\n      Categories\r\n    </h2> */}\r\n    <div className='categoryListContainer'>\r\n            <div className='categoryListContainer__header'>\r\n           \r\n\r\n          <div className='categoryListContainer__header-searchBar'>\r\n          <h2 className='categoryListContainer__header-title'>\r\n\t\t Themes\r\n \r\n            </h2>\r\n\r\n\r\n          <Search\r\n            enterButton={false}\r\n            className='searchbarClassName'\r\n          placeholder=\"search themes..\"\r\n          onSearch={value => handleSearch(value)}\r\n          // style={{ width: 300 }}\r\n        />\r\n          </div>\r\n            <Button\r\n          // type=\"primary\"\r\n          className='btnPrimaryClassNameoutline'\r\n          icon={<PlusOutlined />}\r\n          onClick={() => setAddNewCategoryVisible(true)}\r\n        >\r\n        Add New\r\n            \r\n            </Button>\r\n            </div>\r\n\r\n            <div className='categoryListContainer__afterHeader'>\r\n\r\n            </div>\r\n\r\n     \r\n\t\t\t\r\n\t\t\t<div className='categoryListContainer__categoryList'>\r\n        {themeState.done && themeList.length > 0 && (\r\n   \r\n   <div className='categoryListContainer__bodyContainerList'>\r\n\t\t\r\n          {themeList.map(theme => {\r\n            return (\r\n              <div className='categoryListContainer__bodyContainerList-item'>\r\n              {/* <Badge count={<CheckCircleTwoTone style={{ color: '#3FA3FF' }} />}>\r\n               \r\n                  </Badge> */}\r\n                  <div className='categoryListContainer__bodyContainerList-item-top'>\r\n                  <img\r\n                    alt='theme img'\r\n                    src={theme.thumbnail}\r\n                  />\r\n                </div>\r\n                <div className='categoryListContainer__bodyContainerList-item-body'>\r\n                  <h3> {theme.name} </h3>\r\n     \r\n                  <div\r\n                    style={{\r\n                      display: 'flex',\r\n                      justifyContent: 'space-between'\r\n                    }}\r\n                  >\r\n                    <Tooltip placement='top' title='Active this theme'>\r\n                    <Button\r\n                  \r\n                   size='small'\r\n                   className='btnPrimaryClassNameoutline'\r\n                   icon={<CheckOutlined />}\r\n                   onClick={() => handleActiveTheme(theme.id)}\r\n                  >\r\n                    <span style={{\r\n                      fontSize:'11px'\r\n                    }}>\r\n                    Set Active\r\n                 \r\n                    </span>\r\n                \r\n                 </Button>\r\n     \r\n     \r\n                      \r\n                    </Tooltip>\r\n     \r\n                    <Tooltip placement='top' title='Delete theme'>\r\n                    <Popconfirm \r\n               \r\n               onConfirm={() => handleDeleteTheme(theme.id)}\r\n               title=\"Are you sure？\" okText=\"Yes\" cancelText=\"No\">\r\n           \r\n           <Button\r\n                        size='small'\r\n                        type='link'\r\n                        danger={true}\r\n                        icon={<DeleteOutlined />}\r\n                      >\r\n                        \r\n                        </Button>\r\n           </Popconfirm>\r\n\r\n\r\n                     \r\n     \r\n                        \r\n                        </Tooltip>\r\n                      </div>\r\n                    </div>\r\n                </div>\r\n            )\r\n          })}\r\n         </div>\r\n\t\t)}\r\n\r\n\r\n        {themeState.isLoading && <DataTableSkeleton />}\r\n\r\n        {themeState.done && !(themeList.length > 0) && (\r\n        <Empty title='No Theme found'  />\r\n        )}\r\n        \r\n\r\n\t\t\t</div>\r\n\t\t</div>\r\n\r\n\r\n    {themeState.done && \r\n    <AddNewTheme \r\n          addNewCategoryVisible={addNewCategoryVisible} \r\n          setAddNewCategoryVisible={setAddNewCategoryVisible}\r\n          themeList={themeState.data}\r\n          setThemeList={setThemeList}\r\n           />}\r\n    </>\r\n\t);\r\n};\r\n\r\nexport default withRouter(CustomerList);\r\n","import React from 'react'\r\n\r\ninterface Props {\r\n    \r\n}\r\n\r\nconst Image = (props: Props) => {\r\n    return (\r\n        <div>\r\n            Image\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Image\r\n","import React from 'react';\r\n\r\ninterface Props {}\r\n\r\nconst Invoice = (props: Props) => {\r\n\treturn <div>Invoice</div>;\r\n};\r\n\r\nexport default Invoice;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n\r\nimport { useHandleFetch } from '../../hooks';\r\n// import third party ui lib\r\nimport { notification, Button } from 'antd';\r\n\r\nimport {\r\n    CheckCircleOutlined\r\n} from '@ant-design/icons';\r\n\r\n\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport MediaLibrary from \"../../components/MediaLibrary\";\r\n\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    title: Yup.string()\r\n        .label('Title')\r\n        .required('Site title can not be empty'),\r\n    adminEmail: Yup.string()\r\n        .label('Admin Email')\r\n        .required('Admin Email can not be empty'),\r\n\r\n});\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Site Info Updated',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Something Went Wrong',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst initialValues = {\r\n    title: '',\r\n    adminName: '',\r\n    adminEmail: '',\r\n}\r\n\r\n\r\n\r\ninterface Props {\r\n\r\n\r\n}\r\n\r\nconst UpdateSiteinfo = ({ }: Props) => {\r\n\r\n    const [UpdateSiteSettingsState, handleUpdateSiteSettingsFetch] = useHandleFetch({}, 'updateSiteSettings');\r\n    const [siteSettingsState, handlSiteSettingsFetch] = useHandleFetch({}, 'siteSettings');\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        const getSiteSettings = async () => {\r\n            const siteSettingsRes = await handlSiteSettingsFetch({});\r\n\r\n            // console.log('siteSettingsRes', siteSettingsRes)\r\n        }\r\n        getSiteSettings();\r\n    }, [UpdateSiteSettingsState])\r\n\r\n\r\n    // console.log('siteSettingsState', siteSettingsState);\r\n\r\n    const handleSubmit = async (values: any, actions: any) => {\r\n\r\n\r\n        const addSiteInfoRes = await handleUpdateSiteSettingsFetch({\r\n\r\n            body: {\r\n                title: values.title,\r\n                adminName: values.adminName,\r\n                adminEmail: values.adminEmail,\r\n            },\r\n        });\r\n\r\n        // @ts-ignore\r\n        if (addSiteInfoRes && addSiteInfoRes.status === 'ok') {\r\n            openSuccessNotification();\r\n\r\n\r\n            // setBrandList([...brandList, {\r\n            //     id: addBrandRes['id'] || '',\r\n            //     key: addBrandRes['id'] || '',\r\n            //     name: addBrandRes['name'] || '',\r\n            //     description: addBrandRes['description'] || '',\r\n            //     // @ts-ignore\r\n            //     ...addBrandRes\r\n            // }]);\r\n\r\n            actions.resetForm();\r\n        }\r\n        else {\r\n            openErrorNotification();\r\n        }\r\n\r\n\r\n\r\n\r\n        actions.setSubmitting(false);\r\n\r\n    };\r\n\r\n\r\n\r\n\r\n\r\n    const getisSubmitButtonDisabled = (values, isValid) => {\r\n        if (!values.title || !values.adminEmail || !isValid) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    const getInitialValues = () => {\r\n        if (siteSettingsState.data && Object.keys(siteSettingsState.data).length > 0) {\r\n            return { ...siteSettingsState.data }\r\n        }\r\n        else {\r\n            return initialValues\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n    return (\r\n        <Formik\r\n            onSubmit={(values, actions) => handleSubmit(values, actions)}\r\n            enableReinitialize={true}\r\n            initialValues={\r\n                getInitialValues()\r\n            }\r\n        >\r\n            {({\r\n                handleChange,\r\n                values,\r\n                handleSubmit,\r\n                errors,\r\n                isValid,\r\n                isSubmitting,\r\n                touched,\r\n                handleBlur,\r\n                setFieldTouched,\r\n                handleReset,\r\n            }) => (\r\n                    <>\r\n                        <div className='siteInfoContainer__item'>\r\n                            <div className='siteInfoContainer__item-item'>\r\n                                <Input\r\n                                    label='Site Title'\r\n                                    value={values.title}\r\n                                    name='title'\r\n                                    isError={(touched.title && errors.title) ||\r\n                                        (!isSubmitting && UpdateSiteSettingsState.error['error']['title'])}\r\n\r\n                                    errorString={(touched.title && errors.title) ||\r\n                                        (!isSubmitting && UpdateSiteSettingsState.error['error']['title'])}\r\n                                    onChange={(e: any) => {\r\n                                        handleChange(e);\r\n                                        setFieldTouched('title');\r\n                                    }}\r\n                                />\r\n                            </div>\r\n                            <div className='siteInfoContainer__item-item'>\r\n                                <Input\r\n                                    label='Admin Name'\r\n                                    value={values.adminName}\r\n                                    name='adminName'\r\n                                    isError={(touched.adminName && errors.adminName) ||\r\n                                        (!isSubmitting && UpdateSiteSettingsState.error['error']['adminName'])}\r\n\r\n                                    errorString={(touched.adminName && errors.adminName) ||\r\n                                        (!isSubmitting && UpdateSiteSettingsState.error['error']['adminName'])}\r\n                                    onChange={(e: any) => {\r\n                                        handleChange(e);\r\n                                        setFieldTouched('adminName');\r\n                                    }}\r\n                                />\r\n                            </div>\r\n                            <div className='siteInfoContainer__item-item-left'>\r\n                                <Input\r\n                                    label='Admin Email'\r\n                                    value={values.adminEmail}\r\n                                    name='adminEmail'\r\n                                    isError={(touched.adminEmail && errors.adminEmail) ||\r\n                                        (!isSubmitting && UpdateSiteSettingsState.error['error']['adminEmail'])}\r\n\r\n                                    errorString={(touched.adminEmail && errors.adminEmail) ||\r\n                                        (!isSubmitting && UpdateSiteSettingsState.error['error']['adminEmail'])}\r\n                                    onChange={(e: any) => {\r\n                                        handleChange(e);\r\n                                        setFieldTouched('adminEmail');\r\n                                    }}\r\n                                />\r\n\r\n                            </div>\r\n\r\n                        </div>\r\n\r\n\r\n                        <div style={{\r\n                            marginTop: '10px'\r\n                        }}></div>\r\n\r\n                        <Button\r\n\r\n                            onClick={(e: any) => handleSubmit(e)}\r\n                            loading={isSubmitting}\r\n                            disabled={getisSubmitButtonDisabled(values, isValid)}\r\n                            className='btnPrimaryClassNameoutline'\r\n                        >\r\n                            Update Admin Info\r\n                            </Button>\r\n\r\n                        <div style={{\r\n                            marginBottom: '10px'\r\n                        }}></div>\r\n\r\n                    </>\r\n                )}\r\n        </Formik >\r\n\r\n\r\n\r\n\r\n    );\r\n};\r\n\r\nexport default UpdateSiteinfo;\r\n//","import React, { useEffect } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n\r\nimport { useHandleFetch } from '../../hooks';\r\n// import third party ui lib\r\nimport { notification, Button } from 'antd';\r\n\r\nimport {\r\n    CheckCircleOutlined\r\n} from '@ant-design/icons';\r\n\r\n\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\n// import MediaLibrary from \"../../components/MediaLibrary\";\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    invoiceTitle: Yup.string().label('Title').required('Invoice title is required')\r\n});\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Site Info Updated',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Something Went Wrong',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst initialValues = {\r\n    invoiceTitle: \"\",\r\n    address: \"\",\r\n    phone: \"\",\r\n    email: \"\",\r\n    additionalText: \"\"\r\n};\r\n\r\n\r\n\r\n\r\ninterface Props {\r\n\r\n\r\n}\r\n\r\nconst UpdateSiteinfo = ({ }: Props) => {\r\n\r\n    const [updateInfovSettingsState, handleUpdateInvoiceSettingsFetch] = useHandleFetch({}, 'updateInvoiceSettings');\r\n    const [InvoiceSettingsState, handlSiteInvoiceSettingsFetch] = useHandleFetch({}, 'invoiceSettingsDetail');\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        const getSiteSettings = async () => {\r\n            const siteSettingsRes = await handlSiteInvoiceSettingsFetch({});\r\n\r\n            // console.log('siteSettingsRes', siteSettingsRes)\r\n        }\r\n        getSiteSettings();\r\n    }, [updateInfovSettingsState])\r\n\r\n\r\n\r\n    const handleSubmit = async (values: any, actions: any) => {\r\n\r\n        const updateInvoiceRes = await handleUpdateInvoiceSettingsFetch({\r\n\r\n            body: {\r\n                invoiceTitle: values.invoiceTitle,\r\n                address: values.address,\r\n                phone: values.phone,\r\n                email: values.email,\r\n                additionalText: values.additionalText\r\n\r\n            },\r\n        });\r\n\r\n        // @ts-ignore\r\n        if (updateInvoiceRes && updateInvoiceRes.status === 'ok') {\r\n            openSuccessNotification();\r\n\r\n\r\n            // setBrandList([...brandList, {\r\n            //     id: addBrandRes['id'] || '',\r\n            //     key: addBrandRes['id'] || '',\r\n            //     name: addBrandRes['name'] || '',\r\n            //     description: addBrandRes['description'] || '',\r\n            //     // @ts-ignore\r\n            //     ...addBrandRes\r\n            // }]);\r\n\r\n            actions.resetForm();\r\n        }\r\n        else {\r\n            openErrorNotification();\r\n        }\r\n\r\n\r\n        actions.setSubmitting(false);\r\n\r\n    };\r\n\r\n\r\n\r\n\r\n\r\n    const getisSubmitButtonDisabled = (values, isValid) => {\r\n        if (!values.invoiceTitle || !isValid) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n\r\n\r\n    const getInitialValues = () => {\r\n        if (InvoiceSettingsState.data && Object.keys(InvoiceSettingsState.data).length > 0) {\r\n            return { ...InvoiceSettingsState.data }\r\n        }\r\n        else {\r\n            return initialValues\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <Formik\r\n            onSubmit={(values, actions) => handleSubmit(values, actions)}\r\n            validationSchema={validationSchema}\r\n            enableReinitialize={true}\r\n            initialValues={\r\n                getInitialValues()\r\n            }\r\n        >\r\n            {({\r\n                handleChange,\r\n                values,\r\n                handleSubmit,\r\n                errors,\r\n                isValid,\r\n                isSubmitting,\r\n                touched,\r\n                handleBlur,\r\n                setFieldTouched,\r\n                handleReset,\r\n            }) => (\r\n                    <>\r\n                        <div className='siteInfoContainer__item'>\r\n                            <div className='siteInfoContainer__item-item'>\r\n                                <Input\r\n                                    label='Company Name'\r\n                                    value={values.invoiceTitle}\r\n                                    name='invoiceTitle'\r\n                                    isError={(touched.invoiceTitle && errors.invoiceTitle) ||\r\n                                        (!isSubmitting && updateInfovSettingsState.error['error']['invoiceTitle'])}\r\n\r\n                                    errorString={(touched.invoiceTitle && errors.invoiceTitle) ||\r\n                                        (!isSubmitting && updateInfovSettingsState.error['error']['invoiceTitle'])}\r\n                                    onChange={(e: any) => {\r\n                                        handleChange(e);\r\n                                        setFieldTouched('invoiceTitle');\r\n                                    }}\r\n                                />\r\n                            </div>\r\n                            <div className='siteInfoContainer__item-item'>\r\n                                <Input\r\n                                    label='Phone Number'\r\n                                    value={values.phone}\r\n                                    name='phone'\r\n                                    isError={(touched.phone && errors.phone) ||\r\n                                        (!isSubmitting && updateInfovSettingsState.error['error']['phone'])}\r\n\r\n                                    errorString={(touched.phone && errors.phone) ||\r\n                                        (!isSubmitting && updateInfovSettingsState.error['error']['phone'])}\r\n                                    onChange={(e: any) => {\r\n                                        handleChange(e);\r\n                                        setFieldTouched('phone');\r\n                                    }}\r\n                                />\r\n                            </div>\r\n                            <div className='siteInfoContainer__item-item'>\r\n                                <Input\r\n                                    label='Email'\r\n                                    value={values.email}\r\n                                    name='email'\r\n                                    isError={(touched.email && errors.email) ||\r\n                                        (!isSubmitting && updateInfovSettingsState.error['error']['email'])}\r\n\r\n                                    errorString={(touched.email && errors.email) ||\r\n                                        (!isSubmitting && updateInfovSettingsState.error['error']['email'])}\r\n                                    onChange={(e: any) => {\r\n                                        handleChange(e);\r\n                                        setFieldTouched('email');\r\n                                    }}\r\n                                />\r\n\r\n                            </div>\r\n\r\n                            <div className='siteInfoContainer__item-item'>\r\n                                <Input\r\n                                    label='Additional Text'\r\n                                    value={values.additionalText}\r\n                                    name='additionalText'\r\n                                    isError={(touched.additionalText && errors.additionalText) ||\r\n                                        (!isSubmitting && updateInfovSettingsState.error['error']['additionalText'])}\r\n\r\n                                    errorString={(touched.additionalText && errors.additionalText) ||\r\n                                        (!isSubmitting && updateInfovSettingsState.error['error']['additionalText'])}\r\n                                    onChange={(e: any) => {\r\n                                        handleChange(e);\r\n                                        setFieldTouched('additionalText');\r\n                                    }}\r\n                                />\r\n\r\n                            </div>\r\n\r\n                            <div className='siteInfoContainer__item-item-left'>\r\n                                <TextArea\r\n                                    label='Address'\r\n                                    value={values.address}\r\n                                    name='address'\r\n                                    isError={(touched.address && errors.address) ||\r\n                                        (!isSubmitting && updateInfovSettingsState.error['error']['address'])}\r\n\r\n                                    errorString={(touched.address && errors.address) ||\r\n                                        (!isSubmitting && updateInfovSettingsState.error['error']['address'])}\r\n                                    onChange={(e: any) => {\r\n                                        handleChange(e);\r\n                                        setFieldTouched('address');\r\n                                    }}\r\n                                />\r\n\r\n                            </div>\r\n\r\n                        </div>\r\n\r\n\r\n                        <div style={{\r\n                            marginTop: '10px'\r\n                        }}></div>\r\n\r\n                        <Button\r\n\r\n                            onClick={(e: any) => handleSubmit(e)}\r\n                            loading={isSubmitting}\r\n                            disabled={getisSubmitButtonDisabled(values, isValid)}\r\n                            className='btnPrimaryClassNameoutline'\r\n                        >\r\n                            Update Admin Info\r\n                            </Button>\r\n\r\n                        <div style={{\r\n                            marginBottom: '10px'\r\n                        }}></div>\r\n                    </>\r\n                )}\r\n        </Formik>\r\n\r\n\r\n\r\n\r\n    );\r\n};\r\n\r\nexport default UpdateSiteinfo;\r\n","import React, { useState } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n\r\nimport { useHandleFetch } from '../../hooks';\r\n// import third party ui lib\r\nimport { Upload, message, Switch, Select, Button, notification, Modal, Tabs, Tooltip } from 'antd';\r\n\r\n\r\nimport {\r\n\tFileOutlined,\r\n\tInboxOutlined,\r\n\tFileAddOutlined,\r\n\tDeleteOutlined,\r\n\tCheckCircleOutlined,\r\n\tPlusOutlined,\r\n\tFileImageFilled,\r\n\tCheckOutlined,\r\n\tCloseOutlined\r\n} from '@ant-design/icons';\r\n\r\n\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport MediaLibrary from \"../../components/MediaLibrary\";\r\nimport AdminSiteInfo from \"./AdminSiteInfo\";\r\nimport SiteInfoInvoice from \"./SiteInfoInvoice\";\r\n\r\nconst validationSchema = Yup.object().shape({\r\n\tname: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\nconst { TabPane } = Tabs;\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t\tmessage: message || 'Brand Created',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t\tmessage: message || 'Something Went Wrong',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n};\r\n\r\n\r\nconst initialValues = {\r\n\tname: '',\r\n\tdescription: '',\r\n\timage: [],\r\n\turl: '',\r\n\tcover: ''\r\n}\r\n\r\n\r\n\r\ninterface Props {\r\n\taddNewCategoryVisible?: any;\r\n\tsetAddNewCategoryVisible?: any;\r\n\tbrandList?: any;\r\n\tsetBrandList?: any;\r\n\r\n}\r\n\r\nconst AddNewBrand = ({ addNewCategoryVisible, setAddNewCategoryVisible, brandList, setBrandList }: Props) => {\r\n\r\n\tconst [updateSiteLogoAndIcon, handleUpdateSiteLogoAndIconFetch] = useHandleFetch({}, 'updateSiteLogoAndIcon');\r\n\tconst [myImages, setmyImages] = useState(false);\r\n\tconst [visibleMedia, setvisibleMedia] = useState(false);\r\n\tconst [coverImageId, setCoverImageId] = useState('');\r\n\r\n\r\n\r\n\tconst handleSubmit = async () => {\r\n\r\n\r\n\t\tconst updateSiteIconAndLogoRes = await handleUpdateSiteLogoAndIconFetch({\r\n\r\n\t\t\tbody: {\r\n\t\t\t\tlogo: myImages ? myImages[0] && myImages[0].id : '',\r\n\t\t\t},\r\n\t\t});\r\n\r\n\t\t// @ts-ignore\r\n\t\tif (updateSiteIconAndLogoRes && updateSiteIconAndLogoRes.status === 'ok') {\r\n\t\t\topenSuccessNotification('Updated Site Logo');\r\n\t\t}\r\n\t\telse {\r\n\t\t\topenErrorNotification(\"Couldn't updated site logo, Something went wrong\");\r\n\t\t}\r\n\r\n\t};\r\n\r\n\r\n\tconst handleImagesDelete = (id) => {\r\n\t\t// @ts-ignore\r\n\t\tconst newImages = myImages && myImages.filter(image => {\r\n\t\t\treturn image.id !== id;\r\n\t\t})\r\n\r\n\t\tsetmyImages(newImages);\r\n\t}\r\n\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<div className='siteInfoContainer'>\r\n\r\n\t\t\t\t<Tabs defaultActiveKey=\"1\" >\r\n\t\t\t\t\t<TabPane tab=\"Site Info\" key=\"1\">\r\n\t\t\t\t\t\t<AdminSiteInfo />\r\n\t\t\t\t\t</TabPane>\r\n\t\t\t\t\t<TabPane tab=\"Site logo\" key=\"2\">\r\n\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\tdisplay: 'flex',\r\n\t\t\t\t\t\t\talignItems: 'center'\r\n\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\tmarginRight: '20px'\r\n\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>Logo</h3>\r\n\t\t\t\t\t\t\t\t<div className='aboutToUploadImagesContainer'>\r\n\t\t\t\t\t\t\t\t\t{myImages &&\r\n\t\t\t\t\t\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\t\t\t\t\t\tmyImages.length > 0 && myImages.map((image, index) => {\r\n\t\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div className='aboutToUploadImagesContainer__item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='aboutToUploadImagesContainer__item-imgContainer'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => setCoverImageId(image.id)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<img src={image.cover} alt={image.alt} />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<span\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => handleImagesDelete(image.id)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='aboutToUploadImagesContainer__item-remove'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<CloseOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t\t})}\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t{myImages ? !myImages[0] && (\r\n\t\t\t\t\t\t\t\t\t\t<Tooltip\r\n\t\t\t\t\t\t\t\t\t\t\ttitle={'Attach images'}>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetvisibleMedia(true);\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\tclassName='aboutToUploadImagesContainer__uploadItem'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t{/* <FileAddOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<FileImageTwoTone />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<FileImageOutlined /> */}\r\n\t\t\t\t\t\t\t\t\t\t\t\t<FileImageFilled />\r\n\t\t\t\t\t\t\t\t\t\t\t\t{/* <h5>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t Select From Library\r\n\t\t\t\t\t\t\t\t\t\t\t\t<     /h5> */}\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span className='aboutToUploadImagesContainer__uploadItem-plus'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<PlusOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t\t\t\t) : <Tooltip\r\n\t\t\t\t\t\t\t\t\t\ttitle={'Attach images'}>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetvisibleMedia(true);\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\tclassName='aboutToUploadImagesContainer__uploadItem'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t{/* <FileAddOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t<FileImageTwoTone />\r\n\t\t\t\t\t\t\t\t\t\t\t\t<FileImageOutlined /> */}\r\n\t\t\t\t\t\t\t\t\t\t\t\t<FileImageFilled />\r\n\t\t\t\t\t\t\t\t\t\t\t\t{/* <h5>\r\n\t\t\t\t\t\t\t\t\t\t\t\t Select From Library\r\n\t\t\t\t\t\t\t\t\t\t<     /h5> */}\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span className='aboutToUploadImagesContainer__uploadItem-plus'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<PlusOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</Tooltip>}\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t{/* \r\n\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'> Icon</h3>\r\n\r\n\r\n\t\t\t\t\t\t\t\t<div className='aboutToUploadImagesContainer'>\r\n\t\t\t\t\t\t\t\t\t{myImages &&\r\n\t\t\t\t\t\t\t\t\t\tmyImages.length > 0 && myImages.map((image, index) => {\r\n\t\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div className='aboutToUploadImagesContainer__item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='aboutToUploadImagesContainer__item-imgContainer'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => setCoverImageId(image.id)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<img src={image.cover} alt={image.alt} />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<span\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => handleImagesDelete(image.id)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='aboutToUploadImagesContainer__item-remove'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<CloseOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t\t})}\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t{myImages ? !myImages[0] && (\r\n\t\t\t\t\t\t\t\t\t\t<Tooltip\r\n\t\t\t\t\t\t\t\t\t\t\ttitle={'Attach images'}>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetvisibleMedia(true);\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\tclassName='aboutToUploadImagesContainer__uploadItem'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t<FileImageFilled />\r\n\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span className='aboutToUploadImagesContainer__uploadItem-plus'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<PlusOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t\t\t\t) : <Tooltip\r\n\t\t\t\t\t\t\t\t\t\ttitle={'Attach images'}>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetvisibleMedia(true);\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\tclassName='aboutToUploadImagesContainer__uploadItem'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t<FileImageFilled />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span className='aboutToUploadImagesContainer__uploadItem-plus'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<PlusOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</Tooltip>}\r\n\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t</div> */}\r\n\r\n\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t<Button\r\n\r\n\t\t\t\t\t\t\tloading={updateSiteLogoAndIcon.isLoading}\r\n\t\t\t\t\t\t\tonClick={() => handleSubmit()}\r\n\t\t\t\t\t\t\tclassName='btnPrimaryClassNameoutline'\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\tUpdate site Logo\r\n                            </Button>\r\n\r\n\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\tmarginBottom: '10px'\r\n\t\t\t\t\t\t}}></div>\r\n\t\t\t\t\t</TabPane>\r\n\r\n\r\n\t\t\t\t\t<TabPane tab=\"Admin Information\" key=\"3\">\r\n\r\n\t\t\t\t\t\t<SiteInfoInvoice />\r\n\t\t\t\t\t</TabPane>\r\n\r\n\t\t\t\t</Tabs>\r\n\r\n\t\t\t</div>\r\n\r\n\r\n\r\n\t\t\t<MediaLibrary\r\n\t\t\t\tsetvisible={setvisibleMedia}\r\n\t\t\t\tvisible={visibleMedia}\r\n\t\t\t\tsetmyImages={setmyImages}\r\n\t\t\t\tisModalOpenForImages={true}\r\n\r\n\t\t\t/>\r\n\t\t</>\r\n\r\n\r\n\t);\r\n};\r\n\r\nexport default AddNewBrand;\r\n\r\n\r\n\r\n/*\r\n\t<div className='categoryListContainer__bodyContainerList'>\r\n\t\t\t\t<div className='categoryListContainer__bodyContainerList-item'>\r\n\t\t\t\t\t<Badge count={<CheckCircleTwoTone style={{ color: '#3FA3FF' }} />}>\r\n\t\t\t\t\t\t<div className='categoryListContainer__bodyContainerList-item-top'>\r\n\t\t\t\t\t\t\t<img\r\n\t\t\t\t\t\t\t\talt='theme img'\r\n\t\t\t\t\t\t\t\tsrc='https://homebazarshibchar.com/images/homeBazar.zip-thumb-homebazarLogo.jpg'\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className='categoryListContainer__bodyContainerList-item-body'>\r\n\t\t\t\t\t\t\t<h3>Home Bazar</h3>\r\n\r\n\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\tdisplay: 'flex',\r\n\t\t\t\t\t\t\t\t\tjustifyContent: 'space-between'\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<Tooltip placement='top' title='Active this theme'>\r\n\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\tsize='small'\r\n\t\t\t\t\t\t\t\t\t\ttype='primary'\r\n\t\t\t\t\t\t\t\t\t\ticon={<CheckOutlined />}\r\n\t\t\t\t\t\t\t\t\t\tonClick={() => console.log('upload thme')}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\tSet Active\r\n\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t</Tooltip>\r\n\r\n\t\t\t\t\t\t\t\t<Tooltip placement='top' title='Delete theme'>\r\n\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\tsize='small'\r\n\t\t\t\t\t\t\t\t\t\ttype='link'\r\n\t\t\t\t\t\t\t\t\t\tdanger={true}\r\n\t\t\t\t\t\t\t\t\t\ticon={<DeleteOutlined />}\r\n\t\t\t\t\t\t\t\t\t\tonClick={() => console.log('upload thme')}\r\n\t\t\t\t\t\t\t\t\t>\r\n\r\n\t\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</Badge>\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t<div className='categoryListContainer__bodyContainerList-item'>\r\n\t\t\t\t\t\t\t<div className='categoryListContainer__bodyContainerList-item-top'>\r\n\t\t\t\t\t\t\t\t<img\r\n\t\t\t\t\t\t\t\t\talt='theme img'\r\n\t\t\t\t\t\t\t\t\tsrc='https://homebazarshibchar.com/images/homeBazar.zip-thumb-homebazarLogo.jpg'\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className='categoryListContainer__bodyContainerList-item-body'>\r\n\t\t\t\t\t\t\t\t<h3>Home Bazar</h3>\r\n\r\n\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\tdisplay: 'flex',\r\n\t\t\t\t\t\t\t\t\t\tjustifyContent: 'space-between'\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t<Tooltip placement='top' title='Active this theme'>\r\n\t\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\t\tsize='small'\r\n\t\t\t\t\t\t\t\t\t\t\ttype='primary'\r\n\t\t\t\t\t\t\t\t\t\t\ticon={<CheckOutlined />}\r\n\t\t\t\t\t\t\t\t\t\t\tonClick={() => console.log('upload thme')}\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\tSet Active\r\n\t\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t\t</Tooltip>\r\n\r\n\t\t\t\t\t\t\t\t\t<Tooltip placement='top' title='Delete theme'>\r\n\t\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\t\tsize='small'\r\n\t\t\t\t\t\t\t\t\t\t\ttype='link'\r\n\t\t\t\t\t\t\t\t\t\t\tdanger={true}\r\n\t\t\t\t\t\t\t\t\t\t\ticon={<DeleteOutlined />}\r\n\t\t\t\t\t\t\t\t\t\t\tonClick={() => console.log('upload thme')}\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\r\n\r\n*/","import React, { useState, useEffect } from 'react';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\n\r\ninterface Props {\r\n\tsetdeliveryChargeList: any;\r\n\tdeliveryChargeList: any;\r\n\tdeliveryChargeItem: any;\r\n}\r\n\r\nconst DeliveryCharge = ({ deliveryChargeItem, setdeliveryChargeList, deliveryChargeList }: Props) => {\r\n\tconst [ deliveryCharge, setdeliveryCharge ] = useState({\r\n\t\tminimumOrder: deliveryChargeItem.minimumOrder,\r\n\t\tcharge: deliveryChargeItem.charge\r\n\t});\r\n\r\n\tconst handleDeliveryChargeChange = (e) => {\r\n\t\tconst name = e.target.name;\r\n\t\tconst value = e.target.value;\r\n\r\n\t\tsetdeliveryCharge({\r\n\t\t\t...deliveryCharge,\r\n\t\t\t[name]: value\r\n\t\t});\r\n\t};\r\n\r\n\tuseEffect(\r\n\t\t() => {\r\n\t\t\tconst positionInAttribute = () => {\r\n\t\t\t\treturn deliveryChargeList.map((item) => item.id).indexOf(deliveryChargeItem.id);\r\n\t\t\t};\r\n\r\n\t\t\tconst index = positionInAttribute();\r\n\r\n\t\t\tconst updatedItem = Object.assign({}, deliveryChargeList[index], { ...deliveryCharge });\r\n\t\t\tconst updateAttributeList = [\r\n\t\t\t\t...deliveryChargeList.slice(0, index),\r\n\t\t\t\tupdatedItem,\r\n\t\t\t\t...deliveryChargeList.slice(index + 1)\r\n\t\t\t];\r\n\t\t\tsetdeliveryChargeList(updateAttributeList);\r\n\t\t},\r\n\t\t[ deliveryCharge ]\r\n\t);\r\n\r\n\tconst handleAttributeDelete = () => {\r\n\t\tconst updateAttributeList = deliveryChargeList.filter((item) => item.id !== deliveryChargeItem.id);\r\n\t\tsetdeliveryChargeList(updateAttributeList);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className='dubbleRowInputs'>\r\n\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t<Input\r\n\t\t\t\t\ttype='number'\r\n\t\t\t\t\taddonBefore='Minimum Order'\r\n\t\t\t\t\tvalue={deliveryCharge.minimumOrder}\r\n\t\t\t\t\tname='minimumOrder'\r\n\t\t\t\t\tonChange={handleDeliveryChargeChange}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t<Input\r\n\t\t\t\t\ttype='number'\r\n\t\t\t\t\taddonBefore='Charge'\r\n\t\t\t\t\tvalue={deliveryCharge.charge}\r\n\t\t\t\t\tname='charge'\r\n\t\t\t\t\tonChange={handleDeliveryChargeChange}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default DeliveryCharge;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n\r\nimport { useHandleFetch } from '../../hooks';\r\n// import third party ui lib\r\nimport { Upload, message, Switch, Select, Button, notification, Modal, Empty } from 'antd';\r\n\r\nimport {\r\n\tFileOutlined,\r\n\tInboxOutlined,\r\n\tRadiusUpleftOutlined,\r\n\tRadiusUprightOutlined,\r\n\tRadiusBottomleftOutlined,\r\n\tRadiusBottomrightOutlined,\r\n\tDeleteOutlined,\r\n\tFileAddOutlined,\r\n\tPlusOutlined,\r\n\tCheckCircleOutlined\r\n} from '@ant-design/icons';\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport DeliveryCharge from './DeliveryCharge';\r\n\r\n\r\nconst { Option } = Select;\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t\tmessage: message || 'Category Updated',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t\tmessage: message || 'Something Went Wrong',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n\tname: Yup.string()\r\n\t\t.label('Name')\r\n\t\t.required()\r\n\t\t.min(2, 'Name must have at least 2 characters '),\r\n\tpickUpLocation: Yup.string()\r\n\t\t.label('Pick up Location')\r\n\t\t.required()\r\n\t\t.min(2, 'Pick up Location must have at least 2 characters '),\r\n\ttime: Yup.string()\r\n\t\t.label('Time')\r\n\t\t.required()\r\n\t\t.min(2, 'Time must have at least 2 characters '),\r\n\r\n});\r\n\r\n\r\n\r\n\r\nconst initialValues = {\r\n\tname: '',\r\n\tpickUpLocation: '',\r\n\ttime: '',\r\n};\r\n\r\n\r\n\r\n\r\ninterface Props {\r\n\taddNewCategoryVisible: any;\r\n\tsetAddNewCategoryVisible: any;\r\n\tregionList?: any;\r\n\tsetRegionList?: any;\r\n}\r\n\r\nconst AddNewRegion = ({ addNewCategoryVisible, setAddNewCategoryVisible, regionList, setRegionList }: Props) => {\r\n\r\n\tconst [addRegionState, handleRegionFetch] = useHandleFetch({}, 'addRegion');\r\n\tconst [selectedCountryValue, setselectedCountryValue] = useState('');\r\n\tconst [selectedCityValue, setselectedCityValue] = useState('');\r\n\r\n\tconst [countryOptions, setcountryOptions] = useState([]);\r\n\tconst [cityOptions, setcityOptions] = useState([]);\r\n\r\n\tconst [countryListState, handleCountryListFetch] = useHandleFetch(\r\n\t\t[],\r\n\t\t'countryList'\r\n\t);\r\n\r\n\tconst [cityListState, handleCityListFetch] = useHandleFetch([], 'cityList');\r\n\r\n\tconst [countryList, setCountryList] = useState([]);\r\n\tconst [cityList, setCityList] = useState([]);\r\n\r\n\tconst [deliveryChargeList, setdeliveryChargeList] = useState([{\r\n\t\tminimumOrder: '',\r\n\t\tcharge: '',\r\n\t\tid: '0'\r\n\t}]);\r\n\r\n\r\n\tconst handleSubmit = async (values: any, actions: any) => {\r\n\t\t// console.log('selectedCityValue', selectedCityValue)\r\n\r\n\t\tif (deliveryChargeList.length > 0) {\r\n\t\t\tconst charge = {};\r\n\r\n\t\t\tfor (let item of deliveryChargeList) {\r\n\t\t\t\tif (charge[item['minimumOrder']] !== '' && item['charge'] !== '') {\r\n\t\t\t\t\tcharge[item['minimumOrder']] = item['charge']\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tconst addRegionRes = await handleRegionFetch({\r\n\r\n\t\t\t\tbody: {\r\n\t\t\t\t\tname: values.name,\r\n\t\t\t\t\tpickUpLocation: values.pickUpLocation,\r\n\t\t\t\t\ttime: values.time,\r\n\t\t\t\t\tcountry: selectedCountryValue,\r\n\t\t\t\t\tcity: selectedCityValue,\r\n\t\t\t\t\tcharge\r\n\t\t\t\t},\r\n\t\t\t});\r\n\r\n\r\n\t\t\t// @ts-ignore\r\n\t\t\tif (addRegionRes && addRegionRes.status === 'ok') {\r\n\t\t\t\topenSuccessNotification();\r\n\r\n\t\t\t\tsetRegionList([...regionList, {\r\n\t\t\t\t\tid: addRegionRes['id'] || '',\r\n\t\t\t\t\tkey: addRegionRes['id'] || '',\r\n\t\t\t\t\tname: addRegionRes['name'] || '',\r\n\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\t...addRegionRes\r\n\t\t\t\t}])\r\n\t\t\t\tsetAddNewCategoryVisible(false)\r\n\t\t\t\tactions.resetForm();\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\topenErrorNotification();\r\n\t\t\t}\r\n\r\n\r\n\r\n\t\t}\r\n\t\telse {\r\n\t\t\tconst addRegionRes = await handleRegionFetch({\r\n\r\n\t\t\t\tbody: {\r\n\t\t\t\t\tname: values.name,\r\n\t\t\t\t\tpickUpLocation: values.pickUpLocation,\r\n\t\t\t\t\ttime: values.time,\r\n\t\t\t\t\tcountry: selectedCountryValue,\r\n\t\t\t\t\tcity: selectedCityValue,\r\n\t\t\t\t\tcharge: {}\r\n\t\t\t\t},\r\n\t\t\t});\r\n\r\n\r\n\t\t\t// @ts-ignore\r\n\t\t\tif (addRegionRes && addRegionRes.status === 'ok') {\r\n\t\t\t\topenSuccessNotification();\r\n\r\n\t\t\t\tsetRegionList([...regionList, {\r\n\t\t\t\t\tid: addRegionRes['id'] || '',\r\n\t\t\t\t\tkey: addRegionRes['id'] || '',\r\n\t\t\t\t\tname: addRegionRes['name'] || '',\r\n\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\t...addRegionRes\r\n\t\t\t\t}])\r\n\t\t\t\tsetAddNewCategoryVisible(false)\r\n\t\t\t\tactions.resetForm();\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\topenErrorNotification();\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\r\n\r\n\t\tactions.setSubmitting(false);\r\n\t};\r\n\r\n\r\n\r\n\tconst onChangeCity = (value) => {\r\n\t\tsetselectedCityValue(value);\r\n\t}\r\n\r\n\tconst onChangeCountry = (value) => {\r\n\t\tsetselectedCountryValue(value);\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tconst setCountries = async () => {\r\n\t\t\tconst CountryListRes = await handleCountryListFetch({});\r\n\r\n\t\t\t// @ts-ignore\r\n\t\t\tif (CountryListRes && CountryListRes.length > 0) {\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\tconst countryOptions = CountryListRes.map((country) => {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tvalue: country.name,\r\n\t\t\t\t\t\tname: country.name\r\n\t\t\t\t\t};\r\n\t\t\t\t});\r\n\t\t\t\tsetcountryOptions(countryOptions);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tsetCountries();\r\n\t}, []);\r\n\r\n\r\n\tuseEffect(() => {\r\n\t\tconst setCities = async () => {\r\n\t\t\tconst cityListRes = await handleCityListFetch({\r\n\t\t\t\turlOptions: {\r\n\t\t\t\t\tplaceHolders: {\r\n\t\t\t\t\t\tcountry: selectedCountryValue,\r\n\t\t\t\t\t},\r\n\t\t\t\t},\r\n\t\t\t});\r\n\r\n\t\t\t// @ts-ignore\r\n\t\t\tif (cityListRes && cityListRes.length > 0) {\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\tconst cityOptions = cityListRes.map((city) => {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tvalue: city.name,\r\n\t\t\t\t\t\tname: city.name\r\n\t\t\t\t\t};\r\n\t\t\t\t});\r\n\t\t\t\tsetcityOptions(cityOptions);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tsetCities();\r\n\t}, [selectedCountryValue]);\r\n\r\n\r\n\r\n\r\n\tconst handleCancel = (e: any) => {\r\n\t\tsetAddNewCategoryVisible(false);\r\n\t};\r\n\r\n\r\n\tconst getisSubmitButtonDisabled = (values, isValid) => {\r\n\t\tif (!isValid ||\r\n\t\t\t!values.name ||\r\n\t\t\t!values.pickUpLocation ||\r\n\t\t\t!values.time) {\r\n\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\r\n\r\n\tconst handleAddDeliveryCharge = () => {\r\n\t\tsetdeliveryChargeList([...deliveryChargeList, {\r\n\t\t\tminimumOrder: '',\r\n\t\t\tcharge: '',\r\n\t\t\tid: `${deliveryChargeList.length}`\r\n\t\t}])\r\n\t};\r\n\r\n\r\n\r\n\r\n\t// console.log('deliveryChargeList', deliveryChargeList)\r\n\treturn (\r\n\t\t<Formik\r\n\t\t\tonSubmit={(values, actions) => handleSubmit(values, actions)}\r\n\t\t\tvalidationSchema={validationSchema}\r\n\t\t\tvalidateOnBlur={false}\r\n\t\t\tenableReinitialize={true}\r\n\t\t\tinitialValues={\r\n\t\t\t\t{ ...initialValues }\r\n\t\t\t}\r\n\t\t>\r\n\t\t\t{({\r\n\t\t\t\thandleChange,\r\n\t\t\t\tvalues,\r\n\t\t\t\thandleSubmit,\r\n\t\t\t\terrors,\r\n\t\t\t\tisValid,\r\n\t\t\t\tisSubmitting,\r\n\t\t\t\ttouched,\r\n\t\t\t\thandleBlur,\r\n\t\t\t\tsetFieldTouched,\r\n\t\t\t\thandleReset,\r\n\t\t\t}) => (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<Modal\r\n\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\ttop: '40px'\r\n\t\t\t\t\t\t\t}}\r\n\r\n\t\t\t\t\t\t\tbodyStyle={{\r\n\t\t\t\t\t\t\t\tmargin: '0',\r\n\t\t\t\t\t\t\t\tpadding: '10px'\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\ttitle=\"Add New Region\"\r\n\t\t\t\t\t\t\tvisible={addNewCategoryVisible}\r\n\t\t\t\t\t\t\tonOk={(e: any) => handleSubmit(e)}\r\n\t\t\t\t\t\t\tonCancel={handleCancel}\r\n\t\t\t\t\t\t\tokText='Create'\r\n\t\t\t\t\t\t\tokButtonProps={{\r\n\t\t\t\t\t\t\t\tloading: isSubmitting,\r\n\t\t\t\t\t\t\t\thtmlType: \"submit\",\r\n\t\t\t\t\t\t\t\tdisabled: getisSubmitButtonDisabled(values, isValid)\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\r\n\r\n\t\t\t\t\t\t\t<div className='dubbleRowInputs'>\r\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\tlabel='Name'\r\n\t\t\t\t\t\t\t\t\t\tvalue={values.name}\r\n\t\t\t\t\t\t\t\t\t\tname='name'\r\n\t\t\t\t\t\t\t\t\t\tisError={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addRegionState.error['error']['name'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\terrorString={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addRegionState.error['error']['name'])}\r\n\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('name');\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\tlabel='Pick up Location'\r\n\t\t\t\t\t\t\t\t\t\tvalue={values.pickUpLocation}\r\n\t\t\t\t\t\t\t\t\t\tname='pickUpLocation'\r\n\t\t\t\t\t\t\t\t\t\tisError={(touched.pickUpLocation && errors.pickUpLocation) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addRegionState.error['error']['pickUpLocation'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\terrorString={(touched.pickUpLocation && errors.pickUpLocation) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addRegionState.error['error']['pickUpLocation'])}\r\n\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('pickUpLocation');\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\tmarginRight: '10px'\r\n\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\tlabel='Time'\r\n\t\t\t\t\t\t\t\t\tvalue={values.time}\r\n\t\t\t\t\t\t\t\t\tname='time'\r\n\t\t\t\t\t\t\t\t\tisError={(touched.time && errors.time) ||\r\n\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addRegionState.error['error']['time'])}\r\n\r\n\t\t\t\t\t\t\t\t\terrorString={(touched.time && errors.time) ||\r\n\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addRegionState.error['error']['time'])}\r\n\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\tsetFieldTouched('time');\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t<div className='dubbleRowInputs'>\r\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\t\t\t\tCountry\r\n            </h3>\r\n\t\t\t\t\t\t\t\t\t<Select\r\n\t\t\t\t\t\t\t\t\t\tnotFoundContent={<Empty description='No Country Found' image={Empty.PRESENTED_IMAGE_SIMPLE} />}\r\n\t\t\t\t\t\t\t\t\t\tshowSearch\r\n\t\t\t\t\t\t\t\t\t\tstyle={{ width: '100%' }}\r\n\t\t\t\t\t\t\t\t\t\tplaceholder='Select a Country'\r\n\t\t\t\t\t\t\t\t\t\toptionFilterProp='children'\r\n\t\t\t\t\t\t\t\t\t\tonChange={onChangeCountry}\r\n\t\t\t\t\t\t\t\t\t\tfilterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t{countryListState.done &&\r\n\t\t\t\t\t\t\t\t\t\t\tcountryListState.data.length > 0 &&\r\n\t\t\t\t\t\t\t\t\t\t\tcountryOptions.map((option) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\treturn <Option value={option.value}>{option.name}</Option>;\r\n\t\t\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t\t</Select>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\t\t\t\tCity\r\n            </h3>\r\n\t\t\t\t\t\t\t\t\t<Select\r\n\t\t\t\t\t\t\t\t\t\tnotFoundContent={<Empty description='First Select a Country' image={Empty.PRESENTED_IMAGE_SIMPLE} />}\r\n\t\t\t\t\t\t\t\t\t\tmode=\"multiple\"\r\n\t\t\t\t\t\t\t\t\t\tshowSearch\r\n\t\t\t\t\t\t\t\t\t\tstyle={{ width: '100%' }}\r\n\t\t\t\t\t\t\t\t\t\tplaceholder='Select a city'\r\n\t\t\t\t\t\t\t\t\t\toptionFilterProp='children'\r\n\t\t\t\t\t\t\t\t\t\tonChange={onChangeCity}\r\n\t\t\t\t\t\t\t\t\t\tfilterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t{cityListState.done &&\r\n\t\t\t\t\t\t\t\t\t\t\tcityListState.data.length > 0 &&\r\n\t\t\t\t\t\t\t\t\t\t\tcityOptions.map((option) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\treturn <Option value={option.value}>{option.name}</Option>;\r\n\t\t\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t\t</Select>\r\n\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\tmarginTop: '12px'\r\n\t\t\t\t\t\t\t}}></div>\r\n\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\t\tDelivery Charges\r\n            </h3>\r\n\r\n\t\t\t\t\t\t\t{deliveryChargeList.map(deliveryChargeItem => {\r\n\t\t\t\t\t\t\t\treturn <DeliveryCharge\r\n\t\t\t\t\t\t\t\t\tdeliveryChargeItem={deliveryChargeItem}\r\n\t\t\t\t\t\t\t\t\tdeliveryChargeList={deliveryChargeList} setdeliveryChargeList={setdeliveryChargeList} />\r\n\t\t\t\t\t\t\t})}\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\tmarginTop: '5px',\r\n\t\t\t\t\t\t\t}}></div>\r\n\t\t\t\t\t\t\t<Button size='middle'\r\n\t\t\t\t\t\t\t\tonClick={handleAddDeliveryCharge}\r\n\t\t\t\t\t\t\t\ttype=\"dashed\" icon={<PlusOutlined />}>Add Charge</Button>\r\n\r\n\t\t\t\t\t\t</Modal>\r\n\r\n\r\n\r\n\r\n\t\t\t\t\t</>\r\n\t\t\t\t)}\r\n\t\t</Formik>\r\n\r\n\r\n\r\n\r\n\t);\r\n};\r\n\r\nexport default AddNewRegion;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Modal, Select, notification } from 'antd';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { CheckCircleOutlined } from '@ant-design/icons';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport { useHandleFetch } from '../../hooks';\r\n\r\n\r\nconst { Option } = Select;\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n\tname: Yup.string()\r\n\t\t.label('Name')\r\n\t\t.required()\r\n\t\t.min(2, 'Name must have at least 2 characters '),\r\n\tpickUpLocation: Yup.string()\r\n\t\t.label('Pick up Location')\r\n\t\t.required()\r\n\t\t.min(2, 'Pick up Location must have at least 2 characters '),\r\n\ttime: Yup.string()\r\n\t\t.label('Time')\r\n\t\t.required()\r\n\t\t.min(2, 'Time must have at least 2 characters '),\r\n\r\n});\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t\tmessage: message || 'Tag Created',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t\tmessage: message || 'Something Went Wrong',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n};\r\n\r\n\r\ninterface Props {\r\n\tcustomer: any;\r\n\tsetvisible: any;\r\n\tvisible: any;\r\n\tregionList?: any;\r\n\tsetRegionList?: any;\r\n}\r\n\r\nconst QuickEdit = ({ customer, setvisible, visible, setRegionList, regionList }: Props) => {\r\n\tconst [updateRegionState, handleUpdateRegionFetch] = useHandleFetch({}, 'updateRegion');\r\n\r\n\r\n\tconst [selectedCountryValue, setselectedCountryValue] = useState('');\r\n\tconst [selectedCityValue, setselectedCityValue] = useState('');\r\n\r\n\tconst [countryOptions, setcountryOptions] = useState([]);\r\n\tconst [cityOptions, setcityOptions] = useState([]);\r\n\r\n\tconst [countryListState, handleCountryListFetch] = useHandleFetch(\r\n\t\t[],\r\n\t\t'countryList'\r\n\t);\r\n\r\n\tconst [cityListState, handleCityListFetch] = useHandleFetch([], 'cityList');\r\n\r\n\tconst [countryList, setCountryList] = useState([]);\r\n\tconst [cityList, setCityList] = useState([]);\r\n\r\n\r\n\r\n\tconst handleSubmit = async (values: any, actions: any) => {\r\n\t\t// console.log('selectedCityValue',selectedCityValue)\r\n\r\n\t\tconst addRegionRes = await handleUpdateRegionFetch({\r\n\r\n\t\t\tbody: {\r\n\t\t\t\tname: values.name,\r\n\t\t\t\tpickUpLocation: values.pickUpLocation,\r\n\t\t\t\ttime: values.time,\r\n\t\t\t\tcountry: selectedCountryValue,\r\n\t\t\t\tcity: selectedCityValue,\r\n\t\t\t\tcharge: {}\r\n\t\t\t},\r\n\t\t});\r\n\r\n\t\t// @ts-ignore\r\n\t\tif (addRegionRes && addRegionRes.status === 'ok') {\r\n\t\t\topenSuccessNotification();\r\n\r\n\t\t\tconst positionInTag = () => {\r\n\t\t\t\treturn regionList.map(item => item.id).indexOf(customer.id);\r\n\t\t\t}\r\n\r\n\t\t\tconst index = positionInTag();\r\n\r\n\t\t\t// @ts-ignore\r\n\t\t\tconst updatedItem = Object.assign({}, regionList[index], { ...addRegionRes });\r\n\t\t\tconst updateRegionList = [...regionList.slice(0, index), updatedItem, ...regionList.slice(index + 1)];\r\n\t\t\tsetRegionList(updateRegionList);\r\n\r\n\t\t}\r\n\t\telse {\r\n\t\t\topenErrorNotification();\r\n\t\t}\r\n\r\n\t\tactions.setSubmitting(false);\r\n\t\tsetvisible(false)\r\n\r\n\t};\r\n\r\n\r\n\r\n\r\n\tconst onChangeCity = (value) => {\r\n\t\tsetselectedCityValue(value);\r\n\t}\r\n\r\n\tconst onChangeCountry = (value) => {\r\n\t\tsetselectedCountryValue(value);\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tconst setCountries = async () => {\r\n\t\t\tconst CountryListRes = await handleCountryListFetch({});\r\n\r\n\t\t\t// @ts-ignore\r\n\t\t\tif (CountryListRes && CountryListRes.length > 0) {\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\tconst countryOptions = CountryListRes.map((country) => {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tvalue: country.name,\r\n\t\t\t\t\t\tname: country.name\r\n\t\t\t\t\t};\r\n\t\t\t\t});\r\n\t\t\t\tsetcountryOptions(countryOptions);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tsetCountries();\r\n\t}, []);\r\n\r\n\r\n\tuseEffect(() => {\r\n\t\tconst setCities = async () => {\r\n\t\t\tconst cityListRes = await handleCityListFetch({\r\n\t\t\t\turlOptions: {\r\n\t\t\t\t\tplaceHolders: {\r\n\t\t\t\t\t\tcountry: selectedCountryValue,\r\n\t\t\t\t\t},\r\n\t\t\t\t},\r\n\t\t\t});\r\n\r\n\t\t\t// @ts-ignore\r\n\t\t\tif (cityListRes && cityListRes.length > 0) {\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\tconst cityOptions = cityListRes.map((city) => {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tvalue: city.name,\r\n\t\t\t\t\t\tname: city.name\r\n\t\t\t\t\t};\r\n\t\t\t\t});\r\n\t\t\t\tsetcityOptions(cityOptions);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tsetCities();\r\n\t}, [selectedCountryValue]);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\tconst handleCancel = (e: any) => {\r\n\t\tsetvisible(false);\r\n\t};\r\n\r\n\r\n\r\n\tconst getisSubmitButtonDisabled = (values, isValid) => {\r\n\t\tif (!isValid ||\r\n\t\t\t!values.name ||\r\n\t\t\t!values.pickUpLocation ||\r\n\t\t\t!values.time) {\r\n\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\treturn (\r\n\t\t<Formik\r\n\t\t\tonSubmit={(values, actions) => handleSubmit(values, actions)}\r\n\t\t\tvalidationSchema={validationSchema}\r\n\t\t\tvalidateOnBlur={false}\r\n\t\t\tenableReinitialize={true}\r\n\t\t\tinitialValues={\r\n\t\t\t\t{ ...customer }\r\n\t\t\t}\r\n\t\t>\r\n\t\t\t{({\r\n\t\t\t\thandleChange,\r\n\t\t\t\tvalues,\r\n\t\t\t\thandleSubmit,\r\n\t\t\t\terrors,\r\n\t\t\t\tisValid,\r\n\t\t\t\tisSubmitting,\r\n\t\t\t\ttouched,\r\n\t\t\t\thandleBlur,\r\n\t\t\t\tsetFieldTouched,\r\n\t\t\t\thandleReset,\r\n\t\t\t}) => (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<Modal\r\n\t\t\t\t\t\t\ttitle=\"Quick Edit\"\r\n\t\t\t\t\t\t\tvisible={visible}\r\n\t\t\t\t\t\t\tonOk={(e: any) => handleSubmit(e)}\r\n\t\t\t\t\t\t\tonCancel={handleCancel}\r\n\t\t\t\t\t\t\tokText='Update'\r\n\t\t\t\t\t\t\tokButtonProps={{\r\n\t\t\t\t\t\t\t\tloading: isSubmitting,\r\n\t\t\t\t\t\t\t\thtmlType: \"submit\",\r\n\t\t\t\t\t\t\t\tdisabled: getisSubmitButtonDisabled(values, isValid)\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\tbodyStyle={{\r\n\t\t\t\t\t\t\t\tmargin: '0',\r\n\t\t\t\t\t\t\t\tpadding: '10px'\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\r\n\r\n\t\t\t\t\t\t\t<div className='dubbleRowInputs'>\r\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\tlabel='Name'\r\n\t\t\t\t\t\t\t\t\t\tvalue={values.name}\r\n\t\t\t\t\t\t\t\t\t\tname='name'\r\n\t\t\t\t\t\t\t\t\t\tisError={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateRegionState.error['error']['name'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\terrorString={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateRegionState.error['error']['name'])}\r\n\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('name');\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\tlabel='Pick up Location'\r\n\t\t\t\t\t\t\t\t\t\tvalue={values.pickUpLocation}\r\n\t\t\t\t\t\t\t\t\t\tname='pickUpLocation'\r\n\t\t\t\t\t\t\t\t\t\tisError={(touched.pickUpLocation && errors.pickUpLocation) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateRegionState.error['error']['pickUpLocation'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\terrorString={(touched.pickUpLocation && errors.pickUpLocation) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateRegionState.error['error']['pickUpLocation'])}\r\n\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('pickUpLocation');\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\tmarginRight: '10px'\r\n\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\tlabel='Time'\r\n\t\t\t\t\t\t\t\t\tvalue={values.time}\r\n\t\t\t\t\t\t\t\t\tname='time'\r\n\t\t\t\t\t\t\t\t\tisError={(touched.time && errors.time) ||\r\n\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateRegionState.error['error']['time'])}\r\n\r\n\t\t\t\t\t\t\t\t\terrorString={(touched.time && errors.time) ||\r\n\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateRegionState.error['error']['time'])}\r\n\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\tsetFieldTouched('time');\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t<div className='dubbleRowInputs'>\r\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\t\t\t\tCountry\r\n            </h3>\r\n\t\t\t\t\t\t\t\t\t<Select\r\n\t\t\t\t\t\t\t\t\t\tshowSearch\r\n\t\t\t\t\t\t\t\t\t\tstyle={{ width: '100%' }}\r\n\t\t\t\t\t\t\t\t\t\tplaceholder='Select a Country'\r\n\t\t\t\t\t\t\t\t\t\toptionFilterProp='children'\r\n\t\t\t\t\t\t\t\t\t\tdefaultValue={customer && customer.country}\r\n\t\t\t\t\t\t\t\t\t\tonChange={onChangeCountry}\r\n\t\t\t\t\t\t\t\t\t\tfilterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t{countryListState.done &&\r\n\t\t\t\t\t\t\t\t\t\t\tcountryListState.data.length > 0 &&\r\n\t\t\t\t\t\t\t\t\t\t\tcountryOptions.map((option) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\treturn <Option value={option.value}>{option.name}</Option>;\r\n\t\t\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t\t</Select>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\t\t\t\tCity\r\n            </h3>\r\n\t\t\t\t\t\t\t\t\t<Select\r\n\t\t\t\t\t\t\t\t\t\tshowSearch\r\n\t\t\t\t\t\t\t\t\t\tstyle={{ width: '100%' }}\r\n\t\t\t\t\t\t\t\t\t\tplaceholder='Select a city'\r\n\t\t\t\t\t\t\t\t\t\toptionFilterProp='children'\r\n\t\t\t\t\t\t\t\t\t\tdefaultValue={customer && customer.city}\r\n\t\t\t\t\t\t\t\t\t\tonChange={onChangeCity}\r\n\t\t\t\t\t\t\t\t\t\tfilterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t{cityListState.done &&\r\n\t\t\t\t\t\t\t\t\t\t\tcityListState.data.length > 0 &&\r\n\t\t\t\t\t\t\t\t\t\t\tcityOptions.map((option) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\treturn <Option value={option.value}>{option.name}</Option>;\r\n\t\t\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t\t</Select>\r\n\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\tmarginTop: '12px'\r\n\t\t\t\t\t\t\t}}></div>\r\n\r\n\t\t\t\t\t\t</Modal>\r\n\r\n\t\t\t\t\t</>\r\n\t\t\t\t)}\r\n\t\t</Formik>\r\n\t);\r\n};\r\n\r\n\r\nexport default QuickEdit;\r\n","import React, {useState, useEffect} from 'react';\r\nimport {withRouter} from 'react-router-dom';\r\nimport { Table, Badge, Menu, Dropdown, Space, Tag,Button, Input,Tooltip, Modal, notification, Popconfirm } from 'antd';\r\nimport { PlusOutlined, EditOutlined, DeleteOutlined,EditFilled,CheckCircleOutlined } from '@ant-design/icons';\r\n\r\n\r\n/// import hooks\r\nimport { useFetch, useHandleFetch } from \"../../hooks\";\r\n\r\n// import components\r\nimport { DataTableSkeleton } from \"../../components/Placeholders\";\r\nimport AddNewRegion from \"./AddNewRegion\";\r\nimport QuickEdit from \"./QuickEdit\";\r\nimport Empty from \"../../components/Empty\";\r\n\r\nconst { Column, ColumnGroup } = Table;\r\nconst { Search } = Input;\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t  message: message || 'Tag Created',\r\n\t  description: '',\r\n\t  icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n  };\r\n\r\n\r\n  const openErrorNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t  message: message || 'Something Went Wrong',\r\n\t  description: '',\r\n\t  icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n  };\r\n\r\n\r\n\r\n\r\n\r\ninterface myTableProps {\r\n  data: any; \r\n  setRegionList: any; \r\n} \r\n\r\n\r\nconst MyTable = ({data,setRegionList}: myTableProps) => {\r\n    const [visible,setvisible] = useState(false);   \r\n    const [activeCategoryForEdit,setactiveCategoryForEdit] = useState(false); \r\n    const [deleteRegionState, handleDeleteRegioFetch] = useHandleFetch({}, 'deleteRegion');\r\n\r\n\r\n      const handleDeleteRegion = async (id) => {\r\n        const deleteRegionRes = await handleDeleteRegioFetch({\r\n          urlOptions: {\r\n            placeHolders: {\r\n              id,\r\n            }\r\n            }\r\n          });\r\n\r\n            // @ts-ignore\r\n\t\t  if(deleteRegionRes && deleteRegionRes.status === 'ok'){\r\n\t\t\t  openSuccessNotification('Deleted Region'); \r\n\t\t\t  const newRegionList =  data.filter(item => item.id !== id);\r\n\t\t\t  setRegionList(newRegionList); \r\n\t\t  }\r\n\r\n      }\r\n      \r\n\r\n    return (\r\n        <>\r\n        <Table \r\n        // expandable={{\r\n        //     expandedRowRender: record => <p style={{ margin: 0 }}>{record.name}</p>,\r\n        //     rowExpandable: record => record.name !== 'Not Expandable',\r\n        //   }}\r\n        // bordered={true}\r\n        size='small'\r\n        // pagination={false}\r\n        dataSource={data}\r\n        >\r\n         \r\n          <Column\r\n           title=\"Name\" \r\n           dataIndex=\"name\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n         \r\n            />\r\n\r\n\r\n<Column\r\n           title=\"Pick up Location\" \r\n           dataIndex=\"pickUpLocation\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n         \r\n            />\r\n\r\n\r\n\r\n\r\n<Column\r\n           title=\"Country\" \r\n           dataIndex=\"countryName\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n         \r\n            />\r\n\r\n\r\n<Column\r\n           title=\"City\" \r\n           dataIndex=\"city\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n         \r\n            />\r\n\r\n<Column\r\n           title=\"Time\" \r\n           dataIndex=\"time\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n         \r\n            />\r\n\r\n\r\n<Column\r\n           title=\"Charge\" \r\n           dataIndex=\"time\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n         \r\n            />\r\n\r\n\r\n          {/* <Column \r\n          \r\n          className='classnameofthecolumn'\r\n\r\n          title=\"Product\" dataIndex=\"product\" key=\"product\" /> */}\r\n\r\n          {/* <Column \r\n          \r\n          className='classnameofthecolumn'\r\n\r\n          title=\"Sub Category\" dataIndex=\"subCategory\" key=\"subCategory\" /> */}\r\n        \r\n        {/* <Column\r\n          title=\"Tags\"\r\n          dataIndex=\"tags\"\r\n          key=\"tags\"\r\n          render={tags => (\r\n            <>\r\n              {tags.map((tag : any) => (\r\n                <Tag color=\"blue\" key={tag}>\r\n                  {tag}\r\n                </Tag>\r\n              ))}\r\n            </>\r\n          )}\r\n        /> */}\r\n        <Column\r\n        \r\n        className='classnameofthecolumn'\r\n          title=\"\"\r\n          key=\"action\"\r\n          align='right'\r\n          render={(text, record : any) => (\r\n            <Space size=\"middle\">\r\n            \r\n            <a href='##'>\r\n               <Tooltip placement=\"top\" title='Quick Edit Region'>\r\n              <span className='iconSize' onClick={() => {\r\n                setvisible(true)\r\n                setactiveCategoryForEdit(record); \r\n              }}> \r\n              <EditOutlined />\r\n            \r\n              </span>\r\n               </Tooltip>\r\n</a>\r\n\r\n\r\n   \r\n               <Popconfirm \r\n               \r\n               onConfirm={() => handleDeleteRegion(record.id)}\r\n               title=\"Are you sure？\" okText=\"Yes\" cancelText=\"No\">\r\n           \r\n           <span \r\n             className='iconSize iconSize-danger'\r\n             > \r\n             <DeleteOutlined/>\r\n            </span>\r\n       \r\n           </Popconfirm>\r\n\r\n\r\n             \r\n             \r\n            </Space>\r\n          )}\r\n        />\r\n      </Table>\r\n\r\n    \r\n\r\n    {activeCategoryForEdit &&   <QuickEdit \r\n    setvisible={setvisible}\r\n    visible={visible}\r\n    customer={activeCategoryForEdit}\r\n    regionList={data}\r\n    setRegionList={setRegionList}\r\n\r\n    />\r\n\r\n    }\r\n    \r\n    \r\n    </>\r\n    )\r\n}\r\n\r\n\r\ninterface Props {\r\n    history: any; \r\n}\r\n\r\nconst CustomerList = ({history}: Props) => {\r\n\r\n    const [regionList,setRegionList] = useState([]); \r\n\r\n    const [regionState, handleRegionListFetch] = useHandleFetch({}, 'regionList');\r\n  \r\n  \r\n    useEffect(()=>{\r\n     const setRegions = async () => {\r\n       const regions = await handleRegionListFetch({}); \r\n       // @ts-ignore\r\n       setRegionList(regions); \r\n     }\r\n     setRegions(); \r\n    },[])\r\n\r\n\r\n\r\n\r\n  \r\n  const [addNewCategoryVisible,setAddNewCategoryVisible] = useState(false);   \r\n\r\n  console.log('regionState',regionState)\r\n\r\n\r\n  const handleSearch = (value) => {\r\n    if(regionState.data.length > 0 ){\r\n      const newTagList = regionState.data.filter(item => item.name.toLowerCase().includes(value.toLowerCase())); \r\n      setRegionList(newTagList); \r\n    }\r\n     \r\n  }\r\n\r\n\r\n\r\n\treturn (\r\n\t\t<>\r\n    {/* <h2 className='containerPageTitle'>\r\n      Categories\r\n    </h2> */}\r\n    <div className='categoryListContainer'>\r\n            <div className='categoryListContainer__header'>\r\n           \r\n\r\n          <div className='categoryListContainer__header-searchBar'>\r\n          <h2 className='categoryListContainer__header-title'>\r\n            Regions \r\n            </h2>\r\n\r\n\r\n          <Search\r\n            enterButton={false}\r\n            className='searchbarClassName'\r\n          placeholder=\"search regions..\"\r\n          onSearch={value => handleSearch(value)}\r\n          // style={{ width: 300 }}\r\n        />\r\n          </div>\r\n            <Button\r\n          // type=\"primary\"\r\n          className='btnPrimaryClassNameoutline'\r\n          icon={<PlusOutlined />}\r\n          onClick={() => setAddNewCategoryVisible(true)}\r\n        >\r\n        Add New\r\n            \r\n            </Button>\r\n            </div>\r\n\r\n            <div className='categoryListContainer__afterHeader'>\r\n            {/* <Search\r\n      placeholder=\"search categories..\"\r\n      size=\"large\"\r\n      onSearch={value => console.log(value)}\r\n      style={{ width: 300 }}\r\n    /> */}\r\n            </div>\r\n\r\n     \r\n\t\t\t\r\n\t\t\t<div className='categoryListContainer__categoryList'>\r\n        {regionState.done && regionList.length > 0 && <MyTable \r\n        setRegionList={setRegionList}\r\n        data={regionList} />}\r\n        {regionState.isLoading && <DataTableSkeleton />}\r\n\r\n        {regionState.done && !(regionList.length > 0) && (\r\n\t\t<Empty title='No Region found'  />\r\n\t\t)}\r\n        \r\n\t\t\t</div>\r\n\t\t</div>\r\n\r\n\r\n{regionState.done && \r\n    <AddNewRegion \r\n          addNewCategoryVisible={addNewCategoryVisible} \r\n          setAddNewCategoryVisible={setAddNewCategoryVisible}\r\n          regionList={regionState.data}\r\n          setRegionList={setRegionList}\r\n           />}\r\n\r\n      \r\n\r\n        \r\n    </>\r\n\t);\r\n};\r\n\r\nexport default withRouter(CustomerList);\r\n","import React, { useEffect, useState } from 'react'\r\n\r\n\r\n// import components \r\nimport TextArea from \"../../components/Field/TextArea\";\r\n\r\n// import lib \r\nimport { Select, Button, notification } from 'antd';\r\n\r\nimport {\r\n    SendOutlined,\r\n    CheckCircleOutlined,\r\n    InfoCircleFilled\r\n} from '@ant-design/icons';\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'SMS sent successfully',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n    notification.error({\r\n        message: message || 'Something Went Wrong',\r\n        description: '',\r\n        icon: <InfoCircleFilled style={{ color: 'rgb(241, 67, 67)' }} />,\r\n    });\r\n};\r\n\r\n\r\n\r\n\r\n\r\ninterface Props {\r\n\r\n}\r\n\r\nconst SendCustomSMS = (props: Props) => {\r\n    const [text, setText] = useState('');\r\n    const [recipient, setrecipient] = useState([]);\r\n\r\n\r\n    function handleChange(value) {\r\n        const recipient = `${value}`.split(',');\r\n        setrecipient(recipient)\r\n    }\r\n\r\n\r\n    const handleMsgSend = () => {\r\n\r\n    }\r\n\r\n\r\n    const getMsgSendIsDisabled = () => {\r\n        return !text || !recipient[0]\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div style={{\r\n                width: '450px'\r\n            }}>\r\n                <h3 className='inputFieldLabel'>\r\n                    Recipient\r\n                </h3>\r\n\r\n                <Select\r\n                    style={{\r\n                        height: '30px',\r\n                        borderRadius: '3px',\r\n                        borderColor: '#eee !important',\r\n                        width: '100%'\r\n                    }}\r\n                    mode=\"tags\" onChange={handleChange} tokenSeparators={[',']}>\r\n                </Select>\r\n\r\n                <div style={{\r\n                    marginTop: \"15px\"\r\n                }}></div>\r\n                <TextArea\r\n                    label='Text'\r\n                    value={text}\r\n                    name='text'\r\n                    onChange={(e: any) => {\r\n                        setText(e.target.value);\r\n                    }}\r\n                />\r\n\r\n                <Button\r\n\r\n                    style={{\r\n                        marginTop: '10px'\r\n                    }}\r\n                    onClick={handleMsgSend}\r\n                    disabled={getMsgSendIsDisabled()}\r\n\r\n                    className='btnAddToPrice'\r\n                >\r\n                    Send <span style={{\r\n                        marginLeft: '10px'\r\n                    }}> <SendOutlined /></span>\r\n                </Button>\r\n            </div>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SendCustomSMS\r\n","import React from 'react';\r\n\r\n// import components \r\nimport TextArea from \"../../components/Field/TextArea\";\r\nimport Input from \"../../components/Field/Input\";\r\n\r\n\r\n// import lib \r\nimport { Button, notification } from 'antd';\r\n\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\nimport {\r\n    CheckCircleOutlined,\r\n    InfoCircleFilled\r\n} from '@ant-design/icons';\r\n\r\n\r\n// import hooks\r\nimport { useHandleFetch } from \"../../hooks\";\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'SMS sent successfully',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n    notification.error({\r\n        message: message || 'Something Went Wrong',\r\n        description: '',\r\n        icon: <InfoCircleFilled style={{ color: 'rgb(241, 67, 67)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst initialValues = {\r\n    name: '',\r\n    description: '',\r\n}\r\n\r\n\r\ninterface Props {\r\n\r\n}\r\n\r\nconst SMSConfiguaration = (props: Props) => {\r\n    const [configureSMSStata, handleconfigureSMSFetch] = useHandleFetch({}, 'configureSMS');\r\n\r\n\r\n    const handleSubmit = async (values: any, actions: any) => {\r\n        const addTagRes = await handleconfigureSMSFetch({\r\n            urlOptions: {\r\n                placeHolders: {\r\n                    id: values.id,\r\n                }\r\n            },\r\n            body: {\r\n                name: values.name.trim(),\r\n                description: values.description,\r\n            },\r\n        });\r\n\r\n        // @ts-ignore\r\n        if (addTagRes && addTagRes.status === 'ok') {\r\n            openSuccessNotification();\r\n\r\n\r\n            actions.resetForm();\r\n        }\r\n        else {\r\n            openErrorNotification();\r\n        }\r\n\r\n\r\n        actions.setSubmitting(false);\r\n\r\n    };\r\n\r\n\r\n    const getisSubmitButtonDisabled = (values, isValid) => {\r\n        if (!values.name || !isValid) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    return (\r\n        <Formik\r\n            onSubmit={(values, actions) => handleSubmit(values, actions)}\r\n            // validationSchema={validationSchema}\r\n            validateOnBlur={false}\r\n            enableReinitialize={true}\r\n            initialValues={\r\n                { ...initialValues }\r\n            }\r\n        >\r\n            {({\r\n                handleChange,\r\n                values,\r\n                handleSubmit,\r\n                errors,\r\n                isValid,\r\n                isSubmitting,\r\n                touched,\r\n                handleBlur,\r\n                setFieldTouched,\r\n                handleReset,\r\n            }) => (\r\n                    <>\r\n                        <Input\r\n                            label='Title'\r\n                            value={values.name}\r\n                            name='name'\r\n                            isError={(touched.name && errors.name) ||\r\n                                (!isSubmitting && configureSMSStata.error['error']['name'])}\r\n\r\n                            errorString={(touched.name && errors.name) ||\r\n                                (!isSubmitting && configureSMSStata.error['error']['name'])}\r\n                            onChange={(e: any) => {\r\n                                handleChange(e);\r\n                                setFieldTouched('name');\r\n                            }}\r\n                        />\r\n                        <TextArea\r\n                            label='Description'\r\n                            value={values.description}\r\n                            name='description'\r\n                            isError={(touched.description && errors.description) ||\r\n                                (!isSubmitting && configureSMSStata.error['error']['description'])}\r\n\r\n                            errorString={(touched.description && errors.description) ||\r\n                                (!isSubmitting && configureSMSStata.error['error']['description'])}\r\n                            onChange={(e: any) => {\r\n                                handleChange(e);\r\n                                setFieldTouched('description');\r\n                            }}\r\n                        />\r\n                    </>\r\n                )}\r\n        </Formik>\r\n\r\n    )\r\n}\r\n\r\nexport default SMSConfiguaration\r\n","import React from 'react';\r\n\r\n\r\n// import lib\r\nimport { Upload, message, Switch, Select, Button, notification, Modal, Tabs } from 'antd';\r\n\r\n// import components \r\nimport SendCustomSMS from \"./SendCustomSMS\";\r\nimport SMSConfiguaration from \"./SMSConfiguaration\";\r\n\r\n\r\nconst { TabPane } = Tabs;\r\n\r\n\r\n\r\ninterface Props {\r\n\r\n}\r\n\r\nconst Sms = (props: Props) => {\r\n    return (\r\n        <>\r\n            <div className='siteInfoContainer'>\r\n\r\n                <Tabs defaultActiveKey=\"1\" >\r\n                    <TabPane tab=\"Send custom SMS\" key=\"1\">\r\n                        <SendCustomSMS />\r\n                    </TabPane>\r\n\r\n                    <TabPane tab=\"SMS configuaration\" key=\"2\">\r\n                        <SMSConfiguaration />\r\n                    </TabPane>\r\n\r\n                </Tabs>\r\n\r\n            </div>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Sms\r\n","import Sms from \"./Sms\";\r\nexport default Sms; ","import React, { useState } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n\r\nimport { useHandleFetch } from '../../hooks';\r\n// import third party ui lib\r\nimport { Upload, message, Switch, Select, Button, notification, Modal, Tooltip,Checkbox  } from 'antd';\r\n\r\nimport {\r\n    FileOutlined,\r\n    InboxOutlined,\r\n    FileAddOutlined,\r\n    DeleteOutlined,\r\n    CheckCircleOutlined,\r\n    CloseOutlined,\r\n    CheckOutlined,\r\n    InfoCircleOutlined,\r\n    PlusOutlined,\r\n    FileImageFilled\r\n} from '@ant-design/icons';\r\n\r\n\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport MediaLibrary from \"../../components/MediaLibrary\";\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    name: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Tag Created',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n    notification.error({\r\n        message: message || 'Something Went Wrong',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst initialValues = {\r\n    \"fromEmail\": \"\",\r\n    \"fromName\": \"\",\r\n    \"host\": \"\",\r\n    \"encryption\":\"\",\r\n    \"port\":'',\r\n    \"smtpUsername\":\"\",\r\n    \"smtpPassword\": \"\"\r\n}\r\n\r\n\r\n\r\ninterface Props {\r\n}\r\n\r\nconst ConfigureSTMP = ({  }: Props) => {\r\n\r\n    const [getEmailConfigurationState, handleGetEmailConfigurationFetch] = useHandleFetch({}, 'getEmailConfiguration');\r\n    const [emailConfigurationState, handleEmailConfigurationFetch] = useHandleFetch({}, 'configureEmailSTMP');\r\n \r\n    const [isAuthenticated,setIsAuthenticated] = useState(true);\r\n\r\n\r\n    const handleSubmit = async (values: any, actions: any) => {\r\n        const addTagRes = await handleEmailConfigurationFetch({\r\n            body: {\r\n                \"fromEmail\": values.fromEmail.trim(),\r\n                \"fromName\": values.fromName.trim(),\r\n                \"host\": values.host.trim(),\r\n                \"encryption\":values.encryption.trim(),\r\n                \"port\":values.port.trim(),\r\n                \"authentication\": isAuthenticated,\r\n                \"smtpUsername\":values.smtpUsername.trim(),\r\n                \"smtpPassword\": values.smtpPassword.trim()\r\n            },\r\n        });\r\n\r\n        // @ts-ignore\r\n        if (addTagRes && addTagRes.status === 'ok') {\r\n            openSuccessNotification('STMP Configuration Updated!');\r\n        }\r\n        else {\r\n            openErrorNotification(\"Something went wrong, Couldn't updated STMP configuration\");\r\n        }\r\n\r\n\r\n        actions.setSubmitting(false);\r\n\r\n    };\r\n\r\n\r\n\r\n    const getisSubmitButtonDisabled = (values, isValid) => {\r\n        if (!values.name || !isValid) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n\r\n\r\n    const handleAuthenticatedChange = (e) => {\r\n        setIsAuthenticated(e.target.checked);\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <Formik\r\n            onSubmit={(values, actions) => handleSubmit(values, actions)}\r\n            validationSchema={validationSchema}\r\n            validateOnBlur={false}\r\n            enableReinitialize={true}\r\n            initialValues={\r\n                { ...initialValues }\r\n            }\r\n        >\r\n            {({\r\n                handleChange,\r\n                values,\r\n                handleSubmit,\r\n                errors,\r\n                isValid,\r\n                isSubmitting,\r\n                touched,\r\n                handleBlur,\r\n                setFieldTouched,\r\n                handleReset,\r\n            }) => (\r\n                    <>\r\n\r\n                                         \t<div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\tdisplay: 'flex',\r\n\t\t\t\t\t\t\t\t\t\t\t\tjustifyContent: 'space-between'\r\n\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\twidth: '49%',\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t  <Input\r\n                                                    label='From Email'\r\n                                                    value={values.fromEmail}\r\n                                                    name='fromEmail'\r\n                                                    isError={(touched.fromEmail && errors.fromEmail) ||\r\n                                                        (!isSubmitting && emailConfigurationState.error['error']['fromEmail'])}\r\n\r\n                                                    errorString={(touched.fromEmail && errors.fromEmail) ||\r\n                                                        (!isSubmitting && emailConfigurationState.error['error']['fromEmail'])}\r\n                                                    onChange={(e: any) => {\r\n                                                        handleChange(e);\r\n                                                        setFieldTouched('fromEmail');\r\n                                                    }}\r\n                                                     />\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\twidth: '49%'\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\r\n                                                    <Input\r\n                                                    label='From Name'\r\n                                                    value={values.fromName}\r\n                                                    name='fromName'\r\n                                                    isError={(touched.fromName && errors.fromName) ||\r\n                                                        (!isSubmitting && emailConfigurationState.error['error']['fromName'])}\r\n\r\n                                                    errorString={(touched.fromName && errors.fromName) ||\r\n                                                        (!isSubmitting && emailConfigurationState.error['error']['fromName'])}\r\n                                                    onChange={(e: any) => {\r\n                                                        handleChange(e);\r\n                                                        setFieldTouched('fromName');\r\n                                                    }}\r\n                                                />\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\r\n\r\n                                            <div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\tdisplay: 'flex',\r\n\t\t\t\t\t\t\t\t\t\t\t\tjustifyContent: 'space-between'\r\n\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\twidth: '49%',\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t  <Input\r\n                                                    label='Port'\r\n                                                    value={values.port}\r\n                                                    name='port'\r\n                                                    isError={(touched.port && errors.port) ||\r\n                                                        (!isSubmitting && emailConfigurationState.error['error']['port'])}\r\n\r\n                                                    errorString={(touched.port && errors.port) ||\r\n                                                        (!isSubmitting && emailConfigurationState.error['error']['port'])}\r\n                                                    onChange={(e: any) => {\r\n                                                        handleChange(e);\r\n                                                        setFieldTouched('port');\r\n                                                    }}\r\n                                                    />\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\twidth: '49%'\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\r\n                                                    <Input\r\n                                                    label='Encryption'\r\n                                                    value={values.encryption}\r\n                                                    name='encryption'\r\n                                                    isError={(touched.encryption && errors.encryption) ||\r\n                                                        (!isSubmitting && emailConfigurationState.error['error']['encryption'])}\r\n\r\n                                                    errorString={(touched.encryption && errors.encryption) ||\r\n                                                        (!isSubmitting && emailConfigurationState.error['error']['encryption'])}\r\n                                                    onChange={(e: any) => {\r\n                                                        handleChange(e);\r\n                                                        setFieldTouched('encryption');\r\n                                                    }}\r\n                                                />\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\r\n\r\n\r\n                                            <div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\tdisplay: 'flex',\r\n\t\t\t\t\t\t\t\t\t\t\t\tjustifyContent: 'space-between'\r\n\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\twidth: '49%',\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t  <Input\r\n                                                    label='STMP Username'\r\n                                                    value={values.smtpUsername}\r\n                                                    name='smtpUsername'\r\n                                                    isError={(touched.smtpUsername && errors.smtpUsername) ||\r\n                                                        (!isSubmitting && emailConfigurationState.error['error']['smtpUsername'])}\r\n\r\n                                                    errorString={(touched.smtpUsername && errors.smtpUsername) ||\r\n                                                        (!isSubmitting && emailConfigurationState.error['error']['smtpUsername'])}\r\n                                                    onChange={(e: any) => {\r\n                                                        handleChange(e);\r\n                                                        setFieldTouched('smtpUsername');\r\n                                                    }}\r\n                                                    />\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\twidth: '49%'\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\r\n                                                    <Input\r\n                                                    label='STMP Password'\r\n                                                    value={values.smtpPassword}\r\n                                                    name='smtpPassword'\r\n                                                    isError={(touched.smtpPassword && errors.smtpPassword) ||\r\n                                                        (!isSubmitting && emailConfigurationState.error['error']['smtpPassword'])}\r\n\r\n                                                    errorString={(touched.smtpPassword && errors.smtpPassword) ||\r\n                                                        (!isSubmitting && emailConfigurationState.error['error']['smtpPassword'])}\r\n                                                    onChange={(e: any) => {\r\n                                                        handleChange(e);\r\n                                                        setFieldTouched('smtpPassword');\r\n                                                    }}\r\n                                                />\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\r\n\r\n                                            <div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\twidth: '49%'\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}>\r\n                                                     <Input\r\n                                                    label='Host'\r\n                                                    value={values.host}\r\n                                                    name='host'\r\n                                                    type='number'\r\n                                                    isError={(touched.host && errors.host) ||\r\n                                                        (!isSubmitting && emailConfigurationState.error['error']['host'])}\r\n\r\n                                                    errorString={(touched.host && errors.host) ||\r\n                                                        (!isSubmitting && emailConfigurationState.error['error']['host'])}\r\n                                                    onChange={(e: any) => {\r\n                                                        handleChange(e);\r\n                                                        setFieldTouched('host');\r\n                                                    }}\r\n                                                     />\r\n                                            </div>\r\n\r\n                                        \r\n                                            <Checkbox onChange={handleAuthenticatedChange}>\r\n                                                    <span className='checkBoxFieldLabel'>\r\n                                                        Authentication\r\n                                                    </span>\r\n                                                    \r\n                                                </Checkbox>    \r\n\r\n\r\n\r\n<div style={{\r\n    marginTop:'20px'\r\n}}></div>\r\n                                      <div style={{\r\n                                          display:'block',\r\n                                          marginBottom:'20px',\r\n                                          marginTop:'20px',\r\n                                      }}>\r\n                                                    \r\n                                      <Button\r\n\r\n                                        onClick={(e: any) => handleSubmit(e)}\r\n                                        loading={emailConfigurationState.isLoading}\r\n                                        className='btnPrimaryClassNameoutline'\r\n                                        >\r\n                                        Update Email Configuration\r\n                                        </Button>      \r\n                                          </div>      \r\n                    </>\r\n                )}\r\n        </Formik>\r\n    );\r\n};\r\n\r\nexport default ConfigureSTMP;\r\n","import React, { useState,useEffect } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n\r\nimport { useHandleFetch } from '../../hooks';\r\n// import third party ui lib\r\nimport { Upload, message, Switch, Select, Button, notification, Modal,Tabs } from 'antd';\r\n\r\nimport {\r\n    FileOutlined,\r\n    InboxOutlined,\r\n    FileAddOutlined,\r\n    DeleteOutlined,\r\n    CheckCircleOutlined,\r\n    CloseOutlined,\r\n    CheckOutlined,\r\n    InfoCircleOutlined,\r\n    PlusOutlined,\r\n    FileImageFilled\r\n} from '@ant-design/icons';\r\n\r\n\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport MediaLibrary from \"../../components/MediaLibrary\";\r\nimport CKEditor from '@ckeditor/ckeditor5-react';\r\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\r\n\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    name: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\n\r\nconst { TabPane } = Tabs;\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'New Customer Template Updated',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n    notification.error({\r\n        message: message || 'Something Went Wrong',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst initialValues = {\r\n    name: '',\r\n    description: '',\r\n}\r\n\r\n\r\n\r\ninterface Props {\r\n   visible: boolean;\r\n   setVisible: any;\r\n\r\n}\r\n\r\nconst AddNewBrand = ({ visible, setVisible }: Props) => {\r\n\r\n    const [autoEmailTemplate, handleAutoEmailTemplateFetch] = useHandleFetch({}, 'configureAutoEmailTemplate');\r\n    const [getConfigureAutoEmailTemplate, handleGetConfigureAutoEmailTemplateFetch] = useHandleFetch({}, 'getConfigureAutoEmailTemplate');\r\n    \r\n    \r\n    const [customer, setcustomer] = useState({\r\n        subject:'',\r\n        body:'',\r\n    }); \r\n\r\n    const [admin, setadmin] = useState({\r\n        subject:'',\r\n        body:'',\r\n    }); \r\n\r\n    const handleSubmit = async () => {\r\n        const getConfigurationAutoEmailTemplateRes = await handleAutoEmailTemplateFetch({\r\n            body: {\r\n                \"event\": \"newCustomer\",\r\n                \"customer\":{\r\n                    ...customer\r\n                },\r\n                \"admin\":{\r\n                    ...admin\r\n                }\r\n            \r\n            },\r\n        });\r\n\r\n        // @ts-ignore\r\n        if (getConfigurationAutoEmailTemplateRes && getConfigurationAutoEmailTemplateRes.status === 'ok') {\r\n            openSuccessNotification();\r\n            setVisible(false);\r\n        }\r\n        else {\r\n            openErrorNotification();\r\n        }\r\n\r\n    };\r\n\r\n    useEffect(()=>{\r\n        const getCustomerAutoEmail = async () => {\r\n            const res = await handleAutoEmailTemplateFetch({\r\n                urlOptions: {\r\n                    placeHolders: {\r\n                        eventName: 'newCustomer'\r\n                    }\r\n                }\r\n            }); \r\n\r\n            // set auto email template to customer and admin\r\n        }; \r\n        getCustomerAutoEmail(); \r\n\r\n    },[]);\r\n\r\n\r\n    const handleCancel = (e: any) => {\r\n        setVisible(false);\r\n    };\r\n\r\n\r\n\r\n    return (\r\n        <Modal\r\n        width={'80vw'}\r\n        style={{\r\n            top: '40px'\r\n        }}\r\n        title=\"New Customer Event Template\"\r\n        visible={visible}\r\n        onOk={(e: any) => handleSubmit()}\r\n        onCancel={handleCancel}\r\n        okText='Submit'\r\n        okButtonProps={{\r\n            loading: autoEmailTemplate.isLoading,\r\n            htmlType: \"submit\",\r\n            // disabled: getisSubmitButtonDisabled(values, isValid)\r\n        }}\r\n        bodyStyle={{\r\n            margin: '10px',\r\n            padding: '10px'\r\n        }}\r\n    >\r\n     <Tabs defaultActiveKey=\"1\" >\r\n     <TabPane tab=\"Customer\" key=\"1\">\r\n        \r\n        <div style={{\r\n            display:'flex',\r\n\r\n        }}>\r\n            <div style={{\r\n                width:'70%'\r\n            }}>\r\n            <Input\r\n            label='Subject'\r\n            value={customer.subject}\r\n            name='subject'\r\n            onChange={(e:any) => {\r\n                setcustomer({\r\n                    ...customer,\r\n                    subject: e.target.value\r\n                })\r\n            }}\r\n        />\r\n\r\n            <h3 className='inputFieldLabel'>\r\n                Body\r\n            </h3>\r\n\r\n\r\n        <CKEditor\r\n        editor={ClassicEditor}\r\n        data={customer.body}\r\n        onInit={editor => {\r\n            // You can store the \"editor\" and use when it is needed.\r\n            console.log('Editor is ready to use!', editor);\r\n        }}\r\n        onChange={(event, editor) => {\r\n            const data = editor.getData();\r\n            setcustomer({\r\n                ...customer,\r\n                body: data\r\n            })\r\n        }}\r\n        onBlur={(event, editor) => {\r\n            console.log('Blur.', editor);\r\n        }}\r\n        onFocus={(event, editor) => {\r\n            console.log('Focus.', editor);\r\n        }}\r\n        />\r\n            </div>\r\n\r\n            <div style={{\r\n                width:'30%',\r\n                overflowY:'auto',\r\n                background:\"#f7f7f7\",\r\n                marginLeft:'20px',\r\n                padding:'10px',\r\n                borderRadius:'8px'\r\n            }}>\r\n                <h4>Information Tags</h4>\r\n                <p style={{\r\n                    fontSize:'12px'\r\n                }}>\r\n                    Place the following tags to replace them with actual data while sending email\r\n                </p>\r\n                <ul style={{\r\n                    padding:'15px'\r\n                }}>\r\n                    <li style={{\r\n                        fontSize:'12px',\r\n                        marginBottom:'10px',\r\n                        lineHeight:1.7,\r\n                        fontWeight:500\r\n                    }}><b style={{\r\n                        borderRadius:\"15px\",\r\n                        backgroundColor:'#ddd',\r\n                        padding:\"1px 10px\"\r\n                    }}>&lt;?=order.added?&gt; :</b> Order time</li>\r\n                    <li\r\n                    style={{\r\n                        fontSize:'12px',\r\n                        lineHeight:2,\r\n                        fontWeight:500\r\n                    }}\r\n                    ><b\r\n                    style={{\r\n                        borderRadius:\"15px\",\r\n                        backgroundColor:'#ddd',\r\n                        padding:\"1px 10px\"\r\n                    }}\r\n                    >&lt;?shippingAddress.firstName?&gt; :</b> Shipping first Name</li>\r\n                </ul>\r\n\r\n        </div>\r\n        </div>\r\n\r\n     </TabPane>\r\n\r\n    <TabPane tab=\"Admin\" key=\"2\">\r\n    <Input\r\n            label='Subject'\r\n            value={admin.subject}\r\n            name='subject'\r\n            onChange={(e:any) => {\r\n                setadmin({\r\n                    ...admin,\r\n                    subject: e.target.value\r\n                })\r\n            }}\r\n        />\r\n\r\n<h3 className='inputFieldLabel'>\r\n\tBody\r\n</h3>\r\n\r\n\r\n<CKEditor\r\neditor={ClassicEditor}\r\ndata={admin.body}\r\nonInit={editor => {\r\n    // You can store the \"editor\" and use when it is needed.\r\n    console.log('Editor is ready to use!', editor);\r\n}}\r\nonChange={(event, editor) => {\r\n    const data = editor.getData();\r\n    setadmin({\r\n        ...admin,\r\n        body: data\r\n    })\r\n}}\r\nonBlur={(event, editor) => {\r\n    console.log('Blur.', editor);\r\n}}\r\nonFocus={(event, editor) => {\r\n    console.log('Focus.', editor);\r\n}}\r\n/>\r\n\r\n     \r\n    </TabPane>\r\n\r\n</Tabs>\r\n\r\n    </Modal>\r\n    );\r\n};\r\n\r\nexport default AddNewBrand;\r\n","import React, { useState,useEffect } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n\r\nimport { useHandleFetch } from '../../hooks';\r\n// import third party ui lib\r\nimport { Upload, message, Switch, Select, Button, notification, Modal,Tabs } from 'antd';\r\n\r\nimport {\r\n    FileOutlined,\r\n    InboxOutlined,\r\n    FileAddOutlined,\r\n    DeleteOutlined,\r\n    CheckCircleOutlined,\r\n    CloseOutlined,\r\n    CheckOutlined,\r\n    InfoCircleOutlined,\r\n    PlusOutlined,\r\n    FileImageFilled\r\n} from '@ant-design/icons';\r\n\r\n\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport MediaLibrary from \"../../components/MediaLibrary\";\r\nimport CKEditor from '@ckeditor/ckeditor5-react';\r\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\r\n\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    name: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\n\r\nconst { TabPane } = Tabs;\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'New Customer Template Updated',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n    notification.error({\r\n        message: message || 'Something Went Wrong',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst initialValues = {\r\n    name: '',\r\n    description: '',\r\n}\r\n\r\n\r\n\r\ninterface Props {\r\n   visible: boolean;\r\n   setVisible: any;\r\n\r\n}\r\n\r\nconst AddNewBrand = ({ visible, setVisible }: Props) => {\r\n\r\n    const [autoEmailTemplate, handleAutoEmailTemplateFetch] = useHandleFetch({}, 'configureAutoEmailTemplate');\r\n    const [getConfigureAutoEmailTemplate, handleGetConfigureAutoEmailTemplateFetch] = useHandleFetch({}, 'getConfigureAutoEmailTemplate');\r\n    \r\n    \r\n    const [customer, setcustomer] = useState({\r\n        subject:'',\r\n        body:'',\r\n    }); \r\n\r\n    const [admin, setadmin] = useState({\r\n        subject:'',\r\n        body:'',\r\n    }); \r\n\r\n    const handleSubmit = async () => {\r\n        const getConfigurationAutoEmailTemplateRes = await handleAutoEmailTemplateFetch({\r\n            body: {\r\n                \"event\": \"orderStatus\",\r\n                \"customer\":{\r\n                    ...customer\r\n                },\r\n                \"admin\":{\r\n                    ...admin\r\n                }\r\n            \r\n            },\r\n        });\r\n\r\n        // @ts-ignore\r\n        if (getConfigurationAutoEmailTemplateRes && getConfigurationAutoEmailTemplateRes.status === 'ok') {\r\n            openSuccessNotification();\r\n            setVisible(false);\r\n        }\r\n        else {\r\n            openErrorNotification();\r\n        }\r\n\r\n    };\r\n\r\n    useEffect(()=>{\r\n        const getCustomerAutoEmail = async () => {\r\n            const res = await handleAutoEmailTemplateFetch({\r\n                urlOptions: {\r\n                    placeHolders: {\r\n                        eventName: 'orderStatus'\r\n                    }\r\n                }\r\n            }); \r\n\r\n            // set auto email template to customer and admin\r\n        }; \r\n        getCustomerAutoEmail(); \r\n\r\n    },[]);\r\n\r\n\r\n    const handleCancel = (e: any) => {\r\n        setVisible(false);\r\n    };\r\n\r\n\r\n\r\n    return (\r\n        <Modal\r\n        width={'80vw'}\r\n        style={{\r\n            top: '40px'\r\n        }}\r\n        title=\"Order Status Template\"\r\n        visible={visible}\r\n        onOk={(e: any) => handleSubmit()}\r\n        onCancel={handleCancel}\r\n        okText='Submit'\r\n        okButtonProps={{\r\n            loading: autoEmailTemplate.isLoading,\r\n            htmlType: \"submit\",\r\n            // disabled: getisSubmitButtonDisabled(values, isValid)\r\n        }}\r\n        bodyStyle={{\r\n            margin: '10px',\r\n            padding: '10px'\r\n        }}\r\n    >\r\n     <Tabs defaultActiveKey=\"1\" >\r\n     <TabPane tab=\"Customer\" key=\"1\">\r\n        \r\n        <div style={{\r\n            display:'flex',\r\n\r\n        }}>\r\n            <div style={{\r\n                width:'70%'\r\n            }}>\r\n            <Input\r\n            label='Subject'\r\n            value={customer.subject}\r\n            name='subject'\r\n            onChange={(e:any) => {\r\n                setcustomer({\r\n                    ...customer,\r\n                    subject: e.target.value\r\n                })\r\n            }}\r\n        />\r\n\r\n            <h3 className='inputFieldLabel'>\r\n                Body\r\n            </h3>\r\n\r\n\r\n        <CKEditor\r\n        editor={ClassicEditor}\r\n        data={customer.body}\r\n        onInit={editor => {\r\n            // You can store the \"editor\" and use when it is needed.\r\n            console.log('Editor is ready to use!', editor);\r\n        }}\r\n        onChange={(event, editor) => {\r\n            const data = editor.getData();\r\n            setcustomer({\r\n                ...customer,\r\n                body: data\r\n            })\r\n        }}\r\n        onBlur={(event, editor) => {\r\n            console.log('Blur.', editor);\r\n        }}\r\n        onFocus={(event, editor) => {\r\n            console.log('Focus.', editor);\r\n        }}\r\n        />\r\n            </div>\r\n\r\n            <div style={{\r\n                width:'30%',\r\n                overflowY:'auto',\r\n                background:\"#f7f7f7\",\r\n                marginLeft:'20px',\r\n                padding:'10px',\r\n                borderRadius:'8px'\r\n            }}>\r\n                <h4>Information Tags</h4>\r\n                <p style={{\r\n                    fontSize:'12px'\r\n                }}>\r\n                    Place the following tags to replace them with actual data while sending email\r\n                </p>\r\n                <ul style={{\r\n                    padding:'15px'\r\n                }}>\r\n                    <li style={{\r\n                        fontSize:'12px',\r\n                        marginBottom:'10px',\r\n                        lineHeight:1.7,\r\n                        fontWeight:500\r\n                    }}><b style={{\r\n                        borderRadius:\"15px\",\r\n                        backgroundColor:'#ddd',\r\n                        padding:\"1px 10px\"\r\n                    }}>&lt;?=order.added?&gt; :</b> Order time</li>\r\n                    <li\r\n                    style={{\r\n                        fontSize:'12px',\r\n                        lineHeight:2,\r\n                        fontWeight:500\r\n                    }}\r\n                    ><b\r\n                    style={{\r\n                        borderRadius:\"15px\",\r\n                        backgroundColor:'#ddd',\r\n                        padding:\"1px 10px\"\r\n                    }}\r\n                    >&lt;?shippingAddress.firstName?&gt; :</b> Shipping first Name</li>\r\n                </ul>\r\n\r\n        </div>\r\n        </div>\r\n\r\n     </TabPane>\r\n\r\n    <TabPane tab=\"Admin\" key=\"2\">\r\n    <Input\r\n            label='Subject'\r\n            value={admin.subject}\r\n            name='subject'\r\n            onChange={(e:any) => {\r\n                setadmin({\r\n                    ...admin,\r\n                    subject: e.target.value\r\n                })\r\n            }}\r\n        />\r\n\r\n<h3 className='inputFieldLabel'>\r\n\tBody\r\n</h3>\r\n\r\n\r\n<CKEditor\r\neditor={ClassicEditor}\r\ndata={admin.body}\r\nonInit={editor => {\r\n    // You can store the \"editor\" and use when it is needed.\r\n    console.log('Editor is ready to use!', editor);\r\n}}\r\nonChange={(event, editor) => {\r\n    const data = editor.getData();\r\n    setadmin({\r\n        ...admin,\r\n        body: data\r\n    })\r\n}}\r\nonBlur={(event, editor) => {\r\n    console.log('Blur.', editor);\r\n}}\r\nonFocus={(event, editor) => {\r\n    console.log('Focus.', editor);\r\n}}\r\n/>\r\n\r\n     \r\n    </TabPane>\r\n\r\n</Tabs>\r\n\r\n    </Modal>\r\n    );\r\n};\r\n\r\nexport default AddNewBrand;\r\n","import React, { useState,useEffect } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n\r\nimport { useHandleFetch } from '../../hooks';\r\n// import third party ui lib\r\nimport { Upload, message, Switch, Select, Button, notification, Modal,Tabs } from 'antd';\r\n\r\nimport {\r\n    FileOutlined,\r\n    InboxOutlined,\r\n    FileAddOutlined,\r\n    DeleteOutlined,\r\n    CheckCircleOutlined,\r\n    CloseOutlined,\r\n    CheckOutlined,\r\n    InfoCircleOutlined,\r\n    PlusOutlined,\r\n    FileImageFilled\r\n} from '@ant-design/icons';\r\n\r\n\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport MediaLibrary from \"../../components/MediaLibrary\";\r\nimport CKEditor from '@ckeditor/ckeditor5-react';\r\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\r\n\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    name: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\n\r\nconst { TabPane } = Tabs;\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'New Customer Template Updated',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n    notification.error({\r\n        message: message || 'Something Went Wrong',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst initialValues = {\r\n    name: '',\r\n    description: '',\r\n}\r\n\r\n\r\n\r\ninterface Props {\r\n   visible: boolean;\r\n   setVisible: any;\r\n\r\n}\r\n\r\nconst AddNewBrand = ({ visible, setVisible }: Props) => {\r\n\r\n    const [autoEmailTemplate, handleAutoEmailTemplateFetch] = useHandleFetch({}, 'configureAutoEmailTemplate');\r\n    const [getConfigureAutoEmailTemplate, handleGetConfigureAutoEmailTemplateFetch] = useHandleFetch({}, 'getConfigureAutoEmailTemplate');\r\n    \r\n    \r\n    const [customer, setcustomer] = useState({\r\n        subject:'',\r\n        body:'',\r\n    }); \r\n\r\n    const [admin, setadmin] = useState({\r\n        subject:'',\r\n        body:'',\r\n    }); \r\n\r\n    const handleSubmit = async () => {\r\n        const getConfigurationAutoEmailTemplateRes = await handleAutoEmailTemplateFetch({\r\n            body: {\r\n                \"event\": \"order\",\r\n                \"customer\":{\r\n                    ...customer\r\n                },\r\n                \"admin\":{\r\n                    ...admin\r\n                }\r\n            \r\n            },\r\n        });\r\n\r\n        // @ts-ignore\r\n        if (getConfigurationAutoEmailTemplateRes && getConfigurationAutoEmailTemplateRes.status === 'ok') {\r\n            openSuccessNotification();\r\n            setVisible(false);\r\n        }\r\n        else {\r\n            openErrorNotification();\r\n        }\r\n\r\n    };\r\n\r\n    useEffect(()=>{\r\n        const getCustomerAutoEmail = async () => {\r\n            const res = await handleAutoEmailTemplateFetch({\r\n                urlOptions: {\r\n                    placeHolders: {\r\n                        eventName: 'order'\r\n                    }\r\n                }\r\n            }); \r\n\r\n            // set auto email template to customer and admin\r\n        }; \r\n        getCustomerAutoEmail(); \r\n\r\n    },[]);\r\n\r\n\r\n    const handleCancel = (e: any) => {\r\n        setVisible(false);\r\n    };\r\n\r\n\r\n\r\n    return (\r\n        <Modal\r\n        width={'80vw'}\r\n        style={{\r\n            top: '40px'\r\n        }}\r\n        title=\"Order Event Template\"\r\n        visible={visible}\r\n        onOk={(e: any) => handleSubmit()}\r\n        onCancel={handleCancel}\r\n        okText='Submit'\r\n        okButtonProps={{\r\n            loading: autoEmailTemplate.isLoading,\r\n            htmlType: \"submit\",\r\n            // disabled: getisSubmitButtonDisabled(values, isValid)\r\n        }}\r\n        bodyStyle={{\r\n            margin: '10px',\r\n            padding: '10px'\r\n        }}\r\n    >\r\n     <Tabs defaultActiveKey=\"1\" >\r\n     <TabPane tab=\"Customer\" key=\"1\">\r\n        \r\n        <div style={{\r\n            display:'flex',\r\n\r\n        }}>\r\n            <div style={{\r\n                width:'70%'\r\n            }}>\r\n            <Input\r\n            label='Subject'\r\n            value={customer.subject}\r\n            name='subject'\r\n            onChange={(e:any) => {\r\n                setcustomer({\r\n                    ...customer,\r\n                    subject: e.target.value\r\n                })\r\n            }}\r\n        />\r\n\r\n            <h3 className='inputFieldLabel'>\r\n                Body\r\n            </h3>\r\n\r\n\r\n        <CKEditor\r\n        editor={ClassicEditor}\r\n        data={customer.body}\r\n        onInit={editor => {\r\n            // You can store the \"editor\" and use when it is needed.\r\n            console.log('Editor is ready to use!', editor);\r\n        }}\r\n        onChange={(event, editor) => {\r\n            const data = editor.getData();\r\n            setcustomer({\r\n                ...customer,\r\n                body: data\r\n            })\r\n        }}\r\n        onBlur={(event, editor) => {\r\n            console.log('Blur.', editor);\r\n        }}\r\n        onFocus={(event, editor) => {\r\n            console.log('Focus.', editor);\r\n        }}\r\n        />\r\n            </div>\r\n\r\n            <div style={{\r\n                width:'30%',\r\n                overflowY:'auto',\r\n                background:\"#f7f7f7\",\r\n                marginLeft:'20px',\r\n                padding:'10px',\r\n                borderRadius:'8px'\r\n            }}>\r\n                <h4>Information Tags</h4>\r\n                <p style={{\r\n                    fontSize:'12px'\r\n                }}>\r\n                    Place the following tags to replace them with actual data while sending email\r\n                </p>\r\n                <ul style={{\r\n                    padding:'15px'\r\n                }}>\r\n                    <li style={{\r\n                        fontSize:'12px',\r\n                        marginBottom:'10px',\r\n                        lineHeight:1.7,\r\n                        fontWeight:500\r\n                    }}><b style={{\r\n                        borderRadius:\"15px\",\r\n                        backgroundColor:'#ddd',\r\n                        padding:\"1px 10px\"\r\n                    }}>&lt;?=order.added?&gt; :</b> Order time</li>\r\n                    <li\r\n                    style={{\r\n                        fontSize:'12px',\r\n                        lineHeight:2,\r\n                        fontWeight:500\r\n                    }}\r\n                    ><b\r\n                    style={{\r\n                        borderRadius:\"15px\",\r\n                        backgroundColor:'#ddd',\r\n                        padding:\"1px 10px\"\r\n                    }}\r\n                    >&lt;?shippingAddress.firstName?&gt; :</b> Shipping first Name</li>\r\n                </ul>\r\n\r\n        </div>\r\n        </div>\r\n\r\n     </TabPane>\r\n\r\n    <TabPane tab=\"Admin\" key=\"2\">\r\n    <Input\r\n            label='Subject'\r\n            value={admin.subject}\r\n            name='subject'\r\n            onChange={(e:any) => {\r\n                setadmin({\r\n                    ...admin,\r\n                    subject: e.target.value\r\n                })\r\n            }}\r\n        />\r\n\r\n<h3 className='inputFieldLabel'>\r\n\tBody\r\n</h3>\r\n\r\n\r\n<CKEditor\r\neditor={ClassicEditor}\r\ndata={admin.body}\r\nonInit={editor => {\r\n    // You can store the \"editor\" and use when it is needed.\r\n    console.log('Editor is ready to use!', editor);\r\n}}\r\nonChange={(event, editor) => {\r\n    const data = editor.getData();\r\n    setadmin({\r\n        ...admin,\r\n        body: data\r\n    })\r\n}}\r\nonBlur={(event, editor) => {\r\n    console.log('Blur.', editor);\r\n}}\r\nonFocus={(event, editor) => {\r\n    console.log('Focus.', editor);\r\n}}\r\n/>\r\n\r\n     \r\n    </TabPane>\r\n\r\n</Tabs>\r\n\r\n    </Modal>\r\n    );\r\n};\r\n\r\nexport default AddNewBrand;\r\n","import React, { useState } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n\r\nimport { useHandleFetch } from '../../hooks';\r\n// import third party ui lib\r\nimport { Upload, message, Switch, Select, Button, notification, Modal, Tooltip,Checkbox  } from 'antd';\r\n\r\nimport {\r\n    FileOutlined,\r\n    InboxOutlined,\r\n    FileAddOutlined,\r\n    DeleteOutlined,\r\n    CheckCircleOutlined,\r\n    CloseOutlined,\r\n    CheckOutlined,\r\n    InfoCircleOutlined,\r\n    PlusOutlined,\r\n    FileImageFilled,\r\n    EditOutlined\r\n} from '@ant-design/icons';\r\n\r\n\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport MediaLibrary from \"../../components/MediaLibrary\";\r\nimport NewCustomerTemplate from \"./NewCustomerTemplate\";\r\nimport OrderStatusTemplateAutoEmail from \"./OrderStatusTemplateAutoEmail\";\r\nimport OrderTemplateAutoEmail from \"./OrderTemplateAutoEmail\";\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    name: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Tag Created',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n    notification.error({\r\n        message: message || 'Something Went Wrong',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n    });\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\r\ninterface Props {\r\n}\r\n\r\nconst ConfigureAutoEmail = ({  }: Props) => {\r\n\r\n    const [getAutoEmailConfigurationState, handleGetAutoEmailConfigurationFetch] = useHandleFetch({}, 'getAutoEmailConfiguration');\r\n    const [configureAutoEmailConfigurationState, handleAutoEmailConfigurationFetch] = useHandleFetch({}, 'configureAutoEmail');\r\n \r\n    const [isnewCustomerAdmin,setnewCustomerAdmin] = useState(true);\r\n    const [isnewCustomerCustomer,setnewCustomerCustomer] = useState(true);\r\n    const [isorderAdmin,setorderAdmin] = useState(true);\r\n    const [isorderStatusAdmin,setorderStatusAdmin] = useState(true);\r\n    const [isorderCustomer,setorderCustomer] = useState(true);\r\n    const [isorderStatusCustomer,setIsorderStatusCustomer] = useState(true);\r\n\r\n    const [newcustomermodal, setnewcustomermodal] = useState(false);\r\n    const [ordermodal, setordermodal] = useState(false);\r\n    const [orderStatusmodal, setorderStatusmodal] = useState(false);\r\n\r\n\r\n    const handleUpdateAutoEmail = async () => {\r\n        const updateAutoEmailRes = await handleAutoEmailConfigurationFetch({\r\n            body: {\r\n                \"newCustomerAdmin\": isnewCustomerAdmin,\r\n                \"newCustomerCustomer\": isnewCustomerCustomer,\r\n                \"orderAdmin\": isorderAdmin, \r\n                \"orderCustomer\": isorderStatusAdmin, \r\n                \"orderStatusAdmin\": isorderCustomer, \r\n                \"orderStatusCustomer\": isorderStatusCustomer\r\n            },\r\n        });\r\n\r\n        // @ts-ignore\r\n        if (addTagRes && addTagRes.status === 'ok') {\r\n            openSuccessNotification('Auto email Configuration Updated!');\r\n        }\r\n        else {\r\n            openErrorNotification(\"Something went wrong, Couldn't updated Auto email configuration\");\r\n        }\r\n\r\n    };\r\n\r\n\r\n\r\n    const getisSubmitButtonDisabled = (values, isValid) => {\r\n        if (!values.name || !isValid) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n                                <div style={{\r\n                                    display:'flex',\r\n                                    flexDirection:'column'\r\n                                }}>\r\n                                <div style={{\r\n                                }}>\r\n                                    \r\n                                    <div style={{\r\n                                                    display:'flex',\r\n                                                    alignItems:\"center\"\r\n                                                }}>\r\n                                                <div style={{\r\n                                                    marginRight:'15px',\r\n                                                    marginTop:\"10px\"\r\n                                                }}>\r\n                                                <h3 className='checkBoxFieldLabel'>\r\n                                                New Customer\r\n                                                 </h3>\r\n                                                </div>\r\n                                                 <Button\r\n                                                 className='templateEditSmall'\r\n                                                    onClick={() => setnewcustomermodal(true)}\r\n                                                    type='link'\r\n                                                    icon={<EditOutlined />}\r\n                                                >\r\n                                                    configure Template\r\n                                                </Button>\r\n                                                </div>\r\n                                          <div style={{\r\n                                                marginTop:\"15px\"\r\n                                            }}></div>\r\n                                        <div style={{\r\n                                                display: 'flex',\r\n                                                marginTop:'15px'\r\n\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div style={{\r\n                                                        marginRight:'20px',\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}>\r\n                                                    \r\n                                                   <Checkbox\r\n                                                   checked={isnewCustomerAdmin}\r\n                                                   defaultChecked={isnewCustomerAdmin}\r\n                                                    onChange={(e) => setnewCustomerAdmin(e.target.checked)}\r\n                                                    >\r\n                                                    <span className='checkBoxSmallFieldLabel'>\r\n                                                        Admin\r\n                                                   </span>                            \r\n                                                </Checkbox> \r\n                                               </div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\r\n                                                <Checkbox \r\n                                                  checked={isnewCustomerCustomer}\r\n                                                  defaultChecked={isnewCustomerCustomer}\r\n                                                onChange={(e) => setnewCustomerCustomer(e.target.checked)}\r\n                                                   >\r\n                                                    <span className='checkBoxSmallFieldLabel'>\r\n                                                    Customer\r\n                                                    </span>                            \r\n                                               </Checkbox> \r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n</div>\r\n\r\n                                    <div>\r\n\r\n\r\n                                    <div style={{\r\n                                                    display:'flex',\r\n                                                    alignItems:\"center\",\r\n                                            marginTop:'30px'\r\n                                                }}>\r\n                                                <div style={{\r\n                                                    marginRight:'15px',\r\n                                                    marginTop:\"10px\"\r\n                                                }}>\r\n                                                <h3 className='checkBoxFieldLabel'>\r\n                                                 Order\r\n                                                 </h3>\r\n                                                </div>\r\n                                                 <Button\r\n                                                 className='templateEditSmall'\r\n                                                    onClick={() => setordermodal(true)}\r\n                                                    type='link'\r\n                                                    icon={<EditOutlined />}\r\n                                                >\r\n                                                    configure Template\r\n                                                </Button>\r\n                                                </div>\r\n\r\n\r\n                                    <div style={{\r\n                                                marginTop:\"5px\"\r\n                                            }}></div>\r\n\r\n                                        <div style={{\r\n                                                display: 'flex',\r\n                                                marginTop:'15px',\r\n                                                \r\n\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div style={{\r\n                                                        marginRight:'20px',\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}>\r\n                                                    \r\n                                                   <Checkbox\r\n                                                      checked={isorderAdmin}\r\n                                                      defaultChecked={isorderAdmin}\r\n                                                    onChange={(e) => setorderAdmin(e.target.checked)}\r\n                                                    >\r\n                                                    <span className='checkBoxSmallFieldLabel'>\r\n                                                        Admin\r\n                                                   </span>                            \r\n                                                </Checkbox> \r\n                                               </div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\r\n                                                <Checkbox \r\n                                                  checked={isorderCustomer}\r\n                                                  defaultChecked={isorderCustomer}\r\n                                                onChange={(e) => setorderCustomer(e.target.checked)}\r\n                                                   >\r\n                                                    <span className='checkBoxSmallFieldLabel'>\r\n                                                    Customer\r\n                                                    </span>                            \r\n                                               </Checkbox> \r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n                                                \r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n                                    </div>\r\n\r\n\r\n\r\n                                                <div>\r\n                                                <div style={{\r\n                                                    display:'flex',\r\n                                                    alignItems:\"center\",\r\n                                                    marginTop:\"30px\"\r\n                                                }}>\r\n                                                <div style={{\r\n                                                    marginRight:'15px',\r\n                                                    marginTop:\"10px\"\r\n                                                }}>\r\n                                           <h3 className='checkBoxFieldLabel'>\r\n                                                 Order status\r\n                                                 </h3>\r\n                                                </div>\r\n                                                 <Button\r\n                                                 className='templateEditSmall'\r\n                                                    onClick={() => setorderStatusmodal(true)}\r\n                                                    type='link'\r\n                                                    icon={<EditOutlined />}\r\n                                                >\r\n                                                    configure Template\r\n                                                </Button>\r\n                                                </div>\r\n                                            <div style={{\r\n                                                marginTop:\"15px\"\r\n                                            }}></div>\r\n                                        <div style={{\r\n                                                display: 'flex',\r\n                                                marginTop:'15px'\r\n\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div style={{\r\n                                                        marginRight:'20px',\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}>\r\n                                                    \r\n                                                   <Checkbox\r\n                                                    checked={isorderStatusAdmin}\r\n                                                    defaultChecked={isorderStatusAdmin}\r\n                                                    onChange={(e) => setorderStatusAdmin(e.target.checked)}\r\n                                                    >\r\n                                                    <span className='checkBoxSmallFieldLabel'>\r\n                                                        Admin\r\n                                                   </span>                            \r\n                                                </Checkbox> \r\n                                               </div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\r\n                                                <Checkbox \r\n                                                 checked={isorderStatusCustomer}\r\n                                                 defaultChecked={isorderStatusCustomer}\r\n                                                onChange={(e) => setIsorderStatusCustomer(e.target.checked)}\r\n                                                   >\r\n                                                    <span className='checkBoxSmallFieldLabel'>\r\n                                                    Customer\r\n                                                    </span>                            \r\n                                               </Checkbox> \r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n                                                <div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n                                              \r\n\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n</div>\r\n                                        \r\n\r\n\r\n                                        \r\n\r\n    </div>\r\n\r\n    <div style={{\r\n                                                marginTop:\"25px\"\r\n                                            }}></div>\r\n\r\n    <Button\r\n\r\n                                            onClick={(e: any) => handleUpdateAutoEmail()}\r\n                                            loading={configureAutoEmailConfigurationState.isLoading}\r\n                                            className='btnPrimaryClassNameoutline'\r\n                                            >\r\n                                            Update Auto Email Configuration\r\n                                            </Button>\r\n\r\n                                            \r\n                                            <div style={{\r\n                                                marginTop:\"5px\"\r\n                                            }}></div>\r\n\r\n        \r\n\r\n        <NewCustomerTemplate \r\n        visible={newcustomermodal}\r\n        setVisible={setnewcustomermodal}\r\n        />\r\n\r\n<OrderStatusTemplateAutoEmail \r\n        visible={orderStatusmodal}\r\n        setVisible={setorderStatusmodal}\r\n        />\r\n\r\n\r\n        <OrderTemplateAutoEmail \r\n        visible={ordermodal}\r\n        setVisible={setordermodal}\r\n        />\r\n        \r\n        </>\r\n    );\r\n};\r\n\r\nexport default ConfigureAutoEmail;\r\n","import React, { useState } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n\r\nimport { useHandleFetch } from '../../hooks';\r\n// import third party ui lib\r\nimport { Upload, message, Switch, Select, Button, notification, Modal, Tooltip,Checkbox  } from 'antd';\r\n\r\nimport {\r\n    FileOutlined,\r\n    InboxOutlined,\r\n    FileAddOutlined,\r\n    DeleteOutlined,\r\n    CheckCircleOutlined,\r\n    CloseOutlined,\r\n    CheckOutlined,\r\n    InfoCircleOutlined,\r\n    PlusOutlined,\r\n    FileImageFilled\r\n} from '@ant-design/icons';\r\n\r\n\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport MediaLibrary from \"../../components/MediaLibrary\";\r\n\r\nimport CKEditor from '@ckeditor/ckeditor5-react';\r\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\r\n\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    name: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Tag Created',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n    notification.error({\r\n        message: message || 'Something Went Wrong',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst initialValues = {\r\n    \"recipient\": \"\",\r\n    \"subject\": \"\",\r\n}\r\n\r\n\r\n\r\ninterface Props {\r\n}\r\n\r\nconst ComposeCustomEmail = ({  }: Props) => {\r\n\r\n    const [sendCustomerEmailState, handleSendCustomEmailFetch] = useHandleFetch({}, 'sendCustomEmail');\r\n \r\n    const [isAuthenticated,setIsAuthenticated] = useState(true);\r\n    const [html,sethtml] = useState('');\r\n\r\n\r\n    const handleSubmit = async (values: any, actions: any) => {\r\n        const addTagRes = await handleSendCustomEmailFetch({\r\n            body: {\r\n                \"recipient\": values.recipient.trim(),\r\n                \"subject\": values.subject.trim(),\r\n               \r\n            },\r\n        });\r\n\r\n        // @ts-ignore\r\n        if (addTagRes && addTagRes.status === 'ok') {\r\n            openSuccessNotification('Email Sent!');\r\n        }\r\n        else {\r\n            openErrorNotification(\"Something went wrong, Couldn't send email\");\r\n        }\r\n\r\n\r\n        actions.setSubmitting(false);\r\n\r\n    };\r\n\r\n\r\n\r\n    const getisSubmitButtonDisabled = (values, isValid) => {\r\n        if (!values.name || !isValid) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n\r\n\r\n    const handleAuthenticatedChange = (e) => {\r\n        setIsAuthenticated(e.target.checked);\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <Formik\r\n            onSubmit={(values, actions) => handleSubmit(values, actions)}\r\n            validationSchema={validationSchema}\r\n            validateOnBlur={false}\r\n            enableReinitialize={true}\r\n            initialValues={\r\n                { ...initialValues }\r\n            }\r\n        >\r\n            {({\r\n                handleChange,\r\n                values,\r\n                handleSubmit,\r\n                errors,\r\n                isValid,\r\n                isSubmitting,\r\n                touched,\r\n                handleBlur,\r\n                setFieldTouched,\r\n                handleReset,\r\n            }) => (\r\n                    <>\r\n\r\n                                         \t<div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\tdisplay: 'flex',\r\n\t\t\t\t\t\t\t\t\t\t\t\tjustifyContent: 'space-between'\r\n\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\twidth: '49%',\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t  <Input\r\n                                                    label='To'\r\n                                                    value={values.recipient}\r\n                                                    name='recipient'\r\n                                                    isError={(touched.recipient && errors.recipient) ||\r\n                                                        (!isSubmitting && sendCustomerEmailState.error['error']['recipient'])}\r\n\r\n                                                    errorString={(touched.recipient && errors.recipient) ||\r\n                                                        (!isSubmitting && sendCustomerEmailState.error['error']['recipient'])}\r\n                                                    onChange={(e: any) => {\r\n                                                        handleChange(e);\r\n                                                        setFieldTouched('recipient');\r\n                                                    }}\r\n                                                     />\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\twidth: '49%'\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\r\n                                                    <Input\r\n                                                    label='Subject'\r\n                                                    value={values.subject}\r\n                                                    name='subject'\r\n                                                    isError={(touched.subject && errors.subject) ||\r\n                                                        (!isSubmitting && sendCustomerEmailState.error['error']['subject'])}\r\n\r\n                                                    errorString={(touched.subject && errors.subject) ||\r\n                                                        (!isSubmitting && sendCustomerEmailState.error['error']['subject'])}\r\n                                                    onChange={(e: any) => {\r\n                                                        handleChange(e);\r\n                                                        setFieldTouched('subject');\r\n                                                    }}\r\n                                                />\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\r\n\r\n\r\n\r\n            <h3 className='inputFieldLabel'>\r\n                Body\r\n            </h3>\r\n\r\n\r\n        <CKEditor\r\n        editor={ClassicEditor}\r\n        data={html}\r\n        onInit={editor => {\r\n            // You can store the \"editor\" and use when it is needed.\r\n            console.log('Editor is ready to use!', editor);\r\n        }}\r\n        onChange={(event, editor) => {\r\n            const data = editor.getData();\r\n            sethtml(data);\r\n        }}\r\n        onBlur={(event, editor) => {\r\n            console.log('Blur.', editor);\r\n        }}\r\n        onFocus={(event, editor) => {\r\n            console.log('Focus.', editor);\r\n        }}\r\n        />\r\n    \r\n\r\n                                       <div style={{\r\n                                           marginTop:'20px'\r\n                                       }}></div>         \r\n                                          <Button\r\n\r\n                                            onClick={(e: any) => handleSubmit(e)}\r\n                                            loading={sendCustomerEmailState.isLoading}\r\n                                            className='btnPrimaryClassNameoutline'\r\n                                            >\r\n                                            Send\r\n                                            </Button>     \r\n\r\n                                            \r\n                                       <div style={{\r\n                                           marginTop:'10px'\r\n                                       }}></div>       \r\n                    </>\r\n                )}\r\n        </Formik>\r\n    );\r\n};\r\n\r\nexport default ComposeCustomEmail;\r\n","import React from 'react'\r\n\r\ninterface Props {\r\n    \r\n}\r\n\r\nconst Inbox = (props: Props) => {\r\n    return (\r\n        <div className='sentEmailListContainer'>\r\n            <div className=\"sentEmailListContainer__item\">\r\n                <h3>\r\n                    Tawhid Abdullah\r\n                </h3>\r\n                <h4>\r\n                {`Lorem ipsum dolor, sit amet consectetur adipisicing elit. \r\n                   Repellat sapiente reprehenderit tempore aperiam! Ipsa, \r\n                   voluptate! Laudantium omnis laboriosam pariatur,\r\n                    reiciendis exercitationem aliquam ducimus sed,\r\n                     reprehenderit, tenetur nihil delectus adipisci sapiente?`.length > 130 ? `Lorem ipsum dolor, sit amet consectetur adipisicing elit. \r\n                     Repellat sapiente reprehenderit tempore aperiam! Ipsa, \r\n                     voluptate! Laudantium omnis laboriosam pariatur,\r\n                      reiciendis exercitationem aliquam ducimus sed,\r\n                       reprehenderit, tenetur nihil delectus adipisci sapiente?`.substring(0, 130) + '...' : `Lorem ipsum dolor, sit amet consectetur adipisicing elit. \r\n                       Repellat sapiente reprehenderit tempore aperiam! Ipsa, \r\n                       voluptate! Laudantium omnis laboriosam pariatur,\r\n                        reiciendis exercitationem aliquam ducimus sed,\r\n                         reprehenderit, tenetur nihil delectus adipisci sapiente?`}\r\n\r\n                 \r\n                </h4>\r\n                <h3>\r\n                   4:09PM\r\n                </h3>\r\n            </div>\r\n            <div className=\"sentEmailListContainer__item\">\r\n                <h3>\r\n                    Tawhid Abdullah\r\n                </h3>\r\n                <h4>\r\n                {`Lorem ipsum dolor, sit amet consectetur adipisicing elit. \r\n                   Repellat sapiente reprehenderit tempore aperiam! Ipsa, \r\n                   voluptate! Laudantium omnis laboriosam pariatur,\r\n                    reiciendis exercitationem aliquam ducimus sed,\r\n                     reprehenderit, tenetur nihil delectus adipisci sapiente?`.length > 130 ? `Lorem ipsum dolor, sit amet consectetur adipisicing elit. \r\n                     Repellat sapiente reprehenderit tempore aperiam! Ipsa, \r\n                     voluptate! Laudantium omnis laboriosam pariatur,\r\n                      reiciendis exercitationem aliquam ducimus sed,\r\n                       reprehenderit, tenetur nihil delectus adipisci sapiente?`.substring(0, 130) + '...' : `Lorem ipsum dolor, sit amet consectetur adipisicing elit. \r\n                       Repellat sapiente reprehenderit tempore aperiam! Ipsa, \r\n                       voluptate! Laudantium omnis laboriosam pariatur,\r\n                        reiciendis exercitationem aliquam ducimus sed,\r\n                         reprehenderit, tenetur nihil delectus adipisci sapiente?`}\r\n\r\n                 \r\n                </h4>\r\n                <h3>\r\n                   4:09PM\r\n                </h3>\r\n            </div>\r\n            <div className=\"sentEmailListContainer__item\">\r\n                <h3>\r\n                    Tawhid Abdullah\r\n                </h3>\r\n                <h4>\r\n                {`Lorem ipsum dolor, sit amet consectetur adipisicing elit. \r\n                   Repellat sapiente reprehenderit tempore aperiam! Ipsa, \r\n                   voluptate! Laudantium omnis laboriosam pariatur,\r\n                    reiciendis exercitationem aliquam ducimus sed,\r\n                     reprehenderit, tenetur nihil delectus adipisci sapiente?`.length > 130 ? `Lorem ipsum dolor, sit amet consectetur adipisicing elit. \r\n                     Repellat sapiente reprehenderit tempore aperiam! Ipsa, \r\n                     voluptate! Laudantium omnis laboriosam pariatur,\r\n                      reiciendis exercitationem aliquam ducimus sed,\r\n                       reprehenderit, tenetur nihil delectus adipisci sapiente?`.substring(0, 130) + '...' : `Lorem ipsum dolor, sit amet consectetur adipisicing elit. \r\n                       Repellat sapiente reprehenderit tempore aperiam! Ipsa, \r\n                       voluptate! Laudantium omnis laboriosam pariatur,\r\n                        reiciendis exercitationem aliquam ducimus sed,\r\n                         reprehenderit, tenetur nihil delectus adipisci sapiente?`}\r\n\r\n                 \r\n                </h4>\r\n                <h3>\r\n                   4:09PM\r\n                </h3>\r\n            </div>\r\n            <div className=\"sentEmailListContainer__item\">\r\n                <h3>\r\n                    Tawhid Abdullah\r\n                </h3>\r\n                <h4>\r\n                {`Lorem ipsum dolor, sit amet consectetur adipisicing elit. \r\n                   Repellat sapiente reprehenderit tempore aperiam! Ipsa, \r\n                   voluptate! Laudantium omnis laboriosam pariatur,\r\n                    reiciendis exercitationem aliquam ducimus sed,\r\n                     reprehenderit, tenetur nihil delectus adipisci sapiente?`.length > 130 ? `Lorem ipsum dolor, sit amet consectetur adipisicing elit. \r\n                     Repellat sapiente reprehenderit tempore aperiam! Ipsa, \r\n                     voluptate! Laudantium omnis laboriosam pariatur,\r\n                      reiciendis exercitationem aliquam ducimus sed,\r\n                       reprehenderit, tenetur nihil delectus adipisci sapiente?`.substring(0, 130) + '...' : `Lorem ipsum dolor, sit amet consectetur adipisicing elit. \r\n                       Repellat sapiente reprehenderit tempore aperiam! Ipsa, \r\n                       voluptate! Laudantium omnis laboriosam pariatur,\r\n                        reiciendis exercitationem aliquam ducimus sed,\r\n                         reprehenderit, tenetur nihil delectus adipisci sapiente?`}\r\n\r\n                 \r\n                </h4>\r\n                <h3>\r\n                   4:09PM\r\n                </h3>\r\n            </div>\r\n            <div className=\"sentEmailListContainer__item\">\r\n                <h3>\r\n                    Tawhid Abdullah\r\n                </h3>\r\n                <h4>\r\n                {`Lorem ipsum dolor, sit amet consectetur adipisicing elit. \r\n                   Repellat sapiente reprehenderit tempore aperiam! Ipsa, \r\n                   voluptate! Laudantium omnis laboriosam pariatur,\r\n                    reiciendis exercitationem aliquam ducimus sed,\r\n                     reprehenderit, tenetur nihil delectus adipisci sapiente?`.length > 130 ? `Lorem ipsum dolor, sit amet consectetur adipisicing elit. \r\n                     Repellat sapiente reprehenderit tempore aperiam! Ipsa, \r\n                     voluptate! Laudantium omnis laboriosam pariatur,\r\n                      reiciendis exercitationem aliquam ducimus sed,\r\n                       reprehenderit, tenetur nihil delectus adipisci sapiente?`.substring(0, 130) + '...' : `Lorem ipsum dolor, sit amet consectetur adipisicing elit. \r\n                       Repellat sapiente reprehenderit tempore aperiam! Ipsa, \r\n                       voluptate! Laudantium omnis laboriosam pariatur,\r\n                        reiciendis exercitationem aliquam ducimus sed,\r\n                         reprehenderit, tenetur nihil delectus adipisci sapiente?`}\r\n\r\n                 \r\n                </h4>\r\n                <h3>\r\n                   4:09PM\r\n                </h3>\r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Inbox\r\n","import React from 'react';\r\n\r\n\r\n// import lib\r\nimport { Upload, message, Switch, Select, Button, notification, Modal, Tabs } from 'antd';\r\n\r\n// import components \r\nimport ConfigureSTMP from \"./ConfigureSTMP\";\r\nimport ConfigureAutoEmail from \"./ConfigureAutoEmail\";\r\nimport ComposeCustomEmail from \"./ComposeCustomEmail\";\r\nimport Inbox from \"./Inbox\";\r\n\r\n\r\nimport {\r\n\tDeleteOutlined,\r\n\tFileAddOutlined,\r\n\tCheckCircleOutlined,\r\n\tFileImageFilled,\r\n\tFileImageOutlined,\r\n\tFileImageTwoTone,\r\n\tPlusOutlined,\r\n\tPlusCircleOutlined,\r\n\tCloseOutlined,\r\n\tCheckOutlined,\r\n    InfoCircleOutlined,\r\n    InboxOutlined,\r\n    SettingOutlined\r\n} from '@ant-design/icons';\r\n\r\n\r\n\r\nconst { TabPane } = Tabs;\r\n\r\n\r\n\r\ninterface Props {\r\n\r\n}\r\n\r\nconst Sms = (props: Props) => {\r\n    return (\r\n        <>\r\n            <div className='siteInfoContainer'>\r\n\r\n                <Tabs defaultActiveKey=\"1\" >\r\n                <TabPane \r\n                    tab={\r\n                        <span>\r\n                        <InboxOutlined />\r\n                        Inbox\r\n                        </span>\r\n                    }\r\n             key=\"1\">\r\n                        <Inbox />\r\n                    </TabPane>\r\n\r\n                    <TabPane \r\n                    \r\n                    tab={\r\n                        <span>\r\n                        <PlusCircleOutlined />\r\n                        Compose Email\r\n                        </span>\r\n                    } key=\"2\">\r\n                        <ComposeCustomEmail />\r\n                    </TabPane>\r\n\r\n                    <TabPane \r\n                     tab={\r\n                        <span>\r\n                        <SettingOutlined />\r\n                        Configure STMP\r\n                        </span>\r\n                    }\r\n                    \r\n                   key=\"3\">\r\n                        <ConfigureSTMP />\r\n                    </TabPane>\r\n\r\n                    <TabPane\r\n                    \r\n                    tab={\r\n                        <span>\r\n                        <SettingOutlined />\r\n                        Configure Auto Email     \r\n                        </span>\r\n                    }\r\n                     key=\"4\">\r\n                        <ConfigureAutoEmail />\r\n                    </TabPane>\r\n\r\n                </Tabs>\r\n\r\n            </div>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Sms\r\n","import React, {useEffect} from 'react'\r\n\r\n\r\n\r\n// import components\r\nimport Empty from \"../../components/Empty\";\r\n\r\n\r\n\r\n// import hooks\r\nimport { useHandleFetch } from \"../../hooks\";\r\n\r\n\r\n\r\n\r\n// import lib\r\nimport { useHistory } from \"react-router\";\r\nimport { LogoutOutlined,\r\n    BellOutlined, \r\n    OrderedListOutlined,\r\n   TwitterSquareFilled,\r\n   ShoppingCartOutlined,\r\n   UserOutlined,\r\n    } from '@ant-design/icons';\r\n\r\nimport Moment from 'react-moment';\r\nimport moment from 'moment';\r\n\r\nimport { Layout, Badge, Dropdown, Menu, Spin } from 'antd';\r\n\r\nconst { Header } = Layout;\r\n\r\n\r\n\r\n\r\ninterface Props {\r\n    \r\n}\r\n\r\nconst NotificationList = (props: Props) => {\r\n\r\n    const history = useHistory();\r\n\r\n    const [getAllNotificationState, handleGetAllNOticationFetch] = useHandleFetch({}, 'getAllNotification');\r\n\r\n\r\n    const handleMenuClick = (e) => {\r\n        if (e.key === '3') {\r\n        }\r\n    };\r\n\r\n\r\n    useEffect(() => {\r\n        const getAllNotification = async () => {\r\n            await handleGetAllNOticationFetch({});\r\n        }\r\n\r\n        getAllNotification();\r\n    }, [])\r\n\r\n\r\n\r\n\r\n    console.log('getAllNotificationState',getAllNotificationState);\r\n\r\n\r\n    const typeIcon = {\r\n        customer: <UserOutlined />,\r\n        order: <ShoppingCartOutlined />\r\n    }\r\n\r\n    const menu = () => {\r\n\r\n        if (getAllNotificationState.isLoading) return (\r\n            <div style={{\r\n                height:'100%',\r\n                display:'flex',\r\n                justifyContent:'center',\r\n                alignItems:'center',\r\n                marginTop:'100px'\r\n            }}>\r\n                <Spin />\r\n            </div>\r\n        );\r\n\r\n\r\n\r\n        if (getAllNotificationState.done && getAllNotificationState.data && !getAllNotificationState.data[0]) {\r\n            return (\r\n                <div style={{\r\n                    height:'100%',\r\n                    display:'flex',\r\n                    justifyContent:'center',\r\n                    alignItems:'center',\r\n                    marginTop:'100px'\r\n                }}>\r\n                     <Empty title='No Notification found' />\r\n                </div>\r\n            )\r\n        }; \r\n\r\n\r\n        return (\r\n            <div className='notificationListItemContainer'>\r\n                        {getAllNotificationState.done\r\n                        && getAllNotificationState.data[0]\r\n                        && getAllNotificationState.data.map((item,index) => {\r\n                        return (\r\n                        <div\r\n                          onClick={() => history.push(`/admin/${item.type}/${item.id}`)}\r\n                          className='notificationListItemContainer__item'>\r\n                            <span className='notificationListItemContainer__item-icon'>\r\n                              {typeIcon[item['type']]}\r\n                            </span>\r\n                            <div className='notificationListItemContainer__item-info'>\r\n                                <h3>\r\n                                    {item.heading}\r\n                                </h3>\r\n                                <h4>\r\n                                    {item.text}\r\n                                </h4>\r\n                                <h2>\r\n                                <Moment >\r\n                                    {item.added}\r\n                                </Moment>\r\n                                </h2>\r\n                            </div>\r\n                        </div>\r\n                    )\r\n                })}\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n    return (\r\n      <>\r\n        <div className='notificationList'>\r\n        <h3 className='notificationList__heading'>\r\n\t\t\tNotification\r\n\t    </h3>\r\n            {menu()}\r\n        </div>\r\n      </>\r\n    )\r\n}\r\n\r\nexport default NotificationList\r\n","import React, { useState } from 'react'; \r\nimport { Checkbox, Row, Col } from 'antd';\r\n\r\n\r\n\r\n\r\n\r\nconst AccessCheckbox = ({checkedList,setCheckedList,plainOptions,defaultValue=[]}) => {\r\n\r\n    const [interminate,setInterminate] = useState(true);\r\n    const [checkAll,setCheckAll] = useState(false); \r\n\r\n    const onChange = checkedList => {\r\n        setCheckedList(checkedList); \r\n        setInterminate(!!checkedList.length && checkedList.length < plainOptions.length); \r\n        setCheckAll(checkedList.length === plainOptions.length); \r\n      };\r\n      \r\n      const onCheckAllChange = e => {\r\n        setCheckedList(e.target.checked ? plainOptions : []); \r\n        setInterminate(false); \r\n        setCheckAll(e.target.checked)\r\n      };\r\n\r\n\r\n      console.log('defaultValue',defaultValue);\r\n\r\n    return (\r\n        <>\r\n        <div\r\n        style={{\r\n            borderBottom:\"1px solid #eee\",\r\n            marginBottom:'10px'\r\n        }}\r\n         className=\"site-checkbox-all-wrapper\">\r\n                <Checkbox\r\n                    style={{\r\n                        marginBottom:\"10px\"\r\n                    }}\r\n                    indeterminate={interminate}\r\n                    onChange={onCheckAllChange}\r\n                    checked={checkAll}\r\n                >\r\n                    Super Admin\r\n                </Checkbox>\r\n        </div>\r\n        <Checkbox.Group \r\n        style={{ width: '100%' }}\r\n         value={checkedList}\r\n         defaultValue={defaultValue}\r\n         onChange={onChange}>\r\n      <Row>\r\n      {plainOptions.map(accessItem => {\r\n          return (\r\n            <Col \r\n            style={{\r\n                marginBottom:\"10px\"\r\n            }}\r\n            span={8}>\r\n            <Checkbox value={accessItem}>\r\n                {accessItem}\r\n            </Checkbox>\r\n          </Col>\r\n          )\r\n      })}\r\n    </Row>\r\n  </Checkbox.Group>\r\n  </>\r\n    )\r\n}\r\n\r\nexport default AccessCheckbox; ","import React, { useState } from 'react';\r\nimport { Modal, notification } from 'antd';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport { useHandleFetch } from '../../hooks';\r\nimport { CheckCircleOutlined, PlusOutlined, EditOutlined, DeleteOutlined, EditFilled } from '@ant-design/icons';\r\nimport AccessCheckbox from \"./AccessCheckbox\";\r\n\r\nconst validationSchema = Yup.object().shape({\r\n\tname: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t\tmessage: message || 'Admin Updated',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t\tmessage: message || 'Something Went Wrong',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n};\r\n\r\n\r\nconst plainOptions = [\r\n    'getCatalogue', 'postCatalogue', \r\n    'getDelivery', 'postDelivery', \r\n    'getOrder', 'postOrder',\r\n    'getBlog', 'postBlog', \r\n    'getPage', 'postPage',\r\n    'analytics',\r\n    'accounts'\r\n];\r\n\r\n\r\ninterface Props {\r\n\tcategory: any;\r\n\tsetvisible: any;\r\n\tvisible: any;\r\n\ttagList: any;\r\n\tsetTagList: any;\r\n\r\n}\r\n\r\nconst QuickEdit = ({ category, setvisible, visible, tagList, setTagList }: Props) => {\r\n\tconst [updateTagState, handleUpdateCategoryFetch] = useHandleFetch({}, 'updateAdminRole');\r\n\tconst [accesscheckedList,setAccessCheckedList] = useState(category.role && category.role.length ? [...category.role]: [] );\r\n\r\n\r\n\tconst handleSubmit = async (values: any, actions: any) => {\r\n\t\tconst updateTagRes = await handleUpdateCategoryFetch({\r\n\t\t\turlOptions: {\r\n\t\t\t\tplaceHolders: {\r\n\t\t\t\t\tid: values.id,\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tbody: {\r\n\t\t\t\tname: values.name,\r\n\t\t\t\taccess: accesscheckedList\r\n\t\t\t},\r\n\t\t});\r\n\r\n\t\t// @ts-ignore\r\n\t\tif (updateTagRes && updateTagRes.status === 'ok') {\r\n\t\t\topenSuccessNotification();\r\n\r\n\t\t\tconst positionInTag = () => {\r\n\t\t\t\treturn tagList.map(item => item.id).indexOf(category.id);\r\n\t\t\t}\r\n\r\n\t\t\tconst index = positionInTag();\r\n\r\n\t\t\t// @ts-ignore\r\n\t\t\tconst updatedItem = Object.assign({}, tagList[index], { ...updateTagRes });\r\n\t\t\tconst updateTagList = [...tagList.slice(0, index), updatedItem, ...tagList.slice(index + 1)];\r\n\t\t\tsetTagList(updateTagList);\r\n\r\n\t\t}\r\n\t\telse {\r\n\t\t\topenErrorNotification();\r\n\t\t}\r\n\r\n\t\tactions.setSubmitting(false);\r\n\t\tsetvisible(false)\r\n\t};\r\n\r\n\r\n\tconst handleCancel = (e: any) => {\r\n\t\tsetvisible(false);\r\n\t};\r\n\r\n\r\n\tconst getisSubmitButtonDisabled = (values, isValid) => {\r\n\t\tif (!values.name || !isValid) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\treturn (\r\n\t\t<Formik\r\n\t\t\tonSubmit={(values, actions) => handleSubmit(values, actions)}\r\n\t\t\tvalidationSchema={validationSchema}\r\n\t\t\tvalidateOnBlur={false}\r\n\t\t\tenableReinitialize={true}\r\n\t\t\tinitialValues={\r\n\t\t\t\t{ ...category }\r\n\t\t\t}\r\n\t\t>\r\n\t\t\t{({\r\n\t\t\t\thandleChange,\r\n\t\t\t\tvalues,\r\n\t\t\t\thandleSubmit,\r\n\t\t\t\terrors,\r\n\t\t\t\tisValid,\r\n\t\t\t\tisSubmitting,\r\n\t\t\t\ttouched,\r\n\t\t\t\thandleBlur,\r\n\t\t\t\tsetFieldTouched,\r\n\t\t\t\thandleReset,\r\n\t\t\t}) => (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<Modal\r\n\t\t\t\t\t\t\ttitle=\"Quick Edit\"\r\n\t\t\t\t\t\t\tvisible={visible}\r\n\t\t\t\t\t\t\tonOk={(e: any) => handleSubmit(e)}\r\n\t\t\t\t\t\t\tonCancel={handleCancel}\r\n\t\t\t\t\t\t\tokText='Update'\r\n\t\t\t\t\t\t\tokButtonProps={{\r\n\t\t\t\t\t\t\t\tloading: isSubmitting,\r\n\t\t\t\t\t\t\t\thtmlType: \"submit\",\r\n\t\t\t\t\t\t\t\tdisabled: getisSubmitButtonDisabled(values, isValid)\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\tlabel='Title'\r\n\t\t\t\t\t\t\t\tvalue={values.name}\r\n\t\t\t\t\t\t\t\tname='name'\r\n\t\t\t\t\t\t\t\tisError={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateTagState.error['error']['name'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateTagState.error['error']['name'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('name');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\r\n\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n                                    Select Admin Access \r\n                                </h3>\r\n\r\n\t\t\t\t\t\t\t<AccessCheckbox \r\n\t\t\t\t\t\t\tdefaultValue={category.role}\r\n                            plainOptions={plainOptions}\r\n                            checkedList={accesscheckedList}\r\n                            setCheckedList={setAccessCheckedList}\r\n                            />\r\n                           \r\n\t\t\t\t\t\t</Modal>\r\n\r\n\t\t\t\t\t</>\r\n\t\t\t\t)}\r\n\t\t</Formik>\r\n\t);\r\n};\r\n\r\n\r\nexport default QuickEdit;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n\r\nimport { useHandleFetch } from '../../hooks';\r\n// import third party ui lib\r\nimport { Upload, message, Switch, Select, Button, notification, Modal, Tooltip } from 'antd';\r\n\r\nimport {\r\n    FileOutlined,\r\n    InboxOutlined,\r\n    FileAddOutlined,\r\n    DeleteOutlined,\r\n    CheckCircleOutlined,\r\n    CloseOutlined,\r\n    CheckOutlined,\r\n    InfoCircleOutlined,\r\n    PlusOutlined,\r\n    FileImageFilled\r\n} from '@ant-design/icons';\r\n\r\n\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport MediaLibrary from \"../../components/MediaLibrary\";\r\nimport AccessCheckbox from \"./AccessCheckbox\";\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    name: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n    phone: Yup.string()\r\n    .required('Please tell us your mobile number.')\r\n    .max(13, 'Please enter a valid mobile number.'),\r\n   password: Yup.string()\r\n    .label('Password')\r\n    .required()\r\n    .min(6, 'Password must have at least 6 characters'),\r\n  passwordConfirmation: Yup.string()\r\n    .label('Confirm password')\r\n    .required()\r\n    .min(6, 'Confirm password must have at least 6 characters')\r\n    .oneOf([Yup.ref('password'), null], 'Passwords must match'),\r\n});\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Admin Created',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n    notification.error({\r\n        message: message || 'Something Went Wrong',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst initialValues = {\r\n    name: '',\r\n    phone: '',\r\n    email: '',\r\n    password: '',\r\n    passwordConfirmation: '',\r\n    access: [],\r\n}\r\n\r\n\r\nconst plainOptions = [\r\n    'getCatalogue', 'postCatalogue', \r\n    'getDelivery', 'postDelivery', \r\n    'getOrder', 'postOrder',\r\n    'getBlog', 'postBlog', \r\n    'getPage', 'postPage',\r\n    'analytics',\r\n    'accounts'\r\n];\r\n\r\n\r\ninterface Props {\r\n    addNewCategoryVisible?: any;\r\n    setAddNewCategoryVisible?: any;\r\n    tagList?: any;\r\n    setTagList?: any;\r\n\r\n}\r\n\r\nconst AddNewAdminRoles = ({ addNewCategoryVisible, setAddNewCategoryVisible, tagList, setTagList }: Props) => {\r\n\r\n    const [addTagState, handleAddTagFetch] = useHandleFetch({}, 'adminRoleRegister');\r\n    const [myImages, setmyImages] = useState(false);\r\n    const [visibleMedia, setvisibleMedia] = useState(false);\r\n    const [accesscheckedList,setAccessCheckedList] = useState([]);\r\n\r\n\r\n    const handleSubmit = async (values: any, actions: any) => {\r\n        const addTagRes = await handleAddTagFetch({\r\n            body: {\r\n                name: values.name.trim(),\r\n                email: values.email.trim(),\r\n                phone: values.phone,\r\n                password: values.password,\r\n                password2: values.passwordConfirmation,\r\n                access: accesscheckedList,\r\n\r\n            },\r\n        });\r\n\r\n        // @ts-ignore\r\n        if (addTagRes && addTagRes.status === 'ok') {\r\n            // openSuccessNotification();\r\n\r\n            setTagList([...tagList, {\r\n                id: addTagRes['id'] || '',\r\n                key: addTagRes['id'] || '',\r\n                name: addTagRes['name'] || '',\r\n            }])\r\n            actions.resetForm();\r\n            setAddNewCategoryVisible(false);\r\n        }\r\n        else {\r\n            openErrorNotification();\r\n        }\r\n\r\n\r\n        actions.setSubmitting(false);\r\n\r\n    };\r\n\r\n\r\n    useEffect(() => {\r\n\t\tif (!addTagState['isLoading']) {\r\n\t\t\tconst error = addTagState['error'];\r\n\t\t\tif (error['isError'] && Object.keys(error['error']).length > 0) {\r\n\t\t\t\tif (error['error']['registerError']) {\r\n\t\t\t\t\t// setServerErrors(error['error']['registerError']);\r\n\t\t\t\t} else if (error['error']['checkoutError']) {\r\n\t\t\t\t\t// setServerErrors(error['error']['checkoutError']);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\t// setServerErrors(error['error']);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst errors =\r\n\t\t\t\t\tObject.values(error['error']).length > 0\r\n\t\t\t\t\t\t? Object.values(error['error'])\r\n\t\t\t\t\t\t: [];\r\n\t\t\t\terrors.forEach((err, i) => {\r\n\t\t\t\t\tif (typeof err === 'string') {\r\n\t\t\t\t\t\topenErrorNotification(err);\r\n\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if (typeof err === 'object') {\r\n\t\t\t\t\t\tif (err && Object.keys(err).length > 0) {\r\n\t\t\t\t\t\t\tconst errs = Object.values(err);\r\n\t\t\t\t\t\t\terrs.forEach(err => {\r\n\t\t\t\t\t\t\t\topenErrorNotification(err);\r\n\t\t\t\t\t\t\t})\r\n\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (\r\n\t\t\t!addTagState['isLoading'] &&\r\n\t\t\tObject.keys(addTagState.data).length > 0\r\n\t\t) {\r\n\t\t\tif (addTagState['data']['status'] === 'ok') {\r\n\t\t\t\topenSuccessNotification('Admin Created Successfully');\r\n\t\t\t\t// history.push({\r\n\t\t\t\t//   pathname: '/orderDetails',\r\n\t\t\t\t//   state: checkoutState['data']\r\n\t\t\t\t// })\r\n\r\n\t\t\t\t// clearCart();\r\n\t\t\t\t// setIsModalShown(true);\r\n\t\t\t}\r\n\t\t}\r\n    }, [addTagState]);\r\n    \r\n\r\n\r\n    const handleCancel = (e: any) => {\r\n        setAddNewCategoryVisible(false);\r\n    };\r\n\r\n\r\n    const getisSubmitButtonDisabled = (values, isValid) => {\r\n        if (!values.name || !values.phone || !values.password || !values.passwordConfirmation || !isValid) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n\r\n    return (\r\n        <Formik\r\n            onSubmit={(values, actions) => handleSubmit(values, actions)}\r\n            validationSchema={validationSchema}\r\n            validateOnBlur={false}\r\n            enableReinitialize={true}\r\n            initialValues={\r\n                { ...initialValues }\r\n            }\r\n        >\r\n            {({\r\n                handleChange,\r\n                values,\r\n                handleSubmit,\r\n                errors,\r\n                isValid,\r\n                isSubmitting,\r\n                touched,\r\n                handleBlur,\r\n                setFieldTouched,\r\n                handleReset,\r\n            }) => (\r\n                    <>\r\n                        <Modal\r\n                            style={{\r\n                                top: '40px'\r\n                            }}\r\n                            title=\"Register New Admin\"\r\n                            visible={addNewCategoryVisible}\r\n                            onOk={(e: any) => handleSubmit(e)}\r\n                            onCancel={handleCancel}\r\n                            okText='Create'\r\n                            okButtonProps={{\r\n                                loading: isSubmitting,\r\n                                htmlType: \"submit\",\r\n                                disabled: getisSubmitButtonDisabled(values, isValid)\r\n                            }}\r\n                        >\r\n                            <Input\r\n                                label='Name'\r\n                                value={values.name}\r\n                                name='name'\r\n                                isError={(touched.name && errors.name) ||\r\n                                    (!isSubmitting && addTagState.error['error']['name'])}\r\n\r\n                                errorString={(touched.name && errors.name) ||\r\n                                    (!isSubmitting && addTagState.error['error']['name'])}\r\n                                onChange={(e: any) => {\r\n                                    handleChange(e);\r\n                                    setFieldTouched('name');\r\n                                }}\r\n                            />\r\n\r\n\r\n                            <Input\r\n                                label='Phone'\r\n                                value={values.phone}\r\n                                name='phone'\r\n                                isError={(touched.phone && errors.phone) ||\r\n                                    (!isSubmitting && addTagState.error['error']['phone'])}\r\n\r\n                                errorString={(touched.phone && errors.phone) ||\r\n                                    (!isSubmitting && addTagState.error['error']['phone'])}\r\n                                onChange={(e: any) => {\r\n                                    handleChange(e);\r\n                                    setFieldTouched('phone');\r\n                                }}\r\n                            />\r\n\r\n\r\n                            <Input\r\n                                label='Email'\r\n                                value={values.email}\r\n                                name='email'\r\n                                isError={(touched.email && errors.email) ||\r\n                                    (!isSubmitting && addTagState.error['error']['email'])}\r\n\r\n                                errorString={(touched.email && errors.email) ||\r\n                                    (!isSubmitting && addTagState.error['error']['email'])}\r\n                                onChange={(e: any) => {\r\n                                    handleChange(e);\r\n                                    setFieldTouched('email');\r\n                                }}\r\n                            />\r\n                           \r\n\r\n                           <Input\r\n                                label='Password'\r\n                                value={values.password}\r\n                                name='password'\r\n                                type='password'\r\n                                isError={(touched.password && errors.password) ||\r\n                                    (!isSubmitting && addTagState.error['error']['password'])}\r\n\r\n                                errorString={(touched.password && errors.password) ||\r\n                                    (!isSubmitting && addTagState.error['error']['password'])}\r\n                                onChange={(e: any) => {\r\n                                    handleChange(e);\r\n                                    setFieldTouched('password');\r\n                                }}\r\n                            />\r\n\r\n\r\n                            <Input\r\n                                label='Confirm Password'\r\n                                value={values.passwordConfirmation}\r\n                                name='passwordConfirmation'\r\n                                type='password'\r\n                                isError={(touched.passwordConfirmation && errors.passwordConfirmation) ||\r\n                                    (!isSubmitting && addTagState.error['error']['passwordConfirmation'])}\r\n\r\n                                errorString={(touched.passwordConfirmation && errors.passwordConfirmation) ||\r\n                                    (!isSubmitting && addTagState.error['error']['password2'])}\r\n                                onChange={(e: any) => {\r\n                                    handleChange(e);\r\n                                    setFieldTouched('passwordConfirmation');\r\n                                }}\r\n                            />\r\n\r\n                                <h3 className='inputFieldLabel'>\r\n                                    Select Admin Access \r\n                                </h3>\r\n\r\n                            <AccessCheckbox \r\n                            plainOptions={plainOptions}\r\n                            checkedList={accesscheckedList}\r\n                            setCheckedList={setAccessCheckedList}\r\n                            />\r\n                           \r\n\r\n                        </Modal>\r\n\r\n                        <MediaLibrary\r\n                            setvisible={setvisibleMedia}\r\n                            visible={visibleMedia}\r\n                            setmyImages={setmyImages}\r\n                            myImages={myImages}\r\n                            isModalOpenForImages={true}\r\n\r\n                        />\r\n                    </>\r\n                )}\r\n        </Formik>\r\n\r\n\r\n\r\n\r\n    );\r\n};\r\n\r\nexport default AddNewAdminRoles;\r\n","import React, { useState, useEffect } from 'react';\r\n\r\n// import third party ui lib\r\nimport { Empty, Popconfirm, Upload, message, Switch, Select,Tag, Button, notification, Table, Space, Input as CoolInput, Tooltip, Modal } from 'antd';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { useHistory } from 'react-router';\r\n\r\n\r\n\r\nimport {\r\n\tFileOutlined,\r\n\tInboxOutlined,\r\n\tRadiusUpleftOutlined,\r\n\tRadiusUprightOutlined,\r\n\tRadiusBottomleftOutlined,\r\n\tRadiusBottomrightOutlined,\r\n\tPlusOutlined,\r\n\tDeleteOutlined,\r\n\tEditOutlined,\r\n\tCheckCircleOutlined\r\n} from '@ant-design/icons';\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n\r\n\r\n/// import hooks\r\nimport { useFetch, useHandleFetch } from \"../../hooks\";\r\n\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport { DataTableSkeleton } from \"../../components/Placeholders\";\r\nimport QuickEdit from \"./QuickEdit\"\r\nimport AddNewAdmin from \"./AddNewAdmin\"\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t\tmessage: message || 'Admin Created',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n\tnotification.error({\r\n\t\tmessage: message || 'Something Went Wrong',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n};\r\n\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n\tname: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\n\r\nconst initialValues = {\r\n\tname: '',\r\n\tdescription: ''\r\n}\r\n\r\n\r\nconst { Column, ColumnGroup } = Table;\r\nconst { Search } = CoolInput;\r\n\r\n\r\n\r\nconst MyTable = ({ data, setTagList }) => {\r\n\tconst [visible, setvisible] = useState(false);\r\n\tconst [activeCategoryForEdit, setactiveCategoryForEdit] = useState(false);\r\n\tconst [deleteTagState, handleDeleteTagFetch] = useHandleFetch({}, 'deleteTag');\r\n\r\n\tconst history = useHistory();\r\n\r\n\r\n\tconst handleDeleteTag = async (id) => {\r\n\t\tconst deleteTagRes = await handleDeleteTagFetch({\r\n\t\t\turlOptions: {\r\n\t\t\t\tplaceHolders: {\r\n\t\t\t\t\tid,\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\r\n\r\n\t\t// @ts-ignore\r\n\t\tif (deleteTagRes && deleteTagRes.status === 'ok') {\r\n\t\t\topenSuccessNotification('Deleted Admin');\r\n\t\t\tconst newtagList = data.filter(item => item.id !== id);\r\n\t\t\tsetTagList(newtagList);\r\n\t\t}\r\n\r\n\r\n\t}\r\n\r\n\r\n\tconst handleOk = (e: any) => {\r\n\t\tsetvisible(false);\r\n\r\n\t};\r\n\r\n\tconst handleCancel = (e: any) => {\r\n\t\tsetvisible(false);\r\n\t};\r\n\r\n\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Table\r\n\t\t\t\t// expandable={{\r\n\t\t\t\t//     expandedRowRender: record => <p style={{ margin: 0 }}>{record.name}</p>,\r\n\t\t\t\t//     rowExpandable: record => record.name !== 'Not Expandable',\r\n\t\t\t\t//   }}\r\n\t\t\t\t// bordered={true}\r\n\t\t\t\tsize='small'\r\n\t\t\t\t// pagination={false}\r\n\t\t\t\tdataSource={data}\r\n\t\t\t>\r\n\r\n\t\t\t\t<Column\r\n\t\t\t\t\ttitle=\"Name\"\r\n\t\t\t\t\tdataIndex=\"name\"\r\n\t\t\t\t\tkey=\"id\"\r\n\t\t\t\t\tclassName='classnameofthecolumn'\r\n\t\t\t\t\trender={(text, record: any) => (\r\n\t\t\t\t\t\t<>\r\n\r\n\t\t\t\t\t\t\t<h4\r\n\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\thistory.push(`/admin/tag/${record.id}`)\r\n\t\t\t\t\t\t\t\t\t// setBrandDetailVisible(true);\r\n\t\t\t\t\t\t\t\t\tsetactiveCategoryForEdit(record)\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\tfontWeight: 400,\r\n\t\t\t\t\t\t\t\t\tcolor: '#555',\r\n\t\t\t\t\t\t\t\t\tcursor: 'pointer'\r\n\r\n\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t{text}\r\n\t\t\t\t\t\t\t</h4>\r\n\r\n\r\n\t\t\t\t\t\t</>\r\n\t\t\t\t\t)}\r\n\t\t\t\t/>\r\n\r\n\t\t\t\t<Column\r\n\t\t\t\t\ttitle=\"Email\"\r\n\t\t\t\t\tdataIndex=\"email\"\r\n\t\t\t\t\tkey=\"id\"\r\n\t\t\t\t\tclassName='classnameofthecolumn'\r\n\r\n\t\t\t\t/>\r\n\r\n\r\n\t\t\t\t<Column\r\n\t\t\t\t\ttitle=\"Phone\"\r\n\t\t\t\t\tdataIndex=\"phone\"\r\n\t\t\t\t\tkey=\"id\"\r\n\t\t\t\t\tclassName='classnameofthecolumn'\r\n\t\t\t\t/>\r\n\r\n\r\n\t\t\t\t<Column\r\n\t\t\t\t\ttitle=\"Roles\"\r\n\t\t\t\t\tdataIndex=\"role\"\r\n\t\t\t\t\tkey=\"role\"\r\n\t\t\t\t\tclassName='classnameofthecolumn'\r\n\t\t\t\t\trender={tags => (\r\n\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t{tags && tags.length > 0 && tags.slice(0,3).map((tag) => (\r\n\t\t\t\t\t\t\t<Tag \r\n\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\tborderRadius:\"5px\"\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\tcolor=\"blue\" key={tag}>\r\n\t\t\t\t\t\t\t{tag}\r\n\t\t\t\t\t\t\t</Tag>\r\n\t\t\t\t\t\t))}\r\n\r\n\t\t\t\t\t\t{tags && tags.length === 3 && '.......'}\r\n\t\t\t\t\t\t</>\r\n\t\t\t\t\t)}\r\n\t\t\t\t\t/>\r\n\r\n\r\n\t\t\t\t<Column\r\n\r\n\t\t\t\t\tclassName='classnameofthecolumn'\r\n\t\t\t\t\ttitle=\"\"\r\n\t\t\t\t\tkey=\"action\"\r\n\t\t\t\t\talign='right'\r\n\t\t\t\t\trender={(text, record: any) => (\r\n\t\t\t\t\t\t<Space size=\"middle\">\r\n\t\t\t\t\t\t\t<a href='##'>\r\n\t\t\t\t\t\t\t\t<Tooltip placement=\"top\" title='Quick Edit Tag'>\r\n\t\t\t\t\t\t\t\t\t<span className='iconSize' onClick={() => {\r\n\t\t\t\t\t\t\t\t\t\tsetvisible(true)\r\n\t\t\t\t\t\t\t\t\t\tsetactiveCategoryForEdit(record);\r\n\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t<EditOutlined />\r\n\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t\t</a>\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t<Popconfirm\r\n\t\t\t\t\t\t\t\tonConfirm={() => handleDeleteTag(record.id)}\r\n\t\t\t\t\t\t\t\ttitle=\"Are you sure？\" okText=\"Yes\" cancelText=\"No\">\r\n\t\t\t\t\t\t\t\t<span\r\n\t\t\t\t\t\t\t\t\tclassName='iconSize iconSize-danger'\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t<DeleteOutlined />\r\n\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t</Popconfirm>\r\n\t\t\t\t\t\t</Space>\r\n\t\t\t\t\t)}\r\n\t\t\t\t/>\r\n\t\t\t</Table>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\t\t\t{activeCategoryForEdit && <QuickEdit\r\n\t\t\t\ttagList={data}\r\n\t\t\t\tsetTagList={setTagList}\r\n\t\t\t\tsetvisible={setvisible}\r\n\t\t\t\tvisible={visible}\r\n\t\t\t\tcategory={activeCategoryForEdit} />}\r\n\t\t</>\r\n\t)\r\n}\r\n\r\n\r\n\r\n\r\ninterface Props { }\r\n\r\nconst TagList = ({ }: Props) => {\r\n\r\n\r\n\tconst [tagList, setTagList] = useState([]);\r\n\r\n\tconst [tagState, handleTagListFetch] = useHandleFetch({}, 'adminList');\r\n\r\n\r\n\tuseEffect(() => {\r\n\t\tconst setTags = async () => {\r\n\t\t\tconst tags = await handleTagListFetch({});\r\n\t\t\t// @ts-ignore\r\n\t\t\tsetTagList(tags);\r\n\t\t}\r\n\t\tsetTags();\r\n\t}, [])\r\n\r\n\r\n\r\n\tconst [addTagState, handleAddTagFetch] = useHandleFetch({}, 'addTag');\r\n\tconst [addNewCategoryVisible, setAddNewCategoryVisible] = useState(false);\r\n\r\n\tconst handleSubmit = async (values: any, actions: any) => {\r\n\t\tconst addTagRes = await handleAddTagFetch({\r\n\t\t\turlOptions: {\r\n\t\t\t\tplaceHolders: {\r\n\t\t\t\t\tid: values.id,\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tbody: {\r\n\t\t\t\tname: values.name.trim(),\r\n\t\t\t\tdescription: values.description,\r\n\t\t\t},\r\n\t\t});\r\n\r\n\t\t// @ts-ignore\r\n\t\tif (addTagRes && addTagRes.status === 'ok') {\r\n\t\t\topenSuccessNotification();\r\n\r\n\t\t\tsetTagList([...tagList, {\r\n\t\t\t\tid: addTagRes['id'] || '',\r\n\t\t\t\tkey: addTagRes['id'] || '',\r\n\t\t\t\tname: addTagRes['name'] || '',\r\n\t\t\t\tdescription: addTagRes['description'] || '',\r\n\t\t\t}])\r\n\t\t\tactions.resetForm();\r\n\t\t}\r\n\t\tactions.setSubmitting(false);\r\n\r\n\t};\r\n\r\n\r\n\r\n\tconst getisSubmitButtonDisabled = (values, isValid) => {\r\n\t\tif (!values.name || !isValid) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\r\n\tconst handleOkAddNewCategory = (e: any) => {\r\n\t\tsetAddNewCategoryVisible(false);\r\n\r\n\t};\r\n\r\n\tconst handleCancelAddNewCategory = (e: any) => {\r\n\t\tsetAddNewCategoryVisible(false);\r\n\t};\r\n\r\n\tconst handleSearch = (value) => {\r\n\t\tif (tagState.data.length > 0) {\r\n\t\t\tconst newTagList = tagState.data.filter(item => item.name.toLowerCase().includes(value.toLowerCase()));\r\n\t\t\tsetTagList(newTagList);\r\n\t\t}\r\n\r\n\t}\r\n\r\n\r\n\tconsole.log('adminListState',tagState);\r\n\treturn (\r\n\t\t<>\r\n\r\n\t\t\t<div className='categoryListContainer'>\r\n\t\t\t\t<div className='categoryListContainer__header'>\r\n\t\t\t\t\t<div className='categoryListContainer__header-searchBar-tag'>\r\n\t\t\t\t\t\t<h2 className='categoryListContainer__header-title'>\r\n\t\t\t\t\t\t\tAdmins\r\n            </h2>\r\n\r\n\r\n\t\t\t\t\t\t<Search\r\n\t\t\t\t\t\t\tenterButton={false}\r\n\t\t\t\t\t\t\tclassName='searchbarClassName'\r\n\t\t\t\t\t\t\tplaceholder=\"search admins..\"\r\n\t\t\t\t\t\t\tonSearch={value => handleSearch(value)}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\t// type=\"primary\"\r\n\t\t\t\t\t\tclassName='btnPrimaryClassNameoutline'\r\n\t\t\t\t\t\ticon={<PlusOutlined />}\r\n\t\t\t\t\t\tonClick={() => setAddNewCategoryVisible(true)}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tAdd New\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className='categoryListContainer__categoryList'>\r\n\t\t\t\t\t{tagState.done && tagList.length > 0 && <MyTable\r\n\t\t\t\t\t\tsetTagList={setTagList}\r\n\t\t\t\t\t\tdata={tagList} />}\r\n\t\t\t\t\t{tagState.isLoading && <DataTableSkeleton />}\r\n\r\n\r\n\t\t\t\t\t{tagState.done && !(tagList.length > 0) && (\r\n\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\tmarginTop: '50px'\r\n\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t<Empty description='No Admin found' image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\r\n\t\t\t<AddNewAdmin\r\n\t\t\t\ttagList={tagList}\r\n\t\t\t\tsetTagList={setTagList}\r\n\t\t\t\taddNewCategoryVisible={addNewCategoryVisible}\r\n\t\t\t\tsetAddNewCategoryVisible={setAddNewCategoryVisible}\r\n\t\t\t/>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default TagList;\r\n","import React, { useState } from 'react';\r\nimport { Modal, notification } from 'antd';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport { useHandleFetch } from '../../hooks';\r\nimport { CheckCircleOutlined, PlusOutlined, EditOutlined, DeleteOutlined, EditFilled } from '@ant-design/icons';\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    name: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n    description: Yup.string().label('Description').required('Description is required')\r\n});\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Admin Updated',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Something Went Wrong',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n    });\r\n};\r\n\r\n\r\ninterface Props {\r\n    tagEditVisible?: any;\r\n    setTagEditVisible?: any;\r\n    tagDetailData?: any;\r\n    setTagDetailData?:any; \r\n}\r\n\r\nconst QuickEdit = ({ tagEditVisible, setTagEditVisible, tagDetailData,setTagDetailData }: Props) => {\r\n    const [updateTagState, handleUpdateCategoryFetch] = useHandleFetch({}, 'updateTag');\r\n\r\n    const handleSubmit = async (values: any, actions: any) => {\r\n        const updateTagRes = await handleUpdateCategoryFetch({\r\n            urlOptions: {\r\n                placeHolders: {\r\n                    id: values.id,\r\n                }\r\n            },\r\n            body: {\r\n                name: values.name,\r\n                description: values.description,\r\n            },\r\n        });\r\n\r\n        // @ts-ignore\r\n        if (updateTagRes && updateTagRes.status === 'ok') {\r\n            setTagDetailData({\r\n                id:values.id,\r\n                key:values.id,\r\n                name: values.name,\r\n                description: values.description,\r\n            })\r\n            openSuccessNotification();\r\n\r\n            // const positionInTag = () => {\r\n            //     return tagList.map(item => item.id).indexOf(category.id);\r\n            // }\r\n\r\n            // const index = positionInTag();\r\n\r\n            // const updatedItem = Object.assign({}, tagList[index], { ...updateTagRes });\r\n            // const updateTagList = [...tagList.slice(0, index), updatedItem, ...tagList.slice(index + 1)];\r\n            // setTagList(updateTagList);\r\n\r\n        }\r\n        else {\r\n            openErrorNotification();\r\n        }\r\n\r\n        actions.setSubmitting(false);\r\n        setTagEditVisible(false)\r\n    };\r\n\r\n\r\n    const handleCancel = (e: any) => {\r\n        setTagEditVisible(false);\r\n    };\r\n\r\n\r\n    const getisSubmitButtonDisabled = (values, isValid) => {\r\n        if (!values.name || !values.description || !isValid) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    return (\r\n        <Formik\r\n            onSubmit={(values, actions) => handleSubmit(values, actions)}\r\n            validationSchema={validationSchema}\r\n            validateOnBlur={false}\r\n            enableReinitialize={true}\r\n            initialValues={\r\n                { ...tagDetailData }\r\n            }\r\n        >\r\n            {({\r\n                handleChange,\r\n                values,\r\n                handleSubmit,\r\n                errors,\r\n                isValid,\r\n                isSubmitting,\r\n                touched,\r\n                handleBlur,\r\n                setFieldTouched,\r\n                handleReset,\r\n            }) => (\r\n                    <>\r\n                        <Modal\r\n                            title=\"Admin Edit\"\r\n                            visible={tagEditVisible}\r\n                            onOk={(e: any) => handleSubmit(e)}\r\n                            onCancel={handleCancel}\r\n                            okText='Update'\r\n                            okButtonProps={{\r\n                                loading: isSubmitting,\r\n                                htmlType: \"submit\",\r\n                                disabled: getisSubmitButtonDisabled(values, isValid)\r\n                            }}\r\n                        >\r\n                            <Input\r\n                                label='Title'\r\n                                value={values.name}\r\n                                name='name'\r\n                                isError={(touched.name && errors.name) ||\r\n                                    (!isSubmitting && updateTagState.error['error']['name'])}\r\n\r\n                                errorString={(touched.name && errors.name) ||\r\n                                    (!isSubmitting && updateTagState.error['error']['name'])}\r\n                                onChange={(e: any) => {\r\n                                    handleChange(e);\r\n                                    setFieldTouched('name');\r\n                                }}\r\n                            />\r\n                            <TextArea\r\n                                label='Description'\r\n                                value={values.description}\r\n                                name='description'\r\n                                isError={(touched.description && errors.description) ||\r\n                                    (!isSubmitting && updateTagState.error['error']['description'])}\r\n\r\n                                errorString={(touched.description && errors.description) ||\r\n                                    (!isSubmitting && updateTagState.error['error']['description'])}\r\n                                onChange={(e: any) => {\r\n                                    handleChange(e);\r\n                                    setFieldTouched('description');\r\n                                }}\r\n                            />\r\n                        </Modal>\r\n\r\n                    </>\r\n                )}\r\n        </Formik>\r\n    );\r\n};\r\n\r\n\r\nexport default QuickEdit;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useParams, useHistory } from \"react-router\";\r\n\r\n\r\n// import hooks\r\nimport { useHandleFetch } from \"../../hooks\";\r\n\r\n// import lib\r\nimport {\r\n    FileOutlined,\r\n    InboxOutlined,\r\n    RadiusUpleftOutlined,\r\n    RadiusUprightOutlined,\r\n    RadiusBottomleftOutlined,\r\n    RadiusBottomrightOutlined,\r\n    PlusOutlined,\r\n    DeleteOutlined,\r\n    EditOutlined,\r\n    CheckCircleOutlined\r\n} from '@ant-design/icons';\r\n\r\nimport { Skeleton, Empty, Popconfirm, Upload, message, Switch, Select, Button, notification, Table, Space, Input as CoolInput, Tooltip, Modal } from 'antd';\r\n\r\n\r\n// import components\r\nimport { DataTableSkeleton } from \"../../components/Placeholders\";\r\nimport AdminEdit from \"./AdminEdit\";\r\n\r\n\r\nconst { Column, ColumnGroup } = Table;\r\nconst { Search } = CoolInput;\r\n\r\n\r\ninterface Props {\r\n    productRecord?: any;\r\n}\r\n\r\nconst NewBrandDetail = (props: Props) => {\r\n    const [tagDetailState, handleTagDetailFetch] = useHandleFetch({}, 'adminDetail');\r\n    const [tagProductsState, handleTagProductsFetch] = useHandleFetch({}, 'tagProducts');\r\n    const [tagEditVisible, setTagEditVisible] = useState(false);\r\n    const [tagDetailData,setTagDetailData] = useState({}); \r\n\r\n\r\n    const params = useParams();\r\n    const history = useHistory();\r\n    const tagId = params['id'];\r\n\r\n    useEffect(() => {\r\n\r\n        const getBrandDetail = async () => {\r\n            const tagDetailRes =  await handleTagDetailFetch({\r\n                urlOptions: {\r\n                    placeHolders: {\r\n                        id: tagId\r\n                    }\r\n                }\r\n            }); \r\n\r\n            // @ts-ignore\r\n            if(tagDetailRes){\r\n                console.log('tagDetailRes',tagDetailRes);\r\n                // @ts-ignore\r\n                setTagDetailData(tagDetailRes);\r\n            }\r\n        };\r\n\r\n        getBrandDetail();\r\n\r\n    }, [tagId]);\r\n\r\n    useEffect(() => {\r\n        const getTagProducts = async () => {\r\n            await handleTagProductsFetch({\r\n                urlOptions: {\r\n                    placeHolders: {\r\n                        id: tagId\r\n                    }\r\n                }\r\n            })\r\n        };\r\n\r\n        getTagProducts();\r\n\r\n    }, [tagId]);\r\n\r\n\r\n\r\n\r\n    console.log('tagProductsState', tagProductsState);\r\n\r\n    console.log('brandParams', params);\r\n\r\n\r\n    return (\r\n        <div className='brandDetailContainer'>\r\n            <div className='brandDetailContainer__heading'>\r\n                <h3>\r\n                    Admin Detail\r\n                </h3>\r\n\r\n                {tagDetailState.done && tagDetailData && (Object.keys(tagDetailData).length > 0) && (\r\n                    <>\r\n                        <AdminEdit\r\n                            tagEditVisible={tagEditVisible}\r\n                            setTagEditVisible={setTagEditVisible}\r\n                            tagDetailData={tagDetailData}\r\n                            setTagDetailData={setTagDetailData}\r\n                        />\r\n                        <Button\r\n                            onClick={() => setTagEditVisible(true)}\r\n                            type='link'\r\n                            icon={<EditOutlined />}\r\n                        >\r\n                            Edit\r\n                      </Button>\r\n                    </>\r\n                )}\r\n            </div>\r\n            <Skeleton\r\n                paragraph={{ rows: 2 }}\r\n                loading={tagDetailState.isLoading}>\r\n                {tagDetailState.done && tagDetailData && !(Object.keys(tagDetailData).length > 0) && (\r\n                    <Empty description='No Admin found' image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n                )}\r\n\r\n                {tagDetailState.done && tagDetailData && (Object.keys(tagDetailData).length > 0) && (\r\n                    <div className='brandDetailContainer__header'>\r\n\r\n                        <div className='brandDetailContainer__header-info'>\r\n                            <h2>\r\n                                {tagDetailData['name']}\r\n                            </h2>\r\n                            <h3>\r\n                                {tagDetailData['description']}\r\n                            </h3>\r\n                            {tagDetailData['url'] && (\r\n                                <h3>\r\n                                    URL:\r\n                                    <span>\r\n                                        {tagDetailData['url']}\r\n                                    </span>\r\n\r\n                                </h3>\r\n                            )}\r\n                        </div>\r\n                    </div>\r\n                )}\r\n\r\n            </Skeleton>\r\n\r\n\r\n   \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NewBrandDetail\r\n","import React, { useState } from 'react';\r\nimport { Modal, notification } from 'antd';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport { useHandleFetch } from '../../hooks';\r\nimport { CheckCircleOutlined, PlusOutlined, EditOutlined, DeleteOutlined, EditFilled } from '@ant-design/icons';\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    name: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Bundle Updated',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Something Went Wrong',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n    });\r\n};\r\n\r\n\r\ninterface Props {\r\n    category: any;\r\n    setvisible: any;\r\n    visible: any;\r\n    tagList: any;\r\n    setTagList: any;\r\n}\r\n\r\nconst ProductBundleQuickEdit = ({ category, setvisible, visible, tagList, setTagList }: Props) => {\r\n    const [updateTagState, handleUpdateCategoryFetch] = useHandleFetch({}, 'updateBundle');\r\n\r\n    const handleSubmit = async (values: any, actions: any) => {\r\n\r\n        const updateTagRes = await handleUpdateCategoryFetch({\r\n            urlOptions: {\r\n                placeHolders: {\r\n                    id: values.id,\r\n                }\r\n            },\r\n            body: {\r\n                name: values.name,\r\n                description: values.description,\r\n                price: category.price,\r\n                ...category\r\n            },\r\n        });\r\n\r\n        // @ts-ignore\r\n        if (updateTagRes && updateTagRes.status === 'ok') {\r\n            openSuccessNotification();\r\n\r\n            const positionInTag = () => {\r\n                return tagList.map(item => item.id).indexOf(category.id);\r\n            }\r\n\r\n            const index = positionInTag();\r\n\r\n            // @ts-ignore\r\n            const updatedItem = Object.assign({}, tagList[index], { ...updateTagRes });\r\n            const updateTagList = [...tagList.slice(0, index), updatedItem, ...tagList.slice(index + 1)];\r\n            setTagList(updateTagList);\r\n\r\n        }\r\n        else {\r\n            openErrorNotification();\r\n        }\r\n\r\n        actions.setSubmitting(false);\r\n        setvisible(false)\r\n    };\r\n\r\n\r\n    const handleCancel = (e: any) => {\r\n        setvisible(false);\r\n    };\r\n\r\n\r\n    const getisSubmitButtonDisabled = (values, isValid) => {\r\n        if (!values.name || !isValid) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    return (\r\n        <Formik\r\n            onSubmit={(values, actions) => handleSubmit(values, actions)}\r\n            validationSchema={validationSchema}\r\n            validateOnBlur={false}\r\n            enableReinitialize={true}\r\n            initialValues={\r\n                { ...category }\r\n            }\r\n        >\r\n            {({\r\n                handleChange,\r\n                values,\r\n                handleSubmit,\r\n                errors,\r\n                isValid,\r\n                isSubmitting,\r\n                touched,\r\n                handleBlur,\r\n                setFieldTouched,\r\n                handleReset,\r\n            }) => (\r\n                    <>\r\n                        <Modal\r\n                            title=\"Quick Edit\"\r\n                            visible={visible}\r\n                            onOk={(e: any) => handleSubmit(e)}\r\n                            onCancel={handleCancel}\r\n                            okText='Update'\r\n                            okButtonProps={{\r\n                                loading: isSubmitting,\r\n                                htmlType: \"submit\",\r\n                                disabled: getisSubmitButtonDisabled(values, isValid)\r\n                            }}\r\n                        >\r\n                            <Input\r\n                                label='Title'\r\n                                value={values.name}\r\n                                name='name'\r\n                                isError={(touched.name && errors.name) ||\r\n                                    (!isSubmitting && updateTagState.error['error']['name'])}\r\n\r\n                                errorString={(touched.name && errors.name) ||\r\n                                    (!isSubmitting && updateTagState.error['error']['name'])}\r\n                                onChange={(e: any) => {\r\n                                    handleChange(e);\r\n                                    setFieldTouched('name');\r\n                                }}\r\n                            />\r\n                            <TextArea\r\n                                label='Description'\r\n                                value={values.description}\r\n                                name='description'\r\n                                isError={(touched.description && errors.description) ||\r\n                                    (!isSubmitting && updateTagState.error['error']['description'])}\r\n\r\n                                errorString={(touched.description && errors.description) ||\r\n                                    (!isSubmitting && updateTagState.error['error']['description'])}\r\n                                onChange={(e: any) => {\r\n                                    handleChange(e);\r\n                                    setFieldTouched('description');\r\n                                }}\r\n                            />\r\n                        </Modal>\r\n\r\n                    </>\r\n                )}\r\n        </Formik>\r\n    );\r\n};\r\n\r\n\r\nexport default ProductBundleQuickEdit;\r\n","import React, { useEffect, useState } from 'react';\r\n\r\n\r\n// import hooks\r\nimport { useHandleFetch } from '../../hooks';\r\n\r\n// import components \r\nimport Empty from \"../../components/Empty\";\r\n\r\n\r\n// import libraries \r\nimport { Button, Tag, Input, Spin } from 'antd';\r\nimport {\r\n  PlusOutlined\r\n} from '@ant-design/icons';\r\n\r\n\r\n\r\n\r\nconst { CheckableTag } = Tag;\r\nconst { Search } = Input;\r\n\r\ninterface Props {\r\n  setTagIds?: any;\r\n  selectedTags?: any;\r\n  setSelectedTags?: any;\r\n}\r\n\r\n\r\nconst Tags = ({\r\n  setTagIds,\r\n  setSelectedTags,\r\n  selectedTags\r\n\r\n}: Props) => {\r\n  const [options, setoptions] = useState([]);\r\n  const [selectedOpions, setselectedOptions] = useState([]);\r\n  const [tagState, handleTagListFetch] = useHandleFetch({}, 'tagList');\r\n  const [searchValue, setsearchValue] = useState('');\r\n\r\n\r\n  const handleChange = (tag, checked) => {\r\n    const nextSelectedTags = checked ? [...selectedTags, tag] : selectedTags.filter(t => t !== tag);\r\n    setSelectedTags(nextSelectedTags);\r\n\r\n    if (tagState.done && tagState.data.length > 0 && nextSelectedTags.length > 0) {\r\n      const selectedCategoryIds = nextSelectedTags.map((item) => {\r\n        const selectedcategory = tagState.data.find(\r\n          (cat) => cat.name.toLowerCase() === item.toLowerCase()\r\n        );\r\n        if (selectedcategory) {\r\n          return selectedcategory.id;\r\n        }\r\n      });\r\n      setTagIds(selectedCategoryIds);\r\n    }\r\n  }\r\n\r\n\r\n  useEffect(() => {\r\n    if (tagState.done && tagState.data.length > 0 && selectedTags.length > 0) {\r\n      const selectedCategoryIds = selectedTags.map((item) => {\r\n        const selectedcategory = tagState.data.find(\r\n          (cat) => cat.id === item\r\n        );\r\n        if (selectedcategory) {\r\n          return selectedcategory.name;\r\n        }\r\n      });\r\n      setSelectedTags(selectedCategoryIds);\r\n    }\r\n  }, [tagState]);\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    const setTags = async () => {\r\n      const tagListRes = await handleTagListFetch({\r\n        urlOptions: {\r\n          params: {\r\n            isSubCategory: false\r\n          }\r\n        }\r\n      });\r\n\r\n      // @ts-ignoref\r\n      if (tagListRes && tagListRes.length > 0) {\r\n        // @ts-ignore\r\n        const tagOptions = tagListRes.map((tag) => {\r\n          return tag.name\r\n        });\r\n        setoptions(tagOptions);\r\n      }\r\n\r\n    };\r\n\r\n    setTags();\r\n  }, []);\r\n\r\n\r\n\r\n  // const handleChange = (selectItems) => {\r\n  //   setselectedOptions(selectItems)\r\n\r\n  //   if (tagState.done && tagState.data.length > 0 && selectItems.length > 0) {\r\n  //     const selectedCategoryIds = selectItems.map((item) => {\r\n  //       const selectedcategory = tagState.data.find(\r\n  //         (cat) => cat.name.toLowerCase() === item.toLowerCase()\r\n  //       );\r\n  //       if (selectedcategory) {\r\n  //         return selectedcategory.id;\r\n  //       }\r\n  //     });\r\n  //     setTagIds(selectedCategoryIds);\r\n  //   }\r\n\r\n\r\n  // }\r\n\r\n\r\n  const onSearchChange = (e) => {\r\n    setsearchValue(e.target.value);\r\n\r\n    if (e.target.value === '') {\r\n      if (tagState.data && tagState.data.length > 0) {\r\n        // @ts-ignore\r\n        const categoryNames = tagState.data.map((cat) => cat.name);\r\n        setoptions(categoryNames);\r\n      }\r\n    } else {\r\n      const newOptions =\r\n        options.length > 0\r\n          ? options.filter((option) => {\r\n            return option.toLowerCase().includes(searchValue.toLowerCase());\r\n          })\r\n          : [];\r\n\r\n      setoptions(newOptions);\r\n    }\r\n  };\r\n\r\n\r\n  console.log('selectedTags', selectedTags)\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n\r\n      {tagState.isLoading && (\r\n        <div style={{\r\n          padding: '15px 0',\r\n          width: '100%',\r\n          height: \"100%\",\r\n          display: \"flex\",\r\n          justifyContent: 'center',\r\n          alignItems: 'center'\r\n        }}>\r\n          <Spin />\r\n        </div>\r\n      )}\r\n\r\n\r\n\r\n      {tagState.done && !(tagState.data.length > 0) && (\r\n        <div style={{\r\n          width: '100%',\r\n          height: \"100%\",\r\n          display: \"flex\",\r\n          justifyContent: 'center',\r\n          alignItems: 'center'\r\n        }}>\r\n          <Empty title='No Tag found' height={100} />\r\n        </div>\r\n      )}\r\n\r\n\r\n      {/* \r\n      {tagState.done && tagState.data.length > 0 && options.length > 0 && <Select\r\n        mode=\"multiple\"\r\n        placeholder=\"search tags\"\r\n        value={selectedOpions}\r\n        onChange={handleChange}\r\n        style={{ width: '100%' }}\r\n      >\r\n        {options.filter(o => !selectedOpions.includes(o)).map(item => (\r\n          <Select.Option key={item} value={item}>\r\n            {item}\r\n          </Select.Option>\r\n        ))}\r\n      </Select>} */}\r\n\r\n      {tagState.done && tagState.data.length > 0 && options.length > 0 && (\r\n        <>\r\n          <div className='addProduct__categoryBoxContainer-searchBox'>\r\n            <Search\r\n              width={'90%'}\r\n              style={{\r\n                height: '30px',\r\n                borderRadius: '3px !important',\r\n                borderColor: '#eee !important'\r\n              }}\r\n              size='middle'\r\n              placeholder='top, hot'\r\n              onSearch={(value) => console.log(value)}\r\n              onChange={onSearchChange}\r\n            />\r\n          </div>\r\n\r\n          {options.map(tag => (\r\n            <>\r\n              <CheckableTag\r\n                key={tag}\r\n                checked={selectedTags.indexOf(tag) > -1}\r\n                onChange={checked => handleChange(tag, checked)}\r\n              >\r\n                {tag}\r\n              </CheckableTag>\r\n            </>\r\n          ))}\r\n        </>\r\n      )}\r\n\r\n\r\n\r\n\r\n      {/* \r\n      <div style={{\r\n        marginTop: '15px'\r\n      }}>\r\n\r\n      </div>\r\n      <Button\r\n\r\n        // type=\"primary\"\r\n        className='btnSecondaryPlusOutline'\r\n        icon={<PlusOutlined />}\r\n      >\r\n        Add New\r\n      </Button> */}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Tags\r\n","import React, { useEffect, useState } from 'react';\r\n\r\n\r\n// import hooks\r\nimport { useHandleFetch } from '../../hooks';\r\n\r\n// import components \r\nimport Empty from \"../../components/Empty\";\r\n\r\n\r\n// import libraries \r\nimport { Select, Button, Spin } from 'antd';\r\nimport {\r\n\tPlusOutlined\r\n} from '@ant-design/icons';\r\n\r\n\r\ninterface Props {\r\n\tsetBrandId?: any;\r\n\tbrandId?: any;\r\n\tproductDetailState?: any;\r\n}\r\n\r\nconst { Option } = Select;\r\n\r\nconst Brands = ({ setBrandId, brandId, productDetailState }: Props) => {\r\n\tconst [options, setoptions] = useState([]);\r\n\tconst [selectedBrandId, setSelectedBrandId] = useState('');\r\n\tconst [brandState, handleTagListFetch] = useHandleFetch({}, 'brandList');\r\n\r\n\tfunction onChange(value) {\r\n\t\tsetSelectedBrandId(value);\r\n\t\tsetBrandId(value);\r\n\t\t// console.log(`selected ${value}`);\r\n\t}\r\n\r\n\tfunction onBlur() {\r\n\t\t// console.log('blur');\r\n\t}\r\n\r\n\tfunction onFocus() {\r\n\t\t// console.log('focus');\r\n\t}\r\n\r\n\tfunction onSearch(val) {\r\n\t\t// console.log('search:', val);\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tconst setBrands = async () => {\r\n\t\t\tconst brandListRes = await handleTagListFetch({});\r\n\r\n\t\t\t// @ts-ignore\r\n\t\t\tif (brandListRes && brandListRes.length > 0) {\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\tconst brandOptions = brandListRes.map((brand) => {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tvalue: brand.id,\r\n\t\t\t\t\t\tname: brand.name\r\n\t\t\t\t\t};\r\n\t\t\t\t});\r\n\t\t\t\tsetoptions(brandOptions);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tsetBrands();\r\n\t}, []);\r\n\r\n\treturn (\r\n\t\t<>\r\n\r\n\t\t\t<div></div>\r\n\r\n\t\t\t{brandState.isLoading && (\r\n\t\t\t\t<div style={{\r\n\t\t\t\t\tpadding: '15px 0',\r\n\t\t\t\t\twidth: '100%',\r\n\t\t\t\t\theight: \"100%\",\r\n\t\t\t\t\tdisplay: \"flex\",\r\n\t\t\t\t\tjustifyContent: 'center',\r\n\t\t\t\t\talignItems: 'center'\r\n\t\t\t\t}}>\r\n\t\t\t\t\t<Spin />\r\n\t\t\t\t</div>\r\n\t\t\t)}\r\n\r\n\r\n\r\n\t\t\t{brandState.done && !(brandState.data.length > 0) && (\r\n\t\t\t\t<div style={{\r\n\t\t\t\t\twidth: '100%',\r\n\t\t\t\t\theight: \"100%\",\r\n\t\t\t\t\tdisplay: \"flex\",\r\n\t\t\t\t\tjustifyContent: 'center',\r\n\t\t\t\t\talignItems: 'center'\r\n\t\t\t\t}}>\r\n\t\t\t\t\t<Empty title='No Brand found' height={100} />\r\n\t\t\t\t</div>\r\n\t\t\t)}\r\n\r\n\r\n\t\t\t{brandState.done && brandState.data && brandState.data.length > 0 && options.length > 0 && (\r\n\r\n\t\t\t\t<Select\r\n\t\t\t\t\tshowSearch\r\n\t\t\t\t\tstyle={{ width: '210px', borderRadius: '6px' }}\r\n\t\t\t\t\tplaceholder='Select a Brand'\r\n\t\t\t\t\toptionFilterProp='children'\r\n\t\t\t\t\tonChange={onChange}\r\n\t\t\t\t\tonFocus={onFocus}\r\n\t\t\t\t\tonBlur={onBlur}\r\n\t\t\t\t\tonSearch={onSearch}\r\n\t\t\t\t\tdefaultValue={brandId}\r\n\t\t\t\t\tfilterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n\t\t\t\t>\r\n\t\t\t\t\t{brandState.done &&\r\n\t\t\t\t\t\tbrandState.data.length > 0 &&\r\n\t\t\t\t\t\toptions.map((option) => {\r\n\t\t\t\t\t\t\treturn <Option value={option.value}>{option.name}</Option>;\r\n\t\t\t\t\t\t})}\r\n\t\t\t\t</Select>\r\n\t\t\t)}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\t\t\t{/* \r\n\t\t\t<div style={{\r\n\t\t\t\tmarginTop: '15px'\r\n\t\t\t}}>\r\n\r\n\t\t\t</div>\r\n\t\t\t<Button\r\n\r\n\t\t\t\t// type=\"primary\"\r\n\t\t\t\tclassName='btnSecondaryPlusOutline'\r\n\t\t\t\ticon={<PlusOutlined />}\r\n\t\t\t>\r\n\t\t\t\tAdd New\r\n      </Button> */}\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default Brands;\r\n","import React, { useState, useEffect } from 'react';\r\n\r\n// import components \r\nimport Empty from \"../../components/Empty\";\r\n\r\n// import hoooks\r\nimport { useHandleFetch } from '../../hooks';\r\n\r\n\r\n// import libraries \r\nimport { Input, Tree, Button, Spin } from 'antd';\r\nimport {\r\n\tPlusOutlined\r\n} from '@ant-design/icons';\r\n\r\n\r\nconst { Search } = Input;\r\n\r\n\r\n\r\ninterface Props {\r\n\tsetcategoryIds?: any;\r\n\tcategoryOptions?: any;\r\n\tsetCategoryOptions?: any;\r\n}\r\n\r\n\r\nconst Categories = ({ setcategoryIds, categoryOptions, setCategoryOptions }: Props) => {\r\n\tconst [options, setoptions] = useState([]);\r\n\tconst [searchValue, setsearchValue] = useState('');\r\n\r\n\tconst [categoryState, handleCategoryListFetch] = useHandleFetch({}, 'categorySelectist');\r\n\r\n\tuseEffect(() => {\r\n\t\tconst setCategories = async () => {\r\n\t\t\tconst categoryListRes = await handleCategoryListFetch({});\r\n\r\n\t\t\t// @ts-ignore\r\n\t\t\tif (categoryListRes && categoryListRes.length > 0) {\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\tsetoptions(categoryListRes);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tsetCategories();\r\n\t}, []);\r\n\r\n\tconst onSelect = (selectedKeys, info) => {\r\n\t\t// console.log('selectedKeys', selectedKeys, info);\r\n\t};\r\n\r\n\r\n\tconst onCheck = (checkedKeys, info) => {\r\n\t\tconst checkedIds = checkedKeys.checked || [];\r\n\t\tsetcategoryIds(checkedIds);\r\n\t\tsetCategoryOptions(checkedIds);\r\n\t};\r\n\r\n\tconst onSearchChange = (e) => {\r\n\t\tsetsearchValue(e.target.value);\r\n\r\n\t\tif (e.target.value === '') {\r\n\t\t\tif (categoryState.data && categoryState.data.length > 0) {\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\tconst categoryNames = categoryState.data.map((cat) => cat.name);\r\n\t\t\t\tsetoptions(categoryNames);\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tconst newOptions =\r\n\t\t\t\toptions.length > 0\r\n\t\t\t\t\t? options.filter((option) => {\r\n\t\t\t\t\t\treturn option.toLowerCase().includes(searchValue.toLowerCase());\r\n\t\t\t\t\t})\r\n\t\t\t\t\t: [];\r\n\r\n\t\t\tsetoptions(newOptions);\r\n\t\t}\r\n\t};\r\n\r\n\tconsole.log('categoryState', categoryState);\r\n\tconsole.log('optionsCat', options);\r\n\r\n\r\n\treturn (\r\n\t\t<div className='addProduct__categoryBoxContainer'>\r\n\r\n\t\t\t{categoryState.isLoading && (\r\n\t\t\t\t<div style={{\r\n\t\t\t\t\tpadding: '15px 0',\r\n\t\t\t\t\twidth: '100%',\r\n\t\t\t\t\theight: \"100%\",\r\n\t\t\t\t\tdisplay: \"flex\",\r\n\t\t\t\t\tjustifyContent: 'center',\r\n\t\t\t\t\talignItems: 'center'\r\n\t\t\t\t}}>\r\n\t\t\t\t\t<Spin />\r\n\t\t\t\t</div>\r\n\t\t\t)}\r\n\r\n\r\n\t\t\t{categoryState.done && !(categoryState.data.length > 0) && (\r\n\t\t\t\t<div style={{\r\n\t\t\t\t\twidth: '100%',\r\n\t\t\t\t\theight: \"100%\",\r\n\t\t\t\t\tdisplay: \"flex\",\r\n\t\t\t\t\tjustifyContent: 'center',\r\n\t\t\t\t\talignItems: 'center'\r\n\t\t\t\t}}>\r\n\t\t\t\t\t<Empty title='No category found' height={100} />\r\n\t\t\t\t</div>\r\n\t\t\t)}\r\n\r\n\t\t\t{categoryState.done && categoryState.data.length > 0 && options.length > 0 && (\r\n\t\t\t\t<>\r\n\t\t\t\t\t<div className='addProduct__categoryBoxContainer-searchBox'>\r\n\t\t\t\t\t\t<Search\r\n\t\t\t\t\t\t\twidth={'100%'}\r\n\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\theight: '30px',\r\n\t\t\t\t\t\t\t\tborderRadius: '3px !important',\r\n\t\t\t\t\t\t\t\tborderColor: '#eee !important'\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\tsize='middle'\r\n\t\t\t\t\t\t\tplaceholder='cloths, grocery'\r\n\t\t\t\t\t\t\tonSearch={(value) => console.log(value)}\r\n\t\t\t\t\t\t\tonChange={onSearchChange}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t// marginLeft: \"-20px\",\r\n\t\t\t\t\t}}>\r\n\t\t\t\t\t\t{options.length > 0 && (\r\n\t\t\t\t\t\t\t<Tree\r\n\t\t\t\t\t\t\t\tcheckable\r\n\t\t\t\t\t\t\t\tcheckedKeys={categoryOptions}\r\n\t\t\t\t\t\t\t\tonSelect={onSelect}\r\n\t\t\t\t\t\t\t\tonCheck={onCheck}\r\n\t\t\t\t\t\t\t\ttreeData={options}\r\n\t\t\t\t\t\t\t\tdefaultExpandAll={true}\r\n\t\t\t\t\t\t\t\tcheckStrictly={true}\r\n\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</>\r\n\r\n\t\t\t)}\r\n\t\t\t{/* <div style={{\r\n\t\t\t\tmarginTop: '15px'\r\n\t\t\t}}>\r\n\r\n\t\t\t</div>\r\n\t\t\t<Button\r\n\r\n\t\t\t\t// type=\"primary\"\r\n\t\t\t\tclassName='btnSecondaryPlusOutline'\r\n\t\t\t\ticon={<PlusOutlined />}\r\n\t\t\t>\r\n\t\t\t\tAdd New\r\n      </Button> */}\r\n\r\n\t\t\t{/* <CheckboxGroup options={options} value={checkedList} onChange={onChange} /> */}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Categories;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useHandleFetch } from '../../hooks';\r\nimport { Select, Skeleton } from 'antd';\r\n\r\n\r\ninterface Props {\r\n    setProductIds?: any;\r\n    productIds?: any;\r\n}\r\n\r\n\r\nconst Tags = ({\r\n    setProductIds,\r\n    productIds\r\n}: Props) => {\r\n    const [options, setoptions] = useState([]);\r\n    const [selectedOpions, setselectedOptions] = useState([]);\r\n    const [tagState, handleTagListFetch] = useHandleFetch({}, 'productList');\r\n\r\n    useEffect(() => {\r\n        const setTags = async () => {\r\n            const tagListRes = await handleTagListFetch({\r\n                urlOptions: {\r\n                    params: {\r\n                        isSubCategory: false\r\n                    }\r\n                }\r\n            });\r\n\r\n            // @ts-ignore\r\n            if (tagListRes && tagListRes.length > 0) {\r\n                // @ts-ignore\r\n                const tagOptions = tagListRes.map((tag) => {\r\n                    return tag.name\r\n                });\r\n                setoptions(tagOptions);\r\n            }\r\n\r\n        };\r\n\r\n        setTags();\r\n    }, []);\r\n\r\n\r\n\r\n    const handleChange = (selectItems) => {\r\n        setselectedOptions(selectItems);\r\n\r\n        console.log('selectedProducts', selectItems);\r\n\r\n        if (tagState.done && tagState.data.length > 0 && selectItems.length > 0) {\r\n            const selectedCategoryIds = selectItems.map((item) => {\r\n                const selectedcategory = tagState.data.find(\r\n                    (cat) => cat.name.toLowerCase() === item.toLowerCase()\r\n                );\r\n                if (selectedcategory) {\r\n                    return selectedcategory;\r\n                }\r\n            });\r\n            console.log('selectedCategoryIds', selectedCategoryIds);\r\n            setProductIds(selectedCategoryIds);\r\n        }\r\n        else {\r\n            setProductIds([])\r\n        }\r\n\r\n\r\n    }\r\n\r\n\r\n    // console.log('selectedOpions', selectedOpions);\r\n\r\n\r\n    return (\r\n        <>\r\n\r\n            <Skeleton loading={tagState.isLoading}>\r\n                {tagState.done && tagState.data.length > 0 && <Select\r\n                    mode=\"multiple\"\r\n                    placeholder=\"search products\"\r\n                    value={selectedOpions}\r\n                    onChange={handleChange}\r\n                    style={{ width: '100%' }}\r\n                >\r\n                    {options.filter(o => !selectedOpions.includes(o)).map(item => (\r\n                        <Select.Option key={item} value={item}>\r\n                            {item}\r\n                        </Select.Option>\r\n                    ))}\r\n                </Select>}\r\n            </Skeleton>\r\n\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Tags\r\n","import React from 'react'\r\n\r\n\r\n// import components\r\nimport AddNewOrderProductItem from \"../order/AddNewOrderProductItem\";\r\nimport Empty from \"../../components/Empty\";\r\n\r\nimport {\r\n    ShopOutlined\r\n} from '@ant-design/icons';\r\n\r\n\r\ninterface Props {\r\n    productList?: any;\r\n    setProductList?: any;\r\n}\r\n\r\nconst AddNewOrderSummary = ({\r\n    setProductList,\r\n    productList\r\n}: Props) => {\r\n    return (\r\n        <div\r\n            style={{\r\n                // @ts-ignore\r\n                flexDirection: 'flex'\r\n            }}\r\n            className='addOrderContainer__container-orderSummary'>\r\n            <div className='addOrderContainer__container-productItemContainer'>\r\n                {productList && productList.length > 0 && productList.map(item => {\r\n                    return <AddNewOrderProductItem\r\n                        setProductList={setProductList}\r\n                        productList={productList}\r\n                        productId={item._id}\r\n                        quantity={item.quantity}\r\n                        item={item}\r\n                        variation={item.variation}\r\n                    />;\r\n                })}\r\n\r\n                {!(productList.length > 0) && (\r\n                    <div style={{\r\n                        marginLeft: '32px'\r\n                    }}>\r\n                        <Empty title='No Product Added' height={150} />\r\n                    </div>\r\n                )}\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddNewOrderSummary\r\n","import React, { useState, useEffect } from 'react';\r\n\r\n// import hooks \r\nimport { useHandleFetch } from '../../hooks';\r\n\r\n\r\n// import libraries \r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { message, Tooltip, Modal, Tabs, Empty, Badge } from 'antd';\r\nimport CKEditor from '@ckeditor/ckeditor5-react';\r\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\r\n\r\n\r\nimport {\r\n    DeleteOutlined,\r\n    FileAddOutlined,\r\n    CheckCircleOutlined,\r\n    FileImageFilled,\r\n    PlusOutlined,\r\n    PlusCircleOutlined,\r\n    CloseOutlined,\r\n    CheckOutlined,\r\n    InfoCircleOutlined\r\n} from '@ant-design/icons';\r\n\r\n// import ReactQuill from 'react-quill';\r\n// import 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport MediaLibrary from \"../../components/MediaLibrary\";\r\nimport { openSuccessNotification, openErrorNotification } from \"../../components/Notification\";\r\n\r\n\r\n\r\nimport Tags from \"./Tags\";\r\nimport Brands from \"./Brands\";\r\nimport Categories from \"./Categories\";\r\nimport SelectProducts from \"./SelectProducts\";\r\nimport SelectedProductItems from \"./SelectedProductItems\";\r\n\r\n\r\n\r\nconst { TabPane } = Tabs;\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    name: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\n\r\nconst initialValues = {\r\n    name: \"\",\r\n    url: \"\",\r\n    time: \"\",\r\n    bundlePrice: null,\r\n    startDate: \"\",\r\n    endDate: \"\",\r\n    description: ''\r\n}\r\n\r\n\r\n\r\ninterface Props {\r\n    addNewCategoryVisible: any;\r\n    setAddNewCategoryVisible: any;\r\n    productList?: any;\r\n    setProductList?: any;\r\n}\r\n\r\nconst AddNewProduct = ({ addNewCategoryVisible, setAddNewCategoryVisible, productList: bundleList, setProductList: setBundleList }: Props) => {\r\n\r\n    const [addProductState, handleAddProductFetch] = useHandleFetch({}, 'addPost');\r\n    const [visible, setvisible] = useState(false);\r\n    const [myImages, setmyImages] = useState(false);\r\n    const [myThumbnailImage, setmyThumbnailImage] = useState(false);\r\n    const [isModalOpenForThumbnail, setisModalOpenForThumbnail] = useState(false);\r\n    const [isModalOpenForImages, setisModalOpenForImages] = useState(false);\r\n    const [categoryids, setcategoryIds] = useState([]);\r\n    const [tagIds, setTagIds] = useState([]);\r\n    const [brandId, setBrandId] = useState('');\r\n    const [pricing, setPricing] = useState([]);\r\n    const [coverImageId, setCoverImageId] = useState('');\r\n    const [categoryOptions, setCategoryOptions] = useState([]);\r\n    const [selectedTags, setSelectedTags] = useState([]);\r\n    const [date, setDateFeild] = useState('');\r\n    const [time, setTimeFeild] = useState('');\r\n    const [description, setDescription] = useState('');\r\n    const [body, setBody] = useState('');\r\n    const [productIds, setProductIds] = useState([]);\r\n    const [productList, setProductList] = useState([]);\r\n\r\n\r\n    const [price, setPrice] = useState({\r\n        regular: null,\r\n        offer: null,\r\n    });\r\n\r\n\r\n    const makeEmptyCategoryOptions = (setEmpty) => {\r\n        setEmpty([]);\r\n    }\r\n\r\n    const handleSubmit = async (values: any, actions: any) => {\r\n        // @ts-ignore\r\n        const imagesIds = myImages ? myImages.map(image => {\r\n            return image.id;\r\n        }) : [];\r\n\r\n        const products = productList.length > 0 ? productList.map(product => {\r\n            return {\r\n                _id: product._id,\r\n                variation: product.variation,\r\n                quantity: product.quantity,\r\n            }\r\n        }) : [];\r\n\r\n\r\n        const addProductRes = await handleAddProductFetch({\r\n            body: {\r\n                name: values.name.trim(),\r\n                category: categoryids,\r\n                tags: tagIds,\r\n                brand: [brandId],\r\n                price: price,\r\n                description: description,\r\n                model: values.model,\r\n                unit: values.unit,\r\n                image: imagesIds,\r\n                products\r\n            }\r\n        });\r\n\r\n\r\n        // @ts-ignore\r\n        if (addProductRes && addProductRes.status === 'ok') {\r\n            openSuccessNotification('Bundle Created');\r\n\r\n            setBundleList([...bundleList, {\r\n                id: addProductRes['id'] || '',\r\n                key: addProductRes['id'] || '',\r\n                name: addProductRes['name'] || '',\r\n                description: addProductRes['description'] || '',\r\n                // @ts-ignore\r\n                ...addProductRes\r\n            }])\r\n            setAddNewCategoryVisible(false)\r\n            // @ts-ignore\r\n            setmyImages([]);\r\n            setCoverImageId('');\r\n            setPricing([]);\r\n            setTagIds([]);\r\n            setSelectedTags([]);\r\n            setBrandId(\"\");\r\n            setcategoryIds([]);\r\n            setCategoryOptions([]);\r\n            actions.resetForm();\r\n        }\r\n        else {\r\n            // openErrorNotification();\r\n        }\r\n\r\n        actions.setSubmitting(false);\r\n\r\n\r\n    };\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        if (!addProductState['isLoading']) {\r\n            const error = addProductState['error'];\r\n            if (error['isError'] && Object.keys(error['error']).length > 0) {\r\n\r\n\r\n                const errors =\r\n                    Object.values(error['error']).length > 0\r\n                        ? Object.values(error['error'])\r\n                        : [];\r\n                errors.forEach((err, i) => {\r\n                    if (typeof err === 'string') {\r\n                        openErrorNotification(err)\r\n                    }\r\n                    else if (typeof err === 'object') {\r\n                        if (err && Object.keys(err).length > 0) {\r\n                            const errs = Object.values(err);\r\n                            errs.forEach(err => {\r\n                                openErrorNotification(err)\r\n                            })\r\n\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n        }\r\n    }, [addProductState])\r\n\r\n\r\n\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        if (productIds.length > 0) {\r\n            if (productIds.length > productList.length) {\r\n                const variation = productIds[productIds.length - 1]['pricing'].length > 0 && productIds[productIds.length - 1]['pricing'][0]['_id'];\r\n                console.log('variation', variation)\r\n\r\n                setProductList([...productList, {\r\n                    ...productIds[productIds.length - 1],\r\n                    _id: productIds[productIds.length - 1]['id'],\r\n                    variation: variation,\r\n                    quantity: 1\r\n                }]);\r\n            }\r\n\r\n\r\n            else if (productIds.length < productList.length) {\r\n                console.log('productIds', productIds);\r\n                console.log('productList', productList);\r\n\r\n                const newProductList = productList.filter(item => {\r\n                    let isTrue = false;\r\n                    productIds.forEach(product => {\r\n                        if (product.id === item._id) {\r\n                            isTrue = true;\r\n                        }\r\n                    });\r\n                    return isTrue;\r\n                })\r\n                setProductList(newProductList);\r\n\r\n            }\r\n\r\n        }\r\n        else {\r\n            setProductList([]);\r\n        }\r\n        // console.log('productIds', productIds)\r\n\r\n\r\n    }, [productIds])\r\n\r\n\r\n\r\n\r\n\r\n\r\n    const handleCancel = (e: any) => {\r\n        setAddNewCategoryVisible(false);\r\n    };\r\n\r\n\r\n    const getisSubmitButtonDisabled = (values, isValid) => {\r\n        if (!values.name || !(pricing.length > 0) || !isValid) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n\r\n    const handleImagesDelete = (id) => {\r\n        // @ts-ignore\r\n        const newImages = myImages && myImages.filter(image => {\r\n            return image.id !== id;\r\n        })\r\n\r\n        setmyImages(newImages);\r\n    }\r\n\r\n    const handleDeleteFromSelectedImage = () => {\r\n\r\n    };\r\n\r\n    const handleThumbnailImageDelete = (id) => {\r\n        // @ts-ignore\r\n        const newImages = myThumbnailImage && myThumbnailImage.filter(image => {\r\n            return image.id !== id;\r\n        })\r\n\r\n        if (newImages.length > 0) {\r\n            setmyThumbnailImage(newImages);\r\n\r\n        }\r\n        else setmyThumbnailImage(false);\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    const handleAddPricing = (priceItem) => {\r\n        setPricing([{\r\n            ...priceItem,\r\n            id: pricing.length\r\n        }, ...pricing])\r\n        message.info('Product Pricing Added');\r\n    }\r\n\r\n\r\n    const handleDeletePricing = (id) => {\r\n        const newPricing = pricing.filter(item => item.id !== id);\r\n        setPricing(newPricing);\r\n        message.info('Product Pricing Deleted');\r\n    }\r\n\r\n\r\n\r\n    const isCategoryInValid = () => {\r\n        if (addProductState.error['error']['category'] && !categoryids && categoryids.length) {\r\n            return true;\r\n        }\r\n        else if (categoryids && categoryids.length > 0) {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    const handleDateChange = (date, dateString) => {\r\n        setDateFeild(dateString);\r\n        // console.log('date', date, dateString);\r\n    }\r\n\r\n    const handleTimeChange = (date, dateString) => {\r\n        setTimeFeild(dateString);\r\n        // console.log('date', date, dateString);\r\n    }\r\n\r\n\r\n\r\n\r\n    return (\r\n        <Formik\r\n            onSubmit={(values, actions) => handleSubmit(values, actions)}\r\n            validationSchema={validationSchema}\r\n            validateOnBlur={false}\r\n            enableReinitialize={true}\r\n            initialValues={\r\n                { ...initialValues }\r\n            }\r\n        >\r\n            {({\r\n                handleChange,\r\n                values,\r\n                handleSubmit,\r\n                errors,\r\n                isValid,\r\n                isSubmitting,\r\n                touched,\r\n                handleBlur,\r\n                setFieldTouched,\r\n                handleReset,\r\n            }) => (\r\n                    <>\r\n                        <Modal\r\n                            style={{\r\n                                top: '40px',\r\n\r\n                            }}\r\n                            bodyStyle={{\r\n                                margin: 0,\r\n                                padding: 0,\r\n                            }}\r\n                            width={'70vw'}\r\n                            title=\"Add New Post\"\r\n                            visible={addNewCategoryVisible}\r\n                            onOk={(e: any) => handleSubmit(e)}\r\n                            onCancel={handleCancel}\r\n                            okText='Create'\r\n                            okButtonProps={{\r\n                                loading: isSubmitting,\r\n                                htmlType: \"submit\",\r\n                            }}\r\n                        >\r\n\r\n\r\n                            <section className='addProductGridContainer'>\r\n                                <div className='addProductGridContainer__left'>\r\n                                    <div className='addProductGridContainer__name'>\r\n                                        <div className='addProductGridContainer__item-header'>\r\n                                            <h3>\r\n                                                Post Information\r\n\t\t\t                                </h3>\r\n\r\n                                            <div className={values.name && values.name.length > 2 ? 'checkicon-active' : 'checkicon'}>\r\n                                                <CheckCircleOutlined />\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className='addProductGridContainer__item-body'>\r\n\r\n                                            <Input\r\n                                                label='Title'\r\n                                                value={values.name}\r\n                                                name='name'\r\n                                                isError={(touched.name && errors.name) ||\r\n                                                    (!isSubmitting && addProductState.error['error']['name'])}\r\n\r\n                                                errorString={(touched.name && errors.name) ||\r\n                                                    (!isSubmitting && addProductState.error['error']['name'])}\r\n                                                onChange={(e: any) => {\r\n                                                    handleChange(e);\r\n                                                    setFieldTouched('name');\r\n                                                }}\r\n                                            />\r\n\r\n                                            <Input\r\n                                                label='URL'\r\n                                                value={values.url}\r\n                                                name='url'\r\n                                                isError={(touched.url && errors.url) ||\r\n                                                    (!isSubmitting && addProductState.error['error']['url'])}\r\n\r\n                                                errorString={(touched.url && errors.url) ||\r\n                                                    (!isSubmitting && addProductState.error['error']['url'])}\r\n                                                onChange={(e: any) => {\r\n                                                    handleChange(e);\r\n                                                    setFieldTouched('url');\r\n                                                }}\r\n                                            />\r\n\r\n\r\n                                            <Input\r\n                                                label='Time'\r\n                                                value={values.time}\r\n                                                name='time'\r\n                                                isError={(touched.time && errors.time) ||\r\n                                                    (!isSubmitting && addProductState.error['error']['time'])}\r\n\r\n                                                errorString={(touched.time && errors.time) ||\r\n                                                    (!isSubmitting && addProductState.error['error']['time'])}\r\n                                                onChange={(e: any) => {\r\n                                                    handleChange(e);\r\n                                                    setFieldTouched('time');\r\n                                                }}\r\n                                            />\r\n\r\n                                            <h3 className='inputFieldLabel'>\r\n                                                Body\r\n                                            </h3>\r\n\r\n                                            <div style={{\r\n                                                width: '100%',\r\n                                                maxWidth: '100%'\r\n                                            }}>\r\n                                                <CKEditor\r\n                                                    editor={ClassicEditor}\r\n                                                    data={body}\r\n                                                    onInit={editor => {\r\n                                                        // You can store the \"editor\" and use when it is needed.\r\n                                                        console.log('Editor is ready to use!', editor);\r\n                                                    }}\r\n                                                    onChange={(event, editor) => {\r\n                                                        const data = editor.getData();\r\n                                                        setBody(data);\r\n                                                    }}\r\n                                                    onBlur={(event, editor) => {\r\n                                                        console.log('Blur.', editor);\r\n                                                    }}\r\n                                                    onFocus={(event, editor) => {\r\n                                                        console.log('Focus.', editor);\r\n                                                    }}\r\n                                                />\r\n                                            </div>\r\n\r\n                                            {/* <div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\tdisplay: 'flex',\r\n\t\t\t\t\t\t\t\t\t\t\t\tjustifyContent: 'space-between'\r\n\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\twidth: '48%',\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<DatePicker\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabel='Date'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={handleDateChange} />\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\twidth: '48%'\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<DatePicker\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tdate={date}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\twithTime={true}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder='Select time'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabel='Time'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={handleTimeChange} />\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t</div> */}\r\n                                            <div style={{\r\n                                                marginBottom: '15px'\r\n                                            }}></div>\r\n                                            {/* \r\n\t\t\t\t\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\t\t\t\t\trows={1}\r\n\t\t\t\t\t\t\t\t\t\t\t\tlabel='Venue'\r\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.venue}\r\n\t\t\t\t\t\t\t\t\t\t\t\tname='venue'\r\n\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.venue && errors.venue) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['venue'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.venue && errors.venue) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['venue'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('venue');\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\t\tlabel='Purchase Limit'\r\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.purchaseLimit}\r\n\t\t\t\t\t\t\t\t\t\t\t\ttype='number'\r\n\t\t\t\t\t\t\t\t\t\t\t\tname='purchaseLimit'\r\n\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.purchaseLimit && errors.purchaseLimit) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['purchaseLimit'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.purchaseLimit && errors.purchaseLimit) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['purchaseLimit'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('purchaseLimit');\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t/> */}\r\n\r\n                                      \r\n\r\n\r\n\r\n                                  \r\n\r\n                                        </div>\r\n\r\n\r\n\r\n                                    </div>\r\n\r\n                                    <div className='addProductGridContainer__price'>\r\n                                        <div className='addProductGridContainer__item-header'>\r\n                                            <h3>\r\n                                                Products\r\n\t\t                                    </h3>\r\n\r\n                                            <div className={pricing && pricing.length > 0 ? 'checkicon-active' : 'checkicon'}>\r\n                                                <CheckCircleOutlined />\r\n                                            </div>\r\n                                        </div>\r\n\r\n\r\n                                        <div className='addProductGridContainer__item-body'>\r\n\r\n                                            <h3 className='inputFieldLabel'>\r\n                                                Products\r\n                                            </h3>\r\n                                            <SelectProducts\r\n                                                setProductIds={setProductIds}\r\n                                                productIds={productIds}\r\n                                            />\r\n\r\n                                            <div style={{\r\n                                                marginTop: \"15px\"\r\n                                            }}></div>\r\n\r\n                                            <h3 className='inputFieldLabel'>\r\n                                                Selcted Products\r\n                                            </h3>\r\n\r\n                                            <SelectedProductItems\r\n                                                productList={productList}\r\n                                                setProductList={setProductList}\r\n                                            />\r\n                                        </div>\r\n                                    </div>\r\n\r\n\r\n\r\n\r\n                                    <div className='addProductGridContainer__image'>\r\n\r\n                                        <div className='addProductGridContainer__item-header'>\r\n                                            <h3>\r\n                                                Image\r\n</h3>\r\n\r\n                                            <Tooltip\r\n                                                placement=\"left\" title={'Click on the image to select cover image, By default 1st image is selected as cover'}>\r\n                                                <a href='###'>\r\n                                                    <InfoCircleOutlined />\r\n                                                </a>\r\n                                            </Tooltip>\r\n                                        </div>\r\n                                        <div className='addProductGridContainer__item-body'>\r\n\r\n\r\n\r\n                                            <div className='aboutToUploadImagesContainer'>\r\n                                                {myImages &&\r\n                                                    // @ts-ignore\r\n                                                    myImages.length > 0 && myImages.map((image, index) => {\r\n                                                        return (\r\n                                                            <div className='aboutToUploadImagesContainer__item'>\r\n                                                                <div\r\n                                                                    className='aboutToUploadImagesContainer__item-imgContainer'\r\n                                                                    onClick={() => setCoverImageId(image.id)}\r\n                                                                >\r\n                                                                    <img src={image.cover} alt={image.alt} />\r\n                                                                </div>\r\n\r\n                                                                <span\r\n                                                                    onClick={() => handleImagesDelete(image.id)}\r\n                                                                    className='aboutToUploadImagesContainer__item-remove'>\r\n                                                                    <CloseOutlined />\r\n                                                                </span>\r\n\r\n\r\n                                                                {coverImageId === image.id ? (\r\n                                                                    <span className='aboutToUploadImagesContainer__item-cover'>\r\n                                                                        <CheckOutlined />\r\n                                                                    </span>\r\n                                                                ) : !coverImageId && index === 0 && (\r\n                                                                    <span className='aboutToUploadImagesContainer__item-cover'>\r\n                                                                        <CheckOutlined />\r\n                                                                    </span>\r\n                                                                )}\r\n                                                            </div>\r\n                                                        )\r\n                                                    })}\r\n\r\n\r\n                                                <Tooltip\r\n                                                    title={'Attach images'}>\r\n\r\n                                                    <div\r\n                                                        onClick={() => {\r\n                                                            setvisible(true);\r\n                                                            setisModalOpenForImages(true);\r\n                                                            setisModalOpenForThumbnail(false);\r\n                                                        }}\r\n                                                        className='aboutToUploadImagesContainer__uploadItem'>\r\n                                                        {/* <FileAddOutlined />\r\n            <FileImageTwoTone />\r\n            <FileImageOutlined /> */}\r\n                                                        <FileImageFilled />\r\n                                                        {/* <h5>\r\n             Select From Library\r\n    <     /h5> */}\r\n                                                        <span className='aboutToUploadImagesContainer__uploadItem-plus'>\r\n                                                            <PlusOutlined />\r\n                                                        </span>\r\n                                                    </div>\r\n                                                </Tooltip>\r\n\r\n\r\n\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n\r\n\r\n                                </div>\r\n                                <div className='addProductGridContainer__right'>\r\n                                    <div className='addProductGridContainer__category'>\r\n\r\n                                        <div className='addProductGridContainer-rightItemContainer'>\r\n                                            <div className='addProductGridContainer-rightItemContainer-header'>\r\n                                                <h3>\r\n                                                    Categories\r\n\t\t\t\t</h3>\r\n\r\n                                                <Tooltip\r\n                                                    color='red'\r\n                                                    visible={addProductState.error['error']['category'] && !(categoryids.length > 0)}\r\n                                                    placement=\"left\" title={'Select at least one category'}>\r\n                                                    <div className={!(categoryids.length > 0)\r\n                                                        && !addProductState.error['error']['category'] ? 'checkicon' : addProductState.error['error']['category'] ? 'checkicon-error' : 'checkicon-active'}>\r\n                                                        <CheckCircleOutlined />\r\n                                                    </div>\r\n                                                </Tooltip>\r\n\r\n                                            </div>\r\n                                            <div className='addProductGridContainer-rightItemContainer-body'>\r\n                                                <Categories\r\n                                                    setCategoryOptions={setCategoryOptions}\r\n                                                    categoryOptions={categoryOptions}\r\n                                                    setcategoryIds={setcategoryIds} />\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                    </div>\r\n\r\n                                    <div className='addProductGridContainer__tag'>\r\n                                        <div className='addProductGridContainer-rightItemContainer'>\r\n                                            <div className='addProductGridContainer-rightItemContainer-header'>\r\n                                                <h3>\r\n                                                    Tags\r\n\t\t\t\t</h3>\r\n                                            </div>\r\n                                            <div className='addProductGridContainer-rightItemContainer-body'>\r\n                                                <Tags\r\n                                                    setSelectedTags={setSelectedTags}\r\n                                                    selectedTags={selectedTags}\r\n                                                    setTagIds={setTagIds} />\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                    </div>\r\n                                    <div className='addProductGridContainer__brand'>\r\n                                        <div className='addProductGridContainer-rightItemContainer'>\r\n                                            <div className='addProductGridContainer-rightItemContainer-header'>\r\n                                                <h3>\r\n                                                    Brand\r\n\t\t\t\t</h3>\r\n                                            </div>\r\n                                            <div className='addProductGridContainer-rightItemContainer-body'>\r\n                                                <Brands setBrandId={setBrandId} />\r\n                                            </div>\r\n                                        </div>\r\n\r\n\r\n                                    </div>\r\n\r\n                                </div>\r\n                            </section>\r\n\r\n\r\n                        </Modal>\r\n\r\n                        <MediaLibrary\r\n                            setvisible={setvisible}\r\n                            visible={visible}\r\n                            setmyImages={setmyImages}\r\n                            myImages={myImages}\r\n                            setmyThumbnailImage={setmyThumbnailImage}\r\n                            isModalOpenForThumbnail={isModalOpenForThumbnail}\r\n                            isModalOpenForImages={isModalOpenForImages}\r\n\r\n                        />\r\n                    </>\r\n                )}\r\n        </Formik>\r\n\r\n\r\n\r\n\r\n    );\r\n};\r\n\r\nexport default AddNewProduct;\r\n\r\n\r\n\r\n\r\n/*\r\n\r\n\r\nProduct variation ---->\r\n\r\nPrice [title]\r\n\t[regular input field] [offer inputfield]\r\n\r\nStock [title]\r\n\t[available input field] [minimum inputfield]\r\n\r\ndefault [default can be set to true]\r\n\r\nattributes [title]\r\n\t[add attributes name]\r\n\t\t[add attrubutes value]\r\n\r\n\t[add attributes name]\r\n\t\t[add attrubutes value\r\n\r\n*///","import React, { useState, useEffect } from 'react';\r\n\r\n// import third party ui lib\r\nimport { Empty, Popconfirm, Upload, message, Switch, Select, Button, notification, Table, Space, Input as CoolInput, Tooltip, Modal } from 'antd';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { useHistory } from 'react-router';\r\nimport Moment from 'react-moment';\r\n\r\n\r\n\r\nimport {\r\n    FileOutlined,\r\n    InboxOutlined,\r\n    RadiusUpleftOutlined,\r\n    RadiusUprightOutlined,\r\n    RadiusBottomleftOutlined,\r\n    RadiusBottomrightOutlined,\r\n    PlusOutlined,\r\n    DeleteOutlined,\r\n    EditOutlined,\r\n    CheckCircleOutlined\r\n} from '@ant-design/icons';\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n\r\n\r\n/// import hooks\r\nimport { useFetch, useHandleFetch } from \"../../hooks\";\r\n\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport { DataTableSkeleton } from \"../../components/Placeholders\";\r\nimport ProductBundleQuickEdit from \"./PostQuickEdit\"\r\nimport AddNewProductBundle from \"./AddNewPost\"\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Post Created',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n    notification.error({\r\n        message: message || 'Something Went Wrong',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n    });\r\n};\r\n\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    name: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\n\r\nconst initialValues = {\r\n    name: '',\r\n    description: ''\r\n}\r\n\r\n\r\nconst { Column, ColumnGroup } = Table;\r\nconst { Search } = CoolInput;\r\n\r\n\r\n\r\nconst MyTable = ({ data, setTagList }) => {\r\n    const [visible, setvisible] = useState(false);\r\n    const [activeCategoryForEdit, setactiveCategoryForEdit] = useState(false);\r\n    const [deleteTagState, handleDeleteTagFetch] = useHandleFetch({}, 'deleteBundle');\r\n\r\n    const history = useHistory();\r\n\r\n\r\n    const handleDeleteTag = async (id) => {\r\n        const deleteTagRes = await handleDeleteTagFetch({\r\n            urlOptions: {\r\n                placeHolders: {\r\n                    id,\r\n                }\r\n            }\r\n        });\r\n\r\n\r\n\r\n        // @ts-ignore\r\n        if (deleteTagRes && deleteTagRes.status === 'ok') {\r\n            openSuccessNotification('Deleted Bundle');\r\n            const newtagList = data.filter(item => item.id !== id);\r\n            setTagList(newtagList);\r\n        }\r\n\r\n\r\n    }\r\n\r\n\r\n    const handleOk = (e: any) => {\r\n        setvisible(false);\r\n\r\n    };\r\n\r\n    const handleCancel = (e: any) => {\r\n        setvisible(false);\r\n    };\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <Table\r\n                // expandable={{\r\n                //     expandedRowRender: record => <p style={{ margin: 0 }}>{record.name}</p>,\r\n                //     rowExpandable: record => record.name !== 'Not Expandable',\r\n                //   }}\r\n                // bordered={true}\r\n                size='small'\r\n                // pagination={false}\r\n                dataSource={data}\r\n            >\r\n\r\n                <Column\r\n                    title=\"\"\r\n                    dataIndex=\"cover\"\r\n                    key=\"id\"\r\n                    width={'80px'}\r\n\r\n                    className='classnameofthecolumn'\r\n\r\n                    render={(cover, record: any) => (\r\n                        <>\r\n                            <img\r\n                                onClick={() => {\r\n                                    history.push(`/admin/bundle/${record.id}`)\r\n                                    setactiveCategoryForEdit(record)\r\n                                }}\r\n                                src={cover} alt='cover img' style={{\r\n                                    height: '40px',\r\n                                    width: '40px',\r\n                                    objectFit: \"contain\",\r\n                                    borderRadius: '3px',\r\n                                    cursor: 'pointer'\r\n                                }} />\r\n                        </>\r\n                    )}\r\n                />\r\n\r\n                <Column\r\n                    title=\"Name\"\r\n                    dataIndex=\"name\"\r\n                    key=\"id\"\r\n                    className='classnameofthecolumn'\r\n                    render={(text, record: any) => (\r\n                        <>\r\n\r\n                            <h4\r\n                                onClick={() => {\r\n                                    history.push(`/admin/bundle/${record.id}`)\r\n                                    // setBrandDetailVisible(true);\r\n                                    setactiveCategoryForEdit(record)\r\n                                }}\r\n                                style={{\r\n                                    fontWeight: 400,\r\n                                    color: '#555',\r\n                                    cursor: 'pointer'\r\n                                }}>\r\n                                {text}\r\n                            </h4>\r\n\r\n\r\n                        </>\r\n                    )}\r\n                />\r\n\r\n                <Column\r\n                    title=\"Price\"\r\n                    dataIndex=\"price\"\r\n                    key=\"id\"\r\n                    className='classnameofthecolumn'\r\n\r\n                />\r\n\r\n\r\n                <Column\r\n                    title=\"Product\"\r\n                    dataIndex=\"productCount\"\r\n                    key=\"id\"\r\n                    className='classnameofthecolumn'\r\n                />\r\n\r\n                <Column\r\n                    title=\"Start Date\"\r\n                    dataIndex=\"startDate\"\r\n                    key=\"id\"\r\n                    className='classnameofthecolumn'\r\n                    render={(text, record: any) => (\r\n                        <>\r\n                            <h4\r\n                                style={{\r\n                                    fontWeight: 400,\r\n                                    color: '#555',\r\n                                    cursor: 'pointer'\r\n                                }}>\r\n                                <Moment >\r\n                                    {text}\r\n                                </Moment>\r\n\r\n                            </h4>\r\n                        </>\r\n                    )}\r\n\r\n                />\r\n\r\n                <Column\r\n                    title=\"End Date\"\r\n                    dataIndex=\"endDate\"\r\n                    key=\"id\"\r\n                    className='classnameofthecolumn'\r\n\r\n                />\r\n\r\n                <Column\r\n\r\n                    className='classnameofthecolumn'\r\n                    title=\"\"\r\n                    key=\"action\"\r\n                    align='right'\r\n                    render={(text, record: any) => (\r\n                        <Space size=\"middle\">\r\n                            <a href='##'>\r\n                                <Tooltip placement=\"top\" title='Quick Edit Bundle'>\r\n                                    <span className='iconSize' onClick={() => {\r\n                                        setvisible(true)\r\n                                        setactiveCategoryForEdit(record);\r\n                                    }}>\r\n                                        <EditOutlined />\r\n                                    </span>\r\n                                </Tooltip>\r\n                            </a>\r\n\r\n\r\n\r\n                            <Popconfirm\r\n                                onConfirm={() => handleDeleteTag(record.id)}\r\n                                title=\"Are you sure？\" okText=\"Yes\" cancelText=\"No\">\r\n                                <span\r\n                                    className='iconSize iconSize-danger'\r\n                                >\r\n                                    <DeleteOutlined />\r\n                                </span>\r\n                            </Popconfirm>\r\n                        </Space>\r\n                    )}\r\n                />\r\n            </Table>\r\n\r\n\r\n\r\n\r\n\r\n\r\n            {activeCategoryForEdit && <ProductBundleQuickEdit\r\n                tagList={data}\r\n                setTagList={setTagList}\r\n                setvisible={setvisible}\r\n                visible={visible}\r\n                category={activeCategoryForEdit} />}\r\n        </>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\ninterface Props { }\r\n\r\nconst TagList = ({ }: Props) => {\r\n\r\n\r\n    const [tagList, setTagList] = useState([]);\r\n\r\n    const [tagState, handleTagListFetch] = useHandleFetch({}, 'bundleList');\r\n\r\n\r\n    useEffect(() => {\r\n        const setTags = async () => {\r\n            const tags = await handleTagListFetch({});\r\n            // @ts-ignore\r\n            setTagList(tags);\r\n        }\r\n        setTags();\r\n    }, [])\r\n\r\n\r\n\r\n    const [addNewCategoryVisible, setAddNewCategoryVisible] = useState(false);\r\n\r\n    const getisSubmitButtonDisabled = (values, isValid) => {\r\n        if (!values.name || !isValid) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n\r\n    const handleOkAddNewCategory = (e: any) => {\r\n        setAddNewCategoryVisible(false);\r\n\r\n    };\r\n\r\n    const handleCancelAddNewCategory = (e: any) => {\r\n        setAddNewCategoryVisible(false);\r\n    };\r\n\r\n    const handleSearch = (value) => {\r\n        if (tagState.data.length > 0) {\r\n            const newTagList = tagState.data.filter(item => item.name.toLowerCase().includes(value.toLowerCase()));\r\n            setTagList(newTagList);\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <>\r\n\r\n            <div className='categoryListContainer'>\r\n                <div className='categoryListContainer__header'>\r\n                    <div className='categoryListContainer__header-searchBar-tag'>\r\n                        <h2 className='categoryListContainer__header-title'>\r\n                            Posts\r\n                       </h2>\r\n\r\n                        <Search\r\n                            enterButton={false}\r\n                            className='searchbarClassName'\r\n                            placeholder=\"search posts..\"\r\n                            onSearch={value => handleSearch(value)}\r\n                        />\r\n                    </div>\r\n                    <Button\r\n                        // type=\"primary\"\r\n                        className='btnPrimaryClassNameoutline'\r\n                        icon={<PlusOutlined />}\r\n                        onClick={() => setAddNewCategoryVisible(true)}\r\n                    >\r\n                        Add New\r\n\t\t\t\t\t</Button>\r\n                </div>\r\n                <div className='categoryListContainer__categoryList'>\r\n                    {tagState.done && tagList.length > 0 && <MyTable\r\n                        setTagList={setTagList}\r\n                        data={tagList} />}\r\n                    {tagState.isLoading && <DataTableSkeleton />}\r\n\r\n\r\n                    {tagState.done && !(tagList.length > 0) && (\r\n                        <div style={{\r\n                            marginTop: '200px'\r\n                        }}>\r\n                            <Empty description='No Post found' image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            </div>\r\n\r\n            <AddNewProductBundle\r\n                productList={tagList}\r\n                setProductList={setTagList}\r\n                addNewCategoryVisible={addNewCategoryVisible}\r\n                setAddNewCategoryVisible={setAddNewCategoryVisible}\r\n\r\n            />\r\n        </>\r\n    );\r\n};\r\n\r\nexport default TagList;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useParams, useHistory } from \"react-router\";\r\n\r\n\r\n// import hooks\r\nimport { useHandleFetch } from \"../../hooks\";\r\n\r\n// import lib\r\nimport {\r\n    EditOutlined,\r\n    DeleteOutlined\r\n} from '@ant-design/icons';\r\n\r\nimport { Skeleton, Empty, Button, notification, Table, Space, Input as CoolInput, Tooltip, Modal, Badge } from 'antd';\r\n\r\n\r\n// import moment\r\nimport Moment from \"react-moment\";\r\n\r\n// import components\r\nimport { DataTableSkeleton } from \"../../components/Placeholders\";\r\nimport ProductBundleEdit from \"./PostEdit\";\r\nimport CouponProducts from \"../coupon/CouponProducts\";\r\n\r\n\r\nconst { Column, ColumnGroup } = Table;\r\nconst { Search } = CoolInput;\r\n\r\n\r\ninterface Props {\r\n    productRecord?: any;\r\n}\r\n\r\nconst NewBrandDetail = (props: Props) => {\r\n    const [productDetailState, handleProductDetailFetch] = useHandleFetch({}, 'bundleDetail');\r\n\r\n    const params = useParams();\r\n    const history = useHistory();\r\n    const productId = params['id'];\r\n    const [productEditVisible, setProductEditVisible] = useState(false);\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        const getProductDetail = async () => {\r\n            await handleProductDetailFetch({\r\n                urlOptions: {\r\n                    placeHolders: {\r\n                        id: productId\r\n                    }\r\n                }\r\n            })\r\n        };\r\n\r\n        getProductDetail();\r\n\r\n    }, [productId]);\r\n\r\n\r\n    \r\n\r\n    console.log('productDetailState', productDetailState);\r\n\r\n    console.log('brandParams', params);\r\n\r\n    const getImagesInCollumn = (imgs) => {\r\n        if (!imgs[0]) return false;\r\n        imgs = imgs.map(item => item.cover);\r\n        const columns = {};\r\n\r\n        let localIndex = 0;\r\n        let columnNumber = 0;\r\n\r\n\r\n        imgs.forEach((item, index) => {\r\n            if (localIndex < 3) {\r\n                if (columns[columnNumber]) {\r\n                    columns[columnNumber] = [...columns[columnNumber], item]\r\n                }\r\n                else columns[columnNumber] = [item];\r\n\r\n                localIndex = localIndex + 1;\r\n                columnNumber = columnNumber + 1;\r\n\r\n            }\r\n            else {\r\n                localIndex = 0;\r\n                columnNumber = 0;\r\n                console.log('localIndex', localIndex)\r\n            }\r\n        });\r\n\r\n        return columns;\r\n    }\r\n\r\n\r\n    const row = productDetailState.done && productDetailState.data && productDetailState.data['image'] ? getImagesInCollumn(productDetailState.data['image']) : [];\r\n\r\n\r\n    console.log('bundleDetail', productDetailState);\r\n    return (\r\n        <div className='brandDetailContainer'>\r\n\r\n            <div className='brandDetailContainer__heading'>\r\n                <h3>\r\n                    Bundle Detail\r\n                </h3>\r\n\r\n                {productDetailState.done && productDetailState.data && (Object.keys(productDetailState.data).length > 0) && (\r\n                    <>\r\n                        {/* <ProductBundleEdit\r\n                            productEditVisible={productEditVisible}\r\n                            setProductEditVisible={setProductEditVisible}\r\n                            productDetailData={productDetailState.data}\r\n                        /> */}\r\n                        {/* <Button\r\n                            onClick={() => setProductEditVisible(true)}\r\n                            type='link'\r\n                            icon={<EditOutlined />}\r\n                        >\r\n                            Edit\r\n                      </Button> */}\r\n                    </>\r\n                )}\r\n\r\n            </div>\r\n            <Skeleton\r\n                avatar paragraph={{ rows: 3 }}\r\n                loading={productDetailState.isLoading}>\r\n                {productDetailState.done && productDetailState.data && !(Object.keys(productDetailState.data).length > 0) && (\r\n                    <Empty description='No Product found' image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n                )}\r\n\r\n                {productDetailState.done && productDetailState.data && (Object.keys(productDetailState.data).length > 0) && (\r\n                    <>\r\n                        <div className='brandDetailContainer__header'>\r\n                            <div className='brandDetailContainer__header-coverContainer brandDetailContainer__header-coverContainer-product'>\r\n                                <img src={productDetailState.data['cover'] && productDetailState.data['cover']['cover']} alt=\"\" />\r\n                            </div>\r\n                            <div className='brandDetailContainer__header-info'>\r\n                                <h2>\r\n                                    {productDetailState.data['name']}\r\n                                </h2>\r\n                                <h4>\r\n                                    {productDetailState.data['price']}\r\n                                </h4>\r\n                                <h3>\r\n                                    {productDetailState.data['description']}\r\n                                </h3>\r\n\r\n                                {productDetailState.data['startDate'] && (\r\n                                    <h3>\r\n                                        START DATE:\r\n                                        <span>\r\n                                            {productDetailState.data['url']}\r\n                                        </span>\r\n\r\n                                    </h3>\r\n                                )}\r\n\r\n                                {productDetailState.data['endDate'] && (\r\n                                    <h3>\r\n                                        END DATE:\r\n                                        <span>\r\n                                            {productDetailState.data['url']}\r\n                                        </span>\r\n\r\n                                    </h3>\r\n                                )}\r\n\r\n\r\n\r\n                                {productDetailState.data['url'] && (\r\n                                    <h3>\r\n                                        URL:\r\n                                        <span>\r\n                                            {productDetailState.data['url']}\r\n                                        </span>\r\n\r\n                                    </h3>\r\n                                )}\r\n                                {/* \r\n                                {productDetailState.data['tags'] && productDetailState.data['tags'].length > 0 &&\r\n                                    (<>\r\n                                        <h3>\r\n                                            TAGS:\r\n                                        {productDetailState.data['tags'].map(tag => {\r\n                                            return (\r\n                                                <span>\r\n                                                    {tag.name}\r\n                                                </span>\r\n                                            )\r\n                                        })}\r\n                                        </h3>\r\n\r\n                                    </>)\r\n                                } */}\r\n\r\n                                {productDetailState.data['category'] && productDetailState.data['category'].length > 0 &&\r\n                                    (<>\r\n                                        <h3>\r\n                                            CATEGORIES:\r\n                                        {productDetailState.data['category'].map(cat => {\r\n                                            return (\r\n                                                <span\r\n                                                    onClick={() => history.push(`/admin/category/${cat.id}`)}\r\n\r\n                                                >\r\n                                                    {cat.name}\r\n                                                </span>\r\n                                            )\r\n                                        })}\r\n                                        </h3>\r\n\r\n                                    </>)\r\n                                }\r\n\r\n                            </div>\r\n                        </div>\r\n\r\n\r\n                        {productDetailState.data['icon'] && (\r\n                            <>\r\n                                <div className='brandDetailContainer__heading'>\r\n                                    <h3>\r\n                                        Icon\r\n                            </h3>\r\n                                </div>\r\n\r\n                                <div className='brandDetailContainer__inlineBox'>\r\n                                    <div className='brandDetailContainer__header-coverContainer brandDetailContainer__header-coverContainer-icon'>\r\n                                        <img src={productDetailState.data['icon'] && productDetailState.data['icon']} alt=\"\" />\r\n                                    </div>\r\n\r\n                                </div>\r\n\r\n                                <div style={{\r\n                                    marginBottom: \"25px\"\r\n                                }}></div>\r\n                            </>\r\n                        )}\r\n\r\n\r\n\r\n                        {productDetailState.done && productDetailState.data && Object.keys(productDetailState.data).length > 0 && productDetailState.data['products'] && (\r\n                            <div className='brandDetailContainer__heading'>\r\n                                <h3>\r\n                                    Products\r\n                       </h3>\r\n                            </div>\r\n                        )\r\n                        }\r\n\r\n\r\n                        <div className='brandDetailContainer__body'>\r\n                            {productDetailState.done && productDetailState.data && productDetailState.data['products'] && !(productDetailState.data['products'].length > 0) && (\r\n                                <div style={{\r\n                                    marginTop: '100px'\r\n                                }}>\r\n                                    <Empty description='No Products exists for this Bundle' image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n                                </div>\r\n                            )}\r\n\r\n                            {productDetailState.done && productDetailState.data && Object.keys(productDetailState.data).length > 0 && (\r\n                                <>\r\n                                    {productDetailState.data['products'] && productDetailState.data['products'].length > 0 &&\r\n                                        productDetailState.data['products'].map(product => {\r\n                                            return (\r\n                                                <CouponProducts\r\n                                                    quantity={product.quantity}\r\n                                                    productId={product['_id']} />\r\n                                            )\r\n                                        })}\r\n                                </>\r\n                            )}\r\n                        </div>\r\n\r\n                        {productDetailState.data['image'] && productDetailState.data['image'].length > 0 && (\r\n                            <>\r\n                                <div className='brandDetailContainer__heading'>\r\n                                    <h3>\r\n                                        Image Gallary\r\n                                   </h3>\r\n                                </div>\r\n\r\n                                <div className='brandDetailContainer__imageGallary'>\r\n                                    <div className='imgGallaryContainer'>\r\n\r\n                                        <div className=\"imgGallary-row\">\r\n                                            {row && Object.keys(row).map(column => {\r\n                                                return (\r\n                                                    <div className=\"imgGallary-column\">\r\n                                                        {row[column] && row[column].map(img => {\r\n                                                            return <img src={img} style={{\r\n                                                                width: '100%'\r\n                                                            }} />\r\n                                                        })}\r\n\r\n                                                    </div>\r\n                                                )\r\n                                            })}\r\n\r\n\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                </div>\r\n\r\n                                <div style={{\r\n                                    marginBottom: \"25px\"\r\n                                }}></div>\r\n                            </>\r\n                        )}\r\n\r\n                        {productDetailState.data['brand'] && Object.keys(productDetailState.data['brand']).length > 0 && (\r\n                            <>\r\n                                <div className='brandDetailContainer__heading'>\r\n                                    <h3>\r\n                                        Brand\r\n                                   </h3>\r\n                                </div>\r\n\r\n                                <div\r\n                                    onClick={() => history.push(`/admin/brand/${productDetailState.data['brand']['id']}`)}\r\n\r\n                                    className='brandDetailContainer__brand'>\r\n                                    <div className='brandDetailContainer__brand-coverbox'>\r\n                                        <img src={productDetailState.data['brand']['cover'] && productDetailState.data['brand']['cover']} alt=\"\" />\r\n                                    </div>\r\n                                    <div className='brandDetailContainer__brand-info'>\r\n                                        <h2>\r\n                                            {productDetailState.data['brand']['name']}\r\n                                        </h2>\r\n                                        <h3>\r\n                                            {productDetailState.data['brand']['description']}\r\n                                        </h3>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div style={{\r\n                                    marginBottom: \"25px\"\r\n                                }}></div>\r\n                            </>\r\n                        )}\r\n\r\n\r\n                        {productDetailState.data['primaryCategory'] && Object.keys(productDetailState.data['primaryCategory']).length > 0 && (\r\n                            <>\r\n                                <div className='brandDetailContainer__heading'>\r\n                                    <h3>\r\n                                        Primary Category\r\n                                   </h3>\r\n                                </div>\r\n\r\n                                <div\r\n                                    onClick={() => history.push(`/admin/category/${productDetailState.data['primaryCategory']['id']}`)}\r\n                                    className='brandDetailContainer__brand'>\r\n                                    <div className='brandDetailContainer__brand-coverbox'>\r\n                                        <img src={productDetailState.data['primaryCategory']['cover'] && productDetailState.data['primaryCategory']['cover']} alt=\"\" />\r\n                                    </div>\r\n                                    <div className='brandDetailContainer__brand-info'>\r\n                                        <h2>\r\n                                            {productDetailState.data['primaryCategory']['name']}\r\n                                        </h2>\r\n                                        <h3>\r\n                                            {productDetailState.data['primaryCategory']['description']}\r\n                                        </h3>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div style={{\r\n                                    marginBottom: \"25px\"\r\n                                }}></div>\r\n                            </>\r\n                        )}\r\n\r\n                    </>\r\n\r\n                )}\r\n\r\n            </Skeleton>\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NewBrandDetail\r\n","import React, { useState } from 'react';\r\nimport { Modal, notification } from 'antd';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n// import components\r\nimport Input from '../../../components/Field/Input';\r\nimport TextArea from '../../../components/Field/TextArea';\r\nimport { useHandleFetch } from '../../../hooks';\r\nimport { CheckCircleOutlined, PlusOutlined, EditOutlined, DeleteOutlined, EditFilled } from '@ant-design/icons';\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n\tname: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t\tmessage: message || 'Tag Updated',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t\tmessage: message || 'Something Went Wrong',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n};\r\n\r\n\r\n\r\ninterface Props {\r\n\tcategory: any;\r\n\tsetvisible: any;\r\n\tvisible: any;\r\n\ttagList: any;\r\n\tsetTagList: any;\r\n\r\n}\r\n\r\nconst QuickEdit = ({ category, setvisible, visible, tagList, setTagList }: Props) => {\r\n\tconst [updateTagState, handleUpdateCategoryFetch] = useHandleFetch({}, 'updateTag');\r\n\r\n\tconst handleSubmit = async (values: any, actions: any) => {\r\n\t\tconst updateTagRes = await handleUpdateCategoryFetch({\r\n\t\t\turlOptions: {\r\n\t\t\t\tplaceHolders: {\r\n\t\t\t\t\tid: values.id,\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tbody: {\r\n\t\t\t\tname: values.name,\r\n\t\t\t\tdescription: values.description,\r\n\t\t\t},\r\n\t\t});\r\n\r\n\t\t// @ts-ignore\r\n\t\tif (updateTagRes && updateTagRes.status === 'ok') {\r\n\t\t\topenSuccessNotification();\r\n\r\n\t\t\tconst positionInTag = () => {\r\n\t\t\t\treturn tagList.map(item => item.id).indexOf(category.id);\r\n\t\t\t}\r\n\r\n\t\t\tconst index = positionInTag();\r\n\r\n\t\t\t// @ts-ignore\r\n\t\t\tconst updatedItem = Object.assign({}, tagList[index], { ...updateTagRes });\r\n\t\t\tconst updateTagList = [...tagList.slice(0, index), updatedItem, ...tagList.slice(index + 1)];\r\n\t\t\tsetTagList(updateTagList);\r\n\r\n\t\t}\r\n\t\telse {\r\n\t\t\topenErrorNotification();\r\n\t\t}\r\n\r\n\t\tactions.setSubmitting(false);\r\n\t\tsetvisible(false)\r\n\t};\r\n\r\n\r\n\tconst handleCancel = (e: any) => {\r\n\t\tsetvisible(false);\r\n\t};\r\n\r\n\r\n\tconst getisSubmitButtonDisabled = (values, isValid) => {\r\n\t\tif (!values.name || !isValid) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\treturn (\r\n\t\t<Formik\r\n\t\t\tonSubmit={(values, actions) => handleSubmit(values, actions)}\r\n\t\t\tvalidationSchema={validationSchema}\r\n\t\t\tvalidateOnBlur={false}\r\n\t\t\tenableReinitialize={true}\r\n\t\t\tinitialValues={\r\n\t\t\t\t{ ...category }\r\n\t\t\t}\r\n\t\t>\r\n\t\t\t{({\r\n\t\t\t\thandleChange,\r\n\t\t\t\tvalues,\r\n\t\t\t\thandleSubmit,\r\n\t\t\t\terrors,\r\n\t\t\t\tisValid,\r\n\t\t\t\tisSubmitting,\r\n\t\t\t\ttouched,\r\n\t\t\t\thandleBlur,\r\n\t\t\t\tsetFieldTouched,\r\n\t\t\t\thandleReset,\r\n\t\t\t}) => (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<Modal\r\n\t\t\t\t\t\t\ttitle=\"Quick Edit\"\r\n\t\t\t\t\t\t\tvisible={visible}\r\n\t\t\t\t\t\t\tonOk={(e: any) => handleSubmit(e)}\r\n\t\t\t\t\t\t\tonCancel={handleCancel}\r\n\t\t\t\t\t\t\tokText='Update'\r\n\t\t\t\t\t\t\tokButtonProps={{\r\n\t\t\t\t\t\t\t\tloading: isSubmitting,\r\n\t\t\t\t\t\t\t\thtmlType: \"submit\",\r\n\t\t\t\t\t\t\t\tdisabled: getisSubmitButtonDisabled(values, isValid)\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\tlabel='Title'\r\n\t\t\t\t\t\t\t\tvalue={values.name}\r\n\t\t\t\t\t\t\t\tname='name'\r\n\t\t\t\t\t\t\t\tisError={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateTagState.error['error']['name'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateTagState.error['error']['name'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('name');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\tlabel='Description'\r\n\t\t\t\t\t\t\t\tvalue={values.description}\r\n\t\t\t\t\t\t\t\tname='description'\r\n\t\t\t\t\t\t\t\tisError={(touched.description && errors.description) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateTagState.error['error']['description'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.description && errors.description) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateTagState.error['error']['description'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('description');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</Modal>\r\n\r\n\t\t\t\t\t</>\r\n\t\t\t\t)}\r\n\t\t</Formik>\r\n\t);\r\n};\r\n\r\n\r\nexport default QuickEdit;\r\n","import React, { useState } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n\r\nimport { useHandleFetch } from '../../../hooks';\r\n// import third party ui lib\r\nimport { Upload, message, Switch, Select, Button, notification, Modal, Tooltip } from 'antd';\r\n\r\nimport {\r\n    FileOutlined,\r\n    InboxOutlined,\r\n    FileAddOutlined,\r\n    DeleteOutlined,\r\n    CheckCircleOutlined,\r\n    CloseOutlined,\r\n    CheckOutlined,\r\n    InfoCircleOutlined,\r\n    PlusOutlined,\r\n    FileImageFilled\r\n} from '@ant-design/icons';\r\n\r\n\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../../components/Field/Input';\r\nimport TextArea from '../../../components/Field/TextArea';\r\nimport MediaLibrary from \"../../../components/MediaLibrary\";\r\nimport MetaTags from \"../../../pages/category/MetaTags\";\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    name: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Tag Created',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n    notification.error({\r\n        message: message || 'Something Went Wrong',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst initialValues = {\r\n    name: '',\r\n\tbnName: '',\r\n\tdescription: '',\r\n\tbnDescription: '',\r\n\tmetaTitle: '',\r\n\tbnMetaTitle: '',\r\n\tmetaDescription: '',\r\n\tbnMetaDescription: '',\r\n\tmetaTags: '',\r\n\tbnMetaTags: '',\r\n}\r\n\r\n\r\n\r\ninterface Props {\r\n    addNewCategoryVisible?: any;\r\n    setAddNewCategoryVisible?: any;\r\n    tagList?: any;\r\n    setTagList?: any;\r\n\r\n}\r\n\r\nconst AddNewBrand = ({ addNewCategoryVisible, setAddNewCategoryVisible, tagList, setTagList }: Props) => {\r\n\r\n    const [addTagState, handleAddTagFetch] = useHandleFetch({}, 'addTag');\r\n    const [myImages, setmyImages] = useState(false);\r\n    const [visibleMedia, setvisibleMedia] = useState(false);\r\n    const [coverImageId, setCoverImageId] = useState('');\r\n    const [tags,setTags] = useState([]);\r\n\tconst [bnTags,setBnTags] = useState([]);\r\n\r\n    const handleSubmit = async (values: any, actions: any) => {\r\n        const addTagRes = await handleAddTagFetch({\r\n            urlOptions: {\r\n                placeHolders: {\r\n                    id: values.id,\r\n                }\r\n            },\r\n            body: {\r\n                name: values.name.trim(),\r\n                description: values.description,\r\n                metaTitle: values.metaTitle,\r\n                metaDescription: values.metaDescription,\r\n                metaTags: tags.join(','),\r\n\r\n\r\n                \r\n                bn: {\r\n\t\t\t\t\tmetaTitle: values.bnMetaTitle,\r\n\t\t\t\t\tmetaDescription: values.bnMetaDescription,\r\n\t\t\t\t\tmetaTags: bnTags.join(','),\r\n\t\t\t\t\tname: values.bnName.trim(),\r\n\t\t\t\t\tdescription: values.bnDescription,\r\n\t\t\t\t}\r\n            },\r\n        });\r\n\r\n        // @ts-ignore\r\n        if (addTagRes && addTagRes.status === 'ok') {\r\n            openSuccessNotification();\r\n\r\n            setTagList([...tagList, {\r\n                id: addTagRes['id'] || '',\r\n                key: addTagRes['id'] || '',\r\n                name: addTagRes['name'] || '',\r\n                description: addTagRes['description'] || '',\r\n            }])\r\n            actions.resetForm();\r\n            setAddNewCategoryVisible(false);\r\n        }\r\n        else {\r\n            openErrorNotification();\r\n        }\r\n\r\n\r\n        actions.setSubmitting(false);\r\n\r\n    };\r\n\r\n\r\n    const handleCancel = (e: any) => {\r\n        setAddNewCategoryVisible(false);\r\n    };\r\n\r\n\r\n    const getisSubmitButtonDisabled = (values, isValid) => {\r\n        if (!values.name || !isValid) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n\r\n\r\n\r\n    const handleImagesDelete = (id) => {\r\n        // @ts-ignore\r\n        const newImages = myImages && myImages.filter(image => {\r\n            return image.id !== id;\r\n        })\r\n\r\n        setmyImages(newImages);\r\n    }\r\n\r\n\r\n\r\n\r\n    return (\r\n        <Formik\r\n            onSubmit={(values, actions) => handleSubmit(values, actions)}\r\n            validationSchema={validationSchema}\r\n            validateOnBlur={false}\r\n            enableReinitialize={true}\r\n            initialValues={\r\n                { ...initialValues }\r\n            }\r\n        >\r\n            {({\r\n                handleChange,\r\n                values,\r\n                handleSubmit,\r\n                errors,\r\n                isValid,\r\n                isSubmitting,\r\n                touched,\r\n                handleBlur,\r\n                setFieldTouched,\r\n                handleReset,\r\n            }) => (\r\n                    <>\r\n                        <Modal\r\n                            style={{\r\n                                top: '40px'\r\n                            }}\r\n                            title=\"Add New Tag\"\r\n                            visible={addNewCategoryVisible}\r\n                            onOk={(e: any) => handleSubmit(e)}\r\n                            onCancel={handleCancel}\r\n                            okText='Create'\r\n                            okButtonProps={{\r\n                                loading: isSubmitting,\r\n                                htmlType: \"submit\",\r\n                                disabled: getisSubmitButtonDisabled(values, isValid)\r\n                            }}\r\n                        >\r\n                  \t\t\t<Input\r\n\t\t\t\t\t\t\t\tlabel='Name'\r\n\t\t\t\t\t\t\t\tvalue={values.name}\r\n\t\t\t\t\t\t\t\tname='name'\r\n\t\t\t\t\t\t\t\tplaceHolder={'new,fresh'}\r\n\t\t\t\t\t\t\t\tisError={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addTagState.error['error']['name'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addTagState.error['error']['name'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('name');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\tlabel='BN Name'\r\n\t\t\t\t\t\t\t\tvalue={values.bnName}\r\n\t\t\t\t\t\t\t\tplaceHolder={'নতুন,ফ্রেশ'}\r\n\t\t\t\t\t\t\t\tname='bnName'\r\n\t\t\t\t\t\t\t\tisError={(touched.bnName && errors.bnName) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addTagState.error['error']['bnName'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.bnName && errors.bnName) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addTagState.error['error']['bnName'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('bnName');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\r\n\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\tlabel='Description'\r\n\t\t\t\t\t\t\t\tvalue={values.description}\r\n                                name='description'\r\n                                placeholder={'This tag...'}\r\n\t\t\t\t\t\t\t\tisError={(touched.description && errors.description) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addTagState.error['error']['description'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.description && errors.description) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addTagState.error['error']['description'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('description');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\tlabel='BN Description'\r\n\t\t\t\t\t\t\t\tvalue={values.bnDescription}\r\n\t\t\t\t\t\t\t\tplaceholder={'এই ট্যাগ...'}\r\n\t\t\t\t\t\t\t\tname='bnDescription'\r\n\t\t\t\t\t\t\t\tisError={(touched.bnDescription && errors.bnDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addTagState.error['error']['bnDescription'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.bnDescription && errors.bnDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addTagState.error['error']['bnDescription'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('bnDescription');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n                                \r\n<Input\r\n\t\t\t\t\t\t\t\tlabel='Meta title'\r\n\t\t\t\t\t\t\t\tvalue={values.metaTitle}\r\n\t\t\t\t\t\t\t\tplaceHolder={'category...'}\r\n\t\t\t\t\t\t\t\tname='metaTitle'\r\n\t\t\t\t\t\t\t\tisError={(touched.metaTitle && errors.metaTitle) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addTagState.error['error']['metaTitle'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.metaTitle && errors.metaTitle) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addTagState.error['error']['metaTitle'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('metaTitle')\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\tlabel='BN Meta title'\r\n\t\t\t\t\t\t\t\tvalue={values.bnMetaTitle}\r\n\t\t\t\t\t\t\t\tplaceHolder={'ক্যাটাগড়ি...'}\r\n\t\t\t\t\t\t\t\tname='bnMetaTitle'\r\n\t\t\t\t\t\t\t\tisError={(touched.bnMetaTitle && errors.bnMetaTitle) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addTagState.error['error']['bnMetaTitle'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.bnMetaTitle && errors.bnMetaTitle) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addTagState.error['error']['bnMetaTitle'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('bnMetaTitle');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\tlabel='Meta description'\r\n\t\t\t\t\t\t\t\tvalue={values.metaDescription}\r\n\t\t\t\t\t\t\t\tplaceholder={'meta...'}\r\n\t\t\t\t\t\t\t\tname='metaDescription'\r\n\t\t\t\t\t\t\t\tisError={(touched.metaDescription && errors.metaDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addTagState.error['error']['metaDescription'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.metaDescription && errors.metaDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addTagState.error['error']['metaDescription'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('metaDescription');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\tlabel='BN Meta Description'\r\n\t\t\t\t\t\t\t\tvalue={values.bnMetaDescription}\r\n\t\t\t\t\t\t\t\tplaceholder={'এইয় মেট...'}\r\n\t\t\t\t\t\t\t\tname='bnMetaDescription'\r\n\t\t\t\t\t\t\t\tisError={(touched.bnMetaDescription && errors.bnMetaDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addTagState.error['error']['bnMetaDescription'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.bnMetaDescription && errors.bnMetaDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addTagState.error['error']['bnMetaDescription'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('bnMetaDescription');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\tMeta Tags (grocery,fashion)\r\n\t\t\t\t\t\t\t</h3>\r\n\r\n\t\t\t\t\t\t\t<MetaTags\r\n\t\t\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\t\t\tsetTags={setTags}\r\n\t\t\t\t\t\t\ttags={tags}\r\n\t\t\t\t\t\t\t />\r\n\r\n\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\tmarginTop:'15px'\r\n\t\t\t\t\t\t\t}}></div>\r\n\r\n\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\tBN Meta Tags (মুদিখানা,ফ্যাশন)\r\n\t\t\t\t\t\t\t</h3>\r\n\r\n\t\t\t\t\t\t\t<MetaTags\r\n\t\t\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\t\t\tsetTags={setBnTags}\r\n\t\t\t\t\t\t\ttags={bnTags}\r\n\t\t\t\t\t\t\t />\r\n\r\n                        </Modal>\r\n\r\n                        <MediaLibrary\r\n                            setvisible={setvisibleMedia}\r\n                            visible={visibleMedia}\r\n                            setmyImages={setmyImages}\r\n                            myImages={myImages}\r\n                            isModalOpenForImages={true}\r\n\r\n                        />\r\n                    </>\r\n                )}\r\n        </Formik>\r\n\r\n\r\n\r\n\r\n    );\r\n};\r\n\r\nexport default AddNewBrand;\r\n","import React, { useState, useEffect } from 'react';\r\n\r\n// import third party ui lib\r\nimport { Empty, Popconfirm, Upload, message, Switch, Select, Button, notification, Table, Space, Input as CoolInput, Tooltip, Modal } from 'antd';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { useHistory } from 'react-router';\r\n\r\n\r\n\r\nimport {\r\n\tFileOutlined,\r\n\tInboxOutlined,\r\n\tRadiusUpleftOutlined,\r\n\tRadiusUprightOutlined,\r\n\tRadiusBottomleftOutlined,\r\n\tRadiusBottomrightOutlined,\r\n\tPlusOutlined,\r\n\tDeleteOutlined,\r\n\tEditOutlined,\r\n\tCheckCircleOutlined\r\n} from '@ant-design/icons';\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n\r\n\r\n/// import hooks\r\nimport { useFetch, useHandleFetch } from \"../../../hooks\";\r\n\r\n\r\n// import components\r\nimport Input from '../../../components/Field/Input';\r\nimport TextArea from '../../../components/Field/TextArea';\r\nimport { DataTableSkeleton } from \"../../../components/Placeholders\";\r\nimport QuickEdit from \"./QuickEdit\"\r\nimport AddNewTag from \"./AddNewPostTag\"\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t\tmessage: message || 'Tag Created',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n\tnotification.error({\r\n\t\tmessage: message || 'Something Went Wrong',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n};\r\n\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n\tname: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\n\r\nconst initialValues = {\r\n\tname: '',\r\n\tdescription: ''\r\n}\r\n\r\n\r\nconst { Column, ColumnGroup } = Table;\r\nconst { Search } = CoolInput;\r\n\r\n\r\n\r\nconst MyTable = ({ data, setTagList }) => {\r\n\tconst [visible, setvisible] = useState(false);\r\n\tconst [activeCategoryForEdit, setactiveCategoryForEdit] = useState(false);\r\n\tconst [deleteTagState, handleDeleteTagFetch] = useHandleFetch({}, 'deleteTag');\r\n\r\n\tconst history = useHistory();\r\n\r\n\r\n\tconst handleDeleteTag = async (id) => {\r\n\t\tconst deleteTagRes = await handleDeleteTagFetch({\r\n\t\t\turlOptions: {\r\n\t\t\t\tplaceHolders: {\r\n\t\t\t\t\tid,\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\r\n\r\n\t\t// @ts-ignore\r\n\t\tif (deleteTagRes && deleteTagRes.status === 'ok') {\r\n\t\t\topenSuccessNotification('Deleted Tag');\r\n\t\t\tconst newtagList = data.filter(item => item.id !== id);\r\n\t\t\tsetTagList(newtagList);\r\n\t\t}\r\n\r\n\r\n\t}\r\n\r\n\r\n\tconst handleOk = (e: any) => {\r\n\t\tsetvisible(false);\r\n\r\n\t};\r\n\r\n\tconst handleCancel = (e: any) => {\r\n\t\tsetvisible(false);\r\n\t};\r\n\r\n\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Table\r\n\t\t\t\t// expandable={{\r\n\t\t\t\t//     expandedRowRender: record => <p style={{ margin: 0 }}>{record.name}</p>,\r\n\t\t\t\t//     rowExpandable: record => record.name !== 'Not Expandable',\r\n\t\t\t\t//   }}\r\n\t\t\t\t// bordered={true}\r\n\t\t\t\tsize='small'\r\n\t\t\t\t// pagination={false}\r\n\t\t\t\tdataSource={data}\r\n\t\t\t>\r\n\r\n\t\t\t\t<Column\r\n\t\t\t\t\ttitle=\"Name\"\r\n\t\t\t\t\tdataIndex=\"name\"\r\n\t\t\t\t\tkey=\"id\"\r\n\t\t\t\t\tclassName='classnameofthecolumn'\r\n\t\t\t\t\trender={(text, record: any) => (\r\n\t\t\t\t\t\t<>\r\n\r\n\t\t\t\t\t\t\t<h4\r\n\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\thistory.push(`/admin/tag/${record.id}`)\r\n\t\t\t\t\t\t\t\t\t// setBrandDetailVisible(true);\r\n\t\t\t\t\t\t\t\t\tsetactiveCategoryForEdit(record)\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\tfontWeight: 400,\r\n\t\t\t\t\t\t\t\t\tcolor: '#555',\r\n\t\t\t\t\t\t\t\t\tcursor: 'pointer'\r\n\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t{text}\r\n\t\t\t\t\t\t\t</h4>\r\n\r\n\r\n\t\t\t\t\t\t</>\r\n\t\t\t\t\t)}\r\n\t\t\t\t/>\r\n\r\n\t\t\t\t<Column\r\n\t\t\t\t\ttitle=\"Description\"\r\n\t\t\t\t\tdataIndex=\"description\"\r\n\t\t\t\t\tkey=\"id\"\r\n\t\t\t\t\tclassName='classnameofthecolumn'\r\n\r\n\t\t\t\t/>\r\n\r\n\r\n\t\t\t\t<Column\r\n\t\t\t\t\ttitle=\"Product\"\r\n\t\t\t\t\tdataIndex=\"productCount\"\r\n\t\t\t\t\tkey=\"id\"\r\n\t\t\t\t\tclassName='classnameofthecolumn'\r\n\t\t\t\t/>\r\n\r\n\t\t\t\t<Column\r\n\r\n\t\t\t\t\tclassName='classnameofthecolumn'\r\n\t\t\t\t\ttitle=\"\"\r\n\t\t\t\t\tkey=\"action\"\r\n\t\t\t\t\talign='right'\r\n\t\t\t\t\trender={(text, record: any) => (\r\n\t\t\t\t\t\t<Space size=\"middle\">\r\n\t\t\t\t\t\t\t<a href='##'>\r\n\t\t\t\t\t\t\t\t<Tooltip placement=\"top\" title='Quick Edit Tag'>\r\n\t\t\t\t\t\t\t\t\t<span className='iconSize' onClick={() => {\r\n\t\t\t\t\t\t\t\t\t\tsetvisible(true)\r\n\t\t\t\t\t\t\t\t\t\tsetactiveCategoryForEdit(record);\r\n\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t<EditOutlined />\r\n\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t\t</a>\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t<Popconfirm\r\n\t\t\t\t\t\t\t\tonConfirm={() => handleDeleteTag(record.id)}\r\n\t\t\t\t\t\t\t\ttitle=\"Are you sure？\" okText=\"Yes\" cancelText=\"No\">\r\n\t\t\t\t\t\t\t\t<span\r\n\t\t\t\t\t\t\t\t\tclassName='iconSize iconSize-danger'\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t<DeleteOutlined />\r\n\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t</Popconfirm>\r\n\t\t\t\t\t\t</Space>\r\n\t\t\t\t\t)}\r\n\t\t\t\t/>\r\n\t\t\t</Table>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\t\t\t{activeCategoryForEdit && <QuickEdit\r\n\t\t\t\ttagList={data}\r\n\t\t\t\tsetTagList={setTagList}\r\n\t\t\t\tsetvisible={setvisible}\r\n\t\t\t\tvisible={visible}\r\n\t\t\t\tcategory={activeCategoryForEdit} />}\r\n\t\t</>\r\n\t)\r\n}\r\n\r\n\r\n\r\n\r\ninterface Props { }\r\n\r\nconst TagList = ({ }: Props) => {\r\n\r\n\r\n\tconst [tagList, setTagList] = useState([]);\r\n\r\n\tconst [tagState, handleTagListFetch] = useHandleFetch({}, 'tagList');\r\n\r\n\r\n\tuseEffect(() => {\r\n\t\tconst setTags = async () => {\r\n\t\t\tconst tags = await handleTagListFetch({});\r\n\t\t\t// @ts-ignore\r\n\t\t\tsetTagList(tags);\r\n\t\t}\r\n\t\tsetTags();\r\n\t}, [])\r\n\r\n\r\n\r\n\tconst [addTagState, handleAddTagFetch] = useHandleFetch({}, 'addTag');\r\n\tconst [addNewCategoryVisible, setAddNewCategoryVisible] = useState(false);\r\n\r\n\tconst handleSubmit = async (values: any, actions: any) => {\r\n\t\tconst addTagRes = await handleAddTagFetch({\r\n\t\t\turlOptions: {\r\n\t\t\t\tplaceHolders: {\r\n\t\t\t\t\tid: values.id,\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tbody: {\r\n\t\t\t\tname: values.name.trim(),\r\n\t\t\t\tdescription: values.description,\r\n\t\t\t},\r\n\t\t});\r\n\r\n\t\t// @ts-ignore\r\n\t\tif (addTagRes && addTagRes.status === 'ok') {\r\n\t\t\topenSuccessNotification();\r\n\r\n\t\t\tsetTagList([...tagList, {\r\n\t\t\t\tid: addTagRes['id'] || '',\r\n\t\t\t\tkey: addTagRes['id'] || '',\r\n\t\t\t\tname: addTagRes['name'] || '',\r\n\t\t\t\tdescription: addTagRes['description'] || '',\r\n\t\t\t}])\r\n\t\t\tactions.resetForm();\r\n\t\t}\r\n\t\tactions.setSubmitting(false);\r\n\r\n\t};\r\n\r\n\r\n\r\n\tconst getisSubmitButtonDisabled = (values, isValid) => {\r\n\t\tif (!values.name || !isValid) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\r\n\tconst handleOkAddNewCategory = (e: any) => {\r\n\t\tsetAddNewCategoryVisible(false);\r\n\r\n\t};\r\n\r\n\tconst handleCancelAddNewCategory = (e: any) => {\r\n\t\tsetAddNewCategoryVisible(false);\r\n\t};\r\n\r\n\tconst handleSearch = (value) => {\r\n\t\tif (tagState.data.length > 0) {\r\n\t\t\tconst newTagList = tagState.data.filter(item => item.name.toLowerCase().includes(value.toLowerCase()));\r\n\t\t\tsetTagList(newTagList);\r\n\t\t}\r\n\r\n\t}\r\n\r\n\treturn (\r\n\t\t<>\r\n\r\n\t\t\t<div className='categoryListContainer'>\r\n\t\t\t\t<div className='categoryListContainer__header'>\r\n\t\t\t\t\t<div className='categoryListContainer__header-searchBar-tag'>\r\n\t\t\t\t\t\t<h2 className='categoryListContainer__header-title'>\r\n\t\t\t\t\t\t\tTags\r\n            </h2>\r\n\r\n\r\n\t\t\t\t\t\t<Search\r\n\t\t\t\t\t\t\tenterButton={false}\r\n\t\t\t\t\t\t\tclassName='searchbarClassName'\r\n\t\t\t\t\t\t\tplaceholder=\"search tags..\"\r\n\t\t\t\t\t\t\tonSearch={value => handleSearch(value)}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\t// type=\"primary\"\r\n\t\t\t\t\t\tclassName='btnPrimaryClassNameoutline'\r\n\t\t\t\t\t\ticon={<PlusOutlined />}\r\n\t\t\t\t\t\tonClick={() => setAddNewCategoryVisible(true)}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tAdd New\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className='categoryListContainer__categoryList'>\r\n\t\t\t\t\t{tagState.done && tagList.length > 0 && <MyTable\r\n\t\t\t\t\t\tsetTagList={setTagList}\r\n\t\t\t\t\t\tdata={tagList} />}\r\n\t\t\t\t\t{tagState.isLoading && <DataTableSkeleton />}\r\n\r\n\r\n\t\t\t\t\t{tagState.done && !(tagList.length > 0) && (\r\n\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\tmarginTop: '50px'\r\n\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t<Empty description='No Tags found' image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\r\n\t\t\t<AddNewTag\r\n\t\t\t\ttagList={tagList}\r\n\t\t\t\tsetTagList={setTagList}\r\n\t\t\t\taddNewCategoryVisible={addNewCategoryVisible}\r\n\t\t\t\tsetAddNewCategoryVisible={setAddNewCategoryVisible}\r\n\t\t\t/>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default TagList;\r\n","import React, { useState } from 'react';\r\nimport { Modal, notification } from 'antd';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n// import components\r\nimport Input from '../../../components/Field/Input';\r\nimport TextArea from '../../../components/Field/TextArea';\r\nimport { useHandleFetch } from '../../../hooks';\r\nimport { CheckCircleOutlined, PlusOutlined, EditOutlined, DeleteOutlined, EditFilled } from '@ant-design/icons';\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    name: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n    description: Yup.string().label('Description').required('Description is required')\r\n});\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Tag Updated',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Something Went Wrong',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n    });\r\n};\r\n\r\n\r\ninterface Props {\r\n    tagEditVisible?: any;\r\n    setTagEditVisible?: any;\r\n    tagDetailData?: any;\r\n    setTagDetailData?:any; \r\n}\r\n\r\nconst QuickEdit = ({ tagEditVisible, setTagEditVisible, tagDetailData,setTagDetailData }: Props) => {\r\n    const [updateTagState, handleUpdateCategoryFetch] = useHandleFetch({}, 'updateTag');\r\n\r\n    const handleSubmit = async (values: any, actions: any) => {\r\n        const updateTagRes = await handleUpdateCategoryFetch({\r\n            urlOptions: {\r\n                placeHolders: {\r\n                    id: values.id,\r\n                }\r\n            },\r\n            body: {\r\n                name: values.name,\r\n                description: values.description,\r\n            },\r\n        });\r\n\r\n        // @ts-ignore\r\n        if (updateTagRes && updateTagRes.status === 'ok') {\r\n            setTagDetailData({\r\n                id:values.id,\r\n                key:values.id,\r\n                name: values.name,\r\n                description: values.description,\r\n            })\r\n            console.log('categoryupdateTagRes',updateTagRes);\r\n            openSuccessNotification();\r\n\r\n            // const positionInTag = () => {\r\n            //     return tagList.map(item => item.id).indexOf(category.id);\r\n            // }\r\n\r\n            // const index = positionInTag();\r\n\r\n            // const updatedItem = Object.assign({}, tagList[index], { ...updateTagRes });\r\n            // const updateTagList = [...tagList.slice(0, index), updatedItem, ...tagList.slice(index + 1)];\r\n            // setTagList(updateTagList);\r\n\r\n        }\r\n        else {\r\n            openErrorNotification();\r\n        }\r\n\r\n        actions.setSubmitting(false);\r\n        setTagEditVisible(false)\r\n    };\r\n\r\n\r\n    const handleCancel = (e: any) => {\r\n        setTagEditVisible(false);\r\n    };\r\n\r\n\r\n    const getisSubmitButtonDisabled = (values, isValid) => {\r\n        if (!values.name || !values.description || !isValid) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    return (\r\n        <Formik\r\n            onSubmit={(values, actions) => handleSubmit(values, actions)}\r\n            validationSchema={validationSchema}\r\n            validateOnBlur={false}\r\n            enableReinitialize={true}\r\n            initialValues={\r\n                { ...tagDetailData }\r\n            }\r\n        >\r\n            {({\r\n                handleChange,\r\n                values,\r\n                handleSubmit,\r\n                errors,\r\n                isValid,\r\n                isSubmitting,\r\n                touched,\r\n                handleBlur,\r\n                setFieldTouched,\r\n                handleReset,\r\n            }) => (\r\n                    <>\r\n                        <Modal\r\n                            title=\"Tag Edit\"\r\n                            visible={tagEditVisible}\r\n                            onOk={(e: any) => handleSubmit(e)}\r\n                            onCancel={handleCancel}\r\n                            okText='Update'\r\n                            okButtonProps={{\r\n                                loading: isSubmitting,\r\n                                htmlType: \"submit\",\r\n                                disabled: getisSubmitButtonDisabled(values, isValid)\r\n                            }}\r\n                        >\r\n                            <Input\r\n                                label='Title'\r\n                                value={values.name}\r\n                                name='name'\r\n                                isError={(touched.name && errors.name) ||\r\n                                    (!isSubmitting && updateTagState.error['error']['name'])}\r\n\r\n                                errorString={(touched.name && errors.name) ||\r\n                                    (!isSubmitting && updateTagState.error['error']['name'])}\r\n                                onChange={(e: any) => {\r\n                                    handleChange(e);\r\n                                    setFieldTouched('name');\r\n                                }}\r\n                            />\r\n                            <TextArea\r\n                                label='Description'\r\n                                value={values.description}\r\n                                name='description'\r\n                                isError={(touched.description && errors.description) ||\r\n                                    (!isSubmitting && updateTagState.error['error']['description'])}\r\n\r\n                                errorString={(touched.description && errors.description) ||\r\n                                    (!isSubmitting && updateTagState.error['error']['description'])}\r\n                                onChange={(e: any) => {\r\n                                    handleChange(e);\r\n                                    setFieldTouched('description');\r\n                                }}\r\n                            />\r\n                        </Modal>\r\n\r\n                    </>\r\n                )}\r\n        </Formik>\r\n    );\r\n};\r\n\r\n\r\nexport default QuickEdit;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useParams, useHistory } from \"react-router\";\r\n\r\n\r\n// import hooks\r\nimport { useHandleFetch } from \"../../../hooks\";\r\n\r\n// import lib\r\nimport {\r\n    FileOutlined,\r\n    InboxOutlined,\r\n    RadiusUpleftOutlined,\r\n    RadiusUprightOutlined,\r\n    RadiusBottomleftOutlined,\r\n    RadiusBottomrightOutlined,\r\n    PlusOutlined,\r\n    DeleteOutlined,\r\n    EditOutlined,\r\n    CheckCircleOutlined\r\n} from '@ant-design/icons';\r\n\r\nimport { Skeleton, Empty, Popconfirm, Upload, message, Switch, Select, Button, notification, Table, Space, Input as CoolInput, Tooltip, Modal } from 'antd';\r\n\r\n\r\n// import components\r\nimport { DataTableSkeleton } from \"../../../components/Placeholders\";\r\nimport TagEdit from \"./TagEdit\";\r\n\r\n\r\nconst { Column, ColumnGroup } = Table;\r\nconst { Search } = CoolInput;\r\n\r\n\r\ninterface Props {\r\n    productRecord?: any;\r\n}\r\n\r\nconst NewBrandDetail = (props: Props) => {\r\n    const [tagDetailState, handleTagDetailFetch] = useHandleFetch({}, 'tagDetail');\r\n    const [tagProductsState, handleTagProductsFetch] = useHandleFetch({}, 'tagProducts');\r\n    const [tagEditVisible, setTagEditVisible] = useState(false);\r\n    const [tagDetailData,setTagDetailData] = useState({}); \r\n\r\n\r\n    const params = useParams();\r\n    const history = useHistory();\r\n    const tagId = params['id'];\r\n\r\n    useEffect(() => {\r\n\r\n        const getBrandDetail = async () => {\r\n            const tagDetailRes =  await handleTagDetailFetch({\r\n                urlOptions: {\r\n                    placeHolders: {\r\n                        id: tagId\r\n                    }\r\n                }\r\n            }); \r\n\r\n            // @ts-ignore\r\n            if(tagDetailRes){\r\n                console.log('tagDetailRes',tagDetailRes);\r\n                // @ts-ignore\r\n                setTagDetailData(tagDetailRes);\r\n            }\r\n        };\r\n\r\n        getBrandDetail();\r\n\r\n    }, [tagId]);\r\n\r\n    useEffect(() => {\r\n        const getTagProducts = async () => {\r\n            await handleTagProductsFetch({\r\n                urlOptions: {\r\n                    placeHolders: {\r\n                        id: tagId\r\n                    }\r\n                }\r\n            })\r\n        };\r\n\r\n        getTagProducts();\r\n\r\n    }, [tagId]);\r\n\r\n\r\n\r\n\r\n    console.log('tagProductsState', tagProductsState);\r\n\r\n    console.log('brandParams', params);\r\n\r\n\r\n    return (\r\n        <div className='brandDetailContainer'>\r\n            <div className='brandDetailContainer__heading'>\r\n                <h3>\r\n                    Tag Detail\r\n                </h3>\r\n\r\n                {tagDetailState.done && tagDetailData && (Object.keys(tagDetailData).length > 0) && (\r\n                    <>\r\n                        <TagEdit\r\n                            tagEditVisible={tagEditVisible}\r\n                            setTagEditVisible={setTagEditVisible}\r\n                            tagDetailData={tagDetailData}\r\n                            setTagDetailData={setTagDetailData}\r\n                        />\r\n                        <Button\r\n                            onClick={() => setTagEditVisible(true)}\r\n                            type='link'\r\n                            icon={<EditOutlined />}\r\n                        >\r\n                            Edit\r\n                      </Button>\r\n                    </>\r\n                )}\r\n            </div>\r\n            <Skeleton\r\n                paragraph={{ rows: 2 }}\r\n                loading={tagDetailState.isLoading}>\r\n                {tagDetailState.done && tagDetailData && !(Object.keys(tagDetailData).length > 0) && (\r\n                    <Empty description='No Tag found' image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n                )}\r\n\r\n                {tagDetailState.done && tagDetailData && (Object.keys(tagDetailData).length > 0) && (\r\n                    <div className='brandDetailContainer__header'>\r\n\r\n                        <div className='brandDetailContainer__header-info'>\r\n                            <h2>\r\n                                {tagDetailData['name']}\r\n                            </h2>\r\n                            <h3>\r\n                                {tagDetailData['description']}\r\n                            </h3>\r\n                            {tagDetailData['url'] && (\r\n                                <h3>\r\n                                    URL:\r\n                                    <span>\r\n                                        {tagDetailData['url']}\r\n                                    </span>\r\n\r\n                                </h3>\r\n                            )}\r\n                        </div>\r\n                    </div>\r\n                )}\r\n\r\n            </Skeleton>\r\n\r\n            <div className='brandDetailContainer__heading'>\r\n                <h3>\r\n                    Products\r\n                </h3>\r\n            </div>\r\n            <div className='brandDetailContainer__body'>\r\n                {tagProductsState.isLoading && <DataTableSkeleton />}\r\n                {tagProductsState.done && !(tagProductsState.data.length > 0) && (\r\n                    <div style={{\r\n                        marginTop: '100px'\r\n                    }}>\r\n                        <Empty description='No Products exists for this tag' image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n                    </div>\r\n                )}\r\n\r\n                {tagProductsState.done && tagProductsState.data && tagProductsState.data.length > 0 && (\r\n                    <>\r\n                        <Table\r\n                            style={{\r\n                                paddingTop: '10px',\r\n                                borderRadius: '5px !important',\r\n                                overflow: 'hidden',\r\n                                boxShadow: '0 0.125rem 0.625rem rgba(227, 231, 250, 0.3), 0 0.0625rem 0.125rem rgba(206, 220, 233, 0.4)'\r\n                            }}\r\n                            // expandable={{\r\n                            //     expandedRowRender: record => <p style={{ margin: 0 }}>{record.name}</p>,\r\n                            //     rowExpandable: record => record.name !== 'Not Expandable',\r\n                            //   }}\r\n                            // bordered={true}\r\n                            size='small'\r\n                            // pagination={false}\r\n                            dataSource={tagProductsState.data}\r\n                            tableLayout={'auto'}\r\n                            onHeaderRow={column => {\r\n                                return {\r\n                                    style: {\r\n                                        color: 'red !important'\r\n                                    }\r\n\r\n                                };\r\n                            }}\r\n                        >\r\n                            <Column\r\n                                title=\"\"\r\n                                dataIndex=\"cover\"\r\n                                key=\"id\"\r\n                                width={'80px'}\r\n\r\n                                className='classnameofthecolumn'\r\n\r\n                                render={(cover, record: any) => (\r\n                                    <>\r\n                                        <img\r\n                                            onClick={() => {\r\n                                                history.push(`/admin/product/${record.id}`)\r\n                                            }}\r\n                                            src={cover} alt='cover img' style={{\r\n                                                height: '40px',\r\n                                                width: '40px',\r\n                                                objectFit: \"contain\",\r\n                                                borderRadius: '3px',\r\n                                                cursor: 'pointer'\r\n                                            }} />\r\n\r\n\r\n\r\n\r\n                                    </>\r\n                                )}\r\n                            />\r\n\r\n                            <Column\r\n                                title=\"Name\"\r\n                                dataIndex=\"name\"\r\n                                key=\"id\"\r\n                                className='classnameofthecolumn'\r\n                                render={(text, record: any) => (\r\n                                    <>\r\n                                        <h4\r\n                                            onClick={() => {\r\n                                                history.push(`/admin/product/${record.id}`)\r\n                                            }}\r\n                                            style={{\r\n                                                fontWeight: 400,\r\n                                                color: '#555',\r\n                                                cursor: 'pointer'\r\n\r\n                                            }}>\r\n                                            {text}\r\n                                        </h4>\r\n\r\n\r\n                                    </>\r\n                                )}\r\n\r\n                            />\r\n\r\n                            <Column\r\n                                title=\"Offer Price\"\r\n                                dataIndex=\"offerPrice\"\r\n                                key=\"id\"\r\n                                className='classnameofthecolumn'\r\n\r\n                            />\r\n\r\n\r\n                            <Column\r\n                                title=\"Price\"\r\n                                dataIndex=\"price\"\r\n                                key=\"id\"\r\n                                className='classnameofthecolumn'\r\n\r\n                            />\r\n\r\n\r\n                            <Column\r\n                                title=\"Available\"\r\n                                dataIndex=\"available\"\r\n                                key=\"id\"\r\n                                className='classnameofthecolumn'\r\n\r\n                            />\r\n\r\n\r\n                            <Column\r\n                                title=\"Minimum\"\r\n                                dataIndex=\"minimum\"\r\n                                key=\"id\"\r\n                                className='classnameofthecolumn'\r\n\r\n                            />\r\n\r\n                        </Table>\r\n                    </>\r\n                )}\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NewBrandDetail\r\n","// @ts-nocheck\r\nimport React,{useEffect, useState} from 'react'; \r\nimport { Tag, Input, Tooltip } from 'antd';\r\nimport { PlusOutlined } from '@ant-design/icons';\r\n\r\nclass MetaTags extends React.Component {\r\n  state = {\r\n    tags: [],\r\n    inputVisible: false,\r\n    inputValue: '',\r\n    editInputIndex: -1,\r\n    editInputValue: '',\r\n  };\r\n\r\n\r\n\r\n  handleClose = removedTag => {\r\n    const {setTags,tags} = this.props;\r\n    const localTags = tags.filter(tag => tag !== removedTag);\r\n    setTags(localTags);\r\n  };\r\n\r\n  showInput = () => {\r\n    this.setState({ inputVisible: true }, () => this.input.focus());\r\n  };\r\n\r\n  handleInputChange = e => {\r\n    this.setState({ inputValue: e.target.value });\r\n  };\r\n\r\n  handleInputConfirm = () => {\r\n      console.log('handleInputConfirm',this.props);\r\n    const { inputValue } = this.state;\r\n    let { tags, setTags } = this.props;\r\n    if (inputValue && tags && tags.indexOf(inputValue) === -1) {\r\n      tags = [...tags, inputValue];\r\n    }\r\n    setTags(tags);\r\n    this.setState({\r\n      inputVisible: false,\r\n      inputValue: '',\r\n    });\r\n  };\r\n\r\n  handleEditInputChange = e => {\r\n    this.setState({ editInputValue: e.target.value });\r\n    console.log('tagValue',e.target.value);\r\n  };\r\n\r\n  handleEditInputConfirm = () => {\r\n    this.setState(({ editInputIndex, editInputValue }) => {\r\n      return {\r\n        editInputIndex: -1,\r\n        editInputValue: '',\r\n      };\r\n    });\r\n\r\n    const newTags = [...this.props.tags];\r\n    newTags[editInputIndex] = editInputValue;\r\n    this.props.setTags(newTags);\r\n  };\r\n\r\n  saveInputRef = input => {\r\n    this.input = input;\r\n  };\r\n\r\n  saveEditInputRef = input => {\r\n    this.editInput = input;\r\n  };\r\n\r\n\r\n\r\n  render() {\r\n    const { inputVisible, inputValue, editInputIndex, editInputValue } = this.state;\r\n    const { placeholder,tags } = this.props;\r\n\r\n    return (\r\n      <>\r\n        {tags && tags.length > 0 && tags.map((tag, index) => {\r\n          if (editInputIndex === index) {\r\n            return (\r\n              <Input\r\n                ref={this.saveEditInputRef}\r\n                key={tag}\r\n                size=\"small\"\r\n                placeholder={placeholder}\r\n                className=\"tag-input\"\r\n                value={editInputValue}\r\n                onChange={this.handleEditInputChange}\r\n                onBlur={this.handleEditInputConfirm}\r\n                onPressEnter={this.handleEditInputConfirm}\r\n              />\r\n            );\r\n          }\r\n\r\n          const isLongTag = tag.length > 20;\r\n\r\n          const tagElem = (\r\n            <Tag\r\n              className=\"edit-tag\"\r\n              key={tag}\r\n              closable={index !== 0}\r\n              onClose={() => this.handleClose(tag)}\r\n            >\r\n              <span\r\n                onDoubleClick={e => {\r\n                  if (index !== 0) {\r\n                    this.setState({ editInputIndex: index, editInputValue: tag }, () => {\r\n                      this.editInput.focus();\r\n                    });\r\n                    e.preventDefault();\r\n                  }\r\n                }}\r\n              >\r\n                {isLongTag ? `${tag.slice(0, 20)}...` : tag}\r\n              </span>\r\n            </Tag>\r\n          );\r\n          return isLongTag ? (\r\n            <Tooltip title={tag} key={tag}>\r\n              {tagElem}\r\n            </Tooltip>\r\n          ) : (\r\n            tagElem\r\n          );\r\n        })}\r\n        {inputVisible && (\r\n          <Input\r\n          style={{\r\n            margin: \"10px 0\"\r\n          }}\r\n            ref={this.saveInputRef}\r\n            type=\"text\"\r\n            size=\"small\"\r\n            className=\"tag-input\"\r\n            value={inputValue}\r\n            onChange={this.handleInputChange}\r\n            onBlur={this.handleInputConfirm}\r\n            onPressEnter={this.handleInputConfirm}\r\n          />\r\n        )}\r\n        {!inputVisible && (\r\n          <Tag className=\"site-tag-plus edit-tag\" onClick={this.showInput}>\r\n            <PlusOutlined /> New Value\r\n          </Tag>\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MetaTags","import React, { useState } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n\r\nimport { useHandleFetch } from '../../../hooks';\r\n// import third party ui lib\r\nimport { Switch, Select, notification, Modal, Tooltip, Upload, message } from 'antd';\r\n\r\nimport {\r\n\tDeleteOutlined,\r\n\tFileAddOutlined,\r\n\tFileImageFilled,\r\n\tPlusOutlined,\r\n\tCheckCircleOutlined,\r\n\tCloseOutlined,\r\n\tCheckOutlined,\r\n\tInfoCircleOutlined,\r\n\tLoadingOutlined\r\n} from '@ant-design/icons';\r\n\r\n\r\n\r\n// import ReactQuill from 'react-quill';\r\n// import 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../../components/Field/Input';\r\nimport TextArea from '../../../components/Field/TextArea';\r\nimport MediaLibrary from \"../../../components/MediaLibrary\";\r\nimport MetaTags from \"./MetaTags\";\r\n\r\n\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n\tname: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t\tmessage: message || 'Category Updated',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n\tnotification.error({\r\n\t\tmessage: message || 'Something Went Wrong',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n};\r\n\r\n\r\n\r\n\r\n\r\nconst initialValues = {\r\n\tname: '',\r\n\tbnName: '',\r\n\tdescription: '',\r\n\tbnDescription: '',\r\n\tmetaTitle: '',\r\n\tbnMetaTitle: '',\r\n\tmetaDescription: '',\r\n\tbnMetaDescription: '',\r\n\tmetaTags: '',\r\n\tbnMetaTags: '',\r\n\timage: [],\r\n\turl: '',\r\n\tcover: ''\r\n}\r\n\r\nconst { Option } = Select;\r\n\r\ninterface Props {\r\n\taddNewCategoryVisible: any;\r\n\tsetAddNewCategoryVisible: any;\r\n\tcategoryList?: any;\r\n\tsetcategoryList?: any;\r\n}\r\n\r\nconst AddNewCategory = ({ addNewCategoryVisible, setAddNewCategoryVisible, categoryList, setcategoryList }: Props) => {\r\n\r\n\tconst [addCategoryState, handleAddCategoryFetch] = useHandleFetch({}, 'postAddCategory');\r\n\tconst [visible, setvisible] = useState(false);\r\n\tconst [myImages, setmyImages] = useState(false);\r\n\tconst [myThumbnailImage, setmyThumbnailImage] = useState(false);\r\n\tconst [isparentCategoryChecked, setisparentcategoryChecked] = useState(true);\r\n\tconst [isModalOpenForThumbnail, setisModalOpenForThumbnail] = useState(false);\r\n\tconst [isModalOpenForImages, setisModalOpenForImages] = useState(false);\r\n\tconst [coverImageId, setCoverImageId] = useState('');\r\n\tconst [selectedParentId, setselectedParentId] = useState('');\r\n\tconst [imageUrl, setImageUrl] = useState('');\r\n\tconst [loadingThumnail, setLoadingThumbnail] = useState(false);\r\n\tconst [imageFile, setImagefile] = useState('');\r\n\tconst [tags,setTags] = useState([]);\r\n\tconst [bnTags,setBnTags] = useState([]);\r\n\r\n\r\n\tconst handleSubmit = async (values: any, actions: any) => {\r\n\t\t// @ts-ignore\r\n\t\tconst imagesIds = myImages ? myImages.map(image => {\r\n\t\t\treturn image.id;\r\n\t\t}) : [];\r\n\r\n\t\tconst formData = new FormData();\r\n\r\n\t\tformData.append(\"name\", values.name.trim());\r\n\t\tformData.append(\"description\", values.description);\r\n\t\tformData.append(\"image\", JSON.stringify(imagesIds));\r\n\t\tformData.append(\"cover\", coverImageId || imagesIds[0] ? imagesIds[0] : '');\r\n\t\tformData.append(\"parent\", selectedParentId);\r\n\t\tformData.append('icon', imageFile)\r\n\r\n\r\n\r\n\t\tconst addCategoryRes = await handleAddCategoryFetch({\r\n\t\t\tbody: {\r\n\t\t\t\tname: values.name.trim(),\r\n\t\t\t\tdescription: values.description,\r\n\t\t\t\timage: imagesIds,\r\n\t\t\t\tcover: coverImageId || imagesIds[0] ? imagesIds[0] : '',\r\n\t\t\t\tparent: selectedParentId,\r\n\t\t\t\ticon: imageFile,\r\n\t\t\t\tmetaTitle: values.metaTitle,\r\n\t\t\t\tmetaDescription: values.metaDescription,\r\n\t\t\t\tmetaTags: tags.join(','),\r\n\t\t\t\tbn: {\r\n\t\t\t\t\tmetaTitle: values.bnMetaTitle,\r\n\t\t\t\t\tmetaDescription: values.bnMetaDescription,\r\n\t\t\t\t\tmetaTags: bnTags.join(','),\r\n\t\t\t\t\tname: values.bnName.trim(),\r\n\t\t\t\t\tdescription: values.bnDescription,\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t});\r\n\r\n\r\n\t\t// @ts-ignore\r\n\t\tif (addCategoryRes && addCategoryRes.status === 'ok') {\r\n\t\t\topenSuccessNotification('Category Created!');\r\n\t\t\tsetAddNewCategoryVisible(false)\r\n\r\n\t\t\tsetcategoryList([...categoryList, {\r\n\t\t\t\tid: addCategoryRes['_id'] || '',\r\n\t\t\t\tkey: addCategoryRes['_id'] || '',\r\n\t\t\t\tname: addCategoryRes['name'] || '',\r\n\t\t\t\tdescription: addCategoryRes['description'] || '',\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\t...addCategoryRes\r\n\t\t\t}])\r\n\r\n\t\t\tactions.resetForm();\r\n\t\t\t// @ts-ignore\r\n\t\t\tsetmyImages([]);\r\n\t\t\tsetCoverImageId('')\r\n\t\t\tsetselectedParentId('')\r\n\t\t\tsetisparentcategoryChecked(true);\r\n\t\t\tsetImageUrl('');\r\n\t\t}\r\n\t\telse {\r\n\t\t\topenErrorNotification();\r\n\t\t}\r\n\r\n\r\n\r\n\r\n\t\tactions.setSubmitting(false);\r\n\t};\r\n\r\n\r\n\r\n\tconst onSwitchChange = (checked: any) => {\r\n\t\tsetisparentcategoryChecked(checked)\r\n\t};\r\n\r\n\r\n\tconst handleCancel = (e: any) => {\r\n\t\tsetAddNewCategoryVisible(false);\r\n\t};\r\n\r\n\r\n\tconst getisSubmitButtonDisabled = (values, isValid) => {\r\n\t\tif (!values.name || !isValid) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\r\n\tconst handleImagesDelete = (id) => {\r\n\t\t// @ts-ignore\r\n\t\tconst newImages = myImages && myImages.filter(image => {\r\n\t\t\treturn image.id !== id;\r\n\t\t})\r\n\r\n\t\tsetmyImages(newImages);\r\n\t}\r\n\r\n\r\n\tconst handleThumbnailImageDelete = (id) => {\r\n\t\t// @ts-ignore\r\n\t\tconst newImages = myThumbnailImage && myThumbnailImage.filter(image => {\r\n\t\t\treturn image.id !== id;\r\n\t\t})\r\n\r\n\t\tif (newImages.length > 0) {\r\n\t\t\tsetmyThumbnailImage(newImages);\r\n\r\n\t\t}\r\n\t\telse setmyThumbnailImage(false);\r\n\t}\r\n\r\n\r\n\tconst onChangeSelect = (value) => {\r\n\t\tsetselectedParentId(value);\r\n\t}\r\n\r\n\r\n\r\n\tfunction getBase64(img, callback) {\r\n\t\tconst reader = new FileReader();\r\n\t\treader.addEventListener('load', () => callback(reader.result));\r\n\t\treader.readAsDataURL(img);\r\n\t}\r\n\r\n\r\n\tfunction beforeUpload(file) {\r\n\t\tconst isJpgOrPng = file.type === 'image/jpeg' || file.type === 'image/png';\r\n\t\tif (!isJpgOrPng) {\r\n\t\t\tmessage.error('You can only upload JPG/PNG file!');\r\n\t\t}\r\n\t\tconst isLt2M = file.size / 1024 / 1024 < 2;\r\n\t\tif (!isLt2M) {\r\n\t\t\tmessage.error('Image must smaller than 2MB!');\r\n\t\t}\r\n\r\n\r\n\t\tgetBase64(file, imageUrl => {\r\n\t\t\tsetImageUrl(imageUrl)\r\n\t\t\tsetImagefile(file)\r\n\t\t\tsetLoadingThumbnail(false)\r\n\t\t})\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\r\n\tconst uploadButton = (\r\n\t\t<div>\r\n\t\t\t{loadingThumnail ? <LoadingOutlined /> : <PlusOutlined />}\r\n\t\t\t<div className=\"ant-upload-text\">Upload</div>\r\n\t\t</div>\r\n\t);\r\n\r\n\r\n\tconsole.log('addnewCategoryTags',tags);\r\n\r\n\treturn (\r\n\t\t<Formik\r\n\t\t\tonSubmit={(values, actions) => handleSubmit(values, actions)}\r\n\t\t\tvalidationSchema={validationSchema}\r\n\t\t\tvalidateOnBlur={false}\r\n\t\t\tenableReinitialize={true}\r\n\t\t\tinitialValues={\r\n\t\t\t\t{ ...initialValues }\r\n\t\t\t}\r\n\t\t>\r\n\t\t\t{({\r\n\t\t\t\thandleChange,\r\n\t\t\t\tvalues,\r\n\t\t\t\thandleSubmit,\r\n\t\t\t\terrors,\r\n\t\t\t\tisValid,\r\n\t\t\t\tisSubmitting,\r\n\t\t\t\ttouched,\r\n\t\t\t\thandleBlur,\r\n\t\t\t\tsetFieldTouched,\r\n\t\t\t\thandleReset,\r\n\t\t\t}) => (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<Modal\r\n\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\ttop: '40px'\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\ttitle=\"Add New Category\"\r\n\t\t\t\t\t\t\tvisible={addNewCategoryVisible}\r\n\t\t\t\t\t\t\tonOk={(e: any) => handleSubmit(e)}\r\n\t\t\t\t\t\t\tonCancel={handleCancel}\r\n\t\t\t\t\t\t\tokText='Create'\r\n\t\t\t\t\t\t\tokButtonProps={{\r\n\t\t\t\t\t\t\t\tloading: isSubmitting,\r\n\t\t\t\t\t\t\t\thtmlType: \"submit\",\r\n\t\t\t\t\t\t\t\tdisabled: getisSubmitButtonDisabled(values, isValid)\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\tlabel='Name'\r\n\t\t\t\t\t\t\t\tvalue={values.name}\r\n\t\t\t\t\t\t\t\tplaceHolder={'grocery,fashion'}\r\n\t\t\t\t\t\t\t\tname='name'\r\n\t\t\t\t\t\t\t\tisError={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['name'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['name'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('name');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\tlabel='BN Name'\r\n\t\t\t\t\t\t\t\tvalue={values.bnName}\r\n\t\t\t\t\t\t\t\tplaceHolder={'মুদিখানা,ফ্যাশন'}\r\n\t\t\t\t\t\t\t\tname='bnName'\r\n\t\t\t\t\t\t\t\tisError={(touched.bnName && errors.bnName) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['bnName'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.bnName && errors.bnName) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['bnName'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('bnName');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\tlabel='Description'\r\n\t\t\t\t\t\t\t\tvalue={values.description}\r\n\t\t\t\t\t\t\t\tplaceholder={'This category...'}\r\n\t\t\t\t\t\t\t\tname='description'\r\n\t\t\t\t\t\t\t\tisError={(touched.description && errors.description) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['description'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.description && errors.description) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['description'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('description');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\tlabel='BN Description'\r\n\t\t\t\t\t\t\t\tvalue={values.bnDescription}\r\n\t\t\t\t\t\t\t\tplaceholder={'এই ক্যাটাগড়ি...'}\r\n\t\t\t\t\t\t\t\tname='bnDescription'\r\n\t\t\t\t\t\t\t\tisError={(touched.bnDescription && errors.bnDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['bnDescription'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.bnDescription && errors.bnDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['bnDescription'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('bnDescription');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\tmarginTop: '25px'\r\n\t\t\t\t\t\t\t}}></div>\r\n\r\n\t\t\t\t\t\t\t<div className='switchLabelContainer'>\r\n\t\t\t\t\t\t\t\t<Switch\r\n\t\t\t\t\t\t\t\t\tchecked={isparentCategoryChecked}\r\n\t\t\t\t\t\t\t\t\tdefaultChecked onChange={onSwitchChange} />\r\n\t\t\t\t\t\t\t\t<div className='switchLabelContainer-textContainer'>\r\n\t\t\t\t\t\t\t\t\t<h5 >Top level Category</h5>\r\n\t\t\t\t\t\t\t\t\t<h5 className='switchLabelContainer-desc'>Disable to select a Parent Category</h5>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t{!isparentCategoryChecked && (\r\n\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>Parent Category</h3>\r\n\t\t\t\t\t\t\t\t\t<Select\r\n\t\t\t\t\t\t\t\t\t\tshowSearch\r\n\t\t\t\t\t\t\t\t\t\tstyle={{ width: 300 }}\r\n\t\t\t\t\t\t\t\t\t\tplaceholder='Select a Parent Category'\r\n\t\t\t\t\t\t\t\t\t\toptionFilterProp='children'\r\n\t\t\t\t\t\t\t\t\t\tonChange={onChangeSelect}\r\n\t\t\t\t\t\t\t\t\t\t// onFocus={onFocus}\r\n\t\t\t\t\t\t\t\t\t\t// onBlur={onBlur}\r\n\t\t\t\t\t\t\t\t\t\t// onSearch={onSearch}\r\n\t\t\t\t\t\t\t\t\t\tfilterOption={(input, option: any) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t{categoryList.length > 0 && categoryList.map(category => {\r\n\t\t\t\t\t\t\t\t\t\t\treturn <Option value={category.id}>{category.name}</Option>\r\n\t\t\t\t\t\t\t\t\t\t})}\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t</Select>\r\n\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t)}\r\n\r\n\r\n\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\tmarginTop: '20px'\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\r\n\t\t\t\t\t\t\t<div className='addproductSection-left-header' >\r\n\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>Icon </h3>\r\n\t\t\t\t\t\t\t\t<Tooltip\r\n\t\t\t\t\t\t\t\t\tplacement=\"left\" title={'Add Icon image for this category'}>\r\n\t\t\t\t\t\t\t\t\t<a href='###'>\r\n\t\t\t\t\t\t\t\t\t\t<InfoCircleOutlined />\r\n\t\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t<Upload\r\n\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\tborderRadius: \"8px\"\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\tname=\"avatar\"\r\n\t\t\t\t\t\t\t\tlistType=\"picture-card\"\r\n\t\t\t\t\t\t\t\tclassName=\"avatar-uploader\"\r\n\t\t\t\t\t\t\t\tshowUploadList={false}\r\n\t\t\t\t\t\t\t\tbeforeUpload={beforeUpload}\r\n\t\t\t\t\t\t\t\tmultiple={false}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t{imageUrl ? <img src={imageUrl} alt=\"avatar\" style={{ width: '100%' }} /> : uploadButton}\r\n\t\t\t\t\t\t\t</Upload>\r\n\r\n\r\n\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\tmarginTop: '10px'\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\r\n\t\t\t\t\t\t\t<div className='addproductSection-left-header' style={{\r\n\t\t\t\t\t\t\t\tmarginBottom: '-5px'\r\n\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>Images</h3>\r\n\t\t\t\t\t\t\t\t<Tooltip\r\n\t\t\t\t\t\t\t\t\tplacement=\"left\" title={'Click on the image to select cover image, By default 1st image is selected as cover'}>\r\n\t\t\t\t\t\t\t\t\t<a href='###'>\r\n\t\t\t\t\t\t\t\t\t\t<InfoCircleOutlined />\r\n\t\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className='aboutToUploadImagesContainer'>\r\n\t\t\t\t\t\t\t\t{myImages &&\r\n\t\t\t\t\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\t\t\t\t\tmyImages.length > 0 && myImages.map((image, index) => {\r\n\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='aboutToUploadImagesContainer__item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='aboutToUploadImagesContainer__item-imgContainer'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => setCoverImageId(image.id)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<img src={image.cover} alt={image.alt} />\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => handleImagesDelete(image.id)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='aboutToUploadImagesContainer__item-remove'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<CloseOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t{coverImageId === image.id ? (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<span className='aboutToUploadImagesContainer__item-cover'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<CheckOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t) : !coverImageId && index === 0 && (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<span className='aboutToUploadImagesContainer__item-cover'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<CheckOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t})}\r\n\r\n\r\n\t\t\t\t\t\t\t\t<Tooltip\r\n\t\t\t\t\t\t\t\t\ttitle={'Attach images'}>\r\n\r\n\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\t\t\tsetvisible(true);\r\n\t\t\t\t\t\t\t\t\t\t\tsetisModalOpenForImages(true);\r\n\t\t\t\t\t\t\t\t\t\t\tsetisModalOpenForThumbnail(false);\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\tclassName='aboutToUploadImagesContainer__uploadItem'>\r\n\t\t\t\t\t\t\t\t\t\t{/* <FileAddOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FileImageTwoTone />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FileImageOutlined /> */}\r\n\t\t\t\t\t\t\t\t\t\t<FileImageFilled />\r\n\t\t\t\t\t\t\t\t\t\t{/* <h5>\r\n\t\t\t\t\t\t\t\t\t\t\t\t     Select From Library\r\n\t\t\t\t\t\t\t\t\t\t\t<     /h5> */}\r\n\t\t\t\t\t\t\t\t\t\t<span className='aboutToUploadImagesContainer__uploadItem-plus'>\r\n\t\t\t\t\t\t\t\t\t\t\t<PlusOutlined />\r\n\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</Tooltip>\r\n\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\t\t\t\t\t\t\t\r\n\r\n\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\tlabel='Meta title'\r\n\t\t\t\t\t\t\t\tvalue={values.metaTitle}\r\n\t\t\t\t\t\t\t\tplaceHolder={'category...'}\r\n\t\t\t\t\t\t\t\tname='metaTitle'\r\n\t\t\t\t\t\t\t\tisError={(touched.metaTitle && errors.metaTitle) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['metaTitle'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.metaTitle && errors.metaTitle) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['metaTitle'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('metaTitle')\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\tlabel='BN Meta title'\r\n\t\t\t\t\t\t\t\tvalue={values.bnMetaTitle}\r\n\t\t\t\t\t\t\t\tplaceHolder={'ক্যাটাগড়ি...'}\r\n\t\t\t\t\t\t\t\tname='bnMetaTitle'\r\n\t\t\t\t\t\t\t\tisError={(touched.bnMetaTitle && errors.bnMetaTitle) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['bnMetaTitle'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.bnMetaTitle && errors.bnMetaTitle) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['bnMetaTitle'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('bnMetaTitle');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\tlabel='Meta description'\r\n\t\t\t\t\t\t\t\tvalue={values.metaDescription}\r\n\t\t\t\t\t\t\t\tplaceholder={'meta...'}\r\n\t\t\t\t\t\t\t\tname='metaDescription'\r\n\t\t\t\t\t\t\t\tisError={(touched.metaDescription && errors.metaDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['metaDescription'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.metaDescription && errors.metaDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['metaDescription'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('metaDescription');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\tlabel='BN Meta Description'\r\n\t\t\t\t\t\t\t\tvalue={values.bnMetaDescription}\r\n\t\t\t\t\t\t\t\tplaceholder={'এইয় মেট...'}\r\n\t\t\t\t\t\t\t\tname='bnMetaDescription'\r\n\t\t\t\t\t\t\t\tisError={(touched.bnMetaDescription && errors.bnMetaDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['bnMetaDescription'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.bnMetaDescription && errors.bnMetaDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['bnMetaDescription'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('bnMetaDescription');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\tMeta Tags (grocery,fashion)\r\n\t\t\t\t\t\t\t</h3>\r\n\r\n\t\t\t\t\t\t\t<MetaTags\r\n\t\t\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\t\t\tsetTags={setTags}\r\n\t\t\t\t\t\t\ttags={tags}\r\n\t\t\t\t\t\t\t />\r\n\r\n\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\tmarginTop:'15px'\r\n\t\t\t\t\t\t\t}}></div>\r\n\r\n\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\tBN Meta Tags (মুদিখানা,ফ্যাশন)\r\n\t\t\t\t\t\t\t</h3>\r\n\r\n\t\t\t\t\t\t\t<MetaTags\r\n\t\t\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\t\t\tsetTags={setBnTags}\r\n\t\t\t\t\t\t\ttags={bnTags}\r\n\t\t\t\t\t\t\t />\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t</Modal>\r\n\r\n\t\t\t\t\t\t<MediaLibrary\r\n\t\t\t\t\t\t\tsetvisible={setvisible}\r\n\t\t\t\t\t\t\tvisible={visible}\r\n\t\t\t\t\t\t\tsetmyImages={setmyImages}\r\n\t\t\t\t\t\t\tmyImages={myImages}\r\n\t\t\t\t\t\t\tsetmyThumbnailImage={setmyThumbnailImage}\r\n\t\t\t\t\t\t\tisModalOpenForThumbnail={isModalOpenForThumbnail}\r\n\t\t\t\t\t\t\tisModalOpenForImages={isModalOpenForImages}\r\n\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</>\r\n\t\t\t\t)}\r\n\t\t</Formik>\r\n\r\n\r\n\r\n\r\n\t);\r\n};\r\n\r\nexport default AddNewCategory;\r\n","import React, {useState, useEffect} from 'react';\r\nimport {withRouter} from 'react-router-dom';\r\nimport { Table, notification,  Space, Tag,Button, Input,Tooltip, Popconfirm  } from 'antd';\r\nimport { PlusOutlined, EditOutlined, DeleteOutlined,CheckCircleOutlined } from '@ant-design/icons';\r\n\r\nimport {QuickEdit} from \"../../category\"; \r\nimport AddNewPostCategory from \"./AddNewPostCategory\";\r\n\r\n/// import hooks\r\nimport { useFetch, useHandleFetch } from \"../../../hooks\";\r\n\r\n// import components\r\nimport { DataTableSkeleton } from \"../../../components/Placeholders\";\r\nimport Empty from \"../../../components/Empty\";\r\n\r\nconst { Column, ColumnGroup } = Table;\r\nconst { Search } = Input;\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t  message: message || 'Tag Created',\r\n\t  description: '',\r\n\t  icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n  };\r\n\r\n\r\n  const openErrorNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t  message: message || 'Something Went Wrong',\r\n\t  description: '',\r\n\t  icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n  };\r\n\r\n\r\ninterface myTableProps {\r\n  data: any; \r\n  setcategoryList?:any; \r\n  history?: any; \r\n} \r\n\r\n\r\nconst MyTable = ({data, setcategoryList, history}: myTableProps) => {\r\n    const [visible,setvisible] = useState(false);   \r\n    const [activeCategoryForEdit,setactiveCategoryForEdit] = useState(false); \r\n    const [deleteCategoryState, handleDeleteCategoryFetch] = useHandleFetch({}, 'deleteCategory');\r\n      // console.log('activeCategoryForEdit',activeCategoryForEdit); \r\n\r\n\r\n      const handleDeleteCategory = async (id) => {\r\n        const deleteCategoryRes = await handleDeleteCategoryFetch({\r\n          urlOptions: {\r\n            placeHolders: {\r\n              id,\r\n            }\r\n            }\r\n          });\r\n\r\n          \t  // @ts-ignore\r\n\t\t  if(deleteCategoryRes && deleteCategoryRes.status === 'ok'){\r\n\t\t\t  openSuccessNotification('Deleted Category'); \r\n\t\t\t  const newCategoryList =  data.filter(item => item.id !== id);\r\n\t\t\t  setcategoryList(newCategoryList); \r\n\t\t  }\r\n      }\r\n      \r\n\r\n    return (\r\n        <>\r\n        <Table \r\n        // expandable={{\r\n        //     expandedRowRender: record => <p style={{ margin: 0 }}>{record.name}</p>,\r\n        //     rowExpandable: record => record.name !== 'Not Expandable',\r\n        //   }}\r\n        // bordered={true}\r\n        size='small'\r\n        // pagination={false}\r\n        dataSource={data}\r\n        >\r\n            <Column \r\n          title=\"\"\r\n           dataIndex=\"cover\"\r\n            key=\"id\" \r\n            width={'80px'}\r\n            \r\n           className='classnameofthecolumn'\r\n\r\n            render={(cover,record: any) => (\r\n                <>\r\n                <img src={cover} \r\n                   onClick={() => {\r\n                    history.push(`/admin/category/${record.id}`)\r\n                    // setcategoryDetailVisible(true);\r\n                    setactiveCategoryForEdit(record)\r\n                  }}\r\n                alt='cover img' \r\n                style={{\r\n                    height: '40px',\r\n                    width: '40px',\r\n                    objectFit: \"contain\",\r\n                    borderRadius:'3px',\r\n                  cursor: 'pointer'\r\n\r\n                }} />\r\n                </>\r\n              )}\r\n            />\r\n          <Column\r\n           title=\"Name\" \r\n           dataIndex=\"name\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n           render={(text, record: any) => (\r\n            <>\r\n\r\n              <h4\r\n                onClick={() => {\r\n                  history.push(`/admin/category/${record.id}`)\r\n                  // setcategoryDetailVisible(true);\r\n                  setactiveCategoryForEdit(record)\r\n                }}\r\n                style={{\r\n                  fontWeight: 400,\r\n                  color: '#555',\r\n                  cursor: 'pointer'\r\n\r\n                }}>\r\n                {text}\r\n              </h4>\r\n\r\n\r\n            </>\r\n          )}\r\n            />\r\n\r\n\r\n<Column\r\n           title=\"Description\" \r\n           dataIndex=\"description\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n         \r\n            />\r\n\r\n\r\n         <Column\r\n           title=\"Sub Cateogory\" \r\n           dataIndex=\"subCount\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n         \r\n            />\r\n\r\n<Column\r\n           title=\"Product\" \r\n           dataIndex=\"productCount\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n         \r\n            />\r\n\r\n\r\n\r\n          {/* <Column \r\n          \r\n          className='classnameofthecolumn'\r\n\r\n          title=\"Product\" dataIndex=\"product\" key=\"product\" /> */}\r\n\r\n          {/* <Column \r\n          \r\n          className='classnameofthecolumn'\r\n\r\n          title=\"Sub Category\" dataIndex=\"subCategory\" key=\"subCategory\" /> */}\r\n        \r\n        {/* <Column\r\n          title=\"Tags\"\r\n          dataIndex=\"tags\"\r\n          key=\"tags\"\r\n          render={tags => (\r\n            <>\r\n              {tags.map((tag : any) => (\r\n                <Tag color=\"blue\" key={tag}>\r\n                  {tag}\r\n                </Tag>\r\n              ))}\r\n            </>\r\n          )}\r\n        /> */}\r\n        <Column\r\n        \r\n        className='classnameofthecolumn'\r\n          title=\"\"\r\n          key=\"action\"\r\n          align='right'\r\n          render={(text, record : any) => (\r\n            <Space size=\"middle\">\r\n              <a href='##'>\r\n               <Tooltip placement=\"top\" title='Quick Edit Category'>\r\n              <span className='iconSize' onClick={() => {\r\n                setvisible(true)\r\n                setactiveCategoryForEdit(record); \r\n              }}> \r\n              <EditOutlined />\r\n            \r\n              </span>\r\n               </Tooltip>\r\n               </a>\r\n\r\n\r\n               <Popconfirm \r\n               \r\n               onConfirm={() => handleDeleteCategory(record.id)}\r\n               title=\"Are you sure？\" okText=\"Yes\" cancelText=\"No\">\r\n           \r\n\t\t   <span \r\n             className='iconSize iconSize-danger'\r\n             > \r\n             <DeleteOutlined/>\r\n            </span>\r\n       \r\n           </Popconfirm>\r\n\r\n\r\n       \r\n             \r\n            </Space>\r\n          )}\r\n        />\r\n      </Table>\r\n\r\n    \r\n\r\n    {activeCategoryForEdit &&   <QuickEdit \r\n    setcategoryList={setcategoryList}\r\n    categoryList={data}\r\n    setvisible={setvisible}\r\n    visible={visible}\r\n    category={activeCategoryForEdit}/>}\r\n    \r\n    </>\r\n    )\r\n}\r\n\r\n\r\ninterface Props {\r\n    history: any; \r\n}\r\n\r\nconst CategoryList = ({history}: Props) => {\r\n\r\n  const [categoryState, handleCategoryListFetch] = useHandleFetch({}, 'postCategoryList');\r\n  const [categoryList,setcategoryList] = useState([]); \r\n\r\n\r\n  useEffect(()=>{\r\n   const setCategories = async () => {\r\n     const categories = await handleCategoryListFetch({\r\n      urlOptions: {\r\n        params: {\r\n          isSubCategory: true,\r\n          productCountValue: true \r\n        },\r\n      },\r\n     }); \r\n     // @ts-ignore\r\n     setcategoryList(categories); \r\n   }\r\n   setCategories(); \r\n  },[])\r\n\r\n\r\n  \r\n  const [addNewCategoryVisible,setAddNewCategoryVisible] = useState(false);   \r\n\r\n  const handleOkAddNewCategory = (e: any) => {\r\n    setAddNewCategoryVisible(false);\r\n  };\r\n\r\n  const handleCancelAddNewCategory = (e: any) => {\r\n    setAddNewCategoryVisible(false);\r\n  };\r\n\r\n  // console.log('categoryState',categoryState); \r\n\r\n  \r\n\r\n  const handleSearch = (value) => {\r\n    if(categoryState.data.length > 0 ){\r\n      const newCategoryList = categoryState.data.filter(item => item.name.toLowerCase().includes(value.toLowerCase())); \r\n      setcategoryList(newCategoryList); \r\n    }\r\n     \r\n  }\r\n\r\n\r\n\r\n\treturn (\r\n\t\t<>\r\n    {/* <h2 className='containerPageTitle'>\r\n      Categories\r\n    </h2> */}\r\n    <div className='categoryListContainer'>\r\n            <div className='categoryListContainer__header'>\r\n           \r\n\r\n          <div className='categoryListContainer__header-searchBar'>\r\n          <h2 className='categoryListContainer__header-title'>\r\n            Categories\r\n            </h2>\r\n\r\n\r\n          <Search\r\n            enterButton={false}\r\n            className='searchbarClassName'\r\n          placeholder=\"search categories..\"\r\n          onSearch={value => handleSearch(value)}\r\n        />\r\n          </div>\r\n            <Button\r\n          // type=\"primary\"\r\n          className='btnPrimaryClassNameoutline'\r\n          icon={<PlusOutlined />}\r\n          onClick={() => setAddNewCategoryVisible(true)}\r\n        >\r\n        Add New\r\n            \r\n            </Button>\r\n            </div>\r\n\r\n            <div className='categoryListContainer__afterHeader'>\r\n            {/* <Search\r\n      placeholder=\"search categories..\"\r\n      size=\"large\"\r\n      onSearch={value => console.log(value)}\r\n      style={{ width: 300 }}\r\n    /> */}\r\n            </div>\r\n\r\n     \r\n\t\t\t\r\n\t\t\t<div className='categoryListContainer__categoryList'>\r\n        {categoryState.done && categoryList.length > 0 && <MyTable \r\n        history={history}\r\n        setcategoryList={setcategoryList}\r\n        data={categoryList} />}\r\n        {categoryState.isLoading && <DataTableSkeleton />}\r\n\r\n        {categoryState.done && !(categoryList.length > 0) && (\r\n\t\t\t<div style={{\r\n\t\t\t\tmarginTop: '50px'\r\n\t\t\t}}>\r\n\t\t\t\t<Empty title='No Category found'   />\r\n\t\t\t</div>\r\n\t\t)}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\r\n\r\n        {categoryState.done && \r\n          <AddNewPostCategory \r\n          addNewCategoryVisible={addNewCategoryVisible} \r\n          setAddNewCategoryVisible={setAddNewCategoryVisible}\r\n          categoryList={categoryList}\r\n          setcategoryList={setcategoryList}\r\n          \r\n           />}\r\n\r\n      \r\n\r\n        \r\n    </>\r\n\t);\r\n};\r\n\r\nexport default withRouter(CategoryList);\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n\r\nimport { useHandleFetch } from '../../../hooks';\r\n// import third party ui lib\r\nimport { Upload, message, Switch, Select, Button, notification, Modal, Tooltip, Spin } from 'antd';\r\n\r\nimport {\r\n\tFileOutlined,\r\n\tInboxOutlined,\r\n\tFileAddOutlined,\r\n\tDeleteOutlined,\r\n\tCheckCircleOutlined,\r\n\tCloseOutlined,\r\n\tCheckOutlined,\r\n\tInfoCircleOutlined,\r\n\tPlusOutlined,\r\n\tFileImageFilled,\r\n\tLoadingOutlined\r\n} from '@ant-design/icons';\r\n\r\n\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../../components/Field/Input';\r\nimport TextArea from '../../../components/Field/TextArea';\r\nimport MediaLibrary from \"../../../components/MediaLibrary\";\r\n\r\nconst validationSchema = Yup.object().shape({\r\n\tname: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t\tmessage: message || 'Category Updated',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n\tnotification.error({\r\n\t\tmessage: message || 'Something Went Wrong',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n};\r\n\r\n\r\nconst initialValues = {\r\n\tname: '',\r\n\tdescription: '',\r\n\timage: [],\r\n\turl: '',\r\n\tcover: ''\r\n}\r\n\r\n\r\nconst { Option } = Select;\r\n\r\n\r\n\r\ninterface Props {\r\n\tcategoryEditVisible?: any;\r\n\tsetCategoryEditVisible?: any;\r\n\tcategoryDetailData?: any;\r\n\tsetcategoryDetailData?:any; \r\n}\r\n\r\nconst AddNewBrand = ({ categoryEditVisible, \r\n\tsetCategoryEditVisible,\r\n\t categoryDetailData,\r\n\t setcategoryDetailData }: Props) => {\r\n\r\n\tconst [updateBrandState, handleUpdateBrandFetch] = useHandleFetch({}, 'updateCategory');\r\n\tconst [brandDetailState, handleBrandDetailFetch] = useHandleFetch({}, 'categoryDetail');\r\n\tconst [attachImageToItemMultipleState, handleAttachImageToItemMultipleFetch] = useHandleFetch({}, 'attachImageToItemMultiple');\r\n\tconst [attachImageToItemSingleState, handleAttachImageToItemSingleFetch] = useHandleFetch({}, 'attachImageToItemSingle');\r\n\tconst [detachImageFromItemMultipleState, handleDetachImageFromItemMultipleFetch] = useHandleFetch({}, 'detachImageFromItemMultiple');\r\n\tconst [detachImageFromItemSingleState, handleDetachImageFromItemSingleFetch] = useHandleFetch({}, 'detachImageFromItemSingle');\r\n\tconst [setImageAsThumbnailToItemState, handleSetImageAsThumbnailToItemFetch] = useHandleFetch({}, 'setImageAsThumbnailToItem');\r\n\r\n\r\n\tconst [myImages, setmyImages] = useState(false);\r\n\tconst [visibleMedia, setvisibleMedia] = useState(false);\r\n\tconst [coverImageId, setCoverImageId] = useState('');\r\n\tconst [myGoddamnImages, setMyGoddamnImages] = useState([]);\r\n\tconst [selectedParentId, setselectedParentId] = useState('');\r\n\tconst [imageUrl, setImageUrl] = useState('');\r\n\tconst [loadingThumnail, setLoadingThumbnail] = useState(false);\r\n\tconst [imageFile, setImagefile] = useState('');\r\n\tconst [isparentCategoryChecked, setisparentcategoryChecked] = useState(true);\r\n\r\n\r\n\r\n\r\n\tuseEffect(() => {\r\n\t\tif (categoryDetailData && Object.keys(categoryDetailData).length > 0) {\r\n\r\n\t\t\tconst images = categoryDetailData.image;\r\n\t\t\tif (images && images.length > 0) {\r\n\t\t\t\tsetmyImages(images);\r\n\t\t\t\tsetMyGoddamnImages(images);\r\n\t\t\t}\r\n\r\n\t\t\tif (categoryDetailData.cover && categoryDetailData.cover['id']) {\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\tsetmyImages([categoryDetailData.cover, ...images]);\r\n\t\t\t\tsetCoverImageId(categoryDetailData.cover['id']);\r\n\t\t\t}\r\n\r\n\t\t}\r\n\t}, [categoryDetailData])\r\n\r\n\r\n\tuseEffect(() => {\r\n\t\t// @ts-ignore\r\n\t\tif (myImages && myImages[0] && myImages.length < 2) {\r\n\r\n\t\t\tif (coverImageId !== myImages[0].id) {\r\n\t\t\t\tsetCoverImageId(myImages[0].id);\r\n\t\t\t\thandleSetImageAsThumnail(myImages[0]);\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}, [myImages])\r\n\r\n\r\n\tconst handleDetachSingleImage = async id => {\r\n\t\tawait handleDetachImageFromItemSingleFetch({\r\n\t\t\turlOptions: {\r\n\t\t\t\tplaceHolders: {\r\n\t\t\t\t\timageId: id,\r\n\t\t\t\t\tcollection: 'category',\r\n\t\t\t\t\titemId: categoryDetailData.id\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\r\n\t}\r\n\r\n\r\n\r\n\tconst handleSetImageAsThumnail = async image => {\r\n\r\n\t\tconst thumbnailRes = await handleSetImageAsThumbnailToItemFetch({\r\n\t\t\turlOptions: {\r\n\t\t\t\tplaceHolders: {\r\n\t\t\t\t\timageId: image.id,\r\n\t\t\t\t\tcollection: 'category',\r\n\t\t\t\t\titemId: categoryDetailData.id\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\r\n\t\t// @ts-ignore\r\n\t\tif (thumbnailRes && thumbnailRes.status === 'ok') {\r\n\t\t\topenSuccessNotification('Seted as thumbnail!')\r\n\t\t\t// const positionInBrand = () => {\r\n\t\t\t// \treturn brandList.map(item => item.id).indexOf(categoryDetailData.id);\r\n\t\t\t// }\r\n\r\n\t\t\t// const index = positionInBrand();\r\n\r\n\t\t\t// const prevItem = brandList.find(item => item.id === categoryDetailData.id);\r\n\r\n\t\t\t// if (prevItem) {\r\n\t\t\t// \tconst updatedItem = Object.assign({}, brandList[index], { ...prevItem, cover: image.cover });\r\n\t\t\t// \tconst updateBrandList = [...brandList.slice(0, index), updatedItem, ...brandList.slice(index + 1)];\r\n\t\t\t// \tsetBrandList(updateBrandList);\r\n\r\n\t\t\t// }\r\n\t\t}\r\n\t\telse {\r\n\t\t\topenErrorNotification(\"Couldn't set as thumbnail, Something went wrong\")\r\n\t\t}\r\n\r\n\t}\r\n\r\n\r\n\r\n\tconsole.log('categoryDetailState', brandDetailState);\r\n\r\n\tconst handleSubmit = async (values: any, actions: any) => {\r\n\r\n\r\n\t\tif (brandDetailState && brandDetailState.done && Object.keys(categoryDetailData).length > 0) {\r\n\t\t\t// @ts-ignore\r\n\t\t\tconst images = myImages && myImages.length > 0 ? myImages.map(item => item.id) : [];\r\n\r\n\t\t\tif (images[0] && images.length > 1) {\r\n\t\t\t\tawait handleAttachImageToItemMultipleFetch({\r\n\t\t\t\t\turlOptions: {\r\n\t\t\t\t\t\tplaceHolders: {\r\n\t\t\t\t\t\t\tcollection: 'category',\r\n\t\t\t\t\t\t\titemId: categoryDetailData.id\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t},\r\n\t\t\t\t\tbody: {\r\n\t\t\t\t\t\timage: images\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\telse if (images[0] && images.length < 1) {\r\n\t\t\t\tawait handleAttachImageToItemSingleFetch({\r\n\t\t\t\t\turlOptions: {\r\n\t\t\t\t\t\tplaceHolders: {\r\n\t\t\t\t\t\t\timageId: images[0].id,\r\n\t\t\t\t\t\t\tcollection: 'category',\r\n\t\t\t\t\t\t\titemId: categoryDetailData.id\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\r\n\r\n\r\n\r\n\t\tconst updateTagRes = await handleUpdateBrandFetch({\r\n\t\t\turlOptions: {\r\n\t\t\t\tplaceHolders: {\r\n\t\t\t\t\tid: categoryDetailData.id\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tbody: {\r\n\t\t\t\tname: values.name.trim(),\r\n\t\t\t\tdescription: values.description,\r\n\t\t\t\ticon: imageFile,\r\n\t\t\t\ttype: 'bottom'\r\n\t\t\t},\r\n\t\t});\r\n\r\n\t\t// @ts-ignore\r\n\t\tif (updateTagRes && updateTagRes.status === 'ok') {\r\n\t\t\tsetcategoryDetailData({\r\n\t\t\t\t...categoryDetailData,\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\t...updateTagRes\r\n\t\t\t})\r\n\t\t\tconsole.log('updateTagRes',updateTagRes);\r\n\t\t\tconsole.log('categoryDetailData',categoryDetailData);\r\n\t\t\t// setcategoryDetailData()\r\n\t\t\topenSuccessNotification();\r\n\t\t\tsetCategoryEditVisible(false);\r\n\r\n\r\n\t\t\t// const positionInBrand = () => {\r\n\t\t\t// \treturn brandList.map(item => item.id).indexOf(categoryDetailData.id);\r\n\t\t\t// }\r\n\r\n\t\t\t// const index = positionInBrand();\r\n\t\t\t// const updatedItem = Object.assign({}, brandList[index], { ...updateBrandRes });\r\n\t\t\t// console.log('updateBrandList', updatedItem)\r\n\r\n\t\t\t// const updateBrandList = [...brandList.slice(0, index), updatedItem, ...brandList.slice(index + 1)];\r\n\r\n\t\t\t// setBrandList(updateBrandList);\r\n\r\n\r\n\t\t\tactions.resetForm();\r\n\r\n\t\t}\r\n\t\telse {\r\n\t\t\topenErrorNotification();\r\n\t\t}\r\n\r\n\t\tactions.setSubmitting(false);\r\n\t};\r\n\r\n\r\n\r\n\r\n\r\n\tuseEffect(() => {\r\n\t\tif (categoryDetailData.type === 'top') {\r\n\t\t\t// setisparentcategoryChecked()\r\n\t\t}\r\n\t}, [categoryDetailData])\r\n\r\n\r\n\tconst handleCancel = (e: any) => {\r\n\t\tsetCategoryEditVisible(false);\r\n\t\tsetmyImages(false);\r\n\t};\r\n\r\n\r\n\tconst getisSubmitButtonDisabled = (values, isValid) => {\r\n\t\tif (!values.name || !isValid) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\r\n\tconst onChangeSelect = (value) => {\r\n\t\tsetselectedParentId(value);\r\n\t}\r\n\r\n\r\n\r\n\r\n\tfunction getBase64(img, callback) {\r\n\t\tconst reader = new FileReader();\r\n\t\treader.addEventListener('load', () => callback(reader.result));\r\n\t\treader.readAsDataURL(img);\r\n\t}\r\n\r\n\r\n\tfunction beforeUpload(file) {\r\n\t\tconst isJpgOrPng = file.type === 'image/jpeg' || file.type === 'image/png';\r\n\t\tif (!isJpgOrPng) {\r\n\t\t\tmessage.error('You can only upload JPG/PNG file!');\r\n\t\t}\r\n\t\tconst isLt2M = file.size / 1024 / 1024 < 2;\r\n\t\tif (!isLt2M) {\r\n\t\t\tmessage.error('Image must smaller than 2MB!');\r\n\t\t}\r\n\r\n\r\n\t\tgetBase64(file, imageUrl => {\r\n\t\t\tsetImageUrl(imageUrl)\r\n\t\t\tsetImagefile(file)\r\n\t\t\tsetLoadingThumbnail(false)\r\n\t\t})\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\r\n\r\n\r\n\tconst handleImagesDelete = (id) => {\r\n\t\t// @ts-ignore\r\n\t\tconst newImages = myImages && myImages.filter(image => {\r\n\t\t\treturn image.id !== id;\r\n\t\t})\r\n\r\n\t\t// @ts-ignore\r\n\t\tsetmyImages([]);\r\n\t}\r\n\r\n\r\n\tconst uploadButton = (\r\n\t\t<div>\r\n\t\t\t{loadingThumnail ? <LoadingOutlined /> : <PlusOutlined />}\r\n\t\t\t<div className=\"ant-upload-text\">Upload</div>\r\n\t\t</div>\r\n\t);\r\n\r\n\r\n\r\n\r\n\r\n\tconsole.log('cateogryDetailmyImages', myImages)\r\n\r\n\treturn (\r\n\t\t<Formik\r\n\t\t\tonSubmit={(values, actions) => handleSubmit(values, actions)}\r\n\t\t\tvalidationSchema={validationSchema}\r\n\t\t\tvalidateOnBlur={false}\r\n\t\t\tenableReinitialize={true}\r\n\t\t\tinitialValues={\r\n\t\t\t\t{ ...initialValues, ...categoryDetailData }\r\n\t\t\t}\r\n\t\t>\r\n\t\t\t{({\r\n\t\t\t\thandleChange,\r\n\t\t\t\tvalues,\r\n\t\t\t\thandleSubmit,\r\n\t\t\t\terrors,\r\n\t\t\t\tisValid,\r\n\t\t\t\tisSubmitting,\r\n\t\t\t\ttouched,\r\n\t\t\t\thandleBlur,\r\n\t\t\t\tsetFieldTouched,\r\n\t\t\t\thandleReset,\r\n\t\t\t}) => (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<Modal\r\n\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\ttop: '40px'\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\ttitle=\"Category Edit\"\r\n\t\t\t\t\t\t\tvisible={categoryEditVisible}\r\n\t\t\t\t\t\t\tonOk={(e: any) => handleSubmit(e)}\r\n\t\t\t\t\t\t\tonCancel={handleCancel}\r\n\t\t\t\t\t\t\tokText='Update'\r\n\t\t\t\t\t\t\tokButtonProps={{\r\n\t\t\t\t\t\t\t\tloading: isSubmitting,\r\n\t\t\t\t\t\t\t\thtmlType: \"submit\",\r\n\t\t\t\t\t\t\t\tdisabled: getisSubmitButtonDisabled(values, isValid)\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\tlabel='Title'\r\n\t\t\t\t\t\t\t\tvalue={values.name}\r\n\t\t\t\t\t\t\t\tname='name'\r\n\t\t\t\t\t\t\t\tisError={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateBrandState.error['error']['name'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateBrandState.error['error']['name'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('name');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\trows={3}\r\n\t\t\t\t\t\t\t\tlabel='Description'\r\n\t\t\t\t\t\t\t\tvalue={values.description}\r\n\t\t\t\t\t\t\t\tname='description'\r\n\t\t\t\t\t\t\t\tisError={(touched.description && errors.description) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateBrandState.error['error']['description'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.description && errors.description) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateBrandState.error['error']['description'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('description');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t{/* <div style={{\r\n\t\t\t\t\t\t\t\tmarginTop: '25px'\r\n\t\t\t\t\t\t\t}}></div>\r\n\r\n\t\t\t\t\t\t\t<div className='switchLabelContainer'>\r\n\t\t\t\t\t\t\t\t<Switch\r\n\t\t\t\t\t\t\t\t\tchecked={isparentCategoryChecked}\r\n\t\t\t\t\t\t\t\t\tonChange={onSwitchChange} />\r\n\t\t\t\t\t\t\t\t<div className='switchLabelContainer-textContainer'>\r\n\t\t\t\t\t\t\t\t\t<h5 >Top level Category</h5>\r\n\t\t\t\t\t\t\t\t\t<h5 className='switchLabelContainer-desc'>Disable to select a Parent Category</h5>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t{!isparentCategoryChecked && (\r\n\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>Parent Category</h3>\r\n\t\t\t\t\t\t\t\t\t<Select\r\n\t\t\t\t\t\t\t\t\t\tshowSearch\r\n\t\t\t\t\t\t\t\t\t\tstyle={{ width: 400 }}\r\n\t\t\t\t\t\t\t\t\t\tplaceholder='Select a Parent Category'\r\n\t\t\t\t\t\t\t\t\t\toptionFilterProp='children'\r\n\t\t\t\t\t\t\t\t\t\tonChange={onChangeSelect}\r\n\t\t\t\t\t\t\t\t\t\t// onFocus={onFocus}\r\n\t\t\t\t\t\t\t\t\t\t// onBlur={onBlur}\r\n\t\t\t\t\t\t\t\t\t\t// onSearch={onSearch}\r\n\t\t\t\t\t\t\t\t\t\tfilterOption={(input, option: any) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t{brandList.length > 0 && brandList.map(category => {\r\n\t\t\t\t\t\t\t\t\t\t\treturn <Option value={category.id}>{category.name}</Option>\r\n\t\t\t\t\t\t\t\t\t\t})}\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t</Select>\r\n\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t)}\r\n\r\n\r\n\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\tmarginTop: '20px'\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\r\n\t\t\t\t\t\t\t<div className='addproductSection-left-header' >\r\n\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>Icon </h3>\r\n\t\t\t\t\t\t\t\t<Tooltip\r\n\t\t\t\t\t\t\t\t\tplacement=\"left\" title={'Add Icon image for this category'}>\r\n\t\t\t\t\t\t\t\t\t<a href='###'>\r\n\t\t\t\t\t\t\t\t\t\t<InfoCircleOutlined />\r\n\t\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t<Upload\r\n\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\tborderRadius: \"8px\"\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\tname=\"avatar\"\r\n\t\t\t\t\t\t\t\tlistType=\"picture-card\"\r\n\t\t\t\t\t\t\t\tclassName=\"avatar-uploader\"\r\n\t\t\t\t\t\t\t\tshowUploadList={false}\r\n\t\t\t\t\t\t\t\tbeforeUpload={beforeUpload}\r\n\t\t\t\t\t\t\t\tmultiple={false}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t{imageUrl ? <img src={imageUrl} alt=\"avatar\" style={{ width: '100%' }} /> : uploadButton}\r\n\t\t\t\t\t\t\t</Upload>\r\n */}\r\n\r\n\r\n\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\tmarginTop: '20px'\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\r\n\t\t\t\t\t\t\t<div className='addproductSection-left-header'\r\n\r\n\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\tmarginBottom: '-5px'\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>Images</h3>\r\n\t\t\t\t\t\t\t\t{/* <div  >\r\n\t\t\t\t\t<FileOutlined />\r\n\t\t\t\t\t<span>Media Center</span>\r\n\t\t\t\t</div> */}\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\t\t\t\t\t\t\t<div className='aboutToUploadImagesContainer'>\r\n\r\n\t\t\t\t\t\t\t\t{brandDetailState && (\r\n\t\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t\t{myImages &&\r\n\t\t\t\t\t\t\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\t\t\t\t\t\t\tmyImages.length > 0 && myImages.map((image, index) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div className='aboutToUploadImagesContainer__item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='aboutToUploadImagesContainer__item-imgContainer'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetCoverImageId(image.id);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleSetImageAsThumnail(image);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<img src={image.cover} alt={image.alt} />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleImagesDelete(image.id)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleDetachSingleImage(image.id)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='aboutToUploadImagesContainer__item-remove'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<CloseOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{coverImageId === image.id ? (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className='aboutToUploadImagesContainer__item-cover'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<CheckOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t) : !coverImageId && index === 0 && (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className='aboutToUploadImagesContainer__item-cover'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<CheckOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t\t\t})}\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t<Tooltip\r\n\t\t\t\t\t\t\t\t\t\t\ttitle={'Attach images'}>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetvisibleMedia(true);\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\tclassName='aboutToUploadImagesContainer__uploadItem'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t{/* <FileAddOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FileImageTwoTone />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FileImageOutlined /> */}\r\n\t\t\t\t\t\t\t\t\t\t\t\t<FileImageFilled />\r\n\t\t\t\t\t\t\t\t\t\t\t\t{/* <h5>\r\n\t\t\t\t\t\t\t\t\t\t\t\t     Select From Library\r\n\t\t\t\t\t\t\t\t\t\t\t<     /h5> */}\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span className='aboutToUploadImagesContainer__uploadItem-plus'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<PlusOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t\t)}\r\n\r\n\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t</Modal>\r\n\r\n\t\t\t\t\t\t<MediaLibrary\r\n\t\t\t\t\t\t\tsetvisible={setvisibleMedia}\r\n\t\t\t\t\t\t\tvisible={visibleMedia}\r\n\t\t\t\t\t\t\tsetmyImages={setmyImages}\r\n\t\t\t\t\t\t\tmyImages={myImages}\r\n\t\t\t\t\t\t\tmyGoddamnImages={myGoddamnImages}\r\n\t\t\t\t\t\t\tsetMyGoddamnImages={setMyGoddamnImages}\r\n\t\t\t\t\t\t\tisModalOpenForImages={true}\r\n\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</>\r\n\t\t\t\t)}\r\n\t\t</Formik>\r\n\r\n\r\n\r\n\r\n\t);\r\n};\r\n\r\nexport default AddNewBrand;\r\n","import React, { useState } from 'react';\r\nimport { Modal, notification } from 'antd';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n// import components\r\nimport Input from '../../../components/Field/Input';\r\nimport TextArea from '../../../components/Field/TextArea';\r\nimport { useHandleFetch } from '../../../hooks';\r\n\r\nimport { CheckCircleOutlined, PlusOutlined, EditOutlined, DeleteOutlined, EditFilled } from '@ant-design/icons';\r\n\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n\tname: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\n\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t\tmessage: message || 'Category Updated',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t\tmessage: message || 'Something Went Wrong',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n};\r\n\r\n\r\n\r\n\r\n\r\ninterface Props {\r\n\tcategory: any;\r\n\tsetvisible: any;\r\n\tvisible: any;\r\n\tsetcategoryList?: any;\r\n\tcategoryList?: any;\r\n}\r\n\r\nconst QuickEdit = ({ category, setvisible, visible, categoryList, setcategoryList }: Props) => {\r\n\tconst [updateCategoryState, handleUpdateCategoryFetch] = useHandleFetch({}, 'updateCategory');\r\n\r\n\tconst handleSubmit = async (values: any, actions: any) => {\r\n\t\tconst updateCategoryRes = await handleUpdateCategoryFetch({\r\n\t\t\turlOptions: {\r\n\t\t\t\tplaceHolders: {\r\n\t\t\t\t\tid: values.id,\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tbody: {\r\n\t\t\t\tname: values.name,\r\n\t\t\t\tdescription: values.description,\r\n\t\t\t},\r\n\t\t});\r\n\r\n\t\t//   console.log('updateCategoryRes',updateCategoryRes); \r\n\r\n\t\t// @ts-ignore\r\n\t\tif (updateCategoryRes && updateCategoryRes.status === 'ok') {\r\n\t\t\topenSuccessNotification();\r\n\r\n\t\t\tconst positionInTag = () => {\r\n\t\t\t\treturn categoryList.map(item => item.id).indexOf(category.id);\r\n\t\t\t}\r\n\r\n\t\t\tconst index = positionInTag();\r\n\r\n\t\t\t// @ts-ignore\r\n\t\t\tconst updatedItem = Object.assign({}, categoryList[index], { ...updateCategoryRes });\r\n\t\t\tconst updateCategoryList = [...categoryList.slice(0, index), updatedItem, ...categoryList.slice(index + 1)];\r\n\t\t\tsetcategoryList(updateCategoryList);\r\n\r\n\t\t}\r\n\t\telse {\r\n\t\t\topenErrorNotification();\r\n\t\t}\r\n\r\n\t\tactions.setSubmitting(false);\r\n\t\tsetvisible(false)\r\n\r\n\t};\r\n\r\n\r\n\tconst handleCancel = (e: any) => {\r\n\t\tsetvisible(false);\r\n\t};\r\n\r\n\r\n\r\n\tconst getisSubmitButtonDisabled = (values, isValid) => {\r\n\t\tif (!values.name || !isValid) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\treturn (\r\n\t\t<Formik\r\n\t\t\tonSubmit={(values, actions) => handleSubmit(values, actions)}\r\n\t\t\tvalidationSchema={validationSchema}\r\n\t\t\tvalidateOnBlur={false}\r\n\t\t\tenableReinitialize={true}\r\n\t\t\tinitialValues={\r\n\t\t\t\t{ ...category }\r\n\t\t\t}\r\n\t\t>\r\n\t\t\t{({\r\n\t\t\t\thandleChange,\r\n\t\t\t\tvalues,\r\n\t\t\t\thandleSubmit,\r\n\t\t\t\terrors,\r\n\t\t\t\tisValid,\r\n\t\t\t\tisSubmitting,\r\n\t\t\t\ttouched,\r\n\t\t\t\thandleBlur,\r\n\t\t\t\tsetFieldTouched,\r\n\t\t\t\thandleReset,\r\n\t\t\t}) => (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<Modal\r\n\t\t\t\t\t\t\ttitle=\"Quick Edit\"\r\n\t\t\t\t\t\t\tvisible={visible}\r\n\t\t\t\t\t\t\tonOk={(e: any) => handleSubmit(e)}\r\n\t\t\t\t\t\t\tonCancel={handleCancel}\r\n\t\t\t\t\t\t\tokText='Update'\r\n\t\t\t\t\t\t\tokButtonProps={{\r\n\t\t\t\t\t\t\t\tloading: isSubmitting,\r\n\t\t\t\t\t\t\t\thtmlType: \"submit\",\r\n\t\t\t\t\t\t\t\tdisabled: getisSubmitButtonDisabled(values, isValid)\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\tlabel='Title'\r\n\t\t\t\t\t\t\t\tvalue={values.name}\r\n\t\t\t\t\t\t\t\tname='name'\r\n\t\t\t\t\t\t\t\tisError={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateCategoryState.error['error']['name'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateCategoryState.error['error']['name'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('name');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\tlabel='Description'\r\n\t\t\t\t\t\t\t\tvalue={values.description}\r\n\t\t\t\t\t\t\t\tname='description'\r\n\t\t\t\t\t\t\t\tisError={(touched.description && errors.description) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateCategoryState.error['error']['description'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.description && errors.description) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateCategoryState.error['error']['description'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('description');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</Modal>\r\n\r\n\t\t\t\t\t</>\r\n\t\t\t\t)}\r\n\t\t</Formik>\r\n\t);\r\n};\r\n\r\n\r\nexport default QuickEdit;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useParams, useHistory } from \"react-router\";\r\n\r\n\r\n// import hooks\r\nimport { useHandleFetch } from \"../../../hooks\";\r\n\r\n// import lib\r\nimport {\r\n    EditOutlined,\r\n} from '@ant-design/icons';\r\n\r\nimport { Skeleton, Empty, Button, notification, Table, Space, Input as CoolInput, Tooltip, Modal } from 'antd';\r\n\r\n\r\n\r\n// import components\r\nimport { DataTableSkeleton } from \"../../../components/Placeholders\";\r\nimport CategoryEdit from \"./PostCategoryEdit\";\r\n\r\n\r\nconst { Column, ColumnGroup } = Table;\r\nconst { Search } = CoolInput;\r\n\r\n\r\ninterface Props {\r\n    productRecord?: any;\r\n}\r\n\r\nconst NewBrandDetail = (props: Props) => {\r\n    const [categoryDetailState, handleCategoryDetailFetch] = useHandleFetch({}, 'categoryDetail');\r\n    const [categoryProductsState, handleCategoryProductsFetch] = useHandleFetch({}, 'categoryProducts');\r\n\r\n    const params = useParams();\r\n    const history = useHistory();\r\n    const categoryId = params['id'];\r\n    const [categoryEditVisible, setCategoryEditVisible] = useState(false);\r\n    const [categoryDetail,setcategoryDetail] = useState({}); \r\n\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        const getCategoryDetail = async () => {\r\n            const categoryDetailDataRes =  await handleCategoryDetailFetch({\r\n                urlOptions: {\r\n                    placeHolders: {\r\n                        id: categoryId\r\n                    }\r\n                }\r\n            }); \r\n\r\n            // @ts-ignore\r\n            if(categoryDetailDataRes){\r\n                  // @ts-ignore\r\n                setcategoryDetail(categoryDetailDataRes)\r\n\r\n            }\r\n\r\n        };\r\n\r\n        getCategoryDetail();\r\n\r\n    }, [categoryId]);\r\n\r\n    useEffect(() => {\r\n\r\n        const getCategoryProducts = async () => {\r\n            await handleCategoryProductsFetch({\r\n                urlOptions: {\r\n                    placeHolders: {\r\n                        id: categoryId\r\n                    }\r\n                }\r\n            })\r\n        };\r\n\r\n        getCategoryProducts();\r\n\r\n    }, [categoryId]);\r\n\r\n\r\n\r\n\r\n    console.log('categoryProductsState', categoryProductsState);\r\n\r\n    console.log('brandParams', params);\r\n\r\n\r\n    const getImagesInCollumn = (imgs) => {\r\n        if (!imgs[0]) return false;\r\n        imgs = imgs.map(item => item.cover);\r\n        const columns = {};\r\n\r\n        let localIndex = 0;\r\n        let columnNumber = 0;\r\n\r\n\r\n        imgs.forEach((item, index) => {\r\n            if (localIndex < 3) {\r\n                if (columns[columnNumber]) {\r\n                    columns[columnNumber] = [...columns[columnNumber], item]\r\n                }\r\n                else columns[columnNumber] = [item];\r\n\r\n                localIndex = localIndex + 1;\r\n                columnNumber = columnNumber + 1;\r\n\r\n            }\r\n            else {\r\n                localIndex = 0;\r\n                columnNumber = 0;\r\n                console.log('localIndex', localIndex)\r\n            }\r\n        });\r\n\r\n        return columns;\r\n    }\r\n\r\n\r\n    const row = categoryDetailState.done && categoryDetail && categoryDetail['image'] ? getImagesInCollumn(categoryDetail['image']) : [];\r\n\r\n\r\n\r\n    return (\r\n        <div className='brandDetailContainer'>\r\n\r\n            <div className='brandDetailContainer__heading'>\r\n                <h3>\r\n                    Category Detail\r\n                </h3>\r\n\r\n                {categoryDetailState.done && categoryDetail && (Object.keys(categoryDetail).length > 0) && (\r\n                    <>\r\n                        <CategoryEdit\r\n                            categoryEditVisible={categoryEditVisible}\r\n                            setCategoryEditVisible={setCategoryEditVisible}\r\n                            categoryDetailData={categoryDetail}\r\n                            setcategoryDetailData={setcategoryDetail}\r\n                        />\r\n\r\n                        <Button\r\n                            onClick={() => setCategoryEditVisible(true)}\r\n                            type='link'\r\n                            icon={<EditOutlined />}\r\n                        >\r\n                            Edit\r\n                      </Button>\r\n                    </>\r\n                )}\r\n\r\n            </div>\r\n            <Skeleton\r\n                avatar paragraph={{ rows: 3 }}\r\n                loading={categoryDetailState.isLoading}>\r\n                {categoryDetailState.done && categoryDetail && !(Object.keys(categoryDetail).length > 0) && (\r\n                    <Empty description='No Category found' image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n                )}\r\n\r\n\r\n\r\n                {categoryDetailState.done && categoryDetail && (Object.keys(categoryDetail).length > 0) && (\r\n                    <>\r\n                        <div className='brandDetailContainer__header'>\r\n                            <div className='brandDetailContainer__header-coverContainer brandDetailContainer__header-coverContainer-category'>\r\n                                <img src={categoryDetail['cover'] && categoryDetail['cover']['cover']} alt=\"\" />\r\n                            </div>\r\n                            <div className='brandDetailContainer__header-info'>\r\n                                <h2>\r\n                                    {categoryDetail['name']}\r\n                                </h2>\r\n                                <h3>\r\n                                    {categoryDetail['description']}\r\n                                </h3>\r\n                                <h3>\r\n                                    Category type: <span>\r\n                                        {categoryDetail['type']}\r\n                                    </span>\r\n                                </h3>\r\n\r\n                                {categoryDetail['url'] && (\r\n                                    <h3>\r\n                                        URL:\r\n                                        <span>\r\n                                            {categoryDetail['url']}\r\n                                        </span>\r\n\r\n                                    </h3>\r\n                                )}\r\n\r\n                            </div>\r\n                        </div>\r\n\r\n\r\n                        {categoryDetail['icon'] && (\r\n                            <>\r\n                                <div className='brandDetailContainer__heading'>\r\n                                    <h3>\r\n                                        Icon\r\n                            </h3>\r\n                                </div>\r\n\r\n                                <div className='brandDetailContainer__inlineBox'>\r\n                                    <div className='brandDetailContainer__header-coverContainer brandDetailContainer__header-coverContainer-icon'>\r\n                                        <img src={categoryDetail['icon'] && categoryDetail['icon']} alt=\"\" />\r\n                                    </div>\r\n\r\n                                </div>\r\n\r\n                                <div style={{\r\n                                    marginBottom: \"25px\"\r\n                                }}></div>\r\n                            </>\r\n                        )}\r\n\r\n\r\n                        {categoryDetail['image'] && categoryDetail['image'].length > 0 && (\r\n                            <>\r\n                                <div className='brandDetailContainer__heading'>\r\n                                    <h3>\r\n                                        Image Gallary\r\n                                   </h3>\r\n                                </div>\r\n\r\n                                <div className='brandDetailContainer__imageGallary'>\r\n                                    <div className='imgGallaryContainer'>\r\n\r\n                                        <div className=\"imgGallary-row\">\r\n                                            {row && Object.keys(row).map(column => {\r\n                                                return (\r\n                                                    <div className=\"imgGallary-column\">\r\n                                                        {row[column] && row[column].map(img => {\r\n                                                            return <img \r\n                                                            alt='..'\r\n                                                            src={img} style={{\r\n                                                                width: '100%'\r\n                                                            }} />\r\n                                                        })}\r\n\r\n                                                    </div>\r\n                                                )\r\n                                            })}\r\n\r\n\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                </div>\r\n\r\n                                <div style={{\r\n                                    marginBottom: \"25px\"\r\n                                }}></div>\r\n                            </>\r\n                        )}\r\n\r\n\r\n                        {categoryDetail['subCategory'] && categoryDetail['subCategory'].length > 0 && (\r\n                            <>\r\n                                <div className='brandDetailContainer__heading'>\r\n                                    <h3>\r\n                                        Child Categories\r\n                                   </h3>\r\n                                </div>\r\n\r\n                                <div className='smallcatCardContainer'>\r\n                                    {categoryDetail['subCategory'].map(subCat => {\r\n                                        return (\r\n                                            <div\r\n                                                onClick={() => history.push(`/admin/category/${subCat.id}`)}\r\n                                                className='smallcatCardContainer__card'>\r\n                                                <div className='smallcatCardContainer__card-coverbox'>\r\n                                                    <img src={subCat.cover} alt=\"\" />\r\n                                                </div>\r\n                                                <div className='smallcatCardContainer__card-info'>\r\n                                                    <h3>\r\n                                                        {subCat.name}\r\n                                                    </h3>\r\n                                                </div>\r\n                                            </div>\r\n                                        )\r\n                                    })}\r\n\r\n                                </div>\r\n\r\n                                <div style={{\r\n                                    marginBottom: \"25px\"\r\n                                }}></div>\r\n                            </>\r\n                        )}\r\n\r\n\r\n                    </>\r\n\r\n                )}\r\n\r\n            </Skeleton>\r\n\r\n            <div className='brandDetailContainer__heading'>\r\n                <h3>\r\n                    Products\r\n                </h3>\r\n            </div>\r\n            <div className='brandDetailContainer__body'>\r\n                {categoryProductsState.isLoading && <DataTableSkeleton />}\r\n                {categoryProductsState.done && !(categoryProductsState.data.length > 0) && (\r\n                    <div style={{\r\n                        marginTop: '100px'\r\n                    }}>\r\n                        <Empty description='No Products exists in this category' image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n                    </div>\r\n                )}\r\n\r\n                {categoryProductsState.done && categoryProductsState.data && categoryProductsState.data.length > 0 && (\r\n                    <>\r\n                        <Table\r\n                            style={{\r\n                                paddingTop: '10px',\r\n                                borderRadius: '5px !important',\r\n                                overflow: 'hidden',\r\n                                boxShadow: '0 0.125rem 0.625rem rgba(227, 231, 250, 0.3), 0 0.0625rem 0.125rem rgba(206, 220, 233, 0.4)'\r\n                            }}\r\n\r\n                            size='small'\r\n                            dataSource={categoryProductsState.data}\r\n                            tableLayout={'auto'}\r\n                            onHeaderRow={column => {\r\n                                return {\r\n                                    style: {\r\n                                        color: 'red !important'\r\n                                    }\r\n\r\n                                };\r\n                            }}\r\n                        >\r\n                            <Column\r\n                                title=\"\"\r\n                                dataIndex=\"cover\"\r\n                                key=\"id\"\r\n                                width={'80px'}\r\n\r\n                                className='classnameofthecolumn'\r\n\r\n                                render={(cover, record: any) => (\r\n                                    <>\r\n                                        <img\r\n                                            onClick={() => {\r\n                                                history.push(`/admin/product/${record.id}`)\r\n                                                // go to product detail\r\n                                            }}\r\n                                            src={cover} alt='cover img' style={{\r\n                                                height: '40px',\r\n                                                width: '40px',\r\n                                                objectFit: \"contain\",\r\n                                                borderRadius: '3px',\r\n                                                cursor: 'pointer'\r\n                                            }} />\r\n\r\n\r\n\r\n\r\n                                    </>\r\n                                )}\r\n                            />\r\n\r\n                            <Column\r\n                                title=\"Name\"\r\n                                dataIndex=\"name\"\r\n                                key=\"id\"\r\n                                className='classnameofthecolumn'\r\n                                render={(text, record: any) => (\r\n                                    <>\r\n                                        <h4\r\n                                            onClick={() => {\r\n                                                history.push(`/admin/product/${record.id}`)\r\n                                            }}\r\n                                            style={{\r\n                                                fontWeight: 400,\r\n                                                color: '#555',\r\n                                                cursor: 'pointer'\r\n\r\n                                            }}>\r\n                                            {text}\r\n                                        </h4>\r\n\r\n\r\n                                    </>\r\n                                )}\r\n\r\n                            />\r\n\r\n                            <Column\r\n                                title=\"Offer Price\"\r\n                                dataIndex=\"offerPrice\"\r\n                                key=\"id\"\r\n                                className='classnameofthecolumn'\r\n\r\n                            />\r\n\r\n\r\n                            <Column\r\n                                title=\"Price\"\r\n                                dataIndex=\"price\"\r\n                                key=\"id\"\r\n                                className='classnameofthecolumn'\r\n\r\n                            />\r\n\r\n<Column\r\n                                title=\"Available\"\r\n                                dataIndex=\"available\"\r\n                                key=\"id\"\r\n                                className='classnameofthecolumn'\r\n\r\n                            />\r\n\r\n\r\n                            <Column\r\n                                title=\"Minimum\"\r\n                                dataIndex=\"minimum\"\r\n                                key=\"id\"\r\n                                className='classnameofthecolumn'\r\n\r\n                            />\r\n\r\n\r\n                        </Table>\r\n                    </>\r\n                )}\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NewBrandDetail\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n\r\nimport { useHandleFetch } from '../../hooks';\r\n// import third party ui lib\r\nimport { Upload, message, Switch, Select, Button, notification, Modal, Empty, Form } from 'antd';\r\n\r\nimport {\r\n\tFileOutlined,\r\n\tInboxOutlined,\r\n\tRadiusUpleftOutlined,\r\n\tRadiusUprightOutlined,\r\n\tRadiusBottomleftOutlined,\r\n\tRadiusBottomrightOutlined,\r\n\tDeleteOutlined,\r\n\tFileAddOutlined,\r\n\tCheckCircleOutlined\r\n} from '@ant-design/icons';\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\n\r\n\r\nconst { Option } = Select;\r\n\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n\tfirstName: Yup.string()\r\n\t\t.label('First name')\r\n\t\t.required()\r\n\t\t.min(2, 'First name must have at least 2 characters '),\r\n\tlastName: Yup.string()\r\n\t\t.label('Lastname')\r\n\t\t.required()\r\n\t\t.min(2, 'Last name must have at least 2 characters '),\r\n\tphone: Yup.string()\r\n\t\t.required('Please tell us your mobile number.')\r\n\t\t.max(13, 'Please enter a valid mobile number.'),\r\n\tpassword: Yup.string()\r\n\t\t.label('Password')\r\n\t\t.required()\r\n\t\t.min(6, 'Password must have at least 6 characters'),\r\n\taddress1: Yup.string()\r\n\t\t.label('Address line 1')\r\n\t\t.required()\r\n\t\t.min(3, 'Address line 1 must have at least 3 characters '),\r\n\r\n\temail: Yup.string().label('Email').email('Please enter a valid email'),\r\n});\r\n\r\n\r\n\r\n\r\nconst initialValues = {\r\n\tphone: '',\r\n\temail: '',\r\n\tfirstName: '',\r\n\tlastName: '',\r\n\taddress1: '',\r\n\taddress2: '',\r\n\tzipCode: '',\r\n\tpassword: ''\r\n};\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t\tmessage: message || 'Tag Created',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n\tnotification.error({\r\n\t\tmessage: message || 'Something Went Wrong',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n};\r\n\r\n\r\ninterface Props {\r\n\taddNewCategoryVisible: any;\r\n\tsetAddNewCategoryVisible: any;\r\n\tcustomerList?: any;\r\n\tsetCustomerList?: any;\r\n}\r\n\r\nconst AddNewCategory = ({ addNewCategoryVisible, setAddNewCategoryVisible, customerList, setCustomerList }: Props) => {\r\n\r\n\tconst [addCustomerState, handleAddCustomerFetch] = useHandleFetch({}, 'addCustomer');\r\n\tconst [selectedCountryValue, setselectedCountryValue] = useState('');\r\n\tconst [selectedCityValue, setselectedCityValue] = useState('');\r\n\r\n\tconst [countryOptions, setcountryOptions] = useState([]);\r\n\tconst [cityOptions, setcityOptions] = useState([]);\r\n\r\n\tconst [countryListState, handleCountryListFetch] = useHandleFetch(\r\n\t\t[],\r\n\t\t'countryList'\r\n\t);\r\n\r\n\tconst [cityListState, handleCityListFetch] = useHandleFetch([], 'cityList');\r\n\r\n\tconst [countryList, setCountryList] = useState([]);\r\n\tconst [cityList, setCityList] = useState([]);\r\n\r\n\r\n\r\n\r\n\tconst handleSubmit = async (values: any, actions: any) => {\r\n\r\n\t\tconst addCustomerRes = await handleAddCustomerFetch({\r\n\r\n\t\t\tbody: {\r\n\t\t\t\tphone: values.phone,\r\n\t\t\t\temail: values.email,\r\n\t\t\t\tpassword: values.password,\r\n\t\t\t\taddress1: values.address1,\r\n\t\t\t\taddress2: values.address2,\r\n\t\t\t\tfirstName: values.firstName,\r\n\t\t\t\tlastName: values.lastName,\r\n\t\t\t\tcountry: selectedCountryValue,\r\n\t\t\t\tcity: selectedCityValue,\r\n\t\t\t},\r\n\t\t});\r\n\r\n\r\n\t\t// @ts-ignore\r\n\t\tif (addCustomerRes && addCustomerRes.status === 'ok') {\r\n\t\t\topenSuccessNotification();\r\n\r\n\t\t\tsetCustomerList([...customerList, {\r\n\t\t\t\tid: addCustomerRes['id'] || '',\r\n\t\t\t\tkey: addCustomerRes['id'] || '',\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\t...addCustomerRes\r\n\t\t\t}])\r\n\t\t\tsetAddNewCategoryVisible(false);\r\n\t\t\tactions.resetForm();\r\n\t\t}\r\n\t\telse {\r\n\t\t\topenErrorNotification();\r\n\t\t}\r\n\r\n\r\n\r\n\t\tactions.setSubmitting(false);\r\n\t};\r\n\r\n\r\n\r\n\tconst onChangeCity = (value) => {\r\n\t\tsetselectedCityValue(value);\r\n\t}\r\n\r\n\tconst onChangeCountry = (value) => {\r\n\t\tsetselectedCountryValue(value);\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tconst setCountries = async () => {\r\n\t\t\tconst CountryListRes = await handleCountryListFetch({});\r\n\r\n\t\t\t// @ts-ignore\r\n\t\t\tif (CountryListRes && CountryListRes.length > 0) {\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\tconst countryOptions = CountryListRes.map((country) => {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tvalue: country.name,\r\n\t\t\t\t\t\tname: country.name\r\n\t\t\t\t\t};\r\n\t\t\t\t});\r\n\t\t\t\tsetcountryOptions(countryOptions);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tsetCountries();\r\n\t}, []);\r\n\r\n\r\n\tuseEffect(() => {\r\n\t\tconst setCities = async () => {\r\n\t\t\tconst cityListRes = await handleCityListFetch({\r\n\t\t\t\turlOptions: {\r\n\t\t\t\t\tplaceHolders: {\r\n\t\t\t\t\t\tcountry: selectedCountryValue,\r\n\t\t\t\t\t},\r\n\t\t\t\t},\r\n\t\t\t});\r\n\r\n\t\t\t// @ts-ignore\r\n\t\t\tif (cityListRes && cityListRes.length > 0) {\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\tconst cityOptions = cityListRes.map((city) => {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tvalue: city.name,\r\n\t\t\t\t\t\tname: city.name\r\n\t\t\t\t\t};\r\n\t\t\t\t});\r\n\t\t\t\tsetcityOptions(cityOptions);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tsetCities();\r\n\t}, [selectedCountryValue]);\r\n\r\n\r\n\r\n\r\n\tconst handleCancel = (e: any) => {\r\n\t\tsetAddNewCategoryVisible(false);\r\n\t};\r\n\r\n\r\n\tconst getisSubmitButtonDisabled = (values, isValid) => {\r\n\t\tif (!isValid ||\r\n\t\t\t!values.firstName ||\r\n\t\t\t!values.lastName ||\r\n\t\t\t!values.password ||\r\n\t\t\t!values.phone ||\r\n\t\t\t!values.address1) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\r\n\r\n\tconsole.log('cityListState', cityListState)\r\n\r\n\r\n\r\n\r\n\treturn (\r\n\t\t<Formik\r\n\t\t\tonSubmit={(values, actions) => handleSubmit(values, actions)}\r\n\t\t\tvalidationSchema={validationSchema}\r\n\t\t\tvalidateOnBlur={false}\r\n\t\t\tenableReinitialize={true}\r\n\t\t\tinitialValues={\r\n\t\t\t\t{ ...initialValues }\r\n\t\t\t}\r\n\t\t>\r\n\t\t\t{({\r\n\t\t\t\thandleChange,\r\n\t\t\t\tvalues,\r\n\t\t\t\thandleSubmit,\r\n\t\t\t\terrors,\r\n\t\t\t\tisValid,\r\n\t\t\t\tisSubmitting,\r\n\t\t\t\ttouched,\r\n\t\t\t\thandleBlur,\r\n\t\t\t\tsetFieldTouched,\r\n\t\t\t\thandleReset,\r\n\t\t\t}) => (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<Modal\r\n\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\ttop: '40px'\r\n\t\t\t\t\t\t\t}}\r\n\r\n\r\n\r\n\t\t\t\t\t\t\tbodyStyle={{\r\n\t\t\t\t\t\t\t\tmargin: '0',\r\n\t\t\t\t\t\t\t\tpadding: '10px'\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\ttitle=\"Add New Customer\"\r\n\t\t\t\t\t\t\tvisible={addNewCategoryVisible}\r\n\t\t\t\t\t\t\tonOk={(e: any) => handleSubmit(e)}\r\n\t\t\t\t\t\t\tonCancel={handleCancel}\r\n\t\t\t\t\t\t\tokText='Create'\r\n\t\t\t\t\t\t\tokButtonProps={{\r\n\t\t\t\t\t\t\t\tloading: isSubmitting,\r\n\t\t\t\t\t\t\t\thtmlType: \"submit\",\r\n\t\t\t\t\t\t\t\tdisabled: getisSubmitButtonDisabled(values, isValid)\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\r\n\r\n\t\t\t\t\t\t\t<div className='dubbleRowInputs'>\r\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\tlabel='First Name'\r\n\t\t\t\t\t\t\t\t\t\tvalue={values.firstName}\r\n\t\t\t\t\t\t\t\t\t\tname='firstName'\r\n\t\t\t\t\t\t\t\t\t\tisError={(touched.firstName && errors.firstName) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['firstName'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\terrorString={(touched.firstName && errors.firstName) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['firstName'])}\r\n\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('firstName');\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\tlabel='Last Name'\r\n\t\t\t\t\t\t\t\t\t\tvalue={values.lastName}\r\n\t\t\t\t\t\t\t\t\t\tname='lastName'\r\n\t\t\t\t\t\t\t\t\t\tisError={(touched.lastName && errors.lastName) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['lastName'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\terrorString={(touched.lastName && errors.lastName) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['lastName'])}\r\n\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('lastName');\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t<div className='dubbleRowInputs'>\r\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\tlabel='Phone'\r\n\t\t\t\t\t\t\t\t\t\tvalue={values.phone}\r\n\t\t\t\t\t\t\t\t\t\tname='phone'\r\n\t\t\t\t\t\t\t\t\t\tisError={(touched.phone && errors.phone) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['phone'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\terrorString={(touched.phone && errors.phone) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['phone'])}\r\n\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('phone');\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\tlabel='Email'\r\n\t\t\t\t\t\t\t\t\t\tvalue={values.email}\r\n\t\t\t\t\t\t\t\t\t\tname='email'\r\n\t\t\t\t\t\t\t\t\t\tisError={(touched.email && errors.email) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['email'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\terrorString={(touched.email && errors.email) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['email'])}\r\n\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('email');\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\tmarginRight: '10px'\r\n\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\tlabel='Password'\r\n\t\t\t\t\t\t\t\t\tvalue={values.password}\r\n\t\t\t\t\t\t\t\t\tname='password'\r\n\t\t\t\t\t\t\t\t\tisError={(touched.password && errors.password) ||\r\n\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['password'])}\r\n\r\n\t\t\t\t\t\t\t\t\terrorString={(touched.password && errors.password) ||\r\n\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['password'])}\r\n\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\tsetFieldTouched('password');\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t<div className='dubbleRowInputs'>\r\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\t\t\t\tCountry\r\n\t\t\t\t\t\t\t\t\t</h3>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t<Form.Item\r\n\t\t\t\t\t\t\t\t\t\tvalidateStatus={(addCustomerState.error['error']['country']) ? \"error\" : \"\"}\r\n\t\t\t\t\t\t\t\t\t\thelp={addCustomerState.error['error']['country']}\r\n\t\t\t\t\t\t\t\t\t// noStyle={true}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t<Select\r\n\t\t\t\t\t\t\t\t\t\t\tnotFoundContent={<Empty description='No Country Found' image={Empty.PRESENTED_IMAGE_SIMPLE} />}\r\n\t\t\t\t\t\t\t\t\t\t\tshowSearch\r\n\t\t\t\t\t\t\t\t\t\t\tstyle={{ width: '100%' }}\r\n\t\t\t\t\t\t\t\t\t\t\tplaceholder='Select a Country'\r\n\t\t\t\t\t\t\t\t\t\t\toptionFilterProp='children'\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={onChangeCountry}\r\n\t\t\t\t\t\t\t\t\t\t\tfilterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t{countryListState.done &&\r\n\t\t\t\t\t\t\t\t\t\t\t\tcountryListState.data.length > 0 &&\r\n\t\t\t\t\t\t\t\t\t\t\t\tcountryOptions.map((option) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn <Option value={option.value}>{option.name}</Option>;\r\n\t\t\t\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t\t\t</Select>\r\n\r\n\t\t\t\t\t\t\t\t\t</Form.Item>\r\n\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\t\t\t\tCity\r\n                                    </h3>\r\n\t\t\t\t\t\t\t\t\t<Form.Item\r\n\t\t\t\t\t\t\t\t\t\t// noStyle={true}\r\n\t\t\t\t\t\t\t\t\t\tvalidateStatus={(addCustomerState.error['error']['city']) ? \"error\" : \"\"}\r\n\t\t\t\t\t\t\t\t\t\thelp={addCustomerState.error['error']['city']}\r\n\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t<Select\r\n\t\t\t\t\t\t\t\t\t\t\tclassName='selectClassName'\r\n\t\t\t\t\t\t\t\t\t\t\tnotFoundContent={<Empty description='First Select a Country' image={Empty.PRESENTED_IMAGE_SIMPLE} />}\r\n\t\t\t\t\t\t\t\t\t\t\tshowSearch\r\n\t\t\t\t\t\t\t\t\t\t\tstyle={{ width: '100%' }}\r\n\t\t\t\t\t\t\t\t\t\t\tplaceholder='Select a city'\r\n\t\t\t\t\t\t\t\t\t\t\toptionFilterProp='children'\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={onChangeCity}\r\n\t\t\t\t\t\t\t\t\t\t\tfilterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t{cityListState.done &&\r\n\t\t\t\t\t\t\t\t\t\t\t\tcityListState.data.length > 0 &&\r\n\t\t\t\t\t\t\t\t\t\t\t\tcityOptions.map((option) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn <Option value={option.value}>{option.name}</Option>;\r\n\t\t\t\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t\t\t</Select>\r\n\t\t\t\t\t\t\t\t\t</Form.Item>\r\n\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\tmarginTop: '12px'\r\n\t\t\t\t\t\t\t}}></div>\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t<div className='dubbleRowInputs'>\r\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\tlabel='Address'\r\n\t\t\t\t\t\t\t\t\t\tvalue={values.address1}\r\n\t\t\t\t\t\t\t\t\t\tname='address1'\r\n\t\t\t\t\t\t\t\t\t\tisError={(touched.address1 && errors.address1) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['address1'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\terrorString={(touched.address1 && errors.address1) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['address1'])}\r\n\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('address1');\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\tlabel='More specific address'\r\n\t\t\t\t\t\t\t\t\t\tvalue={values.address2}\r\n\t\t\t\t\t\t\t\t\t\tname='address2'\r\n\t\t\t\t\t\t\t\t\t\tisError={(touched.address2 && errors.address2) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['address2'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\terrorString={(touched.address2 && errors.address2) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['address2'])}\r\n\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('address2');\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\t\t\t\t\t\t</Modal>\r\n\r\n\t\t\t\t\t</>\r\n\t\t\t\t)}\r\n\t\t</Formik>\r\n\r\n\r\n\r\n\r\n\t);\r\n};\r\n\r\nexport default AddNewCategory;\r\n","import React,{useState, useEffect} from 'react';\r\nimport { Modal, Select,notification  } from 'antd';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\nimport { PlusOutlined, EditOutlined, DeleteOutlined,EditFilled, CheckCircleOutlined } from '@ant-design/icons';\r\n\r\n\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport {useHandleFetch} from '../../hooks';\r\n\r\n\r\nconst { Option } = Select;\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    firstName: Yup.string()\r\n      .label('Firstname')\r\n      .required()\r\n      .min(2, 'First name must have at least 2 characters '),\r\n    lastName: Yup.string()\r\n      .label('Lastname')\r\n      .required()\r\n      .min(2, 'Lastname must have at least 2 characters '),\r\n    phone: Yup.string()\r\n      .required('Please tell us your mobile number.')\r\n      .max(13, 'Please enter a valid mobile number.'),\r\n    password: Yup.string()\r\n      .label('Password')\r\n      .required()\r\n      .min(6, 'Password must have at least 6 characters'),\r\n    address1: Yup.string()\r\n      .label('Address line 1')\r\n      .required()\r\n      .min(3, 'Address line 1 must have at least 3 characters '),\r\n  \r\n    email: Yup.string().label('Email').email('Please enter a valid email'),\r\n  });\r\n\r\n\r\n\r\n  \r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t  message: message || 'Tag Created',\r\n\t  description: '',\r\n\t  icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n  };\r\n\r\n\r\n  const openErrorNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t  message: message || 'Something Went Wrong',\r\n\t  description: '',\r\n\t  icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n  };\r\n\r\n\r\n\r\n\r\n\r\n\r\ninterface Props {\r\n\tcustomer: any;\r\n\tsetvisible: any; \r\n\tvisible: any;\r\n\tcustomerList?: any; \r\n\tsetCustomerList?:any\r\n\r\n}\r\n\r\nconst QuickEdit = ({ customer, setvisible, visible, customerList, setCustomerList }: Props) => {\r\n\tconst [updateCustomerState, handleUpdateCustomerFetch] = useHandleFetch({}, 'updateCustomer');\r\n\r\n\r\n\tconst [selectedCountryValue,setselectedCountryValue] = useState(''); \r\n    const [selectedCityValue,setselectedCityValue] = useState(''); \r\n\r\n    const [countryOptions,setcountryOptions] = useState([]); \r\n    const [cityOptions,setcityOptions] = useState([]); \r\n\r\n    const [countryListState, handleCountryListFetch] = useHandleFetch(\r\n        [],\r\n        'countryList'\r\n      );\r\n    \r\n      const [cityListState, handleCityListFetch] = useHandleFetch([], 'cityList');\r\n    \r\n      const [countryList, setCountryList] = useState([]);\r\n      const [cityList, setCityList] = useState([]);\r\n\r\n\r\n\r\n\r\n\tconst handleSubmit = async (values : any, actions : any) => {\r\n\t  const updateCustomerRes = await handleUpdateCustomerFetch({\r\n\t\turlOptions: {\r\n\t\t\tplaceHolders: {\r\n\t\t\t  id: values.id,\r\n\t\t\t}\r\n\t\t  },\r\n\t\tbody: {\r\n\t\t\tphone: values.phone,\r\n            email: values.email,\r\n            password: values.password,\r\n            address1: values.address1,\r\n            address2: values.address2,\r\n            firstName: values.firstName,\r\n            lastName: values.lastName,\r\n            country: selectedCountryValue,\r\n            city: selectedCityValue,\r\n\t\t},\r\n\t  });\r\n\t\r\n\r\n\t   \t  // @ts-ignore\r\n\t\t\t if(updateCustomerRes && updateCustomerRes.status === 'ok'){\r\n\t\t\t\topenSuccessNotification(); \r\n\t\t\r\n\t\t\t\tconst positionInTag = () => {\r\n\t\t\t\t\treturn customerList.map(item => item.id).indexOf(customer.id);\r\n\t\t\t\t  }\r\n\t\t\r\n\t\t\t\t  const index = positionInTag();\r\n\t\t\r\n\t\t\t\t  // @ts-ignore\r\n\t\t\t\t  const updatedItem = Object.assign({}, tagList[index], { ...updateCustomerRes });\r\n\t\t\t\t  const updateTagList = [...customerList.slice(0, index), updatedItem, ...customerList.slice(index + 1)];\r\n\t\t\t\t  setCustomerList(updateTagList); \r\n\t\t\t\t\r\n\t\t\t  }\r\n\t\t\t  else {\r\n\t\t\t\topenErrorNotification();\r\n\t\t\t  }\r\n\t\t\t\r\n\t\t\t  actions.setSubmitting(false);\r\n\t\t\t  setvisible(false)\r\n\t};\r\n\t\r\n\r\n\t\r\n    const onChangeCity = (value) => {\r\n        setselectedCityValue(value); \r\n    }\r\n\r\n    const onChangeCountry = (value) => {\r\n        setselectedCountryValue(value); \r\n    }\r\n    \r\n\tuseEffect(() => {\r\n\t\tconst setCountries = async () => {\r\n\t\t\tconst CountryListRes = await handleCountryListFetch({});\r\n\r\n\t\t\t// @ts-ignore\r\n\t\t\tif (CountryListRes && CountryListRes.length > 0) {\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\tconst countryOptions = CountryListRes.map((country) => {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tvalue: country.name,\r\n\t\t\t\t\t\tname: country.name\r\n\t\t\t\t\t};\r\n\t\t\t\t});\r\n\t\t\t\tsetcountryOptions(countryOptions);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tsetCountries();\r\n    }, []);\r\n    \r\n\r\n    useEffect(() => {\r\n\t\tconst setCities = async () => {\r\n\t\t\tconst cityListRes = await handleCityListFetch({\r\n                urlOptions: {\r\n                    placeHolders: {\r\n                      country: selectedCountryValue,\r\n                    },\r\n                  },\r\n            });\r\n\r\n\t\t\t// @ts-ignore\r\n\t\t\tif (cityListRes && cityListRes.length > 0) {\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\tconst cityOptions = cityListRes.map((city) => {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tvalue: city.name,\r\n\t\t\t\t\t\tname: city.name\r\n\t\t\t\t\t};\r\n\t\t\t\t});\r\n\t\t\t\tsetcityOptions(cityOptions);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tsetCities();\r\n    }, [selectedCountryValue]);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\tconst handleCancel = (e: any) => {\r\n        setvisible(false);\r\n      };\r\n\r\n\r\n\r\n\t  const getisSubmitButtonDisabled = (values,isValid) => {\r\n\t\tif(!isValid ||\r\n            !values.firstName ||\r\n            !values.lastName ||\r\n            !values.password ||\r\n            !values.phone ||\r\n            !values.address1){\r\n\t\t\treturn true; \r\n\t\t}\r\n\t\treturn false; \r\n\t  }\r\n\r\n\treturn (\r\n\t\t<Formik\r\n\t\tonSubmit={(values, actions) => handleSubmit(values, actions)}\r\n\t\tvalidationSchema={validationSchema}\r\n\t\tvalidateOnBlur={false}\r\n\t\tenableReinitialize={true}\r\n\t\tinitialValues={\r\n\t\t  {...customer}\r\n\t\t}\r\n\t  >\r\n\t\t{({\r\n\t\t  handleChange,\r\n\t\t  values,\r\n\t\t  handleSubmit,\r\n\t\t  errors,\r\n\t\t  isValid,\r\n\t\t  isSubmitting,\r\n\t\t  touched,\r\n\t\t  handleBlur,\r\n\t\t  setFieldTouched,\r\n\t\t  handleReset,\r\n\t\t}) => (\r\n\t\t\t<>\r\n\t\t\t<Modal\r\n\t\t\ttitle=\"Quick Edit\"\r\n\t\t\tvisible={visible}\r\n\t\t\tonOk={(e : any) => handleSubmit(e)}\r\n\t\t\tonCancel={handleCancel}\r\n\t\t\tokText='Update'\r\n\t\t\tokButtonProps={{\r\n\t\t\tloading: isSubmitting,\r\n\t\t\thtmlType: \"submit\",\r\n\t\t\tdisabled: getisSubmitButtonDisabled(values, isValid)\r\n\t\t\t}}\r\n\t\t\tbodyStyle={{\r\n                margin: '0',\r\n                padding: '10px'\r\n            }}\r\n  >\r\n      <div className='dubbleRowInputs'>\r\n         <div className='dubbleRowInputs__item'>\r\n         <Input \r\n\t\t\t   label='First Name'\r\n\t\t\t   value={values.firstName}\r\n\t\t\t   name='firstName'\r\n\t\t\t   isError={(touched.firstName && errors.firstName) ||\r\n\t\t\t\t  (!isSubmitting && updateCustomerState.error['error']['firstName'])}\r\n\t\t\t  \r\n\t\t\t\t  errorString={(touched.firstName && errors.firstName) ||\r\n\t\t\t\t\t  (!isSubmitting && updateCustomerState.error['error']['firstName'])}\r\n\t\t\t   onChange={(e : any) => {\r\n\t\t\t\t  handleChange(e);\r\n\t\t\t\t  setFieldTouched('firstName');\r\n\t\t\t\t}}\r\n\t\t\t   />\r\n         </div>\r\n         <div className='dubbleRowInputs__item'>\r\n         <Input \r\n\t\t\t   label='Last Name'\r\n\t\t\t   value={values.lastName}\r\n\t\t\t   name='lastName'\r\n\t\t\t   isError={(touched.lastName && errors.lastName) ||\r\n\t\t\t\t  (!isSubmitting && updateCustomerState.error['error']['lastName'])}\r\n\t\t\t  \r\n\t\t\t\t  errorString={(touched.lastName && errors.lastName) ||\r\n\t\t\t\t\t  (!isSubmitting && updateCustomerState.error['error']['lastName'])}\r\n\t\t\t   onChange={(e : any) => {\r\n\t\t\t\t  handleChange(e);\r\n\t\t\t\t  setFieldTouched('lastName');\r\n\t\t\t\t}}\r\n\t\t\t   />\r\n         </div>\r\n\r\n\r\n\r\n\r\n            </div>\r\n\r\n\t\t\t \r\n\r\n            <div className='dubbleRowInputs'>\r\n         <div className='dubbleRowInputs__item'>\r\n         <Input \r\n\t\t\t   label='Phone'\r\n\t\t\t   value={values.phone}\r\n\t\t\t   name='phone'\r\n\t\t\t   isError={(touched.phone && errors.phone) ||\r\n\t\t\t\t  (!isSubmitting && updateCustomerState.error['error']['phone'])}\r\n\t\t\t  \r\n\t\t\t\t  errorString={(touched.phone && errors.phone) ||\r\n\t\t\t\t\t  (!isSubmitting && updateCustomerState.error['error']['phone'])}\r\n\t\t\t   onChange={(e : any) => {\r\n\t\t\t\t  handleChange(e);\r\n\t\t\t\t  setFieldTouched('phone');\r\n\t\t\t\t}}\r\n\t\t\t   />\r\n         </div>\r\n         <div className='dubbleRowInputs__item'>\r\n         <Input \r\n\t\t\t   label='Email'\r\n\t\t\t   value={values.email}\r\n\t\t\t   name='email'\r\n\t\t\t   isError={(touched.email && errors.email) ||\r\n\t\t\t\t  (!isSubmitting && updateCustomerState.error['error']['email'])}\r\n\t\t\t  \r\n\t\t\t\t  errorString={(touched.email && errors.email) ||\r\n\t\t\t\t\t  (!isSubmitting && updateCustomerState.error['error']['email'])}\r\n\t\t\t   onChange={(e : any) => {\r\n\t\t\t\t  handleChange(e);\r\n\t\t\t\t  setFieldTouched('email');\r\n\t\t\t\t}}\r\n\t\t\t   />\r\n         </div>\r\n\r\n\r\n\r\n\r\n            </div>\r\n\r\n            \r\n\r\n\r\n    \r\n<div className='dubbleRowInputs'>\r\n         <div className='dubbleRowInputs__item'>\r\n         <h3 className='inputFieldLabel'>\r\n                Country\r\n            </h3>\r\n         <Select\r\n\t\t\tshowSearch\r\n\t\t\tstyle={{ width: '100%' }}\r\n\t\t\tplaceholder='Select a Country'\r\n\t\t\toptionFilterProp='children'\r\n\t\t\tdefaultValue={customer && customer.country}\r\n\t\t\tonChange={onChangeCountry}\r\n\t\t\tfilterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n\t\t>\r\n\t\t\t{countryListState.done &&\r\n\t\t\t\tcountryListState.data.length > 0 &&\r\n\t\t\t\tcountryOptions.map((option) => {\r\n\t\t\t\t\treturn <Option value={option.value}>{option.name}</Option>;\r\n\t\t\t\t})}\r\n\t\t</Select>\r\n         </div>\r\n         <div className='dubbleRowInputs__item'>\r\n         <h3 className='inputFieldLabel'>\r\n                City\r\n            </h3>\r\n         <Select\r\n\t\t\tdefaultValue={customer && customer.city}\r\n\t\t\tshowSearch\r\n\t\t\tstyle={{ width: '100%' }}\r\n\t\t\tplaceholder='Select a city'\r\n\t\t\toptionFilterProp='children'\r\n\t\t\tonChange={onChangeCity}\r\n\t\t\tfilterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n\t\t>\r\n\t\t\t{cityListState.done &&\r\n\t\t\t\tcityListState.data.length > 0 &&\r\n\t\t\t\tcityOptions.map((option) => {\r\n\t\t\t\t\treturn <Option value={option.value}>{option.name}</Option>;\r\n\t\t\t\t})}\r\n\t\t</Select>\r\n         </div>\r\n\r\n            </div>\r\n\r\n            <div style={{\r\n                marginTop: '12px'\r\n            }}></div>\r\n\r\n\r\n\r\n            <div className='dubbleRowInputs'>\r\n         <div className='dubbleRowInputs__item'>\r\n         <Input \r\n\t\t\t   label='Address'\r\n\t\t\t   value={values.address1}\r\n\t\t\t   name='address1'\r\n\t\t\t   isError={(touched.address1 && errors.address1) ||\r\n\t\t\t\t  (!isSubmitting && updateCustomerState.error['error']['address1'])}\r\n\t\t\t  \r\n\t\t\t\t  errorString={(touched.address1 && errors.address1) ||\r\n\t\t\t\t\t  (!isSubmitting && updateCustomerState.error['error']['address1'])}\r\n\t\t\t   onChange={(e : any) => {\r\n\t\t\t\t  handleChange(e);\r\n\t\t\t\t  setFieldTouched('address1');\r\n\t\t\t\t}}\r\n\t\t\t   />\r\n         </div>\r\n         <div className='dubbleRowInputs__item'>\r\n         <Input \r\n\t\t\t   label='More specific address'\r\n\t\t\t   value={values.address2}\r\n\t\t\t   name='address2'\r\n\t\t\t   isError={(touched.address2 && errors.address2) ||\r\n\t\t\t\t  (!isSubmitting && updateCustomerState.error['error']['address2'])}\r\n\t\t\t  \r\n\t\t\t\t  errorString={(touched.address2 && errors.address2) ||\r\n\t\t\t\t\t  (!isSubmitting && updateCustomerState.error['error']['address2'])}\r\n\t\t\t   onChange={(e : any) => {\r\n\t\t\t\t  handleChange(e);\r\n\t\t\t\t  setFieldTouched('address2');\r\n\t\t\t\t}}\r\n\t\t\t   />\r\n         </div>\r\n\r\n            </div>\r\n\r\n\r\n\r\n\r\n  </Modal>\r\n\t\t\t  \r\n\t\t\t</>\r\n\t\t  )}\r\n\t  </Formik>\r\n\t);\r\n};\r\n\r\n\r\nexport default QuickEdit;\r\n","import React, {useState,useEffect} from 'react';\r\nimport {withRouter, useHistory} from 'react-router-dom';\r\nimport { Table, Badge, Menu, Dropdown, notification, Space, Tag,Button, Input,Tooltip, Modal , Popconfirm} from 'antd';\r\nimport { PlusOutlined, EditOutlined, DeleteOutlined,EditFilled, CheckCircleOutlined } from '@ant-design/icons';\r\nimport Moment from 'react-moment';\r\n\r\n/// import hooks\r\nimport { useFetch, useHandleFetch } from \"../../hooks\";\r\n\r\n// import components\r\nimport { DataTableSkeleton } from \"../../components/Placeholders\";\r\nimport AddNewStaff from \"./AddNewStaff\";\r\nimport QuickEdit from \"./QuickEdit\";\r\nimport Empty from \"../../components/Empty\";\r\nconst { Column, ColumnGroup } = Table;\r\nconst { Search } = Input;\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t  message: message || 'Staffs Created',\r\n\t  description: '',\r\n\t  icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n  };\r\n\r\n\r\n  const openErrorNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t  message: message || 'Something Went Wrong',\r\n\t  description: '',\r\n\t  icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n  };\r\n\r\n\r\n\r\n\r\n\r\ninterface myTableProps {\r\n  data: any; \r\n  setCustomerList?:any; \r\n} \r\n\r\n\r\nconst MyTable = ({data,setCustomerList}: myTableProps) => {\r\n    const [visible,setvisible] = useState(false);   \r\n    const [activeCategoryForEdit,setactiveCategoryForEdit] = useState(false); \r\n\r\n   const history = useHistory(); \r\n\r\n    const [deleteCustomerState, handleDeleteCustomerFetch] = useHandleFetch({}, 'deleteCustomer');\r\n      const handleDeleteCustomer = async (id) => {\r\n        const deleteCustomerRes = await handleDeleteCustomerFetch({\r\n          urlOptions: {\r\n            placeHolders: {\r\n              id,\r\n            }\r\n            }\r\n          });\r\n\r\n\r\n           // @ts-ignore\r\n\t\t  if(deleteCustomerRes && deleteCustomerRes.status === 'ok'){\r\n\t\t\t  openSuccessNotification('Deleted Staffs'); \r\n\t\t\t  const newCustomerList =  data.filter(item => item.id !== id);\r\n\t\t\t  setCustomerList(newCustomerList); \r\n\t\t  }\r\n      }\r\n      \r\n\r\n    return (\r\n        <>\r\n        <Table \r\n        // expandable={{\r\n        //     expandedRowRender: record => <p style={{ margin: 0 }}>{record.name}</p>,\r\n        //     rowExpandable: record => record.name !== 'Not Expandable',\r\n        //   }}\r\n        // bordered={true}\r\n        size='small'\r\n        // pagination={false}\r\n        dataSource={data}\r\n        >\r\n\r\n          <Column\r\n           title=\"Name\" \r\n           dataIndex=\"name\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n           render={(text, record: any) => (\r\n            <>\r\n              <h4\r\n                onClick={() => {\r\n                  history.push(`/admin/customer/${record.id}`)\r\n                  // setcategoryDetailVisible(true);\r\n                  setactiveCategoryForEdit(record)\r\n                }}\r\n                style={{\r\n                  fontWeight: 400,\r\n                  color: '#555',\r\n                  cursor: 'pointer'\r\n                }}>\r\n                {text}\r\n              </h4>\r\n            </>\r\n          )}\r\n            />\r\n\r\n         \r\n          <Column\r\n           title=\"Phone\" \r\n           dataIndex=\"phone\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n         \r\n            />\r\n\r\n\r\n          <Column\r\n           title=\"Country\" \r\n           dataIndex=\"country\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n         \r\n            />\r\n\r\n\r\n          <Column\r\n           title=\"City\" \r\n           dataIndex=\"city\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n         \r\n            />\r\n\r\n           <Column\r\n           title=\"Created\" \r\n           dataIndex=\"created\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n           render={(text, record : any) => (\r\n            <Space size=\"middle\">\r\n            \r\n            <h5>\r\n              <Moment>\r\n                {text}\r\n              </Moment>\r\n            </h5>\r\n             \r\n            </Space>\r\n          )}\r\n            />\r\n\r\n\r\n\r\n          {/* <Column \r\n          \r\n          className='classnameofthecolumn'\r\n\r\n          title=\"Product\" dataIndex=\"product\" key=\"product\" /> */}\r\n\r\n          {/* <Column \r\n          \r\n          className='classnameofthecolumn'\r\n\r\n          title=\"Sub Category\" dataIndex=\"subCategory\" key=\"subCategory\" /> */}\r\n        \r\n        {/* <Column\r\n          title=\"Tags\"\r\n          dataIndex=\"tags\"\r\n          key=\"tags\"\r\n          render={tags => (\r\n            <>\r\n              {tags.map((tag : any) => (\r\n                <Tag color=\"blue\" key={tag}>\r\n                  {tag}\r\n                </Tag>\r\n              ))}\r\n            </>\r\n          )}\r\n        /> */}\r\n        <Column\r\n        \r\n        className='classnameofthecolumn'\r\n          title=\"\"\r\n          key=\"action\"\r\n          align='right'\r\n          render={(text, record : any) => (\r\n            <Space size=\"middle\">\r\n              <a href='##'>\r\n               <Tooltip placement=\"top\" title='Quick Edit Customer'>\r\n              <span className='iconSize' onClick={() => {\r\n                setvisible(true)\r\n                setactiveCategoryForEdit(record); \r\n              }}> \r\n              <EditOutlined />\r\n            \r\n              </span>\r\n               </Tooltip>\r\n               </a>\r\n\r\n             \r\n\r\n              \r\n               <Popconfirm \r\n               \r\n               onConfirm={() => handleDeleteCustomer(record.id)}\r\n               title=\"Are you sure？\" okText=\"Yes\" cancelText=\"No\">\r\n           \r\n           <span \r\n             className='iconSize iconSize-danger'\r\n             > \r\n             <DeleteOutlined/>\r\n            </span>\r\n       \r\n           </Popconfirm>\r\n             \r\n            </Space>\r\n          )}\r\n        />\r\n      </Table>\r\n\r\n    \r\n\r\n    {activeCategoryForEdit &&   <QuickEdit \r\n    customerList={data}\r\n    setCustomerList={setCustomerList}\r\n    setvisible={setvisible}\r\n    visible={visible}\r\n    customer={activeCategoryForEdit}/>}\r\n    \r\n    \r\n    </>\r\n    )\r\n}\r\n\r\n\r\ninterface Props {\r\n    history: any; \r\n}\r\n\r\nconst CustomerList = ({history}: Props) => {\r\n\r\n\r\n    const [customerList,setCustomerList] = useState([]); \r\n\r\n    const [customerState, handleCustomerListFetch] = useHandleFetch({}, 'customerList');\r\n  \r\n  \r\n    useEffect(()=>{\r\n     const setCustomers = async () => {\r\n       const customers = await handleCustomerListFetch({}); \r\n       // @ts-ignore\r\n       setCustomerList(customers); \r\n     }\r\n     setCustomers(); \r\n    },[])\r\n\r\n\r\n    \r\n\r\n  \r\n  const handleSearch = (value) => {\r\n    if(customerState.data.length > 0 ){\r\n      const newCustomerList = customerState.data.filter(item => item.name.toLowerCase().includes(value.toLowerCase())); \r\n      setCustomerList(newCustomerList); \r\n    }\r\n     \r\n  }\r\n\r\n\r\n\r\n    \r\n\r\n  const [addNewCategoryVisible,setAddNewCategoryVisible] = useState(false);   \r\n\r\n  // console.log('customerState',customerState)\r\n\r\n\r\n\r\n\treturn (\r\n\t\t<>\r\n    {/* <h2 className='containerPageTitle'>\r\n      Categories\r\n    </h2> */}\r\n    <div className='categoryListContainer'>\r\n            <div className='categoryListContainer__header'>\r\n           \r\n\r\n          <div className='categoryListContainer__header-searchBar'>\r\n          <h2 className='categoryListContainer__header-title'>\r\n            Staffs\r\n            </h2>\r\n\r\n\r\n          <Search\r\n            enterButton={false}\r\n            className='searchbarClassName'\r\n          placeholder=\"search staffs..\"\r\n          onSearch={value =>handleSearch(value)}\r\n          // style={{ width: 300 }}\r\n        />\r\n          </div>\r\n            <Button\r\n          // type=\"primary\"\r\n          className='btnPrimaryClassNameoutline'\r\n          icon={<PlusOutlined />}\r\n          onClick={() => setAddNewCategoryVisible(true)}\r\n        >\r\n        Add New\r\n            \r\n            </Button>\r\n            </div>\r\n\r\n            <div className='categoryListContainer__afterHeader'>\r\n            {/* <Search\r\n      placeholder=\"search categories..\"\r\n      size=\"large\"\r\n      onSearch={value => console.log(value)}\r\n      style={{ width: 300 }}\r\n    /> */}\r\n            </div>\r\n\r\n     \r\n\t\t\t\r\n\t\t\t<div className='categoryListContainer__categoryList'>\r\n        {customerState.done && customerList.length > 0 && <MyTable\r\n        setCustomerList={setCustomerList}\r\n         data={customerList} />}\r\n        {customerState.isLoading && <DataTableSkeleton />}\r\n        {customerState.done && !(customerList.length > 0) && (\r\n\t\t\t<Empty title='No Staff found'  />\r\n\t\t)}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\r\n\r\n{customerState.done && \r\n    <AddNewStaff \r\n    setCustomerList={setCustomerList}\r\n          addNewCategoryVisible={addNewCategoryVisible} \r\n          setAddNewCategoryVisible={setAddNewCategoryVisible}\r\n          customerList={customerState.data}\r\n          \r\n           />}\r\n\r\n      \r\n\r\n        \r\n    </>\r\n\t);\r\n};\r\n\r\nexport default withRouter(CustomerList);\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Modal, Select, notification } from 'antd';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\nimport { PlusOutlined, EditOutlined, DeleteOutlined, EditFilled, CheckCircleOutlined } from '@ant-design/icons';\r\n\r\n\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport { useHandleFetch } from '../../hooks';\r\n\r\n\r\nconst { Option } = Select;\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    firstName: Yup.string()\r\n        .label('Firstname')\r\n        .required()\r\n        .min(2, 'First name must have at least 2 characters '),\r\n    lastName: Yup.string()\r\n        .label('Lastname')\r\n        .required()\r\n        .min(2, 'Lastname must have at least 2 characters '),\r\n    phone: Yup.string()\r\n        .required('Please tell us your mobile number.')\r\n        .max(13, 'Please enter a valid mobile number.'),\r\n    password: Yup.string()\r\n        .label('Password')\r\n        .required()\r\n        .min(6, 'Password must have at least 6 characters'),\r\n    address1: Yup.string()\r\n        .label('Address line 1')\r\n        .required()\r\n        .min(3, 'Address line 1 must have at least 3 characters '),\r\n\r\n    email: Yup.string().label('Email').email('Please enter a valid email'),\r\n});\r\n\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Tag Created',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Something Went Wrong',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n    });\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\r\ninterface Props {\r\n    customer: any;\r\n    setvisible: any;\r\n    visible: any;\r\n\r\n\r\n}\r\n\r\nconst QuickEdit = ({ customer, setvisible, visible }: Props) => {\r\n    const [updateCustomerState, handleUpdateCustomerFetch] = useHandleFetch({}, 'updateCustomer');\r\n\r\n\r\n    const [selectedCountryValue, setselectedCountryValue] = useState('');\r\n    const [selectedCityValue, setselectedCityValue] = useState('');\r\n\r\n    const [countryOptions, setcountryOptions] = useState([]);\r\n    const [cityOptions, setcityOptions] = useState([]);\r\n\r\n    const [countryListState, handleCountryListFetch] = useHandleFetch(\r\n        [],\r\n        'countryList'\r\n    );\r\n\r\n    const [cityListState, handleCityListFetch] = useHandleFetch([], 'cityList');\r\n\r\n    const [countryList, setCountryList] = useState([]);\r\n    const [cityList, setCityList] = useState([]);\r\n\r\n\r\n\r\n\r\n    const handleSubmit = async (values: any, actions: any) => {\r\n        const updateCustomerRes = await handleUpdateCustomerFetch({\r\n            urlOptions: {\r\n                placeHolders: {\r\n                    id: values.id,\r\n                }\r\n            },\r\n            body: {\r\n                phone: values.phone,\r\n                email: values.email,\r\n                password: values.password,\r\n                address1: values.address1,\r\n                address2: values.address2,\r\n                firstName: values.firstName,\r\n                lastName: values.lastName,\r\n                country: selectedCountryValue,\r\n                city: selectedCityValue,\r\n            },\r\n        });\r\n\r\n\r\n        // @ts-ignore\r\n        if (updateCustomerRes && updateCustomerRes.status === 'ok') {\r\n            openSuccessNotification();\r\n\r\n            // const positionInTag = () => {\r\n            //     return customerList.map(item => item.id).indexOf(customer.id);\r\n            // }\r\n\r\n            // const index = positionInTag();\r\n\r\n            // const updatedItem = Object.assign({}, tagList[index], { ...updateCustomerRes });\r\n            // const updateTagList = [...customerList.slice(0, index), updatedItem, ...customerList.slice(index + 1)];\r\n            // setCustomerList(updateTagList);\r\n\r\n        }\r\n        else {\r\n            openErrorNotification();\r\n        }\r\n\r\n        actions.setSubmitting(false);\r\n        setvisible(false)\r\n    };\r\n\r\n\r\n\r\n    const onChangeCity = (value) => {\r\n        setselectedCityValue(value);\r\n    }\r\n\r\n    const onChangeCountry = (value) => {\r\n        setselectedCountryValue(value);\r\n    }\r\n\r\n    useEffect(() => {\r\n        const setCountries = async () => {\r\n            const CountryListRes = await handleCountryListFetch({});\r\n\r\n            // @ts-ignore\r\n            if (CountryListRes && CountryListRes.length > 0) {\r\n                // @ts-ignore\r\n                const countryOptions = CountryListRes.map((country) => {\r\n                    return {\r\n                        value: country.name,\r\n                        name: country.name\r\n                    };\r\n                });\r\n                setcountryOptions(countryOptions);\r\n            }\r\n        };\r\n\r\n        setCountries();\r\n    }, []);\r\n\r\n\r\n    useEffect(() => {\r\n        const setCities = async () => {\r\n            const cityListRes = await handleCityListFetch({\r\n                urlOptions: {\r\n                    placeHolders: {\r\n                        country: selectedCountryValue,\r\n                    },\r\n                },\r\n            });\r\n\r\n            // @ts-ignore\r\n            if (cityListRes && cityListRes.length > 0) {\r\n                // @ts-ignore\r\n                const cityOptions = cityListRes.map((city) => {\r\n                    return {\r\n                        value: city.name,\r\n                        name: city.name\r\n                    };\r\n                });\r\n                setcityOptions(cityOptions);\r\n            }\r\n        };\r\n\r\n        setCities();\r\n    }, [selectedCountryValue]);\r\n\r\n\r\n    const handleCancel = (e: any) => {\r\n        setvisible(false);\r\n    };\r\n\r\n\r\n\r\n    const getisSubmitButtonDisabled = (values, isValid) => {\r\n        if (!isValid ||\r\n            !values.firstName ||\r\n            !values.lastName ||\r\n            !values.password ||\r\n            !values.phone ||\r\n            !values.address1) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    return (\r\n        <Formik\r\n            onSubmit={(values, actions) => handleSubmit(values, actions)}\r\n            validationSchema={validationSchema}\r\n            validateOnBlur={false}\r\n            enableReinitialize={true}\r\n            initialValues={\r\n                { ...customer }\r\n            }\r\n        >\r\n            {({\r\n                handleChange,\r\n                values,\r\n                handleSubmit,\r\n                errors,\r\n                isValid,\r\n                isSubmitting,\r\n                touched,\r\n                handleBlur,\r\n                setFieldTouched,\r\n                handleReset,\r\n            }) => (\r\n                    <>\r\n                        <Modal\r\n                            title=\"Quick Edit\"\r\n                            visible={visible}\r\n                            onOk={(e: any) => handleSubmit(e)}\r\n                            onCancel={handleCancel}\r\n                            okText='Update'\r\n                            okButtonProps={{\r\n                                loading: isSubmitting,\r\n                                htmlType: \"submit\",\r\n                                disabled: getisSubmitButtonDisabled(values, isValid)\r\n                            }}\r\n                            bodyStyle={{\r\n                                margin: '0',\r\n                                padding: '10px'\r\n                            }}\r\n                        >\r\n                            <div className='dubbleRowInputs'>\r\n                                <div className='dubbleRowInputs__item'>\r\n                                    <Input\r\n                                        label='First Name'\r\n                                        value={values.firstName}\r\n                                        name='firstName'\r\n                                        isError={(touched.firstName && errors.firstName) ||\r\n                                            (!isSubmitting && updateCustomerState.error['error']['firstName'])}\r\n\r\n                                        errorString={(touched.firstName && errors.firstName) ||\r\n                                            (!isSubmitting && updateCustomerState.error['error']['firstName'])}\r\n                                        onChange={(e: any) => {\r\n                                            handleChange(e);\r\n                                            setFieldTouched('firstName');\r\n                                        }}\r\n                                    />\r\n                                </div>\r\n                                <div className='dubbleRowInputs__item'>\r\n                                    <Input\r\n                                        label='Last Name'\r\n                                        value={values.lastName}\r\n                                        name='lastName'\r\n                                        isError={(touched.lastName && errors.lastName) ||\r\n                                            (!isSubmitting && updateCustomerState.error['error']['lastName'])}\r\n\r\n                                        errorString={(touched.lastName && errors.lastName) ||\r\n                                            (!isSubmitting && updateCustomerState.error['error']['lastName'])}\r\n                                        onChange={(e: any) => {\r\n                                            handleChange(e);\r\n                                            setFieldTouched('lastName');\r\n                                        }}\r\n                                    />\r\n                                </div>\r\n\r\n\r\n\r\n\r\n                            </div>\r\n\r\n\r\n\r\n                            <div className='dubbleRowInputs'>\r\n                                <div className='dubbleRowInputs__item'>\r\n                                    <Input\r\n                                        label='Phone'\r\n                                        value={values.phone}\r\n                                        name='phone'\r\n                                        isError={(touched.phone && errors.phone) ||\r\n                                            (!isSubmitting && updateCustomerState.error['error']['phone'])}\r\n\r\n                                        errorString={(touched.phone && errors.phone) ||\r\n                                            (!isSubmitting && updateCustomerState.error['error']['phone'])}\r\n                                        onChange={(e: any) => {\r\n                                            handleChange(e);\r\n                                            setFieldTouched('phone');\r\n                                        }}\r\n                                    />\r\n                                </div>\r\n                                <div className='dubbleRowInputs__item'>\r\n                                    <Input\r\n                                        label='Email'\r\n                                        value={values.email}\r\n                                        name='email'\r\n                                        isError={(touched.email && errors.email) ||\r\n                                            (!isSubmitting && updateCustomerState.error['error']['email'])}\r\n\r\n                                        errorString={(touched.email && errors.email) ||\r\n                                            (!isSubmitting && updateCustomerState.error['error']['email'])}\r\n                                        onChange={(e: any) => {\r\n                                            handleChange(e);\r\n                                            setFieldTouched('email');\r\n                                        }}\r\n                                    />\r\n                                </div>\r\n\r\n\r\n\r\n\r\n                            </div>\r\n\r\n\r\n\r\n\r\n\r\n                            <div className='dubbleRowInputs'>\r\n                                <div className='dubbleRowInputs__item'>\r\n                                    <h3 className='inputFieldLabel'>\r\n                                        Country\r\n            </h3>\r\n                                    <Select\r\n                                        showSearch\r\n                                        style={{ width: '100%' }}\r\n                                        placeholder='Select a Country'\r\n                                        optionFilterProp='children'\r\n                                        defaultValue={customer && customer.country}\r\n                                        onChange={onChangeCountry}\r\n                                        filterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n                                    >\r\n                                        {countryListState.done &&\r\n                                            countryListState.data.length > 0 &&\r\n                                            countryOptions.map((option) => {\r\n                                                return <Option value={option.value}>{option.name}</Option>;\r\n                                            })}\r\n                                    </Select>\r\n                                </div>\r\n                                <div className='dubbleRowInputs__item'>\r\n                                    <h3 className='inputFieldLabel'>\r\n                                        City\r\n            </h3>\r\n                                    <Select\r\n                                        defaultValue={customer && customer.city}\r\n                                        showSearch\r\n                                        style={{ width: '100%' }}\r\n                                        placeholder='Select a city'\r\n                                        optionFilterProp='children'\r\n                                        onChange={onChangeCity}\r\n                                        filterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n                                    >\r\n                                        {cityListState.done &&\r\n                                            cityListState.data.length > 0 &&\r\n                                            cityOptions.map((option) => {\r\n                                                return <Option value={option.value}>{option.name}</Option>;\r\n                                            })}\r\n                                    </Select>\r\n                                </div>\r\n\r\n                            </div>\r\n\r\n                            <div style={{\r\n                                marginTop: '12px'\r\n                            }}></div>\r\n\r\n\r\n\r\n                            <div className='dubbleRowInputs'>\r\n                                <div className='dubbleRowInputs__item'>\r\n                                    <Input\r\n                                        label='Address'\r\n                                        value={values.address1}\r\n                                        name='address1'\r\n                                        isError={(touched.address1 && errors.address1) ||\r\n                                            (!isSubmitting && updateCustomerState.error['error']['address1'])}\r\n\r\n                                        errorString={(touched.address1 && errors.address1) ||\r\n                                            (!isSubmitting && updateCustomerState.error['error']['address1'])}\r\n                                        onChange={(e: any) => {\r\n                                            handleChange(e);\r\n                                            setFieldTouched('address1');\r\n                                        }}\r\n                                    />\r\n                                </div>\r\n                                <div className='dubbleRowInputs__item'>\r\n                                    <Input\r\n                                        label='More specific address'\r\n                                        value={values.address2}\r\n                                        name='address2'\r\n                                        isError={(touched.address2 && errors.address2) ||\r\n                                            (!isSubmitting && updateCustomerState.error['error']['address2'])}\r\n\r\n                                        errorString={(touched.address2 && errors.address2) ||\r\n                                            (!isSubmitting && updateCustomerState.error['error']['address2'])}\r\n                                        onChange={(e: any) => {\r\n                                            handleChange(e);\r\n                                            setFieldTouched('address2');\r\n                                        }}\r\n                                    />\r\n                                </div>\r\n\r\n                            </div>\r\n\r\n\r\n\r\n\r\n                        </Modal>\r\n\r\n                    </>\r\n                )}\r\n        </Formik>\r\n    );\r\n};\r\n\r\n\r\nexport default QuickEdit;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useParams, useHistory } from \"react-router\";\r\n\r\n\r\n// import hooks\r\nimport { useHandleFetch } from \"../../hooks\";\r\n\r\n// import lib\r\nimport {\r\n    FileOutlined,\r\n    InboxOutlined,\r\n    RadiusUpleftOutlined,\r\n    RadiusUprightOutlined,\r\n    RadiusBottomleftOutlined,\r\n    RadiusBottomrightOutlined,\r\n    PlusOutlined,\r\n    DeleteOutlined,\r\n    EditOutlined,\r\n    CheckCircleOutlined\r\n} from '@ant-design/icons';\r\n\r\nimport { Skeleton, Empty, Popconfirm, Upload, message, Switch, Select, Button, notification, Table, Space, Input as CoolInput, Tooltip, Modal } from 'antd';\r\n\r\n\r\n// import components\r\nimport { DataTableSkeleton } from \"../../components/Placeholders\";\r\nimport StaffEdit from \"./StaffEdit\";\r\n\r\n\r\nconst { Column, ColumnGroup } = Table;\r\nconst { Search } = CoolInput;\r\n\r\n\r\ninterface Props {\r\n    productRecord?: any;\r\n}\r\n\r\nconst NewBrandDetail = (props: Props) => {\r\n    const [tagDetailState, handleTagDetailFetch] = useHandleFetch({}, 'tagDetail');\r\n    const [tagProductsState, handleTagProductsFetch] = useHandleFetch({}, 'tagProducts');\r\n    const [tagEditVisible, setTagEditVisible] = useState(false);\r\n\r\n\r\n    const params = useParams();\r\n    const history = useHistory();\r\n    const tagId = params['id'];\r\n\r\n    useEffect(() => {\r\n\r\n        const getBrandDetail = async () => {\r\n            await handleTagDetailFetch({\r\n                urlOptions: {\r\n                    placeHolders: {\r\n                        id: tagId\r\n                    }\r\n                }\r\n            })\r\n        };\r\n\r\n        getBrandDetail();\r\n\r\n    }, [tagId]);\r\n\r\n    useEffect(() => {\r\n        const getTagProducts = async () => {\r\n            await handleTagProductsFetch({\r\n                urlOptions: {\r\n                    placeHolders: {\r\n                        id: tagId\r\n                    }\r\n                }\r\n            })\r\n        };\r\n\r\n        getTagProducts();\r\n\r\n    }, [tagId]);\r\n\r\n\r\n\r\n\r\n    console.log('tagProductsState', tagProductsState);\r\n\r\n    console.log('brandParams', params);\r\n\r\n\r\n    return (\r\n        <div className='brandDetailContainer'>\r\n            <div className='brandDetailContainer__heading'>\r\n                <h3>\r\n                    Staff Detail\r\n                </h3>\r\n\r\n                {tagDetailState.done && tagDetailState.data && (Object.keys(tagDetailState.data).length > 0) && (\r\n                    <>\r\n                        <StaffEdit\r\n                            visible={tagEditVisible}\r\n                            setvisible={setTagEditVisible}\r\n                            customer={tagDetailState.data}\r\n                        />\r\n                        <Button\r\n                            onClick={() => setTagEditVisible(true)}\r\n                            type='link'\r\n                            icon={<EditOutlined />}\r\n                        >\r\n                            Edit\r\n                      </Button>\r\n                    </>\r\n                )}\r\n            </div>\r\n            <Skeleton\r\n                paragraph={{ rows: 2 }}\r\n                loading={tagDetailState.isLoading}>\r\n                {tagDetailState.done && tagDetailState.data && !(Object.keys(tagDetailState.data).length > 0) && (\r\n                    <Empty description='No Staffs found' image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n                )}\r\n\r\n                {tagDetailState.done && tagDetailState.data && (Object.keys(tagDetailState.data).length > 0) && (\r\n                    <div className='brandDetailContainer__header'>\r\n\r\n                        <div className='brandDetailContainer__header-info'>\r\n                            <h2>\r\n                                {tagDetailState.data['name']}\r\n                            </h2>\r\n                            <h3>\r\n                                {tagDetailState.data['description']}\r\n                            </h3>\r\n                            {tagDetailState.data['url'] && (\r\n                                <h3>\r\n                                    URL:\r\n                                    <span>\r\n                                        {tagDetailState.data['url']}\r\n                                    </span>\r\n\r\n                                </h3>\r\n                            )}\r\n                        </div>\r\n                    </div>\r\n                )}\r\n\r\n            </Skeleton>\r\n\r\n            <div className='brandDetailContainer__heading'>\r\n                <h3>\r\n                    Products\r\n                </h3>\r\n            </div>\r\n            <div className='brandDetailContainer__body'>\r\n                {tagProductsState.isLoading && <DataTableSkeleton />}\r\n                {tagProductsState.done && !(tagProductsState.data.length > 0) && (\r\n                    <div style={{\r\n                        marginTop: '100px'\r\n                    }}>\r\n                        <Empty description='No Orderss exists for this Customer ' image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n                    </div>\r\n                )}\r\n\r\n                {tagProductsState.done && tagProductsState.data && tagProductsState.data.length > 0 && (\r\n                    <>\r\n                        <Table\r\n                            style={{\r\n                                paddingTop: '10px',\r\n                                borderRadius: '5px !important',\r\n                                overflow: 'hidden',\r\n                                boxShadow: '0 0.125rem 0.625rem rgba(227, 231, 250, 0.3), 0 0.0625rem 0.125rem rgba(206, 220, 233, 0.4)'\r\n                            }}\r\n                            // expandable={{\r\n                            //     expandedRowRender: record => <p style={{ margin: 0 }}>{record.name}</p>,\r\n                            //     rowExpandable: record => record.name !== 'Not Expandable',\r\n                            //   }}\r\n                            // bordered={true}\r\n                            size='small'\r\n                            // pagination={false}\r\n                            dataSource={tagProductsState.data}\r\n                            tableLayout={'auto'}\r\n                            onHeaderRow={column => {\r\n                                return {\r\n                                    style: {\r\n                                        color: 'red !important'\r\n                                    }\r\n\r\n                                };\r\n                            }}\r\n                        >\r\n                            <Column\r\n                                title=\"\"\r\n                                dataIndex=\"cover\"\r\n                                key=\"id\"\r\n                                width={'80px'}\r\n\r\n                                className='classnameofthecolumn'\r\n\r\n                                render={(cover, record: any) => (\r\n                                    <>\r\n                                        <img\r\n                                            onClick={() => {\r\n                                                history.push(`/admin/product/${record.id}`)\r\n                                            }}\r\n                                            src={cover} alt='cover img' style={{\r\n                                                height: '40px',\r\n                                                width: '40px',\r\n                                                objectFit: \"contain\",\r\n                                                borderRadius: '3px',\r\n                                                cursor: 'pointer'\r\n                                            }} />\r\n\r\n\r\n\r\n\r\n                                    </>\r\n                                )}\r\n                            />\r\n\r\n                            <Column\r\n                                title=\"Name\"\r\n                                dataIndex=\"name\"\r\n                                key=\"id\"\r\n                                className='classnameofthecolumn'\r\n                                render={(text, record: any) => (\r\n                                    <>\r\n                                        <h4\r\n                                            onClick={() => {\r\n                                                history.push(`/admin/product/${record.id}`)\r\n                                            }}\r\n                                            style={{\r\n                                                fontWeight: 400,\r\n                                                color: '#555',\r\n                                                cursor: 'pointer'\r\n\r\n                                            }}>\r\n                                            {text}\r\n                                        </h4>\r\n\r\n\r\n                                    </>\r\n                                )}\r\n\r\n                            />\r\n\r\n                            <Column\r\n                                title=\"Offer Price\"\r\n                                dataIndex=\"offerPrice\"\r\n                                key=\"id\"\r\n                                className='classnameofthecolumn'\r\n\r\n                            />\r\n\r\n\r\n                            <Column\r\n                                title=\"Price\"\r\n                                dataIndex=\"price\"\r\n                                key=\"id\"\r\n                                className='classnameofthecolumn'\r\n\r\n                            />\r\n\r\n                        </Table>\r\n                    </>\r\n                )}\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NewBrandDetail\r\n","import React, { useState } from 'react';\r\nimport { Modal, notification } from 'antd';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport { useHandleFetch } from '../../hooks';\r\nimport { CheckCircleOutlined, PlusOutlined, EditOutlined, DeleteOutlined, EditFilled } from '@ant-design/icons';\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n\tname: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t\tmessage: message || 'Expense Updated',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t\tmessage: message || 'Something Went Wrong',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n};\r\n\r\n\r\n\r\ninterface Props {\r\n\tcategory: any;\r\n\tsetvisible: any;\r\n\tvisible: any;\r\n\ttagList: any;\r\n\tsetTagList: any;\r\n\r\n}\r\n\r\nconst QuickEdit = ({ category, setvisible, visible, tagList, setTagList }: Props) => {\r\n\tconst [updateTagState, handleUpdateCategoryFetch] = useHandleFetch({}, 'updateTag');\r\n\r\n\tconst handleSubmit = async (values: any, actions: any) => {\r\n\t\tconst updateTagRes = await handleUpdateCategoryFetch({\r\n\t\t\turlOptions: {\r\n\t\t\t\tplaceHolders: {\r\n\t\t\t\t\tid: values.id,\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tbody: {\r\n\t\t\t\tname: values.name,\r\n\t\t\t\tdescription: values.description,\r\n\t\t\t},\r\n\t\t});\r\n\r\n\t\t// @ts-ignore\r\n\t\tif (updateTagRes && updateTagRes.status === 'ok') {\r\n\t\t\topenSuccessNotification();\r\n\r\n\t\t\tconst positionInTag = () => {\r\n\t\t\t\treturn tagList.map(item => item.id).indexOf(category.id);\r\n\t\t\t}\r\n\r\n\t\t\tconst index = positionInTag();\r\n\r\n\t\t\t// @ts-ignore\r\n\t\t\tconst updatedItem = Object.assign({}, tagList[index], { ...updateTagRes });\r\n\t\t\tconst updateTagList = [...tagList.slice(0, index), updatedItem, ...tagList.slice(index + 1)];\r\n\t\t\tsetTagList(updateTagList);\r\n\r\n\t\t}\r\n\t\telse {\r\n\t\t\topenErrorNotification();\r\n\t\t}\r\n\r\n\t\tactions.setSubmitting(false);\r\n\t\tsetvisible(false)\r\n\t};\r\n\r\n\r\n\tconst handleCancel = (e: any) => {\r\n\t\tsetvisible(false);\r\n\t};\r\n\r\n\r\n\tconst getisSubmitButtonDisabled = (values, isValid) => {\r\n\t\tif (!values.name || !isValid) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\treturn (\r\n\t\t<Formik\r\n\t\t\tonSubmit={(values, actions) => handleSubmit(values, actions)}\r\n\t\t\tvalidationSchema={validationSchema}\r\n\t\t\tvalidateOnBlur={false}\r\n\t\t\tenableReinitialize={true}\r\n\t\t\tinitialValues={\r\n\t\t\t\t{ ...category }\r\n\t\t\t}\r\n\t\t>\r\n\t\t\t{({\r\n\t\t\t\thandleChange,\r\n\t\t\t\tvalues,\r\n\t\t\t\thandleSubmit,\r\n\t\t\t\terrors,\r\n\t\t\t\tisValid,\r\n\t\t\t\tisSubmitting,\r\n\t\t\t\ttouched,\r\n\t\t\t\thandleBlur,\r\n\t\t\t\tsetFieldTouched,\r\n\t\t\t\thandleReset,\r\n\t\t\t}) => (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<Modal\r\n\t\t\t\t\t\t\ttitle=\"Quick Edit\"\r\n\t\t\t\t\t\t\tvisible={visible}\r\n\t\t\t\t\t\t\tonOk={(e: any) => handleSubmit(e)}\r\n\t\t\t\t\t\t\tonCancel={handleCancel}\r\n\t\t\t\t\t\t\tokText='Update'\r\n\t\t\t\t\t\t\tokButtonProps={{\r\n\t\t\t\t\t\t\t\tloading: isSubmitting,\r\n\t\t\t\t\t\t\t\thtmlType: \"submit\",\r\n\t\t\t\t\t\t\t\tdisabled: getisSubmitButtonDisabled(values, isValid)\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\tlabel='Title'\r\n\t\t\t\t\t\t\t\tvalue={values.name}\r\n\t\t\t\t\t\t\t\tname='name'\r\n\t\t\t\t\t\t\t\tisError={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateTagState.error['error']['name'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateTagState.error['error']['name'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('name');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\tlabel='Description'\r\n\t\t\t\t\t\t\t\tvalue={values.description}\r\n\t\t\t\t\t\t\t\tname='description'\r\n\t\t\t\t\t\t\t\tisError={(touched.description && errors.description) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateTagState.error['error']['description'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.description && errors.description) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateTagState.error['error']['description'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('description');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</Modal>\r\n\r\n\t\t\t\t\t</>\r\n\t\t\t\t)}\r\n\t\t</Formik>\r\n\t);\r\n};\r\n\r\n\r\nexport default QuickEdit;\r\n","import React, { useState } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n\r\nimport { useHandleFetch } from '../../hooks';\r\n// import third party ui lib\r\nimport { Upload, message, Switch, Select, Button, notification, Modal, Tooltip } from 'antd';\r\n\r\nimport {\r\n    FileOutlined,\r\n    InboxOutlined,\r\n    FileAddOutlined,\r\n    DeleteOutlined,\r\n    CheckCircleOutlined,\r\n    CloseOutlined,\r\n    CheckOutlined,\r\n    InfoCircleOutlined,\r\n    PlusOutlined,\r\n    FileImageFilled\r\n} from '@ant-design/icons';\r\n\r\n\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport MediaLibrary from \"../../components/MediaLibrary\";\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    name: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Tag Created',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n    notification.error({\r\n        message: message || 'Something Went Wrong',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst initialValues = {\r\n    name: '',\r\n    description: '',\r\n}\r\n\r\n\r\n\r\ninterface Props {\r\n    addNewCategoryVisible?: any;\r\n    setAddNewCategoryVisible?: any;\r\n    tagList?: any;\r\n    setTagList?: any;\r\n\r\n}\r\n\r\nconst AddNewBrand = ({ addNewCategoryVisible, setAddNewCategoryVisible, tagList, setTagList }: Props) => {\r\n\r\n    const [addTagState, handleAddTagFetch] = useHandleFetch({}, 'addTag');\r\n    const [myImages, setmyImages] = useState(false);\r\n    const [visibleMedia, setvisibleMedia] = useState(false);\r\n    const [coverImageId, setCoverImageId] = useState('');\r\n\r\n\r\n    const handleSubmit = async (values: any, actions: any) => {\r\n        const addTagRes = await handleAddTagFetch({\r\n            urlOptions: {\r\n                placeHolders: {\r\n                    id: values.id,\r\n                }\r\n            },\r\n            body: {\r\n                name: values.name.trim(),\r\n                description: values.description,\r\n            },\r\n        });\r\n\r\n        // @ts-ignore\r\n        if (addTagRes && addTagRes.status === 'ok') {\r\n            openSuccessNotification();\r\n\r\n            setTagList([...tagList, {\r\n                id: addTagRes['id'] || '',\r\n                key: addTagRes['id'] || '',\r\n                name: addTagRes['name'] || '',\r\n                description: addTagRes['description'] || '',\r\n            }])\r\n            actions.resetForm();\r\n            setAddNewCategoryVisible(false);\r\n        }\r\n        else {\r\n            openErrorNotification();\r\n        }\r\n\r\n\r\n        actions.setSubmitting(false);\r\n\r\n    };\r\n\r\n\r\n    const handleCancel = (e: any) => {\r\n        setAddNewCategoryVisible(false);\r\n    };\r\n\r\n\r\n    const getisSubmitButtonDisabled = (values, isValid) => {\r\n        if (!values.name || !isValid) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n\r\n\r\n\r\n    const handleImagesDelete = (id) => {\r\n        // @ts-ignore\r\n        const newImages = myImages && myImages.filter(image => {\r\n            return image.id !== id;\r\n        })\r\n\r\n        setmyImages(newImages);\r\n    }\r\n\r\n\r\n\r\n\r\n    return (\r\n        <Formik\r\n            onSubmit={(values, actions) => handleSubmit(values, actions)}\r\n            validationSchema={validationSchema}\r\n            validateOnBlur={false}\r\n            enableReinitialize={true}\r\n            initialValues={\r\n                { ...initialValues }\r\n            }\r\n        >\r\n            {({\r\n                handleChange,\r\n                values,\r\n                handleSubmit,\r\n                errors,\r\n                isValid,\r\n                isSubmitting,\r\n                touched,\r\n                handleBlur,\r\n                setFieldTouched,\r\n                handleReset,\r\n            }) => (\r\n                    <>\r\n                        <Modal\r\n                            style={{\r\n                                top: '40px'\r\n                            }}\r\n                            title=\"Add New Tag\"\r\n                            visible={addNewCategoryVisible}\r\n                            onOk={(e: any) => handleSubmit(e)}\r\n                            onCancel={handleCancel}\r\n                            okText='Create'\r\n                            okButtonProps={{\r\n                                loading: isSubmitting,\r\n                                htmlType: \"submit\",\r\n                                disabled: getisSubmitButtonDisabled(values, isValid)\r\n                            }}\r\n                        >\r\n                            <Input\r\n                                label='Title'\r\n                                value={values.name}\r\n                                name='name'\r\n                                isError={(touched.name && errors.name) ||\r\n                                    (!isSubmitting && addTagState.error['error']['name'])}\r\n\r\n                                errorString={(touched.name && errors.name) ||\r\n                                    (!isSubmitting && addTagState.error['error']['name'])}\r\n                                onChange={(e: any) => {\r\n                                    handleChange(e);\r\n                                    setFieldTouched('name');\r\n                                }}\r\n                            />\r\n                            <TextArea\r\n                                label='Description'\r\n                                value={values.description}\r\n                                name='description'\r\n                                isError={(touched.description && errors.description) ||\r\n                                    (!isSubmitting && addTagState.error['error']['description'])}\r\n\r\n                                errorString={(touched.description && errors.description) ||\r\n                                    (!isSubmitting && addTagState.error['error']['description'])}\r\n                                onChange={(e: any) => {\r\n                                    handleChange(e);\r\n                                    setFieldTouched('description');\r\n                                }}\r\n                            />\r\n\r\n                        </Modal>\r\n\r\n                        <MediaLibrary\r\n                            setvisible={setvisibleMedia}\r\n                            visible={visibleMedia}\r\n                            setmyImages={setmyImages}\r\n                            myImages={myImages}\r\n                            isModalOpenForImages={true}\r\n\r\n                        />\r\n                    </>\r\n                )}\r\n        </Formik>\r\n\r\n\r\n\r\n\r\n    );\r\n};\r\n\r\nexport default AddNewBrand;\r\n","import React, { useState, useEffect } from 'react';\r\n\r\n// import third party ui lib\r\nimport { Empty, Popconfirm, Upload, message, Switch, Select, Button, notification, Table, Space, Input as CoolInput, Tooltip, Modal } from 'antd';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { useHistory } from 'react-router';\r\n\r\n\r\n\r\nimport {\r\n\tFileOutlined,\r\n\tInboxOutlined,\r\n\tRadiusUpleftOutlined,\r\n\tRadiusUprightOutlined,\r\n\tRadiusBottomleftOutlined,\r\n\tRadiusBottomrightOutlined,\r\n\tPlusOutlined,\r\n\tDeleteOutlined,\r\n\tEditOutlined,\r\n\tCheckCircleOutlined\r\n} from '@ant-design/icons';\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n\r\n\r\n/// import hooks\r\nimport { useFetch, useHandleFetch } from \"../../hooks\";\r\n\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport { DataTableSkeleton } from \"../../components/Placeholders\";\r\nimport QuickEdit from \"./QuickEdit\"\r\nimport AddNewExpense from \"./AddNewExpense\"\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t\tmessage: message || 'Expense Created',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n\tnotification.error({\r\n\t\tmessage: message || 'Something Went Wrong',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n};\r\n\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n\tname: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\n\r\nconst initialValues = {\r\n\tname: '',\r\n\tdescription: ''\r\n}\r\n\r\n\r\nconst { Column, ColumnGroup } = Table;\r\nconst { Search } = CoolInput;\r\n\r\n\r\n\r\nconst MyTable = ({ data, setTagList }) => {\r\n\tconst [visible, setvisible] = useState(false);\r\n\tconst [activeCategoryForEdit, setactiveCategoryForEdit] = useState(false);\r\n\tconst [deleteTagState, handleDeleteTagFetch] = useHandleFetch({}, 'deleteTag');\r\n\r\n\tconst history = useHistory();\r\n\r\n\r\n\tconst handleDeleteTag = async (id) => {\r\n\t\tconst deleteTagRes = await handleDeleteTagFetch({\r\n\t\t\turlOptions: {\r\n\t\t\t\tplaceHolders: {\r\n\t\t\t\t\tid,\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\r\n\r\n\t\t// @ts-ignore\r\n\t\tif (deleteTagRes && deleteTagRes.status === 'ok') {\r\n\t\t\topenSuccessNotification('Deleted Expense');\r\n\t\t\tconst newtagList = data.filter(item => item.id !== id);\r\n\t\t\tsetTagList(newtagList);\r\n\t\t}\r\n\r\n\r\n\t}\r\n\r\n\r\n\tconst handleOk = (e: any) => {\r\n\t\tsetvisible(false);\r\n\r\n\t};\r\n\r\n\tconst handleCancel = (e: any) => {\r\n\t\tsetvisible(false);\r\n\t};\r\n\r\n\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Table\r\n\t\t\t\t// expandable={{\r\n\t\t\t\t//     expandedRowRender: record => <p style={{ margin: 0 }}>{record.name}</p>,\r\n\t\t\t\t//     rowExpandable: record => record.name !== 'Not Expandable',\r\n\t\t\t\t//   }}\r\n\t\t\t\t// bordered={true}\r\n\t\t\t\tsize='small'\r\n\t\t\t\t// pagination={false}\r\n\t\t\t\tdataSource={data}\r\n\t\t\t>\r\n\r\n\t\t\t\t<Column\r\n\t\t\t\t\ttitle=\"Name\"\r\n\t\t\t\t\tdataIndex=\"name\"\r\n\t\t\t\t\tkey=\"id\"\r\n\t\t\t\t\tclassName='classnameofthecolumn'\r\n\t\t\t\t\trender={(text, record: any) => (\r\n\t\t\t\t\t\t<>\r\n\r\n\t\t\t\t\t\t\t<h4\r\n\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\thistory.push(`/admin/tag/${record.id}`)\r\n\t\t\t\t\t\t\t\t\t// setBrandDetailVisible(true);\r\n\t\t\t\t\t\t\t\t\tsetactiveCategoryForEdit(record)\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\tfontWeight: 400,\r\n\t\t\t\t\t\t\t\t\tcolor: '#555',\r\n\t\t\t\t\t\t\t\t\tcursor: 'pointer'\r\n\r\n\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t{text}\r\n\t\t\t\t\t\t\t</h4>\r\n\r\n\r\n\t\t\t\t\t\t</>\r\n\t\t\t\t\t)}\r\n\t\t\t\t/>\r\n\r\n\t\t\t\t<Column\r\n\t\t\t\t\ttitle=\"Description\"\r\n\t\t\t\t\tdataIndex=\"description\"\r\n\t\t\t\t\tkey=\"id\"\r\n\t\t\t\t\tclassName='classnameofthecolumn'\r\n\r\n\t\t\t\t/>\r\n\r\n\r\n\t\t\t\t<Column\r\n\t\t\t\t\ttitle=\"Product\"\r\n\t\t\t\t\tdataIndex=\"productCount\"\r\n\t\t\t\t\tkey=\"id\"\r\n\t\t\t\t\tclassName='classnameofthecolumn'\r\n\t\t\t\t/>\r\n\r\n\t\t\t\t<Column\r\n\r\n\t\t\t\t\tclassName='classnameofthecolumn'\r\n\t\t\t\t\ttitle=\"\"\r\n\t\t\t\t\tkey=\"action\"\r\n\t\t\t\t\talign='right'\r\n\t\t\t\t\trender={(text, record: any) => (\r\n\t\t\t\t\t\t<Space size=\"middle\">\r\n\t\t\t\t\t\t\t<a href='##'>\r\n\t\t\t\t\t\t\t\t<Tooltip placement=\"top\" title='Quick Edit Tag'>\r\n\t\t\t\t\t\t\t\t\t<span className='iconSize' onClick={() => {\r\n\t\t\t\t\t\t\t\t\t\tsetvisible(true)\r\n\t\t\t\t\t\t\t\t\t\tsetactiveCategoryForEdit(record);\r\n\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t<EditOutlined />\r\n\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t\t</a>\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t<Popconfirm\r\n\t\t\t\t\t\t\t\tonConfirm={() => handleDeleteTag(record.id)}\r\n\t\t\t\t\t\t\t\ttitle=\"Are you sure？\" okText=\"Yes\" cancelText=\"No\">\r\n\t\t\t\t\t\t\t\t<span\r\n\t\t\t\t\t\t\t\t\tclassName='iconSize iconSize-danger'\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t<DeleteOutlined />\r\n\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t</Popconfirm>\r\n\t\t\t\t\t\t</Space>\r\n\t\t\t\t\t)}\r\n\t\t\t\t/>\r\n\t\t\t</Table>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\t\t\t{activeCategoryForEdit && <QuickEdit\r\n\t\t\t\ttagList={data}\r\n\t\t\t\tsetTagList={setTagList}\r\n\t\t\t\tsetvisible={setvisible}\r\n\t\t\t\tvisible={visible}\r\n\t\t\t\tcategory={activeCategoryForEdit} />}\r\n\t\t</>\r\n\t)\r\n}\r\n\r\n\r\n\r\n\r\ninterface Props { }\r\n\r\nconst TagList = ({ }: Props) => {\r\n\r\n\r\n\tconst [tagList, setTagList] = useState([]);\r\n\r\n\tconst [tagState, handleTagListFetch] = useHandleFetch({}, 'tagList');\r\n\r\n\r\n\tuseEffect(() => {\r\n\t\tconst setTags = async () => {\r\n\t\t\tconst tags = await handleTagListFetch({});\r\n\t\t\t// @ts-ignore\r\n\t\t\tsetTagList(tags);\r\n\t\t}\r\n\t\tsetTags();\r\n\t}, [])\r\n\r\n\r\n\r\n\tconst [addTagState, handleAddTagFetch] = useHandleFetch({}, 'addTag');\r\n\tconst [addNewCategoryVisible, setAddNewCategoryVisible] = useState(false);\r\n\r\n\tconst handleSubmit = async (values: any, actions: any) => {\r\n\t\tconst addTagRes = await handleAddTagFetch({\r\n\t\t\turlOptions: {\r\n\t\t\t\tplaceHolders: {\r\n\t\t\t\t\tid: values.id,\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tbody: {\r\n\t\t\t\tname: values.name.trim(),\r\n\t\t\t\tdescription: values.description,\r\n\t\t\t},\r\n\t\t});\r\n\r\n\t\t// @ts-ignore\r\n\t\tif (addTagRes && addTagRes.status === 'ok') {\r\n\t\t\topenSuccessNotification();\r\n\r\n\t\t\tsetTagList([...tagList, {\r\n\t\t\t\tid: addTagRes['id'] || '',\r\n\t\t\t\tkey: addTagRes['id'] || '',\r\n\t\t\t\tname: addTagRes['name'] || '',\r\n\t\t\t\tdescription: addTagRes['description'] || '',\r\n\t\t\t}])\r\n\t\t\tactions.resetForm();\r\n\t\t}\r\n\t\tactions.setSubmitting(false);\r\n\r\n\t};\r\n\r\n\r\n\r\n\tconst getisSubmitButtonDisabled = (values, isValid) => {\r\n\t\tif (!values.name || !isValid) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\r\n\tconst handleOkAddNewCategory = (e: any) => {\r\n\t\tsetAddNewCategoryVisible(false);\r\n\r\n\t};\r\n\r\n\tconst handleCancelAddNewCategory = (e: any) => {\r\n\t\tsetAddNewCategoryVisible(false);\r\n\t};\r\n\r\n\tconst handleSearch = (value) => {\r\n\t\tif (tagState.data.length > 0) {\r\n\t\t\tconst newTagList = tagState.data.filter(item => item.name.toLowerCase().includes(value.toLowerCase()));\r\n\t\t\tsetTagList(newTagList);\r\n\t\t}\r\n\r\n\t}\r\n\r\n\treturn (\r\n\t\t<>\r\n\r\n\t\t\t<div className='categoryListContainer'>\r\n\t\t\t\t<div className='categoryListContainer__header'>\r\n\t\t\t\t\t<div className='categoryListContainer__header-searchBar-tag'>\r\n\t\t\t\t\t\t<h2 className='categoryListContainer__header-title'>\r\n\t\t\t\t\t\t\tExpenses\r\n                       </h2>\r\n\r\n\r\n\t\t\t\t\t\t<Search\r\n\t\t\t\t\t\t\tenterButton={false}\r\n\t\t\t\t\t\t\tclassName='searchbarClassName'\r\n\t\t\t\t\t\t\tplaceholder=\"search expense..\"\r\n\t\t\t\t\t\t\tonSearch={value => handleSearch(value)}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\t// type=\"primary\"\r\n\t\t\t\t\t\tclassName='btnPrimaryClassNameoutline'\r\n\t\t\t\t\t\ticon={<PlusOutlined />}\r\n\t\t\t\t\t\tonClick={() => setAddNewCategoryVisible(true)}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tAdd New\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className='categoryListContainer__categoryList'>\r\n\t\t\t\t\t{tagState.done && tagList.length > 0 && <MyTable\r\n\t\t\t\t\t\tsetTagList={setTagList}\r\n\t\t\t\t\t\tdata={tagList} />}\r\n\t\t\t\t\t{tagState.isLoading && <DataTableSkeleton />}\r\n\r\n\r\n\t\t\t\t\t{tagState.done && !(tagList.length > 0) && (\r\n\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\tmarginTop: '50px'\r\n\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t<Empty description='No Expense found' image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\r\n\t\t\t<AddNewExpense\r\n\t\t\t\ttagList={tagList}\r\n\t\t\t\tsetTagList={setTagList}\r\n\t\t\t\taddNewCategoryVisible={addNewCategoryVisible}\r\n\t\t\t\tsetAddNewCategoryVisible={setAddNewCategoryVisible}\r\n\t\t\t/>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default TagList;\r\n","import React, { useState } from 'react';\r\nimport { Modal, notification } from 'antd';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport { useHandleFetch } from '../../hooks';\r\nimport { CheckCircleOutlined, PlusOutlined, EditOutlined, DeleteOutlined, EditFilled } from '@ant-design/icons';\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    name: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n    description: Yup.string().label('Description').required('Description is required')\r\n});\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Expense Updated',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Something Went Wrong',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n    });\r\n};\r\n\r\n\r\ninterface Props {\r\n    tagEditVisible?: any;\r\n    setTagEditVisible?: any;\r\n    tagDetailData?: any;\r\n}\r\n\r\nconst QuickEdit = ({ tagEditVisible, setTagEditVisible, tagDetailData }: Props) => {\r\n    const [updateTagState, handleUpdateCategoryFetch] = useHandleFetch({}, 'updateTag');\r\n\r\n    const handleSubmit = async (values: any, actions: any) => {\r\n        const updateTagRes = await handleUpdateCategoryFetch({\r\n            urlOptions: {\r\n                placeHolders: {\r\n                    id: values.id,\r\n                }\r\n            },\r\n            body: {\r\n                name: values.name,\r\n                description: values.description,\r\n            },\r\n        });\r\n\r\n        // @ts-ignore\r\n        if (updateTagRes && updateTagRes.status === 'ok') {\r\n            openSuccessNotification();\r\n\r\n            // const positionInTag = () => {\r\n            //     return tagList.map(item => item.id).indexOf(category.id);\r\n            // }\r\n\r\n            // const index = positionInTag();\r\n\r\n            // const updatedItem = Object.assign({}, tagList[index], { ...updateTagRes });\r\n            // const updateTagList = [...tagList.slice(0, index), updatedItem, ...tagList.slice(index + 1)];\r\n            // setTagList(updateTagList);\r\n\r\n        }\r\n        else {\r\n            openErrorNotification();\r\n        }\r\n\r\n        actions.setSubmitting(false);\r\n        setTagEditVisible(false)\r\n    };\r\n\r\n\r\n    const handleCancel = (e: any) => {\r\n        setTagEditVisible(false);\r\n    };\r\n\r\n\r\n    const getisSubmitButtonDisabled = (values, isValid) => {\r\n        if (!values.name || !values.description || !isValid) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    return (\r\n        <Formik\r\n            onSubmit={(values, actions) => handleSubmit(values, actions)}\r\n            validationSchema={validationSchema}\r\n            validateOnBlur={false}\r\n            enableReinitialize={true}\r\n            initialValues={\r\n                { ...tagDetailData }\r\n            }\r\n        >\r\n            {({\r\n                handleChange,\r\n                values,\r\n                handleSubmit,\r\n                errors,\r\n                isValid,\r\n                isSubmitting,\r\n                touched,\r\n                handleBlur,\r\n                setFieldTouched,\r\n                handleReset,\r\n            }) => (\r\n                    <>\r\n                        <Modal\r\n                            title=\"Expense Edit\"\r\n                            visible={tagEditVisible}\r\n                            onOk={(e: any) => handleSubmit(e)}\r\n                            onCancel={handleCancel}\r\n                            okText='Update'\r\n                            okButtonProps={{\r\n                                loading: isSubmitting,\r\n                                htmlType: \"submit\",\r\n                                disabled: getisSubmitButtonDisabled(values, isValid)\r\n                            }}\r\n                        >\r\n                            <Input\r\n                                label='Title'\r\n                                value={values.name}\r\n                                name='name'\r\n                                isError={(touched.name && errors.name) ||\r\n                                    (!isSubmitting && updateTagState.error['error']['name'])}\r\n\r\n                                errorString={(touched.name && errors.name) ||\r\n                                    (!isSubmitting && updateTagState.error['error']['name'])}\r\n                                onChange={(e: any) => {\r\n                                    handleChange(e);\r\n                                    setFieldTouched('name');\r\n                                }}\r\n                            />\r\n                            <TextArea\r\n                                label='Description'\r\n                                value={values.description}\r\n                                name='description'\r\n                                isError={(touched.description && errors.description) ||\r\n                                    (!isSubmitting && updateTagState.error['error']['description'])}\r\n\r\n                                errorString={(touched.description && errors.description) ||\r\n                                    (!isSubmitting && updateTagState.error['error']['description'])}\r\n                                onChange={(e: any) => {\r\n                                    handleChange(e);\r\n                                    setFieldTouched('description');\r\n                                }}\r\n                            />\r\n                        </Modal>\r\n\r\n                    </>\r\n                )}\r\n        </Formik>\r\n    );\r\n};\r\n\r\n\r\nexport default QuickEdit;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useParams, useHistory } from \"react-router\";\r\n\r\n\r\n// import hooks\r\nimport { useHandleFetch } from \"../../hooks\";\r\n\r\n// import lib\r\nimport {\r\n    FileOutlined,\r\n    InboxOutlined,\r\n    RadiusUpleftOutlined,\r\n    RadiusUprightOutlined,\r\n    RadiusBottomleftOutlined,\r\n    RadiusBottomrightOutlined,\r\n    PlusOutlined,\r\n    DeleteOutlined,\r\n    EditOutlined,\r\n    CheckCircleOutlined\r\n} from '@ant-design/icons';\r\n\r\nimport { Skeleton, Empty, Popconfirm, Upload, message, Switch, Select, Button, notification, Table, Space, Input as CoolInput, Tooltip, Modal } from 'antd';\r\n\r\n\r\n// import components\r\nimport { DataTableSkeleton } from \"../../components/Placeholders\";\r\nimport ExpenseEdit from \"./ExpenseEdit\";\r\n\r\n\r\nconst { Column, ColumnGroup } = Table;\r\nconst { Search } = CoolInput;\r\n\r\n\r\ninterface Props {\r\n    productRecord?: any;\r\n}\r\n\r\nconst NewBrandDetail = (props: Props) => {\r\n    const [tagDetailState, handleTagDetailFetch] = useHandleFetch({}, 'tagDetail');\r\n    const [tagProductsState, handleTagProductsFetch] = useHandleFetch({}, 'tagProducts');\r\n    const [tagEditVisible, setTagEditVisible] = useState(false);\r\n\r\n\r\n    const params = useParams();\r\n    const history = useHistory();\r\n    const tagId = params['id'];\r\n\r\n    useEffect(() => {\r\n\r\n        const getBrandDetail = async () => {\r\n            await handleTagDetailFetch({\r\n                urlOptions: {\r\n                    placeHolders: {\r\n                        id: tagId\r\n                    }\r\n                }\r\n            })\r\n        };\r\n\r\n        getBrandDetail();\r\n\r\n    }, [tagId]);\r\n\r\n    useEffect(() => {\r\n        const getTagProducts = async () => {\r\n            await handleTagProductsFetch({\r\n                urlOptions: {\r\n                    placeHolders: {\r\n                        id: tagId\r\n                    }\r\n                }\r\n            })\r\n        };\r\n\r\n        getTagProducts();\r\n\r\n    }, [tagId]);\r\n\r\n\r\n\r\n\r\n    console.log('tagProductsState', tagProductsState);\r\n\r\n    console.log('brandParams', params);\r\n\r\n\r\n    return (\r\n        <div className='brandDetailContainer'>\r\n            <div className='brandDetailContainer__heading'>\r\n                <h3>\r\n                    Expense Detail\r\n                </h3>\r\n\r\n                {tagDetailState.done && tagDetailState.data && (Object.keys(tagDetailState.data).length > 0) && (\r\n                    <>\r\n                        <ExpenseEdit\r\n                            tagEditVisible={tagEditVisible}\r\n                            setTagEditVisible={setTagEditVisible}\r\n                            tagDetailData={tagDetailState.data}\r\n                        />\r\n                        <Button\r\n                            onClick={() => setTagEditVisible(true)}\r\n                            type='link'\r\n                            icon={<EditOutlined />}\r\n                        >\r\n                            Edit\r\n                      </Button>\r\n                    </>\r\n                )}\r\n            </div>\r\n            <Skeleton\r\n                paragraph={{ rows: 2 }}\r\n                loading={tagDetailState.isLoading}>\r\n                {tagDetailState.done && tagDetailState.data && !(Object.keys(tagDetailState.data).length > 0) && (\r\n                    <Empty description='No Expense found' image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n                )}\r\n\r\n                {tagDetailState.done && tagDetailState.data && (Object.keys(tagDetailState.data).length > 0) && (\r\n                    <div className='brandDetailContainer__header'>\r\n\r\n                        <div className='brandDetailContainer__header-info'>\r\n                            <h2>\r\n                                {tagDetailState.data['name']}\r\n                            </h2>\r\n                            <h3>\r\n                                {tagDetailState.data['description']}\r\n                            </h3>\r\n                            {tagDetailState.data['url'] && (\r\n                                <h3>\r\n                                    URL:\r\n                                    <span>\r\n                                        {tagDetailState.data['url']}\r\n                                    </span>\r\n\r\n                                </h3>\r\n                            )}\r\n                        </div>\r\n                    </div>\r\n                )}\r\n\r\n            </Skeleton>\r\n\r\n            <div className='brandDetailContainer__heading'>\r\n                <h3>\r\n                    Products\r\n                </h3>\r\n            </div>\r\n            <div className='brandDetailContainer__body'>\r\n                {tagProductsState.isLoading && <DataTableSkeleton />}\r\n                {tagProductsState.done && !(tagProductsState.data.length > 0) && (\r\n                    <div style={{\r\n                        marginTop: '100px'\r\n                    }}>\r\n                        <Empty description='No Products exists for this tag' image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n                    </div>\r\n                )}\r\n\r\n                {tagProductsState.done && tagProductsState.data && tagProductsState.data.length > 0 && (\r\n                    <>\r\n                        <Table\r\n                            style={{\r\n                                paddingTop: '10px',\r\n                                borderRadius: '5px !important',\r\n                                overflow: 'hidden',\r\n                                boxShadow: '0 0.125rem 0.625rem rgba(227, 231, 250, 0.3), 0 0.0625rem 0.125rem rgba(206, 220, 233, 0.4)'\r\n                            }}\r\n                            // expandable={{\r\n                            //     expandedRowRender: record => <p style={{ margin: 0 }}>{record.name}</p>,\r\n                            //     rowExpandable: record => record.name !== 'Not Expandable',\r\n                            //   }}\r\n                            // bordered={true}\r\n                            size='small'\r\n                            // pagination={false}\r\n                            dataSource={tagProductsState.data}\r\n                            tableLayout={'auto'}\r\n                            onHeaderRow={column => {\r\n                                return {\r\n                                    style: {\r\n                                        color: 'red !important'\r\n                                    }\r\n\r\n                                };\r\n                            }}\r\n                        >\r\n                            <Column\r\n                                title=\"\"\r\n                                dataIndex=\"cover\"\r\n                                key=\"id\"\r\n                                width={'80px'}\r\n\r\n                                className='classnameofthecolumn'\r\n\r\n                                render={(cover, record: any) => (\r\n                                    <>\r\n                                        <img\r\n                                            onClick={() => {\r\n                                                history.push(`/admin/product/${record.id}`)\r\n                                            }}\r\n                                            src={cover} alt='cover img' style={{\r\n                                                height: '40px',\r\n                                                width: '40px',\r\n                                                objectFit: \"contain\",\r\n                                                borderRadius: '3px',\r\n                                                cursor: 'pointer'\r\n                                            }} />\r\n\r\n\r\n\r\n\r\n                                    </>\r\n                                )}\r\n                            />\r\n\r\n                            <Column\r\n                                title=\"Name\"\r\n                                dataIndex=\"name\"\r\n                                key=\"id\"\r\n                                className='classnameofthecolumn'\r\n                                render={(text, record: any) => (\r\n                                    <>\r\n                                        <h4\r\n                                            onClick={() => {\r\n                                                history.push(`/admin/product/${record.id}`)\r\n                                            }}\r\n                                            style={{\r\n                                                fontWeight: 400,\r\n                                                color: '#555',\r\n                                                cursor: 'pointer'\r\n\r\n                                            }}>\r\n                                            {text}\r\n                                        </h4>\r\n\r\n\r\n                                    </>\r\n                                )}\r\n\r\n                            />\r\n\r\n                            <Column\r\n                                title=\"Offer Price\"\r\n                                dataIndex=\"offerPrice\"\r\n                                key=\"id\"\r\n                                className='classnameofthecolumn'\r\n\r\n                            />\r\n\r\n\r\n                            <Column\r\n                                title=\"Price\"\r\n                                dataIndex=\"price\"\r\n                                key=\"id\"\r\n                                className='classnameofthecolumn'\r\n\r\n                            />\r\n\r\n                        </Table>\r\n                    </>\r\n                )}\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NewBrandDetail\r\n","import React from 'react'\r\n\r\n\r\n// import pages\r\nimport { Overview } from '../../pages/overview';\r\nimport { CategoryList, NewCategoryDetail } from '../../pages/category';\r\nimport { ProductBundleDetail, ProductBundleList } from '../../pages/productBundle';\r\nimport { BrandList, AddNewBrand, NewBrandDetail } from '../../pages/brand';\r\nimport { ProductList, NewProductDetail } from '../../pages/product';\r\nimport { TagList, AddNewTag, NewTagDetail } from '../../pages/tag';\r\nimport { CouponList, CouponDetail } from '../../pages/coupon';\r\nimport { CustomerList, CustomerDetail } from '../../pages/customer';\r\nimport { PagesList, AddNewPage } from '../../pages/pages';\r\nimport { AttributeList } from '../../pages/attribute';\r\nimport { OrderList, AddNewOrder, OrderDetail,OrderAnalytics } from '../../pages/order';\r\nimport { Component, ManageThemes, Image, Invoice, SiteInfo } from '../../pages/settings';\r\nimport { Delivery } from '../../pages/delivery';\r\nimport Sms from '../../pages/sms';\r\nimport {Email} from '../../pages/email';\r\nimport {NotificationList} from '../../pages/notification';\r\nimport {AdminList, AdminDetail} from '../../pages/admins';\r\nimport {PostList, PostDetail } from '../../pages/post';\r\nimport {StaffList, StaffDetail} from '../../pages/staff';\r\nimport {ExpenseList, ExpenseDetail} from '../../pages/expense';\r\nimport {PostTagList, PostCategoryList, NewPostCategoryDetail, NewPostTagDetail} from '../../pages/post';\r\n\r\n\r\n// import Login from '../../pages/auth/login';\r\n\r\n\r\n// import libraries\r\nimport { Layout } from 'antd';\r\nimport { Switch, Route, Redirect } from 'react-router-dom';\r\n\r\n\r\n\r\nconst { Content } = Layout;\r\n\r\ninterface Props {\r\n\r\n}\r\n\r\nconst ContentComponent = (props: Props) => {\r\n    return (\r\n        <Content\r\n            hasSider={true}\r\n            style={{\r\n                backgroundColor: '#fff',\r\n                paddingTop: '20px'\r\n            }}\r\n        >\r\n            <Switch>\r\n                <Route\r\n                    exact\r\n                    path='/'\r\n                    render={() => <Redirect to='/admin/overview' />}\r\n                />\r\n\r\n                <Route\r\n                    exact\r\n                    path='/admin'\r\n                    render={() => <Redirect to='/admin/overview' />}\r\n                />\r\n\r\n                <Route path='/admin/overview' exact>\r\n                    <Overview />\r\n                </Route>\r\n                <Route path='/admin/category' exact>\r\n                    <CategoryList />\r\n                </Route>\r\n                <Route path='/admin/category/:id' exact>\r\n                    <NewCategoryDetail />\r\n                </Route>\r\n                {/* <Route path='/admin/category/:name' exact>\r\n                    <CategoryDetail />\r\n                </Route> */}\r\n\r\n                {/* CategoryDetail */}\r\n                <Route path='/admin/brand/new' exact>\r\n                    <AddNewBrand />\r\n                </Route>\r\n                <Route path='/admin/brand' exact>\r\n                    <BrandList />\r\n                </Route>\r\n                <Route path='/admin/brand/:id' exact>\r\n                    <NewBrandDetail />\r\n                </Route>\r\n                <Route path='/admin/product' exact>\r\n                    <ProductList />\r\n                </Route>\r\n                <Route path='/admin/product/:id' exact>\r\n                    <NewProductDetail />\r\n                </Route>\r\n\r\n                <Route path='/admin/bundle' exact>\r\n                    <ProductBundleList />\r\n                </Route>\r\n\r\n                <Route path='/admin/bundle/:id' exact>\r\n                    <ProductBundleDetail />\r\n                </Route>\r\n\r\n                <Route path='/admin/coupon' exact>\r\n                    <CouponList />\r\n                </Route>\r\n\r\n\r\n                <Route path='/admin/posts' exact>\r\n                    <PostList />\r\n                </Route>\r\n\r\n            \r\n\r\n                \r\n                <Route path='/admin/posts/tag' exact>\r\n                    <PostTagList />\r\n                </Route>\r\n\r\n                <Route path='/admin/posts/category' exact>\r\n                    <PostCategoryList />\r\n                </Route>\r\n\r\n                <Route path='/admin/posts/:id' exact>\r\n                    <PostDetail />\r\n                </Route>\r\n\r\n                <Route path='/admin/posts/tag/:id' exact>\r\n                    <NewPostTagDetail />\r\n                </Route>\r\n\r\n                <Route path='/admin/posts/category/:id' exact>\r\n                     <NewPostCategoryDetail />\r\n                </Route>\r\n                \r\n                <Route path='/admin/coupon/:id' exact>\r\n                    <CouponDetail />\r\n                </Route>\r\n\r\n                <Route path='/admin/notification' exact>\r\n                    <NotificationList />\r\n                </Route>\r\n\r\n                {/* <Route path='/product/new' exact>\r\n                     <AddNewProduct />\r\n                   </Route> */}\r\n\r\n\r\n                <Route path='/admin/tag' exact>\r\n                    <TagList />\r\n                </Route>\r\n                <Route path='/admin/tag/new' exact>\r\n                    <AddNewTag />\r\n                </Route>\r\n                <Route path='/admin/tag/:id' exact>\r\n                    <NewTagDetail />\r\n                </Route>\r\n                <Route path='/admin/attribute' exact>\r\n                    <AttributeList />\r\n                </Route>\r\n                <Route path='/admin/order' exact>\r\n                    <OrderList />\r\n                </Route>\r\n                <Route path='/admin/order/new' exact>\r\n                    <AddNewOrder />\r\n                </Route>\r\n                <Route path='/admin/order/overview' exact>\r\n                    <OrderAnalytics />\r\n                </Route>\r\n\r\n                <Route path='/admin/order/:id' exact>\r\n                    <OrderDetail />\r\n                </Route>\r\n               \r\n                <Route path='/admin/staff' exact>\r\n                    <StaffList />\r\n                </Route>\r\n                <Route path='/admin/staff/:id' exact>\r\n                    <StaffDetail />\r\n                </Route>\r\n\r\n                <Route path='/admin/expense' exact>\r\n                    <ExpenseList />\r\n                </Route>\r\n\r\n                <Route path='/admin/expense/:id' exact>\r\n                    <ExpenseDetail />\r\n                </Route>\r\n\r\n                <Route path='/admin/customer' exact>\r\n                    <CustomerList />\r\n                </Route>\r\n                <Route path='/admin/customer/:id' exact>\r\n                    <CustomerDetail />\r\n                </Route>\r\n                <Route path='/admin/page' exact>\r\n                    <PagesList />\r\n                </Route>\r\n                <Route path='/admin/delivery' exact>\r\n                    <Delivery />\r\n                </Route>\r\n                <Route path='/admin/page/new' exact>\r\n                    <AddNewPage />\r\n                </Route>\r\n                <Route path='/admin/settings/components' exact>\r\n                    <Component />\r\n                </Route>\r\n                <Route path='/admin/settings/image' exact>\r\n                    <Image />\r\n                </Route>\r\n                <Route path='/admin/settings/themes' exact>\r\n                    <ManageThemes />\r\n                </Route>\r\n                <Route path='/admin/settings/invoice' exact>\r\n                    <Invoice />\r\n                </Route>\r\n                <Route path='/admin/settings/siteInfo' exact>\r\n                    <SiteInfo />\r\n                </Route>\r\n                <Route path='/admin/settings/admins' exact>\r\n                    <AdminList />\r\n                </Route>\r\n                <Route path='/admin/settings/admins/:id' exact>\r\n                    <AdminDetail />\r\n                </Route>\r\n                <Route path='/admin/sms' exact>\r\n                    <Sms />\r\n                </Route>\r\n\r\n                <Route path='/admin/email' exact>\r\n                    <Email />\r\n                </Route>\r\n\r\n            </Switch>\r\n        </Content>\r\n    )\r\n}\r\n\r\nexport default ContentComponent\r\n","import Content from \"./Content\";\r\nexport default Content; ","import React from 'react';\n\n// import pages\nimport Login from './pages/auth/login';\n\n\n\n// import layouts\nimport Sider from \"./layout/sider\";\nimport Header from './layout/header';\nimport Content from './layout/content';\n// import Footer from './layout/footer';\n\n// import libraries\nimport { Layout } from 'antd';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\n\n\nconst App = () => {\n\treturn (\n\t\t<Router>\n\t\t\t<Switch>\n\t\t\t\t<Route path='/admin/login' exact>\n\t\t\t\t\t<Login />\n\t\t\t\t</Route>\n\t\t\t</Switch>\n\t\t\t<Switch>\n\n\t\t\t\t<Layout style={{ minHeight: '100vh' }}>\n\t\t\t\t\t<Header />\n\n\t\t\t\t\t<Layout className='site-layout'>\n\t\t\t\t\t\t<Sider />\n\t\t\t\t\t\t<Content />\n\t\t\t\t\t</Layout>\n\t\t\t\t\t{/* <Footer /> */}\n\t\t\t\t</Layout>\n\t\t\t</Switch>\n\t\t</Router>\n\t);\n};\n\nexport default App;\n","import { fetch } from \"../utils\";\r\n\r\nconst baseUrl = typeof document === \"undefined\" ? \"http://localhost:7777/api\" : \"/api\";\r\n\r\nconst apiService = ( ) => ( next ) => ( action ) => {\r\n    const result = next( action );\r\n    if ( !action.meta || !action.meta.async ) {\r\n        return result;\r\n    }\r\n\r\n    const { path, method = \"GET\", body } = action.meta;\r\n\r\n    if ( !path ) {\r\n        throw new Error( `'path' not specified for async action ${ action.type }` );\r\n    }\r\n\r\n    const url = `${ baseUrl }${ path }`;\r\n\r\n    return fetch( url, method, body ).then(\r\n        res => handleResponse( res, action, next ),\r\n        err => handleErrors( err, action, next ),\r\n    );\r\n};\r\n\r\nexport default apiService;\r\n\r\nfunction handleErrors( err, action, next ) {\r\n    next( {\r\n        type: `${ action.type }_FAILED`,\r\n        payload: err,\r\n        meta: action.meta,\r\n    } );\r\n\r\n    return Promise.reject( err );\r\n}\r\n\r\nfunction handleResponse( res, action, next ) {\r\n    next( {\r\n        type: `${ action.type }_COMPLETED`,\r\n        payload: res,\r\n        meta: action.meta,\r\n    } );\r\n\r\n    return res;\r\n}\r\n","const REGULAR = [\r\n    \"background: blue\",\r\n    \"color: white\",\r\n].join( \";\" );\r\n\r\nconst SUCCESS = [\r\n    \"background: green\",\r\n    \"color: white\",\r\n].join( \";\" );\r\n\r\nconst STARTED = [\r\n    \"background: darkorange\",\r\n    \"color: white\",\r\n].join( \";\" );\r\n\r\nconst FAILURE = [\r\n    \"background: red\",\r\n    \"color: white\",\r\n].join( \";\" );\r\n\r\nconst createLogger = ( active = true ) => ( store ) => ( next ) => ( action ) => {\r\n    if ( !active ) {\r\n        return next( action );\r\n    }\r\n\r\n    const prevState = store.getState( );\r\n    const result = next( action );\r\n    const nextState = store.getState( );\r\n    logGroupCollapsed( `%c ${ action.type } `, determineStyle( action ) );\r\n    logInfo( \"%cprev state\", \"color: darkorange\", prevState );\r\n    logInfo( \"%caction payload\", \"color: blue\", action.payload );\r\n    logInfo( \"%cnext state\", \"color: darkgreen\", nextState );\r\n    logGroupEnd( );\r\n    return result;\r\n};\r\n\r\nexport default createLogger;\r\n\r\nfunction logGroupCollapsed( ...args ) {\r\n    const logFunction = typeof console.groupCollapsed === \"function\" ? console.groupCollapsed : console.info;\r\n    logFunction( ...args );\r\n}\r\n\r\nfunction logGroupEnd( ...args ) {\r\n    const logFunction = typeof console.groupEnd === \"function\" ? console.groupEnd : console.info;\r\n    logFunction( ...args );\r\n}\r\n\r\nfunction logInfo( ...args ) {\r\n    console.info( ...args );\r\n}\r\n\r\nfunction determineStyle( action ) {\r\n    if ( !action.meta || !action.meta.async ) {\r\n        return REGULAR;\r\n    }\r\n\r\n    if ( action.type.indexOf( \"_COMPLETED\" ) > -1 ) {\r\n        return SUCCESS;\r\n    }\r\n\r\n    if ( action.type.indexOf( \"_FAILED\" ) > -1 ) {\r\n        return FAILURE;\r\n    }\r\n\r\n    return STARTED;\r\n}\r\n","import { createStore, applyMiddleware, combineReducers, compose } from 'redux';\r\nimport { persistStore, persistReducer } from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\nimport * as reducers from './ducks';\r\nimport { apiService } from './middlewares';\r\n\r\nconst rootReducer = combineReducers(reducers);\r\n\r\nconst persistConfig = {\r\n  key: 'shop',\r\n  storage: storage,\r\n  whitelist: ['session'], // which reducer want to store\r\n};\r\n\r\nconst pReducer = persistReducer(persistConfig, rootReducer);\r\n\r\nfunction configureStore(initialState) {\r\n  return createStore(\r\n    pReducer,\r\n    initialState,\r\n    compose(\r\n      applyMiddleware(apiService),\r\n      window.__REDUX_DEVTOOLS_EXTENSION__\r\n        ? window.__REDUX_DEVTOOLS_EXTENSION__()\r\n        : (f) => f\r\n    )\r\n  );\r\n}\r\n\r\nconst store = configureStore({});\r\n\r\nconst persistor = persistStore(store);\r\n\r\nexport { persistor, store };\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider as ReduxProvider } from 'react-redux';\nimport App from './App';\n\n// import redux store\nimport { store } from './state/store';\n\n// import the main files of styles\nimport './styles/_main.scss';\n\n\n// importing react hot loader for hot loading\nimport { AppContainer } from 'react-hot-loader';\n\n\n// Wrap the rendering in a function:\nconst render = () => {\n\tReactDOM.render(\n\t\t<ReduxProvider store={store}>\n\t\t\t<AppContainer>\n\t\t\t\t<App />\n\t\t\t</AppContainer>\n\t\t</ReduxProvider>,\n\t\tdocument.getElementById('root')\n\t);\n};\n\n\n// Render once\nrender();\n\n\n\n// Webpack Hot Module Replacement API\nif (module['hot']) {\n\tmodule['hot'].accept('./App', () => {\n\t\trender();\n\t});\n}\n\n\n"],"sourceRoot":""}