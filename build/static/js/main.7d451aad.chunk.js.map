{"version":3,"sources":["components/Field/Input.tsx","lib/utils/manupulateURL.js","lib/connector.js","lib/converter.js","hooks/useFetch.ts","hooks/useHandleFetch.ts","pages/auth/login/Login.tsx","pages/auth/login/index.ts","layout/sider/Sider.tsx","layout/sider/index.ts","components/Empty/index.ts","components/Empty/Empty.tsx","layout/header/Header.tsx","layout/header/index.ts","pages/overview/ApiVisits.tsx","pages/overview/PlatformVisits.tsx","pages/overview/Overview.tsx","components/Placeholders/DataTableSkeleton.tsx","pages/category/CategoryList.tsx","components/Field/TextArea.tsx","components/MediaLibrary/MediaLibrary.tsx","components/MediaLibrary/index.ts","pages/category/AddNewCategory.tsx","pages/category/QuickEdit.tsx","pages/category/CategoryEdit.tsx","pages/category/NewCategoryDetail.tsx","pages/brand/AddNewBrand.tsx","pages/brand/QuickEdit.tsx","pages/brand/BrandList.tsx","pages/brand/BrandEdit.tsx","pages/brand/NewBrandDetail.tsx","components/Notification/Notification.tsx","pages/product/Tags.tsx","pages/product/Brands.tsx","pages/product/Categories.tsx","components/Field/InputSmall.tsx","pages/product/Attributes.tsx","pages/product/Pricing.tsx","pages/product/AddNewProduct.tsx","pages/product/QuickEdit.tsx","pages/product/ProductList.tsx","pages/product/ProductEdit.tsx","pages/product/NewProductDetail.tsx","pages/tag/QuickEdit.tsx","pages/tag/AddNewTag.tsx","pages/tag/TagList.tsx","pages/tag/TagEdit.tsx","pages/tag/NewTagDetail.tsx","pages/customer/AddNewCustomer.tsx","pages/customer/QuickEdit.tsx","pages/customer/CustomerList.tsx","pages/pages/PagesList.tsx","pages/pages/AddNewPage.tsx","pages/attribute/QuickEdit.tsx","pages/attribute/AddAttributeValues.tsx","pages/attribute/AttributeList.tsx","pages/order/OrderInvoice.jsx","pages/order/productItemForOrderDetail.tsx","pages/order/QuickEdit.tsx","pages/order/OrderList.tsx","pages/order/AddNewOrderProductItem.tsx","pages/order/AddNewOrderSummary.tsx","pages/order/CustomersId.tsx","pages/order/AddProducts.tsx","pages/order/AddNewOrder.tsx","pages/settings/ComponentItem.tsx","pages/settings/AddNewComponent.tsx","pages/settings/ComponentListComponentItem.tsx","pages/settings/AddNewComponentItem.tsx","pages/settings/Component.tsx","pages/settings/AddNewTheme.tsx","pages/settings/ManageThemes.tsx","pages/settings/Image.tsx","pages/settings/Invoice.tsx","pages/settings/AdminSiteInfo.tsx","pages/settings/SiteInfoInvoice.tsx","pages/settings/SiteInfo.tsx","pages/delivery/DeliveryCharge.tsx","pages/delivery/AddNewRegion.tsx","pages/delivery/QuickEdit.tsx","pages/delivery/Delivery.tsx","pages/sms/SendCustomSMS.tsx","pages/sms/SMSConfiguaration.tsx","pages/sms/Sms.tsx","pages/sms/index.ts","layout/content/Content.tsx","layout/content/index.ts","App.tsx","state/ducks/busy/utils.js","state/ducks/busy/reducers.js","state/ducks/busy/index.js","state/ducks/cart/utils.js","state/utils/createReducer.js","state/utils/fetch.js","state/ducks/cart/selectors.js","state/ducks/cart/index.js","state/ducks/cart/reducers.js","state/ducks/cart/types.js","state/ducks/wishList/utils.js","state/ducks/wishList/index.js","state/ducks/wishList/reducers.js","state/ducks/wishList/types.js","state/ducks/checkout/selectors.js","state/ducks/checkout/index.js","state/ducks/checkout/reducers.js","state/ducks/checkout/types.js","state/ducks/checkout/utils.js","state/ducks/search/types.js","state/ducks/search/utils.js","state/ducks/search/index.js","state/ducks/search/reducers.js","state/ducks/product/reducers.js","state/ducks/product/types.js","state/ducks/product/index.js","state/ducks/session/reducers.js","state/ducks/session/types.js","state/ducks/session/index.js","state/ducks/category/reducers.js","state/ducks/category/types.js","state/ducks/category/index.js","state/ducks/cache/reducers.js","state/ducks/cache/types.js","state/ducks/cache/index.js","state/ducks/brand/reducers.js","state/ducks/brand/types.js","state/ducks/brand/index.js","state/ducks/tag/reducers.js","state/ducks/tag/types.js","state/ducks/tag/index.js","state/middlewares/apiService.js","state/middlewares/logger.js","state/store.js","index.tsx"],"names":["Demo","Input","TextArea","required","addonBefore","label","type","value","defaultValue","onChange","disabled","isError","errorString","name","className","Item","validateStatus","help","style","borderRadius","isObjectEmpty","Object","keys","length","manupulateURL","url","urlOptions","params","placeHolders","split","map","currentValue","includes","actualPlaceholderValue","replace","param","slice","indexOf","join","converter","resData","data","formatedData","category","id","_id","key","description","productCount","parent","cover","config","thumbnail","subCount","subCategory","children","subCat","noti","heading","text","link","added","read","title","page","next","convertedData","product","regularPrice","price","offerPrice","unit","pricing","date","time","venue","brand","tags","parseInt","cartItems","items","cartItem","medium","quantity","cartKey","updated","status","isNext","tag","success","original","image","img","labels","alt","caption","customer","firstName","lastName","country","city","email","phone","address1","address2","created","theme","components","component","item","region","pickUpLocation","countryCode","countryName","charge","availableStock","minimumStock","cat","primaryCategory","inserted","icon","order","billingAddress","address","total","totalPrice","products","date_created","paymentMethod","paymentStatus","payment","customerId","orders","generalFormat","dataMap","line_items","paymentItems","number","src","target","navLinkItems","sliderItems","images","sliderRightItems","servicesItems","accountItems","aboutUsItems","Connector","this","options","format","api","apiMap","server","method","credentials","headers","Headers","body","JSON","stringify","fetch","baseURL","res","formattedData","error","connector","dataFetchReducer","state","action","isLoading","done","payload","Error","useFetch","dependencies","initialData","initialState","useReducer","dispatch","useEffect","didCancel","a","request","fetchData","useHandleFetch","validationSchema","Yup","shape","username","min","password","initialValues","Login","loginState","handleLoginFetch","handleSubmit","values","actions","setSubmitting","getisSubmitButtonDisabled","isValid","onSubmit","validateOnBlur","enableReinitialize","handleChange","errors","isSubmitting","touched","setFieldTouched","handleBlur","handleReset","maxWidth","margin","e","onClick","loading","Sider","Layout","Header","Content","Footer","SubMenu","Menu","withRouter","props","useState","collapsed","setcollapsed","width","boxShadow","border","collapsible","onCollapse","selectable","mode","PieChartOutlined","to","GoldOutlined","RadarChartOutlined","TagsOutlined","TagOutlined","BranchesOutlined","ShoppingCartOutlined","TeamOutlined","MailOutlined","MessageOutlined","FileOutlined","FileSearchOutlined","FileAddOutlined","SlidersOutlined","SettingOutlined","UserOutlined","BgColorsOutlined","Empty","height","display","justifyContent","alignItems","PRESENTED_IMAGE_SIMPLE","history","useHistory","getAllNotificationState","handleGetAllNOticationFetch","handleMenuClick","getAllNotification","background","zIndex","transition","alignContent","push","color","marginTop","marginLeft","cursor","marginRight","placement","overlay","padding","maxHeight","overflowY","OrderedListOutlined","console","log","href","overflowCount","showZero","TwitterSquareFilled","count","fontWeight","BellOutlined","LogoutOutlined","Option","Select","RAINFALL","month","rainfall","MONTHS","getMonthNameByOrder","TooltipContainerStyles","fontSize","localOptions","ApiVisits","setSelectedApiValue","bordered","showSearch","placeholder","optionFilterProp","filterOption","input","option","toLowerCase","x1","y1","x2","y2","offset","stopColor","vertical","strokeDasharray","stroke","dataKey","tickFormatter","orientation","axisLine","tickLine","contentStyle","formatter","fill","CalendarOutlined","AGE_GROUP","device","percentage","COLORS","PlatformVisits","RADIAN","Math","PI","outerRadius","innerRadius","nameKey","cx","cy","midAngle","percent","radius","index","x","cos","y","sin","dominantBaseline","toFixed","labelLine","entry","Overview","DataTable","speed","viewBox","backgroundColor","foregroundColor","rx","ry","r","metadata","github","filename","Column","Table","Search","ColumnGroup","MyTable","setcategoryList","visible","setvisible","activeCategoryForEdit","setactiveCategoryForEdit","handleDeleteCategoryFetch","handleDeleteCategory","deleteCategoryRes","message","notification","CheckCircleOutlined","newCategoryList","filter","size","dataSource","dataIndex","render","record","objectFit","align","EditOutlined","onConfirm","okText","cancelText","DeleteOutlined","categoryList","categoryState","handleCategoryListFetch","isSubCategory","productCountValue","categories","setCategories","addNewCategoryVisible","setAddNewCategoryVisible","enterButton","onSearch","handleSearch","PlusOutlined","DataTableSkeleton","rows","Dragger","Upload","TabPane","Tabs","openSuccessNotification","MediaLibrary","setmyImages","isModalOpenForImages","setmyThumbnailImage","isModalOpenForThumbnail","myImages","myThumbnailImage","fileList","setfileList","uploading","setuploading","selectedimages","setselectedImages","activeImageItem","setactiveImageItem","updateMediaLibrary","handleUpdateMediaLibraryFetch","imageListFromLibraryState","handleImageListFromLibraryFetch","handleDeleteImageFromLibraryFetch","localImageList","setLocalImageList","isDoneOk","setisDoneOk","handleDeleteImageFromImageLibrary","deleteImageLibraryItemRes","newImageList","getImageList","imageListRes","handleUpload","formData","FormData","forEach","file","append","reqwest","processData","withCredentials","uploadProps","multiple","onRemove","filelist","newFileList","splice","beforeUpload","handleAddToSelectedList","find","newselectedImages","handleUpdateSubmit","captoin","updateImageLibraryItemRes","positionInImageList","updatedItem","assign","updateImageList","openErrorNotification","getisUpdateSubmitButtonDisabled","top","onOk","onCancel","bodyStyle","defaultActiveKey","tab","listType","FileImageOutlined","ArrowUpOutlined","marginBottom","lenght","CloseOutlined","CheckOutlined","ImageItemMenu","EllipsisOutlined","textAlign","AddNewCategory","addCategoryState","handleAddCategoryFetch","isparentCategoryChecked","setisparentcategoryChecked","setisModalOpenForThumbnail","setisModalOpenForImages","coverImageId","setCoverImageId","selectedParentId","setselectedParentId","imageUrl","setImageUrl","loadingThumnail","setLoadingThumbnail","imageFile","setImagefile","imagesIds","trim","addCategoryRes","resetForm","onSwitchChange","checked","handleCancel","onChangeSelect","callback","reader","FileReader","addEventListener","result","readAsDataURL","getBase64","uploadButton","LoadingOutlined","okButtonProps","htmlType","defaultChecked","InfoCircleOutlined","showUploadList","newImages","handleImagesDelete","FileImageFilled","QuickEdit","updateCategoryState","handleUpdateCategoryFetch","updateCategoryRes","positionInTag","updateCategoryList","AddNewBrand","categoryEditVisible","setCategoryEditVisible","categoryDetailData","updateBrandState","handleUpdateBrandFetch","brandDetailState","handleAttachImageToItemMultipleFetch","handleAttachImageToItemSingleFetch","handleDetachImageFromItemSingleFetch","handleSetImageAsThumbnailToItemFetch","visibleMedia","setvisibleMedia","myGoddamnImages","setMyGoddamnImages","handleSetImageAsThumnail","handleDetachSingleImage","imageId","collection","itemId","thumbnailRes","updateBrandRes","NewBrandDetail","CoolInput","categoryDetailState","handleCategoryDetailFetch","categoryProductsState","handleCategoryProductsFetch","useParams","categoryId","getCategoryDetail","getCategoryProducts","CategoryEdit","avatar","paragraph","paddingTop","overflow","tableLayout","onHeaderRow","column","brandList","setBrandList","addBrandRes","updatebrandState","positionInBrand","updateBrandList","handleDeleteBrandFetch","handleDeleteBrand","deleteBrandRes","newBrandList","brandState","handlebrandListFetch","brands","setBrands","brandDetailData","brandEditVisible","setBrandEditVisible","handleBrandDetailFetch","brandProductsState","handleBrandProductsFetch","brandId","getBrandDetail","getBrandProducts","BrandEdit","ExclamationCircleOutlined","CheckableTag","Tag","Tags","setTagIds","setSelectedTags","selectedTags","setoptions","tagState","handleTagListFetch","searchValue","setsearchValue","selectedCategoryIds","selectedcategory","tagListRes","tagOptions","setTags","borderColor","categoryNames","newOptions","nextSelectedTags","t","Brands","setBrandId","productDetailState","setSelectedBrandId","brandListRes","brandOptions","onFocus","onBlur","val","Categories","setcategoryIds","categoryOptions","setCategoryOptions","categoryListRes","checkable","checkedKeys","onSelect","selectedKeys","info","onCheck","checkedIds","treeData","defaultExpandAll","checkStrictly","allowClear","Complete","setAttributeList","attributeList","attribute","suggestedOptions","setsuggesteOptions","attributeLisState","attributeItem","setAttributeITem","updateAttributeList","manupulatedOptions","inputValue","suggestedOption","toUpperCase","InputSmall","Pricing","handleAddPricing","regular","offer","setprice","available","minimum","stock","setStock","handlePriceChange","handleStockChange","Attributes","minHeight","preventDefault","priceItem","model","purchaseLimit","AddNewProduct","productList","setProductList","addProductState","handleAddProductFetch","categoryids","tagIds","setPricing","setDescription","addProductRes","err","i","editor","ClassicEditor","onInit","event","getData","animated","tabPosition","newPricing","handleDeletePricing","textDecoration","updateProductState","handleUpdateProductFetch","updateProductRes","positionInAttribute","updateProductList","handleDeleteProductFetch","handleDeleteProduct","deleteProductRes","newProductList","productState","handleProductListFetch","setProducts","productEditVisible","setProductEditVisible","productDetailData","handleProductDetailFetch","setDateFeild","setTimeFeild","getProductDetail","updatedProductRes","destroyOnClose","productId","row","imgs","columns","localIndex","columnNumber","getImagesInCollumn","ProductEdit","tagList","setTagList","updateTagState","updateTagRes","updateTagList","addTagState","handleAddTagFetch","addTagRes","handleDeleteTagFetch","handleDeleteTag","deleteTagRes","newtagList","TagList","newTagList","AddNewTag","tagEditVisible","setTagEditVisible","tagDetailData","tagDetailState","handleTagDetailFetch","tagProductsState","handleTagProductsFetch","tagId","getTagProducts","TagEdit","max","zipCode","customerList","setCustomerList","addCustomerState","handleAddCustomerFetch","selectedCountryValue","setselectedCountryValue","selectedCityValue","setselectedCityValue","countryOptions","setcountryOptions","cityOptions","setcityOptions","countryListState","handleCountryListFetch","cityListState","handleCityListFetch","addCustomerRes","onChangeCity","onChangeCountry","CountryListRes","setCountries","cityListRes","setCities","notFoundContent","updateCustomerState","handleUpdateCustomerFetch","updateCustomerRes","handleDeleteCustomerFetch","handleDeleteCustomer","deleteCustomerRes","newCustomerList","customerState","handleCustomerListFetch","customers","setCustomers","AddNewCustomer","handleDeletePageFetch","handleDeletePage","deletePageRes","PageList","pageList","setPageList","pageState","handlePagsListFetch","pages","setPages","Steps","Step","AddNewPage","addPageState","handleAddPageFetch","content","setContent","handleAddPageSubmit","addOrderRes","EditableTagGroup","inputVisible","editInputIndex","editInputValue","handleClose","removedTag","setState","showInput","focus","handleInputChange","handleInputConfirm","handleEditInputChange","handleEditInputConfirm","newTags","saveInputRef","saveEditInputRef","editInput","ref","onPressEnter","isLongTag","tagElem","closable","onClose","onDoubleClick","React","Component","AttributeList","AddAttributeValues","setShowInvoice","showInvoice","orderDetailState","handleOrderDetailFetch","getOrderDetail","window","print","cellPadding","cellSpacing","bgcolor","fontFamily","lineHeight","verticalAlign","letterSpacing","colSpan","borderBottom","whiteSpace","CartOverLayCartItem","variation","handleProductFetch","setProduct","setIsLoading","modifiedPrice","getAndSetProduct","setOrderList","orderList","updateOrderState","handleUpdateOrderFetch","addRegionRes","updateRegionList","OrderInvoice","handleUpdateOrderStatusFetch","handleUpdateOrderStatus","newStatus","newOrderstatus","updateOrderStatusRes","updateOrderList","withTitle","StatusItemMenu","DownOutlined","orderState","handleRegionListFetch","regions","setOrders","newOrderList","setModifiedPrice","selectedVariationId","setSelectedVariationId","handleChangeQuantity","convertAttributeValuesToStringValue","attributeValue","pricingOptions","pricingItem","pricingOption","getPricingOptions","getPriceByVariationId","handleAttributeChange","AddNewOrderSummary","ShopOutlined","AddNewOrderProductItem","setCustomerId","setSelectedCustomerData","customerData","setProductIds","productIds","selectedOpions","setselectedOptions","selectItems","o","additionalInfo","steps","AddNewOrder","addOrderState","handleOrderFetch","current","setCurrent","selectedCustomerData","handleCheckoutSubmit","isTrue","CustomersId","AddProducts","flexDirection","CaretRightOutlined","CaretLeftOutlined","setItemsList","itemsList","componentItem","localComponentItem","setlocalComponentItem","handleComponentItemsChange","updateComponentList","groupName","componentList","setComponentList","addComponentState","handleAddComponentFetch","addComponentRes","handleAddComponentItem","itemComponent","ComponentItem","componentUpdate","Set","SaveOutlined","updateComponentByAddingItem","componentId","Panel","Collapse","genExtra","updateComponentByDeleting","stopPropagation","genExtraForGroup","setitemVisible","handleDeleteComponent","setComponentId","groupVisible","setgroupVisible","itemVisible","componentState","handleComponentListFetch","handleDeleteComponentFetch","handleUpdateComponentFetch","setComponents","deleteComponentRes","newComponentList","positionInItemsOfComponent","componentIndex","positionInComponents","itemIndex","manupulatedLocalComponentForTheReq","updatedItems","manupulatedUpdatedItems","manupulatedUpdatedItem","updateComponentRes","accordion","expandIconPosition","expandIcon","isActive","rotate","header","extra","ComponentListComponentItem","AddNewComponent","AddNewComponentItem","footer","themeList","setThemeList","addThemeState","handleAddthemeFetch","setselectedThemeTypeValue","setname","thumbnailFile","setThumbnailFile","addThemeRes","path","InboxOutlined","themeState","handleThemeListFetch","handleActiveThemeFetch","handleDeleteThemeFetch","themes","setThemes","handleActiveTheme","activeThemeRes","handleDeleteTheme","deleteThemeRes","newThemeList","danger","AddNewTheme","Image","Invoice","adminEmail","adminName","UpdateSiteinfo","UpdateSiteSettingsState","handleUpdateSiteSettingsFetch","siteSettingsState","handlSiteSettingsFetch","getSiteSettings","addSiteInfoRes","invoiceTitle","additionalText","updateInfovSettingsState","handleUpdateInvoiceSettingsFetch","InvoiceSettingsState","handlSiteInvoiceSettingsFetch","updateInvoiceRes","updateSiteLogoAndIcon","handleUpdateSiteLogoAndIconFetch","logo","updateSiteIconAndLogoRes","AdminSiteInfo","SiteInfoInvoice","DeliveryCharge","deliveryChargeItem","setdeliveryChargeList","deliveryChargeList","minimumOrder","deliveryCharge","setdeliveryCharge","handleDeliveryChargeChange","AddNewRegion","regionList","setRegionList","addRegionState","handleRegionFetch","handleAddDeliveryCharge","updateRegionState","handleUpdateRegionFetch","handleDeleteRegioFetch","handleDeleteRegion","deleteRegionRes","newRegionList","regionState","setRegions","SendCustomSMS","setText","recipient","setrecipient","tokenSeparators","SendOutlined","InfoCircleFilled","SMSConfiguaration","configureSMSStata","handleconfigureSMSFetch","Sms","hasSider","exact","NewCategoryDetail","BrandList","NewProductDetail","NewTagDetail","OrderList","PagesList","Delivery","ManageThemes","SiteInfo","App","actionShouldBlock","meta","async","blocking","actionFinished","reducer","utils","productPositionInCart","cart","newCartItem","isSelectedForCheckout","reducerMap","Accept","isomorphicFetch","then","Promise","resolve","reject","response","parseStatus","json","createReducer","tempArrayWithOutOldProduct","productPositionInWishList","wishList","wishlist","ADD","queryPositionInQueryList","queryList","query","types","currentItem","oldQuery","tempArrayWithOutOldQueries","detailsReducer","listReducer","combineReducers","details","list","authReducer","redirectAfterLoginReducer","redirectUrl","isAuthenticated","redirectAfterLogin","cartReducer","baseUrl","document","apiService","handleResponse","handleErrors","rootReducer","reducers","persistConfig","storage","whitelist","pReducer","persistReducer","store","createStore","compose","applyMiddleware","__REDUX_DEVTOOLS_EXTENSION__","f","persistStore","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.7d451aad.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Form, Input } from 'antd';\r\n\r\nconst { TextArea } = Input;\r\n\r\n\r\n\r\ninterface Props {\r\n    label?: string;\r\n    type?: string;\r\n    defaultValue?: string;\r\n    value?: string;\r\n    onChange?: any;\r\n    disabled?: boolean;\r\n    isError?: boolean;\r\n    errorString?: string;\r\n    name?: string;\r\n    addonBefore?: string;\r\n    required?: boolean\r\n}\r\n\r\nconst Demo = ({ required, addonBefore, label, type, defaultValue, value, onChange, disabled, isError, errorString, name }: Props) => {\r\n    return (\r\n        <>\r\n            {label && (\r\n                <h3 className='inputFieldLabel'>\r\n                    {label}\r\n                </h3>\r\n            )}\r\n\r\n            <Form.Item\r\n                // hasFeedback={true}\r\n                validateStatus={isError ? \"error\" : \"\"}\r\n                // hasFeedback validateStatus=\"success\"\r\n                help={errorString}\r\n\r\n            // rules={[{ required: true }]}\r\n            >\r\n\r\n                <Input\r\n                    required={required}\r\n                    type={type}\r\n                    addonBefore={addonBefore}\r\n                    style={{\r\n                        borderRadius: '0'\r\n                    }}\r\n                    name={name}\r\n                    disabled={disabled}\r\n                    value={value}\r\n                    onChange={onChange}\r\n                    className='inputclassName' />\r\n\r\n            </Form.Item>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Demo; ","const isObjectEmpty = value => {\r\n  return !value || !Object.keys(value).length > 0;\r\n};\r\n\r\nconst manupulateURL = (url, urlOptions = {}) => {\r\n  if (isObjectEmpty(urlOptions)) return url;\r\n\r\n  const params = urlOptions.params || {};\r\n  const placeHolders = urlOptions.placeHolders || {};\r\n\r\n\r\n\r\n  return url\r\n    .split('/')\r\n    .map(currentValue => {\r\n      if (currentValue.includes(':') && !isObjectEmpty(placeHolders)) {\r\n        let actualPlaceholderValue = placeHolders[currentValue.replace(':', '')];\r\n        currentValue = actualPlaceholderValue;\r\n      }\r\n\r\n      if (currentValue.includes('?')) {\r\n        currentValue = currentValue\r\n          .split('&')\r\n          .map(currentValue => {\r\n            const param = currentValue.slice(currentValue.indexOf('=') + 1);\r\n            return currentValue.replace(param, params[param] || '');\r\n          })\r\n          .join('&');\r\n      }\r\n      return currentValue;\r\n    })\r\n    .join('/');\r\n};\r\n\r\nexport default manupulateURL;\r\n","import config from '../config.json';\r\nimport apiMap from '../apiMap.json';\r\nimport Converter from './converter.js';\r\n\r\n// import utils\r\nimport { manupulateURL } from './utils';\r\n\r\nlet converter = new Converter();\r\n\r\nclass Connector {\r\n  //TODO\r\n  constructor() {\r\n    this.options = {};\r\n  }\r\n\r\n  /**\r\n   * @method request sends request to server\r\n   * this function determines api url and method from config.json\r\n   * and sends request and converts recieved data to general format\r\n   * @param {String} item\r\n   * @param {String} format\r\n   * @param {Object} data optional\r\n   * @returns {Object}  converted data\r\n   */\r\n\r\n  async request(item, format = 'json', options = {}) {\r\n    let api = apiMap[config.server][item]; //api url & method\r\n\r\n    // configuring options for fetch request\r\n\r\n\r\n\r\n    this.options = {\r\n      ...this.options,\r\n      method: api.method,\r\n      credentials: 'include',\r\n      headers: new Headers({\r\n        ...(format === 'json' && {\r\n          'Content-Type': 'application/json',\r\n        }),\r\n        // \"Content-Type\": \"application/x-www-form-urlencoded\",\r\n        ...(options.headers && {\r\n          ...options.headers,\r\n        }),\r\n      }),\r\n\r\n      ...(format === 'json' ? {\r\n        body: api.method !== 'get' ? JSON.stringify(options.body) : null,\r\n      } : {\r\n          body: api.method !== 'get' ? options.body : null,\r\n\r\n        }),\r\n\r\n    };\r\n\r\n    //*replace variable parts in url with actual data if params exists |or| just return the url\r\n\r\n    const url = manupulateURL(api.url, options.urlOptions);\r\n\r\n    // change the formate to text if the server is wooCommerce\r\n    if (config['server'] === 'wooCommerce') {\r\n      // format = 'text';\r\n    }\r\n\r\n    try {\r\n      let res = await fetch(config.baseURL + url, this.options);\r\n\r\n      if (res.status >= 200 && res.status < 300) {\r\n        let formattedData = await res['json'](); //await res.json(), res.text()\r\n        if (formattedData.status === 'error') {\r\n          throw formattedData.error;\r\n        }\r\n\r\n        let convertedData = await converter[item](formattedData); //convert recieved data to app general format\r\n        return convertedData;\r\n      } else {\r\n        let error = await res[format]();\r\n\r\n        throw error;\r\n      }\r\n    } catch (err) {\r\n\r\n      throw err;\r\n      //TODO: breakdown errors\r\n    }\r\n  }\r\n}\r\n\r\nexport default Connector;\r\n","import config from '../config.json';\r\nimport dataMap from '../dataMap.json';\r\n\r\nclass Converter {\r\n\t/**\r\n   * @public\r\n   * @method categoryList convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync categoryList(resData) {\r\n\t\tconst data = resData.data || [];\r\n\r\n\t\tconst formatedData =\r\n\t\t\tdata.length > 0 &&\r\n\t\t\tdata.map((category) => {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tid: category._id || '',\r\n\t\t\t\t\tkey: category._id || '',\r\n\t\t\t\t\tname: category.name && category.name,\r\n\t\t\t\t\tdescription: category.description && category.description,\r\n\t\t\t\t\tproductCount: category.productCount || 0,\r\n\t\t\t\t\tparent: category.parent || '',\r\n\t\t\t\t\tcover: category.cover ? `${config['baseURL']}${category.cover.thumbnail}` : null,\r\n\t\t\t\t\tsubCount:\r\n\t\t\t\t\t\tcategory.subCategory.length === 1\r\n\t\t\t\t\t\t\t? category.subCategory[0] && category.subCategory[0].name ? category.subCategory.length : 0\r\n\t\t\t\t\t\t\t: category.subCategory.length,\r\n\t\t\t\t\t...(category.subCategory &&\r\n\t\t\t\t\t\tcategory.subCategory.length > 0 &&\r\n\t\t\t\t\t\tcategory.subCategory[0] &&\r\n\t\t\t\t\t\tcategory.subCategory[0]['name'] && {\r\n\t\t\t\t\t\tchildren: category.subCategory.map((subCat) => {\r\n\t\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\t\tid: subCat._id || '',\r\n\t\t\t\t\t\t\t\tkey: subCat._id,\r\n\t\t\t\t\t\t\t\tname: subCat.name && subCat.name,\r\n\t\t\t\t\t\t\t\tdescription: subCat.description && subCat.description,\r\n\t\t\t\t\t\t\t\tcover: subCat.cover ? `${config['baseURL']}${subCat.cover.thumbnail}` : ''\r\n\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t})\r\n\t\t\t\t};\r\n\t\t\t});\r\n\r\n\t\treturn formatedData;\r\n\t}\r\n\r\n\t/**\r\n* @public\r\n* @method getAllNotification convert api data from API to general format based on config server\r\n* @param {Object} data response objectc from alpha\r\n* @returns {Object}  converted data\r\n*/\r\n\tasync getAllNotification(resData) {\r\n\t\tconst data = resData.data || [];\r\n\r\n\t\tconst formatedData =\r\n\t\t\tdata.length > 0 &&\r\n\t\t\tdata.map((noti) => {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tid: noti._id || '',\r\n\t\t\t\t\tkey: noti._id || '',\r\n\t\t\t\t\theading: noti.heading && noti.heading,\r\n\t\t\t\t\ttext: noti.text && noti.text,\r\n\t\t\t\t\ttype: noti.type,\r\n\t\t\t\t\tlink: noti.link || '',\r\n\t\t\t\t\tadded: noti.added || '',\r\n\t\t\t\t\tread: noti.read\r\n\t\t\t\t};\r\n\t\t\t});\r\n\r\n\t\treturn formatedData;\r\n\t}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\t/**\r\n* @public\r\n* @method categorySelectist convert api data from API to general format based on config server\r\n* @param {Object} data response objectc from alpha\r\n* @returns {Object}  converted data\r\n*/\r\n\tasync categorySelectist(resData) {\r\n\t\tconst data = resData.data || [];\r\n\r\n\t\tconst formatedData =\r\n\t\t\tdata.length > 0 &&\r\n\t\t\tdata.map((category) => {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tid: category._id || '',\r\n\t\t\t\t\tkey: category._id || '',\r\n\t\t\t\t\ttitle: category.name && category.name,\r\n\t\t\t\t\t...(category.subCategory &&\r\n\t\t\t\t\t\tcategory.subCategory.length > 0 &&\r\n\t\t\t\t\t\tcategory.subCategory[0] &&\r\n\t\t\t\t\t\tcategory.subCategory[0]['name'] && {\r\n\t\t\t\t\t\tchildren: category.subCategory.map((subCat) => {\r\n\t\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\t\tid: subCat._id || '',\r\n\t\t\t\t\t\t\t\tkey: subCat._id,\r\n\t\t\t\t\t\t\t\ttitle: subCat.name && subCat.name,\r\n\t\t\t\t\t\t\t\tcover: subCat.cover ? `${config['baseURL']}${subCat.cover.thumbnail ? subCat.cover.thumbnail : \"\"}` : ''\r\n\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t})\r\n\t\t\t\t};\r\n\t\t\t});\r\n\r\n\t\treturn formatedData;\r\n\t}\r\n\r\n\r\n\r\n\r\n\t/**\r\n   * @public\r\n   * @method categoryProducts convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync categoryProducts(resData) {\r\n\t\tconst data = resData.data || [];\r\n\t\tconst isNext = resData.page.next;\r\n\r\n\t\tconst convertedData =\r\n\t\t\tdata.length > 0 &&\r\n\t\t\tdata.map((product) => {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tid: product._id || '',\r\n\t\t\t\t\tname: product.name && product.name,\r\n\t\t\t\t\tdescription: product.description && product.description,\r\n\t\t\t\t\tcover: `${config['baseURL']}${(product.cover && product.cover['thumbnail']) || ''}`,\r\n\t\t\t\t\tregularPrice: product.price && product.price['regular'],\r\n\t\t\t\t\tofferPrice: product.price && product.price['offer'],\r\n\t\t\t\t\turl: product.url,\r\n\t\t\t\t\tunit: product.unit,\r\n\t\t\t\t\tcategory: product.category,\r\n\t\t\t\t\tpricing: product.pricing,\r\n\t\t\t\t\tdate: product.date,\r\n\t\t\t\t\ttime: product.time,\r\n\t\t\t\t\tvenue: product.venue,\r\n\t\t\t\t\tbrand: product.brand,\r\n\t\t\t\t\ttags: product.tags,\r\n\t\t\t\t\tprice:\r\n\t\t\t\t\t\tparseInt(product.price['offer']) > parseInt(product.price['regular'])\r\n\t\t\t\t\t\t\t? product.price['offer']\r\n\t\t\t\t\t\t\t: product.price['regular'],\r\n\t\t\t\t};\r\n\t\t\t});\r\n\r\n\t\t// return {\r\n\t\t// \tdata: convertedData,\r\n\t\t// \tisNext: isNext\r\n\t\t// };\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method getCart convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync getCart(resData) {\r\n\t\tconst cartItems = resData.items || [];\r\n\t\tconst convertedData =\r\n\t\t\tcartItems.length > 0 &&\r\n\t\t\tcartItems.map((cartItem) => {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tid: cartItem._id || '',\r\n\t\t\t\t\tname: cartItem.name && cartItem.name,\r\n\t\t\t\t\tcover: `${config['baseURL']}${cartItem.cover.medium}`,\r\n\t\t\t\t\tregularPrice: cartItem.price && cartItem.price['regular'],\r\n\t\t\t\t\tofferPrice: cartItem.price && cartItem.price['offer'],\r\n\t\t\t\t\tquantity: cartItem.quantity,\r\n\t\t\t\t\turl: cartItem.url,\r\n\t\t\t\t\tcartKey: cartItem.cartKey\r\n\t\t\t\t};\r\n\t\t\t});\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method addtoCart convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync addtoCart(resData) {\r\n\t\tlet data = false;\r\n\r\n\t\tif (resData['inserted']) {\r\n\t\t\tdata = {\r\n\t\t\t\tid: resData['inserted']._id || '',\r\n\t\t\t\tname: resData['inserted'].name && resData['inserted'].name,\r\n\t\t\t\tcover: `${config['baseURL']}${resData['inserted'].cover.medium}`,\r\n\t\t\t\tregularPrice: resData['inserted'].price && resData['inserted'].price['regular'],\r\n\t\t\t\tofferPrice: resData['inserted'].price && resData['inserted'].price['offer'],\r\n\t\t\t\tquantity: resData['inserted'].quantity,\r\n\t\t\t\turl: resData['inserted'].url,\r\n\t\t\t\tcartKey: resData['inserted'].cartKey\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tconst convertedData = data;\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method removeFromCart convert api data from API to general format based on config server\r\n   * @param {Object} resData response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync removeFromCart(resData) {\r\n\t\tlet convertedData = false;\r\n\t\tif (resData) {\r\n\t\t\tconvertedData = true;\r\n\t\t}\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method updateCartItem convert api data from API to general format based on config server\r\n   * @param {Object} resData response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync updateCartItem(resData) {\r\n\t\tlet convertedData = false;\r\n\t\tif (resData['updated']) {\r\n\t\t\tconvertedData = {\r\n\t\t\t\tquantity: resData.updated['quantity']\r\n\t\t\t};\r\n\t\t}\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method clearCart convert api data from API to general format based on config server\r\n   * @param {Object} resData response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync clearCart(data) {\r\n\t\tif (data && data['msg']) {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\t\treturn data;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method getWishlist convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync getWishlist(resData) {\r\n\t\t// const cartItems = resData.items || [];\r\n\t\tconst convertedData = resData;\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method addWishlist convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync addWishlist(resData) {\r\n\t\tif (resData && resData['msg'] === 'wishlist updated') {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method removeFromWishlist convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync removeFromWishlist(resData) {\r\n\t\tif (resData && resData['msg'] === 'wishlist updated') {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method removeAllWishlist convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync removeAllWishlist(resData) {\r\n\t\tif (resData && resData['msg'] === 'wishlist updated') {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method tagProducts convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync tagProducts(resData) {\r\n\t\tconst data = resData.data || [];\r\n\t\tconst isNext = resData.page.next;\r\n\r\n\t\tconst convertedData =\r\n\t\t\tdata.length > 0 &&\r\n\t\t\tdata.map((product) => {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tid: product._id || '',\r\n\t\t\t\t\tname: product.name && product.name,\r\n\t\t\t\t\tdescription: product.description && product.description,\r\n\t\t\t\t\tcover: `${config['baseURL']}${(product.cover && product.cover['thumbnail']) || ''}`,\r\n\t\t\t\t\tregularPrice: product.price && product.price['regular'],\r\n\t\t\t\t\tofferPrice: product.price && product.price['offer'],\r\n\t\t\t\t\turl: product.url,\r\n\t\t\t\t\tunit: product.unit,\r\n\t\t\t\t\tcategory: product.category,\r\n\t\t\t\t\tpricing: product.pricing,\r\n\t\t\t\t\tdate: product.date,\r\n\t\t\t\t\ttime: product.time,\r\n\t\t\t\t\tvenue: product.venue,\r\n\t\t\t\t\tbrand: product.brand,\r\n\t\t\t\t\ttags: product.tags,\r\n\t\t\t\t\tprice:\r\n\t\t\t\t\t\tparseInt(product.price['offer']) > parseInt(product.price['regular'])\r\n\t\t\t\t\t\t\t? product.price['offer']\r\n\t\t\t\t\t\t\t: product.price['regular'],\r\n\t\t\t\t};\r\n\t\t\t});\r\n\r\n\t\t// return {\r\n\t\t// \tdata: convertedData,\r\n\t\t// \tisNext: isNext\r\n\t\t// };\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method brandProducts convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync brandProducts(resData) {\r\n\t\tconst data = resData.data || [];\r\n\t\tconst isNext = resData.page.next;\r\n\r\n\t\tconst convertedData =\r\n\t\t\tdata.length > 0 &&\r\n\t\t\tdata.map((product) => {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tid: product._id || '',\r\n\t\t\t\t\tname: product.name && product.name,\r\n\t\t\t\t\tdescription: product.description && product.description,\r\n\t\t\t\t\tcover: `${config['baseURL']}${(product.cover && product.cover['thumbnail']) || ''}`,\r\n\t\t\t\t\tregularPrice: product.price && product.price['regular'],\r\n\t\t\t\t\tofferPrice: product.price && product.price['offer'],\r\n\t\t\t\t\turl: product.url,\r\n\t\t\t\t\tunit: product.unit,\r\n\t\t\t\t\tcategory: product.category,\r\n\t\t\t\t\tpricing: product.pricing,\r\n\t\t\t\t\tdate: product.date,\r\n\t\t\t\t\ttime: product.time,\r\n\t\t\t\t\tvenue: product.venue,\r\n\t\t\t\t\tbrand: product.brand,\r\n\t\t\t\t\ttags: product.tags,\r\n\t\t\t\t\tprice:\r\n\t\t\t\t\t\tparseInt(product.price['offer']) > parseInt(product.price['regular'])\r\n\t\t\t\t\t\t\t? product.price['offer']\r\n\t\t\t\t\t\t\t: product.price['regular'],\r\n\t\t\t\t};\r\n\t\t\t});\r\n\r\n\t\t// return {\r\n\t\t// \tdata: convertedData,\r\n\t\t// \tisNext: isNext\r\n\t\t// };\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method productSearch convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync productSearch(resData) {\r\n\t\tconst data = resData.data || [];\r\n\t\tconst isNext = resData.page.next;\r\n\r\n\t\tconst convertedData =\r\n\t\t\t(data.length > 0 &&\r\n\t\t\t\tdata.map((product) => {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tid: product._id || '',\r\n\t\t\t\t\t\tname: product.name && product.name,\r\n\t\t\t\t\t\tdescription: product.description && product.description,\r\n\t\t\t\t\t\tcover: `${config['baseURL']}${product.cover.thumbnail}`,\r\n\t\t\t\t\t\tregularPrice: product.price && product.price['regular'],\r\n\t\t\t\t\t\tofferPrice: product.price && product.price['offer'],\r\n\t\t\t\t\t\turl: product.url,\r\n\t\t\t\t\t\tunit: product.unit,\r\n\t\t\t\t\t\tdate: product.date,\r\n\t\t\t\t\t\tvenue: product.venue,\r\n\t\t\t\t\t\tpricing: product.pricing\r\n\t\t\t\t\t};\r\n\t\t\t\t})) ||\r\n\t\t\t[];\r\n\r\n\t\treturn {\r\n\t\t\tdata: convertedData,\r\n\t\t\tisNext\r\n\t\t};\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method productList convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync productList(resData) {\r\n\t\tconst data = resData.data || [];\r\n\t\tconst isNext = resData.page.next;\r\n\r\n\t\tlet convertedData =\r\n\t\t\tdata.length > 0 &&\r\n\t\t\tdata.map((product) => {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tid: product._id || '',\r\n\t\t\t\t\tname: product.name && product.name,\r\n\t\t\t\t\tdescription: product.description && product.description,\r\n\t\t\t\t\tcover: `${config['baseURL']}${(product.cover && product.cover['thumbnail']) || ''}`,\r\n\t\t\t\t\tregularPrice: product.price && product.price['regular'],\r\n\t\t\t\t\tofferPrice: product.price && product.price['offer'],\r\n\t\t\t\t\turl: product.url,\r\n\t\t\t\t\tunit: product.unit,\r\n\t\t\t\t\tcategory: product.category,\r\n\t\t\t\t\tpricing: product.pricing,\r\n\t\t\t\t\tdate: product.date,\r\n\t\t\t\t\ttime: product.time,\r\n\t\t\t\t\tvenue: product.venue,\r\n\t\t\t\t\tbrand: product.brand,\r\n\t\t\t\t\ttags: product.tags,\r\n\t\t\t\t\tprice:\r\n\t\t\t\t\t\tparseInt(product.price['offer']) > parseInt(product.price['regular'])\r\n\t\t\t\t\t\t\t? product.price['offer']\r\n\t\t\t\t\t\t\t: product.price['regular'],\r\n\t\t\t\t};\r\n\t\t\t});\r\n\r\n\t\t// convertedData = {\r\n\t\t// \tdata: convertedData,\r\n\t\t// \tisNext\r\n\t\t// };\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method tagList convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync tagList(resData) {\r\n\t\tconst data = resData.data || [];\r\n\r\n\t\tconst convertedData =\r\n\t\t\tdata.length > 0 &&\r\n\t\t\tdata.map((tag) => {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tid: tag._id || '',\r\n\t\t\t\t\tkey: tag._id || '',\r\n\t\t\t\t\tname: tag.name && tag.name,\r\n\t\t\t\t\tdescription: tag.description && tag.description\r\n\t\t\t\t};\r\n\t\t\t});\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method brandList convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync brandList(resData) {\r\n\t\tconst data = resData.data || [];\r\n\r\n\t\tconst convertedData =\r\n\t\t\tdata.length > 0 &&\r\n\t\t\tdata.map((brand) => {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tid: brand._id || '',\r\n\t\t\t\t\tkey: brand._id || '',\r\n\t\t\t\t\tname: brand.name && brand.name,\r\n\t\t\t\t\tdescription: brand.description && brand.description,\r\n\t\t\t\t\tcover: `${config['baseURL']}${brand.cover ? brand.cover.thumbnail : ''}`\r\n\t\t\t\t};\r\n\t\t\t});\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\r\n\t/**\r\n* @public\r\n* @method setImageAsThumbnailToItem convert api data from API to general format based on config server\r\n* @param {Object} data response objectc from alpha\r\n* @returns {Object}  converted data\r\n*/\r\n\tasync setImageAsThumbnailToItem(resData) {\r\n\t\tif (resData.success) {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn {};\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n* @public\r\n* @method brandDetail convert api data from API to general format based on config server\r\n* @param {Object} data response objectc from alpha\r\n* @returns {Object}  converted data\r\n*/\r\n\tasync brandDetail(resData) {\r\n\t\tconst data = Object.keys(resData).length > 0 ? resData : null;\r\n\t\tif (data) {\r\n\t\t\treturn {\r\n\t\t\t\tid: data._id || '',\r\n\t\t\t\tkey: data._id || '',\r\n\t\t\t\tname: data.name && data.name,\r\n\t\t\t\tdescription: data.description && data.description,\r\n\t\t\t\turl: data.url && data.url,\r\n\t\t\t\tcover: {\r\n\t\t\t\t\tcover: `${config['baseURL']}${data.cover ? data.cover.original && data.cover.original : ''}`,\r\n\t\t\t\t\tid: data.cover ? data.cover._id : ''\r\n\t\t\t\t},\r\n\t\t\t\timage:\r\n\t\t\t\t\t(data.image &&\r\n\t\t\t\t\t\tdata.image.length > 0 &&\r\n\t\t\t\t\t\tdata.image.map((img) => {\r\n\t\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\t\tid: img._id || '',\r\n\t\t\t\t\t\t\t\tname: img.name && img.name,\r\n\t\t\t\t\t\t\t\tcover: `${config['baseURL']}${img.thumbnail}`,\r\n\t\t\t\t\t\t\t\tadded: img.added,\r\n\t\t\t\t\t\t\t\ttitle: img.title,\r\n\t\t\t\t\t\t\t\tlabels: img.labels,\r\n\t\t\t\t\t\t\t\talt: img.alt,\r\n\t\t\t\t\t\t\t\tcaption: img.caption\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t})) ||\r\n\t\t\t\t\t[]\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn {};\r\n\t}\r\n\r\n\r\n\t/**\r\n* @public\r\n* @method tagDetail convert api data from API to general format based on config server\r\n* @param {Object} data response objectc from alpha\r\n* @returns {Object}  converted data\r\n*/\r\n\tasync tagDetail(resData) {\r\n\t\tconst data = Object.keys(resData).length > 0 ? resData : null;\r\n\t\tif (data) {\r\n\t\t\treturn {\r\n\t\t\t\tid: data._id || '',\r\n\t\t\t\tkey: data._id || '',\r\n\t\t\t\tname: data.name && data.name,\r\n\t\t\t\turl: data.url && data.url,\r\n\t\t\t\tdescription: data.description && data.description,\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn {};\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method customerList convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync customerList(resData) {\r\n\t\tconst data = resData.data || [];\r\n\r\n\t\tconst convertedData =\r\n\t\t\tdata.length > 0 &&\r\n\t\t\tdata.map((customer) => {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tid: customer._id || '',\r\n\t\t\t\t\tkey: customer._id || '',\r\n\t\t\t\t\tfirstName: customer.firstName || '',\r\n\t\t\t\t\tlastName: customer.lastName || '',\r\n\t\t\t\t\tcountry: customer.country || '',\r\n\t\t\t\t\tcity: customer.city || '',\r\n\t\t\t\t\temail: customer.email || '',\r\n\t\t\t\t\tphone: customer.phone || '',\r\n\t\t\t\t\taddress1: customer.address1 || '',\r\n\t\t\t\t\taddress2: customer.address2 || '',\r\n\t\t\t\t\tcreated: customer.created || ''\r\n\t\t\t\t};\r\n\t\t\t});\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n   * @public\r\n   * @method pageList convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync pageList(resData) {\r\n\t\tconst data = resData.data || [];\r\n\r\n\t\tconst convertedData =\r\n\t\t\tdata.length > 0 &&\r\n\t\t\tdata.map((page) => {\r\n\t\t\t\treturn {\r\n\t\t\t\t\t...page\r\n\t\t\t\t};\r\n\t\t\t});\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n* @public\r\n* @method themeList convert api data from API to general format based on config server\r\n* @param {Object} data response objectc from alpha\r\n* @returns {Object}  converted data\r\n*/\r\n\tasync themeList(resData) {\r\n\t\tconst data = resData || [];\r\n\r\n\t\tconst convertedData =\r\n\t\t\tdata.length > 0 &&\r\n\t\t\tdata.map((theme) => {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tid: theme._id || '',\r\n\t\t\t\t\tkey: theme._id || '',\r\n\t\t\t\t\tname: theme.name || '',\r\n\t\t\t\t\tadded: theme.added || '',\r\n\t\t\t\t\tthumbnail: `${config['baseURL']}${theme.thumbnail ? theme.thumbnail : \"\"}`,\r\n\r\n\t\t\t\t};\r\n\t\t\t});\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\r\n\t/**\r\n   * @public\r\n   * @method componentList convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync componentList(resData) {\r\n\t\tconst components = resData.components || {};\r\n\r\n\t\tif (components && components.length > 0) {\r\n\t\t\tconst convertedData =\r\n\t\t\t\tcomponents.length > 0 &&\r\n\t\t\t\tcomponents.map((component) => {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tid: component._id || '',\r\n\t\t\t\t\t\tkey: component._id || '',\r\n\t\t\t\t\t\tname: component.name || '',\r\n\t\t\t\t\t\titems: component.items.length > 0 ? component.items.map(item => {\r\n\t\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\t\t...item,\r\n\t\t\t\t\t\t\t\timage: item.image.length > 0 ? item.image.map(img => {\r\n\t\t\t\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\t\t\t\tcover: `${config['baseURL']}${img.thumbnail ? img.thumbnail : \"\"}`,\r\n\t\t\t\t\t\t\t\t\t\tid: img._id,\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}) : []\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}) : []\r\n\t\t\t\t\t};\r\n\t\t\t\t});\r\n\r\n\t\t\treturn convertedData;\r\n\t\t}\r\n\r\n\t\treturn [];\r\n\t}\r\n\r\n\r\n\r\n\r\n\r\n\t/**\r\n   * @public\r\n   * @method regionList convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync regionList(data) {\r\n\t\tconst convertedData =\r\n\t\t\tdata.length > 0 &&\r\n\t\t\tdata.map((region) => {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tid: region._id || '',\r\n\t\t\t\t\tkey: region._id || '',\r\n\t\t\t\t\tname: region.name || '',\r\n\t\t\t\t\tpickUpLocation: region.pickUpLocation || '',\r\n\t\t\t\t\tcountry: region.country || '',\r\n\t\t\t\t\tcountryCode: region.countryCode || '',\r\n\t\t\t\t\tcountryName: region.countryName || '',\r\n\t\t\t\t\tcity: region.city || '',\r\n\t\t\t\t\ttime: region.time || '',\r\n\t\t\t\t\tcharge: region.charge || {}\r\n\t\t\t\t};\r\n\t\t\t});\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method attributeList convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync attributeList(data) {\r\n\t\tconst convertedData = Object.keys(data).length > 0 && data;\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method ImageListFromLibrary convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync ImageListFromLibrary(resData) {\r\n\t\tconst data = resData.data || [];\r\n\r\n\t\tconst convertedData =\r\n\t\t\tdata.length > 0 &&\r\n\t\t\tdata.map((image) => {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tid: image._id || '',\r\n\t\t\t\t\tname: image.name && image.name,\r\n\t\t\t\t\tcover: `${config['baseURL']}${image.thumbnail}`,\r\n\t\t\t\t\tadded: image.added,\r\n\t\t\t\t\ttitle: image.title,\r\n\t\t\t\t\tlabels: image.labels,\r\n\t\t\t\t\talt: image.alt,\r\n\t\t\t\t\tcaption: image.caption\r\n\t\t\t\t};\r\n\t\t\t});\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method countryList convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync countryList(resData) {\r\n\t\tconst data = resData || [];\r\n\r\n\t\tconst convertedData =\r\n\t\t\tdata.length > 0 &&\r\n\t\t\tdata.map((country) => {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tid: country._id || '',\r\n\t\t\t\t\tname: country.name && country.name\r\n\t\t\t\t};\r\n\t\t\t});\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method getDeliveryCharge convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync getDeliveryCharge(data) {\r\n\t\tconst convertedData = data;\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method cityList convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync cityList(resData) {\r\n\t\tconst data = resData || [];\r\n\r\n\t\tconst convertedData =\r\n\t\t\tdata.length > 0 &&\r\n\t\t\tdata.map((city) => {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tid: city._id || '',\r\n\t\t\t\t\tname: city.name && city.name\r\n\t\t\t\t};\r\n\t\t\t});\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method forAnalytics convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync forAnalytics(resData) {\r\n\t\treturn resData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method productDetail convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\r\n\tasync productDetail(data) {\r\n\t\tconst convertedData =\r\n\t\t\t(Object.keys(data).length > 0 && {\r\n\t\t\t\tid: data._id || data.id || '',\r\n\t\t\t\tname: data.name || '',\r\n\t\t\t\tdescription: data.description.replace(/<[^>]+>/g, '') || '',\r\n\t\t\t\tregularPrice: data.price && data.price['regular'],\r\n\t\t\t\tofferPrice: data.price && data.price['offer'],\r\n\t\t\t\turl: data.url,\r\n\t\t\t\tavailableStock: data.availableStock,\r\n\t\t\t\tminimumStock: data.minimumStock,\r\n\t\t\t\tunit: data.unit,\r\n\t\t\t\tdate: data.date,\r\n\t\t\t\tvenue: data.venue,\r\n\t\t\t\tbrand: data.brand && Object.key(data.brand).length > 0 ? {\r\n\t\t\t\t\tid: data.brand.id,\r\n\t\t\t\t\tname: data.brand.name,\r\n\r\n\t\t\t\t} : {},\r\n\t\t\t\tprice:\r\n\t\t\t\t\tparseInt(data.price['offer']) > parseInt(data.price['regular'])\r\n\t\t\t\t\t\t? data.price['offer']\r\n\t\t\t\t\t\t: data.price['regular'],\r\n\t\t\t\tpricing: data.pricing,\r\n\t\t\t\tcategory:\r\n\t\t\t\t\t(data.category &&\r\n\t\t\t\t\t\tdata.category.length > 0 &&\r\n\t\t\t\t\t\tdata.category.map((cat) => {\r\n\t\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\t\tid: cat._id,\r\n\t\t\t\t\t\t\t\tname: cat.name\r\n\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t})) ||\r\n\t\t\t\t\tdata.category,\r\n\t\t\t\ttags:\r\n\t\t\t\t\t(data.tags &&\r\n\t\t\t\t\t\tdata.tags.length > 0 &&\r\n\t\t\t\t\t\tdata.tags.map((tag) => {\r\n\t\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\t\tid: tag._id,\r\n\t\t\t\t\t\t\t\tname: tag.name\r\n\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t})) ||\r\n\t\t\t\t\tdata.tags,\r\n\r\n\t\t\t\tcover: {\r\n\t\t\t\t\tcover: `${config['baseURL']}${data.cover ? data.cover.original && data.cover.original : ''}`,\r\n\t\t\t\t\tid: data.cover ? data.cover._id : ''\r\n\t\t\t\t},\r\n\t\t\t\timage:\r\n\t\t\t\t\t(data.image &&\r\n\t\t\t\t\t\tdata.image.length > 0 &&\r\n\t\t\t\t\t\tdata.image.map((img) => {\r\n\t\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\t\tid: img._id || '',\r\n\t\t\t\t\t\t\t\tname: img.name && img.name,\r\n\t\t\t\t\t\t\t\tcover: `${config['baseURL']}${img.thumbnail}`,\r\n\t\t\t\t\t\t\t\tadded: img.added,\r\n\t\t\t\t\t\t\t\ttitle: img.title,\r\n\t\t\t\t\t\t\t\tlabels: img.labels,\r\n\t\t\t\t\t\t\t\talt: img.alt,\r\n\t\t\t\t\t\t\t\tcaption: img.caption\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t})) ||\r\n\t\t\t\t\t[]\r\n\t\t\t}) ||\r\n\t\t\t{};\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method productDetailById convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync productDetailById(data) {\r\n\t\tconst convertedData =\r\n\t\t\t(Object.keys(data).length > 0 && {\r\n\t\t\t\tid: data._id || data.id || '',\r\n\t\t\t\tname: data.name || '',\r\n\t\t\t\tdescription: data.description.replace(/<[^>]+>/g, '') || '',\r\n\t\t\t\tregularPrice: data.price && data.price['regular'],\r\n\t\t\t\tofferPrice: data.price && data.price['offer'],\r\n\t\t\t\turl: data.url,\r\n\t\t\t\tunit: data.unit,\r\n\t\t\t\tdate: data.date,\r\n\t\t\t\tvenue: data.venue,\r\n\t\t\t\tpricing: data.pricing,\r\n\t\t\t\tprice:\r\n\t\t\t\t\tparseInt(data.price['offer']) > parseInt(data.price['regular'])\r\n\t\t\t\t\t\t? data.price['offer']\r\n\t\t\t\t\t\t: data.price['regular'],\r\n\t\t\t\tcategory:\r\n\t\t\t\t\t(data.category &&\r\n\t\t\t\t\t\tdata.category.length > 0 &&\r\n\t\t\t\t\t\tdata.category.map((cat) => {\r\n\t\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\t\tid: cat._id,\r\n\t\t\t\t\t\t\t\tname: cat.name,\r\n\t\t\t\t\t\t\t\tcover: `${config['baseURL']}${cat.cover ? cat.cover.original && cat.cover.original : ''}`\r\n\r\n\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t})) ||\r\n\t\t\t\t\tdata.category,\r\n\t\t\t\tbrand:\r\n\t\t\t\t\tdata.brand &&\r\n\t\t\t\t\t\tObject.keys(data.brand).length > 0 ? {\r\n\t\t\t\t\t\t\tid: data.brand._id,\r\n\t\t\t\t\t\t\tname: data.brand.name,\r\n\t\t\t\t\t\t\tcover: `${config['baseURL']}${data.brand.cover ? data.brand.cover.original && data.brand.cover.original : ''}`\r\n\t\t\t\t\t\t} :\r\n\t\t\t\t\t\tdata.brand,\r\n\t\t\t\tprimaryCategory: data.primaryCategory &&\r\n\t\t\t\t\tObject.keys(data.primaryCategory).length > 0 ? {\r\n\t\t\t\t\t\tid: data.primaryCategory._id,\r\n\t\t\t\t\t\tname: data.primaryCategory.name,\r\n\t\t\t\t\t\tcover: `${config['baseURL']}${data.primaryCategory.cover ? data.primaryCategory.cover.original && data.primaryCategory.cover.original : ''}`\r\n\t\t\t\t\t} :\r\n\t\t\t\t\tdata.primaryCategory,\r\n\t\t\t\ttags:\r\n\t\t\t\t\t(data.tags &&\r\n\t\t\t\t\t\tdata.tags.length > 0 &&\r\n\t\t\t\t\t\tdata.tags.map((tag) => {\r\n\t\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\t\tid: tag._id,\r\n\t\t\t\t\t\t\t\tname: tag.name\r\n\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t})) ||\r\n\t\t\t\t\tdata.tags,\r\n\t\t\t\tavailableStock: data.availableStock,\r\n\t\t\t\tcover: {\r\n\t\t\t\t\tcover: `${config['baseURL']}${data.cover ? data.cover.original && data.cover.original : ''}`,\r\n\t\t\t\t\tid: data.cover ? data.cover._id : ''\r\n\t\t\t\t},\r\n\t\t\t\timage:\r\n\t\t\t\t\t(data.image &&\r\n\t\t\t\t\t\tdata.image.length > 0 &&\r\n\t\t\t\t\t\tdata.image.map((img) => {\r\n\t\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\t\tid: img._id || '',\r\n\t\t\t\t\t\t\t\tname: img.name && img.name,\r\n\t\t\t\t\t\t\t\tcover: `${config['baseURL']}${img.original}`,\r\n\t\t\t\t\t\t\t\tadded: img.added,\r\n\t\t\t\t\t\t\t\ttitle: img.title,\r\n\t\t\t\t\t\t\t\tlabels: img.labels,\r\n\t\t\t\t\t\t\t\talt: img.alt,\r\n\t\t\t\t\t\t\t\tcaption: img.caption\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t})) ||\r\n\t\t\t\t\t[]\r\n\t\t\t}) ||\r\n\t\t\t{};\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method updateProduct convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync updateProduct(data) {\r\n\t\tconst convertedData = data;\r\n\r\n\t\tif (data && data.updated) {\r\n\t\t\treturn {\r\n\t\t\t\t...data.updated,\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\r\n\t/**\r\n* @public\r\n* @method updateComponent convert api data from API to general format based on config server\r\n* @param {Object} data response objectc from wc\r\n* @returns {Object}  converted data\r\n*/\r\n\tasync updateComponent(data) {\r\n\t\tconst convertedData = data;\r\n\r\n\t\tif (data && data.updated) {\r\n\t\t\treturn {\r\n\t\t\t\t...data.updated,\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\r\n\t/**\r\n   * @public\r\n   * @method updateImageFromLibrary convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync updateImageFromLibrary(data) {\r\n\t\tconst convertedData = data;\r\n\r\n\t\tif (data && data.updated) {\r\n\t\t\treturn {\r\n\t\t\t\t...data.updated,\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method updateTag convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync updateTag(data) {\r\n\t\tconst convertedData = data;\r\n\r\n\t\tif (data && data.updated) {\r\n\t\t\treturn {\r\n\t\t\t\t...data.updated,\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n* @public\r\n* @method updatePage convert api data from API to general format based on config server\r\n* @param {Object} data response objectc from wc\r\n* @returns {Object}  converted data\r\n*/\r\n\tasync updatePage(data) {\r\n\t\tconst convertedData = data;\r\n\r\n\t\tif (data && data.updated) {\r\n\t\t\treturn {\r\n\t\t\t\t...data.updated,\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method updateBrand convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync updateBrand(data) {\r\n\t\tconst convertedData = data;\r\n\r\n\t\tif (data && data.updated) {\r\n\t\t\treturn {\r\n\t\t\t\t...data.updated,\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method updateCategory convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync updateCategory(data) {\r\n\t\tconst convertedData = data;\r\n\r\n\t\tif (data && data.updated) {\r\n\t\t\treturn {\r\n\t\t\t\t...data.updated,\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method updateCustomer convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync updateCustomer(data) {\r\n\t\tconst convertedData = data;\r\n\r\n\t\tif (data && data.updated) {\r\n\t\t\treturn {\r\n\t\t\t\t...data.updated,\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method updateRegion convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync updateRegion(data) {\r\n\t\tconst convertedData = data;\r\n\r\n\t\tif (data && data.updated) {\r\n\t\t\treturn {\r\n\t\t\t\t...data.updated,\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method deleteProduct convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync deleteProduct(data) {\r\n\t\tconst convertedData = data;\r\n\t\tif (data && data.success) {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\r\n\t/**\r\n* @public\r\n* @method pageDetail convert api data from API to general format based on config server\r\n* @param {Object} data response objectc from wc\r\n* @returns {Object}  converted data\r\n*/\r\n\tasync pageDetail(data) {\r\n\t\tconst convertedData = data;\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\r\n\t/**\r\n   * @public\r\n   * @method updateOrderStatus convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync updateOrderStatus(data) {\r\n\t\tconst convertedData = data;\r\n\t\tif (data && data.success) {\r\n\t\t\treturn {\r\n\t\t\t\t...data,\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method deleteImageFromLibrary convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync deleteImageFromLibrary(data) {\r\n\t\tconst convertedData = data;\r\n\t\tif (data && data.success) {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n* @public\r\n* @method deletePage convert api data from API to general format based on config server\r\n* @param {Object} data response objectc from wc\r\n* @returns {Object}  converted data\r\n*/\r\n\tasync deletePage(data) {\r\n\t\tconst convertedData = data;\r\n\t\tif (data && data.success) {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n   * @public\r\n   * @method addTag convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync addTag(data) {\r\n\t\tconst convertedData = data;\r\n\t\tif (data && data.inserted) {\r\n\t\t\treturn {\r\n\t\t\t\t...data.inserted[0],\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method addCategory convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync addCategory(data) {\r\n\t\tconst convertedData = data;\r\n\t\tif (data && data.inserted) {\r\n\t\t\treturn {\r\n\t\t\t\t...data.inserted[0],\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method addProduct convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync addProduct(data) {\r\n\t\tconst convertedData = data;\r\n\t\tif (data && data.inserted) {\r\n\t\t\treturn {\r\n\t\t\t\t...data.inserted[0],\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\r\n\r\n\r\n\r\n\t/**\r\n* @public\r\n* @method addTheme convert api data from API to general format based on config server\r\n* @param {Object} data response objectc from wc\r\n* @returns {Object}  converted data\r\n*/\r\n\tasync addTheme(data) {\r\n\t\tconst convertedData = data;\r\n\t\tif (data && data.success) {\r\n\t\t\treturn {\r\n\t\t\t\t...data.inserted[0],\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n* @public\r\n* @method addPage convert api data from API to general format based on config server\r\n* @param {Object} data response objectc from wc\r\n* @returns {Object}  converted data\r\n*/\r\n\tasync addPage(data) {\r\n\t\tconst convertedData = data;\r\n\t\tif (data && data.success) {\r\n\t\t\treturn {\r\n\t\t\t\t...data.inserted[0],\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\r\n\t/**\r\n   * @public\r\n   * @method addBrand convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync addBrand(data) {\r\n\t\tconst convertedData = data;\r\n\t\tif (data && data.inserted) {\r\n\t\t\treturn {\r\n\t\t\t\t...data.inserted[0],\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\t/**\r\n   * @public\r\n   * @method addComponent convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync addComponent(data) {\r\n\t\tconst convertedData = data;\r\n\t\tif (data && data.inserted) {\r\n\t\t\treturn {\r\n\t\t\t\t...data.inserted[0],\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\r\n\r\n\r\n\t/**\r\n   * @public\r\n   * @method addCustomer convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync addCustomer(data) {\r\n\t\tconst convertedData = data;\r\n\t\tif (data && data.inserted) {\r\n\t\t\treturn {\r\n\t\t\t\t...data.inserted[0],\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method addRegion convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync addRegion(data) {\r\n\t\tconst convertedData = data;\r\n\t\tif (data && data.inserted) {\r\n\t\t\treturn {\r\n\t\t\t\t...data.inserted[0],\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method deleteTag convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync deleteTag(data) {\r\n\t\tconst convertedData = data;\r\n\t\tif (data && data.success) {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n   * @public\r\n   * @method logout convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync logout(data) {\r\n\t\tconst convertedData = data;\r\n\t\tif (data && data.success) {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\r\n\t/**\r\n* @public\r\n* @method activeTheme convert api data from API to general format based on config server\r\n* @param {Object} data response objectc from wc\r\n* @returns {Object}  converted data\r\n*/\r\n\tasync activeTheme(data) {\r\n\t\tconst convertedData = data;\r\n\t\tif (data && data.success) {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method deletetheme convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync deletetheme(data) {\r\n\t\tconst convertedData = data;\r\n\t\tif (data && data.success) {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\r\n\t/**\r\n   * @public\r\n   * @method deleteCustomer convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync deleteCustomer(data) {\r\n\t\tconst convertedData = data;\r\n\t\tif (data && data.success) {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\r\n\t/**\r\n* @public\r\n* @method deleteComponent convert api data from API to general format based on config server\r\n* @param {Object} data response objectc from wc\r\n* @returns {Object}  converted data\r\n*/\r\n\tasync deleteComponent(data) {\r\n\t\tconst convertedData = data;\r\n\t\tif (data && data.success) {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\r\n\t/**\r\n   * @public\r\n   * @method deleteBrand convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync deleteBrand(data) {\r\n\t\tconst convertedData = data;\r\n\t\tif (data && data.success) {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method deleteCategory convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync deleteCategory(data) {\r\n\t\tconst convertedData = data;\r\n\t\tif (data && data.success) {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method deleteRegion convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync deleteRegion(data) {\r\n\t\tconst convertedData = data;\r\n\t\tif (data && data.success) {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n   * @public\r\n   * @method siteSettings convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync siteSettings(resData) {\r\n\t\tconst convertedData = resData;\r\n\r\n\t\tif (resData.data) {\r\n\t\t\treturn {\r\n\t\t\t\t...resData.data\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\r\n\t/**\r\n* @public\r\n* @method updateSiteSettings convert api data from API to general format based on config server\r\n* @param {Object} data response objectc from wc\r\n* @returns {Object}  converted data\r\n*/\r\n\tasync updateSiteSettings(data) {\r\n\r\n\t\tif (data['updated']) {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn data;\r\n\t}\r\n\r\n\t/**\r\n* @public\r\n* @method updateInvoiceSettings convert api data from API to general format based on config server\r\n* @param {Object} data response objectc from wc\r\n* @returns {Object}  converted data\r\n*/\r\n\tasync updateInvoiceSettings(data) {\r\n\r\n\t\tif (data['updated']) {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn data;\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n   * @public\r\n   * @method invoiceSettingsDetail convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync invoiceSettingsDetail(resData) {\r\n\t\tconst convertedData = resData;\r\n\r\n\t\tif (resData.data) {\r\n\t\t\treturn {\r\n\t\t\t\t...resData.data\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\t/**\r\n   * @public\r\n   * @method categoryDetail convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync categoryDetail(data) {\r\n\r\n\t\tconst convertedData = {\r\n\t\t\tid: data.id || data._id || '',\r\n\t\t\tname: data.name && data.name,\r\n\t\t\tdescription: data.description && data.description,\r\n\t\t\tproductCount: data.productCount || 0,\r\n\t\t\ticon: data.icon ? `${config['baseURL']}${data.icon}` : '',\r\n\t\t\ttype: data.subCategory.length > 0 && data.subCategory[0] && data.subCategory[0]['name'] ? 'Top category' : 'Child category',\r\n\t\t\turl: data.url || '',\r\n\t\t\tsubCategory:\r\n\t\t\t\tdata.subCategory.length > 0 && data.subCategory[0] && data.subCategory[0]['name']\r\n\t\t\t\t\t? data.subCategory.map((subCat) => {\r\n\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\tid: subCat._id || '',\r\n\t\t\t\t\t\t\tname: subCat.name && subCat.name,\r\n\t\t\t\t\t\t\tdescription: subCat.description && subCat.description,\r\n\t\t\t\t\t\t\tcover: subCat.cover ? `${config['baseURL']}${subCat.cover.medium}` : ''\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t})\r\n\t\t\t\t\t: [],\r\n\t\t\tcover: {\r\n\t\t\t\tcover: `${config['baseURL']}${data.cover ? data.cover.original && data.cover.original : ''}`,\r\n\t\t\t\tid: data.cover ? data.cover._id : ''\r\n\t\t\t},\r\n\t\t\timage:\r\n\t\t\t\t(data.image &&\r\n\t\t\t\t\tdata.image.length > 0 &&\r\n\t\t\t\t\tdata.image.map((img) => {\r\n\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\tid: img._id || '',\r\n\t\t\t\t\t\t\tname: img.name && img.name,\r\n\t\t\t\t\t\t\tcover: `${config['baseURL']}${img.thumbnail}`,\r\n\t\t\t\t\t\t\tadded: img.added,\r\n\t\t\t\t\t\t\ttitle: img.title,\r\n\t\t\t\t\t\t\tlabels: img.labels,\r\n\t\t\t\t\t\t\talt: img.alt,\r\n\t\t\t\t\t\t\tcaption: img.caption\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})) ||\r\n\t\t\t\t[]\r\n\t\t};\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\t/**\r\n   * @public\r\n   * @method createOrder convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync createOrder(data) {\r\n\t\t//map props\r\n\r\n\t\tconst formatedData = {\r\n\t\t\t...data\r\n\t\t};\r\n\r\n\t\treturn formatedData;\r\n\t}\r\n\r\n\t/**\r\n* @public\r\n* @method orderDetail convert api data from API to general format based on config server\r\n* @param {Object} data response objectc from wc\r\n* @returns {Object}  converted data\r\n*/\r\n\tasync orderDetail(data) {\r\n\t\t//map props\r\n\t\tconst order = data.order || false;\r\n\t\tif (order) {\r\n\t\t\treturn {\r\n\t\t\t\tid: order.id || order._id,\r\n\t\t\t\tbillingAddress: order.billingAddress,\r\n\t\t\t\tname: order.billingAddress['firstName'] + \" \" + order.billingAddress['lastName'],\r\n\t\t\t\tcountry: order.billingAddress['country'],\r\n\t\t\t\tcity: order.billingAddress['city'],\r\n\t\t\t\taddress: order.billingAddress['address'],\r\n\t\t\t\tphone: order.billingAddress['phone'],\r\n\t\t\t\temail: order.billingAddress['email'],\r\n\t\t\t\tstatus: order.status,\r\n\t\t\t\ttotal: order.totalPrice,\r\n\t\t\t\tproducts: order.products,\r\n\t\t\t\tdate_created: order.added,\r\n\t\t\t\tpaymentMethod: order['payment']['paymentMethod'],\r\n\t\t\t\tpaymentStatus: order['payment']['status'],\r\n\t\t\t\tpayment: order['payment'],\r\n\t\t\t\tcustomerId: order['customer'] ? order['customer']['_id'] : ''\r\n\t\t\t}\r\n\t\t}\r\n\t\telse return {}\r\n\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method signup convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync signup(data) {\r\n\t\treturn {\r\n\t\t\tstatus: 'ok'\r\n\t\t};\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method signin convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync signin(data) {\r\n\t\tif (data['msg']) {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method login convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync login(data) {\r\n\t\tif (data['msg']) {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method addImageToLibrary convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync addImageToLibrary(data) {\r\n\t\treturn data;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method getCurrentUserData convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync getCurrentCustomerData(data) {\r\n\t\t//map props\r\n\t\t// let generalFormat = dataMap[config['server']]['getCurrentUserData']; //get genereal format from dataMap\r\n\r\n\t\tconst formatedData = {\r\n\t\t\t...data\r\n\t\t};\r\n\r\n\t\treturn formatedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method currentCustomerData convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync currentCustomerData(data) {\r\n\t\t//map props\r\n\t\t// let generalFormat = dataMap[config['server']]['currentCustomerData']; //get genereal format from dataMap\r\n\r\n\t\tconst convertedData = {\r\n\t\t\t...data\r\n\t\t};\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method updateCurrentCustomerData convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync updateCurrentCustomerData(data) {\r\n\t\t//map props\r\n\t\t// let generalFormat = dataMap[config['server']]['updateCurrentCustomerData']; //get genereal format from dataMap\r\n\r\n\t\tconst convertedData = {\r\n\t\t\tstatus: 'ok'\r\n\t\t};\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method changePassword convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync changePassword(data) {\r\n\t\tif (data['success']) {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn data;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method getCurrentUserOrders convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync getCurrentUserOrders(resData) {\r\n\t\tconst data = resData.data || [];\r\n\t\tconst isNext = resData.page.next;\r\n\r\n\t\tlet convertedData =\r\n\t\t\t(data.length > 0 &&\r\n\t\t\t\tdata.map((item) => {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\t...item,\r\n\t\t\t\t\t\tid: item.id || item._id,\r\n\t\t\t\t\t\tbillingAddress: item.billingAddress,\r\n\t\t\t\t\t\tstatus: item.status,\r\n\t\t\t\t\t\ttotal: item.totalPrice,\r\n\t\t\t\t\t\tproducts: item.products,\r\n\t\t\t\t\t\tdate_created: item.date,\r\n\t\t\t\t\t\tpaymentMethod: item['payment']['paymentMethod'],\r\n\t\t\t\t\t\tcustomerId: item.customer['_id']\r\n\t\t\t\t\t};\r\n\t\t\t\t})) ||\r\n\t\t\t[];\r\n\r\n\t\tconvertedData = {\r\n\t\t\tdata: convertedData,\r\n\t\t\tisNext\r\n\t\t};\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\r\n\t/**\r\n* @public\r\n* @method orderList convert api data from API to general format based on config server\r\n* @param {Object} data response objectc from wc\r\n* @returns {Object}  converted data\r\n*/\r\n\tasync orderList(resData) {\r\n\t\tconst data = resData.orders ? resData.orders.data : [];\r\n\t\t// const isNext = resData.page.next;\r\n\r\n\t\tlet convertedData =\r\n\t\t\t(data.length > 0 &&\r\n\t\t\t\tdata.map((item) => {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tid: item.id || item._id,\r\n\t\t\t\t\t\tbillingAddress: item.billingAddress,\r\n\t\t\t\t\t\tname: item.billingAddress['firstName'] + \" \" + item.billingAddress['lastName'],\r\n\t\t\t\t\t\tcountry: item.billingAddress['country'],\r\n\t\t\t\t\t\tcity: item.billingAddress['city'],\r\n\t\t\t\t\t\tstatus: item.status,\r\n\t\t\t\t\t\ttotal: item.totalPrice,\r\n\t\t\t\t\t\tproducts: item.products,\r\n\t\t\t\t\t\tdate_created: item.added,\r\n\t\t\t\t\t\tpaymentMethod: item['payment']['paymentMethod'],\r\n\t\t\t\t\t\tpaymentStatus: item['payment']['status'],\r\n\t\t\t\t\t\tpayment: item['payment'],\r\n\t\t\t\t\t\tcustomerId: item['customer'] ? item['customer']['_id'] : ''\r\n\r\n\t\t\t\t\t};\r\n\t\t\t\t})) ||\r\n\t\t\t[];\r\n\r\n\t\t// convertedData = {\r\n\t\t// \tdata: convertedData,\r\n\t\t// \tisNext\r\n\t\t// };\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\r\n\r\n\r\n\r\n\t/**\r\n   * @public\r\n   * @method currentUserOrders convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync currentUserOrders(data) {\r\n\t\t//map props\r\n\t\tlet generalFormat = dataMap[config['server']]['currentUserOrders']; //get genereal format from dataMap\r\n\r\n\t\tconst convertedData =\r\n\t\t\t(data.length > 0 &&\r\n\t\t\t\tdata.map((item) => {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\t...generalFormat,\r\n\t\t\t\t\t\tid: item.id,\r\n\t\t\t\t\t\tstatus: item.status,\r\n\t\t\t\t\t\ttotal: item.total,\r\n\t\t\t\t\t\tline_items: item.line_items,\r\n\t\t\t\t\t\tdate_created: item.date_created\r\n\t\t\t\t\t};\r\n\t\t\t\t})) ||\r\n\t\t\t[];\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method payment convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\r\n\tasync payment(data) {\r\n\t\tconst paymentItems = data.items;\r\n\t\tif (!paymentItems.length > 0) {\r\n\t\t\treturn paymentItems;\r\n\t\t}\r\n\r\n\t\tconst items = paymentItems.map((item) => {\r\n\t\t\treturn {\r\n\t\t\t\tname: item.name || '',\r\n\t\t\t\tnumber: item.text || ''\r\n\t\t\t};\r\n\t\t});\r\n\t\treturn items;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method welcome convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync welcome(data) {\r\n\t\treturn {\r\n\t\t\ttext: data.text\r\n\t\t};\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method logo convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync logo(data) {\r\n\t\tconst src = data.image && data.image.length > 0 ? `${config['baseURL']}${data.image[0]['original']}` : '';\r\n\t\treturn {\r\n\t\t\tsrc,\r\n\t\t\ttarget: data.target\r\n\t\t};\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method hotline convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync hotline(data) {\r\n\t\treturn {\r\n\t\t\ttext: data.text\r\n\t\t};\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method navLinks convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync navLinks(data) {\r\n\t\tconst navLinkItems = data.items;\r\n\t\tif (!navLinkItems.length > 0) {\r\n\t\t\treturn [];\r\n\t\t}\r\n\r\n\t\tconst items = navLinkItems.map((item) => {\r\n\t\t\treturn {\r\n\t\t\t\ttext: item.name || item.text,\r\n\t\t\t\ttarget: item.target\r\n\t\t\t};\r\n\t\t});\r\n\r\n\t\treturn items;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method slider convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync slider(data) {\r\n\t\tconst sliderItems = data.items;\r\n\t\tif (!sliderItems.length > 0) {\r\n\t\t\treturn sliderItems;\r\n\t\t}\r\n\r\n\t\tconst images = sliderItems.map((item) => {\r\n\t\t\treturn {\r\n\t\t\t\ttarget: item.target,\r\n\t\t\t\tsrc: `${config['baseURL']}${item.image[0]['medium']}`\r\n\t\t\t};\r\n\t\t});\r\n\t\treturn images;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method sliderRight convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync sliderRight(data) {\r\n\t\tconst sliderRightItems = data.items;\r\n\t\tif (!sliderRightItems.length > 0) {\r\n\t\t\treturn sliderRightItems;\r\n\t\t}\r\n\r\n\t\tconst images = sliderRightItems.map((item) => {\r\n\t\t\treturn {\r\n\t\t\t\ttarget: item.target,\r\n\t\t\t\tsrc: `${config['baseURL']}${item.image[0]['medium']}`\r\n\t\t\t};\r\n\t\t});\r\n\t\treturn images;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method address convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync address(data) {\r\n\t\treturn {\r\n\t\t\tname: data.name,\r\n\t\t\ttext: data.text\r\n\t\t};\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method Links convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync Links(data) {\r\n\t\tconst servicesItems = data.items;\r\n\t\tif (!servicesItems.length > 0) {\r\n\t\t\treturn servicesItems;\r\n\t\t}\r\n\r\n\t\tconst items = servicesItems.map((item) => {\r\n\t\t\treturn {\r\n\t\t\t\ttarget: item.target,\r\n\t\t\t\tname: item.name || item.text\r\n\t\t\t};\r\n\t\t});\r\n\t\treturn items;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method Account convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync Account(data) {\r\n\t\tconst accountItems = data.items;\r\n\t\tif (!accountItems.length > 0) {\r\n\t\t\treturn accountItems;\r\n\t\t}\r\n\r\n\t\tconst items = accountItems.map((item) => {\r\n\t\t\treturn {\r\n\t\t\t\ttarget: item.target,\r\n\t\t\t\tname: item.name || item.text\r\n\t\t\t};\r\n\t\t});\r\n\t\treturn items;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method 'About Us' convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync 'About Us'(data) {\r\n\t\tconst aboutUsItems = data.items;\r\n\t\tif (!aboutUsItems.length > 0) {\r\n\t\t\treturn aboutUsItems;\r\n\t\t}\r\n\r\n\t\tconst items = aboutUsItems.map((item) => {\r\n\t\t\treturn {\r\n\t\t\t\ttarget: item.target,\r\n\t\t\t\tname: item.name || item.text\r\n\t\t\t};\r\n\t\t});\r\n\t\treturn items;\r\n\t}\r\n}\r\n\r\nexport default Converter;\r\n","import { useEffect, useReducer } from 'react';\r\nimport Connector from '../lib/connector.js';\r\n\r\ntype TInitialData = any;\r\ntype Tdependecies = any[] | [];\r\ntype TItem = string;\r\ntype IFormat = string | undefined;\r\n\r\ntype Actions = {\r\n  type: string;\r\n  payload?: any;\r\n};\r\n\r\ninterface IState {\r\n  readonly isLoading: boolean;\r\n  readonly error: object;\r\n  readonly data: TInitialData;\r\n  readonly done: boolean;\r\n}\r\n\r\nconst connector = new Connector();\r\n\r\nconst dataFetchReducer = (state: IState, action: Actions) => {\r\n  switch (action.type) {\r\n    case 'FETCH_INIT':\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n        error: {\r\n          isError: false,\r\n          error: {},\r\n        },\r\n        done: false,\r\n      };\r\n    case 'FETCH_SUCCESS':\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        data: action.payload,\r\n        done: true,\r\n      };\r\n    case 'FETCH_FAILURE':\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        error: {\r\n          isError: true,\r\n          error: action.payload,\r\n          done: true,\r\n        },\r\n      };\r\n    default:\r\n      throw new Error();\r\n  }\r\n};\r\n\r\nconst useFetch = (\r\n  dependencies: Tdependecies = [],\r\n  initialData: TInitialData,\r\n  item: TItem,\r\n  options?: any,\r\n  format?: IFormat\r\n): IState => {\r\n  const initialState: IState = {\r\n    isLoading: false,\r\n    error: {\r\n      isError: false,\r\n      error: {},\r\n    },\r\n    data: initialData,\r\n    done: false,\r\n  };\r\n  const [state, dispatch] = useReducer(dataFetchReducer, initialState);\r\n\r\n  useEffect(() => {\r\n    let didCancel = false;\r\n    const fetchData = async () => {\r\n      dispatch({ type: 'FETCH_INIT' });\r\n      try {\r\n        // @ts-ignore\r\n        let data = await connector.request(item, format, options);\r\n        if (!didCancel) {\r\n          dispatch({ type: 'FETCH_SUCCESS', payload: data });\r\n        }\r\n      } catch (error) {\r\n        if (!didCancel) {\r\n          dispatch({ type: 'FETCH_FAILURE', payload: error });\r\n        }\r\n      }\r\n    };\r\n    fetchData();\r\n    return () => {\r\n      didCancel = true;\r\n    };\r\n  }, dependencies);\r\n\r\n  return state;\r\n};\r\n\r\nexport default useFetch;\r\n","import { useReducer } from 'react';\r\nimport Connector from '../lib/connector.js';\r\n\r\ntype TInitialData = any;\r\ntype TItem = string;\r\n\r\ntype Actions = {\r\n  type: string;\r\n  payload?: any;\r\n};\r\n\r\ninterface IState {\r\n  readonly isLoading: boolean;\r\n  readonly error: object;\r\n  readonly data: TInitialData;\r\n  readonly done: boolean;\r\n}\r\n\r\nconst connector = new Connector();\r\n\r\nconst dataFetchReducer = (state: IState, action: Actions) => {\r\n  switch (action.type) {\r\n    case 'FETCH_INIT':\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n        error: {\r\n          isError: false,\r\n          error: {},\r\n        },\r\n        done: false,\r\n      };\r\n    case 'FETCH_SUCCESS':\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        data: action.payload,\r\n        done: true,\r\n      };\r\n    case 'FETCH_FAILURE':\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        error: {\r\n          isError: true,\r\n          error: action.payload,\r\n        },\r\n        done: true,\r\n      };\r\n    default:\r\n      throw new Error();\r\n  }\r\n};\r\n\r\nconst useHandleFetch = (\r\n  initialData: TInitialData,\r\n  item: TItem,\r\n  format?: string\r\n): [IState, (values: any) => void] => {\r\n  const initialState: IState = {\r\n    isLoading: false,\r\n    error: {\r\n      isError: false,\r\n      error: {},\r\n    },\r\n    data: initialData,\r\n    done: false,\r\n  };\r\n\r\n  const [state, dispatch] = useReducer(dataFetchReducer, initialState);\r\n\r\n  const handlePost = async (options: any) => {\r\n    dispatch({ type: 'FETCH_INIT' });\r\n\r\n    try {\r\n      // @ts-ignore\r\n      let data = await connector.request(item, format || 'json', options);\r\n      dispatch({ type: 'FETCH_SUCCESS', payload: data });\r\n      return data;\r\n    } catch (error) {\r\n      dispatch({ type: 'FETCH_FAILURE', payload: error });\r\n      return initialData;\r\n    }\r\n  };\r\n\r\n  return [state, handlePost];\r\n};\r\n\r\nexport default useHandleFetch;\r\n","import React, { useState } from 'react';\r\nimport { Button } from 'antd';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n// import components\r\nimport Input from '../../../components/Field/Input';\r\nimport TextArea from '../../../components/Field/TextArea';\r\nimport { useHandleFetch } from '../../../hooks';\r\n\r\nconst validationSchema = Yup.object().shape({\r\n\tusername: Yup.string()\r\n\t\t.label('Username')\r\n\t\t.required('Username is required')\r\n\t\t.min(3, 'Username must have at least 3 characters'),\r\n\r\n\tpassword: Yup.string().label('Password').required('Password is required'),\r\n});\r\n\r\nconst initialValues = {\r\n\tusername: '',\r\n\tpassword: '',\r\n};\r\n\r\ninterface Props {\r\n\r\n}\r\n\r\nconst QuickEdit = ({ }: Props) => {\r\n\tconst [loginState, handleLoginFetch] = useHandleFetch({}, 'login');\r\n\r\n\tconst handleSubmit = async (values: any, actions: any) => {\r\n\t\tconst updateCategoryRes = await handleLoginFetch({\r\n\t\t\tbody: {\r\n\t\t\t\tusername: values.username,\r\n\t\t\t\tpassword: values.password,\r\n\t\t\t},\r\n\t\t});\r\n\r\n\t\tactions.setSubmitting(false);\r\n\t};\r\n\r\n\r\n\r\n\r\n\tconst getisSubmitButtonDisabled = (values, isValid) => {\r\n\t\tif (!values.username || !values.password || !isValid) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\treturn (\r\n\t\t<Formik\r\n\t\t\tonSubmit={(values, actions) => handleSubmit(values, actions)}\r\n\t\t\tvalidationSchema={validationSchema}\r\n\t\t\tvalidateOnBlur={false}\r\n\t\t\tenableReinitialize={true}\r\n\t\t\tinitialValues={\r\n\t\t\t\t{ ...initialValues }\r\n\t\t\t}\r\n\t\t>\r\n\t\t\t{({\r\n\t\t\t\thandleChange,\r\n\t\t\t\tvalues,\r\n\t\t\t\thandleSubmit,\r\n\t\t\t\terrors,\r\n\t\t\t\tisValid,\r\n\t\t\t\tisSubmitting,\r\n\t\t\t\ttouched,\r\n\t\t\t\thandleBlur,\r\n\t\t\t\tsetFieldTouched,\r\n\t\t\t\thandleReset,\r\n\t\t\t}) => (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\tmaxWidth: '400px',\r\n\t\t\t\t\t\t\tmargin: '20px'\r\n\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\tlabel='Username'\r\n\t\t\t\t\t\t\t\tvalue={values.username}\r\n\t\t\t\t\t\t\t\tname='username'\r\n\t\t\t\t\t\t\t\tisError={(touched.username && errors.username) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && loginState.error['error']['username'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.username && errors.username) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && loginState.error['error']['username'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('username');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\tlabel='Password'\r\n\t\t\t\t\t\t\t\tvalue={values.password}\r\n\t\t\t\t\t\t\t\tname='password'\r\n\t\t\t\t\t\t\t\tisError={(touched.password && errors.password) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && loginState.error['error']['password'])}\r\n\t\t\t\t\t\t\t\terrorString={(touched.password && errors.password) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && loginState.error['error']['password'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('password');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\ttype='primary'\r\n\t\t\t\t\t\t\t\tonClick={(e: any) => handleSubmit(e)}\r\n\t\t\t\t\t\t\t\tdisabled={getisSubmitButtonDisabled(values, isValid)}\r\n\t\t\t\t\t\t\t\tloading={isSubmitting}\r\n\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t// marginTop: '20px'\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\tLogin\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</>\r\n\t\t\t\t)}\r\n\t\t</Formik>\r\n\t);\r\n};\r\n\r\n\r\nexport default QuickEdit;\r\n","import Login from './Login';\r\nexport default Login;\r\n","import React, { useState } from 'react';\r\nimport { BrowserRouter as Router, Link, Switch, withRouter } from 'react-router-dom';\r\nimport { Layout, Menu, Upload, message } from 'antd';\r\n\r\n\r\nimport {\r\n    PieChartOutlined,\r\n    FileOutlined,\r\n    TeamOutlined,\r\n    TagOutlined,\r\n    BranchesOutlined,\r\n    GoldOutlined,\r\n    FilterOutlined,\r\n    TagsOutlined,\r\n    CarOutlined,\r\n    ShoppingCartOutlined,\r\n    MailOutlined,\r\n    SettingOutlined,\r\n    InboxOutlined,\r\n    SlidersOutlined,\r\n    DesktopOutlined,\r\n    RadarChartOutlined,\r\n    MessageOutlined,\r\n    UserOutlined,\r\n    FileAddOutlined,\r\n    FileSearchOutlined,\r\n    BgColorsOutlined\r\n} from '@ant-design/icons';\r\n\r\nconst { Header, Content, Footer, Sider } = Layout;\r\nconst { SubMenu } = Menu;\r\n\r\nconst SiderComponent = (props: any) => {\r\n    const [collapsed, setcollapsed] = useState(false);\r\n    const onCollapse = (collapsed: any) => {\r\n        // console.log(collapsed);\r\n        setcollapsed(collapsed);\r\n    };\r\n\r\n\r\n\r\n    return (\r\n        <Sider\r\n            width={260}\r\n            style={{\r\n                boxShadow: '7px 0 60px rgba(0,0,0,.05)',\r\n                border: 'none'\r\n            }}\r\n            collapsible collapsed={collapsed} onCollapse={onCollapse} theme='light'>\r\n\r\n            <Menu selectable={true} mode='inline'>\r\n                <Menu.Item key='1' icon={<PieChartOutlined />}>\r\n                    <Link to='/admin'>Dashboard</Link>\r\n                </Menu.Item>\r\n\r\n                {/* <SubMenu key='sub1' icon={<TagOutlined />} title='Category'>\r\n\t\t\t\t\t<Menu.Item key='2'>\r\n\t\t\t\t\t\t<Link to='/category'>List Categories</Link>\r\n\t\t\t\t\t</Menu.Item>\r\n\t\t\t\t</SubMenu> */}\r\n\r\n                {/* <SubMenu key='sub2' icon={<BranchesOutlined />} title='Brand'>\r\n\r\n\t\t\t\t\t<Menu.Item key='5'>\r\n\t\t\t\t\t\t<Link to='/brand'>List Brand</Link>\r\n\t\t\t\t\t</Menu.Item>\r\n\t\t\t\t</SubMenu> */}\r\n\r\n                <SubMenu\r\n                    key='sub3'\r\n                    icon={<GoldOutlined />}\r\n                    title='Product'\r\n                // onTitleClick={() => props.history.push('/product')}\r\n                >\r\n                    <Menu.Item\r\n                        icon={<RadarChartOutlined />}\r\n                        key='6'>\r\n                        <Link to='/admin/product'>List Products</Link>\r\n                    </Menu.Item>\r\n\r\n                    <Menu.Item key='9' icon={<TagsOutlined />}>\r\n                        <Link to='/admin/tag'>Tags</Link>\r\n\r\n                    </Menu.Item>\r\n\r\n                    <Menu.Item key='2' icon={<TagOutlined />}>\r\n                        <Link to='/admin/category'>Categories</Link>\r\n                    </Menu.Item>\r\n\r\n                    <Menu.Item key='5' icon={<BranchesOutlined />}>\r\n                        <Link to='/admin/brand'>Brand</Link>\r\n                    </Menu.Item>\r\n\r\n                </SubMenu>\r\n\r\n                {/* <Menu.Item key='9' icon={<TagsOutlined />}>\r\n\t\t\t\t\t<Link to='/tag'>Tags</Link>\r\n\t\t\t\t</Menu.Item> */}\r\n\r\n                {/* <Menu.Item key='10' icon={<CarOutlined />}>\r\n                    <Link to='/admin/delivery'>Delivery</Link>\r\n                </Menu.Item> */}\r\n\r\n                <SubMenu key='sub4' icon={<ShoppingCartOutlined />} title='Orders'>\r\n                    <Menu.Item key='11'>\r\n                        <Link to='/admin/order'>List Orders</Link>\r\n                    </Menu.Item>\r\n                    <Menu.Item key='12'>\r\n                        <Link to='/admin/order/new'>Add Order</Link>\r\n                    </Menu.Item>\r\n                </SubMenu>\r\n\r\n                <Menu.Item key='13' icon={<TeamOutlined />}>\r\n                    <Link to='/admin/customer'>Customer</Link>\r\n                </Menu.Item>\r\n\r\n                <SubMenu key='sub5' icon={<MailOutlined />} title='Email'>\r\n                    <Menu.Item key='14'>STMP Configuration</Menu.Item>\r\n                    <Menu.Item key='15'>Auto emails</Menu.Item>\r\n                    <Menu.Item key='16'>Compose Email</Menu.Item>\r\n                    <Menu.Item key='177'>Sent emails</Menu.Item>\r\n                </SubMenu>\r\n\r\n                <Menu.Item key='199' icon={<MessageOutlined />}>\r\n                    <Link to='/admin/sms'>SMS</Link>\r\n                </Menu.Item>\r\n\r\n                <SubMenu key='sub6' icon={<FileOutlined />} title='Pages'>\r\n                    <Menu.Item key='18'\r\n                        icon={<FileSearchOutlined />}\r\n                    >\r\n                        <Link to='/admin/page'> List Pages</Link>\r\n                    </Menu.Item>\r\n                    <Menu.Item\r\n                        icon={<FileAddOutlined />}\r\n                        key='17'>\r\n                        <Link to='/admin/page/new'> Add new Page</Link>\r\n                    </Menu.Item>\r\n\r\n                </SubMenu>\r\n\r\n                <Menu.Item key='23'\r\n                    icon={<SlidersOutlined />}\r\n                >\r\n                    <Link to='/admin/settings/components'>Components</Link>\r\n                </Menu.Item>\r\n\r\n                <SubMenu key='sub7' icon={<SettingOutlined />} title='Settings'>\r\n                    <Menu.Item\r\n                        icon={<UserOutlined />}\r\n                        key='19'>\r\n                        <Link to='/admin/settings/siteInfo'>Site information</Link>\r\n                    </Menu.Item>\r\n                    <Menu.Item\r\n                        icon={<BgColorsOutlined />}\r\n                        key='20'>\r\n                        <Link to='/admin/settings/themes'>Themes</Link>\r\n                    </Menu.Item>\r\n\r\n                    {/* <Menu.Item key='21'>\r\n\t\t\t\t\t\t<Link to='/settings/image'>Image</Link>\r\n\t\t\t\t\t</Menu.Item> */}\r\n                    {/* <Menu.Item key='22'>\r\n                        <Link to='/admin/settings/invoice'>Invoice</Link>\r\n                    </Menu.Item> */}\r\n\r\n                </SubMenu>\r\n            </Menu>\r\n        </Sider>\r\n    );\r\n};\r\n\r\nexport default withRouter(SiderComponent);\r\n","import Sider from \"./Sider\";\r\nexport default Sider; ","import Empty from \"./Empty\";\r\nexport default Empty; ","import React from 'react'\r\nimport { Empty } from 'antd';\r\n\r\n\r\ninterface Props {\r\n    title?: string;\r\n    height?: number\r\n}\r\n\r\nconst EmptyComponent = ({\r\n    title = 'No Data found',\r\n    height = 300\r\n}: Props) => {\r\n    return (\r\n        <div style={{\r\n            height: height,\r\n            display: 'flex',\r\n            justifyContent: 'center',\r\n            alignItems: 'center'\r\n        }}>\r\n            <Empty description={title} image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EmptyComponent\r\n","import React, { useEffect } from 'react';\r\n\r\n\r\n// import hooks \r\nimport { useHandleFetch } from \"../../hooks\";\r\n\r\n// import components\r\n// import { openSuccessNotification, openErrorNotification } from \"../../components/Notification\";\r\nimport Empty from \"../../components/Empty\";\r\n\r\n// import libraries \r\nimport { useHistory } from \"react-router\";\r\nimport { LogoutOutlined, BellOutlined, OrderedListOutlined, TwitterSquareFilled } from '@ant-design/icons';\r\nimport { Layout, Badge, Dropdown, Menu, Spin } from 'antd';\r\nimport Moment from 'react-moment';\r\nimport moment from 'moment';\r\n\r\nconst { Header } = Layout;\r\n\r\n// import styles\r\n\r\n\r\n\r\n\r\ninterface Props {\r\n\r\n}\r\n\r\nconst HeaderComponent = (props: Props) => {\r\n    const history = useHistory();\r\n\r\n    const [getAllNotificationState, handleGetAllNOticationFetch] = useHandleFetch({}, 'getAllNotification');\r\n\r\n\r\n    const handleMenuClick = (e) => {\r\n        if (e.key === '3') {\r\n        }\r\n    };\r\n\r\n\r\n    useEffect(() => {\r\n        const getAllNotification = async () => {\r\n            await handleGetAllNOticationFetch({});\r\n        }\r\n\r\n        getAllNotification();\r\n    }, [])\r\n\r\n\r\n    const getNotificationCreationTime = (time: any) => {\r\n        console.log(time);\r\n        // return <Moment fromNow={true}></Moment>\r\n        return time;\r\n    }\r\n    const menu = () => {\r\n\r\n        if (getAllNotificationState.isLoading) return (\r\n            <Menu>\r\n                <div style={{\r\n                    padding: '0 30px'\r\n                }}>\r\n                    <Spin />\r\n                </div>\r\n\r\n            </Menu>\r\n        );\r\n\r\n\r\n\r\n        if (getAllNotificationState.done && getAllNotificationState.data && !getAllNotificationState.data[0]) {\r\n            return (\r\n                <Menu>\r\n                    <div style={{\r\n                        padding: '0 30px'\r\n                    }}>\r\n                        <Empty title='No Notification found' />\r\n                    </div>\r\n\r\n                </Menu>\r\n            )\r\n\r\n\r\n        }\r\n        return (\r\n            <Menu\r\n                style={{\r\n                    maxHeight: '450px',\r\n                    overflowY: 'scroll'\r\n                }}\r\n\r\n\r\n                onClick={handleMenuClick}>\r\n                {getAllNotificationState.done && getAllNotificationState.data[0] && getAllNotificationState.data.map(item => {\r\n                    return (\r\n                        <Menu.Item\r\n                            // style={{\r\n                            //     padding: 0,\r\n                            //     margin: 0\r\n                            // }}\r\n                            key=\"1\">\r\n\r\n                            <div className='notificationItem'>\r\n                                <span className='notificationItem-icon'>\r\n                                    <OrderedListOutlined />\r\n                                </span>\r\n                                <div className='notificationItem-info'>\r\n                                    <h3>\r\n                                        {item.heading}\r\n                                    </h3>\r\n                                    <h4>\r\n                                        {item.text}\r\n                                    </h4>\r\n                                    <h2>\r\n\r\n                                        {getNotificationCreationTime(item.added)}\r\n                                    </h2>\r\n                                </div>\r\n                            </div>\r\n                        </Menu.Item>\r\n                    )\r\n                })}\r\n\r\n            </Menu>\r\n        )\r\n\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <Header\r\n            style={{\r\n                background: '#fff',\r\n                height: '60px',\r\n                display: 'flex',\r\n                justifyContent: 'space-between',\r\n                boxShadow: '0 0.46875rem 2.1875rem rgba(8,10,37,.01), 0 0.9375rem 1.40625rem rgba(8,10,37,.01), 0 0.25rem 0.53125rem rgba(8,10,37,.02), 0 0.125rem 0.1875rem rgba(8,10,37,.01)',\r\n                zIndex: 10,\r\n                transition: ' all .2s',\r\n                alignItems: 'center',\r\n                alignContent: 'center'\r\n            }}\r\n        >\r\n            <h2\r\n\r\n                onClick={() => history.push('/admin')}\r\n                style={{\r\n                    color: '#0072EA', marginTop: '10px', marginLeft: '-20px',\r\n                    cursor: 'pointer'\r\n\r\n                }}\r\n            >\r\n                Admin\r\n            </h2>\r\n\r\n            <div\r\n                style={{\r\n                    marginRight: '-28px'\r\n                }}>\r\n\r\n\r\n                <Dropdown\r\n                    placement=\"bottomLeft\"\r\n\r\n                    overlay={menu}\r\n                // visible={this.state.visible}\r\n                >\r\n                    <a\r\n                        style={{\r\n                            marginRight: '10px'\r\n                        }}\r\n                        href='###' className='notificationIconContainer'>\r\n\r\n                        <Badge\r\n                            overflowCount={100}\r\n                            // @ts-ignore\r\n                            showZero={TwitterSquareFilled}\r\n                            count={getAllNotificationState.done && !getAllNotificationState.data ? 0 : getAllNotificationState.data.length ? getAllNotificationState.data.length : 0}\r\n                        >\r\n                            <span style={{\r\n                                marginLeft: '10px',\r\n                                fontWeight: 600,\r\n                                borderRadius: '25px',\r\n                                color: '#1890ff',\r\n                                padding: '2px 20px',\r\n                                cursor: 'pointer',\r\n                                marginRight: '-5px'\r\n                            }}>\r\n                                <BellOutlined />\r\n\r\n                            </span>\r\n                        </Badge>\r\n                    </a>\r\n                </Dropdown>\r\n\r\n\r\n\r\n\r\n                <a href='/admin/auth/logout'>\r\n                    <span style={{\r\n                        marginLeft: '10px',\r\n                        fontWeight: 600,\r\n                        borderRadius: '25px',\r\n                        color: '#1890ff',\r\n                        padding: '2px 20px',\r\n                        cursor: 'pointer'\r\n                    }}>\r\n                        <LogoutOutlined />\r\n                        <span style={{\r\n                            marginLeft: '10px',\r\n\r\n                        }}>\r\n                            logout\r\n                    </span>\r\n                    </span>\r\n                </a>\r\n\r\n            </div>\r\n        </Header>\r\n    )\r\n}\r\n\r\nexport default HeaderComponent;\r\n","import Header from \"./Header\";\r\nexport default Header; ","import React, { useState, useEffect } from 'react'\r\n\r\n\r\n\r\n// import libraries \r\nimport {\r\n    ResponsiveContainer,\r\n    AreaChart,\r\n    CartesianGrid,\r\n    XAxis,\r\n    YAxis,\r\n    Tooltip,\r\n    Legend,\r\n    Area,\r\n    Line\r\n} from \"recharts\";\r\n\r\nimport {\r\n    DeleteOutlined,\r\n    FileAddOutlined,\r\n    CheckCircleOutlined,\r\n    FileImageFilled,\r\n    FileImageOutlined,\r\n    FileImageTwoTone,\r\n    PlusOutlined,\r\n    PlusCircleOutlined,\r\n    CloseOutlined,\r\n    CheckOutlined,\r\n    InfoCircleOutlined,\r\n    UserOutlined,\r\n    CalendarOutlined,\r\n    GoldOutlined,\r\n    ShoppingCartOutlined,\r\n    TagOutlined\r\n} from '@ant-design/icons';\r\n\r\n\r\nimport { Select, Button, Spin } from 'antd';\r\n\r\nconst { Option } = Select;\r\n\r\n\r\n\r\n\r\nexport const RAINFALL = {\r\n    \"2018\": [\r\n        {\r\n            month: 1,\r\n            rainfall: 65.4\r\n        },\r\n        {\r\n            month: 2,\r\n            rainfall: 1.6\r\n        },\r\n        {\r\n            month: 3,\r\n            rainfall: 23\r\n        },\r\n        {\r\n            month: 4,\r\n            rainfall: 16.4\r\n        },\r\n        {\r\n            month: 5,\r\n            rainfall: 65.6\r\n        },\r\n        {\r\n            month: 6,\r\n            rainfall: 43.2\r\n        },\r\n        {\r\n            month: 7,\r\n            rainfall: 19.4\r\n        },\r\n        {\r\n            month: 8,\r\n            rainfall: 42.8\r\n        },\r\n        {\r\n            month: 9,\r\n            rainfall: 16.4\r\n        },\r\n        {\r\n            month: 11,\r\n            rainfall: 97.8\r\n        },\r\n        {\r\n            month: 12,\r\n            rainfall: 104.8\r\n        }\r\n    ],\r\n    \"2019\": [\r\n        {\r\n            month: 1,\r\n            rainfall: 11.2\r\n        },\r\n        {\r\n            month: 2,\r\n            rainfall: 18.6\r\n        },\r\n        {\r\n            month: 3,\r\n            rainfall: 12\r\n        },\r\n        {\r\n            month: 4,\r\n            rainfall: 7.2\r\n        },\r\n        {\r\n            month: 5,\r\n            rainfall: 53.4\r\n        },\r\n        {\r\n            month: 6,\r\n            rainfall: 49.8\r\n        },\r\n        {\r\n            month: 7,\r\n            rainfall: 45.2\r\n        },\r\n        {\r\n            month: 8,\r\n            rainfall: 51.4\r\n        },\r\n        {\r\n            month: 9,\r\n            rainfall: 41\r\n        },\r\n        {\r\n            month: 10,\r\n            rainfall: 24\r\n        },\r\n        {\r\n            month: 11,\r\n            rainfall: 54.4\r\n        },\r\n        {\r\n            month: 12,\r\n            rainfall: 6.2\r\n        }\r\n    ]\r\n};\r\n\r\nconst MONTHS = [\r\n    \"Jan\",\r\n    \"Feb\",\r\n    \"Mar\",\r\n    \"Apr\",\r\n    \"May\",\r\n    \"Jun\",\r\n    \"Jul\",\r\n    \"Aug\",\r\n    \"Sep\",\r\n    \"Oct\",\r\n    \"Nov\",\r\n    \"Dec\"\r\n];\r\n\r\nexport const getMonthNameByOrder = (order: number): string | undefined =>\r\n    MONTHS[order - 1];\r\n\r\n\r\n\r\n\r\n\r\nexport const TooltipContainerStyles = {\r\n    border: 0,\r\n    borderRadius: \"8px\",\r\n    fontSize: 14,\r\n    boxShadow: \"2px 2px 5px 3px rgba(0,0,0,0.15)\"\r\n};\r\n\r\n\r\n\r\n\r\ninterface Props {\r\n\r\n}\r\n\r\nconst localOptions = [\r\n    {\r\n        value: 'category',\r\n        name: 'Category'\r\n    }, {\r\n        value: 'product',\r\n        name: 'Product'\r\n    }\r\n\r\n]\r\n\r\nconst ApiVisits = (props: Props) => {\r\n    const [options, setoptions] = useState(localOptions);\r\n    const [selectedApiValue, setSelectedApiValue] = useState('');\r\n\r\n\r\n\r\n\r\n    const onChange = (value) => {\r\n        setSelectedApiValue(value);\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div className='overviewContainer__body-apiVisits'>\r\n            <div className='overviewContainer__body-apiVisits-header'>\r\n                <div className='overviewContainer__body-apiVisits-header-info'>\r\n                    <h2>\r\n                        Product Visits\r\n                        </h2>\r\n                    <h3>\r\n                        All Products that were visited\r\n                        </h3>\r\n                </div>\r\n                <div className='overviewContainer__body-apiVisits-header-controller'>\r\n                    <Select\r\n                        bordered={false}\r\n                        showSearch\r\n                        style={{ width: '130px', borderRadius: '6px', color: '#1890ff' }}\r\n                        placeholder='Select an api'\r\n                        optionFilterProp='children'\r\n                        onChange={onChange}\r\n                        defaultValue={'product'}\r\n                        filterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n                    >\r\n                        {\r\n                            options.map((option) => {\r\n                                return <Option value={option.value}>{option.name}</Option>;\r\n                            })}\r\n                    </Select>\r\n                </div>\r\n            </div>\r\n\r\n            <div className='overviewContainer__body-body'>\r\n                <ResponsiveContainer width=\"100%\" height={300}>\r\n                    <AreaChart data={RAINFALL[\"2019\"]} fontSize={12}>\r\n                        <defs>\r\n                            <linearGradient id=\"rainGradient\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\r\n                                <stop offset=\"0%\" stopColor=\"#1890ff\" />\r\n                                <stop offset=\"100%\" stopColor=\"#3066BE22\" />\r\n                            </linearGradient>\r\n                        </defs>\r\n                        <CartesianGrid\r\n                            vertical={false}\r\n                            strokeDasharray=\"3 3\"\r\n                            stroke=\"#d6d9da\"\r\n                        />\r\n                        <XAxis dataKey=\"month\" tickFormatter={getMonthNameByOrder} />\r\n                        <YAxis\r\n                            // unit=\"ml\"\r\n                            orientation=\"left\"\r\n                            width={20}\r\n                            axisLine={false}\r\n                            tickLine={false}\r\n                        />\r\n                        <Tooltip\r\n                            cursor={false}\r\n                            contentStyle={TooltipContainerStyles}\r\n                            formatter={(value, name) => [`${value}%`, `Device - ${name}`]}\r\n                        />\r\n                        <Area\r\n                            dataKey=\"rainfall\"\r\n                            name=\"Rainfall\"\r\n                            unit=\"ml\"\r\n                            type=\"basis\"\r\n                            fill=\"url(#rainGradient)\"\r\n                        />\r\n                    </AreaChart>\r\n                </ResponsiveContainer>\r\n\r\n\r\n            </div>\r\n            <div className=\"overviewContainer__body-footer\">\r\n                <h3>\r\n                    <span>\r\n                        <CalendarOutlined />\r\n                    </span>\r\n\r\n\t\t\t\t\t\t\t\tIn the last month\r\n\t\t\t\t\t     </h3>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ApiVisits\r\n","import React, { useState, useEffect } from 'react'\r\n\r\n\r\n\r\n\r\n// import lib \r\n\r\nimport { ResponsiveContainer, PieChart, Tooltip, Pie, Cell } from \"recharts\";\r\n\r\n\r\nimport {\r\n    DeleteOutlined,\r\n    FileAddOutlined,\r\n    CheckCircleOutlined,\r\n    FileImageFilled,\r\n    FileImageOutlined,\r\n    FileImageTwoTone,\r\n    PlusOutlined,\r\n    PlusCircleOutlined,\r\n    CloseOutlined,\r\n    CheckOutlined,\r\n    InfoCircleOutlined,\r\n    UserOutlined,\r\n    CalendarOutlined,\r\n    GoldOutlined,\r\n    ShoppingCartOutlined,\r\n    TagOutlined\r\n} from '@ant-design/icons';\r\n\r\nimport { Select, Button, Spin } from 'antd';\r\n\r\nconst { Option } = Select;\r\n\r\n\r\n\r\n\r\ninterface Props {\r\n\r\n}\r\n\r\nconst localOptions = [\r\n    {\r\n        value: 'all',\r\n        name: 'All'\r\n    },\r\n    {\r\n        value: 'Chrome',\r\n        name: 'chrome'\r\n    }, {\r\n        value: 'Firefox',\r\n        name: 'firefox'\r\n    },\r\n    {\r\n        value: 'Operamini',\r\n        name: 'operamini'\r\n    }\r\n\r\n];\r\n\r\n\r\nexport const AGE_GROUP = [\r\n    {\r\n        device: \"18-24\",\r\n        percentage: 14\r\n    },\r\n    {\r\n        device: \"25-34\",\r\n        percentage: 24\r\n    },\r\n    {\r\n        device: \"35-44\",\r\n        percentage: 22\r\n    },\r\n    {\r\n        device: \"45-54\",\r\n        percentage: 18\r\n    },\r\n    {\r\n        device: \"55-64\",\r\n        percentage: 16\r\n    },\r\n    {\r\n        device: \"65+\",\r\n        percentage: 6\r\n    }\r\n];\r\n\r\nexport const COLORS = [\r\n    '#1890ff',\r\n    '#20A39E',\r\n    '#61D095',\r\n    '#FFBA49',\r\n    '#EF5B5B',\r\n    '#A4036F',\r\n];\r\n\r\n\r\n\r\n\r\nexport const TooltipContainerStyles = {\r\n    border: 0,\r\n    borderRadius: \"8px\",\r\n    fontSize: 14,\r\n    boxShadow: \"2px 2px 5px 3px rgba(0,0,0,0.15)\"\r\n};\r\n\r\n\r\n\r\n\r\nconst PlatformVisits = (props: Props) => {\r\n    const [options, setoptions] = useState(localOptions);\r\n    const [selectedApiValue, setSelectedApiValue] = useState('');\r\n\r\n\r\n\r\n\r\n    const onChange = (value) => {\r\n        setSelectedApiValue(value);\r\n    }\r\n\r\n    const RADIAN = Math.PI / 180;\r\n\r\n\r\n    const renderCustomizedLabel = ({\r\n        cx,\r\n        cy,\r\n        midAngle,\r\n        innerRadius,\r\n        outerRadius,\r\n        percent,\r\n        index\r\n    }) => {\r\n        const radius = innerRadius + (outerRadius - innerRadius) * 0.5;\r\n        const x = cx + radius * Math.cos(-midAngle * RADIAN) - 10;\r\n        const y = cy + radius * Math.sin(-midAngle * RADIAN);\r\n\r\n        return (\r\n            <text x={x} y={y} fill=\"white\" fontSize={12} dominantBaseline=\"central\">\r\n                {`${(percent * 100).toFixed(0)}%`}\r\n            </text>\r\n        );\r\n    };\r\n\r\n\r\n\r\n    return (\r\n        <div className='overviewContainer__body-platformVisits'>\r\n            <div className='overviewContainer__body-platformVisits-header'>\r\n                <div className='overviewContainer__body-platformVisits-header-info'>\r\n                    <h2>\r\n                        Chrome\r\n                        </h2>\r\n                    <h3>\r\n                        On Chorme visited\r\n                        </h3>\r\n                </div>\r\n                <div className='overviewContainer__body-platformVisits-header-controller'>\r\n                    <Select\r\n                        bordered={false}\r\n                        showSearch\r\n                        style={{ width: '130px', borderRadius: '6px', color: '#1890ff' }}\r\n                        placeholder='Select an Device'\r\n                        optionFilterProp='children'\r\n                        onChange={onChange}\r\n                        defaultValue={'all'}\r\n                        filterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n                    >\r\n                        {\r\n                            options.map((option) => {\r\n                                return <Option value={option.value}>{option.name}</Option>;\r\n                            })}\r\n                    </Select>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"overviewContainer__body-body\">\r\n\r\n                <ResponsiveContainer width=\"100%\" height={300}>\r\n                    <PieChart fontSize={14}>\r\n                        <Tooltip\r\n                            cursor={false}\r\n                            contentStyle={TooltipContainerStyles}\r\n                            formatter={(value, name) => [`${value}%`, `Device - ${name}`]}\r\n                        />\r\n\r\n                        <Pie\r\n                            dataKey=\"percentage\"\r\n                            data={AGE_GROUP}\r\n                            outerRadius={100}\r\n                            innerRadius={40}\r\n                            name=\"Percentage\"\r\n                            nameKey=\"age\"\r\n                            unit=\"%\"\r\n                            label={renderCustomizedLabel}\r\n                            labelLine={false}\r\n                        >\r\n                            {AGE_GROUP.map((entry, index) => (\r\n                                <Cell\r\n                                    key={`cell-${index}`}\r\n                                    fill={COLORS[index % COLORS.length]}\r\n                                />\r\n                            ))}\r\n                        </Pie>\r\n                    </PieChart>\r\n                </ResponsiveContainer>\r\n            </div>\r\n\r\n            <div className=\"overviewContainer__body-footer\">\r\n                <h3>\r\n                    <span>\r\n                        <CalendarOutlined />\r\n                    </span>\r\n\r\n\t\t\t\t\t\t\t\tIn the last month\r\n\t\t\t\t\t     </h3>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PlatformVisits\r\n","import React from 'react';\r\n\r\n// import components \r\nimport ApiVisits from \"./ApiVisits\";\r\nimport PlatformVisits from \"./PlatformVisits\";\r\n\r\n// import lib \r\nimport { message, Tooltip, Modal, Tabs, Empty, Badge } from 'antd';\r\n\r\nimport {\r\n\tDeleteOutlined,\r\n\tFileAddOutlined,\r\n\tCheckCircleOutlined,\r\n\tFileImageFilled,\r\n\tFileImageOutlined,\r\n\tFileImageTwoTone,\r\n\tPlusOutlined,\r\n\tPlusCircleOutlined,\r\n\tCloseOutlined,\r\n\tCheckOutlined,\r\n\tInfoCircleOutlined,\r\n\tUserOutlined,\r\n\tCalendarOutlined,\r\n\tGoldOutlined,\r\n\tShoppingCartOutlined,\r\n\tTagOutlined\r\n} from '@ant-design/icons';\r\n\r\n\r\ninterface Props { }\r\n\r\nconst Overview = (props: Props) => {\r\n\treturn (\r\n\t\t<div className='overviewContainer'>\r\n\t\t\t<div className=\"overviewContainer__header\">\r\n\t\t\t\t<div className=\"overviewContainer__header-card\">\r\n\t\t\t\t\t<div className=\"overviewContainer__header-card-body\">\r\n\t\t\t\t\t\t<div className='overviewContainer__header-card-body-iconbox'>\r\n\t\t\t\t\t\t\t<UserOutlined />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className='overviewContainer__header-card-body-info'>\r\n\t\t\t\t\t\t\t<h3>\r\n\t\t\t\t\t\t\t\t+ Users\r\n\t\t\t\t\t\t\t</h3>\r\n\t\t\t\t\t\t\t<h2>\r\n\t\t\t\t\t\t\t\t8503\r\n\t\t\t\t\t\t\t</h2>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"overviewContainer__header-card-footer\">\r\n\t\t\t\t\t\t<h3>\r\n\t\t\t\t\t\t\t<span>\r\n\t\t\t\t\t\t\t\t<CalendarOutlined />\r\n\t\t\t\t\t\t\t</span>\r\n\r\n\t\t\t\t\t\t\t\tIn the last month\r\n\t\t\t\t\t     </h3>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div className=\"overviewContainer__header-card\">\r\n\t\t\t\t\t<div className=\"overviewContainer__header-card-body\">\r\n\t\t\t\t\t\t<div className='overviewContainer__header-card-body-iconbox'>\r\n\t\t\t\t\t\t\t<ShoppingCartOutlined />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className='overviewContainer__header-card-body-info'>\r\n\t\t\t\t\t\t\t<h3>\r\n\t\t\t\t\t\t\t\t+ Orders\r\n\t\t\t\t\t\t\t</h3>\r\n\t\t\t\t\t\t\t<h2>\r\n\t\t\t\t\t\t\t\t8503\r\n\t\t\t\t\t\t\t</h2>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"overviewContainer__header-card-footer\">\r\n\t\t\t\t\t\t<h3>\r\n\t\t\t\t\t\t\t<span>\r\n\t\t\t\t\t\t\t\t<CalendarOutlined />\r\n\t\t\t\t\t\t\t</span>\r\n\r\n\t\t\t\t\t\t\t\tIn the last month\r\n\t\t\t\t\t     </h3>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div className=\"overviewContainer__header-card\">\r\n\t\t\t\t\t<div className=\"overviewContainer__header-card-body\">\r\n\t\t\t\t\t\t<div className='overviewContainer__header-card-body-iconbox'>\r\n\t\t\t\t\t\t\t<GoldOutlined />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className='overviewContainer__header-card-body-info'>\r\n\t\t\t\t\t\t\t<h3>\r\n\t\t\t\t\t\t\t\t+ Product visits\r\n\t\t\t\t\t\t\t</h3>\r\n\t\t\t\t\t\t\t<h2>\r\n\t\t\t\t\t\t\t\t8503\r\n\t\t\t\t\t\t\t</h2>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"overviewContainer__header-card-footer\">\r\n\t\t\t\t\t\t<h3>\r\n\t\t\t\t\t\t\t<span>\r\n\t\t\t\t\t\t\t\t<CalendarOutlined />\r\n\t\t\t\t\t\t\t</span>\r\n\r\n\t\t\t\t\t\t\t\tIn the last month\r\n\t\t\t\t\t     </h3>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div className=\"overviewContainer__header-card\">\r\n\t\t\t\t\t<div className=\"overviewContainer__header-card-body\">\r\n\t\t\t\t\t\t<div className='overviewContainer__header-card-body-iconbox'>\r\n\t\t\t\t\t\t\t<TagOutlined />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className='overviewContainer__header-card-body-info'>\r\n\t\t\t\t\t\t\t<h3>\r\n\t\t\t\t\t\t\t\t+ Category Products\r\n\t\t\t\t\t\t\t</h3>\r\n\t\t\t\t\t\t\t<h2>\r\n\t\t\t\t\t\t\t\t8503\r\n\t\t\t\t\t\t\t</h2>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"overviewContainer__header-card-footer\">\r\n\t\t\t\t\t\t<h3>\r\n\t\t\t\t\t\t\t<span>\r\n\t\t\t\t\t\t\t\t<CalendarOutlined />\r\n\t\t\t\t\t\t\t</span>\r\n\r\n\t\t\t\t\t\t\t\tIn the last month\r\n\t\t\t\t\t     </h3>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t</div>\r\n\r\n\r\n\t\t\t</div>\r\n\r\n\r\n\t\t\t<div className=\"overviewContainer__body\">\r\n\t\t\t\t<ApiVisits />\r\n\t\t\t\t<PlatformVisits />\r\n\t\t\t</div>\r\n\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Overview;\r\n","import React from 'react';\r\nimport ContentLoader from 'react-content-loader';\r\n\r\nconst DataTable = (props: any) => (\r\n\t<ContentLoader\r\n\t\tspeed={0.5}\r\n\t\twidth={1300}\r\n\t\theight={400}\r\n\t\tviewBox='0 0 1300 400'\r\n\t\tbackgroundColor='#f3f3f3'\r\n\t\tforegroundColor='#ecebeb'\r\n\t\t{...props}\r\n\t>\r\n\t\t<rect x='27' y='139' rx='4' ry='4' width='20' height='20' />\r\n\t\t<rect x='67' y='140' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='188' y='141' rx='10' ry='10' width='169' height='19' />\r\n\t\t<rect x='402' y='140' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='523' y='141' rx='10' ry='10' width='169' height='19' />\r\n\t\t<rect x='731' y='139' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='852' y='138' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='1424' y='137' rx='10' ry='10' width='68' height='19' />\r\n\t\t<rect x='26' y='196' rx='4' ry='4' width='20' height='20' />\r\n\t\t<rect x='66' y='197' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='187' y='198' rx='10' ry='10' width='169' height='19' />\r\n\t\t<rect x='401' y='197' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='522' y='198' rx='10' ry='10' width='169' height='19' />\r\n\t\t<rect x='730' y='196' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='851' y='195' rx='10' ry='10' width='85' height='19' />\r\n\t\t<circle cx='1456' cy='203' r='12' />\r\n\t\t<rect x='26' y='258' rx='4' ry='4' width='20' height='20' />\r\n\t\t<rect x='66' y='259' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='187' y='260' rx='10' ry='10' width='169' height='19' />\r\n\t\t<rect x='401' y='259' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='522' y='260' rx='10' ry='10' width='169' height='19' />\r\n\t\t<rect x='730' y='258' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='851' y='257' rx='10' ry='10' width='85' height='19' />\r\n\t\t<circle cx='1456' cy='265' r='12' />\r\n\t\t<rect x='26' y='316' rx='4' ry='4' width='20' height='20' />\r\n\t\t<rect x='66' y='317' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='187' y='318' rx='10' ry='10' width='169' height='19' />\r\n\t\t<rect x='401' y='317' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='522' y='318' rx='10' ry='10' width='169' height='19' />\r\n\t\t<rect x='730' y='316' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='851' y='315' rx='10' ry='10' width='85' height='19' />\r\n\t\t<circle cx='1456' cy='323' r='12' />\r\n\t\t<rect x='26' y='379' rx='4' ry='4' width='20' height='20' />\r\n\t\t<rect x='66' y='380' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='187' y='381' rx='10' ry='10' width='169' height='19' />\r\n\t\t<rect x='401' y='380' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='522' y='381' rx='10' ry='10' width='169' height='19' />\r\n\t\t<rect x='730' y='379' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='851' y='378' rx='10' ry='10' width='85' height='19' />\r\n\t\t<circle cx='1456' cy='386' r='12' />\r\n\t\t<rect x='978' y='138' rx='10' ry='10' width='169' height='19' />\r\n\t\t<rect x='977' y='195' rx='10' ry='10' width='169' height='19' />\r\n\t\t<rect x='977' y='257' rx='10' ry='10' width='169' height='19' />\r\n\t\t<rect x='977' y='315' rx='10' ry='10' width='169' height='19' />\r\n\t\t<rect x='977' y='378' rx='10' ry='10' width='169' height='19' />\r\n\t\t<rect x='1183' y='139' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='1182' y='196' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='1182' y='258' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='1182' y='316' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='1182' y='379' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='1305' y='137' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='1304' y='194' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='1304' y='256' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='1304' y='314' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='1304' y='377' rx='10' ry='10' width='85' height='19' />\r\n\t\t<circle cx='37' cy='97' r='11' />\r\n\t\t<rect x='26' y='23' rx='5' ry='5' width='153' height='30' />\r\n\t\t<circle cx='1316' cy='88' r='11' />\r\n\t\t<rect x='1337' y='94' rx='0' ry='0' width='134' height='3' />\r\n\t\t<circle cx='77' cy='96' r='11' />\r\n\t</ContentLoader>\r\n);\r\n\r\nDataTable.metadata = {\r\n\tname: 'Mohd Arif Un',\r\n\tgithub: 'arif-un',\r\n\tdescription: 'Data Table skeleton',\r\n\tfilename: 'DataTable'\r\n};\r\n\r\nexport default DataTable;\r\n","import React, {useState, useEffect} from 'react';\r\nimport {withRouter} from 'react-router-dom';\r\nimport { Table, notification,  Space, Tag,Button, Input,Tooltip, Popconfirm  } from 'antd';\r\nimport { PlusOutlined, EditOutlined, DeleteOutlined,CheckCircleOutlined } from '@ant-design/icons';\r\n\r\nimport {AddNewCategory,QuickEdit} from \"../category\"\r\n\r\n/// import hooks\r\nimport { useFetch, useHandleFetch } from \"../../hooks\";\r\n\r\n// import components\r\nimport { DataTableSkeleton } from \"../../components/Placeholders\";\r\nimport Empty from \"../../components/Empty\";\r\n\r\nconst { Column, ColumnGroup } = Table;\r\nconst { Search } = Input;\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t  message: message || 'Tag Created',\r\n\t  description: '',\r\n\t  icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n  };\r\n\r\n\r\n  const openErrorNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t  message: message || 'Something Went Wrong',\r\n\t  description: '',\r\n\t  icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n  };\r\n\r\n\r\n\r\n\r\n\r\ninterface myTableProps {\r\n  data: any; \r\n  setcategoryList?:any; \r\n  history?: any; \r\n} \r\n\r\n\r\nconst MyTable = ({data, setcategoryList, history}: myTableProps) => {\r\n    const [visible,setvisible] = useState(false);   \r\n    const [activeCategoryForEdit,setactiveCategoryForEdit] = useState(false); \r\n    const [deleteCategoryState, handleDeleteCategoryFetch] = useHandleFetch({}, 'deleteCategory');\r\n      // console.log('activeCategoryForEdit',activeCategoryForEdit); \r\n\r\n\r\n      const handleDeleteCategory = async (id) => {\r\n        const deleteCategoryRes = await handleDeleteCategoryFetch({\r\n          urlOptions: {\r\n            placeHolders: {\r\n              id,\r\n            }\r\n            }\r\n          });\r\n\r\n          \t  // @ts-ignore\r\n\t\t  if(deleteCategoryRes && deleteCategoryRes.status === 'ok'){\r\n\t\t\t  openSuccessNotification('Deleted Category'); \r\n\t\t\t  const newCategoryList =  data.filter(item => item.id !== id);\r\n\t\t\t  setcategoryList(newCategoryList); \r\n\t\t  }\r\n      }\r\n      \r\n\r\n    return (\r\n        <>\r\n        <Table \r\n        // expandable={{\r\n        //     expandedRowRender: record => <p style={{ margin: 0 }}>{record.name}</p>,\r\n        //     rowExpandable: record => record.name !== 'Not Expandable',\r\n        //   }}\r\n        // bordered={true}\r\n        size='small'\r\n        // pagination={false}\r\n        dataSource={data}\r\n        >\r\n            <Column \r\n          title=\"\"\r\n           dataIndex=\"cover\"\r\n            key=\"id\" \r\n            width={'80px'}\r\n            \r\n           className='classnameofthecolumn'\r\n\r\n            render={(cover,record: any) => (\r\n                <>\r\n                <img src={cover} \r\n                   onClick={() => {\r\n                    history.push(`/admin/category/${record.id}`)\r\n                    // setcategoryDetailVisible(true);\r\n                    setactiveCategoryForEdit(record)\r\n                  }}\r\n                alt='cover img' \r\n                style={{\r\n                    height: '40px',\r\n                    width: '40px',\r\n                    objectFit: \"contain\",\r\n                    borderRadius:'3px',\r\n                  cursor: 'pointer'\r\n\r\n                }} />\r\n                </>\r\n              )}\r\n            />\r\n          <Column\r\n           title=\"Name\" \r\n           dataIndex=\"name\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n           render={(text, record: any) => (\r\n            <>\r\n\r\n              <h4\r\n                onClick={() => {\r\n                  history.push(`/admin/category/${record.id}`)\r\n                  // setcategoryDetailVisible(true);\r\n                  setactiveCategoryForEdit(record)\r\n                }}\r\n                style={{\r\n                  fontWeight: 400,\r\n                  color: '#555',\r\n                  cursor: 'pointer'\r\n\r\n                }}>\r\n                {text}\r\n              </h4>\r\n\r\n\r\n            </>\r\n          )}\r\n            />\r\n\r\n\r\n<Column\r\n           title=\"Description\" \r\n           dataIndex=\"description\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n         \r\n            />\r\n\r\n\r\n         <Column\r\n           title=\"Sub Cateogory\" \r\n           dataIndex=\"subCount\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n         \r\n            />\r\n\r\n<Column\r\n           title=\"Product\" \r\n           dataIndex=\"productCount\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n         \r\n            />\r\n\r\n\r\n\r\n          {/* <Column \r\n          \r\n          className='classnameofthecolumn'\r\n\r\n          title=\"Product\" dataIndex=\"product\" key=\"product\" /> */}\r\n\r\n          {/* <Column \r\n          \r\n          className='classnameofthecolumn'\r\n\r\n          title=\"Sub Category\" dataIndex=\"subCategory\" key=\"subCategory\" /> */}\r\n        \r\n        {/* <Column\r\n          title=\"Tags\"\r\n          dataIndex=\"tags\"\r\n          key=\"tags\"\r\n          render={tags => (\r\n            <>\r\n              {tags.map((tag : any) => (\r\n                <Tag color=\"blue\" key={tag}>\r\n                  {tag}\r\n                </Tag>\r\n              ))}\r\n            </>\r\n          )}\r\n        /> */}\r\n        <Column\r\n        \r\n        className='classnameofthecolumn'\r\n          title=\"\"\r\n          key=\"action\"\r\n          align='right'\r\n          render={(text, record : any) => (\r\n            <Space size=\"middle\">\r\n              <a href='##'>\r\n               <Tooltip placement=\"top\" title='Quick Edit Category'>\r\n              <span className='iconSize' onClick={() => {\r\n                setvisible(true)\r\n                setactiveCategoryForEdit(record); \r\n              }}> \r\n              <EditOutlined />\r\n            \r\n              </span>\r\n               </Tooltip>\r\n               </a>\r\n\r\n\r\n               <Popconfirm \r\n               \r\n               onConfirm={() => handleDeleteCategory(record.id)}\r\n               title=\"Are you sure？\" okText=\"Yes\" cancelText=\"No\">\r\n           \r\n\t\t   <span \r\n             className='iconSize iconSize-danger'\r\n             > \r\n             <DeleteOutlined/>\r\n            </span>\r\n       \r\n           </Popconfirm>\r\n\r\n\r\n       \r\n             \r\n            </Space>\r\n          )}\r\n        />\r\n      </Table>\r\n\r\n    \r\n\r\n    {activeCategoryForEdit &&   <QuickEdit \r\n    setcategoryList={setcategoryList}\r\n    categoryList={data}\r\n    setvisible={setvisible}\r\n    visible={visible}\r\n    category={activeCategoryForEdit}/>}\r\n    \r\n    </>\r\n    )\r\n}\r\n\r\n\r\ninterface Props {\r\n    history: any; \r\n}\r\n\r\nconst CategoryList = ({history}: Props) => {\r\n\r\n\r\n  \r\n\r\n  const [categoryState, handleCategoryListFetch] = useHandleFetch({}, 'categoryList');\r\n  const [categoryList,setcategoryList] = useState([]); \r\n\r\n  useEffect(()=>{\r\n   const setCategories = async () => {\r\n     const categories = await handleCategoryListFetch({\r\n      urlOptions: {\r\n        params: {\r\n          isSubCategory: true,\r\n          productCountValue: true \r\n        },\r\n      },\r\n     }); \r\n     // @ts-ignore\r\n     setcategoryList(categories); \r\n   }\r\n   setCategories(); \r\n  },[])\r\n\r\n\r\n  \r\n  const [addNewCategoryVisible,setAddNewCategoryVisible] = useState(false);   \r\n\r\n  const handleOkAddNewCategory = (e: any) => {\r\n    setAddNewCategoryVisible(false);\r\n  };\r\n\r\n  const handleCancelAddNewCategory = (e: any) => {\r\n    setAddNewCategoryVisible(false);\r\n  };\r\n\r\n  // console.log('categoryState',categoryState); \r\n\r\n  \r\n\r\n  const handleSearch = (value) => {\r\n    if(categoryState.data.length > 0 ){\r\n      const newCategoryList = categoryState.data.filter(item => item.name.toLowerCase().includes(value.toLowerCase())); \r\n      setcategoryList(newCategoryList); \r\n    }\r\n     \r\n  }\r\n\r\n\r\n\r\n\treturn (\r\n\t\t<>\r\n    {/* <h2 className='containerPageTitle'>\r\n      Categories\r\n    </h2> */}\r\n    <div className='categoryListContainer'>\r\n            <div className='categoryListContainer__header'>\r\n           \r\n\r\n          <div className='categoryListContainer__header-searchBar'>\r\n          <h2 className='categoryListContainer__header-title'>\r\n            Categories\r\n            </h2>\r\n\r\n\r\n          <Search\r\n            enterButton={false}\r\n            className='searchbarClassName'\r\n          placeholder=\"search categories..\"\r\n          onSearch={value => handleSearch(value)}\r\n        />\r\n          </div>\r\n            <Button\r\n          // type=\"primary\"\r\n          className='btnPrimaryClassNameoutline'\r\n          icon={<PlusOutlined />}\r\n          onClick={() => setAddNewCategoryVisible(true)}\r\n        >\r\n        Add New\r\n            \r\n            </Button>\r\n            </div>\r\n\r\n            <div className='categoryListContainer__afterHeader'>\r\n            {/* <Search\r\n      placeholder=\"search categories..\"\r\n      size=\"large\"\r\n      onSearch={value => console.log(value)}\r\n      style={{ width: 300 }}\r\n    /> */}\r\n            </div>\r\n\r\n     \r\n\t\t\t\r\n\t\t\t<div className='categoryListContainer__categoryList'>\r\n        {categoryState.done && categoryList.length > 0 && <MyTable \r\n        history={history}\r\n        setcategoryList={setcategoryList}\r\n        data={categoryList} />}\r\n        {categoryState.isLoading && <DataTableSkeleton />}\r\n\r\n        {categoryState.done && !(categoryList.length > 0) && (\r\n\t\t\t<div style={{\r\n\t\t\t\tmarginTop: '50px'\r\n\t\t\t}}>\r\n\t\t\t\t<Empty title='No Category found'   />\r\n\t\t\t</div>\r\n\t\t)}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\r\n\r\n{categoryState.done && \r\n    <AddNewCategory \r\n          addNewCategoryVisible={addNewCategoryVisible} \r\n          setAddNewCategoryVisible={setAddNewCategoryVisible}\r\n          categoryList={categoryList}\r\n          setcategoryList={setcategoryList}\r\n          \r\n           />}\r\n\r\n      \r\n\r\n        \r\n    </>\r\n\t);\r\n};\r\n\r\nexport default withRouter(CategoryList);\r\n","import React from 'react';\r\nimport { Form, Input } from 'antd';\r\n\r\nconst { TextArea } = Input;\r\n\r\n\r\n\r\ninterface Props {\r\n    label?: string;\r\n    type?: string;\r\n    defaultValue?: string;\r\n    value?: string;\r\n    onChange?: any;\r\n    disabled?: boolean;\r\n    isError?: boolean;\r\n    errorString?: string;\r\n    name?: string;\r\n    rows?: number\r\n}\r\n\r\nconst Demo = ({ label, type, defaultValue, value, onChange, disabled, isError, errorString, name, rows = 4 }: Props) => {\r\n    return (\r\n        <>\r\n            {label && (\r\n                <h3 className='inputFieldLabel'>\r\n                    {label}\r\n                </h3>\r\n            )}\r\n\r\n            <Form.Item\r\n                validateStatus={isError ? \"error\" : \"\"}\r\n                help={errorString}\r\n            // rules={[{ required: true }]}\r\n            >\r\n                <TextArea\r\n                    disabled={disabled}\r\n                    onChange={onChange}\r\n                    value={value}\r\n                    name={name}\r\n                    className='inputclassName'\r\n                    rows={rows} />\r\n\r\n            </Form.Item>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Demo; ","import React, { useState, useEffect } from 'react';\r\n\r\n\r\n\r\n\r\n// import libraries\r\nimport { Upload, Button, Modal, Tabs, message, notification, Popconfirm, Menu, Dropdown, } from 'antd';\r\nimport reqwest from 'reqwest';\r\nimport { Formik } from 'formik';\r\nimport Moment from 'react-moment';\r\n// import * as Yup from 'yup';\r\n\r\n\r\nimport {\r\n\tCheckOutlined,\r\n\tArrowUpOutlined,\r\n\tCheckCircleOutlined,\r\n\tEllipsisOutlined,\r\n\tFileImageOutlined,\r\n\tDeleteOutlined,\r\n\tCloseOutlined\r\n\r\n} from '@ant-design/icons';\r\n\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport Empty from '../../components/Empty';\r\n\r\n// import hooks\r\nimport { useHandleFetch } from \"../../hooks\";\r\n\r\n// import configs\r\nimport config from \"../../config.json\";\r\n\r\nconst { Dragger } = Upload;\r\nconst { TabPane } = Tabs;\r\n\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t\tmessage: message || 'Category Updated',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t\tmessage: message || 'Something Went Wrong',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n};\r\n\r\n\r\n\r\ninterface Props {\r\n\tvisible: boolean;\r\n\tsetvisible: (isVisible: any) => void;\r\n\tsetmyImages?: any;\r\n\tsetmyThumbnailImage?: any;\r\n\tisModalOpenForThumbnail?: boolean;\r\n\tisModalOpenForImages?: boolean;\r\n\tmyImages?: any;\r\n\tmyThumbnailImage?: any;\r\n\tsetMyGoddamnImages?: any;\r\n\tmyGoddamnImages?: any;\r\n}\r\n\r\n\r\nconst MediaLibrary = ({\r\n\tvisible,\r\n\tsetvisible,\r\n\tsetmyImages,\r\n\tisModalOpenForImages,\r\n\tisModalOpenForThumbnail,\r\n\tsetmyThumbnailImage,\r\n\tmyImages,\r\n\tmyThumbnailImage,\r\n\t...rest\r\n}: Props) => {\r\n\r\n\tconst [fileList, setfileList] = useState([]);\r\n\tconst [uploading, setuploading] = useState(false);\r\n\tconst [selectedimages, setselectedImages] = useState([]);\r\n\tconst [activeImageItem, setactiveImageItem] = useState(false);\r\n\tconst [updateMediaLibrary, handleUpdateMediaLibraryFetch] = useHandleFetch({}, 'updateImageFromLibrary');\r\n\tconst [imageListFromLibraryState, handleImageListFromLibraryFetch] = useHandleFetch({}, 'ImageListFromLibrary');\r\n\tconst [deleteImageFromLibraryFetchState, handleDeleteImageFromLibraryFetch] = useHandleFetch({}, 'deleteImageFromLibrary');\r\n\tconst [localImageList, setLocalImageList] = useState([]);\r\n\tconst [isDoneOk, setisDoneOk] = useState(false);\r\n\r\n\r\n\tconst handleDeleteImageFromImageLibrary = async (id) => {\r\n\r\n\t\tconst deleteImageLibraryItemRes = await handleDeleteImageFromLibraryFetch({\r\n\t\t\turlOptions: {\r\n\t\t\t\tplaceHolders: {\r\n\t\t\t\t\tid,\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\r\n\t\t// @ts-ignore\r\n\t\tif (deleteImageLibraryItemRes && deleteImageLibraryItemRes.status === 'ok') {\r\n\t\t\topenSuccessNotification('Imaged Deleted');\r\n\t\t\tconst newImageList = localImageList.filter(item => item.id !== id);\r\n\t\t\tsetLocalImageList(newImageList);\r\n\t\t}\r\n\t};\r\n\r\n\r\n\tconst getImageList = async () => {\r\n\t\tconst imageListRes = await handleImageListFromLibraryFetch({});\r\n\r\n\r\n\t\t// @ts-ignore\r\n\t\tif (imageListRes) {\r\n\t\t\t// @ts-ignore\r\n\t\t\tsetLocalImageList(imageListRes);\r\n\t\t}\r\n\r\n\t\t// console.log('imageListRes', imageListRes);\r\n\t}\r\n\r\n\r\n\r\n\tuseEffect(() => {\r\n\r\n\t\tgetImageList();\r\n\t}, [])\r\n\r\n\r\n\r\n\r\n\tconst handleUpload = async () => {\r\n\t\tconst formData = new FormData();\r\n\t\tfileList.forEach(file => {\r\n\t\t\tformData.append('images', file, file.name);\r\n\t\t});\r\n\r\n\t\tsetuploading(true);\r\n\r\n\t\t//  const addImageToLibraryRes = awAddait handleMediaLibraryFetch({\r\n\t\t// \tbody: formData\r\n\t\t//   });\r\n\r\n\t\t//   console.log('addImageToLibraryRes',addImageToLibraryRes)\r\n\r\n\r\n\r\n\t\t// You can use any AJAX library you like\r\n\t\treqwest({\r\n\t\t\turl: `${config.baseURL}/admin/image/add`,\r\n\t\t\tmethod: 'post',\r\n\t\t\tprocessData: false,\r\n\t\t\tdata: formData,\r\n\t\t\twithCredentials: true,\r\n\t\t\tsuccess: () => {\r\n\t\t\t\tsetfileList([]);\r\n\t\t\t\tsetuploading(false);\r\n\t\t\t\tgetImageList();\r\n\t\t\t\tmessage.success('upload successfully.');\r\n\t\t\t},\r\n\t\t\terror: () => {\r\n\t\t\t\tsetuploading(false);\r\n\t\t\t\tmessage.error('upload failed.');\r\n\t\t\t},\r\n\t\t});\r\n\t};\r\n\r\n\r\n\r\n\tconst handleOk = (e: any) => {\r\n\r\n\t\tif (isModalOpenForImages) {\r\n\t\t\tsetmyImages(selectedimages);\r\n\t\t\tsetisDoneOk(true);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tsetmyThumbnailImage(selectedimages);\r\n\t\t\tsetisDoneOk(true);\r\n\t\t}\r\n\t\tsetvisible(false);\r\n\r\n\t};\r\n\r\n\tconst handleCancel = (e: any) => {\r\n\t\tsetvisible(false);\r\n\t};\r\n\r\n\r\n\tuseEffect(() => {\r\n\t\tif (myImages && myImages.length > 0)\r\n\t\t\tsetselectedImages([...myImages]);\r\n\t}, [myImages])\r\n\r\n\r\n\tuseEffect(() => {\r\n\t\tif (isDoneOk && isModalOpenForImages && myImages) {\r\n\t\t\tsetselectedImages([...myImages]);\r\n\t\t}\r\n\t}, [myImages, isDoneOk]);\r\n\r\n\r\n\r\n\tuseEffect(() => {\r\n\t\tif (isDoneOk) {\r\n\t\t\t// console.log('myThumbnail', myThumbnailImage)\r\n\t\t\t// setselectedImages([...myThumbnailImage]);\r\n\t\t}\r\n\t}, [myThumbnailImage, isDoneOk])\r\n\r\n\tconst uploadProps = {\r\n\t\t//  listType: 'picture',\r\n\t\tmultiple: true,\r\n\t\tonRemove: file => {\r\n\t\t\tsetfileList(filelist => {\r\n\t\t\t\tconst index = fileList.indexOf(file);\r\n\t\t\t\tconst newFileList = fileList.slice();\r\n\t\t\t\tnewFileList.splice(index, 1);\r\n\t\t\t\treturn newFileList;\r\n\t\t\t})\r\n\r\n\t\t},\r\n\t\tbeforeUpload: file => {\r\n\t\t\tsetfileList(filelist => {\r\n\t\t\t\treturn [...fileList, file]\r\n\t\t\t})\r\n\t\t\treturn false;\r\n\t\t},\r\n\t\tfileList,\r\n\t};\r\n\r\n\r\n\r\n\r\n\tconst handleAddToSelectedList = (image, id) => {\r\n\r\n\t\tif (selectedimages && selectedimages.length > 0) {\r\n\t\t\tconst isImageExist = selectedimages.find(image => image.id === id);\r\n\t\t\tif (!isImageExist) {\r\n\t\t\t\tsetselectedImages([...selectedimages, image]);\r\n\t\t\t\tsetactiveImageItem(image);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tconst newselectedImages = selectedimages.filter(image => image.id !== id);\r\n\t\t\t\tsetselectedImages(newselectedImages);\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\tsetselectedImages([...selectedimages, image]);\r\n\t\t\tsetactiveImageItem(image);\r\n\t\t}\r\n\r\n\t}\r\n\r\n\r\n\tconst getisSelectedImage = (id) => {\r\n\t\tif (selectedimages && selectedimages.length > 0) {\r\n\t\t\tconst isImageExist = selectedimages.find(image => image.id === id);\r\n\t\t\tif (isImageExist) {\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t};\r\n\r\n\r\n\tconst handleUpdateSubmit = async (values, actions) => {\r\n\t\tconst updateImageLibraryItemRes = await handleUpdateMediaLibraryFetch({\r\n\t\t\tbody: {\r\n\t\t\t\tid: values.id,\r\n\t\t\t\talt: values.alt,\r\n\t\t\t\ttitle: values.title,\r\n\t\t\t\tcaptoin: values.captoin,\r\n\t\t\t\tlabels: values.labels,\r\n\r\n\t\t\t},\r\n\t\t});\r\n\r\n\r\n\t\t// @ts-ignore\r\n\t\tif (updateImageLibraryItemRes && updateImageLibraryItemRes.status === 'ok') {\r\n\t\t\topenSuccessNotification('Image Updated');\r\n\r\n\t\t\tconst positionInImageList = () => {\r\n\t\t\t\treturn localImageList.map(item => item.id).indexOf(values.id);\r\n\t\t\t}\r\n\r\n\t\t\tconst index = positionInImageList();\r\n\r\n\t\t\t// @ts-ignore\r\n\t\t\tconst updatedItem = Object.assign({}, localImageList[index], { ...updateImageLibraryItemRes });\r\n\t\t\tconst updateImageList = [...localImageList.slice(0, index), updatedItem, ...localImageList.slice(index + 1)];\r\n\t\t\tsetLocalImageList(updateImageList);\r\n\r\n\t\t}\r\n\t\telse {\r\n\t\t\topenErrorNotification();\r\n\t\t}\r\n\r\n\r\n\r\n\t\tactions.setSubmitting(false);\r\n\t}\r\n\r\n\r\n\tconst getisUpdateSubmitButtonDisabled = (values, isValid) => {\r\n\t\t// if(!values.alt || !values.title || !values.title || !values.caption || !isValid){\r\n\t\t// \treturn true; \r\n\t\t// }\r\n\t\tif (!isValid) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\t// console.log('selectedimages', selectedimages)\r\n\r\n\tconst ImageItemMenu = (handleDeleteImageFromImageLibrary, id, handleAddToSelectedList, image) => {\r\n\t\treturn (\r\n\t\t\t(\r\n\t\t\t\t<Menu>\r\n\t\t\t\t\t<Menu.Item\r\n\t\t\t\t\t\tonClick={() => handleAddToSelectedList(image, id)}\r\n\t\t\t\t\t\tkey=\"1\" icon={<CheckOutlined />}>\r\n\t\t\t\t\t\tSelect\r\n\r\n\t\t\t\t\t</Menu.Item>\r\n\r\n\r\n\r\n\t\t\t\t\t<Menu.Item\r\n\t\t\t\t\t\tonClick={() => handleDeleteImageFromImageLibrary(id)}\r\n\t\t\t\t\t\tkey=\"1\" icon={<DeleteOutlined color='red' />}>\r\n\t\t\t\t\t\tDelete\r\n\t\t\t\t\t</Menu.Item>\r\n\r\n\r\n\r\n\r\n\t\t\t\t</Menu >\r\n\t\t\t)\r\n\t\t)\r\n\t};\r\n\r\n\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Modal\r\n\t\t\t\tstyle={{\r\n\t\t\t\t\ttop: '40px'\r\n\t\t\t\t}}\r\n\t\t\t\ttitle=\"Media Library\"\r\n\t\t\t\tvisible={visible}\r\n\t\t\t\tonOk={handleOk}\r\n\t\t\t\tonCancel={handleCancel}\r\n\t\t\t\twidth={'80vw'}\r\n\t\t\t\tbodyStyle={{\r\n\t\t\t\t\tmargin: '0',\r\n\t\t\t\t\tpadding: '0'\r\n\t\t\t\t}}\r\n\t\t\t\tokText='Done'\r\n\t\t\t>\r\n\t\t\t\t<div className='mediaLibraryBodyContainer'>\r\n\t\t\t\t\t<div className='mediaLibraryBodyContainer-left'>\r\n\r\n\t\t\t\t\t\t<Tabs defaultActiveKey=\"2\" type=\"card\" size='middle'>\r\n\t\t\t\t\t\t\t<TabPane tab=\"Upload New Media\" key=\"1\">\r\n\t\t\t\t\t\t\t\t<div className='mediaLibraryBodyContainer-left-header'>\r\n\r\n\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t<Dragger\r\n\t\t\t\t\t\t\t\t\t\t\tclassName='upload-list-inline'\r\n\t\t\t\t\t\t\t\t\t\t\tlistType='picture'\r\n\t\t\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\t\t\tbackground: '#fff',\r\n\t\t\t\t\t\t\t\t\t\t\t\tborderRadius: '8px'\r\n\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t{...uploadProps}\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t<p className='ant-upload-drag-icon'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<FileImageOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t\t\t\t\t<p className='ant-upload-text'>Click or drag file to this area to upload</p>\r\n\t\t\t\t\t\t\t\t\t\t\t<p className='ant-upload-hint'>\r\n\t\t\t\t\t\t\t\t\t\t\t\tSupport for a single or bulk upload.\r\n\t\t\t\t\t\t                \t</p>\r\n\t\t\t\t\t\t\t\t\t\t</Dragger>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\tclassName='btnPrimaryClassNameoutline'\r\n\t\t\t\t\t\t\t\t\ttype='primary'\r\n\t\t\t\t\t\t\t\t\tonClick={handleUpload}\r\n\t\t\t\t\t\t\t\t\tdisabled={fileList.length === 0}\r\n\t\t\t\t\t\t\t\t\tloading={uploading}\r\n\t\t\t\t\t\t\t\t\ticon={<ArrowUpOutlined />}\r\n\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\tmarginTop: '20px',\r\n\t\t\t\t\t\t\t\t\t\tmarginBottom: '10px'\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\tUpload\r\n\t\t\t\t\t</Button>\r\n\r\n\t\t\t\t\t\t\t</TabPane>\r\n\t\t\t\t\t\t\t<TabPane tab=\"Media Library\" key=\"2\">\r\n\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t{myImages && myImages.lenght > 0 && (\r\n\t\t\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\t\t\t\t\t\tSelected Items\r\n                               </h3>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='mediaLibraryBodyContainer-selectedImages'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t{imageListFromLibraryState.done\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t&& myImages.length > 0\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t&& myImages.map(image => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tkey={image.id}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='mediaLibraryBodyContainer-selectedImages-imageListContainer-item'>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleAddToSelectedList(image, image.id)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='mediaLibraryBodyContainer-selectedImages-imageListContainer-item-menu'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<CloseOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className='mediaLibraryBodyContainer-selectedImages-imgContainer'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<img src={image.cover} alt='img' />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t})}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t</>\r\n\r\n\t\t\t\t\t\t\t\t<div className='mediaLibraryBodyContainer-left-imageListContainer'>\r\n\r\n\t\t\t\t\t\t\t\t\t{imageListFromLibraryState.done\r\n\t\t\t\t\t\t\t\t\t\t&& localImageList.length > 0\r\n\t\t\t\t\t\t\t\t\t\t&& localImageList.map(image => {\r\n\t\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tkey={image.id}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='mediaLibraryBodyContainer-left-imageListContainer-item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t{getisSelectedImage(image.id) ? <div className='mediaLibraryBodyContainer-left-imageListContainer-item-icon'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<CheckOutlined\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div> : ''}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Dropdown overlay={() => ImageItemMenu(handleDeleteImageFromImageLibrary, image.id, handleAddToSelectedList, image)} placement=\"bottomRight\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className='mediaLibraryBodyContainer-left-imageListContainer-item-menu'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<EllipsisOutlined\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Dropdown>\r\n\r\n\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<img onClick={() => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleAddToSelectedList(image, image.id)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}} src={image.cover} alt='img' />\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t\t})}\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t{imageListFromLibraryState.done && !(localImageList.length > 0) && (\r\n\t\t\t\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\t\t\t\tdisplay: 'flex',\r\n\t\t\t\t\t\t\t\t\t\t\tjustifyContent: 'center',\r\n\t\t\t\t\t\t\t\t\t\t\twidth: '100%'\r\n\t\t\t\t\t\t\t\t\t\t}}>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<Empty title='No Image Found in the library' />\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t)}\r\n\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</TabPane>\r\n\r\n\t\t\t\t\t\t</Tabs>\r\n\r\n\r\n\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className='mediaLibraryBodyContainer-right'>\r\n\r\n\t\t\t\t\t\t{activeImageItem && (\r\n\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t<Formik\r\n\t\t\t\t\t\t\t\t\tonSubmit={(values, actions) => handleUpdateSubmit(values, actions)}\r\n\t\t\t\t\t\t\t\t\tvalidateOnBlur={false}\r\n\t\t\t\t\t\t\t\t\tenableReinitialize={true}\r\n\t\t\t\t\t\t\t\t\tinitialValues={\r\n\t\t\t\t\t\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\t\t\t\t\t\t{ ...activeImageItem }\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t{({\r\n\t\t\t\t\t\t\t\t\t\thandleChange,\r\n\t\t\t\t\t\t\t\t\t\tvalues,\r\n\t\t\t\t\t\t\t\t\t\thandleSubmit,\r\n\t\t\t\t\t\t\t\t\t\terrors,\r\n\t\t\t\t\t\t\t\t\t\tisValid,\r\n\t\t\t\t\t\t\t\t\t\tisSubmitting,\r\n\t\t\t\t\t\t\t\t\t\ttouched,\r\n\t\t\t\t\t\t\t\t\t\thandleBlur,\r\n\t\t\t\t\t\t\t\t\t\tsetFieldTouched,\r\n\t\t\t\t\t\t\t\t\t\thandleReset,\r\n\t\t\t\t\t\t\t\t\t}) => (\r\n\t\t\t\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<h4>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tAttachment Details\r\n\t\t\t\t\t\t\t</h4>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div className='mediaLibraryBodyContainer-right-ImageDetails'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div className='mediaLibraryBodyContainer-right-ImageDetails-imageContainer'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<img src={activeImageItem['cover']} alt='img' />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div className='mediaLibraryBodyContainer-right-ImageDetails-infoContainer'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<h5 className='imageLibnameText'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{activeImageItem['name']}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</h5>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<h5>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Moment>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{activeImageItem['added']}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Moment>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</h5>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* <h5>\r\n\t\t\t\t\t\t\t\t\t\t5000 X 500\r\n\t\t\t\t\t\t\t\t\t</h5> */}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Popconfirm\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonConfirm={() => handleDeleteImageFromImageLibrary(activeImageItem['id'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttitle=\"Are you sure？\" okText=\"Yes\" cancelText=\"No\">\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<h5\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='imageLibdeleteText'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tDelete parmanently\r\n\t\t\t\t\t\t\t\t\t                       </h5>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Popconfirm>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tlabel='Alternate Text'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.alt}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tname='alt'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.alt && errors.alt) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateMediaLibrary.error['error']['alt'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.alt && errors.alt) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateMediaLibrary.error['error']['alt'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('alt');\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tlabel='Title'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.title}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tname='title'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.title && errors.title) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateMediaLibrary.error['error']['title'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.title && errors.title) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateMediaLibrary.error['error']['title'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('title');\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tlabel='Caption'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.caption}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tname='title'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.caption && errors.caption) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateMediaLibrary.error['error']['caption'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.caption && errors.caption) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateMediaLibrary.error['error']['caption'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('caption');\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\t\t\t\ttype='default'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={(e: any) => handleSubmit(e)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tdisabled={getisUpdateSubmitButtonDisabled(values, isValid)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tloading={isSubmitting}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t// marginTop: '20px'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tUpdate\r\n\t\t\t\t\t</Button>\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t</Formik>\r\n\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t)}\r\n\r\n\t\t\t\t\t\t{!activeImageItem && (\r\n\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\theight: '100%',\r\n\t\t\t\t\t\t\t\tdisplay: \"flex\",\r\n\t\t\t\t\t\t\t\tjustifyContent: \"center\",\r\n\t\t\t\t\t\t\t\talignItems: \"center\",\r\n\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t<h4 style={{\r\n\t\t\t\t\t\t\t\t\ttextAlign: \"center\",\r\n\t\t\t\t\t\t\t\t\tfontSize: \"13px\",\r\n\t\t\t\t\t\t\t\t\tcolor: '#8888'\r\n\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\tSelect an image to preview details\r\n\t\t\t\t\t\t\t\t</h4>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t)}\r\n\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t</Modal>\r\n\t\t</>\r\n\t)\r\n};\r\n\r\nexport default MediaLibrary;\r\n","import MediaLibrary from './MediaLibrary';\r\nexport default MediaLibrary;\r\n","import React, { useState } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n\r\nimport { useHandleFetch } from '../../hooks';\r\n// import third party ui lib\r\nimport { Switch, Select, notification, Modal, Tooltip, Upload, message } from 'antd';\r\n\r\nimport {\r\n\tDeleteOutlined,\r\n\tFileAddOutlined,\r\n\tFileImageFilled,\r\n\tPlusOutlined,\r\n\tCheckCircleOutlined,\r\n\tCloseOutlined,\r\n\tCheckOutlined,\r\n\tInfoCircleOutlined,\r\n\tLoadingOutlined\r\n} from '@ant-design/icons';\r\n\r\n\r\n\r\n// import ReactQuill from 'react-quill';\r\n// import 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport MediaLibrary from \"../../components/MediaLibrary\";\r\n\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n\tname: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t\tmessage: message || 'Category Updated',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n\tnotification.error({\r\n\t\tmessage: message || 'Something Went Wrong',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n};\r\n\r\n\r\n\r\n\r\n\r\nconst initialValues = {\r\n\tname: '',\r\n\tdescription: '',\r\n\timage: [],\r\n\turl: '',\r\n\tcover: ''\r\n}\r\n\r\nconst { Option } = Select;\r\n\r\ninterface Props {\r\n\taddNewCategoryVisible: any;\r\n\tsetAddNewCategoryVisible: any;\r\n\tcategoryList?: any;\r\n\tsetcategoryList?: any;\r\n}\r\n\r\nconst AddNewCategory = ({ addNewCategoryVisible, setAddNewCategoryVisible, categoryList, setcategoryList }: Props) => {\r\n\r\n\tconst [addCategoryState, handleAddCategoryFetch] = useHandleFetch({}, 'addCategory', 'form');\r\n\tconst [visible, setvisible] = useState(false);\r\n\tconst [myImages, setmyImages] = useState(false);\r\n\tconst [myThumbnailImage, setmyThumbnailImage] = useState(false);\r\n\tconst [isparentCategoryChecked, setisparentcategoryChecked] = useState(true);\r\n\tconst [isModalOpenForThumbnail, setisModalOpenForThumbnail] = useState(false);\r\n\tconst [isModalOpenForImages, setisModalOpenForImages] = useState(false);\r\n\tconst [coverImageId, setCoverImageId] = useState('');\r\n\tconst [selectedParentId, setselectedParentId] = useState('');\r\n\tconst [imageUrl, setImageUrl] = useState('');\r\n\tconst [loadingThumnail, setLoadingThumbnail] = useState(false);\r\n\tconst [imageFile, setImagefile] = useState('');\r\n\r\n\r\n\r\n\r\n\r\n\tconst handleSubmit = async (values: any, actions: any) => {\r\n\t\t// @ts-ignore\r\n\t\tconst imagesIds = myImages ? myImages.map(image => {\r\n\t\t\treturn image.id;\r\n\t\t}) : [];\r\n\r\n\t\tconst formData = new FormData();\r\n\r\n\t\tformData.append(\"name\", values.name.trim());\r\n\t\tformData.append(\"description\", values.description);\r\n\t\tformData.append(\"image\", JSON.stringify(imagesIds));\r\n\t\tformData.append(\"cover\", coverImageId || imagesIds[0] ? imagesIds[0] : '');\r\n\t\tformData.append(\"parent\", selectedParentId);\r\n\t\tformData.append('icon', imageFile)\r\n\r\n\r\n\r\n\t\tconst addCategoryRes = await handleAddCategoryFetch({\r\n\t\t\tbody: formData,\r\n\t\t});\r\n\r\n\r\n\r\n\t\t// @ts-ignore\r\n\t\tif (addCategoryRes && addCategoryRes.status === 'ok') {\r\n\t\t\topenSuccessNotification('Category Created!');\r\n\t\t\tsetAddNewCategoryVisible(false)\r\n\r\n\t\t\tsetcategoryList([...categoryList, {\r\n\t\t\t\tid: addCategoryRes['_id'] || '',\r\n\t\t\t\tkey: addCategoryRes['_id'] || '',\r\n\t\t\t\tname: addCategoryRes['name'] || '',\r\n\t\t\t\tdescription: addCategoryRes['description'] || '',\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\t...addCategoryRes\r\n\t\t\t}])\r\n\r\n\t\t\tactions.resetForm();\r\n\t\t\t// @ts-ignore\r\n\t\t\tsetmyImages([]);\r\n\t\t\tsetCoverImageId('')\r\n\t\t\tsetselectedParentId('')\r\n\t\t\tsetisparentcategoryChecked(true);\r\n\t\t\tsetImageUrl('');\r\n\t\t}\r\n\t\telse {\r\n\t\t\topenErrorNotification();\r\n\t\t}\r\n\r\n\r\n\r\n\r\n\t\tactions.setSubmitting(false);\r\n\t};\r\n\r\n\r\n\r\n\tconst onSwitchChange = (checked: any) => {\r\n\t\tsetisparentcategoryChecked(checked)\r\n\t};\r\n\r\n\r\n\tconst handleCancel = (e: any) => {\r\n\t\tsetAddNewCategoryVisible(false);\r\n\t};\r\n\r\n\r\n\tconst getisSubmitButtonDisabled = (values, isValid) => {\r\n\t\tif (!values.name || !isValid) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\r\n\tconst handleImagesDelete = (id) => {\r\n\t\t// @ts-ignore\r\n\t\tconst newImages = myImages && myImages.filter(image => {\r\n\t\t\treturn image.id !== id;\r\n\t\t})\r\n\r\n\t\tsetmyImages(newImages);\r\n\t}\r\n\r\n\r\n\tconst handleThumbnailImageDelete = (id) => {\r\n\t\t// @ts-ignore\r\n\t\tconst newImages = myThumbnailImage && myThumbnailImage.filter(image => {\r\n\t\t\treturn image.id !== id;\r\n\t\t})\r\n\r\n\t\tif (newImages.length > 0) {\r\n\t\t\tsetmyThumbnailImage(newImages);\r\n\r\n\t\t}\r\n\t\telse setmyThumbnailImage(false);\r\n\t}\r\n\r\n\r\n\tconst onChangeSelect = (value) => {\r\n\t\tsetselectedParentId(value);\r\n\t}\r\n\r\n\r\n\r\n\r\n\tfunction getBase64(img, callback) {\r\n\t\tconst reader = new FileReader();\r\n\t\treader.addEventListener('load', () => callback(reader.result));\r\n\t\treader.readAsDataURL(img);\r\n\t}\r\n\r\n\r\n\tfunction beforeUpload(file) {\r\n\t\tconst isJpgOrPng = file.type === 'image/jpeg' || file.type === 'image/png';\r\n\t\tif (!isJpgOrPng) {\r\n\t\t\tmessage.error('You can only upload JPG/PNG file!');\r\n\t\t}\r\n\t\tconst isLt2M = file.size / 1024 / 1024 < 2;\r\n\t\tif (!isLt2M) {\r\n\t\t\tmessage.error('Image must smaller than 2MB!');\r\n\t\t}\r\n\r\n\r\n\t\tgetBase64(file, imageUrl => {\r\n\t\t\tsetImageUrl(imageUrl)\r\n\t\t\tsetImagefile(file)\r\n\t\t\tsetLoadingThumbnail(false)\r\n\t\t})\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\r\n\tconst uploadButton = (\r\n\t\t<div>\r\n\t\t\t{loadingThumnail ? <LoadingOutlined /> : <PlusOutlined />}\r\n\t\t\t<div className=\"ant-upload-text\">Upload</div>\r\n\t\t</div>\r\n\t);\r\n\r\n\r\n\treturn (\r\n\t\t<Formik\r\n\t\t\tonSubmit={(values, actions) => handleSubmit(values, actions)}\r\n\t\t\tvalidationSchema={validationSchema}\r\n\t\t\tvalidateOnBlur={false}\r\n\t\t\tenableReinitialize={true}\r\n\t\t\tinitialValues={\r\n\t\t\t\t{ ...initialValues }\r\n\t\t\t}\r\n\t\t>\r\n\t\t\t{({\r\n\t\t\t\thandleChange,\r\n\t\t\t\tvalues,\r\n\t\t\t\thandleSubmit,\r\n\t\t\t\terrors,\r\n\t\t\t\tisValid,\r\n\t\t\t\tisSubmitting,\r\n\t\t\t\ttouched,\r\n\t\t\t\thandleBlur,\r\n\t\t\t\tsetFieldTouched,\r\n\t\t\t\thandleReset,\r\n\t\t\t}) => (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<Modal\r\n\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\ttop: '40px'\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\ttitle=\"Add New Category\"\r\n\t\t\t\t\t\t\tvisible={addNewCategoryVisible}\r\n\t\t\t\t\t\t\tonOk={(e: any) => handleSubmit(e)}\r\n\t\t\t\t\t\t\tonCancel={handleCancel}\r\n\t\t\t\t\t\t\tokText='Create'\r\n\t\t\t\t\t\t\tokButtonProps={{\r\n\t\t\t\t\t\t\t\tloading: isSubmitting,\r\n\t\t\t\t\t\t\t\thtmlType: \"submit\",\r\n\t\t\t\t\t\t\t\tdisabled: getisSubmitButtonDisabled(values, isValid)\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\tlabel='Title'\r\n\t\t\t\t\t\t\t\tvalue={values.name}\r\n\t\t\t\t\t\t\t\tname='name'\r\n\t\t\t\t\t\t\t\tisError={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['name'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['name'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('name');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\tlabel='Description'\r\n\t\t\t\t\t\t\t\tvalue={values.description}\r\n\t\t\t\t\t\t\t\tname='description'\r\n\t\t\t\t\t\t\t\tisError={(touched.description && errors.description) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['description'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.description && errors.description) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['description'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('description');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\tmarginTop: '25px'\r\n\t\t\t\t\t\t\t}}></div>\r\n\r\n\t\t\t\t\t\t\t<div className='switchLabelContainer'>\r\n\t\t\t\t\t\t\t\t<Switch\r\n\t\t\t\t\t\t\t\t\tchecked={isparentCategoryChecked}\r\n\t\t\t\t\t\t\t\t\tdefaultChecked onChange={onSwitchChange} />\r\n\t\t\t\t\t\t\t\t<div className='switchLabelContainer-textContainer'>\r\n\t\t\t\t\t\t\t\t\t<h5 >Top level Category</h5>\r\n\t\t\t\t\t\t\t\t\t<h5 className='switchLabelContainer-desc'>Disable to select a Parent Category</h5>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t{!isparentCategoryChecked && (\r\n\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>Parent Category</h3>\r\n\t\t\t\t\t\t\t\t\t<Select\r\n\t\t\t\t\t\t\t\t\t\tshowSearch\r\n\t\t\t\t\t\t\t\t\t\tstyle={{ width: 300 }}\r\n\t\t\t\t\t\t\t\t\t\tplaceholder='Select a Parent Category'\r\n\t\t\t\t\t\t\t\t\t\toptionFilterProp='children'\r\n\t\t\t\t\t\t\t\t\t\tonChange={onChangeSelect}\r\n\t\t\t\t\t\t\t\t\t\t// onFocus={onFocus}\r\n\t\t\t\t\t\t\t\t\t\t// onBlur={onBlur}\r\n\t\t\t\t\t\t\t\t\t\t// onSearch={onSearch}\r\n\t\t\t\t\t\t\t\t\t\tfilterOption={(input, option: any) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t{categoryList.length > 0 && categoryList.map(category => {\r\n\t\t\t\t\t\t\t\t\t\t\treturn <Option value={category.id}>{category.name}</Option>\r\n\t\t\t\t\t\t\t\t\t\t})}\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t</Select>\r\n\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t)}\r\n\r\n\r\n\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\tmarginTop: '20px'\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\r\n\t\t\t\t\t\t\t<div className='addproductSection-left-header' >\r\n\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>Icon </h3>\r\n\t\t\t\t\t\t\t\t<Tooltip\r\n\t\t\t\t\t\t\t\t\tplacement=\"left\" title={'Add Icon image for this category'}>\r\n\t\t\t\t\t\t\t\t\t<a href='###'>\r\n\t\t\t\t\t\t\t\t\t\t<InfoCircleOutlined />\r\n\t\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t<Upload\r\n\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\tborderRadius: \"8px\"\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\tname=\"avatar\"\r\n\t\t\t\t\t\t\t\tlistType=\"picture-card\"\r\n\t\t\t\t\t\t\t\tclassName=\"avatar-uploader\"\r\n\t\t\t\t\t\t\t\tshowUploadList={false}\r\n\t\t\t\t\t\t\t\tbeforeUpload={beforeUpload}\r\n\t\t\t\t\t\t\t\tmultiple={false}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t{imageUrl ? <img src={imageUrl} alt=\"avatar\" style={{ width: '100%' }} /> : uploadButton}\r\n\t\t\t\t\t\t\t</Upload>\r\n\r\n\r\n\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\tmarginTop: '10px'\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\r\n\t\t\t\t\t\t\t<div className='addproductSection-left-header' style={{\r\n\t\t\t\t\t\t\t\tmarginBottom: '-5px'\r\n\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>Images</h3>\r\n\t\t\t\t\t\t\t\t<Tooltip\r\n\t\t\t\t\t\t\t\t\tplacement=\"left\" title={'Click on the image to select cover image, By default 1st image is selected as cover'}>\r\n\t\t\t\t\t\t\t\t\t<a href='###'>\r\n\t\t\t\t\t\t\t\t\t\t<InfoCircleOutlined />\r\n\t\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className='aboutToUploadImagesContainer'>\r\n\t\t\t\t\t\t\t\t{myImages &&\r\n\t\t\t\t\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\t\t\t\t\tmyImages.length > 0 && myImages.map((image, index) => {\r\n\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='aboutToUploadImagesContainer__item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='aboutToUploadImagesContainer__item-imgContainer'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => setCoverImageId(image.id)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<img src={image.cover} alt={image.alt} />\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => handleImagesDelete(image.id)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='aboutToUploadImagesContainer__item-remove'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<CloseOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t{coverImageId === image.id ? (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<span className='aboutToUploadImagesContainer__item-cover'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<CheckOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t) : !coverImageId && index === 0 && (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<span className='aboutToUploadImagesContainer__item-cover'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<CheckOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t})}\r\n\r\n\r\n\t\t\t\t\t\t\t\t<Tooltip\r\n\t\t\t\t\t\t\t\t\ttitle={'Attach images'}>\r\n\r\n\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\t\t\tsetvisible(true);\r\n\t\t\t\t\t\t\t\t\t\t\tsetisModalOpenForImages(true);\r\n\t\t\t\t\t\t\t\t\t\t\tsetisModalOpenForThumbnail(false);\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\tclassName='aboutToUploadImagesContainer__uploadItem'>\r\n\t\t\t\t\t\t\t\t\t\t{/* <FileAddOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FileImageTwoTone />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FileImageOutlined /> */}\r\n\t\t\t\t\t\t\t\t\t\t<FileImageFilled />\r\n\t\t\t\t\t\t\t\t\t\t{/* <h5>\r\n\t\t\t\t\t\t\t\t\t\t\t\t     Select From Library\r\n\t\t\t\t\t\t\t\t\t\t\t<     /h5> */}\r\n\t\t\t\t\t\t\t\t\t\t<span className='aboutToUploadImagesContainer__uploadItem-plus'>\r\n\t\t\t\t\t\t\t\t\t\t\t<PlusOutlined />\r\n\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</Tooltip>\r\n\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\t\t\t\t\t\t</Modal>\r\n\r\n\t\t\t\t\t\t<MediaLibrary\r\n\t\t\t\t\t\t\tsetvisible={setvisible}\r\n\t\t\t\t\t\t\tvisible={visible}\r\n\t\t\t\t\t\t\tsetmyImages={setmyImages}\r\n\t\t\t\t\t\t\tmyImages={myImages}\r\n\t\t\t\t\t\t\tsetmyThumbnailImage={setmyThumbnailImage}\r\n\t\t\t\t\t\t\tisModalOpenForThumbnail={isModalOpenForThumbnail}\r\n\t\t\t\t\t\t\tisModalOpenForImages={isModalOpenForImages}\r\n\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</>\r\n\t\t\t\t)}\r\n\t\t</Formik>\r\n\r\n\r\n\r\n\r\n\t);\r\n};\r\n\r\nexport default AddNewCategory;\r\n","import React, { useState } from 'react';\r\nimport { Modal, notification } from 'antd';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport { useHandleFetch } from '../../hooks';\r\n\r\nimport { CheckCircleOutlined, PlusOutlined, EditOutlined, DeleteOutlined, EditFilled } from '@ant-design/icons';\r\n\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n\tname: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\n\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t\tmessage: message || 'Category Updated',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t\tmessage: message || 'Something Went Wrong',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n};\r\n\r\n\r\n\r\n\r\n\r\ninterface Props {\r\n\tcategory: any;\r\n\tsetvisible: any;\r\n\tvisible: any;\r\n\tsetcategoryList?: any;\r\n\tcategoryList?: any;\r\n}\r\n\r\nconst QuickEdit = ({ category, setvisible, visible, categoryList, setcategoryList }: Props) => {\r\n\tconst [updateCategoryState, handleUpdateCategoryFetch] = useHandleFetch({}, 'updateCategory');\r\n\r\n\tconst handleSubmit = async (values: any, actions: any) => {\r\n\t\tconst updateCategoryRes = await handleUpdateCategoryFetch({\r\n\t\t\turlOptions: {\r\n\t\t\t\tplaceHolders: {\r\n\t\t\t\t\tid: values.id,\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tbody: {\r\n\t\t\t\tname: values.name,\r\n\t\t\t\tdescription: values.description,\r\n\t\t\t},\r\n\t\t});\r\n\r\n\t\t//   console.log('updateCategoryRes',updateCategoryRes); \r\n\r\n\t\t// @ts-ignore\r\n\t\tif (updateCategoryRes && updateCategoryRes.status === 'ok') {\r\n\t\t\topenSuccessNotification();\r\n\r\n\t\t\tconst positionInTag = () => {\r\n\t\t\t\treturn categoryList.map(item => item.id).indexOf(category.id);\r\n\t\t\t}\r\n\r\n\t\t\tconst index = positionInTag();\r\n\r\n\t\t\t// @ts-ignore\r\n\t\t\tconst updatedItem = Object.assign({}, categoryList[index], { ...updateCategoryRes });\r\n\t\t\tconst updateCategoryList = [...categoryList.slice(0, index), updatedItem, ...categoryList.slice(index + 1)];\r\n\t\t\tsetcategoryList(updateCategoryList);\r\n\r\n\t\t}\r\n\t\telse {\r\n\t\t\topenErrorNotification();\r\n\t\t}\r\n\r\n\t\tactions.setSubmitting(false);\r\n\t\tsetvisible(false)\r\n\r\n\t};\r\n\r\n\r\n\tconst handleCancel = (e: any) => {\r\n\t\tsetvisible(false);\r\n\t};\r\n\r\n\r\n\r\n\tconst getisSubmitButtonDisabled = (values, isValid) => {\r\n\t\tif (!values.name || !isValid) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\treturn (\r\n\t\t<Formik\r\n\t\t\tonSubmit={(values, actions) => handleSubmit(values, actions)}\r\n\t\t\tvalidationSchema={validationSchema}\r\n\t\t\tvalidateOnBlur={false}\r\n\t\t\tenableReinitialize={true}\r\n\t\t\tinitialValues={\r\n\t\t\t\t{ ...category }\r\n\t\t\t}\r\n\t\t>\r\n\t\t\t{({\r\n\t\t\t\thandleChange,\r\n\t\t\t\tvalues,\r\n\t\t\t\thandleSubmit,\r\n\t\t\t\terrors,\r\n\t\t\t\tisValid,\r\n\t\t\t\tisSubmitting,\r\n\t\t\t\ttouched,\r\n\t\t\t\thandleBlur,\r\n\t\t\t\tsetFieldTouched,\r\n\t\t\t\thandleReset,\r\n\t\t\t}) => (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<Modal\r\n\t\t\t\t\t\t\ttitle=\"Quick Edit\"\r\n\t\t\t\t\t\t\tvisible={visible}\r\n\t\t\t\t\t\t\tonOk={(e: any) => handleSubmit(e)}\r\n\t\t\t\t\t\t\tonCancel={handleCancel}\r\n\t\t\t\t\t\t\tokText='Update'\r\n\t\t\t\t\t\t\tokButtonProps={{\r\n\t\t\t\t\t\t\t\tloading: isSubmitting,\r\n\t\t\t\t\t\t\t\thtmlType: \"submit\",\r\n\t\t\t\t\t\t\t\tdisabled: getisSubmitButtonDisabled(values, isValid)\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\tlabel='Title'\r\n\t\t\t\t\t\t\t\tvalue={values.name}\r\n\t\t\t\t\t\t\t\tname='name'\r\n\t\t\t\t\t\t\t\tisError={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateCategoryState.error['error']['name'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateCategoryState.error['error']['name'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('name');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\tlabel='Description'\r\n\t\t\t\t\t\t\t\tvalue={values.description}\r\n\t\t\t\t\t\t\t\tname='description'\r\n\t\t\t\t\t\t\t\tisError={(touched.description && errors.description) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateCategoryState.error['error']['description'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.description && errors.description) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateCategoryState.error['error']['description'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('description');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</Modal>\r\n\r\n\t\t\t\t\t</>\r\n\t\t\t\t)}\r\n\t\t</Formik>\r\n\t);\r\n};\r\n\r\n\r\nexport default QuickEdit;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n\r\nimport { useHandleFetch } from '../../hooks';\r\n// import third party ui lib\r\nimport { Upload, message, Switch, Select, Button, notification, Modal, Tooltip, Spin } from 'antd';\r\n\r\nimport {\r\n\tFileOutlined,\r\n\tInboxOutlined,\r\n\tFileAddOutlined,\r\n\tDeleteOutlined,\r\n\tCheckCircleOutlined,\r\n\tCloseOutlined,\r\n\tCheckOutlined,\r\n\tInfoCircleOutlined,\r\n\tPlusOutlined,\r\n\tFileImageFilled,\r\n\tLoadingOutlined\r\n} from '@ant-design/icons';\r\n\r\n\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport MediaLibrary from \"../../components/MediaLibrary\";\r\n\r\nconst validationSchema = Yup.object().shape({\r\n\tname: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t\tmessage: message || 'Category Updated',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n\tnotification.error({\r\n\t\tmessage: message || 'Something Went Wrong',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n};\r\n\r\n\r\nconst initialValues = {\r\n\tname: '',\r\n\tdescription: '',\r\n\timage: [],\r\n\turl: '',\r\n\tcover: ''\r\n}\r\n\r\n\r\nconst { Option } = Select;\r\n\r\n\r\n\r\ninterface Props {\r\n\tcategoryEditVisible?: any;\r\n\tsetCategoryEditVisible?: any;\r\n\tcategoryDetailData?: any;\r\n}\r\n\r\nconst AddNewBrand = ({ categoryEditVisible, setCategoryEditVisible, categoryDetailData }: Props) => {\r\n\r\n\tconst [updateBrandState, handleUpdateBrandFetch] = useHandleFetch({}, 'updateCategory');\r\n\tconst [brandDetailState, handleBrandDetailFetch] = useHandleFetch({}, 'categoryDetail');\r\n\tconst [attachImageToItemMultipleState, handleAttachImageToItemMultipleFetch] = useHandleFetch({}, 'attachImageToItemMultiple');\r\n\tconst [attachImageToItemSingleState, handleAttachImageToItemSingleFetch] = useHandleFetch({}, 'attachImageToItemSingle');\r\n\tconst [detachImageFromItemMultipleState, handleDetachImageFromItemMultipleFetch] = useHandleFetch({}, 'detachImageFromItemMultiple');\r\n\tconst [detachImageFromItemSingleState, handleDetachImageFromItemSingleFetch] = useHandleFetch({}, 'detachImageFromItemSingle');\r\n\tconst [setImageAsThumbnailToItemState, handleSetImageAsThumbnailToItemFetch] = useHandleFetch({}, 'setImageAsThumbnailToItem');\r\n\r\n\r\n\tconst [myImages, setmyImages] = useState(false);\r\n\tconst [visibleMedia, setvisibleMedia] = useState(false);\r\n\tconst [coverImageId, setCoverImageId] = useState('');\r\n\tconst [myGoddamnImages, setMyGoddamnImages] = useState([]);\r\n\tconst [selectedParentId, setselectedParentId] = useState('');\r\n\tconst [imageUrl, setImageUrl] = useState('');\r\n\tconst [loadingThumnail, setLoadingThumbnail] = useState(false);\r\n\tconst [imageFile, setImagefile] = useState('');\r\n\tconst [isparentCategoryChecked, setisparentcategoryChecked] = useState(true);\r\n\r\n\r\n\r\n\r\n\tuseEffect(() => {\r\n\t\tif (categoryDetailData && Object.keys(categoryDetailData).length > 0) {\r\n\r\n\t\t\tconst images = categoryDetailData.image;\r\n\t\t\tif (images && images.length > 0) {\r\n\t\t\t\tsetmyImages(images);\r\n\t\t\t\tsetMyGoddamnImages(images);\r\n\t\t\t}\r\n\r\n\t\t\tif (categoryDetailData.cover && categoryDetailData.cover['id']) {\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\tsetmyImages([categoryDetailData.cover, ...images]);\r\n\t\t\t\tsetCoverImageId(categoryDetailData.cover['id']);\r\n\t\t\t}\r\n\r\n\t\t}\r\n\t}, [categoryDetailData])\r\n\r\n\r\n\tuseEffect(() => {\r\n\t\t// @ts-ignore\r\n\t\tif (myImages && myImages[0] && myImages.length < 2) {\r\n\r\n\t\t\tif (coverImageId !== myImages[0].id) {\r\n\t\t\t\tsetCoverImageId(myImages[0].id);\r\n\t\t\t\thandleSetImageAsThumnail(myImages[0]);\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}, [myImages])\r\n\r\n\r\n\tconst handleDetachSingleImage = async id => {\r\n\t\tawait handleDetachImageFromItemSingleFetch({\r\n\t\t\turlOptions: {\r\n\t\t\t\tplaceHolders: {\r\n\t\t\t\t\timageId: id,\r\n\t\t\t\t\tcollection: 'category',\r\n\t\t\t\t\titemId: categoryDetailData.id\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\r\n\t}\r\n\r\n\r\n\r\n\tconst handleSetImageAsThumnail = async image => {\r\n\r\n\t\tconst thumbnailRes = await handleSetImageAsThumbnailToItemFetch({\r\n\t\t\turlOptions: {\r\n\t\t\t\tplaceHolders: {\r\n\t\t\t\t\timageId: image.id,\r\n\t\t\t\t\tcollection: 'category',\r\n\t\t\t\t\titemId: categoryDetailData.id\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\r\n\t\t// @ts-ignore\r\n\t\tif (thumbnailRes && thumbnailRes.status === 'ok') {\r\n\t\t\topenSuccessNotification('Seted as thumbnail!')\r\n\t\t\t// const positionInBrand = () => {\r\n\t\t\t// \treturn brandList.map(item => item.id).indexOf(categoryDetailData.id);\r\n\t\t\t// }\r\n\r\n\t\t\t// const index = positionInBrand();\r\n\r\n\t\t\t// const prevItem = brandList.find(item => item.id === categoryDetailData.id);\r\n\r\n\t\t\t// if (prevItem) {\r\n\t\t\t// \tconst updatedItem = Object.assign({}, brandList[index], { ...prevItem, cover: image.cover });\r\n\t\t\t// \tconst updateBrandList = [...brandList.slice(0, index), updatedItem, ...brandList.slice(index + 1)];\r\n\t\t\t// \tsetBrandList(updateBrandList);\r\n\r\n\t\t\t// }\r\n\t\t}\r\n\t\telse {\r\n\t\t\topenErrorNotification(\"Couldn't set as thumbnail, Something went wrong\")\r\n\t\t}\r\n\r\n\t}\r\n\r\n\r\n\r\n\tconsole.log('categoryDetailState', brandDetailState);\r\n\r\n\tconst handleSubmit = async (values: any, actions: any) => {\r\n\r\n\r\n\t\tif (brandDetailState && brandDetailState.done && Object.keys(categoryDetailData).length > 0) {\r\n\t\t\t// @ts-ignore\r\n\t\t\tconst images = myImages && myImages.length > 0 ? myImages.map(item => item.id) : [];\r\n\r\n\t\t\tif (images[0] && images.length > 1) {\r\n\t\t\t\tawait handleAttachImageToItemMultipleFetch({\r\n\t\t\t\t\turlOptions: {\r\n\t\t\t\t\t\tplaceHolders: {\r\n\t\t\t\t\t\t\tcollection: 'category',\r\n\t\t\t\t\t\t\titemId: categoryDetailData.id\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t},\r\n\t\t\t\t\tbody: {\r\n\t\t\t\t\t\timage: images\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\telse if (images[0] && images.length < 1) {\r\n\t\t\t\tawait handleAttachImageToItemSingleFetch({\r\n\t\t\t\t\turlOptions: {\r\n\t\t\t\t\t\tplaceHolders: {\r\n\t\t\t\t\t\t\timageId: images[0].id,\r\n\t\t\t\t\t\t\tcollection: 'category',\r\n\t\t\t\t\t\t\titemId: categoryDetailData.id\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\r\n\r\n\r\n\r\n\t\tconst updateBrandRes = await handleUpdateBrandFetch({\r\n\t\t\turlOptions: {\r\n\t\t\t\tplaceHolders: {\r\n\t\t\t\t\tid: categoryDetailData.id\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tbody: {\r\n\t\t\t\tname: values.name.trim(),\r\n\t\t\t\tdescription: values.description,\r\n\t\t\t\ticon: imageFile,\r\n\t\t\t\ttype: 'bottom'\r\n\t\t\t},\r\n\t\t});\r\n\r\n\t\t// @ts-ignore\r\n\t\tif (updateBrandRes && updateBrandRes.status === 'ok') {\r\n\t\t\topenSuccessNotification();\r\n\t\t\tsetCategoryEditVisible(false);\r\n\r\n\r\n\t\t\t// const positionInBrand = () => {\r\n\t\t\t// \treturn brandList.map(item => item.id).indexOf(categoryDetailData.id);\r\n\t\t\t// }\r\n\r\n\t\t\t// const index = positionInBrand();\r\n\t\t\t// const updatedItem = Object.assign({}, brandList[index], { ...updateBrandRes });\r\n\t\t\t// console.log('updateBrandList', updatedItem)\r\n\r\n\t\t\t// const updateBrandList = [...brandList.slice(0, index), updatedItem, ...brandList.slice(index + 1)];\r\n\r\n\t\t\t// setBrandList(updateBrandList);\r\n\r\n\r\n\t\t\tactions.resetForm();\r\n\r\n\t\t}\r\n\t\telse {\r\n\t\t\topenErrorNotification();\r\n\t\t}\r\n\r\n\t\tactions.setSubmitting(false);\r\n\t};\r\n\r\n\r\n\r\n\r\n\r\n\tuseEffect(() => {\r\n\t\tif (categoryDetailData.type === 'top') {\r\n\t\t\t// setisparentcategoryChecked()\r\n\t\t}\r\n\t}, [categoryDetailData])\r\n\r\n\r\n\tconst handleCancel = (e: any) => {\r\n\t\tsetCategoryEditVisible(false);\r\n\t\tsetmyImages(false);\r\n\t};\r\n\r\n\r\n\tconst getisSubmitButtonDisabled = (values, isValid) => {\r\n\t\tif (!values.name || !isValid) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\r\n\tconst onChangeSelect = (value) => {\r\n\t\tsetselectedParentId(value);\r\n\t}\r\n\r\n\r\n\r\n\r\n\tfunction getBase64(img, callback) {\r\n\t\tconst reader = new FileReader();\r\n\t\treader.addEventListener('load', () => callback(reader.result));\r\n\t\treader.readAsDataURL(img);\r\n\t}\r\n\r\n\r\n\tfunction beforeUpload(file) {\r\n\t\tconst isJpgOrPng = file.type === 'image/jpeg' || file.type === 'image/png';\r\n\t\tif (!isJpgOrPng) {\r\n\t\t\tmessage.error('You can only upload JPG/PNG file!');\r\n\t\t}\r\n\t\tconst isLt2M = file.size / 1024 / 1024 < 2;\r\n\t\tif (!isLt2M) {\r\n\t\t\tmessage.error('Image must smaller than 2MB!');\r\n\t\t}\r\n\r\n\r\n\t\tgetBase64(file, imageUrl => {\r\n\t\t\tsetImageUrl(imageUrl)\r\n\t\t\tsetImagefile(file)\r\n\t\t\tsetLoadingThumbnail(false)\r\n\t\t})\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\r\n\r\n\r\n\tconst handleImagesDelete = (id) => {\r\n\t\t// @ts-ignore\r\n\t\tconst newImages = myImages && myImages.filter(image => {\r\n\t\t\treturn image.id !== id;\r\n\t\t})\r\n\r\n\t\t// @ts-ignore\r\n\t\tsetmyImages([]);\r\n\t}\r\n\r\n\r\n\tconst uploadButton = (\r\n\t\t<div>\r\n\t\t\t{loadingThumnail ? <LoadingOutlined /> : <PlusOutlined />}\r\n\t\t\t<div className=\"ant-upload-text\">Upload</div>\r\n\t\t</div>\r\n\t);\r\n\r\n\r\n\r\n\r\n\r\n\tconsole.log('cateogryDetailmyImages', myImages)\r\n\r\n\treturn (\r\n\t\t<Formik\r\n\t\t\tonSubmit={(values, actions) => handleSubmit(values, actions)}\r\n\t\t\tvalidationSchema={validationSchema}\r\n\t\t\tvalidateOnBlur={false}\r\n\t\t\tenableReinitialize={true}\r\n\t\t\tinitialValues={\r\n\t\t\t\t{ ...initialValues, ...categoryDetailData }\r\n\t\t\t}\r\n\t\t>\r\n\t\t\t{({\r\n\t\t\t\thandleChange,\r\n\t\t\t\tvalues,\r\n\t\t\t\thandleSubmit,\r\n\t\t\t\terrors,\r\n\t\t\t\tisValid,\r\n\t\t\t\tisSubmitting,\r\n\t\t\t\ttouched,\r\n\t\t\t\thandleBlur,\r\n\t\t\t\tsetFieldTouched,\r\n\t\t\t\thandleReset,\r\n\t\t\t}) => (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<Modal\r\n\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\ttop: '40px'\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\ttitle=\"Category Detail\"\r\n\t\t\t\t\t\t\tvisible={categoryEditVisible}\r\n\t\t\t\t\t\t\tonOk={(e: any) => handleSubmit(e)}\r\n\t\t\t\t\t\t\tonCancel={handleCancel}\r\n\t\t\t\t\t\t\tokText='Update'\r\n\t\t\t\t\t\t\tokButtonProps={{\r\n\t\t\t\t\t\t\t\tloading: isSubmitting,\r\n\t\t\t\t\t\t\t\thtmlType: \"submit\",\r\n\t\t\t\t\t\t\t\tdisabled: getisSubmitButtonDisabled(values, isValid)\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\tlabel='Title'\r\n\t\t\t\t\t\t\t\tvalue={values.name}\r\n\t\t\t\t\t\t\t\tname='name'\r\n\t\t\t\t\t\t\t\tisError={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateBrandState.error['error']['name'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateBrandState.error['error']['name'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('name');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\trows={3}\r\n\t\t\t\t\t\t\t\tlabel='Description'\r\n\t\t\t\t\t\t\t\tvalue={values.description}\r\n\t\t\t\t\t\t\t\tname='description'\r\n\t\t\t\t\t\t\t\tisError={(touched.description && errors.description) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateBrandState.error['error']['description'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.description && errors.description) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateBrandState.error['error']['description'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('description');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t{/* <div style={{\r\n\t\t\t\t\t\t\t\tmarginTop: '25px'\r\n\t\t\t\t\t\t\t}}></div>\r\n\r\n\t\t\t\t\t\t\t<div className='switchLabelContainer'>\r\n\t\t\t\t\t\t\t\t<Switch\r\n\t\t\t\t\t\t\t\t\tchecked={isparentCategoryChecked}\r\n\t\t\t\t\t\t\t\t\tonChange={onSwitchChange} />\r\n\t\t\t\t\t\t\t\t<div className='switchLabelContainer-textContainer'>\r\n\t\t\t\t\t\t\t\t\t<h5 >Top level Category</h5>\r\n\t\t\t\t\t\t\t\t\t<h5 className='switchLabelContainer-desc'>Disable to select a Parent Category</h5>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t{!isparentCategoryChecked && (\r\n\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>Parent Category</h3>\r\n\t\t\t\t\t\t\t\t\t<Select\r\n\t\t\t\t\t\t\t\t\t\tshowSearch\r\n\t\t\t\t\t\t\t\t\t\tstyle={{ width: 400 }}\r\n\t\t\t\t\t\t\t\t\t\tplaceholder='Select a Parent Category'\r\n\t\t\t\t\t\t\t\t\t\toptionFilterProp='children'\r\n\t\t\t\t\t\t\t\t\t\tonChange={onChangeSelect}\r\n\t\t\t\t\t\t\t\t\t\t// onFocus={onFocus}\r\n\t\t\t\t\t\t\t\t\t\t// onBlur={onBlur}\r\n\t\t\t\t\t\t\t\t\t\t// onSearch={onSearch}\r\n\t\t\t\t\t\t\t\t\t\tfilterOption={(input, option: any) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t{brandList.length > 0 && brandList.map(category => {\r\n\t\t\t\t\t\t\t\t\t\t\treturn <Option value={category.id}>{category.name}</Option>\r\n\t\t\t\t\t\t\t\t\t\t})}\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t</Select>\r\n\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t)}\r\n\r\n\r\n\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\tmarginTop: '20px'\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\r\n\t\t\t\t\t\t\t<div className='addproductSection-left-header' >\r\n\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>Icon </h3>\r\n\t\t\t\t\t\t\t\t<Tooltip\r\n\t\t\t\t\t\t\t\t\tplacement=\"left\" title={'Add Icon image for this category'}>\r\n\t\t\t\t\t\t\t\t\t<a href='###'>\r\n\t\t\t\t\t\t\t\t\t\t<InfoCircleOutlined />\r\n\t\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t<Upload\r\n\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\tborderRadius: \"8px\"\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\tname=\"avatar\"\r\n\t\t\t\t\t\t\t\tlistType=\"picture-card\"\r\n\t\t\t\t\t\t\t\tclassName=\"avatar-uploader\"\r\n\t\t\t\t\t\t\t\tshowUploadList={false}\r\n\t\t\t\t\t\t\t\tbeforeUpload={beforeUpload}\r\n\t\t\t\t\t\t\t\tmultiple={false}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t{imageUrl ? <img src={imageUrl} alt=\"avatar\" style={{ width: '100%' }} /> : uploadButton}\r\n\t\t\t\t\t\t\t</Upload>\r\n */}\r\n\r\n\r\n\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\tmarginTop: '20px'\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\r\n\t\t\t\t\t\t\t<div className='addproductSection-left-header'\r\n\r\n\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\tmarginBottom: '-5px'\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>Images</h3>\r\n\t\t\t\t\t\t\t\t{/* <div  >\r\n\t\t\t\t\t<FileOutlined />\r\n\t\t\t\t\t<span>Media Center</span>\r\n\t\t\t\t</div> */}\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\t\t\t\t\t\t\t<div className='aboutToUploadImagesContainer'>\r\n\r\n\t\t\t\t\t\t\t\t{brandDetailState && (\r\n\t\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t\t{myImages &&\r\n\t\t\t\t\t\t\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\t\t\t\t\t\t\tmyImages.length > 0 && myImages.map((image, index) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div className='aboutToUploadImagesContainer__item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='aboutToUploadImagesContainer__item-imgContainer'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetCoverImageId(image.id);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleSetImageAsThumnail(image);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<img src={image.cover} alt={image.alt} />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleImagesDelete(image.id)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleDetachSingleImage(image.id)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='aboutToUploadImagesContainer__item-remove'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<CloseOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{coverImageId === image.id ? (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className='aboutToUploadImagesContainer__item-cover'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<CheckOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t) : !coverImageId && index === 0 && (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className='aboutToUploadImagesContainer__item-cover'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<CheckOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t\t\t})}\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t<Tooltip\r\n\t\t\t\t\t\t\t\t\t\t\ttitle={'Attach images'}>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetvisibleMedia(true);\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\tclassName='aboutToUploadImagesContainer__uploadItem'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t{/* <FileAddOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FileImageTwoTone />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FileImageOutlined /> */}\r\n\t\t\t\t\t\t\t\t\t\t\t\t<FileImageFilled />\r\n\t\t\t\t\t\t\t\t\t\t\t\t{/* <h5>\r\n\t\t\t\t\t\t\t\t\t\t\t\t     Select From Library\r\n\t\t\t\t\t\t\t\t\t\t\t<     /h5> */}\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span className='aboutToUploadImagesContainer__uploadItem-plus'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<PlusOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t\t)}\r\n\r\n\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t</Modal>\r\n\r\n\t\t\t\t\t\t<MediaLibrary\r\n\t\t\t\t\t\t\tsetvisible={setvisibleMedia}\r\n\t\t\t\t\t\t\tvisible={visibleMedia}\r\n\t\t\t\t\t\t\tsetmyImages={setmyImages}\r\n\t\t\t\t\t\t\tmyImages={myImages}\r\n\t\t\t\t\t\t\tmyGoddamnImages={myGoddamnImages}\r\n\t\t\t\t\t\t\tsetMyGoddamnImages={setMyGoddamnImages}\r\n\t\t\t\t\t\t\tisModalOpenForImages={true}\r\n\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</>\r\n\t\t\t\t)}\r\n\t\t</Formik>\r\n\r\n\r\n\r\n\r\n\t);\r\n};\r\n\r\nexport default AddNewBrand;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useParams, useHistory } from \"react-router\";\r\n\r\n\r\n// import hooks\r\nimport { useHandleFetch } from \"../../hooks\";\r\n\r\n// import lib\r\nimport {\r\n    EditOutlined,\r\n} from '@ant-design/icons';\r\n\r\nimport { Skeleton, Empty, Button, notification, Table, Space, Input as CoolInput, Tooltip, Modal } from 'antd';\r\n\r\n\r\n\r\n// import components\r\nimport { DataTableSkeleton } from \"../../components/Placeholders\";\r\nimport CategoryEdit from \"./CategoryEdit\";\r\n\r\n\r\nconst { Column, ColumnGroup } = Table;\r\nconst { Search } = CoolInput;\r\n\r\n\r\ninterface Props {\r\n    productRecord?: any;\r\n}\r\n\r\nconst NewBrandDetail = (props: Props) => {\r\n    const [categoryDetailState, handleCategoryDetailFetch] = useHandleFetch({}, 'categoryDetail');\r\n    const [categoryProductsState, handleCategoryProductsFetch] = useHandleFetch({}, 'categoryProducts');\r\n\r\n    const params = useParams();\r\n    const history = useHistory();\r\n    const categoryId = params['id'];\r\n    const [categoryEditVisible, setCategoryEditVisible] = useState(false);\r\n\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        const getCategoryDetail = async () => {\r\n            await handleCategoryDetailFetch({\r\n                urlOptions: {\r\n                    placeHolders: {\r\n                        id: categoryId\r\n                    }\r\n                }\r\n            })\r\n        };\r\n\r\n        getCategoryDetail();\r\n\r\n    }, [categoryId]);\r\n\r\n    useEffect(() => {\r\n\r\n        const getCategoryProducts = async () => {\r\n            await handleCategoryProductsFetch({\r\n                urlOptions: {\r\n                    placeHolders: {\r\n                        id: categoryId\r\n                    }\r\n                }\r\n            })\r\n        };\r\n\r\n        getCategoryProducts();\r\n\r\n    }, [categoryId]);\r\n\r\n\r\n\r\n\r\n    console.log('categoryProductsState', categoryProductsState);\r\n\r\n    console.log('brandParams', params);\r\n\r\n\r\n    return (\r\n        <div className='brandDetailContainer'>\r\n\r\n            <div className='brandDetailContainer__heading'>\r\n                <h3>\r\n                    Category Detail\r\n                </h3>\r\n\r\n                {categoryDetailState.done && categoryDetailState.data && (Object.keys(categoryDetailState.data).length > 0) && (\r\n                    <>\r\n                        <CategoryEdit\r\n                            categoryEditVisible={categoryEditVisible}\r\n                            setCategoryEditVisible={setCategoryEditVisible}\r\n                            categoryDetailData={categoryDetailState.data}\r\n                        />\r\n                        <Button\r\n                            onClick={() => setCategoryEditVisible(true)}\r\n                            type='link'\r\n                            icon={<EditOutlined />}\r\n                        >\r\n                            Edit\r\n                      </Button>\r\n                    </>\r\n                )}\r\n\r\n            </div>\r\n            <Skeleton\r\n                avatar paragraph={{ rows: 3 }}\r\n                loading={categoryDetailState.isLoading}>\r\n                {categoryDetailState.done && categoryDetailState.data && !(Object.keys(categoryDetailState.data).length > 0) && (\r\n                    <Empty description='No Category found' image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n                )}\r\n\r\n\r\n\r\n                {categoryDetailState.done && categoryDetailState.data && (Object.keys(categoryDetailState.data).length > 0) && (\r\n                    <>\r\n                        <div className='brandDetailContainer__header'>\r\n                            <div className='brandDetailContainer__header-coverContainer brandDetailContainer__header-coverContainer-category'>\r\n                                <img src={categoryDetailState.data['cover'] && categoryDetailState.data['cover']['cover']} alt=\"\" />\r\n                            </div>\r\n                            <div className='brandDetailContainer__header-info'>\r\n                                <h2>\r\n                                    {categoryDetailState.data['name']}\r\n                                </h2>\r\n                                <h3>\r\n                                    {categoryDetailState.data['description']}\r\n                                </h3>\r\n                                <h3>\r\n                                    Category type: <span>\r\n                                        {categoryDetailState.data['type']}\r\n                                    </span>\r\n                                </h3>\r\n\r\n                                {categoryDetailState.data['url'] && (\r\n                                    <h3>\r\n                                        URL:\r\n                                        <span>\r\n                                            {categoryDetailState.data['url']}\r\n                                        </span>\r\n\r\n                                    </h3>\r\n                                )}\r\n\r\n                            </div>\r\n                        </div>\r\n\r\n\r\n                        {categoryDetailState.data['icon'] && (\r\n                            <>\r\n                                <div className='brandDetailContainer__heading'>\r\n                                    <h3>\r\n                                        Icon\r\n                            </h3>\r\n                                </div>\r\n\r\n                                <div className='brandDetailContainer__inlineBox'>\r\n                                    <div className='brandDetailContainer__header-coverContainer brandDetailContainer__header-coverContainer-icon'>\r\n                                        <img src={categoryDetailState.data['icon'] && categoryDetailState.data['icon']} alt=\"\" />\r\n                                    </div>\r\n\r\n                                </div>\r\n\r\n                                <div style={{\r\n                                    marginBottom: \"25px\"\r\n                                }}></div>\r\n                            </>\r\n                        )}\r\n\r\n\r\n                        {categoryDetailState.data['image'] && categoryDetailState.data['image'].length > 0 && (\r\n                            <>\r\n                                <div className='brandDetailContainer__heading'>\r\n                                    <h3>\r\n                                        Image Gallary\r\n                                   </h3>\r\n                                </div>\r\n\r\n                                <div className='brandDetailContainer__inlineBox'>\r\n                                    <div className='brandDetailContainer__header-coverContainer brandDetailContainer__header-coverContainer-icon'>\r\n                                        <img src={categoryDetailState.data['icon'] && categoryDetailState.data['icon']} alt=\"\" />\r\n                                    </div>\r\n\r\n                                </div>\r\n\r\n                                <div style={{\r\n                                    marginBottom: \"25px\"\r\n                                }}></div>\r\n                            </>\r\n                        )}\r\n\r\n\r\n                        {categoryDetailState.data['subCategory'] && categoryDetailState.data['subCategory'].length > 0 && (\r\n                            <>\r\n                                <div className='brandDetailContainer__heading'>\r\n                                    <h3>\r\n                                        Child Categories\r\n                                   </h3>\r\n                                </div>\r\n\r\n                                <div className='smallcatCardContainer'>\r\n                                    {categoryDetailState.data['subCategory'].map(subCat => {\r\n                                        return (\r\n                                            <div\r\n                                                onClick={() => history.push(`/admin/category/${subCat.id}`)}\r\n                                                className='smallcatCardContainer__card'>\r\n                                                <div className='smallcatCardContainer__card-coverbox'>\r\n                                                    <img src={subCat.cover} alt=\"\" />\r\n                                                </div>\r\n                                                <div className='smallcatCardContainer__card-info'>\r\n                                                    <h3>\r\n                                                        {subCat.name}\r\n                                                    </h3>\r\n                                                </div>\r\n                                            </div>\r\n                                        )\r\n                                    })}\r\n\r\n                                </div>\r\n\r\n                                <div style={{\r\n                                    marginBottom: \"25px\"\r\n                                }}></div>\r\n                            </>\r\n                        )}\r\n\r\n\r\n                    </>\r\n\r\n                )}\r\n\r\n            </Skeleton>\r\n\r\n            <div className='brandDetailContainer__heading'>\r\n                <h3>\r\n                    Products\r\n                </h3>\r\n            </div>\r\n            <div className='brandDetailContainer__body'>\r\n                {categoryProductsState.isLoading && <DataTableSkeleton />}\r\n                {categoryProductsState.done && !(categoryProductsState.data.length > 0) && (\r\n                    <div style={{\r\n                        marginTop: '100px'\r\n                    }}>\r\n                        <Empty description='No Products exists in this category' image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n                    </div>\r\n                )}\r\n\r\n                {categoryProductsState.done && categoryProductsState.data && categoryProductsState.data.length > 0 && (\r\n                    <>\r\n                        <Table\r\n                            style={{\r\n                                paddingTop: '10px',\r\n                                borderRadius: '5px !important',\r\n                                overflow: 'hidden',\r\n                                boxShadow: '0 0.125rem 0.625rem rgba(227, 231, 250, 0.3), 0 0.0625rem 0.125rem rgba(206, 220, 233, 0.4)'\r\n                            }}\r\n\r\n                            size='small'\r\n                            dataSource={categoryProductsState.data}\r\n                            tableLayout={'auto'}\r\n                            onHeaderRow={column => {\r\n                                return {\r\n                                    style: {\r\n                                        color: 'red !important'\r\n                                    }\r\n\r\n                                };\r\n                            }}\r\n                        >\r\n                            <Column\r\n                                title=\"\"\r\n                                dataIndex=\"cover\"\r\n                                key=\"id\"\r\n                                width={'80px'}\r\n\r\n                                className='classnameofthecolumn'\r\n\r\n                                render={(cover, record: any) => (\r\n                                    <>\r\n                                        <img\r\n                                            onClick={() => {\r\n                                                // go to product detail\r\n                                            }}\r\n                                            src={cover} alt='cover img' style={{\r\n                                                height: '40px',\r\n                                                width: '40px',\r\n                                                objectFit: \"contain\",\r\n                                                borderRadius: '3px',\r\n                                                cursor: 'pointer'\r\n                                            }} />\r\n\r\n\r\n\r\n\r\n                                    </>\r\n                                )}\r\n                            />\r\n\r\n                            <Column\r\n                                title=\"Name\"\r\n                                dataIndex=\"name\"\r\n                                key=\"id\"\r\n                                className='classnameofthecolumn'\r\n                                render={(text, record: any) => (\r\n                                    <>\r\n                                        <h4\r\n                                            onClick={() => {\r\n                                                // go to product detail\r\n                                            }}\r\n                                            style={{\r\n                                                fontWeight: 400,\r\n                                                color: '#555',\r\n                                                cursor: 'pointer'\r\n\r\n                                            }}>\r\n                                            {text}\r\n                                        </h4>\r\n\r\n\r\n                                    </>\r\n                                )}\r\n\r\n                            />\r\n\r\n                            <Column\r\n                                title=\"Offer Price\"\r\n                                dataIndex=\"offerPrice\"\r\n                                key=\"id\"\r\n                                className='classnameofthecolumn'\r\n\r\n                            />\r\n\r\n\r\n                            <Column\r\n                                title=\"Price\"\r\n                                dataIndex=\"price\"\r\n                                key=\"id\"\r\n                                className='classnameofthecolumn'\r\n\r\n                            />\r\n\r\n                        </Table>\r\n                    </>\r\n                )}\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NewBrandDetail\r\n","import React, { useState } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n\r\nimport { useHandleFetch } from '../../hooks';\r\n// import third party ui lib\r\nimport { Upload, message, Switch, Select, Button, notification, Modal, Tooltip } from 'antd';\r\n\r\nimport {\r\n\tFileOutlined,\r\n\tInboxOutlined,\r\n\tFileAddOutlined,\r\n\tDeleteOutlined,\r\n\tCheckCircleOutlined,\r\n\tCloseOutlined,\r\n\tCheckOutlined,\r\n\tInfoCircleOutlined,\r\n\tPlusOutlined,\r\n\tFileImageFilled\r\n} from '@ant-design/icons';\r\n\r\n\r\n\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport MediaLibrary from \"../../components/MediaLibrary\";\r\n\r\nconst validationSchema = Yup.object().shape({\r\n\tname: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t\tmessage: message || 'Brand Created',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n\tnotification.error({\r\n\t\tmessage: message || 'Something Went Wrong',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n};\r\n\r\n\r\nconst initialValues = {\r\n\tname: '',\r\n\tdescription: '',\r\n\timage: [],\r\n\turl: '',\r\n\tcover: ''\r\n}\r\n\r\n\r\n\r\ninterface Props {\r\n\taddNewCategoryVisible?: any;\r\n\tsetAddNewCategoryVisible?: any;\r\n\tbrandList?: any;\r\n\tsetBrandList?: any;\r\n\r\n}\r\n\r\nconst AddNewBrand = ({ addNewCategoryVisible, setAddNewCategoryVisible, brandList, setBrandList }: Props) => {\r\n\r\n\tconst [updateBrandState, handleUpdateBrandFetch] = useHandleFetch({}, 'updateBrand');\r\n\tconst [visible, setvisible] = useState(false);\r\n\tconst [myImages, setmyImages] = useState(false);\r\n\tconst [visibleMedia, setvisibleMedia] = useState(false);\r\n\tconst [coverImageId, setCoverImageId] = useState('');\r\n\r\n\r\n\tconst handleSubmit = async (values: any, actions: any) => {\r\n\r\n\t\t// @ts-ignore\r\n\t\tconst imagesIds = myImages ? myImages.map(image => {\r\n\t\t\treturn image.id;\r\n\t\t}) : [];\r\n\r\n\r\n\t\tconst addBrandRes = await handleUpdateBrandFetch({\r\n\r\n\t\t\tbody: {\r\n\t\t\t\tname: values.name.trim(),\r\n\t\t\t\tdescription: values.description,\r\n\t\t\t\ttype: values.type,\r\n\t\t\t\timage: imagesIds,\r\n\t\t\t\tcover: coverImageId || imagesIds[0] ? imagesIds[0] : '',\r\n\t\t\t},\r\n\t\t});\r\n\r\n\t\t// @ts-ignore\r\n\t\tif (addBrandRes && addBrandRes.status === 'ok') {\r\n\t\t\topenSuccessNotification();\r\n\r\n\t\t\tsetBrandList([...brandList, {\r\n\t\t\t\tid: addBrandRes['id'] || '',\r\n\t\t\t\tkey: addBrandRes['id'] || '',\r\n\t\t\t\tname: addBrandRes['name'] || '',\r\n\t\t\t\tdescription: addBrandRes['description'] || '',\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\t...addBrandRes\r\n\t\t\t}])\r\n\t\t\tactions.resetForm();\r\n\t\t\tsetAddNewCategoryVisible(false);\r\n\t\t}\r\n\t\telse {\r\n\t\t\topenErrorNotification();\r\n\t\t}\r\n\r\n\t\tactions.setSubmitting(false);\r\n\r\n\t};\r\n\r\n\r\n\tconst onSwitchChange = (checked: any) => {\r\n\t\t// console.log(checked);\r\n\t};\r\n\r\n\r\n\tconst handleCancel = (e: any) => {\r\n\t\tsetAddNewCategoryVisible(false);\r\n\t};\r\n\r\n\r\n\tconst getisSubmitButtonDisabled = (values, isValid) => {\r\n\t\tif (!values.name || !isValid) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\tconst handleImagesDelete = (id) => {\r\n\t\t// @ts-ignore\r\n\t\tconst newImages = myImages && myImages.filter(image => {\r\n\t\t\treturn image.id !== id;\r\n\t\t})\r\n\r\n\t\tsetmyImages(newImages);\r\n\t}\r\n\r\n\r\n\treturn (\r\n\t\t<Formik\r\n\t\t\tonSubmit={(values, actions) => handleSubmit(values, actions)}\r\n\t\t\tvalidationSchema={validationSchema}\r\n\t\t\tvalidateOnBlur={false}\r\n\t\t\tenableReinitialize={true}\r\n\t\t\tinitialValues={\r\n\t\t\t\t{ ...initialValues }\r\n\t\t\t}\r\n\t\t>\r\n\t\t\t{({\r\n\t\t\t\thandleChange,\r\n\t\t\t\tvalues,\r\n\t\t\t\thandleSubmit,\r\n\t\t\t\terrors,\r\n\t\t\t\tisValid,\r\n\t\t\t\tisSubmitting,\r\n\t\t\t\ttouched,\r\n\t\t\t\thandleBlur,\r\n\t\t\t\tsetFieldTouched,\r\n\t\t\t\thandleReset,\r\n\t\t\t}) => (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<Modal\r\n\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\ttop: '40px'\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\ttitle=\"Add New Organizer\"\r\n\t\t\t\t\t\t\tvisible={addNewCategoryVisible}\r\n\t\t\t\t\t\t\tonOk={(e: any) => handleSubmit(e)}\r\n\t\t\t\t\t\t\tonCancel={handleCancel}\r\n\t\t\t\t\t\t\tokText='Create'\r\n\t\t\t\t\t\t\tokButtonProps={{\r\n\t\t\t\t\t\t\t\tloading: isSubmitting,\r\n\t\t\t\t\t\t\t\thtmlType: \"submit\",\r\n\t\t\t\t\t\t\t\tdisabled: getisSubmitButtonDisabled(values, isValid)\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\tlabel='Title'\r\n\t\t\t\t\t\t\t\tvalue={values.name}\r\n\t\t\t\t\t\t\t\tname='name'\r\n\t\t\t\t\t\t\t\tisError={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateBrandState.error['error']['name'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateBrandState.error['error']['name'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('name');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\tlabel='Description'\r\n\t\t\t\t\t\t\t\tvalue={values.description}\r\n\t\t\t\t\t\t\t\tname='description'\r\n\t\t\t\t\t\t\t\tisError={(touched.description && errors.description) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateBrandState.error['error']['description'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.description && errors.description) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateBrandState.error['error']['description'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('description');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\tmarginTop: '20px'\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\r\n\t\t\t\t\t\t\t<div className='addproductSection-left-header'\r\n\r\n\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\tmarginBottom: '-5px'\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>Images</h3>\r\n\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\t\t\t\t\t\t\t<div className='aboutToUploadImagesContainer'>\r\n\t\t\t\t\t\t\t\t{myImages &&\r\n\t\t\t\t\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\t\t\t\t\tmyImages.length > 0 && myImages.map((image, index) => {\r\n\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='aboutToUploadImagesContainer__item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='aboutToUploadImagesContainer__item-imgContainer'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => setCoverImageId(image.id)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<img src={image.cover} alt={image.alt} />\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => handleImagesDelete(image.id)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='aboutToUploadImagesContainer__item-remove'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<CloseOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t{coverImageId === image.id ? (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<span className='aboutToUploadImagesContainer__item-cover'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<CheckOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t) : !coverImageId && index === 0 && (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<span className='aboutToUploadImagesContainer__item-cover'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<CheckOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t})}\r\n\r\n\r\n\t\t\t\t\t\t\t\t<Tooltip\r\n\t\t\t\t\t\t\t\t\ttitle={'Attach images'}>\r\n\r\n\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\t\t\tsetvisibleMedia(true);\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\tclassName='aboutToUploadImagesContainer__uploadItem'>\r\n\t\t\t\t\t\t\t\t\t\t{/* <FileAddOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FileImageTwoTone />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FileImageOutlined /> */}\r\n\t\t\t\t\t\t\t\t\t\t<FileImageFilled />\r\n\t\t\t\t\t\t\t\t\t\t{/* <h5>\r\n\t\t\t\t\t\t\t\t\t\t\t\t     Select From Library\r\n\t\t\t\t\t\t\t\t\t\t\t<     /h5> */}\r\n\t\t\t\t\t\t\t\t\t\t<span className='aboutToUploadImagesContainer__uploadItem-plus'>\r\n\t\t\t\t\t\t\t\t\t\t\t<PlusOutlined />\r\n\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</Tooltip>\r\n\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\t\t\t\t\t\t</Modal>\r\n\r\n\t\t\t\t\t\t<MediaLibrary\r\n\t\t\t\t\t\t\tsetvisible={setvisibleMedia}\r\n\t\t\t\t\t\t\tvisible={visibleMedia}\r\n\t\t\t\t\t\t\tsetmyImages={setmyImages}\r\n\t\t\t\t\t\t\tmyImages={myImages}\r\n\t\t\t\t\t\t\tisModalOpenForImages={true}\r\n\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</>\r\n\t\t\t\t)}\r\n\t\t</Formik>\r\n\r\n\r\n\r\n\r\n\t);\r\n};\r\n\r\nexport default AddNewBrand;\r\n","import React,{useState} from 'react';\r\nimport { Modal, notification  } from 'antd';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport {useHandleFetch} from '../../hooks';\r\nimport { CheckCircleOutlined } from '@ant-design/icons';\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n\tname: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t  message: message || 'Tag Updated',\r\n\t  description: '',\r\n\t  icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n  };\r\n\r\n\r\n  const openErrorNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t  message: message || 'Something Went Wrong',\r\n\t  description: '',\r\n\t  icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n  };\r\n\r\n\r\n\r\n\r\n\r\ninterface Props {\r\n\tcategory: any;\r\n\tsetvisible: any; \r\n\tvisible: any;\r\n\tbrandList: any; \r\n\tsetBrandList?: any; \r\n\r\n}\r\n\r\nconst QuickEdit = ({ category, setvisible, visible, brandList, setBrandList }: Props) => {\r\n\tconst [updatebrandState, handleUpdateBrandFetch] = useHandleFetch({}, 'updateBrand');\r\n\r\n\tconst handleSubmit = async (values : any, actions : any) => {\r\n\t  const updateBrandRes = await handleUpdateBrandFetch({\r\n\t\turlOptions: {\r\n\t\t\tplaceHolders: {\r\n\t\t\t  id: values.id,\r\n\t\t\t}\r\n\t\t  },\r\n\t\tbody: {\r\n\t\t\tname: values.name,\r\n\t\t\tdescription: values.description,\r\n\t\t},\r\n\t  });\r\n\r\n\t  \r\n\t \t  // @ts-ignore\r\n\t\t   if(updateBrandRes && updateBrandRes.status === 'ok'){\r\n\t\t\topenSuccessNotification(); \r\n\t\r\n\t\t\tconst positionInBrand = () => {\r\n\t\t\t\treturn brandList.map(item => item.id).indexOf(category.id);\r\n\t\t\t  }\r\n\t\r\n\t\t\t  const index = positionInBrand();\r\n\t\r\n\t\t\t  // @ts-ignore\r\n\t\t\t  const updatedItem = Object.assign({}, brandList[index], { ...updateBrandRes });\r\n\t\t\t  const updateBrandList = [...brandList.slice(0, index), updatedItem, ...brandList.slice(index + 1)];\r\n\t\t\t  setBrandList(updateBrandList); \r\n\t\t\t\r\n\t\t  }\r\n\t\t  else {\r\n\t\t\topenErrorNotification();\r\n\t\t  }\r\n\t\t\r\n\t\t  actions.setSubmitting(false);\r\n\t\t  setvisible(false)\r\n\r\n\r\n\t\r\n\t};\r\n\t\r\n\r\n\tconst handleCancel = (e: any) => {\r\n        setvisible(false);\r\n      };\r\n\r\n\r\n\r\n\t  const getisSubmitButtonDisabled = (values,isValid) => {\r\n\t\tif(!values.name || !isValid){\r\n\t\t\treturn true; \r\n\t\t}\r\n\t\treturn false; \r\n\t  }\r\n\r\n\treturn (\r\n\t\t<Formik\r\n\t\tonSubmit={(values, actions) => handleSubmit(values, actions)}\r\n\t\tvalidationSchema={validationSchema}\r\n\t\tvalidateOnBlur={false}\r\n\t\tenableReinitialize={true}\r\n\t\tinitialValues={\r\n\t\t  {...category}\r\n\t\t}\r\n\t  >\r\n\t\t{({\r\n\t\t  handleChange,\r\n\t\t  values,\r\n\t\t  handleSubmit,\r\n\t\t  errors,\r\n\t\t  isValid,\r\n\t\t  isSubmitting,\r\n\t\t  touched,\r\n\t\t  handleBlur,\r\n\t\t  setFieldTouched,\r\n\t\t  handleReset,\r\n\t\t}) => (\r\n\t\t\t<>\r\n\t\t\t<Modal\r\n\t\t\ttitle=\"Quick Edit\"\r\n\t\t\tvisible={visible}\r\n\t\t\tonOk={(e : any) => handleSubmit(e)}\r\n\t\t\tonCancel={handleCancel}\r\n\t\t\tokText='Update'\r\n\t\t\tokButtonProps={{\r\n\t\t\tloading: isSubmitting,\r\n\t\t\thtmlType: \"submit\",\r\n\t\t\tdisabled: getisSubmitButtonDisabled(values, isValid)\r\n\t\t\t}}\r\n  >\r\n  <Input \r\n\t\t\t   label='Title'\r\n\t\t\t   value={values.name}\r\n\t\t\t   name='name'\r\n\t\t\t   isError={(touched.name && errors.name) ||\r\n\t\t\t\t  (!isSubmitting && updatebrandState.error['error']['name'])}\r\n\t\t\t  \r\n\t\t\t\t  errorString={(touched.name && errors.name) ||\r\n\t\t\t\t\t  (!isSubmitting && updatebrandState.error['error']['name'])}\r\n\t\t\t   onChange={(e : any) => {\r\n\t\t\t\t  handleChange(e);\r\n\t\t\t\t  setFieldTouched('name');\r\n\t\t\t\t}}\r\n\t\t\t   />\r\n\t\t\t  <TextArea\r\n\t\t\t   label='Description' \r\n\t\t\t   value={values.description}\r\n\t\t\t   name='description'\r\n\t\t\t   isError={(touched.description && errors.description) ||\r\n\t\t\t\t  (!isSubmitting && updatebrandState.error['error']['description'])}\r\n\t\t\t  \r\n\t\t\t\t  errorString={(touched.description && errors.description) ||\r\n\t\t\t\t\t  (!isSubmitting && updatebrandState.error['error']['description'])}\r\n\t\t\t   onChange={(e : any) => {\r\n\t\t\t\t  handleChange(e);\r\n\t\t\t\t  setFieldTouched('description');\r\n\t\t\t\t}}\r\n\t\t\t\t />\r\n  </Modal>\r\n\t\t\t  \r\n\t\t\t</>\r\n\t\t  )}\r\n\t  </Formik>\r\n\t);\r\n};\r\n\r\n\r\nexport default QuickEdit;\r\n","import React, {useState,useEffect} from 'react';\r\nimport {withRouter, useHistory} from 'react-router-dom';\r\nimport { Table,Empty, Popconfirm, Space,Button, Input,Tooltip, notification  } from 'antd';\r\nimport { PlusOutlined, EditOutlined, DeleteOutlined,CheckCircleOutlined } from '@ant-design/icons';\r\n\r\n\r\n\r\n/// import hooks\r\nimport {  useHandleFetch } from \"../../hooks\";\r\n\r\n// import components\r\nimport { DataTableSkeleton } from \"../../components/Placeholders\";\r\nimport AddNewBrand from \"./AddNewBrand\"\r\nimport QuickEdit from \"./QuickEdit\"\r\n\r\n\r\n\r\nconst { Column } = Table;\r\nconst { Search } = Input;\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t  message: message || 'Tag Created',\r\n\t  description: '',\r\n\t  icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n  };\r\n\r\n\r\n  const openErrorNotification = (message?: any) => {\r\n\tnotification.error({\r\n\t  message: message || 'Something Went Wrong',\r\n\t  description: '',\r\n\t  icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n  };\r\n\r\n\r\n\r\n\r\n\r\ninterface myTableProps {\r\n  data: any; \r\n  setBrandList: any; \r\n} \r\n\r\n\r\nconst MyTable = ({data,setBrandList}: myTableProps) => {\r\n    const [visible,setvisible] = useState(false);   \r\n    const [activeCategoryForEdit,setactiveCategoryForEdit] = useState(false); \r\n    const [deleteBrandState, handleDeleteBrandFetch] = useHandleFetch({}, 'deleteBrand');\r\n    const [brandDetailVisible,setBrandDetailVisible] = useState(false); \r\n    const history = useHistory(); \r\n\r\n\r\n \r\n      const handleDeleteBrand = async (id) => {\r\n        const deleteBrandRes = await handleDeleteBrandFetch({\r\n          urlOptions: {\r\n            placeHolders: {\r\n              id,\r\n            }\r\n            }\r\n          });\r\n\r\n            // @ts-ignore\r\n\t\t  if(deleteBrandRes && deleteBrandRes.status === 'ok'){\r\n\t\t\t  openSuccessNotification('Deleted Brand'); \r\n\t\t\t  const newBrandList =  data.filter(item => item.id !== id);\r\n\t\t\t  setBrandList(newBrandList); \r\n\t\t  }\r\n      }\r\n      \r\n\r\n    return (\r\n        <>\r\n        <Table \r\n        // expandable={{\r\n        //     expandedRowRender: record => <p style={{ margin: 0 }}>{record.name}</p>,\r\n        //     rowExpandable: record => record.name !== 'Not Expandable',\r\n        //   }}\r\n        // bordered={true}\r\n        size='small'\r\n        // pagination={false}\r\n        dataSource={data}\r\n        >\r\n            <Column \r\n          title=\"\"\r\n           dataIndex=\"cover\"\r\n            key=\"id\" \r\n            width={'80px'}\r\n            \r\n           className='classnameofthecolumn'\r\n\r\n           render={(cover, record: any) => (\r\n            <>\r\n              <img\r\n                onClick={() => {\r\n                  // setBrandDetailVisible(true);\r\n                  history.push(`/admin/brand/${record.id}`)\r\n                  setactiveCategoryForEdit(record)\r\n                }}\r\n                src={cover} alt='cover img' style={{\r\n                  height: '40px',\r\n                  width: '40px',\r\n                  objectFit: \"contain\",\r\n                  borderRadius: '3px',\r\n                  cursor: 'pointer'\r\n                }} />\r\n\r\n\r\n\r\n\r\n            </>\r\n          )}\r\n            />\r\n          <Column\r\n           title=\"Name\" \r\n           dataIndex=\"name\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n           render={(text, record: any) => (\r\n            <>\r\n\r\n              <h4\r\n                onClick={() => {\r\n                  history.push(`/admin/brand/${record.id}`)\r\n                  // setBrandDetailVisible(true);\r\n                  setactiveCategoryForEdit(record)\r\n                }}\r\n                style={{\r\n                  fontWeight: 400,\r\n                  color: '#555',\r\n                  cursor: 'pointer'\r\n\r\n                }}>\r\n                {text}\r\n              </h4>\r\n\r\n\r\n            </>\r\n          )}\r\n            />\r\n\r\n<Column\r\n           title=\"Description\" \r\n           dataIndex=\"description\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n         \r\n            />\r\n\r\n\r\n       <Column\r\n           title=\"Product\" \r\n           dataIndex=\"productCount\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n         \r\n            />\r\n          {/* <Column \r\n          \r\n          className='classnameofthecolumn'\r\n\r\n          title=\"Product\" dataIndex=\"product\" key=\"product\" /> */}\r\n\r\n          {/* <Column \r\n          \r\n          className='classnameofthecolumn'\r\n\r\n          title=\"Sub Category\" dataIndex=\"subCategory\" key=\"subCategory\" /> */}\r\n        \r\n        {/* <Column\r\n          title=\"Tags\"\r\n          dataIndex=\"tags\"\r\n          key=\"tags\"\r\n          render={tags => (\r\n            <>\r\n              {tags.map((tag : any) => (\r\n                <Tag color=\"blue\" key={tag}>\r\n                  {tag}\r\n                </Tag>\r\n              ))}\r\n            </>\r\n          )}\r\n        /> */}\r\n        <Column\r\n        \r\n        className='classnameofthecolumn'\r\n          title=\"\"\r\n          key=\"action\"\r\n          align='right'\r\n          render={(text, record : any) => (\r\n            <Space size=\"middle\">\r\n                <a href='##'>\r\n               <Tooltip placement=\"top\" title='Quick Edit Brand'>\r\n              <span className='iconSize' onClick={() => {\r\n                setvisible(true)\r\n                setactiveCategoryForEdit(record); \r\n              }}> \r\n              <EditOutlined />\r\n            \r\n              </span>\r\n               </Tooltip>\r\n               </a>\r\n\r\n\r\n \r\n               <Popconfirm \r\n               \r\n               onConfirm={() => handleDeleteBrand(record.id)}\r\n               title=\"Are you sure？\" okText=\"Yes\" cancelText=\"No\">\r\n           \r\n           <span \r\n             className='iconSize iconSize-danger'\r\n             > \r\n             <DeleteOutlined/>\r\n            </span>\r\n           </Popconfirm>\r\n\r\n\r\n            </Space>\r\n          )}\r\n        />\r\n      </Table>\r\n\r\n\r\n\r\n    {activeCategoryForEdit &&   <QuickEdit \r\n    brandList={data}\r\n    setBrandList={setBrandList}\r\n    setvisible={setvisible}\r\n    visible={visible}\r\n    category={activeCategoryForEdit}/>}\r\n    \r\n    \r\n    </>\r\n    )\r\n}\r\n\r\n\r\ninterface Props {\r\n    history: any; \r\n}\r\n\r\nconst CategoryList = ({history}: Props) => {\r\n\r\n\r\n  const [brandList,setBrandList] = useState([]);\r\n\r\n  \r\n  const [brandState, handlebrandListFetch] = useHandleFetch({}, 'brandList');\r\n\r\n\r\n  useEffect(()=>{\r\n   const setBrands = async () => {\r\n     const brands = await handlebrandListFetch({}); \r\n     // @ts-ignore\r\n     setBrandList(brands); \r\n   }\r\n   setBrands(); \r\n  },[])\r\n\r\n\r\n  \r\n  const [addNewCategoryVisible,setAddNewCategoryVisible] = useState(false);   \r\n\r\n  const handleOkAddNewCategory = (e: any) => {\r\n    setAddNewCategoryVisible(false);\r\n  \r\n  };\r\n\r\n  const handleCancelAddNewCategory = (e: any) => {\r\n    setAddNewCategoryVisible(false);\r\n  };\r\n\r\n\r\n    \r\n  const handleSearch = (value) => {\r\n    if(brandState.data.length > 0 ){\r\n      const newBrandList = brandState.data.filter(item => item.name.toLowerCase().includes(value.toLowerCase())); \r\n      setBrandList(newBrandList); \r\n    }\r\n     \r\n  }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\treturn (\r\n\t\t<>\r\n    {/* <h2 className='containerPageTitle'>\r\n      Categories\r\n    </h2> */}\r\n    <div className='categoryListContainer'>\r\n            <div className='categoryListContainer__header'>\r\n           \r\n\r\n          <div className='categoryListContainer__header-searchBar'>\r\n          <h2 className='categoryListContainer__header-title'>\r\n            Brand\r\n            </h2>\r\n\r\n\r\n          <Search\r\n            enterButton={false}\r\n            className='searchbarClassName'\r\n          placeholder=\"search brand..\"\r\n          onSearch={value => handleSearch(value)}\r\n          // style={{ width: 300 }}\r\n        />\r\n          </div>\r\n            <Button\r\n          // type=\"primary\"\r\n          className='btnPrimaryClassNameoutline'\r\n          icon={<PlusOutlined />}\r\n          onClick={() => setAddNewCategoryVisible(true)}\r\n        >\r\n        Add New\r\n            \r\n            </Button>\r\n            </div>\r\n\r\n            <div className='categoryListContainer__afterHeader'>\r\n            {/* <Search\r\n      placeholder=\"search categories..\"\r\n      size=\"large\"\r\n      onSearch={value => console.log(value)}\r\n      style={{ width: 300 }}\r\n    /> */}\r\n            </div>\r\n\r\n     \r\n\t\t\t\r\n\t\t\t<div className='categoryListContainer__categoryList'>\r\n        {brandState.done && brandList.length > 0 && <MyTable \r\n          setBrandList={setBrandList}\r\n        data={brandList} />}\r\n        {brandState.isLoading && <DataTableSkeleton />}\r\n        {brandState.done && !(brandList.length > 0) && (\r\n\t\t\t<div style={{\r\n\t\t\t\tmarginTop: '100px'\r\n\t\t\t}}>\r\n\t\t\t\t<Empty description='No Brand found'  image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n\t\t\t</div>\r\n\t\t)}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\r\n    <AddNewBrand \r\n          addNewCategoryVisible={addNewCategoryVisible} \r\n          setAddNewCategoryVisible={setAddNewCategoryVisible} \r\n          setBrandList={setBrandList}\r\n          brandList={brandList}\r\n          />\r\n\r\n    </>\r\n\t);\r\n};\r\n\r\nexport default withRouter(CategoryList);\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n\r\nimport { useHandleFetch } from '../../hooks';\r\n// import third party ui lib\r\nimport { Upload, message, Switch, Select, Button, notification, Modal, Tooltip, Spin } from 'antd';\r\n\r\nimport {\r\n    FileOutlined,\r\n    InboxOutlined,\r\n    FileAddOutlined,\r\n    DeleteOutlined,\r\n    CheckCircleOutlined,\r\n    CloseOutlined,\r\n    CheckOutlined,\r\n    InfoCircleOutlined,\r\n    PlusOutlined,\r\n    FileImageFilled\r\n} from '@ant-design/icons';\r\n\r\n\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport MediaLibrary from \"../../components/MediaLibrary\";\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    name: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Brand Updated',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n    notification.error({\r\n        message: message || 'Something Went Wrong',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst initialValues = {\r\n    name: '',\r\n    description: '',\r\n    image: [],\r\n    url: '',\r\n    cover: ''\r\n}\r\n\r\n\r\n\r\ninterface Props {\r\n    brandDetailData?: any;\r\n    brandEditVisible?: any;\r\n    setBrandEditVisible?: any;\r\n}\r\n\r\nconst AddNewBrand = ({ brandDetailData, brandEditVisible, setBrandEditVisible }: Props) => {\r\n\r\n    const [updateBrandState, handleUpdateBrandFetch] = useHandleFetch({}, 'updateBrand');\r\n    const [attachImageToItemMultipleState, handleAttachImageToItemMultipleFetch] = useHandleFetch({}, 'attachImageToItemMultiple');\r\n    const [attachImageToItemSingleState, handleAttachImageToItemSingleFetch] = useHandleFetch({}, 'attachImageToItemSingle');\r\n    const [detachImageFromItemMultipleState, handleDetachImageFromItemMultipleFetch] = useHandleFetch({}, 'detachImageFromItemMultiple');\r\n    const [detachImageFromItemSingleState, handleDetachImageFromItemSingleFetch] = useHandleFetch({}, 'detachImageFromItemSingle');\r\n    const [setImageAsThumbnailToItemState, handleSetImageAsThumbnailToItemFetch] = useHandleFetch({}, 'setImageAsThumbnailToItem');\r\n\r\n\r\n    const [myImages, setmyImages] = useState(false);\r\n    const [visibleMedia, setvisibleMedia] = useState(false);\r\n    const [coverImageId, setCoverImageId] = useState('');\r\n    const [myGoddamnImages, setMyGoddamnImages] = useState([]);\r\n\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        if (brandDetailData && Object.keys(brandDetailData).length > 0) {\r\n\r\n            const images = brandDetailData.image;\r\n            if (images && images.length > 0) {\r\n                setmyImages(images);\r\n                setMyGoddamnImages(images);\r\n            }\r\n\r\n            if (brandDetailData.cover && brandDetailData.cover['id']) {\r\n                // @ts-ignore\r\n                setmyImages([brandDetailData.cover, ...images]);\r\n                setCoverImageId(brandDetailData.cover['id']);\r\n            }\r\n\r\n        }\r\n    }, [brandDetailData])\r\n\r\n\r\n    useEffect(() => {\r\n        // @ts-ignore\r\n        if (myImages && myImages[0] && myImages.length < 2) {\r\n\r\n            if (coverImageId !== myImages[0].id) {\r\n                setCoverImageId(myImages[0].id);\r\n                handleSetImageAsThumnail(myImages[0]);\r\n            }\r\n\r\n        }\r\n\r\n    }, [myImages])\r\n\r\n\r\n    const handleDetachSingleImage = async id => {\r\n        await handleDetachImageFromItemSingleFetch({\r\n            urlOptions: {\r\n                placeHolders: {\r\n                    imageId: id,\r\n                    collection: 'brand',\r\n                    itemId: brandDetailData.id\r\n                }\r\n            }\r\n        });\r\n\r\n\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n    const handleSetImageAsThumnail = async image => {\r\n\r\n        const thumbnailRes = await handleSetImageAsThumbnailToItemFetch({\r\n            urlOptions: {\r\n                placeHolders: {\r\n                    imageId: image.id,\r\n                    collection: 'brand',\r\n                    itemId: brandDetailData.id\r\n                }\r\n            }\r\n        });\r\n\r\n\r\n        // @ts-ignore\r\n        if (thumbnailRes && thumbnailRes.status === 'ok') {\r\n            openSuccessNotification('Seted as thumbnail!')\r\n            // const positionInBrand = () => {\r\n            //     return brandList.map(item => item.id).indexOf(brandDetailData.id);\r\n            // }\r\n\r\n            // const index = positionInBrand();\r\n\r\n            // const prevItem = brandList.find(item => item.id === productRecord.id);\r\n\r\n            // if (prevItem) {\r\n            //     const updatedItem = Object.assign({}, brandList[index], { ...prevItem, cover: image.cover });\r\n            //     const updateBrandList = [...brandList.slice(0, index), updatedItem, ...brandList.slice(index + 1)];\r\n            //     setBrandList(updateBrandList);\r\n            // }\r\n        }\r\n        else {\r\n            openErrorNotification(\"Couldn't set as thumbnail, Something went wrong\")\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    const handleSubmit = async (values: any, actions: any) => {\r\n\r\n        console.log('myReadyToGoImages', myImages);\r\n\r\n        if (brandDetailData && Object.keys(brandDetailData).length > 0) {\r\n            // @ts-ignore\r\n            const images = myImages && myImages.length > 0 ? myImages.map(item => item.id) : [];\r\n\r\n            if (images[0] && images.length > 1) {\r\n                await handleAttachImageToItemMultipleFetch({\r\n                    urlOptions: {\r\n                        placeHolders: {\r\n                            collection: 'brand',\r\n                            itemId: brandDetailData.id\r\n                        }\r\n                    },\r\n                    body: {\r\n                        image: images\r\n                    }\r\n                });\r\n            }\r\n            else if (images[0] && images.length < 1) {\r\n                await handleAttachImageToItemSingleFetch({\r\n                    urlOptions: {\r\n                        placeHolders: {\r\n                            imageId: images[0].id,\r\n                            collection: 'brand',\r\n                            itemId: brandDetailData.id\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n        }\r\n\r\n\r\n\r\n\r\n        const updateBrandRes = await handleUpdateBrandFetch({\r\n            urlOptions: {\r\n                placeHolders: {\r\n                    id: brandDetailData.id\r\n                }\r\n            },\r\n            body: {\r\n                name: values.name.trim(),\r\n                description: values.description,\r\n            },\r\n        });\r\n\r\n        // @ts-ignore\r\n        if (updateBrandRes && updateBrandRes.status === 'ok') {\r\n            openSuccessNotification();\r\n            setBrandEditVisible(false);\r\n\r\n\r\n            // const positionInBrand = () => {\r\n            //     return brandList.map(item => item.id).indexOf(productRecord.id);\r\n            // }\r\n\r\n            // const index = positionInBrand();\r\n            // const updatedItem = Object.assign({}, brandList[index], { ...updateBrandRes });\r\n            // console.log('updateBrandList', updatedItem)\r\n\r\n            // const updateBrandList = [...brandList.slice(0, index), updatedItem, ...brandList.slice(index + 1)];\r\n\r\n            // setBrandList(updateBrandList);\r\n\r\n\r\n            actions.resetForm();\r\n\r\n        }\r\n        else {\r\n            openErrorNotification();\r\n        }\r\n\r\n        actions.setSubmitting(false);\r\n    };\r\n\r\n\r\n\r\n    const onSwitchChange = (checked: any) => {\r\n        // console.log(checked);\r\n    };\r\n\r\n\r\n    const handleCancel = (e: any) => {\r\n        setBrandEditVisible(false);\r\n    };\r\n\r\n\r\n    const getisSubmitButtonDisabled = (values, isValid) => {\r\n        if (!values.name || !isValid) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n\r\n\r\n\r\n    const handleImagesDelete = (id) => {\r\n        // @ts-ignore\r\n        const newImages = myImages && myImages.filter(image => {\r\n            return image.id !== id;\r\n        })\r\n\r\n        setmyImages(newImages);\r\n    }\r\n\r\n\r\n\r\n    console.log('myImages', myImages)\r\n\r\n    return (\r\n        <Formik\r\n            onSubmit={(values, actions) => handleSubmit(values, actions)}\r\n            validationSchema={validationSchema}\r\n            validateOnBlur={false}\r\n            enableReinitialize={true}\r\n            initialValues={\r\n                { ...initialValues, ...brandDetailData }\r\n            }\r\n        >\r\n            {({\r\n                handleChange,\r\n                values,\r\n                handleSubmit,\r\n                errors,\r\n                isValid,\r\n                isSubmitting,\r\n                touched,\r\n                handleBlur,\r\n                setFieldTouched,\r\n                handleReset,\r\n            }) => (\r\n                    <>\r\n                        <Modal\r\n                            style={{\r\n                                top: '40px'\r\n                            }}\r\n                            title=\"Brand Edit\"\r\n                            visible={brandEditVisible}\r\n                            onOk={(e: any) => handleSubmit(e)}\r\n                            onCancel={handleCancel}\r\n                            okText='Update'\r\n                            okButtonProps={{\r\n                                loading: isSubmitting,\r\n                                htmlType: \"submit\",\r\n                                disabled: getisSubmitButtonDisabled(values, isValid)\r\n                            }}\r\n                        >\r\n                            <Input\r\n                                label='Title'\r\n                                value={values.name}\r\n                                name='name'\r\n                                isError={(touched.name && errors.name) ||\r\n                                    (!isSubmitting && updateBrandState.error['error']['name'])}\r\n\r\n                                errorString={(touched.name && errors.name) ||\r\n                                    (!isSubmitting && updateBrandState.error['error']['name'])}\r\n                                onChange={(e: any) => {\r\n                                    handleChange(e);\r\n                                    setFieldTouched('name');\r\n                                }}\r\n                            />\r\n                            <TextArea\r\n                                rows={3}\r\n                                label='Description'\r\n                                value={values.description}\r\n                                name='description'\r\n                                isError={(touched.description && errors.description) ||\r\n                                    (!isSubmitting && updateBrandState.error['error']['description'])}\r\n\r\n                                errorString={(touched.description && errors.description) ||\r\n                                    (!isSubmitting && updateBrandState.error['error']['description'])}\r\n                                onChange={(e: any) => {\r\n                                    handleChange(e);\r\n                                    setFieldTouched('description');\r\n                                }}\r\n                            />\r\n\r\n                            <div\r\n                                style={{\r\n                                    marginTop: '20px'\r\n                                }}\r\n                            />\r\n\r\n\r\n                            <div className='addproductSection-left-header'\r\n\r\n                                style={{\r\n                                    marginBottom: '-5px'\r\n                                }}\r\n                            >\r\n                                <h3 className='inputFieldLabel'>Images</h3>\r\n                                {/* <div  >\r\n\t\t\t\t\t<FileOutlined />\r\n\t\t\t\t\t<span>Media Center</span>\r\n\t\t\t\t</div> */}\r\n                            </div>\r\n\r\n\r\n                            <div className='aboutToUploadImagesContainer'>\r\n\r\n                                {brandDetailData && Object.keys(brandDetailData).length > 0 && (\r\n                                    <>\r\n                                        {myImages &&\r\n                                            // @ts-ignore\r\n                                            myImages.length > 0 && myImages.map((image, index) => {\r\n                                                return (\r\n                                                    <div className='aboutToUploadImagesContainer__item'>\r\n                                                        <div\r\n                                                            className='aboutToUploadImagesContainer__item-imgContainer'\r\n                                                            onClick={() => {\r\n                                                                setCoverImageId(image.id);\r\n                                                                handleSetImageAsThumnail(image);\r\n                                                            }}\r\n                                                        >\r\n                                                            <img src={image.cover} alt={image.alt} />\r\n                                                        </div>\r\n\r\n                                                        <span\r\n                                                            onClick={() => {\r\n                                                                handleImagesDelete(image.id)\r\n                                                                handleDetachSingleImage(image.id)\r\n                                                            }\r\n\r\n                                                            }\r\n                                                            className='aboutToUploadImagesContainer__item-remove'>\r\n                                                            <CloseOutlined />\r\n                                                        </span>\r\n\r\n\r\n                                                        {coverImageId === image.id ? (\r\n                                                            <span className='aboutToUploadImagesContainer__item-cover'>\r\n                                                                <CheckOutlined />\r\n                                                            </span>\r\n                                                        ) : !coverImageId && index === 0 && (\r\n                                                            <span className='aboutToUploadImagesContainer__item-cover'>\r\n                                                                <CheckOutlined />\r\n                                                            </span>\r\n                                                        )}\r\n\r\n\r\n                                                    </div>\r\n                                                )\r\n                                            })}\r\n\r\n\r\n                                        <Tooltip\r\n                                            title={'Attach images'}>\r\n\r\n                                            <div\r\n                                                onClick={() => {\r\n                                                    setvisibleMedia(true);\r\n                                                }}\r\n                                                className='aboutToUploadImagesContainer__uploadItem'>\r\n                                                {/* <FileAddOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FileImageTwoTone />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FileImageOutlined /> */}\r\n                                                <FileImageFilled />\r\n                                                {/* <h5>\r\n\t\t\t\t\t\t\t\t\t\t\t\t     Select From Library\r\n\t\t\t\t\t\t\t\t\t\t\t<     /h5> */}\r\n                                                <span className='aboutToUploadImagesContainer__uploadItem-plus'>\r\n                                                    <PlusOutlined />\r\n                                                </span>\r\n                                            </div>\r\n                                        </Tooltip>\r\n                                    </>\r\n                                )}\r\n\r\n\r\n                            </div>\r\n\r\n                        </Modal>\r\n\r\n                        <MediaLibrary\r\n                            setvisible={setvisibleMedia}\r\n                            visible={visibleMedia}\r\n                            setmyImages={setmyImages}\r\n                            myImages={myImages}\r\n                            myGoddamnImages={myGoddamnImages}\r\n                            setMyGoddamnImages={setMyGoddamnImages}\r\n                            isModalOpenForImages={true}\r\n\r\n                        />\r\n                    </>\r\n                )}\r\n        </Formik>\r\n\r\n\r\n\r\n\r\n    );\r\n};\r\n\r\nexport default AddNewBrand;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useParams } from \"react-router\";\r\n\r\n\r\n// import hooks\r\nimport { useHandleFetch } from \"../../hooks\";\r\n\r\n// import lib\r\nimport {\r\n    FileOutlined,\r\n    InboxOutlined,\r\n    RadiusUpleftOutlined,\r\n    RadiusUprightOutlined,\r\n    RadiusBottomleftOutlined,\r\n    RadiusBottomrightOutlined,\r\n    PlusOutlined,\r\n    DeleteOutlined,\r\n    EditOutlined,\r\n    CheckCircleOutlined\r\n} from '@ant-design/icons';\r\n\r\nimport { Skeleton, Empty, Popconfirm, Upload, message, Switch, Select, Button, notification, Table, Space, Input as CoolInput, Tooltip, Modal } from 'antd';\r\n\r\n\r\n// import components\r\nimport { DataTableSkeleton } from \"../../components/Placeholders\";\r\nimport BrandEdit from \"./BrandEdit\";\r\n\r\n\r\nconst { Column, ColumnGroup } = Table;\r\nconst { Search } = CoolInput;\r\n\r\n\r\ninterface Props {\r\n    productRecord?: any;\r\n}\r\n\r\nconst NewBrandDetail = (props: Props) => {\r\n    const [brandDetailState, handleBrandDetailFetch] = useHandleFetch({}, 'brandDetail');\r\n    const [brandProductsState, handleBrandProductsFetch] = useHandleFetch({}, 'brandProducts');\r\n\r\n    const params = useParams();\r\n    const brandId = params['id'];\r\n    const [brandEditVisible, setBrandEditVisible] = useState(false);\r\n\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        const getBrandDetail = async () => {\r\n            await handleBrandDetailFetch({\r\n                urlOptions: {\r\n                    placeHolders: {\r\n                        id: brandId\r\n                    }\r\n                }\r\n            })\r\n        };\r\n\r\n        getBrandDetail();\r\n\r\n    }, [brandId]);\r\n\r\n    useEffect(() => {\r\n\r\n        const getBrandProducts = async () => {\r\n            await handleBrandProductsFetch({\r\n                urlOptions: {\r\n                    placeHolders: {\r\n                        id: brandId\r\n                    }\r\n                }\r\n            })\r\n        };\r\n\r\n        getBrandProducts();\r\n\r\n    }, [brandId]);\r\n\r\n\r\n\r\n\r\n    console.log('brandProductsState', brandProductsState);\r\n\r\n    console.log('brandParams', params);\r\n\r\n\r\n    return (\r\n        <div className='brandDetailContainer'>\r\n\r\n\r\n\r\n\r\n            <div className='brandDetailContainer__heading'>\r\n                <h3>\r\n                    Brand Detail\r\n                </h3>\r\n\r\n\r\n                {brandDetailState.done && brandDetailState.data && (Object.keys(brandDetailState.data).length > 0) && (\r\n                    <>\r\n                        <BrandEdit\r\n                            brandEditVisible={brandEditVisible}\r\n                            setBrandEditVisible={setBrandEditVisible}\r\n                            brandDetailData={brandDetailState.data}\r\n                        />\r\n                        <Button\r\n                            onClick={() => setBrandEditVisible(true)}\r\n                            type='link'\r\n                            icon={<EditOutlined />}\r\n                        >\r\n                            Edit\r\n                      </Button>\r\n                    </>\r\n                )}\r\n\r\n            </div>\r\n            <Skeleton\r\n                avatar paragraph={{ rows: 3 }}\r\n                loading={brandDetailState.isLoading}>\r\n                {brandDetailState.done && brandDetailState.data && !(Object.keys(brandDetailState.data).length > 0) && (\r\n                    <Empty description='No Brand found' image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n                )}\r\n\r\n                {brandDetailState.done && brandDetailState.data && (Object.keys(brandDetailState.data).length > 0) && (\r\n                    <div className='brandDetailContainer__header'>\r\n                        <div className='brandDetailContainer__header-coverContainer'>\r\n                            <img src={brandDetailState.data['cover'] && brandDetailState.data['cover']['cover']} alt=\"\" />\r\n                        </div>\r\n                        <div className='brandDetailContainer__header-info'>\r\n                            <h2>\r\n                                {brandDetailState.data['name']}\r\n                            </h2>\r\n                            <h3>\r\n                                {brandDetailState.data['description']}\r\n                            </h3>\r\n\r\n                            {brandDetailState.data['url'] && (\r\n                                <h3>\r\n                                    URL:\r\n                                    <span>\r\n                                        {brandDetailState.data['url']}\r\n                                    </span>\r\n\r\n                                </h3>\r\n                            )}\r\n                        </div>\r\n                    </div>\r\n                )}\r\n\r\n            </Skeleton>\r\n\r\n            <div className='brandDetailContainer__heading'>\r\n                <h3>\r\n                    Products\r\n                </h3>\r\n            </div>\r\n            <div className='brandDetailContainer__body'>\r\n                {brandProductsState.isLoading && <DataTableSkeleton />}\r\n                {brandProductsState.done && !(brandProductsState.data.length > 0) && (\r\n                    <div style={{\r\n                        marginTop: '100px'\r\n                    }}>\r\n                        <Empty description='No Products exists for this brand' image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n                    </div>\r\n                )}\r\n\r\n                {brandProductsState.done && brandProductsState.data && brandProductsState.data.length > 0 && (\r\n                    <>\r\n                        <Table\r\n                            style={{\r\n                                paddingTop: '10px',\r\n                                borderRadius: '5px !important',\r\n                                overflow: 'hidden',\r\n                                boxShadow: '0 0.125rem 0.625rem rgba(227, 231, 250, 0.3), 0 0.0625rem 0.125rem rgba(206, 220, 233, 0.4)'\r\n                            }}\r\n                            // expandable={{\r\n                            //     expandedRowRender: record => <p style={{ margin: 0 }}>{record.name}</p>,\r\n                            //     rowExpandable: record => record.name !== 'Not Expandable',\r\n                            //   }}\r\n                            // bordered={true}\r\n                            size='small'\r\n                            // pagination={false}\r\n                            dataSource={brandProductsState.data}\r\n                            tableLayout={'auto'}\r\n                            onHeaderRow={column => {\r\n                                return {\r\n                                    style: {\r\n                                        color: 'red !important'\r\n                                    }\r\n\r\n                                };\r\n                            }}\r\n                        >\r\n                            <Column\r\n                                title=\"\"\r\n                                dataIndex=\"cover\"\r\n                                key=\"id\"\r\n                                width={'80px'}\r\n\r\n                                className='classnameofthecolumn'\r\n\r\n                                render={(cover, record: any) => (\r\n                                    <>\r\n                                        <img\r\n                                            onClick={() => {\r\n                                                // go to product detail\r\n                                            }}\r\n                                            src={cover} alt='cover img' style={{\r\n                                                height: '40px',\r\n                                                width: '40px',\r\n                                                objectFit: \"contain\",\r\n                                                borderRadius: '3px',\r\n                                                cursor: 'pointer'\r\n                                            }} />\r\n\r\n\r\n\r\n\r\n                                    </>\r\n                                )}\r\n                            />\r\n\r\n                            <Column\r\n                                title=\"Name\"\r\n                                dataIndex=\"name\"\r\n                                key=\"id\"\r\n                                className='classnameofthecolumn'\r\n                                render={(text, record: any) => (\r\n                                    <>\r\n                                        <h4\r\n                                            onClick={() => {\r\n                                                // go to product detail\r\n                                            }}\r\n                                            style={{\r\n                                                fontWeight: 400,\r\n                                                color: '#555',\r\n                                                cursor: 'pointer'\r\n\r\n                                            }}>\r\n                                            {text}\r\n                                        </h4>\r\n\r\n\r\n                                    </>\r\n                                )}\r\n\r\n                            />\r\n\r\n                            <Column\r\n                                title=\"Offer Price\"\r\n                                dataIndex=\"offerPrice\"\r\n                                key=\"id\"\r\n                                className='classnameofthecolumn'\r\n\r\n                            />\r\n\r\n\r\n                            <Column\r\n                                title=\"Price\"\r\n                                dataIndex=\"price\"\r\n                                key=\"id\"\r\n                                className='classnameofthecolumn'\r\n\r\n                            />\r\n\r\n                        </Table>\r\n                    </>\r\n                )}\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NewBrandDetail\r\n","import React from 'react';\r\nimport { notification } from 'antd';\r\nimport {\r\n    CheckCircleOutlined,\r\n    ExclamationCircleOutlined\r\n} from '@ant-design/icons';\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Succeed',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n    });\r\n};\r\n\r\n\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n    notification.error({\r\n        message: message || 'Something Went Wrong',\r\n        description: '',\r\n        icon: <ExclamationCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n    });\r\n};\r\n\r\n\r\nexport {\r\n    openSuccessNotification,\r\n    openErrorNotification\r\n}","import React, { useEffect, useState } from 'react';\r\n\r\n\r\n// import hooks\r\nimport { useHandleFetch } from '../../hooks';\r\n\r\n// import components \r\nimport Empty from \"../../components/Empty\";\r\n\r\n\r\n// import libraries \r\nimport { Button, Tag, Input, Spin } from 'antd';\r\nimport {\r\n  PlusOutlined\r\n} from '@ant-design/icons';\r\n\r\n\r\n\r\n\r\nconst { CheckableTag } = Tag;\r\nconst { Search } = Input;\r\n\r\ninterface Props {\r\n  setTagIds?: any;\r\n  selectedTags?: any;\r\n  setSelectedTags?: any;\r\n}\r\n\r\n\r\nconst Tags = ({\r\n  setTagIds,\r\n  setSelectedTags,\r\n  selectedTags\r\n\r\n}: Props) => {\r\n  const [options, setoptions] = useState([]);\r\n  const [selectedOpions, setselectedOptions] = useState([]);\r\n  const [tagState, handleTagListFetch] = useHandleFetch({}, 'tagList');\r\n  const [searchValue, setsearchValue] = useState('');\r\n\r\n\r\n  const handleChange = (tag, checked) => {\r\n    const nextSelectedTags = checked ? [...selectedTags, tag] : selectedTags.filter(t => t !== tag);\r\n    setSelectedTags(nextSelectedTags);\r\n\r\n    if (tagState.done && tagState.data.length > 0 && nextSelectedTags.length > 0) {\r\n      const selectedCategoryIds = nextSelectedTags.map((item) => {\r\n        const selectedcategory = tagState.data.find(\r\n          (cat) => cat.name.toLowerCase() === item.toLowerCase()\r\n        );\r\n        if (selectedcategory) {\r\n          return selectedcategory.id;\r\n        }\r\n      });\r\n      setTagIds(selectedCategoryIds);\r\n    }\r\n  }\r\n\r\n\r\n  useEffect(() => {\r\n    if (tagState.done && tagState.data.length > 0 && selectedTags.length > 0) {\r\n      const selectedCategoryIds = selectedTags.map((item) => {\r\n        const selectedcategory = tagState.data.find(\r\n          (cat) => cat.id === item\r\n        );\r\n        if (selectedcategory) {\r\n          return selectedcategory.name;\r\n        }\r\n      });\r\n      setSelectedTags(selectedCategoryIds);\r\n    }\r\n  }, [tagState]);\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    const setTags = async () => {\r\n      const tagListRes = await handleTagListFetch({\r\n        urlOptions: {\r\n          params: {\r\n            isSubCategory: false\r\n          }\r\n        }\r\n      });\r\n\r\n      // @ts-ignoref\r\n      if (tagListRes && tagListRes.length > 0) {\r\n        // @ts-ignore\r\n        const tagOptions = tagListRes.map((tag) => {\r\n          return tag.name\r\n        });\r\n        setoptions(tagOptions);\r\n      }\r\n\r\n    };\r\n\r\n    setTags();\r\n  }, []);\r\n\r\n\r\n\r\n  // const handleChange = (selectItems) => {\r\n  //   setselectedOptions(selectItems)\r\n\r\n  //   if (tagState.done && tagState.data.length > 0 && selectItems.length > 0) {\r\n  //     const selectedCategoryIds = selectItems.map((item) => {\r\n  //       const selectedcategory = tagState.data.find(\r\n  //         (cat) => cat.name.toLowerCase() === item.toLowerCase()\r\n  //       );\r\n  //       if (selectedcategory) {\r\n  //         return selectedcategory.id;\r\n  //       }\r\n  //     });\r\n  //     setTagIds(selectedCategoryIds);\r\n  //   }\r\n\r\n\r\n  // }\r\n\r\n\r\n  const onSearchChange = (e) => {\r\n    setsearchValue(e.target.value);\r\n\r\n    if (e.target.value === '') {\r\n      if (tagState.data && tagState.data.length > 0) {\r\n        // @ts-ignore\r\n        const categoryNames = tagState.data.map((cat) => cat.name);\r\n        setoptions(categoryNames);\r\n      }\r\n    } else {\r\n      const newOptions =\r\n        options.length > 0\r\n          ? options.filter((option) => {\r\n            return option.toLowerCase().includes(searchValue.toLowerCase());\r\n          })\r\n          : [];\r\n\r\n      setoptions(newOptions);\r\n    }\r\n  };\r\n\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n\r\n      {tagState.isLoading && (\r\n        <div style={{\r\n          padding: '15px 0',\r\n          width: '100%',\r\n          height: \"100%\",\r\n          display: \"flex\",\r\n          justifyContent: 'center',\r\n          alignItems: 'center'\r\n        }}>\r\n          <Spin />\r\n        </div>\r\n      )}\r\n\r\n\r\n      {tagState.done && !(tagState.data.length > 0) && (\r\n        <div style={{\r\n          width: '100%',\r\n          height: \"100%\",\r\n          display: \"flex\",\r\n          justifyContent: 'center',\r\n          alignItems: 'center'\r\n        }}>\r\n          <Empty title='No Tag found' height={100} />\r\n        </div>\r\n      )}\r\n\r\n\r\n      {/* \r\n      {tagState.done && tagState.data.length > 0 && options.length > 0 && <Select\r\n        mode=\"multiple\"\r\n        placeholder=\"search tags\"\r\n        value={selectedOpions}\r\n        onChange={handleChange}\r\n        style={{ width: '100%' }}\r\n      >\r\n        {options.filter(o => !selectedOpions.includes(o)).map(item => (\r\n          <Select.Option key={item} value={item}>\r\n            {item}\r\n          </Select.Option>\r\n        ))}\r\n      </Select>} */}\r\n\r\n      {tagState.done && tagState.data.length > 0 && options.length > 0 && (\r\n        <>\r\n          <div className='addProduct__categoryBoxContainer-searchBox'>\r\n            <Search\r\n              width={'90%'}\r\n              style={{\r\n                height: '30px',\r\n                borderRadius: '3px !important',\r\n                borderColor: '#eee !important'\r\n              }}\r\n              size='middle'\r\n              placeholder='top, hot'\r\n              onSearch={(value) => console.log(value)}\r\n              onChange={onSearchChange}\r\n            />\r\n          </div>\r\n\r\n          {options.map(tag => (\r\n            <>\r\n              <CheckableTag\r\n                key={tag}\r\n                checked={selectedTags.indexOf(tag) > -1}\r\n                onChange={checked => handleChange(tag, checked)}\r\n              >\r\n                {tag}\r\n              </CheckableTag>\r\n            </>\r\n          ))}\r\n        </>\r\n      )}\r\n\r\n\r\n\r\n\r\n      {/* \r\n      <div style={{\r\n        marginTop: '15px'\r\n      }}>\r\n\r\n      </div>\r\n      <Button\r\n\r\n        // type=\"primary\"\r\n        className='btnSecondaryPlusOutline'\r\n        icon={<PlusOutlined />}\r\n      >\r\n        Add New\r\n      </Button> */}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Tags\r\n","import React, { useEffect, useState } from 'react';\r\n\r\n\r\n// import hooks\r\nimport { useHandleFetch } from '../../hooks';\r\n\r\n// import components \r\nimport Empty from \"../../components/Empty\";\r\n\r\n\r\n// import libraries \r\nimport { Select, Button, Spin } from 'antd';\r\nimport {\r\n\tPlusOutlined\r\n} from '@ant-design/icons';\r\n\r\n\r\ninterface Props {\r\n\tsetBrandId?: any;\r\n\tbrandId?: any;\r\n\tproductDetailState?: any;\r\n}\r\n\r\nconst { Option } = Select;\r\n\r\nconst Brands = ({ setBrandId, brandId, productDetailState }: Props) => {\r\n\tconst [options, setoptions] = useState([]);\r\n\tconst [selectedBrandId, setSelectedBrandId] = useState('');\r\n\tconst [brandState, handleTagListFetch] = useHandleFetch({}, 'brandList');\r\n\r\n\tfunction onChange(value) {\r\n\t\tsetSelectedBrandId(value);\r\n\t\tsetBrandId(value);\r\n\t\t// console.log(`selected ${value}`);\r\n\t}\r\n\r\n\tfunction onBlur() {\r\n\t\t// console.log('blur');\r\n\t}\r\n\r\n\tfunction onFocus() {\r\n\t\t// console.log('focus');\r\n\t}\r\n\r\n\tfunction onSearch(val) {\r\n\t\t// console.log('search:', val);\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tconst setBrands = async () => {\r\n\t\t\tconst brandListRes = await handleTagListFetch({});\r\n\r\n\t\t\t// @ts-ignore\r\n\t\t\tif (brandListRes && brandListRes.length > 0) {\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\tconst brandOptions = brandListRes.map((brand) => {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tvalue: brand.id,\r\n\t\t\t\t\t\tname: brand.name\r\n\t\t\t\t\t};\r\n\t\t\t\t});\r\n\t\t\t\tsetoptions(brandOptions);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tsetBrands();\r\n\t}, []);\r\n\r\n\treturn (\r\n\t\t<>\r\n\r\n\t\t\t<div></div>\r\n\r\n\t\t\t{brandState.isLoading && (\r\n\t\t\t\t<div style={{\r\n\t\t\t\t\tpadding: '15px 0',\r\n\t\t\t\t\twidth: '100%',\r\n\t\t\t\t\theight: \"100%\",\r\n\t\t\t\t\tdisplay: \"flex\",\r\n\t\t\t\t\tjustifyContent: 'center',\r\n\t\t\t\t\talignItems: 'center'\r\n\t\t\t\t}}>\r\n\t\t\t\t\t<Spin />\r\n\t\t\t\t</div>\r\n\t\t\t)}\r\n\r\n\r\n\r\n\t\t\t{brandState.done && !(brandState.data.length > 0) && (\r\n\t\t\t\t<div style={{\r\n\t\t\t\t\twidth: '100%',\r\n\t\t\t\t\theight: \"100%\",\r\n\t\t\t\t\tdisplay: \"flex\",\r\n\t\t\t\t\tjustifyContent: 'center',\r\n\t\t\t\t\talignItems: 'center'\r\n\t\t\t\t}}>\r\n\t\t\t\t\t<Empty title='No Brand found' height={100} />\r\n\t\t\t\t</div>\r\n\t\t\t)}\r\n\r\n\r\n\t\t\t{brandState.done && brandState.data && brandState.data.length > 0 && options.length > 0 && (\r\n\r\n\t\t\t\t<Select\r\n\t\t\t\t\tshowSearch\r\n\t\t\t\t\tstyle={{ width: '210px', borderRadius: '6px' }}\r\n\t\t\t\t\tplaceholder='Select a Brand'\r\n\t\t\t\t\toptionFilterProp='children'\r\n\t\t\t\t\tonChange={onChange}\r\n\t\t\t\t\tonFocus={onFocus}\r\n\t\t\t\t\tonBlur={onBlur}\r\n\t\t\t\t\tonSearch={onSearch}\r\n\t\t\t\t\tdefaultValue={brandId}\r\n\t\t\t\t\tfilterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n\t\t\t\t>\r\n\t\t\t\t\t{brandState.done &&\r\n\t\t\t\t\t\tbrandState.data.length > 0 &&\r\n\t\t\t\t\t\toptions.map((option) => {\r\n\t\t\t\t\t\t\treturn <Option value={option.value}>{option.name}</Option>;\r\n\t\t\t\t\t\t})}\r\n\t\t\t\t</Select>\r\n\t\t\t)}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\t\t\t{/* \r\n\t\t\t<div style={{\r\n\t\t\t\tmarginTop: '15px'\r\n\t\t\t}}>\r\n\r\n\t\t\t</div>\r\n\t\t\t<Button\r\n\r\n\t\t\t\t// type=\"primary\"\r\n\t\t\t\tclassName='btnSecondaryPlusOutline'\r\n\t\t\t\ticon={<PlusOutlined />}\r\n\t\t\t>\r\n\t\t\t\tAdd New\r\n      </Button> */}\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default Brands;\r\n","import React, { useState, useEffect } from 'react';\r\n\r\n// import components \r\nimport Empty from \"../../components/Empty\";\r\n\r\n// import hoooks\r\nimport { useHandleFetch } from '../../hooks';\r\n\r\n\r\n// import libraries \r\nimport { Input, Tree, Button, Spin } from 'antd';\r\nimport {\r\n\tPlusOutlined\r\n} from '@ant-design/icons';\r\n\r\n\r\nconst { Search } = Input;\r\n\r\n\r\n\r\ninterface Props {\r\n\tsetcategoryIds?: any;\r\n\tcategoryOptions?: any;\r\n\tsetCategoryOptions?: any;\r\n}\r\n\r\n\r\nconst Categories = ({ setcategoryIds, categoryOptions, setCategoryOptions }: Props) => {\r\n\tconst [options, setoptions] = useState([]);\r\n\tconst [searchValue, setsearchValue] = useState('');\r\n\r\n\tconst [categoryState, handleCategoryListFetch] = useHandleFetch({}, 'categorySelectist');\r\n\r\n\tuseEffect(() => {\r\n\t\tconst setCategories = async () => {\r\n\t\t\tconst categoryListRes = await handleCategoryListFetch({});\r\n\r\n\t\t\t// @ts-ignore\r\n\t\t\tif (categoryListRes && categoryListRes.length > 0) {\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\tsetoptions(categoryListRes);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tsetCategories();\r\n\t}, []);\r\n\r\n\tconst onSelect = (selectedKeys, info) => {\r\n\t\t// console.log('selectedKeys', selectedKeys, info);\r\n\t};\r\n\r\n\r\n\tconst onCheck = (checkedKeys, info) => {\r\n\t\tconst checkedIds = checkedKeys.checked || [];\r\n\t\tsetcategoryIds(checkedIds);\r\n\t\tsetCategoryOptions(checkedIds);\r\n\t};\r\n\r\n\tconst onSearchChange = (e) => {\r\n\t\tsetsearchValue(e.target.value);\r\n\r\n\t\tif (e.target.value === '') {\r\n\t\t\tif (categoryState.data && categoryState.data.length > 0) {\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\tconst categoryNames = categoryState.data.map((cat) => cat.name);\r\n\t\t\t\tsetoptions(categoryNames);\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tconst newOptions =\r\n\t\t\t\toptions.length > 0\r\n\t\t\t\t\t? options.filter((option) => {\r\n\t\t\t\t\t\treturn option.toLowerCase().includes(searchValue.toLowerCase());\r\n\t\t\t\t\t})\r\n\t\t\t\t\t: [];\r\n\r\n\t\t\tsetoptions(newOptions);\r\n\t\t}\r\n\t};\r\n\r\n\tconsole.log('categoryState', categoryState);\r\n\tconsole.log('optionsCat', options);\r\n\r\n\r\n\treturn (\r\n\t\t<div className='addProduct__categoryBoxContainer'>\r\n\r\n\t\t\t{categoryState.isLoading && (\r\n\t\t\t\t<div style={{\r\n\t\t\t\t\tpadding: '15px 0',\r\n\t\t\t\t\twidth: '100%',\r\n\t\t\t\t\theight: \"100%\",\r\n\t\t\t\t\tdisplay: \"flex\",\r\n\t\t\t\t\tjustifyContent: 'center',\r\n\t\t\t\t\talignItems: 'center'\r\n\t\t\t\t}}>\r\n\t\t\t\t\t<Spin />\r\n\t\t\t\t</div>\r\n\t\t\t)}\r\n\r\n\r\n\t\t\t{categoryState.done && !(categoryState.data.length > 0) && (\r\n\t\t\t\t<div style={{\r\n\t\t\t\t\twidth: '100%',\r\n\t\t\t\t\theight: \"100%\",\r\n\t\t\t\t\tdisplay: \"flex\",\r\n\t\t\t\t\tjustifyContent: 'center',\r\n\t\t\t\t\talignItems: 'center'\r\n\t\t\t\t}}>\r\n\t\t\t\t\t<Empty title='No category found' height={100} />\r\n\t\t\t\t</div>\r\n\t\t\t)}\r\n\r\n\t\t\t{categoryState.done && categoryState.data.length > 0 && options.length > 0 && (\r\n\t\t\t\t<>\r\n\t\t\t\t\t<div className='addProduct__categoryBoxContainer-searchBox'>\r\n\t\t\t\t\t\t<Search\r\n\t\t\t\t\t\t\twidth={'100%'}\r\n\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\theight: '30px',\r\n\t\t\t\t\t\t\t\tborderRadius: '3px !important',\r\n\t\t\t\t\t\t\t\tborderColor: '#eee !important'\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\tsize='middle'\r\n\t\t\t\t\t\t\tplaceholder='cloths, grocery'\r\n\t\t\t\t\t\t\tonSearch={(value) => console.log(value)}\r\n\t\t\t\t\t\t\tonChange={onSearchChange}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t// marginLeft: \"-20px\",\r\n\t\t\t\t\t}}>\r\n\t\t\t\t\t\t{options.length > 0 && (\r\n\t\t\t\t\t\t\t<Tree\r\n\t\t\t\t\t\t\t\tcheckable\r\n\t\t\t\t\t\t\t\tcheckedKeys={categoryOptions}\r\n\t\t\t\t\t\t\t\tonSelect={onSelect}\r\n\t\t\t\t\t\t\t\tonCheck={onCheck}\r\n\t\t\t\t\t\t\t\ttreeData={options}\r\n\t\t\t\t\t\t\t\tdefaultExpandAll={true}\r\n\t\t\t\t\t\t\t\tcheckStrictly={true}\r\n\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</>\r\n\r\n\t\t\t)}\r\n\t\t\t{/* <div style={{\r\n\t\t\t\tmarginTop: '15px'\r\n\t\t\t}}>\r\n\r\n\t\t\t</div>\r\n\t\t\t<Button\r\n\r\n\t\t\t\t// type=\"primary\"\r\n\t\t\t\tclassName='btnSecondaryPlusOutline'\r\n\t\t\t\ticon={<PlusOutlined />}\r\n\t\t\t>\r\n\t\t\t\tAdd New\r\n      </Button> */}\r\n\r\n\t\t\t{/* <CheckboxGroup options={options} value={checkedList} onChange={onChange} /> */}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Categories;\r\n","import React from 'react';\r\nimport { Form, Input } from 'antd';\r\n\r\n\r\ninterface Props {\r\n    label?: string;\r\n    type?: string;\r\n    defaultValue?:string;\r\n    value?: string; \r\n    onChange?: any; \r\n    disabled?: boolean; \r\n    isError?: boolean; \r\n    errorString?: string; \r\n    name?:string;\r\n    size?: any; \r\n}\r\n\r\nconst Demo = ({ label, type, defaultValue, value, onChange, disabled, isError, errorString,  name, size='middle'}: Props) => {\r\n    return (\r\n        <>\r\n        {label && <h3 className='inputFieldLabel-small'>\r\n                {label}\r\n            </h3>}\r\n           \r\n            <Form.Item\r\n            validateStatus={isError ? \"error\" : \"\"}\r\n            // hasFeedback validateStatus=\"success\"\r\n            help={errorString}\r\n            // rules={[{ required: true }]}\r\n                >\r\n                     <Input\r\n                     size={size}\r\n                    allowClear \r\n                    name={name}\r\n                    disabled={disabled}\r\n                    value={value}\r\n                    onChange={onChange}\r\n                    className='inputclassName-small' />\r\n               \r\n            </Form.Item>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Demo; ","import React, { useState, useEffect } from 'react';\r\nimport { AutoComplete } from 'antd';\r\n\r\nimport InputSmall from '../../components/Field/InputSmall';\r\nimport { useFetch } from \"../../hooks\";\r\nimport {\r\n    DeleteOutlined\r\n} from '@ant-design/icons';\r\n\r\nconst Complete = ({ setAttributeList, attributeList, attribute }) => {\r\n\r\n    const [suggestedOptions, setsuggesteOptions] = useState([]);\r\n    const attributeLisState = useFetch([], [], 'attributeList', {});\r\n\r\n\r\n    const [attributeItem, setAttributeITem] = useState({\r\n        name: attribute.name,\r\n        value: attribute.value\r\n    })\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        const positionInAttribute = () => {\r\n            return attributeList.map(item => item.id).indexOf(attribute.id);\r\n        }\r\n\r\n        const index = positionInAttribute();\r\n\r\n        const updatedItem = Object.assign({}, attributeList[index], { ...attributeItem });\r\n        const updateAttributeList = [...attributeList.slice(0, index), updatedItem, ...attributeList.slice(index + 1)];\r\n        setAttributeList(updateAttributeList);\r\n\r\n    }, [attributeItem])\r\n\r\n\r\n    const handleAttributeDelete = () => {\r\n\r\n        const updateAttributeList = attributeList.filter(item => item.id !== attribute.id);\r\n        setAttributeList(updateAttributeList);\r\n    }\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        if (attributeLisState.data && Object.keys(attributeLisState.data).length > 0) {\r\n            const options = Object.keys(attributeLisState.data);\r\n            const manupulatedOptions = options.map(option => {\r\n                return {\r\n                    value: option\r\n                }\r\n            })\r\n            setsuggesteOptions(manupulatedOptions);\r\n        };\r\n    }, [attributeLisState.data]);\r\n\r\n\r\n\r\n\r\n\r\n\r\n    const handleAttributeSelect = (value) => {\r\n\r\n        if (attributeLisState && Object.keys(attributeLisState.data).length > 0) {\r\n            if (attributeLisState.data[value]) {\r\n                setAttributeITem({\r\n                    ...attribute,\r\n                    name: value,\r\n                    value: attributeLisState.data[value]\r\n                })\r\n            }\r\n\r\n        }\r\n\r\n        else {\r\n            setAttributeITem({\r\n                ...attribute,\r\n                name: value\r\n            })\r\n        }\r\n\r\n\r\n    }\r\n\r\n    const handleAttributeValueChange = (e) => {\r\n        setAttributeITem({\r\n            ...attribute,\r\n            value: e.target.value\r\n        });\r\n    }\r\n\r\n    return (\r\n        <>\r\n\r\n            <div\r\n                key={attribute.id}\r\n                className='addProductGridContainer__item-body-variationCard-item-attribute-item'>\r\n                <div\r\n                    onClick={handleAttributeDelete}\r\n                    className='addProductGridContainer__item-body-variationCard-item-attribute-item-delete'>\r\n                    <DeleteOutlined />\r\n                </div>\r\n\r\n                <h3 className='inputFieldLabel-small'>\r\n                    Name\r\n                </h3>\r\n                <AutoComplete\r\n                    value={attribute.name}\r\n                    style={{ width: '100%' }}\r\n                    options={suggestedOptions}\r\n                    placeholder=\"attribute\"\r\n                    onChange={handleAttributeSelect}\r\n                    filterOption={(inputValue, suggestedOption) =>\r\n                        suggestedOption.value.toUpperCase().indexOf(inputValue.toUpperCase()) !== -1\r\n                    }\r\n                />\r\n\r\n                {attribute.name && (\r\n                    <>\r\n                        <div style={{ marginTop: '10px' }}></div>\r\n                        <InputSmall\r\n                            label='Value'\r\n                            value={attribute.value}\r\n                            name='value'\r\n                            onChange={handleAttributeValueChange}\r\n                        />\r\n                    </>\r\n                )}\r\n\r\n\r\n            </div>\r\n\r\n\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Complete;\r\n","import React, { useState } from 'react';\r\nimport Attributes from \"./Attributes\";\r\nimport AddAttributeValues from \"../attribute/AddAttributeValues\";\r\nimport InputSmall from '../../components/Field/InputSmall';\r\nimport { Button } from 'antd';\r\nimport {\r\n\r\n\tPlusOutlined,\r\n\tCheckOutlined\r\n} from '@ant-design/icons';\r\n\r\ninterface Props {\r\n\thandleAddPricing: any;\r\n}\r\n\r\nconst Pricing = ({\r\n\thandleAddPricing\r\n}: Props) => {\r\n\r\n\tconst [price, setprice] = useState({\r\n\t\tregular: \"\",\r\n\t\toffer: \"\"\r\n\t});\r\n\tconst [stock, setStock] = useState({\r\n\t\tavailable: \"\",\r\n\t\tminimum: \"\"\r\n\t});\r\n\r\n\r\n\tconst [attributeList, setAttributeList] = useState([]);\r\n\r\n\tconst handlePriceChange = e => {\r\n\t\tconst name = e.target.name;\r\n\t\tconst value = e.target.value;\r\n\r\n\r\n\t\tsetprice({\r\n\t\t\t...price,\r\n\t\t\t[name]: value\r\n\t\t});\r\n\t};\r\n\r\n\tconst handleStockChange = e => {\r\n\t\tconst name = e.target.name;\r\n\t\tconst value = e.target.value;\r\n\r\n\t\tsetStock({\r\n\t\t\t...stock,\r\n\t\t\t[name]: value\r\n\t\t});\r\n\t};\r\n\r\n\r\n\tconst handleSavePricing = (e) => {\r\n\t\te.preventDefault();\r\n\r\n\t\tif (attributeList.length > 0) {\r\n\t\t\tconst attribute = {};\r\n\r\n\t\t\tfor (let item of attributeList) {\r\n\r\n\t\t\t\tconsole.log('itemofattribute', item);\r\n\t\t\t\tif (item['value'] && item['name']) {\r\n\t\t\t\t\tattribute[item['name']] = item['value']\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\r\n\t\t\tconst priceItem = {\r\n\t\t\t\tprice: price,\r\n\t\t\t\tstock: stock,\r\n\t\t\t\tattribute: attribute\r\n\t\t\t}\r\n\r\n\r\n\t\t\tsetprice({\r\n\t\t\t\tregular: \"\",\r\n\t\t\t\toffer: \"\"\r\n\t\t\t})\r\n\t\t\tsetStock({ available: \"\", minimum: \"\" })\r\n\t\t\thandleAddPricing(priceItem);\r\n\t\t\tsetAttributeList([]);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tconst priceItem = {\r\n\t\t\t\tprice: price,\r\n\t\t\t\tstock: stock,\r\n\t\t\t\tattribute: {}\r\n\t\t\t}\r\n\r\n\t\t\tsetprice({\r\n\t\t\t\tregular: \"\",\r\n\t\t\t\toffer: \"\"\r\n\t\t\t})\r\n\t\t\tsetStock({ available: \"\", minimum: \"\" })\r\n\t\t\tsetAttributeList([]);\r\n\t\t\thandleAddPricing(priceItem);\r\n\t\t}\r\n\r\n\t}\r\n\r\n\r\n\tconst handleAddAttribute = () => {\r\n\t\tsetAttributeList([...attributeList, {\r\n\t\t\tname: '',\r\n\t\t\tvalue: '',\r\n\t\t\tid: `${attributeList.length}`\r\n\t\t}])\r\n\t}\r\n\r\n\r\n\tconst getiCreatePricingIsDisabled = () => {\r\n\t\tif (!price.regular || !stock.available) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\telse return false;\r\n\t}\r\n\r\n\t// console.log('attributeList', attributeList);\r\n\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<div className='addProductGridContainer__item-body-variationCard'>\r\n\r\n\t\t\t\t<div className='addProductGridContainer__item-body-variationCard-left'>\r\n\r\n\t\t\t\t\t<div className='addProductGridContainer__item-body-variationCard-item'>\r\n\t\t\t\t\t\t<h4>\r\n\t\t\t\t\t\t\tPrice\r\n\t\t\t\t</h4>\r\n\t\t\t\t\t\t<div className='addProductGridContainer__item-body-variationCard-item-container'>\r\n\t\t\t\t\t\t\t<div className='addProductGridContainer__item-body-variationCard-item-container-left'>\r\n\t\t\t\t\t\t\t\t<InputSmall\r\n\t\t\t\t\t\t\t\t\tlabel='Regular  *'\r\n\t\t\t\t\t\t\t\t\tvalue={price.regular}\r\n\t\t\t\t\t\t\t\t\tname='regular'\r\n\t\t\t\t\t\t\t\t\tonChange={handlePriceChange}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className='addProductGridContainer__item-body-variationCard-item-container-right'>\r\n\t\t\t\t\t\t\t\t<InputSmall\r\n\t\t\t\t\t\t\t\t\tsize='small'\r\n\t\t\t\t\t\t\t\t\tlabel='Offer'\r\n\t\t\t\t\t\t\t\t\tvalue={price.offer}\r\n\t\t\t\t\t\t\t\t\tname='offer'\r\n\t\t\t\t\t\t\t\t\tonChange={handlePriceChange}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\t\t\t\t\t\t<div className='addProductGridContainer__item-body-variationCard-item'>\r\n\t\t\t\t\t\t\t<h4>\r\n\t\t\t\t\t\t\t\tStock\r\n\t\t\t\t</h4>\r\n\t\t\t\t\t\t\t<div className='addProductGridContainer__item-body-variationCard-item-container'>\r\n\t\t\t\t\t\t\t\t<div className='addProductGridContainer__item-body-variationCard-item-container-left'>\r\n\t\t\t\t\t\t\t\t\t<InputSmall\r\n\t\t\t\t\t\t\t\t\t\tlabel='Available  *'\r\n\t\t\t\t\t\t\t\t\t\tvalue={stock.available}\r\n\t\t\t\t\t\t\t\t\t\tname='available'\r\n\t\t\t\t\t\t\t\t\t\tonChange={handleStockChange}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\r\n\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className='addProductGridContainer__item-body-variationCard-item-container-right'>\r\n\r\n\t\t\t\t\t\t\t\t\t<InputSmall\r\n\t\t\t\t\t\t\t\t\t\tlabel='Minimum'\r\n\t\t\t\t\t\t\t\t\t\tvalue={stock.minimum}\r\n\t\t\t\t\t\t\t\t\t\tname='minimum'\r\n\t\t\t\t\t\t\t\t\t\tonChange={handleStockChange}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\t\t\t\t\t<div className='addProductGridContainer__item-body-variationCard-right'>\r\n\t\t\t\t\t\t<div className='addProductGridContainer__item-body-variationCard-item'>\r\n\t\t\t\t\t\t\t<h4>\r\n\t\t\t\t\t\t\t\tAttributes\r\n\t\t\t\t</h4>\r\n\t\t\t\t\t\t\t<div className='addProductGridContainer__item-body-variationCard-item-attribute'>\r\n\r\n\t\t\t\t\t\t\t\t{attributeList.map(attribute => {\r\n\t\t\t\t\t\t\t\t\treturn <Attributes\r\n\t\t\t\t\t\t\t\t\t\tattribute={attribute}\r\n\t\t\t\t\t\t\t\t\t\tattributeList={attributeList} setAttributeList={setAttributeList} />\r\n\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t<Button size='small'\r\n\t\t\t\t\t\t\t\t\tonClick={handleAddAttribute}\r\n\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\twidth: '180px',\r\n\t\t\t\t\t\t\t\t\t\tminHeight: '75px',\r\n\t\t\t\t\t\t\t\t\t\tmarginTop: '0px',\r\n\t\t\t\t\t\t\t\t\t\tborderRadius: \"8px\"\r\n\t\t\t\t\t\t\t\t\t}} type=\"dashed\" icon={<PlusOutlined />}>Add Attribute</Button>\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\r\n\r\n\t\t\t{/* <Button\r\n          // type=\"primary\"\r\n         \r\n          icon={<PlusOutlined />}\r\n          onClick={() => setAddNewCategoryVisible(true)}\r\n        >\r\n        Add New\r\n      </Button> */}\r\n\r\n\t\t\t<Button\r\n\r\n\t\t\t\tstyle={{\r\n\t\t\t\t\tmarginLeft: '10px'\r\n\t\t\t\t}}\r\n\t\t\t\tonClick={handleSavePricing}\r\n\t\t\t\tdisabled={getiCreatePricingIsDisabled()}\r\n\t\t\t\tclassName='btnAddToPrice'\r\n\t\t\t\ticon={<CheckOutlined />}\r\n\t\t\t>\r\n\t\t\t\tAdd To Pricing\r\n\t\t\t\t</Button>\r\n\r\n\r\n\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nexport default Pricing\r\n","import React, { useState, useEffect } from 'react';\r\n\r\n// import hooks \r\nimport { useHandleFetch } from '../../hooks';\r\n\r\n\r\n// import libraries \r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { message, Tooltip, Modal, Tabs, Empty, Badge } from 'antd';\r\nimport CKEditor from '@ckeditor/ckeditor5-react';\r\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\r\n\r\n\r\nimport {\r\n\tDeleteOutlined,\r\n\tFileAddOutlined,\r\n\tCheckCircleOutlined,\r\n\tFileImageFilled,\r\n\tFileImageOutlined,\r\n\tFileImageTwoTone,\r\n\tPlusOutlined,\r\n\tPlusCircleOutlined,\r\n\tCloseOutlined,\r\n\tCheckOutlined,\r\n\tInfoCircleOutlined\r\n} from '@ant-design/icons';\r\n\r\n// import ReactQuill from 'react-quill';\r\n// import 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport MediaLibrary from \"../../components/MediaLibrary\";\r\nimport DatePicker from \"../../components/Field/DatePicker\";\r\nimport { openSuccessNotification, openErrorNotification } from \"../../components/Notification\";\r\nimport Tags from \"./Tags\";\r\nimport Brands from \"./Brands\";\r\nimport Categories from \"./Categories\";\r\nimport Pricing from \"./Pricing\";\r\n\r\nconst { TabPane } = Tabs;\r\n\r\nconst validationSchema = Yup.object().shape({\r\n\tname: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\n\r\nconst initialValues = {\r\n\tname: '',\r\n\tdescription: '',\r\n\tmodel: '',\r\n\tunit: '',\r\n\tregular: '',\r\n\toffer: '',\r\n\tavailable: '',\r\n\tminimum: '',\r\n\timage: [],\r\n\turl: '',\r\n\tcover: '',\r\n\tpricing: [],\r\n\tvenue: '',\r\n\tdate: '',\r\n\ttime: '',\r\n\tpurchaseLimit: null\r\n}\r\n\r\n\r\ninterface Props {\r\n\taddNewCategoryVisible: any;\r\n\tsetAddNewCategoryVisible: any;\r\n\tproductList?: any;\r\n\tsetProductList?: any;\r\n}\r\n\r\nconst AddNewProduct = ({ addNewCategoryVisible, setAddNewCategoryVisible, productList, setProductList }: Props) => {\r\n\r\n\tconst [addProductState, handleAddProductFetch] = useHandleFetch({}, 'addProduct');\r\n\tconst [visible, setvisible] = useState(false);\r\n\tconst [myImages, setmyImages] = useState(false);\r\n\tconst [myThumbnailImage, setmyThumbnailImage] = useState(false);\r\n\tconst [isModalOpenForThumbnail, setisModalOpenForThumbnail] = useState(false);\r\n\tconst [isModalOpenForImages, setisModalOpenForImages] = useState(false);\r\n\tconst [categoryids, setcategoryIds] = useState([]);\r\n\tconst [tagIds, setTagIds] = useState([]);\r\n\tconst [brandId, setBrandId] = useState('');\r\n\tconst [pricing, setPricing] = useState([]);\r\n\tconst [coverImageId, setCoverImageId] = useState('');\r\n\tconst [categoryOptions, setCategoryOptions] = useState([]);\r\n\tconst [selectedTags, setSelectedTags] = useState([]);\r\n\tconst [date, setDateFeild] = useState('');\r\n\tconst [time, setTimeFeild] = useState('');\r\n\tconst [description, setDescription] = useState('');\r\n\r\n\r\n\tconst makeEmptyCategoryOptions = (setEmpty) => {\r\n\t\tsetEmpty([]);\r\n\t}\r\n\r\n\tconst handleSubmit = async (values: any, actions: any) => {\r\n\t\t// @ts-ignore\r\n\t\tconst imagesIds = myImages ? myImages.map(image => {\r\n\t\t\treturn image.id;\r\n\t\t}) : [];\r\n\r\n\t\tconst addProductRes = await handleAddProductFetch({\r\n\r\n\t\t\tbody: {\r\n\t\t\t\tname: values.name.trim(),\r\n\t\t\t\tdescription: description,\r\n\t\t\t\tmodel: values.model,\r\n\t\t\t\tunit: values.unit,\r\n\t\t\t\tcategory: categoryids,\r\n\t\t\t\ttags: tagIds,\r\n\t\t\t\tbrand: brandId,\r\n\t\t\t\timage: imagesIds,\r\n\t\t\t\tcover: coverImageId || imagesIds[0] ? imagesIds[0] : '',\r\n\t\t\t\tpricing: pricing,\r\n\t\t\t\t// date: date,\r\n\t\t\t\t// time: time,\r\n\t\t\t\t// venue: values.venue,\r\n\t\t\t\t// purchaseLimit: values.purchaseLimit\r\n\t\t\t},\r\n\t\t});\r\n\r\n\r\n\t\t// @ts-ignore\r\n\t\tif (addProductRes && addProductRes.status === 'ok') {\r\n\t\t\topenSuccessNotification('Product Created');\r\n\r\n\t\t\tsetProductList([...productList, {\r\n\t\t\t\tid: addProductRes['id'] || '',\r\n\t\t\t\tkey: addProductRes['id'] || '',\r\n\t\t\t\tname: addProductRes['name'] || '',\r\n\t\t\t\tdescription: addProductRes['description'] || '',\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\t...addProductRes\r\n\t\t\t}])\r\n\t\t\tsetAddNewCategoryVisible(false)\r\n\t\t\t// @ts-ignore\r\n\t\t\tsetmyImages([]);\r\n\t\t\tsetCoverImageId('');\r\n\t\t\tsetPricing([]);\r\n\t\t\tsetTagIds([]);\r\n\t\t\tsetSelectedTags([]);\r\n\t\t\tsetBrandId(\"\");\r\n\t\t\tsetcategoryIds([]);\r\n\t\t\tsetCategoryOptions([]);\r\n\t\t\tactions.resetForm();\r\n\t\t}\r\n\t\telse {\r\n\t\t\t// openErrorNotification();\r\n\t\t}\r\n\r\n\t\tactions.setSubmitting(false);\r\n\r\n\r\n\t};\r\n\r\n\r\n\r\n\tuseEffect(() => {\r\n\t\tif (!addProductState['isLoading']) {\r\n\t\t\tconst error = addProductState['error'];\r\n\t\t\tif (error['isError'] && Object.keys(error['error']).length > 0) {\r\n\r\n\r\n\t\t\t\tconst errors =\r\n\t\t\t\t\tObject.values(error['error']).length > 0\r\n\t\t\t\t\t\t? Object.values(error['error'])\r\n\t\t\t\t\t\t: [];\r\n\t\t\t\terrors.forEach((err, i) => {\r\n\t\t\t\t\tif (typeof err === 'string') {\r\n\t\t\t\t\t\topenErrorNotification(err)\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if (typeof err === 'object') {\r\n\t\t\t\t\t\tif (err && Object.keys(err).length > 0) {\r\n\t\t\t\t\t\t\tconst errs = Object.values(err);\r\n\t\t\t\t\t\t\terrs.forEach(err => {\r\n\t\t\t\t\t\t\t\topenErrorNotification(err)\r\n\t\t\t\t\t\t\t})\r\n\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t}, [addProductState])\r\n\r\n\r\n\tconst handleCancel = (e: any) => {\r\n\t\tsetAddNewCategoryVisible(false);\r\n\t};\r\n\r\n\r\n\tconst getisSubmitButtonDisabled = (values, isValid) => {\r\n\t\tif (!values.name || !(pricing.length > 0) || !isValid) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\r\n\tconst handleImagesDelete = (id) => {\r\n\t\t// @ts-ignore\r\n\t\tconst newImages = myImages && myImages.filter(image => {\r\n\t\t\treturn image.id !== id;\r\n\t\t})\r\n\r\n\t\tsetmyImages(newImages);\r\n\t}\r\n\r\n\tconst handleDeleteFromSelectedImage = () => {\r\n\r\n\t};\r\n\r\n\tconst handleThumbnailImageDelete = (id) => {\r\n\t\t// @ts-ignore\r\n\t\tconst newImages = myThumbnailImage && myThumbnailImage.filter(image => {\r\n\t\t\treturn image.id !== id;\r\n\t\t})\r\n\r\n\t\tif (newImages.length > 0) {\r\n\t\t\tsetmyThumbnailImage(newImages);\r\n\r\n\t\t}\r\n\t\telse setmyThumbnailImage(false);\r\n\t}\r\n\r\n\r\n\r\n\r\n\r\n\tconst handleAddPricing = (priceItem) => {\r\n\r\n\t\tsetPricing([{\r\n\t\t\t...priceItem,\r\n\t\t\tid: pricing.length\r\n\t\t}, ...pricing])\r\n\t\tmessage.info('Product Pricing Added');\r\n\t}\r\n\r\n\r\n\tconst handleDeletePricing = (id) => {\r\n\t\tconst newPricing = pricing.filter(item => item.id !== id);\r\n\t\tsetPricing(newPricing);\r\n\t\tmessage.info('Product Pricing Deleted');\r\n\t}\r\n\r\n\r\n\r\n\tconst isCategoryInValid = () => {\r\n\t\tif (addProductState.error['error']['category'] && !categoryids && categoryids.length) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\telse if (categoryids && categoryids.length > 0) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\r\n\tconst handleDateChange = (date, dateString) => {\r\n\t\tsetDateFeild(dateString);\r\n\t\t// console.log('date', date, dateString);\r\n\t}\r\n\r\n\tconst handleTimeChange = (date, dateString) => {\r\n\t\tsetTimeFeild(dateString);\r\n\t\t// console.log('date', date, dateString);\r\n\t}\r\n\r\n\r\n\r\n\treturn (\r\n\t\t<Formik\r\n\t\t\tonSubmit={(values, actions) => handleSubmit(values, actions)}\r\n\t\t\tvalidationSchema={validationSchema}\r\n\t\t\tvalidateOnBlur={false}\r\n\t\t\tenableReinitialize={true}\r\n\t\t\tinitialValues={\r\n\t\t\t\t{ ...initialValues }\r\n\t\t\t}\r\n\t\t>\r\n\t\t\t{({\r\n\t\t\t\thandleChange,\r\n\t\t\t\tvalues,\r\n\t\t\t\thandleSubmit,\r\n\t\t\t\terrors,\r\n\t\t\t\tisValid,\r\n\t\t\t\tisSubmitting,\r\n\t\t\t\ttouched,\r\n\t\t\t\thandleBlur,\r\n\t\t\t\tsetFieldTouched,\r\n\t\t\t\thandleReset,\r\n\t\t\t}) => (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<Modal\r\n\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\ttop: '40px',\r\n\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\tbodyStyle={{\r\n\t\t\t\t\t\t\t\tmargin: 0,\r\n\t\t\t\t\t\t\t\tpadding: 0,\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\twidth={'70vw'}\r\n\t\t\t\t\t\t\ttitle=\"Add New Product\"\r\n\t\t\t\t\t\t\tvisible={addNewCategoryVisible}\r\n\t\t\t\t\t\t\tonOk={(e: any) => handleSubmit(e)}\r\n\t\t\t\t\t\t\tonCancel={handleCancel}\r\n\t\t\t\t\t\t\tokText='Create'\r\n\t\t\t\t\t\t\tokButtonProps={{\r\n\t\t\t\t\t\t\t\tloading: isSubmitting,\r\n\t\t\t\t\t\t\t\thtmlType: \"submit\",\r\n\t\t\t\t\t\t\t\tdisabled: getisSubmitButtonDisabled(values, isValid)\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\r\n\r\n\t\t\t\t\t\t\t<section className='addProductGridContainer'>\r\n\t\t\t\t\t\t\t\t<div className='addProductGridContainer__left'>\r\n\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__name'>\r\n\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__item-header'>\r\n\t\t\t\t\t\t\t\t\t\t\t<h3>\r\n\t\t\t\t\t\t\t\t\t\t\t\tProduct Information\r\n\t\t\t</h3>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<div className={values.name && values.name.length > 2 ? 'checkicon-active' : 'checkicon'}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<CheckCircleOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__item-body'>\r\n\t\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\t\tlabel='Title'\r\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.name}\r\n\t\t\t\t\t\t\t\t\t\t\t\tname='name'\r\n\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['name'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['name'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('name');\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t{/* <div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\tdisplay: 'flex',\r\n\t\t\t\t\t\t\t\t\t\t\t\tjustifyContent: 'space-between'\r\n\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\twidth: '48%',\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<DatePicker\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabel='Date'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={handleDateChange} />\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\twidth: '48%'\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<DatePicker\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tdate={date}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\twithTime={true}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder='Select time'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabel='Time'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={handleTimeChange} />\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t</div> */}\r\n\t\t\t\t\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\tmarginBottom: '15px'\r\n\t\t\t\t\t\t\t\t\t\t\t}}></div>\r\n\t\t\t\t\t\t\t\t\t\t\t{/* \r\n\t\t\t\t\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\t\t\t\t\trows={1}\r\n\t\t\t\t\t\t\t\t\t\t\t\tlabel='Venue'\r\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.venue}\r\n\t\t\t\t\t\t\t\t\t\t\t\tname='venue'\r\n\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.venue && errors.venue) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['venue'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.venue && errors.venue) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['venue'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('venue');\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\t\tlabel='Purchase Limit'\r\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.purchaseLimit}\r\n\t\t\t\t\t\t\t\t\t\t\t\ttype='number'\r\n\t\t\t\t\t\t\t\t\t\t\t\tname='purchaseLimit'\r\n\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.purchaseLimit && errors.purchaseLimit) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['purchaseLimit'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.purchaseLimit && errors.purchaseLimit) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['purchaseLimit'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('purchaseLimit');\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t/> */}\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\t\t\t\t\t\tDescription\r\n                               </h3>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\twidth: '100%',\r\n\t\t\t\t\t\t\t\t\t\t\t\tmaxWidth: '100%'\r\n\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<CKEditor\r\n\t\t\t\t\t\t\t\t\t\t\t\t\teditor={ClassicEditor}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tdata={description}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonInit={editor => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t// You can store the \"editor\" and use when it is needed.\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tconsole.log('Editor is ready to use!', editor);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(event, editor) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tconst data = editor.getData();\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetDescription(data);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonBlur={(event, editor) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tconsole.log('Blur.', editor);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonFocus={(event, editor) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tconsole.log('Focus.', editor);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t{/* <Input\r\n\t\t\t\t\t\t\t\t\t\t\t\tlabel='Model Number'\r\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.model}\r\n\t\t\t\t\t\t\t\t\t\t\t\tname='model'\r\n\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.model && errors.model) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['model'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.model && errors.model) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['model'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('model');\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\t\tlabel='Unit'\r\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.unit}\r\n\t\t\t\t\t\t\t\t\t\t\t\tname='unit'\r\n\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.unit && errors.unit) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['unit'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.unit && errors.unit) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['unit'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('unit');\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t/> */}\r\n\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__price'>\r\n\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__item-header'>\r\n\t\t\t\t\t\t\t\t\t\t\t<h3>\r\n\t\t\t\t\t\t\t\t\t\t\t\tProduct Pricing\r\n\t\t\t</h3>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<div className={pricing && pricing.length > 0 ? 'checkicon-active' : 'checkicon'}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<CheckCircleOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__item-body'>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<Tabs\r\n\t\t\t\t\t\t\t\t\t\t\t\tanimated={true}\r\n\t\t\t\t\t\t\t\t\t\t\t\ttabPosition=\"top\"\r\n\t\t\t\t\t\t\t\t\t\t\t\ttype='card'\r\n\t\t\t\t\t\t\t\t\t\t\t>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t<TabPane tab=\"Add Variation\" key=\"1\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Pricing handleAddPricing={handleAddPricing} />\r\n\t\t\t\t\t\t\t\t\t\t\t\t</TabPane>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<TabPane tab=\"Pricing List\" key=\"2\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__item-body-pricingContainer'>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{pricing.length > 0 && pricing.map(item => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__item-body-pricingContainer-item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__item-body-pricingContainer-item-edit'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* <span>\r\n\t\t\t\t\t\t\t<EditOutlined />\r\n\t\t\t\t\t\t\t</span> */}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className='d' onClick={() => handleDeletePricing(item.id)}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<DeleteOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__item-body-pricingContainer-item-two'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<h3>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tPrice\r\n\t\t\t\t\t\t</h3>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__item-body-pricingContainer-item-body'>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{item.price.offer ? (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<h4 >\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{item.price.offer}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</h4>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<h5 style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttextDecoration: \"line-through\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{item.price.regular}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</h5>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<h4>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{item.price.regular}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</h4>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{item.stock && (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Badge\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\toverflowCount={999}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcount={item.stock.available}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<h3>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tStock\r\n\t\t\t\t\t\t\t\t\t</h3>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Badge>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__item-body-pricingContainer-item-body'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<h6>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmin\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Badge\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"site-badge-count-4\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\toverflowCount={999}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcount={item.stock.minimum} />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</h6>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{item.attribute\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&& Object.values(item.attribute).length > 0 && (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<h3>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tAttributes\r\n\t\t\t\t\t\t</h3>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__item-body-pricingContainer-item-body'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{item.attribute\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&& Object.keys(item.attribute).length > 0\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&& Object.keys(item.attribute).map(attributeItem => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<h6>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{attributeItem}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</h6>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<h4>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{item.attribute[attributeItem]}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</h4>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t})}\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{!(pricing.length > 0) && <div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\twidth: '100%',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdisplay: 'flex',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tjustifyContent: 'center'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Empty description='No Pricing added' image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</TabPane>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t</Tabs>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__item-body-container'>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__image'>\r\n\r\n\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__item-header'>\r\n\t\t\t\t\t\t\t\t\t\t\t<h3>\r\n\t\t\t\t\t\t\t\t\t\t\t\tImage\r\n\t\t\t</h3>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<Tooltip\r\n\t\t\t\t\t\t\t\t\t\t\t\tplacement=\"left\" title={'Click on the image to select cover image, By default 1st image is selected as cover'}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<a href='###'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<InfoCircleOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__item-body'>\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='aboutToUploadImagesContainer'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t{myImages &&\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tmyImages.length > 0 && myImages.map((image, index) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className='aboutToUploadImagesContainer__item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='aboutToUploadImagesContainer__item-imgContainer'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => setCoverImageId(image.id)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<img src={image.cover} alt={image.alt} />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => handleImagesDelete(image.id)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='aboutToUploadImagesContainer__item-remove'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<CloseOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{coverImageId === image.id ? (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className='aboutToUploadImagesContainer__item-cover'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<CheckOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t) : !coverImageId && index === 0 && (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className='aboutToUploadImagesContainer__item-cover'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<CheckOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t})}\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Tooltip\r\n\t\t\t\t\t\t\t\t\t\t\t\t\ttitle={'Attach images'}>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetvisible(true);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetisModalOpenForImages(true);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetisModalOpenForThumbnail(false);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='aboutToUploadImagesContainer__uploadItem'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* <FileAddOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FileImageTwoTone />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FileImageOutlined /> */}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<FileImageFilled />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* <h5>\r\n\t\t\t\t\t\t\t\t\t\t\t\t     Select From Library\r\n\t\t\t\t\t\t\t\t\t\t\t<     /h5> */}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className='aboutToUploadImagesContainer__uploadItem-plus'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<PlusOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Tooltip>\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className='addProductGridContainer__right'>\r\n\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__category'>\r\n\r\n\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer-rightItemContainer'>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer-rightItemContainer-header'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<h3>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tCategories\r\n\t\t\t\t</h3>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Tooltip\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tcolor='red'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvisible={addProductState.error['error']['category'] && !(categoryids.length > 0)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tplacement=\"left\" title={'Select at least one category'}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div className={!(categoryids.length > 0)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t&& !addProductState.error['error']['category'] ? 'checkicon' : addProductState.error['error']['category'] ? 'checkicon-error' : 'checkicon-active'}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<CheckCircleOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Tooltip>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer-rightItemContainer-body'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Categories\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetCategoryOptions={setCategoryOptions}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tcategoryOptions={categoryOptions}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetcategoryIds={setcategoryIds} />\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__tag'>\r\n\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer-rightItemContainer'>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer-rightItemContainer-header'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<h3>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tTags\r\n\t\t\t\t</h3>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer-rightItemContainer-body'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Tags\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetSelectedTags={setSelectedTags}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tselectedTags={selectedTags}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetTagIds={setTagIds} />\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__brand'>\r\n\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer-rightItemContainer'>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer-rightItemContainer-header'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<h3>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tBrand\r\n\t\t\t\t</h3>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer-rightItemContainer-body'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Brands setBrandId={setBrandId} />\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</section>\r\n\r\n\r\n\t\t\t\t\t\t</Modal>\r\n\r\n\t\t\t\t\t\t<MediaLibrary\r\n\t\t\t\t\t\t\tsetvisible={setvisible}\r\n\t\t\t\t\t\t\tvisible={visible}\r\n\t\t\t\t\t\t\tsetmyImages={setmyImages}\r\n\t\t\t\t\t\t\tmyImages={myImages}\r\n\t\t\t\t\t\t\tsetmyThumbnailImage={setmyThumbnailImage}\r\n\t\t\t\t\t\t\tisModalOpenForThumbnail={isModalOpenForThumbnail}\r\n\t\t\t\t\t\t\tisModalOpenForImages={isModalOpenForImages}\r\n\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</>\r\n\t\t\t\t)}\r\n\t\t</Formik>\r\n\r\n\r\n\r\n\r\n\t);\r\n};\r\n\r\nexport default AddNewProduct;\r\n\r\n\r\n\r\n\r\n/*\r\n\r\n\r\nProduct variation ---->\r\n\r\nPrice [title]\r\n\t[regular input field] [offer inputfield]\r\n\r\nStock [title]\r\n\t[available input field] [minimum inputfield]\r\n\r\ndefault [default can be set to true]\r\n\r\nattributes [title]\r\n\t[add attributes name]\r\n\t\t[add attrubutes value]\r\n\r\n\t[add attributes name]\r\n\t\t[add attrubutes value\r\n\r\n*///","import React, { useState } from 'react';\r\nimport { Modal, notification } from 'antd';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport { useHandleFetch } from '../../hooks';\r\nimport { CheckCircleOutlined } from '@ant-design/icons';\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n\tname: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\n\r\nconst openSuccessNotification = () => {\r\n\tnotification.success({\r\n\t\tmessage: 'Product Updated',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t\tmessage: message || 'Something Went Wrong',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n};\r\n\r\n\r\n\r\ninterface Props {\r\n\tcategory: any;\r\n\tsetvisible: any;\r\n\tvisible: any;\r\n\tsetProductList?: any;\r\n\tproductList?: any;\r\n}\r\n\r\nconst QuickEdit = ({ category, setvisible, visible, setProductList, productList }: Props) => {\r\n\tconst [updateProductState, handleUpdateProductFetch] = useHandleFetch({}, 'updateProduct');\r\n\r\n\tconst handleSubmit = async (values: any, actions: any) => {\r\n\t\tconst updateProductRes = await handleUpdateProductFetch({\r\n\t\t\turlOptions: {\r\n\t\t\t\tplaceHolders: {\r\n\t\t\t\t\tid: values.id,\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tbody: {\r\n\t\t\t\tname: values.name,\r\n\t\t\t\tdescription: values.description,\r\n\t\t\t\tcategory: category.category,\r\n\t\t\t\tpricing: category.pricing\r\n\t\t\t},\r\n\t\t});\r\n\r\n\t\t// @ts-ignore\r\n\t\tif (updateProductRes && updateProductRes.status === 'ok') {\r\n\t\t\topenSuccessNotification();\r\n\r\n\t\t\tconst positionInAttribute = () => {\r\n\t\t\t\treturn productList.map(item => item.id).indexOf(category.id);\r\n\t\t\t}\r\n\r\n\t\t\tconst index = positionInAttribute();\r\n\r\n\t\t\t// @ts-ignore\r\n\t\t\tconst updatedItem = Object.assign({}, productList[index], { ...updateProductRes });\r\n\t\t\tconst updateProductList = [...productList.slice(0, index), updatedItem, ...productList.slice(index + 1)];\r\n\t\t\tsetProductList(updateProductList);\r\n\r\n\t\t}\r\n\t\telse {\r\n\t\t\topenErrorNotification();\r\n\t\t}\r\n\r\n\t\tactions.setSubmitting(false);\r\n\t\tsetvisible(false)\r\n\t};\r\n\r\n\r\n\tconst handleCancel = (e: any) => {\r\n\t\tsetvisible(false);\r\n\t};\r\n\r\n\r\n\tconst getisSubmitButtonDisabled = (values, isValid) => {\r\n\t\tif (!values.name || !isValid) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\treturn (\r\n\t\t<Formik\r\n\t\t\tonSubmit={(values, actions) => handleSubmit(values, actions)}\r\n\t\t\tvalidationSchema={validationSchema}\r\n\t\t\tvalidateOnBlur={false}\r\n\t\t\tenableReinitialize={true}\r\n\t\t\tinitialValues={\r\n\t\t\t\t{ ...category }\r\n\t\t\t}\r\n\t\t>\r\n\t\t\t{({\r\n\t\t\t\thandleChange,\r\n\t\t\t\tvalues,\r\n\t\t\t\thandleSubmit,\r\n\t\t\t\terrors,\r\n\t\t\t\tisValid,\r\n\t\t\t\tisSubmitting,\r\n\t\t\t\ttouched,\r\n\t\t\t\thandleBlur,\r\n\t\t\t\tsetFieldTouched,\r\n\t\t\t\thandleReset,\r\n\t\t\t}) => (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<Modal\r\n\t\t\t\t\t\t\ttitle=\"Quick Edit\"\r\n\t\t\t\t\t\t\tvisible={visible}\r\n\t\t\t\t\t\t\tonOk={(e: any) => handleSubmit(e)}\r\n\t\t\t\t\t\t\tonCancel={handleCancel}\r\n\t\t\t\t\t\t\tokText='Update'\r\n\t\t\t\t\t\t\tokButtonProps={{\r\n\t\t\t\t\t\t\t\tloading: isSubmitting,\r\n\t\t\t\t\t\t\t\thtmlType: \"submit\",\r\n\t\t\t\t\t\t\t\tdisabled: getisSubmitButtonDisabled(values, isValid)\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\tlabel='Title'\r\n\t\t\t\t\t\t\t\tvalue={values.name}\r\n\t\t\t\t\t\t\t\tname='name'\r\n\t\t\t\t\t\t\t\tisError={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateProductState.error['error']['name'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateProductState.error['error']['name'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('name');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\r\n\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\tlabel='Description'\r\n\t\t\t\t\t\t\t\tvalue={values.description}\r\n\t\t\t\t\t\t\t\tname='description'\r\n\t\t\t\t\t\t\t\tisError={(touched.description && errors.description) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateProductState.error['error']['description'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.description && errors.description) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateProductState.error['error']['description'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('description');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</Modal>\r\n\t\t\t\t\t</>\r\n\t\t\t\t)}\r\n\t\t</Formik>\r\n\t);\r\n};\r\n\r\n\r\nexport default QuickEdit;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { withRouter, useHistory } from 'react-router-dom';\r\nimport { notification, Empty, Table, Badge, Menu, Dropdown, Space, Tag, Button, Input, Tooltip, Popconfirm } from 'antd';\r\nimport { CheckCircleOutlined, PlusOutlined, EditOutlined, DeleteOutlined, EditFilled } from '@ant-design/icons';\r\n\r\n\r\n/// import hooks\r\nimport { useHandleFetch } from \"../../hooks\";\r\n\r\n// import components\r\nimport { DataTableSkeleton } from \"../../components/Placeholders\";\r\nimport AddNewProduct from \"./AddNewProduct\";\r\nimport ProductDetail from \"./ProductEdit\";\r\nimport QuickEdit from \"./QuickEdit\";\r\n\r\nconst { Column, ColumnGroup } = Table;\r\nconst { Search } = Input;\r\n\r\n\r\n\r\nconst openSuccessNotification = () => {\r\n  notification.success({\r\n    message: 'Product Deleted',\r\n    description: '',\r\n    icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n  });\r\n};\r\n\r\n\r\n\r\ninterface myTableProps {\r\n  data: any;\r\n  setProductList: any;\r\n}\r\n\r\n\r\nconst MyTable = ({ data, setProductList }: myTableProps) => {\r\n  const [visible, setvisible] = useState(false);\r\n  const [activeCategoryForEdit, setactiveCategoryForEdit] = useState(false);\r\n  const [deleteProductState, handleDeleteProductFetch] = useHandleFetch({}, 'deleteProduct');\r\n  const [productDetailVisible, setproductDetailVisible] = useState(false);\r\n\r\n  const history = useHistory();\r\n\r\n  const handleDeleteProduct = async (id) => {\r\n    const deleteProductRes = await handleDeleteProductFetch({\r\n      urlOptions: {\r\n        placeHolders: {\r\n          id,\r\n        }\r\n      }\r\n    });\r\n\r\n    // @ts-ignore\r\n    if (deleteProductRes && deleteProductRes.status === 'ok') {\r\n      openSuccessNotification();\r\n      const newProductList = data.filter(item => item.id !== id);\r\n      setProductList(newProductList);\r\n    }\r\n\r\n    // console.log('deleteProductRes', deleteProductRes)\r\n  }\r\n\r\n\r\n  return (\r\n    <>\r\n      <Table\r\n        style={{\r\n          paddingTop: '10px',\r\n          borderRadius: '5px !important',\r\n          overflow: 'hidden',\r\n          boxShadow: '0 0.125rem 0.625rem rgba(227, 231, 250, 0.3), 0 0.0625rem 0.125rem rgba(206, 220, 233, 0.4)'\r\n        }}\r\n        // expandable={{\r\n        //     expandedRowRender: record => <p style={{ margin: 0 }}>{record.name}</p>,\r\n        //     rowExpandable: record => record.name !== 'Not Expandable',\r\n        //   }}\r\n        // bordered={true}\r\n        size='small'\r\n        // pagination={false}\r\n        dataSource={data}\r\n        tableLayout={'auto'}\r\n        onHeaderRow={column => {\r\n          return {\r\n            style: {\r\n              color: 'red !important'\r\n            }\r\n\r\n          };\r\n        }}\r\n      >\r\n        <Column\r\n          title=\"\"\r\n          dataIndex=\"cover\"\r\n          key=\"id\"\r\n          width={'80px'}\r\n\r\n          className='classnameofthecolumn'\r\n\r\n          render={(cover, record: any) => (\r\n            <>\r\n              <img\r\n                onClick={() => {\r\n                  history.push(`/admin/product/${record.id}`)\r\n                  setactiveCategoryForEdit(record)\r\n                }}\r\n                src={cover} alt='cover img' style={{\r\n                  height: '40px',\r\n                  width: '40px',\r\n                  objectFit: \"contain\",\r\n                  borderRadius: '3px',\r\n                  cursor: 'pointer'\r\n                }} />\r\n\r\n\r\n\r\n\r\n            </>\r\n          )}\r\n        />\r\n\r\n        <Column\r\n          title=\"Name\"\r\n          dataIndex=\"name\"\r\n          key=\"id\"\r\n          className='classnameofthecolumn'\r\n          render={(text, record: any) => (\r\n            <>\r\n\r\n              <h4\r\n                onClick={() => {\r\n                  history.push(`/admin/product/${record.id}`)\r\n                  setactiveCategoryForEdit(record)\r\n                }}\r\n                style={{\r\n                  fontWeight: 400,\r\n                  color: '#555',\r\n                  cursor: 'pointer'\r\n\r\n                }}>\r\n                {text}\r\n              </h4>\r\n\r\n\r\n            </>\r\n          )}\r\n\r\n        />\r\n\r\n        <Column\r\n          title=\"Offer Price\"\r\n          dataIndex=\"offerPrice\"\r\n          key=\"id\"\r\n          className='classnameofthecolumn'\r\n\r\n        />\r\n\r\n\r\n        <Column\r\n          title=\"Price\"\r\n          dataIndex=\"price\"\r\n          key=\"id\"\r\n          className='classnameofthecolumn'\r\n\r\n        />\r\n\r\n        {/* <Column\r\n          title=\"Unit\"\r\n          dataIndex=\"unit\"\r\n          key=\"id\"\r\n          className='classnameofthecolumn'\r\n\r\n        /> */}\r\n        {/* <Column \r\n          \r\n          className='classnameofthecolumn'\r\n\r\n          title=\"Product\" dataIndex=\"product\" key=\"product\" /> */}\r\n\r\n        {/* <Column \r\n          \r\n          className='classnameofthecolumn'\r\n\r\n          title=\"Sub Category\" dataIndex=\"subCategory\" key=\"subCategory\" /> */}\r\n\r\n        {/* <Column\r\n          title=\"Tags\"\r\n          dataIndex=\"tags\"\r\n          key=\"tags\"\r\n          render={tags => (\r\n            <>\r\n              {tags.map((tag : any) => (\r\n                <Tag color=\"blue\" key={tag}>\r\n                  {tag}\r\n                </Tag>\r\n              ))}\r\n            </>\r\n          )}\r\n        /> */}\r\n        <Column\r\n\r\n          className='classnameofthecolumn'\r\n          title=\"\"\r\n          key=\"action\"\r\n          align='right'\r\n          render={(text, record: any) => (\r\n            <Space size=\"middle\">\r\n              <a href='##'>\r\n                <Tooltip\r\n\r\n                  placement=\"top\" title='Quick Edit Product'>\r\n                  <span className='iconSize' onClick={() => {\r\n                    setvisible(true)\r\n                    setactiveCategoryForEdit(record);\r\n                  }}>\r\n                    <EditOutlined />\r\n\r\n                  </span>\r\n                </Tooltip>\r\n              </a>\r\n\r\n              <Popconfirm\r\n\r\n                onConfirm={() => handleDeleteProduct(record.id)}\r\n                title=\"Are you sure？\" okText=\"Yes\" cancelText=\"No\">\r\n                <span\r\n                  className='iconSize iconSize-danger'\r\n                >\r\n                  <DeleteOutlined />\r\n                </span>\r\n\r\n              </Popconfirm>\r\n\r\n\r\n\r\n\r\n            </Space>\r\n          )}\r\n        />\r\n      </Table>\r\n\r\n\r\n\r\n      {activeCategoryForEdit && <QuickEdit\r\n        productList={data}\r\n        setProductList={setProductList}\r\n        setvisible={setvisible}\r\n        visible={visible}\r\n        category={activeCategoryForEdit} />}\r\n\r\n\r\n\r\n\r\n    </>\r\n  )\r\n}\r\n\r\n\r\ninterface Props {\r\n  history: any;\r\n}\r\n\r\nconst ProductList = ({ history }: Props) => {\r\n\r\n\r\n\r\n  const [productList, setProductList] = useState([]);\r\n\r\n  const [productState, handleProductListFetch] = useHandleFetch({}, 'productList');\r\n\r\n\r\n  useEffect(() => {\r\n    const setProducts = async () => {\r\n      const products = await handleProductListFetch({});\r\n      // @ts-ignore\r\n      setProductList(products);\r\n    }\r\n    setProducts();\r\n  }, [])\r\n\r\n\r\n  const [addNewCategoryVisible, setAddNewCategoryVisible] = useState(false);\r\n\r\n\r\n  // console.log('productState', productState)\r\n\r\n\r\n  const handleSearch = (value) => {\r\n    if (productState.data.length > 0) {\r\n      const newProductList = productState.data.filter(item => item.name.toLowerCase().includes(value.toLowerCase()));\r\n      setProductList(newProductList);\r\n    }\r\n\r\n  }\r\n\r\n\r\n  return (\r\n    <>\r\n      {/* <h2 className='containerPageTitle'>\r\n      Categories\r\n    </h2> */}\r\n      <div className='categoryListContainer'>\r\n        <div className='categoryListContainer__header'>\r\n\r\n\r\n          <div className='categoryListContainer__header-searchBar'>\r\n            <h2 className='categoryListContainer__header-title'>\r\n              Products\r\n            </h2>\r\n\r\n\r\n            <Search\r\n              enterButton={false}\r\n              className='searchbarClassName'\r\n              placeholder=\"search products..\"\r\n              onSearch={value => handleSearch(value)}\r\n            // style={{ width: 300 }}\r\n            />\r\n          </div>\r\n\r\n          <Button\r\n            // type=\"primary\"\r\n            className='btnPrimaryClassNameoutline'\r\n            icon={<PlusOutlined />}\r\n            onClick={() => setAddNewCategoryVisible(true)}\r\n          >\r\n            Add New\r\n      </Button>\r\n\r\n\r\n        </div>\r\n\r\n        <div className='categoryListContainer__afterHeader'>\r\n          {/* <Search\r\n      placeholder=\"search categories..\"\r\n      size=\"large\"\r\n      onSearch={value => console.log(value)}\r\n      style={{ width: 300 }}\r\n    /> */}\r\n        </div>\r\n\r\n\r\n        <div className='categoryListContainer__categoryList'>\r\n          {productState.done && productList.length > 0 && <MyTable\r\n            setProductList={setProductList}\r\n            data={productList} />}\r\n          {productState.isLoading && <DataTableSkeleton />}\r\n          {productState.done && !(productList.length > 0) && (\r\n            <div style={{\r\n              marginTop: '200px'\r\n            }}>\r\n              <Empty description='No Products found' image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n\r\n      {productState.done &&\r\n        <AddNewProduct\r\n          addNewCategoryVisible={addNewCategoryVisible}\r\n          setAddNewCategoryVisible={setAddNewCategoryVisible}\r\n          productList={productState.data}\r\n          setProductList={setProductList}\r\n\r\n\r\n        />}\r\n\r\n\r\n\r\n\r\n    </>\r\n  );\r\n};\r\n\r\nexport default withRouter(ProductList);\r\n","import React, { useState, useEffect } from 'react';\r\n\r\n// import hooks \r\nimport { useHandleFetch } from '../../hooks';\r\n\r\n\r\n// import libraries \r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { message, Tooltip, Modal, Tabs, Empty, Badge, Spin } from 'antd';\r\n\r\nimport {\r\n    DeleteOutlined,\r\n    FileAddOutlined,\r\n    CheckCircleOutlined,\r\n    FileImageFilled,\r\n    FileImageOutlined,\r\n    FileImageTwoTone,\r\n    PlusOutlined,\r\n    PlusCircleOutlined,\r\n    CloseOutlined,\r\n    CheckOutlined,\r\n    InfoCircleOutlined\r\n} from '@ant-design/icons';\r\nimport CKEditor from '@ckeditor/ckeditor5-react';\r\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\r\n\r\n\r\n\r\n// import ReactQuill from 'react-quill';\r\n// import 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport MediaLibrary from \"../../components/MediaLibrary\";\r\nimport DatePicker from \"../../components/Field/DatePicker\";\r\nimport { openSuccessNotification, openErrorNotification } from \"../../components/Notification\";\r\nimport Tags from \"./Tags\";\r\nimport Brands from \"./Brands\";\r\nimport Categories from \"./Categories\";\r\nimport Pricing from \"./Pricing\";\r\n\r\nconst { TabPane } = Tabs;\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    name: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\n\r\nconst initialValues = {\r\n    name: '',\r\n    description: '',\r\n    model: '',\r\n    unit: '',\r\n    regular: '',\r\n    offer: '',\r\n    available: '',\r\n    minimum: '',\r\n    image: [],\r\n    url: '',\r\n    cover: '',\r\n    pricing: [],\r\n    venue: '',\r\n    date: '',\r\n    time: '',\r\n    purchaseLimit: null\r\n}\r\n\r\ninterface Props {\r\n    productEditVisible?: any;\r\n    setProductEditVisible?: any;\r\n    productDetailData?: any;\r\n}\r\n\r\nconst AddNewProduct = ({ productEditVisible, setProductEditVisible, productDetailData }: Props) => {\r\n\r\n    const [updateProductState, handleUpdateProductFetch] = useHandleFetch({}, 'updateProduct');\r\n    const [productDetailState, handleProductDetailFetch] = useHandleFetch({}, 'productDetailById');\r\n    const [attachImageToItemMultipleState, handleAttachImageToItemMultipleFetch] = useHandleFetch({}, 'attachImageToItemMultiple');\r\n    const [attachImageToItemSingleState, handleAttachImageToItemSingleFetch] = useHandleFetch({}, 'attachImageToItemSingle');\r\n    const [detachImageFromItemMultipleState, handleDetachImageFromItemMultipleFetch] = useHandleFetch({}, 'detachImageFromItemMultiple');\r\n    const [detachImageFromItemSingleState, handleDetachImageFromItemSingleFetch] = useHandleFetch({}, 'detachImageFromItemSingle');\r\n    const [setImageAsThumbnailToItemState, handleSetImageAsThumbnailToItemFetch] = useHandleFetch({}, 'setImageAsThumbnailToItem');\r\n\r\n\r\n\r\n    const [visible, setvisible] = useState(false);\r\n    const [myImages, setmyImages] = useState(false);\r\n    const [myThumbnailImage, setmyThumbnailImage] = useState(false);\r\n    const [isModalOpenForThumbnail, setisModalOpenForThumbnail] = useState(false);\r\n    const [isModalOpenForImages, setisModalOpenForImages] = useState(false);\r\n    const [categoryids, setcategoryIds] = useState([]);\r\n    const [tagIds, setTagIds] = useState([]);\r\n    const [brandId, setBrandId] = useState('');\r\n    const [pricing, setPricing] = useState([]);\r\n    const [coverImageId, setCoverImageId] = useState('');\r\n    const [categoryOptions, setCategoryOptions] = useState([]);\r\n    const [selectedTags, setSelectedTags] = useState([]);\r\n    const [date, setDateFeild] = useState('');\r\n    const [time, setTimeFeild] = useState('');\r\n    const [description, setDescription] = useState('');\r\n\r\n\r\n\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        const getProductDetail = async () => {\r\n            await handleProductDetailFetch({\r\n                urlOptions: {\r\n                    placeHolders: {\r\n                        id: productDetailData.id\r\n                    }\r\n                }\r\n            })\r\n        };\r\n\r\n        getProductDetail();\r\n\r\n    }, [productDetailData]);\r\n\r\n    useEffect(() => {\r\n\r\n        if (productDetailData && productDetailData.brand) {\r\n            setBrandId(productDetailData.brand['id']);\r\n        }\r\n        else {\r\n            setBrandId('');\r\n        }\r\n        if (productDetailData && productDetailData.tags && productDetailData.tags) {\r\n            setSelectedTags(productDetailData.tags);\r\n        }\r\n        else {\r\n            setSelectedTags([]);\r\n\r\n        }\r\n        if (productDetailData && productDetailData.category && productDetailData.category) {\r\n            setCategoryOptions(productDetailData.category);\r\n        }\r\n        else {\r\n            setCategoryOptions([]);\r\n\r\n        }\r\n\r\n        if (productDetailData && productDetailData.pricing && productDetailData.pricing) {\r\n            setPricing(productDetailData.pricing)\r\n        }\r\n        else {\r\n            setPricing([]);\r\n\r\n        }\r\n\r\n\r\n        if (productDetailData && productDetailData.date && productDetailData.date) {\r\n            setDateFeild(productDetailData.date)\r\n        }\r\n        else {\r\n            setDateFeild('');\r\n\r\n        }\r\n\r\n        if (productDetailData && productDetailData.time && productDetailData.time) {\r\n            setTimeFeild(productDetailData.time);\r\n        }\r\n        else {\r\n            setTimeFeild('');\r\n        }\r\n\r\n\r\n\r\n    }, [productDetailData]);\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        if (productDetailState.done && Object.keys(productDetailState).length > 0) {\r\n\r\n            const images = productDetailState.data.image;\r\n            if (images && images.length > 0) {\r\n                setmyImages(images);\r\n            }\r\n\r\n            if (productDetailState.data.cover && productDetailState.data.cover['id']) {\r\n                // @ts-ignore\r\n                setmyImages([productDetailState.data.cover, ...images]);\r\n                console.log('catcat', [productDetailState.data.cover, ...images]);\r\n                setCoverImageId(productDetailState.data.cover['id']);\r\n            }\r\n\r\n        }\r\n    }, [productDetailState])\r\n\r\n\r\n    useEffect(() => {\r\n        console.log('thumnail', myImages);\r\n        // @ts-ignore\r\n        if (myImages && myImages[0] && myImages.length < 2) {\r\n            console.log('thumnail2', myImages);\r\n\r\n            if (coverImageId !== myImages[0].id) {\r\n                setCoverImageId(myImages[0].id);\r\n                handleSetImageAsThumnail(myImages[0]);\r\n            }\r\n\r\n        }\r\n\r\n    }, [myImages])\r\n\r\n\r\n    const handleDetachSingleImage = async id => {\r\n        await handleDetachImageFromItemSingleFetch({\r\n            urlOptions: {\r\n                placeHolders: {\r\n                    imageId: id,\r\n                    collection: 'product',\r\n                    itemId: productDetailData.id\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n\r\n\r\n    const handleSetImageAsThumnail = async image => {\r\n\r\n        const thumbnailRes = await handleSetImageAsThumbnailToItemFetch({\r\n            urlOptions: {\r\n                placeHolders: {\r\n                    imageId: image.id,\r\n                    collection: 'product',\r\n                    itemId: productDetailData.id\r\n                }\r\n            }\r\n        });\r\n\r\n        console.log('thumbnailRes', thumbnailRes);\r\n\r\n        // @ts-ignore\r\n        if (thumbnailRes && thumbnailRes.status === 'ok') {\r\n            openSuccessNotification('Seted as thumbnail!')\r\n            // const positionInBrand = () => {\r\n            //     return productList.map(item => item.id).indexOf(productDetailData.id);\r\n            // }\r\n\r\n            // const index = positionInBrand();\r\n\r\n            // const prevItem = productList.find(item => item.id === productDetailData.id);\r\n\r\n            // if (prevItem) {\r\n            //     console.log('prevItem--', prevItem, 'image--', image);\r\n            //     const updatedItem = Object.assign({}, productList[index], { ...prevItem, cover: image.cover });\r\n            //     const updateProductList = [...productList.slice(0, index), updatedItem, ...productList.slice(index + 1)];\r\n            //     setProductList(updateProductList);\r\n\r\n            // }\r\n        }\r\n        else {\r\n            openErrorNotification(\"Couldn't set as thumbnail, Something went wrong\")\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n    const makeEmptyCategoryOptions = (setEmpty) => {\r\n        setEmpty([]);\r\n    }\r\n\r\n    const handleSubmit = async (values: any, actions: any) => {\r\n        // @ts-ignore\r\n        const imagesIds = myImages ? myImages.map(image => {\r\n            return image.id;\r\n        }) : [];\r\n\r\n        const updatedProductRes = await handleUpdateProductFetch({\r\n            urlOptions: {\r\n                placeHolders: {\r\n                    id: productDetailData.id\r\n                }\r\n            },\r\n            body: {\r\n                name: values.name.trim(),\r\n                description: description,\r\n                model: values.model,\r\n                unit: values.unit,\r\n                category: categoryOptions,\r\n                tags: tagIds,\r\n                brand: brandId,\r\n                image: imagesIds,\r\n                cover: coverImageId || imagesIds[0] ? imagesIds[0] : '',\r\n                pricing: pricing,\r\n            },\r\n        });\r\n\r\n\r\n        // @ts-ignore\r\n        if (updatedProductRes && updatedProductRes.status === 'ok') {\r\n            openSuccessNotification('Product Updated');\r\n            setProductEditVisible(false);\r\n\r\n            console.log('updatedProductRes', updatedProductRes);\r\n            // setProductList([...productList, {\r\n            //     id: updatedProductRes['id'] || '',\r\n            //     key: updatedProductRes['id'] || '',\r\n            //     name: updatedProductRes['name'] || '',\r\n            //     description: updatedProductRes['description'] || '',\r\n            //     // @ts-ignore\r\n            //     ...updatedProductRes\r\n            // }])\r\n            // @ts-ignore\r\n            setmyImages([]);\r\n            setCoverImageId('');\r\n            setPricing([]);\r\n            setTagIds([]);\r\n            setSelectedTags([]);\r\n            setBrandId(\"\");\r\n            setcategoryIds([]);\r\n            setCategoryOptions([]);\r\n            actions.resetForm();\r\n        }\r\n        else {\r\n            // openErrorNotification();\r\n        }\r\n\r\n        actions.setSubmitting(false);\r\n\r\n\r\n    };\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        if (!updateProductState['isLoading']) {\r\n            const error = updateProductState['error'];\r\n            if (error['isError'] && Object.keys(error['error']).length > 0) {\r\n\r\n\r\n                const errors =\r\n                    Object.values(error['error']).length > 0\r\n                        ? Object.values(error['error'])\r\n                        : [];\r\n                errors.forEach((err, i) => {\r\n                    if (typeof err === 'string') {\r\n                        openErrorNotification(err)\r\n                    }\r\n                    else if (typeof err === 'object') {\r\n                        if (err && Object.keys(err).length > 0) {\r\n                            const errs = Object.values(err);\r\n                            errs.forEach(err => {\r\n                                openErrorNotification(err)\r\n                            })\r\n\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n        }\r\n    }, [updateProductState])\r\n\r\n\r\n    const handleCancel = (e: any) => {\r\n        setProductEditVisible(false);\r\n    };\r\n\r\n\r\n    const getisSubmitButtonDisabled = (values, isValid) => {\r\n        if (!values.name || !(pricing.length > 0) || !isValid) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n\r\n    const handleImagesDelete = (id) => {\r\n        // @ts-ignore\r\n        const newImages = myImages && myImages.filter(image => {\r\n            return image.id !== id;\r\n        })\r\n\r\n        setmyImages(newImages);\r\n    }\r\n\r\n    const handleDeleteFromSelectedImage = () => {\r\n\r\n    };\r\n\r\n    const handleThumbnailImageDelete = (id) => {\r\n        // @ts-ignore\r\n        const newImages = myThumbnailImage && myThumbnailImage.filter(image => {\r\n            return image.id !== id;\r\n        })\r\n\r\n        if (newImages.length > 0) {\r\n            setmyThumbnailImage(newImages);\r\n\r\n        }\r\n        else setmyThumbnailImage(false);\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    const handleAddPricing = (priceItem) => {\r\n\r\n        setPricing([{\r\n            ...priceItem,\r\n            id: pricing.length\r\n        }, ...pricing])\r\n        message.info('Product Pricing Added');\r\n    }\r\n\r\n\r\n    const handleDeletePricing = (id) => {\r\n        const newPricing = pricing.filter(item => item.id !== id);\r\n        setPricing(newPricing);\r\n        message.info('Product Pricing Deleted');\r\n    }\r\n\r\n\r\n\r\n    const isCategoryInValid = () => {\r\n        if (updateProductState.error['error']['category'] && !categoryids && categoryids.length) {\r\n            return true;\r\n        }\r\n        else if (categoryids && categoryids.length > 0) {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    const handleDateChange = (date, dateString) => {\r\n        setDateFeild(dateString);\r\n        // console.log('date', date, dateString);\r\n    }\r\n\r\n    const handleTimeChange = (date, dateString) => {\r\n        setTimeFeild(dateString);\r\n        // console.log('date', date, dateString);\r\n    }\r\n\r\n\r\n    console.log('productDetailData', productDetailData);\r\n    console.log('productDetailState', productDetailState);\r\n\r\n\r\n    return (\r\n        <Formik\r\n            onSubmit={(values, actions) => handleSubmit(values, actions)}\r\n            validationSchema={validationSchema}\r\n            validateOnBlur={false}\r\n            enableReinitialize={true}\r\n            initialValues={\r\n                { ...initialValues, ...productDetailData }\r\n            }\r\n        >\r\n            {({\r\n                handleChange,\r\n                values,\r\n                handleSubmit,\r\n                errors,\r\n                isValid,\r\n                isSubmitting,\r\n                touched,\r\n                handleBlur,\r\n                setFieldTouched,\r\n                handleReset,\r\n            }) => (\r\n                    <>\r\n                        <Modal\r\n                            style={{\r\n                                top: '40px',\r\n\r\n                            }}\r\n                            bodyStyle={{\r\n                                margin: 0,\r\n                                padding: 0,\r\n                            }}\r\n                            width={'70vw'}\r\n                            title=\"Product Detail\"\r\n                            visible={productEditVisible}\r\n                            onOk={(e: any) => handleSubmit(e)}\r\n                            onCancel={handleCancel}\r\n                            destroyOnClose={true}\r\n                            okText='Update'\r\n                            okButtonProps={{\r\n                                loading: isSubmitting,\r\n                                htmlType: \"submit\",\r\n                                disabled: getisSubmitButtonDisabled(values, isValid)\r\n                            }}\r\n                        >\r\n\r\n\r\n                            <section className='addProductGridContainer'>\r\n                                <div className='addProductGridContainer__left'>\r\n                                    <div className='addProductGridContainer__name'>\r\n                                        <div className='addProductGridContainer__item-header'>\r\n                                            <h3>\r\n                                                Product Information\r\n\t\t\t</h3>\r\n\r\n                                            <div className={values.name && values.name.length > 2 ? 'checkicon-active' : 'checkicon'}>\r\n                                                <CheckCircleOutlined />\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className='addProductGridContainer__item-body'>\r\n                                            <Input\r\n                                                label='Title'\r\n                                                value={values.name}\r\n                                                name='name'\r\n                                                isError={(touched.name && errors.name) ||\r\n                                                    (!isSubmitting && updateProductState.error['error']['name'])}\r\n\r\n                                                errorString={(touched.name && errors.name) ||\r\n                                                    (!isSubmitting && updateProductState.error['error']['name'])}\r\n                                                onChange={(e: any) => {\r\n                                                    handleChange(e);\r\n                                                    setFieldTouched('name');\r\n                                                }}\r\n                                            />\r\n                                            {/* <div style={{\r\n                                                display: 'flex',\r\n                                                justifyContent: 'space-between'\r\n                                            }}>\r\n                                                <div style={{\r\n                                                    width: '48%',\r\n                                                }}>\r\n                                                    <DatePicker\r\n                                                        time={time}\r\n                                                        date={date}\r\n                                                        label='Date'\r\n                                                        onChange={handleDateChange} />\r\n\r\n                                                </div>\r\n                                                <div style={{\r\n                                                    width: '48%'\r\n                                                }}>\r\n\r\n                                                    <DatePicker\r\n                                                        time={time}\r\n                                                        date={date}\r\n                                                        withTime={true}\r\n                                                        placeholder='Select time'\r\n                                                        label='Time'\r\n                                                        onChange={handleTimeChange} />\r\n\r\n                                                </div>\r\n                                            </div>\r\n                                            <div style={{\r\n                                                marginBottom: '15px'\r\n                                            }}></div>\r\n\r\n                                            <TextArea\r\n                                                rows={1}\r\n                                                label='Venue'\r\n                                                value={values.venue}\r\n                                                name='venue'\r\n                                                isError={(touched.venue && errors.venue) ||\r\n                                                    (!isSubmitting && updateProductState.error['error']['venue'])}\r\n\r\n                                                errorString={(touched.venue && errors.venue) ||\r\n                                                    (!isSubmitting && updateProductState.error['error']['venue'])}\r\n                                                onChange={(e: any) => {\r\n                                                    handleChange(e);\r\n                                                    setFieldTouched('venue');\r\n                                                }}\r\n                                            />\r\n\r\n\r\n\r\n                                            <Input\r\n                                                label='Purchase Limit'\r\n                                                value={values.purchaseLimit}\r\n                                                type='number'\r\n                                                name='purchaseLimit'\r\n                                                isError={(touched.purchaseLimit && errors.purchaseLimit) ||\r\n                                                    (!isSubmitting && updateProductState.error['error']['purchaseLimit'])}\r\n\r\n                                                errorString={(touched.purchaseLimit && errors.purchaseLimit) ||\r\n                                                    (!isSubmitting && updateProductState.error['error']['purchaseLimit'])}\r\n                                                onChange={(e: any) => {\r\n                                                    handleChange(e);\r\n                                                    setFieldTouched('purchaseLimit');\r\n                                                }}\r\n                                            /> */}\r\n\r\n\r\n\r\n                                            <h3 className='inputFieldLabel'>\r\n                                                Description\r\n                               </h3>\r\n\r\n                                            <div style={{\r\n                                                width: '100%',\r\n                                                maxWidth: '100%'\r\n                                            }}>\r\n                                                <CKEditor\r\n                                                    editor={ClassicEditor}\r\n                                                    data={description}\r\n                                                    onInit={editor => {\r\n                                                        // You can store the \"editor\" and use when it is needed.\r\n                                                        console.log('Editor is ready to use!', editor);\r\n                                                    }}\r\n                                                    onChange={(event, editor) => {\r\n                                                        const data = editor.getData();\r\n                                                        setDescription(data);\r\n                                                    }}\r\n                                                    onBlur={(event, editor) => {\r\n                                                        console.log('Blur.', editor);\r\n                                                    }}\r\n                                                    onFocus={(event, editor) => {\r\n                                                        console.log('Focus.', editor);\r\n                                                    }}\r\n                                                />\r\n                                            </div>\r\n\r\n                                            {/* <Input\r\n\t\t\t\t\t\t\t\t\t\t\t\tlabel='Model Number'\r\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.model}\r\n\t\t\t\t\t\t\t\t\t\t\t\tname='model'\r\n\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.model && errors.model) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateProductState.error['error']['model'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.model && errors.model) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateProductState.error['error']['model'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('model');\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\t\tlabel='Unit'\r\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.unit}\r\n\t\t\t\t\t\t\t\t\t\t\t\tname='unit'\r\n\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.unit && errors.unit) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateProductState.error['error']['unit'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.unit && errors.unit) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateProductState.error['error']['unit'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('unit');\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t/> */}\r\n\r\n                                        </div>\r\n\r\n                                    </div>\r\n\r\n                                    <div className='addProductGridContainer__price'>\r\n                                        <div className='addProductGridContainer__item-header'>\r\n                                            <h3>\r\n                                                Product Pricing\r\n\t\t\t</h3>\r\n\r\n                                            <div className={pricing && pricing.length > 0 ? 'checkicon-active' : 'checkicon'}>\r\n                                                <CheckCircleOutlined />\r\n                                            </div>\r\n                                        </div>\r\n\r\n\r\n                                        <div className='addProductGridContainer__item-body'>\r\n\r\n                                            <Tabs\r\n                                                animated={true}\r\n                                                tabPosition=\"top\"\r\n                                                type='card'\r\n                                                defaultActiveKey='2'\r\n                                            >\r\n\r\n                                                <TabPane tab=\"Add Variation\" key=\"1\">\r\n                                                    <Pricing handleAddPricing={handleAddPricing} />\r\n                                                </TabPane>\r\n                                                <TabPane tab=\"Pricing List\" key=\"2\">\r\n                                                    <div className='addProductGridContainer__item-body-pricingContainer'>\r\n\r\n                                                        {pricing.length > 0 && pricing.map(item => {\r\n                                                            return (\r\n                                                                <div className='addProductGridContainer__item-body-pricingContainer-item'>\r\n                                                                    <div className='addProductGridContainer__item-body-pricingContainer-item-edit'>\r\n                                                                        {/* <span>\r\n\t\t\t\t\t\t\t<EditOutlined />\r\n\t\t\t\t\t\t\t</span> */}\r\n                                                                        <span className='d' onClick={() => handleDeletePricing(item.id)}>\r\n                                                                            <DeleteOutlined />\r\n                                                                        </span>\r\n                                                                    </div>\r\n                                                                    <div className='addProductGridContainer__item-body-pricingContainer-item-two'>\r\n                                                                        <div>\r\n                                                                            <h3>\r\n                                                                                Price\r\n\t\t\t\t\t\t</h3>\r\n                                                                            <div className='addProductGridContainer__item-body-pricingContainer-item-body'>\r\n\r\n\r\n                                                                                {item.price.offer ? (\r\n                                                                                    <>\r\n                                                                                        <h4 >\r\n                                                                                            {item.price.offer}\r\n\r\n                                                                                        </h4>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<h5 style={{\r\n                                                                                            textDecoration: \"line-through\"\r\n                                                                                        }}>\r\n\r\n                                                                                            {item.price.regular}\r\n                                                                                        </h5>\r\n                                                                                    </>\r\n                                                                                ) : (\r\n                                                                                        <h4>\r\n                                                                                            {item.price.regular}\r\n\r\n                                                                                        </h4>\r\n                                                                                    )}\r\n\r\n\r\n                                                                            </div>\r\n                                                                        </div>\r\n\r\n                                                                        {item.stock && (\r\n                                                                            <div>\r\n                                                                                <Badge\r\n                                                                                    overflowCount={999}\r\n                                                                                    count={item.stock.available}>\r\n                                                                                    <h3>\r\n                                                                                        Stock\r\n\t\t\t\t\t\t\t\t\t</h3>\r\n                                                                                </Badge>\r\n                                                                                <div className='addProductGridContainer__item-body-pricingContainer-item-body'>\r\n                                                                                    <div>\r\n                                                                                        <h6>\r\n                                                                                            min\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Badge\r\n                                                                                                className=\"site-badge-count-4\"\r\n                                                                                                overflowCount={999}\r\n                                                                                                count={item.stock.minimum} />\r\n                                                                                        </h6>\r\n\r\n\r\n                                                                                    </div>\r\n\r\n                                                                                </div>\r\n                                                                            </div>\r\n                                                                        )}\r\n\r\n\r\n\r\n                                                                    </div>\r\n\r\n                                                                    {item.attribute\r\n                                                                        && Object.values(item.attribute).length > 0 && (\r\n                                                                            <>\r\n                                                                                <h3>\r\n                                                                                    Attributes\r\n\t\t\t\t\t\t</h3>\r\n                                                                                <div className='addProductGridContainer__item-body-pricingContainer-item-body'>\r\n                                                                                    {item.attribute\r\n                                                                                        && Object.keys(item.attribute).length > 0\r\n                                                                                        && Object.keys(item.attribute).map(attributeItem => {\r\n                                                                                            return (\r\n                                                                                                <div>\r\n                                                                                                    <h6>\r\n                                                                                                        {attributeItem}\r\n                                                                                                    </h6>\r\n                                                                                                    <h4>\r\n                                                                                                        {item.attribute[attributeItem]}\r\n                                                                                                    </h4>\r\n                                                                                                </div>\r\n                                                                                            )\r\n                                                                                        })}\r\n                                                                                </div>\r\n                                                                            </>\r\n                                                                        )}\r\n\r\n                                                                </div>\r\n                                                            )\r\n                                                        })}\r\n\r\n\r\n                                                        {!(pricing.length > 0) && <div style={{\r\n                                                            width: '100%',\r\n                                                            display: 'flex',\r\n                                                            justifyContent: 'center'\r\n                                                        }}>\r\n                                                            <Empty description='No Pricing added' image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n                                                        </div>}\r\n                                                    </div>\r\n                                                </TabPane>\r\n\r\n                                            </Tabs>\r\n\r\n                                            <div className='addProductGridContainer__item-body-container'>\r\n\r\n                                            </div>\r\n\r\n                                        </div>\r\n                                    </div>\r\n\r\n\r\n                                    <div className='addProductGridContainer__image'>\r\n\r\n                                        <div className='addProductGridContainer__item-header'>\r\n                                            <h3>\r\n                                                Image\r\n\t\t\t</h3>\r\n\r\n                                            <Tooltip\r\n                                                placement=\"left\" title={'Click on the image to select cover image, By default 1st image is selected as cover'}>\r\n                                                <a href='###'>\r\n                                                    <InfoCircleOutlined />\r\n                                                </a>\r\n                                            </Tooltip>\r\n                                        </div>\r\n\r\n                                        <div\r\n                                            style={{\r\n                                                padding: \"10px\"\r\n                                            }}\r\n                                            className='aboutToUploadImagesContainer'>\r\n                                            {productDetailState.isLoading && (\r\n                                                <div style={{\r\n                                                    padding: '20px 0'\r\n                                                }}>\r\n                                                    <Spin />\r\n                                                </div>\r\n                                            )}\r\n                                            {productDetailState.done && (\r\n                                                <>\r\n                                                    {myImages &&\r\n                                                        // @ts-ignore\r\n                                                        myImages.length > 0 && myImages.map((image, index) => {\r\n                                                            return (\r\n                                                                <div className='aboutToUploadImagesContainer__item'>\r\n                                                                    <div\r\n                                                                        className='aboutToUploadImagesContainer__item-imgContainer'\r\n                                                                        onClick={() => {\r\n                                                                            setCoverImageId(image.id);\r\n                                                                            handleSetImageAsThumnail(image);\r\n                                                                        }}\r\n                                                                    >\r\n                                                                        <img src={image.cover} alt={image.alt} />\r\n                                                                    </div>\r\n\r\n                                                                    <span\r\n                                                                        onClick={() => {\r\n                                                                            handleImagesDelete(image.id)\r\n                                                                            handleDetachSingleImage(image.id)\r\n                                                                        }\r\n\r\n                                                                        }\r\n                                                                        className='aboutToUploadImagesContainer__item-remove'>\r\n                                                                        <CloseOutlined />\r\n                                                                    </span>\r\n\r\n\r\n                                                                    {coverImageId === image.id ? (\r\n                                                                        <span className='aboutToUploadImagesContainer__item-cover'>\r\n                                                                            <CheckOutlined />\r\n                                                                        </span>\r\n                                                                    ) : !coverImageId && index === 0 && (\r\n                                                                        <span className='aboutToUploadImagesContainer__item-cover'>\r\n                                                                            <CheckOutlined />\r\n                                                                        </span>\r\n                                                                    )}\r\n\r\n\r\n                                                                </div>\r\n                                                            )\r\n                                                        })}\r\n\r\n\r\n                                                    <Tooltip\r\n                                                        title={'Attach images'}>\r\n\r\n                                                        <div\r\n                                                            onClick={() => {\r\n                                                                setvisible(true);\r\n                                                                setisModalOpenForImages(true);\r\n                                                                setisModalOpenForThumbnail(false);\r\n                                                            }}\r\n                                                            className='aboutToUploadImagesContainer__uploadItem'>\r\n                                                            {/* <FileAddOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FileImageTwoTone />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FileImageOutlined /> */}\r\n                                                            <FileImageFilled />\r\n                                                            {/* <h5>\r\n\t\t\t\t\t\t\t\t\t\t\t\t     Select From Library\r\n\t\t\t\t\t\t\t\t\t\t\t<     /h5> */}\r\n                                                            <span className='aboutToUploadImagesContainer__uploadItem-plus'>\r\n                                                                <PlusOutlined />\r\n                                                            </span>\r\n                                                        </div>\r\n                                                    </Tooltip>\r\n                                                </>\r\n                                            )}\r\n\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                </div>\r\n                                <div className='addProductGridContainer__right'>\r\n                                    <div className='addProductGridContainer__category'>\r\n\r\n                                        <div className='addProductGridContainer-rightItemContainer'>\r\n                                            <div className='addProductGridContainer-rightItemContainer-header'>\r\n                                                <h3>\r\n                                                    Categories\r\n\t\t\t\t</h3>\r\n\r\n                                                <Tooltip\r\n                                                    color='red'\r\n                                                    visible={updateProductState.error['error']['category'] && !(categoryids.length > 0)}\r\n                                                    placement=\"left\" title={'Select at least one category'}>\r\n                                                    <div className={!(categoryids.length > 0)\r\n                                                        && !updateProductState.error['error']['category'] ? 'checkicon' : updateProductState.error['error']['category'] ? 'checkicon-error' : 'checkicon-active'}>\r\n                                                        <CheckCircleOutlined />\r\n                                                    </div>\r\n                                                </Tooltip>\r\n\r\n                                            </div>\r\n                                            <div className='addProductGridContainer-rightItemContainer-body'>\r\n                                                <Categories\r\n                                                    setCategoryOptions={setCategoryOptions}\r\n                                                    categoryOptions={categoryOptions}\r\n                                                    setcategoryIds={setcategoryIds} />\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                    </div>\r\n\r\n                                    <div className='addProductGridContainer__tag'>\r\n                                        <div className='addProductGridContainer-rightItemContainer'>\r\n                                            <div className='addProductGridContainer-rightItemContainer-header'>\r\n                                                <h3>\r\n                                                    Tags\r\n\t\t\t\t</h3>\r\n                                            </div>\r\n                                            <div className='addProductGridContainer-rightItemContainer-body'>\r\n                                                <Tags\r\n                                                    setSelectedTags={setSelectedTags}\r\n                                                    selectedTags={selectedTags}\r\n                                                    setTagIds={setTagIds} />\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                    </div>\r\n                                    <div className='addProductGridContainer__brand'>\r\n                                        <div className='addProductGridContainer-rightItemContainer'>\r\n                                            <div className='addProductGridContainer-rightItemContainer-header'>\r\n                                                <h3>\r\n                                                    Brand\r\n\t\t\t\t</h3>\r\n                                            </div>\r\n                                            <div className='addProductGridContainer-rightItemContainer-body'>\r\n                                                <Brands\r\n                                                    productDetailState={productDetailState}\r\n                                                    brandId={brandId}\r\n                                                    setBrandId={setBrandId} />\r\n                                            </div>\r\n                                        </div>\r\n\r\n\r\n                                    </div>\r\n\r\n                                </div>\r\n                            </section>\r\n\r\n\r\n                        </Modal>\r\n\r\n                        <MediaLibrary\r\n                            setvisible={setvisible}\r\n                            visible={visible}\r\n                            setmyImages={setmyImages}\r\n                            myImages={myImages}\r\n                            setmyThumbnailImage={setmyThumbnailImage}\r\n                            isModalOpenForThumbnail={isModalOpenForThumbnail}\r\n                            isModalOpenForImages={isModalOpenForImages}\r\n\r\n                        />\r\n                    </>\r\n                )}\r\n        </Formik>\r\n\r\n\r\n\r\n\r\n    );\r\n};\r\n\r\nexport default AddNewProduct;\r\n\r\n\r\n\r\n\r\n/*\r\n\r\n\r\nProduct variation ---->\r\n\r\nPrice [title]\r\n\t[regular input field] [offer inputfield]\r\n\r\nStock [title]\r\n\t[available input field] [minimum inputfield]\r\n\r\ndefault [default can be set to true]\r\n\r\nattributes [title]\r\n\t[add attributes name]\r\n\t\t[add attrubutes value]\r\n\r\n\t[add attributes name]\r\n\t\t[add attrubutes value\r\n\r\n*///","import React, { useEffect, useState } from 'react';\r\nimport { useParams, useHistory } from \"react-router\";\r\n\r\n\r\n// import hooks\r\nimport { useHandleFetch } from \"../../hooks\";\r\n\r\n// import lib\r\nimport {\r\n    EditOutlined,\r\n    DeleteOutlined\r\n} from '@ant-design/icons';\r\n\r\nimport { Skeleton, Empty, Button, notification, Table, Space, Input as CoolInput, Tooltip, Modal, Badge } from 'antd';\r\n\r\n\r\n\r\n// import components\r\nimport { DataTableSkeleton } from \"../../components/Placeholders\";\r\nimport ProductEdit from \"./ProductEdit\";\r\n\r\n\r\nconst { Column, ColumnGroup } = Table;\r\nconst { Search } = CoolInput;\r\n\r\n\r\ninterface Props {\r\n    productRecord?: any;\r\n}\r\n\r\nconst NewBrandDetail = (props: Props) => {\r\n    const [productDetailState, handleProductDetailFetch] = useHandleFetch({}, 'productDetailById');\r\n\r\n    const params = useParams();\r\n    const history = useHistory();\r\n    const productId = params['id'];\r\n    const [productEditVisible, setProductEditVisible] = useState(false);\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        const getProductDetail = async () => {\r\n            await handleProductDetailFetch({\r\n                urlOptions: {\r\n                    placeHolders: {\r\n                        id: productId\r\n                    }\r\n                }\r\n            })\r\n        };\r\n\r\n        getProductDetail();\r\n\r\n    }, [productId]);\r\n\r\n\r\n\r\n\r\n    console.log('productDetailState', productDetailState);\r\n\r\n    console.log('brandParams', params);\r\n\r\n    const getImagesInCollumn = (imgs) => {\r\n        if (!imgs[0]) return false;\r\n        imgs = imgs.map(item => item.cover);\r\n        const columns = {};\r\n\r\n        let localIndex = 0;\r\n        let columnNumber = 0;\r\n\r\n\r\n        imgs.forEach((item, index) => {\r\n            if (localIndex < 3) {\r\n                if (columns[columnNumber]) {\r\n                    columns[columnNumber] = [...columns[columnNumber], item]\r\n                }\r\n                else columns[columnNumber] = [item];\r\n\r\n                localIndex = localIndex + 1;\r\n                columnNumber = columnNumber + 1;\r\n\r\n            }\r\n            else {\r\n                localIndex = 0;\r\n                columnNumber = 0;\r\n                console.log('localIndex', localIndex)\r\n            }\r\n        });\r\n\r\n        return columns;\r\n    }\r\n\r\n\r\n    const row = productDetailState.done && productDetailState.data && productDetailState.data['image'] ? getImagesInCollumn(productDetailState.data['image']) : [];\r\n\r\n    return (\r\n        <div className='brandDetailContainer'>\r\n\r\n            <div className='brandDetailContainer__heading'>\r\n                <h3>\r\n                    Product Detail\r\n                </h3>\r\n\r\n                {productDetailState.done && productDetailState.data && (Object.keys(productDetailState.data).length > 0) && (\r\n                    <>\r\n                        <ProductEdit\r\n                            productEditVisible={productEditVisible}\r\n                            setProductEditVisible={setProductEditVisible}\r\n                            productDetailData={productDetailState.data}\r\n                        />\r\n                        <Button\r\n                            onClick={() => setProductEditVisible(true)}\r\n                            type='link'\r\n                            icon={<EditOutlined />}\r\n                        >\r\n                            Edit\r\n                      </Button>\r\n                    </>\r\n                )}\r\n\r\n            </div>\r\n            <Skeleton\r\n                avatar paragraph={{ rows: 3 }}\r\n                loading={productDetailState.isLoading}>\r\n                {productDetailState.done && productDetailState.data && !(Object.keys(productDetailState.data).length > 0) && (\r\n                    <Empty description='No Product found' image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n                )}\r\n\r\n                {productDetailState.done && productDetailState.data && (Object.keys(productDetailState.data).length > 0) && (\r\n                    <>\r\n                        <div className='brandDetailContainer__header'>\r\n                            <div className='brandDetailContainer__header-coverContainer brandDetailContainer__header-coverContainer-product'>\r\n                                <img src={productDetailState.data['cover'] && productDetailState.data['cover']['cover']} alt=\"\" />\r\n                            </div>\r\n                            <div className='brandDetailContainer__header-info'>\r\n                                <h2>\r\n                                    {productDetailState.data['name']}\r\n                                </h2>\r\n                                <h4>\r\n                                    {productDetailState.data['price']}\r\n                                </h4>\r\n                                <h3>\r\n                                    {productDetailState.data['description']}\r\n                                </h3>\r\n\r\n\r\n                                {productDetailState.data['url'] && (\r\n                                    <h3>\r\n                                        URL:\r\n                                        <span>\r\n                                            {productDetailState.data['url']}\r\n                                        </span>\r\n\r\n                                    </h3>\r\n                                )}\r\n\r\n                                {productDetailState.data['tags'] && productDetailState.data['tags'].length > 0 &&\r\n                                    (<>\r\n                                        <h3>\r\n                                            TAGS:\r\n                                        {productDetailState.data['tags'].map(tag => {\r\n                                            return (\r\n                                                <span>\r\n                                                    {tag.name}\r\n                                                </span>\r\n                                            )\r\n                                        })}\r\n                                        </h3>\r\n\r\n                                    </>)\r\n                                }\r\n\r\n                                {productDetailState.data['category'] && productDetailState.data['category'].length > 0 &&\r\n                                    (<>\r\n                                        <h3>\r\n                                            CATEGORIES:\r\n                                        {productDetailState.data['category'].map(cat => {\r\n                                            return (\r\n                                                <span\r\n                                                    onClick={() => history.push(`/admin/category/${cat.id}`)}\r\n\r\n                                                >\r\n                                                    {cat.name}\r\n                                                </span>\r\n                                            )\r\n                                        })}\r\n                                        </h3>\r\n\r\n                                    </>)\r\n                                }\r\n\r\n                            </div>\r\n                        </div>\r\n\r\n\r\n                        {productDetailState.data['icon'] && (\r\n                            <>\r\n                                <div className='brandDetailContainer__heading'>\r\n                                    <h3>\r\n                                        Icon\r\n                            </h3>\r\n                                </div>\r\n\r\n                                <div className='brandDetailContainer__inlineBox'>\r\n                                    <div className='brandDetailContainer__header-coverContainer brandDetailContainer__header-coverContainer-icon'>\r\n                                        <img src={productDetailState.data['icon'] && productDetailState.data['icon']} alt=\"\" />\r\n                                    </div>\r\n\r\n                                </div>\r\n\r\n                                <div style={{\r\n                                    marginBottom: \"25px\"\r\n                                }}></div>\r\n                            </>\r\n                        )}\r\n\r\n                        {productDetailState.data['pricing'] && productDetailState.data['pricing'].length > 0 && (\r\n                            <>\r\n                                <div className='brandDetailContainer__heading'>\r\n                                    <h3>\r\n                                        Pricing\r\n                                   </h3>\r\n                                </div>\r\n\r\n                                <div className='brandDetailContainer__pricing'>\r\n                                    <div className='addProductGridContainer__item-body-pricingContainer'>\r\n                                        {productDetailState.data['pricing'].map(item => {\r\n                                            return (\r\n                                                <div className='addProductGridContainer__item-body-pricingContainer-item'>\r\n\r\n                                                    <div className='addProductGridContainer__item-body-pricingContainer-item-two'>\r\n                                                        <div>\r\n                                                            <h3>\r\n                                                                Price\r\n    </h3>\r\n                                                            <div className='addProductGridContainer__item-body-pricingContainer-item-body'>\r\n\r\n\r\n                                                                {item.price.offer ? (\r\n                                                                    <>\r\n                                                                        <h4 >\r\n                                                                            {item.price.offer}\r\n\r\n                                                                        </h4>\r\n                                                        /\r\n                                                        <h5 style={{\r\n                                                                            textDecoration: \"line-through\"\r\n                                                                        }}>\r\n\r\n                                                                            {item.price.regular}\r\n                                                                        </h5>\r\n                                                                    </>\r\n                                                                ) : (\r\n                                                                        <h4>\r\n                                                                            {item.price.regular}\r\n\r\n                                                                        </h4>\r\n                                                                    )}\r\n\r\n\r\n                                                            </div>\r\n                                                        </div>\r\n\r\n                                                        {item.stock && (\r\n                                                            <div>\r\n                                                                <Badge\r\n                                                                    overflowCount={999}\r\n                                                                    count={item.stock.available}>\r\n                                                                    <h3>\r\n                                                                        Stock\r\n                </h3>\r\n                                                                </Badge>\r\n                                                                <div className='addProductGridContainer__item-body-pricingContainer-item-body'>\r\n                                                                    <div>\r\n                                                                        <h6>\r\n                                                                            min\r\n                                                                        <Badge\r\n                                                                                className=\"site-badge-count-4\"\r\n                                                                                overflowCount={999}\r\n                                                                                count={item.stock.minimum} />\r\n                                                                        </h6>\r\n\r\n                                                                    </div>\r\n\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        )}\r\n\r\n\r\n\r\n                                                    </div>\r\n\r\n                                                    {item.attribute\r\n                                                        && Object.values(item.attribute).length > 0 && (\r\n                                                            <>\r\n                                                                <h3>\r\n                                                                    Attributes\r\n    </h3>\r\n                                                                <div className='addProductGridContainer__item-body-pricingContainer-item-body'>\r\n                                                                    {item.attribute\r\n                                                                        && Object.keys(item.attribute).length > 0\r\n                                                                        && Object.keys(item.attribute).map(attributeItem => {\r\n                                                                            return (\r\n                                                                                <div>\r\n                                                                                    <h6>\r\n                                                                                        {attributeItem}\r\n                                                                                    </h6>\r\n                                                                                    <h4>\r\n                                                                                        {item.attribute[attributeItem]}\r\n                                                                                    </h4>\r\n                                                                                </div>\r\n                                                                            )\r\n                                                                        })}\r\n                                                                </div>\r\n                                                            </>\r\n                                                        )}\r\n\r\n                                                </div>\r\n                                            )\r\n                                        })}\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div style={{\r\n                                    marginBottom: \"25px\"\r\n                                }}></div>\r\n                            </>\r\n                        )}\r\n\r\n\r\n\r\n                        {productDetailState.data['image'] && productDetailState.data['image'].length > 0 && (\r\n                            <>\r\n                                <div className='brandDetailContainer__heading'>\r\n                                    <h3>\r\n                                        Image Gallary\r\n                                   </h3>\r\n                                </div>\r\n\r\n                                <div className='brandDetailContainer__imageGallary'>\r\n                                    <div className='imgGallaryContainer'>\r\n\r\n                                        <div className=\"imgGallary-row\">\r\n                                            {row && Object.keys(row).map(column => {\r\n                                                return (\r\n                                                    <div className=\"imgGallary-column\">\r\n                                                        {row[column] && row[column].map(img => {\r\n                                                            return <img src={img} style={{\r\n                                                                width: '100%'\r\n                                                            }} />\r\n                                                        })}\r\n\r\n                                                    </div>\r\n                                                )\r\n                                            })}\r\n\r\n\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                </div>\r\n\r\n                                <div style={{\r\n                                    marginBottom: \"25px\"\r\n                                }}></div>\r\n                            </>\r\n                        )}\r\n\r\n                        {productDetailState.data['brand'] && Object.keys(productDetailState.data['brand']).length > 0 && (\r\n                            <>\r\n                                <div className='brandDetailContainer__heading'>\r\n                                    <h3>\r\n                                        Brand\r\n                                   </h3>\r\n                                </div>\r\n\r\n                                <div\r\n                                    onClick={() => history.push(`/admin/brand/${productDetailState.data['brand']['id']}`)}\r\n\r\n                                    className='brandDetailContainer__brand'>\r\n                                    <div className='brandDetailContainer__brand-coverbox'>\r\n                                        <img src={productDetailState.data['brand']['cover'] && productDetailState.data['brand']['cover']} alt=\"\" />\r\n                                    </div>\r\n                                    <div className='brandDetailContainer__brand-info'>\r\n                                        <h2>\r\n                                            {productDetailState.data['brand']['name']}\r\n                                        </h2>\r\n                                        <h3>\r\n                                            {productDetailState.data['brand']['description']}\r\n                                        </h3>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div style={{\r\n                                    marginBottom: \"25px\"\r\n                                }}></div>\r\n                            </>\r\n                        )}\r\n\r\n\r\n                        {productDetailState.data['primaryCategory'] && Object.keys(productDetailState.data['primaryCategory']).length > 0 && (\r\n                            <>\r\n                                <div className='brandDetailContainer__heading'>\r\n                                    <h3>\r\n                                        Primary Category\r\n                                   </h3>\r\n                                </div>\r\n\r\n                                <div\r\n                                    onClick={() => history.push(`/admin/category/${productDetailState.data['primaryCategory']['id']}`)}\r\n                                    className='brandDetailContainer__brand'>\r\n                                    <div className='brandDetailContainer__brand-coverbox'>\r\n                                        <img src={productDetailState.data['primaryCategory']['cover'] && productDetailState.data['primaryCategory']['cover']} alt=\"\" />\r\n                                    </div>\r\n                                    <div className='brandDetailContainer__brand-info'>\r\n                                        <h2>\r\n                                            {productDetailState.data['primaryCategory']['name']}\r\n                                        </h2>\r\n                                        <h3>\r\n                                            {productDetailState.data['primaryCategory']['description']}\r\n                                        </h3>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div style={{\r\n                                    marginBottom: \"25px\"\r\n                                }}></div>\r\n                            </>\r\n                        )}\r\n\r\n                    </>\r\n\r\n                )}\r\n\r\n            </Skeleton>\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NewBrandDetail\r\n","import React,{useState} from 'react';\r\nimport { Modal, notification  } from 'antd';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport {useHandleFetch} from '../../hooks';\r\nimport { CheckCircleOutlined, PlusOutlined, EditOutlined, DeleteOutlined,EditFilled } from '@ant-design/icons';\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n\tname: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n\tdescription: Yup.string().label('Description').required('Description is required')\r\n});\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t  message: message || 'Tag Updated',\r\n\t  description: '',\r\n\t  icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n  };\r\n\r\n\r\n  const openErrorNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t  message: message || 'Something Went Wrong',\r\n\t  description: '',\r\n\t  icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n  };\r\n\r\n\r\n\r\n\r\n\r\ninterface Props {\r\n\tcategory: any;\r\n\tsetvisible: any; \r\n\tvisible: any;\r\n\ttagList: any; \r\nsetTagList: any; \r\n\r\n}\r\n\r\nconst QuickEdit = ({ category, setvisible, visible, tagList, setTagList }: Props) => {\r\n\tconst [updateTagState, handleUpdateCategoryFetch] = useHandleFetch({}, 'updateTag');\r\n\r\n\tconst handleSubmit = async (values : any, actions : any) => {\r\n\t  const updateTagRes = await handleUpdateCategoryFetch({\r\n\t\turlOptions: {\r\n\t\t\tplaceHolders: {\r\n\t\t\t  id: values.id,\r\n\t\t\t}\r\n\t\t  },\r\n\t\tbody: {\r\n\t\t\tname: values.name,\r\n\t\t\tdescription: values.description,\r\n\t\t},\r\n\t  });\r\n\t\r\n\t \t  // @ts-ignore\r\n\t\t   if(updateTagRes && updateTagRes.status === 'ok'){\r\n\t\t\topenSuccessNotification(); \r\n\t\r\n\t\t\tconst positionInTag = () => {\r\n\t\t\t\treturn tagList.map(item => item.id).indexOf(category.id);\r\n\t\t\t  }\r\n\t\r\n\t\t\t  const index = positionInTag();\r\n\t\r\n\t\t\t  // @ts-ignore\r\n\t\t\t  const updatedItem = Object.assign({}, tagList[index], { ...updateTagRes });\r\n\t\t\t  const updateTagList = [...tagList.slice(0, index), updatedItem, ...tagList.slice(index + 1)];\r\n\t\t\t  setTagList(updateTagList); \r\n\t\t\t\r\n\t\t  }\r\n\t\t  else {\r\n\t\t\topenErrorNotification();\r\n\t\t  }\r\n\t\t\r\n\t\t  actions.setSubmitting(false);\r\n\t\t  setvisible(false)\r\n\t};\r\n\t\r\n\r\n\tconst handleCancel = (e: any) => {\r\n        setvisible(false);\r\n      };\r\n\r\n\r\n\t  const getisSubmitButtonDisabled = (values,isValid) => {\r\n\t\tif(!values.name || !values.description || !isValid){\r\n\t\t\treturn true; \r\n\t\t}\r\n\t\treturn false; \r\n\t  }\r\n\r\n\treturn (\r\n\t\t<Formik\r\n\t\tonSubmit={(values, actions) => handleSubmit(values, actions)}\r\n\t\tvalidationSchema={validationSchema}\r\n\t\tvalidateOnBlur={false}\r\n\t\tenableReinitialize={true}\r\n\t\tinitialValues={\r\n\t\t  {...category}\r\n\t\t}\r\n\t  >\r\n\t\t{({\r\n\t\t  handleChange,\r\n\t\t  values,\r\n\t\t  handleSubmit,\r\n\t\t  errors,\r\n\t\t  isValid,\r\n\t\t  isSubmitting,\r\n\t\t  touched,\r\n\t\t  handleBlur,\r\n\t\t  setFieldTouched,\r\n\t\t  handleReset,\r\n\t\t}) => (\r\n\t\t\t<>\r\n\t\t\t<Modal\r\n\t\t\ttitle=\"Quick Edit\"\r\n\t\t\tvisible={visible}\r\n\t\t\tonOk={(e : any) => handleSubmit(e)}\r\n\t\t\tonCancel={handleCancel}\r\n\t\t\tokText='Update'\r\n\t\t\tokButtonProps={{\r\n\t\t\tloading: isSubmitting,\r\n\t\t\thtmlType: \"submit\",\r\n\t\t\tdisabled: getisSubmitButtonDisabled(values, isValid)\r\n\t\t\t}}\r\n  >\r\n  <Input \r\n\t\t\t   label='Title'\r\n\t\t\t   value={values.name}\r\n\t\t\t   name='name'\r\n\t\t\t   isError={(touched.name && errors.name) ||\r\n\t\t\t\t  (!isSubmitting && updateTagState.error['error']['name'])}\r\n\t\t\t  \r\n\t\t\t\t  errorString={(touched.name && errors.name) ||\r\n\t\t\t\t\t  (!isSubmitting && updateTagState.error['error']['name'])}\r\n\t\t\t   onChange={(e : any) => {\r\n\t\t\t\t  handleChange(e);\r\n\t\t\t\t  setFieldTouched('name');\r\n\t\t\t\t}}\r\n\t\t\t   />\r\n\t\t\t  <TextArea\r\n\t\t\t   label='Description' \r\n\t\t\t   value={values.description}\r\n\t\t\t   name='description'\r\n\t\t\t   isError={(touched.description && errors.description) ||\r\n\t\t\t\t  (!isSubmitting && updateTagState.error['error']['description'])}\r\n\t\t\t  \r\n\t\t\t\t  errorString={(touched.description && errors.description) ||\r\n\t\t\t\t\t  (!isSubmitting && updateTagState.error['error']['description'])}\r\n\t\t\t   onChange={(e : any) => {\r\n\t\t\t\t  handleChange(e);\r\n\t\t\t\t  setFieldTouched('description');\r\n\t\t\t\t}}\r\n\t\t\t\t />\r\n  </Modal>\r\n\t\t\t  \r\n\t\t\t</>\r\n\t\t  )}\r\n\t  </Formik>\r\n\t);\r\n};\r\n\r\n\r\nexport default QuickEdit;\r\n","import React, { useState } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n\r\nimport { useHandleFetch } from '../../hooks';\r\n// import third party ui lib\r\nimport { Upload, message, Switch, Select, Button, notification, Modal, Tooltip } from 'antd';\r\n\r\nimport {\r\n    FileOutlined,\r\n    InboxOutlined,\r\n    FileAddOutlined,\r\n    DeleteOutlined,\r\n    CheckCircleOutlined,\r\n    CloseOutlined,\r\n    CheckOutlined,\r\n    InfoCircleOutlined,\r\n    PlusOutlined,\r\n    FileImageFilled\r\n} from '@ant-design/icons';\r\n\r\n\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport MediaLibrary from \"../../components/MediaLibrary\";\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    name: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Tag Created',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n    notification.error({\r\n        message: message || 'Something Went Wrong',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst initialValues = {\r\n    name: '',\r\n    description: '',\r\n}\r\n\r\n\r\n\r\ninterface Props {\r\n    addNewCategoryVisible?: any;\r\n    setAddNewCategoryVisible?: any;\r\n    tagList?: any;\r\n    setTagList?: any;\r\n\r\n}\r\n\r\nconst AddNewBrand = ({ addNewCategoryVisible, setAddNewCategoryVisible, tagList, setTagList }: Props) => {\r\n\r\n    const [addTagState, handleAddTagFetch] = useHandleFetch({}, 'addTag');\r\n    const [myImages, setmyImages] = useState(false);\r\n    const [visibleMedia, setvisibleMedia] = useState(false);\r\n    const [coverImageId, setCoverImageId] = useState('');\r\n\r\n\r\n    const handleSubmit = async (values: any, actions: any) => {\r\n        const addTagRes = await handleAddTagFetch({\r\n            urlOptions: {\r\n                placeHolders: {\r\n                    id: values.id,\r\n                }\r\n            },\r\n            body: {\r\n                name: values.name.trim(),\r\n                description: values.description,\r\n            },\r\n        });\r\n\r\n        // @ts-ignore\r\n        if (addTagRes && addTagRes.status === 'ok') {\r\n            openSuccessNotification();\r\n\r\n            setTagList([...tagList, {\r\n                id: addTagRes['id'] || '',\r\n                key: addTagRes['id'] || '',\r\n                name: addTagRes['name'] || '',\r\n                description: addTagRes['description'] || '',\r\n            }])\r\n            actions.resetForm();\r\n            setAddNewCategoryVisible(false);\r\n        }\r\n        else {\r\n            openErrorNotification();\r\n        }\r\n\r\n\r\n        actions.setSubmitting(false);\r\n\r\n    };\r\n\r\n\r\n    const handleCancel = (e: any) => {\r\n        setAddNewCategoryVisible(false);\r\n    };\r\n\r\n\r\n    const getisSubmitButtonDisabled = (values, isValid) => {\r\n        if (!values.name || !isValid) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n\r\n\r\n\r\n    const handleImagesDelete = (id) => {\r\n        // @ts-ignore\r\n        const newImages = myImages && myImages.filter(image => {\r\n            return image.id !== id;\r\n        })\r\n\r\n        setmyImages(newImages);\r\n    }\r\n\r\n\r\n\r\n\r\n    return (\r\n        <Formik\r\n            onSubmit={(values, actions) => handleSubmit(values, actions)}\r\n            validationSchema={validationSchema}\r\n            validateOnBlur={false}\r\n            enableReinitialize={true}\r\n            initialValues={\r\n                { ...initialValues }\r\n            }\r\n        >\r\n            {({\r\n                handleChange,\r\n                values,\r\n                handleSubmit,\r\n                errors,\r\n                isValid,\r\n                isSubmitting,\r\n                touched,\r\n                handleBlur,\r\n                setFieldTouched,\r\n                handleReset,\r\n            }) => (\r\n                    <>\r\n                        <Modal\r\n                            style={{\r\n                                top: '40px'\r\n                            }}\r\n                            title=\"Add New Tag\"\r\n                            visible={addNewCategoryVisible}\r\n                            onOk={(e: any) => handleSubmit(e)}\r\n                            onCancel={handleCancel}\r\n                            okText='Create'\r\n                            okButtonProps={{\r\n                                loading: isSubmitting,\r\n                                htmlType: \"submit\",\r\n                                disabled: getisSubmitButtonDisabled(values, isValid)\r\n                            }}\r\n                        >\r\n                            <Input\r\n                                label='Title'\r\n                                value={values.name}\r\n                                name='name'\r\n                                isError={(touched.name && errors.name) ||\r\n                                    (!isSubmitting && addTagState.error['error']['name'])}\r\n\r\n                                errorString={(touched.name && errors.name) ||\r\n                                    (!isSubmitting && addTagState.error['error']['name'])}\r\n                                onChange={(e: any) => {\r\n                                    handleChange(e);\r\n                                    setFieldTouched('name');\r\n                                }}\r\n                            />\r\n                            <TextArea\r\n                                label='Description'\r\n                                value={values.description}\r\n                                name='description'\r\n                                isError={(touched.description && errors.description) ||\r\n                                    (!isSubmitting && addTagState.error['error']['description'])}\r\n\r\n                                errorString={(touched.description && errors.description) ||\r\n                                    (!isSubmitting && addTagState.error['error']['description'])}\r\n                                onChange={(e: any) => {\r\n                                    handleChange(e);\r\n                                    setFieldTouched('description');\r\n                                }}\r\n                            />\r\n\r\n                        </Modal>\r\n\r\n                        <MediaLibrary\r\n                            setvisible={setvisibleMedia}\r\n                            visible={visibleMedia}\r\n                            setmyImages={setmyImages}\r\n                            myImages={myImages}\r\n                            isModalOpenForImages={true}\r\n\r\n                        />\r\n                    </>\r\n                )}\r\n        </Formik>\r\n\r\n\r\n\r\n\r\n    );\r\n};\r\n\r\nexport default AddNewBrand;\r\n","import React, { useState, useEffect } from 'react';\r\n\r\n// import third party ui lib\r\nimport { Empty, Popconfirm, Upload, message, Switch, Select, Button, notification, Table, Space, Input as CoolInput, Tooltip, Modal } from 'antd';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { useHistory } from 'react-router';\r\n\r\n\r\n\r\nimport {\r\n\tFileOutlined,\r\n\tInboxOutlined,\r\n\tRadiusUpleftOutlined,\r\n\tRadiusUprightOutlined,\r\n\tRadiusBottomleftOutlined,\r\n\tRadiusBottomrightOutlined,\r\n\tPlusOutlined,\r\n\tDeleteOutlined,\r\n\tEditOutlined,\r\n\tCheckCircleOutlined\r\n} from '@ant-design/icons';\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n\r\n\r\n/// import hooks\r\nimport { useFetch, useHandleFetch } from \"../../hooks\";\r\n\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport { DataTableSkeleton } from \"../../components/Placeholders\";\r\nimport QuickEdit from \"./QuickEdit\"\r\nimport AddNewTag from \"./AddNewTag\"\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t\tmessage: message || 'Tag Created',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n\tnotification.error({\r\n\t\tmessage: message || 'Something Went Wrong',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n};\r\n\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n\tname: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\n\r\nconst initialValues = {\r\n\tname: '',\r\n\tdescription: ''\r\n}\r\n\r\n\r\nconst { Column, ColumnGroup } = Table;\r\nconst { Search } = CoolInput;\r\n\r\n\r\n\r\nconst MyTable = ({ data, setTagList }) => {\r\n\tconst [visible, setvisible] = useState(false);\r\n\tconst [activeCategoryForEdit, setactiveCategoryForEdit] = useState(false);\r\n\tconst [deleteTagState, handleDeleteTagFetch] = useHandleFetch({}, 'deleteTag');\r\n\r\n\tconst history = useHistory();\r\n\r\n\r\n\tconst handleDeleteTag = async (id) => {\r\n\t\tconst deleteTagRes = await handleDeleteTagFetch({\r\n\t\t\turlOptions: {\r\n\t\t\t\tplaceHolders: {\r\n\t\t\t\t\tid,\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\r\n\r\n\t\t// @ts-ignore\r\n\t\tif (deleteTagRes && deleteTagRes.status === 'ok') {\r\n\t\t\topenSuccessNotification('Deleted Tag');\r\n\t\t\tconst newtagList = data.filter(item => item.id !== id);\r\n\t\t\tsetTagList(newtagList);\r\n\t\t}\r\n\r\n\r\n\t}\r\n\r\n\r\n\tconst handleOk = (e: any) => {\r\n\t\tsetvisible(false);\r\n\r\n\t};\r\n\r\n\tconst handleCancel = (e: any) => {\r\n\t\tsetvisible(false);\r\n\t};\r\n\r\n\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Table\r\n\t\t\t\t// expandable={{\r\n\t\t\t\t//     expandedRowRender: record => <p style={{ margin: 0 }}>{record.name}</p>,\r\n\t\t\t\t//     rowExpandable: record => record.name !== 'Not Expandable',\r\n\t\t\t\t//   }}\r\n\t\t\t\t// bordered={true}\r\n\t\t\t\tsize='small'\r\n\t\t\t\t// pagination={false}\r\n\t\t\t\tdataSource={data}\r\n\t\t\t>\r\n\r\n\t\t\t\t<Column\r\n\t\t\t\t\ttitle=\"Name\"\r\n\t\t\t\t\tdataIndex=\"name\"\r\n\t\t\t\t\tkey=\"id\"\r\n\t\t\t\t\tclassName='classnameofthecolumn'\r\n\t\t\t\t\trender={(text, record: any) => (\r\n\t\t\t\t\t\t<>\r\n\r\n\t\t\t\t\t\t\t<h4\r\n\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\thistory.push(`/admin/tag/${record.id}`)\r\n\t\t\t\t\t\t\t\t\t// setBrandDetailVisible(true);\r\n\t\t\t\t\t\t\t\t\tsetactiveCategoryForEdit(record)\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\tfontWeight: 400,\r\n\t\t\t\t\t\t\t\t\tcolor: '#555',\r\n\t\t\t\t\t\t\t\t\tcursor: 'pointer'\r\n\r\n\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t{text}\r\n\t\t\t\t\t\t\t</h4>\r\n\r\n\r\n\t\t\t\t\t\t</>\r\n\t\t\t\t\t)}\r\n\t\t\t\t/>\r\n\r\n\t\t\t\t<Column\r\n\t\t\t\t\ttitle=\"Description\"\r\n\t\t\t\t\tdataIndex=\"description\"\r\n\t\t\t\t\tkey=\"id\"\r\n\t\t\t\t\tclassName='classnameofthecolumn'\r\n\r\n\t\t\t\t/>\r\n\r\n\r\n\t\t\t\t<Column\r\n\t\t\t\t\ttitle=\"Product\"\r\n\t\t\t\t\tdataIndex=\"productCount\"\r\n\t\t\t\t\tkey=\"id\"\r\n\t\t\t\t\tclassName='classnameofthecolumn'\r\n\t\t\t\t/>\r\n\r\n\t\t\t\t<Column\r\n\r\n\t\t\t\t\tclassName='classnameofthecolumn'\r\n\t\t\t\t\ttitle=\"\"\r\n\t\t\t\t\tkey=\"action\"\r\n\t\t\t\t\talign='right'\r\n\t\t\t\t\trender={(text, record: any) => (\r\n\t\t\t\t\t\t<Space size=\"middle\">\r\n\t\t\t\t\t\t\t<a href='##'>\r\n\t\t\t\t\t\t\t\t<Tooltip placement=\"top\" title='Quick Edit Tag'>\r\n\t\t\t\t\t\t\t\t\t<span className='iconSize' onClick={() => {\r\n\t\t\t\t\t\t\t\t\t\tsetvisible(true)\r\n\t\t\t\t\t\t\t\t\t\tsetactiveCategoryForEdit(record);\r\n\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t<EditOutlined />\r\n\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t\t</a>\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t<Popconfirm\r\n\t\t\t\t\t\t\t\tonConfirm={() => handleDeleteTag(record.id)}\r\n\t\t\t\t\t\t\t\ttitle=\"Are you sure？\" okText=\"Yes\" cancelText=\"No\">\r\n\t\t\t\t\t\t\t\t<span\r\n\t\t\t\t\t\t\t\t\tclassName='iconSize iconSize-danger'\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t<DeleteOutlined />\r\n\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t</Popconfirm>\r\n\t\t\t\t\t\t</Space>\r\n\t\t\t\t\t)}\r\n\t\t\t\t/>\r\n\t\t\t</Table>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\t\t\t{activeCategoryForEdit && <QuickEdit\r\n\t\t\t\ttagList={data}\r\n\t\t\t\tsetTagList={setTagList}\r\n\t\t\t\tsetvisible={setvisible}\r\n\t\t\t\tvisible={visible}\r\n\t\t\t\tcategory={activeCategoryForEdit} />}\r\n\t\t</>\r\n\t)\r\n}\r\n\r\n\r\n\r\n\r\ninterface Props { }\r\n\r\nconst TagList = ({ }: Props) => {\r\n\r\n\r\n\tconst [tagList, setTagList] = useState([]);\r\n\r\n\tconst [tagState, handleTagListFetch] = useHandleFetch({}, 'tagList');\r\n\r\n\r\n\tuseEffect(() => {\r\n\t\tconst setTags = async () => {\r\n\t\t\tconst tags = await handleTagListFetch({});\r\n\t\t\t// @ts-ignore\r\n\t\t\tsetTagList(tags);\r\n\t\t}\r\n\t\tsetTags();\r\n\t}, [])\r\n\r\n\r\n\r\n\tconst [addTagState, handleAddTagFetch] = useHandleFetch({}, 'addTag');\r\n\tconst [addNewCategoryVisible, setAddNewCategoryVisible] = useState(false);\r\n\r\n\tconst handleSubmit = async (values: any, actions: any) => {\r\n\t\tconst addTagRes = await handleAddTagFetch({\r\n\t\t\turlOptions: {\r\n\t\t\t\tplaceHolders: {\r\n\t\t\t\t\tid: values.id,\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tbody: {\r\n\t\t\t\tname: values.name.trim(),\r\n\t\t\t\tdescription: values.description,\r\n\t\t\t},\r\n\t\t});\r\n\r\n\t\t// @ts-ignore\r\n\t\tif (addTagRes && addTagRes.status === 'ok') {\r\n\t\t\topenSuccessNotification();\r\n\r\n\t\t\tsetTagList([...tagList, {\r\n\t\t\t\tid: addTagRes['id'] || '',\r\n\t\t\t\tkey: addTagRes['id'] || '',\r\n\t\t\t\tname: addTagRes['name'] || '',\r\n\t\t\t\tdescription: addTagRes['description'] || '',\r\n\t\t\t}])\r\n\t\t\tactions.resetForm();\r\n\t\t}\r\n\t\tactions.setSubmitting(false);\r\n\r\n\t};\r\n\r\n\r\n\r\n\tconst getisSubmitButtonDisabled = (values, isValid) => {\r\n\t\tif (!values.name || !isValid) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\r\n\tconst handleOkAddNewCategory = (e: any) => {\r\n\t\tsetAddNewCategoryVisible(false);\r\n\r\n\t};\r\n\r\n\tconst handleCancelAddNewCategory = (e: any) => {\r\n\t\tsetAddNewCategoryVisible(false);\r\n\t};\r\n\r\n\tconst handleSearch = (value) => {\r\n\t\tif (tagState.data.length > 0) {\r\n\t\t\tconst newTagList = tagState.data.filter(item => item.name.toLowerCase().includes(value.toLowerCase()));\r\n\t\t\tsetTagList(newTagList);\r\n\t\t}\r\n\r\n\t}\r\n\r\n\treturn (\r\n\t\t<>\r\n\r\n\t\t\t<div className='categoryListContainer'>\r\n\t\t\t\t<div className='categoryListContainer__header'>\r\n\t\t\t\t\t<div className='categoryListContainer__header-searchBar-tag'>\r\n\t\t\t\t\t\t<h2 className='categoryListContainer__header-title'>\r\n\t\t\t\t\t\t\tTags\r\n            </h2>\r\n\r\n\r\n\t\t\t\t\t\t<Search\r\n\t\t\t\t\t\t\tenterButton={false}\r\n\t\t\t\t\t\t\tclassName='searchbarClassName'\r\n\t\t\t\t\t\t\tplaceholder=\"search tags..\"\r\n\t\t\t\t\t\t\tonSearch={value => handleSearch(value)}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\t// type=\"primary\"\r\n\t\t\t\t\t\tclassName='btnPrimaryClassNameoutline'\r\n\t\t\t\t\t\ticon={<PlusOutlined />}\r\n\t\t\t\t\t\tonClick={() => setAddNewCategoryVisible(true)}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tAdd New\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className='categoryListContainer__categoryList'>\r\n\t\t\t\t\t{tagState.done && tagList.length > 0 && <MyTable\r\n\t\t\t\t\t\tsetTagList={setTagList}\r\n\t\t\t\t\t\tdata={tagList} />}\r\n\t\t\t\t\t{tagState.isLoading && <DataTableSkeleton />}\r\n\r\n\r\n\t\t\t\t\t{tagState.done && !(tagList.length > 0) && (\r\n\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\tmarginTop: '50px'\r\n\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t<Empty description='No Tags found' image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\r\n\t\t\t<AddNewTag\r\n\t\t\t\ttagList={tagList}\r\n\t\t\t\tsetTagList={setTagList}\r\n\t\t\t\taddNewCategoryVisible={addNewCategoryVisible}\r\n\t\t\t\tsetAddNewCategoryVisible={setAddNewCategoryVisible}\r\n\t\t\t/>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default TagList;\r\n","import React, { useState } from 'react';\r\nimport { Modal, notification } from 'antd';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport { useHandleFetch } from '../../hooks';\r\nimport { CheckCircleOutlined, PlusOutlined, EditOutlined, DeleteOutlined, EditFilled } from '@ant-design/icons';\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    name: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n    description: Yup.string().label('Description').required('Description is required')\r\n});\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Tag Updated',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Something Went Wrong',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n    });\r\n};\r\n\r\n\r\ninterface Props {\r\n    tagEditVisible?: any;\r\n    setTagEditVisible?: any;\r\n    tagDetailData?: any;\r\n}\r\n\r\nconst QuickEdit = ({ tagEditVisible, setTagEditVisible, tagDetailData }: Props) => {\r\n    const [updateTagState, handleUpdateCategoryFetch] = useHandleFetch({}, 'updateTag');\r\n\r\n    const handleSubmit = async (values: any, actions: any) => {\r\n        const updateTagRes = await handleUpdateCategoryFetch({\r\n            urlOptions: {\r\n                placeHolders: {\r\n                    id: values.id,\r\n                }\r\n            },\r\n            body: {\r\n                name: values.name,\r\n                description: values.description,\r\n            },\r\n        });\r\n\r\n        // @ts-ignore\r\n        if (updateTagRes && updateTagRes.status === 'ok') {\r\n            openSuccessNotification();\r\n\r\n            // const positionInTag = () => {\r\n            //     return tagList.map(item => item.id).indexOf(category.id);\r\n            // }\r\n\r\n            // const index = positionInTag();\r\n\r\n            // const updatedItem = Object.assign({}, tagList[index], { ...updateTagRes });\r\n            // const updateTagList = [...tagList.slice(0, index), updatedItem, ...tagList.slice(index + 1)];\r\n            // setTagList(updateTagList);\r\n\r\n        }\r\n        else {\r\n            openErrorNotification();\r\n        }\r\n\r\n        actions.setSubmitting(false);\r\n        setTagEditVisible(false)\r\n    };\r\n\r\n\r\n    const handleCancel = (e: any) => {\r\n        setTagEditVisible(false);\r\n    };\r\n\r\n\r\n    const getisSubmitButtonDisabled = (values, isValid) => {\r\n        if (!values.name || !values.description || !isValid) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    return (\r\n        <Formik\r\n            onSubmit={(values, actions) => handleSubmit(values, actions)}\r\n            validationSchema={validationSchema}\r\n            validateOnBlur={false}\r\n            enableReinitialize={true}\r\n            initialValues={\r\n                { ...tagDetailData }\r\n            }\r\n        >\r\n            {({\r\n                handleChange,\r\n                values,\r\n                handleSubmit,\r\n                errors,\r\n                isValid,\r\n                isSubmitting,\r\n                touched,\r\n                handleBlur,\r\n                setFieldTouched,\r\n                handleReset,\r\n            }) => (\r\n                    <>\r\n                        <Modal\r\n                            title=\"Tag Edit\"\r\n                            visible={tagEditVisible}\r\n                            onOk={(e: any) => handleSubmit(e)}\r\n                            onCancel={handleCancel}\r\n                            okText='Update'\r\n                            okButtonProps={{\r\n                                loading: isSubmitting,\r\n                                htmlType: \"submit\",\r\n                                disabled: getisSubmitButtonDisabled(values, isValid)\r\n                            }}\r\n                        >\r\n                            <Input\r\n                                label='Title'\r\n                                value={values.name}\r\n                                name='name'\r\n                                isError={(touched.name && errors.name) ||\r\n                                    (!isSubmitting && updateTagState.error['error']['name'])}\r\n\r\n                                errorString={(touched.name && errors.name) ||\r\n                                    (!isSubmitting && updateTagState.error['error']['name'])}\r\n                                onChange={(e: any) => {\r\n                                    handleChange(e);\r\n                                    setFieldTouched('name');\r\n                                }}\r\n                            />\r\n                            <TextArea\r\n                                label='Description'\r\n                                value={values.description}\r\n                                name='description'\r\n                                isError={(touched.description && errors.description) ||\r\n                                    (!isSubmitting && updateTagState.error['error']['description'])}\r\n\r\n                                errorString={(touched.description && errors.description) ||\r\n                                    (!isSubmitting && updateTagState.error['error']['description'])}\r\n                                onChange={(e: any) => {\r\n                                    handleChange(e);\r\n                                    setFieldTouched('description');\r\n                                }}\r\n                            />\r\n                        </Modal>\r\n\r\n                    </>\r\n                )}\r\n        </Formik>\r\n    );\r\n};\r\n\r\n\r\nexport default QuickEdit;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useParams } from \"react-router\";\r\n\r\n\r\n// import hooks\r\nimport { useHandleFetch } from \"../../hooks\";\r\n\r\n// import lib\r\nimport {\r\n    FileOutlined,\r\n    InboxOutlined,\r\n    RadiusUpleftOutlined,\r\n    RadiusUprightOutlined,\r\n    RadiusBottomleftOutlined,\r\n    RadiusBottomrightOutlined,\r\n    PlusOutlined,\r\n    DeleteOutlined,\r\n    EditOutlined,\r\n    CheckCircleOutlined\r\n} from '@ant-design/icons';\r\n\r\nimport { Skeleton, Empty, Popconfirm, Upload, message, Switch, Select, Button, notification, Table, Space, Input as CoolInput, Tooltip, Modal } from 'antd';\r\n\r\n\r\n// import components\r\nimport { DataTableSkeleton } from \"../../components/Placeholders\";\r\nimport TagEdit from \"./TagEdit\";\r\n\r\n\r\nconst { Column, ColumnGroup } = Table;\r\nconst { Search } = CoolInput;\r\n\r\n\r\ninterface Props {\r\n    productRecord?: any;\r\n}\r\n\r\nconst NewBrandDetail = (props: Props) => {\r\n    const [tagDetailState, handleTagDetailFetch] = useHandleFetch({}, 'tagDetail');\r\n    const [tagProductsState, handleTagProductsFetch] = useHandleFetch({}, 'tagProducts');\r\n    const [tagEditVisible, setTagEditVisible] = useState(false);\r\n\r\n\r\n    const params = useParams();\r\n    const tagId = params['id'];\r\n\r\n    useEffect(() => {\r\n\r\n        const getBrandDetail = async () => {\r\n            await handleTagDetailFetch({\r\n                urlOptions: {\r\n                    placeHolders: {\r\n                        id: tagId\r\n                    }\r\n                }\r\n            })\r\n        };\r\n\r\n        getBrandDetail();\r\n\r\n    }, [tagId]);\r\n\r\n    useEffect(() => {\r\n        const getTagProducts = async () => {\r\n            await handleTagProductsFetch({\r\n                urlOptions: {\r\n                    placeHolders: {\r\n                        id: tagId\r\n                    }\r\n                }\r\n            })\r\n        };\r\n\r\n        getTagProducts();\r\n\r\n    }, [tagId]);\r\n\r\n\r\n\r\n\r\n    console.log('tagProductsState', tagProductsState);\r\n\r\n    console.log('brandParams', params);\r\n\r\n\r\n    return (\r\n        <div className='brandDetailContainer'>\r\n            <div className='brandDetailContainer__heading'>\r\n                <h3>\r\n                    Tag Detail\r\n                </h3>\r\n\r\n                {tagDetailState.done && tagDetailState.data && (Object.keys(tagDetailState.data).length > 0) && (\r\n                    <>\r\n                        <TagEdit\r\n                            tagEditVisible={tagEditVisible}\r\n                            setTagEditVisible={setTagEditVisible}\r\n                            tagDetailData={tagDetailState.data}\r\n                        />\r\n                        <Button\r\n                            onClick={() => setTagEditVisible(true)}\r\n                            type='link'\r\n                            icon={<EditOutlined />}\r\n                        >\r\n                            Edit\r\n                      </Button>\r\n                    </>\r\n                )}\r\n            </div>\r\n            <Skeleton\r\n                paragraph={{ rows: 2 }}\r\n                loading={tagDetailState.isLoading}>\r\n                {tagDetailState.done && tagDetailState.data && !(Object.keys(tagDetailState.data).length > 0) && (\r\n                    <Empty description='No Tag found' image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n                )}\r\n\r\n                {tagDetailState.done && tagDetailState.data && (Object.keys(tagDetailState.data).length > 0) && (\r\n                    <div className='brandDetailContainer__header'>\r\n\r\n                        <div className='brandDetailContainer__header-info'>\r\n                            <h2>\r\n                                {tagDetailState.data['name']}\r\n                            </h2>\r\n                            <h3>\r\n                                {tagDetailState.data['description']}\r\n                            </h3>\r\n                            {tagDetailState.data['url'] && (\r\n                                <h3>\r\n                                    URL:\r\n                                    <span>\r\n                                        {tagDetailState.data['url']}\r\n                                    </span>\r\n\r\n                                </h3>\r\n                            )}\r\n                        </div>\r\n                    </div>\r\n                )}\r\n\r\n            </Skeleton>\r\n\r\n            <div className='brandDetailContainer__heading'>\r\n                <h3>\r\n                    Products\r\n                </h3>\r\n            </div>\r\n            <div className='brandDetailContainer__body'>\r\n                {tagProductsState.isLoading && <DataTableSkeleton />}\r\n                {tagProductsState.done && !(tagProductsState.data.length > 0) && (\r\n                    <div style={{\r\n                        marginTop: '100px'\r\n                    }}>\r\n                        <Empty description='No Products exists for this tag' image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n                    </div>\r\n                )}\r\n\r\n                {tagProductsState.done && tagProductsState.data && tagProductsState.data.length > 0 && (\r\n                    <>\r\n                        <Table\r\n                            style={{\r\n                                paddingTop: '10px',\r\n                                borderRadius: '5px !important',\r\n                                overflow: 'hidden',\r\n                                boxShadow: '0 0.125rem 0.625rem rgba(227, 231, 250, 0.3), 0 0.0625rem 0.125rem rgba(206, 220, 233, 0.4)'\r\n                            }}\r\n                            // expandable={{\r\n                            //     expandedRowRender: record => <p style={{ margin: 0 }}>{record.name}</p>,\r\n                            //     rowExpandable: record => record.name !== 'Not Expandable',\r\n                            //   }}\r\n                            // bordered={true}\r\n                            size='small'\r\n                            // pagination={false}\r\n                            dataSource={tagProductsState.data}\r\n                            tableLayout={'auto'}\r\n                            onHeaderRow={column => {\r\n                                return {\r\n                                    style: {\r\n                                        color: 'red !important'\r\n                                    }\r\n\r\n                                };\r\n                            }}\r\n                        >\r\n                            <Column\r\n                                title=\"\"\r\n                                dataIndex=\"cover\"\r\n                                key=\"id\"\r\n                                width={'80px'}\r\n\r\n                                className='classnameofthecolumn'\r\n\r\n                                render={(cover, record: any) => (\r\n                                    <>\r\n                                        <img\r\n                                            onClick={() => {\r\n                                                // go to product detail\r\n                                            }}\r\n                                            src={cover} alt='cover img' style={{\r\n                                                height: '40px',\r\n                                                width: '40px',\r\n                                                objectFit: \"contain\",\r\n                                                borderRadius: '3px',\r\n                                                cursor: 'pointer'\r\n                                            }} />\r\n\r\n\r\n\r\n\r\n                                    </>\r\n                                )}\r\n                            />\r\n\r\n                            <Column\r\n                                title=\"Name\"\r\n                                dataIndex=\"name\"\r\n                                key=\"id\"\r\n                                className='classnameofthecolumn'\r\n                                render={(text, record: any) => (\r\n                                    <>\r\n                                        <h4\r\n                                            onClick={() => {\r\n                                                // go to product detail\r\n                                            }}\r\n                                            style={{\r\n                                                fontWeight: 400,\r\n                                                color: '#555',\r\n                                                cursor: 'pointer'\r\n\r\n                                            }}>\r\n                                            {text}\r\n                                        </h4>\r\n\r\n\r\n                                    </>\r\n                                )}\r\n\r\n                            />\r\n\r\n                            <Column\r\n                                title=\"Offer Price\"\r\n                                dataIndex=\"offerPrice\"\r\n                                key=\"id\"\r\n                                className='classnameofthecolumn'\r\n\r\n                            />\r\n\r\n\r\n                            <Column\r\n                                title=\"Price\"\r\n                                dataIndex=\"price\"\r\n                                key=\"id\"\r\n                                className='classnameofthecolumn'\r\n\r\n                            />\r\n\r\n                        </Table>\r\n                    </>\r\n                )}\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NewBrandDetail\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n\r\nimport { useHandleFetch } from '../../hooks';\r\n// import third party ui lib\r\nimport { Upload, message, Switch, Select, Button, notification, Modal, Empty, Form } from 'antd';\r\n\r\nimport {\r\n\tFileOutlined,\r\n\tInboxOutlined,\r\n\tRadiusUpleftOutlined,\r\n\tRadiusUprightOutlined,\r\n\tRadiusBottomleftOutlined,\r\n\tRadiusBottomrightOutlined,\r\n\tDeleteOutlined,\r\n\tFileAddOutlined,\r\n\tCheckCircleOutlined\r\n} from '@ant-design/icons';\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\n\r\n\r\nconst { Option } = Select;\r\n\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n\tfirstName: Yup.string()\r\n\t\t.label('First name')\r\n\t\t.required()\r\n\t\t.min(2, 'First name must have at least 2 characters '),\r\n\tlastName: Yup.string()\r\n\t\t.label('Lastname')\r\n\t\t.required()\r\n\t\t.min(2, 'Last name must have at least 2 characters '),\r\n\tphone: Yup.string()\r\n\t\t.required('Please tell us your mobile number.')\r\n\t\t.max(13, 'Please enter a valid mobile number.'),\r\n\tpassword: Yup.string()\r\n\t\t.label('Password')\r\n\t\t.required()\r\n\t\t.min(6, 'Password must have at least 6 characters'),\r\n\taddress1: Yup.string()\r\n\t\t.label('Address line 1')\r\n\t\t.required()\r\n\t\t.min(3, 'Address line 1 must have at least 3 characters '),\r\n\r\n\temail: Yup.string().label('Email').email('Please enter a valid email'),\r\n});\r\n\r\n\r\n\r\n\r\nconst initialValues = {\r\n\tphone: '',\r\n\temail: '',\r\n\tfirstName: '',\r\n\tlastName: '',\r\n\taddress1: '',\r\n\taddress2: '',\r\n\tzipCode: '',\r\n\tpassword: ''\r\n};\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t\tmessage: message || 'Tag Created',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n\tnotification.error({\r\n\t\tmessage: message || 'Something Went Wrong',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n};\r\n\r\n\r\ninterface Props {\r\n\taddNewCategoryVisible: any;\r\n\tsetAddNewCategoryVisible: any;\r\n\tcustomerList?: any;\r\n\tsetCustomerList?: any;\r\n}\r\n\r\nconst AddNewCategory = ({ addNewCategoryVisible, setAddNewCategoryVisible, customerList, setCustomerList }: Props) => {\r\n\r\n\tconst [addCustomerState, handleAddCustomerFetch] = useHandleFetch({}, 'addCustomer');\r\n\tconst [selectedCountryValue, setselectedCountryValue] = useState('');\r\n\tconst [selectedCityValue, setselectedCityValue] = useState('');\r\n\r\n\tconst [countryOptions, setcountryOptions] = useState([]);\r\n\tconst [cityOptions, setcityOptions] = useState([]);\r\n\r\n\tconst [countryListState, handleCountryListFetch] = useHandleFetch(\r\n\t\t[],\r\n\t\t'countryList'\r\n\t);\r\n\r\n\tconst [cityListState, handleCityListFetch] = useHandleFetch([], 'cityList');\r\n\r\n\tconst [countryList, setCountryList] = useState([]);\r\n\tconst [cityList, setCityList] = useState([]);\r\n\r\n\r\n\r\n\r\n\tconst handleSubmit = async (values: any, actions: any) => {\r\n\r\n\t\tconst addCustomerRes = await handleAddCustomerFetch({\r\n\r\n\t\t\tbody: {\r\n\t\t\t\tphone: values.phone,\r\n\t\t\t\temail: values.email,\r\n\t\t\t\tpassword: values.password,\r\n\t\t\t\taddress1: values.address1,\r\n\t\t\t\taddress2: values.address2,\r\n\t\t\t\tfirstName: values.firstName,\r\n\t\t\t\tlastName: values.lastName,\r\n\t\t\t\tcountry: selectedCountryValue,\r\n\t\t\t\tcity: selectedCityValue,\r\n\t\t\t},\r\n\t\t});\r\n\r\n\r\n\t\t// @ts-ignore\r\n\t\tif (addCustomerRes && addCustomerRes.status === 'ok') {\r\n\t\t\topenSuccessNotification();\r\n\r\n\t\t\tsetCustomerList([...customerList, {\r\n\t\t\t\tid: addCustomerRes['id'] || '',\r\n\t\t\t\tkey: addCustomerRes['id'] || '',\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\t...addCustomerRes\r\n\t\t\t}])\r\n\t\t\tsetAddNewCategoryVisible(false);\r\n\t\t\tactions.resetForm();\r\n\t\t}\r\n\t\telse {\r\n\t\t\topenErrorNotification();\r\n\t\t}\r\n\r\n\r\n\r\n\t\tactions.setSubmitting(false);\r\n\t};\r\n\r\n\r\n\r\n\tconst onChangeCity = (value) => {\r\n\t\tsetselectedCityValue(value);\r\n\t}\r\n\r\n\tconst onChangeCountry = (value) => {\r\n\t\tsetselectedCountryValue(value);\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tconst setCountries = async () => {\r\n\t\t\tconst CountryListRes = await handleCountryListFetch({});\r\n\r\n\t\t\t// @ts-ignore\r\n\t\t\tif (CountryListRes && CountryListRes.length > 0) {\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\tconst countryOptions = CountryListRes.map((country) => {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tvalue: country.name,\r\n\t\t\t\t\t\tname: country.name\r\n\t\t\t\t\t};\r\n\t\t\t\t});\r\n\t\t\t\tsetcountryOptions(countryOptions);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tsetCountries();\r\n\t}, []);\r\n\r\n\r\n\tuseEffect(() => {\r\n\t\tconst setCities = async () => {\r\n\t\t\tconst cityListRes = await handleCityListFetch({\r\n\t\t\t\turlOptions: {\r\n\t\t\t\t\tplaceHolders: {\r\n\t\t\t\t\t\tcountry: selectedCountryValue,\r\n\t\t\t\t\t},\r\n\t\t\t\t},\r\n\t\t\t});\r\n\r\n\t\t\t// @ts-ignore\r\n\t\t\tif (cityListRes && cityListRes.length > 0) {\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\tconst cityOptions = cityListRes.map((city) => {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tvalue: city.name,\r\n\t\t\t\t\t\tname: city.name\r\n\t\t\t\t\t};\r\n\t\t\t\t});\r\n\t\t\t\tsetcityOptions(cityOptions);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tsetCities();\r\n\t}, [selectedCountryValue]);\r\n\r\n\r\n\r\n\r\n\tconst handleCancel = (e: any) => {\r\n\t\tsetAddNewCategoryVisible(false);\r\n\t};\r\n\r\n\r\n\tconst getisSubmitButtonDisabled = (values, isValid) => {\r\n\t\tif (!isValid ||\r\n\t\t\t!values.firstName ||\r\n\t\t\t!values.lastName ||\r\n\t\t\t!values.password ||\r\n\t\t\t!values.phone ||\r\n\t\t\t!values.address1) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\r\n\r\n\tconsole.log('cityListState', cityListState)\r\n\r\n\r\n\r\n\r\n\treturn (\r\n\t\t<Formik\r\n\t\t\tonSubmit={(values, actions) => handleSubmit(values, actions)}\r\n\t\t\tvalidationSchema={validationSchema}\r\n\t\t\tvalidateOnBlur={false}\r\n\t\t\tenableReinitialize={true}\r\n\t\t\tinitialValues={\r\n\t\t\t\t{ ...initialValues }\r\n\t\t\t}\r\n\t\t>\r\n\t\t\t{({\r\n\t\t\t\thandleChange,\r\n\t\t\t\tvalues,\r\n\t\t\t\thandleSubmit,\r\n\t\t\t\terrors,\r\n\t\t\t\tisValid,\r\n\t\t\t\tisSubmitting,\r\n\t\t\t\ttouched,\r\n\t\t\t\thandleBlur,\r\n\t\t\t\tsetFieldTouched,\r\n\t\t\t\thandleReset,\r\n\t\t\t}) => (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<Modal\r\n\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\ttop: '40px'\r\n\t\t\t\t\t\t\t}}\r\n\r\n\r\n\r\n\t\t\t\t\t\t\tbodyStyle={{\r\n\t\t\t\t\t\t\t\tmargin: '0',\r\n\t\t\t\t\t\t\t\tpadding: '10px'\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\ttitle=\"Add New Customer\"\r\n\t\t\t\t\t\t\tvisible={addNewCategoryVisible}\r\n\t\t\t\t\t\t\tonOk={(e: any) => handleSubmit(e)}\r\n\t\t\t\t\t\t\tonCancel={handleCancel}\r\n\t\t\t\t\t\t\tokText='Create'\r\n\t\t\t\t\t\t\tokButtonProps={{\r\n\t\t\t\t\t\t\t\tloading: isSubmitting,\r\n\t\t\t\t\t\t\t\thtmlType: \"submit\",\r\n\t\t\t\t\t\t\t\tdisabled: getisSubmitButtonDisabled(values, isValid)\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\r\n\r\n\t\t\t\t\t\t\t<div className='dubbleRowInputs'>\r\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\tlabel='First Name'\r\n\t\t\t\t\t\t\t\t\t\tvalue={values.firstName}\r\n\t\t\t\t\t\t\t\t\t\tname='firstName'\r\n\t\t\t\t\t\t\t\t\t\tisError={(touched.firstName && errors.firstName) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['firstName'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\terrorString={(touched.firstName && errors.firstName) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['firstName'])}\r\n\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('firstName');\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\tlabel='Last Name'\r\n\t\t\t\t\t\t\t\t\t\tvalue={values.lastName}\r\n\t\t\t\t\t\t\t\t\t\tname='lastName'\r\n\t\t\t\t\t\t\t\t\t\tisError={(touched.lastName && errors.lastName) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['lastName'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\terrorString={(touched.lastName && errors.lastName) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['lastName'])}\r\n\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('lastName');\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t<div className='dubbleRowInputs'>\r\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\tlabel='Phone'\r\n\t\t\t\t\t\t\t\t\t\tvalue={values.phone}\r\n\t\t\t\t\t\t\t\t\t\tname='phone'\r\n\t\t\t\t\t\t\t\t\t\tisError={(touched.phone && errors.phone) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['phone'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\terrorString={(touched.phone && errors.phone) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['phone'])}\r\n\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('phone');\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\tlabel='Email'\r\n\t\t\t\t\t\t\t\t\t\tvalue={values.email}\r\n\t\t\t\t\t\t\t\t\t\tname='email'\r\n\t\t\t\t\t\t\t\t\t\tisError={(touched.email && errors.email) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['email'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\terrorString={(touched.email && errors.email) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['email'])}\r\n\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('email');\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\tmarginRight: '10px'\r\n\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\tlabel='Password'\r\n\t\t\t\t\t\t\t\t\tvalue={values.password}\r\n\t\t\t\t\t\t\t\t\tname='password'\r\n\t\t\t\t\t\t\t\t\tisError={(touched.password && errors.password) ||\r\n\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['password'])}\r\n\r\n\t\t\t\t\t\t\t\t\terrorString={(touched.password && errors.password) ||\r\n\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['password'])}\r\n\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\tsetFieldTouched('password');\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t<div className='dubbleRowInputs'>\r\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\t\t\t\tCountry\r\n\t\t\t\t\t\t\t\t\t</h3>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t<Form.Item\r\n\t\t\t\t\t\t\t\t\t\tvalidateStatus={(addCustomerState.error['error']['country']) ? \"error\" : \"\"}\r\n\t\t\t\t\t\t\t\t\t\thelp={addCustomerState.error['error']['country']}\r\n\t\t\t\t\t\t\t\t\t// noStyle={true}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t<Select\r\n\t\t\t\t\t\t\t\t\t\t\tnotFoundContent={<Empty description='No Country Found' image={Empty.PRESENTED_IMAGE_SIMPLE} />}\r\n\t\t\t\t\t\t\t\t\t\t\tshowSearch\r\n\t\t\t\t\t\t\t\t\t\t\tstyle={{ width: '100%' }}\r\n\t\t\t\t\t\t\t\t\t\t\tplaceholder='Select a Country'\r\n\t\t\t\t\t\t\t\t\t\t\toptionFilterProp='children'\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={onChangeCountry}\r\n\t\t\t\t\t\t\t\t\t\t\tfilterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t{countryListState.done &&\r\n\t\t\t\t\t\t\t\t\t\t\t\tcountryListState.data.length > 0 &&\r\n\t\t\t\t\t\t\t\t\t\t\t\tcountryOptions.map((option) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn <Option value={option.value}>{option.name}</Option>;\r\n\t\t\t\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t\t\t</Select>\r\n\r\n\t\t\t\t\t\t\t\t\t</Form.Item>\r\n\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\t\t\t\tCity\r\n                                    </h3>\r\n\t\t\t\t\t\t\t\t\t<Form.Item\r\n\t\t\t\t\t\t\t\t\t\t// noStyle={true}\r\n\t\t\t\t\t\t\t\t\t\tvalidateStatus={(addCustomerState.error['error']['city']) ? \"error\" : \"\"}\r\n\t\t\t\t\t\t\t\t\t\thelp={addCustomerState.error['error']['city']}\r\n\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t<Select\r\n\t\t\t\t\t\t\t\t\t\t\tclassName='selectClassName'\r\n\t\t\t\t\t\t\t\t\t\t\tnotFoundContent={<Empty description='First Select a Country' image={Empty.PRESENTED_IMAGE_SIMPLE} />}\r\n\t\t\t\t\t\t\t\t\t\t\tshowSearch\r\n\t\t\t\t\t\t\t\t\t\t\tstyle={{ width: '100%' }}\r\n\t\t\t\t\t\t\t\t\t\t\tplaceholder='Select a city'\r\n\t\t\t\t\t\t\t\t\t\t\toptionFilterProp='children'\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={onChangeCity}\r\n\t\t\t\t\t\t\t\t\t\t\tfilterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t{cityListState.done &&\r\n\t\t\t\t\t\t\t\t\t\t\t\tcityListState.data.length > 0 &&\r\n\t\t\t\t\t\t\t\t\t\t\t\tcityOptions.map((option) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn <Option value={option.value}>{option.name}</Option>;\r\n\t\t\t\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t\t\t</Select>\r\n\t\t\t\t\t\t\t\t\t</Form.Item>\r\n\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\tmarginTop: '12px'\r\n\t\t\t\t\t\t\t}}></div>\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t<div className='dubbleRowInputs'>\r\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\tlabel='Address'\r\n\t\t\t\t\t\t\t\t\t\tvalue={values.address1}\r\n\t\t\t\t\t\t\t\t\t\tname='address1'\r\n\t\t\t\t\t\t\t\t\t\tisError={(touched.address1 && errors.address1) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['address1'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\terrorString={(touched.address1 && errors.address1) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['address1'])}\r\n\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('address1');\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\tlabel='More specific address'\r\n\t\t\t\t\t\t\t\t\t\tvalue={values.address2}\r\n\t\t\t\t\t\t\t\t\t\tname='address2'\r\n\t\t\t\t\t\t\t\t\t\tisError={(touched.address2 && errors.address2) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['address2'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\terrorString={(touched.address2 && errors.address2) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['address2'])}\r\n\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('address2');\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\t\t\t\t\t\t</Modal>\r\n\r\n\t\t\t\t\t</>\r\n\t\t\t\t)}\r\n\t\t</Formik>\r\n\r\n\r\n\r\n\r\n\t);\r\n};\r\n\r\nexport default AddNewCategory;\r\n","import React,{useState, useEffect} from 'react';\r\nimport { Modal, Select,notification  } from 'antd';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\nimport { PlusOutlined, EditOutlined, DeleteOutlined,EditFilled, CheckCircleOutlined } from '@ant-design/icons';\r\n\r\n\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport {useHandleFetch} from '../../hooks';\r\n\r\n\r\nconst { Option } = Select;\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    firstName: Yup.string()\r\n      .label('Firstname')\r\n      .required()\r\n      .min(2, 'First name must have at least 2 characters '),\r\n    lastName: Yup.string()\r\n      .label('Lastname')\r\n      .required()\r\n      .min(2, 'Lastname must have at least 2 characters '),\r\n    phone: Yup.string()\r\n      .required('Please tell us your mobile number.')\r\n      .max(13, 'Please enter a valid mobile number.'),\r\n    password: Yup.string()\r\n      .label('Password')\r\n      .required()\r\n      .min(6, 'Password must have at least 6 characters'),\r\n    address1: Yup.string()\r\n      .label('Address line 1')\r\n      .required()\r\n      .min(3, 'Address line 1 must have at least 3 characters '),\r\n  \r\n    email: Yup.string().label('Email').email('Please enter a valid email'),\r\n  });\r\n\r\n\r\n\r\n  \r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t  message: message || 'Tag Created',\r\n\t  description: '',\r\n\t  icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n  };\r\n\r\n\r\n  const openErrorNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t  message: message || 'Something Went Wrong',\r\n\t  description: '',\r\n\t  icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n  };\r\n\r\n\r\n\r\n\r\n\r\n\r\ninterface Props {\r\n\tcustomer: any;\r\n\tsetvisible: any; \r\n\tvisible: any;\r\n\tcustomerList?: any; \r\n\tsetCustomerList?:any\r\n\r\n}\r\n\r\nconst QuickEdit = ({ customer, setvisible, visible, customerList, setCustomerList }: Props) => {\r\n\tconst [updateCustomerState, handleUpdateCustomerFetch] = useHandleFetch({}, 'updateCustomer');\r\n\r\n\r\n\tconst [selectedCountryValue,setselectedCountryValue] = useState(''); \r\n    const [selectedCityValue,setselectedCityValue] = useState(''); \r\n\r\n    const [countryOptions,setcountryOptions] = useState([]); \r\n    const [cityOptions,setcityOptions] = useState([]); \r\n\r\n    const [countryListState, handleCountryListFetch] = useHandleFetch(\r\n        [],\r\n        'countryList'\r\n      );\r\n    \r\n      const [cityListState, handleCityListFetch] = useHandleFetch([], 'cityList');\r\n    \r\n      const [countryList, setCountryList] = useState([]);\r\n      const [cityList, setCityList] = useState([]);\r\n\r\n\r\n\r\n\r\n\tconst handleSubmit = async (values : any, actions : any) => {\r\n\t  const updateCustomerRes = await handleUpdateCustomerFetch({\r\n\t\turlOptions: {\r\n\t\t\tplaceHolders: {\r\n\t\t\t  id: values.id,\r\n\t\t\t}\r\n\t\t  },\r\n\t\tbody: {\r\n\t\t\tphone: values.phone,\r\n            email: values.email,\r\n            password: values.password,\r\n            address1: values.address1,\r\n            address2: values.address2,\r\n            firstName: values.firstName,\r\n            lastName: values.lastName,\r\n            country: selectedCountryValue,\r\n            city: selectedCityValue,\r\n\t\t},\r\n\t  });\r\n\t\r\n\r\n\t   \t  // @ts-ignore\r\n\t\t\t if(updateCustomerRes && updateCustomerRes.status === 'ok'){\r\n\t\t\t\topenSuccessNotification(); \r\n\t\t\r\n\t\t\t\tconst positionInTag = () => {\r\n\t\t\t\t\treturn customerList.map(item => item.id).indexOf(customer.id);\r\n\t\t\t\t  }\r\n\t\t\r\n\t\t\t\t  const index = positionInTag();\r\n\t\t\r\n\t\t\t\t  // @ts-ignore\r\n\t\t\t\t  const updatedItem = Object.assign({}, tagList[index], { ...updateCustomerRes });\r\n\t\t\t\t  const updateTagList = [...customerList.slice(0, index), updatedItem, ...customerList.slice(index + 1)];\r\n\t\t\t\t  setCustomerList(updateTagList); \r\n\t\t\t\t\r\n\t\t\t  }\r\n\t\t\t  else {\r\n\t\t\t\topenErrorNotification();\r\n\t\t\t  }\r\n\t\t\t\r\n\t\t\t  actions.setSubmitting(false);\r\n\t\t\t  setvisible(false)\r\n\t};\r\n\t\r\n\r\n\t\r\n    const onChangeCity = (value) => {\r\n        setselectedCityValue(value); \r\n    }\r\n\r\n    const onChangeCountry = (value) => {\r\n        setselectedCountryValue(value); \r\n    }\r\n    \r\n\tuseEffect(() => {\r\n\t\tconst setCountries = async () => {\r\n\t\t\tconst CountryListRes = await handleCountryListFetch({});\r\n\r\n\t\t\t// @ts-ignore\r\n\t\t\tif (CountryListRes && CountryListRes.length > 0) {\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\tconst countryOptions = CountryListRes.map((country) => {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tvalue: country.name,\r\n\t\t\t\t\t\tname: country.name\r\n\t\t\t\t\t};\r\n\t\t\t\t});\r\n\t\t\t\tsetcountryOptions(countryOptions);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tsetCountries();\r\n    }, []);\r\n    \r\n\r\n    useEffect(() => {\r\n\t\tconst setCities = async () => {\r\n\t\t\tconst cityListRes = await handleCityListFetch({\r\n                urlOptions: {\r\n                    placeHolders: {\r\n                      country: selectedCountryValue,\r\n                    },\r\n                  },\r\n            });\r\n\r\n\t\t\t// @ts-ignore\r\n\t\t\tif (cityListRes && cityListRes.length > 0) {\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\tconst cityOptions = cityListRes.map((city) => {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tvalue: city.name,\r\n\t\t\t\t\t\tname: city.name\r\n\t\t\t\t\t};\r\n\t\t\t\t});\r\n\t\t\t\tsetcityOptions(cityOptions);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tsetCities();\r\n    }, [selectedCountryValue]);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\tconst handleCancel = (e: any) => {\r\n        setvisible(false);\r\n      };\r\n\r\n\r\n\r\n\t  const getisSubmitButtonDisabled = (values,isValid) => {\r\n\t\tif(!isValid ||\r\n            !values.firstName ||\r\n            !values.lastName ||\r\n            !values.password ||\r\n            !values.phone ||\r\n            !values.address1){\r\n\t\t\treturn true; \r\n\t\t}\r\n\t\treturn false; \r\n\t  }\r\n\r\n\treturn (\r\n\t\t<Formik\r\n\t\tonSubmit={(values, actions) => handleSubmit(values, actions)}\r\n\t\tvalidationSchema={validationSchema}\r\n\t\tvalidateOnBlur={false}\r\n\t\tenableReinitialize={true}\r\n\t\tinitialValues={\r\n\t\t  {...customer}\r\n\t\t}\r\n\t  >\r\n\t\t{({\r\n\t\t  handleChange,\r\n\t\t  values,\r\n\t\t  handleSubmit,\r\n\t\t  errors,\r\n\t\t  isValid,\r\n\t\t  isSubmitting,\r\n\t\t  touched,\r\n\t\t  handleBlur,\r\n\t\t  setFieldTouched,\r\n\t\t  handleReset,\r\n\t\t}) => (\r\n\t\t\t<>\r\n\t\t\t<Modal\r\n\t\t\ttitle=\"Quick Edit\"\r\n\t\t\tvisible={visible}\r\n\t\t\tonOk={(e : any) => handleSubmit(e)}\r\n\t\t\tonCancel={handleCancel}\r\n\t\t\tokText='Update'\r\n\t\t\tokButtonProps={{\r\n\t\t\tloading: isSubmitting,\r\n\t\t\thtmlType: \"submit\",\r\n\t\t\tdisabled: getisSubmitButtonDisabled(values, isValid)\r\n\t\t\t}}\r\n\t\t\tbodyStyle={{\r\n                margin: '0',\r\n                padding: '10px'\r\n            }}\r\n  >\r\n      <div className='dubbleRowInputs'>\r\n         <div className='dubbleRowInputs__item'>\r\n         <Input \r\n\t\t\t   label='First Name'\r\n\t\t\t   value={values.firstName}\r\n\t\t\t   name='firstName'\r\n\t\t\t   isError={(touched.firstName && errors.firstName) ||\r\n\t\t\t\t  (!isSubmitting && updateCustomerState.error['error']['firstName'])}\r\n\t\t\t  \r\n\t\t\t\t  errorString={(touched.firstName && errors.firstName) ||\r\n\t\t\t\t\t  (!isSubmitting && updateCustomerState.error['error']['firstName'])}\r\n\t\t\t   onChange={(e : any) => {\r\n\t\t\t\t  handleChange(e);\r\n\t\t\t\t  setFieldTouched('firstName');\r\n\t\t\t\t}}\r\n\t\t\t   />\r\n         </div>\r\n         <div className='dubbleRowInputs__item'>\r\n         <Input \r\n\t\t\t   label='Last Name'\r\n\t\t\t   value={values.lastName}\r\n\t\t\t   name='lastName'\r\n\t\t\t   isError={(touched.lastName && errors.lastName) ||\r\n\t\t\t\t  (!isSubmitting && updateCustomerState.error['error']['lastName'])}\r\n\t\t\t  \r\n\t\t\t\t  errorString={(touched.lastName && errors.lastName) ||\r\n\t\t\t\t\t  (!isSubmitting && updateCustomerState.error['error']['lastName'])}\r\n\t\t\t   onChange={(e : any) => {\r\n\t\t\t\t  handleChange(e);\r\n\t\t\t\t  setFieldTouched('lastName');\r\n\t\t\t\t}}\r\n\t\t\t   />\r\n         </div>\r\n\r\n\r\n\r\n\r\n            </div>\r\n\r\n\t\t\t \r\n\r\n            <div className='dubbleRowInputs'>\r\n         <div className='dubbleRowInputs__item'>\r\n         <Input \r\n\t\t\t   label='Phone'\r\n\t\t\t   value={values.phone}\r\n\t\t\t   name='phone'\r\n\t\t\t   isError={(touched.phone && errors.phone) ||\r\n\t\t\t\t  (!isSubmitting && updateCustomerState.error['error']['phone'])}\r\n\t\t\t  \r\n\t\t\t\t  errorString={(touched.phone && errors.phone) ||\r\n\t\t\t\t\t  (!isSubmitting && updateCustomerState.error['error']['phone'])}\r\n\t\t\t   onChange={(e : any) => {\r\n\t\t\t\t  handleChange(e);\r\n\t\t\t\t  setFieldTouched('phone');\r\n\t\t\t\t}}\r\n\t\t\t   />\r\n         </div>\r\n         <div className='dubbleRowInputs__item'>\r\n         <Input \r\n\t\t\t   label='Email'\r\n\t\t\t   value={values.email}\r\n\t\t\t   name='email'\r\n\t\t\t   isError={(touched.email && errors.email) ||\r\n\t\t\t\t  (!isSubmitting && updateCustomerState.error['error']['email'])}\r\n\t\t\t  \r\n\t\t\t\t  errorString={(touched.email && errors.email) ||\r\n\t\t\t\t\t  (!isSubmitting && updateCustomerState.error['error']['email'])}\r\n\t\t\t   onChange={(e : any) => {\r\n\t\t\t\t  handleChange(e);\r\n\t\t\t\t  setFieldTouched('email');\r\n\t\t\t\t}}\r\n\t\t\t   />\r\n         </div>\r\n\r\n\r\n\r\n\r\n            </div>\r\n\r\n            \r\n\r\n\r\n    \r\n<div className='dubbleRowInputs'>\r\n         <div className='dubbleRowInputs__item'>\r\n         <h3 className='inputFieldLabel'>\r\n                Country\r\n            </h3>\r\n         <Select\r\n\t\t\tshowSearch\r\n\t\t\tstyle={{ width: '100%' }}\r\n\t\t\tplaceholder='Select a Country'\r\n\t\t\toptionFilterProp='children'\r\n\t\t\tdefaultValue={customer && customer.country}\r\n\t\t\tonChange={onChangeCountry}\r\n\t\t\tfilterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n\t\t>\r\n\t\t\t{countryListState.done &&\r\n\t\t\t\tcountryListState.data.length > 0 &&\r\n\t\t\t\tcountryOptions.map((option) => {\r\n\t\t\t\t\treturn <Option value={option.value}>{option.name}</Option>;\r\n\t\t\t\t})}\r\n\t\t</Select>\r\n         </div>\r\n         <div className='dubbleRowInputs__item'>\r\n         <h3 className='inputFieldLabel'>\r\n                City\r\n            </h3>\r\n         <Select\r\n\t\t\tdefaultValue={customer && customer.city}\r\n\t\t\tshowSearch\r\n\t\t\tstyle={{ width: '100%' }}\r\n\t\t\tplaceholder='Select a city'\r\n\t\t\toptionFilterProp='children'\r\n\t\t\tonChange={onChangeCity}\r\n\t\t\tfilterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n\t\t>\r\n\t\t\t{cityListState.done &&\r\n\t\t\t\tcityListState.data.length > 0 &&\r\n\t\t\t\tcityOptions.map((option) => {\r\n\t\t\t\t\treturn <Option value={option.value}>{option.name}</Option>;\r\n\t\t\t\t})}\r\n\t\t</Select>\r\n         </div>\r\n\r\n            </div>\r\n\r\n            <div style={{\r\n                marginTop: '12px'\r\n            }}></div>\r\n\r\n\r\n\r\n            <div className='dubbleRowInputs'>\r\n         <div className='dubbleRowInputs__item'>\r\n         <Input \r\n\t\t\t   label='Address'\r\n\t\t\t   value={values.address1}\r\n\t\t\t   name='address1'\r\n\t\t\t   isError={(touched.address1 && errors.address1) ||\r\n\t\t\t\t  (!isSubmitting && updateCustomerState.error['error']['address1'])}\r\n\t\t\t  \r\n\t\t\t\t  errorString={(touched.address1 && errors.address1) ||\r\n\t\t\t\t\t  (!isSubmitting && updateCustomerState.error['error']['address1'])}\r\n\t\t\t   onChange={(e : any) => {\r\n\t\t\t\t  handleChange(e);\r\n\t\t\t\t  setFieldTouched('address1');\r\n\t\t\t\t}}\r\n\t\t\t   />\r\n         </div>\r\n         <div className='dubbleRowInputs__item'>\r\n         <Input \r\n\t\t\t   label='More specific address'\r\n\t\t\t   value={values.address2}\r\n\t\t\t   name='address2'\r\n\t\t\t   isError={(touched.address2 && errors.address2) ||\r\n\t\t\t\t  (!isSubmitting && updateCustomerState.error['error']['address2'])}\r\n\t\t\t  \r\n\t\t\t\t  errorString={(touched.address2 && errors.address2) ||\r\n\t\t\t\t\t  (!isSubmitting && updateCustomerState.error['error']['address2'])}\r\n\t\t\t   onChange={(e : any) => {\r\n\t\t\t\t  handleChange(e);\r\n\t\t\t\t  setFieldTouched('address2');\r\n\t\t\t\t}}\r\n\t\t\t   />\r\n         </div>\r\n\r\n            </div>\r\n\r\n\r\n\r\n\r\n  </Modal>\r\n\t\t\t  \r\n\t\t\t</>\r\n\t\t  )}\r\n\t  </Formik>\r\n\t);\r\n};\r\n\r\n\r\nexport default QuickEdit;\r\n","import React, {useState,useEffect} from 'react';\r\nimport {withRouter} from 'react-router-dom';\r\nimport { Table, Badge, Menu, Dropdown, notification, Space, Tag,Button, Input,Tooltip, Modal , Popconfirm} from 'antd';\r\nimport { PlusOutlined, EditOutlined, DeleteOutlined,EditFilled, CheckCircleOutlined } from '@ant-design/icons';\r\nimport Moment from 'react-moment';\r\n\r\n/// import hooks\r\nimport { useFetch, useHandleFetch } from \"../../hooks\";\r\n\r\n// import components\r\nimport { DataTableSkeleton } from \"../../components/Placeholders\";\r\nimport AddNewCustomer from \"./AddNewCustomer\";\r\nimport QuickEdit from \"./QuickEdit\";\r\nimport Empty from \"../../components/Empty\";\r\nconst { Column, ColumnGroup } = Table;\r\nconst { Search } = Input;\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t  message: message || 'Tag Created',\r\n\t  description: '',\r\n\t  icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n  };\r\n\r\n\r\n  const openErrorNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t  message: message || 'Something Went Wrong',\r\n\t  description: '',\r\n\t  icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n  };\r\n\r\n\r\n\r\n\r\n\r\ninterface myTableProps {\r\n  data: any; \r\n  setCustomerList?:any; \r\n} \r\n\r\n\r\nconst MyTable = ({data,setCustomerList}: myTableProps) => {\r\n    const [visible,setvisible] = useState(false);   \r\n    const [activeCategoryForEdit,setactiveCategoryForEdit] = useState(false); \r\n\r\n\r\n    const [deleteCustomerState, handleDeleteCustomerFetch] = useHandleFetch({}, 'deleteCustomer');\r\n      const handleDeleteCustomer = async (id) => {\r\n        const deleteCustomerRes = await handleDeleteCustomerFetch({\r\n          urlOptions: {\r\n            placeHolders: {\r\n              id,\r\n            }\r\n            }\r\n          });\r\n\r\n\r\n           // @ts-ignore\r\n\t\t  if(deleteCustomerRes && deleteCustomerRes.status === 'ok'){\r\n\t\t\t  openSuccessNotification('Deleted Customer'); \r\n\t\t\t  const newCustomerList =  data.filter(item => item.id !== id);\r\n\t\t\t  setCustomerList(newCustomerList); \r\n\t\t  }\r\n      }\r\n      \r\n\r\n    return (\r\n        <>\r\n        <Table \r\n        // expandable={{\r\n        //     expandedRowRender: record => <p style={{ margin: 0 }}>{record.name}</p>,\r\n        //     rowExpandable: record => record.name !== 'Not Expandable',\r\n        //   }}\r\n        // bordered={true}\r\n        size='small'\r\n        // pagination={false}\r\n        dataSource={data}\r\n        >\r\n         \r\n          <Column\r\n           title=\"Phone\" \r\n           dataIndex=\"phone\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n         \r\n            />\r\n\r\n\r\n         <Column\r\n           title=\"First Name\" \r\n           dataIndex=\"firstName\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n         \r\n            />\r\n\r\n         <Column\r\n           title=\"Last Name\" \r\n           dataIndex=\"lastName\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n         \r\n            />\r\n\r\n\r\n\r\n<Column\r\n           title=\"Country\" \r\n           dataIndex=\"country\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n         \r\n            />\r\n\r\n\r\n<Column\r\n           title=\"City\" \r\n           dataIndex=\"city\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n         \r\n            />\r\n\r\n<Column\r\n           title=\"Created\" \r\n           dataIndex=\"created\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n           render={(text, record : any) => (\r\n            <Space size=\"middle\">\r\n            \r\n            <h5>\r\n              <Moment>\r\n                {text}\r\n              </Moment>\r\n            </h5>\r\n             \r\n            </Space>\r\n          )}\r\n            />\r\n\r\n\r\n\r\n          {/* <Column \r\n          \r\n          className='classnameofthecolumn'\r\n\r\n          title=\"Product\" dataIndex=\"product\" key=\"product\" /> */}\r\n\r\n          {/* <Column \r\n          \r\n          className='classnameofthecolumn'\r\n\r\n          title=\"Sub Category\" dataIndex=\"subCategory\" key=\"subCategory\" /> */}\r\n        \r\n        {/* <Column\r\n          title=\"Tags\"\r\n          dataIndex=\"tags\"\r\n          key=\"tags\"\r\n          render={tags => (\r\n            <>\r\n              {tags.map((tag : any) => (\r\n                <Tag color=\"blue\" key={tag}>\r\n                  {tag}\r\n                </Tag>\r\n              ))}\r\n            </>\r\n          )}\r\n        /> */}\r\n        <Column\r\n        \r\n        className='classnameofthecolumn'\r\n          title=\"\"\r\n          key=\"action\"\r\n          align='right'\r\n          render={(text, record : any) => (\r\n            <Space size=\"middle\">\r\n              <a href='##'>\r\n               <Tooltip placement=\"top\" title='Quick Edit Customer'>\r\n              <span className='iconSize' onClick={() => {\r\n                setvisible(true)\r\n                setactiveCategoryForEdit(record); \r\n              }}> \r\n              <EditOutlined />\r\n            \r\n              </span>\r\n               </Tooltip>\r\n               </a>\r\n\r\n             \r\n\r\n              \r\n               <Popconfirm \r\n               \r\n               onConfirm={() => handleDeleteCustomer(record.id)}\r\n               title=\"Are you sure？\" okText=\"Yes\" cancelText=\"No\">\r\n           \r\n           <span \r\n             className='iconSize iconSize-danger'\r\n             > \r\n             <DeleteOutlined/>\r\n            </span>\r\n       \r\n           </Popconfirm>\r\n             \r\n            </Space>\r\n          )}\r\n        />\r\n      </Table>\r\n\r\n    \r\n\r\n    {activeCategoryForEdit &&   <QuickEdit \r\n    customerList={data}\r\n    setCustomerList={setCustomerList}\r\n    setvisible={setvisible}\r\n    visible={visible}\r\n    customer={activeCategoryForEdit}/>}\r\n    \r\n    \r\n    </>\r\n    )\r\n}\r\n\r\n\r\ninterface Props {\r\n    history: any; \r\n}\r\n\r\nconst CustomerList = ({history}: Props) => {\r\n\r\n\r\n    const [customerList,setCustomerList] = useState([]); \r\n\r\n    const [customerState, handleCustomerListFetch] = useHandleFetch({}, 'customerList');\r\n  \r\n  \r\n    useEffect(()=>{\r\n     const setCustomers = async () => {\r\n       const customers = await handleCustomerListFetch({}); \r\n       // @ts-ignore\r\n       setCustomerList(customers); \r\n     }\r\n     setCustomers(); \r\n    },[])\r\n\r\n\r\n    \r\n\r\n  \r\n  const handleSearch = (value) => {\r\n    if(customerState.data.length > 0 ){\r\n      const newCustomerList = customerState.data.filter(item => item.name.toLowerCase().includes(value.toLowerCase())); \r\n      setCustomerList(newCustomerList); \r\n    }\r\n     \r\n  }\r\n\r\n\r\n\r\n    \r\n\r\n  const [addNewCategoryVisible,setAddNewCategoryVisible] = useState(false);   \r\n\r\n  // console.log('customerState',customerState)\r\n\r\n\r\n\r\n\treturn (\r\n\t\t<>\r\n    {/* <h2 className='containerPageTitle'>\r\n      Categories\r\n    </h2> */}\r\n    <div className='categoryListContainer'>\r\n            <div className='categoryListContainer__header'>\r\n           \r\n\r\n          <div className='categoryListContainer__header-searchBar'>\r\n          <h2 className='categoryListContainer__header-title'>\r\n            Customers\r\n            </h2>\r\n\r\n\r\n          <Search\r\n            enterButton={false}\r\n            className='searchbarClassName'\r\n          placeholder=\"search customer..\"\r\n          onSearch={value =>handleSearch(value)}\r\n          // style={{ width: 300 }}\r\n        />\r\n          </div>\r\n            <Button\r\n          // type=\"primary\"\r\n          className='btnPrimaryClassNameoutline'\r\n          icon={<PlusOutlined />}\r\n          onClick={() => setAddNewCategoryVisible(true)}\r\n        >\r\n        Add New\r\n            \r\n            </Button>\r\n            </div>\r\n\r\n            <div className='categoryListContainer__afterHeader'>\r\n            {/* <Search\r\n      placeholder=\"search categories..\"\r\n      size=\"large\"\r\n      onSearch={value => console.log(value)}\r\n      style={{ width: 300 }}\r\n    /> */}\r\n            </div>\r\n\r\n     \r\n\t\t\t\r\n\t\t\t<div className='categoryListContainer__categoryList'>\r\n        {customerState.done && customerList.length > 0 && <MyTable\r\n        setCustomerList={setCustomerList}\r\n         data={customerList} />}\r\n        {customerState.isLoading && <DataTableSkeleton />}\r\n        {customerState.done && !(customerList.length > 0) && (\r\n\t\t\t<Empty title='No Region found'  />\r\n\t\t)}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\r\n\r\n{customerState.done && \r\n    <AddNewCustomer \r\n    setCustomerList={setCustomerList}\r\n          addNewCategoryVisible={addNewCategoryVisible} \r\n          setAddNewCategoryVisible={setAddNewCategoryVisible}\r\n          customerList={customerState.data}\r\n          \r\n           />}\r\n\r\n      \r\n\r\n        \r\n    </>\r\n\t);\r\n};\r\n\r\nexport default withRouter(CustomerList);\r\n","import React, {useState,useEffect} from 'react';\r\nimport {useHistory} from 'react-router-dom';\r\nimport { Table,Empty, Popconfirm, Space,Button, Input,Tooltip, notification  } from 'antd';\r\nimport { PlusOutlined, EditOutlined, DeleteOutlined,CheckCircleOutlined } from '@ant-design/icons';\r\n\r\n\r\n\r\n/// import hooks\r\nimport {  useHandleFetch } from \"../../hooks\";\r\n\r\n// import components\r\nimport { DataTableSkeleton } from \"../../components/Placeholders\";\r\n\r\n\r\n\r\nconst { Column } = Table;\r\nconst { Search } = Input;\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t  message: message || 'Page Created',\r\n\t  description: '',\r\n\t  icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n  };\r\n\r\n\r\n  const openErrorNotification = (message?: any) => {\r\n\tnotification.error({\r\n\t  message: message || 'Something Went Wrong',\r\n\t  description: '',\r\n\t  icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n  };\r\n\r\n\r\n\r\n\r\n\r\ninterface myTableProps {\r\n  data: any; \r\n  setBrandList: any; \r\n} \r\n\r\n\r\nconst MyTable = ({data,setBrandList}: myTableProps) => {\r\n    const [activeCategoryForEdit,setactiveCategoryForEdit] = useState(false); \r\n    const [deletePageState, handleDeletePageFetch] = useHandleFetch({}, 'deletePage');\r\n\r\n    const history = useHistory(); \r\n      \r\n      const handleDeletePage = async (id) => {\r\n        const deletePageRes = await handleDeletePageFetch({\r\n          urlOptions: {\r\n            placeHolders: {\r\n              id,\r\n            }\r\n            }\r\n          });\r\n\r\n            // @ts-ignore\r\n\t\t  if(deletePageRes && deletePageRes.status === 'ok'){\r\n\t\t\t  openSuccessNotification('Deleted Page'); \r\n\t\t\t  const newBrandList =  data.filter(item => item.id !== id);\r\n\t\t\t  setBrandList(newBrandList); \r\n\t\t  }\r\n      }\r\n      \r\n\r\n    return (\r\n        <>\r\n        <Table \r\n        // expandable={{\r\n        //     expandedRowRender: record => <p style={{ margin: 0 }}>{record.name}</p>,\r\n        //     rowExpandable: record => record.name !== 'Not Expandable',\r\n        //   }}\r\n        // bordered={true}\r\n        size='small'\r\n        // pagination={false}\r\n        dataSource={data}\r\n        >\r\n            <Column \r\n          title=\"\"\r\n           dataIndex=\"cover\"\r\n            key=\"id\" \r\n            width={'100px'}\r\n            \r\n           className='classnameofthecolumn'\r\n\r\n           render={(cover, record: any) => (\r\n            <>\r\n              <img\r\n                onClick={() => {\r\n                  setactiveCategoryForEdit(record);\r\n                  history.push('/admin/page/pageName')\r\n                }}\r\n                src={cover} alt='cover img' style={{\r\n                  height: '40px',\r\n                  width: '40px',\r\n                  objectFit: \"contain\",\r\n                  borderRadius: '3px',\r\n                  cursor: 'pointer'\r\n                }} />\r\n\r\n\r\n\r\n\r\n            </>\r\n          )}\r\n            />\r\n          <Column\r\n           title=\"Name\" \r\n           dataIndex=\"name\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n           render={(text, record: any) => (\r\n            <>\r\n\r\n              <h4\r\n                onClick={() => {\r\n                  setactiveCategoryForEdit(record);\r\n                  history.push('/admin/page/pageName')\r\n                }}\r\n                style={{\r\n                  fontWeight: 400,\r\n                  color: '#555',\r\n                  cursor: 'pointer'\r\n                }}>\r\n                {text}\r\n              </h4>\r\n\r\n\r\n            </>\r\n          )}\r\n            />\r\n\r\n<Column\r\n           title=\"Description\" \r\n           dataIndex=\"description\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n         \r\n            />\r\n          {/* <Column \r\n          \r\n          className='classnameofthecolumn'\r\n\r\n          title=\"Product\" dataIndex=\"product\" key=\"product\" /> */}\r\n\r\n          {/* <Column \r\n          \r\n          className='classnameofthecolumn'\r\n\r\n          title=\"Sub Category\" dataIndex=\"subCategory\" key=\"subCategory\" /> */}\r\n        \r\n        {/* <Column\r\n          title=\"Tags\"\r\n          dataIndex=\"tags\"\r\n          key=\"tags\"\r\n          render={tags => (\r\n            <>\r\n              {tags.map((tag : any) => (\r\n                <Tag color=\"blue\" key={tag}>\r\n                  {tag}\r\n                </Tag>\r\n              ))}\r\n            </>\r\n          )}\r\n        /> */}\r\n        <Column\r\n        \r\n        className='classnameofthecolumn'\r\n          title=\"\"\r\n          key=\"action\"\r\n          align='right'\r\n          render={(text, record : any) => (\r\n            <Space size=\"middle\">\r\n                <a href='##'>\r\n               <Tooltip placement=\"top\" title='Quick Edit Page'>\r\n              <span className='iconSize' onClick={() => {\r\n                setactiveCategoryForEdit(record); \r\n              }}> \r\n              <EditOutlined />\r\n            \r\n              </span>\r\n               </Tooltip>\r\n               </a>\r\n\r\n\r\n \r\n               <Popconfirm \r\n               \r\n               onConfirm={() => handleDeletePage(record.id)}\r\n               title=\"Are you sure？\" okText=\"Yes\" cancelText=\"No\">\r\n           \r\n           <span \r\n             className='iconSize iconSize-danger'\r\n             > \r\n             <DeleteOutlined/>\r\n            </span>\r\n           </Popconfirm>\r\n\r\n\r\n            </Space>\r\n          )}\r\n        />\r\n      </Table>\r\n\r\n\r\n  \r\n\r\n\r\n    \r\n\r\n\r\n    \r\n    </>\r\n    )\r\n}\r\n\r\n\r\ninterface Props {\r\n}\r\n\r\nconst PageList = ({}: Props) => {\r\n\r\n\r\n  const [pageList,setPageList] = useState([]);\r\n  const [pageState, handlePagsListFetch] = useHandleFetch({}, 'pageList');\r\n\r\n  const history = useHistory(); \r\n\r\n  useEffect(()=>{\r\n   const setPages = async () => {\r\n     const pages = await handlePagsListFetch({}); \r\n     // @ts-ignore\r\n     setPageList(pages); \r\n   }\r\n   setPages(); \r\n  },[])\r\n\r\n\r\n\r\n\r\n    \r\n  const handleSearch = (value) => {\r\n    if(pageState.data.length > 0 ){\r\n      const newBrandList = pageState.data.filter(item => item.name.toLowerCase().includes(value.toLowerCase())); \r\n      setPageList(newBrandList); \r\n    }\r\n     \r\n  }\r\n\r\n\treturn (\r\n\t\t<>\r\n  \r\n    <div className='categoryListContainer'>\r\n        <div className='categoryListContainer__header'>\r\n           <div className='categoryListContainer__header-searchBar'>\r\n\r\n          <h2 className='categoryListContainer__header-title'>\r\n            Pages\r\n            </h2>\r\n\r\n          <Search\r\n            enterButton={false}\r\n            className='searchbarClassName'\r\n          placeholder=\"search pages..\"\r\n          onSearch={value => handleSearch(value)}\r\n        />\r\n          </div>\r\n            <Button\r\n          // type=\"primary\"\r\n          className='btnPrimaryClassNameoutline'\r\n          icon={<PlusOutlined />}\r\n          onClick={() => history.push('/admin/page/new')}\r\n        >\r\n        Add New\r\n            \r\n            </Button>\r\n            </div>\r\n\r\n            <div className='categoryListContainer__afterHeader'>\r\n            {/* <Search\r\n      placeholder=\"search categories..\"\r\n      size=\"large\"\r\n      onSearch={value => console.log(value)}\r\n      style={{ width: 300 }}\r\n    /> */}\r\n            </div>\r\n\r\n     \r\n\t\t\t\r\n\t\t\t<div className='categoryListContainer__categoryList'>\r\n        {pageState.done && pageList.length > 0 && <MyTable \r\n          setBrandList={setPageList}\r\n        data={pageList} />}\r\n        {pageState.isLoading && <DataTableSkeleton />}\r\n        {pageState.done && !(pageList.length > 0) && (\r\n\t\t\t<div style={{\r\n\t\t\t\tmarginTop: '100px'\r\n\t\t\t}}>\r\n\t\t\t\t<Empty description='No Page found'  image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n\t\t\t</div>\r\n\t\t)}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\r\n\r\n    </>\r\n\t);\r\n};\r\n\r\nexport default PageList;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n\r\n// import hhooks\r\nimport { useHandleFetch } from '../../hooks';\r\n\r\n\r\n// import third party ui lib\r\nimport { Upload, message, Switch, Select, Button, notification, Modal, Empty, Steps, Tooltip } from 'antd';\r\n\r\nimport {\r\n\tCheckCircleOutlined,\r\n\tCaretRightOutlined,\r\n\tCaretLeftOutlined,\r\n\tCaretRightFilled,\r\n\tUserOutlined,\r\n\tInfoCircleOutlined,\r\n\tFileOutlined,\r\n\tInboxOutlined,\r\n\tFileAddOutlined,\r\n\tDeleteOutlined,\r\n\tCloseOutlined,\r\n\tCheckOutlined,\r\n\tPlusOutlined,\r\n\tFileImageFilled\r\n} from '@ant-design/icons';\r\n\r\nimport CKEditor from '@ckeditor/ckeditor5-react';\r\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\r\n\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport MediaLibrary from \"../../components/MediaLibrary\";\r\n\r\n\r\n\r\nconst { Option } = Select;\r\nconst { Step } = Steps;\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t\tmessage: message || 'Page Created',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n\tnotification.error({\r\n\t\tmessage: message || 'Something Went Wrong',\r\n\t\tdescription: '',\r\n\t\ticon: <InfoCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n\tname: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\n\r\n\r\n\r\nconst initialValues = {\r\n\tname: '',\r\n\turl: ''\r\n};\r\n\r\n\r\nconst steps = [\r\n\t{\r\n\t\ttitle: 'Order Information',\r\n\t\tcontent: '',\r\n\t\t// description: 'Add Customer & Products'\r\n\t},\r\n\t{\r\n\t\ttitle: 'Billing Address',\r\n\r\n\t},\r\n\t{\r\n\t\ttitle: 'Confirm Order',\r\n\t\tcontent: '',\r\n\t},\r\n];\r\n\r\n\r\n\r\n\r\ninterface Props {\r\n\r\n}\r\n\r\nconst AddNewPage = ({ }: Props) => {\r\n\r\n\tconst [addPageState, handleAddPageFetch] = useHandleFetch({}, 'addpage');\r\n\tconst [content, setContent] = useState(\"<p>Hello from the new page !</p>\");\r\n\tconst [myImages, setmyImages] = useState(false);\r\n\tconst [visibleMedia, setvisibleMedia] = useState(false);\r\n\tconst [coverImageId, setCoverImageId] = useState('');\r\n\r\n\r\n\tconst handleAddPageSubmit = async (values: any, actions: any) => {\r\n\t\tconsole.log('content', content);\r\n\t\tconsole.log('values', values);\r\n\t\tconst addOrderRes = await handleAddPageFetch({\r\n\t\t\tbody: {\r\n\t\t\t\tname: values.name,\r\n\t\t\t\tcontent: content,\r\n\t\t\t\turl: values.name,\r\n\t\t\t\tcover: myImages ? myImages[0] && myImages[0].id : '',\r\n\t\t\t},\r\n\t\t});\r\n\r\n\t\t// @ts-ignore\r\n\t\tif (addOrderRes && addOrderRes.status === 'ok') {\r\n\t\t\topenSuccessNotification();\r\n\r\n\r\n\t\t\tactions.resetForm();\r\n\t\t}\r\n\t\telse {\r\n\t\t\topenErrorNotification(\"Couldn't create page, Something went wrong\")\r\n\t\t}\r\n\r\n\t\tactions.setSubmitting(false);\r\n\t};\r\n\r\n\r\n\tconst getisSubmitButtonDisabled = (values, isValid) => {\r\n\t\tif (!isValid ||\r\n\t\t\t!values.name ||\r\n\t\t\t!values.pickUpLocation ||\r\n\t\t\t!values.time) {\r\n\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\r\n\tconst handleImagesDelete = (id) => {\r\n\t\t// @ts-ignore\r\n\t\tconst newImages = myImages && myImages.filter(image => {\r\n\t\t\treturn image.id !== id;\r\n\t\t})\r\n\r\n\t\tsetmyImages(newImages);\r\n\t}\r\n\r\n\r\n\r\n\r\n\tconsole.log('myImagesdx', myImages)\r\n\r\n\treturn (\r\n\t\t<Formik\r\n\t\t\tonSubmit={(values, actions) => handleAddPageSubmit(values, actions)}\r\n\t\t\tvalidationSchema={validationSchema}\r\n\t\t\tvalidateOnBlur={false}\r\n\t\t\tenableReinitialize={true}\r\n\t\t\tinitialValues={\r\n\t\t\t\t{ ...initialValues }\r\n\t\t\t}\r\n\t\t>\r\n\t\t\t{({\r\n\t\t\t\thandleChange,\r\n\t\t\t\tvalues,\r\n\t\t\t\thandleSubmit,\r\n\t\t\t\terrors,\r\n\t\t\t\tisValid,\r\n\t\t\t\tisSubmitting,\r\n\t\t\t\ttouched,\r\n\t\t\t\thandleBlur,\r\n\t\t\t\tsetFieldTouched,\r\n\t\t\t\thandleReset,\r\n\t\t\t}) => (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<div className=\"addNewPageContainer\">\r\n\t\t\t\t\t\t\t<h3 className='addNewPageContainer__heading'>\r\n\t\t\t\t\t\t\t\tAdd New Page\r\n\t\t                 \t</h3>\r\n\r\n\t\t\t\t\t\t\t<div className='addNewPageContainer__header'>\r\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs'>\r\n\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\tlabel='Title'\r\n\t\t\t\t\t\t\t\t\t\t\tvalue={values.name}\r\n\t\t\t\t\t\t\t\t\t\t\tname='name'\r\n\t\t\t\t\t\t\t\t\t\t\tisError={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addPageState.error['error']['name'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addPageState.error['error']['name'])}\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('name');\r\n\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\tlabel='URL'\r\n\t\t\t\t\t\t\t\t\t\t\tvalue={values.url}\r\n\t\t\t\t\t\t\t\t\t\t\tname='url'\r\n\t\t\t\t\t\t\t\t\t\t\tisError={(touched.url && errors.url) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addPageState.error['error']['url'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.url && errors.url) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addPageState.error['error']['url'])}\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('url');\r\n\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>Thumbnail</h3>\r\n\r\n\t\t\t\t\t\t\t\t<div className='aboutToUploadImagesContainer'>\r\n\t\t\t\t\t\t\t\t\t{myImages &&\r\n\t\t\t\t\t\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\t\t\t\t\t\tmyImages.length > 0 && myImages.map((image, index) => {\r\n\t\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div className='aboutToUploadImagesContainer__item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='aboutToUploadImagesContainer__item-imgContainer'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => setCoverImageId(image.id)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<img src={image.cover} alt={image.alt} />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<span\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => handleImagesDelete(image.id)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='aboutToUploadImagesContainer__item-remove'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<CloseOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t\t})}\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t{myImages ? !myImages[0] && (\r\n\t\t\t\t\t\t\t\t\t\t<Tooltip\r\n\t\t\t\t\t\t\t\t\t\t\ttitle={'Attach images'}>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetvisibleMedia(true);\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\tclassName='aboutToUploadImagesContainer__uploadItem'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t{/* <FileAddOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<FileImageTwoTone />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<FileImageOutlined /> */}\r\n\t\t\t\t\t\t\t\t\t\t\t\t<FileImageFilled />\r\n\t\t\t\t\t\t\t\t\t\t\t\t{/* <h5>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t Select From Library\r\n\t\t\t\t\t\t\t\t\t\t\t\t<     /h5> */}\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span className='aboutToUploadImagesContainer__uploadItem-plus'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<PlusOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t\t\t\t) : <Tooltip\r\n\t\t\t\t\t\t\t\t\t\ttitle={'Attach images'}>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetvisibleMedia(true);\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\tclassName='aboutToUploadImagesContainer__uploadItem'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t{/* <FileAddOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t<FileImageTwoTone />\r\n\t\t\t\t\t\t\t\t\t\t\t\t<FileImageOutlined /> */}\r\n\t\t\t\t\t\t\t\t\t\t\t\t<FileImageFilled />\r\n\t\t\t\t\t\t\t\t\t\t\t\t{/* <h5>\r\n\t\t\t\t\t\t\t\t\t\t\t\t Select From Library\r\n\t\t\t\t\t\t\t\t\t\t<     /h5> */}\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span className='aboutToUploadImagesContainer__uploadItem-plus'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<PlusOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</Tooltip>}\r\n\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className='addNewPageContainer__body'>\r\n\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\t\t\tContent\r\n                               </h3>\r\n\r\n\t\t\t\t\t\t\t\t<CKEditor\r\n\t\t\t\t\t\t\t\t\teditor={ClassicEditor}\r\n\t\t\t\t\t\t\t\t\tdata={content}\r\n\t\t\t\t\t\t\t\t\tonInit={editor => {\r\n\t\t\t\t\t\t\t\t\t\t// You can store the \"editor\" and use when it is needed.\r\n\t\t\t\t\t\t\t\t\t\tconsole.log('Editor is ready to use!', editor);\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\tonChange={(event, editor) => {\r\n\t\t\t\t\t\t\t\t\t\tconst data = editor.getData();\r\n\t\t\t\t\t\t\t\t\t\tsetContent(data);\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\tonBlur={(event, editor) => {\r\n\t\t\t\t\t\t\t\t\t\tconsole.log('Blur.', editor);\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\tonFocus={(event, editor) => {\r\n\t\t\t\t\t\t\t\t\t\tconsole.log('Focus.', editor);\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\tmarginTop: '20px'\r\n\t\t\t\t\t\t\t}}></div>\r\n\r\n\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\tloading={addPageState.isLoading}\r\n\t\t\t\t\t\t\t\tonClick={(e: any) => handleSubmit(e)}\r\n\t\t\t\t\t\t\t\tclassName='btnPrimaryClassNameoutline'\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\tCreate page\r\n                            </Button>\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t<MediaLibrary\r\n\t\t\t\t\t\t\tsetvisible={setvisibleMedia}\r\n\t\t\t\t\t\t\tvisible={visibleMedia}\r\n\t\t\t\t\t\t\tsetmyImages={setmyImages}\r\n\t\t\t\t\t\t\tmyImages={myImages}\r\n\t\t\t\t\t\t\tisModalOpenForImages={true}\r\n\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</>\r\n\t\t\t\t)}\r\n\t\t</Formik>\r\n\r\n\r\n\r\n\r\n\t);\r\n};\r\n\r\nexport default AddNewPage;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/*\r\n\r\n<div className=\"addNewPageContainer\">\r\n\t\t\t<h3 className='addNewPageContainer__heading'>\r\n\t\t\t\tAdd New Order\r\n\t\t\t</h3>\r\n\t\t\t<div className='addNewPageContainer__header'>\r\n\r\n\t\t\t</div>\r\n\t\t\t<div className='addNewPageContainer__body'>\r\n\r\n\t\t\t</div>\r\n\t\t</div>\r\n\r\n\r\n*/","import React,{useState} from 'react';\r\nimport { Modal  } from 'antd';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport {useHandleFetch} from '../../hooks';\r\n\r\nconst validationSchema = Yup.object().shape({\r\n\tname: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n\tdescription: Yup.string().label('Description').required('Description is required')\r\n});\r\n\r\n\r\n\r\n\r\n\r\ninterface Props {\r\n\tcategory: any;\r\n\tsetvisible: any; \r\n\tvisible: any;\r\n}\r\n\r\nconst QuickEdit = ({ category, setvisible, visible }: Props) => {\r\n\tconst [updateCategoryState, handleUpdateCategoryFetch] = useHandleFetch({}, 'updateCategory');\r\n\r\n\tconst handleSubmit = async (values : any, actions : any) => {\r\n\t  const updateCategoryRes = await handleUpdateCategoryFetch({\r\n\t\turlOptions: {\r\n\t\t\tplaceHolders: {\r\n\t\t\t  id: values.id,\r\n\t\t\t}\r\n\t\t  },\r\n\t\tbody: {\r\n\t\t\tname: values.name,\r\n\t\t\tdescription: values.description,\r\n\t\t},\r\n\t  });\r\n\t\r\n\t  actions.setSubmitting(false);\r\n\t};\r\n\t\r\n\r\n\tconst handleCancel = (e: any) => {\r\n        setvisible(false);\r\n      };\r\n\r\n\r\n\r\n\t  const getisSubmitButtonDisabled = (values,isValid) => {\r\n\t\tif(!values.name || !values.description || !isValid){\r\n\t\t\treturn true; \r\n\t\t}\r\n\t\treturn false; \r\n\t  }\r\n\r\n\treturn (\r\n\t\t<Formik\r\n\t\tonSubmit={(values, actions) => handleSubmit(values, actions)}\r\n\t\tvalidationSchema={validationSchema}\r\n\t\tvalidateOnBlur={false}\r\n\t\tenableReinitialize={true}\r\n\t\tinitialValues={\r\n\t\t  {...category}\r\n\t\t}\r\n\t  >\r\n\t\t{({\r\n\t\t  handleChange,\r\n\t\t  values,\r\n\t\t  handleSubmit,\r\n\t\t  errors,\r\n\t\t  isValid,\r\n\t\t  isSubmitting,\r\n\t\t  touched,\r\n\t\t  handleBlur,\r\n\t\t  setFieldTouched,\r\n\t\t  handleReset,\r\n\t\t}) => (\r\n\t\t\t<>\r\n\t\t\t<Modal\r\n\t\t\ttitle=\"Quick Edit\"\r\n\t\t\tvisible={visible}\r\n\t\t\tonOk={(e : any) => handleSubmit(e)}\r\n\t\t\tonCancel={handleCancel}\r\n\t\t\tokText='Update'\r\n\t\t\tokButtonProps={{\r\n\t\t\tloading: isSubmitting,\r\n\t\t\thtmlType: \"submit\",\r\n\t\t\tdisabled: getisSubmitButtonDisabled(values, isValid)\r\n\t\t\t}}\r\n  >\r\n  <Input \r\n\t\t\t   label='Title'\r\n\t\t\t   value={values.name}\r\n\t\t\t   name='name'\r\n\t\t\t   isError={(touched.name && errors.name) ||\r\n\t\t\t\t  (!isSubmitting && updateCategoryState.error['error']['name'])}\r\n\t\t\t  \r\n\t\t\t\t  errorString={(touched.name && errors.name) ||\r\n\t\t\t\t\t  (!isSubmitting && updateCategoryState.error['error']['name'])}\r\n\t\t\t   onChange={(e : any) => {\r\n\t\t\t\t  handleChange(e);\r\n\t\t\t\t  setFieldTouched('name');\r\n\t\t\t\t}}\r\n\t\t\t   />\r\n\t\t\t  <TextArea\r\n\t\t\t   label='Description' \r\n\t\t\t   value={values.description}\r\n\t\t\t   name='description'\r\n\t\t\t   isError={(touched.description && errors.description) ||\r\n\t\t\t\t  (!isSubmitting && updateCategoryState.error['error']['description'])}\r\n\t\t\t  \r\n\t\t\t\t  errorString={(touched.description && errors.description) ||\r\n\t\t\t\t\t  (!isSubmitting && updateCategoryState.error['error']['description'])}\r\n\t\t\t   onChange={(e : any) => {\r\n\t\t\t\t  handleChange(e);\r\n\t\t\t\t  setFieldTouched('description');\r\n\t\t\t\t}}\r\n\t\t\t\t />\r\n  </Modal>\r\n\t\t\t  \r\n\t\t\t</>\r\n\t\t  )}\r\n\t  </Formik>\r\n\t);\r\n};\r\n\r\n\r\nexport default QuickEdit;\r\n","// @ts-nocheck\r\n\r\nimport React from 'react'; \r\nimport { Tag, Input, Tooltip } from 'antd';\r\nimport { PlusOutlined } from '@ant-design/icons';\r\n\r\nclass EditableTagGroup extends React.Component {\r\n  state = {\r\n    tags: [],\r\n    inputVisible: false,\r\n    inputValue: '',\r\n    editInputIndex: -1,\r\n    editInputValue: '',\r\n  };\r\n\r\n  handleClose = removedTag => {\r\n    const tags = this.state.tags.filter(tag => tag !== removedTag);\r\n    this.setState({ tags });\r\n  };\r\n\r\n  showInput = () => {\r\n    this.setState({ inputVisible: true }, () => this.input.focus());\r\n  };\r\n\r\n  handleInputChange = e => {\r\n    this.setState({ inputValue: e.target.value });\r\n  };\r\n\r\n  handleInputConfirm = () => {\r\n    const { inputValue } = this.state;\r\n    let { tags } = this.state;\r\n    if (inputValue && tags.indexOf(inputValue) === -1) {\r\n      tags = [...tags, inputValue];\r\n    }\r\n    this.setState({\r\n      tags,\r\n      inputVisible: false,\r\n      inputValue: '',\r\n    });\r\n  };\r\n\r\n  handleEditInputChange = e => {\r\n    this.setState({ editInputValue: e.target.value });\r\n  };\r\n\r\n  handleEditInputConfirm = () => {\r\n    this.setState(({ tags, editInputIndex, editInputValue }) => {\r\n      const newTags = [...tags];\r\n      newTags[editInputIndex] = editInputValue;\r\n\r\n      return {\r\n        tags: newTags,\r\n        editInputIndex: -1,\r\n        editInputValue: '',\r\n      };\r\n    });\r\n  };\r\n\r\n  saveInputRef = input => {\r\n    this.input = input;\r\n  };\r\n\r\n  saveEditInputRef = input => {\r\n    this.editInput = input;\r\n  };\r\n\r\n  render() {\r\n    const { tags, inputVisible, inputValue, editInputIndex, editInputValue } = this.state;\r\n    return (\r\n      <>\r\n        {tags.map((tag, index) => {\r\n          if (editInputIndex === index) {\r\n            return (\r\n              <Input\r\n                ref={this.saveEditInputRef}\r\n                key={tag}\r\n                size=\"small\"\r\n                className=\"tag-input\"\r\n                value={editInputValue}\r\n                onChange={this.handleEditInputChange}\r\n                onBlur={this.handleEditInputConfirm}\r\n                onPressEnter={this.handleEditInputConfirm}\r\n              />\r\n            );\r\n          }\r\n\r\n          const isLongTag = tag.length > 20;\r\n\r\n          const tagElem = (\r\n            <Tag\r\n              className=\"edit-tag\"\r\n              key={tag}\r\n              closable={index !== 0}\r\n              onClose={() => this.handleClose(tag)}\r\n            >\r\n              <span\r\n                onDoubleClick={e => {\r\n                  if (index !== 0) {\r\n                    this.setState({ editInputIndex: index, editInputValue: tag }, () => {\r\n                      this.editInput.focus();\r\n                    });\r\n                    e.preventDefault();\r\n                  }\r\n                }}\r\n              >\r\n                {isLongTag ? `${tag.slice(0, 20)}...` : tag}\r\n              </span>\r\n            </Tag>\r\n          );\r\n          return isLongTag ? (\r\n            <Tooltip title={tag} key={tag}>\r\n              {tagElem}\r\n            </Tooltip>\r\n          ) : (\r\n            tagElem\r\n          );\r\n        })}\r\n        {inputVisible && (\r\n          <Input\r\n          style={{\r\n            margin: \"10px 0\"\r\n          }}\r\n            ref={this.saveInputRef}\r\n            type=\"text\"\r\n            size=\"small\"\r\n            className=\"tag-input\"\r\n            value={inputValue}\r\n            onChange={this.handleInputChange}\r\n            onBlur={this.handleInputConfirm}\r\n            onPressEnter={this.handleInputConfirm}\r\n          />\r\n        )}\r\n        {!inputVisible && (\r\n          <Tag className=\"site-tag-plus\" onClick={this.showInput}>\r\n            <PlusOutlined /> New Value\r\n          </Tag>\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EditableTagGroup","import React, {useState} from 'react';\r\n\r\n// import third party ui lib\r\nimport { Upload, message, Switch, Select, Button, notification,Table, Space, Input as CoolInput,Tooltip, Modal,\r\n\r\n} from 'antd';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n\r\n\r\nimport {\r\n\tFileOutlined,\r\n\tInboxOutlined,\r\n\tRadiusUpleftOutlined,\r\n\tRadiusUprightOutlined,\r\n\tRadiusBottomleftOutlined,\r\n\tRadiusBottomrightOutlined,\r\n\tPlusOutlined,\r\n\tDeleteOutlined,\r\n\tEditOutlined\r\n} from '@ant-design/icons';\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n\r\n\r\n/// import hooks\r\nimport { useFetch, useHandleFetch } from \"../../hooks\";\r\n\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport { DataTableSkeleton } from \"../../components/Placeholders\";\r\nimport QuickEdit from \"./QuickEdit\"\r\nimport AddAttributeValues from \"./AddAttributeValues\"\r\n\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n\tname: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n\tdescription: Yup.string().label('Description').required('Description is required')\r\n});\r\n\r\n\r\nconst initialValues = {\r\n\tname: '',\r\n\tdescription: ''\r\n}\r\n\r\n\r\nconst { Column, ColumnGroup } = Table;\r\nconst { Search } = CoolInput;\r\n\r\n\r\n\r\nconst MyTable = ({data}) => {\r\n    const [visible,setvisible] = useState(false);   \r\n\tconst [activeCategoryForEdit,setactiveCategoryForEdit] = useState(false); \r\n    const [deleteTagState, handleDeleteTagFetch] = useHandleFetch({}, 'deleteTag');\r\n\r\n\r\n\tconst handleDeleteCategory = async (id) => {\r\n        const deleteTagRes = await handleDeleteTagFetch({\r\n          urlOptions: {\r\n            placeHolders: {\r\n              id,\r\n            }\r\n            }\r\n          });\r\n      }\r\n\r\n\r\n    const handleOk = (e: any) => {\r\n        setvisible(false);\r\n      \r\n      };\r\n    \r\n      const handleCancel = (e: any) => {\r\n        setvisible(false);\r\n      };\r\n\r\n      \r\n\r\n    return (\r\n        <>\r\n         <Table \r\n        // expandable={{\r\n        //     expandedRowRender: record => <p style={{ margin: 0 }}>{record.name}</p>,\r\n        //     rowExpandable: record => record.name !== 'Not Expandable',\r\n        //   }}\r\n        // bordered={true}\r\n        size='small'\r\n        // pagination={false}\r\n        dataSource={data}\r\n        >\r\n\r\n          <Column\r\n           title=\"Name\" \r\n           dataIndex=\"name\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n         \r\n            />\r\n\r\n<Column\r\n           title=\"Description\" \r\n           dataIndex=\"description\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n         \r\n            />\r\n        <Column\r\n        \r\n        className='classnameofthecolumn'\r\n          title=\"\"\r\n          key=\"action\"\r\n          align='right'\r\n          render={(text, record : any) => (\r\n            <Space size=\"middle\">\r\n            \r\n               <Tooltip placement=\"top\" title='Quick Edit Tag'>\r\n              <span className='iconSize' onClick={() => {\r\n                setvisible(true)\r\n                setactiveCategoryForEdit(record); \r\n              }}> \r\n              <EditOutlined />\r\n            \r\n              </span>\r\n               </Tooltip>\r\n\r\n\r\n             \r\n              <Tooltip placement=\"top\" title='Delete Tag'>\r\n            \r\n\r\n             <span \r\n             className='iconSize iconSize-danger'\r\n             onClick={() => handleDeleteCategory(record.id)}\r\n             > \r\n             <DeleteOutlined/>\r\n            </span>\r\n            \r\n          </Tooltip>\r\n             \r\n            </Space>\r\n          )}\r\n        />\r\n      </Table>\r\n\r\n\r\n\r\n     \r\n\r\n\t\t{activeCategoryForEdit &&   <QuickEdit \r\n    setvisible={setvisible}\r\n    visible={visible}\r\n    category={activeCategoryForEdit}/>}\r\n    </>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\n\r\nconst props = {\r\n\tname: 'file',\r\n\tmultiple: true,\r\n\taction: 'https://www.mocky.io/v2/5cc8019d300000980a055e76',\r\n\tonChange(info: any) {\r\n\t\tconst { status } = info.file;\r\n\t\tif (status !== 'uploading') {\r\n\t\t\t// console.log(info.file, info.fileList);\r\n\t\t}\r\n\t\tif (status === 'done') {\r\n\t\t\tmessage.success(`${info.file.name} file uploaded successfully.`);\r\n\t\t} else if (status === 'error') {\r\n\t\t\tmessage.error(`${info.file.name} file upload failed.`);\r\n\t\t}\r\n\t}\r\n};\r\n\r\ninterface Props {}\r\n\r\nconst AttributeList = ({  }: Props) => {\r\n\tconst tagState = useFetch([], [], 'brandList', {\r\n\t\turlOptions: {\r\n\t\t  params: {\r\n\t\t\tisSubCategory: true,\r\n\t\t  },\r\n\t\t},\r\n\t  });\r\n\r\n\t  const [updateCategoryState, handleUpdateCategoryFetch] = useHandleFetch({}, 'updateCategory');\r\n\t  const [addNewCategoryVisible,setAddNewCategoryVisible] = useState(false);   \r\n\r\n\r\n\r\n\t  const handleSubmit = async (values : any, actions : any) => {\r\n\t\tconst updateCategoryRes = await handleUpdateCategoryFetch({\r\n\t\t  urlOptions: {\r\n\t\t\t  placeHolders: {\r\n\t\t\t\tid: values.id,\r\n\t\t\t  }\r\n\t\t\t},\r\n\t\t  body: {\r\n\t\t\t  name: values.name,\r\n\t\t\t  description: values.description,\r\n\t\t  },\r\n\t\t});\r\n\t  \r\n\t\tactions.setSubmitting(false);\r\n\t  };\r\n\t  \r\n \r\n  \r\n  \r\n  \r\n\t\tconst getisSubmitButtonDisabled = (values,isValid) => {\r\n\t\t  if(!values.name || !values.description || !isValid){\r\n\t\t\t  return true; \r\n\t\t  }\r\n\t\t  return false; \r\n\t\t}\r\n\r\n\r\n\r\n\r\n  const handleOkAddNewCategory = (e: any) => {\r\n    setAddNewCategoryVisible(false);\r\n  \r\n  };\r\n\r\n  const handleCancelAddNewCategory = (e: any) => {\r\n    setAddNewCategoryVisible(false);\r\n  };\r\n\r\n\treturn (\r\n\t\t<div className='site-layout-background' style={{ padding: '30px 20px 30px 20px', minHeight: 360 }}>\r\n\t\t\t<div className='addproductSectionTitleContainer'>\r\n\t\t\t\t<h2 className='addprouctSectionTitle'>Add Attribute</h2>\r\n\t\t\t</div>\r\n\t\t\t<div className='addproductSectionContainer addproductSectionContainer-tags'>\r\n\t\t\t\t<div className='addproductSection addproductSection-left'>\r\n\t\t\t\t<Formik\r\n\t\tonSubmit={(values, actions) => handleSubmit(values, actions)}\r\n\t\tvalidationSchema={validationSchema}\r\n\t\tvalidateOnBlur={false}\r\n\t\tenableReinitialize={true}\r\n\t\tinitialValues={\r\n\t\t  {...initialValues}\r\n\t\t}\r\n\t  >\r\n\t\t{({\r\n\t\t  handleChange,\r\n\t\t  values,\r\n\t\t  handleSubmit,\r\n\t\t  errors,\r\n\t\t  isValid,\r\n\t\t  isSubmitting,\r\n\t\t  touched,\r\n\t\t  handleBlur,\r\n\t\t  setFieldTouched,\r\n\t\t  handleReset,\r\n\t\t}) => (\r\n\t\t\t<>\r\n  <Input \r\n\t\t\t   label='Title'\r\n\t\t\t   value={values.name}\r\n\t\t\t   name='name'\r\n\t\t\t   isError={(touched.name && errors.name) ||\r\n\t\t\t\t  (!isSubmitting && updateCategoryState.error['error']['name'])}\r\n\t\t\t  \r\n\t\t\t\t  errorString={(touched.name && errors.name) ||\r\n\t\t\t\t\t  (!isSubmitting && updateCategoryState.error['error']['name'])}\r\n\t\t\t   onChange={(e : any) => {\r\n\t\t\t\t  handleChange(e);\r\n\t\t\t\t  setFieldTouched('name');\r\n\t\t\t\t}}\r\n\t\t\t   />\r\n\r\n\t\t\t   <div style={{\r\n\t\t\t\t   marginTop: '0px'\r\n\t\t\t   }}></div>\r\n\t\t\t  \r\n\r\n\t\t\t  <h3 className='inputFieldLabel'> Values</h3>\r\n\t\t\t\t\r\n\t\t\t\t<AddAttributeValues />\r\n\t\t\t\t\t  <Button \r\n\t\t\t\t\t  style={{\r\n\t\t\t\t\t\t  display: 'block',\r\n\t\t\t\t\t\t  marginTop: '20px'\r\n\t\t\t\t\t  }}\r\n\t\t\t\t\t\t\ttype='primary'\r\n\t\t\t\t\t\t\tonClick={(e: any) => handleSubmit(e)}\r\n\t\t\t\t\t\t\tdisabled={getisSubmitButtonDisabled(values,isValid)}\r\n\t\t\t\t\t\t\tloading={isSubmitting}\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t >\r\n\t\t\t\t\t\tCreate\r\n\t\t\t\t\t</Button>\r\n\t\t\t</>\r\n\t\t  )}\r\n\t  </Formik>\r\n\r\n\r\n\t\t\t\t</div>\r\n                <div className='addproductSection addproductSection-right'> \r\n\r\n\t\t\t\t<div className='categoryListContainer'>\r\n            <div className='categoryListContainer__header'>\r\n           \r\n\r\n          <div className='categoryListContainer__header-searchBar-tag'>\r\n          {/* <h2 className='categoryListContainer__header-title'>\r\n            Brand\r\n            </h2> */}\r\n\r\n\r\n          <Search\r\n            enterButton={false}\r\n            className='searchbarClassName'\r\n          placeholder=\"search categories..\"\r\n          onSearch={value => console.log(value)}\r\n          // style={{ width: 300 }}\r\n        />\r\n          </div>\r\n            {/* <Button\r\n          // type=\"primary\"\r\n          className='btnPrimaryClassNameoutline'\r\n          icon={<PlusOutlined />}\r\n          onClick={() => setAddNewCategoryVisible(true)}\r\n        >\r\n        Add New\r\n            \r\n            </Button> */}\r\n            </div>\r\n\r\n            <div className='categoryListContainer__afterHeader'>\r\n            {/* <Search\r\n      placeholder=\"search categories..\"\r\n      size=\"large\"\r\n      onSearch={value => console.log(value)}\r\n      style={{ width: 300 }}\r\n    /> */}\r\n            </div>\r\n\r\n     \r\n\t\t\t\r\n\t\t\t<div className='categoryListContainer__categoryList'>\r\n\t\t\t\t{tagState.done && tagState.data.length > 0 && <MyTable data={tagState.data} />}\r\n\t\t\t\t{tagState.isLoading && <DataTableSkeleton />}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\r\n                </div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default AttributeList;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Modal, Select, notification, Empty, Spin } from 'antd';\r\nimport * as Yup from 'yup';\r\nimport { CheckCircleOutlined, InfoCircleOutlined } from '@ant-design/icons';\r\n\r\n// import components\r\nimport { useHandleFetch } from '../../hooks';\r\n\r\n\r\nconst { Option } = Select;\r\n\r\n\r\nconst QuickEdit = ({ id, setShowInvoice, showInvoice }) => {\r\n    const [orderDetailState, handleOrderDetailFetch] = useHandleFetch({}, 'orderDetail');\r\n\r\n    useEffect(() => {\r\n        const getOrderDetail = async () => {\r\n            await handleOrderDetailFetch({\r\n                urlOptions: {\r\n                    placeHolders: {\r\n                        id\r\n                    }\r\n                }\r\n            })\r\n        };\r\n\r\n        getOrderDetail();\r\n\r\n    }, [id]);\r\n\r\n\r\n    console.log('orderDetailState', orderDetailState)\r\n\r\n    const handleOk = () => {\r\n        window.print()\r\n    }\r\n\r\n    return (\r\n        <Modal\r\n            title=\"Invoice\"\r\n            visible={showInvoice}\r\n            bodyStyle={{\r\n                margin: '0',\r\n                padding: '10px'\r\n            }}\r\n            onCancel={() => setShowInvoice(false)}\r\n            width={'60vw'}\r\n            okText='Print'\r\n            onOk={() => handleOk()}\r\n        >\r\n            {orderDetailState.isLoading && <Spin />}\r\n            {orderDetailState.data && Object.keys(orderDetailState.data).length > 0 && (\r\n                <>\r\n                    <div className='invoiceContainer'>\r\n                        <table\r\n                            width=\"100%\"\r\n                            border={0}\r\n                            cellPadding={0}\r\n                            cellSpacing={0}\r\n                            align=\"center\"\r\n                            className=\"fullTable\"\r\n                            bgcolor=\"#e1e1e1\"\r\n                        >\r\n                            <tbody>\r\n                                <tr>\r\n                                    <td height={20} />\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>\r\n                                        <table\r\n                                            width={600}\r\n                                            border={0}\r\n                                            cellPadding={0}\r\n                                            cellSpacing={0}\r\n                                            align=\"center\"\r\n                                            className=\"fullTable\"\r\n                                            bgcolor=\"#ffffff\"\r\n                                            style={{ borderRadius: \"10px 10px 0 0\" }}\r\n                                        >\r\n                                            <tbody>\r\n                                                <tr className=\"hiddenMobile\">\r\n                                                    <td height={40} />\r\n                                                </tr>\r\n                                                <tr className=\"visibleMobile\">\r\n                                                    <td height={30} />\r\n                                                </tr>\r\n                                                <tr>\r\n                                                    <td>\r\n                                                        <table\r\n                                                            width={480}\r\n                                                            border={0}\r\n                                                            cellPadding={0}\r\n                                                            cellSpacing={0}\r\n                                                            align=\"center\"\r\n                                                            className=\"fullPadding\"\r\n                                                        >\r\n                                                            <tbody>\r\n                                                                <tr>\r\n                                                                    <td>\r\n                                                                        <table\r\n                                                                            width={220}\r\n                                                                            border={0}\r\n                                                                            cellPadding={0}\r\n                                                                            cellSpacing={0}\r\n                                                                            align=\"left\"\r\n                                                                            className=\"col\"\r\n                                                                        >\r\n                                                                            <tbody>\r\n                                                                                {/* <tr>\r\n                                                                                    <td align=\"left\">\r\n                                                                                        {\" \"}\r\n                                                                                        // <img\r\n                                                                                        //     src=\"http://www.supah.it/dribbble/017/logo.png\"\r\n                                                                                        //     width={32}\r\n                                                                                        //     height={32}\r\n                                                                                        //     alt=\"logo\"\r\n                                                                                        //     border={0}\r\n                                                                                        // />\r\n                                                                                    </td>\r\n                                                                                </tr> */}\r\n                                                                                <tr className=\"hiddenMobile\">\r\n                                                                                    <td height={40} />\r\n                                                                                </tr>\r\n                                                                                <tr className=\"visibleMobile\">\r\n                                                                                    <td height={20} />\r\n                                                                                </tr>\r\n                                                                                <tr>\r\n                                                                                    <td\r\n                                                                                        style={{\r\n                                                                                            fontSize: 12,\r\n                                                                                            color: \"#5b5b5b\",\r\n                                                                                            fontFamily: '\"Open Sans\", sans-serif',\r\n                                                                                            lineHeight: 1.6,\r\n                                                                                            verticalAlign: \"top\",\r\n                                                                                            textAlign: \"left\"\r\n                                                                                        }}\r\n                                                                                    >\r\n                                                                                        Hello, {orderDetailState.data['name']}\r\n                                                                                        <br /> Thank you for your order.\r\n                                </td>\r\n                                                                                </tr>\r\n                                                                            </tbody>\r\n                                                                        </table>\r\n                                                                        <table\r\n                                                                            width={220}\r\n                                                                            border={0}\r\n                                                                            cellPadding={0}\r\n                                                                            cellSpacing={0}\r\n                                                                            align=\"right\"\r\n                                                                            className=\"col\"\r\n                                                                        >\r\n                                                                            <tbody>\r\n                                                                                <tr className=\"visibleMobile\">\r\n                                                                                    <td height={20} />\r\n                                                                                </tr>\r\n                                                                                <tr>\r\n                                                                                    <td height={5} />\r\n                                                                                </tr>\r\n                                                                                <tr>\r\n                                                                                    <td\r\n                                                                                        style={{\r\n                                                                                            fontSize: 21,\r\n                                                                                            color: \"#ff0000\",\r\n                                                                                            letterSpacing: \"-1px\",\r\n                                                                                            fontFamily: '\"Open Sans\", sans-serif',\r\n                                                                                            lineHeight: 1.6,\r\n                                                                                            verticalAlign: \"top\",\r\n                                                                                            textAlign: \"right\"\r\n                                                                                        }}\r\n                                                                                    >\r\n                                                                                        Invoice\r\n                                </td>\r\n                                                                                </tr>\r\n                                                                                <tr></tr>\r\n                                                                                <tr className=\"hiddenMobile\">\r\n                                                                                    <td height={50} />\r\n                                                                                </tr>\r\n                                                                                <tr className=\"visibleMobile\">\r\n                                                                                    <td height={20} />\r\n                                                                                </tr>\r\n                                                                                <tr>\r\n                                                                                    <td\r\n                                                                                        style={{\r\n                                                                                            fontSize: 12,\r\n                                                                                            color: \"#5b5b5b\",\r\n                                                                                            fontFamily: '\"Open Sans\", sans-serif',\r\n                                                                                            lineHeight: 1.6,\r\n                                                                                            verticalAlign: \"top\",\r\n                                                                                            textAlign: \"right\"\r\n                                                                                        }}\r\n                                                                                    >\r\n                                                                                        <small>ORDER</small> #{orderDetailState.data['id']}\r\n                                                                                        <br />\r\n                                                                                        <small>\r\n                                                                                            {orderDetailState.data['date_created']}\r\n\r\n                                                                                        </small>\r\n                                                                                    </td>\r\n                                                                                </tr>\r\n                                                                            </tbody>\r\n                                                                        </table>\r\n                                                                    </td>\r\n                                                                </tr>\r\n                                                            </tbody>\r\n                                                        </table>\r\n                                                    </td>\r\n                                                </tr>\r\n                                            </tbody>\r\n                                        </table>\r\n                                    </td>\r\n                                </tr>\r\n                            </tbody>\r\n                        </table>\r\n                        {/* /Header */}\r\n                        {/* Order Details */}\r\n                        {orderDetailState.data && orderDetailState.data['products'] && orderDetailState.data['products'].length > 0 && (\r\n                            <table\r\n                                width=\"100%\"\r\n                                border={0}\r\n                                cellPadding={0}\r\n                                cellSpacing={0}\r\n                                align=\"center\"\r\n                                className=\"fullTable\"\r\n                                bgcolor=\"#e1e1e1\"\r\n                            >\r\n                                <tbody>\r\n                                    <tr>\r\n                                        <td>\r\n                                            <table\r\n                                                width={600}\r\n                                                border={0}\r\n                                                cellPadding={0}\r\n                                                cellSpacing={0}\r\n                                                align=\"center\"\r\n                                                className=\"fullTable\"\r\n                                                bgcolor=\"#ffffff\"\r\n                                            >\r\n                                                <tbody>\r\n                                                    <tr></tr>\r\n                                                    <tr className=\"hiddenMobile\">\r\n                                                        <td height={60} />\r\n                                                    </tr>\r\n                                                    <tr className=\"visibleMobile\">\r\n                                                        <td height={40} />\r\n                                                    </tr>\r\n                                                    <tr>\r\n                                                        <td>\r\n                                                            <table\r\n                                                                width={480}\r\n                                                                border={0}\r\n                                                                cellPadding={0}\r\n                                                                cellSpacing={0}\r\n                                                                align=\"center\"\r\n                                                                className=\"fullPadding\"\r\n                                                            >\r\n                                                                <tbody>\r\n                                                                    <tr>\r\n                                                                        <th\r\n                                                                            style={{\r\n                                                                                fontSize: 12,\r\n                                                                                fontFamily: '\"Open Sans\", sans-serif',\r\n                                                                                color: \"#5b5b5b\",\r\n                                                                                fontWeight: \"normal\",\r\n                                                                                lineHeight: 1.6,\r\n                                                                                verticalAlign: \"top\",\r\n                                                                                padding: \"0 10px 7px 0\"\r\n                                                                            }}\r\n                                                                            width=\"52%\"\r\n                                                                            align=\"left\"\r\n                                                                        >\r\n                                                                            Name\r\n                        </th>\r\n\r\n                                                                        <th\r\n                                                                            style={{\r\n                                                                                fontSize: 12,\r\n                                                                                fontFamily: '\"Open Sans\", sans-serif',\r\n                                                                                color: \"#5b5b5b\",\r\n                                                                                fontWeight: \"normal\",\r\n                                                                                lineHeight: 1.6,\r\n                                                                                verticalAlign: \"top\",\r\n                                                                                padding: \"0 0 7px\"\r\n                                                                            }}\r\n                                                                            align=\"center\"\r\n                                                                        >\r\n                                                                            Quantity\r\n                        </th>\r\n                                                                        <th\r\n                                                                            style={{\r\n                                                                                fontSize: 12,\r\n                                                                                fontFamily: '\"Open Sans\", sans-serif',\r\n                                                                                color: \"#1e2b33\",\r\n                                                                                fontWeight: \"normal\",\r\n                                                                                lineHeight: 1.6,\r\n                                                                                verticalAlign: \"top\",\r\n                                                                                padding: \"0 0 7px\"\r\n                                                                            }}\r\n                                                                            align=\"right\"\r\n                                                                        >\r\n                                                                            Subtotal\r\n                        </th>\r\n                                                                    </tr>\r\n\r\n\r\n                                                                    {orderDetailState.data['products'].map(item => {\r\n                                                                        return (\r\n                                                                            <>\r\n                                                                                <tr>\r\n                                                                                    <td\r\n                                                                                        height={1}\r\n                                                                                        style={{ background: \"#bebebe\" }}\r\n                                                                                        colSpan={4}\r\n                                                                                    />\r\n                                                                                </tr>\r\n                                                                                <tr>\r\n                                                                                    <td height={10} colSpan={4} />\r\n                                                                                </tr>\r\n                                                                                <tr>\r\n                                                                                    <td\r\n                                                                                        style={{\r\n                                                                                            fontSize: 12,\r\n                                                                                            fontFamily: '\"Open Sans\", sans-serif',\r\n                                                                                            color: \"#ff0000\",\r\n                                                                                            lineHeight: 1.6,\r\n                                                                                            verticalAlign: \"top\",\r\n                                                                                            padding: \"10px 0\"\r\n                                                                                        }}\r\n                                                                                        className=\"article\"\r\n                                                                                    >\r\n                                                                                        {item.name}\r\n                                                                                    </td>\r\n\r\n                                                                                    <td\r\n                                                                                        style={{\r\n                                                                                            fontSize: 12,\r\n                                                                                            fontFamily: '\"Open Sans\", sans-serif',\r\n                                                                                            color: \"#646a6e\",\r\n                                                                                            lineHeight: 1.6,\r\n                                                                                            verticalAlign: \"top\",\r\n                                                                                            padding: \"10px 0\"\r\n                                                                                        }}\r\n                                                                                        align=\"center\"\r\n                                                                                    >\r\n                                                                                        {item.quantity}\r\n                                                                                    </td>\r\n                                                                                    <td\r\n                                                                                        style={{\r\n                                                                                            fontSize: 12,\r\n                                                                                            fontFamily: '\"Open Sans\", sans-serif',\r\n                                                                                            color: \"#1e2b33\",\r\n                                                                                            lineHeight: 1.6,\r\n                                                                                            verticalAlign: \"top\",\r\n                                                                                            padding: \"10px 0\"\r\n                                                                                        }}\r\n                                                                                        align=\"right\"\r\n                                                                                    >\r\n                                                                                        {item.quantity * item.price}\r\n                                                                                    </td>\r\n                                                                                </tr>\r\n                                                                            </>\r\n                                                                        )\r\n                                                                    })}\r\n\r\n\r\n                                                                    <tr>\r\n                                                                        <td\r\n                                                                            height={1}\r\n                                                                            colSpan={4}\r\n                                                                            style={{ borderBottom: \"1px solid #e4e4e4\" }}\r\n                                                                        />\r\n                                                                    </tr>\r\n                                                                </tbody>\r\n                                                            </table>\r\n                                                        </td>\r\n                                                    </tr>\r\n                                                    <tr>\r\n                                                        <td height={20} />\r\n                                                    </tr>\r\n                                                </tbody>\r\n                                            </table>\r\n                                        </td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </table>\r\n                        )}\r\n                        {/* /Order Details */}\r\n                        {/* Total */}\r\n                        <table\r\n                            width=\"100%\"\r\n                            border={0}\r\n                            cellPadding={0}\r\n                            cellSpacing={0}\r\n                            align=\"center\"\r\n                            className=\"fullTable\"\r\n                            bgcolor=\"#e1e1e1\"\r\n                        >\r\n                            <tbody>\r\n                                <tr>\r\n                                    <td>\r\n                                        <table\r\n                                            width={600}\r\n                                            border={0}\r\n                                            cellPadding={0}\r\n                                            cellSpacing={0}\r\n                                            align=\"center\"\r\n                                            className=\"fullTable\"\r\n                                            bgcolor=\"#ffffff\"\r\n                                        >\r\n                                            <tbody>\r\n                                                <tr>\r\n                                                    <td>\r\n                                                        {/* Table Total */}\r\n                                                        <table\r\n                                                            width={480}\r\n                                                            border={0}\r\n                                                            cellPadding={0}\r\n                                                            cellSpacing={0}\r\n                                                            align=\"center\"\r\n                                                            className=\"fullPadding\"\r\n                                                        >\r\n                                                            <tbody>\r\n                                                                <tr>\r\n                                                                    <td\r\n                                                                        style={{\r\n                                                                            fontSize: 12,\r\n                                                                            fontFamily: '\"Open Sans\", sans-serif',\r\n                                                                            color: \"#646a6e\",\r\n                                                                            lineHeight: 1.6,\r\n                                                                            verticalAlign: \"top\",\r\n                                                                            textAlign: \"right\"\r\n                                                                        }}\r\n                                                                    >\r\n                                                                        Total\r\n                        </td>\r\n                                                                    <td\r\n                                                                        style={{\r\n                                                                            fontSize: 12,\r\n                                                                            fontFamily: '\"Open Sans\", sans-serif',\r\n                                                                            color: \"#646a6e\",\r\n                                                                            lineHeight: 1.6,\r\n                                                                            verticalAlign: \"top\",\r\n                                                                            textAlign: \"right\",\r\n                                                                            whiteSpace: \"nowrap\"\r\n                                                                        }}\r\n                                                                        width={80}\r\n                                                                    >\r\n                                                                        {orderDetailState.data['total']}\r\n                                                                    </td>\r\n                                                                </tr>\r\n                                                                {/* <tr>\r\n                                                                    <td\r\n                                                                        style={{\r\n                                                                            fontSize: 12,\r\n                                                                            fontFamily: '\"Open Sans\", sans-serif',\r\n                                                                            color: \"#646a6e\",\r\n                                                                            lineHeight: 1.6,\r\n                                                                            verticalAlign: \"top\",\r\n                                                                            textAlign: \"right\"\r\n                                                                        }}\r\n                                                                    >\r\n                                                                        Shipping &amp; Handling\r\n                        </td>\r\n                                                                    <td\r\n                                                                        style={{\r\n                                                                            fontSize: 12,\r\n                                                                            fontFamily: '\"Open Sans\", sans-serif',\r\n                                                                            color: \"#646a6e\",\r\n                                                                            lineHeight: 1.6,\r\n                                                                            verticalAlign: \"top\",\r\n                                                                            textAlign: \"right\"\r\n                                                                        }}\r\n                                                                    >\r\n                                                                        $15.00\r\n                        </td>\r\n                                                                </tr> */}\r\n                                                                {/* <tr>\r\n                                                                    <td\r\n                                                                        style={{\r\n                                                                            fontSize: 12,\r\n                                                                            fontFamily: '\"Open Sans\", sans-serif',\r\n                                                                            color: \"#000\",\r\n                                                                            lineHeight: 1.6,\r\n                                                                            verticalAlign: \"top\",\r\n                                                                            textAlign: \"right\"\r\n                                                                        }}\r\n                                                                    >\r\n                                                                        <strong>Grand Total (Incl.Tax)</strong>\r\n                                                                    </td>\r\n                                                                    <td\r\n                                                                        style={{\r\n                                                                            fontSize: 12,\r\n                                                                            fontFamily: '\"Open Sans\", sans-serif',\r\n                                                                            color: \"#000\",\r\n                                                                            lineHeight: 1.6,\r\n                                                                            verticalAlign: \"top\",\r\n                                                                            textAlign: \"right\"\r\n                                                                        }}\r\n                                                                    >\r\n                                                                        <strong>$344.90</strong>\r\n                                                                    </td>\r\n                                                                </tr> */}\r\n                                                                {/* <tr>\r\n                                                                    <td\r\n                                                                        style={{\r\n                                                                            fontSize: 12,\r\n                                                                            fontFamily: '\"Open Sans\", sans-serif',\r\n                                                                            color: \"#b0b0b0\",\r\n                                                                            lineHeight: 1.6,\r\n                                                                            verticalAlign: \"top\",\r\n                                                                            textAlign: \"right\"\r\n                                                                        }}\r\n                                                                    >\r\n                                                                        <small>TAX</small>\r\n                                                                    </td>\r\n                                                                    <td\r\n                                                                        style={{\r\n                                                                            fontSize: 12,\r\n                                                                            fontFamily: '\"Open Sans\", sans-serif',\r\n                                                                            color: \"#b0b0b0\",\r\n                                                                            lineHeight: 1.6,\r\n                                                                            verticalAlign: \"top\",\r\n                                                                            textAlign: \"right\"\r\n                                                                        }}\r\n                                                                    >\r\n                                                                        <small>$72.40</small>\r\n                                                                    </td>\r\n                                                                </tr> */}\r\n                                                            </tbody>\r\n                                                        </table>\r\n                                                        {/* /Table Total */}\r\n                                                    </td>\r\n                                                </tr>\r\n                                            </tbody>\r\n                                        </table>\r\n                                    </td>\r\n                                </tr>\r\n                            </tbody>\r\n                        </table>\r\n                        {/* /Total */}\r\n                        {/* Information */}\r\n                        <table\r\n                            width=\"100%\"\r\n                            border={0}\r\n                            cellPadding={0}\r\n                            cellSpacing={0}\r\n                            align=\"center\"\r\n                            className=\"fullTable\"\r\n                            bgcolor=\"#e1e1e1\"\r\n                        >\r\n                            <tbody>\r\n                                <tr>\r\n                                    <td>\r\n                                        <table\r\n                                            width={600}\r\n                                            border={0}\r\n                                            cellPadding={0}\r\n                                            cellSpacing={0}\r\n                                            align=\"center\"\r\n                                            className=\"fullTable\"\r\n                                            bgcolor=\"#ffffff\"\r\n                                        >\r\n                                            <tbody>\r\n                                                <tr></tr>\r\n                                                <tr className=\"hiddenMobile\">\r\n                                                    <td height={60} />\r\n                                                </tr>\r\n                                                <tr className=\"visibleMobile\">\r\n                                                    <td height={40} />\r\n                                                </tr>\r\n                                                <tr>\r\n                                                    <td>\r\n                                                        <table\r\n                                                            width={480}\r\n                                                            border={0}\r\n                                                            cellPadding={0}\r\n                                                            cellSpacing={0}\r\n                                                            align=\"center\"\r\n                                                            className=\"fullPadding\"\r\n                                                        >\r\n                                                            <tbody>\r\n                                                                <tr>\r\n                                                                    <td>\r\n                                                                        <table\r\n                                                                            width={220}\r\n                                                                            border={0}\r\n                                                                            cellPadding={0}\r\n                                                                            cellSpacing={0}\r\n                                                                            align=\"left\"\r\n                                                                            className=\"col\"\r\n                                                                        >\r\n                                                                            <tbody>\r\n                                                                                <tr>\r\n                                                                                    <td\r\n                                                                                        style={{\r\n                                                                                            fontSize: 11,\r\n                                                                                            fontFamily: '\"Open Sans\", sans-serif',\r\n                                                                                            color: \"#5b5b5b\",\r\n                                                                                            lineHeight: 1.6,\r\n                                                                                            verticalAlign: \"top\"\r\n                                                                                        }}\r\n                                                                                    >\r\n                                                                                        <strong>BILLING INFORMATION</strong>\r\n                                                                                    </td>\r\n                                                                                </tr>\r\n                                                                                <tr>\r\n                                                                                    <td width=\"100%\" height={10} />\r\n                                                                                </tr>\r\n                                                                                <tr>\r\n                                                                                    <td\r\n                                                                                        style={{\r\n                                                                                            fontSize: 12,\r\n                                                                                            fontFamily: '\"Open Sans\", sans-serif',\r\n                                                                                            color: \"#5b5b5b\",\r\n                                                                                            lineHeight: 1.6,\r\n                                                                                            verticalAlign: \"top\"\r\n                                                                                        }}\r\n                                                                                    >\r\n                                                                                        {orderDetailState.data['name']}\r\n                                                                                        <br /> {orderDetailState.data['country']}\r\n                                                                                        <br /> {orderDetailState.data['city']}\r\n                                                                                        <br />{orderDetailState.data['address']}\r\n                                                                                        <br /> {orderDetailState.data['phone']}\r\n                                                                                        <br /> {orderDetailState.data['email']}\r\n                                                                                    </td>\r\n                                                                                </tr>\r\n                                                                            </tbody>\r\n                                                                        </table>\r\n                                                                        <table\r\n                                                                            width={220}\r\n                                                                            border={0}\r\n                                                                            cellPadding={0}\r\n                                                                            cellSpacing={0}\r\n                                                                            align=\"right\"\r\n                                                                            className=\"col\"\r\n                                                                        >\r\n                                                                            <tbody>\r\n                                                                                <tr className=\"visibleMobile\">\r\n                                                                                    <td height={20} />\r\n                                                                                </tr>\r\n                                                                                <tr>\r\n                                                                                    <td\r\n                                                                                        style={{\r\n                                                                                            fontSize: 11,\r\n                                                                                            fontFamily: '\"Open Sans\", sans-serif',\r\n                                                                                            color: \"#5b5b5b\",\r\n                                                                                            lineHeight: 1.6,\r\n                                                                                            verticalAlign: \"top\"\r\n                                                                                        }}\r\n                                                                                    >\r\n                                                                                        <strong>Status</strong>\r\n\r\n                                                                                    </td>\r\n                                                                                </tr>\r\n                                                                                <tr>\r\n                                                                                    <td width=\"100%\" height={10} />\r\n                                                                                </tr>\r\n                                                                                <tr>\r\n                                                                                    <td\r\n                                                                                        style={{\r\n                                                                                            fontSize: 12,\r\n                                                                                            fontFamily: '\"Open Sans\", sans-serif',\r\n                                                                                            color: \"#5b5b5b\",\r\n                                                                                            lineHeight: 1.6,\r\n                                                                                            verticalAlign: \"top\"\r\n                                                                                        }}\r\n                                                                                    >\r\n                                                                                        {orderDetailState.data['paymentStatus']}\r\n\r\n                                                                                    </td>\r\n                                                                                </tr>\r\n                                                                            </tbody>\r\n                                                                        </table>\r\n                                                                    </td>\r\n                                                                </tr>\r\n                                                            </tbody>\r\n                                                        </table>\r\n                                                    </td>\r\n                                                </tr>\r\n                                                <tr>\r\n                                                    <td>\r\n                                                        <table\r\n                                                            width={480}\r\n                                                            border={0}\r\n                                                            cellPadding={0}\r\n                                                            cellSpacing={0}\r\n                                                            align=\"center\"\r\n                                                            className=\"fullPadding\"\r\n                                                        >\r\n                                                            <tbody>\r\n                                                                <tr>\r\n                                                                    <td>\r\n                                                                        <table\r\n                                                                            width={220}\r\n                                                                            border={0}\r\n                                                                            cellPadding={0}\r\n                                                                            cellSpacing={0}\r\n                                                                            align=\"left\"\r\n                                                                            className=\"col\"\r\n                                                                        >\r\n                                                                            <tbody>\r\n                                                                                <tr className=\"hiddenMobile\">\r\n                                                                                    <td height={35} />\r\n                                                                                </tr>\r\n                                                                                <tr className=\"visibleMobile\">\r\n                                                                                    <td height={20} />\r\n                                                                                </tr>\r\n                                                                                <tr>\r\n                                                                                    {/* <td\r\n                                                                                        style={{\r\n                                                                                            fontSize: 11,\r\n                                                                                            fontFamily: '\"Open Sans\", sans-serif',\r\n                                                                                            color: \"#5b5b5b\",\r\n                                                                                            lineHeight: 1.6,\r\n                                                                                            verticalAlign: \"top\"\r\n                                                                                        }}\r\n                                                                                    >\r\n                                                                                        <strong>SHIPPING INFORMATION</strong>\r\n                                                                                    </td> */}\r\n                                                                                </tr>\r\n                                                                                <tr>\r\n                                                                                    <td width=\"100%\" height={10} />\r\n                                                                                </tr>\r\n                                                                                <tr>\r\n                                                                                    {/* <td\r\n                                                                                        style={{\r\n                                                                                            fontSize: 12,\r\n                                                                                            fontFamily: '\"Open Sans\", sans-serif',\r\n                                                                                            color: \"#5b5b5b\",\r\n                                                                                            lineHeight: 1.6,\r\n                                                                                            verticalAlign: \"top\"\r\n                                                                                        }}\r\n                                                                                    >\r\n                                                                                        Sup Inc\r\n                                  <br /> Another Place, Somewhere\r\n                                  <br /> New York NY\r\n                                  <br /> 4468, United States\r\n                                  <br /> T: 202-555-0171\r\n                                </td> */}\r\n                                                                                </tr>\r\n                                                                            </tbody>\r\n                                                                        </table>\r\n                                                                        <table\r\n                                                                            width={220}\r\n                                                                            border={0}\r\n                                                                            cellPadding={0}\r\n                                                                            cellSpacing={0}\r\n                                                                            align=\"right\"\r\n                                                                            className=\"col\"\r\n                                                                        >\r\n                                                                            <tbody>\r\n                                                                                <tr className=\"hiddenMobile\">\r\n                                                                                    <td height={35} />\r\n                                                                                </tr>\r\n                                                                                <tr className=\"visibleMobile\">\r\n                                                                                    <td height={20} />\r\n                                                                                </tr>\r\n                                                                                <tr>\r\n                                                                                    <td\r\n                                                                                        style={{\r\n                                                                                            fontSize: 11,\r\n                                                                                            fontFamily: '\"Open Sans\", sans-serif',\r\n                                                                                            color: \"#5b5b5b\",\r\n                                                                                            lineHeight: 1.6,\r\n                                                                                            verticalAlign: \"top\"\r\n                                                                                        }}\r\n                                                                                    >\r\n                                                                                        {/* <strong>SHIPPING METHOD</strong> */}\r\n                                                                                    </td>\r\n                                                                                </tr>\r\n                                                                                <tr>\r\n                                                                                    <td width=\"100%\" height={10} />\r\n                                                                                </tr>\r\n                                                                                <tr>\r\n                                                                                    <td\r\n                                                                                        style={{\r\n                                                                                            fontSize: 12,\r\n                                                                                            fontFamily: '\"Open Sans\", sans-serif',\r\n                                                                                            color: \"#5b5b5b\",\r\n                                                                                            lineHeight: 1.6,\r\n                                                                                            verticalAlign: \"top\"\r\n                                                                                        }}\r\n                                                                                    >\r\n                                                                                        {/* UPS: U.S. Shipping Services */}\r\n                                                                                    </td>\r\n                                                                                </tr>\r\n                                                                            </tbody>\r\n                                                                        </table>\r\n                                                                    </td>\r\n                                                                </tr>\r\n                                                            </tbody>\r\n                                                        </table>\r\n                                                    </td>\r\n                                                </tr>\r\n                                                <tr className=\"hiddenMobile\">\r\n                                                    <td height={60} />\r\n                                                </tr>\r\n                                                <tr className=\"visibleMobile\">\r\n                                                    <td height={30} />\r\n                                                </tr>\r\n                                            </tbody>\r\n                                        </table>\r\n                                    </td>\r\n                                </tr>\r\n                            </tbody>\r\n                        </table>\r\n                        {/* /Information */}\r\n                        <table\r\n                            width=\"100%\"\r\n                            border={0}\r\n                            cellPadding={0}\r\n                            cellSpacing={0}\r\n                            align=\"center\"\r\n                            className=\"fullTable\"\r\n                            bgcolor=\"#e1e1e1\"\r\n                        >\r\n                            <tbody>\r\n                                <tr>\r\n                                    <td>\r\n                                        <table\r\n                                            width={600}\r\n                                            border={0}\r\n                                            cellPadding={0}\r\n                                            cellSpacing={0}\r\n                                            align=\"center\"\r\n                                            className=\"fullTable\"\r\n                                            bgcolor=\"#ffffff\"\r\n                                            style={{ borderRadius: \"0 0 10px 10px\" }}\r\n                                        >\r\n                                            <tbody>\r\n                                                <tr>\r\n                                                    <td>\r\n                                                        <table\r\n                                                            width={480}\r\n                                                            border={0}\r\n                                                            cellPadding={0}\r\n                                                            cellSpacing={0}\r\n                                                            align=\"center\"\r\n                                                            className=\"fullPadding\"\r\n                                                        >\r\n                                                            <tbody>\r\n                                                                <tr>\r\n                                                                    <td\r\n                                                                        style={{\r\n                                                                            fontSize: 12,\r\n                                                                            color: \"#5b5b5b\",\r\n                                                                            fontFamily: '\"Open Sans\", sans-serif',\r\n                                                                            lineHeight: 1.6,\r\n                                                                            verticalAlign: \"top\",\r\n                                                                            textAlign: \"left\"\r\n                                                                        }}\r\n                                                                    >\r\n                                                                        Have a nice day.\r\n                        </td>\r\n                                                                </tr>\r\n                                                            </tbody>\r\n                                                        </table>\r\n                                                    </td>\r\n                                                </tr>\r\n                                                <tr className=\"spacer\">\r\n                                                    <td height={50} />\r\n                                                </tr>\r\n                                            </tbody>\r\n                                        </table>\r\n                                    </td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td height={20} />\r\n                                </tr>\r\n                            </tbody>\r\n                        </table>\r\n                    </div>;\r\n                </>\r\n            )}\r\n        </Modal>\r\n\r\n    );\r\n};\r\n\r\n\r\nexport default QuickEdit;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useHandleFetch } from '../../hooks';\r\n\r\n\r\n\r\n\r\n// import lib \r\nimport { Skeleton } from 'antd'\r\n\r\n\r\n\r\ninterface Props {\r\n    productId?: any;\r\n    quantity?: any;\r\n    item?: any\r\n    variation?: any;\r\n}\r\n\r\nconst CartOverLayCartItem = ({\r\n    productId,\r\n    quantity,\r\n    item,\r\n    variation\r\n}: Props) => {\r\n\r\n\r\n    const [productDetailState, handleProductFetch] = useHandleFetch(\r\n        {},\r\n        'productDetailById'\r\n    );\r\n    const [product, setProduct] = useState({});\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [modifiedPrice, setModifiedPrice] = useState('');\r\n    const [selectedVariationId, setSelectedVariationId] = useState(variation);\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        setIsLoading(true);\r\n        const getAndSetProduct = async () => {\r\n            const product = await handleProductFetch({\r\n                urlOptions: {\r\n                    placeHolders: {\r\n                        id: productId,\r\n                    },\r\n                },\r\n            });\r\n\r\n            // @ts-ignore\r\n            setProduct(product);\r\n            setIsLoading(false);\r\n        };\r\n        getAndSetProduct()\r\n    }, []);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    console.log('modifiedPrice', modifiedPrice);\r\n    return (\r\n        <>\r\n\r\n            <Skeleton loading={productDetailState.isLoading}>\r\n                {productDetailState.data && Object.keys(productDetailState.data).length > 0 && (\r\n                    <div className='cart-item' key={''}>\r\n\r\n\r\n                        <img\r\n\r\n                            src={productDetailState.data['cover'] && productDetailState.data['cover']['cover']}\r\n                            alt='Img'\r\n                            style={{\r\n                                cursor: 'pointer',\r\n                            }}\r\n                        />\r\n                        <div className='cart-item-info'>\r\n                            <h4\r\n\r\n                            >\r\n                                {productDetailState.data['name']}\r\n                            </h4>\r\n                            <h5\r\n                            >\r\n                                Quantity : {quantity}\r\n                            </h5>\r\n                            <h5\r\n                            >\r\n                                {item['unitPrice']}\r\n                            </h5>\r\n\r\n\r\n                            {/* {pricingOptions && pricingOptions.length > 0 && pricingOptions.map(tag => (\r\n                            <>\r\n                                <span\r\n                                    onClick={() => handleAttributeChange(tag.value)}\r\n                                    className={selectedVariationId === tag.value ? 'product-attributeTag product-attributeTag-active' : 'product-attributeTag'}>\r\n                                    {tag.label}\r\n                                </span>\r\n                            </>\r\n                        ))} */}\r\n\r\n                            {/* <span\r\n             style={{\r\n               display: 'inline-block',\r\n               background: '#fafafa',\r\n               padding: '3px 3px',\r\n               borderRadius: 1,\r\n               fontSize: '12px',\r\n               marginRight: '5px',\r\n               color: '#777',\r\n               marginTop: '5px'\r\n             }}\r\n           >\r\n             15KG\r\n             </span> */}\r\n\r\n                        </div>\r\n                        {/* <span\r\n                        onClick={handleAttributeDelete}\r\n                        className='remove-item' >\r\n                        <i className='fa fa-times'></i>\r\n                    </span> */}\r\n\r\n                    </div>\r\n                )}\r\n            </Skeleton>\r\n\r\n        </>\r\n    );\r\n};\r\n\r\n// @ts-ignore\r\nexport default CartOverLayCartItem;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Modal, Select, notification, Form, Empty, Button } from 'antd';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { CheckCircleOutlined, InfoCircleOutlined } from '@ant-design/icons';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport { useHandleFetch } from '../../hooks';\r\nimport OrderInvoice from \"./OrderInvoice.jsx\";\r\nimport ProductItemForOrderDetail from \"./productItemForOrderDetail\";\r\n\r\n\r\nconst { Option } = Select;\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    // name: Yup.string()\r\n    //     .label('Name')\r\n    //     .required()\r\n    //     .min(2, 'Name must have at least 2 characters '),\r\n    // pickUpLocation: Yup.string()\r\n    //     .label('Pick up Location')\r\n    //     .required()\r\n    //     .min(2, 'Pick up Location must have at least 2 characters '),\r\n    // time: Yup.string()\r\n    //     .label('Time')\r\n    //     .required()\r\n    //     .min(2, 'Time must have at least 2 characters '),\r\n\r\n});\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Tag Created',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n    notification.error({\r\n        message: message || 'Something Went Wrong',\r\n        description: '',\r\n        icon: <InfoCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n    });\r\n};\r\n\r\n\r\ninterface Props {\r\n    customer: any;\r\n    setvisible: any;\r\n    visible: any;\r\n    orderList?: any;\r\n    setOrderList?: any;\r\n}\r\n\r\nconst QuickEdit = ({ customer, setvisible, visible, setOrderList, orderList }: Props) => {\r\n    const [updateOrderState, handleUpdateOrderFetch] = useHandleFetch({}, 'updateOrder');\r\n\r\n    console.log('customerVie', customer);\r\n\r\n    const [selectedCountryValue, setselectedCountryValue] = useState('');\r\n    const [selectedCityValue, setselectedCityValue] = useState('');\r\n\r\n    const [countryOptions, setcountryOptions] = useState([]);\r\n    const [cityOptions, setcityOptions] = useState([]);\r\n\r\n    const [countryListState, handleCountryListFetch] = useHandleFetch(\r\n        [],\r\n        'countryList'\r\n    );\r\n\r\n    const [cityListState, handleCityListFetch] = useHandleFetch([], 'cityList');\r\n\r\n    const [countryList, setCountryList] = useState([]);\r\n    const [cityList, setCityList] = useState([]);\r\n    const [showInvoice, setShowInvoice] = useState(false);\r\n\r\n\r\n\r\n    const handleSubmit = async (values: any, actions: any) => {\r\n        // console.log('selectedCityValue', selectedCityValue); \r\n        console.log('cooles', customer)\r\n\r\n        const addRegionRes = await handleUpdateOrderFetch({\r\n            urlOptions: {\r\n                placeHolders: {\r\n                    id: customer.id,\r\n                }\r\n            },\r\n            body: {\r\n                billingAddress: {\r\n                    phone: values.phone,\r\n                    email: values.email,\r\n                    address1: values.address1,\r\n                    address2: values.address2,\r\n                    firstName: values.firstName,\r\n                    lastName: values.lastName,\r\n                    city: selectedCityValue || customer['billingAddress']['city'],\r\n                    country: selectedCountryValue || customer['billingAddress']['country'],\r\n                },\r\n                products: customer.products,\r\n                customerId: customer.customerId\r\n                // charge\r\n            },\r\n        });\r\n\r\n        // @ts-ignore\r\n        if (addRegionRes && addRegionRes.status === 'ok') {\r\n            openSuccessNotification();\r\n\r\n            const positionInTag = () => {\r\n                return orderList.map(item => item.id).indexOf(customer.id);\r\n            }\r\n\r\n            const index = positionInTag();\r\n\r\n            // @ts-ignore\r\n            const updatedItem = Object.assign({}, orderList[index], { ...addRegionRes });\r\n            const updateRegionList = [...orderList.slice(0, index), updatedItem, ...orderList.slice(index + 1)];\r\n            setOrderList(updateRegionList);\r\n\r\n        }\r\n        else {\r\n            openErrorNotification();\r\n        }\r\n\r\n        actions.setSubmitting(false);\r\n        setvisible(false)\r\n\r\n    };\r\n\r\n\r\n    const onChangeCity = (value) => {\r\n        setselectedCityValue(value);\r\n    }\r\n\r\n    const onChangeCountry = (value) => {\r\n        setselectedCountryValue(value);\r\n    }\r\n\r\n    useEffect(() => {\r\n        const setCountries = async () => {\r\n            const CountryListRes = await handleCountryListFetch({});\r\n\r\n            // @ts-ignore\r\n            if (CountryListRes && CountryListRes.length > 0) {\r\n                // @ts-ignore\r\n                const countryOptions = CountryListRes.map((country) => {\r\n                    return {\r\n                        value: country.name,\r\n                        name: country.name\r\n                    };\r\n                });\r\n                setcountryOptions(countryOptions);\r\n            }\r\n        };\r\n\r\n        setCountries();\r\n    }, []);\r\n\r\n\r\n    useEffect(() => {\r\n        const setCities = async () => {\r\n            const cityListRes = await handleCityListFetch({\r\n                urlOptions: {\r\n                    placeHolders: {\r\n                        country: selectedCountryValue,\r\n                    },\r\n                },\r\n            });\r\n\r\n            // @ts-ignore\r\n            if (cityListRes && cityListRes.length > 0) {\r\n                // @ts-ignore\r\n                const cityOptions = cityListRes.map((city) => {\r\n                    return {\r\n                        value: city.name,\r\n                        name: city.name\r\n                    };\r\n                });\r\n                setcityOptions(cityOptions);\r\n            }\r\n        };\r\n\r\n        setCities();\r\n    }, [selectedCountryValue]);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    const handleCancel = (e: any) => {\r\n        setvisible(false);\r\n    };\r\n\r\n\r\n\r\n    const getisSubmitButtonDisabled = (values, isValid) => {\r\n        if (!isValid ||\r\n            !values.firstName ||\r\n            !values.LastName) {\r\n\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    return (\r\n        <Formik\r\n            onSubmit={(values, actions) => handleSubmit(values, actions)}\r\n            validationSchema={validationSchema}\r\n            validateOnBlur={false}\r\n            enableReinitialize={true}\r\n            initialValues={\r\n                { ...customer.billingAddress ? customer.billingAddress : {} }\r\n            }\r\n        >\r\n            {({\r\n                handleChange,\r\n                values,\r\n                handleSubmit,\r\n                errors,\r\n                isValid,\r\n                isSubmitting,\r\n                touched,\r\n                handleBlur,\r\n                setFieldTouched,\r\n                handleReset,\r\n            }) => (\r\n                    <>\r\n                        <Modal\r\n                            title=\"Order detail\"\r\n                            visible={visible}\r\n                            onOk={(e: any) => handleSubmit(e)}\r\n                            onCancel={handleCancel}\r\n                            okText='Update'\r\n                            okButtonProps={{\r\n                                loading: isSubmitting,\r\n                                htmlType: \"submit\",\r\n                                // disabled: getisSubmitButtonDisabled(values, isValid)\r\n                            }}\r\n                            bodyStyle={{\r\n                                margin: '0',\r\n                                padding: '10px'\r\n                            }}\r\n                            width={'70vw'}\r\n                        >\r\n\r\n\r\n                            <div className='dubbleRowInputs'>\r\n                                <div className='dubbleRowInputs__item'>\r\n                                    <Input\r\n                                        label='First Name'\r\n                                        value={values.firstName}\r\n                                        name='firstName'\r\n                                        isError={(touched.firstName && errors.firstName) ||\r\n                                            (!isSubmitting && updateOrderState.error['error']['firstName'])}\r\n\r\n                                        errorString={(touched.firstName && errors.firstName) ||\r\n                                            (!isSubmitting && updateOrderState.error['error']['firstName'])}\r\n                                        onChange={(e: any) => {\r\n                                            handleChange(e);\r\n                                            setFieldTouched('firstName');\r\n                                        }}\r\n                                    />\r\n                                </div>\r\n                                <div className='dubbleRowInputs__item'>\r\n                                    <Input\r\n                                        label='Last Name'\r\n                                        value={values.lastName}\r\n                                        name='lastName'\r\n                                        isError={(touched.lastName && errors.lastName) ||\r\n                                            (!isSubmitting && updateOrderState.error['error']['lastName'])}\r\n\r\n                                        errorString={(touched.lastName && errors.lastName) ||\r\n                                            (!isSubmitting && updateOrderState.error['error']['lastName'])}\r\n                                        onChange={(e: any) => {\r\n                                            handleChange(e);\r\n                                            setFieldTouched('lastName');\r\n                                        }}\r\n                                    />\r\n                                </div>\r\n\r\n\r\n\r\n\r\n                            </div>\r\n\r\n\r\n\r\n                            <div className='dubbleRowInputs'>\r\n                                <div className='dubbleRowInputs__item'>\r\n                                    <Input\r\n                                        label='Phone'\r\n                                        value={values.phone}\r\n                                        name='phone'\r\n                                        isError={(touched.phone && errors.phone) ||\r\n                                            (!isSubmitting && updateOrderState.error['error']['phone'])}\r\n\r\n                                        errorString={(touched.phone && errors.phone) ||\r\n                                            (!isSubmitting && updateOrderState.error['error']['phone'])}\r\n                                        onChange={(e: any) => {\r\n                                            handleChange(e);\r\n                                            setFieldTouched('phone');\r\n                                        }}\r\n                                    />\r\n                                </div>\r\n                                <div className='dubbleRowInputs__item'>\r\n                                    <Input\r\n                                        label='Email'\r\n                                        value={values.email}\r\n                                        name='email'\r\n                                        isError={(touched.email && errors.email) ||\r\n                                            (!isSubmitting && updateOrderState.error['error']['email'])}\r\n\r\n                                        errorString={(touched.email && errors.email) ||\r\n                                            (!isSubmitting && updateOrderState.error['error']['email'])}\r\n                                        onChange={(e: any) => {\r\n                                            handleChange(e);\r\n                                            setFieldTouched('email');\r\n                                        }}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n\r\n\r\n                            <div className='dubbleRowInputs'>\r\n                                <div className='dubbleRowInputs__item'>\r\n                                    <h3 className='inputFieldLabel'>\r\n                                        Country\r\n\t\t\t\t\t\t\t\t\t</h3>\r\n\r\n\r\n                                    <Form.Item\r\n                                        validateStatus={(updateOrderState.error['error']['country']) ? \"error\" : \"\"}\r\n                                        help={updateOrderState.error['error']['country']}\r\n                                    // noStyle={true}\r\n                                    >\r\n                                        <Select\r\n                                            defaultValue={values.country}\r\n                                            notFoundContent={<Empty description='No Country Found' image={Empty.PRESENTED_IMAGE_SIMPLE} />}\r\n                                            showSearch\r\n                                            style={{ width: '100%' }}\r\n                                            placeholder='Select a Country'\r\n                                            optionFilterProp='children'\r\n                                            onChange={onChangeCountry}\r\n                                            filterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n                                        >\r\n                                            {countryListState.done &&\r\n                                                countryListState.data.length > 0 &&\r\n                                                countryOptions.map((option) => {\r\n                                                    return <Option value={option.value}>{option.name}</Option>;\r\n                                                })}\r\n                                        </Select>\r\n\r\n                                    </Form.Item>\r\n\r\n\r\n\r\n\r\n                                </div>\r\n                                <div className='dubbleRowInputs__item'>\r\n                                    <h3 className='inputFieldLabel'>\r\n                                        City\r\n                                    </h3>\r\n                                    <Form.Item\r\n                                        // noStyle={true}\r\n                                        validateStatus={(updateOrderState.error['error']['city']) ? \"error\" : \"\"}\r\n                                        help={updateOrderState.error['error']['city']}\r\n\r\n                                    >\r\n                                        <Select\r\n                                            defaultValue={values.city}\r\n                                            className='selectClassName'\r\n                                            notFoundContent={<Empty description='First Select a Country' image={Empty.PRESENTED_IMAGE_SIMPLE} />}\r\n                                            showSearch\r\n                                            style={{ width: '100%' }}\r\n                                            placeholder='Select a city'\r\n                                            optionFilterProp='children'\r\n                                            onChange={onChangeCity}\r\n                                            filterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n                                        >\r\n                                            {cityListState.done &&\r\n                                                cityListState.data.length > 0 &&\r\n                                                cityOptions.map((option) => {\r\n                                                    return <Option value={option.value}>{option.name}</Option>;\r\n                                                })}\r\n                                        </Select>\r\n                                    </Form.Item>\r\n                                </div>\r\n\r\n                            </div>\r\n\r\n                            <div style={{\r\n                                marginTop: '12px'\r\n                            }}></div>\r\n\r\n\r\n\r\n                            <div className='dubbleRowInputs'>\r\n                                <div className='dubbleRowInputs__item'>\r\n                                    <Input\r\n                                        label='Address'\r\n                                        value={values.address1}\r\n                                        name='address1'\r\n                                        isError={(touched.address1 && errors.address1) ||\r\n                                            (!isSubmitting && updateOrderState.error['error']['address1'])}\r\n\r\n                                        errorString={(touched.address1 && errors.address1) ||\r\n                                            (!isSubmitting && updateOrderState.error['error']['address1'])}\r\n                                        onChange={(e: any) => {\r\n                                            handleChange(e);\r\n                                            setFieldTouched('address1');\r\n                                        }}\r\n                                    />\r\n                                </div>\r\n                                <div className='dubbleRowInputs__item'>\r\n                                    <Input\r\n                                        label='Address 2'\r\n                                        value={values.address2}\r\n                                        name='address2'\r\n                                        isError={(touched.address2 && errors.address2) ||\r\n                                            (!isSubmitting && updateOrderState.error['error']['address2'])}\r\n\r\n                                        errorString={(touched.address2 && errors.address2) ||\r\n                                            (!isSubmitting && updateOrderState.error['error']['address2'])}\r\n                                        onChange={(e: any) => {\r\n                                            handleChange(e);\r\n                                            setFieldTouched('address2');\r\n                                        }}\r\n                                    />\r\n                                </div>\r\n\r\n                            </div>\r\n\r\n                            <div style={{\r\n                                marginTop: '12px'\r\n                            }}></div>\r\n\r\n\r\n\r\n                                    {customer.products && customer.products.length > 0 && (\r\n                                        <h3 className='inputFieldLabel'>\r\n                                        Products \r\n                                    </h3>\r\n                                    )}\r\n\r\n\r\n                            {customer.products && customer.products.length > 0 && <> \r\n                            \r\n                                {customer.products.map(item => {\r\n                    return <ProductItemForOrderDetail\r\n                        productId={item._id}\r\n                        quantity={item.quantity}\r\n                        item={item}\r\n                        variation={item.variation}\r\n                    />;\r\n                })}\r\n\r\n                            </>}\r\n\r\n\r\n                            <div style={{\r\n                                marginTop: '20px'\r\n                            }}></div>\r\n                    <Button\r\n                    onClick={() => setShowInvoice(true)}\r\n                    className='btnPrimaryClassNameoutline'\r\n                    >\r\n                        Generate Invoice\r\n                        \r\n                        </Button>\r\n\r\n            <div style={{\r\n                                marginBottom: '20px'\r\n                            }}></div>\r\n\r\n            <OrderInvoice\r\n            id={customer.id}\r\n            setShowInvoice={setShowInvoice}\r\n             showInvoice={showInvoice} \r\n            />\r\n\r\n                            \r\n\r\n\r\n                        </Modal>\r\n\r\n                    </>\r\n                )}\r\n\r\n\r\n\r\n        </Formik>\r\n    );\r\n};\r\n\r\n\r\nexport default QuickEdit;\r\n","import React, {useState, useEffect} from 'react';\r\nimport {withRouter} from 'react-router-dom';\r\nimport { Table, Badge, Menu, Dropdown, Space, Tag,Button, Input,Tooltip, Modal, notification, Popconfirm } from 'antd';\r\nimport { PlusOutlined, EditOutlined, DeleteOutlined,CheckOutlined,CheckCircleOutlined,DownOutlined  } from '@ant-design/icons';\r\n\r\n\r\n/// import hooks\r\nimport { useFetch, useHandleFetch } from \"../../hooks\";\r\n\r\n// import components\r\nimport { DataTableSkeleton } from \"../../components/Placeholders\";\r\nimport AddNewOrder from \"./AddNewOrder\";\r\nimport QuickEdit from \"./QuickEdit\";\r\nimport Empty from \"../../components/Empty\";\r\n\r\n\r\n\r\n// import lib \r\nimport Moment from \"react-moment\";\r\n\r\nconst { Column, ColumnGroup } = Table;\r\nconst { Search } = Input;\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t  message: message || 'Tag Created',\r\n\t  description: '',\r\n\t  icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n  };\r\n\r\n\r\n  const openErrorNotification = (message?: any) => {\r\n\tnotification.error({\r\n\t  message: message || 'Something Went Wrong',\r\n\t  description: '',\r\n\t  icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n  };\r\n\r\n\r\n\r\n\r\n\r\ninterface myTableProps {\r\n  data: any; \r\n  setOrderList: any; \r\n} \r\n\r\n\r\nconst MyTable = ({data,setOrderList}: myTableProps) => {\r\n    const [visible,setvisible] = useState(false);   \r\n    const [activeCategoryForEdit,setactiveCategoryForEdit] = useState(false); \r\n    const [deleteOrderState, handleDeleteOrderFetch] = useHandleFetch({}, 'deleteOrder');\r\n    const [updateOrderStatusState, handleUpdateOrderStatusFetch] = useHandleFetch({}, 'updateOrderStatus');\r\n\r\n\r\n      const handleDeleteRegion = async (id) => {\r\n        const deleteOrderRes = await handleDeleteOrderFetch({\r\n          urlOptions: {\r\n            placeHolders: {\r\n              id,\r\n            }\r\n            }\r\n          });\r\n\r\n            // @ts-ignore\r\n\t\t  if(deleteOrderRes && deleteOrderRes.status === 'ok'){\r\n\t\t\t  openSuccessNotification('Deleted Order'); \r\n\t\t\t  const newOrderList =  data.filter(item => item.id !== id);\r\n\t\t\t  setOrderList(newOrderList); \r\n\t\t  }\r\n\r\n      }\r\n      \r\n\r\n\r\n      \r\n      const handleUpdateOrderStatus = async (record,id,newStatus) => {\r\n        const updateOrderStatusRes = await handleUpdateOrderStatusFetch({\r\n          urlOptions: {\r\n            params: {\r\n              newOrderstatus: newStatus,\r\n            },\r\n            placeHolders: {\r\n              id,\r\n            }\r\n            }\r\n          });\r\n\r\n            // @ts-ignore\r\n\t\t  if(updateOrderStatusRes && updateOrderStatusRes.status === 'ok'){\r\n\t\t\t  openSuccessNotification('Updated Order Status'); \r\n\t\t\t  \r\n        const positionInTag = () => {\r\n          return data.map(item => item.id).indexOf(id);\r\n          }\r\n\r\n      const index = positionInTag();\r\n      console.log('recordis',record,index );\r\n\r\n      // @ts-ignore\r\n      const updatedItem = Object.assign({}, data[index], { status: newStatus });\r\n      const updateOrderList = [...data.slice(0, index), updatedItem, ...data.slice(index + 1)];\r\n      console.log('updateOrderList',updateOrderList,'-----',setOrderList );\r\n      setOrderList(updateOrderList);\r\n\r\n\r\n      }\r\n\r\n      \r\n      else {\r\n        openErrorNotification(\"Couldn't changed order status, Something went wrong\")\r\n      }\r\n\r\n      }\r\n      \r\n\r\n      const StatusItemMenu = (record,id) => {\r\n        return (\r\n          (\r\n            <Menu>\r\n\r\n<Menu.Item\r\n                onClick={() => handleUpdateOrderStatus(record,id,'pending')}\r\n                key=\"1\" icon={<CheckOutlined />}>\r\n                Pending\r\n              </Menu.Item>\r\n  \r\n\r\n  \r\n              <Menu.Item\r\n                onClick={() => handleUpdateOrderStatus(record,id,'complete')}\r\n                key=\"1\" icon={<CheckOutlined />}>\r\n                Completed\r\n    \r\n              </Menu.Item>\r\n    \r\n              {/* <Menu.Item\r\n                onClick={() => handleUpdateOrderStatus(record,id,'deliver')}\r\n                key=\"1\" icon={<CheckOutlined />}>\r\n                Delivered\r\n              </Menu.Item>\r\n     */}\r\n            \r\n            </Menu >\r\n          )\r\n        )\r\n      };\r\n\r\n\r\n\r\n\r\n    \r\n\r\n    return (\r\n        <>\r\n        <Table \r\n        // expandable={{\r\n        //     expandedRowRender: record => <p style={{ margin: 0 }}>{record.name}</p>,\r\n        //     rowExpandable: record => record.name !== 'Not Expandable',\r\n        //   }}\r\n        // bordered={true}\r\n        size='small'\r\n        // pagination={false}\r\n        dataSource={data}\r\n        >\r\n\r\n          \r\n        <Column\r\n          title=\"Name\"\r\n          dataIndex=\"name\"\r\n          key=\"id\"\r\n          className='classnameofthecolumn'\r\n          render={(text, record: any) => (\r\n            <>\r\n\r\n              <h4\r\n                onClick={() => {\r\n                  setvisible(true)\r\n                  setactiveCategoryForEdit(record); \r\n                }}\r\n                style={{\r\n                  fontWeight: 400,\r\n                  color: '#555',\r\n                  cursor: 'pointer'\r\n\r\n                }}>\r\n                {text}\r\n              </h4>\r\n\r\n\r\n            </>\r\n          )}\r\n\r\n        />\r\n\r\n<Column\r\n           title=\"Country\" \r\n           dataIndex=\"country\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n         \r\n            />\r\n\r\n\r\n<Column\r\n           title=\"City\" \r\n           dataIndex=\"city\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n         \r\n            />\r\n\r\n          <Column\r\n           title=\"Created\" \r\n           dataIndex=\"date_created\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n           render={(text, record: any) => (\r\n            <>\r\n\r\n              <h4\r\n               \r\n                style={{\r\n                  fontWeight: 400,\r\n                  color: '#555',\r\n\r\n                }}>\r\n                  <Moment  withTitle>\r\n                    {text}\r\n                  </Moment>\r\n              </h4>\r\n\r\n\r\n            </>\r\n          )}\r\n            />\r\n\r\n\r\n          <Column\r\n          width={150}\r\n           title=\"Status\" \r\n           dataIndex=\"status\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n           render={(text, record: any) => (\r\n            <>\r\n\r\n        <Dropdown overlay={() => StatusItemMenu(record,record.id)} placement=\"bottomRight\">\r\n           <a href='##'>\r\n            <span\r\n                // className={'product-attributeTag'}\r\n              style={{\r\n                fontSize:'12px'\r\n              }}\r\n                >\r\n\r\n                {text}\r\n                <span style={{\r\n                  marginLeft:\"5px\",\r\n                  fontSize:'10px'\r\n                }}>\r\n                   <DownOutlined />\r\n                </span>\r\n               \r\n            </span> \r\n            </a>\r\n\t\t\t\t\t</Dropdown>\r\n\r\n\r\n     \r\n            </>\r\n          )}\r\n            />\r\n\r\n\r\n          {/* <Column \r\n          \r\n          className='classnameofthecolumn'\r\n\r\n          title=\"Product\" dataIndex=\"product\" key=\"product\" /> */}\r\n\r\n          {/* <Column \r\n          \r\n          className='classnameofthecolumn'\r\n\r\n          title=\"Sub Category\" dataIndex=\"subCategory\" key=\"subCategory\" /> */}\r\n        \r\n        {/* <Column\r\n          title=\"Tags\"\r\n          dataIndex=\"tags\"\r\n          key=\"tags\"\r\n          render={tags => (\r\n            <>\r\n              {tags.map((tag : any) => (\r\n                <Tag color=\"blue\" key={tag}>\r\n                  {tag}\r\n                </Tag>\r\n              ))}\r\n            </>\r\n          )}\r\n        /> */}\r\n        <Column\r\n        \r\n        className='classnameofthecolumn'\r\n          title=\"\"\r\n          key=\"action\"\r\n          align='right'\r\n          render={(text, record : any) => (\r\n            <Space size=\"middle\">\r\n              <a href='##'>\r\n               <Tooltip placement=\"top\" title='Quick Edit Region'>\r\n              <span className='iconSize' onClick={() => {\r\n                setvisible(true)\r\n                setactiveCategoryForEdit(record); \r\n              }}> \r\n              <EditOutlined />\r\n              </span>\r\n\r\n               </Tooltip>\r\n               </a>\r\n\r\n\r\n\r\n{/*    \r\n               <Popconfirm \r\n               \r\n               onConfirm={() => handleDeleteRegion(record.id)}\r\n               title=\"Are you sure？\" okText=\"Yes\" cancelText=\"No\">\r\n           \r\n           <span \r\n             className='iconSize iconSize-danger'\r\n             > \r\n             <DeleteOutlined/>\r\n            </span>\r\n       \r\n           </Popconfirm> */}\r\n\r\n\r\n             \r\n             \r\n            </Space>\r\n          )}\r\n        />\r\n      </Table>\r\n\r\n    \r\n\r\n    {activeCategoryForEdit &&   <QuickEdit \r\n    setvisible={setvisible}\r\n    visible={visible}\r\n    customer={activeCategoryForEdit}\r\n    orderList={data}\r\n    setOrderList={setOrderList}\r\n\r\n    />\r\n\r\n    }\r\n    \r\n    \r\n    </>\r\n    )\r\n}\r\n\r\n\r\ninterface Props {\r\n    history: any; \r\n}\r\n\r\nconst CustomerList = ({history}: Props) => {\r\n\r\n    const [orderList,setOrderList] = useState([]); \r\n\r\n    const [orderState, handleRegionListFetch] = useHandleFetch({}, 'orderList');\r\n  \r\n  \r\n    useEffect(()=>{\r\n     const setOrders = async () => {\r\n       const regions = await handleRegionListFetch({}); \r\n       // @ts-ignore\r\n       setOrderList(regions); \r\n     }\r\n     setOrders(); \r\n    },[])\r\n\r\n  const [addNewCategoryVisible,setAddNewCategoryVisible] = useState(false);   \r\n\r\n  // console.log('orderState',orderState)\r\n\r\n\r\n  const handleSearch = (value) => {\r\n    if(orderState.data.length > 0 ){\r\n      const newOrderList = orderState.data.filter(item => item.name.includes(value)); \r\n      setOrderList(newOrderList); \r\n    }\r\n     \r\n  }; \r\n\r\n\r\n\r\n\r\n\treturn (\r\n\t\t<>\r\n    {/* <h2 className='containerPageTitle'>\r\n      Categories\r\n    </h2> */}\r\n    <div className='categoryListContainer'>\r\n            <div className='categoryListContainer__header'>\r\n           \r\n\r\n          <div className='categoryListContainer__header-searchBar'>\r\n          <h2 className='categoryListContainer__header-title'>\r\n            Orders \r\n            </h2>\r\n\r\n\r\n          <Search\r\n            enterButton={false}\r\n            className='searchbarClassName'\r\n          placeholder=\"search orders..\"\r\n          onSearch={value => handleSearch(value)}\r\n          // style={{ width: 300 }}\r\n        />\r\n          </div>\r\n            <Button\r\n          // type=\"primary\"\r\n          className='btnPrimaryClassNameoutline'\r\n          icon={<PlusOutlined />}\r\n          onClick={() => history.push('/order/new')}\r\n        >\r\n        Add New\r\n            \r\n            </Button>\r\n            </div>\r\n\r\n            <div className='categoryListContainer__afterHeader'>\r\n            {/* <Search\r\n      placeholder=\"search categories..\"\r\n      size=\"large\"\r\n      onSearch={value => console.log(value)}\r\n      style={{ width: 300 }}\r\n    /> */}\r\n            </div>\r\n\r\n     \r\n\t\t\t\r\n\t\t\t<div className='categoryListContainer__categoryList'>\r\n        {orderState.done && orderList.length > 0 && <MyTable \r\n        setOrderList={setOrderList}\r\n        data={orderList} />}\r\n        {orderState.isLoading && <DataTableSkeleton />}\r\n\r\n        {orderState.done && !(orderList.length > 0) && (\r\n        <Empty title='No Order found'  />\r\n        )}\r\n        \r\n\t\t\t</div>\r\n\t\t</div>\r\n\r\n\r\n{/* {orderState.done && \r\n    <AddNewOrder \r\n          addNewCategoryVisible={addNewCategoryVisible} \r\n          setAddNewCategoryVisible={setAddNewCategoryVisible}\r\n          orderList={orderState.data}\r\n          setOrderList={setOrderList}\r\n           />} */}\r\n\r\n  \r\n    </>\r\n\t);\r\n};\r\n\r\nexport default withRouter(CustomerList);\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useHandleFetch } from '../../hooks';\r\n\r\n\r\n// import lib \r\n\r\n\r\n\r\n\r\ninterface Props {\r\n    setProductList?: any;\r\n    productList?: any;\r\n    productId?: any;\r\n    quantity?: any;\r\n    item?: any\r\n    variation?: any;\r\n}\r\n\r\nconst CartOverLayCartItem = ({\r\n    productList,\r\n    setProductList,\r\n    productId,\r\n    quantity,\r\n    item,\r\n    variation\r\n}: Props) => {\r\n\r\n\r\n    const [productDetailState, handleProductFetch] = useHandleFetch(\r\n        {},\r\n        'productDetailById'\r\n    );\r\n    const [product, setProduct] = useState({});\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [modifiedPrice, setModifiedPrice] = useState('');\r\n    const [selectedVariationId, setSelectedVariationId] = useState(variation);\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        setIsLoading(true);\r\n        const getAndSetProduct = async () => {\r\n            const product = await handleProductFetch({\r\n                urlOptions: {\r\n                    placeHolders: {\r\n                        id: productId,\r\n                    },\r\n                },\r\n            });\r\n\r\n            // @ts-ignore\r\n            setProduct(product);\r\n            setIsLoading(false);\r\n        };\r\n        getAndSetProduct()\r\n    }, []);\r\n\r\n\r\n\r\n    // useEffect(() => {\r\n    //     const positionInAttribute = () => {\r\n    //         return attributeList.map(item => item.id).indexOf(attribute.id);\r\n    //     }\r\n\r\n    //     const index = positionInAttribute();\r\n\r\n    //     const updatedItem = Object.assign({}, attributeList[index], { ...attributeItem });\r\n    //     const updateProductList = [...attributeList.slice(0, index), updatedItem, ...attributeList.slice(index + 1)];\r\n    //     setProductList(updateProductList);\r\n\r\n    // }, [attributeItem])\r\n\r\n\r\n    const handleAttributeDelete = () => {\r\n\r\n        const updateProductList = productList.filter(item => item._id !== productId);\r\n        setProductList(updateProductList);\r\n    }\r\n\r\n\r\n    const handleChangeQuantity = async (value) => {\r\n        if (value === 'minus') {\r\n            if (quantity === 1) {\r\n                return;\r\n            }\r\n\r\n            const positionInAttribute = () => {\r\n                return productList.map(item => item._id).indexOf(productId);\r\n            }\r\n\r\n            const index = positionInAttribute();\r\n\r\n            const updatedItem = Object.assign({}, productList[index], { ...item, quantity: --quantity });\r\n            const updateAttributeList = [...productList.slice(0, index), updatedItem, ...productList.slice(index + 1)];\r\n            setProductList(updateAttributeList);\r\n\r\n\r\n        } else {\r\n            const positionInAttribute = () => {\r\n                return productList.map(item => item._id).indexOf(productId);\r\n            }\r\n\r\n            const index = positionInAttribute();\r\n\r\n            const updatedItem = Object.assign({}, productList[index], { ...item, quantity: ++quantity });\r\n            const updateAttributeList = [...productList.slice(0, index), updatedItem, ...productList.slice(index + 1)];\r\n            setProductList(updateAttributeList)\r\n\r\n        }\r\n    };\r\n\r\n\r\n    const convertAttributeValuesToStringValue = (attribute) => {\r\n        const value = [];\r\n\r\n        let attributeValues = Object.values(attribute);\r\n        attributeValues.forEach(attributeValue => {\r\n            // @ts-ignore\r\n            value.push(attributeValue)\r\n        })\r\n\r\n        return value.join(',');\r\n    };\r\n\r\n\r\n\r\n\r\n    const getPricingOptions = (pricing) => {\r\n        if (pricing && pricing.length > 0) {\r\n            const pricingOptions = [];\r\n\r\n            pricing.forEach(pricingItem => {\r\n\r\n                if (Object.values(pricingItem.attribute).length > 0 && pricingItem._id) {\r\n                    let pricingOption = {\r\n                        value: pricingItem._id,\r\n                        label: `${convertAttributeValuesToStringValue(pricingItem.attribute) || ''}`\r\n                    }\r\n                    // @ts-ignore\r\n                    pricingOptions.push(pricingOption)\r\n                }\r\n\r\n            })\r\n\r\n            return pricingOptions;\r\n        }\r\n        else return false\r\n    };\r\n\r\n    const pricingOptions = item && Object.keys(item).length > 0 ? getPricingOptions(item.pricing) : [];\r\n\r\n\r\n    console.log('pricingOptions', pricingOptions);\r\n\r\n    const handleAttributeChange = (tagId) => {\r\n        setSelectedVariationId(tagId);\r\n\r\n        const positionInAttribute = () => {\r\n            return productList.map(item => item._id).indexOf(productId);\r\n        }\r\n\r\n        const index = positionInAttribute();\r\n\r\n        const updatedItem = Object.assign({}, productList[index], { ...item, quantity: 1 });\r\n        const updateAttributeList = [...productList.slice(0, index), updatedItem, ...productList.slice(index + 1)];\r\n        setProductList(updateAttributeList);\r\n\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        const getPriceByVariationId = (id) => {\r\n            const pricing = item && Object.keys(item).length > 0 ? item.pricing : false;\r\n            if (pricing) {\r\n                const priceItem = pricing.find(pricingItem => pricingItem._id === id);\r\n                console.log('priceItem', id);\r\n\r\n                if (priceItem && priceItem.price.regular) {\r\n                    return priceItem.price.offer\r\n                        && parseInt(priceItem.price.offer)\r\n                        ? priceItem.price.offer : priceItem.price.regular\r\n                }\r\n                else return false;\r\n            }\r\n        }\r\n\r\n        if (selectedVariationId) {\r\n            const price = getPriceByVariationId(selectedVariationId);\r\n            setModifiedPrice(price);\r\n        }\r\n\r\n    }, [selectedVariationId]);\r\n\r\n\r\n\r\n    console.log('modifiedPrice', modifiedPrice);\r\n    return (\r\n        <>\r\n\r\n            {item && Object.keys(item).length > 0 && (\r\n                <div className='cart-item' key={''}>\r\n                    <div className='cart-item-quantityCounter'>\r\n                        <i\r\n                            onClick={() => {\r\n                                handleChangeQuantity('plus');\r\n                            }}\r\n                            className='fa fa-chevron-up'\r\n\r\n                        ></i>\r\n                        <p className='item-amount'>{quantity}</p>\r\n                        <i\r\n                            onClick={() => {\r\n                                handleChangeQuantity('minus');\r\n                            }}\r\n                            className='fa fa-chevron-down'\r\n\r\n                        ></i>\r\n                    </div>\r\n\r\n\r\n                    <img\r\n\r\n                        src={item['cover'] && item['cover']}\r\n                        alt='Img'\r\n                        style={{\r\n                            cursor: 'pointer',\r\n                        }}\r\n                    />\r\n                    <div className='cart-item-info'>\r\n                        <h4\r\n\r\n                        >\r\n                            {item['name']}\r\n                        </h4>\r\n                        <h5\r\n                        >\r\n                            {modifiedPrice || item['price']}\r\n                        </h5>\r\n\r\n\r\n                        {pricingOptions && pricingOptions.length > 0 && pricingOptions.map(tag => (\r\n                            <>\r\n                                <span\r\n                                    onClick={() => handleAttributeChange(tag.value)}\r\n                                    className={selectedVariationId === tag.value ? 'product-attributeTag product-attributeTag-active' : 'product-attributeTag'}>\r\n                                    {tag.label}\r\n                                </span>\r\n                            </>\r\n                        ))}\r\n\r\n                        {/* <span\r\n             style={{\r\n               display: 'inline-block',\r\n               background: '#fafafa',\r\n               padding: '3px 3px',\r\n               borderRadius: 1,\r\n               fontSize: '12px',\r\n               marginRight: '5px',\r\n               color: '#777',\r\n               marginTop: '5px'\r\n             }}\r\n           >\r\n             15KG\r\n             </span> */}\r\n\r\n                    </div>\r\n                    {/* <span\r\n                        onClick={handleAttributeDelete}\r\n                        className='remove-item' >\r\n                        <i className='fa fa-times'></i>\r\n                    </span> */}\r\n\r\n                </div>\r\n            )}\r\n        </>\r\n    );\r\n};\r\n\r\n// @ts-ignore\r\nexport default CartOverLayCartItem;\r\n","import React from 'react'\r\n\r\n\r\n// import components\r\nimport AddNewOrderProductItem from \"./AddNewOrderProductItem\";\r\nimport Empty from \"../../components/Empty\";\r\n\r\nimport {\r\n    ShopOutlined\r\n} from '@ant-design/icons';\r\n\r\n\r\n\r\ninterface Props {\r\n    productList?: any;\r\n    setProductList?: any;\r\n}\r\n\r\nconst AddNewOrderSummary = ({\r\n    setProductList,\r\n    productList\r\n}: Props) => {\r\n    return (\r\n        <div className='addOrderContainer__container-orderSummary'>\r\n            <h3 className='addOrderContainer-sectionTitle'>\r\n                <span>\r\n                    <ShopOutlined />\r\n                </span>\r\n                Added Products\r\n            </h3>\r\n            <div className='addOrderContainer__container-productItemContainer'>\r\n                {productList.length > 0 && productList.map(item => {\r\n                    return <AddNewOrderProductItem\r\n                        setProductList={setProductList}\r\n                        productList={productList}\r\n                        productId={item._id}\r\n                        quantity={item.quantity}\r\n                        item={item}\r\n                        variation={item.variation}\r\n                    />;\r\n                })}\r\n\r\n                {!(productList.length > 0) && (\r\n                    <div style={{\r\n                        marginLeft: '32px'\r\n                    }}>\r\n                        <Empty title='No Product Added' height={150} />\r\n                    </div>\r\n                )}\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddNewOrderSummary\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useHandleFetch } from '../../hooks';\r\nimport { Select, Skeleton } from 'antd';\r\n\r\ninterface Props {\r\n    setCustomerId?: any;\r\n    setSelectedCustomerData?: any;\r\n}\r\n\r\nconst { Option } = Select;\r\n\r\nconst Brands = ({ setCustomerId, setSelectedCustomerData }: Props) => {\r\n    const [options, setoptions] = useState([]);\r\n    const [selectedBrandId, setSelectedBrandId] = useState('');\r\n    const [brandState, handleTagListFetch] = useHandleFetch({}, 'customerList');\r\n\r\n    function onChange(option) {\r\n        if (options && options.length > 0) {\r\n            const customerData = options.find(item => item.value === option);\r\n            if (customerData) {\r\n                setSelectedCustomerData(customerData);\r\n            }\r\n        }\r\n        setSelectedBrandId(option);\r\n        setCustomerId(option);\r\n        // console.log(`selected ${value}`);\r\n    }\r\n\r\n    function onBlur() {\r\n        // console.log('blur');\r\n    }\r\n\r\n    function onFocus() {\r\n        // console.log('focus');\r\n    }\r\n\r\n    function onSearch(val) {\r\n        // console.log('search:', val);\r\n    }\r\n\r\n    useEffect(() => {\r\n        const setBrands = async () => {\r\n            const brandListRes = await handleTagListFetch({});\r\n\r\n            // @ts-ignore\r\n            if (brandListRes && brandListRes.length > 0) {\r\n                // @ts-ignore\r\n                const brandOptions = brandListRes.map((brand) => {\r\n                    return {\r\n                        ...brand,\r\n                        value: brand.id,\r\n                        name: `${brand.firstName} ${brand.lastName}`\r\n                    };\r\n                });\r\n                setoptions(brandOptions);\r\n            }\r\n        };\r\n\r\n        setBrands();\r\n    }, []);\r\n\r\n    return (\r\n        <Skeleton loading={brandState.isLoading}>\r\n            <Select\r\n                showSearch\r\n                size='middle'\r\n                style={{ width: '100%' }}\r\n                placeholder='Select a Customer'\r\n                optionFilterProp='children'\r\n                onChange={onChange}\r\n                onFocus={onFocus}\r\n                onBlur={onBlur}\r\n                onSearch={onSearch}\r\n                filterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n            >\r\n                {brandState.done &&\r\n                    brandState.data.length > 0 &&\r\n                    options.map((option) => {\r\n                        return <Option value={option.value}>{option.name}</Option>;\r\n                    })}\r\n            </Select>\r\n        </Skeleton>\r\n\r\n    );\r\n};\r\n\r\nexport default Brands;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useHandleFetch } from '../../hooks';\r\nimport { Select, Skeleton } from 'antd';\r\n\r\n\r\ninterface Props {\r\n    setProductIds?: any;\r\n    productIds?: any;\r\n}\r\n\r\n\r\nconst Tags = ({\r\n    setProductIds,\r\n    productIds\r\n}: Props) => {\r\n    const [options, setoptions] = useState([]);\r\n    const [selectedOpions, setselectedOptions] = useState([]);\r\n    const [tagState, handleTagListFetch] = useHandleFetch({}, 'productList');\r\n\r\n    useEffect(() => {\r\n        const setTags = async () => {\r\n            const tagListRes = await handleTagListFetch({\r\n                urlOptions: {\r\n                    params: {\r\n                        isSubCategory: false\r\n                    }\r\n                }\r\n            });\r\n\r\n            // @ts-ignore\r\n            if (tagListRes && tagListRes.length > 0) {\r\n                // @ts-ignore\r\n                const tagOptions = tagListRes.map((tag) => {\r\n                    return tag.name\r\n                });\r\n                setoptions(tagOptions);\r\n            }\r\n\r\n        };\r\n\r\n        setTags();\r\n    }, []);\r\n\r\n\r\n\r\n    const handleChange = (selectItems) => {\r\n        setselectedOptions(selectItems)\r\n\r\n        if (tagState.done && tagState.data.length > 0 && selectItems.length > 0) {\r\n            const selectedCategoryIds = selectItems.map((item) => {\r\n                const selectedcategory = tagState.data.find(\r\n                    (cat) => cat.name.toLowerCase() === item.toLowerCase()\r\n                );\r\n                if (selectedcategory) {\r\n                    return selectedcategory;\r\n                }\r\n            });\r\n            setProductIds(selectedCategoryIds);\r\n        }\r\n        else {\r\n            setProductIds([])\r\n        }\r\n\r\n\r\n    }\r\n\r\n\r\n    // console.log('selectedOpions', selectedOpions);\r\n\r\n\r\n    return (\r\n        <>\r\n\r\n            <Skeleton loading={tagState.isLoading}>\r\n                {tagState.done && tagState.data.length > 0 && <Select\r\n                    mode=\"multiple\"\r\n                    placeholder=\"search products\"\r\n                    value={selectedOpions}\r\n                    onChange={handleChange}\r\n                    style={{ width: '100%' }}\r\n                >\r\n                    {options.filter(o => !selectedOpions.includes(o)).map(item => (\r\n                        <Select.Option key={item} value={item}>\r\n                            {item}\r\n                        </Select.Option>\r\n                    ))}\r\n                </Select>}\r\n            </Skeleton>\r\n\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Tags\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n\r\nimport { useHandleFetch } from '../../hooks';\r\n// import third party ui lib\r\nimport { Upload, message, Switch, Select, Button, notification, Modal, Empty, Steps, Form, Checkbox } from 'antd';\r\n\r\nimport {\r\n\tFileOutlined,\r\n\tInboxOutlined,\r\n\tRadiusUpleftOutlined,\r\n\tRadiusUprightOutlined,\r\n\tRadiusBottomleftOutlined,\r\n\tRadiusBottomrightOutlined,\r\n\tDeleteOutlined,\r\n\tFileAddOutlined,\r\n\tPlusOutlined,\r\n\tCheckCircleOutlined,\r\n\tCaretRightOutlined,\r\n\tCaretLeftOutlined,\r\n\tCaretRightFilled,\r\n\tUserOutlined,\r\n\tInfoCircleOutlined\r\n} from '@ant-design/icons';\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport AddNewOrderSummary from './AddNewOrderSummary';\r\nimport CustomersId from './CustomersId';\r\nimport AddProducts from './AddProducts';\r\nimport { product } from '../../state/ducks';\r\n\r\n\r\nconst { Option } = Select;\r\nconst { Step } = Steps;\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t\tmessage: message || 'Order Created',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n\tnotification.error({\r\n\t\tmessage: message || 'Something Went Wrong',\r\n\t\tdescription: '',\r\n\t\ticon: <InfoCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n\r\n\r\n});\r\n\r\n\r\n\r\n\r\nconst initialValues = {\r\n\tphone: '',\r\n\temail: '',\r\n\tfirstName: '',\r\n\tlastName: '',\r\n\taddress1: '',\r\n\taddress2: '',\r\n\tzipCode: '',\r\n\tadditionalInfo: '',\r\n\tcountry: '',\r\n\tcity: '',\r\n\r\n};\r\n\r\n\r\nconst steps = [\r\n\t{\r\n\t\ttitle: 'Order Information',\r\n\t\tcontent: '',\r\n\t\t// description: 'Add Customer & Products'\r\n\t},\r\n\t{\r\n\t\ttitle: 'Billing Address',\r\n\r\n\t},\r\n\t{\r\n\t\ttitle: 'Confirm Order',\r\n\t\tcontent: '',\r\n\t},\r\n];\r\n\r\n\r\n\r\n\r\ninterface Props {\r\n\r\n}\r\n\r\nconst AddNewOrder = ({ }: Props) => {\r\n\r\n\tconst [addOrderState, handleOrderFetch] = useHandleFetch({}, 'addOrder');\r\n\tconst [selectedCountryValue, setselectedCountryValue] = useState('');\r\n\tconst [selectedCityValue, setselectedCityValue] = useState('');\r\n\tconst [productIds, setProductIds] = useState([]);\r\n\tconst [productList, setProductList] = useState([]);\r\n\tconst [customerId, setCustomerId] = useState([]);\r\n\r\n\tconst [countryOptions, setcountryOptions] = useState([]);\r\n\tconst [cityOptions, setcityOptions] = useState([]);\r\n\r\n\tconst [countryListState, handleCountryListFetch] = useHandleFetch(\r\n\t\t[],\r\n\t\t'countryList'\r\n\t);\r\n\r\n\r\n\r\n\tconst [cityListState, handleCityListFetch] = useHandleFetch([], 'cityList');\r\n\r\n\tconst [countryList, setCountryList] = useState([]);\r\n\tconst [cityList, setCityList] = useState([]);\r\n\tconst [current, setCurrent] = useState(0);\r\n\tconst [selectedCustomerData, setSelectedCustomerData] = useState({});\r\n\r\n\r\n\tconst next = () => {\r\n\t\tconst newCurrent = current + 1;\r\n\t\tsetCurrent(newCurrent);\r\n\t}\r\n\r\n\r\n\tconst prev = () => {\r\n\t\tconst newCurrent = current - 1;\r\n\t\tsetCurrent(newCurrent);\r\n\t}\r\n\r\n\r\n\tconst handleCheckoutSubmit = async (values: any, actions: any) => {\r\n\t\t// console.log('selectedCityValue', selectedCityValue)\r\n\t\tconsole.log('values', values);\r\n\t\tconsole.log('productListcool', productList);\r\n\r\n\t\tconst products = productList && productList.length > 0 ? productList.map(item => {\r\n\t\t\treturn {\r\n\t\t\t\tproduct: item._id,\r\n\t\t\t\tquantity: item.quantity,\r\n\t\t\t\tvariation: item.variation\r\n\t\t\t}\r\n\t\t}) : [];\r\n\r\n\t\tconst addOrderRes = await handleOrderFetch({\r\n\r\n\t\t\tbody: {\r\n\t\t\t\tbillingAddress: {\r\n\t\t\t\t\tphone: values.phone,\r\n\t\t\t\t\temail: values.email,\r\n\t\t\t\t\taddress1: values.address1,\r\n\t\t\t\t\taddress2: values.address2,\r\n\t\t\t\t\tfirstName: values.firstName,\r\n\t\t\t\t\tlastName: values.lastName,\r\n\t\t\t\t\tcity: selectedCityValue || selectedCustomerData['city'],\r\n\t\t\t\t\tcountry: selectedCountryValue || selectedCustomerData['country'],\r\n\t\t\t\t},\r\n\t\t\t\tproducts,\r\n\t\t\t\tcustomerId: customerId\r\n\t\t\t\t// charge\r\n\t\t\t},\r\n\t\t});\r\n\r\n\t\t// @ts-ignore\r\n\t\tif (addOrderRes && addOrderRes.status === 'ok') {\r\n\t\t\topenSuccessNotification();\r\n\r\n\r\n\t\t\tactions.resetForm();\r\n\t\t}\r\n\t\telse {\r\n\t\t\topenErrorNotification(\"Couldn't create order, Something went wrong\")\r\n\t\t}\r\n\r\n\t\tactions.setSubmitting(false);\r\n\t};\r\n\r\n\r\n\r\n\tuseEffect(() => {\r\n\t\tif (!addOrderState['isLoading']) {\r\n\t\t\tconst error = addOrderState['error'];\r\n\t\t\tif (error['isError'] && Object.keys(error['error']).length > 0) {\r\n\t\t\t\tif (error['error']['registerError']) {\r\n\t\t\t\t\t// setServerErrors(error['error']['registerError']);\r\n\t\t\t\t} else if (error['error']['checkoutError']) {\r\n\t\t\t\t\t// setServerErrors(error['error']['checkoutError']);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\t// setServerErrors(error['error']);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst errors =\r\n\t\t\t\t\tObject.values(error['error']).length > 0\r\n\t\t\t\t\t\t? Object.values(error['error'])\r\n\t\t\t\t\t\t: [];\r\n\t\t\t\terrors.forEach((err, i) => {\r\n\t\t\t\t\tif (typeof err === 'string') {\r\n\t\t\t\t\t\topenErrorNotification(err);\r\n\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if (typeof err === 'object') {\r\n\t\t\t\t\t\tif (err && Object.keys(err).length > 0) {\r\n\t\t\t\t\t\t\tconst errs = Object.values(err);\r\n\t\t\t\t\t\t\terrs.forEach(err => {\r\n\t\t\t\t\t\t\t\topenErrorNotification(err);\r\n\t\t\t\t\t\t\t})\r\n\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (\r\n\t\t\t!addOrderState['isLoading'] &&\r\n\t\t\tObject.keys(addOrderState.data).length > 0\r\n\t\t) {\r\n\t\t\tif (addOrderState['data']['status'] === 'ok') {\r\n\t\t\t\topenSuccessNotification('Order Created Successfully');\r\n\t\t\t\t// history.push({\r\n\t\t\t\t//   pathname: '/orderDetails',\r\n\t\t\t\t//   state: checkoutState['data']\r\n\t\t\t\t// })\r\n\r\n\t\t\t\t// clearCart();\r\n\t\t\t\t// setIsModalShown(true);\r\n\t\t\t}\r\n\t\t}\r\n\t}, [addOrderState]);\r\n\r\n\r\n\r\n\r\n\tconst onChangeCity = (value) => {\r\n\t\tsetselectedCityValue(value);\r\n\t}\r\n\r\n\tconst onChangeCountry = (value) => {\r\n\t\tsetselectedCountryValue(value);\r\n\t};\r\n\r\n\r\n\r\n\tuseEffect(() => {\r\n\t\tconst setCountries = async () => {\r\n\t\t\tconst CountryListRes = await handleCountryListFetch({});\r\n\r\n\t\t\t// @ts-ignore\r\n\t\t\tif (CountryListRes && CountryListRes.length > 0) {\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\tconst countryOptions = CountryListRes.map((country) => {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tvalue: country.id,\r\n\t\t\t\t\t\tname: country.name\r\n\t\t\t\t\t};\r\n\t\t\t\t});\r\n\t\t\t\tsetcountryOptions(countryOptions);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tsetCountries();\r\n\t}, []);\r\n\r\n\r\n\tuseEffect(() => {\r\n\t\tconst setCities = async () => {\r\n\t\t\tconst cityListRes = await handleCityListFetch({\r\n\t\t\t\turlOptions: {\r\n\t\t\t\t\tplaceHolders: {\r\n\t\t\t\t\t\tcountry: selectedCountryValue,\r\n\t\t\t\t\t},\r\n\t\t\t\t},\r\n\t\t\t});\r\n\r\n\t\t\t// @ts-ignore\r\n\t\t\tif (cityListRes && cityListRes.length > 0) {\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\tconst cityOptions = cityListRes.map((city) => {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tvalue: city.name,\r\n\t\t\t\t\t\tname: city.name\r\n\t\t\t\t\t};\r\n\t\t\t\t});\r\n\t\t\t\tsetcityOptions(cityOptions);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tsetCities();\r\n\t}, [selectedCountryValue]);\r\n\r\n\r\n\r\n\r\n\r\n\tconst getisSubmitButtonDisabled = (values, isValid) => {\r\n\t\tif (!isValid ||\r\n\t\t\t!values.name ||\r\n\t\t\t!values.pickUpLocation ||\r\n\t\t\t!values.time) {\r\n\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\r\n\r\n\tconst handleAddDeliveryCharge = () => {\r\n\r\n\t};\r\n\r\n\r\n\r\n\tuseEffect(() => {\r\n\r\n\t\tif (productIds.length > 0) {\r\n\t\t\tif (productIds.length > productList.length) {\r\n\t\t\t\tconst variation = productIds[productIds.length - 1]['pricing'].length > 0 && productIds[productIds.length - 1]['pricing'][0]['_id'];\r\n\t\t\t\tconsole.log('variation', variation)\r\n\r\n\t\t\t\tsetProductList([...productList, {\r\n\t\t\t\t\t...productIds[productIds.length - 1],\r\n\t\t\t\t\t_id: productIds[productIds.length - 1]['id'],\r\n\t\t\t\t\tvariation: variation,\r\n\t\t\t\t\tquantity: 1\r\n\t\t\t\t}]);\r\n\t\t\t}\r\n\r\n\r\n\t\t\telse if (productIds.length < productList.length) {\r\n\t\t\t\tconst newProductList = productList.filter(item => {\r\n\t\t\t\t\tlet isTrue = false;\r\n\t\t\t\t\tproductIds.forEach(product => {\r\n\t\t\t\t\t\tif (product._id === item._id) {\r\n\t\t\t\t\t\t\tisTrue = true;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t\treturn isTrue;\r\n\t\t\t\t})\r\n\t\t\t\tsetProductList(newProductList);\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\t\telse {\r\n\t\t\tsetProductList([]);\r\n\t\t}\r\n\t\t// console.log('productIds', productIds)\r\n\r\n\r\n\t}, [productIds])\r\n\r\n\r\n\t// console.log('productList', productList)\r\n\tconsole.log('selectedCustomerData', selectedCustomerData)\r\n\r\n\treturn (\r\n\t\t<Formik\r\n\t\t\tonSubmit={(values, actions) => handleCheckoutSubmit(values, actions)}\r\n\t\t\tvalidationSchema={validationSchema}\r\n\t\t\tvalidateOnBlur={false}\r\n\t\t\tenableReinitialize={true}\r\n\t\t\tinitialValues={\r\n\t\t\t\t{ ...initialValues, ...selectedCustomerData }\r\n\t\t\t}\r\n\t\t>\r\n\t\t\t{({\r\n\t\t\t\thandleChange,\r\n\t\t\t\tvalues,\r\n\t\t\t\thandleSubmit,\r\n\t\t\t\terrors,\r\n\t\t\t\tisValid,\r\n\t\t\t\tisSubmitting,\r\n\t\t\t\ttouched,\r\n\t\t\t\thandleBlur,\r\n\t\t\t\tsetFieldTouched,\r\n\t\t\t\thandleReset,\r\n\t\t\t}) => (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<div className='addOrderContainer'>\r\n\t\t\t\t\t\t\t<h3>\r\n\t\t\t\t\t\t\t\tAdd New Order\r\n\t\t\t\t\t\t\t</h3>\r\n\t\t\t\t\t\t\t<div className='addOrderContainer__container'>\r\n\t\t\t\t\t\t\t\t<Steps current={current}>\r\n\t\t\t\t\t\t\t\t\t{steps.map(item => (\r\n\t\t\t\t\t\t\t\t\t\t<Step\r\n\t\t\t\t\t\t\t\t\t\t\tkey={item.title}\r\n\t\t\t\t\t\t\t\t\t\t\ttitle={item.title} />\r\n\t\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t\t</Steps>\r\n\r\n\t\t\t\t\t\t\t\t{current === 0 && (\r\n\t\t\t\t\t\t\t\t\t<div className='addOrderContainer__container-OrderInfoContainer'>\r\n\t\t\t\t\t\t\t\t\t\t<div className='addOrderContainer__container-OrderInfoContainer-left'>\r\n\t\t\t\t\t\t\t\t\t\t\t<h3 className='addOrderContainer-sectionTitle'>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<UserOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n                                            Customers And products\r\n                                           </h3>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<h4 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\t\t\t\t\t\tCustomer\r\n\t\t\t\t\t\t\t\t\t\t\t</h4>\r\n\t\t\t\t\t\t\t\t\t\t\t<CustomersId\r\n\t\t\t\t\t\t\t\t\t\t\t\tsetSelectedCustomerData={setSelectedCustomerData}\r\n\t\t\t\t\t\t\t\t\t\t\t\tsetCustomerId={setCustomerId} />\r\n\t\t\t\t\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\tmarginTop: '15px'\r\n\t\t\t\t\t\t\t\t\t\t\t}}></div>\r\n\t\t\t\t\t\t\t\t\t\t\t<h4 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\t\t\t\t\t\tProducts\r\n\t\t\t\t\t\t\t\t\t\t\t</h4>\r\n\t\t\t\t\t\t\t\t\t\t\t<AddProducts\r\n\t\t\t\t\t\t\t\t\t\t\t\tproductIds={productIds}\r\n\t\t\t\t\t\t\t\t\t\t\t\tsetProductIds={setProductIds} />\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t<div className='addOrderContainer__container-OrderInfoContainer-right'>\r\n\t\t\t\t\t\t\t\t\t\t\t<AddNewOrderSummary\r\n\t\t\t\t\t\t\t\t\t\t\t\tsetProductList={setProductList}\r\n\t\t\t\t\t\t\t\t\t\t\t\tproductList={productList} />\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t)}\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t{current === 1 && (\r\n\t\t\t\t\t\t\t\t\t<div className='addOrderContainer__container-address'>\r\n\r\n\t\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs'>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tlabel='First Name'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.firstName}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tname='firstName'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.firstName && errors.firstName) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addOrderState.error['error']['firstName'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.firstName && errors.firstName) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addOrderState.error['error']['firstName'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('firstName');\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tlabel='Last Name'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.lastName}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tname='lastName'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.lastName && errors.lastName) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addOrderState.error['error']['lastName'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.lastName && errors.lastName) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addOrderState.error['error']['lastName'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('lastName');\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs'>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tlabel='Phone'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.phone}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tname='phone'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.phone && errors.phone) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addOrderState.error['error']['phone'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.phone && errors.phone) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addOrderState.error['error']['phone'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('phone');\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tlabel='Email'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.email}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tname='email'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.email && errors.email) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addOrderState.error['error']['email'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.email && errors.email) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addOrderState.error['error']['email'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('email');\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs'>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tCountry\r\n\t\t\t\t\t\t\t\t\t</h3>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Form.Item\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalidateStatus={(addOrderState.error['error']['country']) ? \"error\" : \"\"}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\thelp={addOrderState.error['error']['country']}\r\n\t\t\t\t\t\t\t\t\t\t\t\t// noStyle={true}\r\n\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Select\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tdefaultValue={values.country}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tnotFoundContent={<Empty description='No Country Found' image={Empty.PRESENTED_IMAGE_SIMPLE} />}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tshowSearch\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{ width: '100%' }}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder='Select a Country'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\toptionFilterProp='children'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={onChangeCountry}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tfilterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{countryListState.done &&\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcountryListState.data.length > 0 &&\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcountryOptions.map((option) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn <Option value={option.value}>{option.name}</Option>;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Select>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Form.Item>\r\n\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tCity\r\n                                    </h3>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Form.Item\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t// noStyle={true}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalidateStatus={(addOrderState.error['error']['city']) ? \"error\" : \"\"}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\thelp={addOrderState.error['error']['city']}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Select\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tdefaultValue={values.city}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='selectClassName'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tnotFoundContent={<Empty description='First Select a Country' image={Empty.PRESENTED_IMAGE_SIMPLE} />}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tshowSearch\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{ width: '100%' }}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder='Select a city'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\toptionFilterProp='children'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={onChangeCity}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tfilterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{cityListState.done &&\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcityListState.data.length > 0 &&\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcityOptions.map((option) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn <Option value={option.value}>{option.name}</Option>;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Select>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Form.Item>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\t\t\t\tmarginTop: '12px'\r\n\t\t\t\t\t\t\t\t\t\t}}></div>\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs'>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tlabel='Address'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.address1}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tname='address1'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.address1 && errors.address1) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addOrderState.error['error']['address1'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.address1 && errors.address1) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addOrderState.error['error']['address1'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('address1');\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tlabel='More specific address'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.address2}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tname='address2'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.address2 && errors.address2) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addOrderState.error['error']['address2'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.address2 && errors.address2) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addOrderState.error['error']['address2'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('address2');\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t)}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t{current === 10 && (\r\n\t\t\t\t\t\t\t\t\t<div className='addOrderContainer__container-address'>\r\n\r\n\t\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs'>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tlabel='First Name'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.firstName}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tname='firstName'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.firstName && errors.firstName) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addOrderState.error['error']['firstName'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.firstName && errors.firstName) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addOrderState.error['error']['firstName'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('firstName');\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tlabel='Last Name'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.lastName}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tname='lastName'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.lastName && errors.lastName) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addOrderState.error['error']['lastName'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.lastName && errors.lastName) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addOrderState.error['error']['lastName'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('lastName');\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs'>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tlabel='Phone'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.phone}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tname='phone'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.phone && errors.phone) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addOrderState.error['error']['phone'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.phone && errors.phone) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addOrderState.error['error']['phone'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('phone');\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tlabel='Email'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.email}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tname='email'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.email && errors.email) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addOrderState.error['error']['email'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.email && errors.email) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addOrderState.error['error']['email'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('email');\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs'>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tCountry\r\n\t\t\t\t\t\t\t\t\t</h3>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Form.Item\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalidateStatus={(addOrderState.error['error']['country']) ? \"error\" : \"\"}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\thelp={addOrderState.error['error']['country']}\r\n\t\t\t\t\t\t\t\t\t\t\t\t// noStyle={true}\r\n\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Select\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tdefaultValue={'Comoros'}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tnotFoundContent={<Empty description='No Country Found' image={Empty.PRESENTED_IMAGE_SIMPLE} />}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tshowSearch\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{ width: '100%' }}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder='Select a Country'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\toptionFilterProp='children'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={onChangeCountry}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tfilterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{countryListState.done &&\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcountryListState.data.length > 0 &&\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcountryOptions.map((option) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn <Option value={option.value}>{option.name}</Option>;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Select>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Form.Item>\r\n\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tCity\r\n                                    </h3>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Form.Item\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t// noStyle={true}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalidateStatus={(addOrderState.error['error']['city']) ? \"error\" : \"\"}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\thelp={addOrderState.error['error']['city']}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Select\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tdefaultValue={values.city}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='selectClassName'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tnotFoundContent={<Empty description='First Select a Country' image={Empty.PRESENTED_IMAGE_SIMPLE} />}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tshowSearch\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{ width: '100%' }}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder='Select a city'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\toptionFilterProp='children'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={onChangeCity}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tfilterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{cityListState.done &&\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcityListState.data.length > 0 &&\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcityOptions.map((option) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn <Option value={option.value}>{option.name}</Option>;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Select>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Form.Item>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\t\t\t\tmarginTop: '12px'\r\n\t\t\t\t\t\t\t\t\t\t}}></div>\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs'>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tlabel='Address'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.address1}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tname='address1'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.address1 && errors.address1) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addOrderState.error['error']['address1'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.address1 && errors.address1) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addOrderState.error['error']['address1'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('address1');\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tlabel='More specific address'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.address2}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tname='address2'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.address2 && errors.address2) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addOrderState.error['error']['address2'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.address2 && errors.address2) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addOrderState.error['error']['address2'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('address2');\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t)}\r\n\r\n\r\n\t\t\t\t\t\t\t\t{current === 2 && (\r\n\t\t\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\t\t\tdisplay: 'flex',\r\n\t\t\t\t\t\t\t\t\t\tjustifyContent: 'center',\r\n\t\t\t\t\t\t\t\t\t\tmarginTop: '40px',\r\n\t\t\t\t\t\t\t\t\t\talignItems: 'center',\r\n\t\t\t\t\t\t\t\t\t\tflexDirection: \"column\"\r\n\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t<AddNewOrderSummary\r\n\t\t\t\t\t\t\t\t\t\t\tsetProductList={setProductList}\r\n\t\t\t\t\t\t\t\t\t\t\tproductList={productList} />\r\n\r\n\t\t\t\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\t\t\t\tdisplay: 'flex',\r\n\t\t\t\t\t\t\t\t\t\t\tmarginTop: '40px',\r\n\t\t\t\t\t\t\t\t\t\t\twidth: '300px',\r\n\t\t\t\t\t\t\t\t\t\t\tmarginBottom: '50px'\r\n\r\n\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t\t{/* <h3\r\n\t\t\t\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tcolor: '#666'\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\tTotal\r\n\t\t\t\t\t\t\t\t\t\t\t\t</h3>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<h3\r\n\t\t\t\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tcolor: '#333'\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t500\r\n\t\t\t\t\t\t\t\t\t\t\t\t</h3> */}\r\n\t\t\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\t\t\tloading={addOrderState.isLoading}\r\n\t\t\t\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tmarginTop: '10px',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tmarginLeft: '15px'\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\tclassName='btnPrimaryClassNameoutline-blue'\r\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={(e: any) => handleSubmit(e)}\r\n\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\tPlace Order\r\n\t\t\t\t\t\t\t\t\t\t\t<CaretRightOutlined />\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t)}\r\n\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\t\tdisplay: 'flex',\r\n\t\t\t\t\t\t\t\t\tjustifyContent: 'space-between'\r\n\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t{current > 0 && (\r\n\t\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\t\tstyle={{ marginRight: '15px', marginTop: '10px' }}\r\n\t\t\t\t\t\t\t\t\t\t\t// type=\"primary\"\r\n\t\t\t\t\t\t\t\t\t\t\tclassName='btnPrimaryClassNameoutline'\r\n\t\t\t\t\t\t\t\t\t\t\ttype=\"primary\" onClick={() => prev()}\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t<CaretLeftOutlined />\tPrevious\r\n\r\n\t\t\t\t\t\t\t\t\t\t</Button>\r\n\r\n\t\t\t\t\t\t\t\t\t)}\r\n\r\n\t\t\t\t\t\t\t\t\t{current < steps.length - 1 && (\r\n\t\t\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tmarginTop: '10px'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='btnPrimaryClassNameoutline'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"primary\" onClick={() => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (current === 1) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetCurrent(2)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tnext()\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tNext< CaretRightOutlined />\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Button>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t{/* {current === 1 && <Button\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tmarginTop: '10px',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tmarginLeft: '15px'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='btnPrimaryClassNameoutline'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"primary\" onClick={() => setCurrent(2)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tUse different address< CaretRightOutlined />\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t\t\t\t\t} */}\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t\t\t)}\r\n\r\n\t\t\t\t\t\t\t\t\t{/* {current === steps.length - 1 && (\r\n\t\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\t\t\tmarginTop: '10px',\r\n\t\t\t\t\t\t\t\t\t\t\t\tmarginLeft: '15px'\r\n\t\t\t\t\t\t\t\t\t\t\t}}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\tclassName='btnPrimaryClassNameoutline'\r\n\t\t\t\t\t\t\t\t\t\t\ttype=\"primary\" onClick={(e: any) => handleSubmit(e)}\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\tPlace Order\r\n\t\t\t\t\t\t\t\t\t\t\t<CaretRightOutlined />\r\n\r\n\t\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t\t)} */}\r\n\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t{/* <div className='addOrderContainer__container-left'>\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className='addOrderContainer__container-right'>\r\n\t\t\t\t\t\t\t\t\t<AddNewOrderSummary />\r\n\t\t\t\t\t\t\t\t</div> */}\r\n\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t</>\r\n\t\t\t\t)}\r\n\t\t</Formik>\r\n\r\n\r\n\r\n\r\n\t);\r\n};\r\n\r\nexport default AddNewOrder;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { AutoComplete, Tooltip } from 'antd';\r\n\r\nimport InputSmall from '../../components/Field/InputSmall';\r\nimport MediaLibrary from '../../components/MediaLibrary';\r\n\r\nimport { useFetch } from \"../../hooks\";\r\nimport {\r\n    DeleteOutlined,\r\n    FileAddOutlined,\r\n    FileImageFilled,\r\n    PlusOutlined,\r\n    CheckCircleOutlined,\r\n    CloseOutlined,\r\n    CheckOutlined,\r\n    InfoCircleOutlined\r\n} from '@ant-design/icons';\r\n\r\n\r\n\r\nconst Complete = ({ setItemsList, itemsList, componentItem }) => {\r\n\r\n\r\n    const [localComponentItem, setlocalComponentItem] = useState({\r\n        title: componentItem.title,\r\n        target: componentItem.target,\r\n        text: componentItem.text,\r\n        image: componentItem.image,\r\n    })\r\n\r\n    const [myImages, setmyImages] = useState([]);\r\n    const [visibleMedia, setvisibleMedia] = useState(false);\r\n\r\n    const handleComponentItemsChange = (e) => {\r\n        const name = e.target.name;\r\n        const value = e.target.value;\r\n\r\n        setlocalComponentItem({\r\n            ...localComponentItem,\r\n            [name]: value\r\n        });\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (myImages.length > 0) {\r\n            const newImages = myImages.map(item => item.id);\r\n            setlocalComponentItem({\r\n                ...localComponentItem,\r\n                image: [...newImages]\r\n            })\r\n        }\r\n        else {\r\n            setlocalComponentItem({\r\n                ...localComponentItem,\r\n                image: []\r\n            })\r\n        }\r\n\r\n    }, [myImages])\r\n\r\n    useEffect(() => {\r\n        const positionInAttribute = () => {\r\n            return itemsList.map(item => item.id).indexOf(componentItem.id);\r\n        }\r\n\r\n        const index = positionInAttribute();\r\n\r\n        const updatedItem = Object.assign({}, itemsList[index], { ...localComponentItem });\r\n        const updateComponentList = [...itemsList.slice(0, index), updatedItem, ...itemsList.slice(index + 1)];\r\n        setItemsList(updateComponentList);\r\n\r\n    }, [localComponentItem])\r\n\r\n\r\n    const handleAttributeDelete = () => {\r\n\r\n        const updateComponentList = itemsList.filter(item => item.id !== componentItem.id);\r\n        setItemsList(updateComponentList);\r\n    }\r\n\r\n\r\n    const handleImagesDelete = (id) => {\r\n        // @ts-ignore\r\n        const newImages = myImages && myImages.filter(image => {\r\n            return image.id !== id;\r\n        })\r\n\r\n        setmyImages(newImages);\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n\r\n\r\n            <div className='componentItemsContainer__item'>\r\n                <InputSmall\r\n                    label='Title'\r\n                    value={localComponentItem.title}\r\n                    name='title'\r\n                    onChange={handleComponentItemsChange}\r\n                />\r\n                <InputSmall\r\n                    label='Text'\r\n                    value={localComponentItem.text}\r\n                    name='text'\r\n                    onChange={handleComponentItemsChange}\r\n                />\r\n\r\n                <InputSmall\r\n                    label='Target'\r\n                    value={localComponentItem.target}\r\n                    name='target'\r\n                    onChange={handleComponentItemsChange}\r\n                />\r\n\r\n\r\n                <h3 className='inputFieldLabel-small'>Images</h3>\r\n                <div style={{\r\n                    marginBottom: \"-1px\"\r\n                }}></div>\r\n\r\n                <div className='aboutToUploadImagesContainer'>\r\n                    {myImages &&\r\n                        // @ts-ignore\r\n                        myImages.length > 0 && myImages.map((image, index) => {\r\n                            return (\r\n                                <div className='aboutToUploadImagesContainer__item aboutToUploadImagesContainer__item-small'>\r\n                                    <div\r\n                                        className='aboutToUploadImagesContainer__item-imgContainer'\r\n                                    >\r\n                                        <img src={image.cover} alt={image.alt} />\r\n                                    </div>\r\n\r\n                                    <span\r\n                                        onClick={() => handleImagesDelete(image.id)}\r\n                                        className='aboutToUploadImagesContainer__item-remove'>\r\n                                        <CloseOutlined />\r\n                                    </span>\r\n                                </div>\r\n                            )\r\n                        })}\r\n\r\n\r\n                    <Tooltip\r\n                        title={'Attach images'}>\r\n\r\n                        <div\r\n                            onClick={() => {\r\n                                setvisibleMedia(true);\r\n                            }}\r\n                            className='aboutToUploadImagesContainer__uploadItem aboutToUploadImagesContainer__uploadItem-small'>\r\n                            {/* <FileAddOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FileImageTwoTone />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FileImageOutlined /> */}\r\n                            <FileImageFilled />\r\n                            {/* <h5>\r\n\t\t\t\t\t\t\t\t\t\t\t\t     Select From Library\r\n\t\t\t\t\t\t\t\t\t\t\t<     /h5> */}\r\n                            <span className='aboutToUploadImagesContainer__uploadItem-plus'>\r\n                                <PlusOutlined />\r\n                            </span>\r\n                        </div>\r\n                    </Tooltip>\r\n\r\n                </div>\r\n\r\n\r\n\r\n            </div>\r\n            <MediaLibrary\r\n                setvisible={setvisibleMedia}\r\n                visible={visibleMedia}\r\n                myImages={myImages}\r\n                setmyImages={setmyImages}\r\n                isModalOpenForImages={true}\r\n\r\n            />\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Complete;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n\r\nimport { useHandleFetch } from '../../hooks';\r\n// import third party ui lib\r\nimport { Upload, message, Switch, Select, Button, notification, Modal } from 'antd';\r\n\r\nimport {\r\n    FileOutlined,\r\n    InboxOutlined,\r\n    FileAddOutlined,\r\n    DeleteOutlined,\r\n    CheckCircleOutlined,\r\n    PlusOutlined\r\n} from '@ant-design/icons';\r\n\r\n\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport MediaLibrary from \"../../components/MediaLibrary\";\r\nimport ComponentItem from \"./ComponentItem\";\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    groupName: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Component Created',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Something Went Wrong',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst initialValues = {\r\n    groupName: '',\r\n    items: [],\r\n}\r\n\r\n\r\n\r\ninterface Props {\r\n    addNewCategoryVisible?: any;\r\n    setAddNewCategoryVisible?: any;\r\n    componentList?: any;\r\n    setComponentList?: any;\r\n\r\n}\r\n\r\nconst AddNewBrand = ({ addNewCategoryVisible, setAddNewCategoryVisible, componentList, setComponentList }: Props) => {\r\n\r\n    const [addComponentState, handleAddComponentFetch] = useHandleFetch({}, 'addComponent');\r\n    const [myImages, setmyImages] = useState(false);\r\n    const [itemsList, setItemsList] = useState([])\r\n\r\n\r\n    const handleSubmit = async (values: any, actions: any) => {\r\n\r\n\r\n        const addComponentRes = await handleAddComponentFetch({\r\n            body: {\r\n                groupName: values.groupName,\r\n                items: itemsList\r\n            },\r\n        });\r\n\r\n        // @ts-ignore\r\n        if (addComponentRes && addComponentRes.status === 'ok') {\r\n            openSuccessNotification();\r\n            setComponentList([...componentList, {\r\n                id: addComponentRes['id'] || '',\r\n                key: addComponentRes['id'] || '',\r\n                groupName: addComponentRes['groupName'] || '',\r\n                // @ts-ignore\r\n                ...addComponentRes\r\n            }])\r\n            actions.resetForm();\r\n            setItemsList([])\r\n            setAddNewCategoryVisible(false);\r\n        }\r\n\r\n        else {\r\n            openErrorNotification();\r\n        }\r\n\r\n\r\n\r\n\r\n        actions.setSubmitting(false);\r\n\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (!addComponentState['isLoading']) {\r\n            const error = addComponentState['error'];\r\n            if (error['isError'] && Object.keys(error['error']).length > 0) {\r\n\r\n\r\n                const errors =\r\n                    Object.values(error['error']).length > 0\r\n                        ? Object.values(error['error'])\r\n                        : [];\r\n                errors.forEach((err, i) => {\r\n                    if (typeof err === 'string') {\r\n                        openErrorNotification(err)\r\n                    }\r\n                    else if (typeof err === 'object') {\r\n                        if (err && Object.keys(err).length > 0) {\r\n                            const errs = Object.values(err);\r\n                            errs.forEach(err => {\r\n                                openErrorNotification(err)\r\n                            })\r\n\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n        }\r\n    }, [addComponentState])\r\n\r\n\r\n\r\n\r\n\r\n\r\n    const handleCancel = (e: any) => {\r\n        setAddNewCategoryVisible(false);\r\n    };\r\n\r\n\r\n    const getisSubmitButtonDisabled = (values, isValid) => {\r\n        if (!values.groupName) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n    const handleAddComponentItem = () => {\r\n        setItemsList([...itemsList, {\r\n            title: '',\r\n            target: '',\r\n            text: '',\r\n            image: [],\r\n            id: `${itemsList.length}`\r\n        }])\r\n    }\r\n\r\n\r\n\r\n\r\n    return (\r\n        <Formik\r\n            onSubmit={(values, actions) => handleSubmit(values, actions)}\r\n            validationSchema={validationSchema}\r\n            validateOnBlur={false}\r\n            enableReinitialize={true}\r\n            initialValues={\r\n                { ...initialValues }\r\n            }\r\n        >\r\n            {({\r\n                handleChange,\r\n                values,\r\n                handleSubmit,\r\n                errors,\r\n                isValid,\r\n                isSubmitting,\r\n                touched,\r\n                handleBlur,\r\n                setFieldTouched,\r\n                handleReset,\r\n            }) => (\r\n                    <>\r\n                        <Modal\r\n                            style={{\r\n                                top: '40px'\r\n                            }}\r\n                            title=\"Add New Component\"\r\n                            visible={addNewCategoryVisible}\r\n                            onOk={(e: any) => handleSubmit(e)}\r\n                            onCancel={handleCancel}\r\n                            okText='Create'\r\n                            okButtonProps={{\r\n                                loading: isSubmitting,\r\n                                htmlType: \"submit\",\r\n                                disabled: getisSubmitButtonDisabled(values, isValid)\r\n                            }}\r\n                            width={'50vw'}\r\n                            bodyStyle={{\r\n                                margin: '0',\r\n                                padding: '10px'\r\n                            }}\r\n                        >\r\n                            <Input\r\n                                label='Group Component Name'\r\n                                value={values.groupName}\r\n                                name='groupName'\r\n                                isError={(touched.groupName && errors.groupName) ||\r\n                                    (!isSubmitting && addComponentState.error['error']['name'])}\r\n\r\n                                errorString={(touched.groupName && errors.groupName) ||\r\n                                    (!isSubmitting && addComponentState.error['error']['name'])}\r\n                                onChange={(e: any) => {\r\n                                    handleChange(e);\r\n                                    setFieldTouched('groupName');\r\n                                }}\r\n                            />\r\n                            <div style={{\r\n                                marginTop: '15px',\r\n                            }}></div>\r\n                            <h3 className='inputFieldLabel'>Children</h3>\r\n\r\n                            <div className='componentItemsContainer'>\r\n                                {itemsList.map(itemComponent => {\r\n                                    return <ComponentItem\r\n                                        componentItem={itemComponent}\r\n                                        itemsList={itemsList} setItemsList={setItemsList} />\r\n                                })}\r\n\r\n                                <Button size='small'\r\n                                    onClick={handleAddComponentItem}\r\n                                    style={{\r\n                                        width: '290px',\r\n                                        minHeight: '145px',\r\n                                        marginTop: '0px',\r\n                                        borderRadius: '8px'\r\n                                    }} type=\"dashed\" icon={<PlusOutlined />}>Add Childrens</Button>\r\n                            </div>\r\n\r\n                            <div\r\n                                style={{\r\n                                    marginTop: '20px'\r\n                                }}\r\n                            />\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n                        </Modal>\r\n\r\n\r\n                    </>\r\n                )}\r\n        </Formik>\r\n\r\n\r\n\r\n\r\n    );\r\n};\r\n\r\nexport default AddNewBrand;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { AutoComplete, Button, Tooltip } from 'antd';\r\n\r\n// import configs\r\nimport config from \"../../config.json\";\r\n\r\nimport InputSmall from '../../components/Field/InputSmall';\r\nimport MediaLibrary from '../../components/MediaLibrary';\r\n\r\nimport { useFetch } from \"../../hooks\";\r\nimport {\r\n    DeleteOutlined,\r\n    FileAddOutlined, \r\n    SaveOutlined,\r\n    FileImageFilled,\r\n    PlusOutlined,\r\n    CheckCircleOutlined,\r\n    CloseOutlined,\r\n    CheckOutlined,\r\n    InfoCircleOutlined\r\n} from '@ant-design/icons';\r\n\r\n\r\n\r\nconst Complete = ({ setComponentList, componentList, item, component,componentUpdate }) => {\r\n\r\n    const [localComponentItem, setlocalComponentItem] = useState({\r\n        title: item.title,\r\n        target: item.target,\r\n        text: item.text,\r\n        image: item.image,\r\n    })\r\n\r\n    const [myImages, setmyImages] = useState([]);\r\n    const [visibleMedia, setvisibleMedia] = useState(false);\r\n\r\n    const handleComponentItemsChange = (e) => {\r\n        const name = e.target.name;\r\n        const value = e.target.value;\r\n\r\n        setlocalComponentItem({\r\n            ...localComponentItem,\r\n            [name]: value\r\n        });\r\n    };\r\n\r\n\r\n\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        if (myImages.length > 0) {\r\n            setlocalComponentItem({\r\n                ...localComponentItem,\r\n                // @ts-ignore\r\n                image: [...new Set([...localComponentItem.image, ...myImages])]\r\n            })\r\n        }\r\n        else {\r\n            setlocalComponentItem({\r\n                ...localComponentItem,\r\n                image: []\r\n            })\r\n        }\r\n\r\n    }, [myImages])\r\n\r\n\r\n\r\n\r\n\r\n    const handleImagesDelete = (id) => {\r\n        // @ts-ignore\r\n        const newImages = localComponentItem.image && localComponentItem.image.length > 0 && localComponentItem.image.filter(image => {\r\n            return image.id !== id;\r\n        })\r\n\r\n        setlocalComponentItem({\r\n            ...localComponentItem,\r\n            image: [...newImages]\r\n        })\r\n\r\n        setmyImages(newImages);\r\n    }\r\n\r\n\r\n    const handleComponentItemUpdate = () => {\r\n        componentUpdate(item,component,localComponentItem); \r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <div\r\n                style={{\r\n                    width: '100%',\r\n                    boxShadow: \"none\"\r\n                }}\r\n                className='componentItemsContainer__item'>\r\n                <InputSmall\r\n                    label='Title'\r\n                    value={localComponentItem.title}\r\n                    name='title'\r\n                    onChange={handleComponentItemsChange}\r\n                />\r\n                <InputSmall\r\n                    label='Text'\r\n                    value={localComponentItem.text}\r\n                    name='text'\r\n                    onChange={handleComponentItemsChange}\r\n                />\r\n\r\n                <InputSmall\r\n                    label='Target'\r\n                    value={localComponentItem.target}\r\n                    name='target'\r\n                    onChange={handleComponentItemsChange}\r\n                />\r\n\r\n\r\n                <h3 className='inputFieldLabel-small'>Images</h3>\r\n                <div style={{\r\n                    marginBottom: \"-1px\"\r\n                }}></div>\r\n\r\n\r\n                <div className='aboutToUploadImagesContainer'>\r\n                    {localComponentItem.image &&\r\n                        // @ts-ignore\r\n                        localComponentItem.image.length > 0 && localComponentItem.image.map((image, index) => {\r\n                            return (\r\n                                <div className='aboutToUploadImagesContainer__item aboutToUploadImagesContainer__item-small'>\r\n                                    <div\r\n                                        className='aboutToUploadImagesContainer__item-imgContainer'\r\n                                    >\r\n                                        <img src={image.cover} alt={image.alt} />\r\n                                    </div>\r\n\r\n                                    <span\r\n                                        onClick={() => handleImagesDelete(image.id)}\r\n                                        className='aboutToUploadImagesContainer__item-remove'>\r\n                                        <CloseOutlined />\r\n                                    </span>\r\n                                </div>\r\n                            )\r\n                        })}\r\n\r\n\r\n                    <Tooltip\r\n                        title={'Attach images'}>\r\n\r\n                        <div\r\n                            onClick={() => {\r\n                                setvisibleMedia(true);\r\n                            }}\r\n                            className='aboutToUploadImagesContainer__uploadItem aboutToUploadImagesContainer__uploadItem-small'>\r\n                            {/* <FileAddOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FileImageTwoTone />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FileImageOutlined /> */}\r\n                            <FileImageFilled />\r\n                            {/* <h5>\r\n\t\t\t\t\t\t\t\t\t\t\t\t     Select From Library\r\n\t\t\t\t\t\t\t\t\t\t\t<     /h5> */}\r\n                            <span className='aboutToUploadImagesContainer__uploadItem-plus'>\r\n                                <PlusOutlined />\r\n                            </span>\r\n                        </div>\r\n                    </Tooltip>\r\n\r\n                </div>\r\n                <Button\r\n                style={{\r\n                    marginTop: '15px'\r\n                }}\r\n                    icon={<SaveOutlined />}\r\n          className='btnPrimaryClassNameoutline'\r\n          onClick={() => handleComponentItemUpdate()}\r\n        >\r\n        Save\r\n            \r\n            </Button>\r\n            </div>\r\n            <MediaLibrary\r\n                setvisible={setvisibleMedia}\r\n                visible={visibleMedia}\r\n                myImages={myImages}\r\n                setmyImages={setmyImages}\r\n                isModalOpenForImages={true}\r\n\r\n            />\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Complete;\r\n","import React, { useState, useEffect } from 'react';\r\nimport * as Yup from 'yup';\r\n\r\n\r\nimport { useHandleFetch } from '../../hooks';\r\n// import third party ui lib\r\nimport { Upload, message, Switch, Select, Button, notification, Modal } from 'antd';\r\n\r\nimport {\r\n    FileOutlined,\r\n    InboxOutlined,\r\n    FileAddOutlined,\r\n    DeleteOutlined,\r\n    CheckCircleOutlined,\r\n    PlusOutlined\r\n} from '@ant-design/icons';\r\n\r\n\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport MediaLibrary from \"../../components/MediaLibrary\";\r\nimport ComponentItem from \"./ComponentItem\";\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    groupName: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Component Created',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Something Went Wrong',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst initialValues = {\r\n    groupName: '',\r\n    items: [],\r\n}\r\n\r\n\r\n\r\ninterface Props {\r\n    addNewCategoryVisible?: any;\r\n    setAddNewCategoryVisible?: any;\r\n    componentList?: any;\r\n    setComponentList?: any;\r\n    updateComponentByAddingItem?: any;\r\n    componentId?: any\r\n\r\n}\r\n\r\nconst AddNewBrand = ({ addNewCategoryVisible,\r\n    setAddNewCategoryVisible, componentList,\r\n    setComponentList,\r\n    updateComponentByAddingItem, componentId }: Props) => {\r\n\r\n\r\n    const [localComponentItem, setlocalComponentItem] = useState({\r\n        title: '',\r\n        target: '',\r\n        text: '',\r\n        image: [],\r\n    })\r\n\r\n    const [myImages, setmyImages] = useState([]);\r\n    const [visibleMedia, setvisibleMedia] = useState(false);\r\n\r\n    const handleComponentItemsChange = (e) => {\r\n        const name = e.target.name;\r\n        const value = e.target.value;\r\n\r\n        setlocalComponentItem({\r\n            ...localComponentItem,\r\n            [name]: value\r\n        });\r\n    };\r\n\r\n\r\n    const handleCancel = (e: any) => {\r\n        setAddNewCategoryVisible(false);\r\n    };\r\n\r\n\r\n    const getisSubmitButtonDisabled = (values, isValid) => {\r\n        if (!values.groupName) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        if (myImages.length > 0) {\r\n            const newImages = myImages.map(item => item.id);\r\n            setlocalComponentItem({\r\n                ...localComponentItem,\r\n                image: [...newImages]\r\n            })\r\n        }\r\n        else {\r\n            setlocalComponentItem({\r\n                ...localComponentItem,\r\n                image: []\r\n            })\r\n        }\r\n\r\n    }, [myImages])\r\n\r\n\r\n\r\n\r\n\r\n\r\n    const handleImagesDelete = (id) => {\r\n        // @ts-ignore\r\n        const newImages = myImages && myImages.filter(image => {\r\n            return image.id !== id;\r\n        })\r\n\r\n        setmyImages(newImages);\r\n    }\r\n\r\n\r\n    const handleAddItem = (e) => {\r\n        updateComponentByAddingItem(localComponentItem, componentId)\r\n    }\r\n\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <Modal\r\n                style={{\r\n                    top: '40px'\r\n                }}\r\n                destroyOnClose={true}\r\n                title=\"Add New Component Item\"\r\n                visible={addNewCategoryVisible}\r\n                onOk={(e: any) => handleAddItem(e)}\r\n                onCancel={handleCancel}\r\n                okText='Add'\r\n                okButtonProps={{\r\n                    htmlType: \"submit\",\r\n                }}\r\n                width={'400px'}\r\n                bodyStyle={{\r\n                    margin: '0',\r\n                    padding: '10px'\r\n                }}\r\n            >\r\n                <Input\r\n                    label='Title'\r\n                    value={localComponentItem.title}\r\n                    name='title'\r\n                    onChange={handleComponentItemsChange}\r\n                />\r\n                <Input\r\n                    label='Text'\r\n                    value={localComponentItem.text}\r\n                    name='text'\r\n                    onChange={handleComponentItemsChange}\r\n                />\r\n\r\n                <Input\r\n                    label='Target'\r\n                    value={localComponentItem.target}\r\n                    name='target'\r\n                    onChange={handleComponentItemsChange}\r\n                />\r\n\r\n\r\n                <h3 className='inputFieldLabel-small'>Images</h3>\r\n                <div className='aboutToUploadImagesContainer'>\r\n                    {myImages &&\r\n                        // @ts-ignore\r\n                        myImages.length > 0 && myImages.map(image => {\r\n                            return (\r\n                                <div className='aboutToUploadImagesContainer__item'>\r\n                                    <div\r\n                                        onClick={() => handleImagesDelete(image.id)}\r\n                                        className='aboutToUploadImagesContainer__item-overlay'>\r\n                                        <DeleteOutlined />\r\n                                    </div>\r\n                                    <img src={image.cover} alt={image.alt} />\r\n                                </div>\r\n                            )\r\n                        })}\r\n\r\n                    <div\r\n                        onClick={() => {\r\n                            setvisibleMedia(true);\r\n                        }}\r\n                        className='aboutToUploadImagesContainer__uploadItem'>\r\n                        <FileAddOutlined />\r\n                    </div>\r\n                </div>\r\n                <MediaLibrary\r\n                    setvisible={setvisibleMedia}\r\n                    visible={visibleMedia}\r\n                    myImages={myImages}\r\n                    setmyImages={setmyImages}\r\n                    isModalOpenForImages={true} />\r\n\r\n            </Modal>\r\n        </>\r\n\r\n\r\n    );\r\n};\r\n\r\nexport default AddNewBrand;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Collapse, Button, Tooltip, Upload, Modal,Input, notification, Popconfirm } from 'antd';\r\nimport { CaretRightOutlined,CheckCircleOutlined,  PlusOutlined, DeleteOutlined, EditOutlined } from '@ant-design/icons';\r\n\r\n// import components\r\nimport InputField from '../../components/Field/Input';\r\nimport Empty from '../../components/Empty';\r\nimport ComponentImageUpload from './ComponentImageUpload';\r\nimport {useHandleFetch} from '../../hooks';\r\nimport { DataTableSkeleton } from \"../../components/Placeholders\";\r\nimport AddNewComponent from \"./AddNewComponent\";\r\nimport ComponentListComponentItem from './ComponentListComponentItem';\r\nimport AddNewComponentItem from './AddNewComponentItem';\r\nimport { category } from '../../state/ducks';\r\n\r\n\r\n\r\n\r\nconst { Panel } = Collapse;\r\nconst { Search } = Input;\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Component Created',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n    notification.error({\r\n        message: message || 'Something Went Wrong',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n    });\r\n};\r\n\r\n\r\n\r\nconst text = `\r\n  A dog is a type of domesticated animal.\r\n  Known for its loyalty and faithfulness,\r\n  it can be found as a welcome guest in many households across the world.\r\n`;\r\n\r\nfunction getBase64(file: any) {\r\n\treturn new Promise((resolve, reject) => {\r\n\t\tconst reader = new FileReader();\r\n\t\treader.readAsDataURL(file);\r\n\t\treader.onload = () => resolve(reader.result);\r\n\t\treader.onerror = (error) => reject(error);\r\n\t});\r\n}\r\n\r\n\r\nconst genExtra = (updateComponentByDeleting,component,id) => (\r\n\t<div\r\n\t\tstyle={{\r\n\t\t\tdisplay: 'flex'\r\n\t\t}}\r\n\t>\r\n\t\t\r\n\t\t<Tooltip placement='top' title='Edit Component'>\r\n\t\t<a href='##'>\r\n\t<EditOutlined\r\n\t\t\t\tonClick={(event) => {\r\n\t\t\t\t\t// If you don't want click extra trigger collapse, you can prevent this:\r\n\t\t\t\t\t// event.stopPropagation();\r\n\t\t\t\t}}\r\n\t\t\t/>\r\n\t\t</a>\r\n\t\t\r\n\t\t\t\r\n\t\t</Tooltip>\r\n\t\t\r\n\r\n\t\t<div\r\n\t\t\tstyle={{\r\n\t\t\t\tmarginLeft: '15px'\r\n\t\t\t}}\r\n\t\t/>\r\n\t\t   <a href='##' style={{\r\n\t\t\t\t   color:'rgb(241, 67, 67)'\r\n\t\t\t   }}>\r\n\t\t \r\n\t\t\t<Popconfirm \r\n               \r\n               onConfirm={() => updateComponentByDeleting(id,component)}\r\n               title=\"Are you sure？\" okText=\"Yes\" cancelText=\"No\">\r\n       \r\n\t\t   <DeleteOutlined\r\n\t\t\t\tonClick={(event) => {\r\n\t\t\t\t\t// If you don't want click extra trigger collapse, you can prevent this:\r\n\t\t\t\t\tevent.stopPropagation();\r\n\t\t\t\t}}\r\n\t\t\t/>\r\n\t\t\t\r\n           </Popconfirm>\r\n\t\t   </a>\r\n\t</div>\r\n);\r\n\r\nconst genExtraForGroup = (setitemVisible: any, handleDeleteComponent:any, id: any,setComponentId:any) => (\r\n\t<div\r\n\t\tstyle={{\r\n\t\t\tdisplay: 'flex'\r\n\t\t}}\r\n\t>\r\n\t\t<Tooltip placement='top' title='Add new item Component'>\r\n\t\t<a href='##'>\r\n\t\t\t<PlusOutlined\r\n\t\t\t\tonClick={(event) => {\r\n\t\t\t\t\t// If you don't want click extra trigger collapse, you can prevent this:\r\n\t\t\t\t\t// event.stopPropagation();\r\n\t\t\t\t\tsetitemVisible(true);\r\n\t\t\t\t\tsetComponentId(id)\r\n\t\t\t\t}}\r\n\t\t\t/>\r\n\t\t\t</a>\r\n\t\t</Tooltip>\r\n\r\n\t\t<div\r\n\t\t\tstyle={{\r\n\t\t\t\tmarginLeft: '15px'\r\n\t\t\t}}\r\n\t\t/>\r\n\t\t<Tooltip placement='top' title='Edit Component'>\r\n\t\t<a href='##'>\r\n\t\t\t<EditOutlined\r\n\t\t\t\tonClick={(event) => {\r\n\t\t\t\t\t// If you don't want click extra trigger collapse, you can prevent this:\r\n\t\t\t\t\t// event.stopPropagation();\r\n\t\t\t\t}}\r\n\t\t\t/>\r\n\t\t\t</a>\r\n\t\t</Tooltip>\r\n\r\n\t\t<div\r\n\t\t\tstyle={{\r\n\t\t\t\tmarginLeft: '15px'\r\n\t\t\t}}\r\n\t\t/>\r\n\t\t   <a href='##' style={{\r\n\t\t\t\t   color:'rgb(241, 67, 67)'\r\n\t\t\t   }}>\r\n\t\t \r\n\t\t<Popconfirm \r\n               \r\n               onConfirm={() => handleDeleteComponent(id)}\r\n               title=\"Are you sure？\" okText=\"Yes\" cancelText=\"No\">\r\n           \r\n\t\t   <DeleteOutlined\r\n\t\t\t\tonClick={(event) => {\r\n\t\t\t\t\t// If you don't want click extra trigger collapse, you can prevent this:\r\n\t\t\t\t\tevent.stopPropagation();\r\n\t\t\t\t}}\r\n\t\t\t/>\r\n\t\t\t\r\n\t\t\r\n\t\t\r\n           </Popconfirm>\r\n\t\t   </a>\r\n\r\n\t\t\t\r\n\t</div>\r\n);\r\n\r\nconst Component = (props) => {\r\n\r\n\r\n\tconst [visible, setvisible] = useState(false);\r\n\tconst [groupVisible, setgroupVisible] = useState(false);\r\n\tconst [itemVisible, setitemVisible] = useState(false);\r\n\tconst [componentId,setComponentId] = useState(''); \r\n\r\n\r\n\t\r\n\tconst [componentState, handleComponentListFetch] = useHandleFetch({}, 'componentList');\r\n\tconst [deleteComponentState, handleDeleteComponentFetch] = useHandleFetch({}, 'deleteComponent');\r\n\tconst [updateComponentState, handleUpdateComponentFetch] = useHandleFetch({}, 'updateComponent');\r\n\t\r\n\tconst [componentList,setComponentList] = useState([]); \r\n  \r\n\tuseEffect(()=>{\r\n\t const setComponents = async () => {\r\n\t   const components = await handleComponentListFetch({}); \r\n\t   // @ts-ignore\r\n\t   setComponentList(components); \r\n\t }\r\n\t setComponents(); \r\n\t},[])\r\n\r\n\t\r\n\r\n\tconst handleSearch = (value) => {\r\n\t\tif(componentState.data.length > 0 ){\r\n\t\t  const newComponentList = componentState.data.filter(item => item.name.toLowerCase().includes(value.toLowerCase())); \r\n\t\t  setComponentList(newComponentList); \r\n\t\t}\r\n\t\t \r\n\t  }\r\n\t\r\n\r\n\r\n\r\n\t  \r\n      const handleDeleteComponent = async (id) => {\r\n        const deleteComponentRes = await handleDeleteComponentFetch({\r\n          urlOptions: {\r\n            placeHolders: {\r\n              id,\r\n            }\r\n            }\r\n          });\r\n\r\n            // @ts-ignore\r\n\t\t  if(deleteComponentRes && deleteComponentRes.status === 'ok'){\r\n\t\t\t  openSuccessNotification('Component Deleted'); \r\n\t\t\t  const newComponentList =  componentList.filter(item => item.id !== id);\r\n\t\t\t  setComponentList(newComponentList); \r\n\t\t  }\r\n\t\t  else {\r\n\t\t\topenErrorNotification(\"Couldn't delete, Something went wrong\")\r\n\t\t  }\r\n\t  }\r\n\t  \r\n\r\n\r\n\r\n\tconst handleOk = (e: any) => {\r\n\t\tsetvisible(false);\r\n\r\n\t};\r\n\r\n\tconst handleCancel = (e: any) => {\r\n\t\tsetvisible(false);\r\n\t};\r\n\tconst handleOkGroup = (e: any) => {\r\n\t\tsetgroupVisible(false);\r\n\r\n\t};\r\n\r\n\tconst handleCancelGroup = (e: any) => {\r\n\t\tsetgroupVisible(false);\r\n\t};\r\n\r\n\r\n\tconst componentUpdate = async (item,component,localComponentItem) => {\r\n\t\tconst positionInComponents = () => {\r\n            return componentList.map(item => item.id).indexOf(component.id);\r\n          };\r\n      \r\n          const positionInItemsOfComponent = () => {\r\n            return component.items.map(item => item.id).indexOf(item.id);\r\n          };\r\n      \r\n          const componentIndex = positionInComponents();\r\n      \r\n\t\t  const itemIndex = positionInItemsOfComponent();\r\n\t\t  \r\n\r\n\t\t  const manupulatedLocalComponentForTheReq = localComponentItem.image.length > 0 ? \r\n\t\t  {\r\n\t\t\t...localComponentItem,\r\n\t\t\timage: localComponentItem.image.length > 0 ? localComponentItem.image.map(img => img.id) : []\r\n\t\t}\r\n\t\t  : localComponentItem;\r\n      \r\n          const updatedItems = [\r\n            ...component.items.slice(0, itemIndex),\r\n            localComponentItem,\r\n            ...component.items.slice(itemIndex + 1)\r\n\t\t  ];\r\n\t\t  \r\n\t\t  const manupulatedUpdatedItems = [\r\n            ...component.items.slice(0, itemIndex),\r\n            manupulatedLocalComponentForTheReq,\r\n            ...component.items.slice(itemIndex + 1)\r\n\t\t  ];\r\n\t\t  \r\n\t\t\r\n\t\t  const manupulatedUpdatedItem = Object.assign({}, componentList[componentIndex], {\r\n            ...component,\r\n            items: manupulatedUpdatedItems\r\n          });\r\n      \r\n          const updatedItem = Object.assign({}, componentList[componentIndex], {\r\n            ...component,\r\n            items: updatedItems\r\n          });\r\n      \r\n          const updateComponentList = [\r\n            ...componentList.slice(0, componentIndex),\r\n            updatedItem,\r\n            ...componentList.slice(componentIndex + 1)\r\n          ];\r\n\t\t\r\n\t\t  \r\n\r\n\r\n\t\tconst updateComponentRes = await handleUpdateComponentFetch({\r\n\t\t\turlOptions: {\r\n\t\t\t\tplaceHolders: {\r\n\t\t\t\t  id: component.id,\r\n\t\t\t\t}\r\n\t\t\t  },\r\n\t\t\tbody: {\r\n\t\t\t\t...manupulatedUpdatedItem,\r\n\t\t\t\tgroupName: updatedItem.name\r\n\t\t\t},\r\n\t\t  });\r\n\t\t\r\n\t\t\t   // @ts-ignore\r\n\t\t\t   if(updateComponentRes && updateComponentRes.status === 'ok'){\r\n\t\t\t\topenSuccessNotification(\"Component Updated\"); \r\n\t\t\t\tsetComponentList(updateComponentList);\r\n\t\t\t\t\r\n\t\t\t  }\r\n\t\t\t  else {\r\n\t\t\t\topenErrorNotification();\r\n\t\t\t  }\r\n\t}\r\n\r\n\r\n\tconst updateComponentByDeleting = async (id,component) => {\r\n\r\n\t\tconst positionInComponents = () => {\r\n            return componentList.map(item => item.id).indexOf(component.id);\r\n          };\r\n      \r\n          const positionInItemsOfComponent = () => {\r\n            return component.items.map(item => item.id).indexOf(id);\r\n          };\r\n      \r\n          const componentIndex = positionInComponents();\r\n      \r\n          const itemIndex = positionInItemsOfComponent();\r\n      \r\n          const updatedItems = [\r\n            ...component.items.slice(0, itemIndex),\r\n            ...component.items.slice(itemIndex + 1)\r\n          ];\r\n      \r\n          const updatedItem = Object.assign({}, componentList[componentIndex], {\r\n            ...component,\r\n            items: updatedItems\r\n          });\r\n      \r\n          const updateComponentList = [\r\n            ...componentList.slice(0, componentIndex),\r\n            updatedItem,\r\n            ...componentList.slice(componentIndex + 1)\r\n          ];\r\n\t\t\r\n\t\t  \r\n\r\n\r\n\t\tconst updateComponentRes = await handleUpdateComponentFetch({\r\n\t\t\turlOptions: {\r\n\t\t\t\tplaceHolders: {\r\n\t\t\t\t  id: component.id,\r\n\t\t\t\t}\r\n\t\t\t  },\r\n\t\t\tbody: {\r\n\t\t\t\t...updatedItem,\r\n\t\t\t\tgroupName: updatedItem.name\r\n\t\t\t},\r\n\t\t  });\r\n\t\t\r\n\t\t\t   // @ts-ignore\r\n\t\t\t   if(updateComponentRes && updateComponentRes.status === 'ok'){\r\n\t\t\t\topenSuccessNotification(\"Component Item deleted\"); \r\n\t\t\t\tsetComponentList(updateComponentList);\r\n\t\t\t\t\r\n\t\t\t  }\r\n\t\t\t  else {\r\n\t\t\t\topenErrorNotification();\r\n\t\t\t  }\r\n\t};\r\n\r\n\r\n\tconst updateComponentByAddingItem = async (localComponentItem,id) => {\r\n\t\tconst positionInComponents = () => {\r\n            return componentList.map(item => item.id).indexOf(id);\r\n          };\r\n      \r\n      \r\n          const componentIndex = positionInComponents();\r\n      \r\n    \r\n      \r\n          const updatedItems = [\r\n            ...componentList[componentIndex].items,\r\n            localComponentItem,\r\n          ];\r\n      \r\n          const updatedItem = Object.assign({}, componentList[componentIndex], {\r\n            ...componentList[componentIndex],\r\n            items: updatedItems\r\n          });\r\n      \r\n          const updateComponentList = [\r\n            ...componentList.slice(0, componentIndex),\r\n            updatedItem,\r\n            ...componentList.slice(componentIndex + 1)\r\n          ];\r\n\t\t\r\n\t\t  \r\n\r\n\r\n\t\tconst updateComponentRes = await handleUpdateComponentFetch({\r\n\t\t\turlOptions: {\r\n\t\t\t\tplaceHolders: {\r\n\t\t\t\t  id: id,\r\n\t\t\t\t}\r\n\t\t\t  },\r\n\t\t\tbody: {\r\n\t\t\t\t...updatedItem,\r\n\t\t\t\tgroupName: updatedItem.name\r\n\t\t\t},\r\n\t\t  });\r\n\t\t\r\n\t\t\t   // @ts-ignore\r\n\t\t\t   if(updateComponentRes && updateComponentRes.status === 'ok'){\r\n\t\t\t\topenSuccessNotification(\"Component Item Added\"); \r\n\t\t\t\tsetComponentList(updateComponentList);\r\n\t\t\t\tsetitemVisible(false);\r\n\t\t\t\t\r\n\t\t\t  }\r\n\t\t\t  else {\r\n\t\t\t\topenErrorNotification();\r\n\t\t\t  }\r\n\t};\r\n\r\n\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t    <div className='categoryListContainer'>\r\n            <div className='categoryListContainer__header'>\r\n           \r\n\r\n          <div className='categoryListContainer__header-searchBar'>\r\n          <h2 className='categoryListContainer__header-title'>\r\n            Components\r\n            </h2>\r\n\r\n\r\n          <Search\r\n            enterButton={false}\r\n            className='searchbarClassName'\r\n          placeholder=\"search components..\"\r\n          onSearch={value => handleSearch(value)}\r\n        />\r\n          </div>\r\n            <Button\r\n          // type=\"primary\"\r\n          className='btnPrimaryClassNameoutline'\r\n          icon={<PlusOutlined />}\r\n\t\t  onClick={() => setgroupVisible(true)}\r\n        >\r\n        Add New\r\n            \r\n            </Button>\r\n            </div>\r\n\r\n            <div className='categoryListContainer__afterHeader'>\r\n \r\n            </div>\r\n\r\n     \r\n\t\t\t\r\n\t\t\t<div className='categoryListContainer__categoryList'>\r\n     \r\n        {componentState.isLoading && <DataTableSkeleton />}\r\n\r\n        {componentState.done && !(componentList.length > 0) && (\r\n\t\t\t<div style={{\r\n\t\t\t\tmarginTop: '50px'\r\n\t\t\t}}>\r\n\t\t\t\t<Empty title='No Component found' />\r\n\t\t\t</div>\r\n\t\t)}\r\n\r\n\t\t{componentState.done && componentList.length > 0 && (\r\n\t\t\t\t\t<div className='componentsItemContainer'>\r\n\t\t\t\t\t{componentList.map(component => {\r\n\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t<div className='componentsItemContainer-item'>\r\n\t\t\t\t\t\t\t<Collapse\r\n\t\t\t\t\t\t\t\taccordion={false}\r\n\t\t\t\t\t\t\t\tbordered={false}\r\n\t\t\t\t\t\t\t\texpandIconPosition='left'\r\n\t\t\t\t\t\t\t\texpandIcon={({ isActive }) => <CaretRightOutlined rotate={isActive ? 90 : 0} />}\r\n\t\t\t\t\t\t\t\tclassName='site-collapse-custom-collapse'\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<Panel\r\n\t\t\t\t\t\t\t\t\theader={component.name}\r\n\t\t\t\t\t\t\t\t\tkey='1'\r\n\t\t\t\t\t\t\t\t\tclassName='site-collapse-custom-panel'\r\n\t\t\t\t\t\t\t\t\textra={genExtraForGroup(setitemVisible,handleDeleteComponent, component.id,setComponentId)}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t<div className=' componentsItemContainer-white'>\r\n\t\t\t\t\t\t\t\t\t\t{component.items && component.items.length > 0 && component.items.map(item => {\r\n\t\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div className='componentsItemContainer-item-item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Collapse\r\n\t\t\t\t\t\t\t\t\t\t\t\t\taccordion={false}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tbordered={false}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\texpandIconPosition='left'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\texpandIcon={({ isActive }) => (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<CaretRightOutlined rotate={isActive ? 90 : 0} />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='site-collapse-custom-collapse'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Panel\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\theader={item.title || ''}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tkey='1'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='site-collapse-custom-panel'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\textra={genExtra(updateComponentByDeleting,component,item.id)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<ComponentListComponentItem\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetComponentList={setComponentList}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tcomponentList={componentList}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\titem={item}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tcomponent={component}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tcomponentUpdate={componentUpdate}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Panel>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Collapse>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t\t})}\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t{!(component.items.length > 0 ) && <Empty title='No item Found'/>}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</Panel>\r\n\t\t\t\t\t\t\t</Collapse>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t})}\r\n\t\t\t\t</div>\r\n\t\t)}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\r\n\r\n\t\t<AddNewComponent \r\n          addNewCategoryVisible={groupVisible} \r\n          setAddNewCategoryVisible={setgroupVisible} \r\n          setComponentList={setComponentList}\r\n          componentList={componentList}\r\n          />\r\n\t\t  <AddNewComponentItem \r\n          addNewCategoryVisible={itemVisible} \r\n          setAddNewCategoryVisible={setitemVisible} \r\n          setComponentList={setComponentList}\r\n\t\t  componentList={componentList}\r\n\t\t  updateComponentByAddingItem={updateComponentByAddingItem}\r\n\t\t  componentId={componentId}\r\n          />\r\n\r\n\r\n\t\t  \r\n\r\n\t\t\t<Modal\r\n\t\t\t\ttitle=\"Add New Group Component\"\r\n\t\t\t\tvisible={false}\r\n\t\t\t\tonOk={handleOkGroup}\r\n\t\t\t\tonCancel={handleCancelGroup}\r\n\t\t\t\tfooter={null}\r\n\t\t\t\tokText='Done'\r\n\t\t\t>\r\n\t\t\t\t<InputField label='Group Component Name' />\r\n\t\t\r\n\t\t\t</Modal>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default Component;\r\n","import React, { useState } from 'react';\r\n\r\n// import third libraries\r\nimport { Upload, message, notification, Modal } from 'antd';\r\n// import { Formik } from 'formik';\r\n// import * as Yup from 'yup';\r\nimport reqwest from 'reqwest';\r\n\r\n\r\n\r\n// import hooks\r\nimport { useHandleFetch } from '../../hooks';\r\n\r\n\r\n// import configs\r\nimport config from \"../../config.json\";\r\n\r\n\r\nimport {\r\n    InboxOutlined,\r\n    CheckCircleOutlined,\r\n    LoadingOutlined,\r\n    PlusOutlined\r\n} from '@ant-design/icons';\r\n\r\n\r\n// import ReactQuill from 'react-quill';\r\n// import 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport MediaLibrary from \"../../components/MediaLibrary\";\r\n\r\n\r\nconst { Dragger } = Upload;\r\n\r\n\r\n// const validationSchema = Yup.object().shape({\r\n//     name: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n// });\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n    notification.error({\r\n        message: message || 'Brand Created',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Something Went Wrong',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst initialValues = {\r\n    name: '',\r\n    description: '',\r\n    image: [],\r\n    url: '',\r\n    cover: ''\r\n}\r\n\r\n\r\n\r\ninterface Props {\r\n    addNewCategoryVisible?: any;\r\n    setAddNewCategoryVisible?: any;\r\n    themeList?: any;\r\n    setThemeList?: any;\r\n\r\n}\r\n\r\nconst AddNewBrand = ({ addNewCategoryVisible, setAddNewCategoryVisible, themeList, setThemeList }: Props) => {\r\n\r\n    const [addThemeState, handleAddthemeFetch] = useHandleFetch({}, 'addTheme', 'form');\r\n    const [myImages, setmyImages] = useState(false);\r\n    const [visibleMedia, setvisibleMedia] = useState(false);\r\n    const [myThumbnailImage, setmyThumbnailImage] = useState([]);\r\n    const [isModalOpenForThumbnail, setisModalOpenForThumbnail] = useState(false);\r\n    const [selectedThemeTypeValue, setselectedThemeTypeValue] = useState('');\r\n    const [fileList, setfileList] = useState([]);\r\n    const [uploading, setuploading] = useState(false);\r\n    const [loadingThumnail, setLoadingThumbnail] = useState(false);\r\n    const [imageUrl, setImageUrl] = useState('');\r\n    const [name, setname] = useState('')\r\n    const [thumbnailFile, setThumbnailFile] = useState('')\r\n\r\n\r\n\r\n\r\n\r\n    const handleSubmit = async () => {\r\n        setuploading(true);\r\n\r\n        const formData = new FormData();\r\n        fileList.forEach(file => {\r\n            formData.append('folder', file, file.name);\r\n        });\r\n        formData.append(\"name\", name);\r\n        formData.append('thumbnail', thumbnailFile)\r\n\r\n\r\n        const addThemeRes = await handleAddthemeFetch({\r\n            body: formData,\r\n        });\r\n\r\n\r\n        setuploading(false);\r\n        // @ts-ignore\r\n        if (addThemeRes && addThemeRes.status === 'ok') {\r\n\r\n            setThemeList([...themeList, {\r\n                id: addThemeRes['_id'] || '',\r\n                key: addThemeRes['_id'] || '',\r\n                name: addThemeRes['name'] || '',\r\n                thumbnail: addThemeRes['thumbnail'] || '',\r\n                path: addThemeRes['path'] || '',\r\n                added: addThemeRes['added'] || '',\r\n                // @ts-ignore\r\n                ...addThemeRes\r\n            }]);\r\n\r\n            setfileList([]);\r\n            setuploading(false);\r\n            openSuccessNotification('Theme Uploaded!')\r\n            setAddNewCategoryVisible(false);\r\n            setname('');\r\n            setselectedThemeTypeValue('');\r\n\r\n\r\n\r\n\r\n            setAddNewCategoryVisible(false);\r\n        }\r\n        else {\r\n            openErrorNotification('Theme upload failed, Something went wrong');\r\n        }\r\n\r\n    };\r\n\r\n\r\n\r\n\r\n    const handleCancel = (e: any) => {\r\n        setAddNewCategoryVisible(false);\r\n    };\r\n\r\n\r\n    const getisSubmitButtonDisabled = () => {\r\n        if (addThemeState.isLoading) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n\r\n\r\n\r\n    const handleImagesDelete = (id) => {\r\n        // @ts-ignore\r\n        const newImages = myImages && myImages.filter(image => {\r\n            return image.id !== id;\r\n        })\r\n\r\n        setmyImages(newImages);\r\n    }\r\n\r\n\r\n\r\n    const handleThumbnailImageDelete = (id) => {\r\n        // @ts-ignore\r\n        const newImages = myThumbnailImage && myThumbnailImage.filter(image => {\r\n            return image.id !== id;\r\n        })\r\n\r\n        if (newImages.length > 0) {\r\n            setmyThumbnailImage(newImages);\r\n\r\n        }\r\n        // @ts-ignore\r\n        else setmyThumbnailImage([]);\r\n    }\r\n\r\n\r\n    const onChangeThemeType = (value) => {\r\n        setselectedThemeTypeValue(value);\r\n    }\r\n\r\n\r\n\r\n    const uploadProps = {\r\n        //  listType: 'picture',\r\n        onRemove: file => {\r\n            setfileList(filelist => {\r\n                const index = fileList.indexOf(file);\r\n                const newFileList = fileList.slice();\r\n                newFileList.splice(index, 1);\r\n                return newFileList;\r\n            })\r\n\r\n        },\r\n        beforeUpload: file => {\r\n            setfileList(filelist => {\r\n                return [...fileList, file]\r\n            })\r\n            return false;\r\n        },\r\n        fileList,\r\n    };\r\n\r\n    const handleUpload = async () => {\r\n        const formData = new FormData();\r\n        fileList.forEach(file => {\r\n            formData.append('folder', file, file.name);\r\n        });\r\n        formData.append(\"name\", name);\r\n        formData.append('thumbnail', imageUrl)\r\n\r\n        setuploading(true);\r\n\r\n        //  const addImageToLibraryRes = awAddait handleMediaLibraryFetch({\r\n        // \tbody: formData\r\n        //   });\r\n\r\n        //   console.log('addImageToLibraryRes',addImageToLibraryRes)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n        // You can use any AJAX library you like\r\n        reqwest({\r\n            url: `${config.baseURL}/admin/theme/add`,\r\n            method: 'post',\r\n            processData: false,\r\n            data: formData,\r\n            withCredentials: true,\r\n            success: () => {\r\n                setfileList([]);\r\n                setuploading(false);\r\n                openSuccessNotification('Theme Uploaded!')\r\n                setAddNewCategoryVisible(false);\r\n                setname('');\r\n                setselectedThemeTypeValue('');\r\n                setThemeList([...themeList, {\r\n\r\n                }])\r\n                // setThemeList([...themeList, {\r\n                //     id: addCategoryRes['id'] || '',\r\n                //     key: addCategoryRes['id'] || '',\r\n                //     name: addCategoryRes['name'] || '',\r\n                //     description: addCategoryRes['description'] || '',\r\n                //     // @ts-ignore\r\n                //     ...addCategoryRes\r\n                // }])\r\n            },\r\n            error: () => {\r\n                setuploading(false);\r\n                openErrorNotification('Theme Upload failed!')\r\n                message.error('upload failed.');\r\n            },\r\n        });\r\n    };\r\n\r\n\r\n    function getBase64(img, callback) {\r\n        const reader = new FileReader();\r\n        reader.addEventListener('load', () => callback(reader.result));\r\n        reader.readAsDataURL(img);\r\n    }\r\n\r\n    function beforeUpload(file) {\r\n        const isJpgOrPng = file.type === 'image/jpeg' || file.type === 'image/png';\r\n        if (!isJpgOrPng) {\r\n            message.error('You can only upload JPG/PNG file!');\r\n        }\r\n        const isLt2M = file.size / 1024 / 1024 < 2;\r\n        if (!isLt2M) {\r\n            message.error('Image must smaller than 2MB!');\r\n        }\r\n\r\n\r\n        getBase64(file, imageUrl => {\r\n            setImageUrl(imageUrl)\r\n            setThumbnailFile(file);\r\n            setLoadingThumbnail(false)\r\n        })\r\n\r\n        return false;\r\n    }\r\n\r\n\r\n\r\n    const uploadButton = (\r\n        <div>\r\n            {loadingThumnail ? <LoadingOutlined /> : <PlusOutlined />}\r\n            <div className=\"ant-upload-text\">Upload</div>\r\n        </div>\r\n    );\r\n\r\n    return (\r\n        <>\r\n            <Modal\r\n                style={{\r\n                    top: '40px'\r\n                }}\r\n                title=\"Add New Theme\"\r\n                visible={addNewCategoryVisible}\r\n                onOk={handleSubmit}\r\n                onCancel={handleCancel}\r\n                okText='Upload Theme'\r\n                okButtonProps={{\r\n                    loading: uploading,\r\n                    htmlType: \"submit\",\r\n                    disabled: getisSubmitButtonDisabled()\r\n                }}\r\n\r\n                bodyStyle={{\r\n                    margin: '0',\r\n                    padding: '10px'\r\n                }}\r\n            >\r\n\r\n                <Input\r\n                    label='Name'\r\n                    value={name}\r\n                    name='name'\r\n                    onChange={(e: any) => setname(e.target.value)}\r\n                    isError={addThemeState.error['error']['name']}\r\n\r\n                    errorString={addThemeState.error['error']['name']}\r\n                />\r\n\r\n                <div style={{\r\n                    marginTop: '20px'\r\n                }}></div>\r\n\r\n\r\n                <h3 className='inputFieldLabel'>Thumbnail</h3>\r\n                <Upload\r\n                    name=\"avatar\"\r\n                    listType=\"picture-card\"\r\n                    className=\"avatar-uploader\"\r\n                    showUploadList={false}\r\n                    beforeUpload={beforeUpload}\r\n                    multiple={false}\r\n                >\r\n                    {imageUrl ? <img src={imageUrl} alt=\"avatar\" style={{ width: '100%' }} /> : uploadButton}\r\n                </Upload>\r\n\r\n\r\n\r\n                <div style={{\r\n                    marginTop: '3px'\r\n                }}></div>\r\n                <h3 className='inputFieldLabel'>\r\n                    Theme Folder (.zip)\r\n\t\t\t\t\t\t\t\t\t</h3>\r\n\r\n\r\n                <Dragger\r\n                    multiple={false}\r\n                    className='upload-list-inline'\r\n                    listType='picture'\r\n                    style={{\r\n                        background: '#fff'\r\n                    }}\r\n                    {...uploadProps}\r\n                >\r\n                    <p className='ant-upload-drag-icon'>\r\n                        <InboxOutlined />\r\n                    </p>\r\n                    <p className='ant-upload-text'>Click or drag file to this area to upload</p>\r\n                    <p className='ant-upload-hint'>\r\n                        Support for a single or bulk upload. Strictly prohibit from uploading company data or\r\n                        other band files\r\n\t\t\t\t\t\t\t</p>\r\n                </Dragger>\r\n\r\n                {addThemeState.error['error']['folder'] && (\r\n                    <p style={{\r\n                        color: 'rgba(255, 0, 0, 0.507)'\r\n                    }}>{addThemeState.error['error']['folder']}</p>\r\n                )}\r\n\r\n\r\n\r\n\r\n\r\n            </Modal>\r\n\r\n            <MediaLibrary\r\n                setvisible={setvisibleMedia}\r\n                visible={visibleMedia}\r\n                setmyImages={setmyImages}\r\n                isModalOpenForImages={false}\r\n                setmyThumbnailImage={setmyThumbnailImage}\r\n                isModalOpenForThumbnail={isModalOpenForThumbnail}\r\n                myThumbnailImage={myThumbnailImage}\r\n            />\r\n        </>\r\n    );\r\n};\r\n\r\nexport default AddNewBrand;\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React, {useState, useEffect} from 'react';\r\nimport {withRouter} from 'react-router-dom';\r\nimport { Button, Input,Tooltip, Modal, notification, Popconfirm,Badge} from 'antd';\r\nimport { \r\n  PlusOutlined, EditOutlined, \r\n  DeleteOutlined,EditFilled,\r\n  CheckOutlined,\r\n  CheckCircleOutlined,\r\n  CheckCircleTwoTone } from '@ant-design/icons';\r\n\r\n\r\n/// import hooks\r\nimport { useFetch, useHandleFetch } from \"../../hooks\";\r\n\r\n// import components\r\nimport { DataTableSkeleton } from \"../../components/Placeholders\";\r\nimport AddNewTheme from \"./AddNewTheme\";\r\n\r\nimport Empty from \"../../components/Empty\";\r\n\r\nconst { Search } = Input;\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t  message: message || 'Tag Created',\r\n\t  description: '',\r\n\t  icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n  };\r\n\r\n\r\n  const openErrorNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t  message: message || 'Something Went Wrong',\r\n\t  description: '',\r\n\t  icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n  };\r\n\r\n\r\n\r\ninterface Props {\r\n    history: any; \r\n}\r\n\r\nconst CustomerList = ({history}: Props) => {\r\n\r\n    const [themeList,setThemeList] = useState([]); \r\n\r\n    const [themeState, handleThemeListFetch] = useHandleFetch({}, 'themeList');\r\n    const [activeThemeState, handleActiveThemeFetch] = useHandleFetch({}, 'activeTheme');\r\n    const [updateDeleteThemeState, handleDeleteThemeFetch] = useHandleFetch({}, 'deletetheme');\r\n  \r\n\r\n    \r\n    useEffect(()=>{\r\n     const setThemes = async () => {\r\n       const themes = await handleThemeListFetch({}); \r\n       // @ts-ignore\r\n       setThemeList(themes); \r\n     }\r\n     setThemes(); \r\n    },[])\r\n\r\n\r\n\r\n\r\n  \r\n  const [addNewCategoryVisible,setAddNewCategoryVisible] = useState(false);   \r\n\r\n\r\n\r\n  const handleSearch = (value) => {\r\n    if(themeState.data.length > 0 ){\r\n      const newThemeList = themeState.data.filter(item => item.name.includes(value)); \r\n      setThemeList(newThemeList); \r\n    }\r\n     \r\n  }\r\n\r\n\r\n\r\n\r\n  const handleActiveTheme = async (id) => {\r\n    const activeThemeRes = await handleActiveThemeFetch({\r\n      urlOptions: {\r\n        placeHolders: {\r\n          id,\r\n        }\r\n        }\r\n      });\r\n\r\n        // @ts-ignore\r\n  if(activeThemeRes && activeThemeRes.status === 'ok'){\r\n    openSuccessNotification('Theme activated'); \r\n   \r\n  }\r\n  else {\r\n    openErrorNotification(\"Couldn't activate the theme, Something went wrong\")\r\n  }\r\n     \r\n     \r\n  }\r\n\r\n\r\n  const handleDeleteTheme = async (id) => {\r\n    const deleteThemeRes = await handleDeleteThemeFetch({\r\n      urlOptions: {\r\n        placeHolders: {\r\n          id,\r\n        }\r\n        }\r\n      });\r\n\r\n        // @ts-ignore\r\n  if(deleteThemeRes && deleteThemeRes.status === 'ok'){\r\n    openSuccessNotification('Theme Deleted'); \r\n    const newThemeList =  themeList.filter(item => item.id !== id);\r\n    setThemeList(newThemeList); \r\n  }\r\n  else {\r\n  openErrorNotification(\"Couldn't delete, Something went wrong\")\r\n  }\r\n  }\r\n\r\n\r\n\r\n\r\n\treturn (\r\n\t\t<>\r\n    {/* <h2 className='containerPageTitle'>\r\n      Categories\r\n    </h2> */}\r\n    <div className='categoryListContainer'>\r\n            <div className='categoryListContainer__header'>\r\n           \r\n\r\n          <div className='categoryListContainer__header-searchBar'>\r\n          <h2 className='categoryListContainer__header-title'>\r\n\t\t Themes\r\n \r\n            </h2>\r\n\r\n\r\n          <Search\r\n            enterButton={false}\r\n            className='searchbarClassName'\r\n          placeholder=\"search themes..\"\r\n          onSearch={value => handleSearch(value)}\r\n          // style={{ width: 300 }}\r\n        />\r\n          </div>\r\n            <Button\r\n          // type=\"primary\"\r\n          className='btnPrimaryClassNameoutline'\r\n          icon={<PlusOutlined />}\r\n          onClick={() => setAddNewCategoryVisible(true)}\r\n        >\r\n        Add New\r\n            \r\n            </Button>\r\n            </div>\r\n\r\n            <div className='categoryListContainer__afterHeader'>\r\n\r\n            </div>\r\n\r\n     \r\n\t\t\t\r\n\t\t\t<div className='categoryListContainer__categoryList'>\r\n        {themeState.done && themeList.length > 0 && (\r\n   \r\n   <div className='categoryListContainer__bodyContainerList'>\r\n\t\t\r\n          {themeList.map(theme => {\r\n            return (\r\n              <div className='categoryListContainer__bodyContainerList-item'>\r\n              {/* <Badge count={<CheckCircleTwoTone style={{ color: '#3FA3FF' }} />}>\r\n               \r\n                  </Badge> */}\r\n                  <div className='categoryListContainer__bodyContainerList-item-top'>\r\n                  <img\r\n                    alt='theme img'\r\n                    src={theme.thumbnail}\r\n                  />\r\n                </div>\r\n                <div className='categoryListContainer__bodyContainerList-item-body'>\r\n                  <h3> {theme.name} </h3>\r\n     \r\n                  <div\r\n                    style={{\r\n                      display: 'flex',\r\n                      justifyContent: 'space-between'\r\n                    }}\r\n                  >\r\n                    <Tooltip placement='top' title='Active this theme'>\r\n                    <Button\r\n                  \r\n                   size='small'\r\n                   className='btnPrimaryClassNameoutline'\r\n                   icon={<CheckOutlined />}\r\n                   onClick={() => handleActiveTheme(theme.id)}\r\n                  >\r\n                    <span style={{\r\n                      fontSize:'11px'\r\n                    }}>\r\n                    Set Active\r\n                 \r\n                    </span>\r\n                \r\n                 </Button>\r\n     \r\n     \r\n                      \r\n                    </Tooltip>\r\n     \r\n                    <Tooltip placement='top' title='Delete theme'>\r\n                    <Popconfirm \r\n               \r\n               onConfirm={() => handleDeleteTheme(theme.id)}\r\n               title=\"Are you sure？\" okText=\"Yes\" cancelText=\"No\">\r\n           \r\n           <Button\r\n                        size='small'\r\n                        type='link'\r\n                        danger={true}\r\n                        icon={<DeleteOutlined />}\r\n                      >\r\n                        \r\n                        </Button>\r\n           </Popconfirm>\r\n\r\n\r\n                     \r\n     \r\n                        \r\n                        </Tooltip>\r\n                      </div>\r\n                    </div>\r\n                </div>\r\n            )\r\n          })}\r\n         </div>\r\n\t\t)}\r\n\r\n\r\n        {themeState.isLoading && <DataTableSkeleton />}\r\n\r\n        {themeState.done && !(themeList.length > 0) && (\r\n        <Empty title='No Theme found'  />\r\n        )}\r\n        \r\n\r\n\t\t\t</div>\r\n\t\t</div>\r\n\r\n\r\n    {themeState.done && \r\n    <AddNewTheme \r\n          addNewCategoryVisible={addNewCategoryVisible} \r\n          setAddNewCategoryVisible={setAddNewCategoryVisible}\r\n          themeList={themeState.data}\r\n          setThemeList={setThemeList}\r\n           />}\r\n    </>\r\n\t);\r\n};\r\n\r\nexport default withRouter(CustomerList);\r\n","import React from 'react'\r\n\r\ninterface Props {\r\n    \r\n}\r\n\r\nconst Image = (props: Props) => {\r\n    return (\r\n        <div>\r\n            Image\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Image\r\n","import React from 'react';\r\n\r\ninterface Props {}\r\n\r\nconst Invoice = (props: Props) => {\r\n\treturn <div>Invoice</div>;\r\n};\r\n\r\nexport default Invoice;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n\r\nimport { useHandleFetch } from '../../hooks';\r\n// import third party ui lib\r\nimport { notification, Button } from 'antd';\r\n\r\nimport {\r\n    CheckCircleOutlined\r\n} from '@ant-design/icons';\r\n\r\n\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport MediaLibrary from \"../../components/MediaLibrary\";\r\n\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    title: Yup.string()\r\n        .label('Title')\r\n        .required('Site title can not be empty'),\r\n    adminEmail: Yup.string()\r\n        .label('Admin Email')\r\n        .required('Admin Email can not be empty'),\r\n\r\n});\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Site Info Updated',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Something Went Wrong',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst initialValues = {\r\n    title: '',\r\n    adminName: '',\r\n    adminEmail: '',\r\n}\r\n\r\n\r\n\r\ninterface Props {\r\n\r\n\r\n}\r\n\r\nconst UpdateSiteinfo = ({ }: Props) => {\r\n\r\n    const [UpdateSiteSettingsState, handleUpdateSiteSettingsFetch] = useHandleFetch({}, 'updateSiteSettings');\r\n    const [siteSettingsState, handlSiteSettingsFetch] = useHandleFetch({}, 'siteSettings');\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        const getSiteSettings = async () => {\r\n            const siteSettingsRes = await handlSiteSettingsFetch({});\r\n\r\n            // console.log('siteSettingsRes', siteSettingsRes)\r\n        }\r\n        getSiteSettings();\r\n    }, [UpdateSiteSettingsState])\r\n\r\n\r\n    // console.log('siteSettingsState', siteSettingsState);\r\n\r\n    const handleSubmit = async (values: any, actions: any) => {\r\n\r\n\r\n        const addSiteInfoRes = await handleUpdateSiteSettingsFetch({\r\n\r\n            body: {\r\n                title: values.title,\r\n                adminName: values.adminName,\r\n                adminEmail: values.adminEmail,\r\n            },\r\n        });\r\n\r\n        // @ts-ignore\r\n        if (addSiteInfoRes && addSiteInfoRes.status === 'ok') {\r\n            openSuccessNotification();\r\n\r\n\r\n            // setBrandList([...brandList, {\r\n            //     id: addBrandRes['id'] || '',\r\n            //     key: addBrandRes['id'] || '',\r\n            //     name: addBrandRes['name'] || '',\r\n            //     description: addBrandRes['description'] || '',\r\n            //     // @ts-ignore\r\n            //     ...addBrandRes\r\n            // }]);\r\n\r\n            actions.resetForm();\r\n        }\r\n        else {\r\n            openErrorNotification();\r\n        }\r\n\r\n\r\n\r\n\r\n        actions.setSubmitting(false);\r\n\r\n    };\r\n\r\n\r\n\r\n\r\n\r\n    const getisSubmitButtonDisabled = (values, isValid) => {\r\n        if (!values.title || !values.adminEmail || !isValid) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    const getInitialValues = () => {\r\n        if (siteSettingsState.data && Object.keys(siteSettingsState.data).length > 0) {\r\n            return { ...siteSettingsState.data }\r\n        }\r\n        else {\r\n            return initialValues\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n    return (\r\n        <Formik\r\n            onSubmit={(values, actions) => handleSubmit(values, actions)}\r\n            enableReinitialize={true}\r\n            initialValues={\r\n                getInitialValues()\r\n            }\r\n        >\r\n            {({\r\n                handleChange,\r\n                values,\r\n                handleSubmit,\r\n                errors,\r\n                isValid,\r\n                isSubmitting,\r\n                touched,\r\n                handleBlur,\r\n                setFieldTouched,\r\n                handleReset,\r\n            }) => (\r\n                    <>\r\n                        <div className='siteInfoContainer__item'>\r\n                            <div className='siteInfoContainer__item-item'>\r\n                                <Input\r\n                                    label='Site Title'\r\n                                    value={values.title}\r\n                                    name='title'\r\n                                    isError={(touched.title && errors.title) ||\r\n                                        (!isSubmitting && UpdateSiteSettingsState.error['error']['title'])}\r\n\r\n                                    errorString={(touched.title && errors.title) ||\r\n                                        (!isSubmitting && UpdateSiteSettingsState.error['error']['title'])}\r\n                                    onChange={(e: any) => {\r\n                                        handleChange(e);\r\n                                        setFieldTouched('title');\r\n                                    }}\r\n                                />\r\n                            </div>\r\n                            <div className='siteInfoContainer__item-item'>\r\n                                <Input\r\n                                    label='Admin Name'\r\n                                    value={values.adminName}\r\n                                    name='adminName'\r\n                                    isError={(touched.adminName && errors.adminName) ||\r\n                                        (!isSubmitting && UpdateSiteSettingsState.error['error']['adminName'])}\r\n\r\n                                    errorString={(touched.adminName && errors.adminName) ||\r\n                                        (!isSubmitting && UpdateSiteSettingsState.error['error']['adminName'])}\r\n                                    onChange={(e: any) => {\r\n                                        handleChange(e);\r\n                                        setFieldTouched('adminName');\r\n                                    }}\r\n                                />\r\n                            </div>\r\n                            <div className='siteInfoContainer__item-item-left'>\r\n                                <Input\r\n                                    label='Admin Email'\r\n                                    value={values.adminEmail}\r\n                                    name='adminEmail'\r\n                                    isError={(touched.adminEmail && errors.adminEmail) ||\r\n                                        (!isSubmitting && UpdateSiteSettingsState.error['error']['adminEmail'])}\r\n\r\n                                    errorString={(touched.adminEmail && errors.adminEmail) ||\r\n                                        (!isSubmitting && UpdateSiteSettingsState.error['error']['adminEmail'])}\r\n                                    onChange={(e: any) => {\r\n                                        handleChange(e);\r\n                                        setFieldTouched('adminEmail');\r\n                                    }}\r\n                                />\r\n\r\n                            </div>\r\n\r\n                        </div>\r\n\r\n\r\n                        <div style={{\r\n                            marginTop: '10px'\r\n                        }}></div>\r\n\r\n                        <Button\r\n\r\n                            onClick={(e: any) => handleSubmit(e)}\r\n                            loading={isSubmitting}\r\n                            disabled={getisSubmitButtonDisabled(values, isValid)}\r\n                            className='btnPrimaryClassNameoutline'\r\n                        >\r\n                            Update Admin Info\r\n                            </Button>\r\n\r\n                        <div style={{\r\n                            marginBottom: '10px'\r\n                        }}></div>\r\n\r\n                    </>\r\n                )}\r\n        </Formik >\r\n\r\n\r\n\r\n\r\n    );\r\n};\r\n\r\nexport default UpdateSiteinfo;\r\n//","import React, { useEffect } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n\r\nimport { useHandleFetch } from '../../hooks';\r\n// import third party ui lib\r\nimport { notification, Button } from 'antd';\r\n\r\nimport {\r\n    CheckCircleOutlined\r\n} from '@ant-design/icons';\r\n\r\n\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\n// import MediaLibrary from \"../../components/MediaLibrary\";\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    invoiceTitle: Yup.string().label('Title').required('Invoice title is required')\r\n});\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Site Info Updated',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Something Went Wrong',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst initialValues = {\r\n    invoiceTitle: \"\",\r\n    address: \"\",\r\n    phone: \"\",\r\n    email: \"\",\r\n    additionalText: \"\"\r\n};\r\n\r\n\r\n\r\n\r\ninterface Props {\r\n\r\n\r\n}\r\n\r\nconst UpdateSiteinfo = ({ }: Props) => {\r\n\r\n    const [updateInfovSettingsState, handleUpdateInvoiceSettingsFetch] = useHandleFetch({}, 'updateInvoiceSettings');\r\n    const [InvoiceSettingsState, handlSiteInvoiceSettingsFetch] = useHandleFetch({}, 'invoiceSettingsDetail');\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        const getSiteSettings = async () => {\r\n            const siteSettingsRes = await handlSiteInvoiceSettingsFetch({});\r\n\r\n            // console.log('siteSettingsRes', siteSettingsRes)\r\n        }\r\n        getSiteSettings();\r\n    }, [updateInfovSettingsState])\r\n\r\n\r\n\r\n    const handleSubmit = async (values: any, actions: any) => {\r\n\r\n        const updateInvoiceRes = await handleUpdateInvoiceSettingsFetch({\r\n\r\n            body: {\r\n                invoiceTitle: values.invoiceTitle,\r\n                address: values.address,\r\n                phone: values.phone,\r\n                email: values.email,\r\n                additionalText: values.additionalText\r\n\r\n            },\r\n        });\r\n\r\n        // @ts-ignore\r\n        if (updateInvoiceRes && updateInvoiceRes.status === 'ok') {\r\n            openSuccessNotification();\r\n\r\n\r\n            // setBrandList([...brandList, {\r\n            //     id: addBrandRes['id'] || '',\r\n            //     key: addBrandRes['id'] || '',\r\n            //     name: addBrandRes['name'] || '',\r\n            //     description: addBrandRes['description'] || '',\r\n            //     // @ts-ignore\r\n            //     ...addBrandRes\r\n            // }]);\r\n\r\n            actions.resetForm();\r\n        }\r\n        else {\r\n            openErrorNotification();\r\n        }\r\n\r\n\r\n        actions.setSubmitting(false);\r\n\r\n    };\r\n\r\n\r\n\r\n\r\n\r\n    const getisSubmitButtonDisabled = (values, isValid) => {\r\n        if (!values.invoiceTitle || !isValid) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n\r\n\r\n    const getInitialValues = () => {\r\n        if (InvoiceSettingsState.data && Object.keys(InvoiceSettingsState.data).length > 0) {\r\n            return { ...InvoiceSettingsState.data }\r\n        }\r\n        else {\r\n            return initialValues\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <Formik\r\n            onSubmit={(values, actions) => handleSubmit(values, actions)}\r\n            validationSchema={validationSchema}\r\n            enableReinitialize={true}\r\n            initialValues={\r\n                getInitialValues()\r\n            }\r\n        >\r\n            {({\r\n                handleChange,\r\n                values,\r\n                handleSubmit,\r\n                errors,\r\n                isValid,\r\n                isSubmitting,\r\n                touched,\r\n                handleBlur,\r\n                setFieldTouched,\r\n                handleReset,\r\n            }) => (\r\n                    <>\r\n                        <div className='siteInfoContainer__item'>\r\n                            <div className='siteInfoContainer__item-item'>\r\n                                <Input\r\n                                    label='Company Name'\r\n                                    value={values.invoiceTitle}\r\n                                    name='invoiceTitle'\r\n                                    isError={(touched.invoiceTitle && errors.invoiceTitle) ||\r\n                                        (!isSubmitting && updateInfovSettingsState.error['error']['invoiceTitle'])}\r\n\r\n                                    errorString={(touched.invoiceTitle && errors.invoiceTitle) ||\r\n                                        (!isSubmitting && updateInfovSettingsState.error['error']['invoiceTitle'])}\r\n                                    onChange={(e: any) => {\r\n                                        handleChange(e);\r\n                                        setFieldTouched('invoiceTitle');\r\n                                    }}\r\n                                />\r\n                            </div>\r\n                            <div className='siteInfoContainer__item-item'>\r\n                                <Input\r\n                                    label='Phone Number'\r\n                                    value={values.phone}\r\n                                    name='phone'\r\n                                    isError={(touched.phone && errors.phone) ||\r\n                                        (!isSubmitting && updateInfovSettingsState.error['error']['phone'])}\r\n\r\n                                    errorString={(touched.phone && errors.phone) ||\r\n                                        (!isSubmitting && updateInfovSettingsState.error['error']['phone'])}\r\n                                    onChange={(e: any) => {\r\n                                        handleChange(e);\r\n                                        setFieldTouched('phone');\r\n                                    }}\r\n                                />\r\n                            </div>\r\n                            <div className='siteInfoContainer__item-item'>\r\n                                <Input\r\n                                    label='Email'\r\n                                    value={values.email}\r\n                                    name='email'\r\n                                    isError={(touched.email && errors.email) ||\r\n                                        (!isSubmitting && updateInfovSettingsState.error['error']['email'])}\r\n\r\n                                    errorString={(touched.email && errors.email) ||\r\n                                        (!isSubmitting && updateInfovSettingsState.error['error']['email'])}\r\n                                    onChange={(e: any) => {\r\n                                        handleChange(e);\r\n                                        setFieldTouched('email');\r\n                                    }}\r\n                                />\r\n\r\n                            </div>\r\n\r\n                            <div className='siteInfoContainer__item-item'>\r\n                                <Input\r\n                                    label='Additional Text'\r\n                                    value={values.additionalText}\r\n                                    name='additionalText'\r\n                                    isError={(touched.additionalText && errors.additionalText) ||\r\n                                        (!isSubmitting && updateInfovSettingsState.error['error']['additionalText'])}\r\n\r\n                                    errorString={(touched.additionalText && errors.additionalText) ||\r\n                                        (!isSubmitting && updateInfovSettingsState.error['error']['additionalText'])}\r\n                                    onChange={(e: any) => {\r\n                                        handleChange(e);\r\n                                        setFieldTouched('additionalText');\r\n                                    }}\r\n                                />\r\n\r\n                            </div>\r\n\r\n                            <div className='siteInfoContainer__item-item-left'>\r\n                                <TextArea\r\n                                    label='Address'\r\n                                    value={values.address}\r\n                                    name='address'\r\n                                    isError={(touched.address && errors.address) ||\r\n                                        (!isSubmitting && updateInfovSettingsState.error['error']['address'])}\r\n\r\n                                    errorString={(touched.address && errors.address) ||\r\n                                        (!isSubmitting && updateInfovSettingsState.error['error']['address'])}\r\n                                    onChange={(e: any) => {\r\n                                        handleChange(e);\r\n                                        setFieldTouched('address');\r\n                                    }}\r\n                                />\r\n\r\n                            </div>\r\n\r\n                        </div>\r\n\r\n\r\n                        <div style={{\r\n                            marginTop: '10px'\r\n                        }}></div>\r\n\r\n                        <Button\r\n\r\n                            onClick={(e: any) => handleSubmit(e)}\r\n                            loading={isSubmitting}\r\n                            disabled={getisSubmitButtonDisabled(values, isValid)}\r\n                            className='btnPrimaryClassNameoutline'\r\n                        >\r\n                            Update Admin Info\r\n                            </Button>\r\n\r\n                        <div style={{\r\n                            marginBottom: '10px'\r\n                        }}></div>\r\n                    </>\r\n                )}\r\n        </Formik>\r\n\r\n\r\n\r\n\r\n    );\r\n};\r\n\r\nexport default UpdateSiteinfo;\r\n","import React, { useState } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n\r\nimport { useHandleFetch } from '../../hooks';\r\n// import third party ui lib\r\nimport { Upload, message, Switch, Select, Button, notification, Modal, Tabs, Tooltip } from 'antd';\r\n\r\n\r\nimport {\r\n\tFileOutlined,\r\n\tInboxOutlined,\r\n\tFileAddOutlined,\r\n\tDeleteOutlined,\r\n\tCheckCircleOutlined,\r\n\tPlusOutlined,\r\n\tFileImageFilled,\r\n\tCheckOutlined,\r\n\tCloseOutlined\r\n} from '@ant-design/icons';\r\n\r\n\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport MediaLibrary from \"../../components/MediaLibrary\";\r\nimport AdminSiteInfo from \"./AdminSiteInfo\";\r\nimport SiteInfoInvoice from \"./SiteInfoInvoice\";\r\n\r\nconst validationSchema = Yup.object().shape({\r\n\tname: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\nconst { TabPane } = Tabs;\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t\tmessage: message || 'Brand Created',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t\tmessage: message || 'Something Went Wrong',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n};\r\n\r\n\r\nconst initialValues = {\r\n\tname: '',\r\n\tdescription: '',\r\n\timage: [],\r\n\turl: '',\r\n\tcover: ''\r\n}\r\n\r\n\r\n\r\ninterface Props {\r\n\taddNewCategoryVisible?: any;\r\n\tsetAddNewCategoryVisible?: any;\r\n\tbrandList?: any;\r\n\tsetBrandList?: any;\r\n\r\n}\r\n\r\nconst AddNewBrand = ({ addNewCategoryVisible, setAddNewCategoryVisible, brandList, setBrandList }: Props) => {\r\n\r\n\tconst [updateSiteLogoAndIcon, handleUpdateSiteLogoAndIconFetch] = useHandleFetch({}, 'updateSiteLogoAndIcon');\r\n\tconst [myImages, setmyImages] = useState(false);\r\n\tconst [visibleMedia, setvisibleMedia] = useState(false);\r\n\tconst [coverImageId, setCoverImageId] = useState('');\r\n\r\n\r\n\r\n\tconst handleSubmit = async () => {\r\n\r\n\r\n\t\tconst updateSiteIconAndLogoRes = await handleUpdateSiteLogoAndIconFetch({\r\n\r\n\t\t\tbody: {\r\n\t\t\t\tlogo: myImages ? myImages[0] && myImages[0].id : '',\r\n\t\t\t},\r\n\t\t});\r\n\r\n\t\t// @ts-ignore\r\n\t\tif (updateSiteIconAndLogoRes && updateSiteIconAndLogoRes.status === 'ok') {\r\n\t\t\topenSuccessNotification('Updated Site Logo');\r\n\t\t}\r\n\t\telse {\r\n\t\t\topenErrorNotification(\"Couldn't updated site logo, Something went wrong\");\r\n\t\t}\r\n\r\n\t};\r\n\r\n\r\n\tconst handleImagesDelete = (id) => {\r\n\t\t// @ts-ignore\r\n\t\tconst newImages = myImages && myImages.filter(image => {\r\n\t\t\treturn image.id !== id;\r\n\t\t})\r\n\r\n\t\tsetmyImages(newImages);\r\n\t}\r\n\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<div className='siteInfoContainer'>\r\n\r\n\t\t\t\t<Tabs defaultActiveKey=\"1\" >\r\n\t\t\t\t\t<TabPane tab=\"Site Info\" key=\"1\">\r\n\t\t\t\t\t\t<AdminSiteInfo />\r\n\t\t\t\t\t</TabPane>\r\n\t\t\t\t\t<TabPane tab=\"Site logo\" key=\"2\">\r\n\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\tdisplay: 'flex',\r\n\t\t\t\t\t\t\talignItems: 'center'\r\n\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\tmarginRight: '20px'\r\n\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>Logo</h3>\r\n\t\t\t\t\t\t\t\t<div className='aboutToUploadImagesContainer'>\r\n\t\t\t\t\t\t\t\t\t{myImages &&\r\n\t\t\t\t\t\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\t\t\t\t\t\tmyImages.length > 0 && myImages.map((image, index) => {\r\n\t\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div className='aboutToUploadImagesContainer__item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='aboutToUploadImagesContainer__item-imgContainer'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => setCoverImageId(image.id)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<img src={image.cover} alt={image.alt} />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<span\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => handleImagesDelete(image.id)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='aboutToUploadImagesContainer__item-remove'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<CloseOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t\t})}\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t{myImages ? !myImages[0] && (\r\n\t\t\t\t\t\t\t\t\t\t<Tooltip\r\n\t\t\t\t\t\t\t\t\t\t\ttitle={'Attach images'}>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetvisibleMedia(true);\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\tclassName='aboutToUploadImagesContainer__uploadItem'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t{/* <FileAddOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<FileImageTwoTone />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<FileImageOutlined /> */}\r\n\t\t\t\t\t\t\t\t\t\t\t\t<FileImageFilled />\r\n\t\t\t\t\t\t\t\t\t\t\t\t{/* <h5>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t Select From Library\r\n\t\t\t\t\t\t\t\t\t\t\t\t<     /h5> */}\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span className='aboutToUploadImagesContainer__uploadItem-plus'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<PlusOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t\t\t\t) : <Tooltip\r\n\t\t\t\t\t\t\t\t\t\ttitle={'Attach images'}>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetvisibleMedia(true);\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\tclassName='aboutToUploadImagesContainer__uploadItem'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t{/* <FileAddOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t<FileImageTwoTone />\r\n\t\t\t\t\t\t\t\t\t\t\t\t<FileImageOutlined /> */}\r\n\t\t\t\t\t\t\t\t\t\t\t\t<FileImageFilled />\r\n\t\t\t\t\t\t\t\t\t\t\t\t{/* <h5>\r\n\t\t\t\t\t\t\t\t\t\t\t\t Select From Library\r\n\t\t\t\t\t\t\t\t\t\t<     /h5> */}\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span className='aboutToUploadImagesContainer__uploadItem-plus'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<PlusOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</Tooltip>}\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t{/* \r\n\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'> Icon</h3>\r\n\r\n\r\n\t\t\t\t\t\t\t\t<div className='aboutToUploadImagesContainer'>\r\n\t\t\t\t\t\t\t\t\t{myImages &&\r\n\t\t\t\t\t\t\t\t\t\tmyImages.length > 0 && myImages.map((image, index) => {\r\n\t\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div className='aboutToUploadImagesContainer__item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='aboutToUploadImagesContainer__item-imgContainer'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => setCoverImageId(image.id)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<img src={image.cover} alt={image.alt} />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<span\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => handleImagesDelete(image.id)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='aboutToUploadImagesContainer__item-remove'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<CloseOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t\t})}\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t{myImages ? !myImages[0] && (\r\n\t\t\t\t\t\t\t\t\t\t<Tooltip\r\n\t\t\t\t\t\t\t\t\t\t\ttitle={'Attach images'}>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetvisibleMedia(true);\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\tclassName='aboutToUploadImagesContainer__uploadItem'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t<FileImageFilled />\r\n\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span className='aboutToUploadImagesContainer__uploadItem-plus'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<PlusOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t\t\t\t) : <Tooltip\r\n\t\t\t\t\t\t\t\t\t\ttitle={'Attach images'}>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetvisibleMedia(true);\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\tclassName='aboutToUploadImagesContainer__uploadItem'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t<FileImageFilled />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span className='aboutToUploadImagesContainer__uploadItem-plus'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<PlusOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</Tooltip>}\r\n\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t</div> */}\r\n\r\n\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t<Button\r\n\r\n\t\t\t\t\t\t\tloading={updateSiteLogoAndIcon.isLoading}\r\n\t\t\t\t\t\t\tonClick={() => handleSubmit()}\r\n\t\t\t\t\t\t\tclassName='btnPrimaryClassNameoutline'\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\tUpdate site Logo\r\n                            </Button>\r\n\r\n\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\tmarginBottom: '10px'\r\n\t\t\t\t\t\t}}></div>\r\n\t\t\t\t\t</TabPane>\r\n\r\n\r\n\t\t\t\t\t<TabPane tab=\"Admin Information\" key=\"3\">\r\n\r\n\t\t\t\t\t\t<SiteInfoInvoice />\r\n\t\t\t\t\t</TabPane>\r\n\r\n\t\t\t\t</Tabs>\r\n\r\n\t\t\t</div>\r\n\r\n\r\n\r\n\t\t\t<MediaLibrary\r\n\t\t\t\tsetvisible={setvisibleMedia}\r\n\t\t\t\tvisible={visibleMedia}\r\n\t\t\t\tsetmyImages={setmyImages}\r\n\t\t\t\tisModalOpenForImages={true}\r\n\r\n\t\t\t/>\r\n\t\t</>\r\n\r\n\r\n\t);\r\n};\r\n\r\nexport default AddNewBrand;\r\n\r\n\r\n\r\n/*\r\n\t<div className='categoryListContainer__bodyContainerList'>\r\n\t\t\t\t<div className='categoryListContainer__bodyContainerList-item'>\r\n\t\t\t\t\t<Badge count={<CheckCircleTwoTone style={{ color: '#3FA3FF' }} />}>\r\n\t\t\t\t\t\t<div className='categoryListContainer__bodyContainerList-item-top'>\r\n\t\t\t\t\t\t\t<img\r\n\t\t\t\t\t\t\t\talt='theme img'\r\n\t\t\t\t\t\t\t\tsrc='https://homebazarshibchar.com/images/homeBazar.zip-thumb-homebazarLogo.jpg'\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className='categoryListContainer__bodyContainerList-item-body'>\r\n\t\t\t\t\t\t\t<h3>Home Bazar</h3>\r\n\r\n\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\tdisplay: 'flex',\r\n\t\t\t\t\t\t\t\t\tjustifyContent: 'space-between'\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<Tooltip placement='top' title='Active this theme'>\r\n\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\tsize='small'\r\n\t\t\t\t\t\t\t\t\t\ttype='primary'\r\n\t\t\t\t\t\t\t\t\t\ticon={<CheckOutlined />}\r\n\t\t\t\t\t\t\t\t\t\tonClick={() => console.log('upload thme')}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\tSet Active\r\n\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t</Tooltip>\r\n\r\n\t\t\t\t\t\t\t\t<Tooltip placement='top' title='Delete theme'>\r\n\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\tsize='small'\r\n\t\t\t\t\t\t\t\t\t\ttype='link'\r\n\t\t\t\t\t\t\t\t\t\tdanger={true}\r\n\t\t\t\t\t\t\t\t\t\ticon={<DeleteOutlined />}\r\n\t\t\t\t\t\t\t\t\t\tonClick={() => console.log('upload thme')}\r\n\t\t\t\t\t\t\t\t\t>\r\n\r\n\t\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</Badge>\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t<div className='categoryListContainer__bodyContainerList-item'>\r\n\t\t\t\t\t\t\t<div className='categoryListContainer__bodyContainerList-item-top'>\r\n\t\t\t\t\t\t\t\t<img\r\n\t\t\t\t\t\t\t\t\talt='theme img'\r\n\t\t\t\t\t\t\t\t\tsrc='https://homebazarshibchar.com/images/homeBazar.zip-thumb-homebazarLogo.jpg'\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className='categoryListContainer__bodyContainerList-item-body'>\r\n\t\t\t\t\t\t\t\t<h3>Home Bazar</h3>\r\n\r\n\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\tdisplay: 'flex',\r\n\t\t\t\t\t\t\t\t\t\tjustifyContent: 'space-between'\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t<Tooltip placement='top' title='Active this theme'>\r\n\t\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\t\tsize='small'\r\n\t\t\t\t\t\t\t\t\t\t\ttype='primary'\r\n\t\t\t\t\t\t\t\t\t\t\ticon={<CheckOutlined />}\r\n\t\t\t\t\t\t\t\t\t\t\tonClick={() => console.log('upload thme')}\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\tSet Active\r\n\t\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t\t</Tooltip>\r\n\r\n\t\t\t\t\t\t\t\t\t<Tooltip placement='top' title='Delete theme'>\r\n\t\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\t\tsize='small'\r\n\t\t\t\t\t\t\t\t\t\t\ttype='link'\r\n\t\t\t\t\t\t\t\t\t\t\tdanger={true}\r\n\t\t\t\t\t\t\t\t\t\t\ticon={<DeleteOutlined />}\r\n\t\t\t\t\t\t\t\t\t\t\tonClick={() => console.log('upload thme')}\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\r\n\r\n*/","import React, { useState, useEffect } from 'react';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\n\r\ninterface Props {\r\n\tsetdeliveryChargeList: any;\r\n\tdeliveryChargeList: any;\r\n\tdeliveryChargeItem: any;\r\n}\r\n\r\nconst DeliveryCharge = ({ deliveryChargeItem, setdeliveryChargeList, deliveryChargeList }: Props) => {\r\n\tconst [ deliveryCharge, setdeliveryCharge ] = useState({\r\n\t\tminimumOrder: deliveryChargeItem.minimumOrder,\r\n\t\tcharge: deliveryChargeItem.charge\r\n\t});\r\n\r\n\tconst handleDeliveryChargeChange = (e) => {\r\n\t\tconst name = e.target.name;\r\n\t\tconst value = e.target.value;\r\n\r\n\t\tsetdeliveryCharge({\r\n\t\t\t...deliveryCharge,\r\n\t\t\t[name]: value\r\n\t\t});\r\n\t};\r\n\r\n\tuseEffect(\r\n\t\t() => {\r\n\t\t\tconst positionInAttribute = () => {\r\n\t\t\t\treturn deliveryChargeList.map((item) => item.id).indexOf(deliveryChargeItem.id);\r\n\t\t\t};\r\n\r\n\t\t\tconst index = positionInAttribute();\r\n\r\n\t\t\tconst updatedItem = Object.assign({}, deliveryChargeList[index], { ...deliveryCharge });\r\n\t\t\tconst updateAttributeList = [\r\n\t\t\t\t...deliveryChargeList.slice(0, index),\r\n\t\t\t\tupdatedItem,\r\n\t\t\t\t...deliveryChargeList.slice(index + 1)\r\n\t\t\t];\r\n\t\t\tsetdeliveryChargeList(updateAttributeList);\r\n\t\t},\r\n\t\t[ deliveryCharge ]\r\n\t);\r\n\r\n\tconst handleAttributeDelete = () => {\r\n\t\tconst updateAttributeList = deliveryChargeList.filter((item) => item.id !== deliveryChargeItem.id);\r\n\t\tsetdeliveryChargeList(updateAttributeList);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className='dubbleRowInputs'>\r\n\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t<Input\r\n\t\t\t\t\ttype='number'\r\n\t\t\t\t\taddonBefore='Minimum Order'\r\n\t\t\t\t\tvalue={deliveryCharge.minimumOrder}\r\n\t\t\t\t\tname='minimumOrder'\r\n\t\t\t\t\tonChange={handleDeliveryChargeChange}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t<Input\r\n\t\t\t\t\ttype='number'\r\n\t\t\t\t\taddonBefore='Charge'\r\n\t\t\t\t\tvalue={deliveryCharge.charge}\r\n\t\t\t\t\tname='charge'\r\n\t\t\t\t\tonChange={handleDeliveryChargeChange}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default DeliveryCharge;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n\r\nimport { useHandleFetch } from '../../hooks';\r\n// import third party ui lib\r\nimport { Upload, message, Switch, Select, Button, notification, Modal, Empty } from 'antd';\r\n\r\nimport {\r\n\tFileOutlined,\r\n\tInboxOutlined,\r\n\tRadiusUpleftOutlined,\r\n\tRadiusUprightOutlined,\r\n\tRadiusBottomleftOutlined,\r\n\tRadiusBottomrightOutlined,\r\n\tDeleteOutlined,\r\n\tFileAddOutlined,\r\n\tPlusOutlined,\r\n\tCheckCircleOutlined\r\n} from '@ant-design/icons';\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport DeliveryCharge from './DeliveryCharge';\r\n\r\n\r\nconst { Option } = Select;\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t\tmessage: message || 'Category Updated',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t\tmessage: message || 'Something Went Wrong',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n\tname: Yup.string()\r\n\t\t.label('Name')\r\n\t\t.required()\r\n\t\t.min(2, 'Name must have at least 2 characters '),\r\n\tpickUpLocation: Yup.string()\r\n\t\t.label('Pick up Location')\r\n\t\t.required()\r\n\t\t.min(2, 'Pick up Location must have at least 2 characters '),\r\n\ttime: Yup.string()\r\n\t\t.label('Time')\r\n\t\t.required()\r\n\t\t.min(2, 'Time must have at least 2 characters '),\r\n\r\n});\r\n\r\n\r\n\r\n\r\nconst initialValues = {\r\n\tname: '',\r\n\tpickUpLocation: '',\r\n\ttime: '',\r\n};\r\n\r\n\r\n\r\n\r\ninterface Props {\r\n\taddNewCategoryVisible: any;\r\n\tsetAddNewCategoryVisible: any;\r\n\tregionList?: any;\r\n\tsetRegionList?: any;\r\n}\r\n\r\nconst AddNewRegion = ({ addNewCategoryVisible, setAddNewCategoryVisible, regionList, setRegionList }: Props) => {\r\n\r\n\tconst [addRegionState, handleRegionFetch] = useHandleFetch({}, 'addRegion');\r\n\tconst [selectedCountryValue, setselectedCountryValue] = useState('');\r\n\tconst [selectedCityValue, setselectedCityValue] = useState('');\r\n\r\n\tconst [countryOptions, setcountryOptions] = useState([]);\r\n\tconst [cityOptions, setcityOptions] = useState([]);\r\n\r\n\tconst [countryListState, handleCountryListFetch] = useHandleFetch(\r\n\t\t[],\r\n\t\t'countryList'\r\n\t);\r\n\r\n\tconst [cityListState, handleCityListFetch] = useHandleFetch([], 'cityList');\r\n\r\n\tconst [countryList, setCountryList] = useState([]);\r\n\tconst [cityList, setCityList] = useState([]);\r\n\r\n\tconst [deliveryChargeList, setdeliveryChargeList] = useState([{\r\n\t\tminimumOrder: '',\r\n\t\tcharge: '',\r\n\t\tid: '0'\r\n\t}]);\r\n\r\n\r\n\tconst handleSubmit = async (values: any, actions: any) => {\r\n\t\t// console.log('selectedCityValue', selectedCityValue)\r\n\r\n\t\tif (deliveryChargeList.length > 0) {\r\n\t\t\tconst charge = {};\r\n\r\n\t\t\tfor (let item of deliveryChargeList) {\r\n\t\t\t\tif (charge[item['minimumOrder']] !== '' && item['charge'] !== '') {\r\n\t\t\t\t\tcharge[item['minimumOrder']] = item['charge']\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tconst addRegionRes = await handleRegionFetch({\r\n\r\n\t\t\t\tbody: {\r\n\t\t\t\t\tname: values.name,\r\n\t\t\t\t\tpickUpLocation: values.pickUpLocation,\r\n\t\t\t\t\ttime: values.time,\r\n\t\t\t\t\tcountry: selectedCountryValue,\r\n\t\t\t\t\tcity: selectedCityValue,\r\n\t\t\t\t\tcharge\r\n\t\t\t\t},\r\n\t\t\t});\r\n\r\n\r\n\t\t\t// @ts-ignore\r\n\t\t\tif (addRegionRes && addRegionRes.status === 'ok') {\r\n\t\t\t\topenSuccessNotification();\r\n\r\n\t\t\t\tsetRegionList([...regionList, {\r\n\t\t\t\t\tid: addRegionRes['id'] || '',\r\n\t\t\t\t\tkey: addRegionRes['id'] || '',\r\n\t\t\t\t\tname: addRegionRes['name'] || '',\r\n\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\t...addRegionRes\r\n\t\t\t\t}])\r\n\t\t\t\tsetAddNewCategoryVisible(false)\r\n\t\t\t\tactions.resetForm();\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\topenErrorNotification();\r\n\t\t\t}\r\n\r\n\r\n\r\n\t\t}\r\n\t\telse {\r\n\t\t\tconst addRegionRes = await handleRegionFetch({\r\n\r\n\t\t\t\tbody: {\r\n\t\t\t\t\tname: values.name,\r\n\t\t\t\t\tpickUpLocation: values.pickUpLocation,\r\n\t\t\t\t\ttime: values.time,\r\n\t\t\t\t\tcountry: selectedCountryValue,\r\n\t\t\t\t\tcity: selectedCityValue,\r\n\t\t\t\t\tcharge: {}\r\n\t\t\t\t},\r\n\t\t\t});\r\n\r\n\r\n\t\t\t// @ts-ignore\r\n\t\t\tif (addRegionRes && addRegionRes.status === 'ok') {\r\n\t\t\t\topenSuccessNotification();\r\n\r\n\t\t\t\tsetRegionList([...regionList, {\r\n\t\t\t\t\tid: addRegionRes['id'] || '',\r\n\t\t\t\t\tkey: addRegionRes['id'] || '',\r\n\t\t\t\t\tname: addRegionRes['name'] || '',\r\n\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\t...addRegionRes\r\n\t\t\t\t}])\r\n\t\t\t\tsetAddNewCategoryVisible(false)\r\n\t\t\t\tactions.resetForm();\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\topenErrorNotification();\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\r\n\r\n\t\tactions.setSubmitting(false);\r\n\t};\r\n\r\n\r\n\r\n\tconst onChangeCity = (value) => {\r\n\t\tsetselectedCityValue(value);\r\n\t}\r\n\r\n\tconst onChangeCountry = (value) => {\r\n\t\tsetselectedCountryValue(value);\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tconst setCountries = async () => {\r\n\t\t\tconst CountryListRes = await handleCountryListFetch({});\r\n\r\n\t\t\t// @ts-ignore\r\n\t\t\tif (CountryListRes && CountryListRes.length > 0) {\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\tconst countryOptions = CountryListRes.map((country) => {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tvalue: country.name,\r\n\t\t\t\t\t\tname: country.name\r\n\t\t\t\t\t};\r\n\t\t\t\t});\r\n\t\t\t\tsetcountryOptions(countryOptions);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tsetCountries();\r\n\t}, []);\r\n\r\n\r\n\tuseEffect(() => {\r\n\t\tconst setCities = async () => {\r\n\t\t\tconst cityListRes = await handleCityListFetch({\r\n\t\t\t\turlOptions: {\r\n\t\t\t\t\tplaceHolders: {\r\n\t\t\t\t\t\tcountry: selectedCountryValue,\r\n\t\t\t\t\t},\r\n\t\t\t\t},\r\n\t\t\t});\r\n\r\n\t\t\t// @ts-ignore\r\n\t\t\tif (cityListRes && cityListRes.length > 0) {\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\tconst cityOptions = cityListRes.map((city) => {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tvalue: city.name,\r\n\t\t\t\t\t\tname: city.name\r\n\t\t\t\t\t};\r\n\t\t\t\t});\r\n\t\t\t\tsetcityOptions(cityOptions);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tsetCities();\r\n\t}, [selectedCountryValue]);\r\n\r\n\r\n\r\n\r\n\tconst handleCancel = (e: any) => {\r\n\t\tsetAddNewCategoryVisible(false);\r\n\t};\r\n\r\n\r\n\tconst getisSubmitButtonDisabled = (values, isValid) => {\r\n\t\tif (!isValid ||\r\n\t\t\t!values.name ||\r\n\t\t\t!values.pickUpLocation ||\r\n\t\t\t!values.time) {\r\n\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\r\n\r\n\tconst handleAddDeliveryCharge = () => {\r\n\t\tsetdeliveryChargeList([...deliveryChargeList, {\r\n\t\t\tminimumOrder: '',\r\n\t\t\tcharge: '',\r\n\t\t\tid: `${deliveryChargeList.length}`\r\n\t\t}])\r\n\t};\r\n\r\n\r\n\r\n\r\n\t// console.log('deliveryChargeList', deliveryChargeList)\r\n\treturn (\r\n\t\t<Formik\r\n\t\t\tonSubmit={(values, actions) => handleSubmit(values, actions)}\r\n\t\t\tvalidationSchema={validationSchema}\r\n\t\t\tvalidateOnBlur={false}\r\n\t\t\tenableReinitialize={true}\r\n\t\t\tinitialValues={\r\n\t\t\t\t{ ...initialValues }\r\n\t\t\t}\r\n\t\t>\r\n\t\t\t{({\r\n\t\t\t\thandleChange,\r\n\t\t\t\tvalues,\r\n\t\t\t\thandleSubmit,\r\n\t\t\t\terrors,\r\n\t\t\t\tisValid,\r\n\t\t\t\tisSubmitting,\r\n\t\t\t\ttouched,\r\n\t\t\t\thandleBlur,\r\n\t\t\t\tsetFieldTouched,\r\n\t\t\t\thandleReset,\r\n\t\t\t}) => (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<Modal\r\n\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\ttop: '40px'\r\n\t\t\t\t\t\t\t}}\r\n\r\n\t\t\t\t\t\t\tbodyStyle={{\r\n\t\t\t\t\t\t\t\tmargin: '0',\r\n\t\t\t\t\t\t\t\tpadding: '10px'\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\ttitle=\"Add New Region\"\r\n\t\t\t\t\t\t\tvisible={addNewCategoryVisible}\r\n\t\t\t\t\t\t\tonOk={(e: any) => handleSubmit(e)}\r\n\t\t\t\t\t\t\tonCancel={handleCancel}\r\n\t\t\t\t\t\t\tokText='Create'\r\n\t\t\t\t\t\t\tokButtonProps={{\r\n\t\t\t\t\t\t\t\tloading: isSubmitting,\r\n\t\t\t\t\t\t\t\thtmlType: \"submit\",\r\n\t\t\t\t\t\t\t\tdisabled: getisSubmitButtonDisabled(values, isValid)\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\r\n\r\n\t\t\t\t\t\t\t<div className='dubbleRowInputs'>\r\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\tlabel='Name'\r\n\t\t\t\t\t\t\t\t\t\tvalue={values.name}\r\n\t\t\t\t\t\t\t\t\t\tname='name'\r\n\t\t\t\t\t\t\t\t\t\tisError={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addRegionState.error['error']['name'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\terrorString={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addRegionState.error['error']['name'])}\r\n\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('name');\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\tlabel='Pick up Location'\r\n\t\t\t\t\t\t\t\t\t\tvalue={values.pickUpLocation}\r\n\t\t\t\t\t\t\t\t\t\tname='pickUpLocation'\r\n\t\t\t\t\t\t\t\t\t\tisError={(touched.pickUpLocation && errors.pickUpLocation) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addRegionState.error['error']['pickUpLocation'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\terrorString={(touched.pickUpLocation && errors.pickUpLocation) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addRegionState.error['error']['pickUpLocation'])}\r\n\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('pickUpLocation');\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\tmarginRight: '10px'\r\n\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\tlabel='Time'\r\n\t\t\t\t\t\t\t\t\tvalue={values.time}\r\n\t\t\t\t\t\t\t\t\tname='time'\r\n\t\t\t\t\t\t\t\t\tisError={(touched.time && errors.time) ||\r\n\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addRegionState.error['error']['time'])}\r\n\r\n\t\t\t\t\t\t\t\t\terrorString={(touched.time && errors.time) ||\r\n\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addRegionState.error['error']['time'])}\r\n\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\tsetFieldTouched('time');\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t<div className='dubbleRowInputs'>\r\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\t\t\t\tCountry\r\n            </h3>\r\n\t\t\t\t\t\t\t\t\t<Select\r\n\t\t\t\t\t\t\t\t\t\tnotFoundContent={<Empty description='No Country Found' image={Empty.PRESENTED_IMAGE_SIMPLE} />}\r\n\t\t\t\t\t\t\t\t\t\tshowSearch\r\n\t\t\t\t\t\t\t\t\t\tstyle={{ width: '100%' }}\r\n\t\t\t\t\t\t\t\t\t\tplaceholder='Select a Country'\r\n\t\t\t\t\t\t\t\t\t\toptionFilterProp='children'\r\n\t\t\t\t\t\t\t\t\t\tonChange={onChangeCountry}\r\n\t\t\t\t\t\t\t\t\t\tfilterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t{countryListState.done &&\r\n\t\t\t\t\t\t\t\t\t\t\tcountryListState.data.length > 0 &&\r\n\t\t\t\t\t\t\t\t\t\t\tcountryOptions.map((option) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\treturn <Option value={option.value}>{option.name}</Option>;\r\n\t\t\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t\t</Select>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\t\t\t\tCity\r\n            </h3>\r\n\t\t\t\t\t\t\t\t\t<Select\r\n\t\t\t\t\t\t\t\t\t\tnotFoundContent={<Empty description='First Select a Country' image={Empty.PRESENTED_IMAGE_SIMPLE} />}\r\n\t\t\t\t\t\t\t\t\t\tmode=\"multiple\"\r\n\t\t\t\t\t\t\t\t\t\tshowSearch\r\n\t\t\t\t\t\t\t\t\t\tstyle={{ width: '100%' }}\r\n\t\t\t\t\t\t\t\t\t\tplaceholder='Select a city'\r\n\t\t\t\t\t\t\t\t\t\toptionFilterProp='children'\r\n\t\t\t\t\t\t\t\t\t\tonChange={onChangeCity}\r\n\t\t\t\t\t\t\t\t\t\tfilterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t{cityListState.done &&\r\n\t\t\t\t\t\t\t\t\t\t\tcityListState.data.length > 0 &&\r\n\t\t\t\t\t\t\t\t\t\t\tcityOptions.map((option) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\treturn <Option value={option.value}>{option.name}</Option>;\r\n\t\t\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t\t</Select>\r\n\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\tmarginTop: '12px'\r\n\t\t\t\t\t\t\t}}></div>\r\n\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\t\tDelivery Charges\r\n            </h3>\r\n\r\n\t\t\t\t\t\t\t{deliveryChargeList.map(deliveryChargeItem => {\r\n\t\t\t\t\t\t\t\treturn <DeliveryCharge\r\n\t\t\t\t\t\t\t\t\tdeliveryChargeItem={deliveryChargeItem}\r\n\t\t\t\t\t\t\t\t\tdeliveryChargeList={deliveryChargeList} setdeliveryChargeList={setdeliveryChargeList} />\r\n\t\t\t\t\t\t\t})}\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\tmarginTop: '5px',\r\n\t\t\t\t\t\t\t}}></div>\r\n\t\t\t\t\t\t\t<Button size='middle'\r\n\t\t\t\t\t\t\t\tonClick={handleAddDeliveryCharge}\r\n\t\t\t\t\t\t\t\ttype=\"dashed\" icon={<PlusOutlined />}>Add Charge</Button>\r\n\r\n\t\t\t\t\t\t</Modal>\r\n\r\n\r\n\r\n\r\n\t\t\t\t\t</>\r\n\t\t\t\t)}\r\n\t\t</Formik>\r\n\r\n\r\n\r\n\r\n\t);\r\n};\r\n\r\nexport default AddNewRegion;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Modal, Select, notification } from 'antd';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { CheckCircleOutlined } from '@ant-design/icons';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport { useHandleFetch } from '../../hooks';\r\n\r\n\r\nconst { Option } = Select;\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n\tname: Yup.string()\r\n\t\t.label('Name')\r\n\t\t.required()\r\n\t\t.min(2, 'Name must have at least 2 characters '),\r\n\tpickUpLocation: Yup.string()\r\n\t\t.label('Pick up Location')\r\n\t\t.required()\r\n\t\t.min(2, 'Pick up Location must have at least 2 characters '),\r\n\ttime: Yup.string()\r\n\t\t.label('Time')\r\n\t\t.required()\r\n\t\t.min(2, 'Time must have at least 2 characters '),\r\n\r\n});\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t\tmessage: message || 'Tag Created',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t\tmessage: message || 'Something Went Wrong',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n};\r\n\r\n\r\ninterface Props {\r\n\tcustomer: any;\r\n\tsetvisible: any;\r\n\tvisible: any;\r\n\tregionList?: any;\r\n\tsetRegionList?: any;\r\n}\r\n\r\nconst QuickEdit = ({ customer, setvisible, visible, setRegionList, regionList }: Props) => {\r\n\tconst [updateRegionState, handleUpdateRegionFetch] = useHandleFetch({}, 'updateRegion');\r\n\r\n\r\n\tconst [selectedCountryValue, setselectedCountryValue] = useState('');\r\n\tconst [selectedCityValue, setselectedCityValue] = useState('');\r\n\r\n\tconst [countryOptions, setcountryOptions] = useState([]);\r\n\tconst [cityOptions, setcityOptions] = useState([]);\r\n\r\n\tconst [countryListState, handleCountryListFetch] = useHandleFetch(\r\n\t\t[],\r\n\t\t'countryList'\r\n\t);\r\n\r\n\tconst [cityListState, handleCityListFetch] = useHandleFetch([], 'cityList');\r\n\r\n\tconst [countryList, setCountryList] = useState([]);\r\n\tconst [cityList, setCityList] = useState([]);\r\n\r\n\r\n\r\n\tconst handleSubmit = async (values: any, actions: any) => {\r\n\t\t// console.log('selectedCityValue',selectedCityValue)\r\n\r\n\t\tconst addRegionRes = await handleUpdateRegionFetch({\r\n\r\n\t\t\tbody: {\r\n\t\t\t\tname: values.name,\r\n\t\t\t\tpickUpLocation: values.pickUpLocation,\r\n\t\t\t\ttime: values.time,\r\n\t\t\t\tcountry: selectedCountryValue,\r\n\t\t\t\tcity: selectedCityValue,\r\n\t\t\t\tcharge: {}\r\n\t\t\t},\r\n\t\t});\r\n\r\n\t\t// @ts-ignore\r\n\t\tif (addRegionRes && addRegionRes.status === 'ok') {\r\n\t\t\topenSuccessNotification();\r\n\r\n\t\t\tconst positionInTag = () => {\r\n\t\t\t\treturn regionList.map(item => item.id).indexOf(customer.id);\r\n\t\t\t}\r\n\r\n\t\t\tconst index = positionInTag();\r\n\r\n\t\t\t// @ts-ignore\r\n\t\t\tconst updatedItem = Object.assign({}, regionList[index], { ...addRegionRes });\r\n\t\t\tconst updateRegionList = [...regionList.slice(0, index), updatedItem, ...regionList.slice(index + 1)];\r\n\t\t\tsetRegionList(updateRegionList);\r\n\r\n\t\t}\r\n\t\telse {\r\n\t\t\topenErrorNotification();\r\n\t\t}\r\n\r\n\t\tactions.setSubmitting(false);\r\n\t\tsetvisible(false)\r\n\r\n\t};\r\n\r\n\r\n\r\n\r\n\tconst onChangeCity = (value) => {\r\n\t\tsetselectedCityValue(value);\r\n\t}\r\n\r\n\tconst onChangeCountry = (value) => {\r\n\t\tsetselectedCountryValue(value);\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tconst setCountries = async () => {\r\n\t\t\tconst CountryListRes = await handleCountryListFetch({});\r\n\r\n\t\t\t// @ts-ignore\r\n\t\t\tif (CountryListRes && CountryListRes.length > 0) {\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\tconst countryOptions = CountryListRes.map((country) => {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tvalue: country.name,\r\n\t\t\t\t\t\tname: country.name\r\n\t\t\t\t\t};\r\n\t\t\t\t});\r\n\t\t\t\tsetcountryOptions(countryOptions);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tsetCountries();\r\n\t}, []);\r\n\r\n\r\n\tuseEffect(() => {\r\n\t\tconst setCities = async () => {\r\n\t\t\tconst cityListRes = await handleCityListFetch({\r\n\t\t\t\turlOptions: {\r\n\t\t\t\t\tplaceHolders: {\r\n\t\t\t\t\t\tcountry: selectedCountryValue,\r\n\t\t\t\t\t},\r\n\t\t\t\t},\r\n\t\t\t});\r\n\r\n\t\t\t// @ts-ignore\r\n\t\t\tif (cityListRes && cityListRes.length > 0) {\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\tconst cityOptions = cityListRes.map((city) => {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tvalue: city.name,\r\n\t\t\t\t\t\tname: city.name\r\n\t\t\t\t\t};\r\n\t\t\t\t});\r\n\t\t\t\tsetcityOptions(cityOptions);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tsetCities();\r\n\t}, [selectedCountryValue]);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\tconst handleCancel = (e: any) => {\r\n\t\tsetvisible(false);\r\n\t};\r\n\r\n\r\n\r\n\tconst getisSubmitButtonDisabled = (values, isValid) => {\r\n\t\tif (!isValid ||\r\n\t\t\t!values.name ||\r\n\t\t\t!values.pickUpLocation ||\r\n\t\t\t!values.time) {\r\n\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\treturn (\r\n\t\t<Formik\r\n\t\t\tonSubmit={(values, actions) => handleSubmit(values, actions)}\r\n\t\t\tvalidationSchema={validationSchema}\r\n\t\t\tvalidateOnBlur={false}\r\n\t\t\tenableReinitialize={true}\r\n\t\t\tinitialValues={\r\n\t\t\t\t{ ...customer }\r\n\t\t\t}\r\n\t\t>\r\n\t\t\t{({\r\n\t\t\t\thandleChange,\r\n\t\t\t\tvalues,\r\n\t\t\t\thandleSubmit,\r\n\t\t\t\terrors,\r\n\t\t\t\tisValid,\r\n\t\t\t\tisSubmitting,\r\n\t\t\t\ttouched,\r\n\t\t\t\thandleBlur,\r\n\t\t\t\tsetFieldTouched,\r\n\t\t\t\thandleReset,\r\n\t\t\t}) => (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<Modal\r\n\t\t\t\t\t\t\ttitle=\"Quick Edit\"\r\n\t\t\t\t\t\t\tvisible={visible}\r\n\t\t\t\t\t\t\tonOk={(e: any) => handleSubmit(e)}\r\n\t\t\t\t\t\t\tonCancel={handleCancel}\r\n\t\t\t\t\t\t\tokText='Update'\r\n\t\t\t\t\t\t\tokButtonProps={{\r\n\t\t\t\t\t\t\t\tloading: isSubmitting,\r\n\t\t\t\t\t\t\t\thtmlType: \"submit\",\r\n\t\t\t\t\t\t\t\tdisabled: getisSubmitButtonDisabled(values, isValid)\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\tbodyStyle={{\r\n\t\t\t\t\t\t\t\tmargin: '0',\r\n\t\t\t\t\t\t\t\tpadding: '10px'\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\r\n\r\n\t\t\t\t\t\t\t<div className='dubbleRowInputs'>\r\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\tlabel='Name'\r\n\t\t\t\t\t\t\t\t\t\tvalue={values.name}\r\n\t\t\t\t\t\t\t\t\t\tname='name'\r\n\t\t\t\t\t\t\t\t\t\tisError={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateRegionState.error['error']['name'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\terrorString={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateRegionState.error['error']['name'])}\r\n\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('name');\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\tlabel='Pick up Location'\r\n\t\t\t\t\t\t\t\t\t\tvalue={values.pickUpLocation}\r\n\t\t\t\t\t\t\t\t\t\tname='pickUpLocation'\r\n\t\t\t\t\t\t\t\t\t\tisError={(touched.pickUpLocation && errors.pickUpLocation) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateRegionState.error['error']['pickUpLocation'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\terrorString={(touched.pickUpLocation && errors.pickUpLocation) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateRegionState.error['error']['pickUpLocation'])}\r\n\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('pickUpLocation');\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\tmarginRight: '10px'\r\n\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\tlabel='Time'\r\n\t\t\t\t\t\t\t\t\tvalue={values.time}\r\n\t\t\t\t\t\t\t\t\tname='time'\r\n\t\t\t\t\t\t\t\t\tisError={(touched.time && errors.time) ||\r\n\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateRegionState.error['error']['time'])}\r\n\r\n\t\t\t\t\t\t\t\t\terrorString={(touched.time && errors.time) ||\r\n\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateRegionState.error['error']['time'])}\r\n\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\tsetFieldTouched('time');\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t<div className='dubbleRowInputs'>\r\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\t\t\t\tCountry\r\n            </h3>\r\n\t\t\t\t\t\t\t\t\t<Select\r\n\t\t\t\t\t\t\t\t\t\tshowSearch\r\n\t\t\t\t\t\t\t\t\t\tstyle={{ width: '100%' }}\r\n\t\t\t\t\t\t\t\t\t\tplaceholder='Select a Country'\r\n\t\t\t\t\t\t\t\t\t\toptionFilterProp='children'\r\n\t\t\t\t\t\t\t\t\t\tdefaultValue={customer && customer.country}\r\n\t\t\t\t\t\t\t\t\t\tonChange={onChangeCountry}\r\n\t\t\t\t\t\t\t\t\t\tfilterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t{countryListState.done &&\r\n\t\t\t\t\t\t\t\t\t\t\tcountryListState.data.length > 0 &&\r\n\t\t\t\t\t\t\t\t\t\t\tcountryOptions.map((option) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\treturn <Option value={option.value}>{option.name}</Option>;\r\n\t\t\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t\t</Select>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\t\t\t\tCity\r\n            </h3>\r\n\t\t\t\t\t\t\t\t\t<Select\r\n\t\t\t\t\t\t\t\t\t\tshowSearch\r\n\t\t\t\t\t\t\t\t\t\tstyle={{ width: '100%' }}\r\n\t\t\t\t\t\t\t\t\t\tplaceholder='Select a city'\r\n\t\t\t\t\t\t\t\t\t\toptionFilterProp='children'\r\n\t\t\t\t\t\t\t\t\t\tdefaultValue={customer && customer.city}\r\n\t\t\t\t\t\t\t\t\t\tonChange={onChangeCity}\r\n\t\t\t\t\t\t\t\t\t\tfilterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t{cityListState.done &&\r\n\t\t\t\t\t\t\t\t\t\t\tcityListState.data.length > 0 &&\r\n\t\t\t\t\t\t\t\t\t\t\tcityOptions.map((option) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\treturn <Option value={option.value}>{option.name}</Option>;\r\n\t\t\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t\t</Select>\r\n\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\tmarginTop: '12px'\r\n\t\t\t\t\t\t\t}}></div>\r\n\r\n\t\t\t\t\t\t</Modal>\r\n\r\n\t\t\t\t\t</>\r\n\t\t\t\t)}\r\n\t\t</Formik>\r\n\t);\r\n};\r\n\r\n\r\nexport default QuickEdit;\r\n","import React, {useState, useEffect} from 'react';\r\nimport {withRouter} from 'react-router-dom';\r\nimport { Table, Badge, Menu, Dropdown, Space, Tag,Button, Input,Tooltip, Modal, notification, Popconfirm } from 'antd';\r\nimport { PlusOutlined, EditOutlined, DeleteOutlined,EditFilled,CheckCircleOutlined } from '@ant-design/icons';\r\n\r\n\r\n/// import hooks\r\nimport { useFetch, useHandleFetch } from \"../../hooks\";\r\n\r\n// import components\r\nimport { DataTableSkeleton } from \"../../components/Placeholders\";\r\nimport AddNewRegion from \"./AddNewRegion\";\r\nimport QuickEdit from \"./QuickEdit\";\r\nimport Empty from \"../../components/Empty\";\r\n\r\nconst { Column, ColumnGroup } = Table;\r\nconst { Search } = Input;\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t  message: message || 'Tag Created',\r\n\t  description: '',\r\n\t  icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n  };\r\n\r\n\r\n  const openErrorNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t  message: message || 'Something Went Wrong',\r\n\t  description: '',\r\n\t  icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n  };\r\n\r\n\r\n\r\n\r\n\r\ninterface myTableProps {\r\n  data: any; \r\n  setRegionList: any; \r\n} \r\n\r\n\r\nconst MyTable = ({data,setRegionList}: myTableProps) => {\r\n    const [visible,setvisible] = useState(false);   \r\n    const [activeCategoryForEdit,setactiveCategoryForEdit] = useState(false); \r\n    const [deleteRegionState, handleDeleteRegioFetch] = useHandleFetch({}, 'deleteRegion');\r\n\r\n\r\n      const handleDeleteRegion = async (id) => {\r\n        const deleteRegionRes = await handleDeleteRegioFetch({\r\n          urlOptions: {\r\n            placeHolders: {\r\n              id,\r\n            }\r\n            }\r\n          });\r\n\r\n            // @ts-ignore\r\n\t\t  if(deleteRegionRes && deleteRegionRes.status === 'ok'){\r\n\t\t\t  openSuccessNotification('Deleted Region'); \r\n\t\t\t  const newRegionList =  data.filter(item => item.id !== id);\r\n\t\t\t  setRegionList(newRegionList); \r\n\t\t  }\r\n\r\n      }\r\n      \r\n\r\n    return (\r\n        <>\r\n        <Table \r\n        // expandable={{\r\n        //     expandedRowRender: record => <p style={{ margin: 0 }}>{record.name}</p>,\r\n        //     rowExpandable: record => record.name !== 'Not Expandable',\r\n        //   }}\r\n        // bordered={true}\r\n        size='small'\r\n        // pagination={false}\r\n        dataSource={data}\r\n        >\r\n         \r\n          <Column\r\n           title=\"Name\" \r\n           dataIndex=\"name\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n         \r\n            />\r\n\r\n\r\n<Column\r\n           title=\"Pick up Location\" \r\n           dataIndex=\"pickUpLocation\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n         \r\n            />\r\n\r\n\r\n\r\n\r\n<Column\r\n           title=\"Country\" \r\n           dataIndex=\"countryName\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n         \r\n            />\r\n\r\n\r\n<Column\r\n           title=\"City\" \r\n           dataIndex=\"city\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n         \r\n            />\r\n\r\n<Column\r\n           title=\"Time\" \r\n           dataIndex=\"time\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n         \r\n            />\r\n\r\n\r\n<Column\r\n           title=\"Charge\" \r\n           dataIndex=\"time\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n         \r\n            />\r\n\r\n\r\n          {/* <Column \r\n          \r\n          className='classnameofthecolumn'\r\n\r\n          title=\"Product\" dataIndex=\"product\" key=\"product\" /> */}\r\n\r\n          {/* <Column \r\n          \r\n          className='classnameofthecolumn'\r\n\r\n          title=\"Sub Category\" dataIndex=\"subCategory\" key=\"subCategory\" /> */}\r\n        \r\n        {/* <Column\r\n          title=\"Tags\"\r\n          dataIndex=\"tags\"\r\n          key=\"tags\"\r\n          render={tags => (\r\n            <>\r\n              {tags.map((tag : any) => (\r\n                <Tag color=\"blue\" key={tag}>\r\n                  {tag}\r\n                </Tag>\r\n              ))}\r\n            </>\r\n          )}\r\n        /> */}\r\n        <Column\r\n        \r\n        className='classnameofthecolumn'\r\n          title=\"\"\r\n          key=\"action\"\r\n          align='right'\r\n          render={(text, record : any) => (\r\n            <Space size=\"middle\">\r\n            \r\n            <a href='##'>\r\n               <Tooltip placement=\"top\" title='Quick Edit Region'>\r\n              <span className='iconSize' onClick={() => {\r\n                setvisible(true)\r\n                setactiveCategoryForEdit(record); \r\n              }}> \r\n              <EditOutlined />\r\n            \r\n              </span>\r\n               </Tooltip>\r\n</a>\r\n\r\n\r\n   \r\n               <Popconfirm \r\n               \r\n               onConfirm={() => handleDeleteRegion(record.id)}\r\n               title=\"Are you sure？\" okText=\"Yes\" cancelText=\"No\">\r\n           \r\n           <span \r\n             className='iconSize iconSize-danger'\r\n             > \r\n             <DeleteOutlined/>\r\n            </span>\r\n       \r\n           </Popconfirm>\r\n\r\n\r\n             \r\n             \r\n            </Space>\r\n          )}\r\n        />\r\n      </Table>\r\n\r\n    \r\n\r\n    {activeCategoryForEdit &&   <QuickEdit \r\n    setvisible={setvisible}\r\n    visible={visible}\r\n    customer={activeCategoryForEdit}\r\n    regionList={data}\r\n    setRegionList={setRegionList}\r\n\r\n    />\r\n\r\n    }\r\n    \r\n    \r\n    </>\r\n    )\r\n}\r\n\r\n\r\ninterface Props {\r\n    history: any; \r\n}\r\n\r\nconst CustomerList = ({history}: Props) => {\r\n\r\n    const [regionList,setRegionList] = useState([]); \r\n\r\n    const [regionState, handleRegionListFetch] = useHandleFetch({}, 'regionList');\r\n  \r\n  \r\n    useEffect(()=>{\r\n     const setRegions = async () => {\r\n       const regions = await handleRegionListFetch({}); \r\n       // @ts-ignore\r\n       setRegionList(regions); \r\n     }\r\n     setRegions(); \r\n    },[])\r\n\r\n\r\n\r\n\r\n  \r\n  const [addNewCategoryVisible,setAddNewCategoryVisible] = useState(false);   \r\n\r\n  console.log('regionState',regionState)\r\n\r\n\r\n  const handleSearch = (value) => {\r\n    if(regionState.data.length > 0 ){\r\n      const newTagList = regionState.data.filter(item => item.name.toLowerCase().includes(value.toLowerCase())); \r\n      setRegionList(newTagList); \r\n    }\r\n     \r\n  }\r\n\r\n\r\n\r\n\treturn (\r\n\t\t<>\r\n    {/* <h2 className='containerPageTitle'>\r\n      Categories\r\n    </h2> */}\r\n    <div className='categoryListContainer'>\r\n            <div className='categoryListContainer__header'>\r\n           \r\n\r\n          <div className='categoryListContainer__header-searchBar'>\r\n          <h2 className='categoryListContainer__header-title'>\r\n            Regions \r\n            </h2>\r\n\r\n\r\n          <Search\r\n            enterButton={false}\r\n            className='searchbarClassName'\r\n          placeholder=\"search regions..\"\r\n          onSearch={value => handleSearch(value)}\r\n          // style={{ width: 300 }}\r\n        />\r\n          </div>\r\n            <Button\r\n          // type=\"primary\"\r\n          className='btnPrimaryClassNameoutline'\r\n          icon={<PlusOutlined />}\r\n          onClick={() => setAddNewCategoryVisible(true)}\r\n        >\r\n        Add New\r\n            \r\n            </Button>\r\n            </div>\r\n\r\n            <div className='categoryListContainer__afterHeader'>\r\n            {/* <Search\r\n      placeholder=\"search categories..\"\r\n      size=\"large\"\r\n      onSearch={value => console.log(value)}\r\n      style={{ width: 300 }}\r\n    /> */}\r\n            </div>\r\n\r\n     \r\n\t\t\t\r\n\t\t\t<div className='categoryListContainer__categoryList'>\r\n        {regionState.done && regionList.length > 0 && <MyTable \r\n        setRegionList={setRegionList}\r\n        data={regionList} />}\r\n        {regionState.isLoading && <DataTableSkeleton />}\r\n\r\n        {regionState.done && !(regionList.length > 0) && (\r\n\t\t<Empty title='No Region found'  />\r\n\t\t)}\r\n        \r\n\t\t\t</div>\r\n\t\t</div>\r\n\r\n\r\n{regionState.done && \r\n    <AddNewRegion \r\n          addNewCategoryVisible={addNewCategoryVisible} \r\n          setAddNewCategoryVisible={setAddNewCategoryVisible}\r\n          regionList={regionState.data}\r\n          setRegionList={setRegionList}\r\n           />}\r\n\r\n      \r\n\r\n        \r\n    </>\r\n\t);\r\n};\r\n\r\nexport default withRouter(CustomerList);\r\n","import React, { useEffect, useState } from 'react'\r\n\r\n\r\n// import components \r\nimport TextArea from \"../../components/Field/TextArea\";\r\n\r\n// import lib \r\nimport { Select, Button, notification } from 'antd';\r\n\r\nimport {\r\n    SendOutlined,\r\n    CheckCircleOutlined,\r\n    InfoCircleFilled\r\n} from '@ant-design/icons';\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'SMS sent successfully',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n    notification.error({\r\n        message: message || 'Something Went Wrong',\r\n        description: '',\r\n        icon: <InfoCircleFilled style={{ color: 'rgb(241, 67, 67)' }} />,\r\n    });\r\n};\r\n\r\n\r\n\r\n\r\n\r\ninterface Props {\r\n\r\n}\r\n\r\nconst SendCustomSMS = (props: Props) => {\r\n    const [text, setText] = useState('');\r\n    const [recipient, setrecipient] = useState([]);\r\n\r\n\r\n    function handleChange(value) {\r\n        const recipient = `${value}`.split(',');\r\n        setrecipient(recipient)\r\n    }\r\n\r\n\r\n    const handleMsgSend = () => {\r\n\r\n    }\r\n\r\n\r\n    const getMsgSendIsDisabled = () => {\r\n        return !text || !recipient[0]\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div style={{\r\n                width: '450px'\r\n            }}>\r\n                <h3 className='inputFieldLabel'>\r\n                    Recipient\r\n                </h3>\r\n\r\n                <Select\r\n                    style={{\r\n                        height: '30px',\r\n                        borderRadius: '3px',\r\n                        borderColor: '#eee !important',\r\n                        width: '100%'\r\n                    }}\r\n                    mode=\"tags\" onChange={handleChange} tokenSeparators={[',']}>\r\n                </Select>\r\n\r\n                <div style={{\r\n                    marginTop: \"15px\"\r\n                }}></div>\r\n                <TextArea\r\n                    label='Text'\r\n                    value={text}\r\n                    name='text'\r\n                    onChange={(e: any) => {\r\n                        setText(e.target.value);\r\n                    }}\r\n                />\r\n\r\n                <Button\r\n\r\n                    style={{\r\n                        marginTop: '10px'\r\n                    }}\r\n                    onClick={handleMsgSend}\r\n                    disabled={getMsgSendIsDisabled()}\r\n\r\n                    className='btnAddToPrice'\r\n                >\r\n                    Send <span style={{\r\n                        marginLeft: '10px'\r\n                    }}> <SendOutlined /></span>\r\n                </Button>\r\n            </div>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SendCustomSMS\r\n","import React from 'react';\r\n\r\n// import components \r\nimport TextArea from \"../../components/Field/TextArea\";\r\nimport Input from \"../../components/Field/Input\";\r\n\r\n\r\n// import lib \r\nimport { Button, notification } from 'antd';\r\n\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\nimport {\r\n    CheckCircleOutlined,\r\n    InfoCircleFilled\r\n} from '@ant-design/icons';\r\n\r\n\r\n// import hooks\r\nimport { useHandleFetch } from \"../../hooks\";\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'SMS sent successfully',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n    notification.error({\r\n        message: message || 'Something Went Wrong',\r\n        description: '',\r\n        icon: <InfoCircleFilled style={{ color: 'rgb(241, 67, 67)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst initialValues = {\r\n    name: '',\r\n    description: '',\r\n}\r\n\r\n\r\ninterface Props {\r\n\r\n}\r\n\r\nconst SMSConfiguaration = (props: Props) => {\r\n    const [configureSMSStata, handleconfigureSMSFetch] = useHandleFetch({}, 'configureSMS');\r\n\r\n\r\n    const handleSubmit = async (values: any, actions: any) => {\r\n        const addTagRes = await handleconfigureSMSFetch({\r\n            urlOptions: {\r\n                placeHolders: {\r\n                    id: values.id,\r\n                }\r\n            },\r\n            body: {\r\n                name: values.name.trim(),\r\n                description: values.description,\r\n            },\r\n        });\r\n\r\n        // @ts-ignore\r\n        if (addTagRes && addTagRes.status === 'ok') {\r\n            openSuccessNotification();\r\n\r\n\r\n            actions.resetForm();\r\n        }\r\n        else {\r\n            openErrorNotification();\r\n        }\r\n\r\n\r\n        actions.setSubmitting(false);\r\n\r\n    };\r\n\r\n\r\n    const getisSubmitButtonDisabled = (values, isValid) => {\r\n        if (!values.name || !isValid) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    return (\r\n        <Formik\r\n            onSubmit={(values, actions) => handleSubmit(values, actions)}\r\n            // validationSchema={validationSchema}\r\n            validateOnBlur={false}\r\n            enableReinitialize={true}\r\n            initialValues={\r\n                { ...initialValues }\r\n            }\r\n        >\r\n            {({\r\n                handleChange,\r\n                values,\r\n                handleSubmit,\r\n                errors,\r\n                isValid,\r\n                isSubmitting,\r\n                touched,\r\n                handleBlur,\r\n                setFieldTouched,\r\n                handleReset,\r\n            }) => (\r\n                    <>\r\n                        <Input\r\n                            label='Title'\r\n                            value={values.name}\r\n                            name='name'\r\n                            isError={(touched.name && errors.name) ||\r\n                                (!isSubmitting && configureSMSStata.error['error']['name'])}\r\n\r\n                            errorString={(touched.name && errors.name) ||\r\n                                (!isSubmitting && configureSMSStata.error['error']['name'])}\r\n                            onChange={(e: any) => {\r\n                                handleChange(e);\r\n                                setFieldTouched('name');\r\n                            }}\r\n                        />\r\n                        <TextArea\r\n                            label='Description'\r\n                            value={values.description}\r\n                            name='description'\r\n                            isError={(touched.description && errors.description) ||\r\n                                (!isSubmitting && configureSMSStata.error['error']['description'])}\r\n\r\n                            errorString={(touched.description && errors.description) ||\r\n                                (!isSubmitting && configureSMSStata.error['error']['description'])}\r\n                            onChange={(e: any) => {\r\n                                handleChange(e);\r\n                                setFieldTouched('description');\r\n                            }}\r\n                        />\r\n                    </>\r\n                )}\r\n        </Formik>\r\n\r\n    )\r\n}\r\n\r\nexport default SMSConfiguaration\r\n","import React from 'react';\r\n\r\n\r\n// import lib\r\nimport { Upload, message, Switch, Select, Button, notification, Modal, Tabs } from 'antd';\r\n\r\n// import components \r\nimport SendCustomSMS from \"./SendCustomSMS\";\r\nimport SMSConfiguaration from \"./SMSConfiguaration\";\r\n\r\n\r\nconst { TabPane } = Tabs;\r\n\r\n\r\n\r\ninterface Props {\r\n\r\n}\r\n\r\nconst Sms = (props: Props) => {\r\n    return (\r\n        <>\r\n            <div className='siteInfoContainer'>\r\n\r\n                <Tabs defaultActiveKey=\"1\" >\r\n                    <TabPane tab=\"Send custom SMS\" key=\"1\">\r\n                        <SendCustomSMS />\r\n                    </TabPane>\r\n\r\n                    <TabPane tab=\"SMS configuaration\" key=\"2\">\r\n                        <SMSConfiguaration />\r\n                    </TabPane>\r\n\r\n                </Tabs>\r\n\r\n            </div>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Sms\r\n","import Sms from \"./Sms\";\r\nexport default Sms; ","import React from 'react'\r\n\r\n\r\n// import pages\r\nimport { Overview } from '../../pages/overview';\r\nimport { CategoryList, NewCategoryDetail } from '../../pages/category';\r\nimport { BrandList, AddNewBrand, NewBrandDetail } from '../../pages/brand';\r\nimport { ProductList, NewProductDetail } from '../../pages/product';\r\nimport { TagList, AddNewTag, NewTagDetail } from '../../pages/tag';\r\nimport { CustomerList } from '../../pages/customer';\r\nimport { PagesList, AddNewPage } from '../../pages/pages';\r\nimport { AttributeList } from '../../pages/attribute';\r\nimport { OrderList, AddNewOrder } from '../../pages/order';\r\nimport { Component, ManageThemes, Image, Invoice, SiteInfo } from '../../pages/settings';\r\nimport { Delivery } from '../../pages/delivery';\r\nimport Sms from '../../pages/sms';\r\n\r\n\r\n// import Login from '../../pages/auth/login';\r\n\r\n\r\n// import libraries\r\nimport { Layout } from 'antd';\r\nimport { Switch, Route, Redirect } from 'react-router-dom';\r\n\r\n\r\n\r\nconst { Content } = Layout;\r\n\r\ninterface Props {\r\n\r\n}\r\n\r\nconst ContentComponent = (props: Props) => {\r\n    return (\r\n        <Content\r\n            hasSider={true}\r\n            style={{\r\n                backgroundColor: '#fff',\r\n                paddingTop: '20px'\r\n            }}\r\n        >\r\n            <Switch>\r\n                <Route\r\n                    exact\r\n                    path='/'\r\n                    render={() => <Redirect to='/admin/overview' />}\r\n                />\r\n\r\n                <Route\r\n                    exact\r\n                    path='/admin'\r\n                    render={() => <Redirect to='/admin/overview' />}\r\n                />\r\n\r\n                <Route path='/admin/overview' exact>\r\n                    <Overview />\r\n                </Route>\r\n                <Route path='/admin/category' exact>\r\n                    <CategoryList />\r\n                </Route>\r\n                <Route path='/admin/category/:id' exact>\r\n                    <NewCategoryDetail />\r\n                </Route>\r\n                {/* <Route path='/admin/category/:name' exact>\r\n                    <CategoryDetail />\r\n                </Route> */}\r\n\r\n                {/* CategoryDetail */}\r\n                <Route path='/admin/brand/new' exact>\r\n                    <AddNewBrand />\r\n                </Route>\r\n                <Route path='/admin/brand' exact>\r\n                    <BrandList />\r\n                </Route>\r\n                <Route path='/admin/brand/:id' exact>\r\n                    <NewBrandDetail />\r\n                </Route>\r\n                <Route path='/admin/product' exact>\r\n                    <ProductList />\r\n                </Route>\r\n                <Route path='/admin/product/:id' exact>\r\n                    <NewProductDetail />\r\n                </Route>\r\n\r\n                {/* <Route path='/product/new' exact>\r\n                     <AddNewProduct />\r\n                   </Route> */}\r\n                <Route path='/admin/tag' exact>\r\n                    <TagList />\r\n                </Route>\r\n                <Route path='/admin/tag/new' exact>\r\n                    <AddNewTag />\r\n                </Route>\r\n                <Route path='/admin/tag/:id' exact>\r\n                    <NewTagDetail />\r\n                </Route>\r\n                <Route path='/admin/attribute' exact>\r\n                    <AttributeList />\r\n                </Route>\r\n                <Route path='/admin/order' exact>\r\n                    <OrderList />\r\n                </Route>\r\n                <Route path='/admin/order/new' exact>\r\n                    <AddNewOrder />\r\n                </Route>\r\n                <Route path='/admin/customer' exact>\r\n                    <CustomerList />\r\n                </Route>\r\n                <Route path='/admin/page' exact>\r\n                    <PagesList />\r\n                </Route>\r\n                <Route path='/admin/delivery' exact>\r\n                    <Delivery />\r\n                </Route>\r\n                <Route path='/admin/page/new' exact>\r\n                    <AddNewPage />\r\n                </Route>\r\n                <Route path='/admin/settings/components' exact>\r\n                    <Component />\r\n                </Route>\r\n                <Route path='/admin/settings/image' exact>\r\n                    <Image />\r\n                </Route>\r\n                <Route path='/admin/settings/themes' exact>\r\n                    <ManageThemes />\r\n                </Route>\r\n                <Route path='/admin/settings/invoice' exact>\r\n                    <Invoice />\r\n                </Route>\r\n                <Route path='/admin/settings/siteInfo' exact>\r\n                    <SiteInfo />\r\n                </Route>\r\n                <Route path='/admin/sms' exact>\r\n                    <Sms />\r\n                </Route>\r\n            </Switch>\r\n        </Content>\r\n    )\r\n}\r\n\r\nexport default ContentComponent\r\n","import Content from \"./Content\";\r\nexport default Content; ","import React from 'react';\n\n// import pages\nimport Login from './pages/auth/login';\n\n\n\n// import layouts\nimport Sider from \"./layout/sider\";\nimport Header from './layout/header';\nimport Content from './layout/content';\n// import Footer from './layout/footer';\n\n// import libraries\nimport { Layout } from 'antd';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\n\n\nconst App = () => {\n\treturn (\n\t\t<Router>\n\t\t\t<Switch>\n\t\t\t\t<Route path='/admin/login' exact>\n\t\t\t\t\t<Login />\n\t\t\t\t</Route>\n\t\t\t</Switch>\n\t\t\t<Switch>\n\n\t\t\t\t<Layout style={{ minHeight: '100vh' }}>\n\t\t\t\t\t<Header />\n\n\t\t\t\t\t<Layout className='site-layout'>\n\t\t\t\t\t\t<Sider />\n\t\t\t\t\t\t<Content />\n\t\t\t\t\t</Layout>\n\t\t\t\t\t{/* <Footer /> */}\n\t\t\t\t</Layout>\n\t\t\t</Switch>\n\t\t</Router>\n\t);\n};\n\nexport default App;\n","export function actionShouldBlock( meta ) {\r\n    return !meta || !meta.async || !meta.blocking;\r\n}\r\n\r\nexport function actionFinished ( type ) {\r\n    return type.includes( \"_COMPLETED\" ) || type.includes( \"_FAILED\" );\r\n}\r\n","import * as utils from \"./utils\";\r\n\r\nconst busyReducer = ( state = 0, action ) => {\r\n    if ( utils.actionShouldBlock( action.meta ) ) {\r\n        return state;\r\n    }\r\n    if ( utils.actionFinished( action.type ) ) {\r\n        return state - 1;\r\n    }\r\n    return state + 1;\r\n};\r\n\r\nexport default busyReducer;\r\n","import reducer from \"./reducers\";\r\n\r\nexport default reducer;\r\n","export function productPositionInCart(cart, product) {\r\n  return cart.map(item => item.product.id).indexOf(product.id);\r\n}\r\n\r\nexport function newCartItem(product, quantity, isSelectedForCheckout) {\r\n  return {\r\n    product,\r\n    quantity,\r\n    isSelectedForCheckout,\r\n  };\r\n}\r\n","export default ( initialState ) => ( reducerMap ) => ( state = initialState, action ) => {\r\n    const reducer = reducerMap[ action.type ];\r\n    return reducer ? reducer( state, action ) : state;\r\n};\r\n","import isomorphicFetch from 'isomorphic-fetch';\r\n\r\nexport default (url, method, body) => {\r\n\tconst options = {\r\n\t\tmethod,\r\n\t\theaders: requestHeaders(),\r\n\t\tbody: method !== 'GET' ? JSON.stringify(body) : null\r\n\t};\r\n\r\n\treturn isomorphicFetch(url, options).then(res =>\r\n\t\tparseStatus(res.status, res.json())\r\n\t);\r\n};\r\n\r\nfunction parseStatus(status, res) {\r\n\treturn new Promise((resolve, reject) => {\r\n\t\tif (status >= 200 && status < 300) {\r\n\t\t\tres.then(response => resolve(response));\r\n\t\t} else {\r\n\t\t\tres.then(response => reject({ status, response }));\r\n\t\t}\r\n\t});\r\n}\r\n\r\nfunction requestHeaders() {\r\n\treturn {\r\n\t\tAccept: 'application/json',\r\n\t\t'Content-Type': 'application/json'\r\n\t};\r\n}\r\n","export function getCartItemQuantity(cart, id) {\r\n  return cart.find((item) => item.product.id === id).quantity;\r\n}\r\n\r\nexport const getTotalPriceOfCartItems = (cartItems) => {\r\n  if (!cartItems.length > 0) {\r\n    return 0;\r\n  }\r\n\r\n  const prices = cartItems.map((cartItem) => {\r\n    return cartItem.quantity * parseInt(cartItem.product['price']) || 0;\r\n  });\r\n\r\n  const totalPrice = prices.reduce((a, b) => {\r\n    return a + b;\r\n  }, 0);\r\n  return totalPrice;\r\n};\r\n","import reducer from \"./reducers\";\r\n\r\nimport * as cartOperations from \"./operations\";\r\nimport * as cartSelectors from \"./selectors\";\r\n\r\nexport {\r\n    cartOperations,\r\n    cartSelectors,\r\n};\r\n\r\nexport default reducer;\r\n","import * as types from './types';\r\nimport * as utils from './utils';\r\nimport { createReducer } from '../../utils';\r\n\r\n/* State shape\r\n[\r\n    {\r\n        product,\r\n        quantity,\r\n    }\r\n]\r\n*/\r\n\r\nconst initialState = [];\r\n\r\nconst cartReducer = createReducer(initialState)({\r\n  [types.TOGGLE]: (state, action) => {\r\n    const { product, quantity, isSelectedForCheckout } = action.payload;\r\n    const index = utils.productPositionInCart(state, product);\r\n    if (index === -1) {\r\n      return [\r\n        utils.newCartItem(product, quantity, isSelectedForCheckout),\r\n        ...state,\r\n      ];\r\n    }\r\n\r\n    const tempArrayWithOutOldProduct = state.filter(\r\n      (item) => item.product.id !== product.id\r\n    );\r\n\r\n    return tempArrayWithOutOldProduct;\r\n  },\r\n\r\n  [types.ADD_PRODUCTS_TO_CART]: (state, action) => {\r\n    const { cartItems } = action.payload;\r\n\r\n    if (cartItems.length > 0) {\r\n      return cartItems;\r\n    } else {\r\n      return [...state];\r\n    }\r\n  },\r\n\r\n  [types.SELECT_PRODUCT_FOR_CHECKOUT]: (state, action) => {\r\n    const { product } = action.payload;\r\n\r\n    const index = utils.productPositionInCart(state, product.product);\r\n    if (index === -1) {\r\n      return [...state, { ...product, isSelectedForCheckout: true }];\r\n    } else if (index !== -1 && !product.isSelectedForCheckout) {\r\n      const tempArrayWithOutOldProduct = state.filter(\r\n        (item) => item.product.id !== product.product.id\r\n      );\r\n\r\n      return [\r\n        ...tempArrayWithOutOldProduct,\r\n        { ...product, isSelectedForCheckout: true },\r\n      ];\r\n    }\r\n\r\n    const tempArrayWithOutOldProduct = state.filter(\r\n      (item) => item.product.id !== product.product.id\r\n    );\r\n\r\n    return [\r\n      ...tempArrayWithOutOldProduct,\r\n      { ...product, isSelectedForCheckout: false },\r\n    ];\r\n  },\r\n\r\n  [types.CHANGE_QUANTITY]: (state, action) => {\r\n    const { product, quantity } = action.payload;\r\n    const index = utils.productPositionInCart(state, product);\r\n\r\n    const updatedItem = Object.assign({}, state[index], { quantity });\r\n    return [...state.slice(0, index), updatedItem, ...state.slice(index + 1)];\r\n  },\r\n  [types.REMOVE]: (state, action) => {\r\n    const { product } = action.payload;\r\n    const index = utils.productPositionInCart(state, product);\r\n    return [...state.slice(0, index), ...state.slice(index + 1)];\r\n  },\r\n  [types.CLEAR]: () => [],\r\n});\r\n\r\nexport default cartReducer;\r\n","export const SET_CART = 'cart/SET';\r\nexport const TOGGLE = 'cart/TOGGLE';\r\nexport const ADD_PRODUCTS_TO_CART = 'cart/ADD_PRODUCTS_TO_CART';\r\nexport const SELECT_PRODUCT_FOR_CHECKOUT = 'wishList/SELECT_PRODUCT_FOR_CHECKOUT';\r\nexport const CHANGE_QUANTITY = 'cart/CHANGE_QUANTITY';\r\nexport const REMOVE = 'cart/REMOVE';\r\nexport const CLEAR = 'cart/CLEAR';\r\n","export function productPositionInWishList(wishList, productId) {\r\n  return wishList.map(item => item).indexOf(productId);\r\n}\r\n","import reducer from './reducers';\r\n\r\nimport * as wishListOperations from './operations';\r\nimport * as wishListSelectors from './selectors';\r\n\r\nexport { wishListOperations, wishListSelectors };\r\n\r\nexport default reducer;\r\n","import * as types from './types';\r\nimport * as utils from './utils';\r\nimport { createReducer } from '../../utils';\r\n\r\n/* State shape\r\n[\r\n    {\r\n        product\r\n    }\r\n]\r\n*/\r\n\r\nconst initialState = [];\r\n\r\nconst wishListReducer = createReducer(initialState)({\r\n  [types.TOGGLE]: (state, action) => {\r\n    const { productId } = action.payload;\r\n\r\n    const index = utils.productPositionInWishList(state, productId);\r\n    if (index === -1) {\r\n      return [...state, productId];\r\n    }\r\n\r\n    const tempArrayWithOutOldProduct = state.filter(\r\n      (item) => item !== productId\r\n    );\r\n\r\n    return tempArrayWithOutOldProduct;\r\n  },\r\n  [types.ADD_WISHLIST]: (state, action) => {\r\n    const wishlist = action.payload;\r\n    return [...wishlist];\r\n  },\r\n\r\n  [types.REMOVE]: (state, action) => {\r\n    const { productId } = action.payload;\r\n    const index = utils.productPositionInWishList(state, productId);\r\n    return [...state.slice(0, index), ...state.slice(index + 1)];\r\n  },\r\n  [types.CLEAR]: () => [],\r\n});\r\n\r\nexport default wishListReducer;\r\n","export const TOGGLE = 'wishList/TOGGLE';\r\nexport const ADD_WISHLIST = 'wishList/ADD_WISHLIST';\r\nexport const REMOVE = 'wishList/REMOVE';\r\nexport const CLEAR = 'wishList/CLEAR';\r\n","export function getCartItemQuantity( cart, id ) {\r\n    return cart.find( item => item.product.id === id ).quantity;\r\n}\r\n\r\n\r\nexport const getTotalPriceOfCartItems = (cartItems) => {\r\n    if(!cartItems.length > 0){\r\n        return 0; \r\n    }\r\n\r\n    return cartItems.reduce((a,b) => {\r\n        return !(b.quantity > 1) && a + +b.product.price || +b.product.price * b.quantity\r\n    },0); \r\n\r\n}","import reducer from './reducers';\r\n\r\nimport * as checkoutOperations from './operations';\r\nimport * as checkoutSelectors from './selectors';\r\n\r\nexport { checkoutOperations, checkoutSelectors };\r\n\r\nexport default reducer;\r\n","import * as types from './types';\r\nimport * as utils from './utils';\r\nimport { createReducer } from '../../utils';\r\n\r\n/* State shape\r\n[\r\n    {\r\n        product,\r\n        quantity,\r\n    }\r\n]\r\n*/\r\n\r\nconst initialState = [];\r\n\r\nconst checkoutReducer = createReducer(initialState)({\r\n  [types.ADD_PRODUCTS_TO_CHECKOUT]: (state, action) => {\r\n    const { products } = action.payload;\r\n\r\n    if (products.length > 0) {\r\n      const uniqueProductsOfCheckout = products.filter(function(product) {\r\n        return state.indexOf(product) == -1;\r\n      });\r\n      return uniqueProductsOfCheckout;\r\n    } else {\r\n      return [...state];\r\n    }\r\n  },\r\n  [types.REMOVE]: (state, action) => {\r\n    const { product } = action.payload;\r\n    const index = utils.productPositionInCart(state, product);\r\n    return [...state.slice(0, index), ...state.slice(index + 1)];\r\n  },\r\n  [types.CLEAR]: () => [],\r\n});\r\n\r\nexport default checkoutReducer;\r\n","export const SET_CART = 'checkout/SET';\r\nexport const TOGGLE = 'checkout/TOGGLE';\r\nexport const ADD_PRODUCTS_TO_CHECKOUT = 'checkout/ADD_PRODUCTS_TO_CHECKOUT';\r\nexport const CHANGE_QUANTITY = 'checkout/CHANGE_QUANTITY';\r\nexport const REMOVE = 'checkout/REMOVE';\r\nexport const CLEAR = 'checkout/CLEAR';\r\n","export function productPositionInCart( cart, product ) {\r\n    return cart.map( item => item.product.id ).indexOf( product.id );\r\n}\r\n\r\nexport function newCartItem( product, quantity ) {\r\n    return {\r\n        product,\r\n        quantity,\r\n    };\r\n}\r\n","export const ADD = 'serach/ADD';\r\nexport const UPDATE = 'serach/UPDATE';\r\nexport const REMOVE = 'serach/REMOVE';\r\nexport const CLEAR = 'serach/CLEAR';\r\n","export function queryPositionInQueryList(queryList, query) {\r\n  return queryList.map(item => item.key).indexOf(query.key);\r\n}\r\n\r\nexport function newQueryItem(query) {\r\n  return query;\r\n}\r\n","import reducer from './reducers';\r\n\r\nimport * as queryOperations from './operations';\r\nimport * as querySelectors from './selectors';\r\n\r\nexport { queryOperations, querySelectors };\r\n\r\nexport default reducer;\r\n","import * as types from './types';\r\nimport * as utils from './utils';\r\nimport { createReducer } from '../../utils';\r\n\r\n/* State shape\r\n[\r\n    {\r\n       id: uniqueId,\r\n       key: 'searchQuery',\r\n       value: string | product => {name,id,image}\r\n       created: Date,\r\n       lastUpdated: Date\r\n    }\r\n]\r\n*/\r\n\r\nconst initialState = [];\r\n\r\nconst searyQueryReducer = createReducer(initialState)({\r\n  [types.ADD]: (state, action) => {\r\n    const { query } = action.payload;\r\n    const index = utils.queryPositionInQueryList(state, query);\r\n    if (index === -1) {\r\n      return [utils.newQueryItem(query), ...state];\r\n    }\r\n\r\n    const currentItem = state[index];\r\n    const updatedItem = Object.assign({}, currentItem);\r\n    return [...state.slice(0, index), updatedItem, ...state.slice(index + 1)];\r\n  },\r\n  [types.UPDATE]: (state, action) => {\r\n    const { query } = action.payload;\r\n    const oldQuery = state.find(item => item.key !== query.key);\r\n    const tempArrayWithOutOldQueries = state.filter(item => item.key !== query.key);\r\n    return [...tempArrayWithOutOldQueries, { ...oldQuery, ...query }];\r\n  },\r\n  [types.REMOVE]: (state, action) => {\r\n    const { product } = action.payload;\r\n    const index = utils.queryPositionInQueryList(state, product);\r\n    return [...state.slice(0, index), ...state.slice(index + 1)];\r\n  },\r\n  [types.CLEAR]: () => [],\r\n});\r\n\r\nexport default searyQueryReducer;\r\n","import { combineReducers } from \"redux\";\r\nimport * as types from \"./types\";\r\nimport { createReducer } from \"../../utils\";\r\n\r\n/* State shape\r\n{\r\n    details: product,\r\n    list: [ product ],\r\n}\r\n*/\r\n\r\nconst detailsReducer = createReducer( null )( {\r\n    [ types.FETCH_DETAILS_COMPLETED ]: ( state, action ) => action.payload.product,\r\n} );\r\n\r\nconst listReducer = createReducer( [ ] )( {\r\n    [ types.FETCH_LIST_COMPLETED ]: ( state, action ) => action.payload.products,\r\n} );\r\n\r\nexport default combineReducers( {\r\n    details: detailsReducer,\r\n    list: listReducer,\r\n} );\r\n","export const FETCH_DETAILS = \"product/FETCH_DETAILS\";\r\nexport const FETCH_DETAILS_COMPLETED = \"product/FETCH_DETAILS_COMPLETED\";\r\nexport const FETCH_DETAILS_FAILED = \"product/FETCH_DETAILS_FAILED\";\r\n\r\nexport const FETCH_LIST = \"product/FETCH_LIST\";\r\nexport const FETCH_LIST_COMPLETED = \"product/FETCH_LIST_COMPLETED\";\r\nexport const FETCH_LIST_FAILED = \"product/FETCH_LIST_FAILED\";\r\n","import reducer from \"./reducers\";\r\n\r\nimport * as productOperations from \"./operations\";\r\n\r\nexport {\r\n    productOperations,\r\n};\r\n\r\nexport default reducer;\r\n","import { combineReducers } from 'redux';\r\nimport * as types from './types';\r\nimport { createReducer } from '../../utils';\r\n\r\n/* State shape\r\n{\r\n    isAuthenticated: bool,\r\n    redirectAfterLogin: string\r\n}\r\n*/\r\n\r\nconst authReducer = createReducer(false)({\r\n  [types.LOGIN]: () => true,\r\n  [types.LOGOUT]: () => false,\r\n});\r\n\r\nconst redirectAfterLoginReducer = createReducer(null)({\r\n  [types.SET_REDIRECT_AFTER_LOGIN]: (state, action) => action.payload.redirectUrl,\r\n});\r\n\r\nexport default combineReducers({\r\n  isAuthenticated: authReducer,\r\n  redirectAfterLogin: redirectAfterLoginReducer,\r\n});\r\n","export const LOGIN = \"session/LOGIN\";\r\nexport const LOGIN_COMPLETED = \"session/LOGIN_COMPLETED\";\r\nexport const LOGIN_FAILED = \"session/LOGIN_FAILED\";\r\nexport const LOGOUT = \"session/LOGOUT\";\r\nexport const INITIALIZE = \"session/INITIALIZE_SESSION\";\r\nexport const SET_REDIRECT_AFTER_LOGIN = \"session/SET_REDIRECT_AFTER_LOGIN\";\r\nexport const ADD_CUSTOMER_DATA = \"session/ADD_CUSTOMER_DATA\";\r\n","import reducer from \"./reducers\";\r\n\r\nimport * as sessionOperations from \"./operations\";\r\n\r\nexport {\r\n    sessionOperations,\r\n};\r\n\r\nexport default reducer;\r\n","import * as types from './types';\r\nimport { createReducer } from '../../utils';\r\n\r\nconst initialState = [];\r\n\r\nconst cartReducer = createReducer(initialState)({\r\n  [types.ADD_CATEGORIES]: (state, action) => {\r\n    const { categories } = action.payload;\r\n\r\n    if (categories) {\r\n      return categories;\r\n    }\r\n\r\n    return [...state];\r\n  },\r\n\r\n  [types.GET_CATEGORIES]: (state, action) => {\r\n    return [...state];\r\n  },\r\n});\r\n\r\nexport default cartReducer;\r\n","export const ADD_CATEGORIES = 'category/ADD_CATEGORIES';\r\nexport const GET_CATEGORIES = 'category/GET_CATEGORIES';\r\n","import reducer from './reducers';\r\n\r\nimport * as categoryOperations from './operations';\r\nimport * as categorySelectors from './selectors';\r\n\r\nexport { categoryOperations, categorySelectors };\r\n\r\nexport default reducer;\r\n","import * as types from './types';\r\nimport { createReducer } from '../../utils';\r\n\r\nconst initialState = {};\r\n\r\nconst cartReducer = createReducer(initialState)({\r\n  [types.ADD_ITEM_TO_CACHE]: (state, action) => {\r\n    const { response } = action.payload;\r\n\r\n    if (response) {\r\n      return { ...state, ...response };\r\n    }\r\n\r\n    return { ...state };\r\n  },\r\n});\r\n\r\nexport default cartReducer;\r\n","export const ADD_ITEM_TO_CACHE = 'category/ADD_ITEM_TO_CACHE';\r\n","import reducer from './reducers';\r\n\r\nimport * as cacheOperations from './operations';\r\nimport * as cacheSelectors from './selectors';\r\n\r\nexport { cacheOperations, cacheSelectors };\r\n\r\nexport default reducer;\r\n","import * as types from './types';\r\nimport { createReducer } from '../../utils';\r\n\r\nconst initialState = [];\r\n\r\nconst cartReducer = createReducer(initialState)({\r\n  [types.ADD_BRAND]: (state, action) => {\r\n    const { brands } = action.payload;\r\n\r\n    if (brands) {\r\n      return brands;\r\n    }\r\n\r\n    return [...state];\r\n  },\r\n\r\n  [types.GET_BRAND]: (state, action) => {\r\n    return [...state];\r\n  },\r\n});\r\n\r\nexport default cartReducer;\r\n","export const ADD_BRAND = 'category/ADD_BRAND';\r\nexport const GET_BRAND = 'category/GET_BRAND';\r\n","import reducer from './reducers';\r\n\r\nimport * as brandOperations from './operations';\r\nimport * as brandSelectors from './selectors';\r\n\r\nexport { brandOperations, brandSelectors };\r\n\r\nexport default reducer;\r\n","import * as types from './types';\r\nimport { createReducer } from '../../utils';\r\n\r\nconst initialState = [];\r\n\r\nconst cartReducer = createReducer(initialState)({\r\n  [types.ADD_TAGS]: (state, action) => {\r\n    const { tags } = action.payload;\r\n\r\n    if (tags) {\r\n      return tags;\r\n    }\r\n\r\n    return [...state];\r\n  },\r\n\r\n  [types.GET_TAGS]: (state, action) => {\r\n    return [...state];\r\n  },\r\n});\r\n\r\nexport default cartReducer;\r\n","export const ADD_TAGS = 'tag/ADD_TAGS';\r\nexport const GET_TAGS = 'tag/GET_TAGS';\r\n","import reducer from './reducers';\r\n\r\nimport * as tagOperations from './operations';\r\nimport * as tagSelectors from './selectors';\r\n\r\nexport { tagOperations, tagSelectors };\r\n\r\nexport default reducer;\r\n","import { fetch } from \"../utils\";\r\n\r\nconst baseUrl = typeof document === \"undefined\" ? \"http://localhost:7777/api\" : \"/api\";\r\n\r\nconst apiService = ( ) => ( next ) => ( action ) => {\r\n    const result = next( action );\r\n    if ( !action.meta || !action.meta.async ) {\r\n        return result;\r\n    }\r\n\r\n    const { path, method = \"GET\", body } = action.meta;\r\n\r\n    if ( !path ) {\r\n        throw new Error( `'path' not specified for async action ${ action.type }` );\r\n    }\r\n\r\n    const url = `${ baseUrl }${ path }`;\r\n\r\n    return fetch( url, method, body ).then(\r\n        res => handleResponse( res, action, next ),\r\n        err => handleErrors( err, action, next ),\r\n    );\r\n};\r\n\r\nexport default apiService;\r\n\r\nfunction handleErrors( err, action, next ) {\r\n    next( {\r\n        type: `${ action.type }_FAILED`,\r\n        payload: err,\r\n        meta: action.meta,\r\n    } );\r\n\r\n    return Promise.reject( err );\r\n}\r\n\r\nfunction handleResponse( res, action, next ) {\r\n    next( {\r\n        type: `${ action.type }_COMPLETED`,\r\n        payload: res,\r\n        meta: action.meta,\r\n    } );\r\n\r\n    return res;\r\n}\r\n","const REGULAR = [\r\n    \"background: blue\",\r\n    \"color: white\",\r\n].join( \";\" );\r\n\r\nconst SUCCESS = [\r\n    \"background: green\",\r\n    \"color: white\",\r\n].join( \";\" );\r\n\r\nconst STARTED = [\r\n    \"background: darkorange\",\r\n    \"color: white\",\r\n].join( \";\" );\r\n\r\nconst FAILURE = [\r\n    \"background: red\",\r\n    \"color: white\",\r\n].join( \";\" );\r\n\r\nconst createLogger = ( active = true ) => ( store ) => ( next ) => ( action ) => {\r\n    if ( !active ) {\r\n        return next( action );\r\n    }\r\n\r\n    const prevState = store.getState( );\r\n    const result = next( action );\r\n    const nextState = store.getState( );\r\n    logGroupCollapsed( `%c ${ action.type } `, determineStyle( action ) );\r\n    logInfo( \"%cprev state\", \"color: darkorange\", prevState );\r\n    logInfo( \"%caction payload\", \"color: blue\", action.payload );\r\n    logInfo( \"%cnext state\", \"color: darkgreen\", nextState );\r\n    logGroupEnd( );\r\n    return result;\r\n};\r\n\r\nexport default createLogger;\r\n\r\nfunction logGroupCollapsed( ...args ) {\r\n    const logFunction = typeof console.groupCollapsed === \"function\" ? console.groupCollapsed : console.info;\r\n    logFunction( ...args );\r\n}\r\n\r\nfunction logGroupEnd( ...args ) {\r\n    const logFunction = typeof console.groupEnd === \"function\" ? console.groupEnd : console.info;\r\n    logFunction( ...args );\r\n}\r\n\r\nfunction logInfo( ...args ) {\r\n    console.info( ...args );\r\n}\r\n\r\nfunction determineStyle( action ) {\r\n    if ( !action.meta || !action.meta.async ) {\r\n        return REGULAR;\r\n    }\r\n\r\n    if ( action.type.indexOf( \"_COMPLETED\" ) > -1 ) {\r\n        return SUCCESS;\r\n    }\r\n\r\n    if ( action.type.indexOf( \"_FAILED\" ) > -1 ) {\r\n        return FAILURE;\r\n    }\r\n\r\n    return STARTED;\r\n}\r\n","import { createStore, applyMiddleware, combineReducers, compose } from 'redux';\r\nimport { persistStore, persistReducer } from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\nimport * as reducers from './ducks';\r\nimport { apiService } from './middlewares';\r\n\r\nconst rootReducer = combineReducers(reducers);\r\n\r\nconst persistConfig = {\r\n  key: 'shop',\r\n  storage: storage,\r\n  whitelist: ['session'], // which reducer want to store\r\n};\r\n\r\nconst pReducer = persistReducer(persistConfig, rootReducer);\r\n\r\nfunction configureStore(initialState) {\r\n  return createStore(\r\n    pReducer,\r\n    initialState,\r\n    compose(\r\n      applyMiddleware(apiService),\r\n      window.__REDUX_DEVTOOLS_EXTENSION__\r\n        ? window.__REDUX_DEVTOOLS_EXTENSION__()\r\n        : (f) => f\r\n    )\r\n  );\r\n}\r\n\r\nconst store = configureStore({});\r\n\r\nconst persistor = persistStore(store);\r\n\r\nexport { persistor, store };\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider as ReduxProvider } from 'react-redux';\nimport App from './App';\n\n// import redux store\nimport { store } from './state/store';\n\n// import the main files of styles\nimport './styles/_main.scss';\n\n\n// importing react hot loader for hot loading\nimport { AppContainer } from 'react-hot-loader';\n\n\n// Wrap the rendering in a function:\nconst render = () => {\n\tReactDOM.render(\n\t\t<ReduxProvider store={store}>\n\t\t\t<AppContainer>\n\t\t\t\t<App />\n\t\t\t</AppContainer>\n\t\t</ReduxProvider>,\n\t\tdocument.getElementById('root')\n\t);\n};\n\n\n// Render once\nrender();\n\n\n\n// Webpack Hot Module Replacement API\nif (module['hot']) {\n\tmodule['hot'].accept('./App', () => {\n\t\trender();\n\t});\n}\n\n\n"],"sourceRoot":""}