{"version":3,"sources":["components/Field/Input.tsx","state/ducks/busy/utils.js","state/ducks/busy/reducers.js","state/ducks/busy/index.js","state/ducks/cart/utils.js","state/utils/createReducer.js","state/utils/fetch.js","state/ducks/cart/selectors.js","state/ducks/cart/index.js","state/ducks/cart/reducers.js","state/ducks/cart/types.js","state/ducks/wishList/utils.js","state/ducks/wishList/index.js","state/ducks/wishList/reducers.js","state/ducks/wishList/types.js","state/ducks/checkout/selectors.js","state/ducks/checkout/index.js","state/ducks/checkout/reducers.js","state/ducks/checkout/types.js","state/ducks/checkout/utils.js","state/ducks/search/types.js","state/ducks/search/utils.js","state/ducks/search/index.js","state/ducks/search/reducers.js","state/ducks/product/reducers.js","state/ducks/product/types.js","state/ducks/product/index.js","state/ducks/session/reducers.js","state/ducks/session/types.js","state/ducks/session/index.js","state/ducks/category/reducers.js","state/ducks/category/types.js","state/ducks/category/index.js","state/ducks/cache/reducers.js","state/ducks/cache/types.js","state/ducks/cache/index.js","state/ducks/brand/reducers.js","state/ducks/brand/types.js","state/ducks/brand/index.js","state/ducks/tag/reducers.js","state/ducks/tag/types.js","state/ducks/tag/index.js","lib/utils/manupulateURL.js","lib/connector.js","lib/converter.js","hooks/useFetch.ts","hooks/useHandleFetch.ts","pages/auth/login/Login.tsx","pages/auth/login/index.ts","layout/sider/Sider.tsx","layout/sider/index.ts","components/Empty/index.ts","components/Empty/Empty.tsx","layout/header/Header.tsx","layout/header/index.ts","pages/overview/ApiVisits.tsx","pages/overview/OrderOverView.tsx","pages/overview/PlatformVisits.tsx","pages/overview/PageVisits.tsx","pages/overview/Overview.tsx","components/Field/TextArea.tsx","components/MediaLibrary/MediaLibrary.tsx","components/MediaLibrary/index.ts","pages/category/MetaTags.tsx","pages/category/CategoryNewQuickEdit.tsx","components/Placeholders/DataTableSkeleton.tsx","pages/category/CategoryList.tsx","pages/category/AddNewCategory.tsx","pages/category/QuickEdit.tsx","pages/category/CategoryNewEdit.tsx","pages/category/NewCategoryDetail.tsx","components/Field/InputSmall.tsx","components/Notification/Notification.tsx","pages/product/Tags.tsx","pages/product/Brands.tsx","pages/product/Categories.tsx","pages/productBundle/ProductBundleQuickEdit.tsx","pages/productBundle/SelectProducts.tsx","pages/order/AddNewOrderProductItem.tsx","pages/productBundle/SelectedProductItems.tsx","pages/productBundle/AddNewProductBundle.tsx","pages/productBundle/ProductBundleList.tsx","pages/productBundle/ProductBundleEdit.tsx","pages/coupon/CouponProducts.tsx","pages/productBundle/ProductBundleDetail.tsx","pages/brand/AddNewBrand.tsx","pages/brand/BrandQuickEdit.tsx","pages/brand/BrandList.tsx","pages/brand/BrandEdit.tsx","pages/brand/NewBrandDetail.tsx","pages/product/Attributes.tsx","pages/product/Pricing.tsx","pages/product/AddNewProduct.tsx","pages/product/ProductQuickEdit.tsx","pages/product/ProductList.tsx","pages/product/ProductEdit.tsx","pages/product/NewProductDetail.tsx","pages/tag/TagQuickEdit.tsx","pages/tag/AddNewTag.tsx","pages/tag/TagList.tsx","pages/tag/TagEdit.tsx","pages/tag/NewTagDetail.tsx","pages/coupon/CouponEdit.tsx","pages/coupon/CouponDetail.tsx","pages/coupon/OrderedProductsSelectProducts.tsx","pages/coupon/OrderedProductsSelectedProductItems.tsx","pages/coupon/CouponQuickEdit.tsx","pages/coupon/AddNewCoupon.tsx","pages/coupon/CouponList.tsx","pages/customer/AddNewCustomer.tsx","pages/customer/QuickEdit.tsx","pages/customer/CustomerList.tsx","pages/customer/CustomerEdit.tsx","pages/customer/CustomerDetail.tsx","pages/pages/PagesList.tsx","pages/pages/AddNewPage.tsx","pages/attribute/QuickEdit.tsx","pages/attribute/AddAttributeValues.tsx","pages/attribute/AttributeList.tsx","pages/order/OrderInvoice.jsx","pages/order/productItemForOrderDetail.tsx","pages/order/QuickEdit.tsx","pages/order/OrderList.tsx","pages/order/AddNewOrderSummary.tsx","pages/order/CustomersId.tsx","pages/order/AddProducts.tsx","pages/order/AddNewOrder.tsx","pages/order/OrderEdit.tsx","pages/order/OrderNoteEdit.tsx","pages/order/OrderDetail.tsx","pages/order/orderAnalytics/ThisMonthOrderReport.tsx","pages/order/orderAnalytics/ThisWeekOrderReport.tsx","pages/order/orderAnalytics/DateOrderReport.tsx","pages/order/orderAnalytics/HourOrderReport.tsx","pages/order/orderAnalytics/MonthOrderReport.tsx","pages/order/orderAnalytics/YearOrderReport.tsx","pages/order/orderAnalytics/DeliveryRegionReport.tsx","pages/order/orderAnalytics/index.ts","pages/order/orderAnalytics/OrderOverviewReport.tsx","pages/order/ConfigOrderStatus.tsx","pages/settings/ComponentItem.tsx","pages/settings/AddNewComponent.tsx","pages/settings/ComponentListComponentItem.tsx","pages/settings/AddNewComponentItem.tsx","pages/settings/Component.tsx","pages/settings/AddNewTheme.tsx","pages/settings/ManageThemes.tsx","pages/settings/Image.tsx","pages/settings/Invoice.tsx","pages/settings/AdminSiteInfo.tsx","pages/settings/SiteInfoInvoice.tsx","pages/settings/SiteSeo.tsx","pages/settings/ChangeAdminPassword.tsx","pages/settings/SiteInfo.tsx","pages/delivery/DeliveryCharge.tsx","pages/delivery/AddNewRegion.tsx","pages/delivery/QuickEdit.tsx","pages/delivery/Delivery.tsx","pages/sms/SendCustomSMS.tsx","pages/sms/SMSConfiguaration.tsx","pages/sms/Sms.tsx","pages/sms/index.ts","pages/email/ConfigureSTMP.tsx","pages/email/NewCustomerTemplate.tsx","pages/email/OrderStatusTemplateAutoEmail.tsx","pages/email/OrderTemplateAutoEmail.tsx","pages/email/ConfigureAutoEmail.tsx","pages/email/ComposeCustomEmail.tsx","pages/email/InboxEmailDetails.tsx","pages/email/Inbox.tsx","pages/email/Email.tsx","pages/notification/NotificationList.tsx","pages/admins/AccessCheckbox.tsx","pages/admins/QuickEdit.tsx","pages/admins/AddNewAdmin.tsx","pages/admins/AdminList.tsx","pages/admins/AdminEdit.tsx","pages/admins/AdminDetail.tsx","pages/post/Tags.tsx","pages/post/Categories.tsx","pages/post/SelectProducts.tsx","pages/post/SelectedProductItems.tsx","pages/post/PostQuickEdit.tsx","pages/post/AddNewPost.tsx","pages/post/PostList.tsx","pages/post/PostDetail.tsx","pages/post/postTags/QuickEdit.tsx","pages/post/postTags/AddNewPostTag.tsx","pages/post/postTags/PostTagList.tsx","pages/post/postTags/TagEdit.tsx","pages/post/postTags/NewPostTagDetail.tsx","pages/post/postCategory/MetaTags.tsx","pages/post/postCategory/AddNewPostCategory.tsx","pages/post/postCategory/PostCategoryList.tsx","pages/post/postCategory/PostCategoryEdit.tsx","pages/post/postCategory/QuickEdit.tsx","pages/post/postCategory/NewPostCategoryDetail.tsx","pages/staff/AddNewStaff.tsx","pages/staff/QuickEdit.tsx","pages/staff/StaffList.tsx","pages/staff/StaffEdit.tsx","pages/staff/StaffDetail.tsx","pages/expense/QuickEdit.tsx","pages/expense/AddNewExpense.tsx","pages/expense/ExpenseList.tsx","pages/expense/ExpenseEdit.tsx","pages/expense/ExpenseDetail.tsx","pages/dealer/Areas.tsx","pages/dealer/AddNewDealer.tsx","pages/dealer/QuickEdit.tsx","pages/dealer/DealerList.tsx","pages/dealer/DealerEdit.tsx","pages/dealer/DealerDetail.tsx","pages/dealer/Area/AreaQuickEdit.tsx","pages/dealer/Area/AddNewArea.tsx","pages/dealer/Area/AreaList.tsx","pages/dealer/Area/AreaEdit.tsx","pages/dealer/Area/AreaDetail.tsx","layout/content/Content.tsx","layout/content/index.ts","App.tsx","state/middlewares/apiService.js","state/middlewares/logger.js","state/store.js","index.tsx"],"names":["Demo","Input","TextArea","required","addonBefore","label","type","value","defaultValue","onChange","disabled","isError","errorString","name","placeHolder","className","Item","validateStatus","help","style","borderRadius","placeholder","actionShouldBlock","meta","async","blocking","actionFinished","includes","reducer","state","action","utils","productPositionInCart","cart","product","map","item","id","indexOf","newCartItem","quantity","isSelectedForCheckout","initialState","reducerMap","url","method","body","options","headers","Accept","JSON","stringify","isomorphicFetch","then","res","status","Promise","resolve","reject","response","parseStatus","json","createReducer","payload","filter","cartItems","length","index","tempArrayWithOutOldProduct","updatedItem","Object","assign","slice","productPositionInWishList","wishList","productId","wishlist","products","ADD","queryPositionInQueryList","queryList","query","key","types","currentItem","oldQuery","find","tempArrayWithOutOldQueries","detailsReducer","listReducer","combineReducers","details","list","authReducer","redirectAfterLoginReducer","redirectUrl","isAuthenticated","redirectAfterLogin","cartReducer","categories","brands","tags","isObjectEmpty","keys","manupulateURL","urlOptions","params","placeHolders","split","currentValue","console","log","actualPlaceholderValue","replace","fuckValue","join","param","converter","resData","data","formatedData","category","_id","description","productCount","parent","cover","config","thumbnail","icon","image","img","medium","added","title","labels","alt","caption","subCount","subCategory","children","subCat","noti","heading","text","link","read","page","next","convertedData","regularPrice","price","offerPrice","unit","pricing","date","time","venue","brand","parseInt","available","minimum","items","cartItem","cartKey","updated","avalable","isNext","original","post","preparationTime","servingSize","cookingTime","requiredProducts","cat","anotherPrice","startDate","endDate","actualPrice","visit","count","itemId","firstName","lastName","country","city","email","phone","address1","address2","created","code","minimumOrder","maximumOrder","freeProducts","orderedProductsCount","orderedProducts","freeProductsCount","amountType","amount","freeDelivery","maxUsePerUser","tag","recipient","subject","html","event","success","msg","customer","dealerName","dealer","commission","depositMoney","theme","components","component","region","pickUpLocation","countryCode","countryName","charge","availableStock","minimumStock","primaryCategory","inserted","order","shippingAddress","address","shortCode","total","totalPrice","deliveryCharge","deliveryRegion","deliveryName","deliveryPickUpLocation","deliveryCountryName","date_created","paymentMethod","paymentStatus","payment","customerId","billingAddress","generalFormat","dataMap","line_items","paymentItems","number","src","target","navLinkItems","sliderItems","images","sliderRightItems","servicesItems","accountItems","aboutUsItems","Connector","this","format","api","apiMap","server","credentials","Headers","fetch","baseURL","formattedData","error","connector","dataFetchReducer","isLoading","done","Error","useFetch","dependencies","initialData","useReducer","dispatch","useEffect","didCancel","a","request","fetchData","useHandleFetch","validationSchema","Yup","shape","username","min","password","initialValues","Login","loginState","handleLoginFetch","handleSubmit","values","actions","setSubmitting","getisSubmitButtonDisabled","isValid","onSubmit","validateOnBlur","enableReinitialize","handleChange","errors","isSubmitting","touched","setFieldTouched","handleBlur","handleReset","maxWidth","margin","e","onClick","loading","Sider","Layout","Header","Content","Footer","SubMenu","Menu","withRouter","props","useState","collapsed","setcollapsed","width","boxShadow","border","collapsible","onCollapse","selectable","mode","PieChartOutlined","to","GoldOutlined","RadarChartOutlined","TagsOutlined","TagOutlined","BranchesOutlined","FireOutlined","CarOutlined","ShoppingCartOutlined","TeamOutlined","GlobalOutlined","UserOutlined","MailOutlined","MessageOutlined","FileOutlined","FileSearchOutlined","FileAddOutlined","SlidersOutlined","SettingOutlined","UserAddOutlined","BgColorsOutlined","Empty","height","display","justifyContent","alignItems","PRESENTED_IMAGE_SIMPLE","history","useHistory","getAllNotificationState","handleGetAllNOticationFetch","sortItem","sortOrderValue","limitNumber","getAllNotification","typeIcon","background","zIndex","transition","alignContent","push","color","marginTop","marginLeft","cursor","marginRight","placement","overlay","backgroundColor","padding","textAlign","fontSize","href","moment","overflowCount","showZero","TwitterSquareFilled","fontWeight","BellOutlined","LogoutOutlined","Option","Select","RangePicker","DatePicker","MONTHS","TooltipContainerStyles","ApiVisits","selectedApiValue","setSelectedApiValue","setStartDate","setEndDate","demoGraphicVisitsState","handleDemoGraphicVisitsStateFetch","userData","setuserData","metricType","startDateValue","endDateValue","uservisitsDataRes","getDemoGraphicVisitsValue","Date","thisMonth","getMonth","bordered","showSearch","optionFilterProp","filterOption","input","option","toLowerCase","size","x1","y1","x2","y2","offset","stopColor","vertical","strokeDasharray","stroke","dataKey","tickFormatter","orientation","axisLine","tickLine","contentStyle","formatter","fill","showTime","picker","orderAnalyticsVisitsState","handleOrderAnalyticsVisitsStateFetch","orderData","setorderData","ordersDataRes","getAnalyticsOrders","localOptions","COLORS","PlatformVisits","demographicData","setdemographicData","RADIAN","Math","PI","marginBottom","outerRadius","innerRadius","nameKey","cx","cy","midAngle","percent","radius","x","cos","y","sin","dominantBaseline","toFixed","labelLine","entry","CalendarOutlined","Column","Table","ColumnGroup","PageVisits","pageVisitsState","handlePageVisitsStateFetch","visitType","getPageVisitsValue","dataSource","tableLayout","onHeaderRow","column","dataIndex","render","record","textTransform","Overview","handleAnalyticsProductVisitCountFetch","handleAnalyticsCategoryVisitCountFetch","handleGetTotalUserCountFetch","getTotalUserCount","getProductVisitCount","getCategoryVisitCount","OrderOverView","rows","Dragger","Upload","TabPane","Tabs","openSuccessNotification","message","notification","CheckCircleOutlined","MediaLibrary","visible","setvisible","setmyImages","isModalOpenForImages","myImages","isModalOpenForThumbnail","setmyThumbnailImage","myThumbnailImage","fileList","setfileList","uploading","setuploading","selectedimages","setselectedImages","activeImageItem","setactiveImageItem","updateMediaLibrary","handleUpdateMediaLibraryFetch","imageListFromLibraryState","handleImageListFromLibraryFetch","handleDeleteImageFromLibraryFetch","localImageList","setLocalImageList","isDoneOk","setisDoneOk","handleDeleteImageFromImageLibrary","deleteImageLibraryItemRes","newImageList","getImageList","imageListRes","handleUpload","formData","FormData","forEach","file","append","reqwest","processData","withCredentials","uploadProps","multiple","onRemove","filelist","newFileList","splice","beforeUpload","xflelist","handleAddToSelectedList","newselectedImages","handleUpdateSubmit","captoin","updateImageLibraryItemRes","positionInImageList","updateImageList","openErrorNotification","getisUpdateSubmitButtonDisabled","top","onOk","onCancel","bodyStyle","okText","defaultActiveKey","tab","listType","FileImageOutlined","ArrowUpOutlined","lenght","CloseOutlined","CheckOutlined","DeleteOutlined","ImageItemMenu","EllipsisOutlined","onConfirm","cancelText","MetaTags","inputVisible","inputValue","editInputIndex","editInputValue","handleClose","removedTag","setTags","showInput","setState","focus","handleInputChange","handleInputConfirm","handleEditInputChange","handleEditInputConfirm","newTags","saveInputRef","saveEditInputRef","editInput","ref","onBlur","onPressEnter","isLongTag","tagElem","closable","onClose","onDoubleClick","preventDefault","PlusOutlined","React","Component","bnName","bnDescription","metaTitle","bnMetaTitle","metaDescription","bnMetaDescription","metaTags","bnMetaTags","displayOrder","AddNewCategory","addNewCategoryVisible","setAddNewCategoryVisible","categoryList","setcategoryList","categoryDetailData","addCategoryState","handleAddCategoryFetch","handleUpdateCategoryIconFetch","handleAttachImageToItemMultipleFetch","handleAttachImageToItemSingleFetch","handleDetachImageFromItemSingleFetch","handleSetImageAsThumbnailToItemFetch","isparentCategoryChecked","setisparentcategoryChecked","selectedParentId","setselectedParentId","imageUrl","setImageUrl","loadingThumnail","setLoadingThumbnail","imageFile","setImagefile","bnTags","setBnTags","coverImageId","setCoverImageId","setMyGoddamnImages","imagesIds","trim","aboutToUpdatedImageIds","imageId","collection","bn","addCategoryRes","resetForm","handleSetImageAsThumnail","handleDetachSingleImage","thumbnailRes","onSwitchChange","checked","handleCancel","onChangeSelect","callback","reader","FileReader","addEventListener","result","readAsDataURL","getBase64","setNewIcon","iconUrl","uploadButton","LoadingOutlined","okButtonProps","htmlType","defaultChecked","InfoCircleOutlined","showUploadList","newImages","handleImagesDelete","FileImageFilled","DataTable","speed","viewBox","foregroundColor","rx","ry","r","metadata","github","filename","Search","MyTable","activeCategoryForEdit","setactiveCategoryForEdit","handleDeleteCategoryFetch","handleDeleteCategory","deleteCategoryRes","newCategoryList","objectFit","align","EditOutlined","CategoryNewQuickEdit","categoryState","handleCategoryListFetch","isSubCategory","productCountValue","setCategories","enterButton","handleSearch","DataTableSkeleton","setisModalOpenForThumbnail","setisModalOpenForImages","bnData","bnFormData","get","err","i","QuickEdit","updateCategoryState","handleUpdateCategoryFetch","updateCategoryRes","positionInTag","updateCategoryList","setcategoryDetailData","NewBrandDetail","CoolInput","categoryDetailState","handleCategoryDetailFetch","categoryProductsState","handleCategoryProductsFetch","useParams","categoryId","categoryEditVisible","setCategoryEditVisible","categoryDetail","setcategoryDetail","categoryDetailDataRes","getCategoryDetail","getCategoryProducts","row","imgs","columns","localIndex","columnNumber","getImagesInCollumn","CategoryNewEdit","avatar","paragraph","paddingTop","overflow","allowClear","ExclamationCircleOutlined","CheckableTag","Tag","Tags","setTagIds","setSelectedTags","selectedTags","setoptions","tagState","handleTagListFetch","searchValue","setsearchValue","selectedCategoryIds","selectedcategory","tagListRes","tagOptions","borderColor","onSearch","categoryNames","newOptions","nextSelectedTags","t","Brands","setBrandId","brandId","productDetailState","setSelectedBrandId","brandState","brandListRes","brandOptions","setBrands","onFocus","val","Categories","setcategoryIds","categoryOptions","setCategoryOptions","categoryListRes","checkable","checkedKeys","onSelect","selectedKeys","info","onCheck","checkedIds","treeData","defaultExpandAll","checkStrictly","bundlePrice","AddNewProduct","bundleList","productList","setBundleList","setProductList","productDetailData","updateProductState","handleProductDetailFetch","categoryids","tagIds","setPricing","setDateFeild","setTimeFeild","setDescription","setBNDescription","setMetaTags","setBnMetaTags","productIds","setProductIds","addProductState","handleAddProductFetch","getProductDetail","regular","offer","setPrice","variation","model","metaUnit","addProductRes","positionInAttribute","updateProductList","newProductList","isTrue","categoryIds","editor","ClassicEditor","onInit","getData","InputSmall","selectedOpions","setselectedOptions","isProductIdsfirstTime","selectItems","o","CartOverLayCartItem","handleProductFetch","setProduct","setIsLoading","modifiedPrice","setModifiedPrice","selectedVariationId","setSelectedVariationId","getAndSetProduct","handleChangeQuantity","updateAttributeList","convertAttributeValuesToStringValue","attribute","attributeValue","pricingOptions","pricingItem","pricingOption","getPricingOptions","priceItem","getPriceByVariationId","tagId","handleAttributeChange","AddNewOrderSummary","flexDirection","AddNewOrderProductItem","SelectProducts","SelectedProductItems","setTagList","handleDeleteTagFetch","handleDeleteTag","deleteTagRes","newtagList","ProductBundleQuickEdit","TagList","tagList","productType","newTagList","AddNewProductBundle","CouponProducts","productEditVisible","setProductEditVisible","ProductBundleEdit","AddNewBrand","brandList","setBrandList","updateBrandState","handleUpdateBrandFetch","visibleMedia","setvisibleMedia","addBrandRes","brandDetailData","brandEditVisible","setBrandEditVisible","brandDetailState","handleBrandDetailFetch","myGoddamnImages","getBrandDetail","updateBrandRes","destroyOnClose","handleDeleteBrandFetch","handleDeleteBrand","deleteBrandRes","newBrandList","BrandQuickEdit","handlebrandListFetch","setBrandDetailData","brandProductsState","handleBrandProductsFetch","brandDetailRes","getBrandProducts","BrandEdit","Complete","setAttributeList","attributeList","suggestedOptions","setsuggesteOptions","attributeLisState","attributeItem","setAttributeITem","manupulatedOptions","suggestedOption","toUpperCase","Pricing","handleAddPricing","handleUpdatePricing","isPricingEditActive","setprice","stock","setStock","attributeListItems","attributeKey","handlePriceChange","handleStockChange","Attributes","minHeight","purchaseLimit","bnUnit","editpricingItem","setEditPricingItem","pricingTagActiveKey","setpricingTagActiveKey","seTisPricingEditActive","updatePricingList","animated","tabPosition","activeKey","handleEditPricing","newPricing","handleDeletePricing","textDecoration","handleUpdateProductFetch","updatedProductRes","handleDeleteProductFetch","handleDeleteProduct","deleteProductRes","ProductQuickEdit","productState","handleProductListFetch","setProducts","setProductDetailData","productDetailRes","ProductEdit","tagEditVisible","setTagEditVisible","tagDetailData","updateTagState","updateTagRes","updateTagList","addTagState","handleAddTagFetch","addTagRes","TagQuickEdit","AddNewTag","setTagDetailData","tagDetailState","handleTagDetailFetch","tagProductsState","handleTagProductsFetch","tagDetailRes","getTagProducts","TagEdit","CouponEdit","addCouponState","handleAddCouponStateFetch","freeProductIds","freeProductList","setFreeProductList","OrderedProductsSelectProducts","OrderedProductsSelectedProductItems","CouponQuickEdit","Couponlist","AddNewCoupon","max","zipCode","customerList","setCustomerList","addCustomerState","handleAddCustomerFetch","selectedCountryValue","setselectedCountryValue","selectedCityValue","setselectedCityValue","countryOptions","setcountryOptions","cityOptions","setcityOptions","countryListState","handleCountryListFetch","cityListState","handleCityListFetch","addCustomerRes","onChangeCity","onChangeCountry","CountryListRes","setCountries","cityListRes","setCities","notFoundContent","updateCustomerState","handleUpdateCustomerFetch","updateCustomerRes","handleDeleteCustomerFetch","handleDeleteCustomer","deleteCustomerRes","newCustomerList","customerState","handleCustomerListFetch","customers","setCustomers","AddNewCustomer","customerDetailState","handleCustomerDetailFetch","orderListState","handleOrderListFetch","customerDetailData","setCustomerDetailData","customerDetailDataRes","getCustomerDetail","getOrderList","CustomerEdit","handleDeletePageFetch","handleDeletePage","deletePageRes","PageList","pageList","setPageList","pageState","handlePagsListFetch","pages","setPages","Steps","Step","content","bnContent","AddNewPage","addPageState","handleAddPageFetch","setContent","setBnContent","handleAddPageSubmit","addOrderRes","EditableTagGroup","AttributeList","AddAttributeValues","setShowInvoice","showInvoice","orderDetailState","handleOrderDetailFetch","getOrderDetail","window","print","cellPadding","cellSpacing","bgcolor","fontFamily","lineHeight","verticalAlign","letterSpacing","colSpan","borderBottom","whiteSpace","setOrderList","orderList","updateOrderState","handleUpdateOrderFetch","addRegionRes","updateRegionList","OrderInvoice","handleUpdateOrderStatusFetch","handleUpdateOrderStatus","newStatus","newOrderstatus","updateOrderStatusRes","updateOrderList","StatusItemMenu","DownOutlined","orderState","handleRegionListFetch","orderStatusFilterValue","setorderStatusFilterValue","statusValue","regions","setOrders","newOrderList","memo","ShopOutlined","setCustomerId","setSelectedCustomerData","customerData","productListState","productOptions","additionalInfo","steps","AddNewOrder","addOrderState","handleOrderFetch","current","setCurrent","selectedCustomerData","customerListState","deliveryRegionState","handleDeliveryRegionFetch","deliveryRegionName","setDeliveryRegionName","selectedRegion","setSelectedRegion","regionDeliveryCharge","setregionDeliveryCharge","isDeliveryChargeExists","cityName","getAndSetShippingDeliveryCharge","handleCheckoutSubmit","delivery","CustomersId","AddProducts","Group","flexWrap","deliveryRegionItem","handleDeviliveryRegionChange","ClockCircleOutlined","CaretRightOutlined","CaretLeftOutlined","summary","note","setOrderNotes","orderNotes","activeNote","orderDetailNotesState","handleOrderDetailNotesFetch","handleDeleteOrderNoteFetch","activeOrderNote","setActiveOrderNote","isOrderNoteEdit","setIsOrderNoteEdit","handleDeleteOrderNote","newOrderNoteList","OrderNoteEdit","OrderEdit","flex","minWidth","noteItem","getMonthNameByOrder","WEEEK","getWeekNameByOrder","getHourFormatter","DeliveryRegionReport","OrderOverviewReport","ThisWeekOrderReport","ThisMonthOrderReport","DateOrderReport","HourOrderReport","MonthOrderReport","YearOrderReport","ConfigOrderStatus","setItemsList","itemsList","componentItem","localComponentItem","setlocalComponentItem","handleComponentItemsChange","updateComponentList","groupName","componentList","setComponentList","addComponentState","handleAddComponentFetch","addComponentRes","handleAddComponentItem","itemComponent","ComponentItem","componentUpdate","isLoadingUpdate","Set","SaveOutlined","updateComponentByAddingItem","componentId","Panel","Collapse","genExtra","updateComponentByDeleting","stopPropagation","genExtraForGroup","setitemVisible","handleDeleteComponent","setComponentId","groupVisible","setgroupVisible","itemVisible","componentState","handleComponentListFetch","handleDeleteComponentFetch","updateComponentState","handleUpdateComponentFetch","imageValue","setComponents","deleteComponentRes","newComponentList","positionInItemsOfComponent","componentIndex","positionInComponents","itemIndex","manupulatedLocalComponentForTheReq","updatedItems","manupulatedUpdatedItems","manupulatedUpdatedItem","updateComponentRes","accordion","expandIconPosition","expandIcon","isActive","rotate","header","extra","ComponentListComponentItem","AddNewComponent","AddNewComponentItem","footer","themeList","setThemeList","addThemeState","handleAddthemeFetch","setselectedThemeTypeValue","setname","thumbnailFile","setThumbnailFile","addThemeRes","path","InboxOutlined","themeState","handleThemeListFetch","handleActiveThemeFetch","handleDeleteThemeFetch","themes","setThemes","handleActiveTheme","activeThemeRes","handleDeleteTheme","deleteThemeRes","newThemeList","danger","AddNewTheme","Image","Invoice","adminEmail","adminName","UpdateSiteinfo","UpdateSiteSettingsState","handleUpdateSiteSettingsFetch","siteSettingsState","handlSiteSettingsFetch","getSiteSettings","addSiteInfoRes","invoiceTitle","additionalText","updateInfovSettingsState","handleUpdateInvoiceSettingsFetch","InvoiceSettingsState","handlSiteInvoiceSettingsFetch","updateInvoiceRes","UpdateSiteSEO","newPassword","newPassword2","oneOf","newPass","ChangeAdminPassword","newPassRepeat","paddingRight","SiteInfo","handleUpdateSiteLogoAndIconFetch","iconimageUrl","setIconImageUrl","loadingIcon","setloadingIcon","appLogo","setAppLogo","loadingAppLogo","setloadingAppLogo","iconUploadButton","appIconUploadButton","AdminSiteInfo","onError","SiteSeo","SiteInfoInvoice","DeliveryCharge","deliveryChargeItem","setdeliveryChargeList","deliveryChargeList","setdeliveryCharge","handleDeliveryChargeChange","AddNewRegion","regionList","setRegionList","addRegionState","handleRegionFetch","handleAddDeliveryCharge","updateRegionState","handleUpdateRegionFetch","handleDeleteRegioFetch","handleDeleteRegion","deleteRegionRes","newRegionList","regionState","setRegions","SendCustomSMS","setText","setrecipient","tokenSeparators","SendOutlined","InfoCircleFilled","SMSConfiguaration","configureSMSStata","handleconfigureSMSFetch","Sms","ConfigureSTMP","getEmailConfigurationState","handleGetEmailConfigurationFetch","emailConfigurationState","handleEmailConfigurationFetch","setIsAuthenticated","configurationData","setConfigurationData","getEmailConfiguration","fromEmail","fromName","host","encryption","port","smtpUsername","smtpPassword","handleAuthenticatedChange","setVisible","autoEmailTemplate","handleAutoEmailTemplateFetch","setcustomer","admin","setadmin","getConfigurationAutoEmailTemplateRes","eventName","getCustomerAutoEmail","overflowY","ConfigureAutoEmail","getAutoEmailConfigurationState","handleGetAutoEmailConfigurationFetch","configureAutoEmailConfigurationState","handleAutoEmailConfigurationFetch","isnewCustomerAdmin","setnewCustomerAdmin","isnewCustomerCustomer","setnewCustomerCustomer","isorderAdmin","setorderAdmin","isorderStatusAdmin","setorderStatusAdmin","isorderCustomer","setorderCustomer","isorderStatusCustomer","setIsorderStatusCustomer","newcustomermodal","setnewcustomermodal","ordermodal","setordermodal","orderStatusmodal","setorderStatusmodal","autoEmailData","setAutoEmailData","getAutoEmailConfiguration","handleUpdateAutoEmail","newCustomer","user","orderStatus","updateAutoEmailRes","NewCustomerTemplate","OrderStatusTemplateAutoEmail","OrderTemplateAutoEmail","ComposeCustomEmail","sendCustomerEmailState","handleSendCustomEmailFetch","sethtml","InboxEmailDetails","setSelectedEmailId","getEmailDetailState","handleGetEmailListFetch","LeftOutlined","ReactHtmlParser","Inbox","getEmailListState","selectedEmailId","substring","PlusCircleOutlined","NotificationList","AccessCheckbox","checkedList","setCheckedList","plainOptions","interminate","setInterminate","checkAll","setCheckAll","indeterminate","accessItem","span","role","accesscheckedList","setAccessCheckedList","access","password2","passwordConfirmation","AddNewAdminRoles","AddNewAdmin","AdminEdit","bnBody","bnPreparationTime","bnServingSize","bnCookingTime","setBody","setBnBody","categoryOne","tagsOne","AddNewPostCategory","AddNewStaff","StaffEdit","AddNewExpense","ExpenseEdit","dealerArea","Areas","area","areas","registeredCustomerListState","handleRegisteredCustomerListFetch","getRegisteredOrderList","hasSider","exact","NewCategoryDetail","BrandList","NewProductDetail","ProductBundleList","ProductBundleDetail","CouponList","PostList","PostTagList","PostCategoryList","PostDetail","NewPostTagDetail","NewPostCategoryDetail","CouponDetail","NewTagDetail","OrderList","OrderDetail","DealerList","AreaList","AreaDetail","DealerDetail","StaffList","StaffDetail","ExpenseList","ExpenseDetail","CustomerDetail","PagesList","Delivery","ManageThemes","AdminList","AdminDetail","Email","App","baseUrl","document","apiService","handleResponse","handleErrors","rootReducer","reducers","persistConfig","storage","whitelist","pReducer","persistReducer","store","createStore","compose","applyMiddleware","__REDUX_DEVTOOLS_EXTENSION__","f","persistStore","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.ab063cc6.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Form, Input } from 'antd';\r\n\r\nconst { TextArea } = Input;\r\n\r\n\r\n\r\ninterface Props {\r\n    label?: string;\r\n    type?: string;\r\n    defaultValue?: string;\r\n    value?: string;\r\n    onChange?: any;\r\n    disabled?: boolean;\r\n    isError?: boolean;\r\n    errorString?: string;\r\n    name?: string;\r\n    addonBefore?: string;\r\n    required?: boolean;\r\n    placeHolder?:string; \r\n}\r\n\r\nconst Demo = ({ required, addonBefore, label, \r\n    type, defaultValue,value, onChange, disabled,\r\n     isError, errorString, name,\r\n     placeHolder\r\n    }: Props) => {\r\n    return (\r\n        <>\r\n            {label && (\r\n                <h3 className='inputFieldLabel'>\r\n                    {label}\r\n                </h3>\r\n            )}\r\n\r\n            <Form.Item\r\n                // hasFeedback={true}\r\n                validateStatus={isError ? \"error\" : \"\"}\r\n                // hasFeedback validateStatus=\"success\"\r\n                help={errorString}\r\n                // rules={[{ required: true }]}\r\n                >\r\n\r\n                <Input\r\n                    required={required}\r\n                    type={type}\r\n                    addonBefore={addonBefore}\r\n                    style={{\r\n                        borderRadius: '0'\r\n                    }}\r\n                    name={name}\r\n                    disabled={disabled}\r\n                    value={value}\r\n                    onChange={onChange}\r\n                    className='inputclassName'\r\n                    placeholder={placeHolder}\r\n                     />\r\n\r\n            </Form.Item>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Demo; ","export function actionShouldBlock( meta ) {\r\n    return !meta || !meta.async || !meta.blocking;\r\n}\r\n\r\nexport function actionFinished ( type ) {\r\n    return type.includes( \"_COMPLETED\" ) || type.includes( \"_FAILED\" );\r\n}\r\n","import * as utils from \"./utils\";\r\n\r\nconst busyReducer = ( state = 0, action ) => {\r\n    if ( utils.actionShouldBlock( action.meta ) ) {\r\n        return state;\r\n    }\r\n    if ( utils.actionFinished( action.type ) ) {\r\n        return state - 1;\r\n    }\r\n    return state + 1;\r\n};\r\n\r\nexport default busyReducer;\r\n","import reducer from \"./reducers\";\r\n\r\nexport default reducer;\r\n","export function productPositionInCart(cart, product) {\r\n  return cart.map(item => item.product.id).indexOf(product.id);\r\n}\r\n\r\nexport function newCartItem(product, quantity, isSelectedForCheckout) {\r\n  return {\r\n    product,\r\n    quantity,\r\n    isSelectedForCheckout,\r\n  };\r\n}\r\n","export default ( initialState ) => ( reducerMap ) => ( state = initialState, action ) => {\r\n    const reducer = reducerMap[ action.type ];\r\n    return reducer ? reducer( state, action ) : state;\r\n};\r\n","import isomorphicFetch from 'isomorphic-fetch';\r\n\r\nexport default (url, method, body) => {\r\n\tconst options = {\r\n\t\tmethod,\r\n\t\theaders: requestHeaders(),\r\n\t\tbody: method !== 'GET' ? JSON.stringify(body) : null\r\n\t};\r\n\r\n\treturn isomorphicFetch(url, options).then(res =>\r\n\t\tparseStatus(res.status, res.json())\r\n\t);\r\n};\r\n\r\nfunction parseStatus(status, res) {\r\n\treturn new Promise((resolve, reject) => {\r\n\t\tif (status >= 200 && status < 300) {\r\n\t\t\tres.then(response => resolve(response));\r\n\t\t} else {\r\n\t\t\tres.then(response => reject({ status, response }));\r\n\t\t}\r\n\t});\r\n}\r\n\r\nfunction requestHeaders() {\r\n\treturn {\r\n\t\tAccept: 'application/json',\r\n\t\t'Content-Type': 'application/json'\r\n\t};\r\n}\r\n","export function getCartItemQuantity(cart, id) {\r\n  return cart.find((item) => item.product.id === id).quantity;\r\n}\r\n\r\nexport const getTotalPriceOfCartItems = (cartItems) => {\r\n  if (!cartItems.length > 0) {\r\n    return 0;\r\n  }\r\n\r\n  const prices = cartItems.map((cartItem) => {\r\n    return cartItem.quantity * parseInt(cartItem.product['price']) || 0;\r\n  });\r\n\r\n  const totalPrice = prices.reduce((a, b) => {\r\n    return a + b;\r\n  }, 0);\r\n  return totalPrice;\r\n};\r\n","import reducer from \"./reducers\";\r\n\r\nimport * as cartOperations from \"./operations\";\r\nimport * as cartSelectors from \"./selectors\";\r\n\r\nexport {\r\n    cartOperations,\r\n    cartSelectors,\r\n};\r\n\r\nexport default reducer;\r\n","import * as types from './types';\r\nimport * as utils from './utils';\r\nimport { createReducer } from '../../utils';\r\n\r\n/* State shape\r\n[\r\n    {\r\n        product,\r\n        quantity,\r\n    }\r\n]\r\n*/\r\n\r\nconst initialState = [];\r\n\r\nconst cartReducer = createReducer(initialState)({\r\n  [types.TOGGLE]: (state, action) => {\r\n    const { product, quantity, isSelectedForCheckout } = action.payload;\r\n    const index = utils.productPositionInCart(state, product);\r\n    if (index === -1) {\r\n      return [\r\n        utils.newCartItem(product, quantity, isSelectedForCheckout),\r\n        ...state,\r\n      ];\r\n    }\r\n\r\n    const tempArrayWithOutOldProduct = state.filter(\r\n      (item) => item.product.id !== product.id\r\n    );\r\n\r\n    return tempArrayWithOutOldProduct;\r\n  },\r\n\r\n  [types.ADD_PRODUCTS_TO_CART]: (state, action) => {\r\n    const { cartItems } = action.payload;\r\n\r\n    if (cartItems.length > 0) {\r\n      return cartItems;\r\n    } else {\r\n      return [...state];\r\n    }\r\n  },\r\n\r\n  [types.SELECT_PRODUCT_FOR_CHECKOUT]: (state, action) => {\r\n    const { product } = action.payload;\r\n\r\n    const index = utils.productPositionInCart(state, product.product);\r\n    if (index === -1) {\r\n      return [...state, { ...product, isSelectedForCheckout: true }];\r\n    } else if (index !== -1 && !product.isSelectedForCheckout) {\r\n      const tempArrayWithOutOldProduct = state.filter(\r\n        (item) => item.product.id !== product.product.id\r\n      );\r\n\r\n      return [\r\n        ...tempArrayWithOutOldProduct,\r\n        { ...product, isSelectedForCheckout: true },\r\n      ];\r\n    }\r\n\r\n    const tempArrayWithOutOldProduct = state.filter(\r\n      (item) => item.product.id !== product.product.id\r\n    );\r\n\r\n    return [\r\n      ...tempArrayWithOutOldProduct,\r\n      { ...product, isSelectedForCheckout: false },\r\n    ];\r\n  },\r\n\r\n  [types.CHANGE_QUANTITY]: (state, action) => {\r\n    const { product, quantity } = action.payload;\r\n    const index = utils.productPositionInCart(state, product);\r\n\r\n    const updatedItem = Object.assign({}, state[index], { quantity });\r\n    return [...state.slice(0, index), updatedItem, ...state.slice(index + 1)];\r\n  },\r\n  [types.REMOVE]: (state, action) => {\r\n    const { product } = action.payload;\r\n    const index = utils.productPositionInCart(state, product);\r\n    return [...state.slice(0, index), ...state.slice(index + 1)];\r\n  },\r\n  [types.CLEAR]: () => [],\r\n});\r\n\r\nexport default cartReducer;\r\n","export const SET_CART = 'cart/SET';\r\nexport const TOGGLE = 'cart/TOGGLE';\r\nexport const ADD_PRODUCTS_TO_CART = 'cart/ADD_PRODUCTS_TO_CART';\r\nexport const SELECT_PRODUCT_FOR_CHECKOUT = 'wishList/SELECT_PRODUCT_FOR_CHECKOUT';\r\nexport const CHANGE_QUANTITY = 'cart/CHANGE_QUANTITY';\r\nexport const REMOVE = 'cart/REMOVE';\r\nexport const CLEAR = 'cart/CLEAR';\r\n","export function productPositionInWishList(wishList, productId) {\r\n  return wishList.map(item => item).indexOf(productId);\r\n}\r\n","import reducer from './reducers';\r\n\r\nimport * as wishListOperations from './operations';\r\nimport * as wishListSelectors from './selectors';\r\n\r\nexport { wishListOperations, wishListSelectors };\r\n\r\nexport default reducer;\r\n","import * as types from './types';\r\nimport * as utils from './utils';\r\nimport { createReducer } from '../../utils';\r\n\r\n/* State shape\r\n[\r\n    {\r\n        product\r\n    }\r\n]\r\n*/\r\n\r\nconst initialState = [];\r\n\r\nconst wishListReducer = createReducer(initialState)({\r\n  [types.TOGGLE]: (state, action) => {\r\n    const { productId } = action.payload;\r\n\r\n    const index = utils.productPositionInWishList(state, productId);\r\n    if (index === -1) {\r\n      return [...state, productId];\r\n    }\r\n\r\n    const tempArrayWithOutOldProduct = state.filter(\r\n      (item) => item !== productId\r\n    );\r\n\r\n    return tempArrayWithOutOldProduct;\r\n  },\r\n  [types.ADD_WISHLIST]: (state, action) => {\r\n    const wishlist = action.payload;\r\n    return [...wishlist];\r\n  },\r\n\r\n  [types.REMOVE]: (state, action) => {\r\n    const { productId } = action.payload;\r\n    const index = utils.productPositionInWishList(state, productId);\r\n    return [...state.slice(0, index), ...state.slice(index + 1)];\r\n  },\r\n  [types.CLEAR]: () => [],\r\n});\r\n\r\nexport default wishListReducer;\r\n","export const TOGGLE = 'wishList/TOGGLE';\r\nexport const ADD_WISHLIST = 'wishList/ADD_WISHLIST';\r\nexport const REMOVE = 'wishList/REMOVE';\r\nexport const CLEAR = 'wishList/CLEAR';\r\n","export function getCartItemQuantity( cart, id ) {\r\n    return cart.find( item => item.product.id === id ).quantity;\r\n}\r\n\r\n\r\nexport const getTotalPriceOfCartItems = (cartItems) => {\r\n    if(!cartItems.length > 0){\r\n        return 0; \r\n    }\r\n\r\n    return cartItems.reduce((a,b) => {\r\n        return !(b.quantity > 1) && a + +b.product.price || +b.product.price * b.quantity\r\n    },0); \r\n\r\n}","import reducer from './reducers';\r\n\r\nimport * as checkoutOperations from './operations';\r\nimport * as checkoutSelectors from './selectors';\r\n\r\nexport { checkoutOperations, checkoutSelectors };\r\n\r\nexport default reducer;\r\n","import * as types from './types';\r\nimport * as utils from './utils';\r\nimport { createReducer } from '../../utils';\r\n\r\n/* State shape\r\n[\r\n    {\r\n        product,\r\n        quantity,\r\n    }\r\n]\r\n*/\r\n\r\nconst initialState = [];\r\n\r\nconst checkoutReducer = createReducer(initialState)({\r\n  [types.ADD_PRODUCTS_TO_CHECKOUT]: (state, action) => {\r\n    const { products } = action.payload;\r\n\r\n    if (products.length > 0) {\r\n      const uniqueProductsOfCheckout = products.filter(function(product) {\r\n        return state.indexOf(product) == -1;\r\n      });\r\n      return uniqueProductsOfCheckout;\r\n    } else {\r\n      return [...state];\r\n    }\r\n  },\r\n  [types.REMOVE]: (state, action) => {\r\n    const { product } = action.payload;\r\n    const index = utils.productPositionInCart(state, product);\r\n    return [...state.slice(0, index), ...state.slice(index + 1)];\r\n  },\r\n  [types.CLEAR]: () => [],\r\n});\r\n\r\nexport default checkoutReducer;\r\n","export const SET_CART = 'checkout/SET';\r\nexport const TOGGLE = 'checkout/TOGGLE';\r\nexport const ADD_PRODUCTS_TO_CHECKOUT = 'checkout/ADD_PRODUCTS_TO_CHECKOUT';\r\nexport const CHANGE_QUANTITY = 'checkout/CHANGE_QUANTITY';\r\nexport const REMOVE = 'checkout/REMOVE';\r\nexport const CLEAR = 'checkout/CLEAR';\r\n","export function productPositionInCart( cart, product ) {\r\n    return cart.map( item => item.product.id ).indexOf( product.id );\r\n}\r\n\r\nexport function newCartItem( product, quantity ) {\r\n    return {\r\n        product,\r\n        quantity,\r\n    };\r\n}\r\n","export const ADD = 'serach/ADD';\r\nexport const UPDATE = 'serach/UPDATE';\r\nexport const REMOVE = 'serach/REMOVE';\r\nexport const CLEAR = 'serach/CLEAR';\r\n","export function queryPositionInQueryList(queryList, query) {\r\n  return queryList.map(item => item.key).indexOf(query.key);\r\n}\r\n\r\nexport function newQueryItem(query) {\r\n  return query;\r\n}\r\n","import reducer from './reducers';\r\n\r\nimport * as queryOperations from './operations';\r\nimport * as querySelectors from './selectors';\r\n\r\nexport { queryOperations, querySelectors };\r\n\r\nexport default reducer;\r\n","import * as types from './types';\r\nimport * as utils from './utils';\r\nimport { createReducer } from '../../utils';\r\n\r\n/* State shape\r\n[\r\n    {\r\n       id: uniqueId,\r\n       key: 'searchQuery',\r\n       value: string | product => {name,id,image}\r\n       created: Date,\r\n       lastUpdated: Date\r\n    }\r\n]\r\n*/\r\n\r\nconst initialState = [];\r\n\r\nconst searyQueryReducer = createReducer(initialState)({\r\n  [types.ADD]: (state, action) => {\r\n    const { query } = action.payload;\r\n    const index = utils.queryPositionInQueryList(state, query);\r\n    if (index === -1) {\r\n      return [utils.newQueryItem(query), ...state];\r\n    }\r\n\r\n    const currentItem = state[index];\r\n    const updatedItem = Object.assign({}, currentItem);\r\n    return [...state.slice(0, index), updatedItem, ...state.slice(index + 1)];\r\n  },\r\n  [types.UPDATE]: (state, action) => {\r\n    const { query } = action.payload;\r\n    const oldQuery = state.find(item => item.key !== query.key);\r\n    const tempArrayWithOutOldQueries = state.filter(item => item.key !== query.key);\r\n    return [...tempArrayWithOutOldQueries, { ...oldQuery, ...query }];\r\n  },\r\n  [types.REMOVE]: (state, action) => {\r\n    const { product } = action.payload;\r\n    const index = utils.queryPositionInQueryList(state, product);\r\n    return [...state.slice(0, index), ...state.slice(index + 1)];\r\n  },\r\n  [types.CLEAR]: () => [],\r\n});\r\n\r\nexport default searyQueryReducer;\r\n","import { combineReducers } from \"redux\";\r\nimport * as types from \"./types\";\r\nimport { createReducer } from \"../../utils\";\r\n\r\n/* State shape\r\n{\r\n    details: product,\r\n    list: [ product ],\r\n}\r\n*/\r\n\r\nconst detailsReducer = createReducer( null )( {\r\n    [ types.FETCH_DETAILS_COMPLETED ]: ( state, action ) => action.payload.product,\r\n} );\r\n\r\nconst listReducer = createReducer( [ ] )( {\r\n    [ types.FETCH_LIST_COMPLETED ]: ( state, action ) => action.payload.products,\r\n} );\r\n\r\nexport default combineReducers( {\r\n    details: detailsReducer,\r\n    list: listReducer,\r\n} );\r\n","export const FETCH_DETAILS = \"product/FETCH_DETAILS\";\r\nexport const FETCH_DETAILS_COMPLETED = \"product/FETCH_DETAILS_COMPLETED\";\r\nexport const FETCH_DETAILS_FAILED = \"product/FETCH_DETAILS_FAILED\";\r\n\r\nexport const FETCH_LIST = \"product/FETCH_LIST\";\r\nexport const FETCH_LIST_COMPLETED = \"product/FETCH_LIST_COMPLETED\";\r\nexport const FETCH_LIST_FAILED = \"product/FETCH_LIST_FAILED\";\r\n","import reducer from \"./reducers\";\r\n\r\nimport * as productOperations from \"./operations\";\r\n\r\nexport {\r\n    productOperations,\r\n};\r\n\r\nexport default reducer;\r\n","import { combineReducers } from 'redux';\r\nimport * as types from './types';\r\nimport { createReducer } from '../../utils';\r\n\r\n/* State shape\r\n{\r\n    isAuthenticated: bool,\r\n    redirectAfterLogin: string\r\n}\r\n*/\r\n\r\nconst authReducer = createReducer(false)({\r\n  [types.LOGIN]: () => true,\r\n  [types.LOGOUT]: () => false,\r\n});\r\n\r\nconst redirectAfterLoginReducer = createReducer(null)({\r\n  [types.SET_REDIRECT_AFTER_LOGIN]: (state, action) => action.payload.redirectUrl,\r\n});\r\n\r\nexport default combineReducers({\r\n  isAuthenticated: authReducer,\r\n  redirectAfterLogin: redirectAfterLoginReducer,\r\n});\r\n","export const LOGIN = \"session/LOGIN\";\r\nexport const LOGIN_COMPLETED = \"session/LOGIN_COMPLETED\";\r\nexport const LOGIN_FAILED = \"session/LOGIN_FAILED\";\r\nexport const LOGOUT = \"session/LOGOUT\";\r\nexport const INITIALIZE = \"session/INITIALIZE_SESSION\";\r\nexport const SET_REDIRECT_AFTER_LOGIN = \"session/SET_REDIRECT_AFTER_LOGIN\";\r\nexport const ADD_CUSTOMER_DATA = \"session/ADD_CUSTOMER_DATA\";\r\n","import reducer from \"./reducers\";\r\n\r\nimport * as sessionOperations from \"./operations\";\r\n\r\nexport {\r\n    sessionOperations,\r\n};\r\n\r\nexport default reducer;\r\n","import * as types from './types';\r\nimport { createReducer } from '../../utils';\r\n\r\nconst initialState = [];\r\n\r\nconst cartReducer = createReducer(initialState)({\r\n  [types.ADD_CATEGORIES]: (state, action) => {\r\n    const { categories } = action.payload;\r\n\r\n    if (categories) {\r\n      return categories;\r\n    }\r\n\r\n    return [...state];\r\n  },\r\n\r\n  [types.GET_CATEGORIES]: (state, action) => {\r\n    return [...state];\r\n  },\r\n});\r\n\r\nexport default cartReducer;\r\n","export const ADD_CATEGORIES = 'category/ADD_CATEGORIES';\r\nexport const GET_CATEGORIES = 'category/GET_CATEGORIES';\r\n","import reducer from './reducers';\r\n\r\nimport * as categoryOperations from './operations';\r\nimport * as categorySelectors from './selectors';\r\n\r\nexport { categoryOperations, categorySelectors };\r\n\r\nexport default reducer;\r\n","import * as types from './types';\r\nimport { createReducer } from '../../utils';\r\n\r\nconst initialState = {};\r\n\r\nconst cartReducer = createReducer(initialState)({\r\n  [types.ADD_ITEM_TO_CACHE]: (state, action) => {\r\n    const { response } = action.payload;\r\n\r\n    if (response) {\r\n      return { ...state, ...response };\r\n    }\r\n\r\n    return { ...state };\r\n  },\r\n});\r\n\r\nexport default cartReducer;\r\n","export const ADD_ITEM_TO_CACHE = 'category/ADD_ITEM_TO_CACHE';\r\n","import reducer from './reducers';\r\n\r\nimport * as cacheOperations from './operations';\r\nimport * as cacheSelectors from './selectors';\r\n\r\nexport { cacheOperations, cacheSelectors };\r\n\r\nexport default reducer;\r\n","import * as types from './types';\r\nimport { createReducer } from '../../utils';\r\n\r\nconst initialState = [];\r\n\r\nconst cartReducer = createReducer(initialState)({\r\n  [types.ADD_BRAND]: (state, action) => {\r\n    const { brands } = action.payload;\r\n\r\n    if (brands) {\r\n      return brands;\r\n    }\r\n\r\n    return [...state];\r\n  },\r\n\r\n  [types.GET_BRAND]: (state, action) => {\r\n    return [...state];\r\n  },\r\n});\r\n\r\nexport default cartReducer;\r\n","export const ADD_BRAND = 'category/ADD_BRAND';\r\nexport const GET_BRAND = 'category/GET_BRAND';\r\n","import reducer from './reducers';\r\n\r\nimport * as brandOperations from './operations';\r\nimport * as brandSelectors from './selectors';\r\n\r\nexport { brandOperations, brandSelectors };\r\n\r\nexport default reducer;\r\n","import * as types from './types';\r\nimport { createReducer } from '../../utils';\r\n\r\nconst initialState = [];\r\n\r\nconst cartReducer = createReducer(initialState)({\r\n  [types.ADD_TAGS]: (state, action) => {\r\n    const { tags } = action.payload;\r\n\r\n    if (tags) {\r\n      return tags;\r\n    }\r\n\r\n    return [...state];\r\n  },\r\n\r\n  [types.GET_TAGS]: (state, action) => {\r\n    return [...state];\r\n  },\r\n});\r\n\r\nexport default cartReducer;\r\n","export const ADD_TAGS = 'tag/ADD_TAGS';\r\nexport const GET_TAGS = 'tag/GET_TAGS';\r\n","import reducer from './reducers';\r\n\r\nimport * as tagOperations from './operations';\r\nimport * as tagSelectors from './selectors';\r\n\r\nexport { tagOperations, tagSelectors };\r\n\r\nexport default reducer;\r\n","const isObjectEmpty = value => {\r\n  return !value || !Object.keys(value).length > 0;\r\n};\r\n\r\nconst manupulateURL = (url, urlOptions = {}) => {\r\n  if (isObjectEmpty(urlOptions)) return url;\r\n\r\n  const params = urlOptions.params || {};\r\n  const placeHolders = urlOptions.placeHolders || {};\r\n\r\n\r\n\r\n  return url\r\n    .split('/')\r\n    .map(currentValue => {\r\n      if (currentValue.includes(':') && !isObjectEmpty(placeHolders) && !currentValue.includes('?')) {\r\n        console.log('currentValue',currentValue);\r\n        let actualPlaceholderValue = placeHolders[currentValue.replace(':', '')];\r\n        console.log('actualPlaceholderValue',actualPlaceholderValue);\r\n        currentValue = actualPlaceholderValue;\r\n      }\r\n      \r\n      if (currentValue.includes(':') && !isObjectEmpty(placeHolders) && currentValue.includes('?')) {\r\n        let fuckValue = currentValue.split('?'); \r\n        if(fuckValue && fuckValue.length > 0){\r\n          fuckValue = fuckValue.map(item => {\r\n            return placeHolders[item.replace(':', '')] ? placeHolders[item.replace(':', '')] : item\r\n          })\r\n        }\r\n        console.log('fuckValue',fuckValue);\r\n        let actualPlaceholderValue = fuckValue.join('?');\r\n        console.log('actualPlaceholderValue',actualPlaceholderValue,'currentVAlue',currentValue);\r\n        console.log('placeHolders',placeHolders);\r\n        currentValue = actualPlaceholderValue;\r\n      }\r\n\r\n      if (currentValue.includes('?')) {\r\n        currentValue = currentValue\r\n          .split('&')\r\n          .map(currentValue => {\r\n            const param = currentValue.slice(currentValue.indexOf('=') + 1);\r\n            return currentValue.replace(param, params[param] || '');\r\n          })\r\n          .join('&');\r\n      }\r\n      return currentValue;\r\n    })\r\n    .join('/');\r\n};\r\n\r\nexport default manupulateURL;\r\n","import config from '../config.json';\r\nimport apiMap from '../apiMap.json';\r\nimport Converter from './converter.js';\r\n\r\n// import utils\r\nimport { manupulateURL } from './utils';\r\n\r\nlet converter = new Converter();\r\n\r\nclass Connector {\r\n  //TODO\r\n  constructor() {\r\n    this.options = {};\r\n  }\r\n\r\n  /**\r\n   * @method request sends request to server\r\n   * this function determines api url and method from config.json\r\n   * and sends request and converts recieved data to general format\r\n   * @param {String} item\r\n   * @param {String} format\r\n   * @param {Object} data optional\r\n   * @returns {Object}  converted data\r\n   */\r\n\r\n  async request(item, format = 'json', options = {}) {\r\n    let api = apiMap[config.server][item]; //api url & method\r\n\r\n    // configuring options for fetch request\r\n\r\n    this.options = {\r\n      ...this.options,\r\n      method: api.method,\r\n      credentials: 'include',\r\n      headers: new Headers({\r\n        ...(format === 'json' && {\r\n        'Content-Type': 'application/json',\r\n        }),\r\n        ...(options.headers && {\r\n          ...options.headers,\r\n        }),\r\n      }),\r\n\r\n      ...(format === 'json' ? {\r\n        body: api.method !== 'get' ? JSON.stringify(options.body) : null,\r\n      } : {\r\n          body: api.method !== 'get' ? options.body : null,\r\n        }),\r\n    };\r\n\r\n    //*replace variable parts in url with actual data if params exists |or| just return the url\r\n\r\n    const url = manupulateURL(api.url, options.urlOptions);\r\n    console.log('url',api.url)\r\n    console.log('urlOptions',this.options);\r\n    console.log('format',format);\r\n\r\n    // change the formate to text if the server is wooCommerce\r\n    if (config['server'] === 'wooCommerce') {\r\n      // format = 'text';\r\n    }\r\n\r\n    try {\r\n      let res = await fetch(config.baseURL + url, this.options);\r\n\r\n      if (res.status >= 200 && res.status < 300) {\r\n        let formattedData = await res['json'](); //await res.json(), res.text()\r\n        if (formattedData.status === 'error') {\r\n          throw formattedData.error;\r\n        }\r\n\r\n        let convertedData = await converter[item](formattedData); //convert recieved data to app general format\r\n        return convertedData;\r\n      } else {\r\n        let error = await res['json']();\r\n\r\n        throw error;\r\n      }\r\n    } catch (err) {\r\n\r\n      throw err;\r\n      //TODO: breakdown errors\r\n    }\r\n  }\r\n}\r\n\r\nexport default Connector;\r\n","import config from '../config.json';\r\nimport dataMap from '../dataMap.json';\r\nimport { product } from '../state/ducks';\r\n\r\nclass Converter {\r\n\t/**\r\n   * @public\r\n   * @method categoryList convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync categoryList(resData) {\r\n\t\tconst data = resData.data || [];\r\n\r\n\t\tconst formatedData =\r\n\t\t\tdata.length > 0 &&\r\n\t\t\tdata.map((category) => {\r\n\t\t\t\treturn {\r\n\t\t\t\t\t...category,\r\n\t\t\t\t\tid: category._id || '',\r\n\t\t\t\t\tkey: category._id || '',\r\n\t\t\t\t\tname: category.name && category.name,\r\n\t\t\t\t\tdescription: category.description && category.description,\r\n\t\t\t\t\tproductCount: category.productCount || 0,\r\n\t\t\t\t\tparent: category.parent || '',\r\n\t\t\t\t\tcover: category.cover ? `${config['baseURL']}${category.cover.thumbnail}` : null,\r\n\t\t\t\t\ticon: category.icon ? `${config['baseURL']}${category.icon}` : null,\r\n\t\t\t\t\timage:\r\n\t\t\t\t\t(data.image &&\r\n\t\t\t\t\t\tdata.image.length > 0 &&\r\n\t\t\t\t\t\tdata.image.map((img) => {\r\n\t\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\t\tid: img._id || '',\r\n\t\t\t\t\t\t\t\tname: img.name && img.name,\r\n\t\t\t\t\t\t\t\tcover: `${config['baseURL']}${img.medium}`,\r\n\t\t\t\t\t\t\t\tadded: img.added,\r\n\t\t\t\t\t\t\t\ttitle: img.title,\r\n\t\t\t\t\t\t\t\tlabels: img.labels,\r\n\t\t\t\t\t\t\t\talt: img.alt,\r\n\t\t\t\t\t\t\t\tcaption: img.caption\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t})) ||\r\n\t\t\t\t\t[],\r\n\t\t\t\t\tsubCount:\r\n\t\t\t\t\t\tcategory.subCategory.length === 1\r\n\t\t\t\t\t\t\t? category.subCategory[0] && category.subCategory[0].name ? category.subCategory.length : 0\r\n\t\t\t\t\t\t\t: category.subCategory.length,\r\n\t\t\t\t\t...(category.subCategory &&\r\n\t\t\t\t\t\tcategory.subCategory.length > 0 &&\r\n\t\t\t\t\t\tcategory.subCategory[0] &&\r\n\t\t\t\t\t\tcategory.subCategory[0]['name'] && {\r\n\t\t\t\t\t\tchildren: category.subCategory.map((subCat) => {\r\n\t\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\t\tid: subCat._id || '',\r\n\t\t\t\t\t\t\t\tkey: subCat._id,\r\n\t\t\t\t\t\t\t\tname: subCat.name && subCat.name,\r\n\t\t\t\t\t\t\t\tdescription: subCat.description && subCat.description,\r\n\t\t\t\t\t\t\t\tcover: subCat.cover ? `${config['baseURL']}${subCat.cover.thumbnail}` : ''\r\n\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t})\r\n\t\t\t\t};\r\n\t\t\t});\r\n\r\n\t\treturn formatedData;\r\n\t};\r\n\r\n\r\n\t\t/**\r\n   * @public\r\n   * @method postCategoryList convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n  async postCategoryList(resData) {\r\n\tconst data = resData.data && resData.data  ? resData.data : [];\r\n\r\n\tconst formatedData =\r\n\t\tdata.length > 0 &&\r\n\t\tdata.map((category) => {\r\n\t\t\treturn {\r\n\t\t\t\tid: category._id || '',\r\n\t\t\t\tkey: category._id || '',\r\n\t\t\t\tname: category.name && category.name,\r\n\t\t\t\tdescription: category.description && category.description,\r\n\t\t\t\tcover: category.cover ? `${config['baseURL']}${category.cover.thumbnail}` : null,\r\n\t\t\t\ticon: category.icon ? `${config['baseURL']}${category.icon}` : null,\r\n\t\t\t\t\r\n\t\t\t};\r\n\t\t});\r\n\r\n\treturn formatedData;\r\n};\r\n\r\n\r\n\r\n\t\t/**\r\n   * @public\r\n   * @method postCategoryDetail convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n  async postCategoryDetail(resData) {\r\n\tconst data = resData;\r\n\r\n\tif(Object.keys(data).length > 0){\r\n\t\treturn {\r\n\t\t\tid: data._id || '',\r\n\t\t\tkey: data._id || '',\r\n\t\t\tname: data.name && data.name,\r\n\t\t\tdescription: data.description && data.description,\r\n\t\t\tcover: data.cover ? `${config['baseURL']}${data.cover.thumbnail}` : null,\r\n\t\t\ticon: data.icon ? `${config['baseURL']}${data.icon}` : null,\r\n\t\t}\r\n\t}\r\n\t\r\n};\r\n\r\n\t/**\r\n* @public\r\n* @method getAllNotification convert api data from API to general format based on config server\r\n* @param {Object} data response objectc from alpha\r\n* @returns {Object}  converted data\r\n*/\r\n\tasync getAllNotification(resData) {\r\n\t\tconst data = resData.data || [];\r\n\r\n\t\tconst formatedData =\r\n\t\t\tdata.length > 0 &&\r\n\t\t\tdata.map((noti) => {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tid: noti._id || '',\r\n\t\t\t\t\tkey: noti._id || '',\r\n\t\t\t\t\theading: noti.heading && noti.heading,\r\n\t\t\t\t\ttext: noti.text && noti.text,\r\n\t\t\t\t\ttype: noti.type,\r\n\t\t\t\t\tlink: noti.link || '',\r\n\t\t\t\t\tadded: noti.added || '',\r\n\t\t\t\t\tread: noti.read\r\n\t\t\t\t};\r\n\t\t\t});\r\n\r\n\t\treturn formatedData;\r\n\t}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\t/**\r\n* @public\r\n* @method categorySelectist convert api data from API to general format based on config server\r\n* @param {Object} data response objectc from alpha\r\n* @returns {Object}  converted data\r\n*/\r\n\tasync categorySelectist(resData) {\r\n\t\tconst data = resData.data || [];\r\n\r\n\t\tconst formatedData =\r\n\t\t\tdata.length > 0 &&\r\n\t\t\tdata.map((category) => {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tid: category._id || '',\r\n\t\t\t\t\tkey: category._id || '',\r\n\t\t\t\t\ttitle: category.name && category.name,\r\n\t\t\t\t\t...(category.subCategory &&\r\n\t\t\t\t\t\tcategory.subCategory.length > 0 &&\r\n\t\t\t\t\t\tcategory.subCategory[0] &&\r\n\t\t\t\t\t\tcategory.subCategory[0]['name'] && {\r\n\t\t\t\t\t\tchildren: category.subCategory.map((subCat) => {\r\n\t\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\t\tid: subCat._id || '',\r\n\t\t\t\t\t\t\t\tkey: subCat._id,\r\n\t\t\t\t\t\t\t\ttitle: subCat.name && subCat.name,\r\n\t\t\t\t\t\t\t\tcover: subCat.cover ? `${config['baseURL']}${subCat.cover.thumbnail ? subCat.cover.thumbnail : \"\"}` : ''\r\n\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t})\r\n\t\t\t\t};\r\n\t\t\t});\r\n\r\n\t\treturn formatedData;\r\n\t}\r\n\r\n\r\n\r\n\t\r\n\r\n\r\n\t\t/**\r\n\t* @public\r\n\t* @method categorySelectist convert api data from API to general format based on config server\r\n\t* @param {Object} data response objectc from alpha\r\n\t* @returns {Object}  converted data\r\n\t*/\r\n\tasync postSelectCategoryList(resData) {\r\n\r\n\t\tconst data = resData.data;\r\n\r\n\t\tconst formatedData =\r\n\t\t\tdata.length > 0 &&\r\n\t\t\tdata.map((category) => {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tid: category._id || '',\r\n\t\t\t\t\tkey: category._id || '',\r\n\t\t\t\t\ttitle: category.name && category.name,\r\n\t\t\t\t};\r\n\t\t\t});\r\n\r\n\t\treturn formatedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method categoryProducts convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync categoryProducts(resData) {\r\n\t\tconst data = resData.data || [];\r\n\t\tconst isNext = resData.page.next;\r\n\r\n\t\tconst convertedData =\r\n\t\t\tdata.length > 0 &&\r\n\t\t\tdata.map((product) => {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tid: product._id || '',\r\n\t\t\t\t\tname: product.name && product.name,\r\n\t\t\t\t\tdescription: product.description && product.description,\r\n\t\t\t\t\tcover: `${config['baseURL']}${(product.cover && product.cover['thumbnail']) || ''}`,\r\n\t\t\t\t\tregularPrice: product.price && product.price['regular'],\r\n\t\t\t\t\tofferPrice: product.price && product.price['offer'],\r\n\t\t\t\t\turl: product.url,\r\n\t\t\t\t\tunit: product.unit,\r\n\t\t\t\t\tcategory: product.category,\r\n\t\t\t\t\tpricing: product.pricing,\r\n\t\t\t\t\tdate: product.date,\r\n\t\t\t\t\ttime: product.time,\r\n\t\t\t\t\tvenue: product.venue,\r\n\t\t\t\t\tbrand: product.brand,\r\n\t\t\t\t\ttags: product.tags,\r\n\t\t\t\t\tprice:\r\n\t\t\t\t\t\tparseInt(product.price['offer']) > parseInt(product.price['regular'])\r\n\t\t\t\t\t\t\t? product.price['offer']\r\n\t\t\t\t\t\t\t: product.price['regular'],\r\n\t\t\t\t\tavailable: product.pricing &&\r\n\t\t\t\t\tproduct.pricing.length > 0 ?\r\n\t\t\t\t\t\t\t product.pricing[0]['stock'] && product.pricing[0]['stock']['available']\r\n\t\t\t\t\t\t\t : 0,\r\n\t\t\t\t\tminimum: product.pricing &&\r\n\t\t\t\t\tproduct.pricing.length > 0 ?\r\n\t\t\t\t\tproduct.pricing[0]['stock'] && product.pricing[0]['stock']['minimum']\r\n\t\t\t\t\t: 0\r\n\t\t\t\t};\r\n\t\t\t});\r\n\r\n\t\t// return {\r\n\t\t// \tdata: convertedData,\r\n\t\t// \tisNext: isNext\r\n\t\t// };\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method getCart convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync getCart(resData) {\r\n\t\tconst cartItems = resData.items || [];\r\n\t\tconst convertedData =\r\n\t\t\tcartItems.length > 0 &&\r\n\t\t\tcartItems.map((cartItem) => {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tid: cartItem._id || '',\r\n\t\t\t\t\tname: cartItem.name && cartItem.name,\r\n\t\t\t\t\tcover: `${config['baseURL']}${cartItem.cover.medium}`,\r\n\t\t\t\t\tregularPrice: cartItem.price && cartItem.price['regular'],\r\n\t\t\t\t\tofferPrice: cartItem.price && cartItem.price['offer'],\r\n\t\t\t\t\tquantity: cartItem.quantity,\r\n\t\t\t\t\turl: cartItem.url,\r\n\t\t\t\t\tcartKey: cartItem.cartKey\r\n\t\t\t\t};\r\n\t\t\t});\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method addtoCart convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync addtoCart(resData) {\r\n\t\tlet data = false;\r\n\r\n\t\tif (resData['inserted']) {\r\n\t\t\tdata = {\r\n\t\t\t\tid: resData['inserted']._id || '',\r\n\t\t\t\tname: resData['inserted'].name && resData['inserted'].name,\r\n\t\t\t\tcover: `${config['baseURL']}${resData['inserted'].cover.medium}`,\r\n\t\t\t\tregularPrice: resData['inserted'].price && resData['inserted'].price['regular'],\r\n\t\t\t\tofferPrice: resData['inserted'].price && resData['inserted'].price['offer'],\r\n\t\t\t\tquantity: resData['inserted'].quantity,\r\n\t\t\t\turl: resData['inserted'].url,\r\n\t\t\t\tcartKey: resData['inserted'].cartKey\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tconst convertedData = data;\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method removeFromCart convert api data from API to general format based on config server\r\n   * @param {Object} resData response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync removeFromCart(resData) {\r\n\t\tlet convertedData = false;\r\n\t\tif (resData) {\r\n\t\t\tconvertedData = true;\r\n\t\t}\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method updateCartItem convert api data from API to general format based on config server\r\n   * @param {Object} resData response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync updateCartItem(resData) {\r\n\t\tlet convertedData = false;\r\n\t\tif (resData['updated']) {\r\n\t\t\tconvertedData = {\r\n\t\t\t\tquantity: resData.updated['quantity']\r\n\t\t\t};\r\n\t\t}\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method clearCart convert api data from API to general format based on config server\r\n   * @param {Object} resData response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync clearCart(data) {\r\n\t\tif (data && data['msg']) {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\t\treturn data;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method getWishlist convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync getWishlist(resData) {\r\n\t\t// const cartItems = resData.items || [];\r\n\t\tconst convertedData = resData;\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method addWishlist convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync addWishlist(resData) {\r\n\t\tif (resData && resData['msg'] === 'wishlist updated') {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method removeFromWishlist convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync removeFromWishlist(resData) {\r\n\t\tif (resData && resData['msg'] === 'wishlist updated') {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method removeAllWishlist convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync removeAllWishlist(resData) {\r\n\t\tif (resData && resData['msg'] === 'wishlist updated') {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method tagProducts convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync tagProducts(resData) {\r\n\t\tconst data = resData.data || [];\r\n\t\tconst isNext = resData.page.next;\r\n\r\n\t\tconst convertedData =\r\n\t\t\tdata.length > 0 &&\r\n\t\t\tdata.map((product) => {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tid: product._id || '',\r\n\t\t\t\t\tname: product.name && product.name,\r\n\t\t\t\t\tdescription: product.description && product.description,\r\n\t\t\t\t\tcover: `${config['baseURL']}${(product.cover && product.cover['thumbnail']) || ''}`,\r\n\t\t\t\t\tregularPrice: product.price && product.price['regular'],\r\n\t\t\t\t\tofferPrice: product.price && product.price['offer'],\r\n\t\t\t\t\turl: product.url,\r\n\t\t\t\t\tunit: product.unit,\r\n\t\t\t\t\tcategory: product.category,\r\n\t\t\t\t\tpricing: product.pricing,\r\n\t\t\t\t\tdate: product.date,\r\n\t\t\t\t\ttime: product.time,\r\n\t\t\t\t\tvenue: product.venue,\r\n\t\t\t\t\tbrand: product.brand,\r\n\t\t\t\t\ttags: product.tags,\r\n\t\t\t\t\tprice:\r\n\t\t\t\t\t\tparseInt(product.price['offer']) > parseInt(product.price['regular'])\r\n\t\t\t\t\t\t\t? product.price['offer']\r\n\t\t\t\t\t\t\t: product.price['regular'],\r\n\t\t\t\t\tavalable: product.pricing &&\r\n\t\t\t\t\tproduct.pricing.length > 0 ?\r\n\t\t\t\t\t\t\t product.pricing[0]['stock'] && product.pricing[0]['stock']['available']\r\n\t\t\t\t\t\t\t : 0,\r\n\t\t\t\t\tminimum: product.pricing &&\r\n\t\t\t\t\tproduct.pricing.length > 0 ?\r\n\t\t\t\t\tproduct.pricing[0]['stock'] && product.pricing[0]['stock']['minimum'] : 0\r\n\t\t\t\t};\r\n\t\t\t});\r\n\r\n\t\t// return {\r\n\t\t// \tdata: convertedData,\r\n\t\t// \tisNext: isNext\r\n\t\t// };\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method brandProducts convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync brandProducts(resData) {\r\n\t\tconst data = resData.data || [];\r\n\t\tconst isNext = resData.page.next;\r\n\r\n\t\tconst convertedData =\r\n\t\t\tdata.length > 0 &&\r\n\t\t\tdata.map((product) => {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tid: product._id || '',\r\n\t\t\t\t\tname: product.name && product.name,\r\n\t\t\t\t\tdescription: product.description && product.description,\r\n\t\t\t\t\tcover: `${config['baseURL']}${(product.cover && product.cover['thumbnail']) || ''}`,\r\n\t\t\t\t\tregularPrice: product.price && product.price['regular'],\r\n\t\t\t\t\tofferPrice: product.price && product.price['offer'],\r\n\t\t\t\t\turl: product.url,\r\n\t\t\t\t\tunit: product.unit,\r\n\t\t\t\t\tcategory: product.category,\r\n\t\t\t\t\tpricing: product.pricing,\r\n\t\t\t\t\tdate: product.date,\r\n\t\t\t\t\ttime: product.time,\r\n\t\t\t\t\tvenue: product.venue,\r\n\t\t\t\t\tbrand: product.brand,\r\n\t\t\t\t\ttags: product.tags,\r\n\t\t\t\t\tprice:\r\n\t\t\t\t\t\tparseInt(product.price['offer']) > parseInt(product.price['regular'])\r\n\t\t\t\t\t\t\t? product.price['offer']\r\n\t\t\t\t\t\t\t: product.price['regular'],\r\n\t\t\t\t\tavalable: product.pricing &&\r\n\t\t\t\t\tproduct.pricing.length > 0 ?\r\n\t\t\t\t\t\t\t product.pricing[0]['stock'] && product.pricing[0]['stock']['available']\r\n\t\t\t\t\t\t\t : 0,\r\n\t\t\t\t\tminimum: product.pricing &&\r\n\t\t\t\t\tproduct.pricing.length > 0 ?\r\n\t\t\t\t\tproduct.pricing[0]['stock'] && product.pricing[0]['stock']['minimum']\r\n\t\t\t\t\t: 0\r\n\t\t\t\t};\r\n\t\t\t});\r\n\r\n\t\t// return {\r\n\t\t// \tdata: convertedData,\r\n\t\t// \tisNext: isNext\r\n\t\t// };\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method productSearch convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync productSearch(resData) {\r\n\t\tconst data = resData.data || [];\r\n\t\tconst isNext = resData.page.next;\r\n\r\n\t\tconst convertedData =\r\n\t\t\t(data.length > 0 &&\r\n\t\t\t\tdata.map((product) => {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tid: product._id || '',\r\n\t\t\t\t\t\tname: product.name && product.name,\r\n\t\t\t\t\t\tdescription: product.description && product.description,\r\n\t\t\t\t\t\tcover: `${config['baseURL']}${product.cover.thumbnail}`,\r\n\t\t\t\t\t\tregularPrice: product.price && product.price['regular'],\r\n\t\t\t\t\t\tofferPrice: product.price && product.price['offer'],\r\n\t\t\t\t\t\turl: product.url,\r\n\t\t\t\t\t\tunit: product.unit,\r\n\t\t\t\t\t\tdate: product.date,\r\n\t\t\t\t\t\tvenue: product.venue,\r\n\t\t\t\t\t\tpricing: product.pricing\r\n\t\t\t\t\t};\r\n\t\t\t\t})) ||\r\n\t\t\t[];\r\n\r\n\t\treturn {\r\n\t\t\tdata: convertedData,\r\n\t\t\tisNext\r\n\t\t};\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method productList convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync productList(resData) {\r\n\t\tconst data = resData.data || [];\r\n\t\tconst isNext = resData.page.next;\r\n\r\n\t\tlet convertedData =\r\n\t\t\tdata.length > 0 &&\r\n\t\t\tdata.map((product) => {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tid: product._id || '',\r\n\t\t\t\t\tname: product.name && product.name,\r\n\t\t\t\t\tdescription: product.description && product.description,\r\n\t\t\t\t\tcover: product.cover ? `${config['baseURL']}${(product.cover && product.cover['thumbnail']) || ''}` : product.cover,\r\n\t\t\t\t\tregularPrice: product.price && product.price['regular'],\r\n\t\t\t\t\tofferPrice: product.price && product.price['offer'],\r\n\t\t\t\t\turl: product.url,\r\n\t\t\t\t\tunit: product.unit,\r\n\t\t\t\t\tcategory: product.category,\r\n\t\t\t\t\timage:\r\n\t\t\t\t\t(data.image &&\r\n\t\t\t\t\t\tdata.image.length > 0 &&\r\n\t\t\t\t\t\tdata.image.map((img) => {\r\n\t\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\t\tid: img._id || '',\r\n\t\t\t\t\t\t\t\tname: img.name && img.name,\r\n\t\t\t\t\t\t\t\tcover: `${config['baseURL']}${img.original}`,\r\n\t\t\t\t\t\t\t\tadded: img.added,\r\n\t\t\t\t\t\t\t\ttitle: img.title,\r\n\t\t\t\t\t\t\t\tlabels: img.labels,\r\n\t\t\t\t\t\t\t\talt: img.alt,\r\n\t\t\t\t\t\t\t\tcaption: img.caption\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t})) ||\r\n\t\t\t\t\t[],\r\n\t\t\t\t\tpricing: product.pricing,\r\n\t\t\t\t\tdate: product.date,\r\n\t\t\t\t\ttime: product.time,\r\n\t\t\t\t\tvenue: product.venue,\r\n\t\t\t\t\tbrand: product.brand,\r\n\t\t\t\t\ttags: product.tags,\r\n\t\t\t\t\tprice:\r\n\t\t\t\t\tparseInt(product.price['offer']) > parseInt(product.price['regular'])\r\n\t\t\t\t\t\t\t? product.price['offer']\r\n\t\t\t\t\t\t\t: product.price['regular'],\r\n\t\t\t\t\tavailable: product.pricing &&\r\n\t\t\t\t\tproduct.pricing.length > 0 ?\r\n\t\t\t\t\t\t\t product.pricing[0]['stock'] && product.pricing[0]['stock']['available']\r\n\t\t\t\t\t\t\t : 0,\r\n\t\t\t\t\tminimum: product.pricing &&\r\n\t\t\t\t\tproduct.pricing.length > 0 ?\r\n\t\t\t\t\tproduct.pricing[0]['stock'] && product.pricing[0]['stock']['minimum']\r\n\t\t\t\t\t: 0\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t};\r\n\t\t\t});\r\n\r\n\t\t// convertedData = {\r\n\t\t// \tdata: convertedData,\r\n\t\t// \tisNext\r\n\t\t// };\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\r\n\r\n\t\r\n\t/**\r\n   * @public\r\n   * @method postList convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async postList(resData) {\r\n\tconst data = resData.data;\r\n\t// const isNext = resData.page.next;\r\n\r\n\tlet convertedData =\r\n\t\tdata.length > 0 &&\r\n\t\tdata.map((post) => {\r\n\t\t\treturn {\r\n\t\t\t\t...post,\r\n\t\t\t\tid: post._id || '',\r\n\t\t\t\tname: post.name && post.name,\r\n\t\t\t\tbody: post.body && post.body,\r\n\t\t\t\tpreparationTime: post.preparationTime && post.preparationTime,\r\n\t\t\t\tservingSize: post.servingSize && post.servingSize,\r\n\t\t\t\tcookingTime: post.cookingTime && post.cookingTime,\r\n\t\t\t\tcover: `${config['baseURL']}${(post.cover && post.cover['thumbnail']) || ''}`,\r\n\t\t\t\turl: post.url,\r\n\t\t\t\tcategory: post.category,\r\n\t\t\t\ttags: post.tags,\r\n\t\t\t};\r\n\t\t});\r\n\r\n\t// convertedData = {\r\n\t// \tdata: convertedData,\r\n\t// \tisNext\r\n\t// };\r\n\r\n\treturn convertedData;\r\n}\r\n\r\n\r\n\t/**\r\n   * @public\r\n   * @method tagPostList convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async tagPostList(resData) {\r\n\tconst data = resData.data;\r\n\t// const isNext = resData.page.next;\r\n\r\n\tlet convertedData =\r\n\t\tdata.length > 0 &&\r\n\t\tdata.map((post) => {\r\n\t\t\treturn {\r\n\t\t\t\t...post,\r\n\t\t\t\tid: post._id || '',\r\n\t\t\t\tname: post.name && post.name,\r\n\t\t\t\tbody: post.body && post.body,\r\n\t\t\t\tpreparationTime: post.preparationTime && post.preparationTime,\r\n\t\t\t\tservingSize: post.servingSize && post.servingSize,\r\n\t\t\t\tcookingTime: post.cookingTime && post.cookingTime,\r\n\t\t\t\tcover: `${config['baseURL']}${(post.cover && post.cover['thumbnail']) || ''}`,\r\n\t\t\t\turl: post.url,\r\n\t\t\t\tcategory: post.category,\r\n\t\t\t\ttags: post.tags,\r\n\t\t\t};\r\n\t\t});\r\n\r\n\t// convertedData = {\r\n\t// \tdata: convertedData,\r\n\t// \tisNext\r\n\t// };\r\n\r\n\treturn convertedData;\r\n}\r\n\r\n\r\n\t/**\r\n   * @public\r\n   * @method categoryPostList convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async categoryPostList(resData) {\r\n\tconst data = resData.data;\r\n\t// const isNext = resData.page.next;\r\n\r\n\tlet convertedData =\r\n\t\tdata.length > 0 &&\r\n\t\tdata.map((post) => {\r\n\t\t\treturn {\r\n\t\t\t\t...post,\r\n\t\t\t\tid: post._id || '',\r\n\t\t\t\tname: post.name && post.name,\r\n\t\t\t\tbody: post.body && post.body,\r\n\t\t\t\tpreparationTime: post.preparationTime && post.preparationTime,\r\n\t\t\t\tservingSize: post.servingSize && post.servingSize,\r\n\t\t\t\tcookingTime: post.cookingTime && post.cookingTime,\r\n\t\t\t\tcover: `${config['baseURL']}${(post.cover && post.cover['thumbnail']) || ''}`,\r\n\t\t\t\turl: post.url,\r\n\t\t\t\tcategory: post.category,\r\n\t\t\t\ttags: post.tags,\r\n\t\t\t};\r\n\t\t});\r\n\r\n\treturn convertedData;\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\t\r\n\t/**\r\n   * @public\r\n   * @method postDetail convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async postDetail(resData) {\r\n\tconst data = resData;\r\n\t// const isNext = resData.page.next;\r\n\r\n\tif(Object.keys(data).length > 0){\r\n\t\treturn {\r\n\t\t\t...data,\r\n\t\t\tid: data._id || '',\r\n\t\t\tname: data.name && data.name,\r\n\t\t\tbody: data.body && data.body,\r\n\t\t\tpreparationTime: data.preparationTime && data.preparationTime,\r\n\t\t\tservingSize: data.servingSize && data.servingSize,\r\n\t\t\tcookingTime: data.cookingTime && data.cookingTime,\r\n\t\t\tcover: `${config['baseURL']}${(data.cover && data.cover['medium']) || ''}`,\r\n\t\t\turl: data.url,\r\n\t\t\tproducts: data.requiredProducts,\r\n\t\t\tcategory:\r\n\t\t\t(data.category &&\r\n\t\t\t\tdata.category.length > 0 &&\r\n\t\t\t\tdata.category.map((cat) => {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tid: cat._id,\r\n\t\t\t\t\t\tname: cat.name\r\n\t\t\t\t\t};\r\n\t\t\t\t})) ||\r\n\t\t\tdata.category,\r\n\t \t\ttags: data.tags && data.tags.length > 0 ? data.tags : [],\r\n\t\t}\r\n\t}\r\n\telse return {}\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\t/**\r\n   * @public\r\n   * @method bundleList convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync bundleList(resData) {\r\n\t\tconst data = resData.data || [];\r\n\r\n\t\tlet convertedData =\r\n\t\t\tdata.length > 0 &&\r\n\t\t\tdata.map((product) => {\r\n\t\t\t\treturn {\r\n\t\t\t\t\t...product,\r\n\t\t\t\t\tanotherPrice: product.price,\r\n\t\t\t\t\tid: product._id || '',\r\n\t\t\t\t\tname: product.name && product.name,\r\n\t\t\t\t\tdescription: product.description && product.description,\r\n\t\t\t\t\tcover: product.cover ? `${config['baseURL']}${(product.cover && product.cover['thumbnail']) || ''}` : product.cover,\r\n\t\t\t\t\tregularPrice: product.price && product.price['regular'],\r\n\t\t\t\t\tofferPrice: product.price && product.price['offer'],\r\n\t\t\t\t\turl: product.url,\r\n\t\t\t\t\tstartDate: product.startDate,\r\n\t\t\t\t\tendDate: product.endDate,\r\n\t\t\t\t\tactualPrice: product.actualPrice,\r\n\t\t\t\t\tunit: product.unit,\r\n\t\t\t\t\tcategory: product.category,\r\n\t\t\t\t\tpricing: product.pricing,\r\n\t\t\t\t\tdate: product.date,\r\n\t\t\t\t\ttime: product.time,\r\n\t\t\t\t\tvenue: product.venue,\r\n\t\t\t\t\tbrand: product.brand,\r\n\t\t\t\t\ttags: product.tags,\r\n\t\t\t\t\tproduct: product['product'],\r\n\t\t\t\t\tproductCount: product['product'].length,\r\n\t\t\t\t\tprice:\r\n\t\t\t\t\tparseInt(product.price['offer']) > parseInt(product.price['regular'])\r\n\t\t\t\t\t\t\t? product.price['offer']\r\n\t\t\t\t\t\t\t: product.price['regular'],\r\n\t\t\t\t};\r\n\t\t\t});\r\n\r\n\t\t// convertedData = {\r\n\t\t// \tdata: convertedData,\r\n\t\t// \tisNext\r\n\t\t// };\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n* @public\r\n* @method bundleDetail convert api data from API to general format based on config server\r\n* @param {Object} data response objectc from wc\r\n* @returns {Object}  converted data\r\n*/\r\n\tasync bundleDetail(resData) {\r\n\t\tconst data = resData || {};\r\n\r\n\t\tif (Object.keys(data).length > 0) {\r\n\t\t\treturn {\r\n\t\t\t\tid: data._id || '',\r\n\t\t\t\tname: data.name && data.name,\r\n\t\t\t\tdescription: data.description && data.description,\r\n\t\t\t\tcover: data.cover ? `${config['baseURL']}${(data.cover && data.cover['thumbnail']) || ''}`: '',\r\n\t\t\t\tregularPrice: data.price && data.price['regular'],\r\n\t\t\t\tofferPrice: data.price && data.price['offer'],\r\n\t\t\t\turl: data.url,\r\n\t\t\t\tstartDate: data.startDate,\r\n\t\t\t\tendDate: data.endDate,\r\n\t\t\t\tactualPrice: data.actualPrice,\r\n\t\t\t\tunit: data.unit,\r\n\t\t\t\tcategory: data.category,\r\n\t\t\t\tpricing: data.pricing,\r\n\t\t\t\tdate: data.date,\r\n\t\t\t\ttime: data.time,\r\n\t\t\t\tvenue: data.venue,\r\n\t\t\t\tbrand: data.brand,\r\n\t\t\t\ttags: data.tags,\r\n\t\t\t\tproducts: data.product,\r\n\t\t\t\tproductCount: data['product'].length,\r\n\t\t\t\tprice:\r\n\t\t\t\t\tparseInt(data.price['offer']) > parseInt(data.price['regular'])\r\n\t\t\t\t\t\t? data.price['offer']\r\n\t\t\t\t\t\t: data.price['regular'],\r\n\t\t\t\t\t\timage:\r\n\t\t\t\t(data.image &&\r\n\t\t\t\t\tdata.image.length > 0 &&\r\n\t\t\t\t\tdata.image.map((img) => {\r\n\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\tid: img._id || '',\r\n\t\t\t\t\t\t\tname: img.name && img.name,\r\n\t\t\t\t\t\t\tcover: `${config['baseURL']}${img.original}`,\r\n\t\t\t\t\t\t\tadded: img.added,\r\n\t\t\t\t\t\t\ttitle: img.title,\r\n\t\t\t\t\t\t\tlabels: img.labels,\r\n\t\t\t\t\t\t\talt: img.alt,\r\n\t\t\t\t\t\t\tcaption: img.caption\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})) ||\r\n\t\t\t\t[],\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\telse return data;\r\n\r\n\t\t// convertedData = {\r\n\t\t// \tdata: convertedData,\r\n\t\t// \tisNext\r\n\t\t// };\r\n\r\n\t}\r\n\r\n\r\n\r\n\t\r\n\r\n\r\n\t\r\n\t/**\r\n   * @public\r\n   * @method getAnalyticsPageVisits convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async getAnalyticsPageVisits(resData) {\r\n\tconst data = resData && resData.data ? resData.data : [];\r\n\r\n\tconsole.log('getAnalyticsPageVisits',resData); \r\n\r\n\tlet convertedData =\r\n\t\tdata.length > 0 &&\r\n\t\tdata.map((item) => {\r\n\t\t\treturn {\r\n\t\t\t\tid: item._id || '',\r\n\t\t\t\tvisit: item.count || '',\r\n\t\t\t\tname: item['detail'] && item['detail'][0] && item['detail'][0]['name'] ,\r\n\t\t\t\turl: item['detail'] && item['detail'][0] && item['detail'][0]['url'] ,\r\n\t\t\t\titemId: item['detail'] && item['detail'][0] && item['detail'][0]['_id'] ,\r\n\t\t\t};\r\n\t\t});\r\n\r\n\t// convertedData = {\r\n\t// \tdata: convertedData,\r\n\t// \tisNext\r\n\t// };\r\n\r\n\treturn convertedData;\r\n}\r\n\r\n\r\n\r\n\t\r\n\t/**\r\n   * @public\r\n   * @method getAnalyticsPageVisitCount convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async getAnalyticsPageVisitCount(resData) {\r\n\treturn resData; \r\n\t}\r\n\r\n\r\n\t/**\r\n   * @public\r\n   * @method getAnalyticsDemographicVisits convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  \tasync getAnalyticsDemographicVisits(resData) {\r\n\r\n\t\tconst data = resData && resData.data ? resData.data : [];\r\n\t\tif(data){\r\n\t\t\treturn data; \r\n\t\t}\r\n\t\telse return []\r\n\t}\r\n\r\n\r\n\t/**\r\n   * @public\r\n   * @method getAnalyticsOrders convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n   async getAnalyticsOrders(resData) {\r\n\t   const data = resData.data || []; \r\n\t   return data; \r\n\r\n\t}\r\n\r\n\r\n\r\n\t\t/**\r\n\t * @public\r\n\t * @method getAnalyticsTotalUserCount convert api data from API to general format based on config server\r\n\t * @param {Object} data response objectc from wc\r\n\t * @returns {Object}  converted data\r\n\t */\r\n\tasync getAnalyticsTotalUserCount(resData) {\r\n\t\treturn resData; \r\n\t}\r\n\r\n\r\n\t\t/**\r\n\t * @public\r\n\t * @method customerDetail convert api data from API to general format based on config server\r\n\t * @param {Object} data response objectc from wc\r\n\t * @returns {Object}  converted data\r\n\t */\r\n\tasync customerDetail(resData) {\r\n\t\tif(resData){\r\n\t\t\treturn {\r\n\t\t\t\t...resData,\r\n\t\t\t\tid: resData._id || '',\r\n\t\t\t\tkey: resData._id || '',\r\n\t\t\t\tfirstName: resData.firstName || '',\r\n\t\t\t\tlastName: resData.lastName || '',\r\n\t\t\t\tname: resData.firstName + ' ' + resData.lastName,\r\n\t\t\t\tcountry: resData.country || '',\r\n\t\t\t\tcity: resData.city || '',\r\n\t\t\t\temail: resData.email || '',\r\n\t\t\t\tphone: resData.phone || '',\r\n\t\t\t\taddress1: resData.address1 || '',\r\n\t\t\t\taddress2: resData.address2 || '',\r\n\t\t\t\tcreated: resData.created || ''\r\n\t\t\t}\r\n\t\t}\r\n\t\telse return resData; \r\n\t}\r\n\r\n\t\r\n\t/**\r\n   * @public\r\n   * @method couponList convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync couponList(resData) {\r\n\t\tconst data = resData || [];\r\n\r\n\t\tlet convertedData =\r\n\t\t\tdata.length > 0 &&\r\n\t\t\tdata.map((product) => {\r\n\t\t\t\treturn {\r\n\t\t\t\t\t...data,\r\n\t\t\t\t\tid: product._id || '',\r\n\t\t\t\t\tname: product.name && product.name,\r\n\t\t\t\t\tcode: product.code,\r\n\t\t\t\t\tcover: product.cover ? `${config['baseURL']}${(product.cover && product.cover['thumbnail']) || ''}` : product.cover,\r\n\t\t\t\t\tminimumOrder: product.minimumOrder,\r\n\t\t\t\t\tmaximumOrder: product.maximumOrder,\r\n\t\t\t\t\tofferPrice: product.price && product.price['offer'],\r\n\t\t\t\t\tfreeProducts: product.freeProducts,\r\n\t\t\t\t\torderedProductsCount: product.orderedProducts && product.orderedProducts.length,\r\n\t\t\t\t\tfreeProductsCount: product.freeProducts && product.freeProducts.length,\r\n\t\t\t\t\tamountType: product.amountType,\r\n\t\t\t\t\tamount: product.amount,\r\n\t\t\t\t\tfreeDelivery: product.freeDelivery,\r\n\t\t\t\t\tstartDate: product.startDate,\r\n\t\t\t\t\tendDate: product.endDate,\r\n\t\t\t\t\tmaxUsePerUser: product.maxUsePerUser,\r\n\t\t\t\t\tactualPrice: product.actualPrice,\r\n\t\t\t\t\tunit: product.unit,\r\n\t\t\t\t\tcategory: product.category,\r\n\t\t\t\t\tpricing: product.pricing,\r\n\t\t\t\t\tdate: product.date,\r\n\t\t\t\t\ttime: product.time,\r\n\t\t\t\t};\r\n\t\t\t});\r\n\r\n\r\n\t\t\tconsole.log('convertedCouponData',convertedData);\r\n\r\n\t\t// convertedData = {\r\n\t\t// \tdata: convertedData,\r\n\t\t// \tisNext\r\n\t\t// };\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\t/**\r\n   * @public\r\n   * @method tagList convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync tagList(resData) {\r\n\t\tconst data = resData.data || [];\r\n\r\n\t\tconst convertedData =\r\n\t\t\tdata.length > 0 &&\r\n\t\t\tdata.map((tag) => {\r\n\t\t\t\treturn {\r\n\t\t\t\t\t...tag,\r\n\t\t\t\t\tid: tag._id || '',\r\n\t\t\t\t\tkey: tag._id || '',\r\n\t\t\t\t\tname: tag.name && tag.name,\r\n\t\t\t\t\tdescription: tag.description && tag.description\r\n\t\t\t\t};\r\n\t\t\t});\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\r\n\r\n\r\n\t\r\n\t/**\r\n   * @public\r\n   * @method getSetEmailList convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n  async getSetEmailList(resData) {\r\n\tconst data = resData.data || [];\r\n\r\n\tconst convertedData =\r\n\t\tdata.length > 0 &&\r\n\t\tdata.map((email) => {\r\n\t\t\treturn {\r\n\t\t\t\t...email,\r\n\t\t\t\tid: email._id || '',\r\n\t\t\t\tkey: email._id || '',\r\n\t\t\t\t\"recipient\": email.recipient,\r\n\t\t\t\t\"subject\": email.subject,\r\n\t\t\t\t\"html\": email.html,\r\n\t\t\t\t\"text\": email.text,\r\n\t\t\t\t\"time\":  email.time,\r\n\t\t\t\t\"event\": email.event\r\n\t\t\t};\r\n\t\t});\r\n\r\n\treturn convertedData;\r\n}\r\n\r\n\r\n\t\r\n\r\n\r\n\t\t/**\r\n   * @public\r\n   * @method postTagList convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync postTagList(resData) {\r\n\tconst data = resData.data;\r\n\r\n\t\tconst convertedData =\r\n\t\t\tdata.length > 0 &&\r\n\t\t\tdata.map((tag) => {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tid: tag._id || '',\r\n\t\t\t\t\tkey: tag._id || '',\r\n\t\t\t\t\tname: tag.name && tag.name,\r\n\t\t\t\t\tdescription: tag.description && tag.description\r\n\t\t\t\t};\r\n\t\t\t});\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\r\n\r\n\t\r\n\t\t/**\r\n   * @public\r\n   * @method postTagDetail convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n  async postTagDetail(resData) {\r\n\tconst data = resData; \r\n\r\n\tif(Object.keys(data).length > 0){\r\n\t\treturn {\r\n\t\t\t...data,\r\n\t\t\tid: data._id || '',\r\n\t\t\tkey: data._id || '',\r\n\t\t\tname: data.name && data.name,\r\n\t\t\tdescription: data.description && data.description\r\n\t\t}\r\n\t}\r\n\telse return {}\r\n\t}\r\n\r\n\t\r\n\r\n\r\n\t\r\n\t\t/**\r\n   * @public\r\n\t\r\n   * @method dealerAreaDetail convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n  async dealerAreaDetail(resData) {\r\n\tconst data = resData; \r\n\r\n\tif(Object.keys(data).length > 0){\r\n\t\treturn {\r\n\t\t\t...data,\r\n\t\t\tid: data._id || '',\r\n\t\t\tkey: data._id || '',\r\n\t\t\tname: data.name && data.name,\r\n\t\t}\r\n\t}\r\n\telse return {}\r\n\t}\r\n\r\n\r\n\r\n\t\r\n\t/**\r\n   * @public\r\n   * @method brandList convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync brandList(resData) {\r\n\t\tconst data = resData.data || [];\r\n\r\n\t\tconst convertedData =\r\n\t\t\tdata.length > 0 &&\r\n\t\t\tdata.map((brand) => {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tid: brand._id || '',\r\n\t\t\t\t\tkey: brand._id || '',\r\n\t\t\t\t\tname: brand.name && brand.name,\r\n\t\t\t\t\tdescription: brand.description && brand.description,\r\n\t\t\t\t\tcover: `${config['baseURL']}${brand.cover ? brand.cover.thumbnail : ''}`\r\n\t\t\t\t};\r\n\t\t\t});\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\r\n\t/**\r\n* @public\r\n* @method setImageAsThumbnailToItem convert api data from API to general format based on config server\r\n* @param {Object} data response objectc from alpha\r\n* @returns {Object}  converted data\r\n*/\r\n\tasync setImageAsThumbnailToItem(resData) {\r\n\t\tif (resData.success) {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn {};\r\n\t}\r\n\r\n\r\n\t\r\n\t/**\r\n* @public\r\n* @method configureEmailSTMP convert api data from API to general format based on config server\r\n* @param {Object} data response objectc from alpha\r\n* @returns {Object}  converted data\r\n*/\r\nasync configureEmailSTMP(resData) {\r\n\tif (resData.success) {\r\n\t\treturn {\r\n\t\t\tstatus: 'ok'\r\n\t\t}\r\n\t}\r\n\treturn {};\r\n}\r\n\r\n\r\n\t\r\n\t/**\r\n* @public\r\n* @method getEmailConfiguration convert api data from API to general format based on config server\r\n* @param {Object} data response objectc from alpha\r\n* @returns {Object}  converted data\r\n*/\r\nasync getEmailConfiguration(resData) {\r\n\tconsole.log('resGetEmail',resData); \r\n\tif (resData && Object.keys(resData).length > 0) {\r\n\t\treturn {\r\n\t\t\t...resData,\r\n\t\t\tstatus: 'ok'\r\n\t\t}\r\n\t}\r\n\treturn {};\r\n}\r\n\r\n\t\r\n\t/**\r\n* @public\r\n* @method sendCustomEmail convert api data from API to general format based on config server\r\n* @param {Object} data response objectc from alpha\r\n* @returns {Object}  converted data\r\n*/\r\nasync sendCustomEmail(resData) {\r\n\tif (resData && resData.msg) {\r\n\t\treturn {\r\n\t\t\tstatus: 'ok'\r\n\t\t}\r\n\t}\r\n\treturn {};\r\n}\r\n\r\n\t\t/**\r\n* @public\r\n* @method updateSiteLogoAndIcon convert api data from API to general format based on config server\r\n* @param {Object} data response objectc from alpha\r\n* @returns {Object}  converted data\r\n*/\r\nasync updateSiteLogoAndIcon(resData) {\r\n\tif (resData.success) {\r\n\t\treturn {\r\n\t\t\tstatus: 'ok'\r\n\t\t}\r\n\t}\r\n\treturn {};\r\n}\r\n\r\n\r\n\r\n\t/**\r\n* @public\r\n* @method brandDetail convert api data from API to general format based on config server\r\n* @param {Object} data response objectc from alpha\r\n* @returns {Object}  converted data\r\n*/\r\n\tasync brandDetail(resData) {\r\n\t\tconst data = Object.keys(resData).length > 0 ? resData : null;\r\n\t\tif (data) {\r\n\t\t\treturn {\r\n\t\t\t\t...data,\r\n\t\t\t\tid: data._id || '',\r\n\t\t\t\tkey: data._id || '',\r\n\t\t\t\tname: data.name && data.name,\r\n\t\t\t\tdescription: data.description && data.description,\r\n\t\t\t\turl: data.url && data.url,\r\n\t\t\t\tcover: {\r\n\t\t\t\t\tcover: `${config['baseURL']}${data.cover ? data.cover.original && data.cover.original : ''}`,\r\n\t\t\t\t\tid: data.cover ? data.cover._id : ''\r\n\t\t\t\t},\r\n\t\t\t\timage:\r\n\t\t\t\t\t(data.image &&\r\n\t\t\t\t\t\tdata.image.length > 0 &&\r\n\t\t\t\t\t\tdata.image.map((img) => {\r\n\t\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\t\tid: img._id || '',\r\n\t\t\t\t\t\t\t\tname: img.name && img.name,\r\n\t\t\t\t\t\t\t\tcover: `${config['baseURL']}${img.thumbnail}`,\r\n\t\t\t\t\t\t\t\tadded: img.added,\r\n\t\t\t\t\t\t\t\ttitle: img.title,\r\n\t\t\t\t\t\t\t\tlabels: img.labels,\r\n\t\t\t\t\t\t\t\talt: img.alt,\r\n\t\t\t\t\t\t\t\tcaption: img.caption\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t})) ||\r\n\t\t\t\t\t[]\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn {};\r\n\t}\r\n\r\n\r\n\t/**\r\n* @public\r\n* @method tagDetail convert api data from API to general format based on config server\r\n* @param {Object} data response objectc from alpha\r\n* @returns {Object}  converted data\r\n*/\r\n\tasync tagDetail(resData) {\r\n\t\tconst data = Object.keys(resData).length > 0 ? resData : null;\r\n\t\tif (data) {\r\n\t\t\treturn {\r\n\t\t\t\t...data,\r\n\t\t\t\tid: data._id || '',\r\n\t\t\t\tkey: data._id || '',\r\n\t\t\t\tname: data.name && data.name,\r\n\t\t\t\turl: data.url && data.url,\r\n\t\t\t\tdescription: data.description && data.description,\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn {};\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method customerList convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync customerList(resData) {\r\n\t\tconst data = resData.data || [];\r\n\r\n\t\tconst convertedData =\r\n\t\t\tdata.length > 0 &&\r\n\t\t\tdata.map((customer) => {\r\n\t\t\t\treturn {\r\n\t\t\t\t\t...customer,\r\n\t\t\t\t\tid: customer._id || '',\r\n\t\t\t\t\tkey: customer._id || '',\r\n\t\t\t\t\tfirstName: customer.firstName || '',\r\n\t\t\t\t\tlastName: customer.lastName || '',\r\n\t\t\t\t\tname: customer.firstName + ' ' + customer.lastName,\r\n\t\t\t\t\tdealerName: customer.dealer && Object.keys(customer.dealer).length > 0 ? customer['dealer'].firstName + ' ' + customer['dealer'].lastName : 'None',\r\n\t\t\t\t\tcountry: customer.country || '',\r\n\t\t\t\t\tcity: customer.city || '',\r\n\t\t\t\t\temail: customer.email || '',\r\n\t\t\t\t\tphone: customer.phone || '',\r\n\t\t\t\t\taddress1: customer.address1 || '',\r\n\t\t\t\t\taddress2: customer.address2 || '',\r\n\t\t\t\t\tcreated: customer.added || ''\r\n\t\t\t\t};\r\n\t\t\t});\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\r\n\t\t/**\r\n   * @public\r\n   * @method dealerRegisteredCustomerList convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n  async dealerRegisteredCustomerList(resData) {\r\n\tconst data = resData.data || [];\r\n\r\n\tconst convertedData =\r\n\t\tdata.length > 0 &&\r\n\t\tdata.map((customer) => {\r\n\t\t\treturn {\r\n\t\t\t\t...customer,\r\n\t\t\t\tid: customer._id || '',\r\n\t\t\t\tkey: customer._id || '',\r\n\t\t\t\tfirstName: customer.firstName || '',\r\n\t\t\t\tlastName: customer.lastName || '',\r\n\t\t\t\tname: customer.firstName + ' ' + customer.lastName,\r\n\t\t\t\tdealerName: customer.dealer && Object.keys(customer.dealer).length > 0 ? customer['dealer'].firstName + ' ' + customer['dealer'].lastName : 'None',\r\n\t\t\t\tcountry: customer.country || '',\r\n\t\t\t\tcity: customer.city || '',\r\n\t\t\t\temail: customer.email || '',\r\n\t\t\t\tphone: customer.phone || '',\r\n\t\t\t\taddress1: customer.address1 || '',\r\n\t\t\t\taddress2: customer.address2 || '',\r\n\t\t\t\tcreated: customer.added || ''\r\n\t\t\t};\r\n\t\t});\r\n\r\n\treturn convertedData;\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\t\t/**\r\n   * @public\r\n   * @method dealerList convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync dealerList(resData) {\r\n\t\tconst data = resData.data || [];\r\n\r\n\t\tconst convertedData =\r\n\t\t\tdata.length > 0 &&\r\n\t\t\tdata.map((customer) => {\r\n\t\t\t\treturn {\r\n\t\t\t\t\t...customer,\r\n\t\t\t\t\tid: customer._id || '',\r\n\t\t\t\t\tkey: customer._id || '',\r\n\t\t\t\t\tcode: customer.code || '',\r\n\t\t\t\t\tcommission: customer.commission || '',\r\n\t\t\t\t\tdepositMoney: customer.depositMoney || '',\r\n\t\t\t\t\tname: customer.firstName + ' ' + customer.lastName,\r\n\t\t\t\t\tcountry: customer.country || '',\r\n\t\t\t\t\tcity: customer.city || '',\r\n\t\t\t\t\temail: customer.email || '',\r\n\t\t\t\t\tphone: customer.phone || '',\r\n\t\t\t\t\taddress1: customer.address1 || '',\r\n\t\t\t\t\taddress2: customer.address2 || '',\r\n\t\t\t\t\tcreated: customer.added || ''\r\n\t\t\t\t};\r\n\t\t\t});\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\r\n\t\r\n\r\n\t\t/**\r\n   * @public\r\n   * @method dealerListByArea convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n  async dealerListByArea(resData) {\r\n\tconst data = resData.data || [];\r\n\r\n\tconst convertedData =\r\n\t\tdata.length > 0 &&\r\n\t\tdata.map((customer) => {\r\n\t\t\treturn {\r\n\t\t\t\t...customer,\r\n\t\t\t\tid: customer._id || '',\r\n\t\t\t\tkey: customer._id || '',\r\n\t\t\t\tcode: customer.code || '',\r\n\t\t\t\tcommission: customer.commission || '',\r\n\t\t\t\tdepositMoney: customer.depositMoney || '',\r\n\t\t\t\tname: customer.firstName + ' ' + customer.lastName,\r\n\t\t\t\tcountry: customer.country || '',\r\n\t\t\t\tcity: customer.city || '',\r\n\t\t\t\temail: customer.email || '',\r\n\t\t\t\tphone: customer.phone || '',\r\n\t\t\t\taddress1: customer.address1 || '',\r\n\t\t\t\taddress2: customer.address2 || '',\r\n\t\t\t\tcreated: customer.added || ''\r\n\t\t\t};\r\n\t\t});\r\n\r\n\treturn convertedData;\r\n}\r\n\r\n\r\n\t\r\n\r\n\r\n\t\t\t/**\r\n\t * @public\r\n\t * @method dealerDetail convert api data from API to general format based on config server\r\n\t * @param {Object} data response objectc from wc\r\n\t * @returns {Object}  converted data\r\n\t */\r\n\tasync dealerDetail(resData) {\r\n\t\tif(resData){\r\n\t\t\treturn {\r\n\t\t\t\t...resData,\r\n\t\t\t\tid: resData._id || '',\r\n\t\t\t\tkey: resData._id || '',\r\n\t\t\t\tcode: resData.code || '',\r\n\t\t\t\tcommission: resData.commission || '',\r\n\t\t\t\tdepositMoney: resData.depositMoney || '',\r\n\t\t\t\tname: resData.firstName + ' ' + resData.lastName,\r\n\t\t\t\tcountry: resData.country || '',\r\n\t\t\t\tcity: resData.city || '',\r\n\t\t\t\temail: resData.email || '',\r\n\t\t\t\tphone: resData.phone || '',\r\n\t\t\t\taddress1: resData.address1 || '',\r\n\t\t\t\taddress2: resData.address2 || '',\r\n\t\t\t\tcreated: resData.added || ''\r\n\t\t\t}\r\n\t\t}\r\n\t\telse return resData; \r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n   * @public\r\n   * @method pageList convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync pageList(resData) {\r\n\t\tconst data = resData.data || [];\r\n\r\n\t\tconst convertedData =\r\n\t\t\tdata.length > 0 &&\r\n\t\t\tdata.map((page) => {\r\n\t\t\t\treturn {\r\n\t\t\t\t\t...page,\r\n\t\t\t\t\tid: page._id || '',\r\n\t\t\t\t\tkey: page._id || '',\r\n\t\t\t\t\tname: page.name && page.name,\r\n\t\t\t\t\tdescription: page.description && page.description,\r\n\t\t\t\t\tcover: `${config['baseURL']}${page.cover ? page.cover.thumbnail : ''}`\r\n\t\t\t\t};\r\n\t\t\t});\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n* @public\r\n* @method themeList convert api data from API to general format based on config server\r\n* @param {Object} data response objectc from alpha\r\n* @returns {Object}  converted data\r\n*/\r\n\tasync themeList(resData) {\r\n\t\tconst data = resData || [];\r\n\r\n\t\tconst convertedData =\r\n\t\t\tdata.length > 0 &&\r\n\t\t\tdata.map((theme) => {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tid: theme._id || '',\r\n\t\t\t\t\tkey: theme._id || '',\r\n\t\t\t\t\tname: theme.name || '',\r\n\t\t\t\t\tadded: theme.added || '',\r\n\t\t\t\t\tthumbnail: `${config['baseURL']}${theme.thumbnail ? theme.thumbnail : \"\"}`,\r\n\r\n\t\t\t\t};\r\n\t\t\t});\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\r\n\t/**\r\n   * @public\r\n   * @method componentList convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync componentList(resData) {\r\n\t\tconst components = resData.components || {};\r\n\r\n\t\tif (components && components.length > 0) {\r\n\t\t\tconst convertedData =\r\n\t\t\t\tcomponents.length > 0 &&\r\n\t\t\t\tcomponents.map((component) => {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tid: component._id || '',\r\n\t\t\t\t\t\tkey: component._id || '',\r\n\t\t\t\t\t\tname: component.name || '',\r\n\t\t\t\t\t\titems: component.items.length > 0 ? component.items.map(item => {\r\n\t\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\t\t...item,\r\n\t\t\t\t\t\t\t\timage: item.image.length > 0 ? item.image.map(img => {\r\n\t\t\t\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\t\t\t\tcover: `${config['baseURL']}${img.thumbnail ? img.thumbnail : \"\"}`,\r\n\t\t\t\t\t\t\t\t\t\tid: img._id,\r\n\t\t\t\t\t\t\t\t\t\tname: img.name && img.name,\r\n\t\t\t\t\t\t\t\t\t\tadded: img.added,\r\n\t\t\t\t\t\t\t\t\t\ttitle: img.title,\r\n\t\t\t\t\t\t\t\t\t\tlabels: img.labels,\r\n\t\t\t\t\t\t\t\t\t\talt: img.alt,\r\n\t\t\t\t\t\t\t\t\t\tcaption: img.caption\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}) : []\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}) : []\r\n\t\t\t\t\t};\r\n\t\t\t\t});\r\n\r\n\t\t\treturn convertedData;\r\n\t\t}\r\n\r\n\t\treturn [];\r\n\t}\r\n\r\n\r\n\r\n\r\n\r\n\t/**\r\n   * @public\r\n   * @method regionList convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync regionList(data) {\r\n\t\tconst convertedData =\r\n\t\t\tdata.length > 0 &&\r\n\t\t\tdata.map((region) => {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tid: region._id || '',\r\n\t\t\t\t\tkey: region._id || '',\r\n\t\t\t\t\tname: region.name || '',\r\n\t\t\t\t\tpickUpLocation: region.pickUpLocation || '',\r\n\t\t\t\t\tcountry: region.country || '',\r\n\t\t\t\t\tcountryCode: region.countryCode || '',\r\n\t\t\t\t\tcountryName: region.countryName || '',\r\n\t\t\t\t\tcity: region.city || '',\r\n\t\t\t\t\ttime: region.time || '',\r\n\t\t\t\t\tcharge: region.charge || {}\r\n\t\t\t\t};\r\n\t\t\t});\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method attributeList convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync attributeList(data) {\r\n\t\tconst convertedData = Object.keys(data).length > 0 && data;\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method ImageListFromLibrary convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync ImageListFromLibrary(resData) {\r\n\t\tconst data = resData.data || [];\r\n\r\n\t\tconst convertedData =\r\n\t\t\tdata.length > 0 &&\r\n\t\t\tdata.map((image) => {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tid: image._id || '',\r\n\t\t\t\t\tname: image.name && image.name,\r\n\t\t\t\t\tcover: `${config['baseURL']}${image.thumbnail}`,\r\n\t\t\t\t\tadded: image.added,\r\n\t\t\t\t\ttitle: image.title,\r\n\t\t\t\t\tlabels: image.labels,\r\n\t\t\t\t\talt: image.alt,\r\n\t\t\t\t\tcaption: image.caption\r\n\t\t\t\t};\r\n\t\t\t});\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method countryList convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync countryList(resData) {\r\n\t\tconst data = resData || [];\r\n\r\n\t\tconst convertedData =\r\n\t\t\tdata.length > 0 &&\r\n\t\t\tdata.map((country) => {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tid: country._id || '',\r\n\t\t\t\t\tname: country.name && country.name\r\n\t\t\t\t};\r\n\t\t\t});\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method getDeliveryRegion convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\r\n\r\n   \r\n\tasync getDeliveryRegion(data) {\r\n\t\tconst convertedData = data;\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t\r\n\t/**\r\n   * @public\r\n   * @method cityList convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync cityList(resData) {\r\n\t\tconst data = resData || [];\r\n\r\n\t\tconst convertedData =\r\n\t\t\tdata.length > 0 &&\r\n\t\t\tdata.map((city) => {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tid: city._id || '',\r\n\t\t\t\t\tname: city.name && city.name\r\n\t\t\t\t};\r\n\t\t\t});\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method forAnalytics convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync forAnalytics(resData) {\r\n\t\treturn resData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method productDetail convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\r\n\tasync productDetail(data) {\r\n\t\tconst convertedData =\r\n\t\t\t(Object.keys(data).length > 0 && {\r\n\t\t\t\t...data,\r\n\t\t\t\tid: data._id || data.id || '',\r\n\t\t\t\tname: data.name || '',\r\n\t\t\t\tdescription: data.description.replace(/<[^>]+>/g, '') || '',\r\n\t\t\t\tregularPrice: data.price && data.price['regular'],\r\n\t\t\t\tofferPrice: data.price && data.price['offer'],\r\n\t\t\t\turl: data.url,\r\n\t\t\t\tavailableStock: data.availableStock,\r\n\t\t\t\tminimumStock: data.minimumStock,\r\n\t\t\t\tunit: data.unit,\r\n\t\t\t\tdate: data.date,\r\n\t\t\t\tvenue: data.venue,\r\n\t\t\t\tbrand: data.brand && Object.key(data.brand).length > 0 ? {\r\n\t\t\t\t\tid: data.brand.id,\r\n\t\t\t\t\tname: data.brand.name,\r\n\r\n\t\t\t\t} : {},\r\n\t\t\t\tprice:\r\n\t\t\t\t\tparseInt(data.price['offer']) > parseInt(data.price['regular'])\r\n\t\t\t\t\t\t? data.price['offer']\r\n\t\t\t\t\t\t: data.price['regular'],\r\n\t\t\t\tpricing: data.pricing,\r\n\t\t\t\tcategory:\r\n\t\t\t\t\t(data.category &&\r\n\t\t\t\t\t\tdata.category.length > 0 &&\r\n\t\t\t\t\t\tdata.category.map((cat) => {\r\n\t\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\t\tid: cat._id,\r\n\t\t\t\t\t\t\t\tname: cat.name\r\n\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t})) ||\r\n\t\t\t\t\tdata.category,\r\n\t\t\t\ttags: data.tags && data.tags.length > 0 ? data.tags : [],\r\n\r\n\t\t\t\tcover: {\r\n\t\t\t\t\tcover: `${config['baseURL']}${data.cover ? data.cover.original && data.cover.original : ''}`,\r\n\t\t\t\t\tid: data.cover ? data.cover._id : ''\r\n\t\t\t\t},\r\n\t\t\t\timage:\r\n\t\t\t\t\t(data.image &&\r\n\t\t\t\t\t\tdata.image.length > 0 &&\r\n\t\t\t\t\t\tdata.image.map((img) => {\r\n\t\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\t\tid: img._id || '',\r\n\t\t\t\t\t\t\t\tname: img.name && img.name,\r\n\t\t\t\t\t\t\t\tcover: `${config['baseURL']}${img.original}`,\r\n\t\t\t\t\t\t\t\tadded: img.added,\r\n\t\t\t\t\t\t\t\ttitle: img.title,\r\n\t\t\t\t\t\t\t\tlabels: img.labels,\r\n\t\t\t\t\t\t\t\talt: img.alt,\r\n\t\t\t\t\t\t\t\tcaption: img.caption\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t})) ||\r\n\t\t\t\t\t[],\r\n\t\t\t\t\tavailable: product.pricing &&\r\n\t\t\t\t\tproduct.pricing.length > 0 ?\r\n\t\t\t\t\t\t\t product.pricing[0]['stock'] && product.pricing[0]['stock']['available']\r\n\t\t\t\t\t\t\t : 0,\r\n\t\t\t\t\tminimum: product.pricing &&\r\n\t\t\t\t\tproduct.pricing.length > 0 ?\r\n\t\t\t\t\tproduct.pricing[0]['stock'] && product.pricing[0]['stock']['minimum']\r\n\t\t\t\t\t: 0\r\n\t\t\t}) ||\r\n\t\t\t{};\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\r\n\r\n\r\n\r\n\t/**\r\n   * @public\r\n   * @method couponDetail convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\r\n\tasync couponDetail(data) {\r\n\t\tconst convertedData =\r\n\t\t\t(Object.keys(data).length > 0 && {\r\n\t\t\t\t...data,\r\n\t\t\t\tid: data._id || '',\r\n\t\t\t\tname: data.name && data.name,\r\n\t\t\t\tcode: data.code,\r\n\t\t\t\tminimumOrder: data.minimumOrder,\r\n\t\t\t\tmaximumOrder: data.maximumOrder,\r\n\t\t\t\tfreeProducts: data.freeProducts || [],\r\n\t\t\t\tfreeProductsCount: data.freeProducts && data.orderedProducts.length,\r\n\t\t\t\tamountType: data.amountType,\r\n\t\t\t\tamount: data.amount,\r\n\t\t\t\tfreeDelivery: data.freeDelivery,\r\n\t\t\t\tstartDate: data.startDate,\r\n\t\t\t\tendDate: data.endDate,\r\n\t\t\t\tmaxUsePerUser: data.maxUsePerUser,\r\n\t\t\t\tactualPrice: data.actualPrice,\r\n\t\t\t\tunit: data.unit,\r\n\t\t\t\tcategory: data.category,\r\n\t\t\t\tpricing: data.pricing,\r\n\t\t\t\tdate: data.date,\r\n\t\t\t\ttime: data.time,\r\n\t\t\t\tvenue: data.venue,\r\n\t\t\t\tbrand: data.brand,\r\n\t\t\t\ttags: data.tags,\r\n\t\t\t}) ||\r\n\t\t\t{};\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\r\n\r\n    /**\r\n   * @public\r\n   * @method productDetailById convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync productDetailById(data) {\r\n\t\tconst convertedData =\r\n\t\t\t(Object.keys(data).length > 0 && {\r\n\t\t\t\t...data,\r\n\t\t\t\tid: data._id || data.id || '',\r\n\t\t\t\tname: data.name || '',\r\n\t\t\t\tdescription: data.description.replace(/<[^>]+>/g, '') || '',\r\n\t\t\t\tregularPrice: data.price && data.price['regular'],\r\n\t\t\t\tofferPrice: data.price && data.price['offer'],\r\n\t\t\t\turl: data.url,\r\n\t\t\t\tunit: data.unit,\r\n\t\t\t\tdate: data.date,\r\n\t\t\t\tvenue: data.venue,\r\n\t\t\t\tpricing: data.pricing,\r\n\t\t\t\tprice:\r\n\t\t\t\t\tparseInt(data.price['offer']) > parseInt(data.price['regular'])\r\n\t\t\t\t\t\t? data.price['offer']\r\n\t\t\t\t\t\t: data.price['regular'],\r\n\t\t\t\tcategory:\r\n\t\t\t\t\t(data.category &&\r\n\t\t\t\t\t\tdata.category.length > 0 &&\r\n\t\t\t\t\t\tdata.category.map((cat) => {\r\n\t\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\t\tid: cat._id,\r\n\t\t\t\t\t\t\t\tname: cat.name,\r\n\t\t\t\t\t\t\t\tcover: `${config['baseURL']}${cat.cover ? cat.cover.original && cat.cover.original : ''}`\r\n\r\n\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t})) ||\r\n\t\t\t\t\tdata.category,\r\n\t\t\t\tbrand:\r\n\t\t\t\t\tdata.brand &&\r\n\t\t\t\t\t\tObject.keys(data.brand).length > 0 ? {\r\n\t\t\t\t\t\t\tid: data.brand._id,\r\n\t\t\t\t\t\t\tname: data.brand.name,\r\n\t\t\t\t\t\t\tcover: `${config['baseURL']}${data.brand.cover ? data.brand.cover.original && data.brand.cover.original : ''}`\r\n\t\t\t\t\t\t} :\r\n\t\t\t\t\t\tdata.brand,\r\n\t\t\t\tprimaryCategory: data.primaryCategory &&\r\n\t\t\t\t\tObject.keys(data.primaryCategory).length > 0 ? {\r\n\t\t\t\t\t\tid: data.primaryCategory._id,\r\n\t\t\t\t\t\tname: data.primaryCategory.name,\r\n\t\t\t\t\t\tcover: `${config['baseURL']}${data.primaryCategory.cover ? data.primaryCategory.cover.original && data.primaryCategory.cover.original : ''}`\r\n\t\t\t\t\t} :\r\n\t\t\t\t\tdata.primaryCategory,\r\n\t\t\t\ttags: data.tags && data.tags.length > 0 ? data.tags : [],\r\n\t\t\t\tavailableStock: data.availableStock,\r\n\t\t\t\tcover: {\r\n\t\t\t\t\tcover: `${config['baseURL']}${data.cover ? data.cover.original && data.cover.original : ''}`,\r\n\t\t\t\t\tid: data.cover ? data.cover._id : ''\r\n\t\t\t\t},\r\n\t\t\t\timage:\r\n\t\t\t\t\t(data.image &&\r\n\t\t\t\t\t\tdata.image.length > 0 &&\r\n\t\t\t\t\t\tdata.image.map((img) => {\r\n\t\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\t\tid: img._id || '',\r\n\t\t\t\t\t\t\t\tname: img.name && img.name,\r\n\t\t\t\t\t\t\t\tcover: `${config['baseURL']}${img.original}`,\r\n\t\t\t\t\t\t\t\tadded: img.added,\r\n\t\t\t\t\t\t\t\ttitle: img.title,\r\n\t\t\t\t\t\t\t\tlabels: img.labels,\r\n\t\t\t\t\t\t\t\talt: img.alt,\r\n\t\t\t\t\t\t\t\tcaption: img.caption\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t})) ||\r\n\t\t\t\t\t[]\r\n\t\t\t}) ||\r\n\t\t\t{};\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method updateProduct convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync updateProduct(data) {\r\n\t\tconst convertedData = data;\r\n\r\n\t\tif (data && data.updated) {\r\n\t\t\treturn {\r\n\t\t\t\t...data.updated,\r\n\t\t\t\tid: data.updated._id || data.updated.id || '',\r\n\t\t\t\tname: data.updated.name || '',\r\n\t\t\t\tdescription: data.updated.description.replace(/<[^>]+>/g, '') || '',\r\n\t\t\t\tregularPrice: data.updated.price && data.updated.price['regular'],\r\n\t\t\t\tofferPrice: data.updated.price && data.updated.price['offer'],\r\n\t\t\t\turl: data.updated.url,\r\n\t\t\t\tavailableStock: data.updated.availableStock,\r\n\t\t\t\tminimumStock: data.updated.minimumStock,\r\n\t\t\t\tunit: data.updated.unit,\r\n\t\t\t\tdate: data.updated.date,\r\n\t\t\t\tvenue: data.updated.venue,\r\n\t\t\t\tbrand: data.updated.brand && Object.key(data.updated.brand).length > 0 ? {\r\n\t\t\t\t\tid: data.updated.brand.id,\r\n\t\t\t\t\tname: data.updated.brand.name,\r\n\r\n\t\t\t\t} : {},\r\n\t\t\t\tprice:\r\n\t\t\t\t\tparseInt(data.updated.price['offer']) > parseInt(data.updated.price['regular'])\r\n\t\t\t\t\t\t? data.updated.price['offer']\r\n\t\t\t\t\t\t: data.updated.price['regular'],\r\n\t\t\t\tpricing: data.updated.pricing,\r\n\t\t\t\tcategory:\r\n\t\t\t\t\t(data.updated.category &&\r\n\t\t\t\t\t\tdata.updated.category.length > 0 &&\r\n\t\t\t\t\t\tdata.updated.category.map((cat) => {\r\n\t\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\t\tid: cat._id,\r\n\t\t\t\t\t\t\t\tname: cat.name\r\n\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t})) ||\r\n\t\t\t\t\tdata.updated.category,\r\n\t\t\t\ttags: data.updated.tags && data.updated.tags.length > 0 ? data.updated.tags : [],\r\n\r\n\t\t\t\tcover: {\r\n\t\t\t\t\tcover: `${config['baseURL']}${data.updated.cover ? data.updated.cover.original && data.updated.cover.original : ''}`,\r\n\t\t\t\t\tid: data.updated.cover ? data.updated.cover._id : ''\r\n\t\t\t\t},\r\n\t\t\t\timage:\r\n\t\t\t\t\t(data.updated.image &&\r\n\t\t\t\t\t\tdata.updated.image.length > 0 &&\r\n\t\t\t\t\t\tdata.updated.image.map((img) => {\r\n\t\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\t\tid: img._id || '',\r\n\t\t\t\t\t\t\t\tname: img.name && img.name,\r\n\t\t\t\t\t\t\t\tcover: `${config['baseURL']}${img.original}`,\r\n\t\t\t\t\t\t\t\tadded: img.added,\r\n\t\t\t\t\t\t\t\ttitle: img.title,\r\n\t\t\t\t\t\t\t\tlabels: img.labels,\r\n\t\t\t\t\t\t\t\talt: img.alt,\r\n\t\t\t\t\t\t\t\tcaption: img.caption\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t})) ||\r\n\t\t\t\t\t[],\r\n\t\t\t\t\tstatus: 'ok'\r\n\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\r\n\t/**\r\n* @public\r\n* @method updateComponent convert api data from API to general format based on config server\r\n* @param {Object} data response objectc from wc\r\n* @returns {Object}  converted data\r\n*/\r\n\tasync updateComponent(data) {\r\n\t\tconst convertedData = data;\r\n\r\n\t\tif (data && data.updated) {\r\n\t\t\treturn {\r\n\t\t\t\t...data.updated,\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\r\n\t\t/**\r\n* @public\r\n* @method updateCoupon convert api data from API to general format based on config server\r\n* @param {Object} data response objectc from wc\r\n* @returns {Object}  converted data\r\n*/\r\nasync updateCoupon(data) {\r\n\tconst convertedData = data;\r\n\r\n\tif (data && data.updated) {\r\n\t\treturn {\r\n\t\t\t...data.updated,\r\n\t\t\tstatus: 'ok'\r\n\t\t};\r\n\t}\r\n\r\n\treturn convertedData;\r\n}\r\n\t\r\n\t\r\n\r\n\t/**\r\n* @public\r\n* @method categoryUpdateIcon convert api data from API to general format based on config server\r\n* @param {Object} data response objectc from wc\r\n* @returns {Object}  converted data\r\n*/\r\nasync categoryUpdateIcon(data) {\r\n\tconst convertedData = data;\r\n\r\n\tif (data && data.updated) {\r\n\t\treturn {\r\n\t\t\t...data.updated,\r\n\t\t\tstatus: 'ok'\r\n\t\t};\r\n\t}\r\n\r\n\treturn convertedData;\r\n}\r\n\r\n\t\r\n\r\n\t/**\r\n   * @public\r\n   * @method updateImageFromLibrary convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync updateImageFromLibrary(data) {\r\n\t\tconst convertedData = data;\r\n\r\n\t\tif (data && data.updated) {\r\n\t\t\treturn {\r\n\t\t\t\t...data.updated,\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method updateTag convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync updateTag(data) {\r\n\t\tconst convertedData = data;\r\n\r\n\t\tif (data && data.updated) {\r\n\t\t\treturn {\r\n\t\t\t\t...data.updated,\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\r\n\t\t/**\r\n   * @public\r\n   * @method updateDealerArea convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async updateDealerArea(data) {\r\n\tconst convertedData = data;\r\n\r\n\tif (data && data.updated) {\r\n\t\treturn {\r\n\t\t\t...data.updated,\r\n\t\t\tstatus: 'ok'\r\n\t\t};\r\n\t}\r\n\r\n\treturn convertedData;\r\n}\r\n\r\n\r\n\r\n\t\t/**\r\n   * @public\r\n   * @method updateDealer convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async updateDealer(data) {\r\n\tconst convertedData = data;\r\n\r\n\tif (data && data.updated) {\r\n\t\treturn {\r\n\t\t\t...data.updated,\r\n\t\t\tstatus: 'ok'\r\n\t\t};\r\n\t}\r\n\r\n\treturn convertedData;\r\n}\r\n\r\n\r\n\r\n\r\n\t\r\n\r\n\t/**\r\n* @public\r\n* @method updatePage convert api data from API to general format based on config server\r\n* @param {Object} data response objectc from wc\r\n* @returns {Object}  converted data\r\n*/\r\n\tasync updatePage(data) {\r\n\t\tconst convertedData = data;\r\n\r\n\t\tif (data && data.updated) {\r\n\t\t\treturn {\r\n\t\t\t\t...data.updated,\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method updateBrand convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync updateBrand(data) {\r\n\t\tconst convertedData = data;\r\n\r\n\t\tif (data && data.updated) {\r\n\t\t\treturn {\r\n\t\t\t\t...data.updated,\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\r\n\t\t/**\r\n   * @public\r\n   * @method updateBundle convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async updateBundle(data) {\r\n\tconst convertedData = data;\r\n\r\n\tif (data && Object.keys(data).length > 0) {\r\n\t\treturn {\r\n\t\t\t...data,\r\n\t\t\tstatus: 'ok'\r\n\t\t};\r\n\t}\r\n\r\n\treturn convertedData;\r\n}\r\n\r\n\r\n\r\n\t/**\r\n   * @public\r\n   * @method updateCategory convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync updateCategory(data) {\r\n\t\tconst convertedData = data;\r\n\r\n\t\tif (data && data.updated) {\r\n\t\t\treturn {\r\n\t\t\t\t...data.updated,\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method updateCustomer convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync updateCustomer(data) {\r\n\t\tconst convertedData = data;\r\n\r\n\t\tif (data && data.updated) {\r\n\t\t\treturn {\r\n\t\t\t\t...data.updated,\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method updateRegion convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync updateRegion(data) {\r\n\t\tconst convertedData = data;\r\n\r\n\t\tif (data && data.updated) {\r\n\t\t\treturn {\r\n\t\t\t\t...data.updated,\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method deleteProduct convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync deleteProduct(data) {\r\n\t\tconst convertedData = data;\r\n\t\tif (data && data.success) {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t\t/**\r\n   * @public\r\n   * @method postCategoryDelete convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async postCategoryDelete(data) {\r\n\tconst convertedData = data;\r\n\tif (data && data.success) {\r\n\t\treturn {\r\n\t\t\tstatus: 'ok'\r\n\t\t};\r\n\t}\r\n\r\n\treturn convertedData;\r\n}\r\n\r\n\r\n\t\r\n\r\n\r\n\r\n\t\t/**\r\n   * @public\r\n   * @method deletePost convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async deletePost(data) {\r\n\tconst convertedData = data;\r\n\tif (data && data.success) {\r\n\t\treturn {\r\n\t\t\tstatus: 'ok'\r\n\t\t};\r\n\t}\r\n\r\n\treturn convertedData;\r\n}\r\n\r\n\r\n\t/**\r\n   * @public\r\n   * @method deleteBundle convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync deleteBundle(data) {\r\n\t\tconst convertedData = data;\r\n\t\tif (data && data.success) {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n   * @public\r\n   * @method deleteCoupon convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync deleteCoupon(data) {\r\n\t\tconst convertedData = data;\r\n\t\tif (data && data.success) {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\r\n\r\n\r\n\t/**\r\n* @public\r\n* @method pageDetail convert api data from API to general format based on config server\r\n* @param {Object} data response objectc from wc\r\n* @returns {Object}  converted data\r\n*/\r\n\tasync pageDetail(data) {\r\n\t\tconst convertedData = data;\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\r\n\t/**\r\n   * @public\r\n   * @method updateOrderStatus convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync updateOrderStatus(data) {\r\n\t\tconst convertedData = data;\r\n\t\tif (data && data.success) {\r\n\t\t\treturn {\r\n\t\t\t\t...data,\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method deleteImageFromLibrary convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync deleteImageFromLibrary(data) {\r\n\t\tconst convertedData = data;\r\n\t\tif (data && data.success) {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n* @public\r\n* @method deletePage convert api data from API to general format based on config server\r\n* @param {Object} data response objectc from wc\r\n* @returns {Object}  converted data\r\n*/\r\n\tasync deletePage(data) {\r\n\t\tconst convertedData = data;\r\n\t\tif (data && data.success) {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n   * @public\r\n   * @method addTag convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync addTag(data) {\r\n\t\tconst convertedData = data;\r\n\t\tif (data && data.inserted) {\r\n\t\t\treturn {\r\n\t\t\t\t...data.inserted[0],\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\r\n\t\r\n\t/**\r\n   * @public\r\n   * @method addDealerArea convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async addDealerArea(data) {\r\n\tconst convertedData = data;\r\n\tif (data && data[0]) {\r\n\t\treturn {\r\n\t\t\t...data[0],\r\n\t\t\tstatus: 'ok'\r\n\t\t};\r\n\t}\r\n\r\n\treturn convertedData;\r\n}\r\n\r\n\r\n\r\n\t/**\r\n   * @public\r\n   * @method postAddCategory convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async postAddCategory(data) {\r\n\tconst convertedData = data;\r\n\tif (data && data[0]) {\r\n\t\treturn {\r\n\t\t\t...data[0],\r\n\t\t\tstatus: 'ok'\r\n\t\t};\r\n\t}\r\n\r\n\treturn convertedData;\r\n}\r\n\r\n\t/**\r\n   * @public\r\n   * @method postCategoryUpdate convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async postCategoryUpdate(data) {\r\n\tconst convertedData = data;\r\n\tif (data && data[0]) {\r\n\t\treturn {\r\n\t\t\t...data[0],\r\n\t\t\tstatus: 'ok'\r\n\t\t};\r\n\t}\r\n\r\n\treturn convertedData;\r\n}\r\n\r\n\r\n\r\n\r\n\t\r\n\t/**\r\n   * @public\r\n   * @method dealerAreaList convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async dealerAreaList(resData) {\r\n\tconst data = resData || [];\r\n\r\n\t\tconst convertedData =\r\n\t\t\tdata.length > 0 &&\r\n\t\t\tdata.map((tag) => {\r\n\t\t\t\treturn {\r\n\t\t\t\t\t...tag,\r\n\t\t\t\t\tid: tag._id || '',\r\n\t\t\t\t\tkey: tag._id || '',\r\n\t\t\t\t\tname: tag.name && tag.name,\r\n\t\t\t\t};\r\n\t\t\t});\r\n\r\n\t\treturn convertedData;\r\n}\r\n\r\n\r\n\r\n\t\r\n\t/**\r\n   * @public\r\n   * @method addDealer convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async addDealer(data) {\r\n\tconst convertedData = data;\r\n\tif (data && data.inserted) {\r\n\t\treturn {\r\n\t\t\t...data.inserted[0],\r\n\t\t\tstatus: 'ok'\r\n\t\t};\r\n\t}\r\n\r\n\treturn convertedData;\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\t/**\r\n   * @public\r\n   * @method addCategory convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  \r\n\tasync addCategory(data) {\r\n\t\tconst convertedData = data;\r\n\t\tif (data && data.inserted) {\r\n\t\t\treturn {\r\n\t\t\t\t...data.inserted[0],\r\n\t\t\t\tstatus: 'ok',\r\n\t\t\t\tcover: data.inserted[0].cover ? `${config['baseURL']}${data.inserted[0].cover ? data.inserted[0].cover.thumbnail : ''}` : '',\r\n\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}; \r\n\r\n\r\n\t\t/**\r\n   * @public\r\n   * @method postAddCategory convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync postAddCategory(data) {\r\n\t\tconst convertedData = data;\r\n\t\tif (data && data.inserted) {\r\n\t\t\treturn {\r\n\t\t\t\t...data.inserted[0],\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t};\r\n\r\n\r\n\t/**\r\n   * @public\r\n   * @method addProduct convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\r\n\tasync addProduct(data) {\r\n\t\tconst convertedData = data;\r\n\t\tif (data && data.inserted) {\r\n\t\t\treturn {\r\n\t\t\t\t...data.inserted[0],\r\n\t\t\t\tstatus: 'ok',\r\n\t\t\t\tcover: data.inserted[0].cover ? `${config['baseURL']}${data.inserted[0].cover ? data.inserted[0].cover.thumbnail : ''}` : '',\r\n\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\r\n\t\t/**\r\n   * @public\r\n   * @method addPost convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\r\n  async addPost(data) {\r\n\tconst convertedData = data;\r\n\tif (data && data.inserted) {\r\n\t\treturn {\r\n\t\t\t...data.inserted[0],\r\n\t\t\tstatus: 'ok',\r\n\t\t\tcover: data.inserted[0].cover ? `${config['baseURL']}${data.inserted[0].cover ? data.inserted[0].cover.thumbnail : ''}` : '',\r\n\t\t\t\r\n\t\t};\r\n\t}\r\n\treturn convertedData;\r\n}\r\n\r\n\r\n\t\t/**\r\n   * @public\r\n   * @method addOrderNote convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\r\n  async addOrderNote(data) {\r\n\tconst convertedData = data;\r\n\tif (data && data[0]) {\r\n\t\treturn {\r\n\t\t\t...data[0],\r\n\t\t\tstatus: 'ok',\t\t\t\r\n\t\t};\r\n\t}\r\n\treturn convertedData;\r\n}\r\n\r\n\t\t/**\r\n   * @public\r\n   * @method updateOrderNote convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\r\n\tasync updateOrderNote(data) {\r\n\t\tconst convertedData = data;\r\n\t\tif (data && data['updated']) {\r\n\t\t\treturn {\r\n\t\t\t\t...data['updated'],\r\n\t\t\t\tstatus: 'ok',\t\t\t\r\n\t\t\t};\r\n\t\t}\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\r\n\t/**\r\n   * @public\r\n   * @method postAddTag convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\r\n\tasync postAddTag(data) {\r\n\t\tconst convertedData = data;\r\n\t\tif (data && data.inserted) {\r\n\t\t\treturn {\r\n\t\t\t\t...data.inserted[0],\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t\r\n\t/**\r\n   * @public\r\n   * @method addOrder convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\r\n\r\n\r\n  async addOrder(data) {\r\n\tconst convertedData = data;\r\n\tif (data && data.inserted) {\r\n\t\treturn {\r\n\t\t\t...data.inserted[0],\r\n\t\t\tstatus: 'ok'\r\n\t\t};\r\n\t}\r\n\treturn convertedData;\r\n}\r\n\r\n\r\n\r\n\t/**\r\n   * @public\r\n   * @method getOrderNote convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\r\n  async getOrderNote(data) {\r\n\tconst convertedData = data;\r\n\treturn convertedData; \r\n}\r\n\r\n\r\n\r\n\r\n\r\n\t/**\r\n* @public\r\n* @method addTheme convert api data from API to general format based on config server\r\n* @param {Object} data response objectc from wc\r\n* @returns {Object}  converted data\r\n*/\r\n\tasync addTheme(data) {\r\n\t\tconst convertedData = data;\r\n\t\tif (data && data.success) {\r\n\t\t\treturn {\r\n\t\t\t\t...data.inserted[0],\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t\r\n\r\n\r\n\t\r\n\t\r\n\t/**\r\n* @public\r\n* @method postDeleteTag convert api data from API to general format based on config server\r\n* @param {Object} data response objectc from wc\r\n* @returns {Object}  converted data\r\n*/\r\nasync postDeleteTag(data) {\r\n\tconst convertedData = data;\r\n\tif (data && data.success) {\r\n\t\treturn {\r\n\t\t\tstatus: 'ok'\r\n\t\t};\r\n\t}\r\n\r\n\treturn convertedData;\r\n}\r\n\r\n\r\n\r\n\t\r\n\r\n\t\t/**\r\n* @public\r\n* @method deleteOrderNote convert api data from API to general format based on config server\r\n* @param {Object} data response objectc from wc\r\n* @returns {Object}  converted data\r\n*/\r\nasync deleteOrderNote(data) {\r\n\tconst convertedData = data;\r\n\tif (data && data.success) {\r\n\t\treturn {\r\n\t\t\tstatus: 'ok'\r\n\t\t};\r\n\t}\r\n\r\n\treturn convertedData;\r\n}\r\n\r\n\r\n\t/**\r\n* @public\r\n* @method addPage convert api data from API to general format based on config server\r\n* @param {Object} data response objectc from wc\r\n* @returns {Object}  converted data\r\n*/\r\n\tasync addPage(data) {\r\n\t\tconst convertedData = data;\r\n\t\tif (data && data[0]) {\r\n\t\t\treturn {\r\n\t\t\t\t...data[0],\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\r\n\t/**\r\n   * @public\r\n   * @method addBrand convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync addBrand(data) {\r\n\t\tconst convertedData = data;\r\n\t\tif (data && data.inserted) {\r\n\t\t\treturn {\r\n\t\t\t\t...data.inserted[0],\r\n\t\t\t\tstatus: 'ok',\r\n\t\t\t\tcover: data.inserted[0].cover ? `${config['baseURL']}${data.inserted[0].cover ? data.inserted[0].cover.thumbnail : ''}` : '',\r\n\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\t/**\r\n   * @public\r\n   * @method addComponent convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync addComponent(data) {\r\n\t\tconst convertedData = data;\r\n\t\tif (data && data.inserted) {\r\n\t\t\treturn {\r\n\t\t\t\t...data.inserted[0],\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\r\n\r\n\r\n\t/**\r\n   * @public\r\n   * @method addCustomer convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync addCustomer(data) {\r\n\t\tconst convertedData = data;\r\n\t\tif (data && data.inserted) {\r\n\t\t\treturn {\r\n\t\t\t\t...data.inserted[0],\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method addRegion convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync addRegion(data) {\r\n\t\tconst convertedData = data;\r\n\t\tif (data && data.inserted) {\r\n\t\t\treturn {\r\n\t\t\t\t...data.inserted[0],\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method deleteTag convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync deleteTag(data) {\r\n\t\tconst convertedData = data;\r\n\t\tif (data && data.success) {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t\t/**\r\n   * @public\r\n   * @method deleteDealerArea convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async deleteDealerArea(data) {\r\n\tconst convertedData = data;\r\n\tif (data && data.success) {\r\n\t\treturn {\r\n\t\t\tstatus: 'ok'\r\n\t\t};\r\n\t}\r\n\r\n\treturn convertedData;\r\n}\r\n\r\n\t\t/**\r\n   * @public\r\n   * @method deleteDealer convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async deleteDealer(data) {\r\n\tconst convertedData = data;\r\n\tif (data && data.success) {\r\n\t\treturn {\r\n\t\t\tstatus: 'ok'\r\n\t\t};\r\n\t}\r\n\r\n\treturn convertedData;\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\t/**\r\n   * @public\r\n   * @method logout convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync logout(data) {\r\n\t\tconst convertedData = data;\r\n\t\tif (data && data.success) {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\r\n\t/**\r\n* @public\r\n* @method activeTheme convert api data from API to general format based on config server\r\n* @param {Object} data response objectc from wc\r\n* @returns {Object}  converted data\r\n*/\r\n\tasync activeTheme(data) {\r\n\t\tconst convertedData = data;\r\n\t\tif (data && data.success) {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method deletetheme convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync deletetheme(data) {\r\n\t\tconst convertedData = data;\r\n\t\tif (data && data.success) {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\r\n\t/**\r\n   * @public\r\n   * @method deleteCustomer convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync deleteCustomer(data) {\r\n\t\tconst convertedData = data;\r\n\t\tif (data && data.success) {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\r\n\t/**\r\n* @public\r\n* @method deleteComponent convert api data from API to general format based on config server\r\n* @param {Object} data response objectc from wc\r\n* @returns {Object}  converted data\r\n*/\r\n\tasync deleteComponent(data) {\r\n\t\tconst convertedData = data;\r\n\t\tif (data && data.success) {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\r\n\t/**\r\n   * @public\r\n   * @method deleteBrand convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync deleteBrand(data) {\r\n\t\tconst convertedData = data;\r\n\t\tif (data && data.success) {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method deleteCategory convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync deleteCategory(data) {\r\n\t\tconst convertedData = data;\r\n\t\tif (data && data.success) {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method deleteRegion convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync deleteRegion(data) {\r\n\t\tconst convertedData = data;\r\n\t\tif (data && data.success) {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n   * @public\r\n   * @method siteSettings convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync siteSettings(resData) {\r\n\t\tconst convertedData = resData;\r\n\r\n\t\tif (resData.data) {\r\n\t\t\treturn {\r\n\t\t\t\t...resData.data\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\r\n\t\t/**\r\n   * @public\r\n   * @method getSiteSEO convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async getSiteSEO(resData) {\r\n\tconst convertedData = resData;\r\n\r\n\tif (resData.data) {\r\n\t\treturn {\r\n\t\t\t...resData.data\r\n\t\t}\r\n\t}\r\n\r\n\treturn convertedData;\r\n}\r\n\r\n\r\n\r\n\t\t/**\r\n   * @public\r\n   * @method getAdminCredential convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async getAdminCredential(resData) {\r\n\tconst convertedData = resData;\r\n\r\n\tif (resData.data) {\r\n\t\treturn {\r\n\t\t\t...resData.data\r\n\t\t}\r\n\t}\r\n\r\n\treturn convertedData;\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\t/**\r\n* @public\r\n* @method updateSiteSettings convert api data from API to general format based on config server\r\n* @param {Object} data response objectc from wc\r\n* @returns {Object}  converted data\r\n*/\r\n\tasync updateSiteSettings(data) {\r\n\r\n\t\tif (data['updated']) {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn data;\r\n\t}; \r\n\r\n\r\n\r\n\t\t/**\r\n* @public\r\n* @method updateSiteSEO convert api data from API to general format based on config server\r\n* @param {Object} data response objectc from wc\r\n* @returns {Object}  converted data\r\n*/\r\nasync updateSiteSEO(data) {\r\n\r\n\tif (data['updated']) {\r\n\t\treturn {\r\n\t\t\t...data['updated'],\r\n\t\t\tstatus: 'ok'\r\n\t\t}\r\n\t}\r\n\r\n\treturn data;\r\n};\r\n\r\n\r\n\r\n\r\n\t\t/**\r\n* @public\r\n* @method updateAdminCredential convert api data from API to general format based on config server\r\n* @param {Object} data response objectc from wc\r\n* @returns {Object}  converted data\r\n*/\r\nasync updateAdminCredential(data) {\r\n\r\n\tif (data && Object.keys(data).length > 0) {\r\n\t\treturn {\r\n\t\t\t...data,\r\n\t\t\tstatus: 'ok'\r\n\t\t}\r\n\t}\r\n\r\n\treturn data;\r\n};\r\n\r\n\r\n\r\n\r\n\r\n/**\r\n* @public\r\n* @method adminUpdatePassword convert api data from API to general format based on config server\r\n* @param {Object} data response objectc from wc\r\n* @returns {Object}  converted data\r\n*/\r\nasync adminUpdatePassword(data) {\r\n\r\n\tif (data['updated']) {\r\n\t\treturn {\r\n\t\t\t...data['updated'],\r\n\t\t\tstatus: 'ok'\r\n\t\t}\r\n\t}\r\n\r\n\treturn data;\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\t\r\n\r\n\r\n\r\n\t/**\r\n* @public\r\n* @method updateInvoiceSettings convert api data from API to general format based on config server\r\n* @param {Object} data response objectc from wc\r\n* @returns {Object}  converted data\r\n*/\r\n\tasync updateInvoiceSettings(data) {\r\n\r\n\t\tif (data['updated']) {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn data;\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n   * @public\r\n   * @method invoiceSettingsDetail convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync invoiceSettingsDetail(resData) {\r\n\t\tconst convertedData = resData;\r\n\r\n\t\tif (resData.data) {\r\n\t\t\treturn {\r\n\t\t\t\t...resData.data\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\r\n\r\n\r\n\t/**\r\n   * @public\r\n   * @method categoryDetail convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync categoryDetail(data) {\r\n\r\n\t\tconst convertedData = {\r\n\t\t\t...data,\r\n\t\t\tid: data.id || data._id || '',\r\n\t\t\tname: data.name && data.name,\r\n\t\t\tdescription: data.description && data.description,\r\n\t\t\tproductCount: data.productCount || 0,\r\n\t\t\ticon: data.icon ? `${config['baseURL']}${data.icon}` : '',\r\n\t\t\ttype: data.subCategory.length > 0 && data.subCategory[0] && data.subCategory[0]['name'] ? 'Top category' : 'Child category',\r\n\t\t\turl: data.url || '',\r\n\t\t\tsubCategory:\r\n\t\t\t\tdata.subCategory.length > 0 && data.subCategory[0] && data.subCategory[0]['name']\r\n\t\t\t\t\t? data.subCategory.map((subCat) => {\r\n\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\tid: subCat._id || '',\r\n\t\t\t\t\t\t\tname: subCat.name && subCat.name,\r\n\t\t\t\t\t\t\tdescription: subCat.description && subCat.description,\r\n\t\t\t\t\t\t\tcover: subCat.cover ? `${config['baseURL']}${subCat.cover.medium}` : ''\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t})\r\n\t\t\t\t\t: [],\r\n\t\t\tcover: {\r\n\t\t\t\tcover: `${config['baseURL']}${data.cover ? data.cover.original && data.cover.original : ''}`,\r\n\t\t\t\tid: data.cover ? data.cover._id : ''\r\n\t\t\t},\r\n\t\t\timage:\r\n\t\t\t\t(data.image &&\r\n\t\t\t\t\tdata.image.length > 0 &&\r\n\t\t\t\t\tdata.image.map((img) => {\r\n\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\tid: img._id || '',\r\n\t\t\t\t\t\t\tname: img.name && img.name,\r\n\t\t\t\t\t\t\tcover: `${config['baseURL']}${img.medium}`,\r\n\t\t\t\t\t\t\tadded: img.added,\r\n\t\t\t\t\t\t\ttitle: img.title,\r\n\t\t\t\t\t\t\tlabels: img.labels,\r\n\t\t\t\t\t\t\talt: img.alt,\r\n\t\t\t\t\t\t\tcaption: img.caption\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})) ||\r\n\t\t\t\t[]\r\n\t\t};\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\t/**\r\n   * @public\r\n   * @method createOrder convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync createOrder(data) {\r\n\t\t//map props\r\n\r\n\t\tconst formatedData = {\r\n\t\t\t...data\r\n\t\t};\r\n\r\n\t\treturn formatedData;\r\n\t}\r\n\r\n\r\n\t\r\n\r\n\t\t/**\r\n   * @public\r\n   * @method adminRoleRegister convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync adminRoleRegister(data) {\r\n\t\t//map props\r\n\r\n\r\n\r\n\r\n\r\n\r\n\t\tif(data && data.length > 0){\r\n\t\t\treturn {\r\n\t\t\t\tstatus: 'ok',\r\n\t\t\t\t...data[0]\r\n\t\t\t}\r\n\t\t}\r\n\t\telse return {}; \r\n\t}\r\n\r\n\r\n\t\t\t/**\r\n   * @public\r\n   * @method adminList convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync adminList(resData) {\r\n\t\t//map props\r\n\r\n\t\treturn resData; \r\n\t}; \r\n\r\n\r\n\t\t\t\t/**\r\n   * @public\r\n   * @method adminDetail convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async adminDetail(resData) {\r\n\t//map props\r\n\r\n\treturn resData; \r\n}; \r\n\r\n\r\n\t\r\n\r\n\r\n\t/**\r\n* @public\r\n* @method orderDetail convert api data from API to general format based on config server\r\n* @param {Object} data response objectc from wc\r\n* @returns {Object}  converted data\r\n*/\r\n\tasync orderDetail(data) {\r\n\t\t//map props\r\n\t\tconst order = data.order || false;\r\n\t\tif (order) {\r\n\t\t\treturn {\r\n\t\t\t\t...order,\r\n\t\t\t\tid: order.id || order._id,\r\n\t\t\t\tshippingAddress: order.shippingAddress,\r\n\t\t\t\tname: order.shippingAddress['firstName'] + \" \" + order.shippingAddress['lastName'],\r\n\t\t\t\tcountry: order.shippingAddress['country'],\r\n\t\t\t\tcity: order.shippingAddress['city'],\r\n\t\t\t\taddress: order.shippingAddress['address'],\r\n\t\t\t\tphone: order.shippingAddress['phone'],\r\n\t\t\t\temail: order.shippingAddress['email'],\r\n\t\t\t\tshortCode: order.shortCode || '',\r\n\t\t\t\tstatus: typeof order.status === 'string' ? order.status : order.status && Object.keys(order.status).length > 0  ? order.status['name'] : 'pending',\r\n\t\t\t\ttotal: order.totalPrice,\r\n\t\t\t\tdeliveryCharge: order.totalPrice,\r\n\t\t\t\tdeliveryRegion: order.deliveryRegion,\r\n\t\t\t\tdeliveryName: order.deliveryRegion && order.deliveryRegion['name'],\r\n\t\t\t\tdeliveryPickUpLocation: order.deliveryRegion && order.deliveryRegion['pickUpLocation'],\r\n\t\t\t\tdeliveryCountryName: order.deliveryRegion && order.deliveryRegion['countryName'],\r\n\t\t\t\tproducts: order.products && order.products.length > 0 ? order.products.map(product => {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\t...product,\r\n\t\t\t\t\t\tid: product._id || '',\r\n\t\t\t\t\t\tname: product.name && product.name,\r\n\t\t\t\t\t\tdescription: product.description && product.description,\r\n\t\t\t\t\t\tcover: `${config['baseURL']}${(product.cover && product.cover['thumbnail']) || ''}`,\r\n\t\t\t\t\t\tregularPrice: product.price && product.price['regular'],\r\n\t\t\t\t\t\tofferPrice: product.price && product.price['offer'],\r\n\t\t\t\t\t\turl: product.url,\r\n\t\t\t\t\t\tunit: product.unit,\r\n\t\t\t\t\t\tcategory: product.category,\r\n\t\t\t\t\t\tpricing: product.pricing,\r\n\t\t\t\t\t\tdate: product.date,\r\n\t\t\t\t\t\ttime: product.time,\r\n\t\t\t\t\t\tvenue: product.venue,\r\n\t\t\t\t\t\tbrand: product.brand,\r\n\t\t\t\t\t\ttags: product.tags,\r\n\t\t\t\t\t\tprice: product.price,\r\n\t\t\t\t\t\tavailable: product.pricing &&\r\n\t\t\t\t\t\t product.pricing.length > 0 ?\r\n\t\t\t\t\t\t  product.pricing[0]['stock'] && product.pricing[0]['stock']['available']\r\n\t\t\t\t\t\t  : 0,\r\n\t\t\t\t\t\t  minimum: product.pricing &&\r\n\t\t\t\t\t\t product.pricing.length > 0 ?\r\n\t\t\t\t\t\t  product.pricing[0]['stock'] && product.pricing[0]['stock']['minimum']\r\n\t\t\t\t\t\t  : 0\r\n\t\t\t\t\t}\r\n\t\t\t\t}) : [],\r\n\t\t\t\tdate_created: order.added,\r\n\t\t\t\tpaymentMethod: order['payment']['paymentMethod'],\r\n\t\t\t\tpaymentStatus: order['payment']['status'],\r\n\t\t\t\tpayment: order['payment'],\r\n\t\t\t\tcustomerId: order['customer'] ? order['customer']['_id'] : ''\r\n\t\t\t}\r\n\t\t}\r\n\t\telse return {}\r\n\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method signup convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync signup(data) {\r\n\t\treturn {\r\n\t\t\tstatus: 'ok'\r\n\t\t};\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method signin convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync signin(data) {\r\n\t\tif (data['msg']) {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method login convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync login(data) {\r\n\t\tif (data['msg']) {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method addImageToLibrary convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync addImageToLibrary(data) {\r\n\t\treturn data;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method getCurrentUserData convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync getCurrentCustomerData(data) {\r\n\t\t//map props\r\n\t\t// let generalFormat = dataMap[config['server']]['getCurrentUserData']; //get genereal format from dataMap\r\n\r\n\t\tconst formatedData = {\r\n\t\t\t...data\r\n\t\t};\r\n\r\n\t\treturn formatedData;\r\n\t}\r\n\r\n\r\n\t/**\r\n   * @public\r\n   * @method getAutoEmailConfiguration convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async getAutoEmailConfiguration(data) {\r\n\r\n\tconst formatedData = {\r\n\t\t...data\r\n\t};\r\n\r\n\treturn formatedData;\r\n}\r\n\r\n\r\n\t/**\r\n   * @public\r\n   * @method getEmailDetails convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async getEmailDetails(data) {\r\n\r\n\tconst formatedData = {\r\n\t\t...data\r\n\t};\r\n\r\n\treturn formatedData;\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\t/**\r\n   * @public\r\n   * @method currentCustomerData convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync currentCustomerData(data) {\r\n\t\t//map props\r\n\t\t// let generalFormat = dataMap[config['server']]['currentCustomerData']; //get genereal format from dataMap\r\n\r\n\t\tconst convertedData = {\r\n\t\t\t...data\r\n\t\t};\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method updateCurrentCustomerData convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync updateCurrentCustomerData(data) {\r\n\t\t//map props\r\n\t\t// let generalFormat = dataMap[config['server']]['updateCurrentCustomerData']; //get genereal format from dataMap\r\n\r\n\t\tconst convertedData = {\r\n\t\t\tstatus: 'ok'\r\n\t\t};\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method changePassword convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync changePassword(data) {\r\n\t\tif (data['success']) {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn data;\r\n\t}\r\n\r\n\t\t/**\r\n   * @public\r\n   * @method configureAutoEmail convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async configureAutoEmail(data) {\r\n\tif (data['success']) {\r\n\t\treturn {\r\n\t\t\tstatus: 'ok'\r\n\t\t};\r\n\t}\r\n\treturn data;\r\n\t}\r\n\r\n\r\n\t/**\r\n   * @public\r\n   * @method getCurrentUserOrders convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync getCurrentUserOrders(resData) {\r\n\t\tconst data = resData.data || [];\r\n\t\tconst isNext = resData.page.next;\r\n\r\n\t\tlet convertedData =\r\n\t\t\t(data.length > 0 &&\r\n\t\t\t\tdata.map((item) => {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\t...item,\r\n\t\t\t\t\t\tid: item.id || item._id,\r\n\t\t\t\t\t\tbillingAddress: item.billingAddress,\r\n\t\t\t\t\t\tstatus: item.status,\r\n\t\t\t\t\t\ttotal: item.totalPrice,\r\n\t\t\t\t\t\tproducts: item.products,\r\n\t\t\t\t\t\tdate_created: item.date,\r\n\t\t\t\t\t\tpaymentMethod: item['payment']['paymentMethod'],\r\n\t\t\t\t\t\tcustomerId: item.customer['_id']\r\n\t\t\t\t\t};\r\n\t\t\t\t})) ||\r\n\t\t\t[];\r\n\r\n\t\tconvertedData = {\r\n\t\t\tdata: convertedData,\r\n\t\t\tisNext\r\n\t\t};\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\r\n\t/**\r\n* @public\r\n* @method orderList convert api data from API to general format based on config server\r\n* @param {Object} data response objectc from wc\r\n* @returns {Object}  converted data\r\n*/\r\n\tasync orderList(resData) {\r\n\t\tconst data = resData.data || [];\r\n\t\t// const isNext = resData.page.next;\r\n\r\n\t\tconsole.log('orderListDAta',data);\r\n\r\n\t\tlet convertedData =\r\n\t\t\t(data.length > 0 &&\r\n\t\t\t\tdata.map((item) => {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\t...item,\r\n\t\t\t\t\t\t\tid: item.id || item._id,\r\n\t\t\t\t\t\t\tshippingAddress: item.billingAddress,\r\n\t\t\t\t\t\t\tshortCode: item.shortCode || '',\r\n\t\t\t\t\t\t\tname: item.shippingAddress && item.shippingAddress['firstName'] && item.shippingAddress['firstName'] + \" \" +\r\n\t\t\t\t\t\t\t item.shippingAddress && item.shippingAddress['lastName'] && item.shippingAddress['lastName'],\r\n\t\t\t\t\t\t\tcountry: item.shippingAddress && item.shippingAddress['country'] && item.shippingAddress['country'],\r\n\t\t\t\t\t\t\tcity: item.shippingAddress && item.shippingAddress['city'] && item.shippingAddress['city'],\r\n\t\t\t\t\t\t\tstatus: typeof item.status === 'string' ? item.status: item.status && Object.keys(item.status).length > 0 ?  item.status['name'] : 'pending' ,\r\n\t\t\t\t\t\t\ttotal: item.totalPrice,\r\n\t\t\t\t\t\t\tproducts: item.products,\r\n\t\t\t\t\t\t\tdate_created: item.added,\r\n\t\t\t\t\t\t\tpaymentMethod: item['payment'] && item['payment']['paymentMethod'],\r\n\t\t\t\t\t\t\tpaymentStatus: item['payment'] && item['payment']['status'],\r\n\t\t\t\t\t\t\tpayment: item['payment'],\r\n\t\t\t\t\t\t\tcustomerId: item['customer'] ? item['customer']['_id'] : '',\r\n\t\t\t\t\t\t\tdeliveryName: item.deliveryRegion \r\n\t\t\t\t\t\t\t&& Object.keys(item.deliveryRegion).length > 0 ? `${item.deliveryRegion['name']}`\r\n\t\t\t\t\t\t\t: ''\r\n\r\n\t\t\t\t\t};\r\n\t\t\t\t})) ||\r\n\t\t\t[];\r\n\r\n\t\t// convertedData = {\r\n\t\t// \tdata: convertedData,\r\n\t\t// \tisNext\r\n\t\t// };\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\r\n\r\n\t\t/**\r\n* @public\r\n* @method dealerOrderList convert api data from API to general format based on config server\r\n* @param {Object} data response objectc from wc\r\n* @returns {Object}  converted data\r\n*/\r\nasync dealerOrderList(resData) {\r\n\tconst data = resData.data || [];\r\n\t// const isNext = resData.page.next;\r\n\r\n\tconsole.log('orderListDAta',data);\r\n\r\n\tlet convertedData =\r\n\t\t(data.length > 0 &&\r\n\t\t\tdata.map((item) => {\r\n\t\t\t\treturn {\r\n\t\t\t\t\t\t...item,\r\n\t\t\t\t\t\tid: item.id || item._id,\r\n\t\t\t\t\t\tshippingAddress: item.billingAddress,\r\n\t\t\t\t\t\tshortCode: item.shortCode || '',\r\n\t\t\t\t\t\tname: item.shippingAddress && item.shippingAddress['firstName'] && item.shippingAddress['firstName'] + \" \" +\r\n\t\t\t\t\t\t item.shippingAddress && item.shippingAddress['lastName'] && item.shippingAddress['lastName'],\r\n\t\t\t\t\t\tcountry: item.shippingAddress && item.shippingAddress['country'] && item.shippingAddress['country'],\r\n\t\t\t\t\t\tcity: item.shippingAddress && item.shippingAddress['city'] && item.shippingAddress['city'],\r\n\t\t\t\t\t\tstatus: typeof item.status === 'string' ? item.status: item.status && Object.keys(item.status).length > 0 ?  item.status['name'] : 'pending' ,\r\n\t\t\t\t\t\ttotal: item.totalPrice,\r\n\t\t\t\t\t\tproducts: item.products,\r\n\t\t\t\t\t\tdate_created: item.added,\r\n\t\t\t\t\t\tpaymentMethod: item['payment'] && item['payment']['paymentMethod'],\r\n\t\t\t\t\t\tpaymentStatus: item['payment'] && item['payment']['status'],\r\n\t\t\t\t\t\tpayment: item['payment'],\r\n\t\t\t\t\t\tcustomerId: item['customer'] ? item['customer']['_id'] : ''\r\n\r\n\t\t\t\t};\r\n\t\t\t})) ||\r\n\t\t[];\r\n\r\n\t// convertedData = {\r\n\t// \tdata: convertedData,\r\n\t// \tisNext\r\n\t// };\r\n\r\n\treturn convertedData;\r\n}\r\n\r\n\r\n\r\n\t\t/**\r\n\t\t* @public\r\n\t\t* @method orderListForCustomer convert api data from API to general format based on config server\r\n\t\t* @param {Object} data response objectc from wc\r\n\t\t* @returns {Object}  converted data\r\n\t\t*/\r\n\t\tasync orderListForCustomer(resData) {\r\n\t\t\tconst data = resData.data || [];\r\n\t\t\t// const isNext = resData.page.next;\r\n\r\n\t\t\tlet convertedData =\r\n\t\t\t\t(data.length > 0 &&\r\n\t\t\t\t\tdata.map((item) => {\r\n\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\tid: item.id || item._id,\r\n\t\t\t\t\t\t\tshortCode: item.shortCode || '',\r\n\t\t\t\t\t\t\tshippingAddress: item.billingAddress,\r\n\t\t\t\t\t\t\tstatus: typeof item.status === 'string' ? item.status: item.status && Object.keys(item.status).length > 0 ?  item.status['name'] : 'pending' ,\r\n\t\t\t\t\t\t\tname: item.shippingAddress && item.shippingAddress['firstName'] && item.shippingAddress['firstName'] + \" \" +\r\n\t\t\t\t\t\t\t item.shippingAddress && item.shippingAddress['lastName'] && item.shippingAddress['lastName'],\r\n\t\t\t\t\t\t\tcountry: item.shippingAddress && item.shippingAddress['country'] && item.shippingAddress['country'],\r\n\t\t\t\t\t\t\tcity: item.shippingAddress && item.shippingAddress['city'] && item.shippingAddress['city'],\r\n\t\t\t\t\t\t\ttotal: item.totalPrice,\r\n\t\t\t\t\t\t\tproducts: item.products,\r\n\t\t\t\t\t\t\tdate_created: item.added,\r\n\t\t\t\t\t\t\tpaymentMethod: item['payment'] && item['payment']['paymentMethod'],\r\n\t\t\t\t\t\t\tpaymentStatus: item['payment'] && item['payment']['status'],\r\n\t\t\t\t\t\t\tpayment: item['payment'],\r\n\t\t\t\t\t\t\tcustomerId: item['customer'] ? item['customer']['_id'] : '',\r\n\t\t\t\t\t\t\tdeliveryName: item.deliveryRegion \r\n\t\t\t\t\t\t\t&& Object.keys(item.deliveryRegion).length > 0 ? `${item.deliveryRegion['name']}`\r\n\t\t\t\t\t\t\t: ''\r\n\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t})) ||\r\n\t\t\t\t[];\r\n\r\n\t\t\t// convertedData = {\r\n\t\t\t// \tdata: convertedData,\r\n\t\t\t// \tisNext\r\n\t\t\t// };\r\n\r\n\t\t\treturn convertedData;\r\n\t\t}\r\n\r\n\r\n\t/**\r\n   * @public\r\n   * @method currentUserOrders convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync currentUserOrders(data) {\r\n\t\t//map props\r\n\t\tlet generalFormat = dataMap[config['server']]['currentUserOrders']; //get genereal format from dataMap\r\n\r\n\t\tconst convertedData =\r\n\t\t\t(data.length > 0 &&\r\n\t\t\t\tdata.map((item) => {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\t...generalFormat,\r\n\t\t\t\t\t\tid: item.id,\r\n\t\t\t\t\t\tstatus: item.status,\r\n\t\t\t\t\t\ttotal: item.total,\r\n\t\t\t\t\t\tline_items: item.line_items,\r\n\t\t\t\t\t\tdate_created: item.date_created\r\n\t\t\t\t\t};\r\n\t\t\t\t})) ||\r\n\t\t\t[];\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method payment convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\r\n\tasync payment(data) {\r\n\t\tconst paymentItems = data.items;\r\n\t\tif (!paymentItems.length > 0) {\r\n\t\t\treturn paymentItems;\r\n\t\t}\r\n\r\n\t\tconst items = paymentItems.map((item) => {\r\n\t\t\treturn {\r\n\t\t\t\tname: item.name || '',\r\n\t\t\t\tnumber: item.text || ''\r\n\t\t\t};\r\n\t\t});\r\n\t\treturn items;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method welcome convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync welcome(data) {\r\n\t\treturn {\r\n\t\t\ttext: data.text\r\n\t\t};\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method logo convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync logo(data) {\r\n\t\tconst src = data.image && data.image.length > 0 ? `${config['baseURL']}${data.image[0]['original']}` : '';\r\n\t\treturn {\r\n\t\t\tsrc,\r\n\t\t\ttarget: data.target\r\n\t\t};\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method hotline convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync hotline(data) {\r\n\t\treturn {\r\n\t\t\ttext: data.text\r\n\t\t};\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method navLinks convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync navLinks(data) {\r\n\t\tconst navLinkItems = data.items;\r\n\t\tif (!navLinkItems.length > 0) {\r\n\t\t\treturn [];\r\n\t\t}\r\n\r\n\t\tconst items = navLinkItems.map((item) => {\r\n\t\t\treturn {\r\n\t\t\t\ttext: item.name || item.text,\r\n\t\t\t\ttarget: item.target\r\n\t\t\t};\r\n\t\t});\r\n\r\n\t\treturn items;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method slider convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync slider(data) {\r\n\t\tconst sliderItems = data.items;\r\n\t\tif (!sliderItems.length > 0) {\r\n\t\t\treturn sliderItems;\r\n\t\t}\r\n\r\n\t\tconst images = sliderItems.map((item) => {\r\n\t\t\treturn {\r\n\t\t\t\ttarget: item.target,\r\n\t\t\t\tsrc: `${config['baseURL']}${item.image[0]['medium']}`\r\n\t\t\t};\r\n\t\t});\r\n\t\treturn images;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method sliderRight convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync sliderRight(data) {\r\n\t\tconst sliderRightItems = data.items;\r\n\t\tif (!sliderRightItems.length > 0) {\r\n\t\t\treturn sliderRightItems;\r\n\t\t}\r\n\r\n\t\tconst images = sliderRightItems.map((item) => {\r\n\t\t\treturn {\r\n\t\t\t\ttarget: item.target,\r\n\t\t\t\tsrc: `${config['baseURL']}${item.image[0]['medium']}`\r\n\t\t\t};\r\n\t\t});\r\n\t\treturn images;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method address convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync address(data) {\r\n\t\treturn {\r\n\t\t\tname: data.name,\r\n\t\t\ttext: data.text\r\n\t\t};\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method Links convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync Links(data) {\r\n\t\tconst servicesItems = data.items;\r\n\t\tif (!servicesItems.length > 0) {\r\n\t\t\treturn servicesItems;\r\n\t\t}\r\n\r\n\t\tconst items = servicesItems.map((item) => {\r\n\t\t\treturn {\r\n\t\t\t\ttarget: item.target,\r\n\t\t\t\tname: item.name || item.text\r\n\t\t\t};\r\n\t\t});\r\n\t\treturn items;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method Account convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync Account(data) {\r\n\t\tconst accountItems = data.items;\r\n\t\tif (!accountItems.length > 0) {\r\n\t\t\treturn accountItems;\r\n\t\t}\r\n\r\n\t\tconst items = accountItems.map((item) => {\r\n\t\t\treturn {\r\n\t\t\t\ttarget: item.target,\r\n\t\t\t\tname: item.name || item.text\r\n\t\t\t};\r\n\t\t});\r\n\t\treturn items;\r\n\t}\r\n\r\n\r\n\r\n\r\n\t/**\r\n   * @public\r\n   * @method 'About Us' convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync 'About Us'(data) {\r\n\t\tconst aboutUsItems = data.items;\r\n\t\tif (!aboutUsItems.length > 0) {\r\n\t\t\treturn aboutUsItems;\r\n\t\t}\r\n\r\n\t\tconst items = aboutUsItems.map((item) => {\r\n\t\t\treturn {\r\n\t\t\t\ttarget: item.target,\r\n\t\t\t\tname: item.name || item.text\r\n\t\t\t};\r\n\t\t});\r\n\t\treturn items;\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n   * @public\r\n   * @method 'getTotalUserCount Us' convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync getTotalUserCount(data) {\r\n\t\treturn data;\r\n\t}\r\n\r\n\r\n\t/**\r\n   * @public\r\n   * @method addCoupon Us' convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync addCoupon(data) {\r\n\t\tif (data && data[0]) {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: 'ok',\r\n\t\t\t\t...data[0],\r\n\t\t\t\tcover: data[0].cover ? `${config['baseURL']}${data[0].cover ? data[0].cover.thumbnail : ''}` : '',\r\n\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn {};\r\n\t}\r\n\r\n\r\n\r\n\t\r\n\t/**\r\n   * @public\r\n   * @method addBundle Us convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async addBundle(data) {\r\n\tif (data && data[0]) {\r\n\t\treturn {\r\n\t\t\tstatus: 'ok',\r\n\t\t\t...data[0],\r\n\t\t\tprice: parseInt(data[0].price['offer']) > parseInt(data[0].price['regular'])\r\n\t\t\t\t\t\t\t? data[0].price['offer']\r\n\t\t\t\t\t\t\t: data[0].price['regular'],\r\n\t\t\tcover: data[0].cover ? `${config['baseURL']}${data[0].cover ? data[0].cover.thumbnail : ''}` : '',\r\n\r\n\t\t}\r\n\t}\r\n\treturn {};\r\n\t}\r\n}\r\n\r\nexport default Converter;\r\n","import { useEffect, useReducer } from 'react';\r\nimport Connector from '../lib/connector.js';\r\n\r\ntype TInitialData = any;\r\ntype Tdependecies = any[] | [];\r\ntype TItem = string;\r\ntype IFormat = string | undefined;\r\n\r\ntype Actions = {\r\n  type: string;\r\n  payload?: any;\r\n};\r\n\r\ninterface IState {\r\n  readonly isLoading: boolean;\r\n  readonly error: object;\r\n  readonly data: TInitialData;\r\n  readonly done: boolean;\r\n}\r\n\r\nconst connector = new Connector();\r\n\r\nconst dataFetchReducer = (state: IState, action: Actions) => {\r\n  switch (action.type) {\r\n    case 'FETCH_INIT':\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n        error: {\r\n          isError: false,\r\n          error: {},\r\n        },\r\n        done: false,\r\n      };\r\n    case 'FETCH_SUCCESS':\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        data: action.payload,\r\n        done: true,\r\n      };\r\n    case 'FETCH_FAILURE':\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        error: {\r\n          isError: true,\r\n          error: action.payload,\r\n          done: true,\r\n        },\r\n      };\r\n    default:\r\n      throw new Error();\r\n  }\r\n};\r\n\r\nconst useFetch = (\r\n  dependencies: Tdependecies = [],\r\n  initialData: TInitialData,\r\n  item: TItem,\r\n  options?: any,\r\n  format?: IFormat\r\n): IState => {\r\n  const initialState: IState = {\r\n    isLoading: false,\r\n    error: {\r\n      isError: false,\r\n      error: {},\r\n    },\r\n    data: initialData,\r\n    done: false,\r\n  };\r\n  const [state, dispatch] = useReducer(dataFetchReducer, initialState);\r\n\r\n  useEffect(() => {\r\n    let didCancel = false;\r\n    const fetchData = async () => {\r\n      dispatch({ type: 'FETCH_INIT' });\r\n      try {\r\n        // @ts-ignore\r\n        let data = await connector.request(item, format, options);\r\n        if (!didCancel) {\r\n          dispatch({ type: 'FETCH_SUCCESS', payload: data });\r\n        }\r\n      } catch (error) {\r\n        if (!didCancel) {\r\n          dispatch({ type: 'FETCH_FAILURE', payload: error });\r\n        }\r\n      }\r\n    };\r\n    fetchData();\r\n    return () => {\r\n      didCancel = true;\r\n    };\r\n  }, dependencies);\r\n\r\n  return state;\r\n};\r\n\r\nexport default useFetch;\r\n","import { useReducer } from 'react';\r\nimport Connector from '../lib/connector.js';\r\n\r\ntype TInitialData = any;\r\ntype TItem = string;\r\n\r\ntype Actions = {\r\n  type: string;\r\n  payload?: any;\r\n};\r\n\r\ninterface IState {\r\n  readonly isLoading: boolean;\r\n  readonly error: object;\r\n  readonly data: TInitialData;\r\n  readonly done: boolean;\r\n}\r\n\r\nconst connector = new Connector();\r\n\r\nconst dataFetchReducer = (state: IState, action: Actions) => {\r\n  switch (action.type) {\r\n    case 'FETCH_INIT':\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n        error: {\r\n          isError: false,\r\n          error: {},\r\n        },\r\n        done: false,\r\n      };\r\n    case 'FETCH_SUCCESS':\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        data: action.payload,\r\n        done: true,\r\n      };\r\n    case 'FETCH_FAILURE':\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        error: {\r\n          isError: true,\r\n          error: action.payload,\r\n        },\r\n        done: true,\r\n      };\r\n    default:\r\n      throw new Error();\r\n  }\r\n};\r\n\r\nconst useHandleFetch = (\r\n  initialData: TInitialData,\r\n  item: TItem,\r\n  format?: string\r\n): [IState, (values: any) => void] => {\r\n  const initialState: IState = {\r\n    isLoading: false,\r\n    error: {\r\n      isError: false,\r\n      error: {},\r\n    },\r\n    data: initialData,\r\n    done: false,\r\n  };\r\n\r\n  const [state, dispatch] = useReducer(dataFetchReducer, initialState);\r\n\r\n  const handlePost = async (options: any) => {\r\n    dispatch({ type: 'FETCH_INIT' });\r\n\r\n    try {\r\n      // @ts-ignore\r\n      let data = await connector.request(item, format || 'json', options);\r\n      dispatch({ type: 'FETCH_SUCCESS', payload: data });\r\n      return data;\r\n    } catch (error) {\r\n      dispatch({ type: 'FETCH_FAILURE', payload: error });\r\n      return initialData;\r\n    }\r\n  };\r\n\r\n  return [state, handlePost];\r\n};\r\n\r\nexport default useHandleFetch;\r\n","import React, { useState } from 'react';\r\nimport { Button } from 'antd';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n// import components\r\nimport Input from '../../../components/Field/Input';\r\nimport TextArea from '../../../components/Field/TextArea';\r\nimport { useHandleFetch } from '../../../hooks';\r\n\r\nconst validationSchema = Yup.object().shape({\r\n\tusername: Yup.string()\r\n\t\t.label('Username')\r\n\t\t.required('Username is required')\r\n\t\t.min(3, 'Username must have at least 3 characters'),\r\n\r\n\tpassword: Yup.string().label('Password').required('Password is required'),\r\n});\r\n\r\nconst initialValues = {\r\n\tusername: '',\r\n\tpassword: '',\r\n};\r\n\r\ninterface Props {\r\n\r\n}\r\n\r\nconst QuickEdit = ({ }: Props) => {\r\n\tconst [loginState, handleLoginFetch] = useHandleFetch({}, 'login');\r\n\r\n\tconst handleSubmit = async (values: any, actions: any) => {\r\n\t\tconst updateCategoryRes = await handleLoginFetch({\r\n\t\t\tbody: {\r\n\t\t\t\tusername: values.username,\r\n\t\t\t\tpassword: values.password,\r\n\t\t\t},\r\n\t\t});\r\n\r\n\t\tactions.setSubmitting(false);\r\n\t};\r\n\r\n\r\n\r\n\r\n\tconst getisSubmitButtonDisabled = (values, isValid) => {\r\n\t\tif (!values.username || !values.password || !isValid) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\treturn (\r\n\t\t<Formik\r\n\t\t\tonSubmit={(values, actions) => handleSubmit(values, actions)}\r\n\t\t\tvalidationSchema={validationSchema}\r\n\t\t\tvalidateOnBlur={false}\r\n\t\t\tenableReinitialize={true}\r\n\t\t\tinitialValues={\r\n\t\t\t\t{ ...initialValues }\r\n\t\t\t}\r\n\t\t>\r\n\t\t\t{({\r\n\t\t\t\thandleChange,\r\n\t\t\t\tvalues,\r\n\t\t\t\thandleSubmit,\r\n\t\t\t\terrors,\r\n\t\t\t\tisValid,\r\n\t\t\t\tisSubmitting,\r\n\t\t\t\ttouched,\r\n\t\t\t\thandleBlur,\r\n\t\t\t\tsetFieldTouched,\r\n\t\t\t\thandleReset,\r\n\t\t\t}) => (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\tmaxWidth: '400px',\r\n\t\t\t\t\t\t\tmargin: '20px'\r\n\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\tlabel='Username'\r\n\t\t\t\t\t\t\t\tvalue={values.username}\r\n\t\t\t\t\t\t\t\tname='username'\r\n\t\t\t\t\t\t\t\tisError={(touched.username && errors.username) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && loginState.error['error']['username'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.username && errors.username) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && loginState.error['error']['username'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('username');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\tlabel='Password'\r\n\t\t\t\t\t\t\t\tvalue={values.password}\r\n\t\t\t\t\t\t\t\tname='password'\r\n\t\t\t\t\t\t\t\tisError={(touched.password && errors.password) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && loginState.error['error']['password'])}\r\n\t\t\t\t\t\t\t\terrorString={(touched.password && errors.password) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && loginState.error['error']['password'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('password');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\ttype='primary'\r\n\t\t\t\t\t\t\t\tonClick={(e: any) => handleSubmit(e)}\r\n\t\t\t\t\t\t\t\tdisabled={getisSubmitButtonDisabled(values, isValid)}\r\n\t\t\t\t\t\t\t\tloading={isSubmitting}\r\n\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t// marginTop: '20px'\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\tLogin\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</>\r\n\t\t\t\t)}\r\n\t\t</Formik>\r\n\t);\r\n};\r\n\r\n\r\nexport default QuickEdit;\r\n","import Login from './Login';\r\nexport default Login;\r\n","import React, { useState } from 'react';\r\nimport { BrowserRouter as Router, Link, Switch, withRouter } from 'react-router-dom';\r\nimport { Layout, Menu, Upload, message } from 'antd';\r\n\r\n\r\nimport {\r\n    PieChartOutlined,\r\n    FileOutlined,\r\n    TeamOutlined,\r\n    TagOutlined,\r\n    BranchesOutlined,\r\n    GoldOutlined,\r\n    FilterOutlined,\r\n    TagsOutlined,\r\n    CarOutlined,\r\n    ShoppingCartOutlined,\r\n    MailOutlined,\r\n    SettingOutlined,\r\n    InboxOutlined,\r\n    SlidersOutlined,\r\n    DesktopOutlined,\r\n    RadarChartOutlined,\r\n    MessageOutlined,\r\n    UserOutlined,\r\n    FileAddOutlined,\r\n    FileSearchOutlined,\r\n    BgColorsOutlined,\r\n    BankOutlined,\r\n    FireOutlined,\r\n    MailTwoTone,\r\n    UserAddOutlined,\r\n    GlobalOutlined, \r\n} from '@ant-design/icons';\r\n\r\nconst { Header, Content, Footer, Sider } = Layout;\r\nconst { SubMenu } = Menu;\r\n\r\nconst SiderComponent = (props: any) => {\r\n    const [collapsed, setcollapsed] = useState(false);\r\n    const onCollapse = (collapsed: any) => {\r\n        // console.log(collapsed);\r\n        setcollapsed(collapsed);\r\n    };\r\n\r\n\r\n\r\n    return (\r\n        <Sider\r\n            width={260}\r\n            style={{\r\n                boxShadow: '7px 0 60px rgba(0,0,0,.05)',\r\n                border: 'none'\r\n            }}\r\n            collapsible collapsed={collapsed} onCollapse={onCollapse} theme='light'>\r\n\r\n            <Menu selectable={true} mode='inline'>\r\n                <Menu.Item key='1' icon={<PieChartOutlined />}>\r\n                    <Link to='/admin'>Dashboard</Link>\r\n                </Menu.Item>\r\n\r\n                {/* <SubMenu key='sub1' icon={<TagOutlined />} title='Category'>\r\n\t\t\t\t\t<Menu.Item key='2'>\r\n\t\t\t\t\t\t<Link to='/category'>List Categories</Link>\r\n\t\t\t\t\t</Menu.Item>\r\n\t\t\t\t</SubMenu> */}\r\n\r\n                {/* <SubMenu key='sub2' icon={<BranchesOutlined />} title='Brand'>\r\n\r\n\t\t\t\t\t<Menu.Item key='5'>\r\n\t\t\t\t\t\t<Link to='/brand'>List Brand</Link>\r\n\t\t\t\t\t</Menu.Item>\r\n\t\t\t\t</SubMenu> */}\r\n\r\n                <SubMenu\r\n                    key='sub3'\r\n                    icon={<GoldOutlined />}\r\n                    title='Product'\r\n                // onTitleClick={() => props.history.push('/product')}\r\n                >\r\n                    <Menu.Item\r\n                        icon={<RadarChartOutlined />}\r\n                        key='6'>\r\n                        <Link to='/admin/product'>Products</Link>\r\n                    </Menu.Item>\r\n\r\n                    {/* <Menu.Item\r\n                        icon={<BankOutlined />}\r\n                        key='2222'>\r\n                        <Link to='/admin/bundle'>Bundle</Link>\r\n                    </Menu.Item> */}\r\n\r\n                    <Menu.Item key='9' icon={<TagsOutlined />}>\r\n                        <Link to='/admin/tag'>Tags</Link>\r\n\r\n                    </Menu.Item>\r\n\r\n                    <Menu.Item key='2' icon={<TagOutlined />}>\r\n                        <Link to='/admin/category'>Categories</Link>\r\n                    </Menu.Item>\r\n\r\n                    <Menu.Item key='5' icon={<BranchesOutlined />}>\r\n                        <Link to='/admin/brand'>Brand</Link>\r\n                    </Menu.Item>\r\n\r\n                </SubMenu>\r\n\r\n                <SubMenu\r\n                    key='sub333'\r\n                    icon={<GoldOutlined />}\r\n                    title='Recipes'\r\n                // onTitleClick={() => props.history.push('/product')}\r\n                >\r\n                    <Menu.Item\r\n                        icon={<RadarChartOutlined />}\r\n                        key='655'>\r\n                        <Link to='/admin/posts'>List Recipe</Link>\r\n                    </Menu.Item>\r\n\r\n                    <Menu.Item\r\n                        icon={<TagOutlined />}\r\n                        key='2222444'>\r\n                        <Link to='/admin/posts/category'>Recipe Category</Link>\r\n                    </Menu.Item>\r\n\r\n                    <Menu.Item key='955' icon={<TagsOutlined />}>\r\n                        <Link to='/admin/posts/tag'>Recipe Tags</Link>\r\n                    </Menu.Item>\r\n\r\n                </SubMenu>\r\n\r\n\r\n\r\n                {/* <Menu.Item key='9' icon={<TagsOutlined />}>\r\n\t\t\t\t\t<Link to='/tag'>Tags</Link>\r\n\t\t\t\t</Menu.Item> */}\r\n\r\n                {/* <Menu.Item key='1012' icon={<FileExcelOutlined />}>\r\n                    <Link to='/admin/posts'>\r\n                        Recipies\r\n                    </Link>\r\n                </Menu.Item> */}\r\n\r\n                <Menu.Item key='1011' icon={<FireOutlined />}>\r\n                    <Link to='/admin/coupon'>Coupon</Link>\r\n                </Menu.Item>\r\n\r\n                <Menu.Item key='10' icon={<CarOutlined />}>\r\n                    <Link to='/admin/delivery'>Delivery</Link>\r\n                </Menu.Item>\r\n\r\n{/*                 \r\n                <SubMenu\r\n                    key='sub33'\r\n                    icon={<CalculatorOutlined />}\r\n                    title='Accounting'\r\n                >\r\n                    <Menu.Item\r\n                        icon={<UsergroupAddOutlined />}\r\n                        key='66'>\r\n                        <Link to='/admin/staff'>\r\n                            Staff\r\n                        </Link>\r\n                    </Menu.Item>\r\n\r\n                    <Menu.Item\r\n                        icon={<MoneyCollectOutlined />}\r\n                        key='67'>\r\n                        <Link to='/admin/expense'>\r\n                            Expense\r\n                        </Link>\r\n                    </Menu.Item>\r\n\r\n                </SubMenu> */}\r\n\r\n\r\n\r\n                <SubMenu key='sub4' icon={<ShoppingCartOutlined />} title='Orders'>\r\n                    <Menu.Item key='11'>\r\n                        <Link to='/admin/order'>List Orders</Link>\r\n                    </Menu.Item>\r\n                    <Menu.Item key='11222'>\r\n                        <Link to='/admin/order/overview'>\r\n                            Order Analytics\r\n                        </Link>\r\n                    </Menu.Item>\r\n                    <Menu.Item key='12'>\r\n                        <Link to='/admin/order/new'>Add Order</Link>\r\n                    </Menu.Item>\r\n                    <Menu.Item key='12'>\r\n                        <Link to='/admin/order/config'>\r\n                            Configure order status\r\n                        </Link>\r\n                    </Menu.Item>\r\n                </SubMenu>\r\n\r\n                <SubMenu\r\n                    key='sub5553'\r\n                    icon={<TeamOutlined />}\r\n                    title='Dealer'\r\n                // onTitleClick={() => props.history.push('/product')}\r\n                >\r\n                    <Menu.Item\r\n                        icon={<TeamOutlined />}\r\n                        key='666655'>\r\n                        <Link to='/admin/dealer'>List dealer</Link>\r\n                    </Menu.Item>\r\n\r\n                    <Menu.Item\r\n                        icon={<GlobalOutlined />}\r\n                        key='22534522444'>\r\n                        <Link to='/admin/dealer/area'>Dealer Areas</Link>\r\n                    </Menu.Item>\r\n\r\n\r\n                </SubMenu>\r\n\r\n\r\n                <Menu.Item key='13' icon={<UserOutlined />}>\r\n                    <Link to='/admin/customer'>Customer</Link>\r\n                </Menu.Item>\r\n\r\n\r\n                <Menu.Item key='1888' icon={<MailOutlined />}>\r\n                    <Link to='/admin/email'>Email</Link>\r\n                </Menu.Item>\r\n\r\n\r\n                <Menu.Item key='199' icon={<MessageOutlined />}>\r\n                    <Link to='/admin/sms'>SMS</Link>\r\n                </Menu.Item>\r\n\r\n                <SubMenu key='sub6' icon={<FileOutlined />} title='Pages'>\r\n                    <Menu.Item key='18'\r\n                        icon={<FileSearchOutlined />}\r\n                    >\r\n                        <Link to='/admin/page'> List Pages</Link>\r\n                    </Menu.Item>\r\n                    <Menu.Item\r\n                        icon={<FileAddOutlined />}\r\n                        key='17'>\r\n                        <Link to='/admin/page/new'> Add new Page</Link>\r\n                    </Menu.Item>\r\n\r\n                </SubMenu>\r\n\r\n                <Menu.Item key='23'\r\n                    icon={<SlidersOutlined />}\r\n                >\r\n                    <Link to='/admin/settings/components'>Components</Link>\r\n                </Menu.Item>\r\n\r\n                <SubMenu key='sub7' icon={<SettingOutlined />} title='Settings'>\r\n                    <Menu.Item\r\n                        icon={<UserOutlined />}\r\n                        key='19'>\r\n                        <Link to='/admin/settings/siteInfo'>Site information</Link>\r\n                    </Menu.Item>\r\n\r\n                    <Menu.Item\r\n                        icon={<UserAddOutlined />}\r\n                        key='19999'>\r\n                        <Link to='/admin/settings/admins'>Admins</Link>\r\n                    </Menu.Item>\r\n\r\n                    <Menu.Item\r\n                        icon={<BgColorsOutlined />}\r\n                        key='20'>\r\n                        <Link to='/admin/settings/themes'>Themes</Link>\r\n                    </Menu.Item>\r\n\r\n                    {/* <Menu.Item key='21'>\r\n\t\t\t\t\t\t<Link to='/settings/image'>Image</Link>\r\n\t\t\t\t\t</Menu.Item> */}\r\n                    {/* <Menu.Item key='22'>\r\n                        <Link to='/admin/settings/invoice'>Invoice</Link>\r\n                    </Menu.Item> */}\r\n\r\n                </SubMenu>\r\n            </Menu>\r\n        </Sider>\r\n    );\r\n};\r\n\r\nexport default withRouter(SiderComponent);\r\n","import Sider from \"./Sider\";\r\nexport default Sider; ","import Empty from \"./Empty\";\r\nexport default Empty; ","import React from 'react'\r\nimport { Empty } from 'antd';\r\n\r\n\r\ninterface Props {\r\n    title?: string;\r\n    height?: number\r\n}\r\n\r\nconst EmptyComponent = ({\r\n    title = 'No Data found',\r\n    height = 300\r\n}: Props) => {\r\n    return (\r\n        <div style={{\r\n            height: height,\r\n            display: 'flex',\r\n            justifyContent: 'center',\r\n            alignItems: 'center'\r\n        }}>\r\n            <Empty description={title} image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EmptyComponent\r\n","import React, { useEffect } from 'react';\r\n\r\n\r\n// import hooks \r\nimport { useHandleFetch } from \"../../hooks\";\r\n\r\n// import components\r\n// import { openSuccessNotification, openErrorNotification } from \"../../components/Notification\";\r\nimport Empty from \"../../components/Empty\";\r\n\r\n// import libraries \r\nimport { useHistory } from \"react-router\";\r\nimport { LogoutOutlined,\r\n     BellOutlined, \r\n     OrderedListOutlined,\r\n    TwitterSquareFilled,\r\n    ShoppingCartOutlined,\r\n    UserOutlined,\r\n     } from '@ant-design/icons';\r\nimport Moment from 'react-moment';\r\nimport { Layout, Badge, Dropdown, Menu, Spin } from 'antd';\r\nimport moment from \"moment\";\r\nconst { Header } = Layout;\r\n\r\n\r\n// import styles\r\n\r\n\r\ninterface Props {\r\n\r\n}\r\n\r\nconst HeaderComponent = (props: Props) => {\r\n    const history = useHistory();\r\n\r\n    const [getAllNotificationState, handleGetAllNOticationFetch] = useHandleFetch({}, 'getAllNotification');\r\n\r\n\r\n    const handleMenuClick = (e) => {\r\n        if (e.key === '3') {\r\n        }\r\n    };\r\n\r\n\r\n    useEffect(() => {\r\n        const getAllNotification = async () => {\r\n            await handleGetAllNOticationFetch({\r\n               urlOptions: {\r\n                   params: {\r\n                    sortItem: 'added',\r\n                    sortOrderValue: '-1',\r\n                    limitNumber: 100000\r\n                   }\r\n               }\r\n            });\r\n        }\r\n\r\n        getAllNotification();\r\n    }, [])\r\n\r\n\r\n\r\n\r\n    console.log('getAllNotificationState',getAllNotificationState);\r\n\r\n\r\n    const typeIcon = {\r\n        customer: <UserOutlined />,\r\n        order: <ShoppingCartOutlined />\r\n    }\r\n\r\n    const menu = () => {\r\n\r\n        if (getAllNotificationState.isLoading) return (\r\n            <div style={{\r\n                height:'100%',\r\n                display:'flex',\r\n                justifyContent:'center',\r\n                alignItems:'center',\r\n                backgroundColor:\"#fff\",\r\n                padding: '0 50px'\r\n            }}>\r\n                <Spin />\r\n            </div>\r\n        );\r\n\r\n        if (getAllNotificationState.done && getAllNotificationState.data && !getAllNotificationState.data[0]) {\r\n            return (\r\n                <div \r\n                className='notificationListItemContainer'\r\n                style={{\r\n                    height:'100%',\r\n                    display:'flex',\r\n                    justifyContent:'center',\r\n                    alignItems:'center',\r\n                    backgroundColor:\"#fff\",\r\n                    padding: '0 50px'\r\n                }}>\r\n                     <Empty title='No Notification found' />\r\n                </div>\r\n            )\r\n        }\r\n        return (\r\n            <div \r\n            style={{\r\n                \r\n            }}\r\n            className='notificationListItemContainer'>\r\n                                 \r\n                                 {getAllNotificationState.done\r\n                 && getAllNotificationState.data[0]\r\n                 && (\r\n                    <div style={{\r\n                      \r\n                    }}>\r\n                    <div style={{\r\n                        width:'100%',\r\n                        display:'flex',\r\n                        justifyContent:\"space-around\",\r\n                    }}>\r\n                    <a\r\n                     style={{\r\n                          textAlign:'center',\r\n                          backgroundColor:'#f7f7f7' ,\r\n                          padding:\"10px\",\r\n                          width:'50%',\r\n                          fontSize:'13px'\r\n\r\n                     }}\r\n                      href=\"##\">\r\n                        CLEAR ALL\r\n                     </a>\r\n                     <a\r\n                     onClick={() => history.push('/admin/notification')}\r\n                     style={{\r\n                          textAlign:'center',\r\n                          backgroundColor:'#eee'   ,\r\n                          padding:\"10px\",\r\n                          width:'50%' ,\r\n                          fontSize:'13px'\r\n                     }}\r\n                      href=\"##\">\r\n                      SEE ALL \r\n                     </a>\r\n                    </div>\r\n                    </div>\r\n                 )\r\n               }\r\n\r\n            {getAllNotificationState.done\r\n            && getAllNotificationState.data[0]\r\n            && getAllNotificationState.data.map((item,index) => {\r\n            return (\r\n            <div\r\n              onClick={() => history.push(`/admin/${item.type}/${item.id}`)}\r\n              className={!item.read ? 'notificationListItemContainer__item notificationListItemContainer__item-active' : 'notificationListItemContainer__item'}>\r\n                <span className='notificationListItemContainer__item-icon'>\r\n                  {typeIcon[item['type']]}\r\n                </span>\r\n                <div className='notificationListItemContainer__item-info'>\r\n                    <h3>\r\n                        {item.heading}\r\n                    </h3>\r\n                    <h4>\r\n                        {item.text}\r\n                    </h4>\r\n                    <h2>\r\n                    {item.added && moment(item.added).format('MMMM Do YYYY, h:mm a')}\r\n                    </h2>\r\n                </div>\r\n            </div>\r\n        )\r\n    })}\r\n</div>\r\n\r\n          \r\n        )\r\n    }\r\n\r\n    \r\n\r\n    return (\r\n        <Header\r\n            style={{\r\n                background: '#fff',\r\n                height: '60px',\r\n                display: 'flex',\r\n                justifyContent: 'space-between',\r\n                boxShadow: '0 0.46875rem 2.1875rem rgba(8,10,37,.01), 0 0.9375rem 1.40625rem rgba(8,10,37,.01), 0 0.25rem 0.53125rem rgba(8,10,37,.02), 0 0.125rem 0.1875rem rgba(8,10,37,.01)',\r\n                zIndex: 10,\r\n                transition: ' all .2s',\r\n                alignItems: 'center',\r\n                alignContent: 'center'\r\n            }}\r\n        >\r\n            <h2\r\n\r\n                onClick={() => history.push('/admin')}\r\n                style={{\r\n                    color: '#0072EA', marginTop: '10px', marginLeft: '-20px',\r\n                    cursor: 'pointer'\r\n\r\n                }}\r\n            >\r\n                Admin\r\n            </h2>\r\n\r\n            <div\r\n                style={{\r\n                    marginRight: '-28px'\r\n                }}>\r\n\r\n\r\n                <Dropdown\r\n                    placement=\"bottomLeft\"\r\n\r\n                    overlay={menu}\r\n                // visible={this.state.visible}\r\n                >\r\n                    <a\r\n                        style={{\r\n                            marginRight: '10px'\r\n                        }}\r\n                        href='###' className='notificationIconContainer'>\r\n\r\n                        <Badge\r\n                            overflowCount={100}\r\n                            // @ts-ignore\r\n                            showZero={TwitterSquareFilled}\r\n                            count={getAllNotificationState.done && !getAllNotificationState.data ? 0 : getAllNotificationState.data.length ? getAllNotificationState.data.length : 0}\r\n                        >\r\n                            <span style={{\r\n                                marginLeft: '10px',\r\n                                fontWeight: 600,\r\n                                borderRadius: '25px',\r\n                                color: '#1890ff',\r\n                                padding: '2px 20px',\r\n                                cursor: 'pointer',\r\n                                marginRight: '-5px'\r\n                            }}>\r\n                                <BellOutlined />\r\n\r\n                            </span>\r\n                        </Badge>\r\n                    </a>\r\n                </Dropdown>\r\n\r\n\r\n\r\n\r\n                <a href='/admin/auth/logout'>\r\n                    <span style={{\r\n                        marginLeft: '10px',\r\n                        fontWeight: 600,\r\n                        borderRadius: '25px',\r\n                        color: '#1890ff',\r\n                        padding: '2px 20px',\r\n                        cursor: 'pointer'\r\n                    }}>\r\n                        <LogoutOutlined />\r\n                        <span style={{\r\n                            marginLeft: '10px',\r\n\r\n                        }}>\r\n                            logout\r\n                    </span>\r\n                    </span>\r\n                </a>\r\n\r\n            </div>\r\n        </Header>\r\n    )\r\n}\r\n\r\nexport default HeaderComponent;\r\n","import Header from \"./Header\";\r\nexport default Header; ","import React, { useState, useEffect } from 'react'\r\n\r\n\r\n\r\n// import libraries \r\nimport {\r\n    ResponsiveContainer,\r\n    AreaChart,\r\n    CartesianGrid,\r\n    XAxis,\r\n    YAxis,\r\n    Tooltip,\r\n    Legend,\r\n    Area,\r\n    Line\r\n} from \"recharts\";\r\n\r\nimport {\r\n    DeleteOutlined,\r\n    FileAddOutlined,\r\n    CheckCircleOutlined,\r\n    FileImageFilled,\r\n    FileImageOutlined,\r\n    FileImageTwoTone,\r\n    PlusOutlined,\r\n    PlusCircleOutlined,\r\n    CloseOutlined,\r\n    CheckOutlined,\r\n    InfoCircleOutlined,\r\n    UserOutlined,\r\n    CalendarOutlined,\r\n    GoldOutlined,\r\n    ShoppingCartOutlined,\r\n    TagOutlined\r\n} from '@ant-design/icons';\r\n\r\n\r\nimport { useHandleFetch } from \"../../hooks\";\r\n\r\n\r\n\r\nimport { Select, Button, Spin, Empty,DatePicker } from 'antd';\r\nimport Moment from \"react-moment\";\r\nimport moment from 'moment'; \r\n\r\nconst { Option } = Select;\r\n\r\nconst { RangePicker } = DatePicker;\r\n\r\n\r\n\r\n\r\n\r\nexport const RAINFALL = {\r\n    \"2018\": [\r\n        {\r\n            month: 1,\r\n            rainfall: 65.4\r\n        },\r\n        {\r\n            month: 2,\r\n            rainfall: 1.6\r\n        },\r\n        {\r\n            month: 3,\r\n            rainfall: 23\r\n        },\r\n        {\r\n            month: 4,\r\n            rainfall: 16.4\r\n        },\r\n        {\r\n            month: 5,\r\n            rainfall: 65.6\r\n        },\r\n        {\r\n            month: 6,\r\n            rainfall: 43.2\r\n        },\r\n        {\r\n            month: 7,\r\n            rainfall: 19.4\r\n        },\r\n        {\r\n            month: 8,\r\n            rainfall: 42.8\r\n        },\r\n        {\r\n            month: 9,\r\n            rainfall: 16.4\r\n        },\r\n        {\r\n            month: 11,\r\n            rainfall: 97.8\r\n        },\r\n        {\r\n            month: 12,\r\n            rainfall: 104.8\r\n        }\r\n    ],\r\n    \"2019\": [\r\n        {\r\n            month: 1,\r\n            rainfall: 11.2\r\n        },\r\n        {\r\n            month: 2,\r\n            rainfall: 18.6\r\n        },\r\n        {\r\n            month: 3,\r\n            rainfall: 12\r\n        },\r\n        {\r\n            month: 4,\r\n            rainfall: 7.2\r\n        },\r\n        {\r\n            month: 5,\r\n            rainfall: 53.4\r\n        },\r\n        {\r\n            month: 6,\r\n            rainfall: 49.8\r\n        },\r\n        {\r\n            month: 7,\r\n            rainfall: 45.2\r\n        },\r\n        {\r\n            month: 8,\r\n            rainfall: 51.4\r\n        },\r\n        {\r\n            month: 9,\r\n            rainfall: 41\r\n        },\r\n        {\r\n            month: 10,\r\n            rainfall: 24\r\n        },\r\n        {\r\n            month: 11,\r\n            rainfall: 54.4\r\n        },\r\n        {\r\n            month: 12,\r\n            rainfall: 6.2\r\n        }\r\n    ]\r\n};\r\n\r\n\r\nconst MONTHS = [\r\n    \"Jan\",\r\n    \"Feb\",\r\n    \"Mar\",\r\n    \"Apr\",\r\n    \"May\",\r\n    \"Jun\",\r\n    \"Jul\",\r\n    \"Aug\",\r\n    \"Sep\",\r\n    \"Oct\",\r\n    \"Nov\",\r\n    \"Dec\"\r\n];\r\n\r\n\r\n\r\n\r\nexport const TooltipContainerStyles = {\r\n    border: 0,\r\n    borderRadius: \"8px\",\r\n    fontSize: 14,\r\n    boxShadow: \"2px 2px 5px 3px rgba(0,0,0,0.15)\"\r\n};\r\n\r\n\r\n\r\n\r\ninterface Props {\r\n\r\n}\r\n\r\nconst localOptions = [\r\n    {\r\n        value: 'category',\r\n        name: 'Category'\r\n    }, {\r\n        value: 'product',\r\n        name: 'Product'\r\n    }\r\n\r\n]\r\n\r\nconst ApiVisits = (props: Props) => {\r\n    const [selectedApiValue, setSelectedApiValue] = useState('date');\r\n    const [startDate,setStartDate] = useState('');\r\n    const [endDate,setEndDate] = useState('');\r\n\r\n\r\n\r\n    \r\n\r\n    const [demoGraphicVisitsState, handleDemoGraphicVisitsStateFetch] = useHandleFetch({}, 'getAnalyticsDemographicVisits');\r\n\r\n\r\n    const [userData, setuserData] = useState([]);\r\n\r\n    useEffect(()=>{\r\n        const getDemoGraphicVisitsValue = async () => {\r\n            const uservisitsDataRes =  await handleDemoGraphicVisitsStateFetch({\r\n                urlOptions: {\r\n                    params: {\r\n                        metricType: selectedApiValue,\r\n                        startDateValue: startDate,\r\n                        endDateValue: endDate\r\n                    }\r\n                }\r\n            }); \r\n\r\n           console.log('uservisitsData',uservisitsDataRes); \r\n\r\n           // @ts-ignore\r\n           if(uservisitsDataRes){\r\n            // @ts-ignore\r\n            setuserData(uservisitsDataRes)\r\n           }\r\n\r\n\r\n           };\r\n\r\n\r\n           getDemoGraphicVisitsValue(); \r\n\r\n    },[selectedApiValue,startDate,endDate])\r\n\r\n\r\n    console.log('demoGraphicVisitsState',demoGraphicVisitsState);\r\n\r\n\r\n\r\n    \r\n    const options = [\r\n        {\r\n            value: 'date',\r\n            name: 'Date'\r\n        },\r\n        {\r\n            value: 'hour',\r\n            name: 'Hour'\r\n        },\r\n        {\r\n            value: 'dayOfWeek',\r\n            name: 'Day of week'\r\n        },\r\n        {\r\n            value: 'dayOfMonth',\r\n            name: 'Day of month'\r\n        },\r\n         {\r\n            value: 'month',\r\n            name: 'Month'\r\n        },\r\n        {\r\n            value: 'year',\r\n            name: 'Year'\r\n        }\r\n    ]\r\n\r\n    \r\n\r\n    const date = new Date();\r\n    const thisMonth = MONTHS[date.getMonth()]\r\n    \r\n\r\n\r\n    const getFormateDateValue = (order) => {\r\n\r\n        if(selectedApiValue === 'day'){\r\n            return order ? moment(order).format('MMMM Do YYYY, h:mm:ss a') : order;\r\n        }\r\n        else if (selectedApiValue === 'date'){\r\n            return order ? moment(order).format('MMMM Do YYYY') : order;\r\n        }\r\n        else if (selectedApiValue === 'month'){\r\n            return order ? MONTHS[order - 1] : order; ;\r\n        }\r\n        return order; \r\n    }\r\n    \r\n\r\n    const onChange = (value) => {\r\n        setSelectedApiValue(value);\r\n    }\r\n\r\n\r\n    const handleStartEndDateRangeDate = (e) => {\r\n       if(e && e[0]){\r\n        const startDate = new Date(moment(e[0]).format()); \r\n        const endDate = new Date(moment(e[1]).format()); \r\n        // @ts-ignore\r\n        setStartDate(startDate);\r\n        // @ts-ignore\r\n        setEndDate(endDate);\r\n       }\r\n      \r\n    }; \r\n\r\n\r\n\r\n    return (\r\n        <div className='overviewContainer__userVisits'>\r\n            <div className='overviewContainer__body-apiVisits-header'>\r\n                <div className='overviewContainer__body-apiVisits-header-info'>\r\n                    <h2>\r\n                        Users \r\n                    </h2>\r\n\r\n                        <h3>\r\n                          All users that visited\r\n                        </h3>\r\n                </div>\r\n\r\n\r\n                <div className='overviewContainer__body-apiVisits-header-controller'>\r\n                <Select\r\n                    bordered={false}\r\n                    showSearch\r\n                    style={{ width: '130px', borderRadius: '6px', color: '#1890ff' }}\r\n                    placeholder='Select an api'\r\n                    optionFilterProp='children'\r\n                    onChange={onChange}\r\n                    defaultValue={selectedApiValue}\r\n                    filterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n                >\r\n                    {\r\n                        options.map((option) => {\r\n                            return <Option value={option.value}>{option.name}</Option>;\r\n                        })}\r\n                </Select>\r\n            </div>\r\n            </div>\r\n\r\n            <div className='overviewContainer__body-body'>\r\n            {demoGraphicVisitsState.isLoading && (\r\n            <>\r\n            <div style={{\r\n                margin:'100px 0',\r\n                display:'flex',\r\n                justifyContent:'center',\r\n                alignItems:\"center\"\r\n            }}>\r\n              <Spin size='large' />\r\n            </div>\r\n\r\n            </>\r\n        )}\r\n                {demoGraphicVisitsState.done && !(demoGraphicVisitsState.data.length > 0) && (\r\n                    <div style={{\r\n                        marginTop: '00px'\r\n                    }}>\r\n                        <Empty description={`No User visited`} image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n                    </div>\r\n                )}\r\n\r\n\r\n               {demoGraphicVisitsState.done && userData && userData.length > 0 && (\r\n                    <ResponsiveContainer width=\"100%\" height={300}>\r\n                    <AreaChart data={userData} fontSize={12}>\r\n                        <defs>\r\n                            <linearGradient id=\"rainGradient\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\r\n                                <stop offset=\"0%\" stopColor=\"#1890ff\" />\r\n                                <stop offset=\"100%\" stopColor=\"#3066BE22\" />\r\n                            </linearGradient>\r\n                        </defs>\r\n                        <CartesianGrid\r\n                            vertical={false}\r\n                            strokeDasharray=\"3 3\"\r\n                            stroke=\"#d6d9da\"\r\n                        />\r\n                        <XAxis dataKey={selectedApiValue} \r\n                        tickFormatter={getFormateDateValue}\r\n                         />\r\n                        <YAxis\r\n                            orientation=\"left\"\r\n                            width={20}\r\n                            axisLine={false}\r\n                            tickLine={false}\r\n                        />\r\n                        <Tooltip\r\n                            cursor={false}\r\n                            contentStyle={TooltipContainerStyles}\r\n                            formatter={(value, name) => [`${value}`, `${name}`]}\r\n                        />\r\n                        <Area\r\n                            dataKey=\"count\"\r\n                            name=\"Count\"\r\n                            type=\"basis\"\r\n                            unit={selectedApiValue === 'month' ? thisMonth : ''}\r\n                            fill=\"url(#rainGradient)\"\r\n                        />\r\n                    </AreaChart>\r\n                </ResponsiveContainer>\r\n               )}\r\n\r\n\r\n            </div>\r\n            <div className=\"overviewContainer__body-footer\">\r\n                  <RangePicker \r\n                  showTime={true}\r\n                  onChange={handleStartEndDateRangeDate}\r\n                  bordered={false}\r\n                  picker=\"date\" />\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ApiVisits\r\n","import React, { useState, useEffect } from 'react'\r\n\r\n\r\n\r\n// import libraries \r\nimport {\r\n    ResponsiveContainer,\r\n    AreaChart,\r\n    CartesianGrid,\r\n    XAxis,\r\n    YAxis,\r\n    Tooltip,\r\n    Area,\r\n} from \"recharts\";\r\n\r\nimport {\r\n    DeleteOutlined,\r\n    FileAddOutlined,\r\n    CheckCircleOutlined,\r\n    FileImageFilled,\r\n    FileImageOutlined,\r\n    FileImageTwoTone,\r\n    PlusOutlined,\r\n    PlusCircleOutlined,\r\n    CloseOutlined,\r\n    CheckOutlined,\r\n    InfoCircleOutlined,\r\n    UserOutlined,\r\n    CalendarOutlined,\r\n    GoldOutlined,\r\n    ShoppingCartOutlined,\r\n    TagOutlined\r\n} from '@ant-design/icons';\r\n\r\n\r\nimport { useHandleFetch } from \"../../hooks\";\r\n\r\n\r\n\r\nimport { Select, Button, Spin, Empty, DatePicker } from 'antd';\r\nimport Moment from \"react-moment\";\r\nimport moment from 'moment';\r\n\r\nconst { Option } = Select;\r\n\r\nconst { RangePicker } = DatePicker;\r\n\r\n\r\n\r\nexport const RAINFALL = {\r\n    \"2018\": [\r\n        {\r\n            month: 1,\r\n            rainfall: 65.4\r\n        },\r\n        {\r\n            month: 2,\r\n            rainfall: 1.6\r\n        },\r\n        {\r\n            month: 3,\r\n            rainfall: 23\r\n        },\r\n        {\r\n            month: 4,\r\n            rainfall: 16.4\r\n        },\r\n        {\r\n            month: 5,\r\n            rainfall: 65.6\r\n        },\r\n        {\r\n            month: 6,\r\n            rainfall: 43.2\r\n        },\r\n        {\r\n            month: 7,\r\n            rainfall: 19.4\r\n        },\r\n        {\r\n            month: 8,\r\n            rainfall: 42.8\r\n        },\r\n        {\r\n            month: 9,\r\n            rainfall: 16.4\r\n        },\r\n        {\r\n            month: 11,\r\n            rainfall: 97.8\r\n        },\r\n        {\r\n            month: 12,\r\n            rainfall: 104.8\r\n        }\r\n    ],\r\n    \"2019\": [\r\n        {\r\n            month: 1,\r\n            rainfall: 11.2\r\n        },\r\n        {\r\n            month: 2,\r\n            rainfall: 18.6\r\n        },\r\n        {\r\n            month: 3,\r\n            rainfall: 12\r\n        },\r\n        {\r\n            month: 4,\r\n            rainfall: 7.2\r\n        },\r\n        {\r\n            month: 5,\r\n            rainfall: 53.4\r\n        },\r\n        {\r\n            month: 6,\r\n            rainfall: 49.8\r\n        },\r\n        {\r\n            month: 7,\r\n            rainfall: 45.2\r\n        },\r\n        {\r\n            month: 8,\r\n            rainfall: 51.4\r\n        },\r\n        {\r\n            month: 9,\r\n            rainfall: 41\r\n        },\r\n        {\r\n            month: 10,\r\n            rainfall: 24\r\n        },\r\n        {\r\n            month: 11,\r\n            rainfall: 54.4\r\n        },\r\n        {\r\n            month: 12,\r\n            rainfall: 6.2\r\n        }\r\n    ]\r\n};\r\n\r\n\r\n\r\n\r\nconst MONTHS = [\r\n    \"Jan\",\r\n    \"Feb\",\r\n    \"Mar\",\r\n    \"Apr\",\r\n    \"May\",\r\n    \"Jun\",\r\n    \"Jul\",\r\n    \"Aug\",\r\n    \"Sep\",\r\n    \"Oct\",\r\n    \"Nov\",\r\n    \"Dec\"\r\n];\r\n\r\n\r\nexport const getMonthNameByOrder = (order: number): string | undefined =>\r\n    MONTHS[order - 1];\r\n\r\n\r\n\r\n\r\n\r\nexport const TooltipContainerStyles = {\r\n    border: 0,\r\n    borderRadius: \"8px\",\r\n    fontSize: 14,\r\n    boxShadow: \"2px 2px 5px 3px rgba(0,0,0,0.15)\"\r\n};\r\n\r\n\r\n\r\n\r\ninterface Props {\r\n\r\n}\r\n\r\nconst localOptions = [\r\n    {\r\n        value: 'category',\r\n        name: 'Category'\r\n    }, {\r\n        value: 'product',\r\n        name: 'Product'\r\n    }\r\n]\r\n\r\nconst ApiVisits = (props: Props) => {\r\n    const [selectedApiValue, setSelectedApiValue] = useState('date');\r\n    const [orderAnalyticsVisitsState, handleOrderAnalyticsVisitsStateFetch] = useHandleFetch({}, 'getAnalyticsOrders');\r\n    const [orderData, setorderData] = useState([]);\r\n    const [startDate,setStartDate] = useState('');\r\n    const [endDate,setEndDate] = useState('');\r\n\r\n\r\n    useEffect(()=>{\r\n        const getAnalyticsOrders = async () => {\r\n\r\n            const ordersDataRes =  await handleOrderAnalyticsVisitsStateFetch({\r\n                urlOptions: {\r\n                    params: {\r\n                        metricType: selectedApiValue,\r\n                        startDateValue: startDate,\r\n                        endDateValue: endDate\r\n                    }\r\n                }\r\n            }); \r\n\r\n           console.log('ordersDataRes',ordersDataRes); \r\n\r\n           // @ts-ignore\r\n           if(ordersDataRes){\r\n            // @ts-ignore\r\n            setorderData(ordersDataRes);\r\n           }\r\n\r\n           };\r\n           getAnalyticsOrders(); \r\n\r\n    },[selectedApiValue,startDate,endDate]); \r\n\r\n\r\n    console.log('orderAnalyticsVisitsState',orderAnalyticsVisitsState);\r\n\r\n\r\n    const onChange = (value) => {\r\n        setSelectedApiValue(value);\r\n    }\r\n\r\n\r\n    const options = [\r\n        {\r\n            value: 'date',\r\n            name: 'Date'\r\n        },\r\n        {\r\n            value: 'hour',\r\n            name: 'Hour'\r\n        },\r\n        {\r\n            value: 'dayOfWeek',\r\n            name: 'Day of week'\r\n        },\r\n        {\r\n            value: 'dayOfMonth',\r\n            name: 'Day of month'\r\n        },\r\n         {\r\n            value: 'month',\r\n            name: 'Month'\r\n        },\r\n        {\r\n            value: 'year',\r\n            name: 'Year'\r\n        }\r\n    ]\r\n\r\n\r\n\r\n    const date = new Date();\r\n    const thisMonth = MONTHS[date.getMonth()]\r\n    \r\n\r\n    const getFormateDateValue = (order) => {\r\n\r\n        if(selectedApiValue === 'day'){\r\n            return order ? moment(order).format('MMMM Do YYYY, h:mm:ss a') : order;\r\n        }\r\n        else if (selectedApiValue === 'date'){\r\n            return order ? moment(order).format('MMMM Do YYYY') : order;\r\n        }\r\n        else if (selectedApiValue === 'month'){\r\n            return MONTHS[order - 1];\r\n        }\r\n        return order; \r\n    }\r\n\r\n    const getDatePickerValue = () => {\r\n        if (selectedApiValue === 'hour'){\r\n            return 'time';\r\n        }\r\n        if (selectedApiValue === 'month'){\r\n            return 'month';\r\n        }\r\n        else if (selectedApiValue === 'dayOfWeek'){\r\n            return 'week';\r\n        }\r\n        else if (selectedApiValue === 'year'){\r\n            return 'year';\r\n        }\r\n        \r\n        return 'date'; \r\n    }\r\n    \r\n\r\n    const handleStartEndDateRangeDate = (e) => {\r\n        console.log('dateOrder',moment(e[0]).format());\r\n        console.log('dateOff',moment(e[1]).format());\r\n        const startDate = new Date(moment(e[0]).format()); \r\n        const endDate = new Date(moment(e[1]).format()); \r\n        // @ts-ignore\r\n        setStartDate(startDate);\r\n        // @ts-ignore\r\n        setEndDate(endDate);\r\n    }; \r\n\r\n    return (\r\n        <div className='overviewContainer__userVisits'>\r\n            <div className='overviewContainer__body-apiVisits-header'>\r\n                <div className='overviewContainer__body-apiVisits-header-info'>\r\n                    <h2>\r\n                        Orders \r\n                    </h2>\r\n\r\n                        <h3>\r\n                          All orders that visited\r\n                        </h3>\r\n                </div>\r\n\r\n                <div className='overviewContainer__body-apiVisits-header-controller'>\r\n                <Select\r\n                    bordered={false}\r\n                    showSearch\r\n                    style={{ width: '130px', borderRadius: '6px', color: '#1890ff' }}\r\n                    placeholder='Select an api'\r\n                    optionFilterProp='children'\r\n                    onChange={onChange}\r\n                    defaultValue={selectedApiValue}\r\n                    filterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n                >\r\n                    {\r\n                        options.map((option) => {\r\n                            return <Option value={option.value}>{option.name}</Option>;\r\n                        })}\r\n                </Select>\r\n            </div>\r\n            </div>\r\n\r\n            <div className='overviewContainer__body-body'>\r\n            {orderAnalyticsVisitsState.isLoading && (\r\n            <>\r\n\r\n            <div style={{\r\n                margin:'100px 0',\r\n                display:'flex',\r\n                justifyContent:'center',\r\n                alignItems:\"center\"\r\n            }}>\r\n                <Spin size='large' />\r\n             </div>\r\n            </>\r\n          )}\r\n                {orderAnalyticsVisitsState.done && !(orderAnalyticsVisitsState.data.length > 0) && (\r\n                    <div style={{\r\n                        marginTop: '00px'\r\n                    }}>\r\n                        <Empty description={`No Orders Created`} image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n                    </div>\r\n                )}\r\n\r\n\r\n               {orderAnalyticsVisitsState.done && orderData && orderData.length > 0 && (\r\n                    <ResponsiveContainer width=\"100%\" height={300}>\r\n                    <AreaChart data={orderData} fontSize={12}>\r\n                        <defs>\r\n                            <linearGradient id=\"rainGradient\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\r\n                                <stop offset=\"0%\" stopColor=\"#1890ff\" />\r\n                                <stop offset=\"100%\" stopColor=\"#3066BE22\" />\r\n                            </linearGradient>\r\n                        </defs>\r\n                        <CartesianGrid\r\n                            vertical={false}\r\n                            strokeDasharray=\"3 3\"\r\n                            stroke=\"#d6d9da\"\r\n                        />\r\n                        <XAxis \r\n                        dataKey={selectedApiValue} \r\n                        tickFormatter={getFormateDateValue}\r\n                         />\r\n                        <YAxis\r\n                            // unit=\"ml\"\r\n                            orientation=\"left\"\r\n                            width={20}\r\n                            axisLine={false}\r\n                            tickLine={false}\r\n                        />\r\n                        <Tooltip\r\n                            cursor={false}\r\n                            contentStyle={TooltipContainerStyles}\r\n                            formatter={(value, name) => [`${value}`, `${name}`]}\r\n                        />\r\n                        <Area\r\n                            dataKey=\"count\"\r\n                            name=\"Count\"\r\n                            unit={selectedApiValue === 'month' ? thisMonth : ''}\r\n                            type=\"basis\"\r\n                            fill=\"url(#rainGradient)\"\r\n                        />\r\n                    </AreaChart>\r\n                </ResponsiveContainer>\r\n               )}\r\n\r\n\r\n            </div>\r\n            <div className=\"overviewContainer__body-footer\">\r\n                  <RangePicker\r\n                    showTime={true}\r\n                    onChange={handleStartEndDateRangeDate}\r\n                    picker={'date'} \r\n                    bordered={false}\r\n                    />\r\n            </div>\r\n        </div>\r\n    ); \r\n\r\n}\r\n\r\nexport default ApiVisits\r\n","import React, { useState, useEffect } from 'react'\r\n\r\n\r\n\r\n\r\n// import lib \r\n\r\nimport { ResponsiveContainer, PieChart, Tooltip, Pie, Cell } from \"recharts\";\r\n\r\n\r\n// import hooks\r\nimport { useHandleFetch } from \"../../hooks\";\r\n\r\nimport {\r\n    DeleteOutlined,\r\n    FileAddOutlined,\r\n    CheckCircleOutlined,\r\n    FileImageFilled,\r\n    FileImageOutlined,\r\n    FileImageTwoTone,\r\n    PlusOutlined,\r\n    PlusCircleOutlined,\r\n    CloseOutlined,\r\n    CheckOutlined,\r\n    InfoCircleOutlined,\r\n    UserOutlined,\r\n    CalendarOutlined,\r\n    GoldOutlined,\r\n    ShoppingCartOutlined,\r\n    TagOutlined\r\n} from '@ant-design/icons';\r\n\r\nimport { Select, Button, Spin, Empty } from 'antd';\r\n\r\nconst { Option } = Select;\r\n\r\n\r\n\r\n\r\ninterface Props {\r\n\r\n}\r\n\r\nconst localOptions = [\r\n    {\r\n        value: 'browser',\r\n        name: 'Browser'\r\n    },\r\n    {\r\n        value: 'device',\r\n        name: 'Device'\r\n    },\r\n    {\r\n        value: 'os',\r\n        name: 'OS'\r\n    }, {\r\n        value: 'platform',\r\n        name: 'Platform'\r\n    },\r\n  \r\n\r\n];\r\n\r\n\r\nexport const AGE_GROUP = [\r\n    {\r\n        device: \"18-24\",\r\n        percentage: 14\r\n    },\r\n    {\r\n        device: \"25-34\",\r\n        percentage: 24\r\n    },\r\n    {\r\n        device: \"35-44\",\r\n        percentage: 22\r\n    },\r\n    {\r\n        device: \"45-54\",\r\n        percentage: 18\r\n    },\r\n    {\r\n        device: \"55-64\",\r\n        percentage: 16\r\n    },\r\n    {\r\n        device: \"65+\",\r\n        percentage: 6\r\n    }\r\n];\r\n\r\nexport const COLORS = [\r\n    '#1890ff',\r\n    '#20A39E',\r\n    '#61D095',\r\n    '#FFBA49',\r\n    '#EF5B5B',\r\n    '#A4036F',\r\n];\r\n\r\n\r\n\r\n\r\nexport const TooltipContainerStyles = {\r\n    border: 0,\r\n    borderRadius: \"8px\",\r\n    fontSize: 14,\r\n    boxShadow: \"2px 2px 5px 3px rgba(0,0,0,0.15)\"\r\n};\r\n\r\n\r\n\r\n\r\nconst PlatformVisits = (props: Props) => {\r\n    const [options, setoptions] = useState(localOptions);\r\n    const [selectedApiValue, setSelectedApiValue] = useState('browser');\r\n\r\n\r\n    const [demoGraphicVisitsState, handleDemoGraphicVisitsStateFetch] = useHandleFetch({}, 'getAnalyticsDemographicVisits');\r\n\r\n\r\n    const [demographicData, setdemographicData] = useState([]);\r\n\r\n    useEffect(()=>{\r\n        const getDemoGraphicVisitsValue = async () => {\r\n            const demograpicVisitsDataRes =  await handleDemoGraphicVisitsStateFetch({\r\n                urlOptions: {\r\n                    params: {\r\n                        metricType: selectedApiValue,\r\n                    }\r\n                }\r\n            }); \r\n           };\r\n\r\n           getDemoGraphicVisitsValue(); \r\n\r\n    },[selectedApiValue])\r\n\r\n\r\n\r\n    useEffect(()=>{\r\n        if(demoGraphicVisitsState.done && demoGraphicVisitsState.data){\r\n            setdemographicData(demoGraphicVisitsState.data); \r\n        }; \r\n    },[demoGraphicVisitsState])\r\n\r\n\r\n\r\n    console.log('demoGraphicVisitsState',demoGraphicVisitsState)\r\n    console.log('demographicData',demographicData)\r\n\r\n\r\n    const onChange = (value) => {\r\n        setSelectedApiValue(value);\r\n    }\r\n\r\n    const RADIAN = Math.PI / 180;\r\n\r\n\r\n    const renderCustomizedLabel = ({\r\n        cx,\r\n        cy,\r\n        midAngle,\r\n        innerRadius,\r\n        outerRadius,\r\n        value,\r\n        name,\r\n        index,\r\n        percent,\r\n    }) => {\r\n        const radius = innerRadius + (outerRadius - innerRadius) * 0.5;\r\n        const x = cx + radius * Math.cos(-midAngle * RADIAN) - 10;\r\n        const y = cy + radius * Math.sin(-midAngle * RADIAN);\r\n\r\n        console.log('percent..',percent);\r\n        return (\r\n            <text x={x} y={y} fill=\"white\" fontSize={12} dominantBaseline=\"central\">\r\n                {`${(percent * 100).toFixed(0)}%`}\r\n            </text>\r\n        );\r\n    };\r\n\r\n\r\n\r\n    return (\r\n        <div className='overviewContainer__body-platformVisits'>\r\n            <div className='overviewContainer__body-platformVisits-header'>\r\n                <div className='overviewContainer__body-platformVisits-header-info'>\r\n                    <h2>\r\n                        Demographic\r\n                        </h2>\r\n                    <h3>\r\n                       {selectedApiValue} demography\r\n                        </h3>\r\n                </div>\r\n                <div className='overviewContainer__body-platformVisits-header-controller'>\r\n                    <Select\r\n                        bordered={false}\r\n                        showSearch\r\n                        style={{ width: '130px', borderRadius: '6px', color: '#1890ff' }}\r\n                        placeholder='Select Type'\r\n                        optionFilterProp='children'\r\n                        onChange={onChange}\r\n                        defaultValue={'browser'}\r\n                        filterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n                    >\r\n                        {\r\n                            options.map((option) => {\r\n                                return <Option value={option.value}>{option.name}</Option>;\r\n                            })}\r\n                    </Select>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"overviewContainer__body-body\">\r\n\r\n            {demoGraphicVisitsState.isLoading && (\r\n            <>\r\n                <div style={{\r\n                    display:'flex',\r\n                    justifyContent:'center',\r\n                    alignItems:\"center\",\r\n                    marginTop:'100px',\r\n                    marginBottom:'100px',\r\n                }}>\r\n                <Spin\r\n                size='large'\r\n                />\r\n                </div>\r\n\r\n            </>\r\n        )}\r\n                {demoGraphicVisitsState.done && !(demoGraphicVisitsState.data.length > 0) && (\r\n                    <div style={{\r\n                        marginTop: '00px'\r\n                    }}>\r\n                        <Empty description={`No Visits for ${selectedApiValue}`} image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n                    </div>\r\n                )}\r\n\r\n\r\n                    {demoGraphicVisitsState.done && demographicData && demographicData.length > 0 && (\r\n                        <ResponsiveContainer width=\"100%\" height={300}>\r\n                        <PieChart fontSize={14}>\r\n                            <Tooltip\r\n                                cursor={false}\r\n                                contentStyle={TooltipContainerStyles}\r\n                                formatter={(value, name) => [`${value}`, `${name}`]}\r\n                            />\r\n\r\n                            <Pie\r\n                                dataKey=\"count\"\r\n                                data={demographicData}\r\n                                outerRadius={100}\r\n                                innerRadius={40}\r\n                                name={selectedApiValue}\r\n                                nameKey={selectedApiValue}\r\n                                unit=\"%\"\r\n                                label={renderCustomizedLabel}\r\n                                labelLine={false}\r\n                            >\r\n                                {demographicData && demographicData.map((entry, index) => (\r\n                                    <Cell\r\n                                        key={`cell-${index}`}\r\n                                        fill={COLORS[index % COLORS.length]}\r\n                                    />\r\n                                ))}\r\n                            </Pie>\r\n                            </PieChart>\r\n                        </ResponsiveContainer>\r\n                    )}\r\n            </div>\r\n\r\n            <div className=\"overviewContainer__body-footer\">\r\n                <h3>\r\n                    <span>\r\n                        <CalendarOutlined />\r\n                    </span>\r\n\r\n\t\t\t\t\t\t\t\tIn the last month\r\n\t\t\t\t\t     </h3>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PlatformVisits\r\n\r\n\r\n// http://localhost:5000/admin/analytics/user?metric=day?start=date&end=datae\r\n// /http://localhost:5000/admin/analytics/item?type=product&item=534534534534&metric=day","import React,{useState, useEffect} from 'react'\r\n\r\n\r\n// import hooks\r\nimport { useHandleFetch } from \"../../hooks\";\r\n\r\n// import components\r\nimport { DataTableSkeleton } from \"../../components/Placeholders\";\r\n\r\n// \r\n\r\n\r\n// import lib\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {\r\n    FileOutlined,\r\n    InboxOutlined,\r\n    RadiusUpleftOutlined,\r\n    RadiusUprightOutlined,\r\n    RadiusBottomleftOutlined,\r\n    RadiusBottomrightOutlined,\r\n    PlusOutlined,\r\n    DeleteOutlined,\r\n    EditOutlined,\r\n    CheckCircleOutlined,\r\n    CalendarOutlined\r\n} from '@ant-design/icons';\r\n\r\nimport { Skeleton, Empty, Popconfirm, Upload, message, Switch, Select, Button, notification, Table, Space, Input as CoolInput, Tooltip, Modal, Spin } from 'antd';\r\n\r\n\r\nconst { Option } = Select;\r\n\r\nconst { Column, ColumnGroup } = Table;\r\n\r\n\r\n\r\ninterface Props {\r\n    \r\n}\r\n\r\nconst localOptions = [\r\n    {\r\n        value: 'category',\r\n        name: 'Category'\r\n    },\r\n     {\r\n        value: 'product',\r\n        name: 'Product'\r\n    }\r\n\r\n]\r\n\r\n\r\nconst PageVisits = (props: Props) => {\r\n\r\n    const history = useHistory(); \r\n\r\n\r\n    const [options, setoptions] = useState(localOptions);\r\n    const [selectedApiValue, setSelectedApiValue] = useState('product');\r\n    const [pageVisitsState, handlePageVisitsStateFetch] = useHandleFetch({}, 'getAnalyticsPageVisits');\r\n\r\n\r\n    useEffect(()=>{\r\n        const getPageVisitsValue = async () => {\r\n            const pageVisitsDataRes =  await handlePageVisitsStateFetch({\r\n                urlOptions: {\r\n                    params: {\r\n                        visitType: selectedApiValue,\r\n                        item: 'item',\r\n                    }\r\n                }\r\n            }); \r\n           };\r\n\r\n           getPageVisitsValue(); \r\n\r\n    },[selectedApiValue])\r\n\r\n    const onChange = (value) => {\r\n        setSelectedApiValue(value);\r\n    }\r\n\r\n\r\n    console.log('pageVisitsState',pageVisitsState)\r\n\r\n\r\n    return (\r\n\r\n        <div className='overviewContainer__body-apiVisits'>\r\n        <div className='overviewContainer__body-apiVisits-header'>\r\n            <div className='overviewContainer__body-apiVisits-header-info'>\r\n                <h2>\r\n                    Popularity\r\n                    </h2>\r\n                <h3>\r\n                      All {selectedApiValue} that were visited\r\n                    </h3>\r\n            </div>\r\n            <div className='overviewContainer__body-apiVisits-header-controller'>\r\n                <Select\r\n                    bordered={false}\r\n                    showSearch\r\n                    style={{ width: '130px', borderRadius: '6px', color: '#1890ff' }}\r\n                    placeholder='Select an api'\r\n                    optionFilterProp='children'\r\n                    onChange={onChange}\r\n                    defaultValue={selectedApiValue}\r\n                    filterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n                >\r\n                    {\r\n                        options.map((option) => {\r\n                            return <Option value={option.value}>{option.name}</Option>;\r\n                        })}\r\n                </Select>\r\n            </div>\r\n        </div>\r\n\r\n        <div className='overviewContainer__body-body'>    \r\n        {pageVisitsState.isLoading && (\r\n            <>\r\n            <div style={{\r\n                display:'flex',\r\n                justifyContent:'center',\r\n                alignItems:\"center\"\r\n            }}>\r\n            <Spin\r\n            size='large'\r\n             />\r\n                </div>\r\n\r\n            </>\r\n        )}\r\n                {pageVisitsState.done && !(pageVisitsState.data.length > 0) && (\r\n                    <div style={{\r\n                        marginTop: '00px'\r\n                    }}>\r\n                        <Empty description={`No Visits for ${selectedApiValue}`} image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n                    </div>\r\n                )}\r\n\r\n                {pageVisitsState.done && pageVisitsState.data && pageVisitsState.data.length > 0 && (\r\n                    <>\r\n                        <Table\r\n                            style={{\r\n                            }}\r\n                            // expandable={{\r\n                            //     expandedRowRender: record => <p style={{ margin: 0 }}>{record.name}</p>,\r\n                            //     rowExpandable: record => record.name !== 'Not Expandable',\r\n                            //   }}\r\n                            // bordered={true}\r\n                            size='small'\r\n                            // pagination={false}\r\n                            dataSource={pageVisitsState.data}\r\n                            tableLayout={'auto'}\r\n                            onHeaderRow={column => {\r\n                                return {\r\n                                    style: {\r\n                                        color: 'red !important'\r\n                                    }\r\n\r\n                                };\r\n                            }}\r\n                        >\r\n                \r\n\r\n                            <Column\r\n                                title=\"Name\"\r\n                                dataIndex=\"name\"\r\n                                key=\"id\"\r\n                                className='classnameofthecolumn'\r\n                                render={(text, record: any) => (\r\n                                    <>\r\n                                       <a href='##'>\r\n                                       <h4\r\n                                            onClick={() => {\r\n                                                history.push(`/admin/${selectedApiValue && selectedApiValue.toLowerCase()}/${record.itemId}`)\r\n                                            }}  \r\n                                            style={{\r\n                                                fontWeight: 400,\r\n                                                color: '#555',\r\n                                                textTransform:'uppercase',\r\n                                                cursor: 'pointer'\r\n                                            }}>\r\n                                            {text || `${selectedApiValue} Deleted`}\r\n                                        </h4>\r\n                                       </a>\r\n                                    </>\r\n                                )}\r\n                            />\r\n\r\n                            <Column\r\n                                title=\"Count\"\r\n                                dataIndex=\"visit\"\r\n                                key=\"id\"\r\n                                className='classnameofthecolumn'\r\n\r\n                            />\r\n\r\n\r\n                        </Table>\r\n                    </>\r\n                )}\r\n\r\n        </div>\r\n        <div className=\"overviewContainer__body-footer\">\r\n            <h3>\r\n                <span>\r\n                    <CalendarOutlined />\r\n                </span>\r\n\r\n                            In the last month\r\n                     </h3>\r\n        </div>\r\n\r\n    </div>\r\n\r\n    )\r\n}\r\n\r\nexport default PageVisits\r\n","import React, { useEffect, useState } from 'react';\r\n\r\n// import components \r\nimport ApiVisits from \"./ApiVisits\";\r\nimport OrderOverView from \"./OrderOverView\";\r\nimport PlatformVisits from \"./PlatformVisits\";\r\nimport PageVisits from \"./PageVisits\";\r\n\r\n// import lib \r\nimport { message, Tooltip, Modal, Tabs, Empty, Badge } from 'antd';\r\n\r\nimport {\r\n\tDeleteOutlined,\r\n\tFileAddOutlined,\r\n\tCheckCircleOutlined,\r\n\tFileImageFilled,\r\n\tFileImageOutlined,\r\n\tFileImageTwoTone,\r\n\tPlusOutlined,\r\n\tPlusCircleOutlined,\r\n\tCloseOutlined,\r\n\tCheckOutlined,\r\n\tInfoCircleOutlined,\r\n\tUserOutlined,\r\n\tCalendarOutlined,\r\n\tGoldOutlined,\r\n\tShoppingCartOutlined,\r\n\tTagOutlined\r\n} from '@ant-design/icons';\r\n\r\n// import hooks\r\nimport { useHandleFetch } from \"../../hooks\";\r\n\r\n\r\ninterface Props { }\r\n\r\nconst Overview = (props: Props) => {\r\n\tconst [analyticsProductVisitCountState, handleAnalyticsProductVisitCountFetch] = useHandleFetch({}, 'getAnalyticsPageVisitCount');\r\n\tconst [analyticsCategoryVisitCountState, handleAnalyticsCategoryVisitCountFetch] = useHandleFetch({}, 'getAnalyticsPageVisitCount');\r\n\tconst [totalUserCountState, handleGetTotalUserCountFetch] = useHandleFetch({}, 'getAnalyticsTotalUserCount');\r\n\r\n\r\n\r\n\tuseEffect(() => {\r\n\r\n\t\tconst getTotalUserCount = async () => {\r\n\t\t\tawait handleGetTotalUserCountFetch({});\r\n\t\t}\r\n\r\n\t\tgetTotalUserCount();\r\n\t}, []);\r\n\r\n\r\n\t\r\n\tuseEffect(()=>{\r\n\t\tconst getProductVisitCount = async () => {\r\n\t\t\tawait handleAnalyticsProductVisitCountFetch({\r\n\t\t\t\tparams: 'product'\r\n\t\t\t})\r\n\t\t}; \r\n\t\tgetProductVisitCount();\r\n\t},[])\r\n\r\n\r\n\r\n\tuseEffect(()=>{\r\n\t\tconst getCategoryVisitCount = async () => {\r\n\t\t\tawait handleAnalyticsCategoryVisitCountFetch({\r\n\t\t\t\tparams: 'category'\r\n\t\t\t})\r\n\t\t}; \r\n\t\tgetCategoryVisitCount();\r\n\t},[])\r\n\r\n\r\n\r\n\r\n\r\n\r\n\treturn (\r\n\t\t<div className='overviewContainer'>\r\n\t\t\t{/* <div className=\"overviewContainer__header\">\r\n\r\n\t\t\t\t{totalUserCountState.done && totalUserCountState.data && (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t<div className=\"overviewContainer__header-card\">\r\n\t\t\t\t\t<div className=\"overviewContainer__header-card-body\">\r\n\t\t\t\t\t\t<div className='overviewContainer__header-card-body-iconbox'>\r\n\t\t\t\t\t\t\t<UserOutlined />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className='overviewContainer__header-card-body-info'>\r\n\t\t\t\t\t\t\t<h3>\r\n\t\t\t\t\t\t\t\t+ Users\r\n\t\t\t\t\t\t\t</h3>\r\n\t\t\t\t\t\t\t<h2>\r\n\t\t\t\t\t\t\t\t{totalUserCountState.data['totalIndex'] || 0}\r\n\t\t\t\t\t\t\t</h2>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"overviewContainer__header-card-footer\">\r\n\t\t\t\t\t\t<h3>\r\n\t\t\t\t\t\t\t<span>\r\n\t\t\t\t\t\t\t\t<CalendarOutlined />\r\n\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\tIn the last month\r\n\t\t\t\t\t     </h3>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t\t</>\r\n\t\t\t\t)}\r\n\r\n\r\n\t\t\t\t{analyticsProductVisitCountState.done && analyticsProductVisitCountState.data && (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t<div className=\"overviewContainer__header-card\">\r\n\t\t\t\t\t<div className=\"overviewContainer__header-card-body\">\r\n\t\t\t\t\t\t<div className='overviewContainer__header-card-body-iconbox'>\r\n\t\t\t\t\t\t\t<UserOutlined />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className='overviewContainer__header-card-body-info'>\r\n\t\t\t\t\t\t\t<h3>\r\n\t\t\t\t\t\t\t\t+ Products\r\n\t\t\t\t\t\t\t</h3>\r\n\t\t\t\t\t\t\t<h2>\r\n\t\t\t\t\t\t\t\t{analyticsProductVisitCountState.data['totalIndex'] || 0}\r\n\t\t\t\t\t\t\t</h2>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"overviewContainer__header-card-footer\">\r\n\t\t\t\t\t\t<h3>\r\n\t\t\t\t\t\t\t<span>\r\n\t\t\t\t\t\t\t\t<CalendarOutlined />\r\n\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\tIn the last month\r\n\t\t\t\t\t     </h3>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t\t</>\r\n\t\t\t\t)}\r\n\r\n\r\n\r\n\r\n\t\t\t\t{analyticsCategoryVisitCountState.done && analyticsCategoryVisitCountState.data && (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t<div className=\"overviewContainer__header-card\">\r\n\t\t\t\t\t<div className=\"overviewContainer__header-card-body\">\r\n\t\t\t\t\t\t<div className='overviewContainer__header-card-body-iconbox'>\r\n\t\t\t\t\t\t\t<UserOutlined />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className='overviewContainer__header-card-body-info'>\r\n\t\t\t\t\t\t\t<h3>\r\n\t\t\t\t\t\t\t\t+ Category\r\n\t\t\t\t\t\t\t</h3>\r\n\t\t\t\t\t\t\t<h2>\r\n\t\t\t\t\t\t\t\t{analyticsCategoryVisitCountState.data['totalIndex'] || 0}\r\n\t\t\t\t\t\t\t</h2>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"overviewContainer__header-card-footer\">\r\n\t\t\t\t\t\t<h3>\r\n\t\t\t\t\t\t\t<span>\r\n\t\t\t\t\t\t\t\t<CalendarOutlined />\r\n\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\tIn the last month\r\n\t\t\t\t\t     </h3>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t\t</>\r\n\t\t\t\t)}\r\n\r\n\r\n\r\n\t\t\t\t<div className=\"overviewContainer__header-card\">\r\n\t\t\t\t\t<div className=\"overviewContainer__header-card-body\">\r\n\t\t\t\t\t\t<div className='overviewContainer__header-card-body-iconbox'>\r\n\t\t\t\t\t\t\t<ShoppingCartOutlined />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className='overviewContainer__header-card-body-info'>\r\n\t\t\t\t\t\t\t<h3>\r\n\t\t\t\t\t\t\t\t+ Orders\r\n\t\t\t\t\t\t\t</h3>\r\n\t\t\t\t\t\t\t<h2>\r\n\t\t\t\t\t\t\t\t8503\r\n\t\t\t\t\t\t\t</h2>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"overviewContainer__header-card-footer\">\r\n\t\t\t\t\t\t<h3>\r\n\t\t\t\t\t\t\t<span>\r\n\t\t\t\t\t\t\t\t<CalendarOutlined />\r\n\t\t\t\t\t\t\t</span>\r\n\r\n\t\t\t\t\t\t\t\tIn the last month\r\n\t\t\t\t\t     </h3>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\r\n\r\n\t\t\t</div>\r\n */}\r\n\r\n\t\t\t<div className=\"overviewContainer__body\">\r\n\t\t\t\t<PageVisits />\r\n\t\t\t\t<PlatformVisits />\r\n\t\t\t</div>\r\n\t\t\t<div className=\"overviewContainer__body\">\r\n\t\t\t</div>\r\n\t\t\t<OrderOverView />\r\n\t\t\t<ApiVisits />\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Overview;\r\n","import React from 'react';\r\nimport { Form, Input } from 'antd';\r\n\r\nconst { TextArea } = Input;\r\n\r\n\r\n\r\ninterface Props {\r\n    label?: string;\r\n    type?: string;\r\n    defaultValue?: string;\r\n    value?: string;\r\n    onChange?: any;\r\n    disabled?: boolean;\r\n    isError?: boolean;\r\n    errorString?: string;\r\n    name?: string;\r\n    rows?: number\r\n    placeholder?:any; \r\n}\r\n\r\nconst Demo = ({ label, type, defaultValue, value, \r\n    onChange, disabled, isError,\r\n     errorString, name, rows = 4,\r\n     placeholder\r\n     }: Props) => {\r\n    return (\r\n        <>\r\n            {label && (\r\n                <h3 className='inputFieldLabel'>\r\n                    {label}\r\n                </h3>\r\n            )}\r\n\r\n            <Form.Item\r\n                validateStatus={isError ? \"error\" : \"\"}\r\n                help={errorString}\r\n            // rules={[{ required: true }]}\r\n            >\r\n                <TextArea\r\n                    disabled={disabled}\r\n                    onChange={onChange}\r\n                    value={value}\r\n                    name={name}\r\n                    className='inputclassName'\r\n                    rows={rows} \r\n                    placeholder={placeholder}\r\n                    />\r\n\r\n            </Form.Item>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Demo; ","import React, { useState, useEffect } from 'react';\r\n\r\n\r\n\r\n\r\n// import libraries\r\nimport { Upload, Button, Modal, Tabs, message, notification, Popconfirm, Menu, Dropdown, } from 'antd';\r\nimport reqwest from 'reqwest';\r\nimport { Formik } from 'formik';\r\nimport Moment from 'react-moment';\r\n// import * as Yup from 'yup';\r\n\r\n\r\nimport {\r\n\tCheckOutlined,\r\n\tArrowUpOutlined,\r\n\tCheckCircleOutlined,\r\n\tEllipsisOutlined,\r\n\tFileImageOutlined,\r\n\tDeleteOutlined,\r\n\tCloseOutlined\r\n\r\n} from '@ant-design/icons';\r\n\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport Empty from '../../components/Empty';\r\n\r\n// import hooks\r\nimport { useHandleFetch } from \"../../hooks\";\r\n\r\n// import configs\r\nimport config from \"../../config.json\";\r\n\r\nconst { Dragger } = Upload;\r\nconst { TabPane } = Tabs;\r\n\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t\tmessage: message || 'Category Updated',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t\tmessage: message || 'Something Went Wrong',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n};\r\n\r\n\r\n\r\ninterface Props {\r\n\tvisible: boolean;\r\n\tsetvisible: (isVisible: any) => void;\r\n\tsetmyImages?: any;\r\n\tsetmyThumbnailImage?: any;\r\n\tisModalOpenForThumbnail?: boolean;\r\n\tisModalOpenForImages?: boolean;\r\n\tmyImages?: any;\r\n\tmyThumbnailImage?: any;\r\n\tsetMyGoddamnImages?: any;\r\n\tmyGoddamnImages?: any;\r\n}\r\n\r\n\r\nconst MediaLibrary = ({\r\n\tvisible,\r\n\tsetvisible,\r\n\tsetmyImages,\r\n\tisModalOpenForImages,\r\n\tisModalOpenForThumbnail,\r\n\tsetmyThumbnailImage,\r\n\tmyImages,\r\n\tmyThumbnailImage,\r\n\t...rest\r\n}: Props) => {\r\n\r\n\tconst [fileList, setfileList] = useState([]);\r\n\tconst [uploading, setuploading] = useState(false);\r\n\tconst [selectedimages, setselectedImages] = useState([]);\r\n\tconst [activeImageItem, setactiveImageItem] = useState(false);\r\n\tconst [updateMediaLibrary, handleUpdateMediaLibraryFetch] = useHandleFetch({}, 'updateImageFromLibrary');\r\n\tconst [imageListFromLibraryState, handleImageListFromLibraryFetch] = useHandleFetch({}, 'ImageListFromLibrary');\r\n\tconst [deleteImageFromLibraryFetchState, handleDeleteImageFromLibraryFetch] = useHandleFetch({}, 'deleteImageFromLibrary');\r\n\tconst [localImageList, setLocalImageList] = useState([]);\r\n\tconst [isDoneOk, setisDoneOk] = useState(false);\r\n\r\n\r\n\tconst handleDeleteImageFromImageLibrary = async (id) => {\r\n\r\n\t\tconst deleteImageLibraryItemRes = await handleDeleteImageFromLibraryFetch({\r\n\t\t\turlOptions: {\r\n\t\t\t\tplaceHolders: {\r\n\t\t\t\t\tid,\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\r\n\t\t// @ts-ignore\r\n\t\tif (deleteImageLibraryItemRes && deleteImageLibraryItemRes.status === 'ok') {\r\n\t\t\topenSuccessNotification('Imaged Deleted');\r\n\t\t\tconst newImageList = localImageList.filter(item => item.id !== id);\r\n\t\t\tsetLocalImageList(newImageList);\r\n\t\t}\r\n\t};\r\n\r\n\tconst getImageList = async () => {\r\n\t\tconst imageListRes = await handleImageListFromLibraryFetch({\r\n\t\t\turlOptions: {\r\n\t\t\t\tparams: {\r\n\t\t\t\t\tlimitNumber: 10000,\r\n\t\t\t\t\tsortItem: 'added',\r\n\t\t  \t\t\tsortOrderValue: '-1'\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\r\n\t\t// @ts-ignore\r\n\t\tif (imageListRes) {\r\n\t\t\t// @ts-ignore\r\n\t\t\tsetLocalImageList(imageListRes);\r\n\t\t}\r\n\r\n\t\t// console.log('imageListRes', imageListRes);\r\n\t}\r\n\r\n\r\n\r\n\tuseEffect(() => {\r\n\r\n\t\tgetImageList();\r\n\t}, [])\r\n\r\n\r\n\r\n\r\n\tconst handleUpload = async () => {\r\n\t\tconst formData = new FormData();\r\n\t\tfileList.forEach(file => {\r\n\t\t\tformData.append('images', file, file.name);\r\n\t\t});\r\n\r\n\t\tsetuploading(true);\r\n\r\n\t\t//  const addImageToLibraryRes = awAddait handleMediaLibraryFetch({\r\n\t\t// \tbody: formData\r\n\t\t//   });\r\n\r\n\t\t//   console.log('addImageToLibraryRes',addImageToLibraryRes)\r\n\r\n\r\n\r\n\t\t// You can use any AJAX library you like\r\n\t\treqwest({\r\n\t\t\turl: `${config.baseURL}/admin/api/image/add`,\r\n\t\t\tmethod: 'post',\r\n\t\t\tprocessData: false,\r\n\t\t\tdata: formData,\r\n\t\t\twithCredentials: true,\r\n\t\t\tsuccess: () => {\r\n\t\t\t\tsetfileList([]);\r\n\t\t\t\tsetuploading(false);\r\n\t\t\t\tgetImageList();\r\n\t\t\t\tmessage.success('upload successfully.');\r\n\t\t\t},\r\n\t\t\terror: () => {\r\n\t\t\t\tsetuploading(false);\r\n\t\t\t\tmessage.error('upload failed.');\r\n\t\t\t},\r\n\t\t});\r\n\t};\r\n\r\n\r\n\r\n\tconst handleOk = (e: any) => {\r\n\r\n\t\tif (isModalOpenForImages) {\r\n\t\t\tsetmyImages(selectedimages);\r\n\t\t\tsetisDoneOk(true);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tconsole.log('')\r\n\t\t\tconsole.log('selectedimages,,,',selectedimages[0])\r\n\t\t\tsetmyImages(selectedimages && selectedimages[0] ? [selectedimages[0]] : []);\r\n\t\t\tsetisDoneOk(true);\r\n\t\t}\r\n\t\tsetvisible(false);\r\n\t};\r\n\r\n\tconst handleCancel = (e: any) => {\r\n\t\tsetvisible(false);\r\n\t};\r\n\r\n\r\n\tuseEffect(() => {\r\n\t\tif (myImages && myImages.length > 0)\r\n\t\t\tsetselectedImages([...myImages]);\r\n\t}, [myImages])\r\n\r\n\r\n\tuseEffect(() => {\r\n\t\tif (isDoneOk && isModalOpenForImages && myImages) {\r\n\t\t\tsetselectedImages([...myImages]);\r\n\t\t}\r\n\t}, [myImages, isDoneOk]);\r\n\r\n\r\n\r\n\tuseEffect(() => {\r\n\t\tif (isDoneOk) {\r\n\t\t\t// console.log('myThumbnail', myThumbnailImage)\r\n\t\t\t// setselectedImages([...myThumbnailImage]);\r\n\t\t}\r\n\t}, [myThumbnailImage, isDoneOk])\r\n\r\n\tconst uploadProps = {\r\n\t\t//  listType: 'picture',\r\n\t\tmultiple: true,\r\n\t\tonRemove: file => {\r\n\t\t\tsetfileList(filelist => {\r\n\t\t\t\tconst index = fileList.indexOf(file);\r\n\t\t\t\tconst newFileList = fileList.slice();\r\n\t\t\t\tnewFileList.splice(index, 1);\r\n\t\t\t\treturn newFileList;\r\n\t\t\t})\r\n\r\n\t\t},\r\n\t\tbeforeUpload: file => {\r\n\t\t\tsetfileList(filelist => {\r\n\t\t\t\tconst xflelist = filelist;\r\n\t\t\t\treturn [...xflelist, file]\r\n\t\t\t})\r\n\t\t\treturn false;\r\n\t\t},\r\n\t\tfileList,\r\n\t};\r\n\r\n\r\n\r\n\r\n\tconst handleAddToSelectedList = (image, id) => {\r\n\r\n\t\tif (selectedimages && selectedimages.length > 0) {\r\n\t\t\tconst isImageExist = selectedimages.find(image => image.id === id);\r\n\t\t\tif (!isImageExist) {\r\n\t\t\t\tsetselectedImages([image,...selectedimages]);\r\n\t\t\t\tsetactiveImageItem(image);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tconst newselectedImages = selectedimages.filter(image => image.id !== id);\r\n\t\t\t\tsetselectedImages(newselectedImages);\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\tsetselectedImages([image,...selectedimages]);\r\n\t\t\tsetactiveImageItem(image);\r\n\t\t}\r\n\r\n\t}\r\n\r\n\r\n\tconst getisSelectedImage = (id) => {\r\n\t\tif (selectedimages && selectedimages.length > 0) {\r\n\t\t\tconst isImageExist = selectedimages.find(image => image.id === id);\r\n\t\t\tif (isImageExist) {\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t};\r\n\r\n\r\n\tconst handleUpdateSubmit = async (values, actions) => {\r\n\t\tconst updateImageLibraryItemRes = await handleUpdateMediaLibraryFetch({\r\n\t\t\tbody: {\r\n\t\t\t\tid: values.id,\r\n\t\t\t\talt: values.alt,\r\n\t\t\t\ttitle: values.title,\r\n\t\t\t\tcaptoin: values.captoin,\r\n\t\t\t\tlabels: values.labels,\r\n\r\n\t\t\t},\r\n\t\t});\r\n\r\n\r\n\t\t// @ts-ignore\r\n\t\tif (updateImageLibraryItemRes && updateImageLibraryItemRes.status === 'ok') {\r\n\t\t\topenSuccessNotification('Image Updated');\r\n\r\n\t\t\tconst positionInImageList = () => {\r\n\t\t\t\treturn localImageList.map(item => item.id).indexOf(values.id);\r\n\t\t\t}\r\n\r\n\t\t\tconst index = positionInImageList();\r\n\r\n\t\t\t// @ts-ignore\r\n\t\t\tconst updatedItem = Object.assign({}, localImageList[index], { ...updateImageLibraryItemRes });\r\n\t\t\tconst updateImageList = [...localImageList.slice(0, index), updatedItem, ...localImageList.slice(index + 1)];\r\n\t\t\tsetLocalImageList(updateImageList);\r\n\r\n\t\t}\r\n\t\telse {\r\n\t\t\topenErrorNotification();\r\n\t\t}\r\n\r\n\r\n\r\n\t\tactions.setSubmitting(false);\r\n\t}\r\n\r\n\r\n\tconst getisUpdateSubmitButtonDisabled = (values, isValid) => {\r\n\t\t// if(!values.alt || !values.title || !values.title || !values.caption || !isValid){\r\n\t\t// \treturn true; \r\n\t\t// }\r\n\t\tif (!isValid) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\t// console.log('selectedimages', selectedimages)\r\n\r\n\tconst ImageItemMenu = (handleDeleteImageFromImageLibrary, id, handleAddToSelectedList, image) => {\r\n\t\treturn (\r\n\t\t\t(\r\n\t\t\t\t<Menu>\r\n\t\t\t\t\t<Menu.Item\r\n\t\t\t\t\t\tonClick={() => handleAddToSelectedList(image, id)}\r\n\t\t\t\t\t\tkey=\"1\" icon={<CheckOutlined />}>\r\n\t\t\t\t\t\tSelect\r\n\r\n\t\t\t\t\t</Menu.Item>\r\n\r\n\r\n\r\n\t\t\t\t\t<Menu.Item\r\n\t\t\t\t\t\tonClick={() => handleDeleteImageFromImageLibrary(id)}\r\n\t\t\t\t\t\tkey=\"1\" icon={<DeleteOutlined color='red' />}>\r\n\t\t\t\t\t\tDelete\r\n\t\t\t\t\t</Menu.Item>\r\n\t\t\t\t</Menu >\r\n\t\t\t)\r\n\t\t)\r\n\t};\r\n\r\n\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Modal\r\n\t\t\t\tstyle={{\r\n\t\t\t\t\ttop: '40px'\r\n\t\t\t\t}}\r\n\t\t\t\ttitle=\"Media Library\"\r\n\t\t\t\tvisible={visible}\r\n\t\t\t\tonOk={handleOk}\r\n\t\t\t\tonCancel={handleCancel}\r\n\t\t\t\twidth={'80vw'}\r\n\t\t\t\tbodyStyle={{\r\n\t\t\t\t\tmargin: '0',\r\n\t\t\t\t\tpadding: '0'\r\n\t\t\t\t}}\r\n\t\t\t\tokText='Done'\r\n\t\t\t>\r\n\t\t\t\t<div className='mediaLibraryBodyContainer'>\r\n\t\t\t\t\t<div className='mediaLibraryBodyContainer-left'>\r\n\r\n\t\t\t\t\t\t<Tabs defaultActiveKey=\"2\" type=\"card\" size='middle'>\r\n\t\t\t\t\t\t\t<TabPane tab=\"Upload New Media\" key=\"1\">\r\n\t\t\t\t\t\t\t\t<div className='mediaLibraryBodyContainer-left-header'>\r\n\r\n\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t<Dragger\r\n\t\t\t\t\t\t\t\t\t\t\tclassName='upload-list-inline'\r\n\t\t\t\t\t\t\t\t\t\t\tlistType='picture'\r\n\t\t\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\t\t\tbackground: '#fff',\r\n\t\t\t\t\t\t\t\t\t\t\t\tborderRadius: '8px'\r\n\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t{...uploadProps}\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t<p className='ant-upload-drag-icon'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<FileImageOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t\t\t\t\t<p className='ant-upload-text'>Click or drag file to this area to upload</p>\r\n\t\t\t\t\t\t\t\t\t\t\t<p className='ant-upload-hint'>\r\n\t\t\t\t\t\t\t\t\t\t\t\tSupport for a single or bulk upload.\r\n\t\t\t\t\t\t                \t</p>\r\n\t\t\t\t\t\t\t\t\t\t</Dragger>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\tclassName='btnPrimaryClassNameoutline'\r\n\t\t\t\t\t\t\t\t\ttype='primary'\r\n\t\t\t\t\t\t\t\t\tonClick={handleUpload}\r\n\t\t\t\t\t\t\t\t\tdisabled={fileList.length === 0}\r\n\t\t\t\t\t\t\t\t\tloading={uploading}\r\n\t\t\t\t\t\t\t\t\ticon={<ArrowUpOutlined />}\r\n\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\tmarginTop: '20px',\r\n\t\t\t\t\t\t\t\t\t\tmarginBottom: '10px'\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\tUpload\r\n\t\t\t\t\t</Button>\r\n\r\n\t\t\t\t\t\t\t</TabPane>\r\n\t\t\t\t\t\t\t<TabPane tab=\"Media Library\" key=\"2\">\r\n\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t{myImages && myImages.lenght > 0 && (\r\n\t\t\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\t\t\t\t\t\tSelected Items\r\n                               </h3>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='mediaLibraryBodyContainer-selectedImages'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t{imageListFromLibraryState.done\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t&& myImages.length > 0\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t&& myImages.map(image => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tkey={image.id}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='mediaLibraryBodyContainer-selectedImages-imageListContainer-item'>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleAddToSelectedList(image, image.id)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='mediaLibraryBodyContainer-selectedImages-imageListContainer-item-menu'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<CloseOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className='mediaLibraryBodyContainer-selectedImages-imgContainer'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<img src={image.cover} alt='img' />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t})}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t</>\r\n\r\n\t\t\t\t\t\t\t\t<div className='mediaLibraryBodyContainer-left-imageListContainer'>\r\n\r\n\t\t\t\t\t\t\t\t\t{imageListFromLibraryState.done\r\n\t\t\t\t\t\t\t\t\t\t&& localImageList.length > 0\r\n\t\t\t\t\t\t\t\t\t\t&& localImageList.map(image => {\r\n\t\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tkey={image.id}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='mediaLibraryBodyContainer-left-imageListContainer-item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t{getisSelectedImage(image.id) ? <div className='mediaLibraryBodyContainer-left-imageListContainer-item-icon'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<CheckOutlined\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div> : ''}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Dropdown overlay={() => ImageItemMenu(handleDeleteImageFromImageLibrary, image.id, handleAddToSelectedList, image)} placement=\"bottomRight\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className='mediaLibraryBodyContainer-left-imageListContainer-item-menu'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<EllipsisOutlined\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Dropdown>\r\n\r\n\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<img onClick={() => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleAddToSelectedList(image, image.id)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}} src={image.cover} alt='img' />\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t\t})}\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t{imageListFromLibraryState.done && !(localImageList.length > 0) && (\r\n\t\t\t\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\t\t\t\tdisplay: 'flex',\r\n\t\t\t\t\t\t\t\t\t\t\tjustifyContent: 'center',\r\n\t\t\t\t\t\t\t\t\t\t\twidth: '100%'\r\n\t\t\t\t\t\t\t\t\t\t}}>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<Empty title='No Image Found in the library' />\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t)}\r\n\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</TabPane>\r\n\r\n\t\t\t\t\t\t</Tabs>\r\n\r\n\r\n\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className='mediaLibraryBodyContainer-right'>\r\n\r\n\t\t\t\t\t\t{activeImageItem && (\r\n\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t<Formik\r\n\t\t\t\t\t\t\t\t\tonSubmit={(values, actions) => handleUpdateSubmit(values, actions)}\r\n\t\t\t\t\t\t\t\t\tvalidateOnBlur={false}\r\n\t\t\t\t\t\t\t\t\tenableReinitialize={true}\r\n\t\t\t\t\t\t\t\t\tinitialValues={\r\n\t\t\t\t\t\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\t\t\t\t\t\t{ ...activeImageItem }\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t{({\r\n\t\t\t\t\t\t\t\t\t\thandleChange,\r\n\t\t\t\t\t\t\t\t\t\tvalues,\r\n\t\t\t\t\t\t\t\t\t\thandleSubmit,\r\n\t\t\t\t\t\t\t\t\t\terrors,\r\n\t\t\t\t\t\t\t\t\t\tisValid,\r\n\t\t\t\t\t\t\t\t\t\tisSubmitting,\r\n\t\t\t\t\t\t\t\t\t\ttouched,\r\n\t\t\t\t\t\t\t\t\t\thandleBlur,\r\n\t\t\t\t\t\t\t\t\t\tsetFieldTouched,\r\n\t\t\t\t\t\t\t\t\t\thandleReset,\r\n\t\t\t\t\t\t\t\t\t}) => (\r\n\t\t\t\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<h4>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tAttachment Details\r\n\t\t\t\t\t\t\t</h4>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div className='mediaLibraryBodyContainer-right-ImageDetails'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div className='mediaLibraryBodyContainer-right-ImageDetails-imageContainer'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<img src={activeImageItem['cover']} alt='img' />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div className='mediaLibraryBodyContainer-right-ImageDetails-infoContainer'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<h5 className='imageLibnameText'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{activeImageItem['name']}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</h5>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<h5>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Moment>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{activeImageItem['added']}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Moment>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</h5>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* <h5>\r\n\t\t\t\t\t\t\t\t\t\t5000 X 500\r\n\t\t\t\t\t\t\t\t\t</h5> */}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Popconfirm\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonConfirm={() => handleDeleteImageFromImageLibrary(activeImageItem['id'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttitle=\"Are you sure？\" okText=\"Yes\" cancelText=\"No\">\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<h5\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='imageLibdeleteText'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tDelete parmanently\r\n\t\t\t\t\t\t\t\t\t                       </h5>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Popconfirm>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tlabel='Alternate Text'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.alt}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tname='alt'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.alt && errors.alt) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateMediaLibrary.error['error']['alt'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.alt && errors.alt) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateMediaLibrary.error['error']['alt'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('alt');\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tlabel='Title'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.title}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tname='title'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.title && errors.title) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateMediaLibrary.error['error']['title'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.title && errors.title) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateMediaLibrary.error['error']['title'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('title');\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tlabel='Caption'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.caption}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tname='title'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.caption && errors.caption) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateMediaLibrary.error['error']['caption'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.caption && errors.caption) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateMediaLibrary.error['error']['caption'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('caption');\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\t\t\t\ttype='default'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={(e: any) => handleSubmit(e)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tdisabled={getisUpdateSubmitButtonDisabled(values, isValid)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tloading={isSubmitting}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t// marginTop: '20px'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tUpdate\r\n\t\t\t\t\t</Button>\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t</Formik>\r\n\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t)}\r\n\r\n\t\t\t\t\t\t{!activeImageItem && (\r\n\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\theight: '100%',\r\n\t\t\t\t\t\t\t\tdisplay: \"flex\",\r\n\t\t\t\t\t\t\t\tjustifyContent: \"center\",\r\n\t\t\t\t\t\t\t\talignItems: \"center\",\r\n\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t<h4 style={{\r\n\t\t\t\t\t\t\t\t\ttextAlign: \"center\",\r\n\t\t\t\t\t\t\t\t\tfontSize: \"13px\",\r\n\t\t\t\t\t\t\t\t\tcolor: '#8888'\r\n\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\tSelect an image to preview details\r\n\t\t\t\t\t\t\t\t</h4>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t)}\r\n\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t</Modal>\r\n\t\t</>\r\n\t)\r\n};\r\n\r\nexport default MediaLibrary;\r\n","import MediaLibrary from './MediaLibrary';\r\nexport default MediaLibrary;\r\n","// @ts-nocheck\r\nimport React,{useEffect, useState} from 'react'; \r\nimport { Tag, Input, Tooltip } from 'antd';\r\nimport { PlusOutlined } from '@ant-design/icons';\r\n\r\nclass MetaTags extends React.Component {\r\n  state = {\r\n    tags: [],\r\n    inputVisible: false,\r\n    inputValue: '',\r\n    editInputIndex: -1,\r\n    editInputValue: '',\r\n  };\r\n\r\n\r\n\r\n  handleClose = removedTag => {\r\n    const {setTags,tags} = this.props;\r\n    const localTags = tags.filter(tag => tag !== removedTag);\r\n    setTags(localTags);\r\n  };\r\n\r\n  showInput = () => {\r\n    this.setState({ inputVisible: true }, () => this.input.focus());\r\n  };\r\n\r\n  handleInputChange = e => {\r\n    this.setState({ inputValue: e.target.value });\r\n  };\r\n\r\n  handleInputConfirm = () => {\r\n      console.log('handleInputConfirm',this.props);\r\n    const { inputValue } = this.state;\r\n    let { tags, setTags } = this.props;\r\n    if (inputValue && tags && tags.indexOf(inputValue) === -1) {\r\n      tags = [...tags, inputValue];\r\n    }\r\n    setTags(tags);\r\n    this.setState({\r\n      inputVisible: false,\r\n      inputValue: '',\r\n    });\r\n  };\r\n\r\n  handleEditInputChange = e => {\r\n    this.setState({ editInputValue: e.target.value });\r\n    console.log('tagValue',e.target.value);\r\n  };\r\n\r\n  handleEditInputConfirm = () => {\r\n    this.setState(({ editInputIndex, editInputValue }) => {\r\n      return {\r\n        editInputIndex: -1,\r\n        editInputValue: '',\r\n      };\r\n    });\r\n\r\n    const newTags = [...this.props.tags];\r\n    newTags[editInputIndex] = editInputValue;\r\n    this.props.setTags(newTags);\r\n  };\r\n\r\n  saveInputRef = input => {\r\n    this.input = input;\r\n  };\r\n\r\n  saveEditInputRef = input => {\r\n    this.editInput = input;\r\n  };\r\n\r\n\r\n\r\n  render() {\r\n    const { inputVisible, inputValue, editInputIndex, editInputValue } = this.state;\r\n    const { placeholder,tags } = this.props;\r\n\r\n    return (\r\n      <>\r\n        {tags && tags.length > 0 && tags.map((tag, index) => {\r\n          if (editInputIndex === index) {\r\n            return (\r\n              <Input\r\n                ref={this.saveEditInputRef}\r\n                key={tag}\r\n                size=\"small\"\r\n                placeholder={placeholder}\r\n                className=\"tag-input\"\r\n                value={editInputValue}\r\n                onChange={this.handleEditInputChange}\r\n                onBlur={this.handleEditInputConfirm}\r\n                onPressEnter={this.handleEditInputConfirm}\r\n              />\r\n            );\r\n          }\r\n\r\n          const isLongTag = tag.length > 20;\r\n\r\n          const tagElem = (\r\n            <Tag\r\n              className=\"edit-tag\"\r\n              key={tag}\r\n              closable={true}\r\n              onClose={() => this.handleClose(tag)}\r\n            >\r\n              <span\r\n                onDoubleClick={e => {\r\n                  if (index !== 0) {\r\n                    this.setState({ editInputIndex: index, editInputValue: tag }, () => {\r\n                      this.editInput.focus();\r\n                    });\r\n                    e.preventDefault();\r\n                  }\r\n                }}\r\n              >\r\n                {isLongTag ? `${tag.slice(0, 20)}...` : tag}\r\n              </span>\r\n            </Tag>\r\n          );\r\n          return isLongTag ? (\r\n            <Tooltip title={tag} key={tag}>\r\n              {tagElem}\r\n            </Tooltip>\r\n          ) : (\r\n            tagElem\r\n          );\r\n        })}\r\n        {inputVisible && (\r\n          <Input\r\n          style={{\r\n            margin: \"10px 0\"\r\n          }}\r\n            ref={this.saveInputRef}\r\n            type=\"text\"\r\n            size=\"small\"\r\n            className=\"tag-input\"\r\n            value={inputValue}\r\n            onChange={this.handleInputChange}\r\n            onBlur={this.handleInputConfirm}\r\n            onPressEnter={this.handleInputConfirm}\r\n          />\r\n        )}\r\n        {!inputVisible && (\r\n          <Tag className=\"site-tag-plus edit-tag\" onClick={this.showInput}>\r\n            <PlusOutlined /> New Value\r\n          </Tag>\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MetaTags","import React, { useState, useEffect } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n\r\nimport { useHandleFetch } from '../../hooks';\r\n// import third party ui lib\r\nimport { Switch, Select, notification, Modal, Tooltip, Upload, message } from 'antd';\r\n\r\nimport {\r\n\tDeleteOutlined,\r\n\tFileAddOutlined,\r\n\tFileImageFilled,\r\n\tPlusOutlined,\r\n\tCheckCircleOutlined,\r\n\tCloseOutlined,\r\n\tCheckOutlined,\r\n\tInfoCircleOutlined,\r\n\tLoadingOutlined\r\n} from '@ant-design/icons';\r\n\r\n\r\n// import ReactQuill from 'react-quill';\r\n// import 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport MediaLibrary from \"../../components/MediaLibrary\";\r\nimport MetaTags from \"./MetaTags\";\r\n\r\n\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n\tname: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t\tmessage: message || 'Category Updated',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n\tnotification.error({\r\n\t\tmessage: message || 'Something Went Wrong',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n};\r\n\r\n\r\n\r\n\r\n\r\nconst initialValues = {\r\n\tname: '',\r\n\tbnName: '',\r\n\tdescription: '',\r\n\tbnDescription: '',\r\n\tmetaTitle: '',\r\n\tbnMetaTitle: '',\r\n\tmetaDescription: '',\r\n\tbnMetaDescription: '',\r\n\tmetaTags: '',\r\n\tbnMetaTags: '',\r\n\timage: [],\r\n\turl: '',\r\n\tcover: '',\r\n\tdisplayOrder: null\r\n}\r\n\r\nconst { Option } = Select;\r\n\r\ninterface Props {\r\n\taddNewCategoryVisible: any;\r\n\tsetAddNewCategoryVisible: any;\r\n\tcategoryList?: any;\r\n    setcategoryList?: any;\r\n    categoryDetailData?:any; \r\n}\r\n\r\nconst AddNewCategory = ({ \r\n    addNewCategoryVisible, \r\n    setAddNewCategoryVisible, \r\n    categoryList, setcategoryList,\r\n    categoryDetailData }: Props) => {\r\n\r\n\tconst [addCategoryState, handleAddCategoryFetch] = useHandleFetch({}, 'updateCategory');\r\n\tconst [updateCategoryIconState, handleUpdateCategoryIconFetch] = useHandleFetch({}, 'categoryUpdateIcon', 'form');\r\n\tconst [attachImageToItemMultipleState, handleAttachImageToItemMultipleFetch] = useHandleFetch({}, 'attachImageToItemMultiple');\r\n    const [attachImageToItemSingleState, handleAttachImageToItemSingleFetch] = useHandleFetch({}, 'attachImageToItemSingle');\r\n    const [detachImageFromItemMultipleState, handleDetachImageFromItemMultipleFetch] = useHandleFetch({}, 'detachImageFromItemMultiple');\r\n    const [detachImageFromItemSingleState, handleDetachImageFromItemSingleFetch] = useHandleFetch({}, 'detachImageFromItemSingle');\r\n    const [setImageAsThumbnailToItemState, handleSetImageAsThumbnailToItemFetch] = useHandleFetch({}, 'setImageAsThumbnailToItem');\r\n\r\n\tconst [visible, setvisible] = useState(false);\r\n\tconst [myImages, setmyImages] = useState(false);\r\n\tconst [myThumbnailImage, setmyThumbnailImage] = useState(false);\r\n\tconst [isparentCategoryChecked, setisparentcategoryChecked] = useState(true);\r\n\tconst [isModalOpenForThumbnail, setisModalOpenForThumbnail] = useState(false);\r\n\tconst [isModalOpenForImages, setisModalOpenForImages] = useState(false);\r\n\tconst [selectedParentId, setselectedParentId] = useState('');\r\n\tconst [imageUrl, setImageUrl] = useState('');\r\n\tconst [loadingThumnail, setLoadingThumbnail] = useState(false);\r\n\tconst [imageFile, setImagefile] = useState('');\r\n\tconst [tags,setTags] = useState([]);\r\n\tconst [bnTags,setBnTags] = useState([]);\r\n\tconst [visibleMedia, setvisibleMedia] = useState(false);\r\n    const [coverImageId, setCoverImageId] = useState('');\r\n    const [myGoddamnImages, setMyGoddamnImages] = useState([]);\r\n\r\n\r\n\tconst handleSubmit = async (values: any, actions: any) => {\r\n\t\t// @ts-ignore\r\n\t\tconst imagesIds = myImages ? myImages.map(image => {\r\n\t\t\treturn image.id;\r\n\t\t}) : [];\r\n\r\n\t\tconst formData = new FormData();\r\n\r\n\t\tformData.append(\"name\", values.name.trim());\r\n\t\tformData.append(\"description\", values.description);\r\n\t\tformData.append(\"image\", JSON.stringify(imagesIds));\r\n\t\tformData.append(\"cover\", coverImageId || imagesIds[0] ? imagesIds[0] : '');\r\n\t\tformData.append(\"parent\", selectedParentId);\r\n\t\tformData.append('icon', imageFile)\r\n\r\n\r\n\t\tconsole.log('categoryDetailData',categoryDetailData); \r\n\t\t\r\n\t\tif (categoryDetailData && Object.keys(categoryDetailData).length > 0) {\r\n\t\t\tconst aboutToUpdatedImageIds = []; \r\n\r\n\t\t\tif(imagesIds && imagesIds.length > 0){\r\n\t\t\t\timagesIds.forEach(imageId => {\r\n\t\t\t\t\tif(categoryDetailData && categoryDetailData['image']){\r\n\t\t\t\t\t\tif(!categoryDetailData['image'].includes(imageId)){\r\n\t\t\t\t\t\t\taboutToUpdatedImageIds.push(imageId)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n      \r\n            if (aboutToUpdatedImageIds[0] && aboutToUpdatedImageIds.length > 1) {\r\n                await handleAttachImageToItemMultipleFetch({\r\n                    urlOptions: {\r\n                        placeHolders: {\r\n                            collection: 'category',\r\n                            itemId: categoryDetailData.id\r\n                        }\r\n                    },\r\n                    body: {\r\n                        image: aboutToUpdatedImageIds\r\n                    }\r\n                });\r\n\t\t\t}\r\n\t\t\t\r\n            else if (aboutToUpdatedImageIds[0] && aboutToUpdatedImageIds.length < 1) {\r\n                await handleAttachImageToItemSingleFetch({\r\n                    urlOptions: {\r\n                        placeHolders: {\r\n                            imageId: aboutToUpdatedImageIds[0].id,\r\n                            collection: 'category',\r\n                            itemId: categoryDetailData.id\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n\t\t}\r\n\r\n\r\n\t\tconst addCategoryRes = await handleAddCategoryFetch({\r\n            urlOptions: {\r\n                placeHolders: {\r\n                    id: categoryDetailData.id\r\n                },\r\n            },\r\n            body: {\r\n                name: values.name.trim(),\r\n                description: values.description,\r\n                displayOrder: values.displayOrder,\r\n                image: imagesIds,\r\n                cover: coverImageId || imagesIds[0] ? imagesIds[0] : '',\r\n                parent: selectedParentId,\r\n                icon: imageFile,\r\n                metaTitle: values.metaTitle,\r\n                metaDescription: values.metaDescription,\r\n                metaTags:  tags && tags.length > 0 ?  tags.join(',') : '',\r\n                bn: {\r\n                    metaTitle: values.bnMetaTitle,\r\n\t\t\t\t\tmetaDescription: values.bnMetaDescription,\r\n\t\t\t\t\tmetaTags:  bnTags && bnTags.length > 0 ?  bnTags.join(',') : '',\r\n                    name: values.bnName.trim(),\r\n                    description: values.bnDescription,\r\n                }\r\n            },\r\n\t\t});\r\n\r\n\t\t// @ts-ignore\r\n\t\tif (addCategoryRes && addCategoryRes.status === 'ok') {\r\n\t\t\topenSuccessNotification('Category Updated!');\r\n\t\t\tsetAddNewCategoryVisible(false)\r\n\r\n\t\t\tsetcategoryList([{\r\n\t\t\t\tid: addCategoryRes['_id'] || '',\r\n\t\t\t\tkey: addCategoryRes['_id'] || '',\r\n\t\t\t\tname: addCategoryRes['name'] || '',\r\n\t\t\t\tdescription: addCategoryRes['description'] || '',\r\n\t\t\t\tcover: addCategoryRes['cover'] || '',\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\t...addCategoryRes\r\n\t\t\t},...categoryList])\r\n\r\n    \r\n            \r\n            \r\n\r\n\t\t\tactions.resetForm();\r\n\t\t\t// @ts-ignore\r\n\t\t\tsetmyImages([]);\r\n\t\t\tsetCoverImageId('')\r\n\t\t\tsetselectedParentId('')\r\n\t\t\tsetisparentcategoryChecked(true);\r\n\t\t\tsetImageUrl('');\r\n\t\t}\r\n\t\telse {\r\n\t\t\topenErrorNotification();\r\n\t\t}\r\n\r\n\r\n\r\n\r\n\t\tactions.setSubmitting(false);\r\n\t};\r\n\r\n\r\n\t\r\n\t\r\n\r\n\r\n    useEffect(() => {\r\n        if (categoryDetailData && Object.keys(categoryDetailData).length > 0) {\r\n\r\n            const images = categoryDetailData.image;\r\n            if (images && images.length > 0) {\r\n                setmyImages(images);\r\n                setMyGoddamnImages(images);\r\n            }\r\n\r\n            if (categoryDetailData.cover && categoryDetailData.cover['id']) {\r\n                // @ts-ignore\r\n                setmyImages([categoryDetailData.cover, ...images]);\r\n                setCoverImageId(categoryDetailData.cover['id']);\r\n            }\r\n\r\n        }\r\n    }, [categoryDetailData]); \r\n\r\n\r\n    useEffect(() => {\r\n        // @ts-ignore\r\n        if (myImages && myImages[0] && myImages.length < 2) {\r\n\r\n            if (coverImageId !== myImages[0].id) {\r\n                setCoverImageId(myImages[0].id);\r\n                handleSetImageAsThumnail(myImages[0]);\r\n            }\r\n\r\n        }\r\n\r\n    }, [myImages])\r\n\r\n\r\n    const handleDetachSingleImage = async id => {\r\n        await handleDetachImageFromItemSingleFetch({\r\n            urlOptions: {\r\n                placeHolders: {\r\n                    imageId: id,\r\n                    collection: 'category',\r\n                    itemId: categoryDetailData.id\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n\r\n\r\n    const handleSetImageAsThumnail = async image => {\r\n\r\n        const thumbnailRes = await handleSetImageAsThumbnailToItemFetch({\r\n            urlOptions: {\r\n                placeHolders: {\r\n                    imageId: image.id,\r\n                    collection: 'category',\r\n                    itemId: categoryDetailData.id\r\n                }\r\n            }\r\n        });\r\n\r\n\r\n        // @ts-ignore\r\n        if (thumbnailRes && thumbnailRes.status === 'ok') {\r\n            openSuccessNotification('Set as thumbnail!')\r\n            // const positionInBrand = () => {\r\n            //     return brandList.map(item => item.id).indexOf(categoryDetailData.id);\r\n            // }\r\n\r\n            // const index = positionInBrand();\r\n\r\n            // const prevItem = brandList.find(item => item.id === productRecord.id);\r\n\r\n            // if (prevItem) {\r\n            //     const updatedItem = Object.assign({}, brandList[index], { ...prevItem, cover: image.cover });\r\n            //     const updateBrandList = [...brandList.slice(0, index), updatedItem, ...brandList.slice(index + 1)];\r\n            //     setBrandList(updateBrandList);\r\n            // }\r\n        }\r\n        else {\r\n            openErrorNotification(\"Couldn't set as thumbnail, Something went wrong\")\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n    \r\n    const handleImagesDelete = (id) => {\r\n        // @ts-ignore\r\n        const newImages = myImages && myImages.filter(image => {\r\n            return image.id !== id;\r\n        })\r\n\r\n        setmyImages(newImages);\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\tconst onSwitchChange = (checked: any) => {\r\n\t\tsetisparentcategoryChecked(checked)\r\n\t};\r\n\r\n\r\n\tconst handleCancel = (e: any) => {\r\n\t\tsetAddNewCategoryVisible(false);\r\n\t};\r\n\r\n\r\n\tconst getisSubmitButtonDisabled = (values, isValid) => {\r\n\t\tif (!values.name || !isValid) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\r\n\r\n\tconst handleThumbnailImageDelete = (id) => {\r\n\t\t// @ts-ignore\r\n\t\tconst newImages = myThumbnailImage && myThumbnailImage.filter(image => {\r\n\t\t\treturn image.id !== id;\r\n\t\t})\r\n\r\n\t\tif (newImages.length > 0) {\r\n\t\t\tsetmyThumbnailImage(newImages);\r\n\r\n\t\t}\r\n\t\telse setmyThumbnailImage(false);\r\n\t}\r\n\r\n\r\n\tconst onChangeSelect = (value) => {\r\n\t\tsetselectedParentId(value);\r\n\t}\r\n\r\n\r\n\r\n\tfunction getBase64(img, callback) {\r\n\t\tconst reader = new FileReader();\r\n\t\treader.addEventListener('load', () => callback(reader.result));\r\n\t\treader.readAsDataURL(img);\r\n\t}\r\n\r\n\r\n\t function beforeUpload(file) {\r\n\t\tconst isJpgOrPng = file.type === 'image/jpeg' || file.type === 'image/png';\r\n\t\tif (!isJpgOrPng) {\r\n\t\t\tmessage.error('You can only upload JPG/PNG file!');\r\n\t\t}\r\n\t\tconst isLt2M = file.size / 1024 / 1024 < 2;\r\n\t\tif (!isLt2M) {\r\n\t\t\tmessage.error('Image must smaller than 2MB!');\r\n\t\t}\r\n\r\n\r\n\t\tgetBase64(file, imageUrl => {\r\n\t\t\tsetImageUrl(imageUrl)\r\n\t\t\tsetImagefile(file)\r\n\t\t\tconst setNewIcon  = async () => {\r\n\t\t\t\tconst formData = new FormData();\r\n\t\t\t\tformData.append('icon',file); \r\n\t\t\t\t// const addCategoryRes = await handleAddCategoryFetch({\r\n\t\t\t\t// \tbody: formData,\r\n\t\t\t\t// });\r\n\t\t\t\tconst res = await handleUpdateCategoryIconFetch({\r\n\t\t\t\t\turlOptions: {\r\n\t\t\t\t\t\tplaceHolders: {\r\n\t\t\t\t\t\t\tid: categoryDetailData.id\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t},\r\n\t\t\t\t\tbody: formData\r\n\t\t\t\t}); \r\n\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\tif(res && res.status === 'ok'){\r\n\t\t\t\t\topenSuccessNotification('Category Icon updated!')\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\topenErrorNotification(\"Couldn't update category icon, Something went wrong\")\r\n\t\t\t\t}\r\n\r\n\r\n\t\t\t}; \r\n\t\t\t\r\n\t\t\tsetNewIcon();\r\n\t\t\tsetLoadingThumbnail(false)\r\n\t\t})\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\r\n\t\r\n\tuseEffect(()=>{\r\n\r\n        if(categoryDetailData && Object.keys(categoryDetailData).length > 0){\r\n            const iconUrl = categoryDetailData.icon && categoryDetailData.icon; \r\n\r\n\t\t\tsetImageUrl(iconUrl); \r\n        }\r\n\r\n    },[])\r\n\r\n\r\n\tconst uploadButton = (\r\n\t\t<div>\r\n\t\t\t{loadingThumnail ? <LoadingOutlined /> : <PlusOutlined />}\r\n\t\t\t<div className=\"ant-upload-text\">Upload</div>\r\n\t\t</div>\r\n\t);\r\n\r\n\r\n\r\n    \r\n    useEffect(()=>{\r\n\r\n        if(categoryDetailData && Object.keys(categoryDetailData).length > 0){\r\n            const metaTags = categoryDetailData.metaTags && categoryDetailData.metaTags.split(','); \r\n\r\n            console.log('localMetaTags',metaTags);\r\n           \r\n            const bnMetaTags = categoryDetailData.bn && categoryDetailData.bn['metaTags'] && categoryDetailData.bn['metaTags'].split(','); \r\n            setTags(metaTags)\r\n            setBnTags(bnMetaTags)\r\n        }\r\n\r\n    },[])\r\n\r\n\r\n\r\n\treturn (\r\n\t\t<Formik\r\n\t\t\tonSubmit={(values, actions) => handleSubmit(values, actions)}\r\n\t\t\tvalidationSchema={validationSchema}\r\n\t\t\tvalidateOnBlur={false}\r\n\t\t\tenableReinitialize={true}\r\n\t\t\tinitialValues={\r\n                \r\n                { ...initialValues,\r\n                    ...categoryDetailData,\r\n                    ...( categoryDetailData && Object.keys(categoryDetailData).length > 0 && {\r\n                        bnMetaTitle: categoryDetailData['bn']\r\n                        && categoryDetailData['bn'].metaTitle\r\n                        && categoryDetailData['bn'].metaTitle,\r\n                        bnMetaDescription: categoryDetailData['bn'] &&  categoryDetailData['bn'].metaDescription && categoryDetailData['bn'].metaDescription,\r\n                        bnName: categoryDetailData['bn'] && categoryDetailData['bn'].name && categoryDetailData['bn'].name,\r\n                        bnDescription: categoryDetailData['bn'] && categoryDetailData['bn'].description && categoryDetailData['bn'].description,\r\n                    })\r\n                 }\r\n\t\t\t}\r\n\t\t>\r\n\t\t\t{({\r\n\t\t\t\thandleChange,\r\n\t\t\t\tvalues,\r\n\t\t\t\thandleSubmit,\r\n\t\t\t\terrors,\r\n\t\t\t\tisValid,\r\n\t\t\t\tisSubmitting,\r\n\t\t\t\ttouched,\r\n\t\t\t\thandleBlur,\r\n\t\t\t\tsetFieldTouched,\r\n\t\t\t\thandleReset,\r\n\t\t\t}) => (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<Modal\r\n\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\ttop: '40px'\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\ttitle=\"Edit Category\"\r\n\t\t\t\t\t\t\tvisible={addNewCategoryVisible}\r\n\t\t\t\t\t\t\tonOk={(e: any) => handleSubmit(e)}\r\n\t\t\t\t\t\t\tonCancel={handleCancel}\r\n\t\t\t\t\t\t\tokText='Update'\r\n\t\t\t\t\t\t\tokButtonProps={{\r\n\t\t\t\t\t\t\t\tloading: isSubmitting,\r\n\t\t\t\t\t\t\t\thtmlType: \"submit\",\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\tlabel='Name'\r\n\t\t\t\t\t\t\t\tvalue={values.name}\r\n\t\t\t\t\t\t\t\tplaceHolder={'grocery,fashion'}\r\n\t\t\t\t\t\t\t\tname='name'\r\n\t\t\t\t\t\t\t\tisError={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['name'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['name'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('name');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\tlabel='BN Name'\r\n\t\t\t\t\t\t\t\tvalue={values.bnName}\r\n\t\t\t\t\t\t\t\tplaceHolder={'মুদিখানা,ফ্যাশন'}\r\n\t\t\t\t\t\t\t\tname='bnName'\r\n\t\t\t\t\t\t\t\tisError={(touched.bnName && errors.bnName) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['bnName'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.bnName && errors.bnName) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['bnName'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('bnName');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\tlabel='Description'\r\n\t\t\t\t\t\t\t\tvalue={values.description}\r\n\t\t\t\t\t\t\t\tplaceholder={'This category...'}\r\n\t\t\t\t\t\t\t\tname='description'\r\n\t\t\t\t\t\t\t\tisError={(touched.description && errors.description) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['description'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.description && errors.description) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['description'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('description');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\tlabel='BN Description'\r\n\t\t\t\t\t\t\t\tvalue={values.bnDescription}\r\n\t\t\t\t\t\t\t\tplaceholder={'এই ক্যাটাগড়ি...'}\r\n\t\t\t\t\t\t\t\tname='bnDescription'\r\n\t\t\t\t\t\t\t\tisError={(touched.bnDescription && errors.bnDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['bnDescription'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.bnDescription && errors.bnDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['bnDescription'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('bnDescription');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\tlabel='Display Order'\r\n\t\t\t\t\t\t\t\t\t\tvalue={values.displayOrder}\r\n\t\t\t\t\t\t\t\t\t\tplaceHolder={'1,3,7'}\r\n\t\t\t\t\t\t\t\t\t\tname='displayOrder'\r\n\t\t\t\t\t\t\t\t\t\ttype='number'\r\n\t\t\t\t\t\t\t\t\t\tisError={(touched.displayOrder && errors.displayOrder) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['displayOrder'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\terrorString={(touched.displayOrder && errors.displayOrder) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['displayOrder'])}\r\n\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('displayOrder');\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\tmarginTop: '25px'\r\n\t\t\t\t\t\t\t}}></div>\r\n\r\n\t\t\t\t\t\t\t<div className='switchLabelContainer'>\r\n\t\t\t\t\t\t\t\t<Switch\r\n\t\t\t\t\t\t\t\t\tchecked={isparentCategoryChecked}\r\n\t\t\t\t\t\t\t\t\tdefaultChecked onChange={onSwitchChange} />\r\n\t\t\t\t\t\t\t\t<div className='switchLabelContainer-textContainer'>\r\n\t\t\t\t\t\t\t\t\t<h5 >Top level Category</h5>\r\n\t\t\t\t\t\t\t\t\t<h5 className='switchLabelContainer-desc'>Disable to select a Parent Category</h5>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t{!isparentCategoryChecked && (\r\n\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>Parent Category</h3>\r\n\t\t\t\t\t\t\t\t\t<Select\r\n\t\t\t\t\t\t\t\t\t\tshowSearch\r\n\t\t\t\t\t\t\t\t\t\tstyle={{ width: 300 }}\r\n\t\t\t\t\t\t\t\t\t\tplaceholder='Select a Parent Category'\r\n\t\t\t\t\t\t\t\t\t\toptionFilterProp='children'\r\n\t\t\t\t\t\t\t\t\t\tonChange={onChangeSelect}\r\n\t\t\t\t\t\t\t\t\t\t// onFocus={onFocus}\r\n\t\t\t\t\t\t\t\t\t\t// onBlur={onBlur}\r\n\t\t\t\t\t\t\t\t\t\t// onSearch={onSearch}\r\n\t\t\t\t\t\t\t\t\t\tfilterOption={(input, option: any) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t{categoryList.length > 0 && categoryList.map(category => {\r\n\t\t\t\t\t\t\t\t\t\t\treturn <Option value={category.id}>{category.name}</Option>\r\n\t\t\t\t\t\t\t\t\t\t})}\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t</Select>\r\n\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t)}\r\n\r\n\r\n\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\tmarginTop: '20px'\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\r\n\t\t\t\t\t\t\t<div className='addproductSection-left-header' >\r\n\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>Icon </h3>\r\n\t\t\t\t\t\t\t\t<Tooltip\r\n\t\t\t\t\t\t\t\t\tplacement=\"left\" title={'Add Icon image for this category'}>\r\n\t\t\t\t\t\t\t\t\t<a href='###'>\r\n\t\t\t\t\t\t\t\t\t\t<InfoCircleOutlined />\r\n\t\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t<Upload\r\n\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\tborderRadius: \"8px\"\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\tname=\"avatar\"\r\n\t\t\t\t\t\t\t\tlistType=\"picture-card\"\r\n\t\t\t\t\t\t\t\tclassName=\"avatar-uploader\"\r\n\t\t\t\t\t\t\t\tshowUploadList={false}\r\n\t\t\t\t\t\t\t\tbeforeUpload={beforeUpload}\r\n\t\t\t\t\t\t\t\tmultiple={false}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t{imageUrl ? <img src={imageUrl} alt=\"avatar\" style={{ width: '100%' }} /> : uploadButton}\r\n\t\t\t\t\t\t\t</Upload>\r\n\r\n\t\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\t\tmarginTop:'20px'\r\n\t\t\t\t\t\t\t\t}}></div>\r\n\r\n\t\t\t\t\t\t\t<div className='addproductSection-left-header'\r\n\r\nstyle={{\r\n\tmarginBottom: '-5px'\r\n}}\r\n>\r\n<h3 className='inputFieldLabel'>Images</h3>\r\n{/* <div  >\r\n<FileOutlined />\r\n<span>Media Center</span>\r\n</div> */}\r\n</div>\r\n\r\n\r\n<div className='aboutToUploadImagesContainer'>\r\n\r\n{categoryDetailData && Object.keys(categoryDetailData).length > 0 && (\r\n\t<>\r\n\t\t{myImages &&\r\n\t\t\t// @ts-ignore\r\n\t\t\tmyImages.length > 0 && myImages.map((image, index) => {\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<div className='aboutToUploadImagesContainer__item'>\r\n\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\tclassName='aboutToUploadImagesContainer__item-imgContainer'\r\n\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\tsetCoverImageId(image.id);\r\n\t\t\t\t\t\t\t\thandleSetImageAsThumnail(image);\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<img src={image.cover} alt={image.alt} />\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t<span\r\n\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\thandleImagesDelete(image.id)\r\n\t\t\t\t\t\t\t\thandleDetachSingleImage(image.id)\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tclassName='aboutToUploadImagesContainer__item-remove'>\r\n\t\t\t\t\t\t\t<CloseOutlined />\r\n\t\t\t\t\t\t</span>\r\n\r\n\r\n\t\t\t\t\t\t{coverImageId === image.id ? (\r\n\t\t\t\t\t\t\t<span className='aboutToUploadImagesContainer__item-cover'>\r\n\t\t\t\t\t\t\t\t<CheckOutlined />\r\n\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t) : !coverImageId && index === 0 && (\r\n\t\t\t\t\t\t\t<span className='aboutToUploadImagesContainer__item-cover'>\r\n\t\t\t\t\t\t\t\t<CheckOutlined />\r\n\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t)}\r\n\r\n\r\n\t\t\t\t\t</div>\r\n\t\t\t\t)\r\n\t\t\t})}\r\n\r\n\r\n\t\t<Tooltip\r\n\t\t\ttitle={'Attach images'}>\r\n\r\n\t\t\t<div\r\n\t\t\t\tonClick={() => {\r\n\t\t\t\t\tsetvisible(true);\r\n\t\t\t\t}}\r\n\t\t\t\tclassName='aboutToUploadImagesContainer__uploadItem'>\r\n\t\t\t\t{/* <FileAddOutlined />\r\n\t\t\t\t\t<FileImageTwoTone />\r\n\t\t\t\t\t<FileImageOutlined /> */}\r\n\t\t\t\t<FileImageFilled />\r\n\t\t\t\t{/* <h5>\r\n\t\t\t\t\t Select From Library\r\n\t\t\t<     /h5> */}\r\n\t\t\t\t<span className='aboutToUploadImagesContainer__uploadItem-plus'>\r\n\t\t\t\t\t<PlusOutlined />\r\n\t\t\t\t</span>\r\n\t\t\t</div>\r\n\t\t</Tooltip>\r\n\t</>\r\n)}\r\n\r\n\r\n</div>\r\n\r\n\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\tlabel='Meta title'\r\n\t\t\t\t\t\t\t\tvalue={values.metaTitle}\r\n\t\t\t\t\t\t\t\tplaceHolder={'category...'}\r\n\t\t\t\t\t\t\t\tname='metaTitle'\r\n\t\t\t\t\t\t\t\tisError={(touched.metaTitle && errors.metaTitle) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['metaTitle'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.metaTitle && errors.metaTitle) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['metaTitle'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('metaTitle')\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\tlabel='BN Meta title'\r\n\t\t\t\t\t\t\t\tvalue={values.bnMetaTitle}\r\n\t\t\t\t\t\t\t\tplaceHolder={'ক্যাটাগড়ি...'}\r\n\t\t\t\t\t\t\t\tname='bnMetaTitle'\r\n\t\t\t\t\t\t\t\tisError={(touched.bnMetaTitle && errors.bnMetaTitle) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['bnMetaTitle'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.bnMetaTitle && errors.bnMetaTitle) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['bnMetaTitle'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('bnMetaTitle');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\tlabel='Meta description'\r\n\t\t\t\t\t\t\t\tvalue={values.metaDescription}\r\n\t\t\t\t\t\t\t\tplaceholder={'meta...'}\r\n\t\t\t\t\t\t\t\tname='metaDescription'\r\n\t\t\t\t\t\t\t\tisError={(touched.metaDescription && errors.metaDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['metaDescription'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.metaDescription && errors.metaDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['metaDescription'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('metaDescription');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\tlabel='BN Meta Description'\r\n\t\t\t\t\t\t\t\tvalue={values.bnMetaDescription}\r\n\t\t\t\t\t\t\t\tplaceholder={'এইয় মেট...'}\r\n\t\t\t\t\t\t\t\tname='bnMetaDescription'\r\n\t\t\t\t\t\t\t\tisError={(touched.bnMetaDescription && errors.bnMetaDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['bnMetaDescription'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.bnMetaDescription && errors.bnMetaDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['bnMetaDescription'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('bnMetaDescription');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\tMeta Tags (grocery,fashion)\r\n\t\t\t\t\t\t\t</h3>\r\n\r\n\t\t\t\t\t\t\t<MetaTags\r\n\t\t\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\t\t\tsetTags={setTags}\r\n\t\t\t\t\t\t\ttags={tags}\r\n\t\t\t\t\t\t\t />\r\n\r\n\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\tmarginTop:'15px'\r\n\t\t\t\t\t\t\t}}></div>\r\n\r\n\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\tBN Meta Tags (মুদিখানা,ফ্যাশন)\r\n\t\t\t\t\t\t\t</h3>\r\n\r\n\t\t\t\t\t\t\t<MetaTags\r\n\t\t\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\t\t\tsetTags={setBnTags}\r\n\t\t\t\t\t\t\ttags={bnTags}\r\n\t\t\t\t\t\t\t />\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t</Modal>\r\n\r\n\t\t\t\t\t\t<MediaLibrary\r\n\t\t\t\t\r\n\t\t\t\t\t\t\tsetvisible={setvisible}\r\n\t\t\t\t\t\t\tvisible={visible}\r\n\t\t\t\t\t\t\tsetmyImages={setmyImages}\r\n\t\t\t\t\t\t\tmyImages={myImages}\r\n\t\t\t\t\t\t\tsetmyThumbnailImage={setmyThumbnailImage}\r\n\t\t\t\t\t\t\tisModalOpenForThumbnail={isModalOpenForThumbnail}\r\n\t\t\t\t\t\t\tisModalOpenForImages={isModalOpenForImages}\r\n\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</>\r\n\t\t\t\t)}\r\n\t\t</Formik>\r\n\r\n\r\n\r\n\r\n\t);\r\n};\r\n\r\nexport default AddNewCategory;\r\n","import React from 'react';\r\nimport ContentLoader from 'react-content-loader';\r\n\r\nconst DataTable = (props: any) => (\r\n\t<ContentLoader\r\n\t\tspeed={0.5}\r\n\t\twidth={1300}\r\n\t\theight={400}\r\n\t\tviewBox='0 0 1300 400'\r\n\t\tbackgroundColor='#f3f3f3'\r\n\t\tforegroundColor='#ecebeb'\r\n\t\t{...props}\r\n\t>\r\n\t\t<rect x='27' y='139' rx='4' ry='4' width='20' height='20' />\r\n\t\t<rect x='67' y='140' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='188' y='141' rx='10' ry='10' width='169' height='19' />\r\n\t\t<rect x='402' y='140' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='523' y='141' rx='10' ry='10' width='169' height='19' />\r\n\t\t<rect x='731' y='139' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='852' y='138' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='1424' y='137' rx='10' ry='10' width='68' height='19' />\r\n\t\t<rect x='26' y='196' rx='4' ry='4' width='20' height='20' />\r\n\t\t<rect x='66' y='197' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='187' y='198' rx='10' ry='10' width='169' height='19' />\r\n\t\t<rect x='401' y='197' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='522' y='198' rx='10' ry='10' width='169' height='19' />\r\n\t\t<rect x='730' y='196' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='851' y='195' rx='10' ry='10' width='85' height='19' />\r\n\t\t<circle cx='1456' cy='203' r='12' />\r\n\t\t<rect x='26' y='258' rx='4' ry='4' width='20' height='20' />\r\n\t\t<rect x='66' y='259' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='187' y='260' rx='10' ry='10' width='169' height='19' />\r\n\t\t<rect x='401' y='259' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='522' y='260' rx='10' ry='10' width='169' height='19' />\r\n\t\t<rect x='730' y='258' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='851' y='257' rx='10' ry='10' width='85' height='19' />\r\n\t\t<circle cx='1456' cy='265' r='12' />\r\n\t\t<rect x='26' y='316' rx='4' ry='4' width='20' height='20' />\r\n\t\t<rect x='66' y='317' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='187' y='318' rx='10' ry='10' width='169' height='19' />\r\n\t\t<rect x='401' y='317' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='522' y='318' rx='10' ry='10' width='169' height='19' />\r\n\t\t<rect x='730' y='316' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='851' y='315' rx='10' ry='10' width='85' height='19' />\r\n\t\t<circle cx='1456' cy='323' r='12' />\r\n\t\t<rect x='26' y='379' rx='4' ry='4' width='20' height='20' />\r\n\t\t<rect x='66' y='380' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='187' y='381' rx='10' ry='10' width='169' height='19' />\r\n\t\t<rect x='401' y='380' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='522' y='381' rx='10' ry='10' width='169' height='19' />\r\n\t\t<rect x='730' y='379' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='851' y='378' rx='10' ry='10' width='85' height='19' />\r\n\t\t<circle cx='1456' cy='386' r='12' />\r\n\t\t<rect x='978' y='138' rx='10' ry='10' width='169' height='19' />\r\n\t\t<rect x='977' y='195' rx='10' ry='10' width='169' height='19' />\r\n\t\t<rect x='977' y='257' rx='10' ry='10' width='169' height='19' />\r\n\t\t<rect x='977' y='315' rx='10' ry='10' width='169' height='19' />\r\n\t\t<rect x='977' y='378' rx='10' ry='10' width='169' height='19' />\r\n\t\t<rect x='1183' y='139' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='1182' y='196' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='1182' y='258' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='1182' y='316' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='1182' y='379' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='1305' y='137' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='1304' y='194' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='1304' y='256' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='1304' y='314' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='1304' y='377' rx='10' ry='10' width='85' height='19' />\r\n\t\t<circle cx='37' cy='97' r='11' />\r\n\t\t<rect x='26' y='23' rx='5' ry='5' width='153' height='30' />\r\n\t\t<circle cx='1316' cy='88' r='11' />\r\n\t\t<rect x='1337' y='94' rx='0' ry='0' width='134' height='3' />\r\n\t\t<circle cx='77' cy='96' r='11' />\r\n\t</ContentLoader>\r\n);\r\n\r\nDataTable.metadata = {\r\n\tname: 'Mohd Arif Un',\r\n\tgithub: 'arif-un',\r\n\tdescription: 'Data Table skeleton',\r\n\tfilename: 'DataTable'\r\n};\r\n\r\nexport default DataTable;\r\n","import React, {useState, useEffect} from 'react';\r\nimport {withRouter} from 'react-router-dom';\r\nimport { Table, notification,  Space, Tag,Button, Input,Tooltip, Popconfirm  } from 'antd';\r\nimport { PlusOutlined, EditOutlined, DeleteOutlined,CheckCircleOutlined } from '@ant-design/icons';\r\n\r\nimport {AddNewCategory,QuickEdit} from \"../category\"\r\nimport CategoryNewQuickEdit from \"./CategoryNewQuickEdit\"\r\n\r\n/// import hooks\r\nimport { useFetch, useHandleFetch } from \"../../hooks\";\r\n\r\n// import components\r\nimport { DataTableSkeleton } from \"../../components/Placeholders\";\r\nimport Empty from \"../../components/Empty\";\r\n\r\nconst { Column, ColumnGroup } = Table;\r\nconst { Search } = Input;\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t  message: message || 'Category Created',\r\n\t  description: '',\r\n\t  icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n  };\r\n\r\n\r\n  const openErrorNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t  message: message || 'Something Went Wrong',\r\n\t  description: '',\r\n\t  icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n  };\r\n\r\n\r\n\r\n\r\n\r\ninterface myTableProps {\r\n  data: any; \r\n  setcategoryList?:any; \r\n  history?: any; \r\n} \r\n\r\n\r\nconst MyTable = ({data, setcategoryList, history}: myTableProps) => {\r\n    const [visible,setvisible] = useState(false);   \r\n    const [activeCategoryForEdit,setactiveCategoryForEdit] = useState(false); \r\n    const [deleteCategoryState, handleDeleteCategoryFetch] = useHandleFetch({}, 'deleteCategory');\r\n      // console.log('activeCategoryForEdit',activeCategoryForEdit); \r\n\r\n\r\n      const handleDeleteCategory = async (id) => {\r\n        const deleteCategoryRes = await handleDeleteCategoryFetch({\r\n          urlOptions: {\r\n            placeHolders: {\r\n              id,\r\n            }\r\n            }\r\n          });\r\n\r\n          \t  // @ts-ignore\r\n\t\t  if(deleteCategoryRes && deleteCategoryRes.status === 'ok'){\r\n\t\t\t  openSuccessNotification('Deleted Category'); \r\n\t\t\t  const newCategoryList =  data.filter(item => item.id !== id);\r\n\t\t\t  setcategoryList(newCategoryList); \r\n\t\t  }\r\n      }\r\n      \r\n\r\n    return (\r\n        <>\r\n        <Table \r\n        // expandable={{\r\n        //     expandedRowRender: record => <p style={{ margin: 0 }}>{record.name}</p>,\r\n        //     rowExpandable: record => record.name !== 'Not Expandable',\r\n        //   }}\r\n        // bordered={true}\r\n        size='small'\r\n        // pagination={false}\r\n        dataSource={data}\r\n        >\r\n            <Column \r\n          title=\"\"\r\n           dataIndex=\"cover\"\r\n            key=\"id\" \r\n            width={'80px'}\r\n            \r\n           className='classnameofthecolumn'\r\n\r\n            render={(cover,record: any) => (\r\n                <>\r\n                <img src={cover} \r\n                   onClick={() => {\r\n                    history.push(`/admin/category/${record.id}`)\r\n                    // setcategoryDetailVisible(true);\r\n                    setactiveCategoryForEdit(record)\r\n                  }}\r\n                alt='cover img' \r\n                style={{\r\n                    height: '40px',\r\n                    width: '40px',\r\n                    objectFit: \"contain\",\r\n                    borderRadius:'3px',\r\n                  cursor: 'pointer'\r\n\r\n                }} />\r\n                </>\r\n              )}\r\n            />\r\n          <Column\r\n           title=\"Name\" \r\n           dataIndex=\"name\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n           render={(text, record: any) => (\r\n            <>\r\n\r\n              <h4\r\n                onClick={() => {\r\n                  history.push(`/admin/category/${record.id}`)\r\n                  // setcategoryDetailVisible(true);\r\n                  setactiveCategoryForEdit(record)\r\n                }}\r\n                style={{\r\n                  fontWeight: 400,\r\n                  color: '#555',\r\n                  cursor: 'pointer'\r\n\r\n                }}>\r\n                {text}\r\n              </h4>\r\n\r\n\r\n            </>\r\n          )}\r\n            />\r\n\r\n\r\n         <Column\r\n           title=\"Sub Cateogory\" \r\n           dataIndex=\"subCount\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n         \r\n            />\r\n\r\n<Column\r\n           title=\"Product\" \r\n           dataIndex=\"productCount\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n         \r\n            />\r\n\r\n\r\n\r\n          {/* <Column \r\n          \r\n          className='classnameofthecolumn'\r\n\r\n          title=\"Product\" dataIndex=\"product\" key=\"product\" /> */}\r\n\r\n          {/* <Column \r\n          \r\n          className='classnameofthecolumn'\r\n\r\n          title=\"Sub Category\" dataIndex=\"subCategory\" key=\"subCategory\" /> */}\r\n        \r\n        {/* <Column\r\n          title=\"Tags\"\r\n          dataIndex=\"tags\"\r\n          key=\"tags\"\r\n          render={tags => (\r\n            <>\r\n              {tags.map((tag : any) => (\r\n                <Tag color=\"blue\" key={tag}>\r\n                  {tag}\r\n                </Tag>\r\n              ))}\r\n            </>\r\n          )}\r\n        /> */}\r\n        <Column\r\n        \r\n        className='classnameofthecolumn'\r\n          title=\"\"\r\n          key=\"action\"\r\n          align='right'\r\n          render={(text, record : any) => (\r\n            <Space size=\"middle\">\r\n              <a href='##'>\r\n               <Tooltip placement=\"top\" title='Edit Category'>\r\n              <span className='iconSize' onClick={() => {\r\n                setvisible(true)\r\n                setactiveCategoryForEdit(record); \r\n              }}> \r\n              <EditOutlined />\r\n            \r\n              </span>\r\n               </Tooltip>\r\n               </a>\r\n\r\n\r\n               <Popconfirm \r\n               \r\n               onConfirm={() => handleDeleteCategory(record.id)}\r\n               title=\"Are you sure？\" okText=\"Yes\" cancelText=\"No\">\r\n           \r\n\t\t   <span \r\n             className='iconSize iconSize-danger'\r\n             > \r\n             <DeleteOutlined/>\r\n            </span>\r\n       \r\n           </Popconfirm>\r\n\r\n\r\n       \r\n             \r\n            </Space>\r\n          )}\r\n        />\r\n      </Table>\r\n\r\n    \r\n\r\n    {activeCategoryForEdit &&   <CategoryNewQuickEdit\r\n    categoryDetailData={activeCategoryForEdit} \r\n    setcategoryList={setcategoryList}\r\n    categoryList={data}\r\n    setAddNewCategoryVisible={setvisible}\r\n    addNewCategoryVisible={visible}\r\n/>}\r\n    \r\n    </>\r\n    )\r\n}\r\n\r\n\r\ninterface Props {\r\n    history: any; \r\n}\r\n\r\nconst CategoryList = ({history}: Props) => {\r\n\r\n\r\n  \r\n\r\n  const [categoryState, handleCategoryListFetch] = useHandleFetch({}, 'categoryList');\r\n  const [categoryList,setcategoryList] = useState([]); \r\n\r\n  useEffect(()=>{\r\n   const setCategories = async () => {\r\n     const categories = await handleCategoryListFetch({\r\n      urlOptions: {\r\n        params: {\r\n          isSubCategory: true,\r\n          productCountValue: true,\r\n          sortItem: 'added',\r\n          sortOrderValue: '-1'\r\n        },\r\n      },\r\n     }); \r\n     // @ts-ignore\r\n     setcategoryList(categories); \r\n   }\r\n   setCategories(); \r\n  },[])\r\n\r\n\r\n  \r\n  const [addNewCategoryVisible,setAddNewCategoryVisible] = useState(false);   \r\n\r\n  const handleOkAddNewCategory = (e: any) => {\r\n    setAddNewCategoryVisible(false);\r\n  };\r\n\r\n  const handleCancelAddNewCategory = (e: any) => {\r\n    setAddNewCategoryVisible(false);\r\n  };\r\n\r\n  // console.log('categoryState',categoryState); \r\n\r\n  \r\n\r\n  const handleSearch = (value) => {\r\n    if(categoryState.data.length > 0 ){\r\n      const newCategoryList = categoryState.data.filter(item => item.name.toLowerCase().includes(value.toLowerCase())); \r\n      setcategoryList(newCategoryList); \r\n    }\r\n     \r\n  }\r\n\r\n\r\n\r\n\treturn (\r\n\t\t<>\r\n    {/* <h2 className='containerPageTitle'>\r\n      Categories\r\n    </h2> */}\r\n    <div className='categoryListContainer'>\r\n            <div className='categoryListContainer__header'>\r\n           \r\n\r\n          <div className='categoryListContainer__header-searchBar'>\r\n          <h2 className='categoryListContainer__header-title'>\r\n            Categories\r\n            </h2>\r\n\r\n\r\n          <Search\r\n            enterButton={false}\r\n            className='searchbarClassName'\r\n          placeholder=\"search categories..\"\r\n          onChange={e => handleSearch(e.target.value)}\r\n        />\r\n          </div>\r\n            <Button\r\n          // type=\"primary\"\r\n          className='btnPrimaryClassNameoutline'\r\n          icon={<PlusOutlined />}\r\n          onClick={() => setAddNewCategoryVisible(true)}\r\n        >\r\n        Add New\r\n            \r\n            </Button>\r\n            </div>\r\n\r\n            <div className='categoryListContainer__afterHeader'>\r\n            {/* <Search\r\n      placeholder=\"search categories..\"\r\n      size=\"large\"\r\n      onSearch={value => console.log(value)}\r\n      style={{ width: 300 }}\r\n    /> */}\r\n            </div>\r\n\r\n     \r\n\t\t\t\r\n\t\t\t<div className='categoryListContainer__categoryList'>\r\n        {categoryState.done && categoryList.length > 0 && <MyTable \r\n        history={history}\r\n        setcategoryList={setcategoryList}\r\n        data={categoryList} />}\r\n        {categoryState.isLoading && <DataTableSkeleton />}\r\n\r\n        {categoryState.done && !(categoryList.length > 0) && (\r\n\t\t\t<div style={{\r\n\t\t\t\tmarginTop: '50px'\r\n\t\t\t}}>\r\n\t\t\t\t<Empty title='No Category found'   />\r\n\t\t\t</div>\r\n\t\t)}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\r\n\r\n{categoryState.done && \r\n    <AddNewCategory \r\n          addNewCategoryVisible={addNewCategoryVisible} \r\n          setAddNewCategoryVisible={setAddNewCategoryVisible}\r\n          categoryList={categoryList}\r\n          setcategoryList={setcategoryList}\r\n          \r\n           />}\r\n\r\n      \r\n\r\n        \r\n    </>\r\n\t);\r\n};\r\n\r\nexport default withRouter(CategoryList);\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n\r\nimport { useHandleFetch } from '../../hooks';\r\n// import third party ui lib\r\nimport { Switch, Select, notification, Modal, Tooltip, Upload, message, } from 'antd';\r\n\r\nimport {\r\n\tDeleteOutlined,\r\n\tFileAddOutlined,\r\n\tFileImageFilled,\r\n\tPlusOutlined,\r\n\tCheckCircleOutlined,\r\n\tCloseOutlined,\r\n\tCheckOutlined,\r\n\tInfoCircleOutlined,\r\n\tLoadingOutlined\r\n} from '@ant-design/icons';\r\n\r\n\r\n\r\n// import ReactQuill from 'react-quill';\r\n// import 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport MediaLibrary from \"../../components/MediaLibrary\";\r\nimport MetaTags from \"./MetaTags\";\r\n\r\n\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n\t// name: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t\tmessage: message || 'Category Updated',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n\tnotification.error({\r\n\t\tmessage: message || 'Something Went Wrong',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n};\r\n\r\n\r\n\r\n\r\n\r\nconst initialValues = {\r\n\tname: '',\r\n\tbnName: '',\r\n\tdescription: '',\r\n\tbnDescription: '',\r\n\tmetaTitle: '',\r\n\tbnMetaTitle: '',\r\n\tmetaDescription: '',\r\n\tbnMetaDescription: '',\r\n\tmetaTags: '',\r\n\tbnMetaTags: '',\r\n\timage: [],\r\n\turl: '',\r\n\tcover: '',\r\n\tdisplayOrder: null,\r\n}\r\n\r\nconst { Option } = Select;\r\n\r\ninterface Props {\r\n\taddNewCategoryVisible: any;\r\n\tsetAddNewCategoryVisible: any;\r\n\tcategoryList?: any;\r\n\tsetcategoryList?: any;\r\n}\r\n\r\nconst AddNewCategory = ({ addNewCategoryVisible, setAddNewCategoryVisible, categoryList, setcategoryList }: Props) => {\r\n\r\n\tconst [addCategoryState, handleAddCategoryFetch] = useHandleFetch({}, 'addCategory','form');\r\n\tconst [visible, setvisible] = useState(false);\r\n\tconst [myImages, setmyImages] = useState(false);\r\n\tconst [myThumbnailImage, setmyThumbnailImage] = useState(false);\r\n\tconst [isparentCategoryChecked, setisparentcategoryChecked] = useState(true);\r\n\tconst [isModalOpenForThumbnail, setisModalOpenForThumbnail] = useState(false);\r\n\tconst [isModalOpenForImages, setisModalOpenForImages] = useState(false);\r\n\tconst [coverImageId, setCoverImageId] = useState('');\r\n\tconst [selectedParentId, setselectedParentId] = useState('');\r\n\tconst [imageUrl, setImageUrl] = useState('');\r\n\tconst [loadingThumnail, setLoadingThumbnail] = useState(false);\r\n\tconst [imageFile, setImagefile] = useState('');\r\n\tconst [tags,setTags] = useState([]);\r\n\tconst [bnTags,setBnTags] = useState([]);\r\n\r\n\r\n\tconst handleSubmit = async (values: any, actions: any) => {\r\n\t\t// @ts-ignore\r\n\t\tconst imagesIds = myImages ? myImages.map(image => {\r\n\t\t\treturn image.id;\r\n\t\t}) : [];\r\n\r\n\t\tconst formData = new FormData();\r\n\r\n\t\tconst bn = {\r\n\t\t\tmetaTitle: values.bnMetaTitle,\r\n\t\t\tmetaDescription: values.bnMetaDescription,\r\n\t\t\tmetaTags: bnTags.join(','),\r\n\t\t\tname: values.bnName.trim(),\r\n\t\t\tdescription: values.bnDescription,\r\n\t\t}; \r\n\r\n\t\tformData.append(\"name\", values.name.trim());\r\n\t\tformData.append(\"description\", values.description);\r\n\t\tformData.append(\"image\", JSON.stringify(imagesIds));\r\n\t\tformData.append(\"cover\", coverImageId || imagesIds[0] ? imagesIds[0] : '');\r\n\t\tformData.append(\"parent\", selectedParentId);\r\n\t\tformData.append('icon', imageFile)\r\n\t\tformData.append('metaTitle', values.metaTitle)\r\n\t\tformData.append('displayOrder', values.displayOrder)\r\n\t\tformData.append('metaDescription', values.metaDescription)\r\n\t\tformData.append('metaTags', values.metaTags)\r\n\r\n\r\n\r\n\t\tconst bnData = JSON.stringify(bn);\r\n\t\tconst bnFormData = new FormData();\r\n\t\tbnFormData.append(\"bn\",bnData);\r\n\r\n\r\n\r\n\t\tformData.append('bn', bnFormData.get('bn'))\r\n\r\n\r\n\r\n\r\n\t\tconsole.log('addcategoryREsBody',{\r\n\t\t\t...formData,\r\n\t\t\t// ...bnFormData\r\n\t\t}); \r\n\r\n\r\n\r\n\t\tconst addCategoryRes = await handleAddCategoryFetch({\r\n\t\t\tbody: formData,\r\n\t\t});\r\n\r\n\r\n\t\t// @ts-ignore\r\n\t\tif (addCategoryRes && addCategoryRes.status === 'ok') {\r\n\t\t\topenSuccessNotification('Category Created!');\r\n\t\t\tsetAddNewCategoryVisible(false)\r\n\r\n\t\t\tsetcategoryList([{\r\n\t\t\t\tid: addCategoryRes['_id'] || '',\r\n\t\t\t\tkey: addCategoryRes['_id'] || '',\r\n\t\t\t\tname: addCategoryRes['name'] || '',\r\n\t\t\t\tdescription: addCategoryRes['description'] || '',\r\n\t\t\t\tcover: addCategoryRes['cover'] || '',\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\t...addCategoryRes\r\n\t\t\t},...categoryList])\r\n\r\n\t\t\tactions.resetForm();\r\n\t\t\t// @ts-ignore\r\n\t\t\tsetmyImages([]);\r\n\t\t\tsetCoverImageId('')\r\n\t\t\tsetselectedParentId('')\r\n\t\t\tsetisparentcategoryChecked(true);\r\n\t\t\tsetImageUrl('');\r\n\t\t}\r\n\t\telse {\r\n\t\t\topenErrorNotification();\r\n\t\t}\r\n\r\n\r\n\r\n\r\n\t\tactions.setSubmitting(false);\r\n\t};\r\n\r\n\r\n\r\n\tconsole.log('addCategoryState',addCategoryState)\r\n\r\n\t\r\n\tuseEffect(() => {\r\n\t\tif (!addCategoryState['isLoading']) {\r\n\t\t\tconst error = addCategoryState['error'];\r\n\t\t\tif (error['isError'] && Object.keys(error['error']).length > 0) {\r\n\r\n\r\n\t\t\t\tconst errors =\r\n\t\t\t\t\tObject.values(error['error']).length > 0\r\n\t\t\t\t\t\t? Object.values(error['error'])\r\n\t\t\t\t\t\t: [];\r\n\t\t\t\terrors.forEach((err, i) => {\r\n\t\t\t\t\tif (typeof err === 'string') {\r\n\t\t\t\t\t\topenErrorNotification(err)\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if (typeof err === 'object') {\r\n\t\t\t\t\t\tif (err && Object.keys(err).length > 0) {\r\n\t\t\t\t\t\t\tconst errs = Object.values(err);\r\n\t\t\t\t\t\t\terrs.forEach(err => {\r\n\t\t\t\t\t\t\t\topenErrorNotification(err)\r\n\t\t\t\t\t\t\t})\r\n\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t}, [addCategoryState])\r\n\r\n\r\n\r\n\r\n\r\n\tconst onSwitchChange = (checked: any) => {\r\n\t\tsetisparentcategoryChecked(checked)\r\n\t};\r\n\r\n\r\n\tconst handleCancel = (e: any) => {\r\n\t\tsetAddNewCategoryVisible(false);\r\n\t};\r\n\r\n\r\n\tconst getisSubmitButtonDisabled = (values, isValid) => {\r\n\t\tif (!values.name || !isValid) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\r\n\tconst handleImagesDelete = (id) => {\r\n\t\t// @ts-ignore\r\n\t\tconst newImages = myImages && myImages.filter(image => {\r\n\t\t\treturn image.id !== id;\r\n\t\t})\r\n\r\n\t\tsetmyImages(newImages);\r\n\t}\r\n\r\n\r\n\tconst handleThumbnailImageDelete = (id) => {\r\n\t\t// @ts-ignore\r\n\t\tconst newImages = myThumbnailImage && myThumbnailImage.filter(image => {\r\n\t\t\treturn image.id !== id;\r\n\t\t})\r\n\r\n\t\tif (newImages.length > 0) {\r\n\t\t\tsetmyThumbnailImage(newImages);\r\n\r\n\t\t}\r\n\t\telse setmyThumbnailImage(false);\r\n\t}\r\n\r\n\r\n\tconst onChangeSelect = (value) => {\r\n\t\tsetselectedParentId(value);\r\n\t}\r\n\r\n\r\n\r\n\tfunction getBase64(img, callback) {\r\n\t\tconst reader = new FileReader();\r\n\t\treader.addEventListener('load', () => callback(reader.result));\r\n\t\treader.readAsDataURL(img);\r\n\t}\r\n\r\n\r\n\tfunction beforeUpload(file) {\r\n\t\tconst isJpgOrPng = file.type === 'image/jpeg' || file.type === 'image/png';\r\n\t\tif (!isJpgOrPng) {\r\n\t\t\tmessage.error('You can only upload JPG/PNG file!');\r\n\t\t}\r\n\t\tconst isLt2M = file.size / 1024 / 1024 < 2;\r\n\t\tif (!isLt2M) {\r\n\t\t\tmessage.error('Image must smaller than 2MB!');\r\n\t\t}\r\n\r\n\r\n\t\tgetBase64(file, imageUrl => {\r\n\t\t\tsetImageUrl(imageUrl)\r\n\t\t\tsetImagefile(file)\r\n\t\t\tsetLoadingThumbnail(false)\r\n\t\t})\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\r\n\tconst uploadButton = (\r\n\t\t<div>\r\n\t\t\t{loadingThumnail ? <LoadingOutlined /> : <PlusOutlined />}\r\n\t\t\t<div className=\"ant-upload-text\">Upload</div>\r\n\t\t</div>\r\n\t);\r\n\r\n\r\n\r\n\treturn (\r\n\t\t<Formik\r\n\t\t\tonSubmit={(values, actions) => handleSubmit(values, actions)}\r\n\t\t\tvalidationSchema={validationSchema}\r\n\t\t\tvalidateOnBlur={false}\r\n\t\t\tenableReinitialize={true}\r\n\t\t\tinitialValues={\r\n\t\t\t\t{ ...initialValues }\r\n\t\t\t}\r\n\t\t>\r\n\t\t\t{({\r\n\t\t\t\thandleChange,\r\n\t\t\t\tvalues,\r\n\t\t\t\thandleSubmit,\r\n\t\t\t\terrors,\r\n\t\t\t\tisValid,\r\n\t\t\t\tisSubmitting,\r\n\t\t\t\ttouched,\r\n\t\t\t\thandleBlur,\r\n\t\t\t\tsetFieldTouched,\r\n\t\t\t\thandleReset,\r\n\t\t\t}) => (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<Modal\r\n\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\ttop: '40px'\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\ttitle=\"Add New Category\"\r\n\t\t\t\t\t\t\tvisible={addNewCategoryVisible}\r\n\t\t\t\t\t\t\tonOk={(e: any) => handleSubmit(e)}\r\n\t\t\t\t\t\t\tonCancel={handleCancel}\r\n\t\t\t\t\t\t\tokText='Create'\r\n\t\t\t\t\t\t\tokButtonProps={{\r\n\t\t\t\t\t\t\t\tloading: isSubmitting,\r\n\t\t\t\t\t\t\t\thtmlType: \"submit\",\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\tlabel='Name'\r\n\t\t\t\t\t\t\t\tvalue={values.name}\r\n\t\t\t\t\t\t\t\tplaceHolder={'grocery,fashion'}\r\n\t\t\t\t\t\t\t\tname='name'\r\n\t\t\t\t\t\t\t\tisError={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['name'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['name'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('name');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\tlabel='BN Name'\r\n\t\t\t\t\t\t\t\tvalue={values.bnName}\r\n\t\t\t\t\t\t\t\tplaceHolder={'মুদিখানা,ফ্যাশন'}\r\n\t\t\t\t\t\t\t\tname='bnName'\r\n\t\t\t\t\t\t\t\tisError={(touched.bnName && errors.bnName) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['bnName'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.bnName && errors.bnName) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['bnName'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('bnName');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\tlabel='Description'\r\n\t\t\t\t\t\t\t\tvalue={values.description}\r\n\t\t\t\t\t\t\t\tplaceholder={'This category...'}\r\n\t\t\t\t\t\t\t\tname='description'\r\n\t\t\t\t\t\t\t\tisError={(touched.description && errors.description) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['description'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.description && errors.description) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['description'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('description');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\tlabel='BN Description'\r\n\t\t\t\t\t\t\t\tvalue={values.bnDescription}\r\n\t\t\t\t\t\t\t\tplaceholder={'এই ক্যাটাগড়ি...'}\r\n\t\t\t\t\t\t\t\tname='bnDescription'\r\n\t\t\t\t\t\t\t\tisError={(touched.bnDescription && errors.bnDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['bnDescription'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.bnDescription && errors.bnDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['bnDescription'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('bnDescription');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n<Input\r\n\t\t\t\t\t\t\t\t\t\tlabel='Display Order'\r\n\t\t\t\t\t\t\t\t\t\tvalue={values.displayOrder}\r\n\t\t\t\t\t\t\t\t\t\tplaceHolder={'1,3,7'}\r\n\t\t\t\t\t\t\t\t\t\tname='displayOrder'\r\n\t\t\t\t\t\t\t\t\t\ttype='number'\r\n\t\t\t\t\t\t\t\t\t\tisError={(touched.displayOrder && errors.displayOrder) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['displayOrder'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\terrorString={(touched.displayOrder && errors.displayOrder) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['displayOrder'])}\r\n\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('displayOrder');\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\tmarginTop: '25px'\r\n\t\t\t\t\t\t\t}}></div>\r\n\r\n\t\t\t\t\t\t\t<div className='switchLabelContainer'>\r\n\t\t\t\t\t\t\t\t<Switch\r\n\t\t\t\t\t\t\t\t\tchecked={isparentCategoryChecked}\r\n\t\t\t\t\t\t\t\t\tdefaultChecked onChange={onSwitchChange} />\r\n\t\t\t\t\t\t\t\t<div className='switchLabelContainer-textContainer'>\r\n\t\t\t\t\t\t\t\t\t<h5 >Top level Category</h5>\r\n\t\t\t\t\t\t\t\t\t<h5 className='switchLabelContainer-desc'>Disable to select a Parent Category</h5>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t{!isparentCategoryChecked && (\r\n\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>Parent Category</h3>\r\n\t\t\t\t\t\t\t\t\t<Select\r\n\t\t\t\t\t\t\t\t\t\tshowSearch\r\n\t\t\t\t\t\t\t\t\t\tstyle={{ width: 300 }}\r\n\t\t\t\t\t\t\t\t\t\tplaceholder='Select a Parent Category'\r\n\t\t\t\t\t\t\t\t\t\toptionFilterProp='children'\r\n\t\t\t\t\t\t\t\t\t\tonChange={onChangeSelect}\r\n\t\t\t\t\t\t\t\t\t\t// onFocus={onFocus}\r\n\t\t\t\t\t\t\t\t\t\t// onBlur={onBlur}\r\n\t\t\t\t\t\t\t\t\t\t// onSearch={onSearch}\r\n\t\t\t\t\t\t\t\t\t\tfilterOption={(input, option: any) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t{categoryList.length > 0 && categoryList.map(category => {\r\n\t\t\t\t\t\t\t\t\t\t\treturn <Option value={category.id}>{category.name}</Option>\r\n\t\t\t\t\t\t\t\t\t\t})}\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t</Select>\r\n\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t)}\r\n\r\n\r\n\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\tmarginTop: '20px'\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\r\n\t\t\t\t\t\t\t<div className='addproductSection-left-header' >\r\n\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>Icon </h3>\r\n\t\t\t\t\t\t\t\t<Tooltip\r\n\t\t\t\t\t\t\t\t\tplacement=\"left\" title={'Add Icon image for this category'}>\r\n\t\t\t\t\t\t\t\t\t<a href='###'>\r\n\t\t\t\t\t\t\t\t\t\t<InfoCircleOutlined />\r\n\t\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t<Upload\r\n\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\tborderRadius: \"8px\"\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\tname=\"avatar\"\r\n\t\t\t\t\t\t\t\tlistType=\"picture-card\"\r\n\t\t\t\t\t\t\t\tclassName=\"avatar-uploader\"\r\n\t\t\t\t\t\t\t\tshowUploadList={false}\r\n\t\t\t\t\t\t\t\tbeforeUpload={beforeUpload}\r\n\t\t\t\t\t\t\t\tmultiple={false}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t{imageUrl ? <img src={imageUrl} alt=\"avatar\" style={{ width: '100%' }} /> : uploadButton}\r\n\t\t\t\t\t\t\t</Upload>\r\n\r\n\r\n\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\tmarginTop: '10px'\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\r\n\t\t\t\t\t\t\t<div className='addproductSection-left-header' style={{\r\n\t\t\t\t\t\t\t\tmarginBottom: '-5px'\r\n\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>Images</h3>\r\n\t\t\t\t\t\t\t\t<Tooltip\r\n\t\t\t\t\t\t\t\t\tplacement=\"left\" title={'Click on the image to select cover image, By default 1st image is selected as cover'}>\r\n\t\t\t\t\t\t\t\t\t<a href='###'>\r\n\t\t\t\t\t\t\t\t\t\t<InfoCircleOutlined />\r\n\t\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className='aboutToUploadImagesContainer'>\r\n\t\t\t\t\t\t\t\t{myImages &&\r\n\t\t\t\t\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\t\t\t\t\tmyImages.length > 0 && myImages.map((image, index) => {\r\n\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='aboutToUploadImagesContainer__item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='aboutToUploadImagesContainer__item-imgContainer'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => setCoverImageId(image.id)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<img src={image.cover} alt={image.alt} />\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => handleImagesDelete(image.id)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='aboutToUploadImagesContainer__item-remove'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<CloseOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t{coverImageId === image.id ? (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<span className='aboutToUploadImagesContainer__item-cover'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<CheckOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t) : !coverImageId && index === 0 && (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<span className='aboutToUploadImagesContainer__item-cover'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<CheckOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t})}\r\n\r\n\r\n\t\t\t\t\t\t\t\t<Tooltip\r\n\t\t\t\t\t\t\t\t\ttitle={'Attach images'}>\r\n\r\n\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\t\t\tsetvisible(true);\r\n\t\t\t\t\t\t\t\t\t\t\tsetisModalOpenForImages(true);\r\n\t\t\t\t\t\t\t\t\t\t\tsetisModalOpenForThumbnail(false);\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\tclassName='aboutToUploadImagesContainer__uploadItem'>\r\n\t\t\t\t\t\t\t\t\t\t{/* <FileAddOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FileImageTwoTone />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FileImageOutlined /> */}\r\n\t\t\t\t\t\t\t\t\t\t<FileImageFilled />\r\n\t\t\t\t\t\t\t\t\t\t{/* <h5>\r\n\t\t\t\t\t\t\t\t\t\t\t\t     Select From Library\r\n\t\t\t\t\t\t\t\t\t\t\t<     /h5> */}\r\n\t\t\t\t\t\t\t\t\t\t<span className='aboutToUploadImagesContainer__uploadItem-plus'>\r\n\t\t\t\t\t\t\t\t\t\t\t<PlusOutlined />\r\n\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\tlabel='Meta title'\r\n\t\t\t\t\t\t\t\tvalue={values.metaTitle}\r\n\t\t\t\t\t\t\t\tplaceHolder={'category...'}\r\n\t\t\t\t\t\t\t\tname='metaTitle'\r\n\t\t\t\t\t\t\t\tisError={(touched.metaTitle && errors.metaTitle) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['metaTitle'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.metaTitle && errors.metaTitle) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['metaTitle'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('metaTitle')\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\tlabel='BN Meta title'\r\n\t\t\t\t\t\t\t\tvalue={values.bnMetaTitle}\r\n\t\t\t\t\t\t\t\tplaceHolder={'ক্যাটাগড়ি...'}\r\n\t\t\t\t\t\t\t\tname='bnMetaTitle'\r\n\t\t\t\t\t\t\t\tisError={(touched.bnMetaTitle && errors.bnMetaTitle) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['bnMetaTitle'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.bnMetaTitle && errors.bnMetaTitle) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['bnMetaTitle'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('bnMetaTitle');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\tlabel='Meta description'\r\n\t\t\t\t\t\t\t\tvalue={values.metaDescription}\r\n\t\t\t\t\t\t\t\tplaceholder={'meta...'}\r\n\t\t\t\t\t\t\t\tname='metaDescription'\r\n\t\t\t\t\t\t\t\tisError={(touched.metaDescription && errors.metaDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['metaDescription'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.metaDescription && errors.metaDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['metaDescription'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('metaDescription');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\tlabel='BN Meta Description'\r\n\t\t\t\t\t\t\t\tvalue={values.bnMetaDescription}\r\n\t\t\t\t\t\t\t\tplaceholder={'এইয় মেট...'}\r\n\t\t\t\t\t\t\t\tname='bnMetaDescription'\r\n\t\t\t\t\t\t\t\tisError={(touched.bnMetaDescription && errors.bnMetaDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['bnMetaDescription'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.bnMetaDescription && errors.bnMetaDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['bnMetaDescription'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('bnMetaDescription');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\tMeta Tags (grocery,fashion)\r\n\t\t\t\t\t\t\t</h3>\r\n\r\n\t\t\t\t\t\t\t<MetaTags\r\n\t\t\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\t\t\tsetTags={setTags}\r\n\t\t\t\t\t\t\ttags={tags}\r\n\t\t\t\t\t\t\t />\r\n\r\n\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\tmarginTop:'15px'\r\n\t\t\t\t\t\t\t}}></div>\r\n\r\n\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\tBN Meta Tags (মুদিখানা,ফ্যাশন)\r\n\t\t\t\t\t\t\t</h3>\r\n\r\n\t\t\t\t\t\t\t<MetaTags\r\n\t\t\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\t\t\tsetTags={setBnTags}\r\n\t\t\t\t\t\t\ttags={bnTags}\r\n\t\t\t\t\t\t\t />\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t</Modal>\r\n\r\n\t\t\t\t\t\t<MediaLibrary\r\n\t\t\t\t\t\t\tsetvisible={setvisible}\r\n\t\t\t\t\t\t\tvisible={visible}\r\n\t\t\t\t\t\t\tsetmyImages={setmyImages}\r\n\t\t\t\t\t\t\tmyImages={myImages}\r\n\t\t\t\t\t\t\tsetmyThumbnailImage={setmyThumbnailImage}\r\n\t\t\t\t\t\t\tisModalOpenForThumbnail={isModalOpenForThumbnail}\r\n\t\t\t\t\t\t\tisModalOpenForImages={isModalOpenForImages}\r\n\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</>\r\n\t\t\t\t)}\r\n\t\t</Formik>\r\n\r\n\r\n\r\n\r\n\t);\r\n};\r\n\r\nexport default AddNewCategory;\r\n","import React, { useState } from 'react';\r\nimport { Modal, notification } from 'antd';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport { useHandleFetch } from '../../hooks';\r\n\r\nimport { CheckCircleOutlined, PlusOutlined, EditOutlined, DeleteOutlined, EditFilled } from '@ant-design/icons';\r\n\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n\tname: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\n\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t\tmessage: message || 'Category Updated',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t\tmessage: message || 'Something Went Wrong',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n};\r\n\r\n\r\n\r\n\r\n\r\ninterface Props {\r\n\tcategory: any;\r\n\tsetvisible: any;\r\n\tvisible: any;\r\n\tsetcategoryList?: any;\r\n\tcategoryList?: any;\r\n}\r\n\r\nconst QuickEdit = ({ category, setvisible, visible, categoryList, setcategoryList }: Props) => {\r\n\tconst [updateCategoryState, handleUpdateCategoryFetch] = useHandleFetch({}, 'updateCategory');\r\n\r\n\tconst handleSubmit = async (values: any, actions: any) => {\r\n\t\tconst updateCategoryRes = await handleUpdateCategoryFetch({\r\n\t\t\turlOptions: {\r\n\t\t\t\tplaceHolders: {\r\n\t\t\t\t\tid: values.id,\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tbody: {\r\n\t\t\t\tname: values.name,\r\n\t\t\t\tdescription: values.description,\r\n\t\t\t},\r\n\t\t});\r\n\r\n\t\t//   console.log('updateCategoryRes',updateCategoryRes); \r\n\r\n\t\t// @ts-ignore\r\n\t\tif (updateCategoryRes && updateCategoryRes.status === 'ok') {\r\n\t\t\topenSuccessNotification();\r\n\r\n\t\t\tconst positionInTag = () => {\r\n\t\t\t\treturn categoryList.map(item => item.id).indexOf(category.id);\r\n\t\t\t}\r\n\r\n\t\t\tconst index = positionInTag();\r\n\r\n\t\t\t// @ts-ignore\r\n\t\t\tconst updatedItem = Object.assign({}, categoryList[index], { ...updateCategoryRes });\r\n\t\t\tconst updateCategoryList = [...categoryList.slice(0, index), updatedItem, ...categoryList.slice(index + 1)];\r\n\t\t\tsetcategoryList(updateCategoryList);\r\n\r\n\t\t}\r\n\t\telse {\r\n\t\t\topenErrorNotification();\r\n\t\t}\r\n\r\n\t\tactions.setSubmitting(false);\r\n\t\tsetvisible(false)\r\n\r\n\t};\r\n\r\n\r\n\tconst handleCancel = (e: any) => {\r\n\t\tsetvisible(false);\r\n\t};\r\n\r\n\r\n\r\n\tconst getisSubmitButtonDisabled = (values, isValid) => {\r\n\t\tif (!values.name || !isValid) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\treturn (\r\n\t\t<Formik\r\n\t\t\tonSubmit={(values, actions) => handleSubmit(values, actions)}\r\n\t\t\tvalidationSchema={validationSchema}\r\n\t\t\tvalidateOnBlur={false}\r\n\t\t\tenableReinitialize={true}\r\n\t\t\tinitialValues={\r\n\t\t\t\t{ ...category }\r\n\t\t\t}\r\n\t\t>\r\n\t\t\t{({\r\n\t\t\t\thandleChange,\r\n\t\t\t\tvalues,\r\n\t\t\t\thandleSubmit,\r\n\t\t\t\terrors,\r\n\t\t\t\tisValid,\r\n\t\t\t\tisSubmitting,\r\n\t\t\t\ttouched,\r\n\t\t\t\thandleBlur,\r\n\t\t\t\tsetFieldTouched,\r\n\t\t\t\thandleReset,\r\n\t\t\t}) => (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<Modal\r\n\t\t\t\t\t\t\ttitle=\"Quick Edit\"\r\n\t\t\t\t\t\t\tvisible={visible}\r\n\t\t\t\t\t\t\tonOk={(e: any) => handleSubmit(e)}\r\n\t\t\t\t\t\t\tonCancel={handleCancel}\r\n\t\t\t\t\t\t\tokText='Update'\r\n\t\t\t\t\t\t\tokButtonProps={{\r\n\t\t\t\t\t\t\t\tloading: isSubmitting,\r\n\t\t\t\t\t\t\t\thtmlType: \"submit\",\r\n\t\t\t\t\t\t\t\tdisabled: getisSubmitButtonDisabled(values, isValid)\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\tlabel='Title'\r\n\t\t\t\t\t\t\t\tvalue={values.name}\r\n\t\t\t\t\t\t\t\tname='name'\r\n\t\t\t\t\t\t\t\tisError={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateCategoryState.error['error']['name'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateCategoryState.error['error']['name'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('name');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\tlabel='Description'\r\n\t\t\t\t\t\t\t\tvalue={values.description}\r\n\t\t\t\t\t\t\t\tname='description'\r\n\t\t\t\t\t\t\t\tisError={(touched.description && errors.description) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateCategoryState.error['error']['description'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.description && errors.description) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateCategoryState.error['error']['description'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('description');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</Modal>\r\n\r\n\t\t\t\t\t</>\r\n\t\t\t\t)}\r\n\t\t</Formik>\r\n\t);\r\n};\r\n\r\n\r\nexport default QuickEdit;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n\r\nimport { useHandleFetch } from '../../hooks';\r\n// import third party ui lib\r\nimport { Switch, Select, notification, Modal, Tooltip, Upload, message } from 'antd';\r\n\r\nimport {\r\n\tDeleteOutlined,\r\n\tFileAddOutlined,\r\n\tFileImageFilled,\r\n\tPlusOutlined,\r\n\tCheckCircleOutlined,\r\n\tCloseOutlined,\r\n\tCheckOutlined,\r\n\tInfoCircleOutlined,\r\n\tLoadingOutlined\r\n} from '@ant-design/icons';\r\n\r\n\r\n\r\n// import ReactQuill from 'react-quill';\r\n// import 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport MediaLibrary from \"../../components/MediaLibrary\";\r\nimport MetaTags from \"./MetaTags\";\r\n\r\n\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n\tname: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t\tmessage: message || 'Category Updated',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n\tnotification.error({\r\n\t\tmessage: message || 'Something Went Wrong',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n};\r\n\r\n\r\n\r\n\r\n\r\nconst initialValues = {\r\n\tname: '',\r\n\tbnName: '',\r\n\tdescription: '',\r\n\tbnDescription: '',\r\n\tmetaTitle: '',\r\n\tbnMetaTitle: '',\r\n\tmetaDescription: '',\r\n\tbnMetaDescription: '',\r\n\tmetaTags: '',\r\n\tbnMetaTags: '',\r\n\timage: [],\r\n\turl: '',\r\n\tcover: '',\r\n\tdisplayOrder: '',\r\n}\r\n\r\nconst { Option } = Select;\r\n\r\ninterface Props {\r\n\taddNewCategoryVisible: any;\r\n\tsetAddNewCategoryVisible: any;\r\n\tcategoryList?: any;\r\n    setcategoryList?: any;\r\n    categoryDetailData?:any; \r\n    setcategoryDetailData?:any; \r\n}\r\n\r\nconst AddNewCategory = ({ \r\n    addNewCategoryVisible, \r\n    setAddNewCategoryVisible, \r\n    categoryList, setcategoryList,\r\n    categoryDetailData, setcategoryDetailData }: Props) => {\r\n\r\n\tconst [addCategoryState, handleAddCategoryFetch] = useHandleFetch({}, 'updateCategory');\r\n\tconst [updateCategoryIconState, handleUpdateCategoryIconFetch] = useHandleFetch({}, 'categoryUpdateIcon');\r\n\tconst [attachImageToItemMultipleState, handleAttachImageToItemMultipleFetch] = useHandleFetch({}, 'attachImageToItemMultiple');\r\n    const [attachImageToItemSingleState, handleAttachImageToItemSingleFetch] = useHandleFetch({}, 'attachImageToItemSingle');\r\n    const [detachImageFromItemMultipleState, handleDetachImageFromItemMultipleFetch] = useHandleFetch({}, 'detachImageFromItemMultiple');\r\n    const [detachImageFromItemSingleState, handleDetachImageFromItemSingleFetch] = useHandleFetch({}, 'detachImageFromItemSingle');\r\n    const [setImageAsThumbnailToItemState, handleSetImageAsThumbnailToItemFetch] = useHandleFetch({}, 'setImageAsThumbnailToItem');\r\n\r\n\tconst [visible, setvisible] = useState(false);\r\n\tconst [myThumbnailImage, setmyThumbnailImage] = useState(false);\r\n\tconst [isparentCategoryChecked, setisparentcategoryChecked] = useState(true);\r\n\tconst [isModalOpenForThumbnail, setisModalOpenForThumbnail] = useState(false);\r\n\tconst [isModalOpenForImages, setisModalOpenForImages] = useState(false);\r\n\tconst [selectedParentId, setselectedParentId] = useState('');\r\n\tconst [imageUrl, setImageUrl] = useState('');\r\n\tconst [loadingThumnail, setLoadingThumbnail] = useState(false);\r\n\tconst [imageFile, setImagefile] = useState('');\r\n\tconst [tags,setTags] = useState([]);\r\n\tconst [bnTags,setBnTags] = useState([]);\r\n\tconst [myImages, setmyImages] = useState(false);\r\n    const [coverImageId, setCoverImageId] = useState('');\r\n    const [myGoddamnImages, setMyGoddamnImages] = useState([]);\r\n\r\n\tconst handleSubmit = async (values: any, actions: any) => {\r\n\t\t// @ts-ignore\r\n\t\tconst imagesIds = myImages ? myImages.map(image => {\r\n\t\t\treturn image.id;\r\n\t\t}) : [];\r\n\r\n\t\tconst formData = new FormData();\r\n\r\n\t\tformData.append(\"name\", values.name.trim());\r\n\t\tformData.append(\"description\", values.description);\r\n\t\tformData.append(\"image\", JSON.stringify(imagesIds));\r\n\t\tformData.append(\"cover\", coverImageId || imagesIds[0] ? imagesIds[0] : '');\r\n\t\tformData.append(\"parent\", selectedParentId);\r\n\t\tformData.append('icon', imageFile)\r\n\t\tformData.append('displayOrder', values.displayOrder)\r\n\r\n\r\n\t\tconsole.log('categoryDetailData',categoryDetailData); \r\n\t\tconsole.log('imagesIds',imagesIds); \r\n\t\t\r\n\t\t\r\n\t\tif (categoryDetailData && Object.keys(categoryDetailData).length > 0) {\r\n\t\t\tconst aboutToUpdatedImageIds = []; \r\n\r\n\t\t\tif(imagesIds && imagesIds.length > 0){\r\n\t\t\t\timagesIds.forEach(imageId => {\r\n\t\t\t\t\tif(categoryDetailData && categoryDetailData['image']){\r\n\t\t\t\t\t\tif(!categoryDetailData['image'].includes(imageId)){\r\n\t\t\t\t\t\t\taboutToUpdatedImageIds.push(imageId)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n      \r\n            if (aboutToUpdatedImageIds[0] && aboutToUpdatedImageIds.length > 1) {\r\n                await handleAttachImageToItemMultipleFetch({\r\n                    urlOptions: {\r\n                        placeHolders: {\r\n                            collection: 'category',\r\n                            itemId: categoryDetailData.id\r\n                        }\r\n                    },\r\n                    body: {\r\n                        image: aboutToUpdatedImageIds\r\n                    }\r\n                });\r\n            }\r\n            else if (aboutToUpdatedImageIds[0] && aboutToUpdatedImageIds.length < 1) {\r\n                await handleAttachImageToItemSingleFetch({\r\n                    urlOptions: {\r\n                        placeHolders: {\r\n                            imageId: aboutToUpdatedImageIds[0].id,\r\n                            collection: 'category',\r\n                            itemId: categoryDetailData.id\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n\t\t}\r\n\t\t\r\n\r\n\r\n\t\tconst addCategoryRes = await handleAddCategoryFetch({\r\n            urlOptions: {\r\n                placeHolders: {\r\n                    id: categoryDetailData.id\r\n                },\r\n            },\r\n            body: {\r\n                name: values.name.trim(),\r\n                description: values.description,\r\n                image: imagesIds,\r\n                cover: coverImageId || imagesIds[0] ? imagesIds[0] : '',\r\n                parent: selectedParentId,\r\n                icon: imageFile,\r\n                metaTitle: values.metaTitle,\r\n\t\t\t\tmetaDescription: values.metaDescription,\r\n\t\t\t\tdisplayOrder: values.displayOrder,\r\n                metaTags:  tags && tags.length > 0 ?  tags.join(',') : '',\r\n                bn: {\r\n                    metaTitle: values.bnMetaTitle,\r\n                    metaDescription: values.bnMetaDescription,\r\n\t\t\t\t\tmetaTags:  bnTags && bnTags.length > 0 ?  bnTags.join(',') : '',\r\n                    name: values.bnName.trim(),\r\n                    description: values.bnDescription,\r\n                }\r\n            },\r\n\t\t});\r\n\r\n\t\t// @ts-ignore\r\n\t\tif (addCategoryRes && addCategoryRes.status === 'ok') {\r\n\t\t\topenSuccessNotification('Category Updated!');\r\n\t\t\tsetAddNewCategoryVisible(false)\r\n\r\n\t\t\t// setcategoryList([{\r\n\t\t\t// \tid: addCategoryRes['_id'] || '',\r\n\t\t\t// \tkey: addCategoryRes['_id'] || '',\r\n\t\t\t// \tname: addCategoryRes['name'] || '',\r\n\t\t\t// \tdescription: addCategoryRes['description'] || '',\r\n\t\t\t// \tcover: addCategoryRes['cover'] || '',\r\n\t\t\t// \t// @ts-ignore\r\n\t\t\t// \t...addCategoryRes\r\n\t\t\t// },...categoryList]); \r\n\r\n\t\t\t\r\n\r\n            setcategoryDetailData({\r\n\t\t\t\t...categoryDetailData,\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\t...addCategoryRes\r\n            }); \r\n\r\n            \r\n    \r\n\t\t\tactions.resetForm();\r\n\t\t\t// @ts-ignore\r\n\t\t\tsetmyImages([]);\r\n\t\t\tsetCoverImageId('')\r\n\t\t\tsetselectedParentId('')\r\n\t\t\tsetisparentcategoryChecked(true);\r\n\t\t\tsetImageUrl('');\r\n\t\t}\r\n\t\telse {\r\n\t\t\topenErrorNotification();\r\n\t\t}\r\n\r\n\t\tactions.setSubmitting(false);\r\n\t};\r\n\r\n    useEffect(() => {\r\n        if (categoryDetailData && Object.keys(categoryDetailData).length > 0) {\r\n\r\n            const images = categoryDetailData.image;\r\n            if (images && images.length > 0) {\r\n                setmyImages(images);\r\n                setMyGoddamnImages(images);\r\n            }\r\n\r\n            if (categoryDetailData.cover && categoryDetailData.cover['id']) {\r\n                // @ts-ignore\r\n                setmyImages([categoryDetailData.cover, ...images]);\r\n                setCoverImageId(categoryDetailData.cover['id']);\r\n            }\r\n\r\n        }\r\n    }, [categoryDetailData]); \r\n\r\n\r\n    useEffect(() => {\r\n        // @ts-ignore\r\n        if (myImages && myImages[0] && myImages.length < 2) {\r\n\r\n            if (coverImageId !== myImages[0].id) {\r\n                setCoverImageId(myImages[0].id);\r\n                handleSetImageAsThumnail(myImages[0]);\r\n            }\r\n\r\n        }\r\n\r\n    }, [myImages])\r\n\r\n\r\n    const handleDetachSingleImage = async id => {\r\n        await handleDetachImageFromItemSingleFetch({\r\n            urlOptions: {\r\n                placeHolders: {\r\n                    imageId: id,\r\n                    collection: 'category',\r\n                    itemId: categoryDetailData.id\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n\r\n\r\n    const handleSetImageAsThumnail = async image => {\r\n\r\n        const thumbnailRes = await handleSetImageAsThumbnailToItemFetch({\r\n            urlOptions: {\r\n                placeHolders: {\r\n                    imageId: image.id,\r\n                    collection: 'category',\r\n                    itemId: categoryDetailData.id\r\n                }\r\n            }\r\n        });\r\n\r\n\r\n        // @ts-ignore\r\n        if (thumbnailRes && thumbnailRes.status === 'ok') {\r\n            openSuccessNotification('Set as thumbnail!')\r\n            // const positionInBrand = () => {\r\n            //     return brandList.map(item => item.id).indexOf(categoryDetailData.id);\r\n            // }\r\n\r\n            // const index = positionInBrand();\r\n\r\n            // const prevItem = brandList.find(item => item.id === productRecord.id);\r\n\r\n            // if (prevItem) {\r\n            //     const updatedItem = Object.assign({}, brandList[index], { ...prevItem, cover: image.cover });\r\n            //     const updateBrandList = [...brandList.slice(0, index), updatedItem, ...brandList.slice(index + 1)];\r\n            //     setBrandList(updateBrandList);\r\n            // }\r\n        }\r\n        else {\r\n            openErrorNotification(\"Couldn't set as thumbnail, Something went wrong\")\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n    \r\n    const handleImagesDelete = (id) => {\r\n        // @ts-ignore\r\n        const newImages = myImages && myImages.filter(image => {\r\n            return image.id !== id;\r\n        })\r\n\r\n        setmyImages(newImages);\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\tconst onSwitchChange = (checked: any) => {\r\n\t\tsetisparentcategoryChecked(checked)\r\n\t};\r\n\r\n\r\n\tconst handleCancel = (e: any) => {\r\n\t\tsetAddNewCategoryVisible(false);\r\n\t};\r\n\r\n\r\n\tconst getisSubmitButtonDisabled = (values, isValid) => {\r\n\t\tif (!values.name || !isValid) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\r\n\r\n\r\n\tconst handleThumbnailImageDelete = (id) => {\r\n\t\t// @ts-ignore\r\n\t\tconst newImages = myThumbnailImage && myThumbnailImage.filter(image => {\r\n\t\t\treturn image.id !== id;\r\n\t\t})\r\n\r\n\t\tif (newImages.length > 0) {\r\n\t\t\tsetmyThumbnailImage(newImages);\r\n\r\n\t\t}\r\n\t\telse setmyThumbnailImage(false);\r\n\t}\r\n\r\n\r\n\tconst onChangeSelect = (value) => {\r\n\t\tsetselectedParentId(value);\r\n\t}\r\n\r\n\r\n\r\n\tfunction getBase64(img, callback) {\r\n\t\tconst reader = new FileReader();\r\n\t\treader.addEventListener('load', () => callback(reader.result));\r\n\t\treader.readAsDataURL(img);\r\n\t}\r\n\r\n\r\n\tfunction beforeUpload(file) {\r\n\t\tconst isJpgOrPng = file.type === 'image/jpeg' || file.type === 'image/png';\r\n\t\tif (!isJpgOrPng) {\r\n\t\t\tmessage.error('You can only upload JPG/PNG file!');\r\n\t\t}\r\n\t\tconst isLt2M = file.size / 1024 / 1024 < 2;\r\n\t\tif (!isLt2M) {\r\n\t\t\tmessage.error('Image must smaller than 2MB!');\r\n\t\t}\r\n\r\n\r\n\t\tgetBase64(file, imageUrl => {\r\n\t\t\tsetImageUrl(imageUrl)\r\n\t\t\tsetImagefile(file)\r\n\t\t\tconst setNewIcon  = async () => {\r\n\t\t\t\tconst formData = new FormData();\r\n\t\t\t\tformData.append('icon',file); \r\n\t\t\t\t// const addCategoryRes = await handleAddCategoryFetch({\r\n\t\t\t\t// \tbody: formData,\r\n\t\t\t\t// });\r\n\t\t\t\tconst res = await handleUpdateCategoryIconFetch({\r\n\t\t\t\t\turlOptions: {\r\n\t\t\t\t\t\tplaceHolders: {\r\n\t\t\t\t\t\t\tid: categoryDetailData.id\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t},\r\n\t\t\t\t\tbody: formData\r\n\t\t\t\t}); \r\n\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\tif(res && res.status === 'ok'){\r\n\t\t\t\t\topenSuccessNotification('Category Icon updated!')\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\topenErrorNotification(\"Couldn't update category icon, Something went wrong\")\r\n\t\t\t\t}\r\n\r\n\t\t\t\t\r\n\t\t\t}; \r\n\t\t\t\r\n\t\t\tsetNewIcon();\r\n\t\t\tsetLoadingThumbnail(false)\r\n\t\t})\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\r\n\r\n\tconst uploadButton = (\r\n\t\t<div>\r\n\t\t\t{loadingThumnail ? <LoadingOutlined /> : <PlusOutlined />}\r\n\t\t\t<div className=\"ant-upload-text\">Upload</div>\r\n\t\t</div>\r\n\t);\r\n\r\n\r\n\r\n\tuseEffect(()=>{\r\n\r\n        if(categoryDetailData && Object.keys(categoryDetailData).length > 0){\r\n            const iconUrl = categoryDetailData.icon && categoryDetailData.icon; \r\n\r\n\t\t\tsetImageUrl(iconUrl); \r\n        }\r\n\r\n    },[])\r\n    \r\n    useEffect(()=>{\r\n\r\n        if(categoryDetailData && Object.keys(categoryDetailData).length > 0){\r\n            const metaTags = categoryDetailData.metaTags && categoryDetailData.metaTags.split(','); \r\n\r\n            console.log('localMetaTags',metaTags);\r\n           \r\n            const bnMetaTags = categoryDetailData.bn && categoryDetailData.bn['metaTags'] && categoryDetailData.bn['metaTags'].split(','); \r\n            setTags(metaTags)\r\n            setBnTags(bnMetaTags)\r\n        }\r\n\r\n    },[])\r\n\r\n\r\n\tconsole.log('addnewCategoryTags',tags);\r\n\tconsole.log('categoryDetailData',categoryDetailData);\r\n\tconsole.log('myImages',myImages);\r\n\r\n\treturn (\r\n\t\t<Formik\r\n\t\t\tonSubmit={(values, actions) => handleSubmit(values, actions)}\r\n\t\t\tvalidationSchema={validationSchema}\r\n\t\t\tvalidateOnBlur={false}\r\n\t\t\tenableReinitialize={true}\r\n\t\t\tinitialValues={\r\n                \r\n                { ...initialValues,\r\n                    ...categoryDetailData,\r\n                    ...( categoryDetailData && Object.keys(categoryDetailData).length > 0 && {\r\n                        bnMetaTitle: categoryDetailData['bn']\r\n                        && categoryDetailData['bn'].metaTitle\r\n                        && categoryDetailData['bn'].metaTitle,\r\n                        bnMetaDescription: categoryDetailData['bn'] &&  categoryDetailData['bn'].metaDescription && categoryDetailData['bn'].metaDescription,\r\n                        bnName: categoryDetailData['bn'] && categoryDetailData['bn'].name && categoryDetailData['bn'].name,\r\n                        bnDescription: categoryDetailData['bn'] && categoryDetailData['bn'].description && categoryDetailData['bn'].description,\r\n                    })\r\n                 }\r\n\t\t\t}\r\n\t\t>\r\n\t\t\t{({\r\n\t\t\t\thandleChange,\r\n\t\t\t\tvalues,\r\n\t\t\t\thandleSubmit,\r\n\t\t\t\terrors,\r\n\t\t\t\tisValid,\r\n\t\t\t\tisSubmitting,\r\n\t\t\t\ttouched,\r\n\t\t\t\thandleBlur,\r\n\t\t\t\tsetFieldTouched,\r\n\t\t\t\thandleReset,\r\n\t\t\t}) => (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<Modal\r\n\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\ttop: '40px'\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\ttitle=\"Edit Category\"\r\n\t\t\t\t\t\t\tvisible={addNewCategoryVisible}\r\n\t\t\t\t\t\t\tonOk={(e: any) => handleSubmit(e)}\r\n\t\t\t\t\t\t\tonCancel={handleCancel}\r\n\t\t\t\t\t\t\tokText='Update'\r\n\t\t\t\t\t\t\tokButtonProps={{\r\n\t\t\t\t\t\t\t\tloading: isSubmitting,\r\n\t\t\t\t\t\t\t\thtmlType: \"submit\",\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\tlabel='Name'\r\n\t\t\t\t\t\t\t\tvalue={values.name}\r\n\t\t\t\t\t\t\t\tplaceHolder={'grocery,fashion'}\r\n\t\t\t\t\t\t\t\tname='name'\r\n\t\t\t\t\t\t\t\tisError={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['name'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['name'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('name');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\tlabel='BN Name'\r\n\t\t\t\t\t\t\t\tvalue={values.bnName}\r\n\t\t\t\t\t\t\t\tplaceHolder={'মুদিখানা,ফ্যাশন'}\r\n\t\t\t\t\t\t\t\tname='bnName'\r\n\t\t\t\t\t\t\t\tisError={(touched.bnName && errors.bnName) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['bnName'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.bnName && errors.bnName) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['bnName'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('bnName');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\tlabel='Description'\r\n\t\t\t\t\t\t\t\tvalue={values.description}\r\n\t\t\t\t\t\t\t\tplaceholder={'This category...'}\r\n\t\t\t\t\t\t\t\tname='description'\r\n\t\t\t\t\t\t\t\tisError={(touched.description && errors.description) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['description'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.description && errors.description) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['description'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('description');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\tlabel='BN Description'\r\n\t\t\t\t\t\t\t\tvalue={values.bnDescription}\r\n\t\t\t\t\t\t\t\tplaceholder={'এই ক্যাটাগড়ি...'}\r\n\t\t\t\t\t\t\t\tname='bnDescription'\r\n\t\t\t\t\t\t\t\tisError={(touched.bnDescription && errors.bnDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['bnDescription'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.bnDescription && errors.bnDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['bnDescription'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('bnDescription');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\tlabel='Display Order'\r\n\t\t\t\t\t\t\t\t\t\tvalue={values.displayOrder}\r\n\t\t\t\t\t\t\t\t\t\tplaceHolder={'1,3,7'}\r\n\t\t\t\t\t\t\t\t\t\tname='displayOrder'\r\n\t\t\t\t\t\t\t\t\t\ttype='number'\r\n\t\t\t\t\t\t\t\t\t\tisError={(touched.displayOrder && errors.displayOrder) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['displayOrder'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\terrorString={(touched.displayOrder && errors.displayOrder) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['displayOrder'])}\r\n\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('displayOrder');\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\tmarginTop: '25px'\r\n\t\t\t\t\t\t\t}}></div>\r\n\r\n\t\t\t\t\t\t\t<div className='switchLabelContainer'>\r\n\t\t\t\t\t\t\t\t<Switch\r\n\t\t\t\t\t\t\t\t\tchecked={isparentCategoryChecked}\r\n\t\t\t\t\t\t\t\t\tdefaultChecked onChange={onSwitchChange} />\r\n\t\t\t\t\t\t\t\t<div className='switchLabelContainer-textContainer'>\r\n\t\t\t\t\t\t\t\t\t<h5 >Top level Category</h5>\r\n\t\t\t\t\t\t\t\t\t<h5 className='switchLabelContainer-desc'>Disable to select a Parent Category</h5>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t{!isparentCategoryChecked && (\r\n\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>Parent Category</h3>\r\n\t\t\t\t\t\t\t\t\t<Select\r\n\t\t\t\t\t\t\t\t\t\tshowSearch\r\n\t\t\t\t\t\t\t\t\t\tstyle={{ width: 300 }}\r\n\t\t\t\t\t\t\t\t\t\tplaceholder='Select a Parent Category'\r\n\t\t\t\t\t\t\t\t\t\toptionFilterProp='children'\r\n\t\t\t\t\t\t\t\t\t\tonChange={onChangeSelect}\r\n\t\t\t\t\t\t\t\t\t\t// onFocus={onFocus}\r\n\t\t\t\t\t\t\t\t\t\t// onBlur={onBlur}\r\n\t\t\t\t\t\t\t\t\t\t// onSearch={onSearch}\r\n\t\t\t\t\t\t\t\t\t\tfilterOption={(input, option: any) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t{categoryList.length > 0 && categoryList.map(category => {\r\n\t\t\t\t\t\t\t\t\t\t\treturn <Option value={category.id}>{category.name}</Option>\r\n\t\t\t\t\t\t\t\t\t\t})}\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t</Select>\r\n\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t)}\r\n\r\n\r\n\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\tmarginTop: '20px'\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\r\n\t\t\t\t\t\t\t<div className='addproductSection-left-header' >\r\n\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>Icon </h3>\r\n\t\t\t\t\t\t\t\t<Tooltip\r\n\t\t\t\t\t\t\t\t\tplacement=\"left\" title={'Add Icon image for this category'}>\r\n\t\t\t\t\t\t\t\t\t<a href='###'>\r\n\t\t\t\t\t\t\t\t\t\t<InfoCircleOutlined />\r\n\t\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t<Upload\r\n\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\tborderRadius: \"8px\"\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\tname=\"avatar\"\r\n\t\t\t\t\t\t\t\tlistType=\"picture-card\"\r\n\t\t\t\t\t\t\t\tclassName=\"avatar-uploader\"\r\n\t\t\t\t\t\t\t\tshowUploadList={false}\r\n\t\t\t\t\t\t\t\tbeforeUpload={beforeUpload}\r\n\t\t\t\t\t\t\t\tmultiple={false}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t{imageUrl ? <img src={imageUrl} alt=\"avatar\" style={{ width: '100%' }} /> : uploadButton}\r\n\t\t\t\t\t\t\t</Upload>\r\n\r\n\r\n\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\tmarginTop: '20px'\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\r\n<div className='addproductSection-left-header'\r\n\r\n                                style={{\r\n                                    marginBottom: '-5px'\r\n                                }}\r\n                            >\r\n                                <h3 className='inputFieldLabel'>Images</h3>\r\n                                {/* <div  >\r\n\t\t\t\t\t<FileOutlined />\r\n\t\t\t\t\t<span>Media Center</span>\r\n\t\t\t\t</div> */}\r\n                            </div>\r\n\r\n\r\n                            <div className='aboutToUploadImagesContainer'>\r\n\r\n                                {categoryDetailData && Object.keys(categoryDetailData).length > 0 && (\r\n                                    <>\r\n                                        {myImages &&\r\n                                            // @ts-ignore\r\n                                            myImages.length > 0 && myImages.map((image, index) => {\r\n                                                return (\r\n                                                    <div className='aboutToUploadImagesContainer__item'>\r\n                                                        <div\r\n                                                            className='aboutToUploadImagesContainer__item-imgContainer'\r\n                                                            onClick={() => {\r\n                                                                setCoverImageId(image.id);\r\n                                                                handleSetImageAsThumnail(image);\r\n                                                            }}\r\n                                                        >\r\n                                                            <img src={image.cover} alt={image.alt} />\r\n                                                        </div>\r\n\r\n                                                        <span\r\n                                                            onClick={() => {\r\n                                                                handleImagesDelete(image.id)\r\n                                                                handleDetachSingleImage(image.id)\r\n                                                            }\r\n\r\n                                                            }\r\n                                                            className='aboutToUploadImagesContainer__item-remove'>\r\n                                                            <CloseOutlined />\r\n                                                        </span>\r\n\r\n\r\n                                                        {coverImageId === image.id ? (\r\n                                                            <span className='aboutToUploadImagesContainer__item-cover'>\r\n                                                                <CheckOutlined />\r\n                                                            </span>\r\n                                                        ) : !coverImageId && index === 0 && (\r\n                                                            <span className='aboutToUploadImagesContainer__item-cover'>\r\n                                                                <CheckOutlined />\r\n                                                            </span>\r\n                                                        )}\r\n\r\n\r\n                                                    </div>\r\n                                                )\r\n                                            })}\r\n\r\n\r\n                                        <Tooltip\r\n                                            title={'Attach images'}>\r\n\r\n                                            <div\r\n                                                onClick={() => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetvisible(true);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetisModalOpenForImages(true);\r\n                                                }}\r\n                                                className='aboutToUploadImagesContainer__uploadItem'>\r\n                                                {/* <FileAddOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FileImageTwoTone />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FileImageOutlined /> */}\r\n                                                <FileImageFilled />\r\n                                                {/* <h5>\r\n\t\t\t\t\t\t\t\t\t\t\t\t     Select From Library\r\n\t\t\t\t\t\t\t\t\t\t\t<     /h5> */}\r\n                                                <span className='aboutToUploadImagesContainer__uploadItem-plus'>\r\n                                                    <PlusOutlined />\r\n                                                </span>\r\n                                            </div>\r\n                                        </Tooltip>\r\n                                    </>\r\n                                )}\r\n\r\n\r\n                            </div>\r\n                            \r\n\r\n\r\n\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\tlabel='Meta title'\r\n\t\t\t\t\t\t\t\tvalue={values.metaTitle}\r\n\t\t\t\t\t\t\t\tplaceHolder={'category...'}\r\n\t\t\t\t\t\t\t\tname='metaTitle'\r\n\t\t\t\t\t\t\t\tisError={(touched.metaTitle && errors.metaTitle) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['metaTitle'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.metaTitle && errors.metaTitle) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['metaTitle'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('metaTitle')\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\tlabel='BN Meta title'\r\n\t\t\t\t\t\t\t\tvalue={values.bnMetaTitle}\r\n\t\t\t\t\t\t\t\tplaceHolder={'ক্যাটাগড়ি...'}\r\n\t\t\t\t\t\t\t\tname='bnMetaTitle'\r\n\t\t\t\t\t\t\t\tisError={(touched.bnMetaTitle && errors.bnMetaTitle) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['bnMetaTitle'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.bnMetaTitle && errors.bnMetaTitle) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['bnMetaTitle'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('bnMetaTitle');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\tlabel='Meta description'\r\n\t\t\t\t\t\t\t\tvalue={values.metaDescription}\r\n\t\t\t\t\t\t\t\tplaceholder={'meta...'}\r\n\t\t\t\t\t\t\t\tname='metaDescription'\r\n\t\t\t\t\t\t\t\tisError={(touched.metaDescription && errors.metaDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['metaDescription'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.metaDescription && errors.metaDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['metaDescription'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('metaDescription');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\tlabel='BN Meta Description'\r\n\t\t\t\t\t\t\t\tvalue={values.bnMetaDescription}\r\n\t\t\t\t\t\t\t\tplaceholder={'এইয় মেট...'}\r\n\t\t\t\t\t\t\t\tname='bnMetaDescription'\r\n\t\t\t\t\t\t\t\tisError={(touched.bnMetaDescription && errors.bnMetaDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['bnMetaDescription'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.bnMetaDescription && errors.bnMetaDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['bnMetaDescription'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('bnMetaDescription');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\tMeta Tags (grocery,fashion)\r\n\t\t\t\t\t\t\t</h3>\r\n\r\n\t\t\t\t\t\t\t<MetaTags\r\n\t\t\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\t\t\tsetTags={setTags}\r\n\t\t\t\t\t\t\ttags={tags}\r\n\t\t\t\t\t\t\t />\r\n\r\n\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\tmarginTop:'15px'\r\n\t\t\t\t\t\t\t}}></div>\r\n\r\n\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\tBN Meta Tags (মুদিখানা,ফ্যাশন)\r\n\t\t\t\t\t\t\t</h3>\r\n\r\n\t\t\t\t\t\t\t<MetaTags\r\n\t\t\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\t\t\tsetTags={setBnTags}\r\n\t\t\t\t\t\t\ttags={bnTags}\r\n\t\t\t\t\t\t\t />\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t</Modal>\r\n\r\n\t\t\t\t\t\t<MediaLibrary\r\n\t\t\t\t\t\t\tsetvisible={setvisible}\r\n\t\t\t\t\t\t\tvisible={visible}\r\n\t\t\t\t\t\t\tsetmyImages={setmyImages}\r\n\t\t\t\t\t\t\tmyImages={myImages}\r\n\t\t\t\t\t\t\tsetmyThumbnailImage={setmyThumbnailImage}\r\n\t\t\t\t\t\t\tisModalOpenForThumbnail={isModalOpenForThumbnail}\r\n\t\t\t\t\t\t\tisModalOpenForImages={isModalOpenForImages}\r\n\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</>\r\n\t\t\t\t)}\r\n\t\t</Formik>\r\n\r\n\r\n\r\n\r\n\t);\r\n};\r\n\r\nexport default AddNewCategory;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useParams, useHistory } from \"react-router\";\r\n\r\n\r\n// import hooks\r\nimport { useHandleFetch } from \"../../hooks\";\r\n\r\n// import lib\r\nimport {\r\n    EditOutlined,\r\n} from '@ant-design/icons';\r\n\r\nimport { Skeleton, Empty, Button, notification, Table, Space, Input as CoolInput, Tooltip, Modal } from 'antd';\r\n\r\n\r\n\r\n// import components\r\nimport { DataTableSkeleton } from \"../../components/Placeholders\";\r\nimport CategoryEdit from \"./CategoryEdit\";\r\nimport CategoryNewEdit from \"./CategoryNewEdit\";\r\n\r\n\r\nconst { Column, ColumnGroup } = Table;\r\nconst { Search } = CoolInput;\r\n\r\n\r\ninterface Props {\r\n    productRecord?: any;\r\n}\r\n\r\nconst NewBrandDetail = (props: Props) => {\r\n    const [categoryDetailState, handleCategoryDetailFetch] = useHandleFetch({}, 'categoryDetail');\r\n    const [categoryProductsState, handleCategoryProductsFetch] = useHandleFetch({}, 'categoryProducts');\r\n\r\n    const params = useParams();\r\n    const history = useHistory();\r\n    const categoryId = params['id'];\r\n    const [categoryEditVisible, setCategoryEditVisible] = useState(false);\r\n    const [categoryDetail,setcategoryDetail] = useState({}); \r\n\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        const getCategoryDetail = async () => {\r\n            const categoryDetailDataRes =  await handleCategoryDetailFetch({\r\n                urlOptions: {\r\n                    placeHolders: {\r\n                        id: categoryId\r\n                    }\r\n                }\r\n            }); \r\n\r\n            // @ts-ignore\r\n            if(categoryDetailDataRes){\r\n                  // @ts-ignore\r\n                setcategoryDetail(categoryDetailDataRes)\r\n\r\n            }\r\n\r\n        };\r\n\r\n        getCategoryDetail();\r\n\r\n    }, [categoryId]);\r\n\r\n    useEffect(() => {\r\n\r\n        const getCategoryProducts = async () => {\r\n            await handleCategoryProductsFetch({\r\n                urlOptions: {\r\n                    placeHolders: {\r\n                        id: categoryId\r\n                    }\r\n                }\r\n            })\r\n        };\r\n\r\n        getCategoryProducts();\r\n\r\n    }, [categoryId]);\r\n\r\n\r\n\r\n\r\n    console.log('categoryProductsState', categoryProductsState);\r\n\r\n    console.log('brandParams', params);\r\n\r\n\r\n    const getImagesInCollumn = (imgs) => {\r\n        if (!imgs[0]) return false;\r\n        imgs = imgs.map(item => item.cover);\r\n        const columns = {};\r\n\r\n        let localIndex = 0;\r\n        let columnNumber = 0;\r\n\r\n\r\n        imgs.forEach((item, index) => {\r\n            if (localIndex < 3) {\r\n                if (columns[columnNumber]) {\r\n                    columns[columnNumber] = [...columns[columnNumber], item]\r\n                }\r\n                else columns[columnNumber] = [item];\r\n\r\n                localIndex = localIndex + 1;\r\n                columnNumber = columnNumber + 1;\r\n\r\n            }\r\n            else {\r\n                localIndex = 0;\r\n                columnNumber = 0;\r\n                console.log('localIndex', localIndex)\r\n            }\r\n        });\r\n\r\n        return columns;\r\n    }\r\n\r\n    const row = categoryDetailState.done && categoryDetail && categoryDetail['image'] ? getImagesInCollumn(categoryDetail['image']) : [];\r\n\r\n    return (\r\n        <div className='brandDetailContainer'>\r\n\r\n            <div className='brandDetailContainer__heading'>\r\n                <h3>\r\n                    Category Detail\r\n                </h3>\r\n\r\n                {categoryDetailState.done && categoryDetail && (Object.keys(categoryDetail).length > 0) && (\r\n                    <>\r\n                        <CategoryNewEdit\r\n                            addNewCategoryVisible={categoryEditVisible}\r\n                            setAddNewCategoryVisible={setCategoryEditVisible}\r\n                            categoryDetailData={categoryDetail}\r\n                            setcategoryDetailData={setcategoryDetail}\r\n                        />\r\n\r\n                        <Button\r\n                            onClick={() => setCategoryEditVisible(true)}\r\n                            type='link'\r\n                            icon={<EditOutlined />}\r\n                        >\r\n                            Edit\r\n                      </Button>\r\n                    </>\r\n                )}\r\n\r\n            </div>\r\n            <Skeleton\r\n                avatar paragraph={{ rows: 3 }}\r\n                loading={categoryDetailState.isLoading}>\r\n                {categoryDetailState.done && categoryDetail && !(Object.keys(categoryDetail).length > 0) && (\r\n                    <Empty description='No Category found' image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n                )}\r\n\r\n\r\n\r\n                {categoryDetailState.done && categoryDetail && (Object.keys(categoryDetail).length > 0) && (\r\n                    <>\r\n                        <div className='brandDetailContainer__header'>\r\n                            <div className='brandDetailContainer__header-coverContainer brandDetailContainer__header-coverContainer-category'>\r\n                                <img src={categoryDetail['cover'] && categoryDetail['cover']['cover']} alt=\"\" />\r\n                            </div>\r\n                            <div className='brandDetailContainer__header-info'>\r\n                                <h2>\r\n                                    {categoryDetail['name']}\r\n                                </h2>\r\n                                <h3>\r\n                                    {categoryDetail['description']}\r\n                                </h3>\r\n                                <h3>\r\n                                    Category type: <span>\r\n                                        {categoryDetail['type']}\r\n                                    </span>\r\n                                </h3>\r\n\r\n                                {categoryDetail['url'] && (\r\n                                    <h3>\r\n                                        URL:\r\n                                        <span>\r\n                                            {categoryDetail['url']}\r\n                                        </span>\r\n\r\n                                    </h3>\r\n                                )}\r\n\r\n                            </div>\r\n                        </div>\r\n\r\n\r\n                        {categoryDetail['icon'] && (\r\n                            <>\r\n                                <div className='brandDetailContainer__heading'>\r\n                                    <h3>\r\n                                        Icon\r\n                            </h3>\r\n                                </div>\r\n\r\n                                <div className='brandDetailContainer__inlineBox'>\r\n                                    <div className='brandDetailContainer__header-coverContainer brandDetailContainer__header-coverContainer-icon'>\r\n                                        <img src={categoryDetail['icon'] && categoryDetail['icon']} alt=\"\" />\r\n                                    </div>\r\n\r\n                                </div>\r\n\r\n                                <div style={{\r\n                                    marginBottom: \"25px\"\r\n                                }}></div>\r\n                            </>\r\n                        )}\r\n\r\n\r\n                        {categoryDetail['image'] && categoryDetail['image'].length > 0 && (\r\n                            <>\r\n                                <div className='brandDetailContainer__heading'>\r\n                                    <h3>\r\n                                        Image Gallary\r\n                                   </h3>\r\n                                </div>\r\n\r\n                                <div className='brandDetailContainer__imageGallary'>\r\n                                    <div className='imgGallaryContainer'>\r\n\r\n                                        <div className=\"imgGallary-row\">\r\n                                            {row && Object.keys(row).map(column => {\r\n                                                return (\r\n                                                    <div className=\"imgGallary-column\">\r\n                                                        {row[column] && row[column].map(img => {\r\n                                                            return <img \r\n                                                            alt='..'\r\n                                                            src={img} style={{\r\n                                                                width: '100%'\r\n                                                            }} />\r\n                                                        })}\r\n\r\n                                                    </div>\r\n                                                )\r\n                                            })}\r\n\r\n\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                </div>\r\n\r\n                                <div style={{\r\n                                    marginBottom: \"25px\"\r\n                                }}></div>\r\n                            </>\r\n                        )}\r\n\r\n\r\n                        {categoryDetail['subCategory'] && categoryDetail['subCategory'].length > 0 && (\r\n                            <>\r\n                                <div className='brandDetailContainer__heading'>\r\n                                    <h3>\r\n                                        Child Categories\r\n                                   </h3>\r\n                                </div>\r\n\r\n                                <div className='smallcatCardContainer'>\r\n                                    {categoryDetail['subCategory'].map(subCat => {\r\n                                        return (\r\n                                            <div\r\n                                                onClick={() => history.push(`/admin/category/${subCat.id}`)}\r\n                                                className='smallcatCardContainer__card'>\r\n                                                <div className='smallcatCardContainer__card-coverbox'>\r\n                                                    <img src={subCat.cover} alt=\"\" />\r\n                                                </div>\r\n                                                <div className='smallcatCardContainer__card-info'>\r\n                                                    <h3>\r\n                                                        {subCat.name}\r\n                                                    </h3>\r\n                                                </div>\r\n                                            </div>\r\n                                        )\r\n                                    })}\r\n\r\n                                </div>\r\n\r\n                                <div style={{\r\n                                    marginBottom: \"25px\"\r\n                                }}></div>\r\n                            </>\r\n                        )}\r\n\r\n\r\n                    </>\r\n\r\n                )}\r\n\r\n            </Skeleton>\r\n\r\n            <div className='brandDetailContainer__heading'>\r\n                <h3>\r\n                    Products\r\n                </h3>\r\n            </div>\r\n            <div className='brandDetailContainer__body'>\r\n                {categoryProductsState.isLoading && <DataTableSkeleton />}\r\n                {categoryProductsState.done && !(categoryProductsState.data.length > 0) && (\r\n                    <div style={{\r\n                        marginTop: '100px'\r\n                    }}>\r\n                        <Empty description='No Products exists in this category' image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n                    </div>\r\n                )}\r\n\r\n                {categoryProductsState.done && categoryProductsState.data && categoryProductsState.data.length > 0 && (\r\n                    <>\r\n                        <Table\r\n                            style={{\r\n                                paddingTop: '10px',\r\n                                borderRadius: '5px !important',\r\n                                overflow: 'hidden',\r\n                                boxShadow: '0 0.125rem 0.625rem rgba(227, 231, 250, 0.3), 0 0.0625rem 0.125rem rgba(206, 220, 233, 0.4)'\r\n                            }}\r\n\r\n                            size='small'\r\n                            dataSource={categoryProductsState.data}\r\n                            tableLayout={'auto'}\r\n                            onHeaderRow={column => {\r\n                                return {\r\n                                    style: {\r\n                                        color: 'red !important'\r\n                                    }\r\n\r\n                                };\r\n                            }}\r\n                        >\r\n                            <Column\r\n                                title=\"\"\r\n                                dataIndex=\"cover\"\r\n                                key=\"id\"\r\n                                width={'80px'}\r\n\r\n                                className='classnameofthecolumn'\r\n\r\n                                render={(cover, record: any) => (\r\n                                    <>\r\n                                        <img\r\n                                            onClick={() => {\r\n                                                history.push(`/admin/product/${record.id}`)\r\n                                                // go to product detail\r\n                                            }}\r\n                                            src={cover} alt='cover img' style={{\r\n                                                height: '40px',\r\n                                                width: '40px',\r\n                                                objectFit: \"contain\",\r\n                                                borderRadius: '3px',\r\n                                                cursor: 'pointer'\r\n                                            }} />\r\n\r\n\r\n\r\n\r\n                                    </>\r\n                                )}\r\n                            />\r\n\r\n                            <Column\r\n                                title=\"Name\"\r\n                                dataIndex=\"name\"\r\n                                key=\"id\"\r\n                                className='classnameofthecolumn'\r\n                                render={(text, record: any) => (\r\n                                    <>\r\n                                        <h4\r\n                                            onClick={() => {\r\n                                                history.push(`/admin/product/${record.id}`)\r\n                                            }}\r\n                                            style={{\r\n                                                fontWeight: 400,\r\n                                                color: '#555',\r\n                                                cursor: 'pointer'\r\n\r\n                                            }}>\r\n                                            {text}\r\n                                        </h4>\r\n\r\n\r\n                                    </>\r\n                                )}\r\n\r\n                            />\r\n\r\n                            <Column\r\n                                title=\"Offer Price\"\r\n                                dataIndex=\"offerPrice\"\r\n                                key=\"id\"\r\n                                className='classnameofthecolumn'\r\n\r\n                            />\r\n\r\n\r\n                            <Column\r\n                                title=\"Price\"\r\n                                dataIndex=\"price\"\r\n                                key=\"id\"\r\n                                className='classnameofthecolumn'\r\n\r\n                            />\r\n\r\n<Column\r\n                                title=\"Available\"\r\n                                dataIndex=\"available\"\r\n                                key=\"id\"\r\n                                className='classnameofthecolumn'\r\n\r\n                            />\r\n\r\n\r\n                            <Column\r\n                                title=\"Minimum\"\r\n                                dataIndex=\"minimum\"\r\n                                key=\"id\"\r\n                                className='classnameofthecolumn'\r\n\r\n                            />\r\n\r\n\r\n                        </Table>\r\n                    </>\r\n                )}\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NewBrandDetail\r\n","import React from 'react';\r\nimport { Form, Input } from 'antd';\r\n\r\n\r\ninterface Props {\r\n    label?: string;\r\n    type?: string;\r\n    defaultValue?:string;\r\n    value?: string; \r\n    onChange?: any; \r\n    disabled?: boolean; \r\n    isError?: boolean; \r\n    errorString?: string; \r\n    name?:string;\r\n    size?: any; \r\n}\r\n\r\nconst Demo = ({ label, type, defaultValue, value, onChange, disabled, isError, errorString,  name, size='middle'}: Props) => {\r\n    return (\r\n        <>\r\n        {label && <h3 className='inputFieldLabel-small'>\r\n                {label}\r\n            </h3>}\r\n           \r\n            <Form.Item\r\n            validateStatus={isError ? \"error\" : \"\"}\r\n            // hasFeedback validateStatus=\"success\"\r\n            help={errorString}\r\n            // rules={[{ required: true }]}\r\n                >\r\n                     <Input\r\n                    type={type}\r\n                    size={size}\r\n                    allowClear \r\n                    name={name}\r\n                    disabled={disabled}\r\n                    value={value}\r\n                    onChange={onChange}\r\n                    className='inputclassName-small' />\r\n               \r\n            </Form.Item>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Demo; ","import React from 'react';\r\nimport { notification } from 'antd';\r\n\r\nimport {\r\n    CheckCircleOutlined,\r\n    ExclamationCircleOutlined\r\n} from '@ant-design/icons';\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Succeed',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n    notification.error({\r\n        message: message || 'Something Went Wrong',\r\n        description: '',\r\n        icon: <ExclamationCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n    });\r\n};\r\n\r\n\r\nexport {\r\n    openSuccessNotification,\r\n    openErrorNotification\r\n}","import React, { useEffect, useState } from 'react';\r\n\r\n\r\n// import hooks\r\nimport { useHandleFetch } from '../../hooks';\r\n\r\n// import components \r\nimport Empty from \"../../components/Empty\";\r\n\r\n\r\n// import libraries \r\nimport { Button, Tag, Input, Spin } from 'antd';\r\nimport {\r\n  PlusOutlined\r\n} from '@ant-design/icons';\r\n\r\n\r\n\r\n\r\nconst { CheckableTag } = Tag;\r\nconst { Search } = Input;\r\n\r\ninterface Props {\r\n  setTagIds?: any;\r\n  selectedTags?: any;\r\n  setSelectedTags?: any;\r\n}\r\n\r\n\r\nconst Tags = ({\r\n  setTagIds,\r\n  setSelectedTags,\r\n  selectedTags\r\n\r\n}: Props) => {\r\n  const [options, setoptions] = useState([]);\r\n  const [selectedOpions, setselectedOptions] = useState([]);\r\n  const [tagState, handleTagListFetch] = useHandleFetch({}, 'tagList');\r\n  const [searchValue, setsearchValue] = useState('');\r\n\r\n\r\n  const handleChange = (tag, checked) => {\r\n    const nextSelectedTags = checked ? [...selectedTags, tag] : selectedTags.filter(t => t !== tag);\r\n    setSelectedTags(nextSelectedTags);\r\n\r\n    if (tagState.done && tagState.data.length > 0 && nextSelectedTags.length > 0) {\r\n      const selectedCategoryIds = nextSelectedTags.map((item) => {\r\n        const selectedcategory = tagState.data.find(\r\n          (cat) => cat.name.toLowerCase() === item.toLowerCase()\r\n        );\r\n        if (selectedcategory) {\r\n          return selectedcategory.id;\r\n        }\r\n      });\r\n      setTagIds(selectedCategoryIds);\r\n    }\r\n  }\r\n\r\n\r\n  useEffect(() => {\r\n    if (tagState.done && tagState.data.length > 0 && selectedTags.length > 0) {\r\n      const selectedCategoryIds = selectedTags.map((item) => {\r\n        const selectedcategory = tagState.data.find(\r\n          (cat) => cat.id === item\r\n        );\r\n        if (selectedcategory) {\r\n          return selectedcategory.name;\r\n        }\r\n      });\r\n      setSelectedTags(selectedCategoryIds);\r\n    }\r\n  }, [tagState]);\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    const setTags = async () => {\r\n      const tagListRes = await handleTagListFetch({\r\n        urlOptions: {\r\n          params: {\r\n            isSubCategory: false\r\n          }\r\n        }\r\n      });\r\n\r\n      // @ts-ignoref\r\n      if (tagListRes && tagListRes.length > 0) {\r\n        // @ts-ignore\r\n        const tagOptions = tagListRes.map((tag) => {\r\n          return tag.name\r\n        });\r\n        setoptions(tagOptions);\r\n      }\r\n\r\n    };\r\n\r\n    setTags();\r\n  }, []);\r\n\r\n\r\n\r\n  // const handleChange = (selectItems) => {\r\n  //   setselectedOptions(selectItems)\r\n\r\n  //   if (tagState.done && tagState.data.length > 0 && selectItems.length > 0) {\r\n  //     const selectedCategoryIds = selectItems.map((item) => {\r\n  //       const selectedcategory = tagState.data.find(\r\n  //         (cat) => cat.name.toLowerCase() === item.toLowerCase()\r\n  //       );\r\n  //       if (selectedcategory) {\r\n  //         return selectedcategory.id;\r\n  //       }\r\n  //     });\r\n  //     setTagIds(selectedCategoryIds);\r\n  //   }\r\n\r\n\r\n  // }\r\n\r\n\r\n  const onSearchChange = (e) => {\r\n    setsearchValue(e.target.value);\r\n\r\n    if (e.target.value === '') {\r\n      if (tagState.data && tagState.data.length > 0) {\r\n        // @ts-ignore\r\n        const categoryNames = tagState.data.map((cat) => cat.name);\r\n        setoptions(categoryNames);\r\n      }\r\n    } else {\r\n      const newOptions =\r\n        options.length > 0\r\n          ? options.filter((option) => {\r\n            return option.toLowerCase().includes(searchValue.toLowerCase());\r\n          })\r\n          : [];\r\n\r\n      setoptions(newOptions);\r\n    }\r\n  };\r\n\r\n\r\n  console.log('selectedTags', selectedTags)\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n\r\n      {tagState.isLoading && (\r\n        <div style={{\r\n          padding: '15px 0',\r\n          width: '100%',\r\n          height: \"100%\",\r\n          display: \"flex\",\r\n          justifyContent: 'center',\r\n          alignItems: 'center'\r\n        }}>\r\n          <Spin />\r\n        </div>\r\n      )}\r\n\r\n\r\n\r\n      {tagState.done && !(tagState.data.length > 0) && (\r\n        <div style={{\r\n          width: '100%',\r\n          height: \"100%\",\r\n          display: \"flex\",\r\n          justifyContent: 'center',\r\n          alignItems: 'center'\r\n        }}>\r\n          <Empty title='No Tag found' height={100} />\r\n        </div>\r\n      )}\r\n\r\n\r\n      {/* \r\n      {tagState.done && tagState.data.length > 0 && options.length > 0 && <Select\r\n        mode=\"multiple\"\r\n        placeholder=\"search tags\"\r\n        value={selectedOpions}\r\n        onChange={handleChange}\r\n        style={{ width: '100%' }}\r\n      >\r\n        {options.filter(o => !selectedOpions.includes(o)).map(item => (\r\n          <Select.Option key={item} value={item}>\r\n            {item}\r\n          </Select.Option>\r\n        ))}\r\n      </Select>} */}\r\n\r\n      {tagState.done && tagState.data.length > 0 && options.length > 0 && (\r\n        <>\r\n          <div className='addProduct__categoryBoxContainer-searchBox'>\r\n            <Search\r\n              width={'90%'}\r\n              style={{\r\n                height: '30px',\r\n                borderRadius: '3px !important',\r\n                borderColor: '#eee !important'\r\n              }}\r\n              size='middle'\r\n              placeholder='top, hot'\r\n              onSearch={(value) => console.log(value)}\r\n              onChange={onSearchChange}\r\n            />\r\n          </div>\r\n\r\n          {options.map(tag => (\r\n            <>\r\n              <CheckableTag\r\n                key={tag}\r\n                checked={selectedTags.indexOf(tag) > -1}\r\n                onChange={checked => handleChange(tag, checked)}\r\n              >\r\n                {tag}\r\n              </CheckableTag>\r\n            </>\r\n          ))}\r\n        </>\r\n      )}\r\n\r\n\r\n\r\n\r\n      {/* \r\n      <div style={{\r\n        marginTop: '15px'\r\n      }}>\r\n\r\n      </div>\r\n      <Button\r\n\r\n        // type=\"primary\"\r\n        className='btnSecondaryPlusOutline'\r\n        icon={<PlusOutlined />}\r\n      >\r\n        Add New\r\n      </Button> */}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Tags\r\n","import React, { useEffect, useState } from 'react';\r\n\r\n\r\n// import hooks\r\nimport { useHandleFetch } from '../../hooks';\r\n\r\n// import components \r\nimport Empty from \"../../components/Empty\";\r\n\r\n\r\n// import libraries \r\nimport { Select, Button, Spin } from 'antd';\r\nimport {\r\n\tPlusOutlined\r\n} from '@ant-design/icons';\r\n\r\n\r\ninterface Props {\r\n\tsetBrandId?: any;\r\n\tbrandId?: any;\r\n\tproductDetailState?: any;\r\n}\r\n\r\nconst { Option } = Select;\r\n\r\nconst Brands = ({ setBrandId, brandId, productDetailState }: Props) => {\r\n\tconst [options, setoptions] = useState([]);\r\n\tconst [selectedBrandId, setSelectedBrandId] = useState('');\r\n\tconst [brandState, handleTagListFetch] = useHandleFetch({}, 'brandList');\r\n\r\n\tfunction onChange(value) {\r\n\t\tsetSelectedBrandId(value);\r\n\t\tsetBrandId(value);\r\n\t\t// console.log(`selected ${value}`);\r\n\t}\r\n\r\n\tfunction onBlur() {\r\n\t\t// console.log('blur');\r\n\t}\r\n\r\n\tfunction onFocus() {\r\n\t\t// console.log('focus');\r\n\t}\r\n\r\n\tfunction onSearch(val) {\r\n\t\t// console.log('search:', val);\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tconst setBrands = async () => {\r\n\t\t\tconst brandListRes = await handleTagListFetch({});\r\n\r\n\t\t\t// @ts-ignore\r\n\t\t\tif (brandListRes && brandListRes.length > 0) {\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\tconst brandOptions = brandListRes.map((brand) => {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tvalue: brand.id,\r\n\t\t\t\t\t\tname: brand.name\r\n\t\t\t\t\t};\r\n\t\t\t\t});\r\n\t\t\t\tsetoptions(brandOptions);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tsetBrands();\r\n\t}, []);\r\n\r\n\treturn (\r\n\t\t<>\r\n\r\n\t\t\t<div></div>\r\n\r\n\t\t\t{brandState.isLoading && (\r\n\t\t\t\t<div style={{\r\n\t\t\t\t\tpadding: '15px 0',\r\n\t\t\t\t\twidth: '100%',\r\n\t\t\t\t\theight: \"100%\",\r\n\t\t\t\t\tdisplay: \"flex\",\r\n\t\t\t\t\tjustifyContent: 'center',\r\n\t\t\t\t\talignItems: 'center'\r\n\t\t\t\t}}>\r\n\t\t\t\t\t<Spin />\r\n\t\t\t\t</div>\r\n\t\t\t)}\r\n\r\n\r\n\r\n\t\t\t{brandState.done && !(brandState.data.length > 0) && (\r\n\t\t\t\t<div style={{\r\n\t\t\t\t\twidth: '100%',\r\n\t\t\t\t\theight: \"100%\",\r\n\t\t\t\t\tdisplay: \"flex\",\r\n\t\t\t\t\tjustifyContent: 'center',\r\n\t\t\t\t\talignItems: 'center'\r\n\t\t\t\t}}>\r\n\t\t\t\t\t<Empty title='No Brand found' height={100} />\r\n\t\t\t\t</div>\r\n\t\t\t)}\r\n\r\n\r\n\t\t\t{brandState.done && brandState.data && brandState.data.length > 0 && options.length > 0 && (\r\n\r\n\t\t\t\t<Select\r\n\t\t\t\t\tshowSearch\r\n\t\t\t\t\tstyle={{ width: '210px', borderRadius: '6px' }}\r\n\t\t\t\t\tplaceholder='Select a Brand'\r\n\t\t\t\t\toptionFilterProp='children'\r\n\t\t\t\t\tonChange={onChange}\r\n\t\t\t\t\tonFocus={onFocus}\r\n\t\t\t\t\tonBlur={onBlur}\r\n\t\t\t\t\tonSearch={onSearch}\r\n\t\t\t\t\tdefaultValue={brandId}\r\n\t\t\t\t\tfilterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n\t\t\t\t>\r\n\t\t\t\t\t{brandState.done &&\r\n\t\t\t\t\t\tbrandState.data.length > 0 &&\r\n\t\t\t\t\t\toptions.map((option) => {\r\n\t\t\t\t\t\t\treturn <Option value={option.value}>{option.name}</Option>;\r\n\t\t\t\t\t\t})}\r\n\t\t\t\t</Select>\r\n\t\t\t)}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\t\t\t{/* \r\n\t\t\t<div style={{\r\n\t\t\t\tmarginTop: '15px'\r\n\t\t\t}}>\r\n\r\n\t\t\t</div>\r\n\t\t\t<Button\r\n\r\n\t\t\t\t// type=\"primary\"\r\n\t\t\t\tclassName='btnSecondaryPlusOutline'\r\n\t\t\t\ticon={<PlusOutlined />}\r\n\t\t\t>\r\n\t\t\t\tAdd New\r\n      </Button> */}\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default Brands;\r\n","import React, { useState, useEffect } from 'react';\r\n\r\n// import components \r\nimport Empty from \"../../components/Empty\";\r\n\r\n// import hoooks\r\nimport { useHandleFetch } from '../../hooks';\r\n\r\n\r\n// import libraries \r\nimport { Input, Tree, Button, Spin } from 'antd';\r\nimport {\r\n\tPlusOutlined\r\n} from '@ant-design/icons';\r\n\r\n\r\n\r\n\r\nconst { Search } = Input;\r\n\r\n\r\n\r\ninterface Props {\r\n\tsetcategoryIds?: any;\r\n\tcategoryOptions?: any;\r\n\tsetCategoryOptions?: any;\r\n}\r\n\r\n\r\nconst Categories = ({ setcategoryIds, categoryOptions, setCategoryOptions }: Props) => {\r\n\tconst [options, setoptions] = useState([]);\r\n\tconst [searchValue, setsearchValue] = useState('');\r\n\r\n\tconst [categoryState, handleCategoryListFetch] = useHandleFetch({}, 'categorySelectist');\r\n\r\n\tuseEffect(() => {\r\n\t\tconst setCategories = async () => {\r\n\t\t\tconst categoryListRes = await handleCategoryListFetch({});\r\n\r\n\t\t\t// @ts-ignore\r\n\t\t\tif (categoryListRes && categoryListRes.length > 0) {\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\tsetoptions(categoryListRes);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tsetCategories();\r\n\t}, []);\r\n\r\n\tconst onSelect = (selectedKeys, info) => {\r\n\t\t// console.log('selectedKeys', selectedKeys, info);\r\n\t};\r\n\r\n\r\n\tconst onCheck = (checkedKeys, info) => {\r\n\t\tconst checkedIds = checkedKeys.checked || [];\r\n\t\tsetcategoryIds(checkedIds);\r\n\t\tsetCategoryOptions(checkedIds);\r\n\t};\r\n\r\n\tconst onSearchChange = (e) => {\r\n\t\tsetsearchValue(e.target.value);\r\n\r\n\t\tif (e.target.value === '') {\r\n\t\t\tif (categoryState.data && categoryState.data.length > 0) {\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\tconst categoryNames = categoryState.data.map((cat) => {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\t...cat\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t\tsetoptions(categoryNames);\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tconst newOptions =\r\n\t\t\t\toptions.length > 0\r\n\t\t\t\t\t? options.filter((option) => {\r\n\t\t\t\t\t\treturn option && option.title.toLowerCase().includes(searchValue.toLowerCase());\r\n\t\t\t\t\t})\r\n\t\t\t\t\t: [];\r\n\r\n\t\t\tsetoptions(newOptions);\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className='addProduct__categoryBoxContainer'>\r\n\r\n\t\t\t{categoryState.isLoading && (\r\n\t\t\t\t<div style={{\r\n\t\t\t\t\tpadding: '15px 0',\r\n\t\t\t\t\twidth: '100%',\r\n\t\t\t\t\theight: \"100%\",\r\n\t\t\t\t\tdisplay: \"flex\",\r\n\t\t\t\t\tjustifyContent: 'center',\r\n\t\t\t\t\talignItems: 'center'\r\n\t\t\t\t}}>\r\n\t\t\t\t\t<Spin />\r\n\t\t\t\t</div>\r\n\t\t\t)}\r\n\r\n\r\n\t\t\t{categoryState.done && !(categoryState.data.length > 0) && (\r\n\t\t\t\t<div style={{\r\n\t\t\t\t\twidth: '100%',\r\n\t\t\t\t\theight: \"100%\",\r\n\t\t\t\t\tdisplay: \"flex\",\r\n\t\t\t\t\tjustifyContent: 'center',\r\n\t\t\t\t\talignItems: 'center'\r\n\t\t\t\t}}>\r\n\t\t\t\t\t<Empty title='No category found' height={100} />\r\n\t\t\t\t</div>\r\n\t\t\t)}\r\n\r\n\t\t\t{categoryState.done && categoryState.data.length > 0 && options.length > 0 && (\r\n\t\t\t\t<>\r\n\t\t\t\t\t<div className='addProduct__categoryBoxContainer-searchBox'>\r\n\t\t\t\t\t\t<Search\r\n\t\t\t\t\t\t\twidth={'100%'}\r\n\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\theight: '30px',\r\n\t\t\t\t\t\t\t\tborderRadius: '3px !important',\r\n\t\t\t\t\t\t\t\tborderColor: '#eee !important'\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\tsize='middle'\r\n\t\t\t\t\t\t\tplaceholder='cloths, grocery'\r\n\t\t\t\t\t\t\tonSearch={(value) => console.log(value)}\r\n\t\t\t\t\t\t\tonChange={onSearchChange}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t// marginLeft: \"-20px\",\r\n\t\t\t\t\t}}>\r\n\t\t\t\t\t\t{options.length > 0 && (\r\n\t\t\t\t\t\t\t<Tree\r\n\t\t\t\t\t\t\t\tcheckable\r\n\t\t\t\t\t\t\t\tcheckedKeys={categoryOptions}\r\n\t\t\t\t\t\t\t\tonSelect={onSelect}\r\n\t\t\t\t\t\t\t\tonCheck={onCheck}\r\n\t\t\t\t\t\t\t\ttreeData={options}\r\n\t\t\t\t\t\t\t\tdefaultExpandAll={true}\r\n\t\t\t\t\t\t\t\tcheckStrictly={true}\r\n\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</>\r\n\r\n\t\t\t)}\r\n\t\t\t{/* <div style={{\r\n\t\t\t\tmarginTop: '15px'\r\n\t\t\t}}>\r\n\r\n\t\t\t</div>\r\n\t\t\t<Button\r\n\r\n\t\t\t\t// type=\"primary\"\r\n\t\t\t\tclassName='btnSecondaryPlusOutline'\r\n\t\t\t\ticon={<PlusOutlined />}\r\n\t\t\t>\r\n\t\t\t\tAdd New\r\n      </Button> */}\r\n\r\n\t\t\t{/* <CheckboxGroup options={options} value={checkedList} onChange={onChange} /> */}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Categories;\r\n","import React, { useState, useEffect } from 'react';\r\n\r\n// import hooks \r\nimport { useHandleFetch } from '../../hooks';\r\n\r\n\r\n// import libraries \r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { message, Tooltip, Modal, Tabs, Spin  } from 'antd';\r\nimport CKEditor from '@ckeditor/ckeditor5-react';\r\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\r\n\r\n\r\nimport {\r\n    CheckCircleOutlined,\r\n    FileImageFilled,\r\n    PlusOutlined,\r\n    CloseOutlined,\r\n    CheckOutlined,\r\n    InfoCircleOutlined\r\n} from '@ant-design/icons';\r\n\r\n\r\n\r\n// import ReactQuill from 'react-quill';\r\n// import 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport InputSmall from '../../components/Field/InputSmall';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport MediaLibrary from \"../../components/MediaLibrary\";\r\nimport DatePicker from \"../../components/Field/DatePicker\";\r\nimport { openSuccessNotification, openErrorNotification } from \"../../components/Notification\";\r\nimport Tags from \"../product/Tags\";\r\nimport Brands from \"../product/Brands\";\r\nimport Categories from \"../product/Categories\";\r\nimport Pricing from \"../product/Pricing\";\r\nimport SelectProducts from \"./SelectProducts\";\r\nimport SelectedProductItems from \"./SelectedProductItems\";\r\nimport MetaTags from \"../category/MetaTags\";\r\n\r\nconst { TabPane } = Tabs;\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    name: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\n\r\nconst initialValues = {\r\n    name: \"\",\r\n    bundlePrice: null,\r\n    startDate: \"\",\r\n    endDate: \"\",\r\n    description: '',\r\n    bnName: '',\r\n\tbnDescription: '',\r\n\tmetaTitle: '',\r\n\tbnMetaTitle: '',\r\n\tmetaDescription: '',\r\n\tbnMetaDescription: '',\r\n\tmetaTags: '',\r\n\tbnMetaTags: '',\r\n}\r\n\r\n\r\n\r\ninterface Props {\r\n    addNewCategoryVisible: any;\r\n    setAddNewCategoryVisible: any;\r\n    productList?: any;\r\n    setProductList?: any;\r\n    productDetailData?:any; \r\n}\r\n\r\nconst AddNewProduct = ({ addNewCategoryVisible, setAddNewCategoryVisible, productList: bundleList, setProductList: setBundleList, productDetailData }: Props) => {\r\n\r\n  \r\n\r\n    const [updateProductState, handleUpdateProductFetch] = useHandleFetch({}, 'updateProduct');\r\n    const [productDetailState, handleProductDetailFetch] = useHandleFetch({}, 'bundleDetail');\r\n    const [attachImageToItemMultipleState, handleAttachImageToItemMultipleFetch] = useHandleFetch({}, 'attachImageToItemMultiple');\r\n    const [attachImageToItemSingleState, handleAttachImageToItemSingleFetch] = useHandleFetch({}, 'attachImageToItemSingle');\r\n    const [detachImageFromItemMultipleState, handleDetachImageFromItemMultipleFetch] = useHandleFetch({}, 'detachImageFromItemMultiple');\r\n    const [detachImageFromItemSingleState, handleDetachImageFromItemSingleFetch] = useHandleFetch({}, 'detachImageFromItemSingle');\r\n    const [setImageAsThumbnailToItemState, handleSetImageAsThumbnailToItemFetch] = useHandleFetch({}, 'setImageAsThumbnailToItem');\r\n\r\n\r\n    const [productList,setProductList] = useState([]);\r\n    const [visible, setvisible] = useState(false);\r\n    const [myImages, setmyImages] = useState(false);\r\n    const [myThumbnailImage, setmyThumbnailImage] = useState(false);\r\n    const [isModalOpenForThumbnail, setisModalOpenForThumbnail] = useState(false);\r\n    const [isModalOpenForImages, setisModalOpenForImages] = useState(false);\r\n    const [categoryids, setcategoryIds] = useState([]);\r\n    const [tagIds, setTagIds] = useState([]);\r\n    const [brandId, setBrandId] = useState('');\r\n    const [pricing, setPricing] = useState([]);\r\n    const [coverImageId, setCoverImageId] = useState('');\r\n    const [categoryOptions, setCategoryOptions] = useState([]);\r\n    const [selectedTags, setSelectedTags] = useState([]);\r\n    const [date, setDateFeild] = useState('');\r\n    const [time, setTimeFeild] = useState('');\r\n    const [description, setDescription] = useState('');\r\n\tconst [bnDescription, setBNDescription] = useState('');\r\n\tconst [metaTags,setMetaTags] = useState([]);\r\n\tconst [bnMetaTags,setBnMetaTags] = useState([]);\r\n\tconst [editpricingItem,setEditPricingItem] = useState({}); \r\n\tconst [pricingTagActiveKey,setpricingTagActiveKey] = useState('2');\r\n\tconst [isPricingEditActive, seTisPricingEditActive] = useState(false); \r\n\r\n    const [productIds,setProductIds] = useState([]); \r\n\r\n\r\n\r\n    const [addProductState, handleAddProductFetch] = useHandleFetch({}, 'updateBundle');\r\n\r\n    useEffect(() => {\r\n        const getProductDetail = async () => {\r\n            await handleProductDetailFetch({\r\n                urlOptions: {\r\n                    placeHolders: {\r\n                        id: productDetailData.id\r\n                    }\r\n                }\r\n            })\r\n        };\r\n\r\n        getProductDetail();\r\n\r\n    }, [productDetailData]);\r\n\r\n\r\n    const [price, setPrice] = useState({\r\n        regular: null,\r\n        offer: null,\r\n    });\r\n\r\n\r\n\r\n\r\n    const handleSubmit = async (values: any, actions: any) => {\r\n        // @ts-ignore\r\n        const imagesIds = myImages ? myImages.map(image => {\r\n            return image.id;\r\n        }) : [];\r\n\r\n        console.log('productList',productList);\r\n\r\n        const products = productList.length > 0 ? productList.map(product => {\r\n            return {\r\n                _id: product._id,\r\n                variation: product.variation,\r\n                quantity: product.quantity,\r\n            }\r\n        }) : [];\r\n\r\n    \r\n            if (productDetailData && Object.keys(productDetailData).length > 0) {\r\n                const aboutToUpdatedImageIds = []; \r\n    \r\n                if(imagesIds && imagesIds.length > 0){\r\n                    imagesIds.forEach(imageId => {\r\n                        if(productDetailData && productDetailData['image']){\r\n                            if(!productDetailData['image'].includes(imageId)){\r\n                                aboutToUpdatedImageIds.push(imageId)\r\n                            }\r\n                        }\r\n                    });\r\n                }\r\n    \r\n          \r\n                if (aboutToUpdatedImageIds[0] && aboutToUpdatedImageIds.length > 1) {\r\n                    await handleAttachImageToItemMultipleFetch({\r\n                        urlOptions: {\r\n                            placeHolders: {\r\n                                collection: 'product',\r\n                                itemId: productDetailData.id\r\n                            }\r\n                        },\r\n                        body: {\r\n                            image: aboutToUpdatedImageIds\r\n                        }\r\n                    });\r\n                }\r\n                else if (aboutToUpdatedImageIds[0] && aboutToUpdatedImageIds.length < 1) {\r\n                    await handleAttachImageToItemSingleFetch({\r\n                        urlOptions: {\r\n                            placeHolders: {\r\n                                imageId: aboutToUpdatedImageIds[0].id,\r\n                                collection: 'product',\r\n                                itemId: productDetailData.id\r\n                            }\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n        \r\n            \r\n\r\n\r\n\r\n        const addProductRes = await handleAddProductFetch({\r\n            urlOptions: {\r\n                placeHolders: {\r\n                    id: productDetailData.id\r\n                }\r\n            },\r\n            body: {\r\n                name: values.name.trim(),\r\n                category: categoryids,\r\n                tags: tagIds,\r\n                brand: brandId,\r\n                price: price,\r\n                description: description,\r\n                model: values.model,\r\n                unit: values.unit,\r\n                image: imagesIds,\r\n                products,\r\n\r\n                metaTitle: values.metaTitle,\r\n\t\t\t\tmetaDescription: values.metaDescription,\r\n\t\t\t\tmetaTags: metaTags.join(','),\r\n\r\n\t\t\t\t\r\n\t\t\t\tbn: {\r\n\t\t\t\t\tmetaTitle: values.bnMetaTitle,\r\n\t\t\t\t\tmetaDescription: values.bnMetaDescription,\r\n\t\t\t\t\tmetaTags: bnMetaTags.join(','),\r\n\t\t\t\t\tname: values.bnName.trim(),\r\n\t\t\t\t\tunit: values.metaUnit,\r\n\t\t\t\t\tdescription: values.bnDescription,\r\n                }\r\n                \r\n\r\n                // startDate, endDate,\r\n            }\r\n        });\r\n\r\n\r\n        // @ts-ignore\r\n        if (addProductRes && addProductRes.status === 'ok') {\r\n            openSuccessNotification('Bundle Updated');\r\n  \r\n\r\n            setAddNewCategoryVisible(false)\r\n\r\n\r\n            const positionInAttribute = () => {\r\n\t\t\t\treturn bundleList.map(item => item.id).indexOf(productDetailData.id);\r\n\t\t\t}\r\n\r\n\t\t\tconst index = positionInAttribute();\r\n\r\n\t\t\t// @ts-ignore\r\n\t\t\tconst updatedItem = Object.assign({}, bundleList[index], { ...productDetailData, ...addProductRes });\r\n\t\t\tconst updateProductList = [...bundleList.slice(0, index), updatedItem, ...bundleList.slice(index + 1)];\r\n            setBundleList(updateProductList);\r\n            \r\n\r\n\r\n\r\n\r\n            // @ts-ignore\r\n            setmyImages([]);\r\n            setCoverImageId('');\r\n            setPricing([]);\r\n            setTagIds([]);\r\n            setSelectedTags([]);\r\n            setBrandId(\"\");\r\n            setcategoryIds([]);\r\n            setCategoryOptions([]);\r\n            actions.resetForm();\r\n        }\r\n        else {\r\n            // openErrorNotification();\r\n        }\r\n\r\n        actions.setSubmitting(false);\r\n\r\n\r\n    };\r\n\r\n\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        if (!addProductState['isLoading']) {\r\n            const error = addProductState['error'];\r\n            if (error['isError'] && Object.keys(error['error']).length > 0) {\r\n\r\n\r\n                const errors =\r\n                    Object.values(error['error']).length > 0\r\n                        ? Object.values(error['error'])\r\n                        : [];\r\n                errors.forEach((err, i) => {\r\n                    if (typeof err === 'string') {\r\n                        openErrorNotification(err)\r\n                    }\r\n                    else if (typeof err === 'object') {\r\n                        if (err && Object.keys(err).length > 0) {\r\n                            const errs = Object.values(err);\r\n                            errs.forEach(err => {\r\n                                openErrorNotification(err)\r\n                            })\r\n\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n        }\r\n    }, [addProductState])\r\n\r\n\r\n\r\n    useEffect(()=>{\r\n        if(productDetailState['data'] && productDetailState['data']['products'] && productDetailState['data']['products'].length > 0){\r\n            const productIds = productDetailState['data']['products'].map(item => {\r\n              return {\r\n                ...item,\r\n                id: item._id,\r\n              }\r\n            }); \r\n            setProductIds(productIds); \r\n            const productList = productDetailState['data'].products.map(item => {\r\n                return {\r\n                    _id: item._id,\r\n                    variation: item.variation,\r\n                    quantity: item.quantity,\r\n                    totalPrice: item.totalPrice \r\n                }\r\n            }); \r\n           setProductList(productList); \r\n\r\n        }; \r\n        \r\n        console.log(\"productDetailState['data']\",productDetailState['data']);\r\n    },[productDetailState['done']])\r\n\r\n\r\n\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        if (productIds && productIds.length > 0 && productList) {\r\n            if (productIds.length > productList.length) {\r\n                const variation = productIds[productIds.length - 1]['pricing'] && productIds[productIds.length - 1]['pricing'].length > 0 && productIds[productIds.length - 1]['pricing'][0]['_id'];\r\n                console.log('variation', variation)\r\n\r\n                setProductList([...productList, {\r\n                    ...productIds[productIds.length - 1],\r\n                    _id: productIds[productIds.length - 1]['id'],\r\n                    variation: variation,\r\n                    quantity: 1\r\n                }]);\r\n            }\r\n\r\n\r\n            else if (productIds.length < productList.length) {\r\n                console.log('productIds', productIds);\r\n                console.log('productList', productList);\r\n\r\n                const newProductList = productList.filter(item => {\r\n                    let isTrue = false;\r\n                    productIds.forEach(product => {\r\n                        if (product.id === item._id) {\r\n                            isTrue = true;\r\n                        }\r\n                    });\r\n                    return isTrue;\r\n                })\r\n                setProductList(newProductList);\r\n            }\r\n\r\n        }\r\n        else {\r\n            setProductList([]);\r\n        }\r\n        // console.log('productIds', productIds)\r\n\r\n    }, [productIds])\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        if (productDetailData && productDetailData.brand) {\r\n            setBrandId(productDetailData.brand['id']);\r\n        }\r\n        else {\r\n            setBrandId('');\r\n        }\r\n        if (productDetailData && productDetailData.tags && productDetailData.tags.length > 0) {\r\n            // const tagIds = productDetailData.tags.map(item => item.id);\r\n            setSelectedTags(productDetailData.tags);\r\n        }\r\n        else {\r\n            setSelectedTags([]);\r\n\r\n        }\r\n        if (productDetailData && productDetailData.category && productDetailData.category.length > 0) {\r\n            // const categoryIds = productDetailData.category.map(item => item.id);\r\n\r\n            const categoryIds = productDetailData.category;\r\n            setCategoryOptions(categoryIds);\r\n            setcategoryIds(categoryIds); \r\n        }\r\n        else {\r\n            setCategoryOptions([]);\r\n        }\r\n\r\n        if (productDetailData && productDetailData.anotherPrice && productDetailData.anotherPrice) {\r\n            setPrice(productDetailData.anotherPrice); \r\n        }\r\n        else {\r\n            setPricing([]);\r\n\r\n        }\r\n\r\n\r\n        if (productDetailData && productDetailData.date && productDetailData.date) {\r\n            setDateFeild(productDetailData.date)\r\n        }\r\n        else {\r\n            setDateFeild('');\r\n\r\n        }\r\n\r\n        if (productDetailData && productDetailData.time && productDetailData.time) {\r\n            setTimeFeild(productDetailData.time);\r\n        }\r\n        else {\r\n            setTimeFeild('');\r\n        }\r\n\r\n\r\n\r\n    }, [productDetailData]);\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        if (productDetailState.done && Object.keys(productDetailState).length > 0) {\r\n\r\n            const images = productDetailState.data.image;\r\n            if (images && images.length > 0) {\r\n                setmyImages(images);\r\n            }\r\n\r\n            if (productDetailState.data.cover && productDetailState.data.cover['id']) {\r\n                // @ts-ignore\r\n                setmyImages([productDetailState.data.cover, ...images]);\r\n                console.log('catcat', [productDetailState.data.cover, ...images]);\r\n                setCoverImageId(productDetailState.data.cover['id']);\r\n            }\r\n        }\r\n    }, [productDetailState])\r\n\r\n\r\n    useEffect(() => {\r\n        console.log('thumnail', myImages);\r\n        // @ts-ignore\r\n        if (myImages && myImages[0] && myImages.length < 2) {\r\n            console.log('thumnail2', myImages);\r\n\r\n            if (coverImageId !== myImages[0].id) {\r\n                setCoverImageId(myImages[0].id);\r\n                handleSetImageAsThumnail(myImages[0]);\r\n            }\r\n\r\n        }\r\n\r\n    }, [myImages])\r\n\r\n\r\n    const handleDetachSingleImage = async id => {\r\n        await handleDetachImageFromItemSingleFetch({\r\n            urlOptions: {\r\n                placeHolders: {\r\n                    imageId: id,\r\n                    collection: 'product',\r\n                    itemId: productDetailData.id\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n\r\n\r\n    const handleSetImageAsThumnail = async image => {\r\n\r\n        const thumbnailRes = await handleSetImageAsThumbnailToItemFetch({\r\n            urlOptions: {\r\n                placeHolders: {\r\n                    imageId: image.id,\r\n                    collection: 'product',\r\n                    itemId: productDetailData.id\r\n                }\r\n            }\r\n        });\r\n\r\n        console.log('thumbnailRes', thumbnailRes);\r\n\r\n        // @ts-ignore\r\n        if (thumbnailRes && thumbnailRes.status === 'ok') {\r\n            openSuccessNotification('Set as thumbnail!')\r\n            // const positionInBrand = () => {\r\n            //     return productList.map(item => item.id).indexOf(productDetailData.id);\r\n            // }\r\n\r\n            // const index = positionInBrand();\r\n\r\n            // const prevItem = productList.find(item => item.id === productDetailData.id);\r\n\r\n            // if (prevItem) {\r\n            //     console.log('prevItem--', prevItem, 'image--', image);\r\n            //     const updatedItem = Object.assign({}, productList[index], { ...prevItem, cover: image.cover });\r\n            //     const updateProductList = [...productList.slice(0, index), updatedItem, ...productList.slice(index + 1)];\r\n            //     setProductList(updateProductList);\r\n\r\n            // }\r\n        }\r\n        else {\r\n            openErrorNotification(\"Couldn't set as thumbnail, Something went wrong\")\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        if (!updateProductState['isLoading']) {\r\n            const error = updateProductState['error'];\r\n            if (error['isError'] && Object.keys(error['error']).length > 0) {\r\n\r\n\r\n                const errors =\r\n                    Object.values(error['error']).length > 0\r\n                        ? Object.values(error['error'])\r\n                        : [];\r\n                errors.forEach((err, i) => {\r\n                    if (typeof err === 'string') {\r\n                        openErrorNotification(err)\r\n                    }\r\n                    else if (typeof err === 'object') {\r\n                        if (err && Object.keys(err).length > 0) {\r\n                            const errs = Object.values(err);\r\n                            errs.forEach(err => {\r\n                                openErrorNotification(err)\r\n                            })\r\n\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n        }\r\n    }, [updateProductState])\r\n\r\n\r\n    const handleCancel = (e: any) => {\r\n        setAddNewCategoryVisible(false);\r\n    };\r\n\r\n\r\n    const getisSubmitButtonDisabled = (values, isValid) => {\r\n        if (!values.name || !(pricing.length > 0) || !(categoryOptions.length > 0) || !isValid) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n\r\n    const handleImagesDelete = (id) => {\r\n        // @ts-ignore\r\n        const newImages = myImages && myImages.filter(image => {\r\n            return image.id !== id;\r\n        })\r\n\r\n        setmyImages(newImages);\r\n    }\r\n\r\n    const handleDeleteFromSelectedImage = () => {\r\n\r\n    };\r\n\r\n    const handleThumbnailImageDelete = (id) => {\r\n        // @ts-ignore\r\n        const newImages = myThumbnailImage && myThumbnailImage.filter(image => {\r\n            return image.id !== id;\r\n        })\r\n\r\n        if (newImages.length > 0) {\r\n            setmyThumbnailImage(newImages);\r\n\r\n        }\r\n        else setmyThumbnailImage(false);\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    useEffect(()=>{\r\n\r\n        if(productDetailState.data && Object.keys(productDetailState.data).length > 0 && productDetailState.data.metaTags){\r\n            const metaTags = productDetailState.data.metaTags.split(','); \r\n\r\n            console.log('localMetaTags',metaTags);\r\n           \r\n            const bnMetaTags = productDetailState.data.bn['metaTags'].split(','); \r\n            setMetaTags(metaTags)\r\n            setBnMetaTags(bnMetaTags)\r\n        }\r\n\r\n    },[productDetailState['done']])\r\n\r\n\r\n\r\n\r\n    return (\r\n        <Formik\r\n            onSubmit={(values, actions) => handleSubmit(values, actions)}\r\n            validationSchema={validationSchema}\r\n            validateOnBlur={false}\r\n            enableReinitialize={true}\r\n            initialValues={\r\n                { ...initialValues,\r\n                    ...{\r\n                    ...productDetailData,\r\n                    ...( productDetailState['data'] && Object.keys(productDetailState['data']).length > 0 && productDetailState['data']['bn'] && {\r\n                        bnMetaTitle: productDetailState['data']['bn'].metaTitle,\r\n                        bnMetaDescription: productDetailState['data']['bn'].metaDescription,\r\n                        bnName: productDetailState['data']['bn'].name,\r\n                        metaUnit: productDetailState['data']['bn'].unit,\r\n                        bnDescription: productDetailState['data']['bn'].description,\r\n                      }),\r\n                } }\r\n            }\r\n        >\r\n            {({\r\n                handleChange,\r\n                values,\r\n                handleSubmit,\r\n                errors,\r\n                isValid,\r\n                isSubmitting,\r\n                touched,\r\n                handleBlur,\r\n                setFieldTouched,\r\n                handleReset,\r\n            }) => (\r\n                    <>\r\n                        <Modal\r\n                            style={{\r\n                                top: '40px',\r\n\r\n                            }}\r\n                            bodyStyle={{\r\n                                margin: 0,\r\n                                padding: 0,\r\n                            }}\r\n                            width={'70vw'}\r\n                            title=\"Add New Bundle\"\r\n                            visible={addNewCategoryVisible}\r\n                            onOk={(e: any) => handleSubmit(e)}\r\n                            onCancel={handleCancel}\r\n                            okText='Update'\r\n                            okButtonProps={{\r\n                                loading: isSubmitting,\r\n                                htmlType: \"submit\",\r\n                            }}\r\n                        >\r\n\r\n\r\n                            <section className='addProductGridContainer'>\r\n                                <div className='addProductGridContainer__left'>\r\n                                    <div className='addProductGridContainer__name'>\r\n                                        <div className='addProductGridContainer__item-header'>\r\n                                            <h3>\r\n                                                Bundle Information *\r\n\t\t\t                                </h3>\r\n\r\n                                            <div className={values.name && values.name.length > 2 ? 'checkicon-active' : 'checkicon'}>\r\n                                                <CheckCircleOutlined />\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className='addProductGridContainer__item-body'>\r\n                                        <Input\r\n\t\t\t\t\t\t\t\t\t\t\t\tlabel='Name'\r\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.name}\r\n\t\t\t\t\t\t\t\t\t\t\t\tplaceHolder={'Rafty ox'}\r\n\t\t\t\t\t\t\t\t\t\t\t\tname='name'\r\n\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['name'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['name'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('name');\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\tlabel='BN Name'\r\n\t\t\t\t\t\t\t\t\t\t\tvalue={values.bnName}\r\n\t\t\t\t\t\t\t\t\t\t\tplaceHolder={'রাফতি অক্স'}\r\n\t\t\t\t\t\t\t\t\t\t\tname='bnName'\r\n\t\t\t\t\t\t\t\t\t\t\tisError={(touched.bnName && errors.bnName) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['bnName'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.bnName && errors.bnName) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['bnName'])}\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('bnName');\r\n\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\r\n\r\n\r\n                                    \r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\t\t\t\t\t\tDescription\r\n                                             </h3>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\twidth: '100%',\r\n\t\t\t\t\t\t\t\t\t\t\t\tmaxWidth: '100%'\r\n\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<CKEditor\r\n\t\t\t\t\t\t\t\t\t\t\t\t\teditor={ClassicEditor}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tdata={description}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonInit={editor => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t// You can store the \"editor\" and use when it is needed.\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tconsole.log('Editor is ready to use!', editor);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(event, editor) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tconst data = editor.getData();\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetDescription(data);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonBlur={(event, editor) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tconsole.log('Blur.', editor);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonFocus={(event, editor) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tconsole.log('Focus.', editor);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tmarginTop:\"15px\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}></div>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\t\t\t\t\t\tBN Description\r\n                                             </h3>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\twidth: '100%',\r\n\t\t\t\t\t\t\t\t\t\t\t\tmaxWidth: '100%'\r\n\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<CKEditor\r\n\t\t\t\t\t\t\t\t\t\t\t\t\teditor={ClassicEditor}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tdata={bnDescription}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonInit={editor => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t// You can store the \"editor\" and use when it is needed.\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tconsole.log('Editor is ready to use!', editor);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(event, editor) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tconst data = editor.getData();\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetBNDescription(data);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonBlur={(event, editor) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tconsole.log('Blur.', editor);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonFocus={(event, editor) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tconsole.log('Focus.', editor);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n                                            {/* <div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\tdisplay: 'flex',\r\n\t\t\t\t\t\t\t\t\t\t\t\tjustifyContent: 'space-between'\r\n\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\twidth: '48%',\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<DatePicker\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabel='Date'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={handleDateChange} />\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\twidth: '48%'\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<DatePicker\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tdate={date}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\twithTime={true}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder='Select time'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabel='Time'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={handleTimeChange} />\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t</div> */}\r\n                                            <div style={{\r\n                                                marginBottom: '15px'\r\n                                            }}></div>\r\n                                            {/* \r\n\t\t\t\t\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\t\t\t\t\trows={1}\r\n\t\t\t\t\t\t\t\t\t\t\t\tlabel='Venue'\r\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.venue}\r\n\t\t\t\t\t\t\t\t\t\t\t\tname='venue'\r\n\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.venue && errors.venue) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['venue'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.venue && errors.venue) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['venue'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('venue');\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\t\tlabel='Purchase Limit'\r\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.purchaseLimit}\r\n\t\t\t\t\t\t\t\t\t\t\t\ttype='number'\r\n\t\t\t\t\t\t\t\t\t\t\t\tname='purchaseLimit'\r\n\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.purchaseLimit && errors.purchaseLimit) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['purchaseLimit'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.purchaseLimit && errors.purchaseLimit) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['purchaseLimit'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('purchaseLimit');\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t/> */}\r\n\r\n                                            <div className='addProductGridContainer__item-body-variationCard-item'>\r\n                                                <h4>\r\n                                                    Price *\r\n\t\t\t                                \t</h4>\r\n                                                <div className='addProductGridContainer__item-body-variationCard-item-container'>\r\n                                                    <div className='addProductGridContainer__item-body-variationCard-item-container-left'>\r\n                                                        <InputSmall\r\n                                                            label='Regular'\r\n                                                            value={price.regular}\r\n                                                            name='regular'\r\n                                                            onChange={(e) => setPrice({\r\n                                                                ...price,\r\n                                                                regular: e.target.value\r\n                                                            })}\r\n                                                        />\r\n\r\n\r\n                                                    </div>\r\n                                                    <div className='addProductGridContainer__item-body-variationCard-item-container-right'>\r\n\r\n                                                        <InputSmall\r\n                                                            label='Offer'\r\n                                                            value={price.offer}\r\n                                                            name='offer'\r\n                                                            onChange={(e) => setPrice({\r\n                                                                ...price,\r\n                                                                offer: e.target.value\r\n                                                            })}\r\n                                                        />\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n\r\n\r\n\r\n                                            {/* <div style={{\r\n                                                display: 'flex',\r\n                                                justifyContent: 'space-between'\r\n                                            }}>\r\n                                                <div style={{\r\n                                                    width: '48%',\r\n                                                }}>\r\n                                                    <DatePicker\r\n                                                        date={startDate}\r\n                                                        label='Start Date'\r\n                                                        onChange={handleStartDataChange} />\r\n\r\n                                                </div>\r\n                                                <div style={{\r\n                                                    width: '48%'\r\n                                                }}>\r\n\r\n                                                    <DatePicker\r\n                                                        date={endDate}\r\n                                                        label='End Date'\r\n                                                        onChange={handleEndDataChange} />\r\n\r\n                                                </div>\r\n                                            </div> */}\r\n\r\n\r\n                                        </div>\r\n\r\n\r\n\r\n                                    </div>\r\n\r\n                                    {/* <div className='addProductGridContainer__price'>\r\n                                        <div className='addProductGridContainer__item-header'>\r\n                                            <h3>\r\n                                                Products\r\n\t\t                                    </h3>\r\n\r\n                                            <div className={pricing && pricing.length > 0 ? 'checkicon-active' : 'checkicon'}>\r\n                                                <CheckCircleOutlined />\r\n                                            </div>\r\n                                        </div>\r\n\r\n\r\n                                        <div className='addProductGridContainer__item-body'>\r\n\r\n                                            <h3 className='inputFieldLabel'>\r\n                                                Products\r\n                                            </h3>\r\n                                            <SelectProducts\r\n                                                setProductIds={setProductIds}\r\n                                                productIds={productIds}\r\n                                            />\r\n\r\n                                            <div style={{\r\n                                                marginTop: \"15px\"\r\n                                            }}></div>\r\n\r\n                                            <h3 className='inputFieldLabel'>\r\n                                                Selcted Products\r\n                                            </h3>\r\n\r\n                                            <SelectedProductItems\r\n                                                productList={productList}\r\n                                                setProductList={setProductList}\r\n                                            />\r\n                                        </div>\r\n                                    </div> */}\r\n\r\n\r\n                                    <div className='addProductGridContainer__image'>\r\n\r\n                                <div className='addProductGridContainer__item-header'>\r\n                                    <h3>\r\n                                        Image\r\n                                </h3>\r\n\r\n                                    <Tooltip\r\n                                        placement=\"left\" title={'Click on the image to select cover image, By default 1st image is selected as cover'}>\r\n                                        <a href='###'>\r\n                                            <InfoCircleOutlined />\r\n                                        </a>\r\n                                    </Tooltip>\r\n</div>\r\n\r\n<div\r\n    style={{\r\n        padding: \"10px\"\r\n    }}\r\n    className='aboutToUploadImagesContainer'>\r\n    {productDetailState.isLoading && (\r\n        <div style={{\r\n            padding: '20px 0'\r\n        }}>\r\n            <Spin />\r\n        </div>\r\n    )}\r\n    {productDetailState.done && (\r\n        <>\r\n            {myImages &&\r\n                // @ts-ignore\r\n                myImages.length > 0 && myImages.map((image, index) => {\r\n                    return (\r\n                        <div className='aboutToUploadImagesContainer__item'>\r\n                            <div\r\n                                className='aboutToUploadImagesContainer__item-imgContainer'\r\n                                onClick={() => {\r\n                                    setCoverImageId(image.id);\r\n                                    handleSetImageAsThumnail(image);\r\n                                }}\r\n                            >\r\n                                <img src={image.cover} alt={image.alt} />\r\n                            </div>\r\n\r\n                            <span\r\n                                onClick={() => {\r\n                                    handleImagesDelete(image.id)\r\n                                    handleDetachSingleImage(image.id)\r\n                                }\r\n\r\n                                }\r\n                                className='aboutToUploadImagesContainer__item-remove'>\r\n                                <CloseOutlined />\r\n                            </span>\r\n\r\n\r\n                            {coverImageId === image.id ? (\r\n                                <span className='aboutToUploadImagesContainer__item-cover'>\r\n                                    <CheckOutlined />\r\n                                </span>\r\n                            ) : !coverImageId && index === 0 && (\r\n                                <span className='aboutToUploadImagesContainer__item-cover'>\r\n                                    <CheckOutlined />\r\n                                </span>\r\n                            )}\r\n\r\n\r\n                        </div>\r\n                    )\r\n                })}\r\n\r\n\r\n            <Tooltip\r\n                title={'Attach images'}>\r\n\r\n                <div\r\n                    onClick={() => {\r\n                        setvisible(true);\r\n                        setisModalOpenForImages(true);\r\n                        setisModalOpenForThumbnail(false);\r\n                    }}\r\n                    className='aboutToUploadImagesContainer__uploadItem'>\r\n                    {/* <FileAddOutlined />\r\n            <FileImageTwoTone />\r\n            <FileImageOutlined /> */}\r\n                    <FileImageFilled />\r\n                    {/* <h5>\r\n             Select From Library\r\n    <     /h5> */}\r\n                    <span className='aboutToUploadImagesContainer__uploadItem-plus'>\r\n                        <PlusOutlined />\r\n                    </span>\r\n                </div>\r\n            </Tooltip>\r\n        </>\r\n    )}\r\n\r\n</div>\r\n</div>\r\n\r\n\r\n<div className='addProductGridContainer__image'>\r\n\r\n<div className='addProductGridContainer__item-header'>\r\n    <h3>\r\n    Meta Data\r\n</h3>\r\n\r\n    <Tooltip\r\n        placement=\"left\" title={\"Meta data will be used to make the user's easy and for search engine optimization.\"}>\r\n        <a href='###'>\r\n            <InfoCircleOutlined />\r\n        </a>\r\n    </Tooltip>\r\n</div>\r\n<div className='addProductGridContainer__item-body'>\r\n\r\n                \r\n<Input\r\nlabel='Meta title'\r\nvalue={values.metaTitle}\r\nplaceHolder={'category...'}\r\nname='metaTitle'\r\nisError={(touched.metaTitle && errors.metaTitle) ||\r\n(!isSubmitting && addProductState.error['error']['metaTitle'])}\r\n\r\nerrorString={(touched.metaTitle && errors.metaTitle) ||\r\n(!isSubmitting && addProductState.error['error']['metaTitle'])}\r\nonChange={(e: any) => {\r\nhandleChange(e);\r\nsetFieldTouched('metaTitle')\r\n}}\r\n/>\r\n\r\n<Input\r\nlabel='BN Meta title'\r\nvalue={values.bnMetaTitle}\r\nplaceHolder={'ক্যাটাগড়ি...'}\r\nname='bnMetaTitle'\r\nisError={(touched.bnMetaTitle && errors.bnMetaTitle) ||\r\n(!isSubmitting && addProductState.error['error']['bnMetaTitle'])}\r\n\r\nerrorString={(touched.bnMetaTitle && errors.bnMetaTitle) ||\r\n(!isSubmitting && addProductState.error['error']['bnMetaTitle'])}\r\nonChange={(e: any) => {\r\nhandleChange(e);\r\nsetFieldTouched('bnMetaTitle');\r\n}}\r\n/>\r\n\r\n<TextArea\r\nlabel='Meta description'\r\nvalue={values.metaDescription}\r\nplaceholder={'meta...'}\r\nname='metaDescription'\r\nisError={(touched.metaDescription && errors.metaDescription) ||\r\n(!isSubmitting && addProductState.error['error']['metaDescription'])}\r\n\r\nerrorString={(touched.metaDescription && errors.metaDescription) ||\r\n(!isSubmitting && addProductState.error['error']['metaDescription'])}\r\nonChange={(e: any) => {\r\nhandleChange(e);\r\nsetFieldTouched('metaDescription');\r\n}}\r\n/>\r\n\r\n<TextArea\r\nlabel='BN Meta Description'\r\nvalue={values.bnMetaDescription}\r\nplaceholder={'এইয় মেট...'}\r\nname='bnMetaDescription'\r\nisError={(touched.bnMetaDescription && errors.bnMetaDescription) ||\r\n(!isSubmitting && addProductState.error['error']['bnMetaDescription'])}\r\n\r\nerrorString={(touched.bnMetaDescription && errors.bnMetaDescription) ||\r\n(!isSubmitting && addProductState.error['error']['bnMetaDescription'])}\r\nonChange={(e: any) => {\r\nhandleChange(e);\r\nsetFieldTouched('bnMetaDescription');\r\n}}\r\n/>\r\n\r\n<h3 className='inputFieldLabel'>\r\nMeta Tags (grocery,fashion)\r\n</h3>\r\n\r\n<MetaTags\r\n// @ts-ignore\r\nsetTags={setMetaTags}\r\ntags={metaTags}\r\n/>\r\n\r\n<div style={{\r\nmarginTop:'15px'\r\n}}></div>\r\n\r\n<h3 className='inputFieldLabel'>\r\nBN Meta Tags (মুদিখানা,ফ্যাশন)\r\n</h3>\r\n\r\n<MetaTags\r\n// @ts-ignore\r\nsetTags={setBnMetaTags}\r\ntags={bnMetaTags}\r\n/>\r\n</div>\r\n</div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n                                </div>\r\n                                <div className='addProductGridContainer__right'>\r\n                                    <div className='addProductGridContainer__category'>\r\n\r\n                                        <div className='addProductGridContainer-rightItemContainer'>\r\n                                            <div className='addProductGridContainer-rightItemContainer-header'>\r\n                                                <h3>\r\n                                                    Categories *\r\n\t\t\t                                \t</h3>\r\n\r\n                                                <Tooltip\r\n                                                    color='red'\r\n                                                    visible={addProductState.error['error']['category'] && !(categoryids.length > 0)}\r\n                                                    placement=\"left\" title={'Select at least one category'}>\r\n                                                    <div className={!(categoryids.length > 0)\r\n                                                        && !addProductState.error['error']['category'] ? 'checkicon' : addProductState.error['error']['category'] ? 'checkicon-error' : 'checkicon-active'}>\r\n                                                        <CheckCircleOutlined />\r\n                                                    </div>\r\n                                                </Tooltip>\r\n\r\n                                            </div>\r\n                                            <div className='addProductGridContainer-rightItemContainer-body'>\r\n                                                <Categories\r\n                                                    setCategoryOptions={setCategoryOptions}\r\n                                                    categoryOptions={categoryOptions}\r\n                                                    setcategoryIds={setcategoryIds} />\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                    </div>\r\n\r\n                                    <div className='addProductGridContainer__tag'>\r\n                                        <div className='addProductGridContainer-rightItemContainer'>\r\n                                            <div className='addProductGridContainer-rightItemContainer-header'>\r\n                                                <h3>\r\n                                                    Tags\r\n\t\t\t\t</h3>\r\n                                            </div>\r\n                                            <div className='addProductGridContainer-rightItemContainer-body'>\r\n                                                <Tags\r\n                                                    setSelectedTags={setSelectedTags}\r\n                                                    selectedTags={selectedTags}\r\n                                                    setTagIds={setTagIds} />\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                    </div>\r\n                                    <div className='addProductGridContainer__brand'>\r\n                                        <div className='addProductGridContainer-rightItemContainer'>\r\n                                            <div className='addProductGridContainer-rightItemContainer-header'>\r\n                                                <h3>\r\n                                                    Brand\r\n\t\t\t\t</h3>\r\n                                            </div>\r\n                                            <div className='addProductGridContainer-rightItemContainer-body'>\r\n                                                <Brands setBrandId={setBrandId} />\r\n                                            </div>\r\n                                        </div>\r\n\r\n\r\n                                    </div>\r\n\r\n                                </div>\r\n                            </section>\r\n\r\n\r\n                        </Modal>\r\n\r\n                        <MediaLibrary\r\n                            setvisible={setvisible}\r\n                            visible={visible}\r\n                            setmyImages={setmyImages}\r\n                            myImages={myImages}\r\n                            setmyThumbnailImage={setmyThumbnailImage}\r\n                            isModalOpenForThumbnail={isModalOpenForThumbnail}\r\n                            isModalOpenForImages={isModalOpenForImages}\r\n\r\n                        />\r\n                    </>\r\n                )}\r\n        </Formik>\r\n\r\n\r\n\r\n\r\n    );\r\n};\r\n\r\nexport default AddNewProduct;\r\n\r\n\r\n\r\n\r\n/*\r\n\r\n\r\nProduct variation ---->\r\n\r\nPrice [title]\r\n\t[regular input field] [offer inputfield]\r\n\r\nStock [title]\r\n\t[available input field] [minimum inputfield]\r\n\r\ndefault [default can be set to true]\r\n\r\nattributes [title]\r\n\t[add attributes name]\r\n\t\t[add attrubutes value]\r\n\r\n\t[add attributes name]\r\n\t\t[add attrubutes value\r\n\r\n*///","import React, { useEffect, useState } from 'react';\r\nimport { useHandleFetch } from '../../hooks';\r\nimport { Select, Skeleton } from 'antd';\r\n\r\n\r\ninterface Props {\r\n    setProductIds?: any;\r\n    productIds?: any;\r\n}\r\n\r\n\r\nconst Tags = ({\r\n    setProductIds,\r\n    productIds\r\n}: Props) => {\r\n    const [options, setoptions] = useState([]);\r\n    const [selectedOpions, setselectedOptions] = useState([]);\r\n    const [tagState, handleTagListFetch] = useHandleFetch({}, 'productList');\r\n    const [isProductIdsfirstTime,setProductIdsfirstTime] = useState(false); \r\n\r\n    useEffect(() => {\r\n        const setTags = async () => {\r\n            const tagListRes = await handleTagListFetch({\r\n                urlOptions: {\r\n                    params: {\r\n                        sortItem: 'added',\r\n                        sortOrderValue: '-1'\r\n                    }\r\n                }\r\n            });\r\n\r\n            // @ts-ignore\r\n            if (tagListRes && tagListRes.length > 0) {\r\n                // @ts-ignore\r\n                const tagOptions = tagListRes.map((tag) => {\r\n                    return tag.name\r\n                });\r\n                setoptions(tagOptions);\r\n            }\r\n\r\n        };\r\n\r\n        setTags();\r\n    }, []);\r\n\r\n\r\n\r\n    useEffect(()=>{\r\n\r\n        if(productIds && productIds.length > 0 && !isProductIdsfirstTime){\r\n            const selectItems = productIds.map((tag) => {\r\n                return tag.id\r\n            });\r\n\r\n            setselectedOptions(selectItems);\r\n            // setoptions(tagOptions);\r\n        }; \r\n\r\n    },[productIds])\r\n\r\n\r\n    const handleChange = (selectItems) => {\r\n        setselectedOptions(selectItems);\r\n        console.log('selectItems',selectItems); \r\n\r\n        if (tagState.done && tagState.data.length > 0 && selectItems.length > 0) {\r\n            const selectedCategoryIds = selectItems.map((item) => {\r\n                const selectedcategory = tagState.data.find(\r\n                    (cat) => cat.name.toLowerCase() === item.toLowerCase()\r\n                );\r\n                if (selectedcategory) {\r\n                    return selectedcategory;\r\n                }\r\n            });\r\n\r\n            setProductIds(selectedCategoryIds);\r\n        }\r\n        else {\r\n            setProductIds([])\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <Skeleton loading={tagState.isLoading}>\r\n                {tagState.done && tagState.data.length > 0 && <Select\r\n                    mode=\"multiple\"\r\n                    placeholder=\"search products\"\r\n                    value={selectedOpions}\r\n                    onChange={handleChange}\r\n                    style={{ width: '100%' }}\r\n                >\r\n                    {options.filter(o => !selectedOpions.includes(o)).map(item => (\r\n                        <Select.Option key={item} value={item}>\r\n                            {item}\r\n                        </Select.Option>\r\n                    ))}\r\n                </Select>}\r\n            </Skeleton>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Tags\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useHandleFetch } from '../../hooks';\r\n\r\n\r\n// import lib \r\n\r\n\r\n\r\n\r\ninterface Props {\r\n    setProductList?: any;\r\n    productList?: any;\r\n    productId?: any;\r\n    quantity?: any;\r\n    item?: any\r\n    variation?: any;\r\n}\r\n\r\nconst CartOverLayCartItem = ({\r\n    productList,\r\n    setProductList,\r\n    productId,\r\n    quantity,\r\n    item,\r\n    variation\r\n}: Props) => {\r\n\r\n\r\n    const [productDetailState, handleProductFetch] = useHandleFetch(\r\n        {},\r\n        'productDetailById'\r\n    );\r\n    const [product, setProduct] = useState({});\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [modifiedPrice, setModifiedPrice] = useState('');\r\n    const [selectedVariationId, setSelectedVariationId] = useState(variation);\r\n\r\n\r\n\r\n    console.log('productDetailStateByOrder',productDetailState); \r\n    \r\n    useEffect(() => {\r\n        setIsLoading(true);\r\n        const getAndSetProduct = async () => {\r\n            const product = await handleProductFetch({\r\n                urlOptions: {\r\n                    placeHolders: {\r\n                        id: productId,\r\n                    },\r\n                },\r\n            });\r\n\r\n            // @ts-ignore\r\n            setProduct(product);\r\n            setIsLoading(false);\r\n        };\r\n        getAndSetProduct()\r\n    }, []);\r\n\r\n\r\n\r\n    // useEffect(() => {\r\n    //     const positionInAttribute = () => {\r\n    //         return attributeList.map(item => item.id).indexOf(attribute.id);\r\n    //     }\r\n\r\n    //     const index = positionInAttribute();\r\n\r\n    //     const updatedItem = Object.assign({}, attributeList[index], { ...attributeItem });\r\n    //     const updateProductList = [...attributeList.slice(0, index), updatedItem, ...attributeList.slice(index + 1)];\r\n    //     setProductList(updateProductList);\r\n\r\n    // }, [attributeItem])\r\n\r\n\r\n    const handleAttributeDelete = () => {\r\n\r\n        const updateProductList = productList.filter(item => item._id !== productId);\r\n        setProductList(updateProductList);\r\n    }\r\n\r\n\r\n    const handleChangeQuantity = async (value) => {\r\n        if (value === 'minus') {\r\n            if (quantity === 1) {\r\n                return;\r\n            }\r\n\r\n            const positionInAttribute = () => {\r\n                return productList.map(item => item._id).indexOf(productId);\r\n            }\r\n\r\n            const index = positionInAttribute();\r\n\r\n            const updatedItem = Object.assign({}, productList[index], { ...item, quantity: --quantity });\r\n            const updateAttributeList = [...productList.slice(0, index), updatedItem, ...productList.slice(index + 1)];\r\n            setProductList(updateAttributeList);\r\n\r\n\r\n        } else {\r\n            const positionInAttribute = () => {\r\n                return productList.map(item => item._id).indexOf(productId);\r\n            }\r\n\r\n            const index = positionInAttribute();\r\n\r\n            const updatedItem = Object.assign({}, productList[index], { ...item, quantity: ++quantity });\r\n            const updateAttributeList = [...productList.slice(0, index), updatedItem, ...productList.slice(index + 1)];\r\n            setProductList(updateAttributeList)\r\n\r\n        }\r\n    };\r\n\r\n\r\n    const convertAttributeValuesToStringValue = (attribute) => {\r\n        const value = [];\r\n\r\n        let attributeValues = Object.values(attribute);\r\n        attributeValues.forEach(attributeValue => {\r\n            // @ts-ignore\r\n            value.push(attributeValue)\r\n        })\r\n\r\n        return value.join(',');\r\n    };\r\n\r\n\r\n\r\n\r\n    const getPricingOptions = (pricing) => {\r\n        if (pricing && pricing.length > 0) {\r\n            const pricingOptions = [];\r\n\r\n            pricing.forEach(pricingItem => {\r\n\r\n                if (Object.values(pricingItem.attribute).length > 0 && pricingItem._id) {\r\n                    let pricingOption = {\r\n                        value: pricingItem._id,\r\n                        label: `${convertAttributeValuesToStringValue(pricingItem.attribute) || ''}`\r\n                    }\r\n                    // @ts-ignore\r\n                    pricingOptions.push(pricingOption)\r\n                }\r\n\r\n            })\r\n\r\n            return pricingOptions;\r\n        }\r\n        else return false\r\n    };\r\n\r\n    const pricingOptions = item && Object.keys(item).length > 0 ? getPricingOptions(item.pricing) : [];\r\n\r\n\r\n    console.log('pricingOptions', pricingOptions);\r\n\r\n    const handleAttributeChange = (tagId) => {\r\n        setSelectedVariationId(tagId);\r\n\r\n        const positionInAttribute = () => {\r\n            return productList.map(item => item._id).indexOf(productId);\r\n        }\r\n\r\n        const index = positionInAttribute();\r\n\r\n        const updatedItem = Object.assign({}, productList[index], { ...item, quantity: 1 });\r\n        const updateAttributeList = [...productList.slice(0, index), updatedItem, ...productList.slice(index + 1)];\r\n        setProductList(updateAttributeList);\r\n\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        const getPriceByVariationId = (id) => {\r\n            const pricing = item && Object.keys(item).length > 0 ? item.pricing : false;\r\n            if (pricing) {\r\n                const priceItem = pricing.find(pricingItem => pricingItem._id === id);\r\n                console.log('priceItem', id);\r\n\r\n                if (priceItem && priceItem.price.regular) {\r\n                    return priceItem.price.offer\r\n                        && parseInt(priceItem.price.offer)\r\n                        ? priceItem.price.offer : priceItem.price.regular\r\n                }\r\n                else return false;\r\n            }\r\n        }\r\n\r\n        if (selectedVariationId) {\r\n            const price = getPriceByVariationId(selectedVariationId);\r\n            setModifiedPrice(price);\r\n        }\r\n\r\n    }, [selectedVariationId]);\r\n\r\n\r\n\r\n    console.log('modifiedPrice', modifiedPrice);\r\n    return (\r\n        <>\r\n\r\n            {item && Object.keys(item).length > 0 && (\r\n                <div className='cart-item' key={''}>\r\n                    <div className='cart-item-quantityCounter'>\r\n                        <i\r\n                            onClick={() => {\r\n                                handleChangeQuantity('plus');\r\n                            }}\r\n                            className='fa fa-chevron-up'\r\n\r\n                        ></i>\r\n                        <p className='item-amount'>{quantity}</p>\r\n                        <i\r\n                            onClick={() => {\r\n                                handleChangeQuantity('minus');\r\n                            }}\r\n                            className='fa fa-chevron-down'\r\n\r\n                        ></i>\r\n                    </div>\r\n\r\n\r\n                    <img\r\n\r\n                        src={item['cover'] && item['cover']}\r\n                        alt='Img'\r\n                        style={{\r\n                            cursor: 'pointer',\r\n                        }}\r\n                    />\r\n                    <div className='cart-item-info'>\r\n                        <h4\r\n\r\n                        >\r\n                            {item['name']}\r\n                        </h4>\r\n                        <h5\r\n                        >\r\n                            {modifiedPrice || item['price']}\r\n                        </h5>\r\n\r\n\r\n                        {pricingOptions && pricingOptions.length > 0 && pricingOptions.map(tag => (\r\n                            <>\r\n                                <span\r\n                                    onClick={() => handleAttributeChange(tag.value)}\r\n                                    className={selectedVariationId === tag.value ? 'product-attributeTag product-attributeTag-active' : 'product-attributeTag'}>\r\n                                    {tag.label}\r\n                                </span>\r\n                            </>\r\n                        ))}\r\n\r\n                        {/* <span\r\n             style={{\r\n               display: 'inline-block',\r\n               background: '#fafafa',\r\n               padding: '3px 3px',\r\n               borderRadius: 1,\r\n               fontSize: '12px',\r\n               marginRight: '5px',\r\n               color: '#777',\r\n               marginTop: '5px'\r\n             }}\r\n           >\r\n             15KG\r\n             </span> */}\r\n\r\n                    </div>\r\n                    {/* <span\r\n                        onClick={handleAttributeDelete}\r\n                        className='remove-item' >\r\n                        <i className='fa fa-times'></i>\r\n                    </span> */}\r\n\r\n                </div>\r\n            )}\r\n        </>\r\n    );\r\n};\r\n\r\n// @ts-ignore\r\nexport default CartOverLayCartItem;\r\n","import React from 'react'\r\n\r\n\r\n// import components\r\nimport AddNewOrderProductItem from \"../order/AddNewOrderProductItem\";\r\nimport Empty from \"../../components/Empty\";\r\n\r\nimport {\r\n    ShopOutlined\r\n} from '@ant-design/icons';\r\n\r\n\r\ninterface Props {\r\n    productList?: any;\r\n    setProductList?: any;\r\n}\r\n\r\nconst AddNewOrderSummary = ({\r\n    setProductList,\r\n    productList\r\n}: Props) => {\r\n    return (\r\n        <div\r\n            style={{\r\n                // @ts-ignore\r\n                flexDirection: 'flex'\r\n            }}\r\n            className='addOrderContainer__container-orderSummary'>\r\n            <div className='addOrderContainer__container-productItemContainer'>\r\n                {productList && productList.length > 0 && productList.map(item => {\r\n                    return <AddNewOrderProductItem\r\n                        setProductList={setProductList}\r\n                        productList={productList}\r\n                        productId={item._id}\r\n                        quantity={item.quantity}\r\n                        item={item}\r\n                        variation={item.variation}\r\n                    />;\r\n                })}\r\n\r\n                {!(productList.length > 0) && (\r\n                    <div style={{\r\n                        marginLeft: '32px'\r\n                    }}>\r\n                        <Empty title='No Product Added' height={150} />\r\n                    </div>\r\n                )}\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddNewOrderSummary\r\n","import React, { useState, useEffect } from 'react';\r\n\r\n// import hooks \r\nimport { useHandleFetch } from '../../hooks';\r\n\r\n\r\n// import libraries \r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { message, Tooltip, Modal, Tabs  } from 'antd';\r\nimport CKEditor from '@ckeditor/ckeditor5-react';\r\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\r\n\r\n\r\nimport {\r\n    CheckCircleOutlined,\r\n    FileImageFilled,\r\n    PlusOutlined,\r\n    CloseOutlined,\r\n    CheckOutlined,\r\n    InfoCircleOutlined\r\n} from '@ant-design/icons';\r\n\r\n\r\n\r\n// import ReactQuill from 'react-quill';\r\n// import 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport InputSmall from '../../components/Field/InputSmall';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport MediaLibrary from \"../../components/MediaLibrary\";\r\nimport DatePicker from \"../../components/Field/DatePicker\";\r\nimport { openSuccessNotification, openErrorNotification } from \"../../components/Notification\";\r\nimport Tags from \"../product/Tags\";\r\nimport Brands from \"../product/Brands\";\r\nimport Categories from \"../product/Categories\";\r\nimport Pricing from \"../product/Pricing\";\r\nimport SelectProducts from \"./SelectProducts\";\r\nimport SelectedProductItems from \"./SelectedProductItems\";\r\nimport MetaTags from \"../category/MetaTags\";\r\n\r\nconst { TabPane } = Tabs;\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    name: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\n\r\nconst initialValues = {\r\n    name: \"\",\r\n    bundlePrice: null,\r\n    startDate: \"\",\r\n    endDate: \"\",\r\n    description: '',\r\n    bnName: '',\r\n\tbnDescription: '',\r\n\tmetaTitle: '',\r\n\tbnMetaTitle: '',\r\n\tmetaDescription: '',\r\n\tbnMetaDescription: '',\r\n\tmetaTags: '',\r\n\tbnMetaTags: '',\r\n}\r\n\r\n\r\n\r\ninterface Props {\r\n    addNewCategoryVisible: any;\r\n    setAddNewCategoryVisible: any;\r\n    productList?: any;\r\n    setProductList?: any;\r\n}\r\n\r\nconst AddNewProduct = ({ addNewCategoryVisible, setAddNewCategoryVisible, productList: bundleList, setProductList: setBundleList }: Props) => {\r\n\r\n    const [addProductState, handleAddProductFetch] = useHandleFetch({}, 'addBundle');\r\n    const [visible, setvisible] = useState(false);\r\n    const [myImages, setmyImages] = useState(false);\r\n    const [myThumbnailImage, setmyThumbnailImage] = useState(false);\r\n    const [isModalOpenForThumbnail, setisModalOpenForThumbnail] = useState(false);\r\n    const [isModalOpenForImages, setisModalOpenForImages] = useState(false);\r\n    const [categoryids, setcategoryIds] = useState([]);\r\n    const [tagIds, setTagIds] = useState([]);\r\n    const [brandId, setBrandId] = useState('');\r\n    const [pricing, setPricing] = useState([]);\r\n    const [coverImageId, setCoverImageId] = useState('');\r\n    const [categoryOptions, setCategoryOptions] = useState([]);\r\n    const [selectedTags, setSelectedTags] = useState([]);\r\n    const [startDate, setStartDate] = useState('');\r\n    const [endDate, setEndDate] = useState('');\r\n    const [description, setDescription] = useState('');\r\n\tconst [bnDescription, setBNDescription] = useState('');\r\n    const [productIds, setProductIds] = useState([]);\r\n    const [productList, setProductList] = useState([]);\r\n\tconst [metaTags,setMetaTags] = useState([]);\r\n\tconst [bnMetaTags,setBnMetaTags] = useState([]);\r\n\r\n    const [price, setPrice] = useState({\r\n        regular: null,\r\n        offer: null,\r\n    });\r\n\r\n\r\n    const makeEmptyCategoryOptions = (setEmpty) => {\r\n        setEmpty([]);\r\n    }\r\n\r\n    const handleSubmit = async (values: any, actions: any) => {\r\n        // @ts-ignore\r\n        const imagesIds = myImages ? myImages.map(image => {\r\n            return image.id;\r\n        }) : [];\r\n\r\n        console.log('productList',productList);\r\n\r\n        const products = productList.length > 0 ? productList.map(product => {\r\n            return {\r\n                _id: product._id,\r\n                variation: product.variation,\r\n                quantity: product.quantity,\r\n            }\r\n        }) : [];\r\n\r\n\r\n        const addProductRes = await handleAddProductFetch({\r\n            body: {\r\n                name: values.name.trim(),\r\n                category: categoryids,\r\n                tags: tagIds,\r\n                brand: brandId,\r\n                price: price,\r\n                description: description,\r\n                model: values.model,\r\n                unit: values.unit,\r\n                image: imagesIds,\r\n                products,\r\n                // startDate, endDate,\r\n                metaTitle: values.metaTitle,\r\n\t\t\t\tmetaDescription: values.metaDescription,\r\n\t\t\t\tmetaTags: metaTags.join(','),\r\n\r\n\t\t\t\t\r\n\t\t\t\tbn: {\r\n\t\t\t\t\tmetaTitle: values.bnMetaTitle,\r\n\t\t\t\t\tmetaDescription: values.bnMetaDescription,\r\n\t\t\t\t\tmetaTags: bnMetaTags.join(','),\r\n\t\t\t\t\tname: values.bnName.trim(),\r\n\t\t\t\t\tunit: values.metaUnit,\r\n\t\t\t\t\tdescription: values.bnDescription,\r\n                }\r\n                \r\n\r\n            }\r\n        });\r\n\r\n\r\n        // @ts-ignore\r\n        if (addProductRes && addProductRes.status === 'ok') {\r\n            openSuccessNotification('Bundle Created');\r\n            console.log('addProductBundleRes',addProductRes);\r\n\r\n            setBundleList([{\r\n                id: addProductRes['_id'] || '',\r\n                key: addProductRes['_id'] || '',\r\n                name: addProductRes['name'] || '',\r\n                description: addProductRes['description'] || '',\r\n                // @ts-ignore\r\n                ...addProductRes\r\n            },...bundleList])\r\n            setAddNewCategoryVisible(false)\r\n            // @ts-ignore\r\n            setmyImages([]);\r\n            setCoverImageId('');\r\n            setPricing([]);\r\n            setTagIds([]);\r\n            setSelectedTags([]);\r\n            setBrandId(\"\");\r\n            setcategoryIds([]);\r\n            setCategoryOptions([]);\r\n            actions.resetForm();\r\n        }\r\n        else {\r\n            // openErrorNotification();\r\n        }\r\n\r\n        actions.setSubmitting(false);\r\n\r\n\r\n    };\r\n\r\n\r\n    console.log('productlistbundle',productList)\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        if (!addProductState['isLoading']) {\r\n            const error = addProductState['error'];\r\n            if (error['isError'] && Object.keys(error['error']).length > 0) {\r\n\r\n\r\n                const errors =\r\n                    Object.values(error['error']).length > 0\r\n                        ? Object.values(error['error'])\r\n                        : [];\r\n                errors.forEach((err, i) => {\r\n                    if (typeof err === 'string') {\r\n                        openErrorNotification(err)\r\n                    }\r\n                    else if (typeof err === 'object') {\r\n                        if (err && Object.keys(err).length > 0) {\r\n                            const errs = Object.values(err);\r\n                            errs.forEach(err => {\r\n                                openErrorNotification(err)\r\n                            })\r\n\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n        }\r\n    }, [addProductState])\r\n\r\n\r\n\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        if (productIds && productIds.length > 0 && productList) {\r\n            if (productIds.length > productList.length) {\r\n                const variation = productIds[productIds.length - 1]['pricing'] && productIds[productIds.length - 1]['pricing'].length > 0 && productIds[productIds.length - 1]['pricing'][0]['_id'];\r\n                console.log('variation', variation)\r\n\r\n                setProductList([...productList, {\r\n                    ...productIds[productIds.length - 1],\r\n                    _id: productIds[productIds.length - 1]['id'],\r\n                    variation: variation,\r\n                    quantity: 1\r\n                }]);\r\n            }\r\n\r\n\r\n            else if (productIds.length < productList.length) {\r\n                console.log('productIds', productIds);\r\n                console.log('productList', productList);\r\n\r\n                const newProductList = productList.filter(item => {\r\n                    let isTrue = false;\r\n                    productIds.forEach(product => {\r\n                        if (product.id === item._id) {\r\n                            isTrue = true;\r\n                        }\r\n                    });\r\n                    return isTrue;\r\n                })\r\n                setProductList(newProductList);\r\n\r\n            }\r\n\r\n        }\r\n        else {\r\n            setProductList([]);\r\n        }\r\n        // console.log('productIds', productIds)\r\n\r\n\r\n    }, [productIds])\r\n\r\n\r\n\r\n\r\n\r\n\r\n    const handleCancel = (e: any) => {\r\n        setAddNewCategoryVisible(false);\r\n    };\r\n\r\n\r\n    const getisSubmitButtonDisabled = (values, isValid) => {\r\n        if (!values.name || !(pricing.length > 0) || !isValid) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n\r\n    const handleImagesDelete = (id) => {\r\n        // @ts-ignore\r\n        const newImages = myImages && myImages.filter(image => {\r\n            return image.id !== id;\r\n        })\r\n\r\n        setmyImages(newImages);\r\n    }\r\n\r\n    const handleDeleteFromSelectedImage = () => {\r\n\r\n    };\r\n\r\n    const handleThumbnailImageDelete = (id) => {\r\n        // @ts-ignore\r\n        const newImages = myThumbnailImage && myThumbnailImage.filter(image => {\r\n            return image.id !== id;\r\n        })\r\n\r\n        if (newImages.length > 0) {\r\n            setmyThumbnailImage(newImages);\r\n\r\n        }\r\n        else setmyThumbnailImage(false);\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    const handleAddPricing = (priceItem) => {\r\n        setPricing([{\r\n            ...priceItem,\r\n            id: pricing.length\r\n        }, ...pricing])\r\n        message.info('Product Pricing Added');\r\n    }\r\n\r\n\r\n    const handleDeletePricing = (id) => {\r\n        const newPricing = pricing.filter(item => item.id !== id);\r\n        setPricing(newPricing);\r\n        message.info('Product Pricing Deleted');\r\n    }\r\n\r\n\r\n\r\n    const isCategoryInValid = () => {\r\n        if (addProductState.error['error']['category'] && !categoryids && categoryids.length) {\r\n            return true;\r\n        }\r\n        else if (categoryids && categoryids.length > 0) {\r\n            return false;\r\n        }\r\n    }\r\n\r\n\r\n    const handleStartDataChange = (date, dateString) => {\r\n        setStartDate(dateString);\r\n        // console.log('date', date, dateString);\r\n    }\r\n\r\n    const handleEndDataChange = (date, dateString) => {\r\n        setEndDate(dateString);\r\n        // console.log('date', date, dateString);\r\n    }\r\n\r\n\r\n    \r\n\r\n\r\n\r\n\r\n    return (\r\n        <Formik\r\n            onSubmit={(values, actions) => handleSubmit(values, actions)}\r\n            validationSchema={validationSchema}\r\n            validateOnBlur={false}\r\n            enableReinitialize={true}\r\n            initialValues={\r\n                { ...initialValues }\r\n            }\r\n        >\r\n            {({\r\n                handleChange,\r\n                values,\r\n                handleSubmit,\r\n                errors,\r\n                isValid,\r\n                isSubmitting,\r\n                touched,\r\n                handleBlur,\r\n                setFieldTouched,\r\n                handleReset,\r\n            }) => (\r\n                    <>\r\n                        <Modal\r\n                            style={{\r\n                                top: '40px',\r\n\r\n                            }}\r\n                            bodyStyle={{\r\n                                margin: 0,\r\n                                padding: 0,\r\n                            }}\r\n                            width={'70vw'}\r\n                            title=\"Add New Bundle\"\r\n                            visible={addNewCategoryVisible}\r\n                            onOk={(e: any) => handleSubmit(e)}\r\n                            onCancel={handleCancel}\r\n                            okText='Create'\r\n                            okButtonProps={{\r\n                                loading: isSubmitting,\r\n                                htmlType: \"submit\",\r\n                            }}\r\n                        >\r\n\r\n\r\n                            <section className='addProductGridContainer'>\r\n                                <div className='addProductGridContainer__left'>\r\n                                    <div className='addProductGridContainer__name'>\r\n                                        <div className='addProductGridContainer__item-header'>\r\n                                            <h3>\r\n                                                Bundle Information *\r\n\t\t\t                                </h3>\r\n\r\n                                            <div className={values.name && values.name.length > 2 ? 'checkicon-active' : 'checkicon'}>\r\n                                                <CheckCircleOutlined />\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className='addProductGridContainer__item-body'>\r\n                                        <Input\r\n\t\t\t\t\t\t\t\t\t\t\t\tlabel='Name'\r\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.name}\r\n\t\t\t\t\t\t\t\t\t\t\t\tplaceHolder={'Rafty ox'}\r\n\t\t\t\t\t\t\t\t\t\t\t\tname='name'\r\n\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['name'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['name'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('name');\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\tlabel='BN Name'\r\n\t\t\t\t\t\t\t\t\t\t\tvalue={values.bnName}\r\n\t\t\t\t\t\t\t\t\t\t\tplaceHolder={'রাফতি অক্স'}\r\n\t\t\t\t\t\t\t\t\t\t\tname='bnName'\r\n\t\t\t\t\t\t\t\t\t\t\tisError={(touched.bnName && errors.bnName) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['bnName'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.bnName && errors.bnName) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['bnName'])}\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('bnName');\r\n\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\r\n\r\n\r\n                                    \r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\t\t\t\t\t\tDescription\r\n                                             </h3>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\twidth: '100%',\r\n\t\t\t\t\t\t\t\t\t\t\t\tmaxWidth: '100%'\r\n\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<CKEditor\r\n\t\t\t\t\t\t\t\t\t\t\t\t\teditor={ClassicEditor}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tdata={description}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonInit={editor => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t// You can store the \"editor\" and use when it is needed.\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tconsole.log('Editor is ready to use!', editor);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(event, editor) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tconst data = editor.getData();\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetDescription(data);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonBlur={(event, editor) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tconsole.log('Blur.', editor);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonFocus={(event, editor) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tconsole.log('Focus.', editor);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tmarginTop:\"15px\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}></div>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\t\t\t\t\t\tBN Description\r\n                                             </h3>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\twidth: '100%',\r\n\t\t\t\t\t\t\t\t\t\t\t\tmaxWidth: '100%'\r\n\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<CKEditor\r\n\t\t\t\t\t\t\t\t\t\t\t\t\teditor={ClassicEditor}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tdata={bnDescription}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonInit={editor => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t// You can store the \"editor\" and use when it is needed.\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tconsole.log('Editor is ready to use!', editor);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(event, editor) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tconst data = editor.getData();\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetBNDescription(data);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonBlur={(event, editor) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tconsole.log('Blur.', editor);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonFocus={(event, editor) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tconsole.log('Focus.', editor);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n                                            {/* <div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\tdisplay: 'flex',\r\n\t\t\t\t\t\t\t\t\t\t\t\tjustifyContent: 'space-between'\r\n\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\twidth: '48%',\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<DatePicker\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabel='Date'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={handleDateChange} />\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\twidth: '48%'\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<DatePicker\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tdate={date}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\twithTime={true}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder='Select time'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabel='Time'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={handleTimeChange} />\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t</div> */}\r\n                                            <div style={{\r\n                                                marginBottom: '15px'\r\n                                            }}></div>\r\n                                            {/* \r\n\t\t\t\t\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\t\t\t\t\trows={1}\r\n\t\t\t\t\t\t\t\t\t\t\t\tlabel='Venue'\r\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.venue}\r\n\t\t\t\t\t\t\t\t\t\t\t\tname='venue'\r\n\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.venue && errors.venue) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['venue'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.venue && errors.venue) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['venue'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('venue');\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\t\tlabel='Purchase Limit'\r\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.purchaseLimit}\r\n\t\t\t\t\t\t\t\t\t\t\t\ttype='number'\r\n\t\t\t\t\t\t\t\t\t\t\t\tname='purchaseLimit'\r\n\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.purchaseLimit && errors.purchaseLimit) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['purchaseLimit'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.purchaseLimit && errors.purchaseLimit) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['purchaseLimit'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('purchaseLimit');\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t/> */}\r\n\r\n                                            <div className='addProductGridContainer__item-body-variationCard-item'>\r\n                                                <h4>\r\n                                                    Price *\r\n\t\t\t                                \t</h4>\r\n                                                <div className='addProductGridContainer__item-body-variationCard-item-container'>\r\n                                                    <div className='addProductGridContainer__item-body-variationCard-item-container-left'>\r\n                                                        <InputSmall\r\n                                                            label='Regular'\r\n                                                            value={price.regular}\r\n                                                            name='regular'\r\n                                                            onChange={(e) => setPrice({\r\n                                                                ...price,\r\n                                                                regular: e.target.value\r\n                                                            })}\r\n                                                        />\r\n\r\n\r\n                                                    </div>\r\n                                                    <div className='addProductGridContainer__item-body-variationCard-item-container-right'>\r\n\r\n                                                        <InputSmall\r\n                                                            label='Offer'\r\n                                                            value={price.offer}\r\n                                                            name='offer'\r\n                                                            onChange={(e) => setPrice({\r\n                                                                ...price,\r\n                                                                offer: e.target.value\r\n                                                            })}\r\n                                                        />\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n\r\n\r\n\r\n                                            {/* <div style={{\r\n                                                display: 'flex',\r\n                                                justifyContent: 'space-between'\r\n                                            }}>\r\n                                                <div style={{\r\n                                                    width: '48%',\r\n                                                }}>\r\n                                                    <DatePicker\r\n                                                        date={startDate}\r\n                                                        label='Start Date'\r\n                                                        onChange={handleStartDataChange} />\r\n\r\n                                                </div>\r\n                                                <div style={{\r\n                                                    width: '48%'\r\n                                                }}>\r\n\r\n                                                    <DatePicker\r\n                                                        date={endDate}\r\n                                                        label='End Date'\r\n                                                        onChange={handleEndDataChange} />\r\n\r\n                                                </div>\r\n                                            </div> */}\r\n\r\n\r\n                                        </div>\r\n\r\n\r\n\r\n                                    </div>\r\n\r\n                                    <div className='addProductGridContainer__price'>\r\n                                        <div className='addProductGridContainer__item-header'>\r\n                                            <h3>\r\n                                                Products\r\n\t\t                                    </h3>\r\n\r\n                                            <div className={pricing && pricing.length > 0 ? 'checkicon-active' : 'checkicon'}>\r\n                                                <CheckCircleOutlined />\r\n                                            </div>\r\n                                        </div>\r\n\r\n\r\n                                        <div className='addProductGridContainer__item-body'>\r\n\r\n                                            <h3 className='inputFieldLabel'>\r\n                                                Products\r\n                                            </h3>\r\n                                            <SelectProducts\r\n                                                setProductIds={setProductIds}\r\n                                                productIds={productIds}\r\n                                            />\r\n\r\n                                            <div style={{\r\n                                                marginTop: \"15px\"\r\n                                            }}></div>\r\n\r\n                                            <h3 className='inputFieldLabel'>\r\n                                                Selcted Products\r\n                                            </h3>\r\n\r\n                                            <SelectedProductItems\r\n                                                productList={productList}\r\n                                                setProductList={setProductList}\r\n                                            />\r\n                                        </div>\r\n                                    </div>\r\n\r\n\r\n\r\n\r\n                                    <div className='addProductGridContainer__image'>\r\n\r\n                                        <div className='addProductGridContainer__item-header'>\r\n                                            <h3>\r\n                                                Image\r\n                                            </h3>\r\n\r\n                                            <Tooltip\r\n                                                placement=\"left\" title={'Click on the image to select cover image, By default 1st image is selected as cover'}>\r\n                                                <a href='###'>\r\n                                                    <InfoCircleOutlined />\r\n                                                </a>\r\n                                            </Tooltip>\r\n                                        </div>\r\n                                        <div className='addProductGridContainer__item-body'>\r\n                                            <div className='aboutToUploadImagesContainer'>\r\n                                                {myImages &&\r\n                                                    // @ts-ignore\r\n                                                    myImages.length > 0 && myImages.map((image, index) => {\r\n                                                        return (\r\n                                                            <div className='aboutToUploadImagesContainer__item'>\r\n                                                                <div\r\n                                                                    className='aboutToUploadImagesContainer__item-imgContainer'\r\n                                                                    onClick={() => setCoverImageId(image.id)}\r\n                                                                >\r\n                                                                    <img src={image.cover} alt={image.alt} />\r\n                                                                </div>\r\n\r\n                                                                <span\r\n                                                                    onClick={() => handleImagesDelete(image.id)}\r\n                                                                    className='aboutToUploadImagesContainer__item-remove'>\r\n                                                                    <CloseOutlined />\r\n                                                                </span>\r\n\r\n\r\n                                                                {coverImageId === image.id ? (\r\n                                                                    <span className='aboutToUploadImagesContainer__item-cover'>\r\n                                                                        <CheckOutlined />\r\n                                                                    </span>\r\n                                                                ) : !coverImageId && index === 0 && (\r\n                                                                    <span className='aboutToUploadImagesContainer__item-cover'>\r\n                                                                        <CheckOutlined />\r\n                                                                    </span>\r\n                                                                )}\r\n                                                            </div>\r\n                                                        )\r\n                                                    })}\r\n\r\n\r\n                                                <Tooltip\r\n                                                    title={'Attach images'}>\r\n\r\n                                                    <div\r\n                                                        onClick={() => {\r\n                                                            setvisible(true);\r\n                                                            setisModalOpenForImages(true);\r\n                                                            setisModalOpenForThumbnail(false);\r\n                                                        }}\r\n                                                        className='aboutToUploadImagesContainer__uploadItem'>\r\n                                                        {/* <FileAddOutlined />\r\n                                                            <FileImageTwoTone />\r\n                                                            <FileImageOutlined /> */}\r\n                                                        <FileImageFilled />\r\n                                                        {/* <h5>\r\n                                                                Select From Library\r\n                                                        <     /h5> */}\r\n                                                        <span className='aboutToUploadImagesContainer__uploadItem-plus'>\r\n                                                            <PlusOutlined />\r\n                                                        </span>\r\n                                                    </div>\r\n                                                </Tooltip>\r\n\r\n\r\n\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n\r\n\r\n\r\n                                    <div className='addProductGridContainer__image'>\r\n\r\n<div className='addProductGridContainer__item-header'>\r\n    <h3>\r\n    Meta Data\r\n</h3>\r\n\r\n    <Tooltip\r\n        placement=\"left\" title={\"Meta data will be used to make the user's easy and for search engine optimization.\"}>\r\n        <a href='###'>\r\n            <InfoCircleOutlined />\r\n        </a>\r\n    </Tooltip>\r\n</div>\r\n<div className='addProductGridContainer__item-body'>\r\n\r\n                \r\n<Input\r\nlabel='Meta title'\r\nvalue={values.metaTitle}\r\nplaceHolder={'category...'}\r\nname='metaTitle'\r\nisError={(touched.metaTitle && errors.metaTitle) ||\r\n(!isSubmitting && addProductState.error['error']['metaTitle'])}\r\n\r\nerrorString={(touched.metaTitle && errors.metaTitle) ||\r\n(!isSubmitting && addProductState.error['error']['metaTitle'])}\r\nonChange={(e: any) => {\r\nhandleChange(e);\r\nsetFieldTouched('metaTitle')\r\n}}\r\n/>\r\n\r\n<Input\r\nlabel='BN Meta title'\r\nvalue={values.bnMetaTitle}\r\nplaceHolder={'ক্যাটাগড়ি...'}\r\nname='bnMetaTitle'\r\nisError={(touched.bnMetaTitle && errors.bnMetaTitle) ||\r\n(!isSubmitting && addProductState.error['error']['bnMetaTitle'])}\r\n\r\nerrorString={(touched.bnMetaTitle && errors.bnMetaTitle) ||\r\n(!isSubmitting && addProductState.error['error']['bnMetaTitle'])}\r\nonChange={(e: any) => {\r\nhandleChange(e);\r\nsetFieldTouched('bnMetaTitle');\r\n}}\r\n/>\r\n\r\n<TextArea\r\nlabel='Meta description'\r\nvalue={values.metaDescription}\r\nplaceholder={'meta...'}\r\nname='metaDescription'\r\nisError={(touched.metaDescription && errors.metaDescription) ||\r\n(!isSubmitting && addProductState.error['error']['metaDescription'])}\r\n\r\nerrorString={(touched.metaDescription && errors.metaDescription) ||\r\n(!isSubmitting && addProductState.error['error']['metaDescription'])}\r\nonChange={(e: any) => {\r\nhandleChange(e);\r\nsetFieldTouched('metaDescription');\r\n}}\r\n/>\r\n\r\n<TextArea\r\nlabel='BN Meta Description'\r\nvalue={values.bnMetaDescription}\r\nplaceholder={'এইয় মেট...'}\r\nname='bnMetaDescription'\r\nisError={(touched.bnMetaDescription && errors.bnMetaDescription) ||\r\n(!isSubmitting && addProductState.error['error']['bnMetaDescription'])}\r\n\r\nerrorString={(touched.bnMetaDescription && errors.bnMetaDescription) ||\r\n(!isSubmitting && addProductState.error['error']['bnMetaDescription'])}\r\nonChange={(e: any) => {\r\nhandleChange(e);\r\nsetFieldTouched('bnMetaDescription');\r\n}}\r\n/>\r\n\r\n<h3 className='inputFieldLabel'>\r\nMeta Tags (grocery,fashion)\r\n</h3>\r\n\r\n<MetaTags\r\n// @ts-ignore\r\nsetTags={setMetaTags}\r\ntags={metaTags}\r\n/>\r\n\r\n<div style={{\r\nmarginTop:'15px'\r\n}}></div>\r\n\r\n<h3 className='inputFieldLabel'>\r\nBN Meta Tags (মুদিখানা,ফ্যাশন)\r\n</h3>\r\n\r\n<MetaTags\r\n// @ts-ignore\r\nsetTags={setBnMetaTags}\r\ntags={bnMetaTags}\r\n/>\r\n</div>\r\n</div>\r\n\r\n\r\n\r\n                                </div>\r\n                                <div className='addProductGridContainer__right'>\r\n                                    <div className='addProductGridContainer__category'>\r\n\r\n                                        <div className='addProductGridContainer-rightItemContainer'>\r\n                                            <div className='addProductGridContainer-rightItemContainer-header'>\r\n                                                <h3>\r\n                                                    Categories *\r\n\t\t\t                                \t</h3>\r\n\r\n                                                <Tooltip\r\n                                                    color='red'\r\n                                                    visible={addProductState.error['error']['category'] && !(categoryids.length > 0)}\r\n                                                    placement=\"left\" title={'Select at least one category'}>\r\n                                                    <div className={!(categoryids.length > 0)\r\n                                                        && !addProductState.error['error']['category'] ? 'checkicon' : addProductState.error['error']['category'] ? 'checkicon-error' : 'checkicon-active'}>\r\n                                                        <CheckCircleOutlined />\r\n                                                    </div>\r\n                                                </Tooltip>\r\n\r\n                                            </div>\r\n                                            <div className='addProductGridContainer-rightItemContainer-body'>\r\n                                                <Categories\r\n                                                    setCategoryOptions={setCategoryOptions}\r\n                                                    categoryOptions={categoryOptions}\r\n                                                    setcategoryIds={setcategoryIds} />\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                    </div>\r\n\r\n                                    <div className='addProductGridContainer__tag'>\r\n                                        <div className='addProductGridContainer-rightItemContainer'>\r\n                                            <div className='addProductGridContainer-rightItemContainer-header'>\r\n                                                <h3>\r\n                                                    Tags\r\n\t\t\t\t</h3>\r\n                                            </div>\r\n                                            <div className='addProductGridContainer-rightItemContainer-body'>\r\n                                                <Tags\r\n                                                    setSelectedTags={setSelectedTags}\r\n                                                    selectedTags={selectedTags}\r\n                                                    setTagIds={setTagIds} />\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                    </div>\r\n                                    <div className='addProductGridContainer__brand'>\r\n                                        <div className='addProductGridContainer-rightItemContainer'>\r\n                                            <div className='addProductGridContainer-rightItemContainer-header'>\r\n                                                <h3>\r\n                                                    Brand\r\n\t\t\t\t</h3>\r\n                                            </div>\r\n                                            <div className='addProductGridContainer-rightItemContainer-body'>\r\n                                                <Brands setBrandId={setBrandId} />\r\n                                            </div>\r\n                                        </div>\r\n\r\n\r\n                                    </div>\r\n\r\n                                </div>\r\n                            </section>\r\n\r\n\r\n                        </Modal>\r\n\r\n                        <MediaLibrary\r\n                            setvisible={setvisible}\r\n                            visible={visible}\r\n                            setmyImages={setmyImages}\r\n                            myImages={myImages}\r\n                            setmyThumbnailImage={setmyThumbnailImage}\r\n                            isModalOpenForThumbnail={isModalOpenForThumbnail}\r\n                            isModalOpenForImages={isModalOpenForImages}\r\n\r\n                        />\r\n                    </>\r\n                )}\r\n        </Formik>\r\n\r\n\r\n\r\n\r\n    );\r\n};\r\n\r\nexport default AddNewProduct;\r\n\r\n\r\n\r\n\r\n/*\r\n\r\n\r\nProduct variation ---->\r\n\r\nPrice [title]\r\n\t[regular input field] [offer inputfield]\r\n\r\nStock [title]\r\n\t[available input field] [minimum inputfield]\r\n\r\ndefault [default can be set to true]\r\n\r\nattributes [title]\r\n\t[add attributes name]\r\n\t\t[add attrubutes value]\r\n\r\n\t[add attributes name]\r\n\t\t[add attrubutes value\r\n\r\n*///","import React, { useState, useEffect } from 'react';\r\n\r\n// import third party ui lib\r\nimport { Empty, Popconfirm, Upload, message, Switch, Select, Button, notification, Table, Space, Input as CoolInput, Tooltip, Modal } from 'antd';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { useHistory } from 'react-router';\r\nimport Moment from 'react-moment';\r\n\r\n\r\n\r\nimport {\r\n    FileOutlined,\r\n    InboxOutlined,\r\n    RadiusUpleftOutlined,\r\n    RadiusUprightOutlined,\r\n    RadiusBottomleftOutlined,\r\n    RadiusBottomrightOutlined,\r\n    PlusOutlined,\r\n    DeleteOutlined,\r\n    EditOutlined,\r\n    CheckCircleOutlined\r\n} from '@ant-design/icons';\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n\r\n\r\n/// import hooks\r\nimport { useFetch, useHandleFetch } from \"../../hooks\";\r\n\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport { DataTableSkeleton } from \"../../components/Placeholders\";\r\nimport ProductBundleQuickEdit from \"./ProductBundleQuickEdit\"\r\nimport AddNewProductBundle from \"./AddNewProductBundle\"\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Bundle Created',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n    notification.error({\r\n        message: message || 'Something Went Wrong',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n    });\r\n};\r\n\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    name: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\n\r\nconst initialValues = {\r\n    name: '',\r\n    description: ''\r\n}\r\n\r\n\r\nconst { Column, ColumnGroup } = Table;\r\nconst { Search } = CoolInput;\r\n\r\n\r\n\r\nconst MyTable = ({ data, setTagList }) => {\r\n    const [visible, setvisible] = useState(false);\r\n    const [activeCategoryForEdit, setactiveCategoryForEdit] = useState(false);\r\n    const [deleteTagState, handleDeleteTagFetch] = useHandleFetch({}, 'deleteBundle');\r\n\r\n    const history = useHistory();\r\n\r\n\r\n    const handleDeleteTag = async (id) => {\r\n        const deleteTagRes = await handleDeleteTagFetch({\r\n            urlOptions: {\r\n                placeHolders: {\r\n                    id,\r\n                }\r\n            }\r\n        });\r\n\r\n\r\n\r\n        // @ts-ignore\r\n        if (deleteTagRes && deleteTagRes.status === 'ok') {\r\n            openSuccessNotification('Deleted Bundle');\r\n            const newtagList = data.filter(item => item.id !== id);\r\n            setTagList(newtagList);\r\n        }\r\n\r\n\r\n    }\r\n\r\n\r\n    const handleOk = (e: any) => {\r\n        setvisible(false);\r\n\r\n    };\r\n\r\n    const handleCancel = (e: any) => {\r\n        setvisible(false);\r\n    };\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <Table\r\n                // expandable={{\r\n                //     expandedRowRender: record => <p style={{ margin: 0 }}>{record.name}</p>,\r\n                //     rowExpandable: record => record.name !== 'Not Expandable',\r\n                //   }}\r\n                // bordered={true}\r\n                size='small'\r\n                // pagination={false}\r\n                dataSource={data}\r\n            >\r\n\r\n                <Column\r\n                    title=\"\"\r\n                    dataIndex=\"cover\"\r\n                    key=\"id\"\r\n                    width={'80px'}\r\n\r\n                    className='classnameofthecolumn'\r\n\r\n                    render={(cover, record: any) => (\r\n                        <>\r\n                            <img\r\n                                onClick={() => {\r\n                                    history.push(`/admin/bundle/${record.id}`)\r\n                                    setactiveCategoryForEdit(record)\r\n                                }}\r\n                                src={cover} alt='cover img' style={{\r\n                                    height: '40px',\r\n                                    width: '40px',\r\n                                    objectFit: \"contain\",\r\n                                    borderRadius: '3px',\r\n                                    cursor: 'pointer'\r\n                                }} />\r\n                        </>\r\n                    )}\r\n                />\r\n\r\n                <Column\r\n                    title=\"Name\"\r\n                    dataIndex=\"name\"\r\n                    key=\"id\"\r\n                    className='classnameofthecolumn'\r\n                    render={(text, record: any) => (\r\n                        <>\r\n\r\n                            <h4\r\n                                onClick={() => {\r\n                                    history.push(`/admin/bundle/${record.id}`)\r\n                                    // setBrandDetailVisible(true);\r\n                                    setactiveCategoryForEdit(record)\r\n                                }}\r\n                                style={{\r\n                                    fontWeight: 400,\r\n                                    color: '#555',\r\n                                    cursor: 'pointer'\r\n                                }}>\r\n                                {text}\r\n                            </h4>\r\n\r\n\r\n                        </>\r\n                    )}\r\n                />\r\n\r\n                <Column\r\n                    title=\"Price\"\r\n                    dataIndex=\"price\"\r\n                    key=\"id\"\r\n                    className='classnameofthecolumn'\r\n\r\n                />\r\n\r\n\r\n                <Column\r\n                    title=\"Product\"\r\n                    dataIndex=\"productCount\"\r\n                    key=\"id\"\r\n                    className='classnameofthecolumn'\r\n                />\r\n\r\n                {/* <Column\r\n                    title=\"Start Date\"\r\n                    dataIndex=\"startDate\"\r\n                    key=\"id\"\r\n                    className='classnameofthecolumn'\r\n                    render={(text, record: any) => (\r\n                        <>\r\n                            <h4\r\n                                style={{\r\n                                    fontWeight: 400,\r\n                                    color: '#555',\r\n                                    cursor: 'pointer'\r\n                                }}>\r\n                                <Moment >\r\n                                    {text}\r\n                                </Moment>\r\n\r\n                            </h4>\r\n                        </>\r\n                    )}\r\n\r\n                />\r\n\r\n                <Column\r\n                    title=\"End Date\"\r\n                    dataIndex=\"endDate\"\r\n                    key=\"id\"\r\n                    className='classnameofthecolumn'\r\n\r\n                /> */}\r\n\r\n                <Column\r\n\r\n                    className='classnameofthecolumn'\r\n                    title=\"\"\r\n                    key=\"action\"\r\n                    align='right'\r\n                    render={(text, record: any) => (\r\n                        <Space size=\"middle\">\r\n                            <a href='##'>\r\n                                <Tooltip placement=\"top\" title='Quick Edit Bundle'>\r\n                                    <span className='iconSize' onClick={() => {\r\n                                        setvisible(true)\r\n                                        setactiveCategoryForEdit(record);\r\n                                    }}>\r\n                                        <EditOutlined />\r\n                                    </span>\r\n                                </Tooltip>\r\n                            </a>\r\n\r\n\r\n\r\n                            <Popconfirm\r\n                                onConfirm={() => handleDeleteTag(record.id)}\r\n                                title=\"Are you sure？\" okText=\"Yes\" cancelText=\"No\">\r\n                                <span\r\n                                    className='iconSize iconSize-danger'\r\n                                >\r\n                                    <DeleteOutlined />\r\n                                </span>\r\n                            </Popconfirm>\r\n                        </Space>\r\n                    )}\r\n                />\r\n            </Table>\r\n\r\n\r\n\r\n\r\n\r\n\r\n            {activeCategoryForEdit && <ProductBundleQuickEdit\r\n             productList={data}\r\n             setProductList={setTagList}\r\n             setAddNewCategoryVisible={setvisible}\r\n             addNewCategoryVisible={visible}\r\n             productDetailData={activeCategoryForEdit} />}\r\n        </>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\ninterface Props { }\r\n\r\nconst TagList = ({ }: Props) => {\r\n\r\n\r\n    const [tagList, setTagList] = useState([]);\r\n\r\n    const [tagState, handleTagListFetch] = useHandleFetch({}, 'bundleList');\r\n\r\n\r\n    useEffect(() => {\r\n        const setTags = async () => {\r\n            const tags = await handleTagListFetch({\r\n                urlOptions:{\r\n                    params: {\r\n                      sortItem: 'added',\r\n                      sortOrderValue: '-1',\r\n                      productType: 'bundle'\r\n                    }\r\n                    }\r\n            });\r\n            // @ts-ignore\r\n            setTagList(tags);\r\n        }\r\n        setTags();\r\n    }, [])\r\n\r\n\r\n\r\n    const [addNewCategoryVisible, setAddNewCategoryVisible] = useState(false);\r\n\r\n    const getisSubmitButtonDisabled = (values, isValid) => {\r\n        if (!values.name || !isValid) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n\r\n    const handleOkAddNewCategory = (e: any) => {\r\n        setAddNewCategoryVisible(false);\r\n\r\n    };\r\n\r\n    const handleCancelAddNewCategory = (e: any) => {\r\n        setAddNewCategoryVisible(false);\r\n    };\r\n\r\n    const handleSearch = (value) => {\r\n        if (tagState.data.length > 0) {\r\n            const newTagList = tagState.data.filter(item => item.name.toLowerCase().includes(value.toLowerCase()));\r\n            setTagList(newTagList);\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <>\r\n\r\n            <div className='categoryListContainer'>\r\n                <div className='categoryListContainer__header'>\r\n                    <div className='categoryListContainer__header-searchBar-tag'>\r\n                        <h2 className='categoryListContainer__header-title'>\r\n                            Bundles\r\n                       </h2>\r\n\r\n                        <Search\r\n                            enterButton={false}\r\n                            className='searchbarClassName'\r\n                            placeholder=\"search bundles..\"\r\n                            onChange={e => handleSearch(e.target.value)}\r\n                        />\r\n                    </div>\r\n                    <Button\r\n                        // type=\"primary\"\r\n                        className='btnPrimaryClassNameoutline'\r\n                        icon={<PlusOutlined />}\r\n                        onClick={() => setAddNewCategoryVisible(true)}\r\n                    >\r\n                        Add New\r\n\t\t\t\t\t</Button>\r\n                </div>\r\n                <div className='categoryListContainer__categoryList'>\r\n                    {tagState.done && tagList.length > 0 && <MyTable\r\n                        setTagList={setTagList}\r\n                        data={tagList} />}\r\n                    {tagState.isLoading && <DataTableSkeleton />}\r\n\r\n\r\n                    {tagState.done && !(tagList.length > 0) && (\r\n                        <div style={{\r\n                            marginTop: '200px'\r\n                        }}>\r\n                            <Empty description='No Bundle found' image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            </div>\r\n\r\n            <AddNewProductBundle\r\n                productList={tagList}\r\n                setProductList={setTagList}\r\n                addNewCategoryVisible={addNewCategoryVisible}\r\n                setAddNewCategoryVisible={setAddNewCategoryVisible}\r\n\r\n            />\r\n        </>\r\n    );\r\n};\r\n\r\nexport default TagList;\r\n","import React, { useState, useEffect } from 'react';\r\n\r\n// import hooks \r\nimport { useHandleFetch } from '../../hooks';\r\n\r\n\r\n// import libraries \r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { message, Tooltip, Modal, Tabs, Spin  } from 'antd';\r\nimport CKEditor from '@ckeditor/ckeditor5-react';\r\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\r\n\r\n\r\nimport {\r\n    CheckCircleOutlined,\r\n    FileImageFilled,\r\n    PlusOutlined,\r\n    CloseOutlined,\r\n    CheckOutlined,\r\n    InfoCircleOutlined\r\n} from '@ant-design/icons';\r\n\r\n\r\n\r\n// import ReactQuill from 'react-quill';\r\n// import 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport InputSmall from '../../components/Field/InputSmall';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport MediaLibrary from \"../../components/MediaLibrary\";\r\nimport DatePicker from \"../../components/Field/DatePicker\";\r\nimport { openSuccessNotification, openErrorNotification } from \"../../components/Notification\";\r\nimport Tags from \"../product/Tags\";\r\nimport Brands from \"../product/Brands\";\r\nimport Categories from \"../product/Categories\";\r\nimport Pricing from \"../product/Pricing\";\r\nimport SelectProducts from \"./SelectProducts\";\r\nimport SelectedProductItems from \"./SelectedProductItems\";\r\nimport MetaTags from \"../category/MetaTags\";\r\n\r\nconst { TabPane } = Tabs;\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    name: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\n\r\nconst initialValues = {\r\n    name: \"\",\r\n    bundlePrice: null,\r\n    startDate: \"\",\r\n    endDate: \"\",\r\n    description: '',\r\n    bnName: '',\r\n\tbnDescription: '',\r\n\tmetaTitle: '',\r\n\tbnMetaTitle: '',\r\n\tmetaDescription: '',\r\n\tbnMetaDescription: '',\r\n\tmetaTags: '',\r\n\tbnMetaTags: '',\r\n}\r\n\r\n\r\n\r\ninterface Props {\r\n    addNewCategoryVisible: any;\r\n    setAddNewCategoryVisible: any;\r\n    productDetailData?:any; \r\n}\r\n\r\nconst AddNewProduct = ({ addNewCategoryVisible, setAddNewCategoryVisible, productDetailData }: Props) => {\r\n\r\n  \r\n\r\n    const [updateProductState, handleUpdateProductFetch] = useHandleFetch({}, 'updateProduct');\r\n    const [productDetailState, handleProductDetailFetch] = useHandleFetch({}, 'bundleDetail');\r\n    const [attachImageToItemMultipleState, handleAttachImageToItemMultipleFetch] = useHandleFetch({}, 'attachImageToItemMultiple');\r\n    const [attachImageToItemSingleState, handleAttachImageToItemSingleFetch] = useHandleFetch({}, 'attachImageToItemSingle');\r\n    const [detachImageFromItemMultipleState, handleDetachImageFromItemMultipleFetch] = useHandleFetch({}, 'detachImageFromItemMultiple');\r\n    const [detachImageFromItemSingleState, handleDetachImageFromItemSingleFetch] = useHandleFetch({}, 'detachImageFromItemSingle');\r\n    const [setImageAsThumbnailToItemState, handleSetImageAsThumbnailToItemFetch] = useHandleFetch({}, 'setImageAsThumbnailToItem');\r\n\r\n\r\n    const [productList,setProductList] = useState([]);\r\n    const [visible, setvisible] = useState(false);\r\n    const [myImages, setmyImages] = useState(false);\r\n    const [myThumbnailImage, setmyThumbnailImage] = useState(false);\r\n    const [isModalOpenForThumbnail, setisModalOpenForThumbnail] = useState(false);\r\n    const [isModalOpenForImages, setisModalOpenForImages] = useState(false);\r\n    const [categoryids, setcategoryIds] = useState([]);\r\n    const [tagIds, setTagIds] = useState([]);\r\n    const [brandId, setBrandId] = useState('');\r\n    const [pricing, setPricing] = useState([]);\r\n    const [coverImageId, setCoverImageId] = useState('');\r\n    const [categoryOptions, setCategoryOptions] = useState([]);\r\n    const [selectedTags, setSelectedTags] = useState([]);\r\n    const [date, setDateFeild] = useState('');\r\n    const [time, setTimeFeild] = useState('');\r\n    const [description, setDescription] = useState('');\r\n\tconst [bnDescription, setBNDescription] = useState('');\r\n\tconst [metaTags,setMetaTags] = useState([]);\r\n\tconst [bnMetaTags,setBnMetaTags] = useState([]);\r\n\tconst [editpricingItem,setEditPricingItem] = useState({}); \r\n\tconst [pricingTagActiveKey,setpricingTagActiveKey] = useState('2');\r\n\tconst [isPricingEditActive, seTisPricingEditActive] = useState(false); \r\n\r\n    const [productIds,setProductIds] = useState([]); \r\n\r\n\r\n\r\n    const [addProductState, handleAddProductFetch] = useHandleFetch({}, 'updateBundle');\r\n\r\n    useEffect(() => {\r\n        const getProductDetail = async () => {\r\n            await handleProductDetailFetch({\r\n                urlOptions: {\r\n                    placeHolders: {\r\n                        id: productDetailData.id\r\n                    }\r\n                }\r\n            })\r\n        };\r\n\r\n        getProductDetail();\r\n\r\n    }, [productDetailData]);\r\n\r\n\r\n    const [price, setPrice] = useState({\r\n        regular: null,\r\n        offer: null,\r\n    });\r\n\r\n\r\n\r\n\r\n    const handleSubmit = async (values: any, actions: any) => {\r\n        // @ts-ignore\r\n        const imagesIds = myImages ? myImages.map(image => {\r\n            return image.id;\r\n        }) : [];\r\n\r\n        console.log('productList',productList);\r\n\r\n        const products = productList.length > 0 ? productList.map(product => {\r\n            return {\r\n                _id: product._id,\r\n                variation: product.variation,\r\n                quantity: product.quantity,\r\n            }\r\n        }) : [];\r\n\r\n    \r\n            if (productDetailData && Object.keys(productDetailData).length > 0) {\r\n                const aboutToUpdatedImageIds = []; \r\n    \r\n                if(imagesIds && imagesIds.length > 0){\r\n                    imagesIds.forEach(imageId => {\r\n                        if(productDetailData && productDetailData['image']){\r\n                            if(!productDetailData['image'].includes(imageId)){\r\n                                aboutToUpdatedImageIds.push(imageId)\r\n                            }\r\n                        }\r\n                    });\r\n                }\r\n    \r\n          \r\n                if (aboutToUpdatedImageIds[0] && aboutToUpdatedImageIds.length > 1) {\r\n                    await handleAttachImageToItemMultipleFetch({\r\n                        urlOptions: {\r\n                            placeHolders: {\r\n                                collection: 'product',\r\n                                itemId: productDetailData.id\r\n                            }\r\n                        },\r\n                        body: {\r\n                            image: aboutToUpdatedImageIds\r\n                        }\r\n                    });\r\n                }\r\n                else if (aboutToUpdatedImageIds[0] && aboutToUpdatedImageIds.length < 1) {\r\n                    await handleAttachImageToItemSingleFetch({\r\n                        urlOptions: {\r\n                            placeHolders: {\r\n                                imageId: aboutToUpdatedImageIds[0].id,\r\n                                collection: 'product',\r\n                                itemId: productDetailData.id\r\n                            }\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n        \r\n            \r\n\r\n\r\n\r\n        const addProductRes = await handleAddProductFetch({\r\n            urlOptions: {\r\n                placeHolders: {\r\n                    id: productDetailData.id\r\n                }\r\n            },\r\n            body: {\r\n                name: values.name.trim(),\r\n                category: categoryids,\r\n                tags: tagIds,\r\n                brand: brandId,\r\n                price: price,\r\n                description: description,\r\n                model: values.model,\r\n                unit: values.unit,\r\n                image: imagesIds,\r\n                products,\r\n\r\n                metaTitle: values.metaTitle,\r\n\t\t\t\tmetaDescription: values.metaDescription,\r\n\t\t\t\tmetaTags: metaTags.join(','),\r\n\r\n\t\t\t\t\r\n\t\t\t\tbn: {\r\n\t\t\t\t\tmetaTitle: values.bnMetaTitle,\r\n\t\t\t\t\tmetaDescription: values.bnMetaDescription,\r\n\t\t\t\t\tmetaTags: bnMetaTags.join(','),\r\n\t\t\t\t\tname: values.bnName.trim(),\r\n\t\t\t\t\tunit: values.metaUnit,\r\n\t\t\t\t\tdescription: values.bnDescription,\r\n                }\r\n                \r\n                \r\n                // startDate, endDate,\r\n            }\r\n        });\r\n\r\n\r\n        // @ts-ignore\r\n        if (addProductRes && addProductRes.status === 'ok') {\r\n            openSuccessNotification('Bundle Updated');\r\n  \r\n\r\n            setAddNewCategoryVisible(false)\r\n\r\n\r\n            // updat bundle detail data\r\n\r\n\r\n\r\n\r\n            // @ts-ignore\r\n            setmyImages([]);\r\n            setCoverImageId('');\r\n            setPricing([]);\r\n            setTagIds([]);\r\n            setSelectedTags([]);\r\n            setBrandId(\"\");\r\n            setcategoryIds([]);\r\n            setCategoryOptions([]);\r\n            actions.resetForm();\r\n        }\r\n        else {\r\n            // openErrorNotification();\r\n        }\r\n\r\n        actions.setSubmitting(false);\r\n\r\n\r\n    };\r\n\r\n\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        if (!addProductState['isLoading']) {\r\n            const error = addProductState['error'];\r\n            if (error['isError'] && Object.keys(error['error']).length > 0) {\r\n\r\n\r\n                const errors =\r\n                    Object.values(error['error']).length > 0\r\n                        ? Object.values(error['error'])\r\n                        : [];\r\n                errors.forEach((err, i) => {\r\n                    if (typeof err === 'string') {\r\n                        openErrorNotification(err)\r\n                    }\r\n                    else if (typeof err === 'object') {\r\n                        if (err && Object.keys(err).length > 0) {\r\n                            const errs = Object.values(err);\r\n                            errs.forEach(err => {\r\n                                openErrorNotification(err)\r\n                            })\r\n\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n        }\r\n    }, [addProductState])\r\n\r\n\r\n\r\n    useEffect(()=>{\r\n        if(productDetailState['data'] && productDetailState['data']['products'] && productDetailState['data']['products'].length > 0){\r\n            const productIds = productDetailState['data']['products'].map(item => {\r\n              return {\r\n                ...item,\r\n                id: item._id,\r\n              }\r\n            }); \r\n            setProductIds(productIds); \r\n            const productList = productDetailState['data'].products.map(item => {\r\n                return {\r\n                    _id: item._id,\r\n                    variation: item.variation,\r\n                    quantity: item.quantity,\r\n                    totalPrice: item.totalPrice \r\n                }\r\n            }); \r\n           setProductList(productList); \r\n\r\n        }; \r\n        \r\n        console.log(\"productDetailState['data']\",productDetailState['data']);\r\n    },[productDetailState['done']])\r\n\r\n\r\n\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        if (productIds && productIds.length > 0 && productList) {\r\n            if (productIds.length > productList.length) {\r\n                const variation = productIds[productIds.length - 1]['pricing'] && productIds[productIds.length - 1]['pricing'].length > 0 && productIds[productIds.length - 1]['pricing'][0]['_id'];\r\n                console.log('variation', variation)\r\n\r\n                setProductList([...productList, {\r\n                    ...productIds[productIds.length - 1],\r\n                    _id: productIds[productIds.length - 1]['id'],\r\n                    variation: variation,\r\n                    quantity: 1\r\n                }]);\r\n            }\r\n\r\n\r\n            else if (productIds.length < productList.length) {\r\n                console.log('productIds', productIds);\r\n                console.log('productList', productList);\r\n\r\n                const newProductList = productList.filter(item => {\r\n                    let isTrue = false;\r\n                    productIds.forEach(product => {\r\n                        if (product.id === item._id) {\r\n                            isTrue = true;\r\n                        }\r\n                    });\r\n                    return isTrue;\r\n                })\r\n                setProductList(newProductList);\r\n            }\r\n\r\n        }\r\n        else {\r\n            setProductList([]);\r\n        }\r\n        // console.log('productIds', productIds)\r\n\r\n    }, [productIds])\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        if (productDetailData && productDetailData.brand) {\r\n            setBrandId(productDetailData.brand['id']);\r\n        }\r\n        else {\r\n            setBrandId('');\r\n        }\r\n        if (productDetailData && productDetailData.tags && productDetailData.tags.length > 0) {\r\n            // const tagIds = productDetailData.tags.map(item => item.id);\r\n            setSelectedTags(productDetailData.tags);\r\n        }\r\n        else {\r\n            setSelectedTags([]);\r\n\r\n        }\r\n        if (productDetailData && productDetailData.category && productDetailData.category.length > 0) {\r\n            // const categoryIds = productDetailData.category.map(item => item.id);\r\n\r\n            const categoryIds = productDetailData.category;\r\n            setCategoryOptions(categoryIds);\r\n            setcategoryIds(categoryIds); \r\n        }\r\n        else {\r\n            setCategoryOptions([]);\r\n        }\r\n\r\n        if (productDetailData && productDetailData.anotherPrice && productDetailData.anotherPrice) {\r\n            setPrice(productDetailData.anotherPrice); \r\n        }\r\n        else {\r\n            setPricing([]);\r\n\r\n        }\r\n\r\n\r\n        if (productDetailData && productDetailData.date && productDetailData.date) {\r\n            setDateFeild(productDetailData.date)\r\n        }\r\n        else {\r\n            setDateFeild('');\r\n\r\n        }\r\n\r\n        if (productDetailData && productDetailData.time && productDetailData.time) {\r\n            setTimeFeild(productDetailData.time);\r\n        }\r\n        else {\r\n            setTimeFeild('');\r\n        }\r\n\r\n\r\n\r\n    }, [productDetailData]);\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        if (productDetailState.done && Object.keys(productDetailState).length > 0) {\r\n\r\n            const images = productDetailState.data.image;\r\n            if (images && images.length > 0) {\r\n                setmyImages(images);\r\n            }\r\n\r\n            if (productDetailState.data.cover && productDetailState.data.cover['id']) {\r\n                // @ts-ignore\r\n                setmyImages([productDetailState.data.cover, ...images]);\r\n                console.log('catcat', [productDetailState.data.cover, ...images]);\r\n                setCoverImageId(productDetailState.data.cover['id']);\r\n            }\r\n        }\r\n    }, [productDetailState])\r\n\r\n\r\n    useEffect(() => {\r\n        console.log('thumnail', myImages);\r\n        // @ts-ignore\r\n        if (myImages && myImages[0] && myImages.length < 2) {\r\n            console.log('thumnail2', myImages);\r\n\r\n            if (coverImageId !== myImages[0].id) {\r\n                setCoverImageId(myImages[0].id);\r\n                handleSetImageAsThumnail(myImages[0]);\r\n            }\r\n\r\n        }\r\n\r\n    }, [myImages])\r\n\r\n\r\n    const handleDetachSingleImage = async id => {\r\n        await handleDetachImageFromItemSingleFetch({\r\n            urlOptions: {\r\n                placeHolders: {\r\n                    imageId: id,\r\n                    collection: 'product',\r\n                    itemId: productDetailData.id\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n\r\n\r\n    const handleSetImageAsThumnail = async image => {\r\n\r\n        const thumbnailRes = await handleSetImageAsThumbnailToItemFetch({\r\n            urlOptions: {\r\n                placeHolders: {\r\n                    imageId: image.id,\r\n                    collection: 'product',\r\n                    itemId: productDetailData.id\r\n                }\r\n            }\r\n        });\r\n\r\n        console.log('thumbnailRes', thumbnailRes);\r\n\r\n        // @ts-ignore\r\n        if (thumbnailRes && thumbnailRes.status === 'ok') {\r\n            openSuccessNotification('Set as thumbnail!')\r\n            // const positionInBrand = () => {\r\n            //     return productList.map(item => item.id).indexOf(productDetailData.id);\r\n            // }\r\n\r\n            // const index = positionInBrand();\r\n\r\n            // const prevItem = productList.find(item => item.id === productDetailData.id);\r\n\r\n            // if (prevItem) {\r\n            //     console.log('prevItem--', prevItem, 'image--', image);\r\n            //     const updatedItem = Object.assign({}, productList[index], { ...prevItem, cover: image.cover });\r\n            //     const updateProductList = [...productList.slice(0, index), updatedItem, ...productList.slice(index + 1)];\r\n            //     setProductList(updateProductList);\r\n\r\n            // }\r\n        }\r\n        else {\r\n            openErrorNotification(\"Couldn't set as thumbnail, Something went wrong\")\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        if (!updateProductState['isLoading']) {\r\n            const error = updateProductState['error'];\r\n            if (error['isError'] && Object.keys(error['error']).length > 0) {\r\n\r\n\r\n                const errors =\r\n                    Object.values(error['error']).length > 0\r\n                        ? Object.values(error['error'])\r\n                        : [];\r\n                errors.forEach((err, i) => {\r\n                    if (typeof err === 'string') {\r\n                        openErrorNotification(err)\r\n                    }\r\n                    else if (typeof err === 'object') {\r\n                        if (err && Object.keys(err).length > 0) {\r\n                            const errs = Object.values(err);\r\n                            errs.forEach(err => {\r\n                                openErrorNotification(err)\r\n                            })\r\n\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n        }\r\n    }, [updateProductState])\r\n\r\n\r\n    const handleCancel = (e: any) => {\r\n        setAddNewCategoryVisible(false);\r\n    };\r\n\r\n\r\n    const getisSubmitButtonDisabled = (values, isValid) => {\r\n        if (!values.name || !(pricing.length > 0) || !(categoryOptions.length > 0) || !isValid) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n\r\n    const handleImagesDelete = (id) => {\r\n        // @ts-ignore\r\n        const newImages = myImages && myImages.filter(image => {\r\n            return image.id !== id;\r\n        })\r\n\r\n        setmyImages(newImages);\r\n    }\r\n\r\n    const handleDeleteFromSelectedImage = () => {\r\n\r\n    };\r\n\r\n    const handleThumbnailImageDelete = (id) => {\r\n        // @ts-ignore\r\n        const newImages = myThumbnailImage && myThumbnailImage.filter(image => {\r\n            return image.id !== id;\r\n        })\r\n\r\n        if (newImages.length > 0) {\r\n            setmyThumbnailImage(newImages);\r\n\r\n        }\r\n        else setmyThumbnailImage(false);\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    useEffect(()=>{\r\n\r\n        if(productDetailState.data && Object.keys(productDetailState.data).length > 0 && productDetailState.data.metaTags){\r\n            const metaTags = productDetailState.data.metaTags.split(','); \r\n\r\n            console.log('localMetaTags',metaTags);\r\n           \r\n            const bnMetaTags = productDetailState.data.bn['metaTags'].split(','); \r\n            setMetaTags(metaTags)\r\n            setBnMetaTags(bnMetaTags)\r\n        }\r\n\r\n    },[productDetailState['done']])\r\n\r\n\r\n\r\n\r\n    return (\r\n        <Formik\r\n            onSubmit={(values, actions) => handleSubmit(values, actions)}\r\n            validationSchema={validationSchema}\r\n            validateOnBlur={false}\r\n            enableReinitialize={true}\r\n            initialValues={\r\n                { ...initialValues,\r\n                    ...{\r\n                    ...productDetailData,\r\n                    ...( productDetailState['data'] && Object.keys(productDetailState['data']).length > 0 && productDetailState['data']['bn'] && {\r\n                        bnMetaTitle: productDetailState['data']['bn'].metaTitle,\r\n                        bnMetaDescription: productDetailState['data']['bn'].metaDescription,\r\n                        bnName: productDetailState['data']['bn'].name,\r\n                        metaUnit: productDetailState['data']['bn'].unit,\r\n                        bnDescription: productDetailState['data']['bn'].description,\r\n                      }),\r\n                } }\r\n            }\r\n        >\r\n            {({\r\n                handleChange,\r\n                values,\r\n                handleSubmit,\r\n                errors,\r\n                isValid,\r\n                isSubmitting,\r\n                touched,\r\n                handleBlur,\r\n                setFieldTouched,\r\n                handleReset,\r\n            }) => (\r\n                    <>\r\n                        <Modal\r\n                            style={{\r\n                                top: '40px',\r\n\r\n                            }}\r\n                            bodyStyle={{\r\n                                margin: 0,\r\n                                padding: 0,\r\n                            }}\r\n                            width={'70vw'}\r\n                            title=\"Add New Bundle\"\r\n                            visible={addNewCategoryVisible}\r\n                            onOk={(e: any) => handleSubmit(e)}\r\n                            onCancel={handleCancel}\r\n                            okText='Update'\r\n                            okButtonProps={{\r\n                                loading: isSubmitting,\r\n                                htmlType: \"submit\",\r\n                            }}\r\n                        >\r\n\r\n\r\n                            <section className='addProductGridContainer'>\r\n                                <div className='addProductGridContainer__left'>\r\n                                    <div className='addProductGridContainer__name'>\r\n                                        <div className='addProductGridContainer__item-header'>\r\n                                            <h3>\r\n                                                Bundle Information *\r\n\t\t\t                                </h3>\r\n\r\n                                            <div className={values.name && values.name.length > 2 ? 'checkicon-active' : 'checkicon'}>\r\n                                                <CheckCircleOutlined />\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className='addProductGridContainer__item-body'>\r\n                                        <Input\r\n\t\t\t\t\t\t\t\t\t\t\t\tlabel='Name'\r\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.name}\r\n\t\t\t\t\t\t\t\t\t\t\t\tplaceHolder={'Rafty ox'}\r\n\t\t\t\t\t\t\t\t\t\t\t\tname='name'\r\n\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['name'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['name'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('name');\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\tlabel='BN Name'\r\n\t\t\t\t\t\t\t\t\t\t\tvalue={values.bnName}\r\n\t\t\t\t\t\t\t\t\t\t\tplaceHolder={'রাফতি অক্স'}\r\n\t\t\t\t\t\t\t\t\t\t\tname='bnName'\r\n\t\t\t\t\t\t\t\t\t\t\tisError={(touched.bnName && errors.bnName) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['bnName'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.bnName && errors.bnName) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['bnName'])}\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('bnName');\r\n\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\r\n\r\n\r\n                                    \r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\t\t\t\t\t\tDescription\r\n                                             </h3>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\twidth: '100%',\r\n\t\t\t\t\t\t\t\t\t\t\t\tmaxWidth: '100%'\r\n\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<CKEditor\r\n\t\t\t\t\t\t\t\t\t\t\t\t\teditor={ClassicEditor}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tdata={description}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonInit={editor => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t// You can store the \"editor\" and use when it is needed.\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tconsole.log('Editor is ready to use!', editor);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(event, editor) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tconst data = editor.getData();\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetDescription(data);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonBlur={(event, editor) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tconsole.log('Blur.', editor);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonFocus={(event, editor) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tconsole.log('Focus.', editor);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tmarginTop:\"15px\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}></div>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\t\t\t\t\t\tBN Description\r\n                                             </h3>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\twidth: '100%',\r\n\t\t\t\t\t\t\t\t\t\t\t\tmaxWidth: '100%'\r\n\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<CKEditor\r\n\t\t\t\t\t\t\t\t\t\t\t\t\teditor={ClassicEditor}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tdata={bnDescription}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonInit={editor => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t// You can store the \"editor\" and use when it is needed.\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tconsole.log('Editor is ready to use!', editor);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(event, editor) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tconst data = editor.getData();\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetBNDescription(data);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonBlur={(event, editor) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tconsole.log('Blur.', editor);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonFocus={(event, editor) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tconsole.log('Focus.', editor);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n                                            {/* <div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\tdisplay: 'flex',\r\n\t\t\t\t\t\t\t\t\t\t\t\tjustifyContent: 'space-between'\r\n\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\twidth: '48%',\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<DatePicker\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabel='Date'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={handleDateChange} />\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\twidth: '48%'\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<DatePicker\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tdate={date}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\twithTime={true}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder='Select time'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabel='Time'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={handleTimeChange} />\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t</div> */}\r\n                                            <div style={{\r\n                                                marginBottom: '15px'\r\n                                            }}></div>\r\n                                            {/* \r\n\t\t\t\t\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\t\t\t\t\trows={1}\r\n\t\t\t\t\t\t\t\t\t\t\t\tlabel='Venue'\r\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.venue}\r\n\t\t\t\t\t\t\t\t\t\t\t\tname='venue'\r\n\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.venue && errors.venue) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['venue'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.venue && errors.venue) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['venue'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('venue');\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\t\tlabel='Purchase Limit'\r\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.purchaseLimit}\r\n\t\t\t\t\t\t\t\t\t\t\t\ttype='number'\r\n\t\t\t\t\t\t\t\t\t\t\t\tname='purchaseLimit'\r\n\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.purchaseLimit && errors.purchaseLimit) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['purchaseLimit'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.purchaseLimit && errors.purchaseLimit) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['purchaseLimit'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('purchaseLimit');\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t/> */}\r\n\r\n                                            <div className='addProductGridContainer__item-body-variationCard-item'>\r\n                                                <h4>\r\n                                                    Price *\r\n\t\t\t                                \t</h4>\r\n                                                <div className='addProductGridContainer__item-body-variationCard-item-container'>\r\n                                                    <div className='addProductGridContainer__item-body-variationCard-item-container-left'>\r\n                                                        <InputSmall\r\n                                                            label='Regular'\r\n                                                            value={price.regular}\r\n                                                            name='regular'\r\n                                                            onChange={(e) => setPrice({\r\n                                                                ...price,\r\n                                                                regular: e.target.value\r\n                                                            })}\r\n                                                        />\r\n\r\n\r\n                                                    </div>\r\n                                                    <div className='addProductGridContainer__item-body-variationCard-item-container-right'>\r\n\r\n                                                        <InputSmall\r\n                                                            label='Offer'\r\n                                                            value={price.offer}\r\n                                                            name='offer'\r\n                                                            onChange={(e) => setPrice({\r\n                                                                ...price,\r\n                                                                offer: e.target.value\r\n                                                            })}\r\n                                                        />\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n\r\n\r\n\r\n                                            {/* <div style={{\r\n                                                display: 'flex',\r\n                                                justifyContent: 'space-between'\r\n                                            }}>\r\n                                                <div style={{\r\n                                                    width: '48%',\r\n                                                }}>\r\n                                                    <DatePicker\r\n                                                        date={startDate}\r\n                                                        label='Start Date'\r\n                                                        onChange={handleStartDataChange} />\r\n\r\n                                                </div>\r\n                                                <div style={{\r\n                                                    width: '48%'\r\n                                                }}>\r\n\r\n                                                    <DatePicker\r\n                                                        date={endDate}\r\n                                                        label='End Date'\r\n                                                        onChange={handleEndDataChange} />\r\n\r\n                                                </div>\r\n                                            </div> */}\r\n\r\n\r\n                                        </div>\r\n\r\n\r\n\r\n                                    </div>\r\n\r\n                                    {/* <div className='addProductGridContainer__price'>\r\n                                        <div className='addProductGridContainer__item-header'>\r\n                                            <h3>\r\n                                                Products\r\n\t\t                                    </h3>\r\n\r\n                                            <div className={pricing && pricing.length > 0 ? 'checkicon-active' : 'checkicon'}>\r\n                                                <CheckCircleOutlined />\r\n                                            </div>\r\n                                        </div>\r\n\r\n\r\n                                        <div className='addProductGridContainer__item-body'>\r\n\r\n                                            <h3 className='inputFieldLabel'>\r\n                                                Products\r\n                                            </h3>\r\n                                            <SelectProducts\r\n                                                setProductIds={setProductIds}\r\n                                                productIds={productIds}\r\n                                            />\r\n\r\n                                            <div style={{\r\n                                                marginTop: \"15px\"\r\n                                            }}></div>\r\n\r\n                                            <h3 className='inputFieldLabel'>\r\n                                                Selcted Products\r\n                                            </h3>\r\n\r\n                                            <SelectedProductItems\r\n                                                productList={productList}\r\n                                                setProductList={setProductList}\r\n                                            />\r\n                                        </div>\r\n                                    </div> */}\r\n\r\n\r\n                                    <div className='addProductGridContainer__image'>\r\n\r\n                                <div className='addProductGridContainer__item-header'>\r\n                                    <h3>\r\n                                        Image\r\n                                </h3>\r\n\r\n                                    <Tooltip\r\n                                        placement=\"left\" title={'Click on the image to select cover image, By default 1st image is selected as cover'}>\r\n                                        <a href='###'>\r\n                                            <InfoCircleOutlined />\r\n                                        </a>\r\n                                    </Tooltip>\r\n</div>\r\n\r\n<div\r\n    style={{\r\n        padding: \"10px\"\r\n    }}\r\n    className='aboutToUploadImagesContainer'>\r\n    {productDetailState.isLoading && (\r\n        <div style={{\r\n            padding: '20px 0'\r\n        }}>\r\n            <Spin />\r\n        </div>\r\n    )}\r\n    {productDetailState.done && (\r\n        <>\r\n            {myImages &&\r\n                // @ts-ignore\r\n                myImages.length > 0 && myImages.map((image, index) => {\r\n                    return (\r\n                        <div className='aboutToUploadImagesContainer__item'>\r\n                            <div\r\n                                className='aboutToUploadImagesContainer__item-imgContainer'\r\n                                onClick={() => {\r\n                                    setCoverImageId(image.id);\r\n                                    handleSetImageAsThumnail(image);\r\n                                }}\r\n                            >\r\n                                <img src={image.cover} alt={image.alt} />\r\n                            </div>\r\n\r\n                            <span\r\n                                onClick={() => {\r\n                                    handleImagesDelete(image.id)\r\n                                    handleDetachSingleImage(image.id)\r\n                                }\r\n\r\n                                }\r\n                                className='aboutToUploadImagesContainer__item-remove'>\r\n                                <CloseOutlined />\r\n                            </span>\r\n\r\n\r\n                            {coverImageId === image.id ? (\r\n                                <span className='aboutToUploadImagesContainer__item-cover'>\r\n                                    <CheckOutlined />\r\n                                </span>\r\n                            ) : !coverImageId && index === 0 && (\r\n                                <span className='aboutToUploadImagesContainer__item-cover'>\r\n                                    <CheckOutlined />\r\n                                </span>\r\n                            )}\r\n\r\n\r\n                        </div>\r\n                    )\r\n                })}\r\n\r\n\r\n            <Tooltip\r\n                title={'Attach images'}>\r\n\r\n                <div\r\n                    onClick={() => {\r\n                        setvisible(true);\r\n                        setisModalOpenForImages(true);\r\n                        setisModalOpenForThumbnail(false);\r\n                    }}\r\n                    className='aboutToUploadImagesContainer__uploadItem'>\r\n                    {/* <FileAddOutlined />\r\n            <FileImageTwoTone />\r\n            <FileImageOutlined /> */}\r\n                    <FileImageFilled />\r\n                    {/* <h5>\r\n             Select From Library\r\n    <     /h5> */}\r\n                    <span className='aboutToUploadImagesContainer__uploadItem-plus'>\r\n                        <PlusOutlined />\r\n                    </span>\r\n                </div>\r\n            </Tooltip>\r\n        </>\r\n    )}\r\n\r\n</div>\r\n</div>\r\n\r\n\r\n\r\n\r\n<div className='addProductGridContainer__image'>\r\n\r\n<div className='addProductGridContainer__item-header'>\r\n    <h3>\r\n    Meta Data\r\n</h3>\r\n\r\n    <Tooltip\r\n        placement=\"left\" title={\"Meta data will be used to make the user's easy and for search engine optimization.\"}>\r\n        <a href='###'>\r\n            <InfoCircleOutlined />\r\n        </a>\r\n    </Tooltip>\r\n</div>\r\n<div className='addProductGridContainer__item-body'>\r\n\r\n                \r\n<Input\r\nlabel='Meta title'\r\nvalue={values.metaTitle}\r\nplaceHolder={'category...'}\r\nname='metaTitle'\r\nisError={(touched.metaTitle && errors.metaTitle) ||\r\n(!isSubmitting && addProductState.error['error']['metaTitle'])}\r\n\r\nerrorString={(touched.metaTitle && errors.metaTitle) ||\r\n(!isSubmitting && addProductState.error['error']['metaTitle'])}\r\nonChange={(e: any) => {\r\nhandleChange(e);\r\nsetFieldTouched('metaTitle')\r\n}}\r\n/>\r\n\r\n<Input\r\nlabel='BN Meta title'\r\nvalue={values.bnMetaTitle}\r\nplaceHolder={'ক্যাটাগড়ি...'}\r\nname='bnMetaTitle'\r\nisError={(touched.bnMetaTitle && errors.bnMetaTitle) ||\r\n(!isSubmitting && addProductState.error['error']['bnMetaTitle'])}\r\n\r\nerrorString={(touched.bnMetaTitle && errors.bnMetaTitle) ||\r\n(!isSubmitting && addProductState.error['error']['bnMetaTitle'])}\r\nonChange={(e: any) => {\r\nhandleChange(e);\r\nsetFieldTouched('bnMetaTitle');\r\n}}\r\n/>\r\n\r\n<TextArea\r\nlabel='Meta description'\r\nvalue={values.metaDescription}\r\nplaceholder={'meta...'}\r\nname='metaDescription'\r\nisError={(touched.metaDescription && errors.metaDescription) ||\r\n(!isSubmitting && addProductState.error['error']['metaDescription'])}\r\n\r\nerrorString={(touched.metaDescription && errors.metaDescription) ||\r\n(!isSubmitting && addProductState.error['error']['metaDescription'])}\r\nonChange={(e: any) => {\r\nhandleChange(e);\r\nsetFieldTouched('metaDescription');\r\n}}\r\n/>\r\n\r\n<TextArea\r\nlabel='BN Meta Description'\r\nvalue={values.bnMetaDescription}\r\nplaceholder={'এইয় মেট...'}\r\nname='bnMetaDescription'\r\nisError={(touched.bnMetaDescription && errors.bnMetaDescription) ||\r\n(!isSubmitting && addProductState.error['error']['bnMetaDescription'])}\r\n\r\nerrorString={(touched.bnMetaDescription && errors.bnMetaDescription) ||\r\n(!isSubmitting && addProductState.error['error']['bnMetaDescription'])}\r\nonChange={(e: any) => {\r\nhandleChange(e);\r\nsetFieldTouched('bnMetaDescription');\r\n}}\r\n/>\r\n\r\n<h3 className='inputFieldLabel'>\r\nMeta Tags (grocery,fashion)\r\n</h3>\r\n\r\n<MetaTags\r\n// @ts-ignore\r\nsetTags={setMetaTags}\r\ntags={metaTags}\r\n/>\r\n\r\n<div style={{\r\nmarginTop:'15px'\r\n}}></div>\r\n\r\n<h3 className='inputFieldLabel'>\r\nBN Meta Tags (মুদিখানা,ফ্যাশন)\r\n</h3>\r\n\r\n<MetaTags\r\n// @ts-ignore\r\nsetTags={setBnMetaTags}\r\ntags={bnMetaTags}\r\n/>\r\n</div>\r\n</div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n                                </div>\r\n                                <div className='addProductGridContainer__right'>\r\n                                    <div className='addProductGridContainer__category'>\r\n\r\n                                        <div className='addProductGridContainer-rightItemContainer'>\r\n                                            <div className='addProductGridContainer-rightItemContainer-header'>\r\n                                                <h3>\r\n                                                    Categories *\r\n\t\t\t                                \t</h3>\r\n\r\n                                                <Tooltip\r\n                                                    color='red'\r\n                                                    visible={addProductState.error['error']['category'] && !(categoryids.length > 0)}\r\n                                                    placement=\"left\" title={'Select at least one category'}>\r\n                                                    <div className={!(categoryids.length > 0)\r\n                                                        && !addProductState.error['error']['category'] ? 'checkicon' : addProductState.error['error']['category'] ? 'checkicon-error' : 'checkicon-active'}>\r\n                                                        <CheckCircleOutlined />\r\n                                                    </div>\r\n                                                </Tooltip>\r\n\r\n                                            </div>\r\n                                            <div className='addProductGridContainer-rightItemContainer-body'>\r\n                                                <Categories\r\n                                                    setCategoryOptions={setCategoryOptions}\r\n                                                    categoryOptions={categoryOptions}\r\n                                                    setcategoryIds={setcategoryIds} />\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                    </div>\r\n\r\n                                    <div className='addProductGridContainer__tag'>\r\n                                        <div className='addProductGridContainer-rightItemContainer'>\r\n                                            <div className='addProductGridContainer-rightItemContainer-header'>\r\n                                                <h3>\r\n                                                    Tags\r\n\t\t\t\t</h3>\r\n                                            </div>\r\n                                            <div className='addProductGridContainer-rightItemContainer-body'>\r\n                                                <Tags\r\n                                                    setSelectedTags={setSelectedTags}\r\n                                                    selectedTags={selectedTags}\r\n                                                    setTagIds={setTagIds} />\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                    </div>\r\n                                    <div className='addProductGridContainer__brand'>\r\n                                        <div className='addProductGridContainer-rightItemContainer'>\r\n                                            <div className='addProductGridContainer-rightItemContainer-header'>\r\n                                                <h3>\r\n                                                    Brand\r\n\t\t\t\t</h3>\r\n                                            </div>\r\n                                            <div className='addProductGridContainer-rightItemContainer-body'>\r\n                                                <Brands setBrandId={setBrandId} />\r\n                                            </div>\r\n                                        </div>\r\n\r\n\r\n                                    </div>\r\n\r\n                                </div>\r\n                            </section>\r\n\r\n\r\n                        </Modal>\r\n\r\n                        <MediaLibrary\r\n                            setvisible={setvisible}\r\n                            visible={visible}\r\n                            setmyImages={setmyImages}\r\n                            myImages={myImages}\r\n                            setmyThumbnailImage={setmyThumbnailImage}\r\n                            isModalOpenForThumbnail={isModalOpenForThumbnail}\r\n                            isModalOpenForImages={isModalOpenForImages}\r\n\r\n                        />\r\n                    </>\r\n                )}\r\n        </Formik>\r\n\r\n\r\n\r\n\r\n    );\r\n};\r\n\r\nexport default AddNewProduct;\r\n\r\n\r\n\r\n\r\n/*\r\n\r\n\r\nProduct variation ---->\r\n\r\nPrice [title]\r\n\t[regular input field] [offer inputfield]\r\n\r\nStock [title]\r\n\t[available input field] [minimum inputfield]\r\n\r\ndefault [default can be set to true]\r\n\r\nattributes [title]\r\n\t[add attributes name]\r\n\t\t[add attrubutes value]\r\n\r\n\t[add attributes name]\r\n\t\t[add attrubutes value\r\n\r\n*///","import React, { useEffect } from 'react';\r\n\r\n// import hooks\r\nimport { useHandleFetch } from \"../../hooks\";\r\n\r\n// import lib\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport { Skeleton, Empty, Button, notification, Table, Space, Input as CoolInput, Tooltip, Modal } from 'antd';\r\n\r\n\r\n\r\ninterface Props {\r\n    productId?: any;\r\n    quantity?: any;\r\n}\r\n\r\n\r\n\r\nconst CouponProducts = ({\r\n    productId,\r\n    quantity\r\n}: Props) => {\r\n\r\n    const history = useHistory();\r\n\r\n    const [productDetailState, handleProductFetch] = useHandleFetch(\r\n        {},\r\n        'productDetailById'\r\n    );\r\n\r\n    useEffect(() => {\r\n        const getAndSetProduct = async () => {\r\n            await handleProductFetch({\r\n                urlOptions: {\r\n                    placeHolders: {\r\n                        id: productId,\r\n                    },\r\n                },\r\n            });\r\n\r\n        };\r\n        getAndSetProduct();\r\n    }, []);\r\n\r\n\r\n    console.log('productDetailStatecoupon', productDetailState)\r\n\r\n\r\n    return (\r\n        <Skeleton\r\n            paragraph={{ rows: 2 }}\r\n            loading={productDetailState.isLoading}>\r\n            {productDetailState.data && Object.keys(productDetailState.data).length > 0 && (\r\n                <>\r\n                    <div className='couponDetailProductItem'>\r\n                        <div\r\n                            onClick={() => history.push(`/admin/product/${productId}`)}\r\n                            className='couponDetailProductItem__cover'>\r\n                            <img src={productDetailState.data.cover && productDetailState.data.cover['cover']} alt=\"\" />\r\n                        </div>\r\n                        <div className='couponDetailProductItem__info'>\r\n                            <h2\r\n                                onClick={() => history.push(`/admin/product/${productId}`)}\r\n                            >\r\n                                {productDetailState.data.name}\r\n                            </h2>\r\n                            <h3>\r\n                                {productDetailState.data.price}\r\n                            </h3>\r\n                            <h3>\r\n                                Quantity: {quantity}\r\n                            </h3>\r\n                        </div>\r\n                    </div>\r\n                </>\r\n            )}\r\n\r\n        </Skeleton>\r\n    )\r\n}\r\n\r\n\r\nexport default CouponProducts; ","import React, { useEffect, useState } from 'react';\r\nimport { useParams, useHistory } from \"react-router\";\r\n\r\n\r\n// import hooks\r\nimport { useHandleFetch } from \"../../hooks\";\r\n\r\n// import lib\r\nimport {\r\n    EditOutlined,\r\n    DeleteOutlined\r\n} from '@ant-design/icons';\r\n\r\nimport { Skeleton, Empty, Button, notification, Table, Space, Input as CoolInput, Tooltip, Modal, Badge } from 'antd';\r\n\r\n\r\n// import moment\r\nimport Moment from \"react-moment\";\r\n\r\n// import components\r\nimport { DataTableSkeleton } from \"../../components/Placeholders\";\r\nimport ProductBundleEdit from \"./ProductBundleEdit\";\r\nimport CouponProducts from \"../coupon/CouponProducts\";\r\n\r\n\r\nconst { Column, ColumnGroup } = Table;\r\nconst { Search } = CoolInput;\r\n\r\n\r\ninterface Props {\r\n    productRecord?: any;\r\n}\r\n\r\nconst NewBrandDetail = (props: Props) => {\r\n    const [productDetailState, handleProductDetailFetch] = useHandleFetch({}, 'bundleDetail');\r\n\r\n    const params = useParams();\r\n    const history = useHistory();\r\n    const productId = params['id'];\r\n    const [productEditVisible, setProductEditVisible] = useState(false);\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        const getProductDetail = async () => {\r\n            await handleProductDetailFetch({\r\n                urlOptions: {\r\n                    placeHolders: {\r\n                        id: productId\r\n                    }\r\n                }\r\n            })\r\n        };\r\n\r\n        getProductDetail();\r\n\r\n    }, [productId]);\r\n\r\n\r\n\r\n\r\n    console.log('productDetailState', productDetailState);\r\n\r\n    console.log('brandParams', params);\r\n\r\n    const getImagesInCollumn = (imgs) => {\r\n        if (!imgs[0]) return false;\r\n        imgs = imgs.map(item => item.cover);\r\n        const columns = {};\r\n\r\n        let localIndex = 0;\r\n        let columnNumber = 0;\r\n\r\n\r\n        imgs.forEach((item, index) => {\r\n            if (localIndex < 3) {\r\n                if (columns[columnNumber]) {\r\n                    columns[columnNumber] = [...columns[columnNumber], item]\r\n                }\r\n                else columns[columnNumber] = [item];\r\n\r\n                localIndex = localIndex + 1;\r\n                columnNumber = columnNumber + 1;\r\n\r\n            }\r\n            else {\r\n                localIndex = 0;\r\n                columnNumber = 0;\r\n                console.log('localIndex', localIndex)\r\n            }\r\n        });\r\n\r\n        return columns;\r\n    }\r\n\r\n\r\n    const row = productDetailState.done && productDetailState.data && productDetailState.data['image'] ? getImagesInCollumn(productDetailState.data['image']) : [];\r\n\r\n\r\n    console.log('bundleDetail', productDetailState);\r\n    return (\r\n        <div className='brandDetailContainer'>\r\n\r\n            <div className='brandDetailContainer__heading'>\r\n                <h3>\r\n                    Bundle Detail\r\n                </h3>\r\n\r\n                {productDetailState.done && productDetailState.data && (Object.keys(productDetailState.data).length > 0) && (\r\n                    <>\r\n                     <ProductBundleEdit\r\n                          setAddNewCategoryVisible={setProductEditVisible}\r\n                         addNewCategoryVisible={productEditVisible}\r\n                            productDetailData={productDetailState.data}\r\n\r\n                        /> \r\n                         <Button\r\n                            onClick={() => setProductEditVisible(true)}\r\n                            type='link'\r\n                            icon={<EditOutlined />}\r\n                        >\r\n                            Edit\r\n                      </Button> \r\n                    </>\r\n                )}\r\n\r\n            </div>\r\n            <Skeleton\r\n                avatar paragraph={{ rows: 3 }}\r\n                loading={productDetailState.isLoading}>\r\n                {productDetailState.done && productDetailState.data && !(Object.keys(productDetailState.data).length > 0) && (\r\n                    <Empty description='No Bundle Product found' image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n                )}\r\n\r\n                {productDetailState.done && productDetailState.data && (Object.keys(productDetailState.data).length > 0) && (\r\n                    <>\r\n                        <div className='brandDetailContainer__header'>\r\n                            <div className='brandDetailContainer__header-coverContainer brandDetailContainer__header-coverContainer-product'>\r\n                                <img src={productDetailState.data['cover'] && productDetailState.data['cover']['cover']} alt=\"\" />\r\n                            </div>\r\n                            <div className='brandDetailContainer__header-info'>\r\n                                <h2>\r\n                                    {productDetailState.data['name']}\r\n                                </h2>\r\n                                <h4>\r\n                                    {productDetailState.data['price']}\r\n                                </h4>\r\n\r\n                                {productDetailState.data['description'] && (\r\n                                    <h3>\r\n                                    {productDetailState.data['description']}\r\n                                    </h3>\r\n                                )}\r\n                              \r\n\r\n                                {/* {productDetailState.data['startDate'] && (\r\n                                    <h3>\r\n                                        START DATE:\r\n                                        <span>\r\n                                            {productDetailState.data['startDate']}\r\n                                        </span>\r\n\r\n                                    </h3>\r\n                                )}\r\n\r\n                                {productDetailState.data['endDate'] && (\r\n                                    <h3>\r\n                                        END DATE:\r\n                                        <span>\r\n                                            {productDetailState.data['endDate']}\r\n                                        </span>\r\n\r\n                                    </h3>\r\n                                )} */}\r\n\r\n\r\n\r\n                                {productDetailState.data['url'] && (\r\n                                    <h3>\r\n                                        URL:\r\n                                        <span>\r\n                                            {productDetailState.data['url']}\r\n                                        </span>\r\n\r\n                                    </h3>\r\n                                )}\r\n                                {/* \r\n                                {productDetailState.data['tags'] && productDetailState.data['tags'].length > 0 &&\r\n                                    (<>\r\n                                        <h3>\r\n                                            TAGS:\r\n                                        {productDetailState.data['tags'].map(tag => {\r\n                                            return (\r\n                                                <span>\r\n                                                    {tag.name}\r\n                                                </span>\r\n                                            )\r\n                                        })}\r\n                                        </h3>\r\n\r\n                                    </>)\r\n                                } */}\r\n\r\n                                {productDetailState.data['category'] && productDetailState.data['category'].length > 0 &&\r\n                                    (<>\r\n                                        <h3>\r\n                                            CATEGORIES:\r\n                                        {productDetailState.data['category'].map(cat => {\r\n                                            return (\r\n                                                <span\r\n                                                    onClick={() => history.push(`/admin/category/${cat.id}`)}\r\n\r\n                                                >\r\n                                                    {cat.name}\r\n                                                </span>\r\n                                            )\r\n                                        })}\r\n                                        </h3>\r\n\r\n                                    </>)\r\n                                }\r\n\r\n                            </div>\r\n                        </div>\r\n\r\n\r\n                        {productDetailState.data['icon'] && (\r\n                            <>\r\n                                <div className='brandDetailContainer__heading'>\r\n                                    <h3>\r\n                                        Icon\r\n                            </h3>\r\n                                </div>\r\n\r\n                                <div className='brandDetailContainer__inlineBox'>\r\n                                    <div className='brandDetailContainer__header-coverContainer brandDetailContainer__header-coverContainer-icon'>\r\n                                        <img src={productDetailState.data['icon'] && productDetailState.data['icon']} alt=\"\" />\r\n                                    </div>\r\n\r\n                                </div>\r\n\r\n                                <div style={{\r\n                                    marginBottom: \"25px\"\r\n                                }}></div>\r\n                            </>\r\n                        )}\r\n\r\n\r\n                        {productDetailState.data['image'] && productDetailState.data['image'].length > 0 && (\r\n                            <>\r\n                                <div className='brandDetailContainer__heading'>\r\n                                    <h3>\r\n                                        Image Gallary\r\n                                   </h3>\r\n                                </div>\r\n\r\n                                <div className='brandDetailContainer__imageGallary'>\r\n                                    <div className='imgGallaryContainer'>\r\n\r\n                                        <div className=\"imgGallary-row\">\r\n                                            {row && Object.keys(row).map(column => {\r\n                                                return (\r\n                                                    <div className=\"imgGallary-column\">\r\n                                                        {row[column] && row[column].map(img => {\r\n                                                            return <img src={img} style={{\r\n                                                                width: '100%'\r\n                                                            }} />\r\n                                                        })}\r\n\r\n                                                    </div>\r\n                                                )\r\n                                            })}\r\n\r\n\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                </div>\r\n\r\n                                <div style={{\r\n                                    marginBottom: \"25px\"\r\n                                }}></div>\r\n                            </>\r\n                        )}\r\n\r\n                        {productDetailState.data['brand'] && Object.keys(productDetailState.data['brand']).length > 0 && (\r\n                            <>\r\n                                <div className='brandDetailContainer__heading'>\r\n                                    <h3>\r\n                                        Brand\r\n                                   </h3>\r\n                                </div>\r\n\r\n                                <div\r\n                                    onClick={() => history.push(`/admin/brand/${productDetailState.data['brand']['id']}`)}\r\n\r\n                                    className='brandDetailContainer__brand'>\r\n                                    <div className='brandDetailContainer__brand-coverbox'>\r\n                                        <img src={productDetailState.data['brand']['cover'] && productDetailState.data['brand']['cover']} alt=\"\" />\r\n                                    </div>\r\n                                    <div className='brandDetailContainer__brand-info'>\r\n                                        <h2>\r\n                                            {productDetailState.data['brand']['name']}\r\n                                        </h2>\r\n                                        <h3>\r\n                                            {productDetailState.data['brand']['description']}\r\n                                        </h3>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div style={{\r\n                                    marginBottom: \"25px\"\r\n                                }}></div>\r\n                            </>\r\n                        )}\r\n\r\n\r\n                        {productDetailState.data['primaryCategory'] && Object.keys(productDetailState.data['primaryCategory']).length > 0 && (\r\n                            <>\r\n                                <div className='brandDetailContainer__heading'>\r\n                                    <h3>\r\n                                        Primary Category\r\n                                   </h3>\r\n                                </div>\r\n\r\n                                <div\r\n                                    onClick={() => history.push(`/admin/category/${productDetailState.data['primaryCategory']['id']}`)}\r\n                                    className='brandDetailContainer__brand'>\r\n                                    <div className='brandDetailContainer__brand-coverbox'>\r\n                                        <img src={productDetailState.data['primaryCategory']['cover'] && productDetailState.data['primaryCategory']['cover']} alt=\"\" />\r\n                                    </div>\r\n                                    <div className='brandDetailContainer__brand-info'>\r\n                                        <h2>\r\n                                            {productDetailState.data['primaryCategory']['name']}\r\n                                        </h2>\r\n                                        <h3>\r\n                                            {productDetailState.data['primaryCategory']['description']}\r\n                                        </h3>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div style={{\r\n                                    marginBottom: \"25px\"\r\n                                }}></div>\r\n                            </>\r\n                        )}\r\n\r\n\r\n\r\n\r\n                        \r\n\r\n\r\n                    {productDetailState.done && productDetailState.data && Object.keys(productDetailState.data).length > 0 && productDetailState.data['products'] && (\r\n                            <div className='brandDetailContainer__heading'>\r\n                                <h3>\r\n                                    Products\r\n                       </h3>\r\n                            </div>\r\n                        )\r\n                        }\r\n\r\n\r\n                        <div className='brandDetailContainer__body'>\r\n                            {productDetailState.done && productDetailState.data && productDetailState.data['products'] && !(productDetailState.data['products'].length > 0) && (\r\n                                <div style={{\r\n                                    marginTop: '100px'\r\n                                }}>\r\n                                    <Empty description='No Products exists for this Bundle' image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n                                </div>\r\n                            )}\r\n\r\n                            {productDetailState.done && productDetailState.data && Object.keys(productDetailState.data).length > 0 && (\r\n                                <>\r\n                                    {productDetailState.data['products'] && productDetailState.data['products'].length > 0 &&\r\n                                        productDetailState.data['products'].map(product => {\r\n                                            return (\r\n                                                <CouponProducts\r\n                                                    quantity={product.quantity}\r\n                                                    productId={product['_id']} />\r\n                                            )\r\n                                        })}\r\n                                </>\r\n                            )}\r\n                        </div>\r\n\r\n\r\n\r\n                    </>\r\n\r\n                )}\r\n\r\n            </Skeleton>\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NewBrandDetail\r\n","import React, { useState } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n\r\nimport { useHandleFetch } from '../../hooks';\r\n// import third party ui lib\r\nimport { Upload, message, Switch, Select, Button, notification, Modal, Tooltip } from 'antd';\r\n\r\nimport {\r\n\tFileOutlined,\r\n\tInboxOutlined,\r\n\tFileAddOutlined,\r\n\tDeleteOutlined,\r\n\tCheckCircleOutlined,\r\n\tCloseOutlined,\r\n\tCheckOutlined,\r\n\tInfoCircleOutlined,\r\n\tPlusOutlined,\r\n\tFileImageFilled\r\n} from '@ant-design/icons';\r\n\r\n\r\n\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport MediaLibrary from \"../../components/MediaLibrary\";\r\n\r\nimport MetaTags from \"../../pages/category/MetaTags\";\r\nconst validationSchema = Yup.object().shape({\r\n\tname: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t\tmessage: message || 'Brand Created',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n\tnotification.error({\r\n\t\tmessage: message || 'Something Went Wrong',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n};\r\n\r\n\r\nconst initialValues = {\r\n\tname: '',\r\n\tbnName: '',\r\n\tdescription: '',\r\n\tbnDescription: '',\r\n\tmetaTitle: '',\r\n\tbnMetaTitle: '',\r\n\tmetaDescription: '',\r\n\tbnMetaDescription: '',\r\n\tmetaTags: '',\r\n\tbnMetaTags: '',\r\n\timage: [],\r\n\turl: '',\r\n\tcover: ''\r\n}\r\n\r\n\r\n\r\ninterface Props {\r\n\taddNewCategoryVisible?: any;\r\n\tsetAddNewCategoryVisible?: any;\r\n\tbrandList?: any;\r\n\tsetBrandList?: any;\r\n\r\n}\r\n\r\nconst AddNewBrand = ({ addNewCategoryVisible, setAddNewCategoryVisible, brandList, setBrandList }: Props) => {\r\n\r\n\tconst [updateBrandState, handleUpdateBrandFetch] = useHandleFetch({}, 'addBrand');\r\n\tconst [myImages, setmyImages] = useState(false);\r\n\tconst [visibleMedia, setvisibleMedia] = useState(false);\r\n\tconst [coverImageId, setCoverImageId] = useState('');\r\n\tconst [tags,setTags] = useState([]);\r\n\tconst [bnTags,setBnTags] = useState([]);\r\n\r\n\r\n\r\n\tconsole.log('brandImages',myImages);\r\n\tconst handleSubmit = async (values: any, actions: any) => {\r\n\r\n\t\t// @ts-ignore\r\n\t\tconst imagesIds = myImages ? myImages.map(image => {\r\n\t\t\treturn image.id;\r\n\t\t}) : [];\r\n\r\n\r\n\t\tconst addBrandRes = await handleUpdateBrandFetch({\r\n\r\n\t\t\tbody: {\r\n\t\t\t\tname: values.name.trim(),\r\n\t\t\t\tdescription: values.description,\r\n\t\t\t\ttype: values.type,\r\n\t\t\t\timage: imagesIds,\r\n\t\t\t\tcover: coverImageId || imagesIds[0] ? imagesIds[0] : '',\r\n\t\t\t\tmetaTitle: values.metaTitle,\r\n                metaDescription: values.metaDescription,\r\n\t\t\t\tmetaTags: tags.join(','),\r\n\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t\tbn: {\r\n\t\t\t\t\tmetaTitle: values.bnMetaTitle,\r\n\t\t\t\t\tmetaDescription: values.bnMetaDescription,\r\n\t\t\t\t\tmetaTags: bnTags.join(','),\r\n\t\t\t\t\tname: values.bnName.trim(),\r\n\t\t\t\t\tdescription: values.bnDescription,\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t});\r\n\r\n\t\t// @ts-ignore\r\n\t\tif (addBrandRes && addBrandRes.status === 'ok') {\r\n\t\t\topenSuccessNotification();\r\n\r\n\t\t\tsetBrandList([{\r\n\t\t\t\tid: addBrandRes['_id'] || '',\r\n\t\t\t\tkey: addBrandRes['_id'] || '',\r\n\t\t\t\tname: addBrandRes['name'] || '',\r\n\t\t\t\tdescription: addBrandRes['description'] || '',\r\n\t\t\t\tcover: addBrandRes['cover'] || '',\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\t...addBrandRes\r\n\t\t\t},...brandList]); \r\n\t\t\t\r\n\t\t\tactions.resetForm();\r\n\t\t\tsetAddNewCategoryVisible(false);\r\n\t\t}\r\n\t\telse {\r\n\t\t\topenErrorNotification();\r\n\t\t}\r\n\r\n\t\tactions.setSubmitting(false);\r\n\r\n\t};\r\n\r\n\r\n\tconst onSwitchChange = (checked: any) => {\r\n\t\t// console.log(checked);\r\n\t};\r\n\r\n\r\n\tconst handleCancel = (e: any) => {\r\n\t\tsetAddNewCategoryVisible(false);\r\n\t};\r\n\r\n\r\n\tconst getisSubmitButtonDisabled = (values, isValid) => {\r\n\t\tif (!values.name || !isValid) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\tconst handleImagesDelete = (id) => {\r\n\t\t// @ts-ignore\r\n\t\tconst newImages = myImages && myImages.filter(image => {\r\n\t\t\treturn image.id !== id;\r\n\t\t})\r\n\r\n\t\tsetmyImages(newImages);\r\n\t}\r\n\r\n\r\n\r\n\treturn (\r\n\t\t<Formik\r\n\t\t\tonSubmit={(values, actions) => handleSubmit(values, actions)}\r\n\t\t\tvalidationSchema={validationSchema}\r\n\t\t\tvalidateOnBlur={false}\r\n\t\t\tenableReinitialize={true}\r\n\t\t\tinitialValues={\r\n\t\t\t\t{ ...initialValues }\r\n\t\t\t}\r\n\t\t>\r\n\t\t\t{({\r\n\t\t\t\thandleChange,\r\n\t\t\t\tvalues,\r\n\t\t\t\thandleSubmit,\r\n\t\t\t\terrors,\r\n\t\t\t\tisValid,\r\n\t\t\t\tisSubmitting,\r\n\t\t\t\ttouched,\r\n\t\t\t\thandleBlur,\r\n\t\t\t\tsetFieldTouched,\r\n\t\t\t\thandleReset,\r\n\t\t\t}) => (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<Modal\r\n\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\ttop: '40px'\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\ttitle=\"Add New Brand\"\r\n\t\t\t\t\t\t\tvisible={addNewCategoryVisible}\r\n\t\t\t\t\t\t\tonOk={(e: any) => handleSubmit(e)}\r\n\t\t\t\t\t\t\tonCancel={handleCancel}\r\n\t\t\t\t\t\t\tokText='Create'\r\n\t\t\t\t\t\t\tokButtonProps={{\r\n\t\t\t\t\t\t\t\tloading: isSubmitting,\r\n\t\t\t\t\t\t\t\thtmlType: \"submit\",\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\tlabel='Name'\r\n\t\t\t\t\t\t\t\tvalue={values.name}\r\n\t\t\t\t\t\t\t\tname='name'\r\n\t\t\t\t\t\t\t\tplaceHolder={'microsoft,apple'}\r\n\t\t\t\t\t\t\t\tisError={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateBrandState.error['error']['name'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateBrandState.error['error']['name'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('name');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\tlabel='BN Name'\r\n\t\t\t\t\t\t\t\tvalue={values.bnName}\r\n\t\t\t\t\t\t\t\tplaceHolder={'প্রান,নোকিয়া'}\r\n\t\t\t\t\t\t\t\tname='bnName'\r\n\t\t\t\t\t\t\t\tisError={(touched.bnName && errors.bnName) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateBrandState.error['error']['bnName'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.bnName && errors.bnName) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateBrandState.error['error']['bnName'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('bnName');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\r\n\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\tlabel='Description'\r\n\t\t\t\t\t\t\t\tvalue={values.description}\r\n\t\t\t\t\t\t\t\tname='description'\r\n\t\t\t\t\t\t\t\tplaceholder={'This brand...'}\r\n\t\t\t\t\t\t\t\tisError={(touched.description && errors.description) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateBrandState.error['error']['description'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.description && errors.description) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateBrandState.error['error']['description'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('description');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\tlabel='BN Description'\r\n\t\t\t\t\t\t\t\tvalue={values.bnDescription}\r\n\t\t\t\t\t\t\t\tplaceholder={'এই ব্র্যান্ড...'}\r\n\t\t\t\t\t\t\t\tname='bnDescription'\r\n\t\t\t\t\t\t\t\tisError={(touched.bnDescription && errors.bnDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateBrandState.error['error']['bnDescription'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.bnDescription && errors.bnDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateBrandState.error['error']['bnDescription'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('bnDescription');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\tmarginTop: '20px'\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\r\n\t\t\t\t\t\t\t<div className='addproductSection-left-header'\r\n\r\n\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\tmarginBottom: '-5px'\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>Images</h3>\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t<div className='aboutToUploadImagesContainer'>\r\n\t\t\t\t\t\t\t\t{myImages &&\r\n\t\t\t\t\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\t\t\t\t\tmyImages.length > 0 && myImages.map((image, index) => {\r\n\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='aboutToUploadImagesContainer__item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='aboutToUploadImagesContainer__item-imgContainer'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => setCoverImageId(image.id)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<img src={image.cover} alt={image.alt} />\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => handleImagesDelete(image.id)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='aboutToUploadImagesContainer__item-remove'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<CloseOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t{coverImageId === image.id ? (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<span className='aboutToUploadImagesContainer__item-cover'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<CheckOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t) : !coverImageId && index === 0 && (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<span className='aboutToUploadImagesContainer__item-cover'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<CheckOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t})}\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t{ \r\n\t\t\t\t\t\t\t\t\t!myImages || \r\n\t\t\t\t\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\t\t\t\t\t(myImages && !(myImages && myImages.length > 0)) ? (\r\n\t\t\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t\t<Tooltip\r\n\t\t\t\t\t\t\t\t\ttitle={'Attach images'}>\r\n\r\n\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\t\t\tsetvisibleMedia(true);\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\tclassName='aboutToUploadImagesContainer__uploadItem'>\r\n\t\t\t\t\t\t\t\t\t\t<FileImageFilled />\r\n\t\t\t\t\t\t\t\t\t\t<span className='aboutToUploadImagesContainer__uploadItem-plus'>\r\n\t\t\t\t\t\t\t\t\t\t\t<PlusOutlined />\r\n\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t\t\t) : \"\"}\r\n\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\tlabel='Meta title'\r\n\t\t\t\t\t\t\t\tvalue={values.metaTitle}\r\n\t\t\t\t\t\t\t\tplaceHolder={'category...'}\r\n\t\t\t\t\t\t\t\tname='metaTitle'\r\n\t\t\t\t\t\t\t\tisError={(touched.metaTitle && errors.metaTitle) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateBrandState.error['error']['metaTitle'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.metaTitle && errors.metaTitle) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateBrandState.error['error']['metaTitle'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('metaTitle')\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\tlabel='BN Meta title'\r\n\t\t\t\t\t\t\t\tvalue={values.bnMetaTitle}\r\n\t\t\t\t\t\t\t\tplaceHolder={'ক্যাটাগড়ি...'}\r\n\t\t\t\t\t\t\t\tname='bnMetaTitle'\r\n\t\t\t\t\t\t\t\tisError={(touched.bnMetaTitle && errors.bnMetaTitle) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateBrandState.error['error']['bnMetaTitle'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.bnMetaTitle && errors.bnMetaTitle) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateBrandState.error['error']['bnMetaTitle'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('bnMetaTitle');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\tlabel='Meta description'\r\n\t\t\t\t\t\t\t\tvalue={values.metaDescription}\r\n\t\t\t\t\t\t\t\tplaceholder={'meta...'}\r\n\t\t\t\t\t\t\t\tname='metaDescription'\r\n\t\t\t\t\t\t\t\tisError={(touched.metaDescription && errors.metaDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateBrandState.error['error']['metaDescription'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.metaDescription && errors.metaDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateBrandState.error['error']['metaDescription'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('metaDescription');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\tlabel='BN Meta Description'\r\n\t\t\t\t\t\t\t\tvalue={values.bnMetaDescription}\r\n\t\t\t\t\t\t\t\tplaceholder={'এইয় মেট...'}\r\n\t\t\t\t\t\t\t\tname='bnMetaDescription'\r\n\t\t\t\t\t\t\t\tisError={(touched.bnMetaDescription && errors.bnMetaDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateBrandState.error['error']['bnMetaDescription'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.bnMetaDescription && errors.bnMetaDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateBrandState.error['error']['bnMetaDescription'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('bnMetaDescription');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\tMeta Tags (grocery,fashion)\r\n\t\t\t\t\t\t\t</h3>\r\n\r\n\t\t\t\t\t\t\t<MetaTags\r\n\t\t\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\t\t\tsetTags={setTags}\r\n\t\t\t\t\t\t\ttags={tags}\r\n\t\t\t\t\t\t\t />\r\n\r\n\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\tmarginTop:'15px'\r\n\t\t\t\t\t\t\t}}></div>\r\n\r\n\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\tBN Meta Tags (মুদিখানা,ফ্যাশন)\r\n\t\t\t\t\t\t\t</h3>\r\n\r\n\t\t\t\t\t\t\t<MetaTags\r\n\t\t\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\t\t\tsetTags={setBnTags}\r\n\t\t\t\t\t\t\ttags={bnTags}\r\n\t\t\t\t\t\t\t />\r\n\r\n\r\n\t\t\t\t\t\t</Modal>\r\n\r\n\t\t\t\t\t\t<MediaLibrary\r\n\t\t\t\t\t\t\tsetvisible={setvisibleMedia}\r\n\t\t\t\t\t\t\tvisible={visibleMedia}\r\n\t\t\t\t\t\t\tsetmyImages={setmyImages}\r\n\t\t\t\t\t\t\tmyImages={myImages}\r\n\t\t\t\t\t\t\tisModalOpenForImages={false}\r\n\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</>\r\n\t\t\t\t)}\r\n\t\t</Formik>\r\n\r\n\r\n\r\n\r\n\t);\r\n};\r\n\r\nexport default AddNewBrand;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n\r\nimport { useHandleFetch } from '../../hooks';\r\n// import third party ui lib\r\nimport { Upload, message, Switch, Select, Button, notification, Modal, Tooltip, Spin } from 'antd';\r\n\r\nimport {\r\n    FileOutlined,\r\n    InboxOutlined,\r\n    FileAddOutlined,\r\n    DeleteOutlined,\r\n    CheckCircleOutlined,\r\n    CloseOutlined,\r\n    CheckOutlined,\r\n    InfoCircleOutlined,\r\n    PlusOutlined,\r\n    FileImageFilled\r\n} from '@ant-design/icons';\r\n\r\n\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport MediaLibrary from \"../../components/MediaLibrary\";\r\nimport MetaTags from \"../category/MetaTags\";\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    name: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Brand Updated',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n    notification.error({\r\n        message: message || 'Something Went Wrong',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst initialValues = {\r\n    name: '',\r\n\tbnName: '',\r\n\tdescription: '',\r\n\tbnDescription: '',\r\n\tmetaTitle: '',\r\n\tbnMetaTitle: '',\r\n\tmetaDescription: '',\r\n\tbnMetaDescription: '',\r\n\tmetaTags: '',\r\n\tbnMetaTags: '',\r\n\timage: [],\r\n\turl: '',\r\n\tcover: ''\r\n}\r\n\r\n\r\n\r\ninterface Props {\r\n    brandDetailData?: any;\r\n    brandEditVisible?: any;\r\n    setBrandEditVisible?: any;\r\n    brandList?:any; \r\n    setBrandList?:any; \r\n    \r\n}\r\n\r\nconst AddNewBrand = ({ brandDetailData, \r\n    brandEditVisible, setBrandEditVisible,\r\n    brandList, \r\n    setBrandList,\r\n }: Props) => {\r\n\r\n    const [updateBrandState, handleUpdateBrandFetch] = useHandleFetch({}, 'updateBrand');\r\n    const [brandDetailState, handleBrandDetailFetch] = useHandleFetch({}, 'brandDetail');\r\n\r\n    const [attachImageToItemMultipleState, handleAttachImageToItemMultipleFetch] = useHandleFetch({}, 'attachImageToItemMultiple');\r\n    const [attachImageToItemSingleState, handleAttachImageToItemSingleFetch] = useHandleFetch({}, 'attachImageToItemSingle');\r\n    const [detachImageFromItemMultipleState, handleDetachImageFromItemMultipleFetch] = useHandleFetch({}, 'detachImageFromItemMultiple');\r\n    const [detachImageFromItemSingleState, handleDetachImageFromItemSingleFetch] = useHandleFetch({}, 'detachImageFromItemSingle');\r\n    const [setImageAsThumbnailToItemState, handleSetImageAsThumbnailToItemFetch] = useHandleFetch({}, 'setImageAsThumbnailToItem');\r\n\r\n\r\n    const [myImages, setmyImages] = useState(false);\r\n    const [visibleMedia, setvisibleMedia] = useState(false);\r\n    const [coverImageId, setCoverImageId] = useState('');\r\n    const [myGoddamnImages, setMyGoddamnImages] = useState([]);\r\n\tconst [tags,setTags] = useState([]);\r\n\tconst [bnTags,setBnTags] = useState([]);\r\n\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        const getBrandDetail = async () => {\r\n            const brandDetailRes = await handleBrandDetailFetch({\r\n                urlOptions: {\r\n                    placeHolders: {\r\n                        id: brandDetailData.id\r\n                    }\r\n                }\r\n            }); \r\n\r\n        };\r\n\r\n        getBrandDetail();\r\n\r\n    }, [brandDetailData]);\r\n\r\n\r\n    \r\n    useEffect(() => {\r\n        if (brandDetailState.data && Object.keys(brandDetailState.data).length > 0) {\r\n\r\n            const images = brandDetailState.data.image;\r\n            if (images && images.length > 0) {\r\n                setmyImages(images);\r\n                setMyGoddamnImages(images);\r\n            }\r\n\r\n            if (brandDetailState.data.cover && brandDetailState.data.cover['id']) {\r\n                // @ts-ignore\r\n                setmyImages([brandDetailState.data.cover]);\r\n                setCoverImageId(brandDetailState.data.cover['id']);\r\n            }\r\n\r\n        }\r\n    }, [brandDetailState.data]); \r\n\r\n\r\n    useEffect(() => {\r\n        // @ts-ignore\r\n        if (myImages && myImages[0] && myImages.length < 2) {\r\n\r\n            if (coverImageId !== myImages[0].id) {\r\n                setCoverImageId(myImages[0].id);\r\n                handleSetImageAsThumnail(myImages[0]);\r\n            }\r\n\r\n        }\r\n\r\n    }, [myImages])\r\n\r\n\r\n    const handleDetachSingleImage = async id => {\r\n        await handleDetachImageFromItemSingleFetch({\r\n            urlOptions: {\r\n                placeHolders: {\r\n                    imageId: id,\r\n                    collection: 'brand',\r\n                    itemId: brandDetailData.id\r\n                }\r\n            }\r\n        });\r\n\r\n\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n    const handleSetImageAsThumnail = async image => {\r\n\r\n        const thumbnailRes = await handleSetImageAsThumbnailToItemFetch({\r\n            urlOptions: {\r\n                placeHolders: {\r\n                    imageId: image.id,\r\n                    collection: 'brand',\r\n                    itemId: brandDetailData.id\r\n                }\r\n            }\r\n        });\r\n\r\n\r\n        // @ts-ignore\r\n        if (thumbnailRes && thumbnailRes.status === 'ok') {\r\n            openSuccessNotification('Seted as thumbnail!')\r\n            // const positionInBrand = () => {\r\n            //     return brandList.map(item => item.id).indexOf(brandDetailData.id);\r\n            // }\r\n\r\n            // const index = positionInBrand();\r\n\r\n            // const prevItem = brandList.find(item => item.id === productRecord.id);\r\n\r\n            // if (prevItem) {\r\n            //     const updatedItem = Object.assign({}, brandList[index], { ...prevItem, cover: image.cover });\r\n            //     const updateBrandList = [...brandList.slice(0, index), updatedItem, ...brandList.slice(index + 1)];\r\n            //     setBrandList(updateBrandList);\r\n            // }\r\n        }\r\n        else {\r\n            openErrorNotification(\"Couldn't set as thumbnail, Something went wrong\")\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    const handleSubmit = async (values: any, actions: any) => {\r\n\r\n        console.log('myReadyToGoImages', myImages);\r\n\r\n        if (brandDetailData && Object.keys(brandDetailData).length > 0) {\r\n            // @ts-ignore\r\n            const images = myImages && myImages.length > 0 ? myImages.map(item => item.id) : [];\r\n\r\n            if (images[0] && images.length > 1) {\r\n                await handleAttachImageToItemMultipleFetch({\r\n                    urlOptions: {\r\n                        placeHolders: {\r\n                            collection: 'brand',\r\n                            itemId: brandDetailData.id\r\n                        }\r\n                    },\r\n                    body: {\r\n                        image: images\r\n                    }\r\n                });\r\n            }\r\n            else if (images[0] && images.length < 1) {\r\n                await handleAttachImageToItemSingleFetch({\r\n                    urlOptions: {\r\n                        placeHolders: {\r\n                            imageId: images[0].id,\r\n                            collection: 'brand',\r\n                            itemId: brandDetailData.id\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n        }\r\n\r\n\r\n\r\n\r\n        const updateBrandRes = await handleUpdateBrandFetch({\r\n            urlOptions: {\r\n                placeHolders: {\r\n                    id: brandDetailData.id\r\n                }\r\n            },\r\n            body: {\r\n                name: values.name.trim(),\r\n                description: values.description,\r\n            },\r\n        });\r\n\r\n        // @ts-ignore\r\n        if (updateBrandRes && updateBrandRes.status === 'ok') {\r\n            console.log('updateBrandRes',updateBrandRes);\r\n           \r\n            setBrandList([{\r\n                ...brandDetailData,\r\n\t\t\t\tid: updateBrandRes['id'] || '',\r\n\t\t\t\tkey: updateBrandRes['id'] || '',\r\n\t\t\t\tname: updateBrandRes['name'] || '',\r\n\t\t\t\tdescription: updateBrandRes['description'] || '',\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\t...updateBrandRes\r\n\t\t\t},...brandList]); \r\n\r\n            openSuccessNotification('Brand Updated!');\r\n            setBrandEditVisible(false);\r\n\r\n\r\n            // const positionInBrand = () => {\r\n            //     return brandList.map(item => item.id).indexOf(productRecord.id);\r\n            // }\r\n\r\n            // const index = positionInBrand();\r\n            // const updatedItem = Object.assign({}, brandList[index], { ...updateBrandRes });\r\n            // console.log('updateBrandList', updatedItem)\r\n\r\n            // const updateBrandList = [...brandList.slice(0, index), updatedItem, ...brandList.slice(index + 1)];\r\n\r\n            // setBrandList(updateBrandList);\r\n\r\n\r\n            actions.resetForm();\r\n\r\n        }\r\n        else {\r\n            openErrorNotification();\r\n        }\r\n\r\n        actions.setSubmitting(false);\r\n    };\r\n\r\n\r\n\r\n    const onSwitchChange = (checked: any) => {\r\n        // console.log(checked);\r\n    };\r\n\r\n\r\n    const handleCancel = (e: any) => {\r\n        setBrandEditVisible(false);\r\n    };\r\n\r\n\r\n    const getisSubmitButtonDisabled = (values, isValid) => {\r\n        if (!values.name || !isValid) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n\r\n\r\n\r\n    const handleImagesDelete = (id) => {\r\n        // @ts-ignore\r\n        const newImages = myImages && myImages.filter(image => {\r\n            return image.id !== id;\r\n        })\r\n\r\n        setmyImages(newImages);\r\n    }\r\n\r\n\r\n\r\n    console.log('myImages', myImages); \r\n\r\n\r\n    useEffect(()=>{\r\n\r\n        if(brandDetailData && Object.keys(brandDetailData).length > 0){\r\n            const metaTags = brandDetailData.metaTags && brandDetailData.metaTags.split(','); \r\n\r\n            console.log('localMetaTags',metaTags);\r\n           \r\n            const bnMetaTags = brandDetailData.bn && brandDetailData.bn['metaTags'] && brandDetailData.bn['metaTags'].split(','); \r\n            setTags(metaTags)\r\n            setBnTags(bnMetaTags)\r\n        }\r\n\r\n    },[])\r\n\r\n    console.log('brandEdit',brandDetailData);\r\n\r\n    return (\r\n        <Formik\r\n            onSubmit={(values, actions) => handleSubmit(values, actions)}\r\n            validationSchema={validationSchema}\r\n            validateOnBlur={false}\r\n            enableReinitialize={true}\r\n            initialValues={\r\n                { ...initialValues, \r\n                    ...brandDetailData,\r\n                    ...( brandDetailData && Object.keys(brandDetailData).length > 0 && {\r\n                        bnMetaTitle: brandDetailData['bn']\r\n                        && brandDetailData['bn'].metaTitle\r\n                        && brandDetailData['bn'].metaTitle,\r\n                        bnMetaDescription: brandDetailData['bn'] &&  brandDetailData['bn'].metaDescription && brandDetailData['bn'].metaDescription,\r\n                        bnName: brandDetailData['bn'] && brandDetailData['bn'].name && brandDetailData['bn'].name,\r\n                        bnDescription: brandDetailData['bn'] && brandDetailData['bn'].description && brandDetailData['bn'].description,\r\n                    })\r\n                }\r\n            }\r\n        >\r\n            {({\r\n                handleChange,\r\n                values,\r\n                handleSubmit,\r\n                errors,\r\n                isValid,\r\n                isSubmitting,\r\n                touched,\r\n                handleBlur,\r\n                setFieldTouched,\r\n                handleReset,\r\n            }) => (\r\n                    <>\r\n                        <Modal\r\n                            style={{\r\n                                top: '40px'\r\n                            }}\r\n                            title=\"Brand Edit\"\r\n                            destroyOnClose={true}\r\n                            visible={brandEditVisible}\r\n                            onOk={(e: any) => handleSubmit(e)}\r\n                            onCancel={handleCancel}\r\n                            okText='Update'\r\n                            okButtonProps={{\r\n\t\t\t\t\t\t\t\tloading: isSubmitting,\r\n\t\t\t\t\t\t\t\thtmlType: \"submit\",\r\n\t\t\t\t\t\t\t}}\r\n                        >\r\n                \t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\tlabel='Name'\r\n\t\t\t\t\t\t\t\tvalue={values.name}\r\n\t\t\t\t\t\t\t\tname='name'\r\n\t\t\t\t\t\t\t\tplaceHolder={'microsoft,apple'}\r\n\t\t\t\t\t\t\t\tisError={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateBrandState.error['error']['name'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateBrandState.error['error']['name'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('name');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\tlabel='BN Name'\r\n\t\t\t\t\t\t\t\tvalue={values.bnName}\r\n\t\t\t\t\t\t\t\tplaceHolder={'প্রান,নোকিয়া'}\r\n\t\t\t\t\t\t\t\tname='bnName'\r\n\t\t\t\t\t\t\t\tisError={(touched.bnName && errors.bnName) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateBrandState.error['error']['bnName'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.bnName && errors.bnName) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateBrandState.error['error']['bnName'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('bnName');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\r\n\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\tlabel='Description'\r\n\t\t\t\t\t\t\t\tvalue={values.description}\r\n\t\t\t\t\t\t\t\tname='description'\r\n\t\t\t\t\t\t\t\tplaceholder={'This brand...'}\r\n\t\t\t\t\t\t\t\tisError={(touched.description && errors.description) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateBrandState.error['error']['description'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.description && errors.description) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateBrandState.error['error']['description'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('description');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\tlabel='BN Description'\r\n\t\t\t\t\t\t\t\tvalue={values.bnDescription}\r\n\t\t\t\t\t\t\t\tplaceholder={'এই ব্র্যান্ড...'}\r\n\t\t\t\t\t\t\t\tname='bnDescription'\r\n\t\t\t\t\t\t\t\tisError={(touched.bnDescription && errors.bnDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateBrandState.error['error']['bnDescription'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.bnDescription && errors.bnDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateBrandState.error['error']['bnDescription'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('bnDescription');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n                            <div\r\n                                style={{\r\n                                    marginTop: '20px'\r\n                                }}\r\n                            />\r\n\r\n\r\n                            <div className='addproductSection-left-header'\r\n\r\n                                style={{\r\n                                    marginBottom: '-5px'\r\n                                }}\r\n                            >\r\n                                <h3 className='inputFieldLabel'>\r\n                                    Cover\r\n                                </h3>\r\n                                {/* <div  >\r\n\t\t\t\t\t<FileOutlined />\r\n\t\t\t\t\t<span>Media Center</span>\r\n\t\t\t\t</div> */}\r\n                            </div>\r\n\r\n\r\n                            <div className='aboutToUploadImagesContainer'>\r\n\r\n                                {brandDetailData && Object.keys(brandDetailData).length > 0 && (\r\n                                    <>\r\n                                        {myImages &&\r\n                                            // @ts-ignore\r\n                                            myImages.length > 0 && myImages.map((image, index) => {\r\n                                                return (\r\n                                                    <div className='aboutToUploadImagesContainer__item'>\r\n                                                        <div\r\n                                                            className='aboutToUploadImagesContainer__item-imgContainer'\r\n                                                            onClick={() => {\r\n                                                                setCoverImageId(image.id);\r\n                                                                handleSetImageAsThumnail(image);\r\n                                                            }}\r\n                                                        >\r\n                                                            <img src={image.cover} alt={image.alt} />\r\n                                                        </div>\r\n\r\n                                                        <span\r\n                                                            onClick={() => {\r\n                                                                handleImagesDelete(image.id)\r\n                                                                handleDetachSingleImage(image.id)\r\n                                                            }\r\n\r\n                                                            }\r\n                                                            className='aboutToUploadImagesContainer__item-remove'>\r\n                                                            <CloseOutlined />\r\n                                                        </span>\r\n\r\n\r\n                                                        {coverImageId === image.id ? (\r\n                                                            <span className='aboutToUploadImagesContainer__item-cover'>\r\n                                                                <CheckOutlined />\r\n                                                            </span>\r\n                                                        ) : !coverImageId && index === 0 && (\r\n                                                            <span className='aboutToUploadImagesContainer__item-cover'>\r\n                                                                <CheckOutlined />\r\n                                                            </span>\r\n                                                        )}\r\n\r\n\r\n                                                    </div>\r\n                                                )\r\n                                            })}\r\n\r\n\r\n                                    { \r\n\t\t\t\t\t\t\t\t\t!myImages || \r\n\t\t\t\t\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\t\t\t\t\t(myImages && !(myImages && myImages.length > 0)) ? (\r\n\t\t\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t\t<Tooltip\r\n\t\t\t\t\t\t\t\t\ttitle={'Attach images'}>\r\n\r\n\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\t\t\tsetvisibleMedia(true);\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\tclassName='aboutToUploadImagesContainer__uploadItem'>\r\n\t\t\t\t\t\t\t\t\t\t<FileImageFilled />\r\n\t\t\t\t\t\t\t\t\t\t<span className='aboutToUploadImagesContainer__uploadItem-plus'>\r\n\t\t\t\t\t\t\t\t\t\t\t<PlusOutlined />\r\n\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t\t\t) : \"\"}\r\n\r\n\r\n                            \r\n                                    </>\r\n                                )}\r\n\r\n\r\n                            </div>\r\n\r\n\r\n                            <Input\r\n\t\t\t\t\t\t\t\tlabel='Meta title'\r\n\t\t\t\t\t\t\t\tvalue={values.metaTitle}\r\n\t\t\t\t\t\t\t\tplaceHolder={'category...'}\r\n\t\t\t\t\t\t\t\tname='metaTitle'\r\n\t\t\t\t\t\t\t\tisError={(touched.metaTitle && errors.metaTitle) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateBrandState.error['error']['metaTitle'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.metaTitle && errors.metaTitle) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateBrandState.error['error']['metaTitle'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('metaTitle')\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\tlabel='BN Meta title'\r\n\t\t\t\t\t\t\t\tvalue={values.bnMetaTitle}\r\n\t\t\t\t\t\t\t\tplaceHolder={'ক্যাটাগড়ি...'}\r\n\t\t\t\t\t\t\t\tname='bnMetaTitle'\r\n\t\t\t\t\t\t\t\tisError={(touched.bnMetaTitle && errors.bnMetaTitle) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateBrandState.error['error']['bnMetaTitle'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.bnMetaTitle && errors.bnMetaTitle) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateBrandState.error['error']['bnMetaTitle'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('bnMetaTitle');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\tlabel='Meta description'\r\n\t\t\t\t\t\t\t\tvalue={values.metaDescription}\r\n\t\t\t\t\t\t\t\tplaceholder={'meta...'}\r\n\t\t\t\t\t\t\t\tname='metaDescription'\r\n\t\t\t\t\t\t\t\tisError={(touched.metaDescription && errors.metaDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateBrandState.error['error']['metaDescription'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.metaDescription && errors.metaDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateBrandState.error['error']['metaDescription'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('metaDescription');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\tlabel='BN Meta Description'\r\n\t\t\t\t\t\t\t\tvalue={values.bnMetaDescription}\r\n\t\t\t\t\t\t\t\tplaceholder={'এইয় মেট...'}\r\n\t\t\t\t\t\t\t\tname='bnMetaDescription'\r\n\t\t\t\t\t\t\t\tisError={(touched.bnMetaDescription && errors.bnMetaDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateBrandState.error['error']['bnMetaDescription'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.bnMetaDescription && errors.bnMetaDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateBrandState.error['error']['bnMetaDescription'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('bnMetaDescription');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\tMeta Tags (grocery,fashion)\r\n\t\t\t\t\t\t\t</h3>\r\n\r\n\t\t\t\t\t\t\t<MetaTags\r\n\t\t\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\t\t\tsetTags={setTags}\r\n\t\t\t\t\t\t\ttags={tags}\r\n\t\t\t\t\t\t\t />\r\n\r\n\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\tmarginTop:'15px'\r\n\t\t\t\t\t\t\t}}></div>\r\n\r\n\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\tBN Meta Tags (মুদিখানা,ফ্যাশন)\r\n\t\t\t\t\t\t\t</h3>\r\n\r\n\t\t\t\t\t\t\t<MetaTags\r\n\t\t\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\t\t\tsetTags={setBnTags}\r\n\t\t\t\t\t\t\ttags={bnTags}\r\n\t\t\t\t\t\t\t />\r\n\r\n\r\n                        </Modal>\r\n\r\n                        <MediaLibrary\r\n                            setvisible={setvisibleMedia}\r\n                            visible={visibleMedia}\r\n                            setmyImages={setmyImages}\r\n                            myImages={myImages}\r\n                            myGoddamnImages={myGoddamnImages}\r\n                            setMyGoddamnImages={setMyGoddamnImages}\r\n                            isModalOpenForImages={false}\r\n\r\n                        />\r\n                    </>\r\n                )}\r\n        </Formik>\r\n\r\n\r\n\r\n\r\n    );\r\n};\r\n\r\nexport default AddNewBrand;\r\n","import React, {useState,useEffect} from 'react';\r\nimport {withRouter, useHistory} from 'react-router-dom';\r\nimport { Table,Empty, Popconfirm, Space,Button, Input,Tooltip, notification  } from 'antd';\r\nimport { PlusOutlined, EditOutlined, DeleteOutlined,CheckCircleOutlined } from '@ant-design/icons';\r\n\r\n\r\n\r\n/// import hooks\r\nimport {  useHandleFetch } from \"../../hooks\";\r\n\r\n// import components\r\nimport { DataTableSkeleton } from \"../../components/Placeholders\";\r\nimport AddNewBrand from \"./AddNewBrand\"\r\n\r\n// @ts-ignore\r\nimport BrandQuickEdit from \"./BrandQuickEdit\";\r\n\r\n\r\n\r\nconst { Column } = Table;\r\nconst { Search } = Input;\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t  message: message || 'Brand Created',\r\n\t  description: '',\r\n\t  icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n  };\r\n\r\n\r\n  const openErrorNotification = (message?: any) => {\r\n\tnotification.error({\r\n\t  message: message || 'Something Went Wrong',\r\n\t  description: '',\r\n\t  icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n  };\r\n\r\n\r\n\r\n\r\n\r\ninterface myTableProps {\r\n  data: any; \r\n  setBrandList: any; \r\n} \r\n\r\n\r\nconst MyTable = ({data,setBrandList}: myTableProps) => {\r\n    const [visible,setvisible] = useState(false);   \r\n    const [activeCategoryForEdit,setactiveCategoryForEdit] = useState(false); \r\n    const [deleteBrandState, handleDeleteBrandFetch] = useHandleFetch({}, 'deleteBrand');\r\n    const [brandDetailVisible,setBrandDetailVisible] = useState(false); \r\n    const history = useHistory(); \r\n\r\n\r\n \r\n      const handleDeleteBrand = async (id) => {\r\n        const deleteBrandRes = await handleDeleteBrandFetch({\r\n          urlOptions: {\r\n            placeHolders: {\r\n              id,\r\n            }\r\n            }\r\n          });\r\n\r\n            // @ts-ignore\r\n\t\t  if(deleteBrandRes && deleteBrandRes.status === 'ok'){\r\n\t\t\t  openSuccessNotification('Deleted Brand'); \r\n\t\t\t  const newBrandList =  data.filter(item => item.id !== id);\r\n\t\t\t  setBrandList(newBrandList); \r\n\t\t  }\r\n      }\r\n      \r\n\r\n    return (\r\n        <>\r\n        <Table \r\n        // expandable={{\r\n        //     expandedRowRender: record => <p style={{ margin: 0 }}>{record.name}</p>,\r\n        //     rowExpandable: record => record.name !== 'Not Expandable',\r\n        //   }}\r\n        // bordered={true}\r\n        size='small'\r\n        // pagination={false}\r\n        dataSource={data}\r\n        >\r\n            <Column \r\n          title=\"\"\r\n           dataIndex=\"cover\"\r\n            key=\"id\" \r\n            width={'80px'}\r\n            \r\n           className='classnameofthecolumn'\r\n\r\n           render={(cover, record: any) => (\r\n            <>\r\n              <img\r\n                onClick={() => {\r\n                  // setBrandDetailVisible(true);\r\n                  history.push(`/admin/brand/${record.id}`)\r\n                  setactiveCategoryForEdit(record)\r\n                }}\r\n                src={cover} alt='cover img' style={{\r\n                  height: '40px',\r\n                  width: '40px',\r\n                  objectFit: \"contain\",\r\n                  borderRadius: '3px',\r\n                  cursor: 'pointer'\r\n                }} />\r\n            </>\r\n          )}\r\n            />\r\n          <Column\r\n           title=\"Name\" \r\n           dataIndex=\"name\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n           render={(text, record: any) => (\r\n            <>\r\n\r\n              <h4\r\n                onClick={() => {\r\n                  history.push(`/admin/brand/${record.id}`)\r\n                  // setBrandDetailVisible(true);\r\n                  setactiveCategoryForEdit(record)\r\n                }}\r\n                style={{\r\n                  fontWeight: 400,\r\n                  color: '#555',\r\n                  cursor: 'pointer'\r\n\r\n                }}>\r\n                {text}\r\n              </h4>\r\n\r\n\r\n            </>\r\n          )}\r\n            />\r\n\r\n        <Column\r\n           title=\"Description\" \r\n           dataIndex=\"description\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n            />\r\n\r\n\r\n       <Column\r\n           title=\"Product\" \r\n           dataIndex=\"productCount\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n         \r\n            />\r\n          {/* <Column \r\n          \r\n          className='classnameofthecolumn'\r\n\r\n          title=\"Product\" dataIndex=\"product\" key=\"product\" /> */}\r\n\r\n          {/* <Column \r\n          \r\n          className='classnameofthecolumn'\r\n\r\n          title=\"Sub Category\" dataIndex=\"subCategory\" key=\"subCategory\" /> */}\r\n        \r\n        {/* <Column\r\n          title=\"Tags\"\r\n          dataIndex=\"tags\"\r\n          key=\"tags\"\r\n          render={tags => (\r\n            <>\r\n              {tags.map((tag : any) => (\r\n                <Tag color=\"blue\" key={tag}>\r\n                  {tag}\r\n                </Tag>\r\n              ))}\r\n            </>\r\n          )}\r\n        /> */}\r\n        <Column\r\n        \r\n        className='classnameofthecolumn'\r\n          title=\"\"\r\n          key=\"action\"\r\n          align='right'\r\n          render={(text, record : any) => (\r\n            <Space size=\"middle\">\r\n                <a href='##'>\r\n               <Tooltip placement=\"top\" title='Quick Edit Brand'>\r\n              <span className='iconSize' onClick={() => {\r\n                setvisible(true)\r\n                setactiveCategoryForEdit(record); \r\n              }}> \r\n              <EditOutlined />\r\n            \r\n              </span>\r\n               </Tooltip>\r\n               </a>\r\n\r\n\r\n               <Popconfirm \r\n               \r\n               onConfirm={() => handleDeleteBrand(record.id)}\r\n               title=\"Are you sure？\" okText=\"Yes\" cancelText=\"No\">\r\n           \r\n           <span \r\n             className='iconSize iconSize-danger'\r\n             > \r\n             <DeleteOutlined/>\r\n            </span>\r\n           </Popconfirm>\r\n\r\n\r\n            </Space>\r\n          )}\r\n        />\r\n      </Table>\r\n\r\n\r\n\r\n    {activeCategoryForEdit &&   <BrandQuickEdit \r\n    brandList={data}\r\n    setBrandList={setBrandList}\r\n    setBrandEditVisible={setvisible}\r\n    brandEditVisible={visible}\r\n    brandDetailData={activeCategoryForEdit}/>}\r\n    \r\n    \r\n    </>\r\n    )\r\n}\r\n\r\n\r\ninterface Props {\r\n    history: any; \r\n}\r\n\r\nconst CategoryList = ({history}: Props) => {\r\n\r\n\r\n  const [brandList,setBrandList] = useState([]);\r\n\r\n  \r\n  const [brandState, handlebrandListFetch] = useHandleFetch({}, 'brandList');\r\n\r\n\r\n  useEffect(()=>{\r\n   const setBrands = async () => {\r\n     const brands = await handlebrandListFetch({\r\n      urlOptions:{\r\n        params: {\r\n          sortItem: 'added',\r\n          sortOrderValue: '-1'\r\n        }\r\n        }\r\n     }); \r\n     // @ts-ignore\r\n     setBrandList(brands); \r\n   }\r\n   setBrands(); \r\n  },[])\r\n\r\n\r\n  \r\n  const [addNewCategoryVisible,setAddNewCategoryVisible] = useState(false);   \r\n\r\n  const handleOkAddNewCategory = (e: any) => {\r\n    setAddNewCategoryVisible(false);\r\n  \r\n  };\r\n\r\n  const handleCancelAddNewCategory = (e: any) => {\r\n    setAddNewCategoryVisible(false);\r\n  };\r\n\r\n\r\n    \r\n  const handleSearch = (value) => {\r\n    if(brandState.data.length > 0 ){\r\n      const newBrandList = brandState.data.filter(item => item.name.toLowerCase().includes(value.toLowerCase())); \r\n      setBrandList(newBrandList); \r\n    }\r\n     \r\n  }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\treturn (\r\n\t\t<>\r\n    {/* <h2 className='containerPageTitle'>\r\n      Categories\r\n    </h2> */}\r\n    <div className='categoryListContainer'>\r\n            <div className='categoryListContainer__header'>\r\n           \r\n\r\n          <div className='categoryListContainer__header-searchBar'>\r\n          <h2 className='categoryListContainer__header-title'>\r\n            Brand\r\n            </h2>\r\n\r\n\r\n          <Search\r\n            enterButton={false}\r\n            className='searchbarClassName'\r\n          placeholder=\"search brand..\"\r\n          onChange={e => handleSearch(e.target.value)}\r\n          // style={{ width: 300 }}\r\n        />\r\n          </div>\r\n            <Button\r\n          // type=\"primary\"\r\n          className='btnPrimaryClassNameoutline'\r\n          icon={<PlusOutlined />}\r\n          onClick={() => setAddNewCategoryVisible(true)}\r\n        >\r\n        Add New\r\n            \r\n            </Button>\r\n            </div>\r\n\r\n            <div className='categoryListContainer__afterHeader'>\r\n            {/* <Search\r\n      placeholder=\"search categories..\"\r\n      size=\"large\"\r\n      onSearch={value => console.log(value)}\r\n      style={{ width: 300 }}\r\n    /> */}\r\n            </div>\r\n\r\n     \r\n\t\t\t\r\n\t\t\t<div className='categoryListContainer__categoryList'>\r\n        {brandState.done && brandList.length > 0 && <MyTable \r\n          setBrandList={setBrandList}\r\n        data={brandList} />}\r\n        {brandState.isLoading && <DataTableSkeleton />}\r\n        {brandState.done && !(brandList.length > 0) && (\r\n\t\t\t<div style={{\r\n\t\t\t\tmarginTop: '200px'\r\n\t\t\t}}>\r\n\t\t\t\t<Empty description='No Brand found'  image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n\t\t\t</div>\r\n\t\t)}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\r\n    <AddNewBrand \r\n          addNewCategoryVisible={addNewCategoryVisible} \r\n          setAddNewCategoryVisible={setAddNewCategoryVisible} \r\n          setBrandList={setBrandList}\r\n          brandList={brandList}\r\n          />\r\n\r\n    </>\r\n\t);\r\n};\r\n\r\nexport default withRouter(CategoryList);\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n\r\nimport { useHandleFetch } from '../../hooks';\r\n// import third party ui lib\r\nimport { Upload, message, Switch, Select, Button, notification, Modal, Tooltip, Spin } from 'antd';\r\n\r\nimport {\r\n    FileOutlined,\r\n    InboxOutlined,\r\n    FileAddOutlined,\r\n    DeleteOutlined,\r\n    CheckCircleOutlined,\r\n    CloseOutlined,\r\n    CheckOutlined,\r\n    InfoCircleOutlined,\r\n    PlusOutlined,\r\n    FileImageFilled\r\n} from '@ant-design/icons';\r\n\r\n\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport MediaLibrary from \"../../components/MediaLibrary\";\r\nimport MetaTags from \"../../pages/category/MetaTags\";\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    name: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Brand Updated',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n    notification.error({\r\n        message: message || 'Something Went Wrong',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst initialValues = {\r\n    name: '',\r\n\tbnName: '',\r\n\tdescription: '',\r\n\tbnDescription: '',\r\n\tmetaTitle: '',\r\n\tbnMetaTitle: '',\r\n\tmetaDescription: '',\r\n\tbnMetaDescription: '',\r\n\tmetaTags: '',\r\n\tbnMetaTags: '',\r\n\timage: [],\r\n\turl: '',\r\n\tcover: ''\r\n}\r\n\r\n\r\n\r\ninterface Props {\r\n    brandDetailData?: any;\r\n    brandEditVisible?: any;\r\n    setBrandEditVisible?: any;\r\n    setBrandDetailData?:any; \r\n}\r\n\r\nconst AddNewBrand = ({ brandDetailData, brandEditVisible, setBrandEditVisible,setBrandDetailData }: Props) => {\r\n\r\n    const [updateBrandState, handleUpdateBrandFetch] = useHandleFetch({}, 'updateBrand');\r\n    const [attachImageToItemMultipleState, handleAttachImageToItemMultipleFetch] = useHandleFetch({}, 'attachImageToItemMultiple');\r\n    const [attachImageToItemSingleState, handleAttachImageToItemSingleFetch] = useHandleFetch({}, 'attachImageToItemSingle');\r\n    const [detachImageFromItemMultipleState, handleDetachImageFromItemMultipleFetch] = useHandleFetch({}, 'detachImageFromItemMultiple');\r\n    const [detachImageFromItemSingleState, handleDetachImageFromItemSingleFetch] = useHandleFetch({}, 'detachImageFromItemSingle');\r\n    const [setImageAsThumbnailToItemState, handleSetImageAsThumbnailToItemFetch] = useHandleFetch({}, 'setImageAsThumbnailToItem');\r\n\r\n\r\n    const [myImages, setmyImages] = useState(false);\r\n    const [visibleMedia, setvisibleMedia] = useState(false);\r\n    const [coverImageId, setCoverImageId] = useState('');\r\n    const [myGoddamnImages, setMyGoddamnImages] = useState([]);\r\n\tconst [tags,setTags] = useState([]);\r\n\tconst [bnTags,setBnTags] = useState([]);\r\n\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        if (brandDetailData && Object.keys(brandDetailData).length > 0) {\r\n\r\n            const images = brandDetailData.image;\r\n            if (images && images.length > 0) {\r\n                setmyImages(images);\r\n                setMyGoddamnImages(images);\r\n            }\r\n\r\n            if (brandDetailData.cover && brandDetailData.cover['id']) {\r\n                // @ts-ignore\r\n                setmyImages([brandDetailData.cover]);\r\n                setCoverImageId(brandDetailData.cover['id']);\r\n            }\r\n        }\r\n    }, [brandDetailData]); \r\n\r\n\r\n    useEffect(() => {\r\n        // @ts-ignore\r\n        if (myImages && myImages[0] && myImages.length < 2) {\r\n\r\n            if (coverImageId !== myImages[0].id) {\r\n                setCoverImageId(myImages[0].id);\r\n                handleSetImageAsThumnail(myImages[0]);\r\n            }\r\n\r\n        }\r\n\r\n    }, [myImages])\r\n\r\n\r\n    const handleDetachSingleImage = async id => {\r\n        await handleDetachImageFromItemSingleFetch({\r\n            urlOptions: {\r\n                placeHolders: {\r\n                    imageId: id,\r\n                    collection: 'brand',\r\n                    itemId: brandDetailData.id\r\n                }\r\n            }\r\n        });\r\n\r\n\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n    const handleSetImageAsThumnail = async image => {\r\n\r\n        const thumbnailRes = await handleSetImageAsThumbnailToItemFetch({\r\n            urlOptions: {\r\n                placeHolders: {\r\n                    imageId: image.id,\r\n                    collection: 'brand',\r\n                    itemId: brandDetailData.id\r\n                }\r\n            }\r\n        });\r\n\r\n\r\n        // @ts-ignore\r\n        if (thumbnailRes && thumbnailRes.status === 'ok') {\r\n            openSuccessNotification('Seted as thumbnail!')\r\n            // const positionInBrand = () => {\r\n            //     return brandList.map(item => item.id).indexOf(brandDetailData.id);\r\n            // }\r\n\r\n            // const index = positionInBrand();\r\n\r\n            // const prevItem = brandList.find(item => item.id === productRecord.id);\r\n\r\n            // if (prevItem) {\r\n            //     const updatedItem = Object.assign({}, brandList[index], { ...prevItem, cover: image.cover });\r\n            //     const updateBrandList = [...brandList.slice(0, index), updatedItem, ...brandList.slice(index + 1)];\r\n            //     setBrandList(updateBrandList);\r\n            // }\r\n        }\r\n        else {\r\n            openErrorNotification(\"Couldn't set as thumbnail, Something went wrong\")\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n    \r\n    const handleImagesDelete = (id) => {\r\n        // @ts-ignore\r\n        const newImages = myImages && myImages.filter(image => {\r\n            return image.id !== id;\r\n        })\r\n\r\n        setmyImages(newImages);\r\n    }\r\n\r\n\r\n\r\n    \r\n\r\n\r\n\r\n    const handleSubmit = async (values: any, actions: any) => {\r\n\r\n        console.log('myReadyToGoImages', myImages);\r\n\r\n        if (brandDetailData && Object.keys(brandDetailData).length > 0) {\r\n            // @ts-ignore\r\n            const images = myImages && myImages.length > 0 ? myImages.map(item => item.id) : [];\r\n\r\n            if (images[0] && images.length > 1) {\r\n                await handleAttachImageToItemMultipleFetch({\r\n                    urlOptions: {\r\n                        placeHolders: {\r\n                            collection: 'brand',\r\n                            itemId: brandDetailData.id\r\n                        }\r\n                    },\r\n                    body: {\r\n                        image: images\r\n                    }\r\n                });\r\n            }\r\n            else if (images[0] && images.length < 1) {\r\n                await handleAttachImageToItemSingleFetch({\r\n                    urlOptions: {\r\n                        placeHolders: {\r\n                            imageId: images[0].id,\r\n                            collection: 'brand',\r\n                            itemId: brandDetailData.id\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n        }\r\n\r\n\r\n\r\n\r\n\r\n        const updateBrandRes = await handleUpdateBrandFetch({\r\n            urlOptions: {\r\n                placeHolders: {\r\n                    id: brandDetailData.id\r\n                }\r\n            },\r\n            body: {\r\n                name: values.name.trim(),\r\n                description: values.description,\r\n            },\r\n        });\r\n\r\n        // @ts-ignore\r\n        if (updateBrandRes && updateBrandRes.status === 'ok') {\r\n            console.log('updateBrandRes',updateBrandRes);\r\n            setBrandDetailData({\r\n                ...brandDetailData,\r\n                // @ts-ignore\r\n                ...updateBrandRes\r\n            })\r\n            openSuccessNotification();\r\n            setBrandEditVisible(false);\r\n\r\n\r\n            // const positionInBrand = () => {\r\n            //     return brandList.map(item => item.id).indexOf(productRecord.id);\r\n            // }\r\n\r\n            // const index = positionInBrand();\r\n            // const updatedItem = Object.assign({}, brandList[index], { ...updateBrandRes });\r\n            // console.log('updateBrandList', updatedItem)\r\n\r\n            // const updateBrandList = [...brandList.slice(0, index), updatedItem, ...brandList.slice(index + 1)];\r\n\r\n            // setBrandList(updateBrandList);\r\n\r\n\r\n            actions.resetForm();\r\n\r\n        }\r\n        else {\r\n            openErrorNotification();\r\n        }\r\n\r\n        actions.setSubmitting(false);\r\n    };\r\n\r\n\r\n\r\n    const onSwitchChange = (checked: any) => {\r\n        // console.log(checked);\r\n    };\r\n\r\n\r\n    const handleCancel = (e: any) => {\r\n        setBrandEditVisible(false);\r\n    };\r\n\r\n\r\n    const getisSubmitButtonDisabled = (values, isValid) => {\r\n        if (!values.name || !isValid) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n\r\n\r\n\r\n    console.log('myImages', myImages); \r\n\r\n\r\n    useEffect(()=>{\r\n\r\n        if(brandDetailData && Object.keys(brandDetailData).length > 0){\r\n            const metaTags = brandDetailData.metaTags && brandDetailData.metaTags.split(','); \r\n\r\n            console.log('localMetaTags',metaTags);\r\n           \r\n            const bnMetaTags = brandDetailData.bn && brandDetailData.bn['metaTags'] && brandDetailData.bn['metaTags'].split(','); \r\n            setTags(metaTags)\r\n            setBnTags(bnMetaTags)\r\n        }\r\n\r\n    },[])\r\n\r\n    console.log('brandEdit',brandDetailData);\r\n\r\n    return (\r\n        <Formik\r\n            onSubmit={(values, actions) => handleSubmit(values, actions)}\r\n            validationSchema={validationSchema}\r\n            validateOnBlur={false}\r\n            enableReinitialize={true}\r\n            initialValues={\r\n                { ...initialValues, \r\n                    ...brandDetailData,\r\n                    ...( brandDetailData && Object.keys(brandDetailData).length > 0 && {\r\n                        bnMetaTitle: brandDetailData['bn']\r\n                        && brandDetailData['bn'].metaTitle\r\n                        && brandDetailData['bn'].metaTitle,\r\n                        bnMetaDescription: brandDetailData['bn'] &&  brandDetailData['bn'].metaDescription && brandDetailData['bn'].metaDescription,\r\n                        bnName: brandDetailData['bn'] && brandDetailData['bn'].name && brandDetailData['bn'].name,\r\n                        bnDescription: brandDetailData['bn'] && brandDetailData['bn'].description && brandDetailData['bn'].description,\r\n                    })\r\n                }\r\n            }\r\n        >\r\n            {({\r\n                handleChange,\r\n                values,\r\n                handleSubmit,\r\n                errors,\r\n                isValid,\r\n                isSubmitting,\r\n                touched,\r\n                handleBlur,\r\n                setFieldTouched,\r\n                handleReset,\r\n            }) => (\r\n                    <>\r\n                        <Modal\r\n                            style={{\r\n                                top: '40px'\r\n                            }}\r\n                            title=\"Brand Edit\"\r\n                            visible={brandEditVisible}\r\n                            onOk={(e: any) => handleSubmit(e)}\r\n                            onCancel={handleCancel}\r\n                            okText='Update'\r\n                            okButtonProps={{\r\n\t\t\t\t\t\t\t\tloading: isSubmitting,\r\n\t\t\t\t\t\t\t\thtmlType: \"submit\",\r\n\t\t\t\t\t\t\t}}\r\n                        >\r\n                \t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\tlabel='Name'\r\n\t\t\t\t\t\t\t\tvalue={values.name}\r\n\t\t\t\t\t\t\t\tname='name'\r\n\t\t\t\t\t\t\t\tplaceHolder={'microsoft,apple'}\r\n\t\t\t\t\t\t\t\tisError={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateBrandState.error['error']['name'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateBrandState.error['error']['name'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('name');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\tlabel='BN Name'\r\n\t\t\t\t\t\t\t\tvalue={values.bnName}\r\n\t\t\t\t\t\t\t\tplaceHolder={'প্রান,নোকিয়া'}\r\n\t\t\t\t\t\t\t\tname='bnName'\r\n\t\t\t\t\t\t\t\tisError={(touched.bnName && errors.bnName) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateBrandState.error['error']['bnName'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.bnName && errors.bnName) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateBrandState.error['error']['bnName'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('bnName');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\r\n\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\tlabel='Description'\r\n\t\t\t\t\t\t\t\tvalue={values.description}\r\n\t\t\t\t\t\t\t\tname='description'\r\n\t\t\t\t\t\t\t\tplaceholder={'This brand...'}\r\n\t\t\t\t\t\t\t\tisError={(touched.description && errors.description) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateBrandState.error['error']['description'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.description && errors.description) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateBrandState.error['error']['description'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('description');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\tlabel='BN Description'\r\n\t\t\t\t\t\t\t\tvalue={values.bnDescription}\r\n\t\t\t\t\t\t\t\tplaceholder={'এই ব্র্যান্ড...'}\r\n\t\t\t\t\t\t\t\tname='bnDescription'\r\n\t\t\t\t\t\t\t\tisError={(touched.bnDescription && errors.bnDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateBrandState.error['error']['bnDescription'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.bnDescription && errors.bnDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateBrandState.error['error']['bnDescription'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('bnDescription');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n                            <div\r\n                                style={{\r\n                                    marginTop: '20px'\r\n                                }}\r\n                            />\r\n\r\n\r\n                            <div className='addproductSection-left-header'\r\n\r\n                                style={{\r\n                                    marginBottom: '-5px'\r\n                                }}\r\n                            >\r\n                                <h3 className='inputFieldLabel'>\r\n                                    Cover\r\n                                </h3>\r\n                                {/* <div  >\r\n\t\t\t\t\t<FileOutlined />\r\n\t\t\t\t\t<span>Media Center</span>\r\n\t\t\t\t</div> */}\r\n                            </div>\r\n\r\n\r\n                            <div className='aboutToUploadImagesContainer'>\r\n\r\n                                {brandDetailData && Object.keys(brandDetailData).length > 0 && (\r\n                                    <>\r\n                                        {myImages &&\r\n                                            // @ts-ignore\r\n                                            myImages.length > 0 && myImages.map((image, index) => {\r\n                                                return (\r\n                                                    <div className='aboutToUploadImagesContainer__item'>\r\n                                                        <div\r\n                                                            className='aboutToUploadImagesContainer__item-imgContainer'\r\n                                                            onClick={() => {\r\n                                                                setCoverImageId(image.id);\r\n                                                                handleSetImageAsThumnail(image);\r\n                                                            }}\r\n                                                        >\r\n                                                            <img src={image.cover} alt={image.alt} />\r\n                                                        </div>\r\n\r\n                                                        <span\r\n                                                            onClick={() => {\r\n                                                                handleImagesDelete(image.id)\r\n                                                                handleDetachSingleImage(image.id)\r\n                                                            }\r\n\r\n                                                            }\r\n                                                            className='aboutToUploadImagesContainer__item-remove'>\r\n                                                            <CloseOutlined />\r\n                                                        </span>\r\n\r\n\r\n                                                        {coverImageId === image.id ? (\r\n                                                            <span className='aboutToUploadImagesContainer__item-cover'>\r\n                                                                <CheckOutlined />\r\n                                                            </span>\r\n                                                        ) : !coverImageId && index === 0 && (\r\n                                                            <span className='aboutToUploadImagesContainer__item-cover'>\r\n                                                                <CheckOutlined />\r\n                                                            </span>\r\n                                                        )}\r\n\r\n\r\n                                                    </div>\r\n                                                )\r\n                                            })}\r\n\r\n\r\n{ \r\n\t\t\t\t\t\t\t\t\t!myImages || \r\n\t\t\t\t\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\t\t\t\t\t(myImages && !(myImages && myImages.length > 0)) ? (\r\n\t\t\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t\t<Tooltip\r\n\t\t\t\t\t\t\t\t\ttitle={'Attach images'}>\r\n\r\n\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\t\t\tsetvisibleMedia(true);\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\tclassName='aboutToUploadImagesContainer__uploadItem'>\r\n\t\t\t\t\t\t\t\t\t\t<FileImageFilled />\r\n\t\t\t\t\t\t\t\t\t\t<span className='aboutToUploadImagesContainer__uploadItem-plus'>\r\n\t\t\t\t\t\t\t\t\t\t\t<PlusOutlined />\r\n\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t\t\t) : \"\"}\r\n                                    </>\r\n                                )}\r\n\r\n\r\n                            </div>\r\n\r\n\r\n                            <Input\r\n\t\t\t\t\t\t\t\tlabel='Meta title'\r\n\t\t\t\t\t\t\t\tvalue={values.metaTitle}\r\n\t\t\t\t\t\t\t\tplaceHolder={'category...'}\r\n\t\t\t\t\t\t\t\tname='metaTitle'\r\n\t\t\t\t\t\t\t\tisError={(touched.metaTitle && errors.metaTitle) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateBrandState.error['error']['metaTitle'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.metaTitle && errors.metaTitle) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateBrandState.error['error']['metaTitle'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('metaTitle')\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\tlabel='BN Meta title'\r\n\t\t\t\t\t\t\t\tvalue={values.bnMetaTitle}\r\n\t\t\t\t\t\t\t\tplaceHolder={'ক্যাটাগড়ি...'}\r\n\t\t\t\t\t\t\t\tname='bnMetaTitle'\r\n\t\t\t\t\t\t\t\tisError={(touched.bnMetaTitle && errors.bnMetaTitle) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateBrandState.error['error']['bnMetaTitle'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.bnMetaTitle && errors.bnMetaTitle) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateBrandState.error['error']['bnMetaTitle'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('bnMetaTitle');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\tlabel='Meta description'\r\n\t\t\t\t\t\t\t\tvalue={values.metaDescription}\r\n\t\t\t\t\t\t\t\tplaceholder={'meta...'}\r\n\t\t\t\t\t\t\t\tname='metaDescription'\r\n\t\t\t\t\t\t\t\tisError={(touched.metaDescription && errors.metaDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateBrandState.error['error']['metaDescription'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.metaDescription && errors.metaDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateBrandState.error['error']['metaDescription'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('metaDescription');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\tlabel='BN Meta Description'\r\n\t\t\t\t\t\t\t\tvalue={values.bnMetaDescription}\r\n\t\t\t\t\t\t\t\tplaceholder={'এইয় মেট...'}\r\n\t\t\t\t\t\t\t\tname='bnMetaDescription'\r\n\t\t\t\t\t\t\t\tisError={(touched.bnMetaDescription && errors.bnMetaDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateBrandState.error['error']['bnMetaDescription'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.bnMetaDescription && errors.bnMetaDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateBrandState.error['error']['bnMetaDescription'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('bnMetaDescription');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\tMeta Tags (grocery,fashion)\r\n\t\t\t\t\t\t\t</h3>\r\n\r\n\t\t\t\t\t\t\t<MetaTags\r\n\t\t\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\t\t\tsetTags={setTags}\r\n\t\t\t\t\t\t\ttags={tags}\r\n\t\t\t\t\t\t\t />\r\n\r\n\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\tmarginTop:'15px'\r\n\t\t\t\t\t\t\t}}></div>\r\n\r\n\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\tBN Meta Tags (মুদিখানা,ফ্যাশন)\r\n\t\t\t\t\t\t\t</h3>\r\n\r\n\t\t\t\t\t\t\t<MetaTags\r\n\t\t\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\t\t\tsetTags={setBnTags}\r\n\t\t\t\t\t\t\ttags={bnTags}\r\n\t\t\t\t\t\t\t />\r\n\r\n\r\n                        </Modal>\r\n\r\n                        <MediaLibrary\r\n                            setvisible={setvisibleMedia}\r\n                            visible={visibleMedia}\r\n                            setmyImages={setmyImages}\r\n                            myImages={myImages}\r\n                            myGoddamnImages={myGoddamnImages}\r\n                            setMyGoddamnImages={setMyGoddamnImages}\r\n                            isModalOpenForImages={false}\r\n\r\n                        />\r\n                    </>\r\n                )}\r\n        </Formik>\r\n\r\n\r\n\r\n\r\n    );\r\n};\r\n\r\nexport default AddNewBrand;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useParams, useHistory } from \"react-router\";\r\n\r\n\r\n// import hooks\r\nimport { useHandleFetch } from \"../../hooks\";\r\n\r\n// import lib\r\nimport {\r\n    FileOutlined,\r\n    InboxOutlined,\r\n    RadiusUpleftOutlined,\r\n    RadiusUprightOutlined,\r\n    RadiusBottomleftOutlined,\r\n    RadiusBottomrightOutlined,\r\n    PlusOutlined,\r\n    DeleteOutlined,\r\n    EditOutlined,\r\n    CheckCircleOutlined\r\n} from '@ant-design/icons';\r\n\r\nimport { Skeleton, Empty, Popconfirm, Upload, message, Switch, Select, Button, notification, Table, Space, Input as CoolInput, Tooltip, Modal } from 'antd';\r\n\r\n\r\n// import components\r\nimport { DataTableSkeleton } from \"../../components/Placeholders\";\r\nimport BrandEdit from \"./BrandEdit\";\r\n\r\n\r\nconst { Column, ColumnGroup } = Table;\r\nconst { Search } = CoolInput;\r\n\r\n\r\ninterface Props {\r\n    productRecord?: any;\r\n}\r\n\r\nconst NewBrandDetail = (props: Props) => {\r\n    const [brandDetailState, handleBrandDetailFetch] = useHandleFetch({}, 'brandDetail');\r\n    const [brandProductsState, handleBrandProductsFetch] = useHandleFetch({}, 'brandProducts');\r\n\r\n    const params = useParams();\r\n    const history = useHistory();\r\n    const brandId = params['id'];\r\n    const [brandEditVisible, setBrandEditVisible] = useState(false);\r\n    const [brandDetailData, setBrandDetailData] = useState(false);\r\n\r\n\r\n    useEffect(() => {\r\n        const getBrandDetail = async () => {\r\n            const brandDetailRes = await handleBrandDetailFetch({\r\n                urlOptions: {\r\n                    placeHolders: {\r\n                        id: brandId\r\n                    }\r\n                }\r\n            }); \r\n\r\n            // @ts-ignore\r\n            if(brandDetailRes){\r\n                // @ts-ignore\r\n                setBrandDetailData(brandDetailRes)\r\n            }; \r\n\r\n\r\n            console.log('brandDetailRes',brandDetailRes);\r\n\r\n\r\n        };\r\n\r\n        getBrandDetail();\r\n\r\n    }, [brandId]);\r\n\r\n    useEffect(() => {\r\n\r\n        const getBrandProducts = async () => {\r\n            await handleBrandProductsFetch({\r\n                urlOptions: {\r\n                    placeHolders: {\r\n                        id: brandId\r\n                    }\r\n                }\r\n            })\r\n        };\r\n\r\n        getBrandProducts();\r\n\r\n    }, [brandId]);\r\n\r\n\r\n\r\n\r\n    console.log('brandProductsState', brandProductsState);\r\n\r\n    console.log('brandParams', params);\r\n\r\n\r\n    return (\r\n        <div className='brandDetailContainer'>\r\n\r\n\r\n\r\n\r\n            <div className='brandDetailContainer__heading'>\r\n                <h3>\r\n                    Brand Detail\r\n                </h3>\r\n\r\n\r\n                {brandDetailState.done && brandDetailData && (Object.keys(brandDetailData).length > 0) && (\r\n                    <>\r\n                        <BrandEdit\r\n                            brandEditVisible={brandEditVisible}\r\n                            setBrandEditVisible={setBrandEditVisible}\r\n                            brandDetailData={brandDetailData}\r\n                            setBrandDetailData={setBrandDetailData}\r\n                        />\r\n                        <Button\r\n                            onClick={() => setBrandEditVisible(true)}\r\n                            type='link'\r\n                            icon={<EditOutlined />}\r\n                        >\r\n                            Edit\r\n                      </Button>\r\n                    </>\r\n                )}\r\n\r\n            </div>\r\n            <Skeleton\r\n                avatar paragraph={{ rows: 3 }}\r\n                loading={brandDetailState.isLoading}>\r\n                {brandDetailState.done && brandDetailData && !(Object.keys(brandDetailData).length > 0) && (\r\n                    <Empty description='No Brand found' image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n                )}\r\n\r\n                {brandDetailState.done && brandDetailData && (Object.keys(brandDetailData).length > 0) && (\r\n                    <div className='brandDetailContainer__header'>\r\n                        <div className='brandDetailContainer__header-coverContainer'>\r\n                            <img src={brandDetailData['cover'] && brandDetailData['cover']['cover']} alt=\"\" />\r\n                        </div>\r\n                        <div className='brandDetailContainer__header-info'>\r\n                            <h2>\r\n                                {brandDetailData['name']}\r\n                            </h2>\r\n                            <h3>\r\n                                {brandDetailData['description']}\r\n                            </h3>\r\n\r\n                            {brandDetailData['url'] && (\r\n                                <h3>\r\n                                    URL:\r\n                                    <span>\r\n                                        {brandDetailData['url']}\r\n                                    </span>\r\n\r\n                                </h3>\r\n                            )}\r\n                        </div>\r\n                    </div>\r\n                )}\r\n\r\n            </Skeleton>\r\n\r\n            <div className='brandDetailContainer__heading'>\r\n                <h3>\r\n                    Products\r\n                </h3>\r\n            </div>\r\n            <div className='brandDetailContainer__body'>\r\n                {brandProductsState.isLoading && <DataTableSkeleton />}\r\n                {brandProductsState.done && !(brandProductsState.data.length > 0) && (\r\n                    <div style={{\r\n                        marginTop: '100px'\r\n                    }}>\r\n                        <Empty description='No Products exists for this brand' image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n                    </div>\r\n                )}\r\n\r\n                {brandProductsState.done && brandProductsState.data && brandProductsState.data.length > 0 && (\r\n                    <>\r\n                        <Table\r\n                            style={{\r\n                                paddingTop: '10px',\r\n                                borderRadius: '5px !important',\r\n                                overflow: 'hidden',\r\n                                boxShadow: '0 0.125rem 0.625rem rgba(227, 231, 250, 0.3), 0 0.0625rem 0.125rem rgba(206, 220, 233, 0.4)'\r\n                            }}\r\n                            // expandable={{\r\n                            //     expandedRowRender: record => <p style={{ margin: 0 }}>{record.name}</p>,\r\n                            //     rowExpandable: record => record.name !== 'Not Expandable',\r\n                            //   }}\r\n                            // bordered={true}\r\n                            size='small'\r\n                            // pagination={false}\r\n                            dataSource={brandProductsState.data}\r\n                            tableLayout={'auto'}\r\n                            onHeaderRow={column => {\r\n                                return {\r\n                                    style: {\r\n                                        color: 'red !important'\r\n                                    }\r\n\r\n                                };\r\n                            }}\r\n                        >\r\n                            <Column\r\n                                title=\"\"\r\n                                dataIndex=\"cover\"\r\n                                key=\"id\"\r\n                                width={'80px'}\r\n\r\n                                className='classnameofthecolumn'\r\n\r\n                                render={(cover, record: any) => (\r\n                                    <>\r\n                                        <img\r\n                                            onClick={() => {\r\n                                                history.push(`/admin/product/${record.id}`)\r\n                                            }}\r\n                                            src={cover} alt='cover img' style={{\r\n                                                height: '40px',\r\n                                                width: '40px',\r\n                                                objectFit: \"contain\",\r\n                                                borderRadius: '3px',\r\n                                                cursor: 'pointer'\r\n                                            }} />\r\n\r\n\r\n\r\n\r\n                                    </>\r\n                                )}\r\n                            />\r\n\r\n                            <Column\r\n                                title=\"Name\"\r\n                                dataIndex=\"name\"\r\n                                key=\"id\"\r\n                                className='classnameofthecolumn'\r\n                                render={(text, record: any) => (\r\n                                    <>\r\n                                        <h4\r\n                                            onClick={() => {\r\n                                                history.push(`/admin/product/${record.id}`)\r\n                                            }}\r\n                                            style={{\r\n                                                fontWeight: 400,\r\n                                                color: '#555',\r\n                                                cursor: 'pointer'\r\n\r\n                                            }}>\r\n                                            {text}\r\n                                        </h4>\r\n\r\n\r\n                                    </>\r\n                                )}\r\n\r\n                            />\r\n\r\n                            <Column\r\n                                title=\"Offer Price\"\r\n                                dataIndex=\"offerPrice\"\r\n                                key=\"id\"\r\n                                className='classnameofthecolumn'\r\n\r\n                            />\r\n\r\n\r\n                            <Column\r\n                                title=\"Price\"\r\n                                dataIndex=\"price\"\r\n                                key=\"id\"\r\n                                className='classnameofthecolumn'\r\n\r\n                            />\r\n\r\n                            \r\n                            <Column\r\n                                title=\"Available\"\r\n                                dataIndex=\"available\"\r\n                                key=\"id\"\r\n                                className='classnameofthecolumn'\r\n\r\n                            />\r\n\r\n\r\n                            <Column\r\n                                title=\"Minimum\"\r\n                                dataIndex=\"minimum\"\r\n                                key=\"id\"\r\n                                className='classnameofthecolumn'\r\n\r\n                            />\r\n\r\n\r\n                        </Table>\r\n                    </>\r\n                )}\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NewBrandDetail\r\n","import React, { useState, useEffect } from 'react';\r\nimport { AutoComplete } from 'antd';\r\n\r\nimport InputSmall from '../../components/Field/InputSmall';\r\nimport { useFetch } from \"../../hooks\";\r\nimport {\r\n    DeleteOutlined\r\n} from '@ant-design/icons';\r\n\r\nconst Complete = ({ setAttributeList, attributeList, attribute }) => {\r\n\r\n    const [suggestedOptions, setsuggesteOptions] = useState([]);\r\n    const attributeLisState = useFetch([], [], 'attributeList', {});\r\n\r\n\r\n    const [attributeItem, setAttributeITem] = useState({\r\n        name: attribute.name,\r\n        value: attribute.value\r\n    })\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        const positionInAttribute = () => {\r\n            return attributeList.map(item => item.id).indexOf(attribute.id);\r\n        }\r\n\r\n        const index = positionInAttribute();\r\n\r\n        const updatedItem = Object.assign({}, attributeList[index], { ...attributeItem });\r\n        const updateAttributeList = [...attributeList.slice(0, index), updatedItem, ...attributeList.slice(index + 1)];\r\n        setAttributeList(updateAttributeList);\r\n\r\n    }, [attributeItem])\r\n\r\n\r\n    const handleAttributeDelete = () => {\r\n\r\n        const updateAttributeList = attributeList.filter(item => item.id !== attribute.id);\r\n        setAttributeList(updateAttributeList);\r\n    }\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        if (attributeLisState.data && Object.keys(attributeLisState.data).length > 0) {\r\n            const options = Object.keys(attributeLisState.data);\r\n            const manupulatedOptions = options.map(option => {\r\n                return {\r\n                    value: option\r\n                }\r\n            })\r\n            setsuggesteOptions(manupulatedOptions);\r\n        };\r\n    }, [attributeLisState.data]);\r\n\r\n\r\n\r\n\r\n\r\n\r\n    const handleAttributeSelect = (value) => {\r\n\r\n        if (attributeLisState && Object.keys(attributeLisState.data).length > 0) {\r\n            if (attributeLisState.data[value]) {\r\n                setAttributeITem({\r\n                    ...attribute,\r\n                    name: value,\r\n                    value: attributeLisState.data[value]\r\n                })\r\n            }\r\n\r\n        }\r\n\r\n        else {\r\n            setAttributeITem({\r\n                ...attribute,\r\n                name: value\r\n            })\r\n        }\r\n\r\n\r\n    }\r\n\r\n    const handleAttributeValueChange = (e) => {\r\n        setAttributeITem({\r\n            ...attribute,\r\n            value: e.target.value\r\n        });\r\n    }\r\n\r\n    return (\r\n        <>\r\n\r\n            <div\r\n                key={attribute.id}\r\n                className='addProductGridContainer__item-body-variationCard-item-attribute-item'>\r\n                <div\r\n                    onClick={handleAttributeDelete}\r\n                    className='addProductGridContainer__item-body-variationCard-item-attribute-item-delete'>\r\n                    <DeleteOutlined />\r\n                </div>\r\n\r\n                <h3 className='inputFieldLabel-small'>\r\n                    Name\r\n                </h3>\r\n                <AutoComplete\r\n                    value={attribute.name}\r\n                    style={{ width: '100%' }}\r\n                    options={suggestedOptions}\r\n                    placeholder=\"attribute\"\r\n                    onChange={handleAttributeSelect}\r\n                    filterOption={(inputValue, suggestedOption) =>\r\n                        suggestedOption.value.toUpperCase().indexOf(inputValue.toUpperCase()) !== -1\r\n                    }\r\n                />\r\n\r\n                {attribute.name && (\r\n                    <>\r\n                        <div style={{ marginTop: '10px' }}></div>\r\n                        <InputSmall\r\n                            label='Value'\r\n                            value={attribute.value}\r\n                            name='value'\r\n                            onChange={handleAttributeValueChange}\r\n                        />\r\n                    </>\r\n                )}\r\n\r\n\r\n            </div>\r\n\r\n\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Complete;\r\n","import React, { useState, useEffect } from 'react';\r\nimport Attributes from \"./Attributes\";\r\nimport AddAttributeValues from \"../attribute/AddAttributeValues\";\r\nimport InputSmall from '../../components/Field/InputSmall';\r\nimport { Button } from 'antd';\r\nimport {\r\n\r\n\tPlusOutlined,\r\n\tCheckOutlined\r\n} from '@ant-design/icons';\r\n\r\ninterface Props {\r\n\thandleAddPricing: any;\r\n\tpricingItem?:any; \r\n\thandleUpdatePricing?:any;\r\n\tisPricingEditActive?:any; \r\n}\r\n\r\nconst Pricing = ({\r\n\thandleAddPricing,\r\n\tpricingItem,\r\n\thandleUpdatePricing,\r\n\tisPricingEditActive\r\n}: Props) => {\r\n\r\n\tconst [price, setprice] = useState({\r\n\t\tregular: \"\",\r\n\t\toffer: \"\"\r\n\t});\r\n\tconst [stock, setStock] = useState({\r\n\t\tavailable: \"\",\r\n\t\tminimum: \"\"\r\n\t});\r\n\r\n\tconst [attributeList, setAttributeList] = useState([]);\r\n\r\n\r\n\r\n\tuseEffect(()=>{\r\n\t\tif(pricingItem && Object.keys(pricingItem).length > 0){\r\n\t\t\tsetprice({\r\n\t\t\t\t...price,\r\n\t\t\t\t...pricingItem['price']\r\n\t\t\t})\r\n\r\n\t\t\tsetStock({\r\n\t\t\t\t...stock,\r\n\t\t\t\t...pricingItem['stock']\r\n\t\t\t}); \r\n\r\n\t\t\tconst attributeListItems = []; \r\n\t\t\tif(pricingItem.attribute && Object.keys(pricingItem.attribute).length > 0){\r\n\t\t\t\tconst attributeKeys = Object.keys(pricingItem.attribute); \r\n\t\t\t\tattributeKeys.forEach((attributeKey,index) => {\r\n\t\t\t\t\tattributeListItems.push({\r\n\t\t\t\t\t\tname : attributeKey,\r\n\t\t\t\t\t\tvalue : pricingItem.attribute[attributeKey],\r\n\t\t\t\t\t\tid: index\r\n\t\t\t\t\t})\r\n\t\t\t\t})\r\n\t\t\t}\r\n\r\n\t\t\tsetAttributeList(attributeListItems); \r\n\r\n\t\t}\r\n\t},[pricingItem])\r\n\r\n\tconsole.log('pricingItem',pricingItem); \r\n\tconsole.log('attributeList',attributeList); \r\n\r\n\r\n\r\n\tconst handlePriceChange = e => {\r\n\t\tconst name = e.target.name;\r\n\t\tconst value = e.target.value;\r\n\r\n\r\n\t\tsetprice({\r\n\t\t\t...price,\r\n\t\t\t[name]: value\r\n\t\t});\r\n\t};\r\n\r\n\tconst handleStockChange = e => {\r\n\t\tconst name = e.target.name;\r\n\t\tconst value = e.target.value;\r\n\r\n\t\tsetStock({\r\n\t\t\t...stock,\r\n\t\t\t[name]: value\r\n\t\t});\r\n\t};\r\n\r\n\r\n\tconst handleSavePricing = (e) => {\r\n\t\te.preventDefault();\r\n\r\n\t\tif (attributeList.length > 0) {\r\n\t\t\tconst attribute = {};\r\n\r\n\t\t\tfor (let item of attributeList) {\r\n\r\n\t\t\t\tconsole.log('itemofattribute', item);\r\n\t\t\t\tif (item['value'] && item['name']) {\r\n\t\t\t\t\tattribute[item['name']] = item['value']\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\r\n\t\t\tconst priceItem = {\r\n\t\t\t\tprice: price,\r\n\t\t\t\tstock: stock,\r\n\t\t\t\tattribute: attribute\r\n\t\t\t}\r\n\r\n\r\n\t\t\tsetprice({\r\n\t\t\t\tregular: \"\",\r\n\t\t\t\toffer: \"\"\r\n\t\t\t})\r\n\t\t\tsetStock({ available: \"\", minimum: \"\" })\r\n\t\t\thandleAddPricing(priceItem);\r\n\t\t\tsetAttributeList([]);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tconst priceItem = {\r\n\t\t\t\tprice: price,\r\n\t\t\t\tstock: stock,\r\n\t\t\t\tattribute: {}\r\n\t\t\t}\r\n\r\n\t\t\tsetprice({\r\n\t\t\t\tregular: \"\",\r\n\t\t\t\toffer: \"\"\r\n\t\t\t})\r\n\t\t\tsetStock({ available: \"\", minimum: \"\" })\r\n\t\t\tsetAttributeList([]);\r\n\t\t\thandleAddPricing(priceItem);\r\n\t\t}\r\n\r\n\t}; \r\n\r\n\r\n\r\n\t\r\n\tconst handleUpdatePricingItem = (e) => {\r\n\t\te.preventDefault();\r\n\r\n\t\tif (attributeList.length > 0) {\r\n\t\t\tconst attribute = {};\r\n\r\n\t\t\tfor (let item of attributeList) {\r\n\r\n\t\t\t\tconsole.log('itemofattribute', item);\r\n\t\t\t\tif (item['value'] && item['name']) {\r\n\t\t\t\t\tattribute[item['name']] = item['value']\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\r\n\t\t\tconst priceItem = {\r\n\t\t\t\tprice: price,\r\n\t\t\t\tstock: stock,\r\n\t\t\t\tattribute: attribute,\r\n\t\t\t\tid : pricingItem.id\r\n\t\t\t}\r\n\r\n\r\n\t\t\tsetprice({\r\n\t\t\t\tregular: \"\",\r\n\t\t\t\toffer: \"\"\r\n\t\t\t})\r\n\t\t\tsetStock({ available: \"\", minimum: \"\" })\r\n\t\t\thandleUpdatePricing(priceItem);\r\n\t\t\tsetAttributeList([]);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tconst priceItem = {\r\n\t\t\t\tprice: price,\r\n\t\t\t\tstock: stock,\r\n\t\t\t\tattribute: {},\r\n\t\t\t\tid : pricingItem.id\r\n\t\t\t}\r\n\r\n\t\t\tsetprice({\r\n\t\t\t\tregular: \"\",\r\n\t\t\t\toffer: \"\"\r\n\t\t\t})\r\n\t\t\tsetStock({ available: \"\", minimum: \"\" })\r\n\t\t\tsetAttributeList([]);\r\n\t\t\thandleUpdatePricing(priceItem);\r\n\t\t}\r\n\r\n\t}; \r\n\r\n\r\n\r\n\r\n\tconst handleAddAttribute = () => {\r\n\t\tsetAttributeList([...attributeList, {\r\n\t\t\tname: '',\r\n\t\t\tvalue: '',\r\n\t\t\tid: `${attributeList.length}`\r\n\t\t}])\r\n\t}\r\n\r\n\r\n\tconst getiCreatePricingIsDisabled = () => {\r\n\t\tif (!price.regular) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\telse return false;\r\n\t}\r\n\r\n\t// console.log('attributeList', attributeList);\r\n\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<div className='addProductGridContainer__item-body-variationCard'>\r\n\r\n\t\t\t\t<div className='addProductGridContainer__item-body-variationCard-left'>\r\n\r\n\t\t\t\t\t<div className='addProductGridContainer__item-body-variationCard-item'>\r\n\t\t\t\t\t\t<h4>\r\n\t\t\t\t\t\t\tPrice\r\n\t\t\t\t</h4>\r\n\t\t\t\t\t\t<div className='addProductGridContainer__item-body-variationCard-item-container'>\r\n\t\t\t\t\t\t\t<div className='addProductGridContainer__item-body-variationCard-item-container-left'>\r\n\t\t\t\t\t\t\t\t<InputSmall\r\n\t\t\t\t\t\t\t\t\ttype='number'\r\n\t\t\t\t\t\t\t\t\tlabel='Regular  *'\r\n\t\t\t\t\t\t\t\t\tvalue={price.regular}\r\n\t\t\t\t\t\t\t\t\tname='regular'\r\n\t\t\t\t\t\t\t\t\tonChange={handlePriceChange}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className='addProductGridContainer__item-body-variationCard-item-container-right'>\r\n\t\t\t\t\t\t\t\t<InputSmall\r\n\t\t\t\t\t\t\t\t\ttype='number'\r\n\t\t\t\t\t\t\t\t\tsize='small'\r\n\t\t\t\t\t\t\t\t\tlabel='Offer'\r\n\t\t\t\t\t\t\t\t\tvalue={price.offer}\r\n\t\t\t\t\t\t\t\t\tname='offer'\r\n\t\t\t\t\t\t\t\t\tonChange={handlePriceChange}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\t\t\t\t\t<div className='addProductGridContainer__item-body-variationCard-right'>\r\n\t\t\t\t\t\t<div className='addProductGridContainer__item-body-variationCard-item'>\r\n\t\t\t\t\t\t\t<h4>\r\n\t\t\t\t\t\t\t\tAttributes\r\n\t\t\t\t</h4>\r\n\t\t\t\t\t\t\t<div className='addProductGridContainer__item-body-variationCard-item-attribute'>\r\n\r\n\t\t\t\t\t\t\t\t{attributeList.map(attribute => {\r\n\t\t\t\t\t\t\t\t\treturn <Attributes\r\n\t\t\t\t\t\t\t\t\t\tattribute={attribute}\r\n\t\t\t\t\t\t\t\t\t\tattributeList={attributeList} setAttributeList={setAttributeList} />\r\n\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t<Button size='small'\r\n\t\t\t\t\t\t\t\t\tonClick={handleAddAttribute}\r\n\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\twidth: '180px',\r\n\t\t\t\t\t\t\t\t\t\tminHeight: '75px',\r\n\t\t\t\t\t\t\t\t\t\tmarginTop: '0px',\r\n\t\t\t\t\t\t\t\t\t\tborderRadius: \"8px\"\r\n\t\t\t\t\t\t\t\t\t}} type=\"dashed\" icon={<PlusOutlined />}>Add Attribute</Button>\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t</div>\r\n\r\n\r\n\t\t\t\t\t\t<div \r\n\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\tmarginTop:'25px'\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\tclassName='addProductGridContainer__item-body-variationCard-item'>\r\n\t\t\t\t\t\t\t<h4>\r\n\t\t\t\t\t\t\t\tStock\r\n\t\t\t\t\t\t\t</h4>\r\n\t\t\t\t\t\t\t<div className='addProductGridContainer__item-body-variationCard-item-container'>\r\n\t\t\t\t\t\t\t\t<div className='addProductGridContainer__item-body-variationCard-item-container-left'>\r\n\t\t\t\t\t\t\t\t\t<InputSmall\r\n\t\t\t\t\t\t\t\t\t\ttype='number'\r\n\t\t\t\t\t\t\t\t\t\tlabel='Available'\r\n\t\t\t\t\t\t\t\t\t\tvalue={stock.available}\r\n\t\t\t\t\t\t\t\t\t\tname='available'\r\n\t\t\t\t\t\t\t\t\t\tonChange={handleStockChange}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\r\n\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className='addProductGridContainer__item-body-variationCard-item-container-right'>\r\n\r\n\t\t\t\t\t\t\t\t\t<InputSmall\r\n\t\t\t\t\t\t\t\t\t\ttype='number'\r\n\t\t\t\t\t\t\t\t\t\tlabel='Minimum'\r\n\t\t\t\t\t\t\t\t\t\tvalue={stock.minimum}\r\n\t\t\t\t\t\t\t\t\t\tname='minimum'\r\n\t\t\t\t\t\t\t\t\t\tonChange={handleStockChange}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\r\n\r\n\r\n\r\n\t\t\t{/* <Button\r\n          // type=\"primary\"\r\n         \r\n          icon={<PlusOutlined />}\r\n          onClick={() => setAddNewCategoryVisible(true)}\r\n        >\r\n        Add New\r\n      </Button> */}\r\n\r\n\t\t\t<Button\r\n\r\n\t\t\t\tstyle={{\r\n\t\t\t\t\tmarginLeft: '10px'\r\n\t\t\t\t}}\r\n\t\t\t\tonClick={isPricingEditActive ? handleUpdatePricingItem :  handleSavePricing}\r\n\t\t\t\tdisabled={getiCreatePricingIsDisabled()}\r\n\t\t\t\tclassName='btnAddToPrice'\r\n\t\t\t\ticon={<CheckOutlined />}\r\n\t\t\t>\r\n\t\t\t\t{isPricingEditActive ? \"Update Pricing\" : \"Add To Pricing\"}\r\n\t\t\t\t\r\n\t\t\t\t</Button>\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nexport default Pricing\r\n","import React, { useState, useEffect } from 'react';\r\n\r\n// import hooks \r\nimport { useHandleFetch } from '../../hooks';\r\n\r\n\r\n// import libraries \r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { message, Tooltip, Modal, Tabs, Empty, Badge } from 'antd';\r\nimport CKEditor from '@ckeditor/ckeditor5-react';\r\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\r\n\r\n\r\n\r\nimport {\r\n\tDeleteOutlined,\r\n\tFileAddOutlined,\r\n\tCheckCircleOutlined,\r\n\tFileImageFilled,\r\n\tFileImageOutlined,\r\n\tFileImageTwoTone,\r\n\tPlusOutlined,\r\n\tPlusCircleOutlined,\r\n\tCloseOutlined,\r\n\tCheckOutlined,\r\n\tInfoCircleOutlined,\r\n\tEditOutlined\r\n} from '@ant-design/icons';\r\n\r\n\r\n// import ReactQuill from 'react-quill';\r\n// import 'react-quill/dist/quill.snow.css';\r\n\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport MediaLibrary from \"../../components/MediaLibrary\";\r\nimport DatePicker from \"../../components/Field/DatePicker\";\r\nimport { openSuccessNotification, openErrorNotification } from \"../../components/Notification\";\r\nimport Tags from \"./Tags\";\r\nimport Brands from \"./Brands\";\r\nimport Categories from \"./Categories\";\r\nimport Pricing from \"./Pricing\";\r\nimport MetaTags from \"../category/MetaTags\";\r\n\r\nconst { TabPane } = Tabs;\r\n\r\nconst validationSchema = Yup.object().shape({\r\n\t// name: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\n\r\nconst initialValues = {\r\n\tname: '',\r\n\tdescription: '',\r\n\tmodel: '',\r\n\tunit: '',\r\n\tregular: '',\r\n\toffer: '',\r\n\tavailable: '',\r\n\tminimum: '',\r\n\timage: [],\r\n\turl: '',\r\n\tcover: '',\r\n\tpricing: [],\r\n\tvenue: '',\r\n\tdate: '',\r\n\ttime: '',\r\n\tpurchaseLimit: null,\r\n\tbnUnit: '',\r\n\tbnName: '',\r\n\tbnDescription: '',\r\n\tmetaTitle: '',\r\n\tbnMetaTitle: '',\r\n\tmetaDescription: '',\r\n\tbnMetaDescription: '',\r\n\tmetaTags: '',\r\n\tbnMetaTags: '',\r\n}\r\n\r\n\r\ninterface Props {\r\n\taddNewCategoryVisible: any;\r\n\tsetAddNewCategoryVisible: any;\r\n\tproductList?: any;\r\n\tsetProductList?: any;\r\n}\r\n\r\nconst AddNewProduct = ({ addNewCategoryVisible, setAddNewCategoryVisible, productList, setProductList }: Props) => {\r\n\r\n\tconst [addProductState, handleAddProductFetch] = useHandleFetch({}, 'addProduct');\r\n\tconst [visible, setvisible] = useState(false);\r\n\tconst [myImages, setmyImages] = useState(false);\r\n\tconst [myThumbnailImage, setmyThumbnailImage] = useState(false);\r\n\tconst [isModalOpenForThumbnail, setisModalOpenForThumbnail] = useState(false);\r\n\tconst [isModalOpenForImages, setisModalOpenForImages] = useState(false);\r\n\tconst [categoryids, setcategoryIds] = useState([]);\r\n\tconst [tagIds, setTagIds] = useState([]);\r\n\tconst [brandId, setBrandId] = useState('');\r\n\tconst [pricing, setPricing] = useState([]);\r\n\tconst [coverImageId, setCoverImageId] = useState('');\r\n\tconst [categoryOptions, setCategoryOptions] = useState([]);\r\n\tconst [selectedTags, setSelectedTags] = useState([]);\r\n\tconst [date, setDateFeild] = useState('');\r\n\tconst [time, setTimeFeild] = useState('');\r\n\tconst [description, setDescription] = useState('');\r\n\tconst [bnDescription, setBNDescription] = useState('');\r\n\tconst [metaTags,setMetaTags] = useState([]);\r\n\tconst [bnMetaTags,setBnMetaTags] = useState([]);\r\n\tconst [editpricingItem,setEditPricingItem] = useState({}); \r\n\tconst [pricingTagActiveKey,setpricingTagActiveKey] = useState('1');\r\n\tconst [isPricingEditActive, seTisPricingEditActive] = useState(false); \r\n\r\n\r\n\r\n\tconst makeEmptyCategoryOptions = (setEmpty) => {\r\n\t\tsetEmpty([]);\r\n\t}\r\n\r\n\tconst handleSubmit = async (values: any, actions: any) => {\r\n\t\t// @ts-ignore\r\n\t\tconst imagesIds = myImages ? myImages.map(image => {\r\n\t\t\treturn image.id;\r\n\t\t}) : [];\r\n\r\n\t\tconst addProductRes = await handleAddProductFetch({\r\n\r\n\t\t\tbody: {\r\n\t\t\t\tname: values.name.trim(),\r\n\t\t\t\tdescription: description,\r\n\t\t\t\tmodel: values.model,\r\n\t\t\t\tunit: values.unit,\r\n\t\t\t\tcategory: categoryids,\r\n\t\t\t\ttags: tagIds,\r\n\t\t\t\tbrand: brandId,\r\n\t\t\t\timage: imagesIds,\r\n\t\t\t\tcover: coverImageId || imagesIds[0] ? imagesIds[0] : '',\r\n\t\t\t\tpricing: pricing,\r\n\t\t\t\tmetaTitle: values.metaTitle,\r\n\t\t\t\tmetaDescription: values.metaDescription,\r\n\t\t\t\tmetaTags: metaTags.join(','),\r\n\r\n\t\t\t\t\r\n\t\t\t\tbn: {\r\n\t\t\t\t\tmetaTitle: values.bnMetaTitle,\r\n\t\t\t\t\tmetaDescription: values.bnMetaDescription,\r\n\t\t\t\t\tmetaTags: bnMetaTags.join(','),\r\n\t\t\t\t\tname: values.bnName.trim(),\r\n\t\t\t\t\tunit: values.metaUnit,\r\n\t\t\t\t\tdescription: bnDescription,\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t});\r\n\r\n\r\n\t\t// @ts-ignore\r\n\t\tif (addProductRes && addProductRes.status === 'ok') {\r\n\t\t\topenSuccessNotification('Product Created');\r\n\t\t\tsetAddNewCategoryVisible(false)\r\n\r\n\t\t\tsetProductList([{\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\t...addProductRes,\r\n\t\t\t\tid: addProductRes['_id'] || '',\r\n\t\t\t\tkey: addProductRes['_id'] || '',\r\n\t\t\t\tname: addProductRes['name'] || '',\r\n\t\t\t\tdescription: addProductRes['description'] || '',\r\n\t\t\t\tcover: addProductRes['cover'] || '',\r\n\t\t\t},...productList])\r\n\t\t\t// @ts-ignore\r\n\t\t\tsetmyImages([]);\r\n\t\t\tsetCoverImageId('');\r\n\t\t\tsetPricing([]);\r\n\t\t\tsetTagIds([]);\r\n\t\t\tsetSelectedTags([]);\r\n\t\t\tsetBrandId(\"\");\r\n\t\t\tsetcategoryIds([]);\r\n\t\t\tsetCategoryOptions([]);\r\n\t\t\tactions.resetForm();\r\n\t\t}\r\n\t\telse {\r\n\t\t\t// openErrorNotification();\r\n\t\t}\r\n\r\n\t\tactions.setSubmitting(false);\r\n\r\n\r\n\t};\r\n\r\n\r\n\r\n\tuseEffect(() => {\r\n\t\tif (!addProductState['isLoading']) {\r\n\t\t\tconst error = addProductState['error'];\r\n\t\t\tif (error['isError'] && Object.keys(error['error']).length > 0) {\r\n\r\n\r\n\t\t\t\tconst errors =\r\n\t\t\t\t\tObject.values(error['error']).length > 0\r\n\t\t\t\t\t\t? Object.values(error['error'])\r\n\t\t\t\t\t\t: [];\r\n\t\t\t\terrors.forEach((err, i) => {\r\n\t\t\t\t\tif (typeof err === 'string') {\r\n\t\t\t\t\t\topenErrorNotification(err)\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if (typeof err === 'object') {\r\n\t\t\t\t\t\tif (err && Object.keys(err).length > 0) {\r\n\t\t\t\t\t\t\tconst errs = Object.values(err);\r\n\t\t\t\t\t\t\terrs.forEach(err => {\r\n\t\t\t\t\t\t\t\topenErrorNotification(err)\r\n\t\t\t\t\t\t\t})\r\n\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t}, [addProductState])\r\n\r\n\r\n\tconst handleCancel = (e: any) => {\r\n\t\tsetAddNewCategoryVisible(false);\r\n\t};\r\n\r\n\r\n\tconst getisSubmitButtonDisabled = (values, isValid) => {\r\n\t\tif (!values.name || !(pricing.length > 0) || !(categoryids.length > 0)  || !isValid) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\r\n\tconst handleImagesDelete = (id) => {\r\n\t\t// @ts-ignore\r\n\t\tconst newImages = myImages && myImages.filter(image => {\r\n\t\t\treturn image.id !== id;\r\n\t\t})\r\n\r\n\t\tsetmyImages(newImages);\r\n\t}\r\n\r\n\tconst handleDeleteFromSelectedImage = () => {\r\n\r\n\t};\r\n\r\n\tconst handleThumbnailImageDelete = (id) => {\r\n\t\t// @ts-ignore\r\n\t\tconst newImages = myThumbnailImage && myThumbnailImage.filter(image => {\r\n\t\t\treturn image.id !== id;\r\n\t\t})\r\n\r\n\t\tif (newImages.length > 0) {\r\n\t\t\tsetmyThumbnailImage(newImages);\r\n\r\n\t\t}\r\n\t\telse setmyThumbnailImage(false);\r\n\t}\r\n\r\n\r\n\r\n\r\n\r\n\tconst handleAddPricing = (priceItem) => {\r\n\r\n\t\tsetPricing([{\r\n\t\t\t...priceItem,\r\n\t\t\tid: pricing.length\r\n\t\t}, ...pricing])\r\n\t\tmessage.info('Product Pricing Added');\r\n\t}\r\n\r\n\r\n\tconst handleUpdatePricing = (priceItem) => {\r\n\r\n\t\tconst positionInPricing = () => {\r\n\t\t\treturn pricing.map(item => item.id).indexOf(priceItem.id);\r\n\t\t  }\r\n\r\n\t\t  const index = positionInPricing();\r\n\r\n\t\t  // @ts-ignore\r\n\t\t  const updatedItem = Object.assign({}, pricing[index], { ...priceItem });\r\n\t\t  const updatePricingList = [...pricing.slice(0, index), updatedItem, ...pricing.slice(index + 1)];\r\n\t\t\t \r\n\t\t  setPricing(updatePricingList); \r\n\r\n\t\tmessage.info('Product Pricing Updated');\r\n\t\tseTisPricingEditActive(true);\r\n\t\tsetpricingTagActiveKey('2'); \r\n\t}\r\n\r\n\r\n\tconst handleEditPricing = (id)=> {\r\n\t\tseTisPricingEditActive(true);\r\n\t\tconst pricingItem = pricing.find(item => item.id === id);\r\n\t\tif(pricingItem){\r\n\t\t\tsetEditPricingItem(pricingItem);\r\n\t\t}\r\n\t}\r\n\r\n\r\n\tconst handleDeletePricing = (id) => {\r\n\t\tconst newPricing = pricing.filter(item => item.id !== id);\r\n\t\tsetPricing(newPricing);\r\n\t\tmessage.info('Product Pricing Deleted');\r\n\t}\r\n\r\n\r\n\r\n\tconst isCategoryInValid = () => {\r\n\t\tif (addProductState.error['error']['category'] && !categoryids && categoryids.length) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\telse if (categoryids && categoryids.length > 0) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\r\n\tconst handleDateChange = (date, dateString) => {\r\n\t\tsetDateFeild(dateString);\r\n\t\t// console.log('date', date, dateString);\r\n\t}\r\n\r\n\tconst handleTimeChange = (date, dateString) => {\r\n\t\tsetTimeFeild(dateString);\r\n\t\t// console.log('date', date, dateString);\r\n\t}\r\n\r\n\r\n\r\n\tconsole.log('pricingingi',pricing);\r\n\r\n\treturn (\r\n\t\t<Formik\r\n\t\t\tonSubmit={(values, actions) => handleSubmit(values, actions)}\r\n\t\t\tvalidationSchema={validationSchema}\r\n\t\t\tvalidateOnBlur={false}\r\n\t\t\tenableReinitialize={true}\r\n\t\t\tinitialValues={\r\n\t\t\t\t{ ...initialValues }\r\n\t\t\t}\r\n\t\t>\r\n\t\t\t{({\r\n\t\t\t\thandleChange,\r\n\t\t\t\tvalues,\r\n\t\t\t\thandleSubmit,\r\n\t\t\t\terrors,\r\n\t\t\t\tisValid,\r\n\t\t\t\tisSubmitting,\r\n\t\t\t\ttouched,\r\n\t\t\t\thandleBlur,\r\n\t\t\t\tsetFieldTouched,\r\n\t\t\t\thandleReset,\r\n\t\t\t}) => (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<Modal\r\n\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\ttop: '40px',\r\n\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\tbodyStyle={{\r\n\t\t\t\t\t\t\t\tmargin: 0,\r\n\t\t\t\t\t\t\t\tpadding: 0,\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\twidth={'70vw'}\r\n\t\t\t\t\t\t\ttitle=\"Add New Product\"\r\n\t\t\t\t\t\t\tvisible={addNewCategoryVisible}\r\n\t\t\t\t\t\t\tonOk={(e: any) => handleSubmit(e)}\r\n\t\t\t\t\t\t\tonCancel={handleCancel}\r\n\t\t\t\t\t\t\tokText='Create'\r\n\t\t\t\t\t\t\tokButtonProps={{\r\n\t\t\t\t\t\t\t\tloading: isSubmitting,\r\n\t\t\t\t\t\t\t\thtmlType: \"submit\",\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\r\n\r\n\t\t\t\t\t\t\t<section className='addProductGridContainer'>\r\n\t\t\t\t\t\t\t\t<div className='addProductGridContainer__left'>\r\n\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__name'>\r\n\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__item-header'>\r\n\t\t\t\t\t\t\t\t\t\t\t<h3>\r\n\t\t\t\t\t\t\t\t\t\t\t\tProduct Information *\r\n\t\t\t</h3>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<div className={values.name && values.name.length > 2 ? 'checkicon-active' : 'checkicon'}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<CheckCircleOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__item-body'>\r\n\t\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\t\tlabel='Name'\r\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.name}\r\n\t\t\t\t\t\t\t\t\t\t\t\tplaceHolder={'Rafty ox'}\r\n\t\t\t\t\t\t\t\t\t\t\t\tname='name'\r\n\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['name'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['name'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('name');\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\tlabel='BN Name'\r\n\t\t\t\t\t\t\t\t\t\t\tvalue={values.bnName}\r\n\t\t\t\t\t\t\t\t\t\t\tplaceHolder={'রাফতি অক্স'}\r\n\t\t\t\t\t\t\t\t\t\t\tname='bnName'\r\n\t\t\t\t\t\t\t\t\t\t\tisError={(touched.bnName && errors.bnName) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['bnName'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.bnName && errors.bnName) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['bnName'])}\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('bnName');\r\n\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t{/* <div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\tdisplay: 'flex',\r\n\t\t\t\t\t\t\t\t\t\t\t\tjustifyContent: 'space-between'\r\n\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\twidth: '48%',\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<DatePicker\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabel='Date'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={handleDateChange} />\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\twidth: '48%'\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<DatePicker\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tdate={date}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\twithTime={true}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder='Select time'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabel='Time'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={handleTimeChange} />\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t</div> */}\r\n\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t{/* \r\n\t\t\t\t\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\t\t\t\t\trows={1}\r\n\t\t\t\t\t\t\t\t\t\t\t\tlabel='Venue'\r\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.venue}\r\n\t\t\t\t\t\t\t\t\t\t\t\tname='venue'\r\n\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.venue && errors.venue) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['venue'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.venue && errors.venue) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['venue'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('venue');\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\t\tlabel='Purchase Limit'\r\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.purchaseLimit}\r\n\t\t\t\t\t\t\t\t\t\t\t\ttype='number'\r\n\t\t\t\t\t\t\t\t\t\t\t\tname='purchaseLimit'\r\n\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.purchaseLimit && errors.purchaseLimit) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['purchaseLimit'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.purchaseLimit && errors.purchaseLimit) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['purchaseLimit'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('purchaseLimit');\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t/> */}\r\n\r\n\r\n\t\t\t\t\t\t\t\t\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\t\tlabel='Unit'\r\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.unit}\r\n\t\t\t\t\t\t\t\t\t\t\t\tname='unit'\r\n\t\t\t\t\t\t\t\t\t\t    \tplaceHolder={'KG,POUND,GM'}\r\n\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.unit && errors.unit) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['unit'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.unit && errors.unit) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['unit'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('unit');\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\tlabel='BN Unit'\r\n\t\t\t\t\t\t\t\t\t\t\tvalue={values.bnUnit}\r\n\t\t\t\t\t\t\t\t\t\t\tplaceHolder={'কেজি,গ্রাম'}\r\n\t\t\t\t\t\t\t\t\t\t\tname='bnUnit'\r\n\t\t\t\t\t\t\t\t\t\t\tisError={(touched.bnUnit && errors.bnUnit) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['bnUnit'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.bnUnit && errors.bnUnit) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['bnUnit'])}\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('bnUnit');\r\n\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\t\tlabel='Model Number'\r\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.model}\r\n\t\t\t\t\t\t\t\t\t\t\t\tname='model'\r\n\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.model && errors.model) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['model'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.model && errors.model) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['model'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('model');\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\t\t\t\t\t\tDescription\r\n                                             </h3>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\twidth: '100%',\r\n\t\t\t\t\t\t\t\t\t\t\t\tmaxWidth: '100%'\r\n\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<CKEditor\r\n\t\t\t\t\t\t\t\t\t\t\t\t\teditor={ClassicEditor}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tdata={description}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonInit={editor => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t// You can store the \"editor\" and use when it is needed.\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tconsole.log('Editor is ready to use!', editor);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(event, editor) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tconst data = editor.getData();\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetDescription(data);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonBlur={(event, editor) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tconsole.log('Blur.', editor);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonFocus={(event, editor) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tconsole.log('Focus.', editor);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tmarginTop:\"15px\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}></div>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\t\t\t\t\t\tBN Description\r\n                                             </h3>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\twidth: '100%',\r\n\t\t\t\t\t\t\t\t\t\t\t\tmaxWidth: '100%'\r\n\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<CKEditor\r\n\t\t\t\t\t\t\t\t\t\t\t\t\teditor={ClassicEditor}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tdata={bnDescription}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonInit={editor => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t// You can store the \"editor\" and use when it is needed.\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tconsole.log('Editor is ready to use!', editor);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(event, editor) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tconst data = editor.getData();\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetBNDescription(data);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonBlur={(event, editor) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tconsole.log('Blur.', editor);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonFocus={(event, editor) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tconsole.log('Focus.', editor);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\r\n\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__price'>\r\n\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__item-header'>\r\n\t\t\t\t\t\t\t\t\t\t\t<h3>\r\n\t\t\t\t\t\t\t\t\t\t\t\tProduct Pricing *\r\n\t\t\t</h3>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<div className={pricing && pricing.length > 0 ? 'checkicon-active' : 'checkicon'}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<CheckCircleOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__item-body'>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<Tabs\r\n\t\t\t\t\t\t\t\t\t\t\t\tanimated={true}\r\n\t\t\t\t\t\t\t\t\t\t\t\ttabPosition=\"top\"\r\n\t\t\t\t\t\t\t\t\t\t\t\ttype='card'\r\n\t\t\t\t\t\t\t\t\t\t\t\tactiveKey={pricingTagActiveKey}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={(value) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetpricingTagActiveKey(`${value}`);\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t<TabPane tab=\"Add Variation\" key=\"1\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Pricing \r\n\t\t\t\t\t\t\t\t\t\t\t\t\thandleAddPricing={handleAddPricing}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tpricingItem={editpricingItem}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\thandleUpdatePricing={handleUpdatePricing}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tisPricingEditActive={isPricingEditActive}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t />\r\n\t\t\t\t\t\t\t\t\t\t\t\t</TabPane>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<TabPane\r\n\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t tab=\"Pricing List\" key=\"2\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__item-body-pricingContainer'>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{pricing.length > 0 && pricing.map(item => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__item-body-pricingContainer-item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__item-body-pricingContainer-item-edit'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* <span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<EditOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</span> */}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className='pricingEditIcon' onClick={() => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleEditPricing(item.id); \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetpricingTagActiveKey('1');\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<EditOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className='pricingDeleteIcon' onClick={() => handleDeletePricing(item.id)}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<DeleteOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__item-body-pricingContainer-item-two'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<h3>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tPrice\r\n\t\t\t\t\t\t</h3>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__item-body-pricingContainer-item-body'>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{item.price.offer ? (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<h4 >\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{item.price.offer}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</h4>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<h5 style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttextDecoration: \"line-through\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{item.price.regular}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</h5>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<h4>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{item.price.regular}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</h4>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{item.stock && item.stock['available'] && (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Badge\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\toverflowCount={999}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcount={item.stock.available}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<h3>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tStock\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</h3>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Badge>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{item.stock['minimum'] && (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__item-body-pricingContainer-item-body'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<h6>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmin\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Badge\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"site-badge-count-4\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\toverflowCount={999}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcount={item.stock.minimum} />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</h6>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{item.attribute\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&& Object.values(item.attribute).length > 0 && (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<h3>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tAttributes\r\n\t\t\t\t\t\t</h3>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__item-body-pricingContainer-item-body'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{item.attribute\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&& Object.keys(item.attribute).length > 0\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&& Object.keys(item.attribute).map(attributeItem => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<h6>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{attributeItem}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</h6>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<h4>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{item.attribute[attributeItem]}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</h4>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t})}\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{!(pricing.length > 0) && <div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\twidth: '100%',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdisplay: 'flex',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tjustifyContent: 'center'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Empty description='No Pricing added' image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</TabPane>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t</Tabs>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__item-body-container'>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__image'>\r\n\r\n\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__item-header'>\r\n\t\t\t\t\t\t\t\t\t\t\t<h3>\r\n\t\t\t\t\t\t\t\t\t\t\t\tImage\r\n\t\t\t\t\t\t\t\t\t\t\t</h3>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<Tooltip\r\n\t\t\t\t\t\t\t\t\t\t\t\tplacement=\"left\" title={'Click on the image to select cover image, By default 1st image is selected as cover'}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<a href='###'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<InfoCircleOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__item-body'>\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='aboutToUploadImagesContainer'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t{myImages &&\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tmyImages.length > 0 && myImages.map((image, index) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className='aboutToUploadImagesContainer__item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='aboutToUploadImagesContainer__item-imgContainer'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => setCoverImageId(image.id)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<img src={image.cover} alt={image.alt} />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => handleImagesDelete(image.id)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='aboutToUploadImagesContainer__item-remove'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<CloseOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{coverImageId === image.id ? (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className='aboutToUploadImagesContainer__item-cover'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<CheckOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t) : !coverImageId && index === 0 && (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className='aboutToUploadImagesContainer__item-cover'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<CheckOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t})}\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Tooltip\r\n\t\t\t\t\t\t\t\t\t\t\t\t\ttitle={'Attach images'}>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetvisible(true);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetisModalOpenForImages(true);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetisModalOpenForThumbnail(false);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='aboutToUploadImagesContainer__uploadItem'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* <FileAddOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FileImageTwoTone />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FileImageOutlined /> */}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<FileImageFilled />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* <h5>\r\n\t\t\t\t\t\t\t\t\t\t\t\t     Select From Library\r\n\t\t\t\t\t\t\t\t\t\t\t<     /h5> */}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className='aboutToUploadImagesContainer__uploadItem-plus'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<PlusOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Tooltip>\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__image'>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__item-header'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<h3>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tMeta Data\r\n\t\t\t\t\t\t\t\t\t\t\t\t</h3>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Tooltip\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tplacement=\"left\" title={\"Meta data will be used to make the user's easy and for search engine optimization.\"}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<a href='###'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<InfoCircleOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className='addProductGridContainer__item-body'>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\tlabel='Meta title'\r\n\t\t\t\t\t\t\t\tvalue={values.metaTitle}\r\n\t\t\t\t\t\t\t\tplaceHolder={'category...'}\r\n\t\t\t\t\t\t\t\tname='metaTitle'\r\n\t\t\t\t\t\t\t\tisError={(touched.metaTitle && errors.metaTitle) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['metaTitle'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.metaTitle && errors.metaTitle) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['metaTitle'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('metaTitle')\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\tlabel='BN Meta title'\r\n\t\t\t\t\t\t\t\tvalue={values.bnMetaTitle}\r\n\t\t\t\t\t\t\t\tplaceHolder={'ক্যাটাগড়ি...'}\r\n\t\t\t\t\t\t\t\tname='bnMetaTitle'\r\n\t\t\t\t\t\t\t\tisError={(touched.bnMetaTitle && errors.bnMetaTitle) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['bnMetaTitle'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.bnMetaTitle && errors.bnMetaTitle) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['bnMetaTitle'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('bnMetaTitle');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\tlabel='Meta description'\r\n\t\t\t\t\t\t\t\tvalue={values.metaDescription}\r\n\t\t\t\t\t\t\t\tplaceholder={'meta...'}\r\n\t\t\t\t\t\t\t\tname='metaDescription'\r\n\t\t\t\t\t\t\t\tisError={(touched.metaDescription && errors.metaDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['metaDescription'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.metaDescription && errors.metaDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['metaDescription'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('metaDescription');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\tlabel='BN Meta Description'\r\n\t\t\t\t\t\t\t\tvalue={values.bnMetaDescription}\r\n\t\t\t\t\t\t\t\tplaceholder={'এইয় মেট...'}\r\n\t\t\t\t\t\t\t\tname='bnMetaDescription'\r\n\t\t\t\t\t\t\t\tisError={(touched.bnMetaDescription && errors.bnMetaDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['bnMetaDescription'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.bnMetaDescription && errors.bnMetaDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['bnMetaDescription'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('bnMetaDescription');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\tMeta Tags (grocery,fashion)\r\n\t\t\t\t\t\t\t</h3>\r\n\r\n\t\t\t\t\t\t\t<MetaTags\r\n\t\t\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\t\t\tsetTags={setMetaTags}\r\n\t\t\t\t\t\t\ttags={metaTags}\r\n\t\t\t\t\t\t\t />\r\n\r\n\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\tmarginTop:'15px'\r\n\t\t\t\t\t\t\t}}></div>\r\n\r\n\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\tBN Meta Tags (মুদিখানা,ফ্যাশন)\r\n\t\t\t\t\t\t\t</h3>\r\n\r\n\t\t\t\t\t\t\t<MetaTags\r\n\t\t\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\t\t\tsetTags={setBnMetaTags}\r\n\t\t\t\t\t\t\ttags={bnMetaTags}\r\n\t\t\t\t\t\t\t />\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className='addProductGridContainer__right'>\r\n\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__category'>\r\n\r\n\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer-rightItemContainer'>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer-rightItemContainer-header'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<h3>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tCategories *\r\n\t\t\t\t</h3>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Tooltip\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tcolor='red'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvisible={addProductState.error['error']['category'] && !(categoryids.length > 0)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tplacement=\"left\" title={'Select at least one category'}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div className={!(categoryids.length > 0)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t&& !addProductState.error['error']['category'] ? 'checkicon' : addProductState.error['error']['category'] ? 'checkicon-error' : 'checkicon-active'}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<CheckCircleOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Tooltip>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer-rightItemContainer-body'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Categories\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetCategoryOptions={setCategoryOptions}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tcategoryOptions={categoryOptions}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetcategoryIds={setcategoryIds} />\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__tag'>\r\n\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer-rightItemContainer'>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer-rightItemContainer-header'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<h3>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tTags\r\n\t\t\t\t</h3>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer-rightItemContainer-body'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Tags\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetSelectedTags={setSelectedTags}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tselectedTags={selectedTags}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetTagIds={setTagIds} />\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__brand'>\r\n\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer-rightItemContainer'>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer-rightItemContainer-header'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<h3>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tBrand\r\n\t\t\t\t</h3>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer-rightItemContainer-body'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Brands setBrandId={setBrandId} />\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</section>\r\n\r\n\r\n\t\t\t\t\t\t</Modal>\r\n\r\n\t\t\t\t\t\t<MediaLibrary\r\n\t\t\t\t\t\t\tsetvisible={setvisible}\r\n\t\t\t\t\t\t\tvisible={visible}\r\n\t\t\t\t\t\t\tsetmyImages={setmyImages}\r\n\t\t\t\t\t\t\tmyImages={myImages}\r\n\t\t\t\t\t\t\tsetmyThumbnailImage={setmyThumbnailImage}\r\n\t\t\t\t\t\t\tisModalOpenForThumbnail={isModalOpenForThumbnail}\r\n\t\t\t\t\t\t\tisModalOpenForImages={isModalOpenForImages}\r\n\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</>\r\n\t\t\t\t)}\r\n\t\t</Formik>\r\n\r\n\r\n\r\n\r\n\t);\r\n};\r\n\r\nexport default AddNewProduct;\r\n\r\n\r\n\r\n\r\n/*\r\n\r\n\r\nProduct variation ---->\r\n\r\nPrice [title]\r\n\t[regular input field] [offer inputfield]\r\n\r\nStock [title]\r\n\t[available input field] [minimum inputfield]\r\n\r\ndefault [default can be set to true]\r\n\r\nattributes [title]\r\n\t[add attributes name]\r\n\t\t[add attrubutes value]\r\n\r\n\t[add attributes name]\r\n\t\t[add attrubutes value\r\n\r\n*///","import React, { useState, useEffect } from 'react';\r\n\r\n// import hooks \r\nimport { useHandleFetch } from '../../hooks';\r\n\r\n\r\n// import libraries \r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { message, Tooltip, Modal, Tabs, Empty, Badge, Spin } from 'antd';\r\n\r\nimport {\r\n    DeleteOutlined,\r\n    FileAddOutlined,\r\n    CheckCircleOutlined,\r\n    FileImageFilled,\r\n    FileImageOutlined,\r\n    FileImageTwoTone,\r\n    PlusOutlined,\r\n    PlusCircleOutlined,\r\n    CloseOutlined,\r\n    CheckOutlined,\r\n    InfoCircleOutlined,\r\n    EditOutlined\r\n} from '@ant-design/icons';\r\nimport CKEditor from '@ckeditor/ckeditor5-react';\r\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\r\n\r\n\r\n\r\n// import ReactQuill from 'react-quill';\r\n// import 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport MediaLibrary from \"../../components/MediaLibrary\";\r\nimport DatePicker from \"../../components/Field/DatePicker\";\r\nimport { openSuccessNotification, openErrorNotification } from \"../../components/Notification\";\r\nimport Tags from \"./Tags\";\r\nimport Brands from \"./Brands\";\r\nimport Categories from \"./Categories\";\r\nimport Pricing from \"./Pricing\";\r\nimport MetaTags from \"../category/MetaTags\";\r\n\r\n\r\n\r\nconst { TabPane } = Tabs;\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    // name: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\n\r\nconst initialValues = {\r\n    name: '',\r\n\tdescription: '',\r\n\tmodel: '',\r\n\tunit: '',\r\n\tregular: '',\r\n\toffer: '',\r\n\tavailable: '',\r\n\tminimum: '',\r\n\timage: [],\r\n\turl: '',\r\n\tcover: '',\r\n\tpricing: [],\r\n\tvenue: '',\r\n\tdate: '',\r\n\ttime: '',\r\n\tpurchaseLimit: null,\r\n\tbnUnit: '',\r\n\tbnName: '',\r\n\tbnDescription: '',\r\n\tmetaTitle: '',\r\n\tbnMetaTitle: '',\r\n\tmetaDescription: '',\r\n\tbnMetaDescription: '',\r\n\tmetaTags: '',\r\n\tbnMetaTags: '',\r\n}\r\n\r\n\r\ninterface Props {\r\n    productEditVisible?: any;\r\n    setProductEditVisible?: any;\r\n    productDetailData?: any;\r\n    productList?:any; \r\n    setProductList?:any; \r\n    \r\n}\r\n\r\nconst AddNewProduct = ({ productEditVisible, \r\n    setProductEditVisible, \r\n    productDetailData,\r\n    setProductList, \r\n    productList\r\n }: Props) => {\r\n\r\n    const [updateProductState, handleUpdateProductFetch] = useHandleFetch({}, 'updateProduct');\r\n    const [productDetailState, handleProductDetailFetch] = useHandleFetch({}, 'productDetailById');\r\n    const [attachImageToItemMultipleState, handleAttachImageToItemMultipleFetch] = useHandleFetch({}, 'attachImageToItemMultiple');\r\n    const [attachImageToItemSingleState, handleAttachImageToItemSingleFetch] = useHandleFetch({}, 'attachImageToItemSingle');\r\n    const [detachImageFromItemMultipleState, handleDetachImageFromItemMultipleFetch] = useHandleFetch({}, 'detachImageFromItemMultiple');\r\n    const [detachImageFromItemSingleState, handleDetachImageFromItemSingleFetch] = useHandleFetch({}, 'detachImageFromItemSingle');\r\n    const [setImageAsThumbnailToItemState, handleSetImageAsThumbnailToItemFetch] = useHandleFetch({}, 'setImageAsThumbnailToItem');\r\n\r\n\r\n\r\n    const [visible, setvisible] = useState(false);\r\n    const [myImages, setmyImages] = useState(false);\r\n    const [myThumbnailImage, setmyThumbnailImage] = useState(false);\r\n    const [isModalOpenForThumbnail, setisModalOpenForThumbnail] = useState(false);\r\n    const [isModalOpenForImages, setisModalOpenForImages] = useState(false);\r\n    const [categoryids, setcategoryIds] = useState([]);\r\n    const [tagIds, setTagIds] = useState([]);\r\n    const [brandId, setBrandId] = useState('');\r\n    const [pricing, setPricing] = useState([]);\r\n    const [coverImageId, setCoverImageId] = useState('');\r\n    const [categoryOptions, setCategoryOptions] = useState([]);\r\n    const [selectedTags, setSelectedTags] = useState([]);\r\n    const [date, setDateFeild] = useState('');\r\n    const [time, setTimeFeild] = useState('');\r\n    const [description, setDescription] = useState('');\r\n\tconst [bnDescription, setBNDescription] = useState('');\r\n\tconst [metaTags,setMetaTags] = useState([]);\r\n\tconst [bnMetaTags,setBnMetaTags] = useState([]);\r\n\tconst [editpricingItem,setEditPricingItem] = useState({}); \r\n\tconst [pricingTagActiveKey,setpricingTagActiveKey] = useState('2');\r\n\tconst [isPricingEditActive, seTisPricingEditActive] = useState(false); \r\n\r\n\r\n    useEffect(() => {\r\n\r\n        const getProductDetail = async () => {\r\n            await handleProductDetailFetch({\r\n                urlOptions: {\r\n                    placeHolders: {\r\n                        id: productDetailData.id\r\n                    }\r\n                }\r\n            })\r\n        };\r\n\r\n        getProductDetail();\r\n\r\n    }, [productDetailData]);\r\n\r\n    useEffect(() => {\r\n\r\n        if (productDetailData && productDetailData.brand) {\r\n            setBrandId(productDetailData.brand['id']);\r\n        }\r\n        else {\r\n            setBrandId('');\r\n        }\r\n        if (productDetailData && productDetailData.tags && productDetailData.tags.length > 0) {\r\n            // const tagIds = productDetailData.tags.map(item => item.id);\r\n            setSelectedTags(productDetailData.tags);\r\n        }\r\n        else {\r\n            setSelectedTags([]);\r\n\r\n        }\r\n        if (productDetailData && productDetailData.category && productDetailData.category.length > 0) {\r\n            const categoryIds = productDetailData.category;\r\n            setCategoryOptions(categoryIds);\r\n        }\r\n        else {\r\n            setCategoryOptions([]);\r\n\r\n        }\r\n\r\n        if (productDetailData && productDetailData.pricing && productDetailData.pricing) {\r\n            setPricing(productDetailData.pricing)\r\n        }\r\n        else {\r\n            setPricing([]);\r\n\r\n        }\r\n\r\n\r\n        if (productDetailData && productDetailData.date && productDetailData.date) {\r\n            setDateFeild(productDetailData.date)\r\n        }\r\n        else {\r\n            setDateFeild('');\r\n\r\n        }\r\n\r\n        if (productDetailData && productDetailData.time && productDetailData.time) {\r\n            setTimeFeild(productDetailData.time);\r\n        }\r\n        else {\r\n            setTimeFeild('');\r\n        }\r\n\r\n\r\n        \r\n        if (productDetailData && productDetailData.description) {\r\n            setDescription(productDetailData.description); \r\n        }\r\n        else {\r\n            setDescription('');\r\n        }\r\n\r\n        if (productDetailData && productDetailData.bn && productDetailData.bn['description']) {\r\n            setBNDescription(productDetailData.bn['description']); \r\n        }\r\n        else {\r\n            setBNDescription('');\r\n        }\r\n\r\n\r\n    }, [productDetailData]);\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        if (productDetailState.done && Object.keys(productDetailState).length > 0) {\r\n\r\n            const images = productDetailState.data.image;\r\n            if (images && images.length > 0) {\r\n                setmyImages(images);\r\n            }\r\n\r\n            if (productDetailState.data.cover && productDetailState.data.cover['id']) {\r\n                // @ts-ignore\r\n                setmyImages([productDetailState.data.cover, ...images]);\r\n                console.log('catcat', [productDetailState.data.cover, ...images]);\r\n                setCoverImageId(productDetailState.data.cover['id']);\r\n            }\r\n        }\r\n    }, [productDetailState])\r\n\r\n\r\n    useEffect(() => {\r\n        console.log('thumnail', myImages);\r\n        // @ts-ignore\r\n        if (myImages && myImages[0] && myImages.length < 2) {\r\n            console.log('thumnail2', myImages);\r\n\r\n            if (coverImageId !== myImages[0].id) {\r\n                setCoverImageId(myImages[0].id);\r\n                handleSetImageAsThumnail(myImages[0]);\r\n            }\r\n\r\n        }\r\n\r\n    }, [myImages])\r\n\r\n\r\n    const handleDetachSingleImage = async id => {\r\n        await handleDetachImageFromItemSingleFetch({\r\n            urlOptions: {\r\n                placeHolders: {\r\n                    imageId: id,\r\n                    collection: 'product',\r\n                    itemId: productDetailData.id\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n\r\n\r\n    const handleSetImageAsThumnail = async image => {\r\n\r\n        const thumbnailRes = await handleSetImageAsThumbnailToItemFetch({\r\n            urlOptions: {\r\n                placeHolders: {\r\n                    imageId: image.id,\r\n                    collection: 'product',\r\n                    itemId: productDetailData.id\r\n                }\r\n            }\r\n        });\r\n\r\n        console.log('thumbnailRes', thumbnailRes);\r\n\r\n        // @ts-ignore\r\n        if (thumbnailRes && thumbnailRes.status === 'ok') {\r\n            openSuccessNotification('Set as thumbnail!')\r\n            // const positionInBrand = () => {\r\n            //     return productList.map(item => item.id).indexOf(productDetailData.id);\r\n            // }\r\n\r\n            // const index = positionInBrand();\r\n\r\n            // const prevItem = productList.find(item => item.id === productDetailData.id);\r\n\r\n            // if (prevItem) {\r\n            //     console.log('prevItem--', prevItem, 'image--', image);\r\n            //     const updatedItem = Object.assign({}, productList[index], { ...prevItem, cover: image.cover });\r\n            //     const updateProductList = [...productList.slice(0, index), updatedItem, ...productList.slice(index + 1)];\r\n            //     setProductList(updateProductList);\r\n\r\n            // }\r\n        }\r\n        else {\r\n            openErrorNotification(\"Couldn't set as thumbnail, Something went wrong\")\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n    const makeEmptyCategoryOptions = (setEmpty) => {\r\n        setEmpty([]);\r\n    }\r\n\r\n    const handleSubmit = async (values: any, actions: any) => {\r\n        // @ts-ignore\r\n        const imagesIds = myImages ? myImages.map(image => {\r\n            return image.id;\r\n        }) : [];\r\n\r\n\r\n        if (productDetailData && Object.keys(productDetailData).length > 0) {\r\n\t\t\tconst aboutToUpdatedImageIds = []; \r\n\r\n\t\t\tif(imagesIds && imagesIds.length > 0){\r\n\t\t\t\timagesIds.forEach(imageId => {\r\n\t\t\t\t\tif(productDetailData && productDetailData['image']){\r\n\t\t\t\t\t\tif(!productDetailData['image'].includes(imageId)){\r\n\t\t\t\t\t\t\taboutToUpdatedImageIds.push(imageId)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n      \r\n            if (aboutToUpdatedImageIds[0] && aboutToUpdatedImageIds.length > 1) {\r\n                await handleAttachImageToItemMultipleFetch({\r\n                    urlOptions: {\r\n                        placeHolders: {\r\n                            collection: 'product',\r\n                            itemId: productDetailData.id\r\n                        }\r\n                    },\r\n                    body: {\r\n                        image: aboutToUpdatedImageIds\r\n                    }\r\n                });\r\n            }\r\n            else if (aboutToUpdatedImageIds[0] && aboutToUpdatedImageIds.length < 1) {\r\n                await handleAttachImageToItemSingleFetch({\r\n                    urlOptions: {\r\n                        placeHolders: {\r\n                            imageId: aboutToUpdatedImageIds[0].id,\r\n                            collection: 'product',\r\n                            itemId: productDetailData.id\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n        }\r\n        \r\n\r\n\r\n        const updatedProductRes = await handleUpdateProductFetch({\r\n            urlOptions: {\r\n                placeHolders: {\r\n                    id: productDetailData.id\r\n                }\r\n            },\r\n            body: {\r\n                name: values.name.trim(),\r\n                description: description,\r\n                model: values.model,\r\n                unit: values.unit,\r\n                category: categoryOptions,\r\n                tags: tagIds,\r\n                brand: brandId,\r\n                image: imagesIds,\r\n                cover: coverImageId || imagesIds[0] ? imagesIds[0] : '',\r\n                pricing: pricing,\r\n                metaTitle: values.metaTitle,\r\n\t\t\t\tmetaDescription: values.metaDescription,\r\n                metaTags: metaTags.join(','),\r\n                \r\n\r\n\t\t\t\tbn: {\r\n\t\t\t\t\tmetaTitle: values.bnMetaTitle,\r\n\t\t\t\t\tmetaDescription: values.bnMetaDescription,\r\n\t\t\t\t\tmetaTags: bnMetaTags.join(','),\r\n\t\t\t\t\tname: values.bnName.trim(),\r\n\t\t\t\t\tunit: values.metaUnit,\r\n\t\t\t\t\tdescription: bnDescription,\r\n\t\t\t\t}\r\n            },\r\n        });\r\n\r\n\r\n        // @ts-ignore\r\n        if (updatedProductRes && updatedProductRes.status === 'ok') {\r\n            openSuccessNotification('Product Updated');\r\n\r\n\r\n\t\t\tconst positionInAttribute = () => {\r\n\t\t\t\treturn productList.map(item => item.id).indexOf(productDetailData.id);\r\n\t\t\t}\r\n\r\n\t\t\tconst index = positionInAttribute();\r\n\r\n\t\t\t// @ts-ignore\r\n\t\t\tconst updatedItem = Object.assign({}, productList[index], { ...productDetailData, ...updatedProductRes });\r\n\t\t\tconst updateProductList = [...productList.slice(0, index), updatedItem, ...productList.slice(index + 1)];\r\n            setProductList(updateProductList);\r\n            \r\n\r\n            setProductEditVisible(false);\r\n\r\n\r\n            // setProductDetailData({\r\n            //     // @ts-ignore\r\n            //     ...updatedProductRes,\r\n            //     category: productDetailData.category,\r\n            //     brand: productDetailData.brand,\r\n            //     tags: productDetailData.tags,\r\n            //     cover: productDetailData.cover,\r\n            //     image: productDetailData.image,\r\n            // }); \r\n\r\n\r\n            // console.log('updatedProductRes', updatedProductRes);\r\n            // setProductList([...productList, {\r\n            //     id: updatedProductRes['id'] || '',\r\n            //     key: updatedProductRes['id'] || '',\r\n            //     name: updatedProductRes['name'] || '',\r\n            //     description: updatedProductRes['description'] || '',\r\n            //     // @ts-ignore\r\n            //     ...updatedProductRes\r\n            // }])\r\n            // @ts-ignore\r\n            setmyImages([]);\r\n            setCoverImageId('');\r\n            setPricing([]);\r\n            setTagIds([]);\r\n            setSelectedTags([]);\r\n            setBrandId(\"\");\r\n            setcategoryIds([]);\r\n            setCategoryOptions([]);\r\n            actions.resetForm();\r\n        }\r\n        else {\r\n            // openErrorNotification();\r\n        }\r\n\r\n        actions.setSubmitting(false);\r\n\r\n\r\n    };\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        if (!updateProductState['isLoading']) {\r\n            const error = updateProductState['error'];\r\n            if (error['isError'] && Object.keys(error['error']).length > 0) {\r\n\r\n\r\n                const errors =\r\n                    Object.values(error['error']).length > 0\r\n                        ? Object.values(error['error'])\r\n                        : [];\r\n                errors.forEach((err, i) => {\r\n                    if (typeof err === 'string') {\r\n                        openErrorNotification(err)\r\n                    }\r\n                    else if (typeof err === 'object') {\r\n                        if (err && Object.keys(err).length > 0) {\r\n                            const errs = Object.values(err);\r\n                            errs.forEach(err => {\r\n                                openErrorNotification(err)\r\n                            })\r\n\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n        }\r\n    }, [updateProductState])\r\n\r\n\r\n    const handleCancel = (e: any) => {\r\n        setProductEditVisible(false);\r\n    };\r\n\r\n\r\n    const getisSubmitButtonDisabled = (values, isValid) => {\r\n        if (!values.name || !(pricing.length > 0) || !(categoryOptions.length > 0) || !isValid) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n\r\n    const handleImagesDelete = (id) => {\r\n        // @ts-ignore\r\n        const newImages = myImages && myImages.filter(image => {\r\n            return image.id !== id;\r\n        })\r\n\r\n        setmyImages(newImages);\r\n    }\r\n\r\n    const handleDeleteFromSelectedImage = () => {\r\n\r\n    };\r\n\r\n    const handleThumbnailImageDelete = (id) => {\r\n        // @ts-ignore\r\n        const newImages = myThumbnailImage && myThumbnailImage.filter(image => {\r\n            return image.id !== id;\r\n        })\r\n\r\n        if (newImages.length > 0) {\r\n            setmyThumbnailImage(newImages);\r\n\r\n        }\r\n        else setmyThumbnailImage(false);\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n    const handleUpdatePricing = (priceItem) => {\r\n\r\n\t\tconst positionInPricing = () => {\r\n\t\t\treturn pricing.map(item => item.id).indexOf(priceItem.id);\r\n\t\t  }\r\n\r\n\t\t  const index = positionInPricing();\r\n\r\n\t\t  // @ts-ignore\r\n\t\t  const updatedItem = Object.assign({}, pricing[index], { ...priceItem });\r\n\t\t  const updatePricingList = [...pricing.slice(0, index), updatedItem, ...pricing.slice(index + 1)];\r\n\t\t\t \r\n\t\t  setPricing(updatePricingList); \r\n\r\n\t\tmessage.info('Product Pricing Updated');\r\n\t\tseTisPricingEditActive(true);\r\n\t\tsetpricingTagActiveKey('2'); \r\n    }\r\n    \r\n\r\n\r\n\r\n    const handleAddPricing = (priceItem) => {\r\n\r\n        setPricing([{\r\n            ...priceItem,\r\n            id: pricing.length\r\n        }, ...pricing])\r\n        message.info('Product Pricing Added');\r\n    }\r\n\r\n\r\n    const handleDeletePricing = (id) => {\r\n        const newPricing = pricing.filter(item => item.id !== id);\r\n        setPricing(newPricing);\r\n        message.info('Product Pricing Deleted');\r\n    }\r\n\r\n\r\n    const handleEditPricing = (id)=> {\r\n\t\tseTisPricingEditActive(true);\r\n\t\tconst pricingItem = pricing.find(item => item.id === id);\r\n\t\tif(pricingItem){\r\n\t\t\tsetEditPricingItem(pricingItem);\r\n\t\t}\r\n\t}\r\n\r\n\r\n\r\n\r\n    const isCategoryInValid = () => {\r\n        if (updateProductState.error['error']['category'] && !categoryids && categoryids.length) {\r\n            return true;\r\n        }\r\n        else if (categoryids && categoryids.length > 0) {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    const handleDateChange = (date, dateString) => {\r\n        setDateFeild(dateString);\r\n        // console.log('date', date, dateString);\r\n    }\r\n\r\n    const handleTimeChange = (date, dateString) => {\r\n        setTimeFeild(dateString);\r\n        // console.log('date', date, dateString);\r\n    }\r\n\r\n\r\n    console.log('productDetailData', productDetailData);\r\n    console.log('productDetailState', productDetailState);\r\n\r\n\r\n    useEffect(()=>{\r\n\r\n        if(productDetailState.data && Object.keys(productDetailState.data).length > 0 && productDetailState.data.metaTags){\r\n            const metaTags = productDetailState.data.metaTags.split(','); \r\n\r\n            console.log('localMetaTags',metaTags);\r\n           \r\n            const bnMetaTags = productDetailState.data.bn['metaTags'].split(','); \r\n            setMetaTags(metaTags)\r\n            setBnMetaTags(bnMetaTags)\r\n        }\r\n\r\n    },[productDetailState['done']])\r\n\r\n    \r\n\r\n    console.log('productDetailData')\r\n\r\n    return (\r\n        <Formik\r\n            onSubmit={(values, actions) => handleSubmit(values, actions)}\r\n            validationSchema={validationSchema}\r\n            validateOnBlur={false}\r\n            enableReinitialize={true}\r\n            initialValues={\r\n                { ...initialValues,\r\n                    ...{\r\n                    ...productDetailData,\r\n                    ...( productDetailState['data'] && Object.keys(productDetailState['data']).length > 0 && productDetailState['data']['bn'] && {\r\n                        bnMetaTitle: productDetailState['data']['bn'].metaTitle,\r\n                        bnMetaDescription: productDetailState['data']['bn'].metaDescription,\r\n                        bnName: productDetailState['data']['bn'].name,\r\n                        metaUnit: productDetailState['data']['bn'].unit,\r\n                        bnDescription: productDetailState['data']['bn'].description,\r\n                      }),\r\n                } }\r\n            }\r\n        >\r\n            {({\r\n                handleChange,\r\n                values,\r\n                handleSubmit,\r\n                errors,\r\n                isValid,\r\n                isSubmitting,\r\n                touched,\r\n                handleBlur,\r\n                setFieldTouched,\r\n                handleReset,\r\n            }) => (\r\n                    <>\r\n                        <Modal\r\n                            style={{\r\n                                top: '40px',\r\n\r\n                            }}\r\n                            bodyStyle={{\r\n                                margin: 0,\r\n                                padding: 0,\r\n                            }}\r\n                            width={'70vw'}\r\n                            title=\"Product Edit\"\r\n                            visible={productEditVisible}\r\n                            onOk={(e: any) => handleSubmit(e)}\r\n                            onCancel={handleCancel}\r\n                            destroyOnClose={true}\r\n                            okText='Update'\r\n                            okButtonProps={{\r\n\t\t\t\t\t\t\t\tloading: isSubmitting,\r\n\t\t\t\t\t\t\t\thtmlType: \"submit\",\r\n\t\t\t\t\t\t\t}}\r\n                        >\r\n                            <section className='addProductGridContainer'>\r\n                                <div className='addProductGridContainer__left'>\r\n                                    <div className='addProductGridContainer__name'>\r\n                                        <div className='addProductGridContainer__item-header'>\r\n                                            <h3>\r\n                                                Product Information *\r\n\t\t                                \t</h3>\r\n                                            <div className={values.name && values.name.length > 2 ? 'checkicon-active' : 'checkicon'}>\r\n                                                <CheckCircleOutlined />\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className='addProductGridContainer__item-body'>\r\n                                        <Input\r\n\t\t\t\t\t\t\t\t\t\t\t\tlabel='Name'\r\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.name}\r\n\t\t\t\t\t\t\t\t\t\t\t\tplaceHolder={'Rafty ox'}\r\n\t\t\t\t\t\t\t\t\t\t\t\tname='name'\r\n\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateProductState.error['error']['name'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateProductState.error['error']['name'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('name');\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\tlabel='BN Name'\r\n\t\t\t\t\t\t\t\t\t\t\tvalue={values.bnName}\r\n\t\t\t\t\t\t\t\t\t\t\tplaceHolder={'রাফতি অক্স'}\r\n\t\t\t\t\t\t\t\t\t\t\tname='bnName'\r\n\t\t\t\t\t\t\t\t\t\t\tisError={(touched.bnName && errors.bnName) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateProductState.error['error']['bnName'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.bnName && errors.bnName) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateProductState.error['error']['bnName'])}\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('bnName');\r\n\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t{/* <div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\tdisplay: 'flex',\r\n\t\t\t\t\t\t\t\t\t\t\t\tjustifyContent: 'space-between'\r\n\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\twidth: '48%',\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<DatePicker\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabel='Date'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={handleDateChange} />\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\twidth: '48%'\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<DatePicker\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tdate={date}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\twithTime={true}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder='Select time'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabel='Time'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={handleTimeChange} />\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t</div> */}\r\n\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t{/* \r\n\t\t\t\t\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\t\t\t\t\trows={1}\r\n\t\t\t\t\t\t\t\t\t\t\t\tlabel='Venue'\r\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.venue}\r\n\t\t\t\t\t\t\t\t\t\t\t\tname='venue'\r\n\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.venue && errors.venue) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateProductState.error['error']['venue'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.venue && errors.venue) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateProductState.error['error']['venue'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('venue');\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\t\tlabel='Purchase Limit'\r\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.purchaseLimit}\r\n\t\t\t\t\t\t\t\t\t\t\t\ttype='number'\r\n\t\t\t\t\t\t\t\t\t\t\t\tname='purchaseLimit'\r\n\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.purchaseLimit && errors.purchaseLimit) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateProductState.error['error']['purchaseLimit'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.purchaseLimit && errors.purchaseLimit) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateProductState.error['error']['purchaseLimit'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('purchaseLimit');\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t/> */}\r\n\r\n\r\n\t\t\t\t\t\t\t\t\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\t\tlabel='Unit'\r\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.unit}\r\n\t\t\t\t\t\t\t\t\t\t\t\tname='unit'\r\n\t\t\t\t\t\t\t\t\t\t    \tplaceHolder={'KG,POUND,GM'}\r\n\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.unit && errors.unit) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateProductState.error['error']['unit'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.unit && errors.unit) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateProductState.error['error']['unit'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('unit');\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\tlabel='BN Unit'\r\n\t\t\t\t\t\t\t\t\t\t\tvalue={values.bnUnit}\r\n\t\t\t\t\t\t\t\t\t\t\tplaceHolder={'কেজি,গ্রাম'}\r\n\t\t\t\t\t\t\t\t\t\t\tname='bnUnit'\r\n\t\t\t\t\t\t\t\t\t\t\tisError={(touched.bnUnit && errors.bnUnit) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateProductState.error['error']['bnUnit'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.bnUnit && errors.bnUnit) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateProductState.error['error']['bnUnit'])}\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('bnUnit');\r\n\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\t\tlabel='Model Number'\r\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.model}\r\n\t\t\t\t\t\t\t\t\t\t\t\tname='model'\r\n\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.model && errors.model) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateProductState.error['error']['model'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.model && errors.model) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateProductState.error['error']['model'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('model');\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\r\n\r\n                                            <h3 className='inputFieldLabel'>\r\n                                                Description\r\n                                            </h3>\r\n\r\n                                            <div style={{\r\n                                                width: '100%',\r\n                                                maxWidth: '100%'\r\n                                            }}>\r\n                                                <CKEditor\r\n                                                    editor={ClassicEditor}\r\n                                                    data={description}\r\n                                                    onInit={editor => {\r\n                                                        // You can store the \"editor\" and use when it is needed.\r\n                                                        console.log('Editor is ready to use!', editor);\r\n                                                    }}\r\n                                                    onChange={(event, editor) => {\r\n                                                        const data = editor.getData();\r\n                                                        setDescription(data);\r\n                                                    }}\r\n                                                    onBlur={(event, editor) => {\r\n                                                        console.log('Blur.', editor);\r\n                                                    }}\r\n                                                    onFocus={(event, editor) => {\r\n                                                        console.log('Focus.', editor);\r\n                                                    }}\r\n                                                />\r\n                                            </div>\r\n\r\n                                            <div style={{\r\n                                                marginTop: '15px'\r\n                                            }}></div>\r\n\r\n                                            <h3 className='inputFieldLabel'>\r\n                                               BN Description\r\n                                            </h3>\r\n\r\n                                            <div style={{\r\n                                                width: '100%',\r\n                                                maxWidth: '100%'\r\n                                            }}>\r\n                                                <CKEditor\r\n                                                    editor={ClassicEditor}\r\n                                                    data={bnDescription}\r\n                                                    onInit={editor => {\r\n                                                        // You can store the \"editor\" and use when it is needed.\r\n                                                        console.log('Editor is ready to use!', editor);\r\n                                                    }}\r\n                                                    onChange={(event, editor) => {\r\n                                                        const data = editor.getData();\r\n                                                        setBNDescription(data);\r\n                                                    }}\r\n                                                    onBlur={(event, editor) => {\r\n                                                        console.log('Blur.', editor);\r\n                                                    }}\r\n                                                    onFocus={(event, editor) => {\r\n                                                        console.log('Focus.', editor);\r\n                                                    }}\r\n                                                />\r\n                                            </div>\r\n\r\n                                            <div style={{\r\n                                                marginTop:\"15px\"\r\n                                            }}> </div>\r\n\r\n                                        </div>\r\n\r\n                                    </div>\r\n\r\n                                            \r\n                                    <div className='addProductGridContainer__price'>\r\n\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__item-header'>\r\n\t\t\t\t\t\t\t\t\t\t\t<h3>\r\n\t\t\t\t\t\t\t\t\t\t\t\tProduct Pricing *\r\n\t\t\t</h3>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<div className={pricing && pricing.length > 0 ? 'checkicon-active' : 'checkicon'}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<CheckCircleOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__item-body'>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<Tabs\r\n\t\t\t\t\t\t\t\t\t\t\t\tanimated={true}\r\n\t\t\t\t\t\t\t\t\t\t\t\ttabPosition=\"top\"\r\n\t\t\t\t\t\t\t\t\t\t\t\ttype='card'\r\n\t\t\t\t\t\t\t\t\t\t\t\tactiveKey={pricingTagActiveKey}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={(value) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetpricingTagActiveKey(`${value}`);\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t<TabPane tab=\"Add Variation\" key=\"1\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Pricing \r\n\t\t\t\t\t\t\t\t\t\t\t\t\thandleAddPricing={handleAddPricing}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tpricingItem={editpricingItem}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\thandleUpdatePricing={handleUpdatePricing}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tisPricingEditActive={isPricingEditActive}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t />\r\n\t\t\t\t\t\t\t\t\t\t\t\t</TabPane>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<TabPane\r\n\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t tab=\"Pricing List\" key=\"2\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__item-body-pricingContainer'>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{pricing.length > 0 && pricing.map(item => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__item-body-pricingContainer-item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__item-body-pricingContainer-item-edit'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* <span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<EditOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</span> */}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className='pricingEditIcon' onClick={() => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleEditPricing(item.id); \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetpricingTagActiveKey('1');\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<EditOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className='pricingDeleteIcon' onClick={() => handleDeletePricing(item.id)}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<DeleteOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__item-body-pricingContainer-item-two'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<h3>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tPrice\r\n\t\t\t\t\t\t</h3>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__item-body-pricingContainer-item-body'>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{item.price.offer ? (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<h4 >\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{item.price.offer}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</h4>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<h5 style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttextDecoration: \"line-through\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{item.price.regular}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</h5>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<h4>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{item.price.regular}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</h4>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{item.stock && item.stock['available'] && (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Badge\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\toverflowCount={999}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcount={item.stock.available}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<h3>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tStock\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</h3>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Badge>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{item.stock['minimum'] && (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__item-body-pricingContainer-item-body'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<h6>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmin\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Badge\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"site-badge-count-4\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\toverflowCount={999}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcount={item.stock.minimum} />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</h6>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{item.attribute\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&& Object.values(item.attribute).length > 0 && (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<h3>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tAttributes\r\n\t\t\t\t\t\t</h3>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__item-body-pricingContainer-item-body'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{item.attribute\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&& Object.keys(item.attribute).length > 0\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&& Object.keys(item.attribute).map(attributeItem => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<h6>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{attributeItem}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</h6>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<h4>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{item.attribute[attributeItem]}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</h4>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t})}\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{!(pricing.length > 0) && <div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\twidth: '100%',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdisplay: 'flex',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tjustifyContent: 'center'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Empty description='No Pricing added' image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</TabPane>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t</Tabs>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__item-body-container'>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n                                    <div className='addProductGridContainer__image'>\r\n\r\n                                        <div className='addProductGridContainer__item-header'>\r\n                                            <h3>\r\n                                                Image\r\n\t\t\t</h3>\r\n\r\n                                            <Tooltip\r\n                                                placement=\"left\" title={'Click on the image to select cover image, By default 1st image is selected as cover'}>\r\n                                                <a href='###'>\r\n                                                    <InfoCircleOutlined />\r\n                                                </a>\r\n                                            </Tooltip>\r\n                                        </div>\r\n\r\n                                        <div\r\n                                            style={{\r\n                                                padding: \"10px\"\r\n                                            }}\r\n                                            className='aboutToUploadImagesContainer'>\r\n                                            {productDetailState.isLoading && (\r\n                                                <div style={{\r\n                                                    padding: '20px 0'\r\n                                                }}>\r\n                                                    <Spin />\r\n                                                </div>\r\n                                            )}\r\n                                            {productDetailState.done && (\r\n                                                <>\r\n                                                    {myImages &&\r\n                                                        // @ts-ignore\r\n                                                        myImages.length > 0 && myImages.map((image, index) => {\r\n                                                            return (\r\n                                                                <div className='aboutToUploadImagesContainer__item'>\r\n                                                                    <div\r\n                                                                        className='aboutToUploadImagesContainer__item-imgContainer'\r\n                                                                        onClick={() => {\r\n                                                                            setCoverImageId(image.id);\r\n                                                                            handleSetImageAsThumnail(image);\r\n                                                                        }}\r\n                                                                    >\r\n                                                                        <img src={image.cover} alt={image.alt} />\r\n                                                                    </div>\r\n\r\n                                                                    <span\r\n                                                                        onClick={() => {\r\n                                                                            handleImagesDelete(image.id)\r\n                                                                            handleDetachSingleImage(image.id)\r\n                                                                        }\r\n\r\n                                                                        }\r\n                                                                        className='aboutToUploadImagesContainer__item-remove'>\r\n                                                                        <CloseOutlined />\r\n                                                                    </span>\r\n\r\n\r\n                                                                    {coverImageId === image.id ? (\r\n                                                                        <span className='aboutToUploadImagesContainer__item-cover'>\r\n                                                                            <CheckOutlined />\r\n                                                                        </span>\r\n                                                                    ) : !coverImageId && index === 0 && (\r\n                                                                        <span className='aboutToUploadImagesContainer__item-cover'>\r\n                                                                            <CheckOutlined />\r\n                                                                        </span>\r\n                                                                    )}\r\n\r\n\r\n                                                                </div>\r\n                                                            )\r\n                                                        })}\r\n\r\n\r\n                                                    <Tooltip\r\n                                                        title={'Attach images'}>\r\n\r\n                                                        <div\r\n                                                            onClick={() => {\r\n                                                                setvisible(true);\r\n                                                                setisModalOpenForImages(true);\r\n                                                                setisModalOpenForThumbnail(false);\r\n                                                            }}\r\n                                                            className='aboutToUploadImagesContainer__uploadItem'>\r\n                                                            {/* <FileAddOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FileImageTwoTone />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FileImageOutlined /> */}\r\n                                                            <FileImageFilled />\r\n                                                            {/* <h5>\r\n\t\t\t\t\t\t\t\t\t\t\t\t     Select From Library\r\n\t\t\t\t\t\t\t\t\t\t\t<     /h5> */}\r\n                                                            <span className='aboutToUploadImagesContainer__uploadItem-plus'>\r\n                                                                <PlusOutlined />\r\n                                                            </span>\r\n                                                        </div>\r\n                                                    </Tooltip>\r\n                                                </>\r\n                                            )}\r\n\r\n                                        </div>\r\n                                    </div>\r\n\r\n\r\n\r\n\r\n                                    \r\n\r\n\r\n\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__image'>\r\n\r\n                                        <div className='addProductGridContainer__item-header'>\r\n                                            <h3>\r\n                                            Meta Data\r\n                                        </h3>\r\n\r\n                                            <Tooltip\r\n                                                placement=\"left\" title={\"Meta data will be used to make the user's easy and for search engine optimization.\"}>\r\n                                                <a href='###'>\r\n                                                    <InfoCircleOutlined />\r\n                                                </a>\r\n                                            </Tooltip>\r\n                                        </div>\r\n                                        <div className='addProductGridContainer__item-body'>\r\n\r\n                                                        \r\n                                        <Input\r\n                                        label='Meta title'\r\n                                        value={values.metaTitle}\r\n                                        placeHolder={'category...'}\r\n                                        name='metaTitle'\r\n                                        isError={(touched.metaTitle && errors.metaTitle) ||\r\n                                        (!isSubmitting && updateProductState.error['error']['metaTitle'])}\r\n\r\n                                        errorString={(touched.metaTitle && errors.metaTitle) ||\r\n                                        (!isSubmitting && updateProductState.error['error']['metaTitle'])}\r\n                                        onChange={(e: any) => {\r\n                                        handleChange(e);\r\n                                        setFieldTouched('metaTitle')\r\n                                        }}\r\n                                        />\r\n\r\n                                        <Input\r\n                                        label='BN Meta title'\r\n                                        value={values.bnMetaTitle}\r\n                                        placeHolder={'ক্যাটাগড়ি...'}\r\n                                        name='bnMetaTitle'\r\n                                        isError={(touched.bnMetaTitle && errors.bnMetaTitle) ||\r\n                                        (!isSubmitting && updateProductState.error['error']['bnMetaTitle'])}\r\n\r\n                                        errorString={(touched.bnMetaTitle && errors.bnMetaTitle) ||\r\n                                        (!isSubmitting && updateProductState.error['error']['bnMetaTitle'])}\r\n                                        onChange={(e: any) => {\r\n                                        handleChange(e);\r\n                                        setFieldTouched('bnMetaTitle');\r\n                                        }}\r\n                                        />\r\n\r\n                                        <TextArea\r\n                                        label='Meta description'\r\n                                        value={values.metaDescription}\r\n                                        placeholder={'meta...'}\r\n                                        name='metaDescription'\r\n                                        isError={(touched.metaDescription && errors.metaDescription) ||\r\n                                        (!isSubmitting && updateProductState.error['error']['metaDescription'])}\r\n\r\n                                        errorString={(touched.metaDescription && errors.metaDescription) ||\r\n                                        (!isSubmitting && updateProductState.error['error']['metaDescription'])}\r\n                                        onChange={(e: any) => {\r\n                                        handleChange(e);\r\n                                        setFieldTouched('metaDescription');\r\n                                        }}\r\n                                        />\r\n\r\n                                        <TextArea\r\n                                        label='BN Meta Description'\r\n                                        value={values.bnMetaDescription}\r\n                                        placeholder={'এইয় মেট...'}\r\n                                        name='bnMetaDescription'\r\n                                        isError={(touched.bnMetaDescription && errors.bnMetaDescription) ||\r\n                                        (!isSubmitting && updateProductState.error['error']['bnMetaDescription'])}\r\n\r\n                                        errorString={(touched.bnMetaDescription && errors.bnMetaDescription) ||\r\n                                        (!isSubmitting && updateProductState.error['error']['bnMetaDescription'])}\r\n                                        onChange={(e: any) => {\r\n                                        handleChange(e);\r\n                                        setFieldTouched('bnMetaDescription');\r\n                                        }}\r\n                                        />\r\n\r\n                                        <h3 className='inputFieldLabel'>\r\n                                        Meta Tags (grocery,fashion)\r\n                                        </h3>\r\n\r\n                                        <MetaTags\r\n                                        // @ts-ignore\r\n                                        setTags={setMetaTags}\r\n                                        tags={metaTags}\r\n                                        />\r\n\r\n                                        <div style={{\r\n                                        marginTop:'15px'\r\n                                        }}></div>\r\n\r\n                                        <h3 className='inputFieldLabel'>\r\n                                        BN Meta Tags (মুদিখানা,ফ্যাশন)\r\n                                        </h3>\r\n\r\n                                        <MetaTags\r\n                                        // @ts-ignore\r\n                                        setTags={setBnMetaTags}\r\n                                        tags={bnMetaTags}\r\n                                        />\r\n                                        </div>\r\n                                        </div>\r\n\r\n\r\n                                </div>\r\n                                <div className='addProductGridContainer__right'>\r\n                                    <div className='addProductGridContainer__category'>\r\n\r\n                                        <div className='addProductGridContainer-rightItemContainer'>\r\n                                            <div className='addProductGridContainer-rightItemContainer-header'>\r\n                                                <h3>\r\n                                                    Categories *\r\n\t\t\t\t</h3>\r\n\r\n                                                <Tooltip\r\n                                                    color='red'\r\n                                                    visible={updateProductState.error['error']['category'] && !(categoryids.length > 0)}\r\n                                                    placement=\"left\" title={'Select at least one category'}>\r\n                                                    <div className={!(categoryids.length > 0)\r\n                                                        && !updateProductState.error['error']['category'] ? 'checkicon' : updateProductState.error['error']['category'] ? 'checkicon-error' : 'checkicon-active'}>\r\n                                                        <CheckCircleOutlined />\r\n                                                    </div>\r\n                                                </Tooltip>\r\n\r\n                                            </div>\r\n                                            <div className='addProductGridContainer-rightItemContainer-body'>\r\n                                                <Categories\r\n                                                    setCategoryOptions={setCategoryOptions}\r\n                                                    categoryOptions={categoryOptions}\r\n                                                    setcategoryIds={setcategoryIds} />\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                    </div>\r\n\r\n                                    <div className='addProductGridContainer__tag'>\r\n                                        <div className='addProductGridContainer-rightItemContainer'>\r\n                                            <div className='addProductGridContainer-rightItemContainer-header'>\r\n                                                <h3>\r\n                                                    Tags\r\n\t\t\t\t</h3>\r\n                                            </div>\r\n                                            <div className='addProductGridContainer-rightItemContainer-body'>\r\n                                                <Tags\r\n                                                    setSelectedTags={setSelectedTags}\r\n                                                    selectedTags={selectedTags}\r\n                                                    setTagIds={setTagIds} />\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                    </div>\r\n                                    <div className='addProductGridContainer__brand'>\r\n                                        <div className='addProductGridContainer-rightItemContainer'>\r\n                                            <div className='addProductGridContainer-rightItemContainer-header'>\r\n                                                <h3>\r\n                                                    Brand\r\n\t\t\t\t</h3>\r\n                                            </div>\r\n                                            <div className='addProductGridContainer-rightItemContainer-body'>\r\n                                                <Brands\r\n                                                    productDetailState={productDetailState}\r\n                                                    brandId={brandId}\r\n                                                    setBrandId={setBrandId} />\r\n                                            </div>\r\n                                        </div>\r\n\r\n\r\n                                    </div>\r\n\r\n                                </div>\r\n                            </section>\r\n\r\n\r\n                        </Modal>\r\n\r\n                        <MediaLibrary\r\n                            setvisible={setvisible}\r\n                            visible={visible}\r\n                            setmyImages={setmyImages}\r\n                            myImages={myImages}\r\n                            setmyThumbnailImage={setmyThumbnailImage}\r\n                            isModalOpenForThumbnail={isModalOpenForThumbnail}\r\n                            isModalOpenForImages={isModalOpenForImages}\r\n\r\n                        />\r\n                    </>\r\n                )}\r\n        </Formik>\r\n\r\n\r\n\r\n\r\n    );\r\n};\r\n\r\nexport default AddNewProduct;\r\n\r\n\r\n\r\n\r\n/*\r\n\r\n\r\nProduct variation ---->\r\n\r\nPrice [title]\r\n\t[regular input field] [offer inputfield]\r\n\r\nStock [title]\r\n\t[available input field] [minimum inputfield]\r\n\r\ndefault [default can be set to true]\r\n\r\nattributes [title]\r\n\t[add attributes name]\r\n\t\t[add attrubutes value]\r\n\r\n\t[add attributes name]\r\n\t\t[add attrubutes value\r\n\r\n*///","import React, { useState, useEffect } from 'react';\r\nimport { withRouter, useHistory } from 'react-router-dom';\r\nimport { notification, Empty, Table, Badge, Menu, Dropdown, Space, Tag, Button, Input, Tooltip, Popconfirm } from 'antd';\r\nimport { CheckCircleOutlined, PlusOutlined, EditOutlined, DeleteOutlined, EditFilled } from '@ant-design/icons';\r\n\r\n\r\n/// import hooks\r\nimport { useHandleFetch } from \"../../hooks\";\r\n\r\n// import components\r\nimport { DataTableSkeleton } from \"../../components/Placeholders\";\r\nimport AddNewProduct from \"./AddNewProduct\";\r\nimport ProductQuickEdit from \"./ProductQuickEdit\";\r\nimport QuickEdit from \"./QuickEdit\";\r\n\r\nconst { Column, ColumnGroup } = Table;\r\nconst { Search } = Input;\r\n\r\n\r\n\r\nconst openSuccessNotification = () => {\r\n  notification.success({\r\n    message: 'Product Deleted',\r\n    description: '',\r\n    icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n  });\r\n};\r\n\r\n\r\n\r\ninterface myTableProps {\r\n  data: any;\r\n  setProductList: any;\r\n}\r\n\r\n\r\nconst MyTable = ({ data, setProductList }: myTableProps) => {\r\n  const [visible, setvisible] = useState(false);\r\n  const [activeCategoryForEdit, setactiveCategoryForEdit] = useState(false);\r\n  const [deleteProductState, handleDeleteProductFetch] = useHandleFetch({}, 'deleteProduct');\r\n  const [productDetailVisible, setproductDetailVisible] = useState(false);\r\n\r\n  const history = useHistory();\r\n\r\n  const handleDeleteProduct = async (id) => {\r\n    const deleteProductRes = await handleDeleteProductFetch({\r\n      urlOptions: {\r\n        placeHolders: {\r\n          id,\r\n        }\r\n      }\r\n    });\r\n\r\n    // @ts-ignore\r\n    if (deleteProductRes && deleteProductRes.status === 'ok') {\r\n      openSuccessNotification();\r\n      const newProductList = data.filter(item => item.id !== id);\r\n      setProductList(newProductList);\r\n    }\r\n\r\n    // console.log('deleteProductRes', deleteProductRes)\r\n  }\r\n\r\n\r\n  return (\r\n    <>\r\n      <Table\r\n        style={{\r\n          paddingTop: '10px',\r\n          borderRadius: '5px !important',\r\n          overflow: 'hidden',\r\n          boxShadow: '0 0.125rem 0.625rem rgba(227, 231, 250, 0.3), 0 0.0625rem 0.125rem rgba(206, 220, 233, 0.4)'\r\n        }}\r\n        // expandable={{\r\n        //     expandedRowRender: record => <p style={{ margin: 0 }}>{record.name}</p>,\r\n        //     rowExpandable: record => record.name !== 'Not Expandable',\r\n        //   }}\r\n        // bordered={true}\r\n        size='small'\r\n        // pagination={false}\r\n        dataSource={data}\r\n        tableLayout={'auto'}\r\n        onHeaderRow={column => {\r\n          return {\r\n            style: {\r\n              color: 'red !important'\r\n            }\r\n\r\n          };\r\n        }}\r\n      >\r\n        <Column\r\n          title=\"\"\r\n          dataIndex=\"cover\"\r\n          key=\"id\"\r\n          width={'80px'}\r\n\r\n          className='classnameofthecolumn'\r\n\r\n          render={(cover, record: any) => (\r\n            <>\r\n              <img\r\n                onClick={() => {\r\n                  history.push(`/admin/product/${record.id}`)\r\n                  setactiveCategoryForEdit(record)\r\n                }}\r\n                src={cover} alt='cover img' style={{\r\n                  height: '40px',\r\n                  width: '40px',\r\n                  objectFit: \"contain\",\r\n                  borderRadius: '3px',\r\n                  cursor: 'pointer'\r\n                }} />\r\n            </>\r\n          )}\r\n        />\r\n\r\n        <Column\r\n          title=\"Name\"\r\n          dataIndex=\"name\"\r\n          key=\"id\"\r\n          className='classnameofthecolumn'\r\n          render={(text, record: any) => (\r\n            <>\r\n\r\n              <h4\r\n                onClick={() => {\r\n                  history.push(`/admin/product/${record.id}`)\r\n                  setactiveCategoryForEdit(record)\r\n                }}\r\n                style={{\r\n                  fontWeight: 400,\r\n                  color: '#555',\r\n                  cursor: 'pointer'\r\n\r\n                }}>\r\n                {text}\r\n              </h4>\r\n\r\n\r\n            </>\r\n          )}\r\n\r\n        />\r\n\r\n        <Column\r\n          title=\"Offer Price\"\r\n          dataIndex=\"offerPrice\"\r\n          key=\"id\"\r\n          className='classnameofthecolumn'\r\n\r\n        />\r\n\r\n\r\n        <Column\r\n          title=\"Price\"\r\n          dataIndex=\"price\"\r\n          key=\"id\"\r\n          className='classnameofthecolumn'\r\n\r\n        />\r\n\r\n\r\n                      <Column\r\n                                title=\"Available\"\r\n                                dataIndex=\"available\"\r\n                                key=\"id\"\r\n                                className='classnameofthecolumn'\r\n\r\n                            />\r\n\r\n\r\n                            <Column\r\n                                title=\"Minimum\"\r\n                                dataIndex=\"minimum\"\r\n                                key=\"id\"\r\n                                className='classnameofthecolumn'\r\n\r\n                            />\r\n\r\n\r\n\r\n        {/* <Column\r\n          title=\"Unit\"\r\n          dataIndex=\"unit\"\r\n          key=\"id\"\r\n          className='classnameofthecolumn'\r\n\r\n        /> */}\r\n        {/* <Column \r\n          \r\n          className='classnameofthecolumn'\r\n\r\n          title=\"Product\" dataIndex=\"product\" key=\"product\" /> */}\r\n\r\n        {/* <Column \r\n          \r\n          className='classnameofthecolumn'\r\n\r\n          title=\"Sub Category\" dataIndex=\"subCategory\" key=\"subCategory\" /> */}\r\n\r\n        {/* <Column\r\n          title=\"Tags\"\r\n          dataIndex=\"tags\"\r\n          key=\"tags\"\r\n          render={tags => (\r\n            <>\r\n              {tags.map((tag : any) => (\r\n                <Tag color=\"blue\" key={tag}>\r\n                  {tag}\r\n                </Tag>\r\n              ))}\r\n            </>\r\n          )}\r\n        /> */}\r\n        <Column\r\n\r\n          className='classnameofthecolumn'\r\n          title=\"\"\r\n          key=\"action\"\r\n          align='right'\r\n          render={(text, record: any) => (\r\n            <Space size=\"middle\">\r\n              <a href='##'>\r\n                <Tooltip\r\n\r\n                  placement=\"top\" title='Edit Product'>\r\n                  <span className='iconSize' onClick={() => {\r\n                    setvisible(true)\r\n                    setactiveCategoryForEdit(record);\r\n                  }}>\r\n                    <EditOutlined />\r\n\r\n                  </span>\r\n                </Tooltip>\r\n              </a>\r\n\r\n              <Popconfirm\r\n\r\n                onConfirm={() => handleDeleteProduct(record.id)}\r\n                title=\"Are you sure？\" okText=\"Yes\" cancelText=\"No\">\r\n                <span\r\n                  className='iconSize iconSize-danger'\r\n                >\r\n                  <DeleteOutlined />\r\n                </span>\r\n\r\n              </Popconfirm>\r\n\r\n\r\n\r\n\r\n            </Space>\r\n          )}\r\n        />\r\n      </Table>\r\n\r\n\r\n\r\n      {activeCategoryForEdit && <ProductQuickEdit\r\n        productList={data}\r\n        setProductList={setProductList}\r\n        setProductEditVisible={setvisible}\r\n        productEditVisible={visible}\r\n        productDetailData={activeCategoryForEdit} />}\r\n\r\n\r\n\r\n\r\n    </>\r\n  )\r\n}\r\n\r\n\r\ninterface Props {\r\n  history: any;\r\n}\r\n\r\nconst ProductList = ({ history }: Props) => {\r\n\r\n\r\n\r\n  const [productList, setProductList] = useState([]);\r\n\r\n  const [productState, handleProductListFetch] = useHandleFetch({}, 'productList');\r\n\r\n\r\n  useEffect(() => {\r\n    const setProducts = async () => {\r\n      const products = await handleProductListFetch({\r\n        urlOptions:{\r\n          params: {\r\n            sortItem: 'added',\r\n            sortOrderValue: '-1',\r\n            productType: 'product'\r\n          }\r\n        }\r\n      });\r\n      // @ts-ignore\r\n      setProductList(products);\r\n    }\r\n    setProducts();\r\n  }, [])\r\n\r\n\r\n  const [addNewCategoryVisible, setAddNewCategoryVisible] = useState(false);\r\n\r\n\r\n  // console.log('productState', productState)\r\n\r\n\r\n  const handleSearch = (value) => {\r\n    if (productState.data.length > 0) {\r\n      const newProductList = productState.data.filter(item => item.name.toLowerCase().includes(value.toLowerCase()));\r\n      setProductList(newProductList);\r\n    }\r\n\r\n  }\r\n\r\n\r\n  return (\r\n    <>\r\n      {/* <h2 className='containerPageTitle'>\r\n      Categories\r\n    </h2> */}\r\n      <div className='categoryListContainer'>\r\n        <div className='categoryListContainer__header'>\r\n\r\n\r\n          <div className='categoryListContainer__header-searchBar'>\r\n            <h2 className='categoryListContainer__header-title'>\r\n              Products\r\n            </h2>\r\n\r\n\r\n            <Search\r\n              enterButton={false}\r\n              className='searchbarClassName'\r\n              placeholder=\"search products..\"\r\n              onChange={e => handleSearch(e.target.value)}\r\n            // style={{ width: 300 }}\r\n            />\r\n          </div>\r\n\r\n          <Button\r\n            // type=\"primary\"\r\n            className='btnPrimaryClassNameoutline'\r\n            icon={<PlusOutlined />}\r\n            onClick={() => setAddNewCategoryVisible(true)}\r\n          >\r\n            Add New\r\n      </Button>\r\n\r\n\r\n        </div>\r\n\r\n        <div className='categoryListContainer__afterHeader'>\r\n          {/* <Search\r\n      placeholder=\"search categories..\"\r\n      size=\"large\"\r\n      onSearch={value => console.log(value)}\r\n      style={{ width: 300 }}\r\n    /> */}\r\n        </div>\r\n\r\n\r\n        <div className='categoryListContainer__categoryList'>\r\n          {productState.done && productList.length > 0 && <MyTable\r\n            setProductList={setProductList}\r\n            data={productList} />}\r\n          {productState.isLoading && <DataTableSkeleton />}\r\n          {productState.done && !(productList.length > 0) && (\r\n            <div style={{\r\n              marginTop: '200px'\r\n            }}>\r\n              <Empty description='No Products found' image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n\r\n      {productState.done &&\r\n        <AddNewProduct\r\n          addNewCategoryVisible={addNewCategoryVisible}\r\n          setAddNewCategoryVisible={setAddNewCategoryVisible}\r\n          productList={productState.data}\r\n          setProductList={setProductList}\r\n\r\n\r\n        />}\r\n\r\n\r\n\r\n\r\n    </>\r\n  );\r\n};\r\n\r\nexport default withRouter(ProductList);\r\n","import React, { useState, useEffect } from 'react';\r\n\r\n// import hooks \r\nimport { useHandleFetch } from '../../hooks';\r\n\r\n\r\n// import libraries \r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { message, Tooltip, Modal, Tabs, Empty, Badge, Spin } from 'antd';\r\n\r\nimport {\r\n    DeleteOutlined,\r\n    FileAddOutlined,\r\n    CheckCircleOutlined,\r\n    FileImageFilled,\r\n    FileImageOutlined,\r\n    FileImageTwoTone,\r\n    PlusOutlined,\r\n    PlusCircleOutlined,\r\n    CloseOutlined,\r\n    CheckOutlined,\r\n    InfoCircleOutlined,\r\n    EditOutlined\r\n} from '@ant-design/icons';\r\nimport CKEditor from '@ckeditor/ckeditor5-react';\r\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\r\n\r\n\r\n\r\n// import ReactQuill from 'react-quill';\r\n// import 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport MediaLibrary from \"../../components/MediaLibrary\";\r\nimport DatePicker from \"../../components/Field/DatePicker\";\r\nimport { openSuccessNotification, openErrorNotification } from \"../../components/Notification\";\r\nimport Tags from \"./Tags\";\r\nimport Brands from \"./Brands\";\r\nimport Categories from \"./Categories\";\r\nimport Pricing from \"./Pricing\";\r\nimport MetaTags from \"../category/MetaTags\";\r\n\r\n\r\n\r\nconst { TabPane } = Tabs;\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    // name: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\n\r\nconst initialValues = {\r\n    name: '',\r\n\tdescription: '',\r\n\tmodel: '',\r\n\tunit: '',\r\n\tregular: '',\r\n\toffer: '',\r\n\tavailable: '',\r\n\tminimum: '',\r\n\timage: [],\r\n\turl: '',\r\n\tcover: '',\r\n\tpricing: [],\r\n\tvenue: '',\r\n\tdate: '',\r\n\ttime: '',\r\n\tpurchaseLimit: null,\r\n\tbnUnit: '',\r\n\tbnName: '',\r\n\tbnDescription: '',\r\n\tmetaTitle: '',\r\n\tbnMetaTitle: '',\r\n\tmetaDescription: '',\r\n\tbnMetaDescription: '',\r\n\tmetaTags: '',\r\n\tbnMetaTags: '',\r\n}\r\n\r\n\r\ninterface Props {\r\n    productEditVisible?: any;\r\n    setProductEditVisible?: any;\r\n    productDetailData?: any;\r\n    setProductDetailData?:any; \r\n    \r\n}\r\n\r\nconst AddNewProduct = ({ productEditVisible, \r\n    setProductEditVisible, \r\n    productDetailData,\r\n    setProductDetailData\r\n }: Props) => {\r\n\r\n    const [updateProductState, handleUpdateProductFetch] = useHandleFetch({}, 'updateProduct');\r\n    const [productDetailState, handleProductDetailFetch] = useHandleFetch({}, 'productDetailById');\r\n    const [attachImageToItemMultipleState, handleAttachImageToItemMultipleFetch] = useHandleFetch({}, 'attachImageToItemMultiple');\r\n    const [attachImageToItemSingleState, handleAttachImageToItemSingleFetch] = useHandleFetch({}, 'attachImageToItemSingle');\r\n    const [detachImageFromItemMultipleState, handleDetachImageFromItemMultipleFetch] = useHandleFetch({}, 'detachImageFromItemMultiple');\r\n    const [detachImageFromItemSingleState, handleDetachImageFromItemSingleFetch] = useHandleFetch({}, 'detachImageFromItemSingle');\r\n    const [setImageAsThumbnailToItemState, handleSetImageAsThumbnailToItemFetch] = useHandleFetch({}, 'setImageAsThumbnailToItem');\r\n\r\n\r\n\r\n    const [visible, setvisible] = useState(false);\r\n    const [myImages, setmyImages] = useState(false);\r\n    const [myThumbnailImage, setmyThumbnailImage] = useState(false);\r\n    const [isModalOpenForThumbnail, setisModalOpenForThumbnail] = useState(false);\r\n    const [isModalOpenForImages, setisModalOpenForImages] = useState(false);\r\n    const [categoryids, setcategoryIds] = useState([]);\r\n    const [tagIds, setTagIds] = useState([]);\r\n    const [brandId, setBrandId] = useState('');\r\n    const [pricing, setPricing] = useState([]);\r\n    const [coverImageId, setCoverImageId] = useState('');\r\n    const [categoryOptions, setCategoryOptions] = useState([]);\r\n    const [selectedTags, setSelectedTags] = useState([]);\r\n    const [date, setDateFeild] = useState('');\r\n    const [time, setTimeFeild] = useState('');\r\n    const [description, setDescription] = useState('');\r\n\tconst [bnDescription, setBNDescription] = useState('');\r\n\tconst [metaTags,setMetaTags] = useState([]);\r\n\tconst [bnMetaTags,setBnMetaTags] = useState([]);\r\n\tconst [editpricingItem,setEditPricingItem] = useState({}); \r\n\tconst [pricingTagActiveKey,setpricingTagActiveKey] = useState('1');\r\n\tconst [isPricingEditActive, seTisPricingEditActive] = useState(false); \r\n\r\n\r\n\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        const getProductDetail = async () => {\r\n            await handleProductDetailFetch({\r\n                urlOptions: {\r\n                    placeHolders: {\r\n                        id: productDetailData.id\r\n                    }\r\n                }\r\n            })\r\n        };\r\n\r\n        getProductDetail();\r\n\r\n    }, [productDetailData]);\r\n\r\n    useEffect(() => {\r\n\r\n        if (productDetailData && productDetailData.brand) {\r\n            setBrandId(productDetailData.brand['id']);\r\n        }\r\n        else {\r\n            setBrandId('');\r\n        }\r\n        if (productDetailData && productDetailData.tags && productDetailData.tags.length > 0) {\r\n            // const tagIds = productDetailData.tags.map(item => item.id);\r\n            setSelectedTags(productDetailData.tags);\r\n        }\r\n        else {\r\n            setSelectedTags([]);\r\n\r\n        }\r\n        if (productDetailData && productDetailData.category && productDetailData.category.length > 0) {\r\n            const categoryIds = productDetailData.category.map(item => item.id);\r\n            setCategoryOptions(categoryIds);\r\n        }\r\n        else {\r\n            setCategoryOptions([]);\r\n\r\n        }\r\n\r\n        if (productDetailData && productDetailData.pricing && productDetailData.pricing) {\r\n            setPricing(productDetailData.pricing)\r\n        }\r\n        else {\r\n            setPricing([]);\r\n\r\n        }\r\n\r\n\r\n        if (productDetailData && productDetailData.date && productDetailData.date) {\r\n            setDateFeild(productDetailData.date)\r\n        }\r\n        else {\r\n            setDateFeild('');\r\n\r\n        }\r\n\r\n        if (productDetailData && productDetailData.time && productDetailData.time) {\r\n            setTimeFeild(productDetailData.time);\r\n        }\r\n        else {\r\n            setTimeFeild('');\r\n        }\r\n\r\n\r\n        if (productDetailData && productDetailData.description) {\r\n            setDescription(productDetailData.description); \r\n        }\r\n        else {\r\n            setDescription('');\r\n        }\r\n\r\n        if (productDetailData && productDetailData.bn && productDetailData.bn['description']) {\r\n            setBNDescription(productDetailData.bn['description']); \r\n        }\r\n        else {\r\n            setBNDescription('');\r\n        }\r\n\r\n\r\n\r\n\r\n    }, [productDetailData]);\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        if (productDetailState.done && Object.keys(productDetailState).length > 0) {\r\n\r\n            const images = productDetailState.data.image;\r\n            if (images && images.length > 0) {\r\n                setmyImages(images);\r\n            }\r\n\r\n            if (productDetailState.data.cover && productDetailState.data.cover['id']) {\r\n                // @ts-ignore\r\n                setmyImages([productDetailState.data.cover, ...images]);\r\n                console.log('catcat', [productDetailState.data.cover, ...images]);\r\n                setCoverImageId(productDetailState.data.cover['id']);\r\n            }\r\n        }\r\n    }, [productDetailState])\r\n\r\n\r\n    useEffect(() => {\r\n        console.log('thumnail', myImages);\r\n        // @ts-ignore\r\n        if (myImages && myImages[0] && myImages.length < 2) {\r\n            console.log('thumnail2', myImages);\r\n\r\n            if (coverImageId !== myImages[0].id) {\r\n                setCoverImageId(myImages[0].id);\r\n                handleSetImageAsThumnail(myImages[0]);\r\n            }\r\n\r\n        }\r\n\r\n    }, [myImages])\r\n\r\n\r\n    const handleDetachSingleImage = async id => {\r\n        await handleDetachImageFromItemSingleFetch({\r\n            urlOptions: {\r\n                placeHolders: {\r\n                    imageId: id,\r\n                    collection: 'product',\r\n                    itemId: productDetailData.id\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n\r\n\r\n    const handleSetImageAsThumnail = async image => {\r\n\r\n        const thumbnailRes = await handleSetImageAsThumbnailToItemFetch({\r\n            urlOptions: {\r\n                placeHolders: {\r\n                    imageId: image.id,\r\n                    collection: 'product',\r\n                    itemId: productDetailData.id\r\n                }\r\n            }\r\n        });\r\n\r\n        console.log('thumbnailRes', thumbnailRes);\r\n\r\n        // @ts-ignore\r\n        if (thumbnailRes && thumbnailRes.status === 'ok') {\r\n            openSuccessNotification('Set as thumbnail!')\r\n            // const positionInBrand = () => {\r\n            //     return productList.map(item => item.id).indexOf(productDetailData.id);\r\n            // }\r\n\r\n            // const index = positionInBrand();\r\n\r\n            // const prevItem = productList.find(item => item.id === productDetailData.id);\r\n\r\n            // if (prevItem) {\r\n            //     console.log('prevItem--', prevItem, 'image--', image);\r\n            //     const updatedItem = Object.assign({}, productList[index], { ...prevItem, cover: image.cover });\r\n            //     const updateProductList = [...productList.slice(0, index), updatedItem, ...productList.slice(index + 1)];\r\n            //     setProductList(updateProductList);\r\n\r\n            // }\r\n        }\r\n        else {\r\n            openErrorNotification(\"Couldn't set as thumbnail, Something went wrong\")\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n    const makeEmptyCategoryOptions = (setEmpty) => {\r\n        setEmpty([]);\r\n    }\r\n\r\n    const handleSubmit = async (values: any, actions: any) => {\r\n        // @ts-ignore\r\n        const imagesIds = myImages ? myImages.map(image => {\r\n            return image.id;\r\n        }) : [];\r\n\r\n\r\n        \r\n        if (productDetailData && Object.keys(productDetailData).length > 0) {\r\n\t\t\tconst aboutToUpdatedImageIds = []; \r\n\r\n\t\t\tif(imagesIds && imagesIds.length > 0){\r\n\t\t\t\timagesIds.forEach(imageId => {\r\n\t\t\t\t\tif(productDetailData && productDetailData['image']){\r\n\t\t\t\t\t\tif(!productDetailData['image'].includes(imageId)){\r\n\t\t\t\t\t\t\taboutToUpdatedImageIds.push(imageId)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n      \r\n            if (aboutToUpdatedImageIds[0] && aboutToUpdatedImageIds.length > 1) {\r\n                await handleAttachImageToItemMultipleFetch({\r\n                    urlOptions: {\r\n                        placeHolders: {\r\n                            collection: 'product',\r\n                            itemId: productDetailData.id\r\n                        }\r\n                    },\r\n                    body: {\r\n                        image: aboutToUpdatedImageIds\r\n                    }\r\n                });\r\n            }\r\n            else if (aboutToUpdatedImageIds[0] && aboutToUpdatedImageIds.length < 1) {\r\n                await handleAttachImageToItemSingleFetch({\r\n                    urlOptions: {\r\n                        placeHolders: {\r\n                            imageId: aboutToUpdatedImageIds[0].id,\r\n                            collection: 'product',\r\n                            itemId: productDetailData.id\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n        }\r\n\r\n\r\n        const updatedProductRes = await handleUpdateProductFetch({\r\n            urlOptions: {\r\n                placeHolders: {\r\n                    id: productDetailData.id\r\n                }\r\n            },\r\n            body: {\r\n                name: values.name.trim(),\r\n                description: description,\r\n                model: values.model,\r\n                unit: values.unit,\r\n                category: categoryOptions,\r\n                tags: tagIds,\r\n                brand: brandId,\r\n                image: imagesIds,\r\n                cover: coverImageId || imagesIds[0] ? imagesIds[0] : '',\r\n                pricing: pricing,\r\n                metaTitle: values.metaTitle,\r\n\t\t\t\tmetaDescription: values.metaDescription,\r\n\t\t\t\tmetaTags: metaTags.join(','),\r\n\t\t\t\tbn: {\r\n\t\t\t\t\tmetaTitle: values.bnMetaTitle,\r\n\t\t\t\t\tmetaDescription: values.bnMetaDescription,\r\n\t\t\t\t\tmetaTags: bnMetaTags.join(','),\r\n\t\t\t\t\tname: values.bnName.trim(),\r\n\t\t\t\t\tunit: values.metaUnit,\r\n\t\t\t\t\tdescription: bnDescription,\r\n\t\t\t\t}\r\n            },\r\n        });\r\n\r\n\r\n        // @ts-ignore\r\n        if (updatedProductRes && updatedProductRes.status === 'ok') {\r\n            openSuccessNotification('Product Updated');\r\n            setProductEditVisible(false);\r\n            setProductDetailData({\r\n                // @ts-ignore\r\n                ...updatedProductRes,\r\n                category: productDetailData.category,\r\n                brand: productDetailData.brand,\r\n                tags: productDetailData.tags,\r\n                cover: productDetailData.cover,\r\n                image: productDetailData.image,\r\n            }); \r\n\r\n\r\n            console.log('updatedProductRes', updatedProductRes);\r\n            // setProductList([...productList, {\r\n            //     id: updatedProductRes['id'] || '',\r\n            //     key: updatedProductRes['id'] || '',\r\n            //     name: updatedProductRes['name'] || '',\r\n            //     description: updatedProductRes['description'] || '',\r\n            //     // @ts-ignore\r\n            //     ...updatedProductRes\r\n            // }])\r\n            // @ts-ignore\r\n            setmyImages([]);\r\n            setCoverImageId('');\r\n            setPricing([]);\r\n            setTagIds([]);\r\n            setSelectedTags([]);\r\n            setBrandId(\"\");\r\n            setcategoryIds([]);\r\n            setCategoryOptions([]);\r\n            actions.resetForm();\r\n        }\r\n        else {\r\n            // openErrorNotification();\r\n        }\r\n\r\n        actions.setSubmitting(false);\r\n\r\n\r\n    };\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        if (!updateProductState['isLoading']) {\r\n            const error = updateProductState['error'];\r\n            if (error['isError'] && Object.keys(error['error']).length > 0) {\r\n\r\n\r\n                const errors =\r\n                    Object.values(error['error']).length > 0\r\n                        ? Object.values(error['error'])\r\n                        : [];\r\n                errors.forEach((err, i) => {\r\n                    if (typeof err === 'string') {\r\n                        openErrorNotification(err)\r\n                    }\r\n                    else if (typeof err === 'object') {\r\n                        if (err && Object.keys(err).length > 0) {\r\n                            const errs = Object.values(err);\r\n                            errs.forEach(err => {\r\n                                openErrorNotification(err)\r\n                            })\r\n\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n        }\r\n    }, [updateProductState])\r\n\r\n\r\n    const handleCancel = (e: any) => {\r\n        setProductEditVisible(false);\r\n    };\r\n\r\n\r\n    const getisSubmitButtonDisabled = (values, isValid) => {\r\n        if (!values.name || !(pricing.length > 0) || !(categoryOptions.length > 0) || !isValid) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n\r\n    const handleImagesDelete = (id) => {\r\n        // @ts-ignore\r\n        const newImages = myImages && myImages.filter(image => {\r\n            return image.id !== id;\r\n        })\r\n\r\n        setmyImages(newImages);\r\n    }\r\n\r\n    const handleDeleteFromSelectedImage = () => {\r\n\r\n    };\r\n\r\n    const handleThumbnailImageDelete = (id) => {\r\n        // @ts-ignore\r\n        const newImages = myThumbnailImage && myThumbnailImage.filter(image => {\r\n            return image.id !== id;\r\n        })\r\n\r\n        if (newImages.length > 0) {\r\n            setmyThumbnailImage(newImages);\r\n\r\n        }\r\n        else setmyThumbnailImage(false);\r\n    }\r\n\r\n\r\n\r\n\r\n    const handleUpdatePricing = (priceItem) => {\r\n\r\n\t\tconst positionInPricing = () => {\r\n\t\t\treturn pricing.map(item => item.id).indexOf(priceItem.id);\r\n\t\t  }\r\n\r\n\t\t  const index = positionInPricing();\r\n\r\n\t\t  // @ts-ignore\r\n\t\t  const updatedItem = Object.assign({}, pricing[index], { ...priceItem });\r\n\t\t  const updatePricingList = [...pricing.slice(0, index), updatedItem, ...pricing.slice(index + 1)];\r\n\t\t\t \r\n\t\t  setPricing(updatePricingList); \r\n\r\n\t\tmessage.info('Product Pricing Updated');\r\n\t\tseTisPricingEditActive(true);\r\n\t\tsetpricingTagActiveKey('2'); \r\n\t}\r\n\r\n\r\n\tconst handleEditPricing = (id)=> {\r\n\t\tseTisPricingEditActive(true);\r\n\t\tconst pricingItem = pricing.find(item => item.id === id);\r\n\t\tif(pricingItem){\r\n\t\t\tsetEditPricingItem(pricingItem);\r\n\t\t}\r\n\t}\r\n\r\n\r\n    const handleAddPricing = (priceItem) => {\r\n\r\n        setPricing([{\r\n            ...priceItem,\r\n            id: pricing.length\r\n        }, ...pricing])\r\n        message.info('Product Pricing Added');\r\n    }\r\n\r\n\r\n    const handleDeletePricing = (id) => {\r\n        const newPricing = pricing.filter(item => item.id !== id);\r\n        setPricing(newPricing);\r\n        message.info('Product Pricing Deleted');\r\n    }\r\n\r\n\r\n\r\n    const isCategoryInValid = () => {\r\n        if (updateProductState.error['error']['category'] && !categoryids && categoryids.length) {\r\n            return true;\r\n        }\r\n        else if (categoryids && categoryids.length > 0) {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    const handleDateChange = (date, dateString) => {\r\n        setDateFeild(dateString);\r\n        // console.log('date', date, dateString);\r\n    }\r\n\r\n    const handleTimeChange = (date, dateString) => {\r\n        setTimeFeild(dateString);\r\n        // console.log('date', date, dateString);\r\n    }\r\n\r\n\r\n    console.log('productDetailData', productDetailData);\r\n    console.log('productDetailState', productDetailState);\r\n\r\n\r\n    useEffect(()=>{\r\n\r\n        if(productDetailState.data && Object.keys(productDetailState.data).length > 0){\r\n            const metaTags = productDetailState.data.metaTags.split(','); \r\n\r\n            console.log('localMetaTags',metaTags);\r\n           \r\n            const bnMetaTags = productDetailState.data.bn['metaTags'].split(','); \r\n            setMetaTags(metaTags)\r\n            setBnMetaTags(bnMetaTags)\r\n        }\r\n\r\n    },[productDetailState['done']])\r\n\r\n    \r\n\r\n    console.log('productDetailData')\r\n\r\n    return (\r\n        <Formik\r\n            onSubmit={(values, actions) => handleSubmit(values, actions)}\r\n            validationSchema={validationSchema}\r\n            validateOnBlur={false}\r\n            enableReinitialize={true}\r\n            initialValues={\r\n                { ...initialValues,\r\n                    ...{\r\n                    ...productDetailData,\r\n                    ...( productDetailState['data'] && Object.keys(productDetailState['data']).length > 0 && productDetailState['data']['bn'] && {\r\n                        bnMetaTitle: productDetailState['data']['bn'].metaTitle,\r\n                        bnMetaDescription: productDetailState['data']['bn'].metaDescription,\r\n                        bnName: productDetailState['data']['bn'].name,\r\n                        metaUnit: productDetailState['data']['bn'].unit,\r\n                        bnDescription: productDetailState['data']['bn'].description,\r\n                      }),\r\n                } }\r\n            }\r\n        >\r\n            {({\r\n                handleChange,\r\n                values,\r\n                handleSubmit,\r\n                errors,\r\n                isValid,\r\n                isSubmitting,\r\n                touched,\r\n                handleBlur,\r\n                setFieldTouched,\r\n                handleReset,\r\n            }) => (\r\n                    <>\r\n                        <Modal\r\n                            style={{\r\n                                top: '40px',\r\n\r\n                            }}\r\n                            bodyStyle={{\r\n                                margin: 0,\r\n                                padding: 0,\r\n                            }}\r\n                            width={'70vw'}\r\n                            title=\"Product Edit\"\r\n                            visible={productEditVisible}\r\n                            onOk={(e: any) => handleSubmit(e)}\r\n                            onCancel={handleCancel}\r\n                            destroyOnClose={true}\r\n                            okText='Update'\r\n                            okButtonProps={{\r\n\t\t\t\t\t\t\t\tloading: isSubmitting,\r\n\t\t\t\t\t\t\t\thtmlType: \"submit\",\r\n\t\t\t\t\t\t\t}}\r\n                        >\r\n                            <section className='addProductGridContainer'>\r\n                                <div className='addProductGridContainer__left'>\r\n                                    <div className='addProductGridContainer__name'>\r\n                                        <div className='addProductGridContainer__item-header'>\r\n                                            <h3>\r\n                                                Product Information\r\n\t\t                                \t</h3>\r\n                                            <div className={values.name && values.name.length > 2 ? 'checkicon-active' : 'checkicon'}>\r\n                                                <CheckCircleOutlined />\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className='addProductGridContainer__item-body'>\r\n                                        <Input\r\n\t\t\t\t\t\t\t\t\t\t\t\tlabel='Name'\r\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.name}\r\n\t\t\t\t\t\t\t\t\t\t\t\tplaceHolder={'Rafty ox'}\r\n\t\t\t\t\t\t\t\t\t\t\t\tname='name'\r\n\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateProductState.error['error']['name'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateProductState.error['error']['name'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('name');\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\tlabel='BN Name'\r\n\t\t\t\t\t\t\t\t\t\t\tvalue={values.bnName}\r\n\t\t\t\t\t\t\t\t\t\t\tplaceHolder={'রাফতি অক্স'}\r\n\t\t\t\t\t\t\t\t\t\t\tname='bnName'\r\n\t\t\t\t\t\t\t\t\t\t\tisError={(touched.bnName && errors.bnName) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateProductState.error['error']['bnName'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.bnName && errors.bnName) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateProductState.error['error']['bnName'])}\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('bnName');\r\n\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t{/* <div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\tdisplay: 'flex',\r\n\t\t\t\t\t\t\t\t\t\t\t\tjustifyContent: 'space-between'\r\n\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\twidth: '48%',\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<DatePicker\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabel='Date'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={handleDateChange} />\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\twidth: '48%'\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<DatePicker\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tdate={date}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\twithTime={true}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder='Select time'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabel='Time'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={handleTimeChange} />\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t</div> */}\r\n\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t{/* \r\n\t\t\t\t\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\t\t\t\t\trows={1}\r\n\t\t\t\t\t\t\t\t\t\t\t\tlabel='Venue'\r\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.venue}\r\n\t\t\t\t\t\t\t\t\t\t\t\tname='venue'\r\n\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.venue && errors.venue) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateProductState.error['error']['venue'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.venue && errors.venue) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateProductState.error['error']['venue'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('venue');\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\t\tlabel='Purchase Limit'\r\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.purchaseLimit}\r\n\t\t\t\t\t\t\t\t\t\t\t\ttype='number'\r\n\t\t\t\t\t\t\t\t\t\t\t\tname='purchaseLimit'\r\n\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.purchaseLimit && errors.purchaseLimit) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateProductState.error['error']['purchaseLimit'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.purchaseLimit && errors.purchaseLimit) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateProductState.error['error']['purchaseLimit'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('purchaseLimit');\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t/> */}\r\n\r\n\r\n\t\t\t\t\t\t\t\t\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\t\tlabel='Unit'\r\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.unit}\r\n\t\t\t\t\t\t\t\t\t\t\t\tname='unit'\r\n\t\t\t\t\t\t\t\t\t\t    \tplaceHolder={'KG,POUND,GM'}\r\n\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.unit && errors.unit) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateProductState.error['error']['unit'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.unit && errors.unit) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateProductState.error['error']['unit'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('unit');\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\tlabel='BN Unit'\r\n\t\t\t\t\t\t\t\t\t\t\tvalue={values.bnUnit}\r\n\t\t\t\t\t\t\t\t\t\t\tplaceHolder={'কেজি,গ্রাম'}\r\n\t\t\t\t\t\t\t\t\t\t\tname='bnUnit'\r\n\t\t\t\t\t\t\t\t\t\t\tisError={(touched.bnUnit && errors.bnUnit) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateProductState.error['error']['bnUnit'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.bnUnit && errors.bnUnit) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateProductState.error['error']['bnUnit'])}\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('bnUnit');\r\n\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\t\tlabel='Model Number'\r\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.model}\r\n\t\t\t\t\t\t\t\t\t\t\t\tname='model'\r\n\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.model && errors.model) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateProductState.error['error']['model'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.model && errors.model) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateProductState.error['error']['model'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('model');\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\r\n\r\n                                            <h3 className='inputFieldLabel'>\r\n                                                Description\r\n                                            </h3>\r\n\r\n                                            <div style={{\r\n                                                width: '100%',\r\n                                                maxWidth: '100%'\r\n                                            }}>\r\n                                                <CKEditor\r\n                                                    editor={ClassicEditor}\r\n                                                    data={description}\r\n                                                    onInit={editor => {\r\n                                                        // You can store the \"editor\" and use when it is needed.\r\n                                                        console.log('Editor is ready to use!', editor);\r\n                                                    }}\r\n                                                    onChange={(event, editor) => {\r\n                                                        const data = editor.getData();\r\n                                                        setDescription(data);\r\n                                                    }}\r\n                                                    onBlur={(event, editor) => {\r\n                                                        console.log('Blur.', editor);\r\n                                                    }}\r\n                                                    onFocus={(event, editor) => {\r\n                                                        console.log('Focus.', editor);\r\n                                                    }}\r\n                                                />\r\n                                            </div>\r\n\r\n                                                <div style={{\r\n                                                    marginTop:'15px'\r\n                                                }}></div>\r\n\r\n                                            <h3 className='inputFieldLabel'>\r\n                                               BN Description\r\n                                            </h3>\r\n\r\n                                            <div style={{\r\n                                                width: '100%',\r\n                                                maxWidth: '100%'\r\n                                            }}>\r\n                                                <CKEditor\r\n                                                    editor={ClassicEditor}\r\n                                                    data={bnDescription}\r\n                                                    onInit={editor => {\r\n                                                        // You can store the \"editor\" and use when it is needed.\r\n                                                        console.log('Editor is ready to use!', editor);\r\n                                                    }}\r\n                                                    onChange={(event, editor) => {\r\n                                                        const data = editor.getData();\r\n                                                        setBNDescription(data);\r\n                                                    }}\r\n                                                    onBlur={(event, editor) => {\r\n                                                        console.log('Blur.', editor);\r\n                                                    }}\r\n                                                    onFocus={(event, editor) => {\r\n                                                        console.log('Focus.', editor);\r\n                                                    }}\r\n                                                />\r\n                                            </div>\r\n\r\n                                            <div style={{\r\n                                                marginTop:\"15px\"\r\n                                            }}> </div>\r\n\r\n                                        </div>\r\n\r\n                                    </div>\r\n\r\n                                \r\n                                    <div className='addProductGridContainer__price'>\r\n\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__item-header'>\r\n\t\t\t\t\t\t\t\t\t\t\t<h3>\r\n\t\t\t\t\t\t\t\t\t\t\t\tProduct Pricing *\r\n\t\t\t</h3>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<div className={pricing && pricing.length > 0 ? 'checkicon-active' : 'checkicon'}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<CheckCircleOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__item-body'>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<Tabs\r\n\t\t\t\t\t\t\t\t\t\t\t\tanimated={true}\r\n\t\t\t\t\t\t\t\t\t\t\t\ttabPosition=\"top\"\r\n\t\t\t\t\t\t\t\t\t\t\t\ttype='card'\r\n\t\t\t\t\t\t\t\t\t\t\t\tactiveKey={pricingTagActiveKey}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={(value) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetpricingTagActiveKey(`${value}`);\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t<TabPane tab=\"Add Variation\" key=\"1\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Pricing \r\n\t\t\t\t\t\t\t\t\t\t\t\t\thandleAddPricing={handleAddPricing}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tpricingItem={editpricingItem}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\thandleUpdatePricing={handleUpdatePricing}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tisPricingEditActive={isPricingEditActive}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t />\r\n\t\t\t\t\t\t\t\t\t\t\t\t</TabPane>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<TabPane\r\n\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t tab=\"Pricing List\" key=\"2\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__item-body-pricingContainer'>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{pricing.length > 0 && pricing.map(item => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__item-body-pricingContainer-item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__item-body-pricingContainer-item-edit'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* <span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<EditOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</span> */}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className='pricingEditIcon' onClick={() => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleEditPricing(item.id); \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetpricingTagActiveKey('1');\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<EditOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className='pricingDeleteIcon' onClick={() => handleDeletePricing(item.id)}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<DeleteOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__item-body-pricingContainer-item-two'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<h3>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tPrice\r\n\t\t\t\t\t\t</h3>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__item-body-pricingContainer-item-body'>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{item.price.offer ? (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<h4 >\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{item.price.offer}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</h4>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<h5 style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttextDecoration: \"line-through\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{item.price.regular}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</h5>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<h4>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{item.price.regular}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</h4>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{item.stock && item.stock['available'] && (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Badge\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\toverflowCount={999}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcount={item.stock.available}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<h3>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tStock\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</h3>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Badge>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{item.stock['minimum'] && (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__item-body-pricingContainer-item-body'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<h6>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmin\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Badge\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"site-badge-count-4\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\toverflowCount={999}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcount={item.stock.minimum} />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</h6>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{item.attribute\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&& Object.values(item.attribute).length > 0 && (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<h3>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tAttributes\r\n\t\t\t\t\t\t</h3>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__item-body-pricingContainer-item-body'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{item.attribute\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&& Object.keys(item.attribute).length > 0\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&& Object.keys(item.attribute).map(attributeItem => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<h6>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{attributeItem}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</h6>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<h4>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{item.attribute[attributeItem]}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</h4>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t})}\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{!(pricing.length > 0) && <div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\twidth: '100%',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdisplay: 'flex',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tjustifyContent: 'center'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Empty description='No Pricing added' image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</TabPane>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t</Tabs>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__item-body-container'>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\r\n                                    <div className='addProductGridContainer__image'>\r\n\r\n                                        <div className='addProductGridContainer__item-header'>\r\n                                            <h3>\r\n                                                Image\r\n\t\t\t</h3>\r\n\r\n                                            <Tooltip\r\n                                                placement=\"left\" title={'Click on the image to select cover image, By default 1st image is selected as cover'}>\r\n                                                <a href='###'>\r\n                                                    <InfoCircleOutlined />\r\n                                                </a>\r\n                                            </Tooltip>\r\n                                        </div>\r\n\r\n                                        <div\r\n                                            style={{\r\n                                                padding: \"10px\"\r\n                                            }}\r\n                                            className='aboutToUploadImagesContainer'>\r\n                                            {productDetailState.isLoading && (\r\n                                                <div style={{\r\n                                                    padding: '20px 0'\r\n                                                }}>\r\n                                                    <Spin />\r\n                                                </div>\r\n                                            )}\r\n                                            {productDetailState.done && (\r\n                                                <>\r\n                                                    {myImages &&\r\n                                                        // @ts-ignore\r\n                                                        myImages.length > 0 && myImages.map((image, index) => {\r\n                                                            return (\r\n                                                                <div className='aboutToUploadImagesContainer__item'>\r\n                                                                    <div\r\n                                                                        className='aboutToUploadImagesContainer__item-imgContainer'\r\n                                                                        onClick={() => {\r\n                                                                            setCoverImageId(image.id);\r\n                                                                            handleSetImageAsThumnail(image);\r\n                                                                        }}\r\n                                                                    >\r\n                                                                        <img src={image.cover} alt={image.alt} />\r\n                                                                    </div>\r\n\r\n                                                                    <span\r\n                                                                        onClick={() => {\r\n                                                                            handleImagesDelete(image.id)\r\n                                                                            handleDetachSingleImage(image.id)\r\n                                                                        }\r\n\r\n                                                                        }\r\n                                                                        className='aboutToUploadImagesContainer__item-remove'>\r\n                                                                        <CloseOutlined />\r\n                                                                    </span>\r\n\r\n\r\n                                                                    {coverImageId === image.id ? (\r\n                                                                        <span className='aboutToUploadImagesContainer__item-cover'>\r\n                                                                            <CheckOutlined />\r\n                                                                        </span>\r\n                                                                    ) : !coverImageId && index === 0 && (\r\n                                                                        <span className='aboutToUploadImagesContainer__item-cover'>\r\n                                                                            <CheckOutlined />\r\n                                                                        </span>\r\n                                                                    )}\r\n\r\n\r\n                                                                </div>\r\n                                                            )\r\n                                                        })}\r\n\r\n\r\n                                                    <Tooltip\r\n                                                        title={'Attach images'}>\r\n\r\n                                                        <div\r\n                                                            onClick={() => {\r\n                                                                setvisible(true);\r\n                                                                setisModalOpenForImages(true);\r\n                                                                setisModalOpenForThumbnail(false);\r\n                                                            }}\r\n                                                            className='aboutToUploadImagesContainer__uploadItem'>\r\n                                                            {/* <FileAddOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FileImageTwoTone />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FileImageOutlined /> */}\r\n                                                            <FileImageFilled />\r\n                                                            {/* <h5>\r\n\t\t\t\t\t\t\t\t\t\t\t\t     Select From Library\r\n\t\t\t\t\t\t\t\t\t\t\t<     /h5> */}\r\n                                                            <span className='aboutToUploadImagesContainer__uploadItem-plus'>\r\n                                                                <PlusOutlined />\r\n                                                            </span>\r\n                                                        </div>\r\n                                                    </Tooltip>\r\n                                                </>\r\n                                            )}\r\n\r\n                                        </div>\r\n                                    </div>\r\n\r\n\r\n\r\n\r\n                                    \r\n\r\n\r\n\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__image'>\r\n\r\n                                        <div className='addProductGridContainer__item-header'>\r\n                                            <h3>\r\n                                            Meta Data\r\n                                        </h3>\r\n\r\n                                            <Tooltip\r\n                                                placement=\"left\" title={\"Meta data will be used to make the user's easy and for search engine optimization.\"}>\r\n                                                <a href='###'>\r\n                                                    <InfoCircleOutlined />\r\n                                                </a>\r\n                                            </Tooltip>\r\n                                        </div>\r\n                                        <div className='addProductGridContainer__item-body'>\r\n\r\n                                                        \r\n                                        <Input\r\n                                        label='Meta title'\r\n                                        value={values.metaTitle}\r\n                                        placeHolder={'category...'}\r\n                                        name='metaTitle'\r\n                                        isError={(touched.metaTitle && errors.metaTitle) ||\r\n                                        (!isSubmitting && updateProductState.error['error']['metaTitle'])}\r\n\r\n                                        errorString={(touched.metaTitle && errors.metaTitle) ||\r\n                                        (!isSubmitting && updateProductState.error['error']['metaTitle'])}\r\n                                        onChange={(e: any) => {\r\n                                        handleChange(e);\r\n                                        setFieldTouched('metaTitle')\r\n                                        }}\r\n                                        />\r\n\r\n                                        <Input\r\n                                        label='BN Meta title'\r\n                                        value={values.bnMetaTitle}\r\n                                        placeHolder={'ক্যাটাগড়ি...'}\r\n                                        name='bnMetaTitle'\r\n                                        isError={(touched.bnMetaTitle && errors.bnMetaTitle) ||\r\n                                        (!isSubmitting && updateProductState.error['error']['bnMetaTitle'])}\r\n\r\n                                        errorString={(touched.bnMetaTitle && errors.bnMetaTitle) ||\r\n                                        (!isSubmitting && updateProductState.error['error']['bnMetaTitle'])}\r\n                                        onChange={(e: any) => {\r\n                                        handleChange(e);\r\n                                        setFieldTouched('bnMetaTitle');\r\n                                        }}\r\n                                        />\r\n\r\n                                        <TextArea\r\n                                        label='Meta description'\r\n                                        value={values.metaDescription}\r\n                                        placeholder={'meta...'}\r\n                                        name='metaDescription'\r\n                                        isError={(touched.metaDescription && errors.metaDescription) ||\r\n                                        (!isSubmitting && updateProductState.error['error']['metaDescription'])}\r\n\r\n                                        errorString={(touched.metaDescription && errors.metaDescription) ||\r\n                                        (!isSubmitting && updateProductState.error['error']['metaDescription'])}\r\n                                        onChange={(e: any) => {\r\n                                        handleChange(e);\r\n                                        setFieldTouched('metaDescription');\r\n                                        }}\r\n                                        />\r\n\r\n                                        <TextArea\r\n                                        label='BN Meta Description'\r\n                                        value={values.bnMetaDescription}\r\n                                        placeholder={'এইয় মেট...'}\r\n                                        name='bnMetaDescription'\r\n                                        isError={(touched.bnMetaDescription && errors.bnMetaDescription) ||\r\n                                        (!isSubmitting && updateProductState.error['error']['bnMetaDescription'])}\r\n\r\n                                        errorString={(touched.bnMetaDescription && errors.bnMetaDescription) ||\r\n                                        (!isSubmitting && updateProductState.error['error']['bnMetaDescription'])}\r\n                                        onChange={(e: any) => {\r\n                                        handleChange(e);\r\n                                        setFieldTouched('bnMetaDescription');\r\n                                        }}\r\n                                        />\r\n\r\n                                        <h3 className='inputFieldLabel'>\r\n                                        Meta Tags (grocery,fashion)\r\n                                        </h3>\r\n\r\n                                        <MetaTags\r\n                                        // @ts-ignore\r\n                                        setTags={setMetaTags}\r\n                                        tags={metaTags}\r\n                                        />\r\n\r\n                                        <div style={{\r\n                                        marginTop:'15px'\r\n                                        }}></div>\r\n\r\n                                        <h3 className='inputFieldLabel'>\r\n                                        BN Meta Tags (মুদিখানা,ফ্যাশন)\r\n                                        </h3>\r\n\r\n                                        <MetaTags\r\n                                        // @ts-ignore\r\n                                        setTags={setBnMetaTags}\r\n                                        tags={bnMetaTags}\r\n                                        />\r\n                                        </div>\r\n                                        </div>\r\n\r\n\r\n                                </div>\r\n                                <div className='addProductGridContainer__right'>\r\n                                    <div className='addProductGridContainer__category'>\r\n\r\n                                        <div className='addProductGridContainer-rightItemContainer'>\r\n                                            <div className='addProductGridContainer-rightItemContainer-header'>\r\n                                                <h3>\r\n                                                    Categories\r\n\t\t\t\t</h3>\r\n\r\n                                                <Tooltip\r\n                                                    color='red'\r\n                                                    visible={updateProductState.error['error']['category'] && !(categoryids.length > 0)}\r\n                                                    placement=\"left\" title={'Select at least one category'}>\r\n                                                    <div className={!(categoryids.length > 0)\r\n                                                        && !updateProductState.error['error']['category'] ? 'checkicon' : updateProductState.error['error']['category'] ? 'checkicon-error' : 'checkicon-active'}>\r\n                                                        <CheckCircleOutlined />\r\n                                                    </div>\r\n                                                </Tooltip>\r\n\r\n                                            </div>\r\n                                            <div className='addProductGridContainer-rightItemContainer-body'>\r\n                                                <Categories\r\n                                                    setCategoryOptions={setCategoryOptions}\r\n                                                    categoryOptions={categoryOptions}\r\n                                                    setcategoryIds={setcategoryIds} />\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                    </div>\r\n\r\n                                    <div className='addProductGridContainer__tag'>\r\n                                        <div className='addProductGridContainer-rightItemContainer'>\r\n                                            <div className='addProductGridContainer-rightItemContainer-header'>\r\n                                                <h3>\r\n                                                    Tags\r\n\t\t\t\t</h3>\r\n                                            </div>\r\n                                            <div className='addProductGridContainer-rightItemContainer-body'>\r\n                                                <Tags\r\n                                                    setSelectedTags={setSelectedTags}\r\n                                                    selectedTags={selectedTags}\r\n                                                    setTagIds={setTagIds} />\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                    </div>\r\n                                    <div className='addProductGridContainer__brand'>\r\n                                        <div className='addProductGridContainer-rightItemContainer'>\r\n                                            <div className='addProductGridContainer-rightItemContainer-header'>\r\n                                                <h3>\r\n                                                    Brand\r\n\t\t\t\t</h3>\r\n                                            </div>\r\n                                            <div className='addProductGridContainer-rightItemContainer-body'>\r\n                                                <Brands\r\n                                                    productDetailState={productDetailState}\r\n                                                    brandId={brandId}\r\n                                                    setBrandId={setBrandId} />\r\n                                            </div>\r\n                                        </div>\r\n\r\n\r\n                                    </div>\r\n\r\n                                </div>\r\n                            </section>\r\n\r\n\r\n                        </Modal>\r\n\r\n                        <MediaLibrary\r\n                            setvisible={setvisible}\r\n                            visible={visible}\r\n                            setmyImages={setmyImages}\r\n                            myImages={myImages}\r\n                            setmyThumbnailImage={setmyThumbnailImage}\r\n                            isModalOpenForThumbnail={isModalOpenForThumbnail}\r\n                            isModalOpenForImages={isModalOpenForImages}\r\n\r\n                        />\r\n                    </>\r\n                )}\r\n        </Formik>\r\n\r\n\r\n\r\n\r\n    );\r\n};\r\n\r\nexport default AddNewProduct;\r\n\r\n\r\n\r\n\r\n/*\r\n\r\n\r\nProduct variation ---->\r\n\r\nPrice [title]\r\n\t[regular input field] [offer inputfield]\r\n\r\nStock [title]\r\n\t[available input field] [minimum inputfield]\r\n\r\ndefault [default can be set to true]\r\n\r\nattributes [title]\r\n\t[add attributes name]\r\n\t\t[add attrubutes value]\r\n\r\n\t[add attributes name]\r\n\t\t[add attrubutes value\r\n\r\n*///","import React, { useEffect, useState } from 'react';\r\nimport { useParams, useHistory } from \"react-router\";\r\n\r\n\r\n// import hooks\r\nimport { useHandleFetch } from \"../../hooks\";\r\n\r\n// import lib\r\nimport {\r\n    EditOutlined,\r\n    DeleteOutlined\r\n} from '@ant-design/icons';\r\n\r\nimport { Skeleton, Empty, Button, notification, Table, Space, Input as CoolInput, Tooltip, Modal, Badge } from 'antd';\r\n\r\n\r\n\r\n// import components\r\nimport { DataTableSkeleton } from \"../../components/Placeholders\";\r\nimport ProductEdit from \"./ProductEdit\";\r\n\r\n\r\nconst { Column, ColumnGroup } = Table;\r\nconst { Search } = CoolInput;\r\n\r\n\r\ninterface Props {\r\n    productRecord?: any;\r\n}\r\n\r\nconst NewBrandDetail = (props: Props) => {\r\n    const [productDetailState, handleProductDetailFetch] = useHandleFetch({}, 'productDetailById');\r\n\r\n    const params = useParams();\r\n    const history = useHistory();\r\n    const productId = params['id'];\r\n    const [productEditVisible, setProductEditVisible] = useState(false);\r\n    const [productDetailData,setProductDetailData] = useState({}); \r\n\r\n\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        const getProductDetail = async () => {\r\n            const productDetailRes = await handleProductDetailFetch({\r\n                urlOptions: {\r\n                    placeHolders: {\r\n                        id: productId\r\n                    }\r\n                }\r\n            }); \r\n\r\n            // @ts-ignore\r\n            if(productDetailRes){\r\n                // @ts-ignore\r\n                setProductDetailData(productDetailRes); \r\n            };\r\n\r\n            console.log('productDetailRes',productDetailRes);\r\n        };\r\n\r\n        getProductDetail();\r\n\r\n    }, [productId]);\r\n\r\n\r\n\r\n\r\n    console.log('productDetailState', productDetailState);\r\n\r\n    console.log('brandParams', params);\r\n\r\n    const getImagesInCollumn = (imgs) => {\r\n        if (!imgs[0]) return false;\r\n        imgs = imgs.map(item => item.cover);\r\n        const columns = {};\r\n\r\n        let localIndex = 0;\r\n        let columnNumber = 0;\r\n\r\n\r\n        imgs.forEach((item, index) => {\r\n            if (localIndex < 3) {\r\n                if (columns[columnNumber]) {\r\n                    columns[columnNumber] = [...columns[columnNumber], item]\r\n                }\r\n                else columns[columnNumber] = [item];\r\n\r\n                localIndex = localIndex + 1;\r\n                columnNumber = columnNumber + 1;\r\n\r\n            }\r\n            else {\r\n                localIndex = 0;\r\n                columnNumber = 0;\r\n                console.log('localIndex', localIndex)\r\n            }\r\n        });\r\n\r\n        return columns;\r\n    }\r\n\r\n\r\n    const row = productDetailState.done && productDetailData && productDetailData['image'] ? getImagesInCollumn(productDetailData['image']) : [];\r\n\r\n    return (\r\n        <div className='brandDetailContainer'>\r\n\r\n            <div className='brandDetailContainer__heading'>\r\n                <h3>\r\n                    Product Detail\r\n                </h3>\r\n\r\n                {productDetailState.done && productDetailData && (Object.keys(productDetailData).length > 0) && (\r\n                    <>\r\n                        <ProductEdit\r\n                            productEditVisible={productEditVisible}\r\n                            setProductEditVisible={setProductEditVisible}\r\n                            productDetailData={productDetailData}\r\n                            setProductDetailData={setProductDetailData}\r\n                        />\r\n                        <Button\r\n                            onClick={() => setProductEditVisible(true)}\r\n                            type='link'\r\n                            icon={<EditOutlined />}\r\n                        >\r\n                            Edit\r\n                      </Button>\r\n                    </>\r\n                )}\r\n\r\n            </div>\r\n            <Skeleton\r\n                avatar paragraph={{ rows: 3 }}\r\n                loading={productDetailState.isLoading}>\r\n                {productDetailState.done && productDetailData && !(Object.keys(productDetailData).length > 0) && (\r\n                    <Empty description='No Product found' image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n                )}\r\n\r\n                {productDetailState.done && productDetailData && (Object.keys(productDetailData).length > 0) && (\r\n                    <>\r\n                        <div className='brandDetailContainer__header'>\r\n                            <div className='brandDetailContainer__header-coverContainer brandDetailContainer__header-coverContainer-product'>\r\n                                <img src={productDetailData['cover'] && productDetailData['cover']['cover']} alt=\"\" />\r\n                            </div>\r\n                            <div className='brandDetailContainer__header-info'>\r\n                                <h2>\r\n                                    {productDetailData['name']}\r\n                                </h2>\r\n                                <h4>\r\n                                    {productDetailData['price']}\r\n                                </h4>\r\n                                <h3>\r\n                                    {productDetailData['description']}\r\n                                </h3>\r\n\r\n                                {productDetailData['url'] && (\r\n                                    <h3>\r\n                                        URL:\r\n                                        <span>\r\n                                            {productDetailData['url']}\r\n                                        </span>\r\n\r\n                                    </h3>\r\n                                )}\r\n\r\n                                \r\n                                {/* \r\n                                {productDetailData['tags'] && productDetailData['tags'].length > 0 &&\r\n                                    (<>\r\n                                        <h3>\r\n                                            TAGS:\r\n                                        {productDetailData['tags'].map(tag => {\r\n                                            return (\r\n                                                <span>\r\n                                                    {tag.name}\r\n                                                </span>\r\n                                            )\r\n                                        })}\r\n                                        </h3>\r\n\r\n                                    </>)\r\n                                } */}\r\n\r\n                                {productDetailData['category'] && productDetailData['category'].length > 0 &&\r\n                                    (<>\r\n                                        <h3>\r\n                                            CATEGORIES:\r\n                                        {productDetailData['category'].map(cat => {\r\n                                            return (\r\n                                                <span\r\n                                                    onClick={() => history.push(`/admin/category/${cat.id}`)}\r\n\r\n                                                >\r\n                                                    {cat.name}\r\n                                                </span>\r\n                                            )\r\n                                        })}\r\n                                        </h3>\r\n\r\n                                    </>)\r\n                                }\r\n\r\n                            </div>\r\n                        </div>\r\n\r\n\r\n                        {productDetailData['icon'] && (\r\n                            <>\r\n                                <div className='brandDetailContainer__heading'>\r\n                                    <h3>\r\n                                        Icon\r\n                            </h3>\r\n                                </div>\r\n\r\n                                <div className='brandDetailContainer__inlineBox'>\r\n                                    <div className='brandDetailContainer__header-coverContainer brandDetailContainer__header-coverContainer-icon'>\r\n                                        <img src={productDetailData['icon'] && productDetailData['icon']} alt=\"\" />\r\n                                    </div>\r\n\r\n                                </div>\r\n\r\n                                <div style={{\r\n                                    marginBottom: \"25px\"\r\n                                }}></div>\r\n                            </>\r\n                        )}\r\n\r\n                        {productDetailData['pricing'] && productDetailData['pricing'].length > 0 && (\r\n                            <>\r\n                                <div className='brandDetailContainer__heading'>\r\n                                    <h3>\r\n                                        Pricing\r\n                                   </h3>\r\n                                </div>\r\n\r\n                                <div className='brandDetailContainer__pricing'>\r\n                                    <div className='addProductGridContainer__item-body-pricingContainer'>\r\n                                        {productDetailData['pricing'].map(item => {\r\n                                            return (\r\n                                                <div className='addProductGridContainer__item-body-pricingContainer-item'>\r\n\r\n                                                    <div className='addProductGridContainer__item-body-pricingContainer-item-two'>\r\n                                                        <div>\r\n                                                            <h3>\r\n                                                                Price\r\n    </h3>\r\n                                                            <div className='addProductGridContainer__item-body-pricingContainer-item-body'>\r\n\r\n\r\n                                                                {item.price.offer ? (\r\n                                                                    <>\r\n                                                                        <h4 >\r\n                                                                            {item.price.offer}\r\n\r\n                                                                        </h4>\r\n                                                        /\r\n                                                        <h5 style={{\r\n                                                                            textDecoration: \"line-through\"\r\n                                                                        }}>\r\n\r\n                                                                            {item.price.regular}\r\n                                                                        </h5>\r\n                                                                    </>\r\n                                                                ) : (\r\n                                                                        <h4>\r\n                                                                            {item.price.regular}\r\n\r\n                                                                        </h4>\r\n                                                                    )}\r\n\r\n\r\n                                                            </div>\r\n                                                        </div>\r\n\r\n                                                        {item.stock && (\r\n                                                            <div>\r\n                                                                <Badge\r\n                                                                    overflowCount={999}\r\n                                                                    count={item.stock.available}>\r\n                                                                    <h3>\r\n                                                                        Stock\r\n                </h3>\r\n                                                                </Badge>\r\n                                                                <div className='addProductGridContainer__item-body-pricingContainer-item-body'>\r\n                                                                    <div>\r\n                                                                        <h6>\r\n                                                                            min\r\n                                                                        <Badge\r\n                                                                                className=\"site-badge-count-4\"\r\n                                                                                overflowCount={999}\r\n                                                                                count={item.stock.minimum} />\r\n                                                                        </h6>\r\n\r\n                                                                    </div>\r\n\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        )}\r\n\r\n\r\n\r\n                                                    </div>\r\n\r\n                                                    {item.attribute\r\n                                                        && Object.values(item.attribute).length > 0 && (\r\n                                                            <>\r\n                                                                <h3>\r\n                                                                    Attributes\r\n    </h3>\r\n                                                                <div className='addProductGridContainer__item-body-pricingContainer-item-body'>\r\n                                                                    {item.attribute\r\n                                                                        && Object.keys(item.attribute).length > 0\r\n                                                                        && Object.keys(item.attribute).map(attributeItem => {\r\n                                                                            return (\r\n                                                                                <div>\r\n                                                                                    <h6>\r\n                                                                                        {attributeItem}\r\n                                                                                    </h6>\r\n                                                                                    <h4>\r\n                                                                                        {item.attribute[attributeItem]}\r\n                                                                                    </h4>\r\n                                                                                </div>\r\n                                                                            )\r\n                                                                        })}\r\n                                                                </div>\r\n                                                            </>\r\n                                                        )}\r\n\r\n                                                </div>\r\n                                            )\r\n                                        })}\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div style={{\r\n                                    marginBottom: \"25px\"\r\n                                }}></div>\r\n                            </>\r\n                        )}\r\n\r\n\r\n\r\n                        {productDetailData['image'] && productDetailData['image'].length > 0 && (\r\n                            <>\r\n                                <div className='brandDetailContainer__heading'>\r\n                                    <h3>\r\n                                        Image Gallary\r\n                                   </h3>\r\n                                </div>\r\n\r\n                                <div className='brandDetailContainer__imageGallary'>\r\n                                    <div className='imgGallaryContainer'>\r\n\r\n                                        <div className=\"imgGallary-row\">\r\n                                            {row && Object.keys(row).map(column => {\r\n                                                return (\r\n                                                    <div className=\"imgGallary-column\">\r\n                                                        {row[column] && row[column].map(img => {\r\n                                                            return <img src={img} style={{\r\n                                                                width: '100%'\r\n                                                            }} />\r\n                                                        })}\r\n\r\n                                                    </div>\r\n                                                )\r\n                                            })}\r\n\r\n\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                </div>\r\n\r\n                                <div style={{\r\n                                    marginBottom: \"25px\"\r\n                                }}></div>\r\n                            </>\r\n                        )}\r\n\r\n                        {productDetailData['brand'] && Object.keys(productDetailData['brand']).length > 0 && (\r\n                            <>\r\n                                <div className='brandDetailContainer__heading'>\r\n                                    <h3>\r\n                                        Brand\r\n                                   </h3>\r\n                                </div>\r\n\r\n                                <div\r\n                                    onClick={() => history.push(`/admin/brand/${productDetailData['brand']['id']}`)}\r\n\r\n                                    className='brandDetailContainer__brand'>\r\n                                    <div className='brandDetailContainer__brand-coverbox'>\r\n                                        <img src={productDetailData['brand']['cover'] && productDetailData['brand']['cover']} alt=\"\" />\r\n                                    </div>\r\n                                    <div className='brandDetailContainer__brand-info'>\r\n                                        <h2>\r\n                                            {productDetailData['brand']['name']}\r\n                                        </h2>\r\n                                        <h3>\r\n                                            {productDetailData['brand']['description']}\r\n                                        </h3>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div style={{\r\n                                    marginBottom: \"25px\"\r\n                                }}></div>\r\n                            </>\r\n                        )}\r\n\r\n\r\n                        {productDetailData['primaryCategory'] && Object.keys(productDetailData['primaryCategory']).length > 0 && (\r\n                            <>\r\n                                <div className='brandDetailContainer__heading'>\r\n                                    <h3>\r\n                                        Primary Category\r\n                                   </h3>\r\n                                </div>\r\n\r\n                                <div\r\n                                    onClick={() => history.push(`/admin/category/${productDetailData['primaryCategory']['id']}`)}\r\n                                    className='brandDetailContainer__brand'>\r\n                                    <div className='brandDetailContainer__brand-coverbox'>\r\n                                        <img src={productDetailData['primaryCategory']['cover'] && productDetailData['primaryCategory']['cover']} alt=\"\" />\r\n                                    </div>\r\n                                    <div className='brandDetailContainer__brand-info'>\r\n                                        <h2>\r\n                                            {productDetailData['primaryCategory']['name']}\r\n                                        </h2>\r\n                                        <h3>\r\n                                            {productDetailData['primaryCategory']['description']}\r\n                                        </h3>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div style={{\r\n                                    marginBottom: \"25px\"\r\n                                }}></div>\r\n                            </>\r\n                        )}\r\n\r\n                    </>\r\n\r\n                )}\r\n\r\n            </Skeleton>\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NewBrandDetail\r\n","import React, { useState,useEffect } from 'react';\r\nimport { Modal, notification } from 'antd';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport { useHandleFetch } from '../../hooks';\r\nimport { CheckCircleOutlined, PlusOutlined, EditOutlined, DeleteOutlined, EditFilled } from '@ant-design/icons';\r\nimport MetaTags from \"../../pages/category/MetaTags\";\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    name: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Tag Updated',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Something Went Wrong',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst initialValues = {\r\n    name: '',\r\n\tbnName: '',\r\n\tdescription: '',\r\n\tbnDescription: '',\r\n\tmetaTitle: '',\r\n\tbnMetaTitle: '',\r\n\tmetaDescription: '',\r\n\tbnMetaDescription: '',\r\n\tmetaTags: '',\r\n\tbnMetaTags: '',\r\n}\r\n\r\n\r\n\r\n\r\n\r\ninterface Props {\r\n    tagEditVisible?: any;\r\n    setTagEditVisible?: any;\r\n    tagDetailData?: any;\r\n    setTagList?:any; \r\n    tagList?:any; \r\n}\r\n\r\nconst QuickEdit = ({ tagEditVisible, setTagEditVisible, tagDetailData,setTagList,tagList }: Props) => {\r\n    const [updateTagState, handleUpdateCategoryFetch] = useHandleFetch({}, 'updateTag');\r\n    const [tags,setTags] = useState([]);\r\n    const [bnTags,setBnTags] = useState([]);\r\n    \r\n\r\n    const handleSubmit = async (values: any, actions: any) => {\r\n        const updateTagRes = await handleUpdateCategoryFetch({\r\n            urlOptions: {\r\n                placeHolders: {\r\n                    id: values.id,\r\n                }\r\n            },\r\n            body: {\r\n                name: values.name,\r\n                description: values.description,\r\n                metaTitle: values.metaTitle,\r\n                metaDescription: values.metaDescription,\r\n                metaTags: tags.join(','),\r\n\r\n                bn: {\r\n\t\t\t\t\tmetaTitle: values.bnMetaTitle,\r\n\t\t\t\t\tmetaDescription: values.bnMetaDescription,\r\n\t\t\t\t\tmetaTags: bnTags.join(','),\r\n\t\t\t\t\tname: values.bnName.trim(),\r\n\t\t\t\t\tdescription: values.bnDescription,\r\n                }\r\n                \r\n            },\r\n        });\r\n\r\n        // @ts-ignore\r\n        if (updateTagRes && updateTagRes.status === 'ok') {\r\n     \r\n\r\n\t\t\tconst positionInTag = () => {\r\n\t\t\t\treturn tagList.map(item => item.id).indexOf(values.id);\r\n\t\t\t}\r\n\r\n\t\t\tconst index = positionInTag();\r\n\r\n\t\t\t// @ts-ignore\r\n\t\t\tconst updatedItem = Object.assign({}, tagList[index], { ...updateTagRes });\r\n\t\t\tconst updateTagList = [...tagList.slice(0, index), updatedItem, ...tagList.slice(index + 1)];\r\n\t\t\tsetTagList(updateTagList);\r\n\r\n\r\n            console.log('categoryupdateTagRes',updateTagRes);\r\n            openSuccessNotification();\r\n\t\t\tsetTagEditVisible(false)\r\n\r\n            // const positionInTag = () => {\r\n            //     return tagList.map(item => item.id).indexOf(category.id);\r\n            // }\r\n\r\n            // const index = positionInTag();\r\n\r\n            // const updatedItem = Object.assign({}, tagList[index], { ...updateTagRes });\r\n            // const updateTagList = [...tagList.slice(0, index), updatedItem, ...tagList.slice(index + 1)];\r\n            // setTagList(updateTagList);\r\n\r\n        }\r\n        else {\r\n            openErrorNotification();\r\n        }\r\n\r\n        actions.setSubmitting(false);\r\n    };\r\n\r\n\r\n    const handleCancel = (e: any) => {\r\n        setTagEditVisible(false);\r\n    };\r\n\r\n\r\n    const getisSubmitButtonDisabled = (values, isValid) => {\r\n        if (!values.name || !isValid) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }; \r\n\r\n\r\n    // useEffect(()=>{\r\n\r\n    //     if(tagDetailData && Object.keys(tagDetailData).length > 0){\r\n    //         const metaTags = tagDetailData.metaTags.split(','); \r\n\r\n    //         console.log('localMetaTags',metaTags);\r\n           \r\n    //         const bnMetaTags = tagDetailData.bn['metaTags'].split(','); \r\n\r\n    //         setTags(metaTags)\r\n    //         setBnTags(bnMetaTags)\r\n    //     }\r\n\r\n    // },[]); \r\n\r\n\r\n    console.log('tagDetailData',tagDetailData);\r\n\r\n\r\n \r\n\r\n    return (\r\n        <Formik\r\n            onSubmit={(values, actions) => handleSubmit(values, actions)}\r\n            validationSchema={validationSchema}\r\n            validateOnBlur={false}\r\n            enableReinitialize={true}\r\n            initialValues={{\r\n                ...initialValues, \r\n                ...tagDetailData,\r\n                ...( tagDetailData && Object.keys(tagDetailData).length > 0 && {\r\n                    bnMetaTitle: tagDetailData['bn']\r\n                    && tagDetailData['bn'].metaTitle\r\n                    && tagDetailData['bn'].metaTitle,\r\n                    bnMetaDescription: tagDetailData['bn'] &&  tagDetailData['bn'].metaDescription && tagDetailData['bn'].metaDescription,\r\n                    bnName: tagDetailData['bn'] && tagDetailData['bn'].name && tagDetailData['bn'].name,\r\n                    bnDescription: tagDetailData['bn'] && tagDetailData['bn'].description && tagDetailData['bn'].description,\r\n                  })\r\n            }}\r\n        >\r\n            {({\r\n                handleChange,\r\n                values,\r\n                handleSubmit,\r\n                errors,\r\n                isValid,\r\n                isSubmitting,\r\n                touched,\r\n                handleBlur,\r\n                setFieldTouched,\r\n                handleReset,\r\n            }) => (\r\n                    <>\r\n                        <Modal\r\n                        \tstyle={{\r\n\t\t\t\t\t\t\t\ttop: '40px',\r\n\r\n\t\t\t\t\t\t\t}}\r\n                            title=\"Tag Edit\"\r\n                            visible={tagEditVisible}\r\n                            onOk={(e: any) => handleSubmit(e)}\r\n                            onCancel={handleCancel}\r\n                            okText='Update'\r\n\t\t\t\t\t\t\tokButtonProps={{\r\n\t\t\t\t\t\t\t\tloading: isSubmitting,\r\n\t\t\t\t\t\t\t\thtmlType: \"submit\",\r\n\t\t\t\t\t\t\t}}\r\n                        >\r\n                                 \t\t\t<Input\r\n\t\t\t\t\t\t\t\tlabel='Name'\r\n\t\t\t\t\t\t\t\tvalue={values.name}\r\n\t\t\t\t\t\t\t\tname='name'\r\n\t\t\t\t\t\t\t\tplaceHolder={'new,fresh'}\r\n\t\t\t\t\t\t\t\tisError={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateTagState.error['error']['name'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateTagState.error['error']['name'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('name');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\tlabel='BN Name'\r\n\t\t\t\t\t\t\t\tvalue={values.bnName}\r\n\t\t\t\t\t\t\t\tplaceHolder={'নতুন,ফ্রেশ'}\r\n\t\t\t\t\t\t\t\tname='bnName'\r\n\t\t\t\t\t\t\t\tisError={(touched.bnName && errors.bnName) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateTagState.error['error']['bnName'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.bnName && errors.bnName) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateTagState.error['error']['bnName'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('bnName');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\r\n\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\tlabel='Description'\r\n\t\t\t\t\t\t\t\tvalue={values.description}\r\n                                name='description'\r\n                                placeholder={'This tag...'}\r\n\t\t\t\t\t\t\t\tisError={(touched.description && errors.description) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateTagState.error['error']['description'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.description && errors.description) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateTagState.error['error']['description'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('description');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\tlabel='BN Description'\r\n\t\t\t\t\t\t\t\tvalue={values.bnDescription}\r\n\t\t\t\t\t\t\t\tplaceholder={'এই ট্যাগ...'}\r\n\t\t\t\t\t\t\t\tname='bnDescription'\r\n\t\t\t\t\t\t\t\tisError={(touched.bnDescription && errors.bnDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateTagState.error['error']['bnDescription'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.bnDescription && errors.bnDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateTagState.error['error']['bnDescription'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('bnDescription');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n                                \r\n<Input\r\n\t\t\t\t\t\t\t\tlabel='Meta title'\r\n\t\t\t\t\t\t\t\tvalue={values.metaTitle}\r\n\t\t\t\t\t\t\t\tplaceHolder={'category...'}\r\n\t\t\t\t\t\t\t\tname='metaTitle'\r\n\t\t\t\t\t\t\t\tisError={(touched.metaTitle && errors.metaTitle) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateTagState.error['error']['metaTitle'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.metaTitle && errors.metaTitle) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateTagState.error['error']['metaTitle'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('metaTitle')\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\tlabel='BN Meta title'\r\n\t\t\t\t\t\t\t\tvalue={values.bnMetaTitle}\r\n\t\t\t\t\t\t\t\tplaceHolder={'ক্যাটাগড়ি...'}\r\n\t\t\t\t\t\t\t\tname='bnMetaTitle'\r\n\t\t\t\t\t\t\t\tisError={(touched.bnMetaTitle && errors.bnMetaTitle) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateTagState.error['error']['bnMetaTitle'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.bnMetaTitle && errors.bnMetaTitle) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateTagState.error['error']['bnMetaTitle'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('bnMetaTitle');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\tlabel='Meta description'\r\n\t\t\t\t\t\t\t\tvalue={values.metaDescription}\r\n\t\t\t\t\t\t\t\tplaceholder={'meta...'}\r\n\t\t\t\t\t\t\t\tname='metaDescription'\r\n\t\t\t\t\t\t\t\tisError={(touched.metaDescription && errors.metaDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateTagState.error['error']['metaDescription'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.metaDescription && errors.metaDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateTagState.error['error']['metaDescription'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('metaDescription');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\tlabel='BN Meta Description'\r\n\t\t\t\t\t\t\t\tvalue={values.bnMetaDescription}\r\n\t\t\t\t\t\t\t\tplaceholder={'এইয় মেট...'}\r\n\t\t\t\t\t\t\t\tname='bnMetaDescription'\r\n\t\t\t\t\t\t\t\tisError={(touched.bnMetaDescription && errors.bnMetaDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateTagState.error['error']['bnMetaDescription'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.bnMetaDescription && errors.bnMetaDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateTagState.error['error']['bnMetaDescription'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('bnMetaDescription');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\tMeta Tags (grocery,fashion)\r\n\t\t\t\t\t\t\t</h3>\r\n\r\n\t\t\t\t\t\t\t<MetaTags\r\n\t\t\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\t\t\tsetTags={setTags}\r\n\t\t\t\t\t\t\ttags={tags}\r\n\t\t\t\t\t\t\t />\r\n\r\n\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\tmarginTop:'15px'\r\n\t\t\t\t\t\t\t}}></div>\r\n\r\n\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\tBN Meta Tags (মুদিখানা,ফ্যাশন)\r\n\t\t\t\t\t\t\t</h3>\r\n\r\n\t\t\t\t\t\t\t<MetaTags\r\n\t\t\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\t\t\tsetTags={setBnTags}\r\n\t\t\t\t\t\t\ttags={bnTags}\r\n\t\t\t\t\t\t\t />\r\n\r\n\r\n                        </Modal>\r\n\r\n                    </>\r\n                )}\r\n        </Formik>\r\n    );\r\n};\r\n\r\n\r\nexport default QuickEdit;\r\n","import React, { useState } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n\r\nimport { useHandleFetch } from '../../hooks';\r\n// import third party ui lib\r\nimport { Upload, message, Switch, Select, Button, notification, Modal, Tooltip } from 'antd';\r\n\r\nimport {\r\n    FileOutlined,\r\n    InboxOutlined,\r\n    FileAddOutlined,\r\n    DeleteOutlined,\r\n    CheckCircleOutlined,\r\n    CloseOutlined,\r\n    CheckOutlined,\r\n    InfoCircleOutlined,\r\n    PlusOutlined,\r\n    FileImageFilled\r\n} from '@ant-design/icons';\r\n\r\n\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport MediaLibrary from \"../../components/MediaLibrary\";\r\nimport MetaTags from \"../../pages/category/MetaTags\";\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    name: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Tag Created',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n    notification.error({\r\n        message: message || 'Something Went Wrong',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst initialValues = {\r\n    name: '',\r\n\tbnName: '',\r\n\tdescription: '',\r\n\tbnDescription: '',\r\n\tmetaTitle: '',\r\n\tbnMetaTitle: '',\r\n\tmetaDescription: '',\r\n\tbnMetaDescription: '',\r\n\tmetaTags: '',\r\n\tbnMetaTags: '',\r\n}\r\n\r\n\r\n\r\ninterface Props {\r\n    addNewCategoryVisible?: any;\r\n    setAddNewCategoryVisible?: any;\r\n    tagList?: any;\r\n    setTagList?: any;\r\n\r\n}\r\n\r\nconst AddNewBrand = ({ addNewCategoryVisible, setAddNewCategoryVisible, tagList, setTagList }: Props) => {\r\n\r\n    const [addTagState, handleAddTagFetch] = useHandleFetch({}, 'addTag');\r\n    const [myImages, setmyImages] = useState(false);\r\n    const [visibleMedia, setvisibleMedia] = useState(false);\r\n    const [tags,setTags] = useState([]);\r\n\tconst [bnTags,setBnTags] = useState([]);\r\n\r\n    const handleSubmit = async (values: any, actions: any) => {\r\n        const addTagRes = await handleAddTagFetch({\r\n            urlOptions: {\r\n                placeHolders: {\r\n                    id: values.id,\r\n                }\r\n            },\r\n            body: {\r\n                name: values.name.trim(),\r\n                description: values.description,\r\n                metaTitle: values.metaTitle,\r\n                metaDescription: values.metaDescription,\r\n                metaTags: tags.join(','),\r\n\r\n\r\n                \r\n                bn: {\r\n\t\t\t\t\tmetaTitle: values.bnMetaTitle,\r\n\t\t\t\t\tmetaDescription: values.bnMetaDescription,\r\n\t\t\t\t\tmetaTags: bnTags.join(','),\r\n\t\t\t\t\tname: values.bnName.trim(),\r\n\t\t\t\t\tdescription: values.bnDescription,\r\n\t\t\t\t}\r\n            },\r\n        });\r\n\r\n        // @ts-ignore\r\n        if (addTagRes && addTagRes.status === 'ok') {\r\n            openSuccessNotification();\r\n\r\n            setTagList([{\r\n                id: addTagRes['_id'] || '',\r\n                key: addTagRes['_id'] || '',\r\n                name: addTagRes['name'] || '',\r\n                description: addTagRes['description'] || '',\r\n            },...tagList])\r\n            actions.resetForm();\r\n            setAddNewCategoryVisible(false);\r\n        }\r\n        else {\r\n            openErrorNotification();\r\n        }\r\n\r\n\r\n        actions.setSubmitting(false);\r\n\r\n    };\r\n\r\n\r\n    const handleCancel = (e: any) => {\r\n        setAddNewCategoryVisible(false);\r\n    };\r\n\r\n\r\n    const getisSubmitButtonDisabled = (values, isValid) => {\r\n        if (!values.name || !isValid) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n\r\n\r\n\r\n    const handleImagesDelete = (id) => {\r\n        // @ts-ignore\r\n        const newImages = myImages && myImages.filter(image => {\r\n            return image.id !== id;\r\n        })\r\n\r\n        setmyImages(newImages);\r\n    }\r\n\r\n\r\n\r\n\r\n    return (\r\n        <Formik\r\n            onSubmit={(values, actions) => handleSubmit(values, actions)}\r\n            validationSchema={validationSchema}\r\n            validateOnBlur={false}\r\n            enableReinitialize={true}\r\n            initialValues={\r\n                { ...initialValues }\r\n            }\r\n        >\r\n            {({\r\n                handleChange,\r\n                values,\r\n                handleSubmit,\r\n                errors,\r\n                isValid,\r\n                isSubmitting,\r\n                touched,\r\n                handleBlur,\r\n                setFieldTouched,\r\n                handleReset,\r\n            }) => (\r\n                    <>\r\n                        <Modal\r\n                            style={{\r\n                                top: '40px'\r\n                            }}\r\n                            title=\"Add New Tag\"\r\n                            visible={addNewCategoryVisible}\r\n                            onOk={(e: any) => handleSubmit(e)}\r\n                            onCancel={handleCancel}\r\n                            okText='Create'\r\n\t\t\t\t\t\t\tokButtonProps={{\r\n\t\t\t\t\t\t\t\tloading: isSubmitting,\r\n\t\t\t\t\t\t\t\thtmlType: \"submit\",\r\n\t\t\t\t\t\t\t}}\r\n                        >\r\n                  \t\t\t<Input\r\n\t\t\t\t\t\t\t\tlabel='Name'\r\n\t\t\t\t\t\t\t\tvalue={values.name}\r\n\t\t\t\t\t\t\t\tname='name'\r\n\t\t\t\t\t\t\t\tplaceHolder={'new,fresh'}\r\n\t\t\t\t\t\t\t\tisError={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addTagState.error['error']['name'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addTagState.error['error']['name'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('name');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\tlabel='BN Name'\r\n\t\t\t\t\t\t\t\tvalue={values.bnName}\r\n\t\t\t\t\t\t\t\tplaceHolder={'নতুন,ফ্রেশ'}\r\n\t\t\t\t\t\t\t\tname='bnName'\r\n\t\t\t\t\t\t\t\tisError={(touched.bnName && errors.bnName) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addTagState.error['error']['bnName'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.bnName && errors.bnName) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addTagState.error['error']['bnName'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('bnName');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\r\n\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\tlabel='Description'\r\n\t\t\t\t\t\t\t\tvalue={values.description}\r\n                                name='description'\r\n                                placeholder={'This tag...'}\r\n\t\t\t\t\t\t\t\tisError={(touched.description && errors.description) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addTagState.error['error']['description'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.description && errors.description) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addTagState.error['error']['description'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('description');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\tlabel='BN Description'\r\n\t\t\t\t\t\t\t\tvalue={values.bnDescription}\r\n\t\t\t\t\t\t\t\tplaceholder={'এই ট্যাগ...'}\r\n\t\t\t\t\t\t\t\tname='bnDescription'\r\n\t\t\t\t\t\t\t\tisError={(touched.bnDescription && errors.bnDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addTagState.error['error']['bnDescription'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.bnDescription && errors.bnDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addTagState.error['error']['bnDescription'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('bnDescription');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n                                \r\n<Input\r\n\t\t\t\t\t\t\t\tlabel='Meta title'\r\n\t\t\t\t\t\t\t\tvalue={values.metaTitle}\r\n\t\t\t\t\t\t\t\tplaceHolder={'category...'}\r\n\t\t\t\t\t\t\t\tname='metaTitle'\r\n\t\t\t\t\t\t\t\tisError={(touched.metaTitle && errors.metaTitle) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addTagState.error['error']['metaTitle'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.metaTitle && errors.metaTitle) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addTagState.error['error']['metaTitle'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('metaTitle')\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\tlabel='BN Meta title'\r\n\t\t\t\t\t\t\t\tvalue={values.bnMetaTitle}\r\n\t\t\t\t\t\t\t\tplaceHolder={'ক্যাটাগড়ি...'}\r\n\t\t\t\t\t\t\t\tname='bnMetaTitle'\r\n\t\t\t\t\t\t\t\tisError={(touched.bnMetaTitle && errors.bnMetaTitle) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addTagState.error['error']['bnMetaTitle'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.bnMetaTitle && errors.bnMetaTitle) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addTagState.error['error']['bnMetaTitle'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('bnMetaTitle');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\tlabel='Meta description'\r\n\t\t\t\t\t\t\t\tvalue={values.metaDescription}\r\n\t\t\t\t\t\t\t\tplaceholder={'meta...'}\r\n\t\t\t\t\t\t\t\tname='metaDescription'\r\n\t\t\t\t\t\t\t\tisError={(touched.metaDescription && errors.metaDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addTagState.error['error']['metaDescription'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.metaDescription && errors.metaDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addTagState.error['error']['metaDescription'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('metaDescription');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\tlabel='BN Meta Description'\r\n\t\t\t\t\t\t\t\tvalue={values.bnMetaDescription}\r\n\t\t\t\t\t\t\t\tplaceholder={'এইয় মেট...'}\r\n\t\t\t\t\t\t\t\tname='bnMetaDescription'\r\n\t\t\t\t\t\t\t\tisError={(touched.bnMetaDescription && errors.bnMetaDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addTagState.error['error']['bnMetaDescription'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.bnMetaDescription && errors.bnMetaDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addTagState.error['error']['bnMetaDescription'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('bnMetaDescription');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\tMeta Tags (grocery,fashion)\r\n\t\t\t\t\t\t\t</h3>\r\n\r\n\t\t\t\t\t\t\t<MetaTags\r\n\t\t\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\t\t\tsetTags={setTags}\r\n\t\t\t\t\t\t\ttags={tags}\r\n\t\t\t\t\t\t\t />\r\n\r\n\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\tmarginTop:'15px'\r\n\t\t\t\t\t\t\t}}></div>\r\n\r\n\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\tBN Meta Tags (মুদিখানা,ফ্যাশন)\r\n\t\t\t\t\t\t\t</h3>\r\n\r\n\t\t\t\t\t\t\t<MetaTags\r\n\t\t\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\t\t\tsetTags={setBnTags}\r\n\t\t\t\t\t\t\ttags={bnTags}\r\n\t\t\t\t\t\t\t />\r\n\r\n                        </Modal>\r\n\r\n                        <MediaLibrary\r\n                            setvisible={setvisibleMedia}\r\n                            visible={visibleMedia}\r\n                            setmyImages={setmyImages}\r\n                            myImages={myImages}\r\n                            isModalOpenForImages={true}\r\n\r\n                        />\r\n                    </>\r\n                )}\r\n        </Formik>\r\n\r\n\r\n\r\n\r\n    );\r\n};\r\n\r\nexport default AddNewBrand;\r\n","import React, { useState, useEffect } from 'react';\r\n\r\n// import third party ui lib\r\nimport { Empty, Popconfirm, Upload, message, Switch, Select, Button, notification, Table, Space, Input as CoolInput, Tooltip, Modal } from 'antd';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { useHistory } from 'react-router';\r\n\r\n\r\n\r\nimport {\r\n\tFileOutlined,\r\n\tInboxOutlined,\r\n\tRadiusUpleftOutlined,\r\n\tRadiusUprightOutlined,\r\n\tRadiusBottomleftOutlined,\r\n\tRadiusBottomrightOutlined,\r\n\tPlusOutlined,\r\n\tDeleteOutlined,\r\n\tEditOutlined,\r\n\tCheckCircleOutlined\r\n} from '@ant-design/icons';\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n\r\n\r\n/// import hooks\r\nimport { useFetch, useHandleFetch } from \"../../hooks\";\r\n\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport { DataTableSkeleton } from \"../../components/Placeholders\";\r\nimport QuickEdit from \"./QuickEdit\"\r\nimport TagQuickEdit from \"./TagQuickEdit\"\r\nimport AddNewTag from \"./AddNewTag\"\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t\tmessage: message || 'Tag Created',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n\tnotification.error({\r\n\t\tmessage: message || 'Something Went Wrong',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n};\r\n\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n\tname: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\n\r\nconst initialValues = {\r\n\tname: '',\r\n\tdescription: ''\r\n}\r\n\r\n\r\nconst { Column, ColumnGroup } = Table;\r\nconst { Search } = CoolInput;\r\n\r\n\r\n\r\nconst MyTable = ({ data, setTagList }) => {\r\n\tconst [visible, setvisible] = useState(false);\r\n\tconst [activeCategoryForEdit, setactiveCategoryForEdit] = useState(false);\r\n\tconst [deleteTagState, handleDeleteTagFetch] = useHandleFetch({}, 'deleteTag');\r\n\r\n\tconst history = useHistory();\r\n\r\n\r\n\tconst handleDeleteTag = async (id) => {\r\n\t\tconst deleteTagRes = await handleDeleteTagFetch({\r\n\t\t\turlOptions: {\r\n\t\t\t\tplaceHolders: {\r\n\t\t\t\t\tid,\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\r\n\r\n\t\t// @ts-ignore\r\n\t\tif (deleteTagRes && deleteTagRes.status === 'ok') {\r\n\t\t\topenSuccessNotification('Deleted Tag');\r\n\t\t\tconst newtagList = data.filter(item => item.id !== id);\r\n\t\t\tsetTagList(newtagList);\r\n\t\t}\r\n\r\n\r\n\t}\r\n\r\n\r\n\tconst handleOk = (e: any) => {\r\n\t\tsetvisible(false);\r\n\r\n\t};\r\n\r\n\tconst handleCancel = (e: any) => {\r\n\t\tsetvisible(false);\r\n\t};\r\n\r\n\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Table\r\n\t\t\t\t// expandable={{\r\n\t\t\t\t//     expandedRowRender: record => <p style={{ margin: 0 }}>{record.name}</p>,\r\n\t\t\t\t//     rowExpandable: record => record.name !== 'Not Expandable',\r\n\t\t\t\t//   }}\r\n\t\t\t\t// bordered={true}\r\n\t\t\t\tsize='small'\r\n\t\t\t\t// pagination={false}\r\n\t\t\t\tdataSource={data}\r\n\t\t\t>\r\n\r\n\t\t\t\t<Column\r\n\t\t\t\t\ttitle=\"Name\"\r\n\t\t\t\t\tdataIndex=\"name\"\r\n\t\t\t\t\tkey=\"id\"\r\n\t\t\t\t\tclassName='classnameofthecolumn'\r\n\t\t\t\t\trender={(text, record: any) => (\r\n\t\t\t\t\t\t<>\r\n\r\n\t\t\t\t\t\t\t<h4\r\n\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\thistory.push(`/admin/tag/${record.id}`)\r\n\t\t\t\t\t\t\t\t\t// setBrandDetailVisible(true);\r\n\t\t\t\t\t\t\t\t\tsetactiveCategoryForEdit(record)\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\tfontWeight: 400,\r\n\t\t\t\t\t\t\t\t\tcolor: '#555',\r\n\t\t\t\t\t\t\t\t\tcursor: 'pointer'\r\n\r\n\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t{text}\r\n\t\t\t\t\t\t\t</h4>\r\n\r\n\r\n\t\t\t\t\t\t</>\r\n\t\t\t\t\t)}\r\n\t\t\t\t/>\r\n\r\n\t\t\t\t<Column\r\n\t\t\t\t\ttitle=\"Description\"\r\n\t\t\t\t\tdataIndex=\"description\"\r\n\t\t\t\t\tkey=\"id\"\r\n\t\t\t\t\tclassName='classnameofthecolumn'\r\n\r\n\t\t\t\t/>\r\n\r\n\r\n\t\t\t\t<Column\r\n\t\t\t\t\ttitle=\"Product\"\r\n\t\t\t\t\tdataIndex=\"productCount\"\r\n\t\t\t\t\tkey=\"id\"\r\n\t\t\t\t\tclassName='classnameofthecolumn'\r\n\t\t\t\t/>\r\n\r\n\t\t\t\t<Column\r\n\r\n\t\t\t\t\tclassName='classnameofthecolumn'\r\n\t\t\t\t\ttitle=\"\"\r\n\t\t\t\t\tkey=\"action\"\r\n\t\t\t\t\talign='right'\r\n\t\t\t\t\trender={(text, record: any) => (\r\n\t\t\t\t\t\t<Space size=\"middle\">\r\n\t\t\t\t\t\t\t<a href='##'>\r\n\t\t\t\t\t\t\t\t<Tooltip placement=\"top\" title='Quick Edit Tag'>\r\n\t\t\t\t\t\t\t\t\t<span className='iconSize' onClick={() => {\r\n\t\t\t\t\t\t\t\t\t\tsetvisible(true)\r\n\t\t\t\t\t\t\t\t\t\tsetactiveCategoryForEdit(record);\r\n\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t<EditOutlined />\r\n\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t\t</a>\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t<Popconfirm\r\n\t\t\t\t\t\t\t\tonConfirm={() => handleDeleteTag(record.id)}\r\n\t\t\t\t\t\t\t\ttitle=\"Are you sure？\" okText=\"Yes\" cancelText=\"No\">\r\n\t\t\t\t\t\t\t\t<span\r\n\t\t\t\t\t\t\t\t\tclassName='iconSize iconSize-danger'\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t<DeleteOutlined />\r\n\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t</Popconfirm>\r\n\t\t\t\t\t\t</Space>\r\n\t\t\t\t\t)}\r\n\t\t\t\t/>\r\n\t\t\t</Table>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\t\t\t{activeCategoryForEdit && <TagQuickEdit\r\n\t\t\t\ttagList={data}\r\n\t\t\t\tsetTagList={setTagList}\r\n\t\t\t\ttagEditVisible={visible}\r\n\t\t\t\tsetTagEditVisible={setvisible}\r\n\t\t\t\ttagDetailData={activeCategoryForEdit} />}\r\n\t\t</>\r\n\t)\r\n}\r\n\r\n\r\n\r\n\r\ninterface Props { }\r\n\r\nconst TagList = ({ }: Props) => {\r\n\r\n\r\n\tconst [tagList, setTagList] = useState([]);\r\n\r\n\tconst [tagState, handleTagListFetch] = useHandleFetch({}, 'tagList');\r\n\r\n\r\n\tuseEffect(() => {\r\n\t\tconst setTags = async () => {\r\n\t\t\tconst tags = await handleTagListFetch({\r\n\t\t\t\turlOptions:{\r\n\t\t\t\t\tparams: {\r\n\t\t\t\t\t  sortItem: 'added',\r\n\t\t\t\t\t  sortOrderValue: '-1'\r\n\t\t\t\t\t}\r\n\t\t\t\t  }\r\n\t\t\t});\r\n\t\t\t// @ts-ignore\r\n\t\t\tsetTagList(tags);\r\n\t\t}\r\n\t\tsetTags();\r\n\t}, [])\r\n\r\n\r\n\r\n\tconst [addTagState, handleAddTagFetch] = useHandleFetch({}, 'addTag');\r\n\tconst [addNewCategoryVisible, setAddNewCategoryVisible] = useState(false);\r\n\r\n\r\n\r\n\r\n\tconst getisSubmitButtonDisabled = (values, isValid) => {\r\n\t\tif (!values.name || !isValid) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\r\n\tconst handleOkAddNewCategory = (e: any) => {\r\n\t\tsetAddNewCategoryVisible(false);\r\n\r\n\t};\r\n\r\n\tconst handleCancelAddNewCategory = (e: any) => {\r\n\t\tsetAddNewCategoryVisible(false);\r\n\t};\r\n\r\n\tconst handleSearch = (value) => {\r\n\t\tif (tagState.data.length > 0) {\r\n\t\t\tconst newTagList = tagState.data.filter(item => item.name.toLowerCase().includes(value.toLowerCase()));\r\n\t\t\tsetTagList(newTagList);\r\n\t\t}\r\n\r\n\t}\r\n\r\n\treturn (\r\n\t\t<>\r\n\r\n\t\t\t<div className='categoryListContainer'>\r\n\t\t\t\t<div className='categoryListContainer__header'>\r\n\t\t\t\t\t<div className='categoryListContainer__header-searchBar-tag'>\r\n\t\t\t\t\t\t<h2 className='categoryListContainer__header-title'>\r\n\t\t\t\t\t\t\tTags\r\n          \t\t\t\t</h2>\r\n\r\n\r\n\t\t\t\t\t\t<Search\r\n\t\t\t\t\t\t\tenterButton={false}\r\n\t\t\t\t\t\t\tclassName='searchbarClassName'\r\n\t\t\t\t\t\t\tplaceholder=\"search tags..\"\r\n\t\t\t\t\t\t\tonChange={e => handleSearch(e.target.value)}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\t// type=\"primary\"\r\n\t\t\t\t\t\tclassName='btnPrimaryClassNameoutline'\r\n\t\t\t\t\t\ticon={<PlusOutlined />}\r\n\t\t\t\t\t\tonClick={() => setAddNewCategoryVisible(true)}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tAdd New\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className='categoryListContainer__categoryList'>\r\n\t\t\t\t\t{tagState.done && tagList.length > 0 && <MyTable\r\n\t\t\t\t\t\tsetTagList={setTagList}\r\n\t\t\t\t\t\tdata={tagList} />}\r\n\t\t\t\t\t{tagState.isLoading && <DataTableSkeleton />}\r\n\r\n\r\n\t\t\t\t\t{tagState.done && !(tagList.length > 0) && (\r\n\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\tmarginTop: '200px'\r\n\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t<Empty description='No Tags found' image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\r\n\t\t\t<AddNewTag\r\n\t\t\t\ttagList={tagList}\r\n\t\t\t\tsetTagList={setTagList}\r\n\t\t\t\taddNewCategoryVisible={addNewCategoryVisible}\r\n\t\t\t\tsetAddNewCategoryVisible={setAddNewCategoryVisible}\r\n\t\t\t/>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default TagList;\r\n","import React, { useState,useEffect } from 'react';\r\nimport { Modal, notification } from 'antd';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport { useHandleFetch } from '../../hooks';\r\nimport { CheckCircleOutlined, PlusOutlined, EditOutlined, DeleteOutlined, EditFilled } from '@ant-design/icons';\r\nimport MetaTags from \"../../pages/category/MetaTags\";\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    name: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Tag Updated',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Something Went Wrong',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst initialValues = {\r\n    name: '',\r\n\tbnName: '',\r\n\tdescription: '',\r\n\tbnDescription: '',\r\n\tmetaTitle: '',\r\n\tbnMetaTitle: '',\r\n\tmetaDescription: '',\r\n\tbnMetaDescription: '',\r\n\tmetaTags: '',\r\n\tbnMetaTags: '',\r\n}\r\n\r\n\r\n\r\n\r\n\r\ninterface Props {\r\n    tagEditVisible?: any;\r\n    setTagEditVisible?: any;\r\n    tagDetailData?: any;\r\n    setTagDetailData?:any; \r\n}\r\n\r\nconst QuickEdit = ({ tagEditVisible, setTagEditVisible, tagDetailData,setTagDetailData }: Props) => {\r\n    const [updateTagState, handleUpdateCategoryFetch] = useHandleFetch({}, 'updateTag');\r\n    const [tags,setTags] = useState([]);\r\n    const [bnTags,setBnTags] = useState([]);\r\n    \r\n\r\n    const handleSubmit = async (values: any, actions: any) => {\r\n        const updateTagRes = await handleUpdateCategoryFetch({\r\n            urlOptions: {\r\n                placeHolders: {\r\n                    id: values.id,\r\n                }\r\n            },\r\n            body: {\r\n                name: values.name,\r\n                description: values.description,\r\n                metaTitle: values.metaTitle,\r\n                metaDescription: values.metaDescription,\r\n                metaTags: tags.join(','),\r\n\r\n                bn: {\r\n\t\t\t\t\tmetaTitle: values.bnMetaTitle,\r\n\t\t\t\t\tmetaDescription: values.bnMetaDescription,\r\n\t\t\t\t\tmetaTags: bnTags.join(','),\r\n\t\t\t\t\tname: values.bnName.trim(),\r\n\t\t\t\t\tdescription: values.bnDescription,\r\n                }\r\n                \r\n            },\r\n        });\r\n\r\n        // @ts-ignore\r\n        if (updateTagRes && updateTagRes.status === 'ok') {\r\n            setTagDetailData({\r\n                id:values.id,\r\n                key:values.id,\r\n                name: values.name,\r\n                description: values.description,\r\n            })\r\n            console.log('categoryupdateTagRes',updateTagRes);\r\n            openSuccessNotification();\r\n\t\t\tsetTagEditVisible(false)\r\n\r\n            // const positionInTag = () => {\r\n            //     return tagList.map(item => item.id).indexOf(category.id);\r\n            // }\r\n\r\n            // const index = positionInTag();\r\n\r\n            // const updatedItem = Object.assign({}, tagList[index], { ...updateTagRes });\r\n            // const updateTagList = [...tagList.slice(0, index), updatedItem, ...tagList.slice(index + 1)];\r\n            // setTagList(updateTagList);\r\n\r\n        }\r\n        else {\r\n            openErrorNotification();\r\n        }\r\n\r\n        actions.setSubmitting(false);\r\n    };\r\n\r\n\r\n    const handleCancel = (e: any) => {\r\n        setTagEditVisible(false);\r\n    };\r\n\r\n\r\n    const getisSubmitButtonDisabled = (values, isValid) => {\r\n        if (!values.name || !isValid) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }; \r\n\r\n\r\n    // useEffect(()=>{\r\n\r\n    //     if(tagDetailData && Object.keys(tagDetailData).length > 0){\r\n    //         const metaTags = tagDetailData.metaTags.split(','); \r\n\r\n    //         console.log('localMetaTags',metaTags);\r\n           \r\n    //         const bnMetaTags = tagDetailData.bn['metaTags'].split(','); \r\n\r\n    //         setTags(metaTags)\r\n    //         setBnTags(bnMetaTags)\r\n    //     }\r\n\r\n    // },[]); \r\n\r\n\r\n    console.log('tagDetailData',tagDetailData);\r\n\r\n\r\n \r\n\r\n    return (\r\n        <Formik\r\n            onSubmit={(values, actions) => handleSubmit(values, actions)}\r\n            validationSchema={validationSchema}\r\n            validateOnBlur={false}\r\n            enableReinitialize={true}\r\n            initialValues={{\r\n                ...initialValues, \r\n                ...tagDetailData,\r\n                ...( tagDetailData && Object.keys(tagDetailData).length > 0 && {\r\n                    bnMetaTitle: tagDetailData['bn']\r\n                    && tagDetailData['bn'].metaTitle\r\n                    && tagDetailData['bn'].metaTitle,\r\n                    bnMetaDescription: tagDetailData['bn'] &&  tagDetailData['bn'].metaDescription && tagDetailData['bn'].metaDescription,\r\n                    bnName: tagDetailData['bn'] && tagDetailData['bn'].name && tagDetailData['bn'].name,\r\n                    bnDescription: tagDetailData['bn'] && tagDetailData['bn'].description && tagDetailData['bn'].description,\r\n                  })\r\n            }}\r\n        >\r\n            {({\r\n                handleChange,\r\n                values,\r\n                handleSubmit,\r\n                errors,\r\n                isValid,\r\n                isSubmitting,\r\n                touched,\r\n                handleBlur,\r\n                setFieldTouched,\r\n                handleReset,\r\n            }) => (\r\n                    <>\r\n                        <Modal\r\n                        \tstyle={{\r\n\t\t\t\t\t\t\t\ttop: '40px',\r\n\r\n\t\t\t\t\t\t\t}}\r\n                            title=\"Tag Edit\"\r\n                            visible={tagEditVisible}\r\n                            onOk={(e: any) => handleSubmit(e)}\r\n                            onCancel={handleCancel}\r\n                            okText='Update'\r\n\t\t\t\t\t\t\tokButtonProps={{\r\n\t\t\t\t\t\t\t\tloading: isSubmitting,\r\n\t\t\t\t\t\t\t\thtmlType: \"submit\",\r\n\t\t\t\t\t\t\t}}\r\n                        >\r\n                                 \t\t\t<Input\r\n\t\t\t\t\t\t\t\tlabel='Name'\r\n\t\t\t\t\t\t\t\tvalue={values.name}\r\n\t\t\t\t\t\t\t\tname='name'\r\n\t\t\t\t\t\t\t\tplaceHolder={'new,fresh'}\r\n\t\t\t\t\t\t\t\tisError={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateTagState.error['error']['name'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateTagState.error['error']['name'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('name');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\tlabel='BN Name'\r\n\t\t\t\t\t\t\t\tvalue={values.bnName}\r\n\t\t\t\t\t\t\t\tplaceHolder={'নতুন,ফ্রেশ'}\r\n\t\t\t\t\t\t\t\tname='bnName'\r\n\t\t\t\t\t\t\t\tisError={(touched.bnName && errors.bnName) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateTagState.error['error']['bnName'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.bnName && errors.bnName) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateTagState.error['error']['bnName'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('bnName');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\r\n\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\tlabel='Description'\r\n\t\t\t\t\t\t\t\tvalue={values.description}\r\n                                name='description'\r\n                                placeholder={'This tag...'}\r\n\t\t\t\t\t\t\t\tisError={(touched.description && errors.description) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateTagState.error['error']['description'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.description && errors.description) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateTagState.error['error']['description'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('description');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\tlabel='BN Description'\r\n\t\t\t\t\t\t\t\tvalue={values.bnDescription}\r\n\t\t\t\t\t\t\t\tplaceholder={'এই ট্যাগ...'}\r\n\t\t\t\t\t\t\t\tname='bnDescription'\r\n\t\t\t\t\t\t\t\tisError={(touched.bnDescription && errors.bnDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateTagState.error['error']['bnDescription'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.bnDescription && errors.bnDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateTagState.error['error']['bnDescription'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('bnDescription');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n                                \r\n<Input\r\n\t\t\t\t\t\t\t\tlabel='Meta title'\r\n\t\t\t\t\t\t\t\tvalue={values.metaTitle}\r\n\t\t\t\t\t\t\t\tplaceHolder={'category...'}\r\n\t\t\t\t\t\t\t\tname='metaTitle'\r\n\t\t\t\t\t\t\t\tisError={(touched.metaTitle && errors.metaTitle) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateTagState.error['error']['metaTitle'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.metaTitle && errors.metaTitle) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateTagState.error['error']['metaTitle'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('metaTitle')\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\tlabel='BN Meta title'\r\n\t\t\t\t\t\t\t\tvalue={values.bnMetaTitle}\r\n\t\t\t\t\t\t\t\tplaceHolder={'ক্যাটাগড়ি...'}\r\n\t\t\t\t\t\t\t\tname='bnMetaTitle'\r\n\t\t\t\t\t\t\t\tisError={(touched.bnMetaTitle && errors.bnMetaTitle) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateTagState.error['error']['bnMetaTitle'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.bnMetaTitle && errors.bnMetaTitle) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateTagState.error['error']['bnMetaTitle'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('bnMetaTitle');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\tlabel='Meta description'\r\n\t\t\t\t\t\t\t\tvalue={values.metaDescription}\r\n\t\t\t\t\t\t\t\tplaceholder={'meta...'}\r\n\t\t\t\t\t\t\t\tname='metaDescription'\r\n\t\t\t\t\t\t\t\tisError={(touched.metaDescription && errors.metaDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateTagState.error['error']['metaDescription'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.metaDescription && errors.metaDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateTagState.error['error']['metaDescription'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('metaDescription');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\tlabel='BN Meta Description'\r\n\t\t\t\t\t\t\t\tvalue={values.bnMetaDescription}\r\n\t\t\t\t\t\t\t\tplaceholder={'এইয় মেট...'}\r\n\t\t\t\t\t\t\t\tname='bnMetaDescription'\r\n\t\t\t\t\t\t\t\tisError={(touched.bnMetaDescription && errors.bnMetaDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateTagState.error['error']['bnMetaDescription'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.bnMetaDescription && errors.bnMetaDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateTagState.error['error']['bnMetaDescription'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('bnMetaDescription');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\tMeta Tags (grocery,fashion)\r\n\t\t\t\t\t\t\t</h3>\r\n\r\n\t\t\t\t\t\t\t<MetaTags\r\n\t\t\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\t\t\tsetTags={setTags}\r\n\t\t\t\t\t\t\ttags={tags}\r\n\t\t\t\t\t\t\t />\r\n\r\n\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\tmarginTop:'15px'\r\n\t\t\t\t\t\t\t}}></div>\r\n\r\n\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\tBN Meta Tags (মুদিখানা,ফ্যাশন)\r\n\t\t\t\t\t\t\t</h3>\r\n\r\n\t\t\t\t\t\t\t<MetaTags\r\n\t\t\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\t\t\tsetTags={setBnTags}\r\n\t\t\t\t\t\t\ttags={bnTags}\r\n\t\t\t\t\t\t\t />\r\n\r\n\r\n                        </Modal>\r\n\r\n                    </>\r\n                )}\r\n        </Formik>\r\n    );\r\n};\r\n\r\n\r\nexport default QuickEdit;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useParams, useHistory } from \"react-router\";\r\n\r\n\r\n// import hooks\r\nimport { useHandleFetch } from \"../../hooks\";\r\n\r\n// import lib\r\nimport {\r\n    FileOutlined,\r\n    InboxOutlined,\r\n    RadiusUpleftOutlined,\r\n    RadiusUprightOutlined,\r\n    RadiusBottomleftOutlined,\r\n    RadiusBottomrightOutlined,\r\n    PlusOutlined,\r\n    DeleteOutlined,\r\n    EditOutlined,\r\n    CheckCircleOutlined\r\n} from '@ant-design/icons';\r\n\r\nimport { Skeleton, Empty, Popconfirm, Upload, message, Switch, Select, Button, notification, Table, Space, Input as CoolInput, Tooltip, Modal } from 'antd';\r\n\r\n\r\n// import components\r\nimport { DataTableSkeleton } from \"../../components/Placeholders\";\r\nimport TagEdit from \"./TagEdit\";\r\n\r\n\r\nconst { Column, ColumnGroup } = Table;\r\nconst { Search } = CoolInput;\r\n\r\n\r\ninterface Props {\r\n    productRecord?: any;\r\n}\r\n\r\nconst NewBrandDetail = (props: Props) => {\r\n    const [tagDetailState, handleTagDetailFetch] = useHandleFetch({}, 'tagDetail');\r\n    const [tagProductsState, handleTagProductsFetch] = useHandleFetch({}, 'tagProducts');\r\n    const [tagEditVisible, setTagEditVisible] = useState(false);\r\n    const [tagDetailData,setTagDetailData] = useState({}); \r\n\r\n\r\n    const params = useParams();\r\n    const history = useHistory();\r\n    const tagId = params['id'];\r\n\r\n    useEffect(() => {\r\n\r\n        const getBrandDetail = async () => {\r\n            const tagDetailRes =  await handleTagDetailFetch({\r\n                urlOptions: {\r\n                    placeHolders: {\r\n                        id: tagId\r\n                    }\r\n                }\r\n            }); \r\n\r\n            // @ts-ignore\r\n            if(tagDetailRes){\r\n                console.log('tagDetailRes',tagDetailRes);\r\n                // @ts-ignore\r\n                setTagDetailData(tagDetailRes);\r\n            }\r\n        };\r\n\r\n        getBrandDetail();\r\n\r\n    }, [tagId]);\r\n\r\n    useEffect(() => {\r\n        const getTagProducts = async () => {\r\n            await handleTagProductsFetch({\r\n                urlOptions: {\r\n                    placeHolders: {\r\n                        id: tagId\r\n                    }\r\n                }\r\n            })\r\n        };\r\n\r\n        getTagProducts();\r\n\r\n    }, [tagId]);\r\n\r\n\r\n\r\n\r\n    console.log('tagProductsState', tagProductsState);\r\n\r\n    console.log('brandParams', params);\r\n\r\n\r\n    return (\r\n        <div className='brandDetailContainer'>\r\n            <div className='brandDetailContainer__heading'>\r\n                <h3>\r\n                    Tag Detail\r\n                </h3>\r\n\r\n                {tagDetailState.done && tagDetailData && (Object.keys(tagDetailData).length > 0) && (\r\n                    <>\r\n                        <TagEdit\r\n                            tagEditVisible={tagEditVisible}\r\n                            setTagEditVisible={setTagEditVisible}\r\n                            tagDetailData={tagDetailData}\r\n                            setTagDetailData={setTagDetailData}\r\n                        />\r\n                        <Button\r\n                            onClick={() => setTagEditVisible(true)}\r\n                            type='link'\r\n                            icon={<EditOutlined />}\r\n                        >\r\n                            Edit\r\n                      </Button>\r\n                    </>\r\n                )}\r\n            </div>\r\n            <Skeleton\r\n                paragraph={{ rows: 2 }}\r\n                loading={tagDetailState.isLoading}>\r\n                {tagDetailState.done && tagDetailData && !(Object.keys(tagDetailData).length > 0) && (\r\n                    <Empty description='No Tag found' image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n                )}\r\n\r\n                {tagDetailState.done && tagDetailData && (Object.keys(tagDetailData).length > 0) && (\r\n                    <div className='brandDetailContainer__header'>\r\n\r\n                        <div className='brandDetailContainer__header-info'>\r\n                            <h2>\r\n                                {tagDetailData['name']}\r\n                            </h2>\r\n                            <h3>\r\n                                {tagDetailData['description']}\r\n                            </h3>\r\n                            {tagDetailData['url'] && (\r\n                                <h3>\r\n                                    URL:\r\n                                    <span>\r\n                                        {tagDetailData['url']}\r\n                                    </span>\r\n\r\n                                </h3>\r\n                            )}\r\n                        </div>\r\n                    </div>\r\n                )}\r\n\r\n            </Skeleton>\r\n\r\n            <div className='brandDetailContainer__heading'>\r\n                <h3>\r\n                    Products\r\n                </h3>\r\n            </div>\r\n            <div className='brandDetailContainer__body'>\r\n                {tagProductsState.isLoading && <DataTableSkeleton />}\r\n                {tagProductsState.done && !(tagProductsState.data.length > 0) && (\r\n                    <div style={{\r\n                        marginTop: '100px'\r\n                    }}>\r\n                        <Empty description='No Products exists for this tag' image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n                    </div>\r\n                )}\r\n\r\n                {tagProductsState.done && tagProductsState.data && tagProductsState.data.length > 0 && (\r\n                    <>\r\n                        <Table\r\n                            style={{\r\n                                paddingTop: '10px',\r\n                                borderRadius: '5px !important',\r\n                                overflow: 'hidden',\r\n                                boxShadow: '0 0.125rem 0.625rem rgba(227, 231, 250, 0.3), 0 0.0625rem 0.125rem rgba(206, 220, 233, 0.4)'\r\n                            }}\r\n                            // expandable={{\r\n                            //     expandedRowRender: record => <p style={{ margin: 0 }}>{record.name}</p>,\r\n                            //     rowExpandable: record => record.name !== 'Not Expandable',\r\n                            //   }}\r\n                            // bordered={true}\r\n                            size='small'\r\n                            // pagination={false}\r\n                            dataSource={tagProductsState.data}\r\n                            tableLayout={'auto'}\r\n                            onHeaderRow={column => {\r\n                                return {\r\n                                    style: {\r\n                                        color: 'red !important'\r\n                                    }\r\n\r\n                                };\r\n                            }}\r\n                        >\r\n                            <Column\r\n                                title=\"\"\r\n                                dataIndex=\"cover\"\r\n                                key=\"id\"\r\n                                width={'80px'}\r\n\r\n                                className='classnameofthecolumn'\r\n\r\n                                render={(cover, record: any) => (\r\n                                    <>\r\n                                        <img\r\n                                            onClick={() => {\r\n                                                history.push(`/admin/product/${record.id}`)\r\n                                            }}\r\n                                            src={cover} alt='cover img' style={{\r\n                                                height: '40px',\r\n                                                width: '40px',\r\n                                                objectFit: \"contain\",\r\n                                                borderRadius: '3px',\r\n                                                cursor: 'pointer'\r\n                                            }} />\r\n\r\n\r\n\r\n\r\n                                    </>\r\n                                )}\r\n                            />\r\n\r\n                            <Column\r\n                                title=\"Name\"\r\n                                dataIndex=\"name\"\r\n                                key=\"id\"\r\n                                className='classnameofthecolumn'\r\n                                render={(text, record: any) => (\r\n                                    <>\r\n                                        <h4\r\n                                            onClick={() => {\r\n                                                history.push(`/admin/product/${record.id}`)\r\n                                            }}\r\n                                            style={{\r\n                                                fontWeight: 400,\r\n                                                color: '#555',\r\n                                                cursor: 'pointer'\r\n\r\n                                            }}>\r\n                                            {text}\r\n                                        </h4>\r\n\r\n\r\n                                    </>\r\n                                )}\r\n\r\n                            />\r\n\r\n                            <Column\r\n                                title=\"Offer Price\"\r\n                                dataIndex=\"offerPrice\"\r\n                                key=\"id\"\r\n                                className='classnameofthecolumn'\r\n\r\n                            />\r\n\r\n\r\n                            <Column\r\n                                title=\"Price\"\r\n                                dataIndex=\"price\"\r\n                                key=\"id\"\r\n                                className='classnameofthecolumn'\r\n\r\n                            />\r\n\r\n\r\n                            <Column\r\n                                title=\"Available\"\r\n                                dataIndex=\"available\"\r\n                                key=\"id\"\r\n                                className='classnameofthecolumn'\r\n\r\n                            />\r\n\r\n\r\n                            <Column\r\n                                title=\"Minimum\"\r\n                                dataIndex=\"minimum\"\r\n                                key=\"id\"\r\n                                className='classnameofthecolumn'\r\n\r\n                            />\r\n\r\n                        </Table>\r\n                    </>\r\n                )}\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NewBrandDetail\r\n","import React, { useState } from 'react';\r\nimport { Modal, notification } from 'antd';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport { useHandleFetch } from '../../hooks';\r\nimport { CheckCircleOutlined, PlusOutlined, EditOutlined, DeleteOutlined, EditFilled } from '@ant-design/icons';\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    name: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n    description: Yup.string().label('Description').required('Description is required')\r\n});\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Coupon Updated',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Something Went Wrong',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n    });\r\n};\r\n\r\n\r\ninterface Props {\r\n    tagEditVisible?: any;\r\n    setTagEditVisible?: any;\r\n    tagDetailData?: any;\r\n}\r\n\r\nconst QuickEdit = ({ tagEditVisible, setTagEditVisible, tagDetailData }: Props) => {\r\n    const [updateTagState, handleUpdateCategoryFetch] = useHandleFetch({}, 'updateCoupon');\r\n\r\n    const handleSubmit = async (values: any, actions: any) => {\r\n        const updateTagRes = await handleUpdateCategoryFetch({\r\n            urlOptions: {\r\n                placeHolders: {\r\n                    id: values.id,\r\n                }\r\n            },\r\n            body: {\r\n                name: values.name,\r\n                description: values.description,\r\n            },\r\n        });\r\n\r\n        // @ts-ignore\r\n        if (updateTagRes && updateTagRes.status === 'ok') {\r\n            openSuccessNotification();\r\n\r\n            // const positionInTag = () => {\r\n            //     return tagList.map(item => item.id).indexOf(category.id);\r\n            // }\r\n\r\n            // const index = positionInTag();\r\n\r\n            // const updatedItem = Object.assign({}, tagList[index], { ...updateTagRes });\r\n            // const updateTagList = [...tagList.slice(0, index), updatedItem, ...tagList.slice(index + 1)];\r\n            // setTagList(updateTagList);\r\n\r\n        }\r\n        else {\r\n            openErrorNotification();\r\n        }\r\n\r\n        actions.setSubmitting(false);\r\n        setTagEditVisible(false)\r\n    };\r\n\r\n\r\n    const handleCancel = (e: any) => {\r\n        setTagEditVisible(false);\r\n    };\r\n\r\n\r\n    const getisSubmitButtonDisabled = (values, isValid) => {\r\n        if (!values.name || !values.description || !isValid) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    return (\r\n        <Formik\r\n            onSubmit={(values, actions) => handleSubmit(values, actions)}\r\n            validationSchema={validationSchema}\r\n            validateOnBlur={false}\r\n            enableReinitialize={true}\r\n            initialValues={\r\n                { ...tagDetailData }\r\n            }\r\n        >\r\n            {({\r\n                handleChange,\r\n                values,\r\n                handleSubmit,\r\n                errors,\r\n                isValid,\r\n                isSubmitting,\r\n                touched,\r\n                handleBlur,\r\n                setFieldTouched,\r\n                handleReset,\r\n            }) => (\r\n                    <>\r\n                        <Modal\r\n                            title=\"Coupon Edit\"\r\n                            visible={tagEditVisible}\r\n                            onOk={(e: any) => handleSubmit(e)}\r\n                            onCancel={handleCancel}\r\n                            okText='Update'\r\n                            okButtonProps={{\r\n                                loading: isSubmitting,\r\n                                htmlType: \"submit\",\r\n                                disabled: getisSubmitButtonDisabled(values, isValid)\r\n                            }}\r\n                        >\r\n                            <Input\r\n                                label='Title'\r\n                                value={values.name}\r\n                                name='name'\r\n                                isError={(touched.name && errors.name) ||\r\n                                    (!isSubmitting && updateTagState.error['error']['name'])}\r\n\r\n                                errorString={(touched.name && errors.name) ||\r\n                                    (!isSubmitting && updateTagState.error['error']['name'])}\r\n                                onChange={(e: any) => {\r\n                                    handleChange(e);\r\n                                    setFieldTouched('name');\r\n                                }}\r\n                            />\r\n                            <TextArea\r\n                                label='Description'\r\n                                value={values.description}\r\n                                name='description'\r\n                                isError={(touched.description && errors.description) ||\r\n                                    (!isSubmitting && updateTagState.error['error']['description'])}\r\n\r\n                                errorString={(touched.description && errors.description) ||\r\n                                    (!isSubmitting && updateTagState.error['error']['description'])}\r\n                                onChange={(e: any) => {\r\n                                    handleChange(e);\r\n                                    setFieldTouched('description');\r\n                                }}\r\n                            />\r\n                        </Modal>\r\n\r\n                    </>\r\n                )}\r\n        </Formik>\r\n    );\r\n};\r\n\r\n\r\nexport default QuickEdit;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useParams, useHistory } from \"react-router\";\r\n\r\n\r\n// import hooks\r\nimport { useHandleFetch } from \"../../hooks\";\r\n\r\n// import lib\r\nimport {\r\n    FileOutlined,\r\n    InboxOutlined,\r\n    RadiusUpleftOutlined,\r\n    RadiusUprightOutlined,\r\n    RadiusBottomleftOutlined,\r\n    RadiusBottomrightOutlined,\r\n    PlusOutlined,\r\n    DeleteOutlined,\r\n    EditOutlined,\r\n    CheckCircleOutlined\r\n} from '@ant-design/icons';\r\n\r\nimport { Skeleton, Empty, Button, notification, Table, Space, Input as CoolInput, Tooltip, Modal } from 'antd';\r\n\r\n\r\n// import components\r\nimport { DataTableSkeleton } from \"../../components/Placeholders\";\r\nimport CouponEdit from \"./CouponEdit\";\r\nimport CouponProducts from \"./CouponProducts\";\r\nimport  moment from 'moment'\r\n\r\n\r\nconst { Column, ColumnGroup } = Table;\r\nconst { Search } = CoolInput;\r\n\r\n\r\ninterface Props {\r\n    productRecord?: any;\r\n}\r\n\r\nconst NewBrandDetail = (props: Props) => {\r\n    const [tagDetailState, handleTagDetailFetch] = useHandleFetch({}, 'couponDetail');\r\n    const [tagProductsState, handleTagProductsFetch] = useHandleFetch({}, 'tagProducts');\r\n    const [tagEditVisible, setTagEditVisible] = useState(false);\r\n\r\n\r\n    const params = useParams();\r\n    const history = useHistory();\r\n    const tagId = params['id'];\r\n\r\n    useEffect(() => {\r\n\r\n        const getBrandDetail = async () => {\r\n            await handleTagDetailFetch({\r\n                urlOptions: {\r\n                    placeHolders: {\r\n                        id: tagId\r\n                    }\r\n                }\r\n            })\r\n        };\r\n\r\n        getBrandDetail();\r\n\r\n    }, [tagId]);\r\n\r\n\r\n\r\n\r\n\r\n\r\n    console.log('tagDetailState', tagDetailState);\r\n\r\n    console.log('brandParams', params);\r\n\r\n\r\n    return (\r\n        <div className='brandDetailContainer'>\r\n            <div className='brandDetailContainer__heading'>\r\n                <h3>\r\n                    Coupon Detail\r\n                </h3>\r\n\r\n                {tagDetailState.done && tagDetailState.data && (Object.keys(tagDetailState.data).length > 0) && (\r\n                    <>\r\n                        <CouponEdit\r\n                            tagEditVisible={tagEditVisible}\r\n                            setTagEditVisible={setTagEditVisible}\r\n                            tagDetailData={tagDetailState.data}\r\n                        />\r\n                        <Button\r\n                            onClick={() => setTagEditVisible(true)}\r\n                            type='link'\r\n                            icon={<EditOutlined />}\r\n                        >\r\n                            Edit\r\n                      </Button>\r\n                    </>\r\n                )}\r\n            </div>\r\n            <Skeleton\r\n                paragraph={{ rows: 2 }}\r\n                loading={tagDetailState.isLoading}>\r\n                {tagDetailState.done && tagDetailState.data && !(Object.keys(tagDetailState.data).length > 0) && (\r\n                    <Empty description='No Coupon found' image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n                )}\r\n\r\n                {tagDetailState.done && tagDetailState.data && (Object.keys(tagDetailState.data).length > 0) && (\r\n                    <div className='brandDetailContainer__header'>\r\n\r\n                        <div className='brandDetailContainer__header-info'>\r\n                            <h2>\r\n                                {tagDetailState.data['name']}\r\n                            </h2>\r\n                            <h3>\r\n                                {tagDetailState.data['description']}\r\n                            </h3>\r\n                            {tagDetailState.data['code'] && (\r\n                                <h3>\r\n                                    CODE:\r\n                                    <span>\r\n                                        {tagDetailState.data['code']}\r\n                                    </span>\r\n\r\n                                </h3>\r\n                            )}\r\n                          \r\n\r\n                            {tagDetailState.data['amount'] && (\r\n                                <h3>\r\n                                    AMOUT:\r\n                                    <span>\r\n                                        {tagDetailState.data['amount']}\r\n                                    </span>\r\n\r\n                                </h3>\r\n                            )}\r\n\r\n\r\n                            {tagDetailState.data['startDate'] && (\r\n                                <h3>\r\n                                    START DATE:\r\n                                    <span>\r\n                                    {moment(tagDetailState.data['startDate']).format('MMMM Do YYYY, h:mm:ss a')}\r\n                                    </span>\r\n\r\n                                </h3>\r\n                            )}\r\n\r\n\r\n\r\n                            {tagDetailState.data['endDate'] && (\r\n                                <h3>\r\n                                    END DATE:\r\n                                    <span>\r\n                                    {moment(tagDetailState.data['endDate']).format('MMMM Do YYYY, h:mm:ss a')}\r\n                                    </span>\r\n\r\n                                </h3>\r\n                            )}\r\n                        </div>\r\n                    </div>\r\n                )}\r\n\r\n            </Skeleton>\r\n\r\n            <div className='brandDetailContainer__heading'>\r\n                <h3>\r\n                    Ordered Products\r\n                </h3>\r\n            </div>\r\n            <div className='brandDetailContainer__body'>\r\n                {tagProductsState.isLoading && <DataTableSkeleton />}\r\n                {tagDetailState.done && tagDetailState.data && tagDetailState.data['orderedProducts'] && !(tagDetailState.data['orderedProducts'].length > 0) && (\r\n                    <div style={{\r\n                        marginTop: '100px'\r\n                    }}>\r\n                        <Empty description='No Products exists for this coupon' image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n                    </div>\r\n\r\n                )}\r\n\r\n                {tagDetailState.done && tagDetailState.data && Object.keys(tagDetailState.data).length > 0 && (\r\n                    <>\r\n                        {tagDetailState.data['orderedProducts'] && tagDetailState.data['orderedProducts'].length > 0 &&\r\n                            tagDetailState.data['orderedProducts'].map(product => {\r\n                                return (\r\n                                    <CouponProducts productId={product['_id']} />\r\n                                )\r\n                            })}\r\n                    </>\r\n                )}\r\n\r\n\r\n            </div>\r\n            {/* {tagDetailState.done && tagDetailState.data && Object.keys(tagDetailState.data).length > 0 && tagDetailState.data['freeProducts'] && (\r\n                <div className='brandDetailContainer__heading'>\r\n                    <h3>\r\n                        Free Products\r\n                       </h3>\r\n                </div>\r\n            )\r\n            }\r\n\r\n            <div className='brandDetailContainer__body'>\r\n                {tagProductsState.isLoading && <DataTableSkeleton />}\r\n                {tagDetailState.done && tagDetailState.data && tagDetailState.data['freeProducts'] && !(tagDetailState.data['freeProducts'].length > 0) && (\r\n                    <div style={{\r\n                        marginTop: '100px'\r\n                    }}>\r\n                        <Empty description='No Products exists for this coupon' image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n                    </div>\r\n                )}\r\n\r\n                {tagDetailState.done && tagDetailState.data && Object.keys(tagDetailState.data).length > 0 && (\r\n                    <>\r\n                        {tagDetailState.data['freeProducts'] && tagDetailState.data['freeProducts'].length > 0 &&\r\n                            tagDetailState.data['freeProducts'].map(product => {\r\n                                return (\r\n                                    <CouponProducts\r\n                                        quantity={product.quantity}\r\n                                        productId={product['_id']} />\r\n                                )\r\n                            })}\r\n                    </>\r\n                )}\r\n\r\n            </div> */}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NewBrandDetail\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useHandleFetch } from '../../hooks';\r\nimport { Select, Skeleton } from 'antd';\r\nimport Empty from \"../../components/Empty\";\r\n\r\n\r\ninterface Props {\r\n    setProductIds?: any;\r\n    productIds?: any;\r\n}\r\n\r\n\r\nconst Tags = ({\r\n    setProductIds,\r\n    productIds\r\n}: Props) => {\r\n    const [options, setoptions] = useState([]);\r\n    const [selectedOpions, setselectedOptions] = useState([]);\r\n    const [tagState, handleTagListFetch] = useHandleFetch({}, 'productList');\r\n\r\n    useEffect(() => {\r\n        const setTags = async () => {\r\n            const tagListRes = await handleTagListFetch({\r\n                urlOptions: {\r\n                    params: {\r\n                        isSubCategory: false\r\n                    }\r\n                }\r\n            });\r\n\r\n            // @ts-ignore\r\n            if (tagListRes && tagListRes.length > 0) {\r\n                // @ts-ignore\r\n                const tagOptions = tagListRes.map((tag) => {\r\n                    return tag.name\r\n                });\r\n                setoptions(tagOptions);\r\n            }\r\n\r\n        };\r\n\r\n        setTags();\r\n    }, []);\r\n\r\n\r\n\r\n    const handleChange = (selectItems) => {\r\n        setselectedOptions(selectItems);\r\n\r\n        console.log('selectedProducts', selectItems);\r\n\r\n        if (tagState.done && tagState.data.length > 0 && selectItems.length > 0) {\r\n            const selectedCategoryIds = selectItems.map((item) => {\r\n                const selectedcategory = tagState.data.find(\r\n                    (cat) => cat.name.toLowerCase() === item.toLowerCase()\r\n                );\r\n                if (selectedcategory) {\r\n                    return selectedcategory;\r\n                }\r\n            });\r\n            console.log('selectedCategoryIds', selectedCategoryIds);\r\n            setProductIds(selectedCategoryIds);\r\n        }\r\n        else {\r\n            setProductIds([])\r\n        }\r\n\r\n\r\n    }\r\n\r\n\r\n    // console.log('selectedOpions', selectedOpions);\r\n\r\n\r\n    return (\r\n        <>\r\n\r\n            <Skeleton loading={tagState.isLoading}>\r\n                {tagState.done && tagState.data.length > 0 && <Select\r\n                    mode=\"multiple\"\r\n                    placeholder=\"search products\"\r\n                    value={selectedOpions}\r\n                    onChange={handleChange}\r\n                    style={{ width: '100%' }}\r\n                >\r\n                    {options.filter(o => !selectedOpions.includes(o)).map(item => (\r\n                        <Select.Option key={item} value={item}>\r\n                            {item}\r\n                        </Select.Option>\r\n                    ))}\r\n                </Select>}\r\n                {tagState.done && tagState.data && !(tagState.data.length > 0) && (\r\n                    <div style={{\r\n                        marginLeft: '32px'\r\n                    }}>\r\n                        <Empty title='No Product Found' height={150} />\r\n                    </div>\r\n                )}\r\n\r\n            </Skeleton>\r\n\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Tags\r\n","import React from 'react'\r\n\r\n\r\n// import components\r\nimport AddNewOrderProductItem from \"../order/AddNewOrderProductItem\";\r\nimport Empty from \"../../components/Empty\";\r\n\r\nimport {\r\n    ShopOutlined\r\n} from '@ant-design/icons';\r\n\r\n\r\ninterface Props {\r\n    productList?: any;\r\n    setProductList?: any;\r\n}\r\n\r\nconst AddNewOrderSummary = ({\r\n    setProductList,\r\n    productList\r\n}: Props) => {\r\n    return (\r\n        <div\r\n            style={{\r\n                // @ts-ignore\r\n                flexDirection: 'flex'\r\n            }}\r\n            className='addOrderContainer__container-orderSummary'>\r\n            <div className='addOrderContainer__container-productItemContainer'>\r\n                {productList && productList.length > 0 && productList.map(item => {\r\n                    return <AddNewOrderProductItem\r\n                        setProductList={setProductList}\r\n                        productList={productList}\r\n                        productId={item._id}\r\n                        quantity={item.quantity}\r\n                        item={item}\r\n                        variation={item.variation}\r\n                    />;\r\n                })}\r\n\r\n                {!(productList.length > 0) && (\r\n                    <div style={{\r\n                        marginLeft: '32px'\r\n                    }}>\r\n                        <Empty title='No Product Added' height={150} />\r\n                    </div>\r\n                )}\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddNewOrderSummary\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n\r\nimport { useHandleFetch } from '../../hooks';\r\n\r\n\r\n// import third party ui lib\r\nimport { notification, Modal,Tooltip } from 'antd';\r\n\r\nimport {\r\n    FileOutlined,\r\n    InboxOutlined,\r\n    FileAddOutlined,\r\n    DeleteOutlined,\r\n    CheckCircleOutlined,\r\n    CloseOutlined,\r\n    CheckOutlined,\r\n    InfoCircleOutlined,\r\n    PlusOutlined,\r\n    FileImageFilled\r\n} from '@ant-design/icons';\r\n\r\n\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport MediaLibrary from \"../../components/MediaLibrary\";\r\nimport OrderedProductsSelectProducts from \"./OrderedProductsSelectProducts\";\r\nimport OrderedProductsSelectedProductItems from \"./OrderedProductsSelectedProductItems\";\r\nimport FreeSelectProducts from \"./FreeSelectProducts\";\r\nimport FreeSelectedProductItems from \"./FreeSelectedProductItems\";\r\n\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    name: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Coupon Updated',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n    notification.error({\r\n        message: message || 'Something Went Wrong',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst initialValues = {\r\n    \"name\": \"\",\r\n    \"code\": \"\",\r\n    \"minimumOrder\": null,\r\n    \"amount\": \"\",\r\n    \"amountType\": \"\",\r\n    \"orderedProducts\": [],\r\n    \"freeDelivery\": true,\r\n    \"freeProducts\": []\r\n}\r\n\r\n\r\n\r\ninterface Props {\r\n    addNewCategoryVisible?: any;\r\n    setAddNewCategoryVisible?: any;\r\n    tagList?: any;\r\n    setTagList?: any;\r\n    category?:any; \r\n\r\n}\r\n\r\nconst AddNewBrand = ({ addNewCategoryVisible, setAddNewCategoryVisible, tagList, setTagList, category }: Props) => {\r\n\r\n    const [addCouponState, handleAddCouponStateFetch] = useHandleFetch({}, 'updateCoupon');\r\n    const [myImages, setmyImages] = useState(false);\r\n    const [visibleMedia, setvisibleMedia] = useState(false);\r\n    const [coverImageId, setCoverImageId] = useState('');\r\n    const [productIds, setProductIds] = useState([]);\r\n    const [productList, setProductList] = useState([]);\r\n    const [freeProductIds, setFreeProductIds] = useState([]);\r\n    const [freeProductList, setFreeProductList] = useState([]);\r\n\r\n\r\n\r\n    const handleSubmit = async (values: any, actions: any) => {\r\n\r\n        // @ts-ignore\r\n\t\tconst imagesIds = myImages ? myImages.map(image => {\r\n\t\t\treturn image.id;\r\n        }) : [];\r\n        \r\n        const orderedProducts = productList.length > 0 ? productList.map(product => {\r\n            return {\r\n                _id: product._id,\r\n                variation: product.variation,\r\n                quantity: product.quantity,\r\n            }\r\n        }) : [];\r\n\r\n\r\n        // const freeProducts = freeProductList.length > 0 ? freeProductList.map(product => {\r\n        //     return {\r\n        //         _id: product._id,\r\n        //         variation: product.variation,\r\n        //         quantity: product.quantity,\r\n        //     }\r\n        // }) : [];\r\n\r\n\r\n        \r\n\r\n        const addTagRes = await handleAddCouponStateFetch({\r\n            urlOptions: {\r\n                placeHolders: {\r\n                    id: values.id,\r\n                }\r\n            },\r\n            body: {\r\n                name: values.name.trim(),\r\n                code: values.code,\r\n                minimumOrder: values.minimumOrder,\r\n                amount: values.amount,\r\n                amountType: values.amountType,\r\n                // freeDelivery: false,\r\n                orderedProducts: orderedProducts,\r\n                // freeProducts: freeProducts,\r\n                cover: coverImageId || imagesIds[0] ? imagesIds[0] : '',\r\n            },\r\n        });\r\n\r\n        // @ts-ignore\r\n        if (addTagRes && addTagRes.status === 'ok') {\r\n            openSuccessNotification();\r\n            setAddNewCategoryVisible(false);\r\n\r\n            const positionInTag = () => {\r\n\t\t\t\treturn tagList.map(item => item.id).indexOf(values.id);\r\n\t\t\t}\r\n\r\n\t\t\tconst index = positionInTag();\r\n\r\n\t\t\t// @ts-ignore\r\n\t\t\tconst updatedItem = Object.assign({}, tagList[index], { ...updateTagRes });\r\n\t\t\tconst updateTagList = [...tagList.slice(0, index), updatedItem, ...tagList.slice(index + 1)];\r\n\t\t\tsetTagList(updateTagList);\r\n\r\n            actions.resetForm();\r\n        }\r\n        else {\r\n            openErrorNotification();\r\n        }\r\n\r\n\r\n        actions.setSubmitting(false);\r\n\r\n    };\r\n\r\n\r\n    const handleCancel = (e: any) => {\r\n        setAddNewCategoryVisible(false);\r\n    };\r\n\r\n\r\n    const getisSubmitButtonDisabled = (values, isValid) => {\r\n        if (!values.name || !isValid) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        if (category && Object.keys(category).length > 0) {\r\n\r\n            const images = category.image;\r\n            if (images && images.length > 0) {\r\n                setmyImages(images);\r\n            }\r\n\r\n            if (category.cover && category.cover['id']) {\r\n                // @ts-ignore\r\n                setmyImages([category.cover]);\r\n                setCoverImageId(category.cover['id']);\r\n            }\r\n        }\r\n    }, [category]); \r\n\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        if (!addCouponState['isLoading']) {\r\n            const error = addCouponState['error'];\r\n            if (error['isError'] && Object.keys(error['error']).length > 0) {\r\n\r\n\r\n                const errors =\r\n                    Object.values(error['error']).length > 0\r\n                        ? Object.values(error['error'])\r\n                        : [];\r\n                errors.forEach((err, i) => {\r\n                    if (typeof err === 'string') {\r\n                        openErrorNotification(err)\r\n                    }\r\n                    else if (typeof err === 'object') {\r\n                        if (err && Object.keys(err).length > 0) {\r\n                            const errs = Object.values(err);\r\n                            errs.forEach(err => {\r\n                                openErrorNotification(err)\r\n                            })\r\n\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n        }\r\n    }, [addCouponState])\r\n\r\n\r\n    useEffect(()=>{\r\n        if(category && category['orderedProducts'] && category['orderedProducts'].length > 0){\r\n            const productIds = category['orderedProducts'].map(item => item); \r\n            setProductIds(productIds); \r\n            const productList = category.orderedProducts.map(item => {\r\n                return {\r\n                    _id: item._id,\r\n                    variation: item.variation,\r\n                    quantity: item.quantity,\r\n                }\r\n            }); \r\n           setProductList(productList);\r\n\r\n        }; \r\n        \r\n        console.log('customermy',category);\r\n    },[category])\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        if (productIds.length > 0) {\r\n            if (productIds.length > productList.length) {\r\n                const variation = productIds[productIds.length - 1]['pricing'].length > 0 && productIds[productIds.length - 1]['pricing'][0]['_id'];\r\n                console.log('variation', variation)\r\n\r\n                setProductList([...productList, {\r\n                    ...productIds[productIds.length - 1],\r\n                    _id: productIds[productIds.length - 1]['id'],\r\n                    variation: variation,\r\n                    quantity: 1\r\n                }]);\r\n            }\r\n\r\n\r\n            else if (productIds.length < productList.length) {\r\n                console.log('productIds', productIds);\r\n                console.log('productList', productList);\r\n\r\n                const newProductList = productList.filter(item => {\r\n                    let isTrue = false;\r\n                    productIds.forEach(product => {\r\n                        if (product.id === item._id) {\r\n                            isTrue = true;\r\n                        }\r\n                    });\r\n                    return isTrue;\r\n                })\r\n                setProductList(newProductList);\r\n\r\n            }\r\n\r\n        }\r\n        else {\r\n            setProductList([]);\r\n        }\r\n        // console.log('productIds', productIds)\r\n\r\n\r\n    }, [productIds])\r\n\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        if (freeProductIds.length > 0) {\r\n            if (freeProductIds.length > freeProductList.length) {\r\n                const variation = freeProductIds[freeProductIds.length - 1]['pricing'].length > 0 && freeProductIds[freeProductIds.length - 1]['pricing'][0]['_id'];\r\n                console.log('variation', variation)\r\n\r\n                setFreeProductList([...freeProductList, {\r\n                    ...freeProductIds[freeProductIds.length - 1],\r\n                    _id: freeProductIds[freeProductIds.length - 1]['id'],\r\n                    variation: variation,\r\n                    quantity: 1\r\n                }]);\r\n            }\r\n\r\n\r\n            else if (freeProductIds.length < freeProductList.length) {\r\n                console.log('freeProductIds', freeProductIds);\r\n                console.log('productList', productList);\r\n\r\n                const newProductList = freeProductList.filter(item => {\r\n                    let isTrue = false;\r\n                    freeProductIds.forEach(product => {\r\n                        if (product.id === item._id) {\r\n                            isTrue = true;\r\n                        }\r\n                    });\r\n                    return isTrue;\r\n                })\r\n                setFreeProductList(newProductList);\r\n\r\n            }\r\n\r\n        }\r\n        else {\r\n            setFreeProductList([]);\r\n        }\r\n        // console.log('freeProductIds', freeProductIds)\r\n\r\n\r\n    }, [freeProductIds])\r\n\r\n\r\n\r\n    const handleImagesDelete = (id) => {\r\n        // @ts-ignore\r\n        const newImages = myImages && myImages.filter(image => {\r\n            return image.id !== id;\r\n        })\r\n\r\n        setmyImages(newImages);\r\n    }\r\n\r\n\r\n\r\n\r\n    return (\r\n        <Formik\r\n            onSubmit={(values, actions) => handleSubmit(values, actions)}\r\n            validationSchema={validationSchema}\r\n            validateOnBlur={false}\r\n            enableReinitialize={true}\r\n            initialValues={\r\n                { ...initialValues, ...category }\r\n            }\r\n        >\r\n            {({\r\n                handleChange,\r\n                values,\r\n                handleSubmit,\r\n                errors,\r\n                isValid,\r\n                isSubmitting,\r\n                touched,\r\n                handleBlur,\r\n                setFieldTouched,\r\n                handleReset,\r\n            }) => (\r\n                    <>\r\n                        <Modal\r\n                            width={'45vw'}\r\n                            style={{\r\n                                top: '40px'\r\n                            }}\r\n                            title=\"Edit Coupon\"\r\n                            visible={addNewCategoryVisible}\r\n                            onOk={(e: any) => handleSubmit(e)}\r\n                            onCancel={handleCancel}\r\n                            okText='Update'\r\n                            okButtonProps={{\r\n                                loading: isSubmitting,\r\n                                htmlType: \"submit\",\r\n                                disabled: getisSubmitButtonDisabled(values, isValid)\r\n                            }}\r\n                        >\r\n\r\n                            <div className='dubbleRowInputs'>\r\n                                <div className='dubbleRowInputs__item'>\r\n                                    <Input\r\n                                        label='Name'\r\n                                        value={values.name}\r\n                                        name='name'\r\n                                        isError={(touched.name && errors.name) ||\r\n                                            (!isSubmitting && addCouponState.error['error']['name'])}\r\n\r\n                                        errorString={(touched.name && errors.name) ||\r\n                                            (!isSubmitting && addCouponState.error['error']['name'])}\r\n                                        onChange={(e: any) => {\r\n                                            handleChange(e);\r\n                                            setFieldTouched('name');\r\n                                        }}\r\n                                    />\r\n                                </div>\r\n                                <div className='dubbleRowInputs__item'>\r\n                                    <Input\r\n                                        label='Code'\r\n                                        value={values.code}\r\n                                        name='code'\r\n                                        isError={(touched.code && errors.code) ||\r\n                                            (!isSubmitting && addCouponState.error['error']['code'])}\r\n\r\n                                        errorString={(touched.code && errors.code) ||\r\n                                            (!isSubmitting && addCouponState.error['error']['code'])}\r\n                                        onChange={(e: any) => {\r\n                                            handleChange(e);\r\n                                            setFieldTouched('code');\r\n                                        }}\r\n                                    />\r\n                                </div>\r\n\r\n                            </div>\r\n\r\n                            <Input\r\n                                label='Minimum Order'\r\n                                value={values.minimumOrder}\r\n                                name='minimumOrder'\r\n                                isError={(touched.minimumOrder && errors.minimumOrder) ||\r\n                                    (!isSubmitting && addCouponState.error['error']['minimumOrder'])}\r\n\r\n                                errorString={(touched.minimumOrder && errors.minimumOrder) ||\r\n                                    (!isSubmitting && addCouponState.error['error']['minimumOrder'])}\r\n                                onChange={(e: any) => {\r\n                                    handleChange(e);\r\n                                    setFieldTouched('minimumOrder');\r\n                                }}\r\n                            />\r\n\r\n\r\n\r\n                            <div className='dubbleRowInputs'>\r\n                                <div className='dubbleRowInputs__item'>\r\n                                    <Input\r\n                                        label='Discount Amount'\r\n                                        value={values.amount}\r\n                                        name='amount'\r\n                                        isError={(touched.amount && errors.amount) ||\r\n                                            (!isSubmitting && addCouponState.error['error']['amount'])}\r\n\r\n                                        errorString={(touched.amount && errors.amount) ||\r\n                                            (!isSubmitting && addCouponState.error['error']['amount'])}\r\n                                        onChange={(e: any) => {\r\n                                            handleChange(e);\r\n                                            setFieldTouched('amount');\r\n                                        }}\r\n                                    />\r\n                                </div>\r\n                                <div className='dubbleRowInputs__item'>\r\n                                    <Input\r\n                                        label='Discount Amount Type'\r\n                                        value={values.amountType}\r\n                                        name='amountType'\r\n                                        isError={(touched.amountType && errors.amountType) ||\r\n                                            (!isSubmitting && addCouponState.error['error']['amountType'])}\r\n\r\n                                        errorString={(touched.amountType && errors.amountType) ||\r\n                                            (!isSubmitting && addCouponState.error['error']['amountType'])}\r\n                                        onChange={(e: any) => {\r\n                                            handleChange(e);\r\n                                            setFieldTouched('amountType');\r\n                                        }}\r\n                                    />\r\n                                </div>\r\n\r\n\r\n\r\n\r\n                            </div>\r\n\r\n\r\n\r\n                  \r\n\r\n\r\n\t\t\t\t\t\t\t<div className='addproductSection-left-header'\r\n\r\n\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\tmarginBottom: '-5px'\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n                                    Cover\r\n                                </h3>\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t<div className='aboutToUploadImagesContainer'>\r\n\t\t\t\t\t\t\t\t{myImages &&\r\n\t\t\t\t\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\t\t\t\t\tmyImages.length > 0 && myImages.map((image, index) => {\r\n\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='aboutToUploadImagesContainer__item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='aboutToUploadImagesContainer__item-imgContainer'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => setCoverImageId(image.id)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<img src={image.cover} alt={image.alt} />\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => handleImagesDelete(image.id)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='aboutToUploadImagesContainer__item-remove'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<CloseOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t{coverImageId === image.id ? (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<span className='aboutToUploadImagesContainer__item-cover'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<CheckOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t) : !coverImageId && index === 0 && (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<span className='aboutToUploadImagesContainer__item-cover'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<CheckOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t})}\r\n\r\n\r\n       \r\n\r\n\r\n                                { \r\n\t\t\t\t\t\t\t\t\t!myImages || \r\n\t\t\t\t\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\t\t\t\t\t(myImages && !(myImages && myImages.length > 0)) ? (\r\n\t\t\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t\t<Tooltip\r\n\t\t\t\t\t\t\t\t\ttitle={'Attach images'}>\r\n\r\n\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\t\t\tsetvisibleMedia(true);\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\tclassName='aboutToUploadImagesContainer__uploadItem'>\r\n\t\t\t\t\t\t\t\t\t\t<FileImageFilled />\r\n\t\t\t\t\t\t\t\t\t\t<span className='aboutToUploadImagesContainer__uploadItem-plus'>\r\n\t\t\t\t\t\t\t\t\t\t\t<PlusOutlined />\r\n\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t\t\t) : \"\"}\r\n                               \r\n                                \r\n\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\r\n              \r\n\r\n\r\n                            <h3 className='inputFieldLabel'>\r\n                                Ordered Products\r\n                                </h3>\r\n\r\n                            <OrderedProductsSelectProducts\r\n                                setProductIds={setProductIds}\r\n                                productIds={productIds}\r\n                            />\r\n\r\n                            <div style={{\r\n                                marginTop: \"15px\"\r\n                            }}></div>\r\n\r\n                            <h3 className='inputFieldLabel'>\r\n                                Selected Ordered Products\r\n                                </h3>\r\n\r\n                            <OrderedProductsSelectedProductItems\r\n                                productList={productList}\r\n                                setProductList={setProductList}\r\n                            />\r\n\r\n\r\n                            {/* <h3 className='inputFieldLabel'>\r\n                                Free Products\r\n                                </h3>\r\n\r\n                            <OrderedProductsSelectProducts\r\n                                setProductIds={setFreeProductIds}\r\n                                productIds={freeProductIds}\r\n                            />\r\n\r\n                            <div style={{\r\n                                marginTop: \"15px\"\r\n                            }}></div>\r\n\r\n                            <h3 className='inputFieldLabel'>\r\n                                Selected Free Products\r\n                                </h3>\r\n\r\n                            <OrderedProductsSelectedProductItems\r\n                                productList={freeProductList}\r\n                                setProductList={setFreeProductList}\r\n                            /> */}\r\n\r\n\r\n\r\n                        </Modal>\r\n\r\n                        <MediaLibrary\r\n                            setvisible={setvisibleMedia}\r\n                            visible={visibleMedia}\r\n                            setmyImages={setmyImages}\r\n                            myImages={myImages}\r\n                            isModalOpenForImages={false}\r\n\r\n                        />\r\n                    </>\r\n                )}\r\n        </Formik>\r\n    );\r\n};\r\n\r\nexport default AddNewBrand;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n\r\nimport { useHandleFetch } from '../../hooks';\r\n\r\n\r\n// import third party ui lib\r\nimport { notification, Modal,Tooltip } from 'antd';\r\n\r\nimport {\r\n    FileOutlined,\r\n    InboxOutlined,\r\n    FileAddOutlined,\r\n    DeleteOutlined,\r\n    CheckCircleOutlined,\r\n    CloseOutlined,\r\n    CheckOutlined,\r\n    InfoCircleOutlined,\r\n    PlusOutlined,\r\n    FileImageFilled\r\n} from '@ant-design/icons';\r\n\r\n\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport MediaLibrary from \"../../components/MediaLibrary\";\r\nimport OrderedProductsSelectProducts from \"./OrderedProductsSelectProducts\";\r\nimport OrderedProductsSelectedProductItems from \"./OrderedProductsSelectedProductItems\";\r\nimport FreeSelectProducts from \"./FreeSelectProducts\";\r\nimport FreeSelectedProductItems from \"./FreeSelectedProductItems\";\r\n\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    name: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Coupon Created',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n    notification.error({\r\n        message: message || 'Something Went Wrong',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst initialValues = {\r\n    \"name\": \"\",\r\n    \"code\": \"\",\r\n    \"minimumOrder\": null,\r\n    \"amount\": \"\",\r\n    \"amountType\": \"\",\r\n    \"orderedProducts\": [],\r\n    \"freeDelivery\": true,\r\n    \"freeProducts\": []\r\n}\r\n\r\n\r\n\r\ninterface Props {\r\n    addNewCategoryVisible?: any;\r\n    setAddNewCategoryVisible?: any;\r\n    tagList?: any;\r\n    setTagList?: any;\r\n\r\n}\r\n\r\nconst AddNewBrand = ({ addNewCategoryVisible, setAddNewCategoryVisible, tagList, setTagList }: Props) => {\r\n\r\n    const [addCouponState, handleAddCouponStateFetch] = useHandleFetch({}, 'addCoupon');\r\n    const [myImages, setmyImages] = useState(false);\r\n    const [visibleMedia, setvisibleMedia] = useState(false);\r\n    const [coverImageId, setCoverImageId] = useState('');\r\n    const [productIds, setProductIds] = useState([]);\r\n    const [productList, setProductList] = useState([]);\r\n    const [freeProductIds, setFreeProductIds] = useState([]);\r\n    const [freeProductList, setFreeProductList] = useState([]);\r\n\r\n\r\n\r\n    const handleSubmit = async (values: any, actions: any) => {\r\n\r\n        // @ts-ignore\r\n\t\tconst imagesIds = myImages ? myImages.map(image => {\r\n\t\t\treturn image.id;\r\n        }) : [];\r\n        \r\n        const orderedProducts = productList.length > 0 ? productList.map(product => {\r\n            return {\r\n                _id: product._id,\r\n                variation: product.variation,\r\n                quantity: product.quantity,\r\n            }\r\n        }) : [];\r\n\r\n\r\n        const freeProducts = freeProductList.length > 0 ? freeProductList.map(product => {\r\n            return {\r\n                _id: product._id,\r\n                variation: product.variation,\r\n                quantity: product.quantity,\r\n            }\r\n        }) : [];\r\n\r\n\r\n        const addTagRes = await handleAddCouponStateFetch({\r\n            urlOptions: {\r\n                placeHolders: {\r\n                    id: values.id,\r\n                }\r\n            },\r\n            body: {\r\n                name: values.name.trim(),\r\n                code: values.code,\r\n                minimumOrder: values.minimumOrder,\r\n                amount: values.amount,\r\n                amountType: values.amountType,\r\n                // freeDelivery: false,\r\n                orderedProducts: orderedProducts,\r\n                // freeProducts: freeProducts,\r\n                cover: coverImageId || imagesIds[0] ? imagesIds[0] : '',\r\n            },\r\n        });\r\n\r\n        // @ts-ignore\r\n        if (addTagRes && addTagRes.status === 'ok') {\r\n            openSuccessNotification();\r\n            setAddNewCategoryVisible(false);\r\n\r\n            setTagList([{\r\n                id: addTagRes['_id'] || '',\r\n                key: addTagRes['_id'] || '',\r\n                name: addTagRes['name'] || '',\r\n            },...tagList])\r\n\r\n            actions.resetForm();\r\n        }\r\n        else {\r\n            openErrorNotification();\r\n        }\r\n\r\n\r\n        actions.setSubmitting(false);\r\n\r\n    };\r\n\r\n\r\n    const handleCancel = (e: any) => {\r\n        setAddNewCategoryVisible(false);\r\n    };\r\n\r\n\r\n    const getisSubmitButtonDisabled = (values, isValid) => {\r\n        if (!values.name || !isValid) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        if (!addCouponState['isLoading']) {\r\n            const error = addCouponState['error'];\r\n            if (error['isError'] && Object.keys(error['error']).length > 0) {\r\n\r\n\r\n                const errors =\r\n                    Object.values(error['error']).length > 0\r\n                        ? Object.values(error['error'])\r\n                        : [];\r\n                errors.forEach((err, i) => {\r\n                    if (typeof err === 'string') {\r\n                        openErrorNotification(err)\r\n                    }\r\n                    else if (typeof err === 'object') {\r\n                        if (err && Object.keys(err).length > 0) {\r\n                            const errs = Object.values(err);\r\n                            errs.forEach(err => {\r\n                                openErrorNotification(err)\r\n                            })\r\n\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n        }\r\n    }, [addCouponState])\r\n\r\n\r\n\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        if (productIds.length > 0) {\r\n            if (productIds.length > productList.length) {\r\n                const variation = productIds[productIds.length - 1]['pricing'].length > 0 && productIds[productIds.length - 1]['pricing'][0]['_id'];\r\n                console.log('variation', variation)\r\n\r\n                setProductList([...productList, {\r\n                    ...productIds[productIds.length - 1],\r\n                    _id: productIds[productIds.length - 1]['id'],\r\n                    variation: variation,\r\n                    quantity: 1\r\n                }]);\r\n            }\r\n\r\n\r\n            else if (productIds.length < productList.length) {\r\n                console.log('productIds', productIds);\r\n                console.log('productList', productList);\r\n\r\n                const newProductList = productList.filter(item => {\r\n                    let isTrue = false;\r\n                    productIds.forEach(product => {\r\n                        if (product.id === item._id) {\r\n                            isTrue = true;\r\n                        }\r\n                    });\r\n                    return isTrue;\r\n                })\r\n                setProductList(newProductList);\r\n\r\n            }\r\n\r\n        }\r\n        else {\r\n            setProductList([]);\r\n        }\r\n        // console.log('productIds', productIds)\r\n\r\n\r\n    }, [productIds])\r\n\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        if (freeProductIds.length > 0) {\r\n            if (freeProductIds.length > freeProductList.length) {\r\n                const variation = freeProductIds[freeProductIds.length - 1]['pricing'].length > 0 && freeProductIds[freeProductIds.length - 1]['pricing'][0]['_id'];\r\n                console.log('variation', variation)\r\n\r\n                setFreeProductList([...freeProductList, {\r\n                    ...freeProductIds[freeProductIds.length - 1],\r\n                    _id: freeProductIds[freeProductIds.length - 1]['id'],\r\n                    variation: variation,\r\n                    quantity: 1\r\n                }]);\r\n            }\r\n\r\n\r\n            else if (freeProductIds.length < freeProductList.length) {\r\n                console.log('freeProductIds', freeProductIds);\r\n                console.log('productList', productList);\r\n\r\n                const newProductList = freeProductList.filter(item => {\r\n                    let isTrue = false;\r\n                    freeProductIds.forEach(product => {\r\n                        if (product.id === item._id) {\r\n                            isTrue = true;\r\n                        }\r\n                    });\r\n                    return isTrue;\r\n                })\r\n                setFreeProductList(newProductList);\r\n\r\n            }\r\n\r\n        }\r\n        else {\r\n            setFreeProductList([]);\r\n        }\r\n        // console.log('freeProductIds', freeProductIds)\r\n\r\n\r\n    }, [freeProductIds])\r\n\r\n\r\n\r\n    const handleImagesDelete = (id) => {\r\n        // @ts-ignore\r\n        const newImages = myImages && myImages.filter(image => {\r\n            return image.id !== id;\r\n        })\r\n\r\n        setmyImages(newImages);\r\n    }\r\n\r\n\r\n\r\n\r\n    return (\r\n        <Formik\r\n            onSubmit={(values, actions) => handleSubmit(values, actions)}\r\n            validationSchema={validationSchema}\r\n            validateOnBlur={false}\r\n            enableReinitialize={true}\r\n            initialValues={\r\n                { ...initialValues }\r\n            }\r\n        >\r\n            {({\r\n                handleChange,\r\n                values,\r\n                handleSubmit,\r\n                errors,\r\n                isValid,\r\n                isSubmitting,\r\n                touched,\r\n                handleBlur,\r\n                setFieldTouched,\r\n                handleReset,\r\n            }) => (\r\n                    <>\r\n                        <Modal\r\n                            width={'45vw'}\r\n                            style={{\r\n                                top: '40px'\r\n                            }}\r\n                            title=\"Add New Coupon\"\r\n                            visible={addNewCategoryVisible}\r\n                            onOk={(e: any) => handleSubmit(e)}\r\n                            onCancel={handleCancel}\r\n                            okText='Create'\r\n                            okButtonProps={{\r\n                                loading: isSubmitting,\r\n                                htmlType: \"submit\",\r\n                                disabled: getisSubmitButtonDisabled(values, isValid)\r\n                            }}\r\n                        >\r\n\r\n                            <div className='dubbleRowInputs'>\r\n                                <div className='dubbleRowInputs__item'>\r\n                                    <Input\r\n                                        label='Name'\r\n                                        value={values.name}\r\n                                        name='name'\r\n                                        isError={(touched.name && errors.name) ||\r\n                                            (!isSubmitting && addCouponState.error['error']['name'])}\r\n\r\n                                        errorString={(touched.name && errors.name) ||\r\n                                            (!isSubmitting && addCouponState.error['error']['name'])}\r\n                                        onChange={(e: any) => {\r\n                                            handleChange(e);\r\n                                            setFieldTouched('name');\r\n                                        }}\r\n                                    />\r\n                                </div>\r\n                                <div className='dubbleRowInputs__item'>\r\n                                    <Input\r\n                                        label='Code'\r\n                                        value={values.code}\r\n                                        name='code'\r\n                                        isError={(touched.code && errors.code) ||\r\n                                            (!isSubmitting && addCouponState.error['error']['code'])}\r\n\r\n                                        errorString={(touched.code && errors.code) ||\r\n                                            (!isSubmitting && addCouponState.error['error']['code'])}\r\n                                        onChange={(e: any) => {\r\n                                            handleChange(e);\r\n                                            setFieldTouched('code');\r\n                                        }}\r\n                                    />\r\n                                </div>\r\n\r\n                            </div>\r\n\r\n                            <Input\r\n                                label='Minimum Order'\r\n                                value={values.minimumOrder}\r\n                                name='minimumOrder'\r\n                                isError={(touched.minimumOrder && errors.minimumOrder) ||\r\n                                    (!isSubmitting && addCouponState.error['error']['minimumOrder'])}\r\n\r\n                                errorString={(touched.minimumOrder && errors.minimumOrder) ||\r\n                                    (!isSubmitting && addCouponState.error['error']['minimumOrder'])}\r\n                                onChange={(e: any) => {\r\n                                    handleChange(e);\r\n                                    setFieldTouched('minimumOrder');\r\n                                }}\r\n                            />\r\n\r\n\r\n\r\n                            <div className='dubbleRowInputs'>\r\n                                <div className='dubbleRowInputs__item'>\r\n                                    <Input\r\n                                        label='Discount Amount'\r\n                                        value={values.amount}\r\n                                        name='amount'\r\n                                        isError={(touched.amount && errors.amount) ||\r\n                                            (!isSubmitting && addCouponState.error['error']['amount'])}\r\n\r\n                                        errorString={(touched.amount && errors.amount) ||\r\n                                            (!isSubmitting && addCouponState.error['error']['amount'])}\r\n                                        onChange={(e: any) => {\r\n                                            handleChange(e);\r\n                                            setFieldTouched('amount');\r\n                                        }}\r\n                                    />\r\n                                </div>\r\n                                <div className='dubbleRowInputs__item'>\r\n                                    <Input\r\n                                        label='Discount Amount Type'\r\n                                        value={values.amountType}\r\n                                        name='amountType'\r\n                                        isError={(touched.amountType && errors.amountType) ||\r\n                                            (!isSubmitting && addCouponState.error['error']['amountType'])}\r\n\r\n                                        errorString={(touched.amountType && errors.amountType) ||\r\n                                            (!isSubmitting && addCouponState.error['error']['amountType'])}\r\n                                        onChange={(e: any) => {\r\n                                            handleChange(e);\r\n                                            setFieldTouched('amountType');\r\n                                        }}\r\n                                    />\r\n                                </div>\r\n\r\n\r\n\r\n\r\n                            </div>\r\n\r\n\r\n\r\n                  \r\n\r\n\r\n\t\t\t\t\t\t\t<div className='addproductSection-left-header'\r\n\r\n\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\tmarginBottom: '-5px'\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n                                    Cover\r\n                                </h3>\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t<div className='aboutToUploadImagesContainer'>\r\n\t\t\t\t\t\t\t\t{myImages &&\r\n\t\t\t\t\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\t\t\t\t\tmyImages.length > 0 && myImages.map((image, index) => {\r\n\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='aboutToUploadImagesContainer__item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='aboutToUploadImagesContainer__item-imgContainer'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => setCoverImageId(image.id)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<img src={image.cover} alt={image.alt} />\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => handleImagesDelete(image.id)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='aboutToUploadImagesContainer__item-remove'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<CloseOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t{coverImageId === image.id ? (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<span className='aboutToUploadImagesContainer__item-cover'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<CheckOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t) : !coverImageId && index === 0 && (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<span className='aboutToUploadImagesContainer__item-cover'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<CheckOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t})}\r\n\r\n\r\n       \r\n\r\n\r\n                                { \r\n\t\t\t\t\t\t\t\t\t!myImages || \r\n\t\t\t\t\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\t\t\t\t\t(myImages && !(myImages && myImages.length > 0)) ? (\r\n\t\t\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t\t<Tooltip\r\n\t\t\t\t\t\t\t\t\ttitle={'Attach images'}>\r\n\r\n\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\t\t\tsetvisibleMedia(true);\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\tclassName='aboutToUploadImagesContainer__uploadItem'>\r\n\t\t\t\t\t\t\t\t\t\t<FileImageFilled />\r\n\t\t\t\t\t\t\t\t\t\t<span className='aboutToUploadImagesContainer__uploadItem-plus'>\r\n\t\t\t\t\t\t\t\t\t\t\t<PlusOutlined />\r\n\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t\t\t) : \"\"}\r\n                               \r\n                                \r\n\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\r\n              \r\n\r\n\r\n                            <h3 className='inputFieldLabel'>\r\n                                Ordered Products\r\n                                </h3>\r\n\r\n                            <OrderedProductsSelectProducts\r\n                                setProductIds={setProductIds}\r\n                                productIds={productIds}\r\n                            />\r\n\r\n                            <div style={{\r\n                                marginTop: \"15px\"\r\n                            }}></div>\r\n\r\n                            <h3 className='inputFieldLabel'>\r\n                                Selected Ordered Products\r\n                                </h3>\r\n\r\n                            <OrderedProductsSelectedProductItems\r\n                                productList={productList}\r\n                                setProductList={setProductList}\r\n                            />\r\n\r\n\r\n                            {/* <h3 className='inputFieldLabel'>\r\n                                Free Products\r\n                                </h3>\r\n\r\n                            <OrderedProductsSelectProducts\r\n                                setProductIds={setFreeProductIds}\r\n                                productIds={freeProductIds}\r\n                            />\r\n\r\n                            <div style={{\r\n                                marginTop: \"15px\"\r\n                            }}></div>\r\n\r\n                            <h3 className='inputFieldLabel'>\r\n                                Selected Free Products\r\n                                </h3>\r\n\r\n                            <OrderedProductsSelectedProductItems\r\n                                productList={freeProductList}\r\n                                setProductList={setFreeProductList}\r\n                            /> */}\r\n\r\n\r\n\r\n                        </Modal>\r\n\r\n                        <MediaLibrary\r\n                            setvisible={setvisibleMedia}\r\n                            visible={visibleMedia}\r\n                            setmyImages={setmyImages}\r\n                            myImages={myImages}\r\n                            isModalOpenForImages={false}\r\n\r\n                        />\r\n                    </>\r\n                )}\r\n        </Formik>\r\n    );\r\n};\r\n\r\nexport default AddNewBrand;\r\n","import React, { useState, useEffect } from 'react';\r\n\r\n// import third party ui lib\r\nimport { Empty, Popconfirm, Upload, message, Switch, Select, Button, notification, Table, Space, Input as CoolInput, Tooltip, Modal } from 'antd';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { useHistory } from 'react-router';\r\nimport Moment from 'react-moment'\r\n\r\n\r\nimport {\r\n    FileOutlined,\r\n    InboxOutlined,\r\n    RadiusUpleftOutlined,\r\n    RadiusUprightOutlined,\r\n    RadiusBottomleftOutlined,\r\n    RadiusBottomrightOutlined,\r\n    PlusOutlined,\r\n    DeleteOutlined,\r\n    EditOutlined,\r\n    CheckCircleOutlined\r\n} from '@ant-design/icons';\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n\r\n\r\n/// import hooks\r\nimport { useFetch, useHandleFetch } from \"../../hooks\";\r\n\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport { DataTableSkeleton } from \"../../components/Placeholders\";\r\nimport CouponQuickEdit from \"./CouponQuickEdit\"\r\nimport AddNewCoupon from \"./AddNewCoupon\"\r\nimport moment from 'moment'\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Coupon Created',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n    notification.error({\r\n        message: message || 'Something Went Wrong',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n    });\r\n};\r\n\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    name: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\n\r\nconst initialValues = {\r\n    name: '',\r\n    description: ''\r\n}\r\n\r\n\r\nconst { Column, ColumnGroup } = Table;\r\nconst { Search } = CoolInput;\r\n\r\n\r\n\r\nconst MyTable = ({ data, setTagList }) => {\r\n    const [visible, setvisible] = useState(false);\r\n    const [activeCategoryForEdit, setactiveCategoryForEdit] = useState(false);\r\n    const [deleteTagState, handleDeleteTagFetch] = useHandleFetch({}, 'deleteCoupon');\r\n\r\n    const history = useHistory();\r\n\r\n\r\n    const handleDeleteTag = async (id) => {\r\n        const deleteTagRes = await handleDeleteTagFetch({\r\n            urlOptions: {\r\n                placeHolders: {\r\n                    id,\r\n                }\r\n            }\r\n        });\r\n\r\n        // @ts-ignore\r\n        if (deleteTagRes && deleteTagRes.status === 'ok') {\r\n            openSuccessNotification('Deleted Coupon');\r\n            const newtagList = data.filter(item => item.id !== id);\r\n            setTagList(newtagList);\r\n        }\r\n\r\n    }\r\n\r\n    const handleOk = (e: any) => {\r\n        setvisible(false);\r\n\r\n    };\r\n\r\n    const handleCancel = (e: any) => {\r\n        setvisible(false);\r\n    };\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <Table\r\n                // expandable={{\r\n                //     expandedRowRender: record => <p style={{ margin: 0 }}>{record.name}</p>,\r\n                //     rowExpandable: record => record.name !== 'Not Expandable',\r\n                //   }}\r\n                // bordered={true}\r\n                size='small'\r\n                // pagination={false}\r\n                dataSource={data}\r\n            >\r\n\r\n\r\n                    <Column\r\n                    title=\"\"\r\n                    dataIndex=\"cover\"\r\n                    key=\"id\"\r\n                    width={'80px'}\r\n                    className='classnameofthecolumn'\r\n                    render={(cover, record: any) => (\r\n                        <>\r\n                        <img\r\n                            onClick={() => {\r\n                            history.push(`/admin/coupon/${record.id}`)\r\n                            setactiveCategoryForEdit(record)\r\n                            }}\r\n                            src={cover} alt='cover img' style={{\r\n                            height: '40px',\r\n                            width: '40px',\r\n                            objectFit: \"contain\",\r\n                            borderRadius: '3px',\r\n                            cursor: 'pointer'\r\n                            }} />\r\n                        </>\r\n                    )}\r\n              />\r\n\r\n\r\n                <Column\r\n                    title=\"Name\"\r\n                    dataIndex=\"name\"\r\n                    key=\"id\"\r\n                    className='classnameofthecolumn'\r\n                    render={(text, record: any) => (\r\n                        <>\r\n\r\n                            <h4\r\n                                onClick={() => {\r\n                                    history.push(`/admin/coupon/${record.id}`)\r\n                                    // setBrandDetailVisible(true);\r\n                                    setactiveCategoryForEdit(record)\r\n                                }}\r\n                                style={{\r\n                                    fontWeight: 400,\r\n                                    color: '#555',\r\n                                    cursor: 'pointer'\r\n                                }}>\r\n                                {text}\r\n                            </h4>\r\n\r\n\r\n                        </>\r\n                    )}\r\n                />\r\n\r\n                <Column\r\n                    title=\"Code\"\r\n                    dataIndex=\"code\"\r\n                    key=\"id\"\r\n                    className='classnameofthecolumn'\r\n\r\n                />\r\n\r\n                \r\n                <Column\r\n                    title=\"Discount\"\r\n                    dataIndex=\"amount\"\r\n                    key=\"id\"\r\n                    className='classnameofthecolumn'\r\n\r\n                />\r\n\r\n\r\n\r\n                {/* <Column\r\n                    title=\"Order Products\"\r\n                    dataIndex=\"orderedProductsCount\"\r\n                    key=\"id\"\r\n                    className='classnameofthecolumn'\r\n\r\n                /> */}\r\n\r\n                <Column\r\n                    title=\"Order Products\"\r\n                    dataIndex=\"orderedProductsCount\"\r\n                    key=\"id\"\r\n                    className='classnameofthecolumn'\r\n\r\n                />\r\n\r\n\r\n                {/* <Column\r\n                    title=\"Free Products\"\r\n                    dataIndex=\"freeProductsCount\"\r\n                    key=\"id\"\r\n                    className='classnameofthecolumn'\r\n                /> */}\r\n\r\n                <Column\r\n                    width={150}\r\n                    title=\"Start Date\"\r\n                    dataIndex=\"startDate\"\r\n                    key=\"id\"\r\n                    className='classnameofthecolumn'\r\n\r\n                    render={(text, record: any) => (\r\n                        <>\r\n\r\n                            <h4\r\n                                style={{\r\n                                    fontWeight: 400,\r\n                                    color: '#555',\r\n                                    cursor: 'pointer',\r\n                                    fontSize: '13px'\r\n                                }}>\r\n                                    \r\n                                    {text && moment(text).format('MMMM Do YYYY, h:mm:ss a')}\r\n                            </h4>\r\n\r\n\r\n                        </>\r\n                    )}\r\n\r\n\r\n                />\r\n\r\n                <Column\r\n                     width={150}\r\n                    title=\"End Date\"\r\n                    dataIndex=\"endDate\"\r\n                    key=\"id\"\r\n                    className='classnameofthecolumn'\r\n\r\n                    render={(text, record: any) => (\r\n                        <>\r\n\r\n                            <h4\r\n                                style={{\r\n                                    fontWeight: 400,\r\n                                    color: '#555',\r\n                                    cursor: 'pointer'\r\n                                }}>\r\n                                    {text && moment(text).format('MMMM Do YYYY, h:mm:ss a')}\r\n                               \r\n                            </h4>\r\n                        </>\r\n                    )}\r\n\r\n                />\r\n\r\n                <Column\r\n\r\n                    className='classnameofthecolumn'\r\n                    title=\"\"\r\n                    key=\"action\"\r\n                    align='right'\r\n                    render={(text, record: any) => (\r\n                        <Space size=\"middle\">\r\n                            <a href='##'>\r\n                                <Tooltip placement=\"top\" title='Edit Coupon'>\r\n                                    <span className='iconSize' onClick={() => {\r\n                                        setvisible(true)\r\n                                        setactiveCategoryForEdit(record);\r\n                                    }}>\r\n                                        <EditOutlined />\r\n                                    </span>\r\n                                </Tooltip>\r\n                            </a>\r\n\r\n\r\n\r\n                            <Popconfirm\r\n                                onConfirm={() => handleDeleteTag(record.id)}\r\n                                title=\"Are you sure？\" okText=\"Yes\" cancelText=\"No\">\r\n                                <span\r\n                                    className='iconSize iconSize-danger'\r\n                                >\r\n                                    <DeleteOutlined />\r\n                                </span>\r\n                            </Popconfirm>\r\n                        </Space>\r\n                    )}\r\n                />\r\n            </Table>\r\n\r\n\r\n\r\n\r\n\r\n\r\n            {activeCategoryForEdit && <CouponQuickEdit\r\n                tagList={data}\r\n                setTagList={setTagList}\r\n                setAddNewCategoryVisible={setvisible}\r\n                addNewCategoryVisible={visible}\r\n                category={activeCategoryForEdit} />}\r\n        </>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\ninterface Props { }\r\n\r\nconst Couponlist = ({ }: Props) => {\r\n\r\n\r\n    const [tagList, setTagList] = useState([]);\r\n\r\n    const [tagState, handleTagListFetch] = useHandleFetch({}, 'couponList');\r\n\r\n\r\n    useEffect(() => {\r\n        const setTags = async () => {\r\n            const tags = await handleTagListFetch({\r\n                urlOptions:{\r\n                    params: {\r\n                      sortItem: 'added',\r\n                      sortOrderValue: '-1'\r\n                    }\r\n                    }\r\n            });\r\n            // @ts-ignore\r\n            setTagList(tags);\r\n        }\r\n        setTags();\r\n    }, [])\r\n\r\n\r\n    console.log('couponList', tagState)\r\n\r\n    const [addNewCategoryVisible, setAddNewCategoryVisible] = useState(false);\r\n\r\n    const getisSubmitButtonDisabled = (values, isValid) => {\r\n        if (!values.name || !isValid) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n\r\n    const handleOkAddNewCategory = (e: any) => {\r\n        setAddNewCategoryVisible(false);\r\n\r\n    };\r\n\r\n    const handleCancelAddNewCategory = (e: any) => {\r\n        setAddNewCategoryVisible(false);\r\n    };\r\n\r\n    const handleSearch = (value) => {\r\n        if (tagState.data.length > 0) {\r\n            const newTagList = tagState.data.filter(item => item.name.toLowerCase().includes(value.toLowerCase()));\r\n            setTagList(newTagList);\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <>\r\n\r\n            <div className='categoryListContainer'>\r\n                <div className='categoryListContainer__header'>\r\n                    <div className='categoryListContainer__header-searchBar-tag'>\r\n                        <h2 className='categoryListContainer__header-title'>\r\n                            Coupons\r\n                       </h2>\r\n\r\n                        <Search\r\n                            enterButton={false}\r\n                            className='searchbarClassName'\r\n                            placeholder=\"search coupon..\"\r\n                            onChange={e => handleSearch(e.target.value)}\r\n                        />\r\n                    </div>\r\n                    <Button\r\n                        // type=\"primary\"\r\n                        className='btnPrimaryClassNameoutline'\r\n                        icon={<PlusOutlined />}\r\n                        onClick={() => setAddNewCategoryVisible(true)}\r\n                    >\r\n                        Add New\r\n\t\t\t\t\t</Button>\r\n                </div>\r\n                <div className='categoryListContainer__categoryList'>\r\n                    {tagState.done && tagList.length > 0 && <MyTable\r\n                        setTagList={setTagList}\r\n                        data={tagList} />}\r\n                    {tagState.isLoading && <DataTableSkeleton />}\r\n\r\n\r\n                    {tagState.done && !(tagList.length > 0) && (\r\n                        <div style={{\r\n                            marginTop: '200px'\r\n                        }}>\r\n                            <Empty description='No Coupon found' image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            </div>\r\n\r\n            <AddNewCoupon\r\n                tagList={tagList}\r\n                setTagList={setTagList}\r\n                addNewCategoryVisible={addNewCategoryVisible}\r\n                setAddNewCategoryVisible={setAddNewCategoryVisible}\r\n            />\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Couponlist;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n\r\nimport { useHandleFetch } from '../../hooks';\r\n// import third party ui lib\r\nimport { Upload, message, Switch, Select, Button, notification, Modal, Empty, Form } from 'antd';\r\n\r\nimport {\r\n\tFileOutlined,\r\n\tInboxOutlined,\r\n\tRadiusUpleftOutlined,\r\n\tRadiusUprightOutlined,\r\n\tRadiusBottomleftOutlined,\r\n\tRadiusBottomrightOutlined,\r\n\tDeleteOutlined,\r\n\tFileAddOutlined,\r\n\tCheckCircleOutlined\r\n} from '@ant-design/icons';\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\n\r\n\r\nconst { Option } = Select;\r\n\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n\tfirstName: Yup.string()\r\n\t\t.label('First name')\r\n\t\t.required()\r\n\t\t.min(2, 'First name must have at least 2 characters '),\r\n\tlastName: Yup.string()\r\n\t\t.label('Lastname')\r\n\t\t.required()\r\n\t\t.min(2, 'Last name must have at least 2 characters '),\r\n\tphone: Yup.string()\r\n\t\t.required('Please tell us your mobile number.')\r\n\t\t.max(13, 'Please enter a valid mobile number.'),\r\n\tpassword: Yup.string()\r\n\t\t.label('Password')\r\n\t\t.required()\r\n\t\t.min(6, 'Password must have at least 6 characters'),\r\n\taddress1: Yup.string()\r\n\t\t.label('Address line 1')\r\n\t\t.required()\r\n\t\t.min(3, 'Address line 1 must have at least 3 characters '),\r\n\r\n\temail: Yup.string().label('Email').email('Please enter a valid email'),\r\n});\r\n\r\n\r\n\r\n\r\nconst initialValues = {\r\n\tphone: '',\r\n\temail: '',\r\n\tfirstName: '',\r\n\tlastName: '',\r\n\taddress1: '',\r\n\taddress2: '',\r\n\tzipCode: '',\r\n\tpassword: ''\r\n};\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t\tmessage: message || 'Customer Created!',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n\tnotification.error({\r\n\t\tmessage: message || 'Something Went Wrong',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n};\r\n\r\n\r\ninterface Props {\r\n\taddNewCategoryVisible: any;\r\n\tsetAddNewCategoryVisible: any;\r\n\tcustomerList?: any;\r\n\tsetCustomerList?: any;\r\n}\r\n\r\nconst AddNewCategory = ({ addNewCategoryVisible, setAddNewCategoryVisible, customerList, setCustomerList }: Props) => {\r\n\r\n\tconst [addCustomerState, handleAddCustomerFetch] = useHandleFetch({}, 'addCustomer');\r\n\tconst [selectedCountryValue, setselectedCountryValue] = useState('');\r\n\tconst [selectedCityValue, setselectedCityValue] = useState('');\r\n\r\n\tconst [countryOptions, setcountryOptions] = useState([]);\r\n\tconst [cityOptions, setcityOptions] = useState([]);\r\n\r\n\tconst [countryListState, handleCountryListFetch] = useHandleFetch(\r\n\t\t[],\r\n\t\t'countryList'\r\n\t);\r\n\r\n\tconst [cityListState, handleCityListFetch] = useHandleFetch([], 'cityList');\r\n\r\n\tconst [countryList, setCountryList] = useState([]);\r\n\tconst [cityList, setCityList] = useState([]);\r\n\r\n\r\n\r\n\r\n\tconst handleSubmit = async (values: any, actions: any) => {\r\n\r\n\t\tconst addCustomerRes = await handleAddCustomerFetch({\r\n\r\n\t\t\tbody: {\r\n\t\t\t\tphone: values.phone,\r\n\t\t\t\temail: values.email,\r\n\t\t\t\tpassword: values.password,\r\n\t\t\t\taddress1: values.address1,\r\n\t\t\t\taddress2: values.address2,\r\n\t\t\t\tfirstName: values.firstName,\r\n\t\t\t\tlastName: values.lastName,\r\n\t\t\t\tcountry: selectedCountryValue,\r\n\t\t\t\tcity: selectedCityValue,\r\n\t\t\t},\r\n\t\t});\r\n\r\n\r\n\t\t// @ts-ignore\r\n\t\tif (addCustomerRes && addCustomerRes.status === 'ok') {\r\n\t\t\topenSuccessNotification();\r\n\r\n\t\t\tsetCustomerList([{\r\n\t\t\t\tid: addCustomerRes['_id'] || '',\r\n\t\t\t\tkey: addCustomerRes['_id'] || '',\r\n\t\t\t\tname: addCustomerRes['firstName'] + ' ' + addCustomerRes['lastName'],\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\t...addCustomerRes\r\n\t\t\t},...customerList])\r\n\t\t\tsetAddNewCategoryVisible(false);\r\n\t\t\tactions.resetForm();\r\n\t\t}\r\n\t\telse {\r\n\t\t\topenErrorNotification();\r\n\t\t}\r\n\r\n\r\n\r\n\t\tactions.setSubmitting(false);\r\n\t};\r\n\r\n\r\n\r\n\tconst onChangeCity = (value) => {\r\n\t\tsetselectedCityValue(value);\r\n\t}\r\n\r\n\tconst onChangeCountry = (value) => {\r\n\t\tsetselectedCountryValue(value);\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tconst setCountries = async () => {\r\n\t\t\tconst CountryListRes = await handleCountryListFetch({});\r\n\r\n\t\t\t// @ts-ignore\r\n\t\t\tif (CountryListRes && CountryListRes.length > 0) {\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\tconst countryOptions = CountryListRes.map((country) => {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tvalue: country.name,\r\n\t\t\t\t\t\tname: country.name\r\n\t\t\t\t\t};\r\n\t\t\t\t});\r\n\t\t\t\tsetcountryOptions(countryOptions);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tsetCountries();\r\n\t}, []);\r\n\r\n\r\n\tuseEffect(() => {\r\n\t\tconst setCities = async () => {\r\n\t\t\tconst cityListRes = await handleCityListFetch({\r\n\t\t\t\turlOptions: {\r\n\t\t\t\t\tplaceHolders: {\r\n\t\t\t\t\t\tcountry: selectedCountryValue,\r\n\t\t\t\t\t},\r\n\t\t\t\t},\r\n\t\t\t});\r\n\r\n\t\t\t// @ts-ignore\r\n\t\t\tif (cityListRes && cityListRes.length > 0) {\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\tconst cityOptions = cityListRes.map((city) => {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tvalue: city.name,\r\n\t\t\t\t\t\tname: city.name\r\n\t\t\t\t\t};\r\n\t\t\t\t});\r\n\t\t\t\tsetcityOptions(cityOptions);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tsetCities();\r\n\t}, [selectedCountryValue]);\r\n\r\n\r\n\r\n\r\n\tconst handleCancel = (e: any) => {\r\n\t\tsetAddNewCategoryVisible(false);\r\n\t};\r\n\r\n\r\n\tconst getisSubmitButtonDisabled = (values, isValid) => {\r\n\t\tif (!isValid ||\r\n\t\t\t!values.firstName ||\r\n\t\t\t!values.lastName ||\r\n\t\t\t!values.password ||\r\n\t\t\t!values.phone ||\r\n\t\t\t!values.address1) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\r\n\r\n\tconsole.log('cityListState', cityListState)\r\n\r\n\r\n\r\n\r\n\treturn (\r\n\t\t<Formik\r\n\t\t\tonSubmit={(values, actions) => handleSubmit(values, actions)}\r\n\t\t\tvalidationSchema={validationSchema}\r\n\t\t\tvalidateOnBlur={false}\r\n\t\t\tenableReinitialize={true}\r\n\t\t\tinitialValues={\r\n\t\t\t\t{ ...initialValues }\r\n\t\t\t}\r\n\t\t>\r\n\t\t\t{({\r\n\t\t\t\thandleChange,\r\n\t\t\t\tvalues,\r\n\t\t\t\thandleSubmit,\r\n\t\t\t\terrors,\r\n\t\t\t\tisValid,\r\n\t\t\t\tisSubmitting,\r\n\t\t\t\ttouched,\r\n\t\t\t\thandleBlur,\r\n\t\t\t\tsetFieldTouched,\r\n\t\t\t\thandleReset,\r\n\t\t\t}) => (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<Modal\r\n\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\ttop: '40px'\r\n\t\t\t\t\t\t\t}}\r\n\r\n\r\n\r\n\t\t\t\t\t\t\tbodyStyle={{\r\n\t\t\t\t\t\t\t\tmargin: '0',\r\n\t\t\t\t\t\t\t\tpadding: '10px'\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\ttitle=\"Add New Customer\"\r\n\t\t\t\t\t\t\tvisible={addNewCategoryVisible}\r\n\t\t\t\t\t\t\tonOk={(e: any) => handleSubmit(e)}\r\n\t\t\t\t\t\t\tonCancel={handleCancel}\r\n\t\t\t\t\t\t\tokText='Create'\r\n\t\t\t\t\t\t\tokButtonProps={{\r\n\t\t\t\t\t\t\t\tloading: isSubmitting,\r\n\t\t\t\t\t\t\t\thtmlType: \"submit\",\r\n\t\t\t\t\t\t\t\tdisabled: getisSubmitButtonDisabled(values, isValid)\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\r\n\r\n\t\t\t\t\t\t\t<div className='dubbleRowInputs'>\r\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\tlabel='First Name'\r\n\t\t\t\t\t\t\t\t\t\tvalue={values.firstName}\r\n\t\t\t\t\t\t\t\t\t\tname='firstName'\r\n\t\t\t\t\t\t\t\t\t\tisError={(touched.firstName && errors.firstName) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['firstName'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\terrorString={(touched.firstName && errors.firstName) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['firstName'])}\r\n\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('firstName');\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\tlabel='Last Name'\r\n\t\t\t\t\t\t\t\t\t\tvalue={values.lastName}\r\n\t\t\t\t\t\t\t\t\t\tname='lastName'\r\n\t\t\t\t\t\t\t\t\t\tisError={(touched.lastName && errors.lastName) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['lastName'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\terrorString={(touched.lastName && errors.lastName) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['lastName'])}\r\n\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('lastName');\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t<div className='dubbleRowInputs'>\r\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\tlabel='Phone'\r\n\t\t\t\t\t\t\t\t\t\tvalue={values.phone}\r\n\t\t\t\t\t\t\t\t\t\tname='phone'\r\n\t\t\t\t\t\t\t\t\t\tisError={(touched.phone && errors.phone) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['phone'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\terrorString={(touched.phone && errors.phone) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['phone'])}\r\n\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('phone');\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\tlabel='Email'\r\n\t\t\t\t\t\t\t\t\t\tvalue={values.email}\r\n\t\t\t\t\t\t\t\t\t\tname='email'\r\n\t\t\t\t\t\t\t\t\t\tisError={(touched.email && errors.email) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['email'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\terrorString={(touched.email && errors.email) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['email'])}\r\n\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('email');\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\tmarginRight: '10px'\r\n\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\tlabel='Password'\r\n\t\t\t\t\t\t\t\t\ttype='password'\r\n\t\t\t\t\t\t\t\t\tvalue={values.password}\r\n\t\t\t\t\t\t\t\t\tname='password'\r\n\t\t\t\t\t\t\t\t\tisError={(touched.password && errors.password) ||\r\n\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['password'])}\r\n\r\n\t\t\t\t\t\t\t\t\terrorString={(touched.password && errors.password) ||\r\n\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['password'])}\r\n\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\tsetFieldTouched('password');\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t<div className='dubbleRowInputs'>\r\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\t\t\t\tCountry\r\n\t\t\t\t\t\t\t\t\t</h3>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t<Form.Item\r\n\t\t\t\t\t\t\t\t\t\tvalidateStatus={(addCustomerState.error['error']['country']) ? \"error\" : \"\"}\r\n\t\t\t\t\t\t\t\t\t\thelp={addCustomerState.error['error']['country']}\r\n\t\t\t\t\t\t\t\t\t// noStyle={true}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t<Select\r\n\t\t\t\t\t\t\t\t\t\t\tnotFoundContent={<Empty description='No Country Found' image={Empty.PRESENTED_IMAGE_SIMPLE} />}\r\n\t\t\t\t\t\t\t\t\t\t\tshowSearch\r\n\t\t\t\t\t\t\t\t\t\t\tstyle={{ width: '100%' }}\r\n\t\t\t\t\t\t\t\t\t\t\tplaceholder='Select a Country'\r\n\t\t\t\t\t\t\t\t\t\t\toptionFilterProp='children'\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={onChangeCountry}\r\n\t\t\t\t\t\t\t\t\t\t\tfilterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t{countryListState.done &&\r\n\t\t\t\t\t\t\t\t\t\t\t\tcountryListState.data.length > 0 &&\r\n\t\t\t\t\t\t\t\t\t\t\t\tcountryOptions.map((option) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn <Option value={option.value}>{option.name}</Option>;\r\n\t\t\t\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t\t\t</Select>\r\n\r\n\t\t\t\t\t\t\t\t\t</Form.Item>\r\n\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\t\t\t\tCity\r\n                                    </h3>\r\n\t\t\t\t\t\t\t\t\t<Form.Item\r\n\t\t\t\t\t\t\t\t\t\t// noStyle={true}\r\n\t\t\t\t\t\t\t\t\t\tvalidateStatus={(addCustomerState.error['error']['city']) ? \"error\" : \"\"}\r\n\t\t\t\t\t\t\t\t\t\thelp={addCustomerState.error['error']['city']}\r\n\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t<Select\r\n\t\t\t\t\t\t\t\t\t\t\tclassName='selectClassName'\r\n\t\t\t\t\t\t\t\t\t\t\tnotFoundContent={<Empty description='First Select a Country' image={Empty.PRESENTED_IMAGE_SIMPLE} />}\r\n\t\t\t\t\t\t\t\t\t\t\tshowSearch\r\n\t\t\t\t\t\t\t\t\t\t\tstyle={{ width: '100%' }}\r\n\t\t\t\t\t\t\t\t\t\t\tplaceholder='Select a city'\r\n\t\t\t\t\t\t\t\t\t\t\toptionFilterProp='children'\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={onChangeCity}\r\n\t\t\t\t\t\t\t\t\t\t\tfilterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t{cityListState.done &&\r\n\t\t\t\t\t\t\t\t\t\t\t\tcityListState.data.length > 0 &&\r\n\t\t\t\t\t\t\t\t\t\t\t\tcityOptions.map((option) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn <Option value={option.value}>{option.name}</Option>;\r\n\t\t\t\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t\t\t</Select>\r\n\t\t\t\t\t\t\t\t\t</Form.Item>\r\n\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\tmarginTop: '12px'\r\n\t\t\t\t\t\t\t}}></div>\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t<div className='dubbleRowInputs'>\r\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\tlabel='Address'\r\n\t\t\t\t\t\t\t\t\t\tvalue={values.address1}\r\n\t\t\t\t\t\t\t\t\t\tname='address1'\r\n\t\t\t\t\t\t\t\t\t\tisError={(touched.address1 && errors.address1) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['address1'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\terrorString={(touched.address1 && errors.address1) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['address1'])}\r\n\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('address1');\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\tlabel='Address 2'\r\n\t\t\t\t\t\t\t\t\t\tvalue={values.address2}\r\n\t\t\t\t\t\t\t\t\t\tname='address2'\r\n\t\t\t\t\t\t\t\t\t\tisError={(touched.address2 && errors.address2) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['address2'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\terrorString={(touched.address2 && errors.address2) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['address2'])}\r\n\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('address2');\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\t\t\t\t\t\t</Modal>\r\n\r\n\t\t\t\t\t</>\r\n\t\t\t\t)}\r\n\t\t</Formik>\r\n\r\n\r\n\r\n\r\n\t);\r\n};\r\n\r\nexport default AddNewCategory;\r\n","import React,{useState, useEffect} from 'react';\r\nimport { Modal, Select,notification  } from 'antd';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\nimport { PlusOutlined, EditOutlined, DeleteOutlined,EditFilled, CheckCircleOutlined } from '@ant-design/icons';\r\n\r\n\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport {useHandleFetch} from '../../hooks';\r\n\r\n\r\nconst { Option } = Select;\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    firstName: Yup.string()\r\n      .label('Firstname')\r\n      .required()\r\n      .min(2, 'First name must have at least 2 characters '),\r\n    lastName: Yup.string()\r\n      .label('Lastname')\r\n      .required()\r\n      .min(2, 'Lastname must have at least 2 characters '),\r\n    phone: Yup.string()\r\n      .required('Please tell us your mobile number.')\r\n      .max(13, 'Please enter a valid mobile number.'),\r\n    password: Yup.string()\r\n      .label('Password')\r\n      .required()\r\n      .min(6, 'Password must have at least 6 characters'),\r\n    address1: Yup.string()\r\n      .label('Address line 1')\r\n      .required()\r\n      .min(3, 'Address line 1 must have at least 3 characters '),\r\n  \r\n    email: Yup.string().label('Email').email('Please enter a valid email'),\r\n  });\r\n\r\n\r\n\r\n  \r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t  message: message || 'Customer Updated',\r\n\t  description: '',\r\n\t  icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n  };\r\n\r\n\r\n  const openErrorNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t  message: message || 'Something Went Wrong',\r\n\t  description: '',\r\n\t  icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n  };\r\n\r\n\r\n\r\n\r\n\r\n\r\ninterface Props {\r\n\tcustomer: any;\r\n\tsetvisible: any; \r\n\tvisible: any;\r\n\tcustomerList?: any; \r\n\tsetCustomerList?:any\r\n\r\n}\r\n\r\nconst QuickEdit = ({ customer, setvisible, visible, customerList, setCustomerList }: Props) => {\r\n\tconst [updateCustomerState, handleUpdateCustomerFetch] = useHandleFetch({}, 'updateCustomer');\r\n\r\n\r\n\tconst [selectedCountryValue,setselectedCountryValue] = useState(''); \r\n    const [selectedCityValue,setselectedCityValue] = useState(''); \r\n\r\n    const [countryOptions,setcountryOptions] = useState([]); \r\n    const [cityOptions,setcityOptions] = useState([]); \r\n\r\n    const [countryListState, handleCountryListFetch] = useHandleFetch(\r\n        [],\r\n        'countryList'\r\n      );\r\n    \r\n      const [cityListState, handleCityListFetch] = useHandleFetch([], 'cityList');\r\n    \r\n      const [countryList, setCountryList] = useState([]);\r\n      const [cityList, setCityList] = useState([]);\r\n\r\n\r\n\r\n\r\n\tconst handleSubmit = async (values : any, actions : any) => {\r\n\t  const updateCustomerRes = await handleUpdateCustomerFetch({\r\n\t\turlOptions: {\r\n\t\t\tplaceHolders: {\r\n\t\t\t  id: values.id,\r\n\t\t\t}\r\n\t\t  },\r\n\t\tbody: {\r\n\t\t\tphone: values.phone,\r\n            email: values.email,\r\n            password: values.password,\r\n            address1: values.address1,\r\n            address2: values.address2,\r\n            firstName: values.firstName,\r\n            lastName: values.lastName,\r\n            country: selectedCountryValue,\r\n            city: selectedCityValue,\r\n\t\t},\r\n\t  });\r\n\t\r\n\r\n\t   \t  // @ts-ignore\r\n\t\t\t if(updateCustomerRes && updateCustomerRes.status === 'ok'){\r\n\t\t\t\topenSuccessNotification(); \r\n\t\t\r\n\t\t\t\tconst positionInTag = () => {\r\n\t\t\t\t\treturn customerList.map(item => item.id).indexOf(customer.id);\r\n\t\t\t\t  }\r\n\t\t\r\n\t\t\t\t  const index = positionInTag();\r\n\t\t\r\n\t\t\t\t  // @ts-ignore\r\n\t\t\t\t  const updatedItem = Object.assign({}, tagList[index], { ...updateCustomerRes });\r\n\t\t\t\t  const updateTagList = [...customerList.slice(0, index), updatedItem, ...customerList.slice(index + 1)];\r\n\t\t\t\t  setCustomerList(updateTagList); \r\n\t\t\t\t\r\n\t\t\t  }\r\n\t\t\t  else {\r\n\t\t\t\topenErrorNotification();\r\n\t\t\t  }\r\n\t\t\t\r\n\t\t\t  actions.setSubmitting(false);\r\n\t\t\t  setvisible(false)\r\n\t};\r\n\t\r\n\r\n\t\r\n    const onChangeCity = (value) => {\r\n        setselectedCityValue(value); \r\n    }\r\n\r\n    const onChangeCountry = (value) => {\r\n        setselectedCountryValue(value); \r\n    }\r\n    \r\n\tuseEffect(() => {\r\n\t\tconst setCountries = async () => {\r\n\t\t\tconst CountryListRes = await handleCountryListFetch({});\r\n\r\n\t\t\t// @ts-ignore\r\n\t\t\tif (CountryListRes && CountryListRes.length > 0) {\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\tconst countryOptions = CountryListRes.map((country) => {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tvalue: country.name,\r\n\t\t\t\t\t\tname: country.name\r\n\t\t\t\t\t};\r\n\t\t\t\t});\r\n\t\t\t\tsetcountryOptions(countryOptions);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tsetCountries();\r\n    }, []);\r\n    \r\n\r\n    useEffect(() => {\r\n\t\tconst setCities = async () => {\r\n\t\t\tconst cityListRes = await handleCityListFetch({\r\n                urlOptions: {\r\n                    placeHolders: {\r\n                      country: selectedCountryValue,\r\n                    },\r\n                  },\r\n            });\r\n\r\n\t\t\t// @ts-ignore\r\n\t\t\tif (cityListRes && cityListRes.length > 0) {\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\tconst cityOptions = cityListRes.map((city) => {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tvalue: city.name,\r\n\t\t\t\t\t\tname: city.name\r\n\t\t\t\t\t};\r\n\t\t\t\t});\r\n\t\t\t\tsetcityOptions(cityOptions);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tsetCities();\r\n    }, [selectedCountryValue]);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\tconst handleCancel = (e: any) => {\r\n        setvisible(false);\r\n      };\r\n\r\n\r\n\r\n\t  const getisSubmitButtonDisabled = (values,isValid) => {\r\n\t\tif(!isValid ||\r\n            !values.firstName ||\r\n            !values.lastName ||\r\n            !values.password ||\r\n            !values.phone ||\r\n            !values.address1){\r\n\t\t\treturn true; \r\n\t\t}\r\n\t\treturn false; \r\n\t  }\r\n\r\n\treturn (\r\n\t\t<Formik\r\n\t\tonSubmit={(values, actions) => handleSubmit(values, actions)}\r\n\t\tvalidationSchema={validationSchema}\r\n\t\tvalidateOnBlur={false}\r\n\t\tenableReinitialize={true}\r\n\t\tinitialValues={\r\n\t\t  {...customer}\r\n\t\t}\r\n\t  >\r\n\t\t{({\r\n\t\t  handleChange,\r\n\t\t  values,\r\n\t\t  handleSubmit,\r\n\t\t  errors,\r\n\t\t  isValid,\r\n\t\t  isSubmitting,\r\n\t\t  touched,\r\n\t\t  handleBlur,\r\n\t\t  setFieldTouched,\r\n\t\t  handleReset,\r\n\t\t}) => (\r\n\t\t\t<>\r\n\t\t\t<Modal\r\n\t\t\ttitle=\"Quick Edit\"\r\n\t\t\tvisible={visible}\r\n\t\t\tonOk={(e : any) => handleSubmit(e)}\r\n\t\t\tonCancel={handleCancel}\r\n\t\t\tokText='Update'\r\n\t\t\tokButtonProps={{\r\n\t\t\tloading: isSubmitting,\r\n\t\t\thtmlType: \"submit\",\r\n\t\t\tdisabled: getisSubmitButtonDisabled(values, isValid)\r\n\t\t\t}}\r\n\t\t\tbodyStyle={{\r\n                margin: '0',\r\n                padding: '10px'\r\n            }}\r\n  >\r\n      <div className='dubbleRowInputs'>\r\n         <div className='dubbleRowInputs__item'>\r\n         <Input \r\n\t\t\t   label='First Name'\r\n\t\t\t   value={values.firstName}\r\n\t\t\t   name='firstName'\r\n\t\t\t   isError={(touched.firstName && errors.firstName) ||\r\n\t\t\t\t  (!isSubmitting && updateCustomerState.error['error']['firstName'])}\r\n\t\t\t  \r\n\t\t\t\t  errorString={(touched.firstName && errors.firstName) ||\r\n\t\t\t\t\t  (!isSubmitting && updateCustomerState.error['error']['firstName'])}\r\n\t\t\t   onChange={(e : any) => {\r\n\t\t\t\t  handleChange(e);\r\n\t\t\t\t  setFieldTouched('firstName');\r\n\t\t\t\t}}\r\n\t\t\t   />\r\n         </div>\r\n         <div className='dubbleRowInputs__item'>\r\n         <Input \r\n\t\t\t   label='Last Name'\r\n\t\t\t   value={values.lastName}\r\n\t\t\t   name='lastName'\r\n\t\t\t   isError={(touched.lastName && errors.lastName) ||\r\n\t\t\t\t  (!isSubmitting && updateCustomerState.error['error']['lastName'])}\r\n\t\t\t  \r\n\t\t\t\t  errorString={(touched.lastName && errors.lastName) ||\r\n\t\t\t\t\t  (!isSubmitting && updateCustomerState.error['error']['lastName'])}\r\n\t\t\t   onChange={(e : any) => {\r\n\t\t\t\t  handleChange(e);\r\n\t\t\t\t  setFieldTouched('lastName');\r\n\t\t\t\t}}\r\n\t\t\t   />\r\n         </div>\r\n\r\n\r\n\r\n\r\n            </div>\r\n\r\n\t\t\t \r\n\r\n            <div className='dubbleRowInputs'>\r\n         <div className='dubbleRowInputs__item'>\r\n         <Input \r\n\t\t\t   label='Phone'\r\n\t\t\t   value={values.phone}\r\n\t\t\t   name='phone'\r\n\t\t\t   isError={(touched.phone && errors.phone) ||\r\n\t\t\t\t  (!isSubmitting && updateCustomerState.error['error']['phone'])}\r\n\t\t\t  \r\n\t\t\t\t  errorString={(touched.phone && errors.phone) ||\r\n\t\t\t\t\t  (!isSubmitting && updateCustomerState.error['error']['phone'])}\r\n\t\t\t   onChange={(e : any) => {\r\n\t\t\t\t  handleChange(e);\r\n\t\t\t\t  setFieldTouched('phone');\r\n\t\t\t\t}}\r\n\t\t\t   />\r\n         </div>\r\n         <div className='dubbleRowInputs__item'>\r\n         <Input \r\n\t\t\t   label='Email'\r\n\t\t\t   value={values.email}\r\n\t\t\t   name='email'\r\n\t\t\t   isError={(touched.email && errors.email) ||\r\n\t\t\t\t  (!isSubmitting && updateCustomerState.error['error']['email'])}\r\n\t\t\t  \r\n\t\t\t\t  errorString={(touched.email && errors.email) ||\r\n\t\t\t\t\t  (!isSubmitting && updateCustomerState.error['error']['email'])}\r\n\t\t\t   onChange={(e : any) => {\r\n\t\t\t\t  handleChange(e);\r\n\t\t\t\t  setFieldTouched('email');\r\n\t\t\t\t}}\r\n\t\t\t   />\r\n         </div>\r\n\r\n\r\n\r\n\r\n            </div>\r\n\r\n            \r\n\r\n\r\n    \r\n<div className='dubbleRowInputs'>\r\n         <div className='dubbleRowInputs__item'>\r\n         <h3 className='inputFieldLabel'>\r\n                Country\r\n            </h3>\r\n         <Select\r\n\t\t\tshowSearch\r\n\t\t\tstyle={{ width: '100%' }}\r\n\t\t\tplaceholder='Select a Country'\r\n\t\t\toptionFilterProp='children'\r\n\t\t\tdefaultValue={customer && customer.country}\r\n\t\t\tonChange={onChangeCountry}\r\n\t\t\tfilterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n\t\t>\r\n\t\t\t{countryListState.done &&\r\n\t\t\t\tcountryListState.data.length > 0 &&\r\n\t\t\t\tcountryOptions.map((option) => {\r\n\t\t\t\t\treturn <Option value={option.value}>{option.name}</Option>;\r\n\t\t\t\t})}\r\n\t\t</Select>\r\n         </div>\r\n         <div className='dubbleRowInputs__item'>\r\n         <h3 className='inputFieldLabel'>\r\n                City\r\n            </h3>\r\n         <Select\r\n\t\t\tdefaultValue={customer && customer.city}\r\n\t\t\tshowSearch\r\n\t\t\tstyle={{ width: '100%' }}\r\n\t\t\tplaceholder='Select a city'\r\n\t\t\toptionFilterProp='children'\r\n\t\t\tonChange={onChangeCity}\r\n\t\t\tfilterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n\t\t>\r\n\t\t\t{cityListState.done &&\r\n\t\t\t\tcityListState.data.length > 0 &&\r\n\t\t\t\tcityOptions.map((option) => {\r\n\t\t\t\t\treturn <Option value={option.value}>{option.name}</Option>;\r\n\t\t\t\t})}\r\n\t\t</Select>\r\n         </div>\r\n\r\n            </div>\r\n\r\n            <div style={{\r\n                marginTop: '12px'\r\n            }}></div>\r\n\r\n\r\n\r\n            <div className='dubbleRowInputs'>\r\n         <div className='dubbleRowInputs__item'>\r\n         <Input \r\n\t\t\t   label='Address'\r\n\t\t\t   value={values.address1}\r\n\t\t\t   name='address1'\r\n\t\t\t   isError={(touched.address1 && errors.address1) ||\r\n\t\t\t\t  (!isSubmitting && updateCustomerState.error['error']['address1'])}\r\n\t\t\t  \r\n\t\t\t\t  errorString={(touched.address1 && errors.address1) ||\r\n\t\t\t\t\t  (!isSubmitting && updateCustomerState.error['error']['address1'])}\r\n\t\t\t   onChange={(e : any) => {\r\n\t\t\t\t  handleChange(e);\r\n\t\t\t\t  setFieldTouched('address1');\r\n\t\t\t\t}}\r\n\t\t\t   />\r\n         </div>\r\n         <div className='dubbleRowInputs__item'>\r\n         <Input \r\n\t\t\t   label='More specific address'\r\n\t\t\t   value={values.address2}\r\n\t\t\t   name='address2'\r\n\t\t\t   isError={(touched.address2 && errors.address2) ||\r\n\t\t\t\t  (!isSubmitting && updateCustomerState.error['error']['address2'])}\r\n\t\t\t  \r\n\t\t\t\t  errorString={(touched.address2 && errors.address2) ||\r\n\t\t\t\t\t  (!isSubmitting && updateCustomerState.error['error']['address2'])}\r\n\t\t\t   onChange={(e : any) => {\r\n\t\t\t\t  handleChange(e);\r\n\t\t\t\t  setFieldTouched('address2');\r\n\t\t\t\t}}\r\n\t\t\t   />\r\n         </div>\r\n\r\n            </div>\r\n\r\n\r\n\r\n\r\n  </Modal>\r\n\t\t\t  \r\n\t\t\t</>\r\n\t\t  )}\r\n\t  </Formik>\r\n\t);\r\n};\r\n\r\n\r\nexport default QuickEdit;\r\n","import React, {useState,useEffect} from 'react';\r\nimport {withRouter, useHistory} from 'react-router-dom';\r\nimport { Table, Badge, Menu, Dropdown, notification, Space, Tag,Button, Input,Tooltip, Modal , Popconfirm} from 'antd';\r\nimport { PlusOutlined, EditOutlined, DeleteOutlined,EditFilled, CheckCircleOutlined } from '@ant-design/icons';\r\nimport Moment from 'react-moment';\r\n\r\n/// import hooks\r\nimport { useFetch, useHandleFetch } from \"../../hooks\";\r\n\r\n// import components\r\nimport { DataTableSkeleton } from \"../../components/Placeholders\";\r\nimport AddNewCustomer from \"./AddNewCustomer\";\r\nimport QuickEdit from \"./QuickEdit\";\r\nimport Empty from \"../../components/Empty\";\r\nimport moment from \"moment\";\r\nconst { Column, ColumnGroup } = Table;\r\nconst { Search } = Input;\r\n\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t  message: message || 'Tag Created',\r\n\t  description: '',\r\n\t  icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n  };\r\n\r\n\r\n  const openErrorNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t  message: message || 'Something Went Wrong',\r\n\t  description: '',\r\n\t  icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n  };\r\n\r\n\r\n\r\n\r\n\r\ninterface myTableProps {\r\n  data: any; \r\n  setCustomerList?:any; \r\n} \r\n\r\n\r\nconst MyTable = ({data,setCustomerList}: myTableProps) => {\r\n    const [visible,setvisible] = useState(false);   \r\n    const [activeCategoryForEdit,setactiveCategoryForEdit] = useState(false); \r\n\r\n   const history = useHistory(); \r\n\r\n    const [deleteCustomerState, handleDeleteCustomerFetch] = useHandleFetch({}, 'deleteCustomer');\r\n      const handleDeleteCustomer = async (id) => {\r\n        const deleteCustomerRes = await handleDeleteCustomerFetch({\r\n          urlOptions: {\r\n            placeHolders: {\r\n              id,\r\n            }\r\n            }\r\n          });\r\n\r\n\r\n           // @ts-ignore\r\n\t\t  if(deleteCustomerRes && deleteCustomerRes.status === 'ok'){\r\n\t\t\t  openSuccessNotification('Deleted Customer'); \r\n\t\t\t  const newCustomerList =  data.filter(item => item.id !== id);\r\n\t\t\t  setCustomerList(newCustomerList); \r\n\t\t  }\r\n      }\r\n      \r\n\r\n    return (\r\n        <>\r\n        <Table \r\n        // expandable={{\r\n        //     expandedRowRender: record => <p style={{ margin: 0 }}>{record.name}</p>,\r\n        //     rowExpandable: record => record.name !== 'Not Expandable',\r\n        //   }}\r\n        // bordered={true}\r\n        size='small'\r\n        // pagination={false}\r\n        dataSource={data}\r\n        >\r\n\r\n          <Column\r\n           title=\"Name\" \r\n           dataIndex=\"name\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n           render={(text, record: any) => (\r\n            <>\r\n              <h4\r\n                onClick={() => {\r\n                  history.push(`/admin/customer/${record.id}`)\r\n                  // setcategoryDetailVisible(true);\r\n                  setactiveCategoryForEdit(record)\r\n                }}\r\n                style={{\r\n                  fontWeight: 400,\r\n                  color: '#555',\r\n                  cursor: 'pointer'\r\n                }}>\r\n                {text}\r\n              </h4>\r\n            </>\r\n          )}\r\n            />\r\n\r\n         \r\n          <Column\r\n           title=\"Phone\" \r\n           dataIndex=\"phone\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n         \r\n            />\r\n\r\n\r\n          {/* <Column\r\n           title=\"City\" \r\n           dataIndex=\"city\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n            /> */}\r\n\r\n     \r\n\r\n        <Column\r\n           title=\"Dealer\" \r\n           dataIndex=\"dealerName\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n           render={(text, record: any) => (\r\n            <>\r\n              <h4\r\n                onClick={() => {\r\n                  // go to dealer detail\r\n                  // history.push(`/admin/dealer/${record.id}`)\r\n                }}\r\n                style={{\r\n                  fontWeight: 400,\r\n                  color: '#555',\r\n                  cursor: 'pointer'\r\n                }}>\r\n                {text}\r\n              </h4>\r\n            </>\r\n          )}\r\n            />\r\n\r\n         \r\n\r\n            \r\n          <Column\r\n           title=\"Order\" \r\n           dataIndex=\"orderCount\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n         \r\n            />\r\n\r\n        <Column\r\n           title=\"Total Price\" \r\n           dataIndex=\"totalOrderPrice\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n         \r\n            />\r\n\r\n\r\n      <Column\r\n           width={150}\r\n           title=\"Created\" \r\n           dataIndex=\"created\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n           render={(text, record : any) => (\r\n            <Space size=\"middle\">\r\n            \r\n            <h5>\r\n              {text && moment(text).format('MMMM Do YYYY, h:mm a')}\r\n            </h5>\r\n             \r\n            </Space>\r\n          )}\r\n            />\r\n\r\n\r\n\r\n          {/* <Column \r\n          \r\n          className='classnameofthecolumn'\r\n\r\n          title=\"Product\" dataIndex=\"product\" key=\"product\" /> */}\r\n\r\n          {/* <Column \r\n          \r\n          className='classnameofthecolumn'\r\n\r\n          title=\"Sub Category\" dataIndex=\"subCategory\" key=\"subCategory\" /> */}\r\n        \r\n        {/* <Column\r\n          title=\"Tags\"\r\n          dataIndex=\"tags\"\r\n          key=\"tags\"\r\n          render={tags => (\r\n            <>\r\n              {tags.map((tag : any) => (\r\n                <Tag color=\"blue\" key={tag}>\r\n                  {tag}\r\n                </Tag>\r\n              ))}\r\n            </>\r\n          )}\r\n        /> */}\r\n        <Column\r\n        \r\n        className='classnameofthecolumn'\r\n          title=\"\"\r\n          key=\"action\"\r\n          align='right'\r\n          render={(text, record : any) => (\r\n            <Space size=\"middle\">\r\n              <a href='##'>\r\n               <Tooltip placement=\"top\" title='Edit Customer'>\r\n              <span className='iconSize' onClick={() => {\r\n                setvisible(true)\r\n                setactiveCategoryForEdit(record); \r\n              }}> \r\n              <EditOutlined />\r\n            \r\n              </span>\r\n               </Tooltip>\r\n               </a>\r\n\r\n             \r\n\r\n              \r\n               <Popconfirm \r\n               \r\n               onConfirm={() => handleDeleteCustomer(record.id)}\r\n               title=\"Are you sure？\" okText=\"Yes\" cancelText=\"No\">\r\n           \r\n           <span \r\n             className='iconSize iconSize-danger'\r\n             > \r\n             <DeleteOutlined/>\r\n            </span>\r\n       \r\n           </Popconfirm>\r\n             \r\n            </Space>\r\n          )}\r\n        />\r\n      </Table>\r\n\r\n    \r\n\r\n    {activeCategoryForEdit &&   <QuickEdit \r\n    customerList={data}\r\n    setCustomerList={setCustomerList}\r\n    setvisible={setvisible}\r\n    visible={visible}\r\n    customer={activeCategoryForEdit}/>}\r\n    \r\n    \r\n    </>\r\n    )\r\n}\r\n\r\n\r\ninterface Props {\r\n    history: any; \r\n}\r\n\r\nconst CustomerList = ({history}: Props) => {\r\n\r\n\r\n    const [customerList,setCustomerList] = useState([]); \r\n\r\n    const [customerState, handleCustomerListFetch] = useHandleFetch({}, 'customerList');\r\n  \r\n\r\n    console.log('customerList',customerList); \r\n  \r\n    useEffect(()=>{\r\n     const setCustomers = async () => {\r\n       const customers = await handleCustomerListFetch({\r\n        urlOptions:{\r\n          params: {\r\n            sortItem: 'added',\r\n            sortOrderValue: '-1'\r\n          }\r\n          }\r\n       }); \r\n       // @ts-ignore\r\n       setCustomerList(customers); \r\n     }\r\n     setCustomers(); \r\n    },[])\r\n\r\n\r\n    \r\n\r\n  \r\n  const handleSearch = (value) => {\r\n    if(customerState.data.length > 0 ){\r\n      const newCustomerList = customerState.data.filter(item => item.name.toLowerCase().includes(value.toLowerCase())); \r\n      setCustomerList(newCustomerList); \r\n    }\r\n     \r\n  }\r\n\r\n\r\n\r\n    \r\n\r\n  const [addNewCategoryVisible,setAddNewCategoryVisible] = useState(false);   \r\n\r\n  // console.log('customerState',customerState)\r\n\r\n\r\n\r\n\treturn (\r\n\t\t<>\r\n    {/* <h2 className='containerPageTitle'>\r\n      Categories\r\n    </h2> */}\r\n    <div className='categoryListContainer'>\r\n            <div className='categoryListContainer__header'>\r\n           \r\n\r\n          <div className='categoryListContainer__header-searchBar'>\r\n          <h2 className='categoryListContainer__header-title'>\r\n            Customers\r\n            </h2>\r\n\r\n\r\n          <Search\r\n            enterButton={false}\r\n            className='searchbarClassName'\r\n          placeholder=\"search customer..\"\r\n          onSearch={value =>handleSearch(value)}\r\n          // style={{ width: 300 }}\r\n        />\r\n          </div>\r\n            <Button\r\n          // type=\"primary\"\r\n          className='btnPrimaryClassNameoutline'\r\n          icon={<PlusOutlined />}\r\n          onClick={() => setAddNewCategoryVisible(true)}\r\n        >\r\n        Add New\r\n            \r\n            </Button>\r\n            </div>\r\n\r\n            <div className='categoryListContainer__afterHeader'>\r\n            {/* <Search\r\n      placeholder=\"search categories..\"\r\n      size=\"large\"\r\n      onSearch={value => console.log(value)}\r\n      style={{ width: 300 }}\r\n    /> */}\r\n            </div>\r\n\r\n     \r\n\t\t\t\r\n\t\t\t<div className='categoryListContainer__categoryList'>\r\n        {customerState.done && customerList.length > 0 && <MyTable\r\n        setCustomerList={setCustomerList}\r\n         data={customerList} />}\r\n        {customerState.isLoading && <DataTableSkeleton />}\r\n        {customerState.done && !(customerList.length > 0) && (\r\n\t\t\t<Empty title='No Customer found'  />\r\n\t\t)}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\r\n\r\n{customerState.done && \r\n    <AddNewCustomer \r\n    setCustomerList={setCustomerList}\r\n          addNewCategoryVisible={addNewCategoryVisible} \r\n          setAddNewCategoryVisible={setAddNewCategoryVisible}\r\n          customerList={customerState.data}\r\n          \r\n           />}\r\n\r\n      \r\n\r\n        \r\n    </>\r\n\t);\r\n};\r\n\r\nexport default withRouter(CustomerList);\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Modal, Select, notification } from 'antd';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\nimport { PlusOutlined, EditOutlined, DeleteOutlined, EditFilled, CheckCircleOutlined } from '@ant-design/icons';\r\n\r\n\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport { useHandleFetch } from '../../hooks';\r\n\r\n\r\nconst { Option } = Select;\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    firstName: Yup.string()\r\n        .label('Firstname')\r\n        .required()\r\n        .min(2, 'First name must have at least 2 characters '),\r\n    lastName: Yup.string()\r\n        .label('Lastname')\r\n        .required()\r\n        .min(2, 'Lastname must have at least 2 characters '),\r\n    phone: Yup.string()\r\n        .required('Please tell us your mobile number.')\r\n        .max(13, 'Please enter a valid mobile number.'),\r\n    address1: Yup.string()\r\n        .label('Address line 1')\r\n        .required()\r\n        .min(3, 'Address line 1 must have at least 3 characters '),\r\n\r\n    email: Yup.string().label('Email').email('Please enter a valid email'),\r\n});\r\n\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Customer Updated',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Something Went Wrong',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n    });\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\r\ninterface Props {\r\n    customer: any;\r\n    setvisible: any;\r\n    visible: any;\r\n\r\n\r\n}\r\n\r\nconst QuickEdit = ({ customer, setvisible, visible }: Props) => {\r\n    const [updateCustomerState, handleUpdateCustomerFetch] = useHandleFetch({}, 'updateCustomer');\r\n\r\n\r\n    const [selectedCountryValue, setselectedCountryValue] = useState('');\r\n    const [selectedCityValue, setselectedCityValue] = useState('');\r\n\r\n    const [countryOptions, setcountryOptions] = useState([]);\r\n    const [cityOptions, setcityOptions] = useState([]);\r\n\r\n    const [countryListState, handleCountryListFetch] = useHandleFetch(\r\n        [],\r\n        'countryList'\r\n    );\r\n\r\n    const [cityListState, handleCityListFetch] = useHandleFetch([], 'cityList');\r\n\r\n    const [countryList, setCountryList] = useState([]);\r\n    const [cityList, setCityList] = useState([]);\r\n\r\n\r\n\r\n\r\n    const handleSubmit = async (values: any, actions: any) => {\r\n        const updateCustomerRes = await handleUpdateCustomerFetch({\r\n            urlOptions: {\r\n                placeHolders: {\r\n                    id: values.id,\r\n                }\r\n            },\r\n            body: {\r\n                phone: values.phone,\r\n                email: values.email,\r\n                password: values.password,\r\n                address1: values.address1,\r\n                address2: values.address2,\r\n                firstName: values.firstName,\r\n                lastName: values.lastName,\r\n                country: selectedCountryValue,\r\n                city: selectedCityValue,\r\n            },\r\n        });\r\n\r\n\r\n        // @ts-ignore\r\n        if (updateCustomerRes && updateCustomerRes.status === 'ok') {\r\n            openSuccessNotification();\r\n\r\n            // const positionInTag = () => {\r\n            //     return customerList.map(item => item.id).indexOf(customer.id);\r\n            // }\r\n\r\n            // const index = positionInTag();\r\n\r\n            // const updatedItem = Object.assign({}, tagList[index], { ...updateCustomerRes });\r\n            // const updateTagList = [...customerList.slice(0, index), updatedItem, ...customerList.slice(index + 1)];\r\n            // setCustomerList(updateTagList);\r\n\r\n        }\r\n        else {\r\n            openErrorNotification();\r\n        }\r\n\r\n        actions.setSubmitting(false);\r\n        setvisible(false)\r\n    };\r\n\r\n\r\n\r\n    const onChangeCity = (value) => {\r\n        setselectedCityValue(value);\r\n    }\r\n\r\n    const onChangeCountry = (value) => {\r\n        setselectedCountryValue(value);\r\n    }\r\n\r\n    useEffect(() => {\r\n        const setCountries = async () => {\r\n            const CountryListRes = await handleCountryListFetch({});\r\n\r\n            // @ts-ignore\r\n            if (CountryListRes && CountryListRes.length > 0) {\r\n                // @ts-ignore\r\n                const countryOptions = CountryListRes.map((country) => {\r\n                    return {\r\n                        value: country.name,\r\n                        name: country.name\r\n                    };\r\n                });\r\n                setcountryOptions(countryOptions);\r\n            }\r\n        };\r\n\r\n        setCountries();\r\n    }, []);\r\n\r\n\r\n    useEffect(() => {\r\n        const setCities = async () => {\r\n            const cityListRes = await handleCityListFetch({\r\n                urlOptions: {\r\n                    placeHolders: {\r\n                        country: selectedCountryValue,\r\n                    },\r\n                },\r\n            });\r\n\r\n            // @ts-ignore\r\n            if (cityListRes && cityListRes.length > 0) {\r\n                // @ts-ignore\r\n                const cityOptions = cityListRes.map((city) => {\r\n                    return {\r\n                        value: city.name,\r\n                        name: city.name\r\n                    };\r\n                });\r\n                setcityOptions(cityOptions);\r\n            }\r\n        };\r\n\r\n        setCities();\r\n    }, [selectedCountryValue]);\r\n\r\n\r\n    const handleCancel = (e: any) => {\r\n        setvisible(false);\r\n    };\r\n\r\n\r\n\r\n    const getisSubmitButtonDisabled = (values, isValid) => {\r\n        if (!isValid ||\r\n            !values.firstName ||\r\n            !values.lastName ||\r\n            !values.phone ||\r\n            !values.address1) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    return (\r\n        <Formik\r\n            onSubmit={(values, actions) => handleSubmit(values, actions)}\r\n            validationSchema={validationSchema}\r\n            validateOnBlur={false}\r\n            enableReinitialize={true}\r\n            initialValues={\r\n                { ...customer }\r\n            }\r\n        >\r\n            {({\r\n                handleChange,\r\n                values,\r\n                handleSubmit,\r\n                errors,\r\n                isValid,\r\n                isSubmitting,\r\n                touched,\r\n                handleBlur,\r\n                setFieldTouched,\r\n                handleReset,\r\n            }) => (\r\n                    <>\r\n                        <Modal\r\n                            title=\"Customer Edit\"\r\n                            visible={visible}\r\n                            onOk={(e: any) => handleSubmit(e)}\r\n                            onCancel={handleCancel}\r\n                            okText='Update'\r\n                            okButtonProps={{\r\n                                loading: isSubmitting,\r\n                                htmlType: \"submit\",\r\n                                disabled: getisSubmitButtonDisabled(values, isValid)\r\n                            }}\r\n                            bodyStyle={{\r\n                                margin: '0',\r\n                                padding: '10px'\r\n                            }}\r\n                        >\r\n                            <div className='dubbleRowInputs'>\r\n                                <div className='dubbleRowInputs__item'>\r\n                                    <Input\r\n                                        label='First Name'\r\n                                        value={values.firstName}\r\n                                        name='firstName'\r\n                                        isError={(touched.firstName && errors.firstName) ||\r\n                                            (!isSubmitting && updateCustomerState.error['error']['firstName'])}\r\n\r\n                                        errorString={(touched.firstName && errors.firstName) ||\r\n                                            (!isSubmitting && updateCustomerState.error['error']['firstName'])}\r\n                                        onChange={(e: any) => {\r\n                                            handleChange(e);\r\n                                            setFieldTouched('firstName');\r\n                                        }}\r\n                                    />\r\n                                </div>\r\n                                <div className='dubbleRowInputs__item'>\r\n                                    <Input\r\n                                        label='Last Name'\r\n                                        value={values.lastName}\r\n                                        name='lastName'\r\n                                        isError={(touched.lastName && errors.lastName) ||\r\n                                            (!isSubmitting && updateCustomerState.error['error']['lastName'])}\r\n\r\n                                        errorString={(touched.lastName && errors.lastName) ||\r\n                                            (!isSubmitting && updateCustomerState.error['error']['lastName'])}\r\n                                        onChange={(e: any) => {\r\n                                            handleChange(e);\r\n                                            setFieldTouched('lastName');\r\n                                        }}\r\n                                    />\r\n                                </div>\r\n\r\n\r\n\r\n\r\n                            </div>\r\n\r\n\r\n\r\n                            <div className='dubbleRowInputs'>\r\n                                <div className='dubbleRowInputs__item'>\r\n                                    <Input\r\n                                        label='Phone'\r\n                                        value={values.phone}\r\n                                        name='phone'\r\n                                        isError={(touched.phone && errors.phone) ||\r\n                                            (!isSubmitting && updateCustomerState.error['error']['phone'])}\r\n\r\n                                        errorString={(touched.phone && errors.phone) ||\r\n                                            (!isSubmitting && updateCustomerState.error['error']['phone'])}\r\n                                        onChange={(e: any) => {\r\n                                            handleChange(e);\r\n                                            setFieldTouched('phone');\r\n                                        }}\r\n                                    />\r\n                                </div>\r\n                                <div className='dubbleRowInputs__item'>\r\n                                    <Input\r\n                                        label='Email'\r\n                                        value={values.email}\r\n                                        name='email'\r\n                                        isError={(touched.email && errors.email) ||\r\n                                            (!isSubmitting && updateCustomerState.error['error']['email'])}\r\n\r\n                                        errorString={(touched.email && errors.email) ||\r\n                                            (!isSubmitting && updateCustomerState.error['error']['email'])}\r\n                                        onChange={(e: any) => {\r\n                                            handleChange(e);\r\n                                            setFieldTouched('email');\r\n                                        }}\r\n                                    />\r\n                                </div>\r\n\r\n\r\n\r\n\r\n                            </div>\r\n\r\n\r\n\r\n\r\n\r\n                            <div className='dubbleRowInputs'>\r\n                                <div className='dubbleRowInputs__item'>\r\n                                    <h3 className='inputFieldLabel'>\r\n                                        Country\r\n            </h3>\r\n                                    <Select\r\n                                        showSearch\r\n                                        style={{ width: '100%' }}\r\n                                        placeholder='Select a Country'\r\n                                        optionFilterProp='children'\r\n                                        defaultValue={customer && customer.country}\r\n                                        onChange={onChangeCountry}\r\n                                        filterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n                                    >\r\n                                        {countryListState.done &&\r\n                                            countryListState.data.length > 0 &&\r\n                                            countryOptions.map((option) => {\r\n                                                return <Option value={option.value}>{option.name}</Option>;\r\n                                            })}\r\n                                    </Select>\r\n                                </div>\r\n                                <div className='dubbleRowInputs__item'>\r\n                                    <h3 className='inputFieldLabel'>\r\n                                        City\r\n            </h3>\r\n                                    <Select\r\n                                        defaultValue={customer && customer.city}\r\n                                        showSearch\r\n                                        style={{ width: '100%' }}\r\n                                        placeholder='Select a city'\r\n                                        optionFilterProp='children'\r\n                                        onChange={onChangeCity}\r\n                                        filterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n                                    >\r\n                                        {cityListState.done &&\r\n                                            cityListState.data.length > 0 &&\r\n                                            cityOptions.map((option) => {\r\n                                                return <Option value={option.value}>{option.name}</Option>;\r\n                                            })}\r\n                                    </Select>\r\n                                </div>\r\n\r\n                            </div>\r\n\r\n                            <div style={{\r\n                                marginTop: '12px'\r\n                            }}></div>\r\n\r\n\r\n\r\n                            <div className='dubbleRowInputs'>\r\n                                <div className='dubbleRowInputs__item'>\r\n                                    <Input\r\n                                        label='Address'\r\n                                        value={values.address1}\r\n                                        name='address1'\r\n                                        isError={(touched.address1 && errors.address1) ||\r\n                                            (!isSubmitting && updateCustomerState.error['error']['address1'])}\r\n\r\n                                        errorString={(touched.address1 && errors.address1) ||\r\n                                            (!isSubmitting && updateCustomerState.error['error']['address1'])}\r\n                                        onChange={(e: any) => {\r\n                                            handleChange(e);\r\n                                            setFieldTouched('address1');\r\n                                        }}\r\n                                    />\r\n                                </div>\r\n                                <div className='dubbleRowInputs__item'>\r\n                                    <Input\r\n                                        label='More specific address'\r\n                                        value={values.address2}\r\n                                        name='address2'\r\n                                        isError={(touched.address2 && errors.address2) ||\r\n                                            (!isSubmitting && updateCustomerState.error['error']['address2'])}\r\n\r\n                                        errorString={(touched.address2 && errors.address2) ||\r\n                                            (!isSubmitting && updateCustomerState.error['error']['address2'])}\r\n                                        onChange={(e: any) => {\r\n                                            handleChange(e);\r\n                                            setFieldTouched('address2');\r\n                                        }}\r\n                                    />\r\n                                </div>\r\n\r\n                            </div>\r\n\r\n\r\n\r\n\r\n                        </Modal>\r\n\r\n                    </>\r\n                )}\r\n        </Formik>\r\n    );\r\n};\r\n\r\n\r\nexport default QuickEdit;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useParams, useHistory } from \"react-router\";\r\n\r\n\r\n// import hooks\r\nimport { useHandleFetch } from \"../../hooks\";\r\n\r\n// import \r\nimport Moment from \"react-moment\";\r\n\r\n// import lib\r\nimport {\r\n    FileOutlined,\r\n    InboxOutlined,\r\n    RadiusUpleftOutlined,\r\n    RadiusUprightOutlined,\r\n    RadiusBottomleftOutlined,\r\n    RadiusBottomrightOutlined,\r\n    PlusOutlined,\r\n    DeleteOutlined,\r\n    EditOutlined,\r\n    CheckCircleOutlined\r\n} from '@ant-design/icons';\r\n\r\nimport { Skeleton, Empty, Popconfirm, Upload, message, Switch, Select, Button, notification, Table, Space, Input as CoolInput, Tooltip, Modal } from 'antd';\r\n\r\n\r\n// import components\r\nimport { DataTableSkeleton } from \"../../components/Placeholders\";\r\nimport CustomerEdit from \"./CustomerEdit\";\r\nimport moment from \"moment\";\r\n\r\n\r\nconst { Column, ColumnGroup } = Table;\r\nconst { Search } = CoolInput;\r\n\r\ninterface Props {\r\n    productRecord?: any;\r\n}\r\n\r\nconst NewBrandDetail = (props: Props) => {\r\n    const [customerDetailState, handleCustomerDetailFetch] = useHandleFetch({}, 'customerDetail');\r\n    const [orderListState, handleOrderListFetch] = useHandleFetch({}, 'orderListForCustomer');\r\n    const [tagEditVisible, setTagEditVisible] = useState(false);\r\n    const [customerDetailData,setCustomerDetailData] = useState({}); \r\n\r\n\r\n\r\n    console.log('customerDetailData',customerDetailData); \r\n    const params = useParams();\r\n    const history = useHistory();\r\n    const customerId = params['id'];\r\n\r\n    useEffect(() => {\r\n\r\n        const getCustomerDetail = async () => {\r\n            const customerDetailDataRes = await handleCustomerDetailFetch({\r\n                urlOptions: {\r\n                    placeHolders: {\r\n                        id: customerId\r\n                    }\r\n                }\r\n            });\r\n\r\n            // @ts-ignore\r\n            if(customerDetailDataRes){\r\n                // @ts-ignore\r\n                setCustomerDetailData(customerDetailDataRes); \r\n            }\r\n\r\n            console.log('customerDetailDataRes',customerDetailDataRes)\r\n        };\r\n\r\n        getCustomerDetail();\r\n\r\n    }, [customerId]);\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        const getOrderList = async () => {\r\n            await handleOrderListFetch({\r\n                urlOptions: {\r\n                    params: {\r\n                        customerId: customerId\r\n                    }\r\n                }\r\n            })\r\n        };\r\n\r\n        getOrderList();\r\n\r\n    }, [customerId]);\r\n\r\n\r\n\r\n\r\n    console.log('customerDetailData', customerDetailData);\r\n\r\n\r\n\r\n    return (\r\n        <div className='brandDetailContainer'>\r\n            <div className='brandDetailContainer__heading'>\r\n                <h3>\r\n                    Customer Detail\r\n                </h3>\r\n\r\n                {customerDetailState.done && customerDetailData && (Object.keys(customerDetailData).length > 0) && (\r\n                    <>\r\n                        <CustomerEdit\r\n                            visible={tagEditVisible}\r\n                            setvisible={setTagEditVisible}\r\n                            customer={customerDetailData}\r\n                        />\r\n                        <Button\r\n                            onClick={() => setTagEditVisible(true)}\r\n                            type='link'\r\n                            icon={<EditOutlined />}\r\n                        >\r\n                            Edit\r\n                      </Button>\r\n                    </>\r\n                )}\r\n            </div>\r\n            <Skeleton\r\n                paragraph={{ rows: 2 }}\r\n                loading={customerDetailState.isLoading}>\r\n                {customerDetailState.done && customerDetailData && !(Object.keys(customerDetailData).length > 0) && (\r\n                    <Empty description='No Customer found' image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n                )}\r\n\r\n                {customerDetailState.done && customerDetailData && (Object.keys(customerDetailData).length > 0) && (\r\n                    <div className='brandDetailContainer__header'>\r\n\r\n                        <div className='brandDetailContainer__header-info'>\r\n                            <h2>\r\n                                {customerDetailData['name']}\r\n                            </h2>\r\n                            <h3>\r\n                                {customerDetailData['description']}\r\n                            </h3>\r\n\r\n                            {customerDetailData['country'] && (\r\n                                <h3>\r\n                                    COUNTRY:\r\n                                    <span>\r\n                                        {customerDetailData['country']}\r\n                                    </span>\r\n                                </h3>\r\n                            )}\r\n\r\n\r\n                            {customerDetailData['city'] && (\r\n                                <h3>\r\n                                    CITY:\r\n                                    <span>\r\n                                        {customerDetailData['city']}\r\n                                    </span>\r\n                                </h3>\r\n                            )}\r\n                        \r\n\r\n\r\n                            {customerDetailData['address1'] && (\r\n                                <h3>\r\n                                    ADDRESS:\r\n                                    <span>\r\n                                        {customerDetailData['address1']}\r\n                                    </span>\r\n                                </h3>\r\n                            )}\r\n                         \r\n\r\n                            {customerDetailData['phone'] && (\r\n                                <h3>\r\n                                    PHONE:\r\n                                    <span>\r\n                                        {customerDetailData['phone']}\r\n                                    </span>\r\n                                </h3>\r\n                            )}\r\n\r\n                             {customerDetailData['email'] && (\r\n                                <h3>\r\n                                    EMAIL:\r\n                                    <span>\r\n                                        {customerDetailData['email']}\r\n                                    </span>\r\n                                </h3>\r\n                            )}\r\n\r\n                        </div>\r\n                    </div>\r\n                )}\r\n\r\n            </Skeleton>\r\n\r\n            <div className='brandDetailContainer__heading'>\r\n                <h3>\r\n                    Orders \r\n                </h3>\r\n            </div>\r\n            <div className='brandDetailContainer__body'>\r\n                {orderListState.isLoading && <DataTableSkeleton />}\r\n                {orderListState.done && !(orderListState.data.length > 0) && (\r\n                    <div style={{\r\n                        marginTop: '100px'\r\n                    }}>\r\n                        <Empty description='No Orders exists for this Customer ' image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n                    </div>\r\n                )}\r\n\r\n                {orderListState.done && orderListState.data && orderListState.data.length > 0 && (\r\n                    <>\r\n                        <Table\r\n                            style={{\r\n                                paddingTop: '10px',\r\n                                borderRadius: '5px !important',\r\n                                overflow: 'hidden',\r\n                                boxShadow: '0 0.125rem 0.625rem rgba(227, 231, 250, 0.3), 0 0.0625rem 0.125rem rgba(206, 220, 233, 0.4)'\r\n                            }}\r\n                            // expandable={{\r\n                            //     expandedRowRender: record => <p style={{ margin: 0 }}>{record.name}</p>,\r\n                            //     rowExpandable: record => record.name !== 'Not Expandable',\r\n                            //   }}\r\n                            // bordered={true}\r\n                            size='small'\r\n                            // pagination={false}\r\n                            dataSource={orderListState.data}\r\n                            tableLayout={'auto'}\r\n                            onHeaderRow={column => {\r\n                                return {\r\n                                    style: {\r\n                                        color: 'red !important'\r\n                                    }\r\n\r\n                                };\r\n                            }}\r\n                        >\r\n                          \r\n          \r\n          \r\n\r\n        <Column\r\n          title=\"Code\"\r\n          dataIndex=\"shortCode\"\r\n          key=\"id\"\r\n          className='classnameofthecolumn'\r\n          render={(text, record: any) => (\r\n            <>\r\n\r\n              <h4\r\n                onClick={() => {\r\n                  // setvisible(true)\r\n                  history.push(`/admin/order/${record.id}`)\r\n                }}\r\n                style={{\r\n                  fontWeight: 400,\r\n                  color: '#555',\r\n                  cursor: 'pointer'\r\n\r\n                }}>\r\n                #{text}\r\n              </h4>\r\n\r\n\r\n            </>\r\n          )}\r\n\r\n        />\r\n    <Column\r\n          title=\"Name\"\r\n          dataIndex=\"name\"\r\n          key=\"id\"\r\n          className='classnameofthecolumn'\r\n          render={(text, record: any) => (\r\n            <>\r\n\r\n              <h4\r\n                onClick={() => {\r\n                  // setvisible(true)\r\n                  history.push(`/admin/order/${record.id}`)\r\n                }}\r\n                style={{\r\n                  fontWeight: 400,\r\n                  color: '#555',\r\n                  cursor: 'pointer'\r\n\r\n                }}>\r\n                {text}\r\n              </h4>\r\n\r\n\r\n            </>\r\n          )}\r\n\r\n        />\r\n\r\n\r\n                \r\n\r\n        <Column\r\n           title=\"Delivery\" \r\n           dataIndex=\"deliveryName\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n         \r\n            />\r\n\r\n\r\n\r\n          <Column\r\n           title=\"Created\" \r\n           dataIndex=\"date_created\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n           render={(text, record: any) => (\r\n            <>\r\n\r\n              <h4\r\n               \r\n                style={{\r\n                  fontWeight: 400,\r\n                  color: '#555',\r\n\r\n                }}>\r\n                  {text && moment(text).format('MMMM Do YYYY, h:mm a')}\r\n              </h4>\r\n\r\n\r\n            </>\r\n          )}\r\n            />\r\n\r\n\r\n              <Column\r\n                title=\"Total Price\" \r\n                dataIndex=\"total\" \r\n                key=\"id\" \r\n                className='classnameofthecolumn'\r\n                />\r\n\r\n\r\n\r\n\r\n          <Column\r\n            width={150}\r\n           title=\"Status\" \r\n           dataIndex=\"status\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n           render={(text, record: any) => (\r\n            <>\r\n\r\n             <a href='##'>\r\n              <span\r\n              style={{\r\n                fontSize:'12px'\r\n              }}\r\n                >\r\n                {text}\r\n             </span> \r\n            </a>\r\n            </>\r\n          )}\r\n            />\r\n\r\n\r\n                        </Table>\r\n                    </>\r\n                )}\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NewBrandDetail\r\n","import React, {useState,useEffect} from 'react';\r\nimport {useHistory} from 'react-router-dom';\r\nimport { Table,Empty, Popconfirm, Space,Button, Input,Tooltip, notification  } from 'antd';\r\nimport { PlusOutlined, EditOutlined, DeleteOutlined,CheckCircleOutlined } from '@ant-design/icons';\r\n\r\n\r\n\r\n/// import hooks\r\nimport {  useHandleFetch } from \"../../hooks\";\r\n\r\n// import components\r\nimport { DataTableSkeleton } from \"../../components/Placeholders\";\r\n\r\n\r\n\r\nconst { Column } = Table;\r\nconst { Search } = Input;\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t  message: message || 'Page Created',\r\n\t  description: '',\r\n\t  icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n  };\r\n\r\n\r\n  const openErrorNotification = (message?: any) => {\r\n\tnotification.error({\r\n\t  message: message || 'Something Went Wrong',\r\n\t  description: '',\r\n\t  icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n  };\r\n\r\n\r\n\r\n\r\n\r\ninterface myTableProps {\r\n  data: any; \r\n  setBrandList: any; \r\n} \r\n\r\n\r\nconst MyTable = ({data,setBrandList}: myTableProps) => {\r\n    const [activeCategoryForEdit,setactiveCategoryForEdit] = useState(false); \r\n    const [deletePageState, handleDeletePageFetch] = useHandleFetch({}, 'deletePage');\r\n\r\n    const history = useHistory(); \r\n      \r\n      const handleDeletePage = async (id) => {\r\n        const deletePageRes = await handleDeletePageFetch({\r\n          urlOptions: {\r\n            placeHolders: {\r\n              id,\r\n            }\r\n            }\r\n          });\r\n\r\n            // @ts-ignore\r\n\t\t  if(deletePageRes && deletePageRes.status === 'ok'){\r\n\t\t\t  openSuccessNotification('Deleted Page'); \r\n\t\t\t  const newBrandList =  data.filter(item => item.id !== id);\r\n\t\t\t  setBrandList(newBrandList); \r\n\t\t  }\r\n      }\r\n      \r\n\r\n    return (\r\n        <>\r\n        <Table \r\n        // expandable={{\r\n        //     expandedRowRender: record => <p style={{ margin: 0 }}>{record.name}</p>,\r\n        //     rowExpandable: record => record.name !== 'Not Expandable',\r\n        //   }}\r\n        // bordered={true}\r\n        size='small'\r\n        // pagination={false}\r\n        dataSource={data}\r\n        >\r\n            <Column \r\n          title=\"\"\r\n           dataIndex=\"cover\"\r\n            key=\"id\" \r\n            width={'100px'}\r\n            \r\n           className='classnameofthecolumn'\r\n\r\n           render={(cover, record: any) => (\r\n            <>\r\n              <img\r\n                onClick={() => {\r\n                  setactiveCategoryForEdit(record);\r\n                  history.push('/admin/page/pageName')\r\n                }}\r\n                src={cover} alt='cover img' style={{\r\n                  height: '40px',\r\n                  width: '40px',\r\n                  objectFit: \"contain\",\r\n                  borderRadius: '3px',\r\n                  cursor: 'pointer'\r\n                }} />\r\n\r\n\r\n\r\n\r\n            </>\r\n          )}\r\n            />\r\n          <Column\r\n           title=\"Name\" \r\n           dataIndex=\"name\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n           render={(text, record: any) => (\r\n            <>\r\n\r\n              <h4\r\n                onClick={() => {\r\n                  setactiveCategoryForEdit(record);\r\n                  history.push('/admin/page/pageName')\r\n                }}\r\n                style={{\r\n                  fontWeight: 400,\r\n                  color: '#555',\r\n                  cursor: 'pointer'\r\n                }}>\r\n                {text}\r\n              </h4>\r\n\r\n\r\n            </>\r\n          )}\r\n            />\r\n\r\n<Column\r\n           title=\"Description\" \r\n           dataIndex=\"description\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n         \r\n            />\r\n          {/* <Column \r\n          \r\n          className='classnameofthecolumn'\r\n\r\n          title=\"Product\" dataIndex=\"product\" key=\"product\" /> */}\r\n\r\n          {/* <Column \r\n          \r\n          className='classnameofthecolumn'\r\n\r\n          title=\"Sub Category\" dataIndex=\"subCategory\" key=\"subCategory\" /> */}\r\n        \r\n        {/* <Column\r\n          title=\"Tags\"\r\n          dataIndex=\"tags\"\r\n          key=\"tags\"\r\n          render={tags => (\r\n            <>\r\n              {tags.map((tag : any) => (\r\n                <Tag color=\"blue\" key={tag}>\r\n                  {tag}\r\n                </Tag>\r\n              ))}\r\n            </>\r\n          )}\r\n        /> */}\r\n        <Column\r\n        \r\n        className='classnameofthecolumn'\r\n          title=\"\"\r\n          key=\"action\"\r\n          align='right'\r\n          render={(text, record : any) => (\r\n            <Space size=\"middle\">\r\n                <a href='##'>\r\n               <Tooltip placement=\"top\" title='Quick Edit Page'>\r\n              <span className='iconSize' onClick={() => {\r\n                setactiveCategoryForEdit(record); \r\n              }}> \r\n              <EditOutlined />\r\n            \r\n              </span>\r\n               </Tooltip>\r\n               </a>\r\n\r\n\r\n \r\n               <Popconfirm \r\n               \r\n               onConfirm={() => handleDeletePage(record.id)}\r\n               title=\"Are you sure？\" okText=\"Yes\" cancelText=\"No\">\r\n           \r\n           <span \r\n             className='iconSize iconSize-danger'\r\n             > \r\n             <DeleteOutlined/>\r\n            </span>\r\n           </Popconfirm>\r\n\r\n\r\n            </Space>\r\n          )}\r\n        />\r\n      </Table>\r\n\r\n\r\n  \r\n\r\n\r\n    \r\n\r\n\r\n    \r\n    </>\r\n    )\r\n}\r\n\r\n\r\ninterface Props {\r\n}\r\n\r\nconst PageList = ({}: Props) => {\r\n\r\n\r\n  const [pageList,setPageList] = useState([]);\r\n  const [pageState, handlePagsListFetch] = useHandleFetch({}, 'pageList');\r\n\r\n  const history = useHistory(); \r\n\r\n  useEffect(()=>{\r\n   const setPages = async () => {\r\n     const pages = await handlePagsListFetch({}); \r\n     // @ts-ignore\r\n     setPageList(pages); \r\n   }\r\n   setPages(); \r\n  },[])\r\n\r\n\r\n\r\n\r\n    \r\n  const handleSearch = (value) => {\r\n    if(pageState.data.length > 0 ){\r\n      const newBrandList = pageState.data.filter(item => item.name.toLowerCase().includes(value.toLowerCase())); \r\n      setPageList(newBrandList); \r\n    }\r\n     \r\n  }\r\n\r\n\treturn (\r\n\t\t<>\r\n  \r\n    <div className='categoryListContainer'>\r\n        <div className='categoryListContainer__header'>\r\n           <div className='categoryListContainer__header-searchBar'>\r\n\r\n          <h2 className='categoryListContainer__header-title'>\r\n            Pages\r\n            </h2>\r\n\r\n          <Search\r\n            enterButton={false}\r\n            className='searchbarClassName'\r\n          placeholder=\"search pages..\"\r\n          onSearch={value => handleSearch(value)}\r\n        />\r\n          </div>\r\n            <Button\r\n          // type=\"primary\"\r\n          className='btnPrimaryClassNameoutline'\r\n          icon={<PlusOutlined />}\r\n          onClick={() => history.push('/admin/page/new')}\r\n        >\r\n        Add New\r\n            \r\n            </Button>\r\n            </div>\r\n\r\n            <div className='categoryListContainer__afterHeader'>\r\n            {/* <Search\r\n      placeholder=\"search categories..\"\r\n      size=\"large\"\r\n      onSearch={value => console.log(value)}\r\n      style={{ width: 300 }}\r\n    /> */}\r\n            </div>\r\n\r\n     \r\n\t\t\t\r\n\t\t\t<div className='categoryListContainer__categoryList'>\r\n        {pageState.done && pageList.length > 0 && <MyTable \r\n          setBrandList={setPageList}\r\n        data={pageList} />}\r\n        {pageState.isLoading && <DataTableSkeleton />}\r\n        {pageState.done && !(pageList.length > 0) && (\r\n\t\t\t<div style={{\r\n\t\t\t\tmarginTop: '200px'\r\n\t\t\t}}>\r\n\t\t\t\t<Empty description='No Page found'  image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n\t\t\t</div>\r\n\t\t)}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\r\n\r\n    </>\r\n\t);\r\n};\r\n\r\nexport default PageList;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n\r\n// import hhooks\r\nimport { useHandleFetch } from '../../hooks';\r\n\r\n\r\n// import third party ui lib\r\nimport { Upload, message, Switch, Select, Button, notification, Modal, Empty, Steps, Tooltip } from 'antd';\r\n\r\nimport {\r\n\tCheckCircleOutlined,\r\n\tCaretRightOutlined,\r\n\tCaretLeftOutlined,\r\n\tCaretRightFilled,\r\n\tUserOutlined,\r\n\tInfoCircleOutlined,\r\n\tFileOutlined,\r\n\tInboxOutlined,\r\n\tFileAddOutlined,\r\n\tDeleteOutlined,\r\n\tCloseOutlined,\r\n\tCheckOutlined,\r\n\tPlusOutlined,\r\n\tFileImageFilled\r\n} from '@ant-design/icons';\r\n\r\nimport CKEditor from '@ckeditor/ckeditor5-react';\r\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\r\n\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport MediaLibrary from \"../../components/MediaLibrary\";\r\nimport MetaTags from \"../../pages/category/MetaTags\";\r\n\r\n\r\n\r\nconst { Option } = Select;\r\nconst { Step } = Steps;\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t\tmessage: message || 'Page Created',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n\tnotification.error({\r\n\t\tmessage: message || 'Something Went Wrong',\r\n\t\tdescription: '',\r\n\t\ticon: <InfoCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n\tname: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\n\r\n\r\n\r\nconst initialValues = {\r\n\tname: '',\r\n\tbnName: '',\r\n\tcontent: '',\r\n\tbnContent: '',\r\n\tmetaTitle: '',\r\n\tbnMetaTitle: '',\r\n\tmetaDescription: '',\r\n\tbnMetaDescription: '',\r\n\tmetaTags: '',\r\n\tbnMetaTags: '',\r\n\turl: ''\r\n};\r\n\r\n\r\nconst steps = [\r\n\t{\r\n\t\ttitle: 'Order Information',\r\n\t\tcontent: '',\r\n\t\t// description: 'Add Customer & Products'\r\n\t},\r\n\t{\r\n\t\ttitle: 'Billing Address',\r\n\r\n\t},\r\n\t{\r\n\t\ttitle: 'Confirm Order',\r\n\t\tcontent: '',\r\n\t},\r\n];\r\n\r\n\r\n\r\n\r\ninterface Props {\r\n\r\n}\r\n\r\nconst AddNewPage = ({ }: Props) => {\r\n\r\n\tconst [addPageState, handleAddPageFetch] = useHandleFetch({}, 'addPage');\r\n\tconst [content, setContent] = useState(\"<p>Hello from the new page !</p>\");\r\n\tconst [bnContent, setBnContent] = useState(\"<p>হ্যালো নতুন পেজ থেকে!</p>\");\r\n\tconst [myImages, setmyImages] = useState(false);\r\n\tconst [visibleMedia, setvisibleMedia] = useState(false);\r\n\tconst [coverImageId, setCoverImageId] = useState('');\r\n\tconst [tags,setTags] = useState([]);\r\n\tconst [bnTags,setBnTags] = useState([]);\r\n\r\n\r\n\tconst handleAddPageSubmit = async (values: any, actions: any) => {\r\n\t\tconsole.log('fuckit', values);\r\n\t\tconsole.log('values', values);\r\n\t\t\r\n\t\tconst addOrderRes = await handleAddPageFetch({\r\n\t\t\tbody: {\r\n\t\t\t\tname: values.name,\r\n\t\t\t\tcontent: content,\r\n\t\t\t\turl: values.name,\r\n\t\t\t\tcover: myImages ? myImages[0] && myImages[0].id : '',\r\n\t\t\t\tmetaTitle: values.metaTitle,\r\n\t\t\t\tmetaDescription: values.metaDescription,\r\n\t\t\t\tmetaTags: tags.join(','),\r\n\r\n\r\n\t\t\t\tbn: {\r\n\t\t\t\t\tmetaTitle: values.bnMetaTitle,\r\n\t\t\t\t\tmetaDescription: values.bnMetaDescription,\r\n\t\t\t\t\tmetaTags: bnTags.join(','),\r\n\t\t\t\t\tname: values.bnName.trim(),\r\n\t\t\t\t\tcontent: values.setBnContent,\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t});\r\n\r\n\t\t// @ts-ignore\r\n\t\tif (addOrderRes && addOrderRes.status === 'ok') {\r\n\t\t\t// openSuccessNotification();\r\n\r\n\r\n\t\t\tactions.resetForm();\r\n\t\t}\r\n\t\telse {\r\n\t\t\topenErrorNotification(\"Couldn't create page, Something went wrong\")\r\n\t\t}\r\n\r\n\t\tactions.setSubmitting(false);\r\n\t};\r\n\r\n\r\n\tconst getisSubmitButtonDisabled = (values, isValid) => {\r\n\t\tif (!isValid ||\r\n\t\t\t!values.name ||\r\n\t\t\t!values.pickUpLocation ||\r\n\t\t\t!values.time) {\r\n\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\r\n\tconst handleImagesDelete = (id) => {\r\n\t\t// @ts-ignore\r\n\t\tconst newImages = myImages && myImages.filter(image => {\r\n\t\t\treturn image.id !== id;\r\n\t\t})\r\n\r\n\t\tsetmyImages(newImages);\r\n\t}\r\n\r\n\r\n\r\n\t\r\n    useEffect(() => {\r\n\t\tif (!addPageState['isLoading']) {\r\n\t\t\tconst error = addPageState['error'];\r\n\t\t\tif (error['isError'] && Object.keys(error['error']).length > 0) {\r\n\t\t\t\tif (error['error']['registerError']) {\r\n\t\t\t\t\t// setServerErrors(error['error']['registerError']);\r\n\t\t\t\t} else if (error['error']['checkoutError']) {\r\n\t\t\t\t\t// setServerErrors(error['error']['checkoutError']);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\t// setServerErrors(error['error']);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst errors =\r\n\t\t\t\t\tObject.values(error['error']).length > 0\r\n\t\t\t\t\t\t? Object.values(error['error'])\r\n\t\t\t\t\t\t: [];\r\n\t\t\t\terrors.forEach((err, i) => {\r\n\t\t\t\t\tif (typeof err === 'string') {\r\n\t\t\t\t\t\topenErrorNotification(err);\r\n\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if (typeof err === 'object') {\r\n\t\t\t\t\t\tif (err && Object.keys(err).length > 0) {\r\n\t\t\t\t\t\t\tconst errs = Object.values(err);\r\n\t\t\t\t\t\t\terrs.forEach(err => {\r\n\t\t\t\t\t\t\t\topenErrorNotification(err);\r\n\t\t\t\t\t\t\t})\r\n\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (\r\n\t\t\t!addPageState['isLoading'] &&\r\n\t\t\tObject.keys(addPageState.data).length > 0\r\n\t\t) {\r\n\t\t\tif (addPageState['data']['status'] === 'ok') {\r\n\t\t\t\topenSuccessNotification('Page Created Successfully');\r\n\t\t\t\t// history.push({\r\n\t\t\t\t//   pathname: '/orderDetails',\r\n\t\t\t\t//   state: checkoutState['data']\r\n\t\t\t\t// })\r\n\r\n\t\t\t\t// clearCart();\r\n\t\t\t\t// setIsModalShown(true);\r\n\t\t\t}\r\n\t\t}\r\n    }, [addPageState]);\r\n\r\n\r\n\r\n\r\n\tconsole.log('myImagesdx', myImages)\r\n\r\n\treturn (\r\n\t\t<Formik\r\n\t\t\tonSubmit={(values, actions) => handleAddPageSubmit(values, actions)}\r\n\t\t\tvalidationSchema={validationSchema}\r\n\t\t\tvalidateOnBlur={false}\r\n\t\t\tenableReinitialize={true}\r\n\t\t\tinitialValues={\r\n\t\t\t\t{ ...initialValues }\r\n\t\t\t}\r\n\t\t>\r\n\t\t\t{({\r\n\t\t\t\thandleChange,\r\n\t\t\t\tvalues,\r\n\t\t\t\thandleSubmit,\r\n\t\t\t\terrors,\r\n\t\t\t\tisValid,\r\n\t\t\t\tisSubmitting,\r\n\t\t\t\ttouched,\r\n\t\t\t\thandleBlur,\r\n\t\t\t\tsetFieldTouched,\r\n\t\t\t\thandleReset,\r\n\t\t\t}) => (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<div className=\"addNewPageContainer\">\r\n\t\t\t\t\t\t\t<h3 className='addNewPageContainer__heading'>\r\n\t\t\t\t\t\t\t\tAdd New Page\r\n\t\t                 \t</h3>\r\n\r\n\t\t\t\t\t\t\t<div className='addNewPageContainer__header'>\r\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs'>\r\n\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\tlabel='Title'\r\n\t\t\t\t\t\t\t\t\t\t\tvalue={values.name}\r\n\t\t\t\t\t\t\t\t\t\t\tname='name'\r\n\t\t\t\t\t\t\t\t\t\t\tplaceHolder='About us,Contact us'\r\n\t\t\t\t\t\t\t\t\t\t\tisError={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addPageState.error['error']['name'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addPageState.error['error']['name'])}\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('name');\r\n\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\tlabel='BN Title'\r\n\t\t\t\t\t\t\t\t\t\tvalue={values.bnName}\r\n\t\t\t\t\t\t\t\t\t\tplaceHolder={'ব্লগ...'}\r\n\t\t\t\t\t\t\t\t\t\tname='bnName'\r\n\t\t\t\t\t\t\t\t\t\tisError={(touched.bnName && errors.bnName) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addPageState.error['error']['bnName'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\terrorString={(touched.bnName && errors.bnName) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addPageState.error['error']['bnName'])}\r\n\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('bnName');\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\r\n\r\n\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\tlabel='URL'\r\n\t\t\t\t\t\t\t\t\t\t\tvalue={values.url}\r\n\t\t\t\t\t\t\t\t\t\t\tname='url'\r\n\t\t\t\t\t\t\t\t\t\t\tisError={(touched.url && errors.url) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addPageState.error['error']['url'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.url && errors.url) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addPageState.error['error']['url'])}\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('url');\r\n\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>Thumbnail</h3>\r\n\r\n\t\t\t\t\t\t\t\t<div className='aboutToUploadImagesContainer'>\r\n\t\t\t\t\t\t\t\t\t{myImages &&\r\n\t\t\t\t\t\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\t\t\t\t\t\tmyImages.length > 0 && myImages.map((image, index) => {\r\n\t\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div className='aboutToUploadImagesContainer__item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='aboutToUploadImagesContainer__item-imgContainer'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => setCoverImageId(image.id)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<img src={image.cover} alt={image.alt} />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<span\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => handleImagesDelete(image.id)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='aboutToUploadImagesContainer__item-remove'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<CloseOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t\t})}\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t{myImages ? !myImages[0] && (\r\n\t\t\t\t\t\t\t\t\t\t<Tooltip\r\n\t\t\t\t\t\t\t\t\t\t\ttitle={'Attach images'}>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetvisibleMedia(true);\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\tclassName='aboutToUploadImagesContainer__uploadItem'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t{/* <FileAddOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<FileImageTwoTone />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<FileImageOutlined /> */}\r\n\t\t\t\t\t\t\t\t\t\t\t\t<FileImageFilled />\r\n\t\t\t\t\t\t\t\t\t\t\t\t{/* <h5>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t Select From Library\r\n\t\t\t\t\t\t\t\t\t\t\t\t<     /h5> */}\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span className='aboutToUploadImagesContainer__uploadItem-plus'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<PlusOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t\t\t\t) : <Tooltip\r\n\t\t\t\t\t\t\t\t\t\ttitle={'Attach images'}>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetvisibleMedia(true);\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\tclassName='aboutToUploadImagesContainer__uploadItem'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t{/* <FileAddOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t<FileImageTwoTone />\r\n\t\t\t\t\t\t\t\t\t\t\t\t<FileImageOutlined /> */}\r\n\t\t\t\t\t\t\t\t\t\t\t\t<FileImageFilled />\r\n\t\t\t\t\t\t\t\t\t\t\t\t{/* <h5>\r\n\t\t\t\t\t\t\t\t\t\t\t\t Select From Library\r\n\t\t\t\t\t\t\t\t\t\t<     /h5> */}\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span className='aboutToUploadImagesContainer__uploadItem-plus'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<PlusOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</Tooltip>}\r\n\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t<p style={{\r\n\t\t\t\t\t\t\t\t\tcolor: '#ff4d4f',\r\n\t\t\t\t\t\t\t\t\tmarginTop:'-15px'\r\n\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t{addPageState.error['error']['cover']}\r\n\t\t\t\t\t\t\t\t</p>\r\n\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className='addNewPageContainer__body'>\r\n\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\t\t\tContent\r\n                               </h3>\r\n\r\n\t\t\t\t\t\t\t\t<CKEditor\r\n\t\t\t\t\t\t\t\t\teditor={ClassicEditor}\r\n\t\t\t\t\t\t\t\t\tdata={content}\r\n\t\t\t\t\t\t\t\t\tonInit={editor => {\r\n\t\t\t\t\t\t\t\t\t\t// You can store the \"editor\" and use when it is needed.\r\n\t\t\t\t\t\t\t\t\t\tconsole.log('Editor is ready to use!', editor);\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\tonChange={(event, editor) => {\r\n\t\t\t\t\t\t\t\t\t\tconst data = editor.getData();\r\n\t\t\t\t\t\t\t\t\t\tsetContent(data);\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\tonBlur={(event, editor) => {\r\n\t\t\t\t\t\t\t\t\t\tconsole.log('Blur.', editor);\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\tonFocus={(event, editor) => {\r\n\t\t\t\t\t\t\t\t\t\tconsole.log('Focus.', editor);\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\t\tmarginTop:'15px'\r\n\t\t\t\t\t\t\t\t}}></div>\r\n\r\n\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\t\t\tBN Content\r\n                               </h3>\r\n\r\n\t\t\t\t\t\t\t\t<CKEditor\r\n\t\t\t\t\t\t\t\t\teditor={ClassicEditor}\r\n\t\t\t\t\t\t\t\t\tdata={bnContent}\r\n\t\t\t\t\t\t\t\t\tonInit={editor => {\r\n\t\t\t\t\t\t\t\t\t\t// You can store the \"editor\" and use when it is needed.\r\n\t\t\t\t\t\t\t\t\t\tconsole.log('Editor is ready to use!', editor);\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\tonChange={(event, editor) => {\r\n\t\t\t\t\t\t\t\t\t\tconst data = editor.getData();\r\n\t\t\t\t\t\t\t\t\t\tsetBnContent(data);\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\tonBlur={(event, editor) => {\r\n\t\t\t\t\t\t\t\t\t\tconsole.log('Blur.', editor);\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\tonFocus={(event, editor) => {\r\n\t\t\t\t\t\t\t\t\t\tconsole.log('Focus.', editor);\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\tmarginTop: '20px'\r\n\t\t\t\t\t\t\t}}></div>\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t<div className='addNewPageContainer__header'>\r\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs'>\r\n\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\tlabel='Meta Title'\r\n\t\t\t\t\t\t\t\t\t\t\tvalue={values.metaTitle}\r\n\t\t\t\t\t\t\t\t\t\t\tname='metaTitle'\r\n\t\t\t\t\t\t\t\t\t\t\tisError={(touched.metaTitle && errors.metaTitle) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addPageState.error['error']['metaTitle'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.metaTitle && errors.metaTitle) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addPageState.error['error']['metaTitle'])}\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('metaTitle');\r\n\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\r\n\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\tlabel='BN Meta Title'\r\n\t\t\t\t\t\t\t\t\t\t\tvalue={values.bnMetaTitle}\r\n\t\t\t\t\t\t\t\t\t\t\tplaceHolder={'নতুন,ফ্রেশ'}\r\n\t\t\t\t\t\t\t\t\t\t\tname='bnMetaTitle'\r\n\t\t\t\t\t\t\t\t\t\t\tisError={(touched.bnMetaTitle && errors.bnMetaTitle) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addPageState.error['error']['bnMetaTitle'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.bnMetaTitle && errors.bnMetaTitle) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addPageState.error['error']['bnMetaTitle'])}\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('bnMetaTitle');\r\n\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs'>\r\n\t\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\t\tlabel='Meta description'\r\n\t\t\t\t\t\t\t\t\tvalue={values.metaDescription}\r\n\t\t\t\t\t\t\t\t\tplaceholder={'meta...'}\r\n\t\t\t\t\t\t\t\t\tname='metaDescription'\r\n\t\t\t\t\t\t\t\t\tisError={(touched.metaDescription && errors.metaDescription) ||\r\n\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addPageState.error['error']['metaDescription'])}\r\n\r\n\t\t\t\t\t\t\t\t\terrorString={(touched.metaDescription && errors.metaDescription) ||\r\n\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addPageState.error['error']['metaDescription'])}\r\n\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\tsetFieldTouched('metaDescription');\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\r\n\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\t\t\t\tlabel='BN Meta Description'\r\n\t\t\t\t\t\t\t\t\t\t\tvalue={values.bnMetaDescription}\r\n\t\t\t\t\t\t\t\t\t\t\tplaceholder={'এইয় মেট...'}\r\n\t\t\t\t\t\t\t\t\t\t\tname='bnMetaDescription'\r\n\t\t\t\t\t\t\t\t\t\t\tisError={(touched.bnMetaDescription && errors.bnMetaDescription) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addPageState.error['error']['bnMetaDescription'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.bnMetaDescription && errors.bnMetaDescription) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addPageState.error['error']['bnMetaDescription'])}\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('bnMetaDescription');\r\n\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\r\n\r\n\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs'>\r\n\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\tMeta Tags (grocery,fashion)\r\n\t\t\t\t\t\t\t</h3>\r\n\r\n\t\t\t\t\t\t\t<MetaTags\r\n\t\t\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\t\t\tsetTags={setTags}\r\n\t\t\t\t\t\t\ttags={tags}\r\n\t\t\t\t\t\t\t />\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\r\n\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\tBN Meta Tags (মুদিখানা,ফ্যাশন)\r\n\t\t\t\t\t\t\t</h3>\r\n\r\n\t\t\t\t\t\t\t<MetaTags\r\n\t\t\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\t\t\tsetTags={setBnTags}\r\n\t\t\t\t\t\t\ttags={bnTags}\r\n\t\t\t\t\t\t\t />\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\tmarginTop: '20px'\r\n\t\t\t\t\t\t\t}}></div>\r\n\r\n\r\n\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\tloading={addPageState.isLoading}\r\n\t\t\t\t\t\t\t\tonClick={(e: any) => handleSubmit(e)}\r\n\t\t\t\t\t\t\t\tclassName='btnPrimaryClassNameoutline'\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\tCreate page\r\n                            </Button>\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t<MediaLibrary\r\n\t\t\t\t\t\t\tsetvisible={setvisibleMedia}\r\n\t\t\t\t\t\t\tvisible={visibleMedia}\r\n\t\t\t\t\t\t\tsetmyImages={setmyImages}\r\n\t\t\t\t\t\t\tmyImages={myImages}\r\n\t\t\t\t\t\t\tisModalOpenForImages={true}\r\n\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</>\r\n\t\t\t\t)}\r\n\t\t</Formik>\r\n\r\n\r\n\r\n\r\n\t);\r\n};\r\n\r\nexport default AddNewPage;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/*\r\n\r\n<div className=\"addNewPageContainer\">\r\n\t\t\t<h3 className='addNewPageContainer__heading'>\r\n\t\t\t\tAdd New Order\r\n\t\t\t</h3>\r\n\t\t\t<div className='addNewPageContainer__header'>\r\n\r\n\t\t\t</div>\r\n\t\t\t<div className='addNewPageContainer__body'>\r\n\r\n\t\t\t</div>\r\n\t\t</div>\r\n\r\n\r\n*/","import React,{useState} from 'react';\r\nimport { Modal  } from 'antd';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport {useHandleFetch} from '../../hooks';\r\n\r\nconst validationSchema = Yup.object().shape({\r\n\tname: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n\tdescription: Yup.string().label('Description').required('Description is required')\r\n});\r\n\r\n\r\n\r\n\r\n\r\ninterface Props {\r\n\tcategory: any;\r\n\tsetvisible: any; \r\n\tvisible: any;\r\n}\r\n\r\nconst QuickEdit = ({ category, setvisible, visible }: Props) => {\r\n\tconst [updateCategoryState, handleUpdateCategoryFetch] = useHandleFetch({}, 'updateCategory');\r\n\r\n\tconst handleSubmit = async (values : any, actions : any) => {\r\n\t  const updateCategoryRes = await handleUpdateCategoryFetch({\r\n\t\turlOptions: {\r\n\t\t\tplaceHolders: {\r\n\t\t\t  id: values.id,\r\n\t\t\t}\r\n\t\t  },\r\n\t\tbody: {\r\n\t\t\tname: values.name,\r\n\t\t\tdescription: values.description,\r\n\t\t},\r\n\t  });\r\n\t\r\n\t  actions.setSubmitting(false);\r\n\t};\r\n\t\r\n\r\n\tconst handleCancel = (e: any) => {\r\n        setvisible(false);\r\n      };\r\n\r\n\r\n\r\n\t  const getisSubmitButtonDisabled = (values,isValid) => {\r\n\t\tif(!values.name || !values.description || !isValid){\r\n\t\t\treturn true; \r\n\t\t}\r\n\t\treturn false; \r\n\t  }\r\n\r\n\treturn (\r\n\t\t<Formik\r\n\t\tonSubmit={(values, actions) => handleSubmit(values, actions)}\r\n\t\tvalidationSchema={validationSchema}\r\n\t\tvalidateOnBlur={false}\r\n\t\tenableReinitialize={true}\r\n\t\tinitialValues={\r\n\t\t  {...category}\r\n\t\t}\r\n\t  >\r\n\t\t{({\r\n\t\t  handleChange,\r\n\t\t  values,\r\n\t\t  handleSubmit,\r\n\t\t  errors,\r\n\t\t  isValid,\r\n\t\t  isSubmitting,\r\n\t\t  touched,\r\n\t\t  handleBlur,\r\n\t\t  setFieldTouched,\r\n\t\t  handleReset,\r\n\t\t}) => (\r\n\t\t\t<>\r\n\t\t\t<Modal\r\n\t\t\ttitle=\"Quick Edit\"\r\n\t\t\tvisible={visible}\r\n\t\t\tonOk={(e : any) => handleSubmit(e)}\r\n\t\t\tonCancel={handleCancel}\r\n\t\t\tokText='Update'\r\n\t\t\tokButtonProps={{\r\n\t\t\tloading: isSubmitting,\r\n\t\t\thtmlType: \"submit\",\r\n\t\t\tdisabled: getisSubmitButtonDisabled(values, isValid)\r\n\t\t\t}}\r\n  >\r\n  <Input \r\n\t\t\t   label='Title'\r\n\t\t\t   value={values.name}\r\n\t\t\t   name='name'\r\n\t\t\t   isError={(touched.name && errors.name) ||\r\n\t\t\t\t  (!isSubmitting && updateCategoryState.error['error']['name'])}\r\n\t\t\t  \r\n\t\t\t\t  errorString={(touched.name && errors.name) ||\r\n\t\t\t\t\t  (!isSubmitting && updateCategoryState.error['error']['name'])}\r\n\t\t\t   onChange={(e : any) => {\r\n\t\t\t\t  handleChange(e);\r\n\t\t\t\t  setFieldTouched('name');\r\n\t\t\t\t}}\r\n\t\t\t   />\r\n\t\t\t  <TextArea\r\n\t\t\t   label='Description' \r\n\t\t\t   value={values.description}\r\n\t\t\t   name='description'\r\n\t\t\t   isError={(touched.description && errors.description) ||\r\n\t\t\t\t  (!isSubmitting && updateCategoryState.error['error']['description'])}\r\n\t\t\t  \r\n\t\t\t\t  errorString={(touched.description && errors.description) ||\r\n\t\t\t\t\t  (!isSubmitting && updateCategoryState.error['error']['description'])}\r\n\t\t\t   onChange={(e : any) => {\r\n\t\t\t\t  handleChange(e);\r\n\t\t\t\t  setFieldTouched('description');\r\n\t\t\t\t}}\r\n\t\t\t\t />\r\n  </Modal>\r\n\t\t\t  \r\n\t\t\t</>\r\n\t\t  )}\r\n\t  </Formik>\r\n\t);\r\n};\r\n\r\n\r\nexport default QuickEdit;\r\n","// @ts-nocheck\r\n\r\nimport React from 'react'; \r\nimport { Tag, Input, Tooltip } from 'antd';\r\nimport { PlusOutlined } from '@ant-design/icons';\r\n\r\nclass EditableTagGroup extends React.Component {\r\n  state = {\r\n    tags: [],\r\n    inputVisible: false,\r\n    inputValue: '',\r\n    editInputIndex: -1,\r\n    editInputValue: '',\r\n  };\r\n\r\n  handleClose = removedTag => {\r\n    const tags = this.state.tags.filter(tag => tag !== removedTag);\r\n    this.setState({ tags });\r\n  };\r\n\r\n  showInput = () => {\r\n    this.setState({ inputVisible: true }, () => this.input.focus());\r\n  };\r\n\r\n  handleInputChange = e => {\r\n    this.setState({ inputValue: e.target.value });\r\n  };\r\n\r\n  handleInputConfirm = () => {\r\n    const { inputValue } = this.state;\r\n    let { tags } = this.state;\r\n    if (inputValue && tags.indexOf(inputValue) === -1) {\r\n      tags = [...tags, inputValue];\r\n    }\r\n    this.setState({\r\n      tags,\r\n      inputVisible: false,\r\n      inputValue: '',\r\n    });\r\n  };\r\n\r\n  handleEditInputChange = e => {\r\n    this.setState({ editInputValue: e.target.value });\r\n  };\r\n\r\n  handleEditInputConfirm = () => {\r\n    this.setState(({ tags, editInputIndex, editInputValue }) => {\r\n      const newTags = [...tags];\r\n      newTags[editInputIndex] = editInputValue;\r\n\r\n      return {\r\n        tags: newTags,\r\n        editInputIndex: -1,\r\n        editInputValue: '',\r\n      };\r\n    });\r\n  };\r\n\r\n  saveInputRef = input => {\r\n    this.input = input;\r\n  };\r\n\r\n  saveEditInputRef = input => {\r\n    this.editInput = input;\r\n  };\r\n\r\n  render() {\r\n    const { tags, inputVisible, inputValue, editInputIndex, editInputValue } = this.state;\r\n    return (\r\n      <>\r\n        {tags.map((tag, index) => {\r\n          if (editInputIndex === index) {\r\n            return (\r\n              <Input\r\n                ref={this.saveEditInputRef}\r\n                key={tag}\r\n                size=\"small\"\r\n                className=\"tag-input\"\r\n                value={editInputValue}\r\n                onChange={this.handleEditInputChange}\r\n                onBlur={this.handleEditInputConfirm}\r\n                onPressEnter={this.handleEditInputConfirm}\r\n              />\r\n            );\r\n          }\r\n\r\n          const isLongTag = tag.length > 20;\r\n\r\n          const tagElem = (\r\n            <Tag\r\n              className=\"edit-tag\"\r\n              key={tag}\r\n              closable={index !== 0}\r\n              onClose={() => this.handleClose(tag)}\r\n            >\r\n              <span\r\n                onDoubleClick={e => {\r\n                  if (index !== 0) {\r\n                    this.setState({ editInputIndex: index, editInputValue: tag }, () => {\r\n                      this.editInput.focus();\r\n                    });\r\n                    e.preventDefault();\r\n                  }\r\n                }}\r\n              >\r\n                {isLongTag ? `${tag.slice(0, 20)}...` : tag}\r\n              </span>\r\n            </Tag>\r\n          );\r\n          return isLongTag ? (\r\n            <Tooltip title={tag} key={tag}>\r\n              {tagElem}\r\n            </Tooltip>\r\n          ) : (\r\n            tagElem\r\n          );\r\n        })}\r\n        {inputVisible && (\r\n          <Input\r\n          style={{\r\n            margin: \"10px 0\"\r\n          }}\r\n            ref={this.saveInputRef}\r\n            type=\"text\"\r\n            size=\"small\"\r\n            className=\"tag-input\"\r\n            value={inputValue}\r\n            onChange={this.handleInputChange}\r\n            onBlur={this.handleInputConfirm}\r\n            onPressEnter={this.handleInputConfirm}\r\n          />\r\n        )}\r\n        {!inputVisible && (\r\n          <Tag className=\"site-tag-plus\" onClick={this.showInput}>\r\n            <PlusOutlined /> New Value\r\n          </Tag>\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EditableTagGroup","import React, {useState} from 'react';\r\n\r\n// import third party ui lib\r\nimport { Upload, message, Switch, Select, Button, notification,Table, Space, Input as CoolInput,Tooltip, Modal,\r\n\r\n} from 'antd';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n\r\n\r\nimport {\r\n\tFileOutlined,\r\n\tInboxOutlined,\r\n\tRadiusUpleftOutlined,\r\n\tRadiusUprightOutlined,\r\n\tRadiusBottomleftOutlined,\r\n\tRadiusBottomrightOutlined,\r\n\tPlusOutlined,\r\n\tDeleteOutlined,\r\n\tEditOutlined\r\n} from '@ant-design/icons';\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n\r\n\r\n/// import hooks\r\nimport { useFetch, useHandleFetch } from \"../../hooks\";\r\n\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport { DataTableSkeleton } from \"../../components/Placeholders\";\r\nimport QuickEdit from \"./QuickEdit\"\r\nimport AddAttributeValues from \"./AddAttributeValues\"\r\n\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n\tname: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n\tdescription: Yup.string().label('Description').required('Description is required')\r\n});\r\n\r\n\r\nconst initialValues = {\r\n\tname: '',\r\n\tdescription: ''\r\n}\r\n\r\n\r\nconst { Column, ColumnGroup } = Table;\r\nconst { Search } = CoolInput;\r\n\r\n\r\n\r\nconst MyTable = ({data}) => {\r\n    const [visible,setvisible] = useState(false);   \r\n\tconst [activeCategoryForEdit,setactiveCategoryForEdit] = useState(false); \r\n    const [deleteTagState, handleDeleteTagFetch] = useHandleFetch({}, 'deleteTag');\r\n\r\n\r\n\tconst handleDeleteCategory = async (id) => {\r\n        const deleteTagRes = await handleDeleteTagFetch({\r\n          urlOptions: {\r\n            placeHolders: {\r\n              id,\r\n            }\r\n            }\r\n          });\r\n      }\r\n\r\n\r\n    const handleOk = (e: any) => {\r\n        setvisible(false);\r\n      \r\n      };\r\n    \r\n      const handleCancel = (e: any) => {\r\n        setvisible(false);\r\n      };\r\n\r\n      \r\n\r\n    return (\r\n        <>\r\n         <Table \r\n        // expandable={{\r\n        //     expandedRowRender: record => <p style={{ margin: 0 }}>{record.name}</p>,\r\n        //     rowExpandable: record => record.name !== 'Not Expandable',\r\n        //   }}\r\n        // bordered={true}\r\n        size='small'\r\n        // pagination={false}\r\n        dataSource={data}\r\n        >\r\n\r\n          <Column\r\n           title=\"Name\" \r\n           dataIndex=\"name\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n         \r\n            />\r\n\r\n<Column\r\n           title=\"Description\" \r\n           dataIndex=\"description\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n         \r\n            />\r\n        <Column\r\n        \r\n        className='classnameofthecolumn'\r\n          title=\"\"\r\n          key=\"action\"\r\n          align='right'\r\n          render={(text, record : any) => (\r\n            <Space size=\"middle\">\r\n            \r\n               <Tooltip placement=\"top\" title='Quick Edit Tag'>\r\n              <span className='iconSize' onClick={() => {\r\n                setvisible(true)\r\n                setactiveCategoryForEdit(record); \r\n              }}> \r\n              <EditOutlined />\r\n            \r\n              </span>\r\n               </Tooltip>\r\n\r\n\r\n             \r\n              <Tooltip placement=\"top\" title='Delete Tag'>\r\n            \r\n\r\n             <span \r\n             className='iconSize iconSize-danger'\r\n             onClick={() => handleDeleteCategory(record.id)}\r\n             > \r\n             <DeleteOutlined/>\r\n            </span>\r\n            \r\n          </Tooltip>\r\n             \r\n            </Space>\r\n          )}\r\n        />\r\n      </Table>\r\n\r\n\r\n\r\n     \r\n\r\n\t\t{activeCategoryForEdit &&   <QuickEdit \r\n    setvisible={setvisible}\r\n    visible={visible}\r\n    category={activeCategoryForEdit}/>}\r\n    </>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\n\r\nconst props = {\r\n\tname: 'file',\r\n\tmultiple: true,\r\n\taction: 'https://www.mocky.io/v2/5cc8019d300000980a055e76',\r\n\tonChange(info: any) {\r\n\t\tconst { status } = info.file;\r\n\t\tif (status !== 'uploading') {\r\n\t\t\t// console.log(info.file, info.fileList);\r\n\t\t}\r\n\t\tif (status === 'done') {\r\n\t\t\tmessage.success(`${info.file.name} file uploaded successfully.`);\r\n\t\t} else if (status === 'error') {\r\n\t\t\tmessage.error(`${info.file.name} file upload failed.`);\r\n\t\t}\r\n\t}\r\n};\r\n\r\ninterface Props {}\r\n\r\nconst AttributeList = ({  }: Props) => {\r\n\tconst tagState = useFetch([], [], 'brandList', {\r\n\t\turlOptions: {\r\n\t\t  params: {\r\n\t\t\tisSubCategory: true,\r\n\t\t  },\r\n\t\t},\r\n\t  });\r\n\r\n\t  const [updateCategoryState, handleUpdateCategoryFetch] = useHandleFetch({}, 'updateCategory');\r\n\t  const [addNewCategoryVisible,setAddNewCategoryVisible] = useState(false);   \r\n\r\n\r\n\r\n\t  const handleSubmit = async (values : any, actions : any) => {\r\n\t\tconst updateCategoryRes = await handleUpdateCategoryFetch({\r\n\t\t  urlOptions: {\r\n\t\t\t  placeHolders: {\r\n\t\t\t\tid: values.id,\r\n\t\t\t  }\r\n\t\t\t},\r\n\t\t  body: {\r\n\t\t\t  name: values.name,\r\n\t\t\t  description: values.description,\r\n\t\t  },\r\n\t\t});\r\n\t  \r\n\t\tactions.setSubmitting(false);\r\n\t  };\r\n\t  \r\n \r\n  \r\n  \r\n  \r\n\t\tconst getisSubmitButtonDisabled = (values,isValid) => {\r\n\t\t  if(!values.name || !values.description || !isValid){\r\n\t\t\t  return true; \r\n\t\t  }\r\n\t\t  return false; \r\n\t\t}\r\n\r\n\r\n\r\n\r\n  const handleOkAddNewCategory = (e: any) => {\r\n    setAddNewCategoryVisible(false);\r\n  \r\n  };\r\n\r\n  const handleCancelAddNewCategory = (e: any) => {\r\n    setAddNewCategoryVisible(false);\r\n  };\r\n\r\n\treturn (\r\n\t\t<div className='site-layout-background' style={{ padding: '30px 20px 30px 20px', minHeight: 360 }}>\r\n\t\t\t<div className='addproductSectionTitleContainer'>\r\n\t\t\t\t<h2 className='addprouctSectionTitle'>Add Attribute</h2>\r\n\t\t\t</div>\r\n\t\t\t<div className='addproductSectionContainer addproductSectionContainer-tags'>\r\n\t\t\t\t<div className='addproductSection addproductSection-left'>\r\n\t\t\t\t<Formik\r\n\t\tonSubmit={(values, actions) => handleSubmit(values, actions)}\r\n\t\tvalidationSchema={validationSchema}\r\n\t\tvalidateOnBlur={false}\r\n\t\tenableReinitialize={true}\r\n\t\tinitialValues={\r\n\t\t  {...initialValues}\r\n\t\t}\r\n\t  >\r\n\t\t{({\r\n\t\t  handleChange,\r\n\t\t  values,\r\n\t\t  handleSubmit,\r\n\t\t  errors,\r\n\t\t  isValid,\r\n\t\t  isSubmitting,\r\n\t\t  touched,\r\n\t\t  handleBlur,\r\n\t\t  setFieldTouched,\r\n\t\t  handleReset,\r\n\t\t}) => (\r\n\t\t\t<>\r\n  <Input \r\n\t\t\t   label='Title'\r\n\t\t\t   value={values.name}\r\n\t\t\t   name='name'\r\n\t\t\t   isError={(touched.name && errors.name) ||\r\n\t\t\t\t  (!isSubmitting && updateCategoryState.error['error']['name'])}\r\n\t\t\t  \r\n\t\t\t\t  errorString={(touched.name && errors.name) ||\r\n\t\t\t\t\t  (!isSubmitting && updateCategoryState.error['error']['name'])}\r\n\t\t\t   onChange={(e : any) => {\r\n\t\t\t\t  handleChange(e);\r\n\t\t\t\t  setFieldTouched('name');\r\n\t\t\t\t}}\r\n\t\t\t   />\r\n\r\n\t\t\t   <div style={{\r\n\t\t\t\t   marginTop: '0px'\r\n\t\t\t   }}></div>\r\n\t\t\t  \r\n\r\n\t\t\t  <h3 className='inputFieldLabel'> Values</h3>\r\n\t\t\t\t\r\n\t\t\t\t<AddAttributeValues />\r\n\t\t\t\t\t  <Button \r\n\t\t\t\t\t  style={{\r\n\t\t\t\t\t\t  display: 'block',\r\n\t\t\t\t\t\t  marginTop: '20px'\r\n\t\t\t\t\t  }}\r\n\t\t\t\t\t\t\ttype='primary'\r\n\t\t\t\t\t\t\tonClick={(e: any) => handleSubmit(e)}\r\n\t\t\t\t\t\t\tdisabled={getisSubmitButtonDisabled(values,isValid)}\r\n\t\t\t\t\t\t\tloading={isSubmitting}\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t >\r\n\t\t\t\t\t\tCreate\r\n\t\t\t\t\t</Button>\r\n\t\t\t</>\r\n\t\t  )}\r\n\t  </Formik>\r\n\r\n\r\n\t\t\t\t</div>\r\n                <div className='addproductSection addproductSection-right'> \r\n\r\n\t\t\t\t<div className='categoryListContainer'>\r\n            <div className='categoryListContainer__header'>\r\n           \r\n\r\n          <div className='categoryListContainer__header-searchBar-tag'>\r\n          {/* <h2 className='categoryListContainer__header-title'>\r\n            Brand\r\n            </h2> */}\r\n\r\n\r\n          <Search\r\n            enterButton={false}\r\n            className='searchbarClassName'\r\n          placeholder=\"search categories..\"\r\n          onSearch={value => console.log(value)}\r\n          // style={{ width: 300 }}\r\n        />\r\n          </div>\r\n            {/* <Button\r\n          // type=\"primary\"\r\n          className='btnPrimaryClassNameoutline'\r\n          icon={<PlusOutlined />}\r\n          onClick={() => setAddNewCategoryVisible(true)}\r\n        >\r\n        Add New\r\n            \r\n            </Button> */}\r\n            </div>\r\n\r\n            <div className='categoryListContainer__afterHeader'>\r\n            {/* <Search\r\n      placeholder=\"search categories..\"\r\n      size=\"large\"\r\n      onSearch={value => console.log(value)}\r\n      style={{ width: 300 }}\r\n    /> */}\r\n            </div>\r\n\r\n     \r\n\t\t\t\r\n\t\t\t<div className='categoryListContainer__categoryList'>\r\n\t\t\t\t{tagState.done && tagState.data.length > 0 && <MyTable data={tagState.data} />}\r\n\t\t\t\t{tagState.isLoading && <DataTableSkeleton />}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\r\n                </div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default AttributeList;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Modal, Select, notification, Empty, Spin } from 'antd';\r\nimport * as Yup from 'yup';\r\nimport { CheckCircleOutlined, InfoCircleOutlined } from '@ant-design/icons';\r\n\r\n// import components\r\nimport { useHandleFetch } from '../../hooks';\r\n\r\n\r\nconst { Option } = Select;\r\n\r\n\r\nconst QuickEdit = ({ id, setShowInvoice, showInvoice }) => {\r\n    const [orderDetailState, handleOrderDetailFetch] = useHandleFetch({}, 'orderDetail');\r\n\r\n    useEffect(() => {\r\n        const getOrderDetail = async () => {\r\n            await handleOrderDetailFetch({\r\n                urlOptions: {\r\n                    placeHolders: {\r\n                        id\r\n                    }\r\n                }\r\n            })\r\n        };\r\n\r\n        getOrderDetail();\r\n\r\n    }, [id]);\r\n\r\n\r\n    console.log('orderDetailState', orderDetailState)\r\n\r\n    const handleOk = () => {\r\n        window.print()\r\n    }\r\n\r\n    return (\r\n        <Modal\r\n            title=\"Invoice\"\r\n            visible={showInvoice}\r\n            bodyStyle={{\r\n                margin: '0',\r\n                padding: '10px'\r\n            }}\r\n            onCancel={() => setShowInvoice(false)}\r\n            width={'60vw'}\r\n            okText='Print'\r\n            onOk={() => handleOk()}\r\n        >\r\n            {orderDetailState.isLoading && <Spin />}\r\n            {orderDetailState.data && Object.keys(orderDetailState.data).length > 0 && (\r\n                <>\r\n                    <div className='invoiceContainer'>\r\n                        <table\r\n                            width=\"100%\"\r\n                            border={0}\r\n                            cellPadding={0}\r\n                            cellSpacing={0}\r\n                            align=\"center\"\r\n                            className=\"fullTable\"\r\n                            bgcolor=\"#e1e1e1\"\r\n                        >\r\n                            <tbody>\r\n                                <tr>\r\n                                    <td height={20} />\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>\r\n                                        <table\r\n                                            width={600}\r\n                                            border={0}\r\n                                            cellPadding={0}\r\n                                            cellSpacing={0}\r\n                                            align=\"center\"\r\n                                            className=\"fullTable\"\r\n                                            bgcolor=\"#ffffff\"\r\n                                            style={{ borderRadius: \"10px 10px 0 0\" }}\r\n                                        >\r\n                                            <tbody>\r\n                                                <tr className=\"hiddenMobile\">\r\n                                                    <td height={40} />\r\n                                                </tr>\r\n                                                <tr className=\"visibleMobile\">\r\n                                                    <td height={30} />\r\n                                                </tr>\r\n                                                <tr>\r\n                                                    <td>\r\n                                                        <table\r\n                                                            width={480}\r\n                                                            border={0}\r\n                                                            cellPadding={0}\r\n                                                            cellSpacing={0}\r\n                                                            align=\"center\"\r\n                                                            className=\"fullPadding\"\r\n                                                        >\r\n                                                            <tbody>\r\n                                                                <tr>\r\n                                                                    <td>\r\n                                                                        <table\r\n                                                                            width={220}\r\n                                                                            border={0}\r\n                                                                            cellPadding={0}\r\n                                                                            cellSpacing={0}\r\n                                                                            align=\"left\"\r\n                                                                            className=\"col\"\r\n                                                                        >\r\n                                                                            <tbody>\r\n                                                                                {/* <tr>\r\n                                                                                    <td align=\"left\">\r\n                                                                                        {\" \"}\r\n                                                                                        // <img\r\n                                                                                        //     src=\"http://www.supah.it/dribbble/017/logo.png\"\r\n                                                                                        //     width={32}\r\n                                                                                        //     height={32}\r\n                                                                                        //     alt=\"logo\"\r\n                                                                                        //     border={0}\r\n                                                                                        // />\r\n                                                                                    </td>\r\n                                                                                </tr> */}\r\n                                                                                <tr className=\"hiddenMobile\">\r\n                                                                                    <td height={40} />\r\n                                                                                </tr>\r\n                                                                                <tr className=\"visibleMobile\">\r\n                                                                                    <td height={20} />\r\n                                                                                </tr>\r\n                                                                                <tr>\r\n                                                                                    <td\r\n                                                                                        style={{\r\n                                                                                            fontSize: 12,\r\n                                                                                            color: \"#5b5b5b\",\r\n                                                                                            fontFamily: '\"Open Sans\", sans-serif',\r\n                                                                                            lineHeight: 1.6,\r\n                                                                                            verticalAlign: \"top\",\r\n                                                                                            textAlign: \"left\"\r\n                                                                                        }}\r\n                                                                                    >\r\n                                                                                        Hello, {orderDetailState.data['name']}\r\n                                                                                        <br /> Thank you for your order.\r\n                                </td>\r\n                                                                                </tr>\r\n                                                                            </tbody>\r\n                                                                        </table>\r\n                                                                        <table\r\n                                                                            width={220}\r\n                                                                            border={0}\r\n                                                                            cellPadding={0}\r\n                                                                            cellSpacing={0}\r\n                                                                            align=\"right\"\r\n                                                                            className=\"col\"\r\n                                                                        >\r\n                                                                            <tbody>\r\n                                                                                <tr className=\"visibleMobile\">\r\n                                                                                    <td height={20} />\r\n                                                                                </tr>\r\n                                                                                <tr>\r\n                                                                                    <td height={5} />\r\n                                                                                </tr>\r\n                                                                                <tr>\r\n                                                                                    <td\r\n                                                                                        style={{\r\n                                                                                            fontSize: 21,\r\n                                                                                            color: \"#ff0000\",\r\n                                                                                            letterSpacing: \"-1px\",\r\n                                                                                            fontFamily: '\"Open Sans\", sans-serif',\r\n                                                                                            lineHeight: 1.6,\r\n                                                                                            verticalAlign: \"top\",\r\n                                                                                            textAlign: \"right\"\r\n                                                                                        }}\r\n                                                                                    >\r\n                                                                                        Invoice\r\n                                </td>\r\n                                                                                </tr>\r\n                                                                                <tr></tr>\r\n                                                                                <tr className=\"hiddenMobile\">\r\n                                                                                    <td height={50} />\r\n                                                                                </tr>\r\n                                                                                <tr className=\"visibleMobile\">\r\n                                                                                    <td height={20} />\r\n                                                                                </tr>\r\n                                                                                <tr>\r\n                                                                                    <td\r\n                                                                                        style={{\r\n                                                                                            fontSize: 12,\r\n                                                                                            color: \"#5b5b5b\",\r\n                                                                                            fontFamily: '\"Open Sans\", sans-serif',\r\n                                                                                            lineHeight: 1.6,\r\n                                                                                            verticalAlign: \"top\",\r\n                                                                                            textAlign: \"right\"\r\n                                                                                        }}\r\n                                                                                    >\r\n                                                                                        <small>ORDER</small> #{orderDetailState.data['id']}\r\n                                                                                        <br />\r\n                                                                                        <small>\r\n                                                                                            {orderDetailState.data['date_created']}\r\n\r\n                                                                                        </small>\r\n                                                                                    </td>\r\n                                                                                </tr>\r\n                                                                            </tbody>\r\n                                                                        </table>\r\n                                                                    </td>\r\n                                                                </tr>\r\n                                                            </tbody>\r\n                                                        </table>\r\n                                                    </td>\r\n                                                </tr>\r\n                                            </tbody>\r\n                                        </table>\r\n                                    </td>\r\n                                </tr>\r\n                            </tbody>\r\n                        </table>\r\n                        {/* /Header */}\r\n                        {/* Order Details */}\r\n                        {orderDetailState.data && orderDetailState.data['products'] && orderDetailState.data['products'].length > 0 && (\r\n                            <table\r\n                                width=\"100%\"\r\n                                border={0}\r\n                                cellPadding={0}\r\n                                cellSpacing={0}\r\n                                align=\"center\"\r\n                                className=\"fullTable\"\r\n                                bgcolor=\"#e1e1e1\"\r\n                            >\r\n                                <tbody>\r\n                                    <tr>\r\n                                        <td>\r\n                                            <table\r\n                                                width={600}\r\n                                                border={0}\r\n                                                cellPadding={0}\r\n                                                cellSpacing={0}\r\n                                                align=\"center\"\r\n                                                className=\"fullTable\"\r\n                                                bgcolor=\"#ffffff\"\r\n                                            >\r\n                                                <tbody>\r\n                                                    <tr></tr>\r\n                                                    <tr className=\"hiddenMobile\">\r\n                                                        <td height={60} />\r\n                                                    </tr>\r\n                                                    <tr className=\"visibleMobile\">\r\n                                                        <td height={40} />\r\n                                                    </tr>\r\n                                                    <tr>\r\n                                                        <td>\r\n                                                            <table\r\n                                                                width={480}\r\n                                                                border={0}\r\n                                                                cellPadding={0}\r\n                                                                cellSpacing={0}\r\n                                                                align=\"center\"\r\n                                                                className=\"fullPadding\"\r\n                                                            >\r\n                                                                <tbody>\r\n                                                                    <tr>\r\n                                                                        <th\r\n                                                                            style={{\r\n                                                                                fontSize: 12,\r\n                                                                                fontFamily: '\"Open Sans\", sans-serif',\r\n                                                                                color: \"#5b5b5b\",\r\n                                                                                fontWeight: \"normal\",\r\n                                                                                lineHeight: 1.6,\r\n                                                                                verticalAlign: \"top\",\r\n                                                                                padding: \"0 10px 7px 0\"\r\n                                                                            }}\r\n                                                                            width=\"52%\"\r\n                                                                            align=\"left\"\r\n                                                                        >\r\n                                                                            Name\r\n                        </th>\r\n\r\n                                                                        <th\r\n                                                                            style={{\r\n                                                                                fontSize: 12,\r\n                                                                                fontFamily: '\"Open Sans\", sans-serif',\r\n                                                                                color: \"#5b5b5b\",\r\n                                                                                fontWeight: \"normal\",\r\n                                                                                lineHeight: 1.6,\r\n                                                                                verticalAlign: \"top\",\r\n                                                                                padding: \"0 0 7px\"\r\n                                                                            }}\r\n                                                                            align=\"center\"\r\n                                                                        >\r\n                                                                            Quantity\r\n                        </th>\r\n                                                                        <th\r\n                                                                            style={{\r\n                                                                                fontSize: 12,\r\n                                                                                fontFamily: '\"Open Sans\", sans-serif',\r\n                                                                                color: \"#1e2b33\",\r\n                                                                                fontWeight: \"normal\",\r\n                                                                                lineHeight: 1.6,\r\n                                                                                verticalAlign: \"top\",\r\n                                                                                padding: \"0 0 7px\"\r\n                                                                            }}\r\n                                                                            align=\"right\"\r\n                                                                        >\r\n                                                                            Subtotal\r\n                        </th>\r\n                                                                    </tr>\r\n\r\n\r\n                                                                    {orderDetailState.data['products'].map(item => {\r\n                                                                        return (\r\n                                                                            <>\r\n                                                                                <tr>\r\n                                                                                    <td\r\n                                                                                        height={1}\r\n                                                                                        style={{ background: \"#bebebe\" }}\r\n                                                                                        colSpan={4}\r\n                                                                                    />\r\n                                                                                </tr>\r\n                                                                                <tr>\r\n                                                                                    <td height={10} colSpan={4} />\r\n                                                                                </tr>\r\n                                                                                <tr>\r\n                                                                                    <td\r\n                                                                                        style={{\r\n                                                                                            fontSize: 12,\r\n                                                                                            fontFamily: '\"Open Sans\", sans-serif',\r\n                                                                                            color: \"#ff0000\",\r\n                                                                                            lineHeight: 1.6,\r\n                                                                                            verticalAlign: \"top\",\r\n                                                                                            padding: \"10px 0\"\r\n                                                                                        }}\r\n                                                                                        className=\"article\"\r\n                                                                                    >\r\n                                                                                        {item.name}\r\n                                                                                    </td>\r\n\r\n                                                                                    <td\r\n                                                                                        style={{\r\n                                                                                            fontSize: 12,\r\n                                                                                            fontFamily: '\"Open Sans\", sans-serif',\r\n                                                                                            color: \"#646a6e\",\r\n                                                                                            lineHeight: 1.6,\r\n                                                                                            verticalAlign: \"top\",\r\n                                                                                            padding: \"10px 0\"\r\n                                                                                        }}\r\n                                                                                        align=\"center\"\r\n                                                                                    >\r\n                                                                                        {item.quantity}\r\n                                                                                    </td>\r\n                                                                                    <td\r\n                                                                                        style={{\r\n                                                                                            fontSize: 12,\r\n                                                                                            fontFamily: '\"Open Sans\", sans-serif',\r\n                                                                                            color: \"#1e2b33\",\r\n                                                                                            lineHeight: 1.6,\r\n                                                                                            verticalAlign: \"top\",\r\n                                                                                            padding: \"10px 0\"\r\n                                                                                        }}\r\n                                                                                        align=\"right\"\r\n                                                                                    >\r\n                                                                                        {item.quantity * item.price}\r\n                                                                                    </td>\r\n                                                                                </tr>\r\n                                                                            </>\r\n                                                                        )\r\n                                                                    })}\r\n\r\n\r\n                                                                    <tr>\r\n                                                                        <td\r\n                                                                            height={1}\r\n                                                                            colSpan={4}\r\n                                                                            style={{ borderBottom: \"1px solid #e4e4e4\" }}\r\n                                                                        />\r\n                                                                    </tr>\r\n                                                                </tbody>\r\n                                                            </table>\r\n                                                        </td>\r\n                                                    </tr>\r\n                                                    <tr>\r\n                                                        <td height={20} />\r\n                                                    </tr>\r\n                                                </tbody>\r\n                                            </table>\r\n                                        </td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </table>\r\n                        )}\r\n                        {/* /Order Details */}\r\n                        {/* Total */}\r\n                        <table\r\n                            width=\"100%\"\r\n                            border={0}\r\n                            cellPadding={0}\r\n                            cellSpacing={0}\r\n                            align=\"center\"\r\n                            className=\"fullTable\"\r\n                            bgcolor=\"#e1e1e1\"\r\n                        >\r\n                            <tbody>\r\n                                <tr>\r\n                                    <td>\r\n                                        <table\r\n                                            width={600}\r\n                                            border={0}\r\n                                            cellPadding={0}\r\n                                            cellSpacing={0}\r\n                                            align=\"center\"\r\n                                            className=\"fullTable\"\r\n                                            bgcolor=\"#ffffff\"\r\n                                        >\r\n                                            <tbody>\r\n                                                <tr>\r\n                                                    <td>\r\n                                                        {/* Table Total */}\r\n                                                        <table\r\n                                                            width={480}\r\n                                                            border={0}\r\n                                                            cellPadding={0}\r\n                                                            cellSpacing={0}\r\n                                                            align=\"center\"\r\n                                                            className=\"fullPadding\"\r\n                                                        >\r\n                                                            <tbody>\r\n                                                                <tr>\r\n                                                                    <td\r\n                                                                        style={{\r\n                                                                            fontSize: 12,\r\n                                                                            fontFamily: '\"Open Sans\", sans-serif',\r\n                                                                            color: \"#646a6e\",\r\n                                                                            lineHeight: 1.6,\r\n                                                                            verticalAlign: \"top\",\r\n                                                                            textAlign: \"right\"\r\n                                                                        }}\r\n                                                                    >\r\n                                                                        Total\r\n                        </td>\r\n                                                                    <td\r\n                                                                        style={{\r\n                                                                            fontSize: 12,\r\n                                                                            fontFamily: '\"Open Sans\", sans-serif',\r\n                                                                            color: \"#646a6e\",\r\n                                                                            lineHeight: 1.6,\r\n                                                                            verticalAlign: \"top\",\r\n                                                                            textAlign: \"right\",\r\n                                                                            whiteSpace: \"nowrap\"\r\n                                                                        }}\r\n                                                                        width={80}\r\n                                                                    >\r\n                                                                        {orderDetailState.data['total']}\r\n                                                                    </td>\r\n                                                                </tr>\r\n                                                                {/* <tr>\r\n                                                                    <td\r\n                                                                        style={{\r\n                                                                            fontSize: 12,\r\n                                                                            fontFamily: '\"Open Sans\", sans-serif',\r\n                                                                            color: \"#646a6e\",\r\n                                                                            lineHeight: 1.6,\r\n                                                                            verticalAlign: \"top\",\r\n                                                                            textAlign: \"right\"\r\n                                                                        }}\r\n                                                                    >\r\n                                                                        Shipping &amp; Handling\r\n                        </td>\r\n                                                                    <td\r\n                                                                        style={{\r\n                                                                            fontSize: 12,\r\n                                                                            fontFamily: '\"Open Sans\", sans-serif',\r\n                                                                            color: \"#646a6e\",\r\n                                                                            lineHeight: 1.6,\r\n                                                                            verticalAlign: \"top\",\r\n                                                                            textAlign: \"right\"\r\n                                                                        }}\r\n                                                                    >\r\n                                                                        $15.00\r\n                        </td>\r\n                                                                </tr> */}\r\n                                                                {/* <tr>\r\n                                                                    <td\r\n                                                                        style={{\r\n                                                                            fontSize: 12,\r\n                                                                            fontFamily: '\"Open Sans\", sans-serif',\r\n                                                                            color: \"#000\",\r\n                                                                            lineHeight: 1.6,\r\n                                                                            verticalAlign: \"top\",\r\n                                                                            textAlign: \"right\"\r\n                                                                        }}\r\n                                                                    >\r\n                                                                        <strong>Grand Total (Incl.Tax)</strong>\r\n                                                                    </td>\r\n                                                                    <td\r\n                                                                        style={{\r\n                                                                            fontSize: 12,\r\n                                                                            fontFamily: '\"Open Sans\", sans-serif',\r\n                                                                            color: \"#000\",\r\n                                                                            lineHeight: 1.6,\r\n                                                                            verticalAlign: \"top\",\r\n                                                                            textAlign: \"right\"\r\n                                                                        }}\r\n                                                                    >\r\n                                                                        <strong>$344.90</strong>\r\n                                                                    </td>\r\n                                                                </tr> */}\r\n                                                                {/* <tr>\r\n                                                                    <td\r\n                                                                        style={{\r\n                                                                            fontSize: 12,\r\n                                                                            fontFamily: '\"Open Sans\", sans-serif',\r\n                                                                            color: \"#b0b0b0\",\r\n                                                                            lineHeight: 1.6,\r\n                                                                            verticalAlign: \"top\",\r\n                                                                            textAlign: \"right\"\r\n                                                                        }}\r\n                                                                    >\r\n                                                                        <small>TAX</small>\r\n                                                                    </td>\r\n                                                                    <td\r\n                                                                        style={{\r\n                                                                            fontSize: 12,\r\n                                                                            fontFamily: '\"Open Sans\", sans-serif',\r\n                                                                            color: \"#b0b0b0\",\r\n                                                                            lineHeight: 1.6,\r\n                                                                            verticalAlign: \"top\",\r\n                                                                            textAlign: \"right\"\r\n                                                                        }}\r\n                                                                    >\r\n                                                                        <small>$72.40</small>\r\n                                                                    </td>\r\n                                                                </tr> */}\r\n                                                            </tbody>\r\n                                                        </table>\r\n                                                        {/* /Table Total */}\r\n                                                    </td>\r\n                                                </tr>\r\n                                            </tbody>\r\n                                        </table>\r\n                                    </td>\r\n                                </tr>\r\n                            </tbody>\r\n                        </table>\r\n                        {/* /Total */}\r\n                        {/* Information */}\r\n                        <table\r\n                            width=\"100%\"\r\n                            border={0}\r\n                            cellPadding={0}\r\n                            cellSpacing={0}\r\n                            align=\"center\"\r\n                            className=\"fullTable\"\r\n                            bgcolor=\"#e1e1e1\"\r\n                        >\r\n                            <tbody>\r\n                                <tr>\r\n                                    <td>\r\n                                        <table\r\n                                            width={600}\r\n                                            border={0}\r\n                                            cellPadding={0}\r\n                                            cellSpacing={0}\r\n                                            align=\"center\"\r\n                                            className=\"fullTable\"\r\n                                            bgcolor=\"#ffffff\"\r\n                                        >\r\n                                            <tbody>\r\n                                                <tr></tr>\r\n                                                <tr className=\"hiddenMobile\">\r\n                                                    <td height={60} />\r\n                                                </tr>\r\n                                                <tr className=\"visibleMobile\">\r\n                                                    <td height={40} />\r\n                                                </tr>\r\n                                                <tr>\r\n                                                    <td>\r\n                                                        <table\r\n                                                            width={480}\r\n                                                            border={0}\r\n                                                            cellPadding={0}\r\n                                                            cellSpacing={0}\r\n                                                            align=\"center\"\r\n                                                            className=\"fullPadding\"\r\n                                                        >\r\n                                                            <tbody>\r\n                                                                <tr>\r\n                                                                    <td>\r\n                                                                        <table\r\n                                                                            width={220}\r\n                                                                            border={0}\r\n                                                                            cellPadding={0}\r\n                                                                            cellSpacing={0}\r\n                                                                            align=\"left\"\r\n                                                                            className=\"col\"\r\n                                                                        >\r\n                                                                            <tbody>\r\n                                                                                <tr>\r\n                                                                                    <td\r\n                                                                                        style={{\r\n                                                                                            fontSize: 11,\r\n                                                                                            fontFamily: '\"Open Sans\", sans-serif',\r\n                                                                                            color: \"#5b5b5b\",\r\n                                                                                            lineHeight: 1.6,\r\n                                                                                            verticalAlign: \"top\"\r\n                                                                                        }}\r\n                                                                                    >\r\n                                                                                        <strong>BILLING INFORMATION</strong>\r\n                                                                                    </td>\r\n                                                                                </tr>\r\n                                                                                <tr>\r\n                                                                                    <td width=\"100%\" height={10} />\r\n                                                                                </tr>\r\n                                                                                <tr>\r\n                                                                                    <td\r\n                                                                                        style={{\r\n                                                                                            fontSize: 12,\r\n                                                                                            fontFamily: '\"Open Sans\", sans-serif',\r\n                                                                                            color: \"#5b5b5b\",\r\n                                                                                            lineHeight: 1.6,\r\n                                                                                            verticalAlign: \"top\"\r\n                                                                                        }}\r\n                                                                                    >\r\n                                                                                        {orderDetailState.data['name']}\r\n                                                                                        <br /> {orderDetailState.data['country']}\r\n                                                                                        <br /> {orderDetailState.data['city']}\r\n                                                                                        <br />{orderDetailState.data['address']}\r\n                                                                                        <br /> {orderDetailState.data['phone']}\r\n                                                                                        <br /> {orderDetailState.data['email']}\r\n                                                                                    </td>\r\n                                                                                </tr>\r\n                                                                            </tbody>\r\n                                                                        </table>\r\n                                                                        <table\r\n                                                                            width={220}\r\n                                                                            border={0}\r\n                                                                            cellPadding={0}\r\n                                                                            cellSpacing={0}\r\n                                                                            align=\"right\"\r\n                                                                            className=\"col\"\r\n                                                                        >\r\n                                                                            <tbody>\r\n                                                                                <tr className=\"visibleMobile\">\r\n                                                                                    <td height={20} />\r\n                                                                                </tr>\r\n                                                                                <tr>\r\n                                                                                    <td\r\n                                                                                        style={{\r\n                                                                                            fontSize: 11,\r\n                                                                                            fontFamily: '\"Open Sans\", sans-serif',\r\n                                                                                            color: \"#5b5b5b\",\r\n                                                                                            lineHeight: 1.6,\r\n                                                                                            verticalAlign: \"top\"\r\n                                                                                        }}\r\n                                                                                    >\r\n                                                                                        <strong>Status</strong>\r\n\r\n                                                                                    </td>\r\n                                                                                </tr>\r\n                                                                                <tr>\r\n                                                                                    <td width=\"100%\" height={10} />\r\n                                                                                </tr>\r\n                                                                                <tr>\r\n                                                                                    <td\r\n                                                                                        style={{\r\n                                                                                            fontSize: 12,\r\n                                                                                            fontFamily: '\"Open Sans\", sans-serif',\r\n                                                                                            color: \"#5b5b5b\",\r\n                                                                                            lineHeight: 1.6,\r\n                                                                                            verticalAlign: \"top\"\r\n                                                                                        }}\r\n                                                                                    >\r\n                                                                                        {orderDetailState.data['paymentStatus']}\r\n\r\n                                                                                    </td>\r\n                                                                                </tr>\r\n                                                                            </tbody>\r\n                                                                        </table>\r\n                                                                    </td>\r\n                                                                </tr>\r\n                                                            </tbody>\r\n                                                        </table>\r\n                                                    </td>\r\n                                                </tr>\r\n                                                <tr>\r\n                                                    <td>\r\n                                                        <table\r\n                                                            width={480}\r\n                                                            border={0}\r\n                                                            cellPadding={0}\r\n                                                            cellSpacing={0}\r\n                                                            align=\"center\"\r\n                                                            className=\"fullPadding\"\r\n                                                        >\r\n                                                            <tbody>\r\n                                                                <tr>\r\n                                                                    <td>\r\n                                                                        <table\r\n                                                                            width={220}\r\n                                                                            border={0}\r\n                                                                            cellPadding={0}\r\n                                                                            cellSpacing={0}\r\n                                                                            align=\"left\"\r\n                                                                            className=\"col\"\r\n                                                                        >\r\n                                                                            <tbody>\r\n                                                                                <tr className=\"hiddenMobile\">\r\n                                                                                    <td height={35} />\r\n                                                                                </tr>\r\n                                                                                <tr className=\"visibleMobile\">\r\n                                                                                    <td height={20} />\r\n                                                                                </tr>\r\n                                                                                <tr>\r\n                                                                                    {/* <td\r\n                                                                                        style={{\r\n                                                                                            fontSize: 11,\r\n                                                                                            fontFamily: '\"Open Sans\", sans-serif',\r\n                                                                                            color: \"#5b5b5b\",\r\n                                                                                            lineHeight: 1.6,\r\n                                                                                            verticalAlign: \"top\"\r\n                                                                                        }}\r\n                                                                                    >\r\n                                                                                        <strong>SHIPPING INFORMATION</strong>\r\n                                                                                    </td> */}\r\n                                                                                </tr>\r\n                                                                                <tr>\r\n                                                                                    <td width=\"100%\" height={10} />\r\n                                                                                </tr>\r\n                                                                                <tr>\r\n                                                                                    {/* <td\r\n                                                                                        style={{\r\n                                                                                            fontSize: 12,\r\n                                                                                            fontFamily: '\"Open Sans\", sans-serif',\r\n                                                                                            color: \"#5b5b5b\",\r\n                                                                                            lineHeight: 1.6,\r\n                                                                                            verticalAlign: \"top\"\r\n                                                                                        }}\r\n                                                                                    >\r\n                                                                                        Sup Inc\r\n                                  <br /> Another Place, Somewhere\r\n                                  <br /> New York NY\r\n                                  <br /> 4468, United States\r\n                                  <br /> T: 202-555-0171\r\n                                </td> */}\r\n                                                                                </tr>\r\n                                                                            </tbody>\r\n                                                                        </table>\r\n                                                                        <table\r\n                                                                            width={220}\r\n                                                                            border={0}\r\n                                                                            cellPadding={0}\r\n                                                                            cellSpacing={0}\r\n                                                                            align=\"right\"\r\n                                                                            className=\"col\"\r\n                                                                        >\r\n                                                                            <tbody>\r\n                                                                                <tr className=\"hiddenMobile\">\r\n                                                                                    <td height={35} />\r\n                                                                                </tr>\r\n                                                                                <tr className=\"visibleMobile\">\r\n                                                                                    <td height={20} />\r\n                                                                                </tr>\r\n                                                                                <tr>\r\n                                                                                    <td\r\n                                                                                        style={{\r\n                                                                                            fontSize: 11,\r\n                                                                                            fontFamily: '\"Open Sans\", sans-serif',\r\n                                                                                            color: \"#5b5b5b\",\r\n                                                                                            lineHeight: 1.6,\r\n                                                                                            verticalAlign: \"top\"\r\n                                                                                        }}\r\n                                                                                    >\r\n                                                                                        {/* <strong>SHIPPING METHOD</strong> */}\r\n                                                                                    </td>\r\n                                                                                </tr>\r\n                                                                                <tr>\r\n                                                                                    <td width=\"100%\" height={10} />\r\n                                                                                </tr>\r\n                                                                                <tr>\r\n                                                                                    <td\r\n                                                                                        style={{\r\n                                                                                            fontSize: 12,\r\n                                                                                            fontFamily: '\"Open Sans\", sans-serif',\r\n                                                                                            color: \"#5b5b5b\",\r\n                                                                                            lineHeight: 1.6,\r\n                                                                                            verticalAlign: \"top\"\r\n                                                                                        }}\r\n                                                                                    >\r\n                                                                                        {/* UPS: U.S. Shipping Services */}\r\n                                                                                    </td>\r\n                                                                                </tr>\r\n                                                                            </tbody>\r\n                                                                        </table>\r\n                                                                    </td>\r\n                                                                </tr>\r\n                                                            </tbody>\r\n                                                        </table>\r\n                                                    </td>\r\n                                                </tr>\r\n                                                <tr className=\"hiddenMobile\">\r\n                                                    <td height={60} />\r\n                                                </tr>\r\n                                                <tr className=\"visibleMobile\">\r\n                                                    <td height={30} />\r\n                                                </tr>\r\n                                            </tbody>\r\n                                        </table>\r\n                                    </td>\r\n                                </tr>\r\n                            </tbody>\r\n                        </table>\r\n                        {/* /Information */}\r\n                        <table\r\n                            width=\"100%\"\r\n                            border={0}\r\n                            cellPadding={0}\r\n                            cellSpacing={0}\r\n                            align=\"center\"\r\n                            className=\"fullTable\"\r\n                            bgcolor=\"#e1e1e1\"\r\n                        >\r\n                            <tbody>\r\n                                <tr>\r\n                                    <td>\r\n                                        <table\r\n                                            width={600}\r\n                                            border={0}\r\n                                            cellPadding={0}\r\n                                            cellSpacing={0}\r\n                                            align=\"center\"\r\n                                            className=\"fullTable\"\r\n                                            bgcolor=\"#ffffff\"\r\n                                            style={{ borderRadius: \"0 0 10px 10px\" }}\r\n                                        >\r\n                                            <tbody>\r\n                                                <tr>\r\n                                                    <td>\r\n                                                        <table\r\n                                                            width={480}\r\n                                                            border={0}\r\n                                                            cellPadding={0}\r\n                                                            cellSpacing={0}\r\n                                                            align=\"center\"\r\n                                                            className=\"fullPadding\"\r\n                                                        >\r\n                                                            <tbody>\r\n                                                                <tr>\r\n                                                                    <td\r\n                                                                        style={{\r\n                                                                            fontSize: 12,\r\n                                                                            color: \"#5b5b5b\",\r\n                                                                            fontFamily: '\"Open Sans\", sans-serif',\r\n                                                                            lineHeight: 1.6,\r\n                                                                            verticalAlign: \"top\",\r\n                                                                            textAlign: \"left\"\r\n                                                                        }}\r\n                                                                    >\r\n                                                                        Have a nice day.\r\n                        </td>\r\n                                                                </tr>\r\n                                                            </tbody>\r\n                                                        </table>\r\n                                                    </td>\r\n                                                </tr>\r\n                                                <tr className=\"spacer\">\r\n                                                    <td height={50} />\r\n                                                </tr>\r\n                                            </tbody>\r\n                                        </table>\r\n                                    </td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td height={20} />\r\n                                </tr>\r\n                            </tbody>\r\n                        </table>\r\n                    </div>;\r\n                </>\r\n            )}\r\n        </Modal>\r\n\r\n    );\r\n};\r\n\r\n\r\nexport default QuickEdit;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useHandleFetch } from '../../hooks';\r\n\r\n\r\n\r\n\r\n// import lib \r\nimport { Skeleton } from 'antd'\r\n\r\n\r\n\r\ninterface Props {\r\n    productId?: any;\r\n    quantity?: any;\r\n    item?: any\r\n    variation?: any;\r\n}\r\n\r\nconst CartOverLayCartItem = ({\r\n    productId,\r\n    quantity,\r\n    item,\r\n    variation\r\n}: Props) => {\r\n\r\n\r\n    const [productDetailState, handleProductFetch] = useHandleFetch(\r\n        {},\r\n        'productDetailById'\r\n    );\r\n    const [product, setProduct] = useState({});\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [modifiedPrice, setModifiedPrice] = useState('');\r\n    const [selectedVariationId, setSelectedVariationId] = useState(variation);\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        setIsLoading(true);\r\n        const getAndSetProduct = async () => {\r\n            const product = await handleProductFetch({\r\n                urlOptions: {\r\n                    placeHolders: {\r\n                        id: productId,\r\n                    },\r\n                },\r\n            });\r\n\r\n            // @ts-ignore\r\n            setProduct(product);\r\n            setIsLoading(false);\r\n        };\r\n        getAndSetProduct()\r\n    }, []);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    console.log('modifiedPrice', modifiedPrice);\r\n    return (\r\n        <>\r\n\r\n            <Skeleton loading={productDetailState.isLoading}>\r\n                {productDetailState.data && Object.keys(productDetailState.data).length > 0 && (\r\n                    <div className='cart-item' key={''}>\r\n\r\n\r\n                        <img\r\n\r\n                            src={productDetailState.data['cover'] && productDetailState.data['cover']['cover']}\r\n                            alt='Img'\r\n                            style={{\r\n                                cursor: 'pointer',\r\n                            }}\r\n                        />\r\n                        <div className='cart-item-info'>\r\n                            <h4\r\n\r\n                            >\r\n                                {productDetailState.data['name']}\r\n                            </h4>\r\n                            <h5\r\n                            >\r\n                                Quantity : {quantity}\r\n                            </h5>\r\n                            <h5\r\n                            >\r\n                                {item['unitPrice']}\r\n                            </h5>\r\n\r\n\r\n                            {/* {pricingOptions && pricingOptions.length > 0 && pricingOptions.map(tag => (\r\n                            <>\r\n                                <span\r\n                                    onClick={() => handleAttributeChange(tag.value)}\r\n                                    className={selectedVariationId === tag.value ? 'product-attributeTag product-attributeTag-active' : 'product-attributeTag'}>\r\n                                    {tag.label}\r\n                                </span>\r\n                            </>\r\n                        ))} */}\r\n\r\n                            {/* <span\r\n             style={{\r\n               display: 'inline-block',\r\n               background: '#fafafa',\r\n               padding: '3px 3px',\r\n               borderRadius: 1,\r\n               fontSize: '12px',\r\n               marginRight: '5px',\r\n               color: '#777',\r\n               marginTop: '5px'\r\n             }}\r\n           >\r\n             15KG\r\n             </span> */}\r\n\r\n                        </div>\r\n                        {/* <span\r\n                        onClick={handleAttributeDelete}\r\n                        className='remove-item' >\r\n                        <i className='fa fa-times'></i>\r\n                    </span> */}\r\n\r\n                    </div>\r\n                )}\r\n            </Skeleton>\r\n\r\n        </>\r\n    );\r\n};\r\n\r\n// @ts-ignore\r\nexport default CartOverLayCartItem;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Modal, Select, notification, Form, Empty, Button } from 'antd';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { CheckCircleOutlined, InfoCircleOutlined } from '@ant-design/icons';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport { useHandleFetch } from '../../hooks';\r\nimport OrderInvoice from \"./OrderInvoice.jsx\";\r\nimport ProductItemForOrderDetail from \"./productItemForOrderDetail\";\r\n\r\n\r\nconst { Option } = Select;\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    // name: Yup.string()\r\n    //     .label('Name')\r\n    //     .required()\r\n    //     .min(2, 'Name must have at least 2 characters '),\r\n    // pickUpLocation: Yup.string()\r\n    //     .label('Pick up Location')\r\n    //     .required()\r\n    //     .min(2, 'Pick up Location must have at least 2 characters '),\r\n    // time: Yup.string()\r\n    //     .label('Time')\r\n    //     .required()\r\n    //     .min(2, 'Time must have at least 2 characters '),\r\n\r\n});\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Tag Created',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n    notification.error({\r\n        message: message || 'Something Went Wrong',\r\n        description: '',\r\n        icon: <InfoCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n    });\r\n};\r\n\r\n\r\ninterface Props {\r\n    customer: any;\r\n    setvisible: any;\r\n    visible: any;\r\n    orderList?: any;\r\n    setOrderList?: any;\r\n}\r\n\r\nconst QuickEdit = ({ customer, setvisible, visible, setOrderList, orderList }: Props) => {\r\n    const [updateOrderState, handleUpdateOrderFetch] = useHandleFetch({}, 'updateOrder');\r\n\r\n    console.log('customerVie', customer);\r\n\r\n    const [selectedCountryValue, setselectedCountryValue] = useState('');\r\n    const [selectedCityValue, setselectedCityValue] = useState('');\r\n\r\n    const [countryOptions, setcountryOptions] = useState([]);\r\n    const [cityOptions, setcityOptions] = useState([]);\r\n\r\n    const [countryListState, handleCountryListFetch] = useHandleFetch(\r\n        [],\r\n        'countryList'\r\n    );\r\n\r\n    const [cityListState, handleCityListFetch] = useHandleFetch([], 'cityList');\r\n\r\n    const [countryList, setCountryList] = useState([]);\r\n    const [cityList, setCityList] = useState([]);\r\n    const [showInvoice, setShowInvoice] = useState(false);\r\n\r\n\r\n\r\n    const handleSubmit = async (values: any, actions: any) => {\r\n        // console.log('selectedCityValue', selectedCityValue); \r\n        console.log('cooles', customer)\r\n\r\n        const addRegionRes = await handleUpdateOrderFetch({\r\n            urlOptions: {\r\n                placeHolders: {\r\n                    id: customer.id,\r\n                }\r\n            },\r\n            body: {\r\n                billingAddress: {\r\n                    phone: values.phone,\r\n                    email: values.email,\r\n                    address1: values.address1,\r\n                    address2: values.address2,\r\n                    firstName: values.firstName,\r\n                    lastName: values.lastName,\r\n                    city: selectedCityValue || customer['billingAddress']['city'],\r\n                    country: selectedCountryValue || customer['billingAddress']['country'],\r\n                },\r\n                products: customer.products,\r\n                customerId: customer.customerId\r\n                // charge\r\n            },\r\n        });\r\n\r\n        // @ts-ignore\r\n        if (addRegionRes && addRegionRes.status === 'ok') {\r\n            openSuccessNotification();\r\n\r\n            const positionInTag = () => {\r\n                return orderList.map(item => item.id).indexOf(customer.id);\r\n            }\r\n\r\n            const index = positionInTag();\r\n\r\n            // @ts-ignore\r\n            const updatedItem = Object.assign({}, orderList[index], { ...addRegionRes });\r\n            const updateRegionList = [...orderList.slice(0, index), updatedItem, ...orderList.slice(index + 1)];\r\n            setOrderList(updateRegionList);\r\n\r\n        }\r\n        else {\r\n            openErrorNotification();\r\n        }\r\n\r\n        actions.setSubmitting(false);\r\n        setvisible(false)\r\n\r\n    };\r\n\r\n\r\n    const onChangeCity = (value) => {\r\n        setselectedCityValue(value);\r\n    }\r\n\r\n    const onChangeCountry = (value) => {\r\n        setselectedCountryValue(value);\r\n    }\r\n\r\n    useEffect(() => {\r\n        const setCountries = async () => {\r\n            const CountryListRes = await handleCountryListFetch({});\r\n\r\n            // @ts-ignore\r\n            if (CountryListRes && CountryListRes.length > 0) {\r\n                // @ts-ignore\r\n                const countryOptions = CountryListRes.map((country) => {\r\n                    return {\r\n                        value: country.name,\r\n                        name: country.name\r\n                    };\r\n                });\r\n                setcountryOptions(countryOptions);\r\n            }\r\n        };\r\n\r\n        setCountries();\r\n    }, []);\r\n\r\n\r\n    useEffect(() => {\r\n        const setCities = async () => {\r\n            const cityListRes = await handleCityListFetch({\r\n                urlOptions: {\r\n                    placeHolders: {\r\n                        country: selectedCountryValue,\r\n                    },\r\n                },\r\n            });\r\n\r\n            // @ts-ignore\r\n            if (cityListRes && cityListRes.length > 0) {\r\n                // @ts-ignore\r\n                const cityOptions = cityListRes.map((city) => {\r\n                    return {\r\n                        value: city.name,\r\n                        name: city.name\r\n                    };\r\n                });\r\n                setcityOptions(cityOptions);\r\n            }\r\n        };\r\n\r\n        setCities();\r\n    }, [selectedCountryValue]);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    const handleCancel = (e: any) => {\r\n        setvisible(false);\r\n    };\r\n\r\n\r\n\r\n    const getisSubmitButtonDisabled = (values, isValid) => {\r\n        if (!isValid ||\r\n            !values.firstName ||\r\n            !values.LastName) {\r\n\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    return (\r\n        <Formik\r\n            onSubmit={(values, actions) => handleSubmit(values, actions)}\r\n            validationSchema={validationSchema}\r\n            validateOnBlur={false}\r\n            enableReinitialize={true}\r\n            initialValues={\r\n                { ...customer.billingAddress ? customer.billingAddress : {} }\r\n            }\r\n        >\r\n            {({\r\n                handleChange,\r\n                values,\r\n                handleSubmit,\r\n                errors,\r\n                isValid,\r\n                isSubmitting,\r\n                touched,\r\n                handleBlur,\r\n                setFieldTouched,\r\n                handleReset,\r\n            }) => (\r\n                    <>\r\n                        <Modal\r\n                            title=\"Order detail\"\r\n                            visible={visible}\r\n                            onOk={(e: any) => handleSubmit(e)}\r\n                            onCancel={handleCancel}\r\n                            okText='Create'\r\n                            okButtonProps={{\r\n                                loading: isSubmitting,\r\n                                htmlType: \"submit\",\r\n                                // disabled: getisSubmitButtonDisabled(values, isValid)\r\n                            }}\r\n                            bodyStyle={{\r\n                                margin: '0',\r\n                                padding: '10px'\r\n                            }}\r\n                            width={'70vw'}\r\n                        >\r\n\r\n\r\n                            <div className='dubbleRowInputs'>\r\n                                <div className='dubbleRowInputs__item'>\r\n                                    <Input\r\n                                        label='First Name'\r\n                                        value={values.firstName}\r\n                                        name='firstName'\r\n                                        isError={(touched.firstName && errors.firstName) ||\r\n                                            (!isSubmitting && updateOrderState.error['error']['firstName'])}\r\n\r\n                                        errorString={(touched.firstName && errors.firstName) ||\r\n                                            (!isSubmitting && updateOrderState.error['error']['firstName'])}\r\n                                        onChange={(e: any) => {\r\n                                            handleChange(e);\r\n                                            setFieldTouched('firstName');\r\n                                        }}\r\n                                    />\r\n                                </div>\r\n                                <div className='dubbleRowInputs__item'>\r\n                                    <Input\r\n                                        label='Last Name'\r\n                                        value={values.lastName}\r\n                                        name='lastName'\r\n                                        isError={(touched.lastName && errors.lastName) ||\r\n                                            (!isSubmitting && updateOrderState.error['error']['lastName'])}\r\n\r\n                                        errorString={(touched.lastName && errors.lastName) ||\r\n                                            (!isSubmitting && updateOrderState.error['error']['lastName'])}\r\n                                        onChange={(e: any) => {\r\n                                            handleChange(e);\r\n                                            setFieldTouched('lastName');\r\n                                        }}\r\n                                    />\r\n                                </div>\r\n\r\n\r\n\r\n\r\n                            </div>\r\n\r\n\r\n\r\n                            <div className='dubbleRowInputs'>\r\n                                <div className='dubbleRowInputs__item'>\r\n                                    <Input\r\n                                        label='Phone'\r\n                                        value={values.phone}\r\n                                        name='phone'\r\n                                        isError={(touched.phone && errors.phone) ||\r\n                                            (!isSubmitting && updateOrderState.error['error']['phone'])}\r\n\r\n                                        errorString={(touched.phone && errors.phone) ||\r\n                                            (!isSubmitting && updateOrderState.error['error']['phone'])}\r\n                                        onChange={(e: any) => {\r\n                                            handleChange(e);\r\n                                            setFieldTouched('phone');\r\n                                        }}\r\n                                    />\r\n                                </div>\r\n                                <div className='dubbleRowInputs__item'>\r\n                                    <Input\r\n                                        label='Email'\r\n                                        value={values.email}\r\n                                        name='email'\r\n                                        isError={(touched.email && errors.email) ||\r\n                                            (!isSubmitting && updateOrderState.error['error']['email'])}\r\n\r\n                                        errorString={(touched.email && errors.email) ||\r\n                                            (!isSubmitting && updateOrderState.error['error']['email'])}\r\n                                        onChange={(e: any) => {\r\n                                            handleChange(e);\r\n                                            setFieldTouched('email');\r\n                                        }}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n\r\n\r\n                            <div className='dubbleRowInputs'>\r\n                                <div className='dubbleRowInputs__item'>\r\n                                    <h3 className='inputFieldLabel'>\r\n                                        Country\r\n\t\t\t\t\t\t\t\t\t</h3>\r\n\r\n\r\n                                    <Form.Item\r\n                                        validateStatus={(updateOrderState.error['error']['country']) ? \"error\" : \"\"}\r\n                                        help={updateOrderState.error['error']['country']}\r\n                                    // noStyle={true}\r\n                                    >\r\n                                        <Select\r\n                                            defaultValue={values.country}\r\n                                            notFoundContent={<Empty description='No Country Found' image={Empty.PRESENTED_IMAGE_SIMPLE} />}\r\n                                            showSearch\r\n                                            style={{ width: '100%' }}\r\n                                            placeholder='Select a Country'\r\n                                            optionFilterProp='children'\r\n                                            onChange={onChangeCountry}\r\n                                            filterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n                                        >\r\n                                            {countryListState.done &&\r\n                                                countryListState.data.length > 0 &&\r\n                                                countryOptions.map((option) => {\r\n                                                    return <Option value={option.value}>{option.name}</Option>;\r\n                                                })}\r\n                                        </Select>\r\n\r\n                                    </Form.Item>\r\n\r\n\r\n\r\n\r\n                                </div>\r\n                                <div className='dubbleRowInputs__item'>\r\n                                    <h3 className='inputFieldLabel'>\r\n                                        City\r\n                                    </h3>\r\n                                    <Form.Item\r\n                                        // noStyle={true}\r\n                                        validateStatus={(updateOrderState.error['error']['city']) ? \"error\" : \"\"}\r\n                                        help={updateOrderState.error['error']['city']}\r\n\r\n                                    >\r\n                                        <Select\r\n                                            defaultValue={values.city}\r\n                                            className='selectClassName'\r\n                                            notFoundContent={<Empty description='First Select a Country' image={Empty.PRESENTED_IMAGE_SIMPLE} />}\r\n                                            showSearch\r\n                                            style={{ width: '100%' }}\r\n                                            placeholder='Select a city'\r\n                                            optionFilterProp='children'\r\n                                            onChange={onChangeCity}\r\n                                            filterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n                                        >\r\n                                            {cityListState.done &&\r\n                                                cityListState.data.length > 0 &&\r\n                                                cityOptions.map((option) => {\r\n                                                    return <Option value={option.value}>{option.name}</Option>;\r\n                                                })}\r\n                                        </Select>\r\n                                    </Form.Item>\r\n                                </div>\r\n\r\n                            </div>\r\n\r\n                            <div style={{\r\n                                marginTop: '12px'\r\n                            }}></div>\r\n\r\n\r\n\r\n                            <div className='dubbleRowInputs'>\r\n                                <div className='dubbleRowInputs__item'>\r\n                                    <Input\r\n                                        label='Address'\r\n                                        value={values.address1}\r\n                                        name='address1'\r\n                                        isError={(touched.address1 && errors.address1) ||\r\n                                            (!isSubmitting && updateOrderState.error['error']['address1'])}\r\n\r\n                                        errorString={(touched.address1 && errors.address1) ||\r\n                                            (!isSubmitting && updateOrderState.error['error']['address1'])}\r\n                                        onChange={(e: any) => {\r\n                                            handleChange(e);\r\n                                            setFieldTouched('address1');\r\n                                        }}\r\n                                    />\r\n                                </div>\r\n                                <div className='dubbleRowInputs__item'>\r\n                                    <Input\r\n                                        label='Address 2'\r\n                                        value={values.address2}\r\n                                        name='address2'\r\n                                        isError={(touched.address2 && errors.address2) ||\r\n                                            (!isSubmitting && updateOrderState.error['error']['address2'])}\r\n\r\n                                        errorString={(touched.address2 && errors.address2) ||\r\n                                            (!isSubmitting && updateOrderState.error['error']['address2'])}\r\n                                        onChange={(e: any) => {\r\n                                            handleChange(e);\r\n                                            setFieldTouched('address2');\r\n                                        }}\r\n                                    />\r\n                                </div>\r\n\r\n                            </div>\r\n\r\n                            <div style={{\r\n                                marginTop: '12px'\r\n                            }}></div>\r\n\r\n\r\n\r\n                                    {customer.products && customer.products.length > 0 && (\r\n                                        <h3 className='inputFieldLabel'>\r\n                                        Products \r\n                                    </h3>\r\n                                    )}\r\n\r\n\r\n                            {customer.products && customer.products.length > 0 && <> \r\n                            \r\n                                {customer.products.map(item => {\r\n                    return <ProductItemForOrderDetail\r\n                        productId={item._id}\r\n                        quantity={item.quantity}\r\n                        item={item}\r\n                        variation={item.variation}\r\n                    />;\r\n                })}\r\n\r\n                            </>}\r\n\r\n\r\n                            <div style={{\r\n                                marginTop: '20px'\r\n                            }}></div>\r\n                    <Button\r\n                    onClick={() => setShowInvoice(true)}\r\n                    className='btnPrimaryClassNameoutline'\r\n                    >\r\n                        Generate Invoice\r\n                        \r\n                        </Button>\r\n\r\n            <div style={{\r\n                                marginBottom: '20px'\r\n                            }}></div>\r\n\r\n            <OrderInvoice\r\n            id={customer.id}\r\n            setShowInvoice={setShowInvoice}\r\n             showInvoice={showInvoice} \r\n            />\r\n\r\n                            \r\n\r\n\r\n                        </Modal>\r\n\r\n                    </>\r\n                )}\r\n\r\n\r\n\r\n        </Formik>\r\n    );\r\n};\r\n\r\n\r\nexport default QuickEdit;\r\n","import React, {useState, useEffect} from 'react';\r\nimport {withRouter, useHistory} from 'react-router-dom';\r\nimport { Table, Badge, Menu, Dropdown, Space, Tag,Button, \r\n  Input, notification, Popconfirm, Select, DatePicker } from 'antd';\r\nimport { PlusOutlined, EditOutlined, DeleteOutlined,CheckOutlined,CheckCircleOutlined,DownOutlined  } from '@ant-design/icons';\r\n\r\n\r\n/// import hooks\r\nimport { useFetch, useHandleFetch } from \"../../hooks\";\r\n\r\n// import components\r\nimport { DataTableSkeleton } from \"../../components/Placeholders\";\r\nimport AddNewOrder from \"./AddNewOrder\";\r\nimport QuickEdit from \"./QuickEdit\";\r\nimport Empty from \"../../components/Empty\";\r\n\r\n\r\n\r\n// import lib \r\nimport Moment from \"react-moment\";\r\nimport moment from 'moment'; \r\n\r\nconst { Column, ColumnGroup } = Table;\r\nconst { Search } = Input;\r\nconst { RangePicker } = DatePicker;\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t  message: message || 'Tag Created',\r\n\t  description: '',\r\n\t  icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n  };\r\n\r\n\r\n  const openErrorNotification = (message?: any) => {\r\n\tnotification.error({\r\n\t  message: message || 'Something Went Wrong',\r\n\t  description: '',\r\n\t  icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n  };\r\n\r\n\r\n\r\n  \r\nconst { Option } = Select;\r\n\r\n\r\ninterface myTableProps {\r\n  data: any; \r\n  setOrderList: any; \r\n} \r\n\r\n\r\nconst MyTable = ({data,setOrderList}: myTableProps) => {\r\n    const [visible,setvisible] = useState(false);   \r\n    const [activeCategoryForEdit,setactiveCategoryForEdit] = useState(false); \r\n    const [deleteOrderState, handleDeleteOrderFetch] = useHandleFetch({}, 'deleteOrder');\r\n    const [updateOrderStatusState, handleUpdateOrderStatusFetch] = useHandleFetch({}, 'updateOrderStatus');\r\n\r\n\r\n\r\n\r\n    const history = useHistory();\r\n\r\n      const handleDeleteRegion = async (id) => {\r\n        const deleteOrderRes = await handleDeleteOrderFetch({\r\n          urlOptions: {\r\n            placeHolders: {\r\n              id,\r\n            }\r\n            }\r\n          });\r\n\r\n            // @ts-ignore\r\n\t\t  if(deleteOrderRes && deleteOrderRes.status === 'ok'){\r\n\t\t\t  openSuccessNotification('Deleted Order'); \r\n\t\t\t  const newOrderList =  data.filter(item => item.id !== id);\r\n\t\t\t  setOrderList(newOrderList); \r\n\t\t  }\r\n\r\n      }\r\n      \r\n\r\n\r\n      \r\n      const handleUpdateOrderStatus = async (record,id,newStatus) => {\r\n        const updateOrderStatusRes = await handleUpdateOrderStatusFetch({\r\n          urlOptions: {\r\n            params: {\r\n              newOrderstatus: newStatus,\r\n            },\r\n            placeHolders: {\r\n              id,\r\n            }\r\n            }\r\n          });\r\n\r\n            // @ts-ignore\r\n\t\t  if(updateOrderStatusRes && updateOrderStatusRes.status === 'ok'){\r\n\t\t\t  openSuccessNotification('Updated Order Status'); \r\n\t\t\t  \r\n        const positionInTag = () => {\r\n          return data.map(item => item.id).indexOf(id);\r\n          }\r\n\r\n      const index = positionInTag();\r\n      console.log('recordis',record,index );\r\n\r\n      // @ts-ignore\r\n      const updatedItem = Object.assign({}, data[index], { status: newStatus });\r\n      const updateOrderList = [...data.slice(0, index), updatedItem, ...data.slice(index + 1)];\r\n      console.log('updateOrderList',updateOrderList,'-----',setOrderList );\r\n      setOrderList(updateOrderList);\r\n\r\n\r\n      }\r\n\r\n      \r\n      else {\r\n        openErrorNotification(\"Couldn't changed order status, Something went wrong\")\r\n      }\r\n\r\n      }\r\n      \r\n\r\n      const StatusItemMenu = (record,id) => {\r\n        return (\r\n          (\r\n            <Menu>\r\n\r\n            <Menu.Item\r\n                onClick={() => handleUpdateOrderStatus(record,id,'pending')}\r\n                key=\"1\" icon={<CheckOutlined />}>\r\n                Pending\r\n              </Menu.Item>\r\n  \r\n\r\n  \r\n              <Menu.Item\r\n                onClick={() => handleUpdateOrderStatus(record,id,'complete')}\r\n                key=\"1\" icon={<CheckOutlined />}>\r\n                Completed\r\n    \r\n              </Menu.Item>\r\n    \r\n              {/* <Menu.Item\r\n                onClick={() => handleUpdateOrderStatus(record,id,'deliver')}\r\n                key=\"1\" icon={<CheckOutlined />}>\r\n                Delivered\r\n              </Menu.Item>\r\n     */}\r\n            \r\n            </Menu >\r\n          )\r\n        )\r\n      };\r\n\r\n\r\n    \r\n\r\n    return (\r\n        <>\r\n         <Table \r\n        // expandable={{\r\n        //     expandedRowRender: record => <p style={{ margin: 0 }}>{record.name}</p>,\r\n        //     rowExpandable: record => record.name !== 'Not Expandable',\r\n        //   }}\r\n        // bordered={true}\r\n        size='small'\r\n        // pagination={false}\r\n        dataSource={data}\r\n        >\r\n\r\n\r\n        <Column\r\n          title=\"Code\"\r\n          dataIndex=\"shortCode\"\r\n          key=\"id\"\r\n          className='classnameofthecolumn'\r\n          render={(text, record: any) => (\r\n            <>\r\n\r\n              <h4\r\n                onClick={() => {\r\n                  // setvisible(true)\r\n                  history.push(`/admin/order/${record.id}`)\r\n                  setactiveCategoryForEdit(record); \r\n                }}\r\n                style={{\r\n                  fontWeight: 400,\r\n                  color: '#555',\r\n                  cursor: 'pointer'\r\n\r\n                }}>\r\n                #{text}\r\n              </h4>\r\n\r\n\r\n            </>\r\n          )}\r\n\r\n        />\r\n          \r\n        <Column\r\n          title=\"Name\"\r\n          dataIndex=\"name\"\r\n          key=\"id\"\r\n          className='classnameofthecolumn'\r\n          render={(text, record: any) => (\r\n            <>\r\n              <h4\r\n                onClick={() => {\r\n                  // setvisible(true)\r\n                  history.push(`/admin/order/${record.id}`)\r\n                  setactiveCategoryForEdit(record); \r\n                }}\r\n                style={{\r\n                  fontWeight: 400,\r\n                  color: '#555',\r\n                  cursor: 'pointer'\r\n\r\n                }}>\r\n                {text}\r\n              </h4>\r\n\r\n\r\n            </>\r\n          )}\r\n\r\n        />\r\n\r\n\r\n                \r\n\r\n        <Column\r\n           title=\"Delivery\" \r\n           dataIndex=\"deliveryName\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n         \r\n            />\r\n\r\n\r\n\r\n          <Column\r\n           title=\"Created\" \r\n           dataIndex=\"date_created\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n           render={(text, record: any) => (\r\n            <>\r\n\r\n              <h4\r\n               \r\n                style={{\r\n                  fontWeight: 400,\r\n                  color: '#555',\r\n\r\n                }}>\r\n                  {text && moment(text).format('MMMM Do YYYY, h:mm a')}\r\n              </h4>\r\n\r\n\r\n            </>\r\n          )}\r\n            />\r\n\r\n\r\n            <Column\r\n                title=\"Total Price\" \r\n                dataIndex=\"total\" \r\n                key=\"id\" \r\n                className='classnameofthecolumn'\r\n                />\r\n\r\n\r\n          <Column\r\n           align='right'\r\n           title=\"Status\" \r\n           dataIndex=\"status\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n           render={(text, record: any) => (\r\n            <>\r\n\r\n        <Dropdown overlay={() => StatusItemMenu(record,record.id)} placement=\"bottomRight\">\r\n           <a href='##'>\r\n            <span\r\n                // className={'product-attributeTag'}\r\n              style={{\r\n                fontSize:'12px'\r\n              }}\r\n                >\r\n\r\n                {text}\r\n                <span style={{\r\n                  marginLeft:\"5px\",\r\n                  fontSize:'10px'\r\n                }}>\r\n                   <DownOutlined />\r\n                </span>\r\n               \r\n            </span> \r\n            </a>\r\n\t\t\t\t\t</Dropdown>\r\n\r\n\r\n     \r\n            </>\r\n          )}\r\n            />\r\n\r\n\r\n          {/* <Column \r\n          \r\n          className='classnameofthecolumn'\r\n\r\n          title=\"Product\" dataIndex=\"product\" key=\"product\" /> */}\r\n\r\n          {/* <Column \r\n          \r\n          className='classnameofthecolumn'\r\n\r\n          title=\"Sub Category\" dataIndex=\"subCategory\" key=\"subCategory\" /> */}\r\n        \r\n        {/* <Column\r\n          title=\"Tags\"\r\n          dataIndex=\"tags\"\r\n          key=\"tags\"\r\n          render={tags => (\r\n            <>\r\n              {tags.map((tag : any) => (\r\n                <Tag color=\"blue\" key={tag}>\r\n                  {tag}\r\n                </Tag>\r\n              ))}\r\n            </>\r\n          )}\r\n        /> */}\r\n        {/* <Column\r\n        \r\n        className='classnameofthecolumn'\r\n          title=\"\"\r\n          key=\"action\"\r\n          align='right'\r\n          render={(text, record : any) => (\r\n            <Space size=\"middle\">\r\n              <a href='##'>\r\n               <Tooltip placement=\"top\" title='Edit Order'>\r\n              <span className='iconSize' \r\n              onClick={() => {\r\n                setvisible(true)\r\n                setactiveCategoryForEdit(record); \r\n              }}> \r\n              <EditOutlined />\r\n              </span>\r\n\r\n               </Tooltip>\r\n               </a>\r\n            </Space>\r\n          )}\r\n        /> */}\r\n      </Table>\r\n\r\n    \r\n\r\n    {activeCategoryForEdit &&   <QuickEdit \r\n    setvisible={setvisible}\r\n    visible={visible}\r\n    customer={activeCategoryForEdit}\r\n    orderList={data}\r\n    setOrderList={setOrderList}\r\n    />\r\n\r\n    }\r\n    \r\n    \r\n    </>\r\n    )\r\n}\r\n\r\n\r\ninterface Props {\r\n    history: any; \r\n}\r\n\r\nconst CustomerList = ({history}: Props) => {\r\n\r\n    const [orderList,setOrderList] = useState([]); \r\n\r\n    const [orderState, handleRegionListFetch] = useHandleFetch({}, 'orderList');\r\n    const [orderStatusFilterValue,setorderStatusFilterValue] = useState(''); \r\n\r\n    \r\n    const [startDate,setStartDate] = useState('');\r\n    const [endDate,setEndDate] = useState('');\r\n\r\n      \r\n\r\n    const handleStartEndDateRangeDate = (e) => {\r\n      console.log('dateOrder',moment(e[0]).format());\r\n      console.log('dateOff',moment(e[1]).format());\r\n      const startDate = new Date(moment(e[0]).format()); \r\n      const endDate = new Date(moment(e[1]).format()); \r\n      // @ts-ignore\r\n      setStartDate(startDate);\r\n      // @ts-ignore\r\n      setEndDate(endDate);\r\n  }; \r\n\r\n\r\n    console.log('orderState',orderState);\r\n  \r\n    useEffect(()=>{\r\n     const setOrders = async () => {\r\n       const regions = await handleRegionListFetch({\r\n        urlOptions:{\r\n          params: {\r\n            sortItem: 'added',\r\n            sortOrderValue: '-1',\r\n            statusValue: orderStatusFilterValue,\r\n            limitNumber: 500000,\r\n            startDateValue: startDate,\r\n            endDateValue: endDate\r\n          }\r\n          }\r\n       }); \r\n       // @ts-ignore\r\n       setOrderList(regions); \r\n     }\r\n     setOrders(); \r\n    },[orderStatusFilterValue,startDate,endDate])\r\n\r\n  const [addNewCategoryVisible,setAddNewCategoryVisible] = useState(false);   \r\n\r\n  // console.log('orderState',orderState)\r\n\r\n  const handleSearch = (value) => {\r\n    if(orderState.data.length > 0 ){\r\n      const newOrderList = orderState.data.filter(item => item.name.includes(value)); \r\n      setOrderList(newOrderList); \r\n    }\r\n     \r\n  }; \r\n\r\n\r\n\r\n  const onOrderStatusFilterChange = (value) => {\r\n    setorderStatusFilterValue(value); \r\n  }; \r\n  const orderFilteringOption =  [\r\n    {\r\n      name: 'Pending',\r\n      value: 'Pending'\r\n    },\r\n    {\r\n      name: 'Completed',\r\n      value: 'complete'\r\n    },\r\n  ]\r\n\r\n\treturn (\r\n\t\t<>\r\n    {/* <h2 className='containerPageTitle'>\r\n      Categories\r\n    </h2> */}\r\n    <div className='categoryListContainer'>\r\n            <div className='categoryListContainer__header'>\r\n           \r\n\r\n          <div className='categoryListContainer__header-searchBar'>\r\n          <h2 className='categoryListContainer__header-title'>\r\n            Orders \r\n            </h2>\r\n\r\n\r\n          <Search\r\n            enterButton={false}\r\n            className='searchbarClassName'\r\n          placeholder=\"search orders..\"\r\n          onSearch={value => handleSearch(value)}\r\n          // style={{ width: 300 }}\r\n        />\r\n          </div>\r\n\r\n\r\n         <div>\r\n\r\n            <Button\r\n          // type=\"primary\"\r\n          className='btnPrimaryClassNameoutline'\r\n          icon={<PlusOutlined />}\r\n          onClick={() => history.push('/admin/order/new')}\r\n        >\r\n        Add New\r\n            \r\n            </Button>\r\n            </div>\r\n            </div>\r\n\r\n         \r\n            <div\r\n              style={{\r\n                marginTop: '30px'\r\n              }}\r\n            className='categoryListContainer__header'>\r\n           <div></div>\r\n\r\n      <div>\r\n             \r\n                  <RangePicker\r\n                    style={{\r\n                      width: 270,\r\n                      color: '#3fa6f9'\r\n                    }}\r\n                    onChange={handleStartEndDateRangeDate}\r\n                    picker={'date'} \r\n                    bordered={false}\r\n                    />\r\n\r\n\r\n\r\n          <Select\r\n\t\t\t\t\tstyle={{ borderRadius: '15px', color: '#3fa6f9', }}\r\n\t\t\t\t\tplaceholder='Select status'\r\n\t\t\t\t\toptionFilterProp='children'\r\n\t\t\t\t\tonChange={onOrderStatusFilterChange}\r\n          defaultValue={'pending'}\r\n          bordered={false}\r\n\t\t\t\t>\r\n\t\t\t\t\t{orderFilteringOption.map((option) => {\r\n\t\t\t\t\t\t\treturn <Option value={option.value}>{option.name}</Option>;\r\n\t\t\t\t\t\t})}\r\n\t\t\t\t</Select>\r\n        </div>\r\n\r\n       \r\n            </div>\r\n\r\n            <div \r\n\r\n            className='categoryListContainer__afterHeader'>\r\n            {/* <Search\r\n      placeholder=\"search categories..\"\r\n      size=\"large\"\r\n      onSearch={value => console.log(value)}\r\n      style={{ width: 300 }}\r\n    /> */}\r\n            </div>\r\n\r\n     \r\n\t\t\t\r\n\t\t\t<div className='categoryListContainer__categoryList'>\r\n        {orderState.done && orderList.length > 0 && <MyTable \r\n        setOrderList={setOrderList}\r\n        data={orderList} />}\r\n        {orderState.isLoading && <DataTableSkeleton />}\r\n\r\n        {orderState.done && !(orderList.length > 0) && (\r\n        <Empty title='No Order found'  />\r\n        )}\r\n        \r\n\t\t\t</div>\r\n\t\t</div>\r\n\r\n\r\n      {/* {orderState.done && \r\n          <AddNewOrder \r\n          addNewCategoryVisible={addNewCategoryVisible} \r\n          setAddNewCategoryVisible={setAddNewCategoryVisible}\r\n          orderList={orderState.data}\r\n          setOrderList={setOrderList}\r\n           />} */}\r\n\r\n  \r\n    </>\r\n\t);\r\n};\r\n\r\nexport default withRouter(CustomerList);\r\n","import React, {memo} from 'react'\r\n\r\n\r\n// import components\r\nimport AddNewOrderProductItem from \"../order/AddNewOrderProductItem\";\r\nimport Empty from \"../../components/Empty\";\r\n\r\nimport {\r\n    ShopOutlined\r\n} from '@ant-design/icons';\r\n\r\n\r\ninterface Props {\r\n    productList?: any;\r\n    setProductList?: any;\r\n}\r\n\r\nconst AddNewOrderSummary = ({\r\n    setProductList,\r\n    productList\r\n}: Props) => {\r\n    return (\r\n        <div\r\n            style={{\r\n                // @ts-ignore\r\n                flexDirection: 'flex'\r\n            }}\r\n            className='addOrderContainer__container-orderSummary'>\r\n                  <h3 className='addOrderContainer-sectionTitle'>\r\n                <span>\r\n                    <ShopOutlined />\r\n                </span>\r\n                Added Products\r\n            </h3>\r\n            <div className='addOrderContainer__container-productItemContainer'>\r\n                {productList && productList.length > 0 && productList.map(item => {\r\n                    return <AddNewOrderProductItem\r\n                        setProductList={setProductList}\r\n                        productList={productList}\r\n                        productId={item._id}\r\n                        quantity={item.quantity}\r\n                        item={item}\r\n                        variation={item.variation}\r\n                    />;\r\n                })}\r\n\r\n                {!(productList.length > 0) && (\r\n                    <div style={{\r\n                        marginLeft: '32px'\r\n                    }}>\r\n                        <Empty title='No Product Added' height={150} />\r\n                    </div>\r\n                )}\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default memo(AddNewOrderSummary)\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useHandleFetch } from '../../hooks';\r\nimport { Select, Skeleton } from 'antd';\r\n\r\ninterface Props {\r\n    setCustomerId?: any;\r\n    setSelectedCustomerData?: any;\r\n    customerListState?:any; \r\n}\r\n\r\nconst { Option } = Select;\r\n\r\nconst Brands = ({ setCustomerId, setSelectedCustomerData }: Props) => {\r\n    const [options, setoptions] = useState([]);\r\n    const [selectedBrandId, setSelectedBrandId] = useState('');\r\n    const [brandState, handleTagListFetch] = useHandleFetch({}, 'customerList');\r\n\r\n    function onChange(option) {\r\n        if (options && options.length > 0) {\r\n            const customerData = options.find(item => item.value === option);\r\n            if (customerData) {\r\n                setSelectedCustomerData(customerData);\r\n            }\r\n        }\r\n        setSelectedBrandId(option);\r\n        setCustomerId(option);\r\n        // console.log(`selected ${value}`);\r\n    }\r\n\r\n    function onBlur() {\r\n        // console.log('blur');\r\n    }\r\n\r\n    function onFocus() {\r\n        // console.log('focus');\r\n    }\r\n\r\n    function onSearch(val) {\r\n        // console.log('search:', val);\r\n    }\r\n\r\n    useEffect(() => {\r\n        const setBrands = async () => {\r\n            const brandListRes = await handleTagListFetch({\r\n                urlOptions:{\r\n                    params: {\r\n                      sortItem: 'added',\r\n                      sortOrderValue: '-1'\r\n                    }\r\n                    }\r\n            });\r\n\r\n            // @ts-ignore\r\n            if (brandListRes && brandListRes.length > 0) {\r\n                // @ts-ignore\r\n                const brandOptions = brandListRes.map((brand) => {\r\n                    return {\r\n                        ...brand,\r\n                        value: brand.id,\r\n                        name: `${brand.firstName} ${brand.lastName}`\r\n                    };\r\n                });\r\n                setoptions(brandOptions);\r\n            }\r\n        };\r\n\r\n        setBrands();\r\n    }, []);\r\n\r\n    return (\r\n        <Skeleton loading={brandState.isLoading}>\r\n            <Select\r\n                showSearch\r\n                size='middle'\r\n                style={{ width: '100%' }}\r\n                placeholder='Select a Customer'\r\n                optionFilterProp='children'\r\n                onChange={onChange}\r\n                onFocus={onFocus}\r\n                onBlur={onBlur}\r\n                onSearch={onSearch}\r\n                filterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n            >\r\n                {brandState.done &&\r\n                    brandState.data.length > 0 &&\r\n                    options.map((option) => {\r\n                        return <Option value={option.value}>{option.name}</Option>;\r\n                    })}\r\n            </Select>\r\n        </Skeleton>\r\n\r\n    );\r\n};\r\n\r\nexport default Brands;\r\n","import React, { useEffect, useState,memo } from 'react';\r\nimport { useHandleFetch } from '../../hooks';\r\nimport { Select, Skeleton } from 'antd';\r\n\r\n\r\ninterface Props {\r\n    setProductIds?: any;\r\n    productIds?: any;\r\n    productListState?:any; \r\n}\r\n\r\n\r\nconst Tags = ({\r\n    setProductIds,\r\n    productIds,\r\n    productListState\r\n}: Props) => {\r\n    const [options, setoptions] = useState([]);\r\n    const [selectedOpions, setselectedOptions] = useState([]);\r\n\r\n\r\n    useEffect(() => {\r\n        if (productListState.done && productListState.data  && productListState.data.length > 0) {\r\n            // @ts-ignore\r\n            const productOptions = productListState.data.map((product) => {\r\n                return product.name\r\n            });\r\n            setoptions(productOptions);\r\n        }\r\n\r\n    }, [productListState]);\r\n\r\n\r\n\r\n    const handleChange = (selectItems) => {\r\n        setselectedOptions(selectItems);\r\n\r\n        console.log('selectedProducts', selectItems);\r\n\r\n        if (productListState.done && productListState.data.length > 0 && selectItems.length > 0) {\r\n            const selectedCategoryIds = selectItems.map((item) => {\r\n                const selectedcategory = productListState.data.find(\r\n                    (cat) => cat.name.toLowerCase() === item.toLowerCase()\r\n                );\r\n                if (selectedcategory) {\r\n                    return selectedcategory;\r\n                }\r\n            });\r\n            console.log('selectedCategoryIds', selectedCategoryIds);\r\n            setProductIds(selectedCategoryIds);\r\n        }\r\n        else {\r\n            setProductIds([])\r\n        }\r\n    }\r\n\r\n\r\n    // console.log('selectedOpions', selectedOpions);\r\n\r\n\r\n    return (\r\n        <>\r\n            <Skeleton loading={productListState.isLoading}>\r\n                {productListState.done && productListState.data.length > 0 && <Select\r\n                    mode=\"multiple\"\r\n                    placeholder=\"search products\"\r\n                    value={selectedOpions}\r\n                    onChange={handleChange}\r\n                    style={{ width: '100%' }}\r\n                >\r\n                    {options.filter(o => !selectedOpions.includes(o)).map(item => (\r\n                        <Select.Option key={item} value={item}>\r\n                            {item}\r\n                        </Select.Option>\r\n                    ))}\r\n                </Select>}\r\n            </Skeleton>\r\n\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default memo(Tags);\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n\r\nimport { useHandleFetch } from '../../hooks';\r\n\r\n\r\n\r\n// import third party ui lib\r\nimport { Upload,Radio , message, Select, Button, notification, Empty, Steps, Form } from 'antd';\r\n\r\nimport {\r\n\tFileOutlined,\r\n\tInboxOutlined,\r\n\tRadiusUpleftOutlined,\r\n\tRadiusUprightOutlined,\r\n\tRadiusBottomleftOutlined,\r\n\tRadiusBottomrightOutlined,\r\n\tDeleteOutlined,\r\n\tFileAddOutlined,\r\n\tPlusOutlined,\r\n\tCheckCircleOutlined,\r\n\tCaretRightOutlined,\r\n\tCaretLeftOutlined,\r\n\tCaretRightFilled,\r\n\tUserOutlined,\r\n\tInfoCircleOutlined,\r\n\tCarOutlined,\r\n\tClockCircleOutlined\r\n} from '@ant-design/icons';\r\n\r\n\r\n\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport AddNewOrderSummary from './AddNewOrderSummary';\r\nimport CustomersId from './CustomersId';\r\nimport AddProducts from './AddProducts';\r\nimport { product } from '../../state/ducks';\r\n\r\n\r\n\r\n//import utils\r\nimport {getDeliveryChargeTotal} from '.././../utils'\r\n\r\n\r\nconst { Option } = Select;\r\nconst { Step } = Steps;\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t\tmessage: message || 'Order Created',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n\tnotification.error({\r\n\t\tmessage: message || 'Something Went Wrong',\r\n\t\tdescription: '',\r\n\t\ticon: <InfoCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n\r\n\r\n});\r\n\r\n\r\n\r\n\r\nconst initialValues = {\r\n\tphone: '',\r\n\temail: '',\r\n\tfirstName: '',\r\n\tlastName: '',\r\n\taddress1: '',\r\n\taddress2: '',\r\n\tzipCode: '',\r\n\tadditionalInfo: '',\r\n\tcountry: '',\r\n\tcity: '',\r\n\r\n};\r\n\r\n\r\nconst steps = [\r\n\t{\r\n\t\ttitle: 'Order Information',\r\n\t\tcontent: '',\r\n\t\t// description: 'Add Customer & Products'\r\n\t},\r\n\t{\r\n\t\ttitle: 'Shipping Address',\r\n\r\n\t},\r\n\t{\r\n\t\ttitle: 'Confirm Order',\r\n\t\tcontent: '',\r\n\t},\r\n];\r\n\r\n\r\n\r\n\r\ninterface Props {\r\n\r\n}\r\n\r\nconst AddNewOrder = ({ }: Props) => {\r\n\r\n\tconst [addOrderState, handleOrderFetch] = useHandleFetch({}, 'addOrder');\r\n\tconst [selectedCountryValue, setselectedCountryValue] = useState('');\r\n\tconst [selectedCityValue, setselectedCityValue] = useState('');\r\n\tconst [customerId, setCustomerId] = useState([]);\r\n\r\n\tconst [countryOptions, setcountryOptions] = useState([]);\r\n\tconst [cityOptions, setcityOptions] = useState([]);\r\n\r\n\tconst [countryListState, handleCountryListFetch] = useHandleFetch(\r\n\t\t[],\r\n\t\t'countryList'\r\n\t);\r\n\r\n\tconst [cityListState, handleCityListFetch] = useHandleFetch([], 'cityList');\r\n\r\n\tconst [current, setCurrent] = useState(0);\r\n\tconst [selectedCustomerData, setSelectedCustomerData] = useState({});\r\n\tconst [productIds, setProductIds] = useState([]);\r\n\tconst [productList, setProductList] = useState([]);\r\n\t\r\n\tconst [productListState, handleProductListFetch] = useHandleFetch({}, 'productList');\r\n\tconst [customerListState, handleCustomerListFetch] = useHandleFetch({}, 'customerList');\r\n\r\n\r\n\r\n\tconst [deliveryRegionState, handleDeliveryRegionFetch] = useHandleFetch(\r\n\t\t[],\r\n\t\t'getDeliveryRegion'\r\n\t  );\r\n\r\n\r\n\t  const [deliveryRegionName, setDeliveryRegionName] = useState('');\r\n\t  const [selectedRegion, setSelectedRegion] = useState({});\r\n\t  const [regionDeliveryCharge,setregionDeliveryCharge] = useState([]);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\t  useEffect(()=>{\r\n\t\t  if(selectedCustomerData && Object.keys(selectedCustomerData).length > 0){\r\n\t\t\tsetselectedCityValue(selectedCustomerData['city']); \r\n\t\t\tsetselectedCountryValue(selectedCustomerData['country']); \r\n\t\t  }\r\n\t  },[selectedCustomerData]); \r\n\r\n\t  \r\n\r\n\t  const isDeliveryChargeExists = (regions) => {\r\n\t\tif (!regions) {\r\n\t\t  return false;\r\n\t\t} else return true;\r\n\t  };\r\n\r\n\r\n\t  useEffect(() => {\r\n\t\tconst getAndSetShippingDeliveryCharge = async () => {\r\n\t\t\tconst deliveryRegionState = await handleDeliveryRegionFetch({\r\n\t\t\t  urlOptions: {\r\n\t\t\t\tplaceHolders: {\r\n\t\t\t\t  cityName: selectedCityValue,\r\n\t\t\t\t},\r\n\t\t\t  },\r\n\t\t\t});\r\n\t\t\t// @ts-ignore\r\n\t\t\tsetregionDeliveryCharge(deliveryRegionState);\r\n\t\t  };\r\n\t\r\n\t\t  getAndSetShippingDeliveryCharge();\r\n\t\t  console.log('selectedCityValue',selectedCityValue); \r\n\t  }, [selectedCityValue]);\r\n\r\n\r\n\t  const handleDeviliveryRegionChange = (value) => {\r\n\t\tsetDeliveryRegionName(value);\r\n\r\n\t\tif (\r\n\t\t  isDeliveryChargeExists(\r\n\t\t\tregionDeliveryCharge.length > 0 &&\r\n\t\t\tregionDeliveryCharge\r\n\t\t  )\r\n\t\t) {\r\n\t\t  const deliveryRegions = regionDeliveryCharge; \r\n\t\r\n\t\t  const selectedRegion = deliveryRegions.find(\r\n\t\t\t(region) => region['_id'] === value\r\n\t\t  );\r\n\t\t  if (selectedRegion) {\r\n\t\t\tsetSelectedRegion(selectedRegion);\r\n\t\t  }\r\n\t\t}\r\n\t  };\r\n\t\r\n\t  useEffect(() => {\r\n\t\tif (\r\n\t\t  isDeliveryChargeExists(\r\n\t\t  regionDeliveryCharge.length > 0 &&\r\n\t\t\tregionDeliveryCharge\r\n\t\t  )\r\n\t\t) {\r\n\t\t  const deliveryRegions = regionDeliveryCharge;\r\n\t\r\n\t\t  const selectedRegion = deliveryRegions.find(\r\n\t\t\t(region, index) => 0 === index\r\n\t\t  );\r\n\t\t  if (selectedRegion) {\r\n\t\t\tsetDeliveryRegionName(selectedRegion['name']);\r\n\t\t\tsetSelectedRegion(selectedRegion);\r\n\t\t  }\r\n\t\t}\r\n\t  }, [regionDeliveryCharge]);\r\n\r\n\r\n\r\n\r\n\r\n\t  console.log('deliveryRegionState',deliveryRegionState)\r\n\t  console.log('selectedRegion',selectedRegion)\r\n\t  console.log('regionDeliveryCharge',regionDeliveryCharge); \r\n\t  console.log('selectedCustomerData',selectedCustomerData)\r\n\r\n\tuseEffect(() => {\r\n        const setProducts = async () => {\r\n            const productListRes = await handleProductListFetch({});\r\n        };\r\n\r\n        setProducts();\r\n    }, []);\r\n\r\n\r\n\tuseEffect(() => {\r\n        const setCustomers = async () => {\r\n            const customerListRes = await handleCustomerListFetch({});\r\n        };\r\n        setCustomers();\r\n    }, []);\r\n\r\n\r\n\r\n\tconst next = () => {\r\n\t\tconst newCurrent = current + 1;\r\n\t\tsetCurrent(newCurrent);\r\n\t}\r\n\r\n\r\n\tconst prev = () => {\r\n\t\tconst newCurrent = current - 1;\r\n\t\tsetCurrent(newCurrent);\r\n\t}\r\n\r\n\r\n\tconst handleCheckoutSubmit = async (values: any, actions: any) => {\r\n\t\tconst products = productList && productList.length > 0 ? productList.map(item => {\r\n\t\t\treturn {\r\n\t\t\t\tproduct: item._id,\r\n\t\t\t\tquantity: item.quantity,\r\n\t\t\t\tvariation: item.variation\r\n\t\t\t}\r\n\t\t}) : [];\r\n\r\n\t\tconst addOrderRes = await handleOrderFetch({\r\n\r\n\t\t\tbody: {\r\n\t\t\t\tshippingAddress: {\r\n\t\t\t\t\tphone: values.phone,\r\n\t\t\t\t\temail: values.email,\r\n\t\t\t\t\taddress1: values.address1,\r\n\t\t\t\t\taddress2: values.address2,\r\n\t\t\t\t\tfirstName: values.firstName,\r\n\t\t\t\t\tlastName: values.lastName,\r\n\t\t\t\t\tcity: selectedCityValue || selectedCustomerData['city'],\r\n\t\t\t\t\tcountry: selectedCountryValue || selectedCustomerData['country'],\r\n\t\t\t\t},\r\n\t\t\t\titems: products,\r\n\t\t\t\tdelivery: deliveryRegionName,\r\n\t\t\t\tcustomerId: customerId\r\n\t\t\t\t// charge\r\n\t\t\t},\r\n\t\t});\r\n\r\n\t\t// @ts-ignore\r\n\t\tif (addOrderRes && addOrderRes.status === 'ok') {\r\n\t\t\t// openSuccessNotification();\r\n\r\n\r\n\t\t\tactions.resetForm();\r\n\r\n\r\n\t\t\tsetCurrent(0); \r\n\t\t\tsetProductIds([]); \r\n\t\t\tsetProductList([]); \r\n\t\t\tsetCustomerId([]); \r\n\t\t\tsetselectedCityValue(''); \r\n\t\t\tsetselectedCountryValue('')\r\n\t\t\tsetDeliveryRegionName(''); \r\n\t\t\tsetSelectedRegion({}); \r\n\t\t\tsetregionDeliveryCharge([]); \r\n\t\t\tsetSelectedCustomerData({}); \r\n\r\n\t\t}\r\n\t\telse {\r\n\t\t\topenErrorNotification(\"Couldn't create order, Something went wrong\")\r\n\t\t}\r\n\r\n\t\tactions.setSubmitting(false);\r\n\t};\r\n\r\n\r\n\r\n\tuseEffect(() => {\r\n\t\tif (!addOrderState['isLoading']) {\r\n\t\t\tconst error = addOrderState['error'];\r\n\t\t\tif (error['isError'] && Object.keys(error['error']).length > 0) {\r\n\r\n\t\t\t\tif (error['error']['registerError']) {\r\n\t\t\t\t\t// setServerErrors(error['error']['registerError']);\r\n\t\t\t\t} else if (error['error']['checkoutError']) {\r\n\t\t\t\t\t// setServerErrors(error['error']['checkoutError']);\r\n\t\t\t\t}\r\n\r\n\t\t\t\telse {\r\n\t\t\t\t\t// setServerErrors(error['error']);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst errors =\r\n\t\t\t\t\tObject.values(error['error']).length > 0\r\n\t\t\t\t\t\t? Object.values(error['error'])\r\n\t\t\t\t\t\t: [];\r\n\t\t\t\terrors.forEach((err, i) => {\r\n\t\t\t\t\tif (typeof err === 'string') {\r\n\t\t\t\t\t\topenErrorNotification(err);\r\n\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if (typeof err === 'object') {\r\n\t\t\t\t\t\tif (err && Object.keys(err).length > 0) {\r\n\t\t\t\t\t\t\tconst errs = Object.values(err);\r\n\t\t\t\t\t\t\terrs.forEach(err => {\r\n\t\t\t\t\t\t\t\topenErrorNotification(err);\r\n\t\t\t\t\t\t\t})\r\n\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (\r\n\t\t\t!addOrderState['isLoading'] &&\r\n\t\t\tObject.keys(addOrderState.data).length > 0\r\n\t\t) {\r\n\t\t\tif (addOrderState['data']['status'] === 'ok') {\r\n\t\t\t\topenSuccessNotification('Order Created Successfully');\r\n\t\t\t\t// history.push({\r\n\t\t\t\t//   pathname: '/orderDetails',\r\n\t\t\t\t//   state: checkoutState['data']\r\n\t\t\t\t// })\r\n\r\n\t\t\t\t// clearCart();\r\n\t\t\t\t// setIsModalShown(true);\r\n\t\t\t}\r\n\t\t}\r\n\t}, [addOrderState]);\r\n\r\n\r\n\r\n\r\n\tconst onChangeCity = (value) => {\r\n\t\tsetselectedCityValue(value);\r\n\t}\r\n\r\n\tconst onChangeCountry = (value) => {\r\n\t\tsetselectedCountryValue(value);\r\n\t};\r\n\r\n\r\n\r\n\tuseEffect(() => {\r\n\t\tconst setCountries = async () => {\r\n\t\t\tconst CountryListRes = await handleCountryListFetch({});\r\n\r\n\t\t\t// @ts-ignore\r\n\t\t\tif (CountryListRes && CountryListRes.length > 0) {\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\tconst countryOptions = CountryListRes.map((country) => {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tvalue: country.id,\r\n\t\t\t\t\t\tname: country.name\r\n\t\t\t\t\t};\r\n\t\t\t\t});\r\n\t\t\t\tsetcountryOptions(countryOptions);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tsetCountries();\r\n\t}, []);\r\n\r\n\r\n\tuseEffect(() => {\r\n\t\tconst setCities = async () => {\r\n\t\t\tconst cityListRes = await handleCityListFetch({\r\n\t\t\t\turlOptions: {\r\n\t\t\t\t\tplaceHolders: {\r\n\t\t\t\t\t\tcountry: selectedCountryValue,\r\n\t\t\t\t\t},\r\n\t\t\t\t},\r\n\t\t\t});\r\n\r\n\t\t\t// @ts-ignore\r\n\t\t\tif (cityListRes && cityListRes.length > 0) {\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\tconst cityOptions = cityListRes.map((city) => {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tvalue: city.name,\r\n\t\t\t\t\t\tname: city.name\r\n\t\t\t\t\t};\r\n\t\t\t\t});\r\n\t\t\t\tsetcityOptions(cityOptions);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tsetCities();\r\n\t}, [selectedCountryValue]);\r\n\r\n\r\n\r\n\tconst getisSubmitButtonDisabled = (values, isValid) => {\r\n\t\tif (!isValid ||\r\n\t\t\t!values.name ||\r\n\t\t\t!values.pickUpLocation ||\r\n\t\t\t!values.time) {\r\n\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\r\n\r\n\tconst handleAddDeliveryCharge = () => {\r\n\r\n\t};\r\n\r\n\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        if (productIds && productIds.length > 0 && productList) {\r\n            if (productIds.length > productList.length) {\r\n                const variation = productIds[productIds.length - 1]['pricing'] && productIds[productIds.length - 1]['pricing'].length > 0 && productIds[productIds.length - 1]['pricing'][0]['_id'];\r\n\r\n                setProductList([...productList, {\r\n                    ...productIds[productIds.length - 1],\r\n                    _id: productIds[productIds.length - 1]['id'],\r\n                    variation: variation,\r\n                    quantity: 1\r\n                }]);\r\n            }\r\n\r\n\r\n            else if (productIds.length < productList.length) {\r\n                console.log('productIds', productIds);\r\n                console.log('productList', productList);\r\n\r\n                const newProductList = productList.filter(item => {\r\n                    let isTrue = false;\r\n                    productIds.forEach(product => {\r\n                        if (product.id === item._id) {\r\n                            isTrue = true;\r\n                        }\r\n                    });\r\n                    return isTrue;\r\n                })\r\n                setProductList(newProductList);\r\n\r\n            }\r\n\r\n        }\r\n        else {\r\n            setProductList([]);\r\n        }\r\n        // console.log('productIds', productIds)\r\n\r\n\r\n    }, [productIds])\r\n\r\n\r\n\t// console.log('productList', productList)\r\n\tconsole.log('selectedCustomerData', selectedCustomerData); \r\n\r\n\r\n\treturn (\r\n\t\t<Formik\r\n\t\t\tonSubmit={(values, actions) => handleCheckoutSubmit(values, actions)}\r\n\t\t\tvalidationSchema={validationSchema}\r\n\t\t\tvalidateOnBlur={false}\r\n\t\t\tenableReinitialize={true}\r\n\t\t\tinitialValues={\r\n\t\t\t\t{ ...initialValues, ...selectedCustomerData }\r\n\t\t\t}\r\n\t\t>\r\n\t\t\t{({\r\n\t\t\t\thandleChange,\r\n\t\t\t\tvalues,\r\n\t\t\t\thandleSubmit,\r\n\t\t\t\terrors,\r\n\t\t\t\tisValid,\r\n\t\t\t\tisSubmitting,\r\n\t\t\t\ttouched,\r\n\t\t\t\thandleBlur,\r\n\t\t\t\tsetFieldTouched,\r\n\t\t\t\thandleReset,\r\n\t\t\t}) => (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<div className='addOrderContainer'>\r\n\t\t\t\t\t\t\t<h3>\r\n\t\t\t\t\t\t\t\tAdd New Order\r\n\t\t\t\t\t\t\t</h3>\r\n\t\t\t\t\t\t\t<div className='addOrderContainer__container'>\r\n\t\t\t\t\t\t\t\t<Steps current={current}>\r\n\t\t\t\t\t\t\t\t\t{steps.map(item => (\r\n\t\t\t\t\t\t\t\t\t\t<Step\r\n\t\t\t\t\t\t\t\t\t\t\tkey={item.title}\r\n\t\t\t\t\t\t\t\t\t\t\ttitle={item.title} />\r\n\t\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t\t</Steps>\r\n\r\n\t\t\t\t\t\t\t\t{current === 0 && (\r\n\t\t\t\t\t\t\t\t\t<div className='addOrderContainer__container-OrderInfoContainer'>\r\n\t\t\t\t\t\t\t\t\t\t<div className='addOrderContainer__container-OrderInfoContainer-left'>\r\n\t\t\t\t\t\t\t\t\t\t\t<h3 \r\n\t\t\t\t\t\t\t\t\t\t\tstyle={{}}\r\n\t\t\t\t\t\t\t\t\t\t\tclassName='addOrderContainer-sectionTitle'>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<UserOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n                                            Customers And products\r\n                                           </h3>\r\n\r\n\t\t\t\t\t\t\t\t\t\t   <div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\tmarginTop: '15px'\r\n\t\t\t\t\t\t\t\t\t\t\t}}></div>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<h4 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\t\t\t\t\t\tCustomer\r\n\t\t\t\t\t\t\t\t\t\t\t</h4>\r\n\t\t\t\t\t\t\t\t\t\t\t<CustomersId\r\n\t\t\t\t\t\t\t\t\t\t    \tcustomerListState={customerListState}\r\n\t\t\t\t\t\t\t\t\t\t\t\tsetSelectedCustomerData={setSelectedCustomerData}\r\n\t\t\t\t\t\t\t\t\t\t\t\tsetCustomerId={setCustomerId} />\r\n\t\t\t\t\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\tmarginTop: '15px'\r\n\t\t\t\t\t\t\t\t\t\t\t}}></div>\r\n\t\t\t\t\t\t\t\t\t\t\t<h4 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\t\t\t\t\t\tProducts\r\n\t\t\t\t\t\t\t\t\t\t\t</h4>\r\n\t\t\t\t\t\t\t\t\t\t\t<AddProducts\r\n\t\t\t\t\t\t\t\t\t\t    \tproductListState={productListState}\r\n\t\t\t\t\t\t\t\t\t\t\t\tproductIds={productIds}\r\n\t\t\t\t\t\t\t\t\t\t\t\tsetProductIds={setProductIds} />\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t<div className='addOrderContainer__container-OrderInfoContainer-right'>\r\n\t\t\t\t\t\t\t\t\t\t\t<AddNewOrderSummary\r\n\t\t\t\t\t\t\t\t\t\t\t\tsetProductList={setProductList}\r\n\t\t\t\t\t\t\t\t\t\t\t\tproductList={productList} />\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t)}\r\n\r\n\r\n\t\t\t\t\t\t\t\t{current === 1 && (\r\n\t\t\t\t\t\t\t\t\t<div className='addOrderContainer__container-address'>\r\n\r\n\t\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs'>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tlabel='First Name'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.firstName}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tname='firstName'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.firstName && errors.firstName) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addOrderState.error['error']['firstName'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.firstName && errors.firstName) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addOrderState.error['error']['firstName'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('firstName');\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tlabel='Last Name'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.lastName}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tname='lastName'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.lastName && errors.lastName) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addOrderState.error['error']['lastName'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.lastName && errors.lastName) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addOrderState.error['error']['lastName'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('lastName');\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs'>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tlabel='Phone'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.phone}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tname='phone'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.phone && errors.phone) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addOrderState.error['error']['phone'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.phone && errors.phone) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addOrderState.error['error']['phone'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('phone');\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tlabel='Email'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.email}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tname='email'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.email && errors.email) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addOrderState.error['error']['email'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.email && errors.email) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addOrderState.error['error']['email'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('email');\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs'>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tCountry\r\n\t\t\t\t\t\t\t\t\t</h3>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Form.Item\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalidateStatus={(addOrderState.error['error']['country']) ? \"error\" : \"\"}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\thelp={addOrderState.error['error']['country']}\r\n\t\t\t\t\t\t\t\t\t\t\t\t// noStyle={true}\r\n\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Select\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tdefaultValue={values.country}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tnotFoundContent={<Empty description='No Country Found' image={Empty.PRESENTED_IMAGE_SIMPLE} />}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tshowSearch\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{ width: '100%' }}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder='Select a Country'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\toptionFilterProp='children'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={onChangeCountry}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tfilterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{countryListState.done &&\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcountryListState.data.length > 0 &&\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcountryOptions.map((option) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn <Option value={option.value}>{option.name}</Option>;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Select>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Form.Item>\r\n\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tCity\r\n                                \t\t\t    </h3>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Form.Item\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t// noStyle={true}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalidateStatus={(addOrderState.error['error']['city']) ? \"error\" : \"\"}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\thelp={addOrderState.error['error']['city']}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Select\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tdefaultValue={values.city}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='selectClassName'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tnotFoundContent={<Empty description='First Select a Country' image={Empty.PRESENTED_IMAGE_SIMPLE} />}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tshowSearch\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{ width: '100%' }}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder='Select a city'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\toptionFilterProp='children'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={onChangeCity}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tfilterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{cityListState.done &&\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcityListState.data.length > 0 &&\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcityOptions.map((option) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn <Option value={option.value}>{option.name}</Option>;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Select>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Form.Item>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\t\t\t\tmarginTop: '12px'\r\n\t\t\t\t\t\t\t\t\t\t}}></div>\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs'>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tlabel='Address'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.address1}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tname='address1'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.address1 && errors.address1) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addOrderState.error['error']['address1'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.address1 && errors.address1) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addOrderState.error['error']['address1'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('address1');\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tlabel='Address 2'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.address2}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tname='address2'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.address2 && errors.address2) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addOrderState.error['error']['address2'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.address2 && errors.address2) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addOrderState.error['error']['address2'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('address2');\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t)}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t{current === 10 && (\r\n\t\t\t\t\t\t\t\t\t<div className='addOrderContainer__container-address'>\r\n\r\n\t\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs'>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tlabel='First Name'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.firstName}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tname='firstName'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.firstName && errors.firstName) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addOrderState.error['error']['firstName'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.firstName && errors.firstName) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addOrderState.error['error']['firstName'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('firstName');\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tlabel='Last Name'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.lastName}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tname='lastName'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.lastName && errors.lastName) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addOrderState.error['error']['lastName'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.lastName && errors.lastName) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addOrderState.error['error']['lastName'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('lastName');\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs'>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tlabel='Phone'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.phone}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tname='phone'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.phone && errors.phone) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addOrderState.error['error']['phone'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.phone && errors.phone) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addOrderState.error['error']['phone'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('phone');\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tlabel='Email'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.email}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tname='email'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.email && errors.email) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addOrderState.error['error']['email'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.email && errors.email) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addOrderState.error['error']['email'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('email');\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs'>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tCountry\r\n\t\t\t\t\t\t\t\t\t\t\t\t</h3>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Form.Item\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalidateStatus={(addOrderState.error['error']['country']) ? \"error\" : \"\"}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\thelp={addOrderState.error['error']['country']}\r\n\t\t\t\t\t\t\t\t\t\t\t\t// noStyle={true}\r\n\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Select\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tdefaultValue={'Comoros'}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tnotFoundContent={<Empty description='No Country Found' image={Empty.PRESENTED_IMAGE_SIMPLE} />}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tshowSearch\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{ width: '100%' }}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder='Select a Country'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\toptionFilterProp='children'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={onChangeCountry}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tfilterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{countryListState.done &&\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcountryListState.data.length > 0 &&\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcountryOptions.map((option) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn <Option value={option.value}>{option.name}</Option>;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Select>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Form.Item>\r\n\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tCity\r\n                                    </h3>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Form.Item\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t// noStyle={true}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalidateStatus={(addOrderState.error['error']['city']) ? \"error\" : \"\"}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\thelp={addOrderState.error['error']['city']}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Select\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tdefaultValue={'Dhaka'}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='selectClassName'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tnotFoundContent={<Empty description='First Select a Country' image={Empty.PRESENTED_IMAGE_SIMPLE} />}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tshowSearch\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{ width: '100%' }}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder='Select a city'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\toptionFilterProp='children'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={onChangeCity}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tfilterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{cityListState.done &&\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcityListState.data.length > 0 &&\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcityOptions.map((option) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn <Option value={option.value}>{option.name}</Option>;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Select>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Form.Item>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\t\t\t\tmarginTop: '12px'\r\n\t\t\t\t\t\t\t\t\t\t}}></div>\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs'>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tlabel='Address'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.address1}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tname='address1'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.address1 && errors.address1) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addOrderState.error['error']['address1'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.address1 && errors.address1) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addOrderState.error['error']['address1'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('address1');\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tlabel='More specific address'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.address2}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tname='address2'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.address2 && errors.address2) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addOrderState.error['error']['address2'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.address2 && errors.address2) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addOrderState.error['error']['address2'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('address2');\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t)}\r\n\r\n\r\n\t\t\t\t\t\t\t\t{current === 2 && (\r\n\t\t\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\t\t\tdisplay: 'flex',\r\n\t\t\t\t\t\t\t\t\t\tjustifyContent: 'center',\r\n\t\t\t\t\t\t\t\t\t\tmarginTop: '40px',\r\n\t\t\t\t\t\t\t\t\t\talignItems: 'center',\r\n\t\t\t\t\t\t\t\t\t\tflexDirection: \"column\"\r\n\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t<AddNewOrderSummary\r\n\t\t\t\t\t\t\t\t\t\t\tsetProductList={setProductList}\r\n\t\t\t\t\t\t\t\t\t\t\tproductList={productList} />\r\n\r\n\t\t\t\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\t\t\t\tdisplay:\"flex\",\r\n\t\t\t\t\t\t\t\t\t\t\tflexDirection:'column',\r\n\t\t\t\t\t\t\t\t\t\t\tjustifyContent:\"center\",\r\n\t\t\t\t\t\t\t\t\t\t\talignItems:'center'\r\n\t\t\t\t\t\t\t\t\t\t}}>\r\n\r\n\t\t\t\t\t\t\t\t\t\t<h3 \r\n\t\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\t\tmarginTop:'20px',\r\n\t\t\t\t\t\t\t\t\t\t\tdisplay:'inline-block',\r\n\t\t\t\t\t\t\t\t\t\t\ttextAlign:'center'\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\tclassName='addOrderContainer-sectionTitle'>\r\n\t\t\t\t\t\t\t\t\t\t\t<span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<CarOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\tDelivery Region List ({selectedCityValue})\r\n\t\t\t\t\t\t\t\t\t    </h3>\r\n\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t{regionDeliveryCharge && regionDeliveryCharge.length > 0 ? (\r\n\t\t\t\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Radio.Group\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tdisplay:'flex',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tjustifyContent:'center',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tflexWrap:'wrap'\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={deliveryRegionName}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tdefaultValue={deliveryRegionName}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t name=\"radiogroup\" >\r\n\t\t\t\t\t\t\t\t\t\t\t {regionDeliveryCharge.map(deliveryRegionItem => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t return (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div \r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => handleDeviliveryRegionChange(deliveryRegionItem._id)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='deliveryRegionLabelContainer'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className='deliveryRegionLabelContainer__radio'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Radio \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={deliveryRegionItem._id}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Radio>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div className='deliveryRegionLabelContainer__info'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<h3>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{deliveryRegionItem.name}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</h3>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<h4>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<CarOutlined />\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{deliveryRegionItem.pickUpLocation}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</h4>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<h4>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<ClockCircleOutlined />\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{deliveryRegionItem.time}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</h4>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t )\r\n\t\t\t\t\t\t\t\t\t\t\t })}\r\n  \t\t\t\t\t\t\t\t\t\t</Radio.Group>\r\n\t\t\t\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t\t\t<h4 style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\ttextAlign: 'center',\r\n\t\t\t\t\t\t\t\t\t\t\t\tcolor:'#777',\r\n\t\t\t\t\t\t\t\t\t\t\t\tmarginTop: '50px'\r\n\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t\tDelivery not found\r\n\t\t\t\t\t\t\t\t\t\t\t</h4>\r\n\t\t\t\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t\t</div>\t\t\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\t\t\t\tdisplay: 'flex',\r\n\t\t\t\t\t\t\t\t\t\t\tmarginTop: '40px',\r\n\t\t\t\t\t\t\t\t\t\t\tmarginBottom: '50px'\r\n\r\n\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\t\t\tloading={addOrderState.isLoading}\r\n\t\t\t\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tmarginTop: '10px',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tmarginLeft: '15px'\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\tclassName='btnPrimaryClassNameoutline-blue'\r\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={(e: any) => handleSubmit(e)}\r\n\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\tPlace Order\r\n\t\t\t\t\t\t\t\t\t\t\t<CaretRightOutlined />\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t)}\r\n\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\t\tdisplay: 'flex',\r\n\t\t\t\t\t\t\t\t\tjustifyContent: 'space-between'\r\n\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t{current > 0 && (\r\n\t\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\t\tstyle={{ marginRight: '15px', marginTop: '10px' }}\r\n\t\t\t\t\t\t\t\t\t\t\t// type=\"primary\"\r\n\t\t\t\t\t\t\t\t\t\t\tclassName='btnPrimaryClassNameoutline'\r\n\t\t\t\t\t\t\t\t\t\t\ttype=\"primary\" onClick={() => prev()}\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t<CaretLeftOutlined />\tPrevious\r\n\r\n\t\t\t\t\t\t\t\t\t\t</Button>\r\n\r\n\t\t\t\t\t\t\t\t\t)}\r\n\r\n\t\t\t\t\t\t\t\t\t{current < steps.length - 1 && (\r\n\t\t\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tmarginTop: '10px'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='btnPrimaryClassNameoutline'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"primary\" onClick={() => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (current === 1) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetCurrent(2)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tnext()\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tNext< CaretRightOutlined />\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Button>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t{/* {current === 1 && <Button\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tmarginTop: '10px',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tmarginLeft: '15px'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='btnPrimaryClassNameoutline'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"primary\" onClick={() => setCurrent(2)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tUse different address< CaretRightOutlined />\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t\t\t\t\t} */}\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t\t\t)}\r\n\r\n\t\t\t\t\t\t\t\t\t{/* {current === steps.length - 1 && (\r\n\t\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\t\t\tmarginTop: '10px',\r\n\t\t\t\t\t\t\t\t\t\t\t\tmarginLeft: '15px'\r\n\t\t\t\t\t\t\t\t\t\t\t}}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\tclassName='btnPrimaryClassNameoutline'\r\n\t\t\t\t\t\t\t\t\t\t\ttype=\"primary\" onClick={(e: any) => handleSubmit(e)}\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\tPlace Order\r\n\t\t\t\t\t\t\t\t\t\t\t<CaretRightOutlined />\r\n\r\n\t\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t\t)} */}\r\n\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t{/* <div className='addOrderContainer__container-left'>\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className='addOrderContainer__container-right'>\r\n\t\t\t\t\t\t\t\t\t<AddNewOrderSummary />\r\n\t\t\t\t\t\t\t\t</div> */}\r\n\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t</>\r\n\t\t\t\t)}\r\n\t\t</Formik>\r\n\r\n\r\n\r\n\r\n\t);\r\n};\r\n\r\nexport default AddNewOrder;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Modal, Select, notification, Form, Empty, Button } from 'antd';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { CheckCircleOutlined, InfoCircleOutlined } from '@ant-design/icons';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport { useHandleFetch } from '../../hooks';\r\nimport OrderInvoice from \"./OrderInvoice.jsx\";\r\nimport SelectProducts from \"./OrderProductIds\";\r\nimport SelectedProductItems from \"../productBundle/SelectedProductItems\";\r\nimport TextArea from '../../components/Field/TextArea';\r\n\r\nconst { Option } = Select;\r\n\r\n\r\nconst validationSchema = Yup.object().shape({});\r\n\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Order Updated',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n    });\r\n};\r\n\r\n\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n    notification.error({\r\n        message: message || 'Something Went Wrong',\r\n        description: '',\r\n        icon: <InfoCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst initialValues = {\r\n    summary: '',\r\n    note: ''\r\n}\r\n\r\ninterface Props {\r\n    customer: any;\r\n    setTagEditVisible: any;\r\n    tagEditVisible: any;\r\n    setOrderNotes?:any; \r\n    orderNotes?:any; \r\n}\r\n\r\nconst QuickEdit = ({ customer, setTagEditVisible, tagEditVisible, setOrderNotes, orderNotes }: Props) => {\r\n    const [updateOrderState, handleUpdateOrderFetch] = useHandleFetch({}, 'addOrderNote');\r\n\r\n    const handleSubmit = async (values: any, actions: any) => {\r\n        console.log('orderValues',values); \r\n        \r\n        const addRegionRes = await handleUpdateOrderFetch({\r\n            body: {\r\n                note: values.note,\r\n                summary: values.summary,\r\n                order: customer.id,\r\n            },\r\n        });\r\n\r\n        \r\n\r\n        // @ts-ignore\r\n        if (addRegionRes && addRegionRes.status === 'ok') {\r\n            openSuccessNotification('Order Note added');\r\n            // @ts-ignore\r\n            setOrderNotes([{...addRegionRes},...orderNotes])\r\n            setTagEditVisible(false)\r\n        }\r\n        else {\r\n            openErrorNotification();\r\n        }\r\n\r\n        actions.setSubmitting(false);\r\n\r\n    };\r\n\r\n\r\n    const handleCancel = (e: any) => {\r\n        setTagEditVisible(false);\r\n    };\r\n\r\n    return (\r\n        <Formik\r\n            onSubmit={(values, actions) => handleSubmit(values, actions)}\r\n            validationSchema={validationSchema}\r\n            validateOnBlur={false}\r\n            enableReinitialize={true}\r\n            initialValues={\r\n                { ...initialValues }\r\n            }\r\n        >\r\n            {({\r\n                handleChange,\r\n                values,\r\n                handleSubmit,\r\n                errors,\r\n                isValid,\r\n                isSubmitting,\r\n                touched,\r\n                handleBlur,\r\n                setFieldTouched,\r\n                handleReset,\r\n            }) => (\r\n                    <>\r\n                        <Modal\r\n                            title=\"Add Order Note\"\r\n                            visible={tagEditVisible}\r\n                            onOk={(e: any) => handleSubmit(e)}\r\n                            onCancel={handleCancel}\r\n                            okText='Create'\r\n                            okButtonProps={{\r\n                                loading: isSubmitting,\r\n                                htmlType: \"submit\",\r\n                                // disabled: getisSubmitButtonDisabled(values, isValid)\r\n                            }}\r\n                            bodyStyle={{\r\n                                margin: '0',\r\n                                padding: '10px'\r\n                            }}\r\n                        >\r\n                            <TextArea\r\n                                rows={4}\r\n\t\t\t\t\t\t\t\tlabel='Note'\r\n\t\t\t\t\t\t\t\tvalue={values.note}\r\n\t\t\t\t\t\t\t\tname='note'\r\n\t\t\t\t\t\t\t\tisError={(touched.note && errors.note) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateOrderState.error['error']['note'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.note && errors.note) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateOrderState.error['error']['note'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('note');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n                            <TextArea\r\n                                rows={2}\r\n\t\t\t\t\t\t\t\tlabel='Summary'\r\n\t\t\t\t\t\t\t\tvalue={values.summary}\r\n\t\t\t\t\t\t\t\tname='summary'\r\n\t\t\t\t\t\t\t\tisError={(touched.summary && errors.summary) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateOrderState.error['error']['summary'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.summary && errors.summary) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateOrderState.error['error']['summary'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('summary');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n                        </Modal>\r\n                    </>\r\n                )}\r\n        </Formik>\r\n    );\r\n};\r\n\r\n\r\nexport default QuickEdit;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Modal, Select, notification, Form, Empty, Button } from 'antd';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { CheckCircleOutlined, InfoCircleOutlined } from '@ant-design/icons';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport { useHandleFetch } from '../../hooks';\r\nimport OrderInvoice from \"./OrderInvoice.jsx\";\r\nimport SelectProducts from \"./OrderProductIds\";\r\nimport SelectedProductItems from \"../productBundle/SelectedProductItems\";\r\nimport TextArea from '../../components/Field/TextArea';\r\n\r\nconst { Option } = Select;\r\n\r\n\r\nconst validationSchema = Yup.object().shape({});\r\n\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Order Note Updated',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n    });\r\n};\r\n\r\n\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n    notification.error({\r\n        message: message || 'Something Went Wrong',\r\n        description: '',\r\n        icon: <InfoCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst initialValues = {\r\n    summary: '',\r\n    note: ''\r\n}\r\n\r\ninterface Props {\r\n    customer: any;\r\n    setTagEditVisible: any;\r\n    tagEditVisible: any;\r\n    setOrderNotes?:any; \r\n    orderNotes?:any; \r\n    activeNote?:any; \r\n}\r\n\r\nconst QuickEdit = ({ customer, setTagEditVisible, tagEditVisible, setOrderNotes, orderNotes,activeNote }: Props) => {\r\n    const [updateOrderState, handleUpdateOrderFetch] = useHandleFetch({}, 'updateOrderNote');\r\n\r\n    const handleSubmit = async (values: any, actions: any) => {\r\n        console.log('orderValues',values); \r\n        \r\n        const addRegionRes = await handleUpdateOrderFetch({\r\n            urlOptions: {\r\n                placeHolders: {\r\n                    id: activeNote._id\r\n                }\r\n            }, \r\n            body: {\r\n                note: values.note,\r\n                summary: values.summary,\r\n                order: customer.id,\r\n            },\r\n        });\r\n\r\n        \r\n\r\n        // @ts-ignore\r\n        if (addRegionRes && addRegionRes.status === 'ok') {\r\n            openSuccessNotification();\r\n            const positionInTag = () => {\r\n\t\t\t\treturn orderNotes.map(item => item._id).indexOf(activeNote._id);\r\n\t\t\t}\r\n\r\n\t\t\tconst index = positionInTag();\r\n\r\n\t\t\t// @ts-ignore\r\n\t\t\tconst updatedItem = Object.assign({}, orderNotes[index], { ...addRegionRes, _id: activeNote._id });\r\n\t\t\tconst updateTagList = [...orderNotes.slice(0, index), updatedItem, ...orderNotes.slice(index + 1)];\r\n\t\t\tsetOrderNotes(updateTagList);\r\n            setTagEditVisible(false)\r\n\r\n        }\r\n        else {\r\n            openErrorNotification();\r\n        }\r\n\r\n        actions.setSubmitting(false);\r\n\r\n    };\r\n\r\n\r\n    const handleCancel = (e: any) => {\r\n        setTagEditVisible(false);\r\n    };\r\n\r\n    return (\r\n        <Formik\r\n            onSubmit={(values, actions) => handleSubmit(values, actions)}\r\n            validationSchema={validationSchema}\r\n            validateOnBlur={false}\r\n            enableReinitialize={true}\r\n            initialValues={\r\n                { ...initialValues, ...activeNote }\r\n            }\r\n        >\r\n            {({\r\n                handleChange,\r\n                values,\r\n                handleSubmit,\r\n                errors,\r\n                isValid,\r\n                isSubmitting,\r\n                touched,\r\n                handleBlur,\r\n                setFieldTouched,\r\n                handleReset,\r\n            }) => (\r\n                    <>\r\n                        <Modal\r\n                            title=\"Update Order Note\"\r\n                            visible={tagEditVisible}\r\n                            onOk={(e: any) => handleSubmit(e)}\r\n                            onCancel={handleCancel}\r\n                            okText='Update'\r\n                            okButtonProps={{\r\n                                loading: isSubmitting,\r\n                                htmlType: \"submit\",\r\n                                // disabled: getisSubmitButtonDisabled(values, isValid)\r\n                            }}\r\n                            bodyStyle={{\r\n                                margin: '0',\r\n                                padding: '10px'\r\n                            }}\r\n                        >\r\n                            <TextArea\r\n                                rows={4}\r\n\t\t\t\t\t\t\t\tlabel='Note'\r\n\t\t\t\t\t\t\t\tvalue={values.note}\r\n\t\t\t\t\t\t\t\tname='note'\r\n\t\t\t\t\t\t\t\tisError={(touched.note && errors.note) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateOrderState.error['error']['note'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.note && errors.note) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateOrderState.error['error']['note'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('note');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n                            <TextArea\r\n                                rows={2}\r\n\t\t\t\t\t\t\t\tlabel='Summary'\r\n\t\t\t\t\t\t\t\tvalue={values.summary}\r\n\t\t\t\t\t\t\t\tname='summary'\r\n\t\t\t\t\t\t\t\tisError={(touched.summary && errors.summary) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateOrderState.error['error']['summary'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.summary && errors.summary) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateOrderState.error['error']['summary'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('summary');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n                        </Modal>\r\n                    </>\r\n                )}\r\n        </Formik>\r\n    );\r\n};\r\n\r\n\r\nexport default QuickEdit;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useParams, useHistory } from \"react-router\";\r\n\r\n\r\n// import hooks\r\nimport { useHandleFetch } from \"../../hooks\";\r\n\r\n// import lib\r\nimport {\r\n    FileOutlined,\r\n    InboxOutlined,\r\n    RadiusUpleftOutlined,\r\n    RadiusUprightOutlined,\r\n    RadiusBottomleftOutlined,\r\n    RadiusBottomrightOutlined,\r\n    PlusOutlined,\r\n    DeleteOutlined,\r\n    EditOutlined,\r\n    CheckCircleOutlined,\r\n    InfoCircleOutlined\r\n} from '@ant-design/icons';\r\n\r\nimport { Skeleton, Empty, Popconfirm, Upload, message, Switch, Select, Button, notification, Table, Space, Input as CoolInput, Tooltip, Modal } from 'antd';\r\n\r\n\r\n// import components\r\nimport { DataTableSkeleton } from \"../../components/Placeholders\";\r\nimport OrderEdit from \"./OrderEdit\";\r\nimport OrderNoteEdit from \"./OrderNoteEdit\";\r\nimport { OrderDetail } from '.';\r\n\r\n\r\nconst { Column, ColumnGroup } = Table;\r\nconst { Search } = CoolInput;\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Order Updated',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n    });\r\n};\r\n\r\n\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n    notification.error({\r\n        message: message || 'Something Went Wrong',\r\n        description: '',\r\n        icon: <InfoCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n    });\r\n};\r\n\r\n\r\n\r\ninterface Props {\r\n    productRecord?: any;\r\n}\r\n\r\nconst NewBrandDetail = (props: Props) => {\r\n    const [tagDetailState, handleTagDetailFetch] = useHandleFetch({}, 'orderDetail');\r\n    const [orderDetailNotesState, handleOrderDetailNotesFetch] = useHandleFetch({}, 'getOrderNote');\r\n    const [tagProductsState, handleTagProductsFetch] = useHandleFetch({}, 'tagProducts');\r\n    const [deleteOrderNoteState, handleDeleteOrderNoteFetch] = useHandleFetch({}, 'deleteOrderNote');\r\n    const [tagEditVisible, setTagEditVisible] = useState(false);\r\n    const [activeOrderNote,setActiveOrderNote] = useState({}); \r\n    const [isOrderNoteEdit,setIsOrderNoteEdit] = useState(false)\r\n\r\n\r\n    console.log('orderDetailNotesState',orderDetailNotesState); \r\n\r\n    const params = useParams();\r\n    const history = useHistory();\r\n    const tagId = params['id'];\r\n    const [orderNotes,setOrderNotes] = useState([]); \r\n\r\n    useEffect(() => {\r\n\r\n        const getBrandDetail = async () => {\r\n            await handleTagDetailFetch({\r\n                urlOptions: {\r\n                    placeHolders: {\r\n                        id: tagId\r\n                    }\r\n                }\r\n            }); \r\n\r\n           const orderNotes =  await handleOrderDetailNotesFetch({\r\n                urlOptions: {\r\n                    placeHolders: {\r\n                        id: tagId\r\n                    }\r\n                }\r\n            }); \r\n\r\n            // @ts-ignore\r\n            if(orderNotes) {\r\n                // @ts-ignore\r\n                setOrderNotes(orderNotes)\r\n            }\r\n            \r\n        };\r\n        getBrandDetail()  ;\r\n    }, [tagId]);\r\n\r\n    \r\n\r\n\r\n    console.log('orderDetailState', tagDetailState)\r\n\r\n    useEffect(() => {\r\n        const getTagProducts = async () => {\r\n            await handleTagProductsFetch({\r\n                urlOptions: {\r\n                    placeHolders: {\r\n                        id: tagId\r\n                    }\r\n                }\r\n            })\r\n        };\r\n\r\n        getTagProducts();\r\n\r\n    }, [tagId]);\r\n\r\n\r\n\r\n\r\n    console.log('orderDetailState', tagDetailState);\r\n\r\n    console.log('brandParams', params);\r\n\r\n    const handleDeleteOrderNote = async (id) => {\r\n       const res =  await handleDeleteOrderNoteFetch({\r\n            urlOptions: {\r\n                placeHolders: {\r\n                    id: id\r\n                }\r\n            }\r\n        }); \r\n\r\n        // @ts-ignore\r\n        if (res && res.status === 'ok') {\r\n            const newOrderNoteList = orderNotes && orderNotes.filter(item => item._id !== id);\r\n\t\t\tsetOrderNotes(newOrderNoteList);\r\n            openSuccessNotification('Order note deleted!');\r\n           \r\n        }\r\n    } \r\n\r\n    return (\r\n        <div className='brandDetailContainer'>\r\n            <OrderNoteEdit\r\n             setOrderNotes={setOrderNotes}\r\n             orderNotes={orderNotes}\r\n             tagEditVisible={isOrderNoteEdit}\r\n             setTagEditVisible={setIsOrderNoteEdit}\r\n             customer={tagDetailState.data}\r\n             activeNote={activeOrderNote}\r\n            />\r\n            <div className='brandDetailContainer__heading'>\r\n                <h3>\r\n                    Order Detail\r\n                </h3>\r\n\r\n                {tagDetailState.done && tagDetailState.data && (Object.keys(tagDetailState.data).length > 0) && (\r\n                    <>\r\n                    <div>\r\n                    <OrderEdit\r\n                            setOrderNotes={setOrderNotes}\r\n                            orderNotes={orderNotes}\r\n                            tagEditVisible={tagEditVisible}\r\n                            setTagEditVisible={setTagEditVisible}\r\n                            customer={tagDetailState.data}\r\n                        />\r\n                        <Button\r\n                            onClick={() => setTagEditVisible(true)}\r\n                            type='link'\r\n                            icon={<PlusOutlined />}\r\n                        >\r\n                            Add note\r\n                      </Button>\r\n                    </div>\r\n                    </>\r\n                )}\r\n\r\n            </div>\r\n            <Skeleton\r\n                paragraph={{ rows: 2 }}\r\n                loading={tagDetailState.isLoading}>\r\n                {tagDetailState.done && tagDetailState.data && !(Object.keys(tagDetailState.data).length > 0) && (\r\n                    <Empty description='No Order found' image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n                )}\r\n\r\n                {tagDetailState.done && tagDetailState.data && (Object.keys(tagDetailState.data).length > 0) && (\r\n                    <>\r\n                    <div style={{\r\n                        display:'flex',\r\n\r\n                    }}>\r\n                <div\r\n                style={{\r\n                    flex: 1,\r\n                    marginRight: '20px'\r\n                }}\r\n                 className='brandDetailContainer__header'>\r\n\r\n                        <div className='brandDetailContainer__header-info'>\r\n                            <h2>\r\n                                {tagDetailState.data['name']}\r\n                            </h2>\r\n                            <h3>\r\n                                {tagDetailState.data['description']}\r\n                            </h3>\r\n                            {tagDetailState.data['url'] && (\r\n                                <h3>\r\n                                    URL:\r\n                                    <span>\r\n                                        {tagDetailState.data['url']}\r\n                                    </span>\r\n\r\n                                </h3>\r\n                            )}\r\n\r\n                            {tagDetailState['data']['country'] && (\r\n                                <h3>\r\n                                    COUNTRY:\r\n                                    <span>\r\n                                        {tagDetailState['data']['country']}\r\n                                    </span>\r\n                                </h3>\r\n                            )}\r\n\r\n\r\n                            {tagDetailState['data']['city'] && (\r\n                                <h3>\r\n                                    CITY:\r\n                                    <span>\r\n                                        {tagDetailState['data']['city']}\r\n                                    </span>\r\n                                </h3>\r\n                            )}\r\n                        \r\n\r\n\r\n                            {tagDetailState['data']['address1'] && (\r\n                                <h3>\r\n                                    ADDRESS:\r\n                                    <span>\r\n                                        {tagDetailState['data']['address1']}\r\n                                    </span>\r\n                                </h3>\r\n                            )}\r\n                         \r\n\r\n                            {tagDetailState['data']['phone'] && (\r\n                                <h3>\r\n                                    PHONE:\r\n                                    <span>\r\n                                        {tagDetailState['data']['phone']}\r\n                                    </span>\r\n                                </h3>\r\n                            )}\r\n\r\n                             {tagDetailState['data']['email'] && (\r\n                                <h3>\r\n                                    EMAIL:\r\n                                    <span>\r\n                                        {tagDetailState['data']['email']}\r\n                                    </span>\r\n                                </h3>\r\n                            )}\r\n\r\n\r\n                            {tagDetailState['data']['paymentMethod'] && (\r\n                                <h3>\r\n                                    PAYMENT METHOD:\r\n                                    <span>\r\n                                        {tagDetailState['data']['paymentMethod']}\r\n                                    </span>\r\n                                </h3>\r\n                            )}\r\n\r\n\r\n                            {tagDetailState['data']['paymentStatus'] && (\r\n                                <h3>\r\n                                    PAYMENT STATUS:\r\n                                    <span>\r\n                                        {tagDetailState['data']['paymentStatus']}\r\n                                    </span>\r\n                                </h3>\r\n                            )}\r\n\r\n                            \r\n                        {tagDetailState['data']['status'] && (\r\n                                <h3>\r\n                                    ORDER STATUS:\r\n                                    <span>\r\n                                        {tagDetailState['data']['status']}\r\n                                    </span>\r\n                                </h3>\r\n                            )}\r\n\r\n{/* \r\n                            {tagDetailState['data']['deliveryCharge'] && (\r\n                                <h3>\r\n                                    DELIVERY CHARGE:\r\n                                    <span>\r\n                                        {tagDetailState['data']['deliveryCharge']}\r\n                                    </span>\r\n                                </h3>\r\n                            )} */}\r\n\r\n\r\n\r\n                        {tagDetailState['data']['deliveryName'] && (\r\n                                <h3>\r\n                                    DELIVERY LOCATION:\r\n                                    <span>\r\n                                        {`${tagDetailState['data']['deliveryName']}, ${tagDetailState['data']['deliveryPickUpLocation']}, ${tagDetailState['data']['deliveryCountryName']}`}\r\n                                    </span>\r\n                                </h3>\r\n                            )}\r\n\r\n                      \r\n                        </div>\r\n                    </div>\r\n\r\n                    <div \r\n                    style={{\r\n                        maxWidth: '35%',\r\n                        minWidth: '35%'\r\n                    }}\r\n                    className='brandDetailContainer__header'>\r\n\r\n            <div \r\n            style={{\r\n                width: '100%'\r\n            }}\r\n            className='brandDetailContainer__header-info'>\r\n                <h2>\r\n                    Notes\r\n                </h2>\r\n\r\n            <div style={{\r\n                width: '100%'\r\n            }}>\r\n                {orderDetailNotesState.done\r\n                 && orderNotes\r\n                  && orderNotes.length > 0 && orderNotes.map((noteItem: any) => {\r\n                      return <div className='OrderNoteItem'>\r\n                          \t\t<div className='OrderNoteItem__action'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* <span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<EditOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</span> */}\r\n                                                                        <span\r\n                                                                        className='OrderNoteItem__action-edit'\r\n                                                                          onClick={() => {\r\n                                                                        setActiveOrderNote(noteItem); \r\n                                                                        setIsOrderNoteEdit(true); \r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<EditOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n                                                                        <span  \r\n                                                                         className='OrderNoteItem__action-delete'\r\n                                                                        onClick={() => handleDeleteOrderNote(noteItem._id)}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<DeleteOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n                          <h4>\r\n                              <span>\r\n                                  NOTE: \r\n                              </span>\r\n                              {` ${noteItem.note}`}\r\n                          </h4>\r\n                      \r\n                              {noteItem.summary && (\r\n                                  <>\r\n                                      <h4>\r\n                                     <span>\r\n                                          SUMMARY : \r\n                                    </span>\r\n\r\n\r\n                                    {` ${noteItem.summary}`}\r\n                                         </h4>\r\n                                  </>\r\n                              )}\r\n                         \r\n                      </div>; \r\n                  }) }\r\n\r\n\r\n\r\n            {orderDetailNotesState.done\r\n                && orderNotes\r\n                && !(Object.keys(orderNotes).length > 0) && (\r\n                <>\r\n                    <div style={{\r\n                                    width: '100%',\r\n                                    margin: '100px 0',\r\n                                    display: 'flex',\r\n                                    justifyContent:'center'\r\n                                }}>\r\n                            <Empty description='No Notes found' image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n                    </div>\r\n                </>\r\n            )} \r\n        </div>\r\n        </div>\r\n        </div>\r\n\r\n\r\n        <div></div>\r\n                    </div>\r\n                    </>\r\n          \r\n                )}\r\n\r\n            </Skeleton>\r\n\r\n\r\n                            {tagDetailState.done  && (\r\n                        <>\r\n                        \r\n            <div className='brandDetailContainer__heading'>\r\n                    <h3>\r\n                        Products\r\n                    </h3>\r\n                </div>\r\n\r\n                        </>\r\n                    )}\r\n\r\n          \r\n           \r\n            <div className='brandDetailContainer__body'>\r\n                {tagDetailState.done \r\n                    && tagDetailState.data \r\n                    && (Object.keys(tagDetailState.data).length > 0) \r\n                    && tagDetailState.data['products'] && !(tagDetailState.data['products'].length > 0) && (\r\n                    <div style={{\r\n                        marginTop: '100px'\r\n                    }}>\r\n                        <Empty description='No Products exists for this order' image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n                    </div>\r\n                )}\r\n\r\n\r\n                \r\n                {tagDetailState.done \r\n                    && tagDetailState.data \r\n                    && (Object.keys(tagDetailState.data).length > 0) \r\n                    && tagDetailState.data['products'] \r\n                    && tagDetailState.data['products'].length > 0 && (\r\n                <>\r\n                        <Table\r\n                            style={{\r\n                                paddingTop: '10px',\r\n                                borderRadius: '5px !important',\r\n                                overflow: 'hidden',\r\n                                boxShadow: '0 0.125rem 0.625rem rgba(227, 231, 250, 0.3), 0 0.0625rem 0.125rem rgba(206, 220, 233, 0.4)'\r\n                            }}\r\n                            size='small'\r\n                            dataSource={tagDetailState.data['products']}\r\n                            tableLayout={'auto'}\r\n                            onHeaderRow={column => {\r\n                                return {\r\n                                    style: {\r\n                                        color: 'red !important'\r\n                                    }\r\n\r\n                                };\r\n                            }}\r\n                        >\r\n                            <Column\r\n                                title=\"\"\r\n                                dataIndex=\"cover\"\r\n                                key=\"id\"\r\n                                width={'80px'}\r\n\r\n                                className='classnameofthecolumn'\r\n\r\n                                render={(cover, record: any) => (\r\n                                    <>\r\n                                        <img\r\n                                            onClick={() => {\r\n                                                history.push(`/admin/product/${record.id}`)\r\n                                            }}\r\n                                            src={cover} alt='cover img' style={{\r\n                                                height: '40px',\r\n                                                width: '40px',\r\n                                                objectFit: \"contain\",\r\n                                                borderRadius: '3px',\r\n                                                cursor: 'pointer'\r\n                                            }} />\r\n                                    </>\r\n                                )}\r\n                            />\r\n\r\n                            <Column\r\n                                title=\"Name\"\r\n                                dataIndex=\"name\"\r\n                                key=\"id\"\r\n                                className='classnameofthecolumn'\r\n                                render={(text, record: any) => (\r\n                                    <>\r\n                                        <h4\r\n                                            onClick={() => {\r\n                                                history.push(`/admin/product/${record.id}`)\r\n                                            }}\r\n                                            style={{\r\n                                                fontWeight: 400,\r\n                                                color: '#555',\r\n                                                cursor: 'pointer'\r\n\r\n                                            }}>\r\n                                            {text}\r\n                                        </h4>\r\n\r\n\r\n                                    </>\r\n                                )}\r\n\r\n                            />\r\n\r\n\r\n                            <Column\r\n                                title=\"Price\"\r\n                                dataIndex=\"price\"\r\n                                key=\"id\"\r\n                                className='classnameofthecolumn'\r\n\r\n                            />\r\n\r\n\r\n\r\n\r\n\r\n                            \r\n                            <Column\r\n                                title=\"Available\"\r\n                                dataIndex=\"available\"\r\n                                key=\"id\"\r\n                                className='classnameofthecolumn'\r\n\r\n                            />\r\n\r\n\r\n                            <Column\r\n                                title=\"Minimum\"\r\n                                dataIndex=\"minimum\"\r\n                                key=\"id\"\r\n                                className='classnameofthecolumn'\r\n\r\n                            />\r\n\r\n                        </Table>\r\n\r\n                </>\r\n            )}\r\n\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NewBrandDetail\r\n","import React,{useState, useEffect} from 'react'\r\n\r\n\r\n// import hooks\r\nimport { useHandleFetch } from \"../../../hooks\";\r\n\r\n// import components\r\nimport { DataTableSkeleton } from \"../../../components/Placeholders\";\r\n\r\n// \r\n\r\n\r\n// import lib\r\nimport {\r\n    ResponsiveContainer,\r\n    AreaChart,\r\n    CartesianGrid,\r\n    XAxis,\r\n    YAxis,\r\n    Tooltip,\r\n    Legend,\r\n    Area,\r\n    Line\r\n} from \"recharts\";\r\n\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {\r\n    FileOutlined,\r\n    InboxOutlined,\r\n    RadiusUpleftOutlined,\r\n    RadiusUprightOutlined,\r\n    RadiusBottomleftOutlined,\r\n    RadiusBottomrightOutlined,\r\n    PlusOutlined,\r\n    DeleteOutlined,\r\n    EditOutlined,\r\n    CheckCircleOutlined,\r\n    CalendarOutlined\r\n} from '@ant-design/icons';\r\n\r\nimport { Skeleton, Empty, Popconfirm, Upload, message, Switch, Select, Button, notification, Table, Space, Input as CoolInput, Modal, Spin } from 'antd';\r\n\r\n\r\nconst { Option } = Select;\r\n\r\nconst { Column, ColumnGroup } = Table;\r\n\r\n\r\n\r\ninterface Props {\r\n    \r\n}\r\n\r\nconst localOptions = [\r\n    {\r\n        value: 'category',\r\n        name: 'Category'\r\n    },\r\n     {\r\n        value: 'product',\r\n        name: 'Product'\r\n    }\r\n\r\n]\r\n\r\n\r\n\r\nconst MONTHS = [\r\n    \"Jan\",\r\n    \"Feb\",\r\n    \"Mar\",\r\n    \"Apr\",\r\n    \"May\",\r\n    \"Jun\",\r\n    \"Jul\",\r\n    \"Aug\",\r\n    \"Sep\",\r\n    \"Oct\",\r\n    \"Nov\",\r\n    \"Dec\"\r\n];\r\n\r\nconst date = new Date();\r\nconst thisMonth = MONTHS[date.getMonth()]\r\n\r\n\r\nexport const getMonthNameByOrder = (order: number): string | undefined =>\r\n    `${order}${thisMonth}`;\r\n\r\n\r\nexport const TooltipContainerStyles = {\r\n    border: 0,\r\n    borderRadius: \"8px\",\r\n    fontSize: 14,\r\n    boxShadow: \"2px 2px 5px 3px rgba(0,0,0,0.15)\"\r\n};\r\n\r\n\r\n\r\n\r\n\r\nconst PageVisits = (props: Props) => {\r\n    const history = useHistory(); \r\n  \r\n    const [orderAnalyticsVisitsState, handleOrderAnalyticsVisitsStateFetch] = useHandleFetch({}, 'getAnalyticsOrders');\r\n    const [orderData, setorderData] = useState([]);\r\n\r\n\r\n    useEffect(()=>{\r\n        const getAnalyticsOrders = async () => {\r\n\r\n            const ordersDataRes =  await handleOrderAnalyticsVisitsStateFetch({\r\n                urlOptions: {\r\n                    params: {\r\n                        metricType: 'dayOfMonth',\r\n                    }\r\n                }\r\n            }); \r\n\r\n           // @ts-ignore\r\n           if(ordersDataRes){\r\n            // @ts-ignore\r\n            setorderData(ordersDataRes);\r\n           }\r\n\r\n           };\r\n           getAnalyticsOrders(); \r\n\r\n    },[]); \r\n\r\n\r\n    console.log('orderAnalyticsVisitsState',orderAnalyticsVisitsState);\r\n\r\n\r\n\r\n\r\n    return (\r\n\r\n        <div className='overviewContainer__body-apiVisits'>\r\n        <div className='overviewContainer__body-apiVisits-header'>\r\n            <div className='overviewContainer__body-apiVisits-header-info'>\r\n                <h2>\r\n                    This Month\r\n                </h2>\r\n                <h3>\r\n                      Order report by days of month \r\n                </h3>\r\n            </div>\r\n        </div>\r\n\r\n        <div className='overviewContainer__body-body'>    \r\n        {orderAnalyticsVisitsState.isLoading && (\r\n            <>\r\n            <div style={{\r\n                display:'flex',\r\n                justifyContent:'center',\r\n                alignItems:\"center\",\r\n                margin:\"100px 0\"\r\n            }}>\r\n            <Spin\r\n            size='large'\r\n             />\r\n                </div>\r\n\r\n            </>\r\n        )}\r\n\r\n        \r\n             {orderAnalyticsVisitsState.done && orderData && orderData.length > 0 && (\r\n                    <ResponsiveContainer width=\"100%\" height={300}>\r\n                    <AreaChart data={orderData} fontSize={12}>\r\n                        <defs>\r\n                            <linearGradient id=\"rainGradient\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\r\n                                <stop offset=\"0%\" stopColor=\"#1890ff\" />\r\n                                <stop offset=\"100%\" stopColor=\"#3066BE22\" />\r\n                            </linearGradient>\r\n                        </defs>\r\n                        <CartesianGrid\r\n                            vertical={false}\r\n                            strokeDasharray=\"3 3\"\r\n                            stroke=\"#d6d9da\"\r\n                        />\r\n                        <XAxis \r\n                         dataKey={'dayOfMonth'} \r\n                         tickFormatter={getMonthNameByOrder}\r\n                         />\r\n                        <YAxis\r\n                            // unit=\"ml\"\r\n                            orientation=\"left\"\r\n                            width={20}\r\n                            axisLine={false}\r\n                            tickLine={false}\r\n                        />\r\n                        <Tooltip\r\n                            cursor={false}\r\n                            contentStyle={TooltipContainerStyles}\r\n                            formatter={(value, name) => [`${value}`, `${name}`]}\r\n                        />\r\n                        <Area\r\n                            dataKey=\"count\"\r\n                            name=\"Count\"\r\n                            type=\"basis\"\r\n                            fill=\"url(#rainGradient)\"\r\n                        />\r\n                    </AreaChart>\r\n                </ResponsiveContainer>\r\n               )}\r\n\r\n\r\n                {orderAnalyticsVisitsState.done && !(orderAnalyticsVisitsState.data.length > 0) && (\r\n                    <div style={{\r\n                        marginTop: '00px'\r\n                    }}>\r\n                        <Empty description={`No Visits for this week`} image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n                    </div>\r\n                )}\r\n\r\n            \r\n\r\n        </div>\r\n        <div className=\"overviewContainer__body-footer\">\r\n            <h3>\r\n                <span>\r\n                    <CalendarOutlined />\r\n                </span>\r\n\r\n                            In the last month\r\n                     </h3>\r\n        </div>\r\n\r\n    </div>\r\n\r\n    )\r\n}\r\n\r\nexport default PageVisits\r\n","import React,{useState, useEffect} from 'react'\r\n\r\n\r\n// import hooks\r\nimport { useHandleFetch } from \"../../../hooks\";\r\n\r\n// import components\r\nimport { DataTableSkeleton } from \"../../../components/Placeholders\";\r\n\r\n// \r\n\r\n\r\n// import lib\r\nimport {\r\n    ResponsiveContainer,\r\n    AreaChart,\r\n    CartesianGrid,\r\n    XAxis,\r\n    YAxis,\r\n    Tooltip,\r\n    Legend,\r\n    Area,\r\n    Line\r\n} from \"recharts\";\r\n\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {\r\n    FileOutlined,\r\n    InboxOutlined,\r\n    RadiusUpleftOutlined,\r\n    RadiusUprightOutlined,\r\n    RadiusBottomleftOutlined,\r\n    RadiusBottomrightOutlined,\r\n    PlusOutlined,\r\n    DeleteOutlined,\r\n    EditOutlined,\r\n    CheckCircleOutlined,\r\n    CalendarOutlined\r\n} from '@ant-design/icons';\r\n\r\nimport { Skeleton, Empty, Popconfirm, Upload, message, Switch, Select, Button, notification, Table, Space, Input as CoolInput, Modal, Spin } from 'antd';\r\n\r\n\r\nconst { Option } = Select;\r\n\r\nconst { Column, ColumnGroup } = Table;\r\n\r\n\r\n\r\ninterface Props {\r\n    \r\n}\r\n\r\nconst localOptions = [\r\n    {\r\n        value: 'category',\r\n        name: 'Category'\r\n    },\r\n     {\r\n        value: 'product',\r\n        name: 'Product'\r\n    }\r\n\r\n]\r\n\r\n\r\n\r\nconst WEEEK = [\r\n    \"Sat\",\r\n    \"Sun\",\r\n    \"Mon\",\r\n    \"Tues\",\r\n    \"Wed\",\r\n    \"Thur\",\r\n    \"Fri\"\r\n];\r\n\r\n\r\nexport const getWeekNameByOrder = (order: number): string | undefined =>\r\n    WEEEK[order - 1];\r\n\r\n\r\n\r\n\r\n\r\nexport const TooltipContainerStyles = {\r\n    border: 0,\r\n    borderRadius: \"8px\",\r\n    fontSize: 14,\r\n    boxShadow: \"2px 2px 5px 3px rgba(0,0,0,0.15)\"\r\n};\r\n\r\n\r\n\r\n\r\n\r\nconst PageVisits = (props: Props) => {\r\n    const history = useHistory(); \r\n  \r\n    const [orderAnalyticsVisitsState, handleOrderAnalyticsVisitsStateFetch] = useHandleFetch({}, 'getAnalyticsOrders');\r\n    const [orderData, setorderData] = useState([]);\r\n\r\n\r\n    useEffect(()=>{\r\n        const getAnalyticsOrders = async () => {\r\n\r\n            const ordersDataRes =  await handleOrderAnalyticsVisitsStateFetch({\r\n                urlOptions: {\r\n                    params: {\r\n                        metricType: 'dayOfWeek',\r\n                    }\r\n                }\r\n            }); \r\n\r\n           // @ts-ignore\r\n           if(ordersDataRes){\r\n            // @ts-ignore\r\n            setorderData(ordersDataRes);\r\n           }\r\n\r\n           };\r\n           getAnalyticsOrders(); \r\n\r\n    },[]); \r\n\r\n\r\n    console.log('orderAnalyticsVisitsState',orderAnalyticsVisitsState);\r\n\r\n\r\n\r\n\r\n    return (\r\n\r\n        <div className='overviewContainer__body-apiVisits'>\r\n        <div className='overviewContainer__body-apiVisits-header'>\r\n            <div className='overviewContainer__body-apiVisits-header-info'>\r\n                <h2>\r\n                    This Week\r\n                </h2>\r\n                <h3>\r\n                      Order report by days of week \r\n                </h3>\r\n            </div>\r\n        </div>\r\n\r\n        <div className='overviewContainer__body-body'>    \r\n        {orderAnalyticsVisitsState.isLoading && (\r\n            <>\r\n            <div style={{\r\n                display:'flex',\r\n                justifyContent:'center',\r\n                alignItems:\"center\",\r\n                margin:\"100px 0\"\r\n            }}>\r\n            <Spin\r\n            size='large'\r\n             />\r\n                </div>\r\n\r\n            </>\r\n        )}\r\n\r\n        \r\n{orderAnalyticsVisitsState.done && orderData && orderData.length > 0 && (\r\n                    <ResponsiveContainer width=\"100%\" height={300}>\r\n                    <AreaChart data={orderData} fontSize={12}>\r\n                        <defs>\r\n                            <linearGradient id=\"rainGradient\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\r\n                                <stop offset=\"0%\" stopColor=\"#1890ff\" />\r\n                                <stop offset=\"100%\" stopColor=\"#3066BE22\" />\r\n                            </linearGradient>\r\n                        </defs>\r\n                        <CartesianGrid\r\n                            vertical={false}\r\n                            strokeDasharray=\"3 3\"\r\n                            stroke=\"#d6d9da\"\r\n                        />\r\n                        <XAxis \r\n                         dataKey={'dayOfWeek'} \r\n                         tickFormatter={getWeekNameByOrder}\r\n                         />\r\n                        <YAxis\r\n                            // unit=\"ml\"\r\n                            orientation=\"left\"\r\n                            width={20}\r\n                            axisLine={false}\r\n                            tickLine={false}\r\n                        />\r\n                        <Tooltip\r\n                            cursor={false}\r\n                            contentStyle={TooltipContainerStyles}\r\n                            formatter={(value, name) => [`${value}`, `${name}`]}\r\n                        />\r\n                        <Area\r\n                            dataKey=\"count\"\r\n                            name=\"Count\"\r\n                            type=\"basis\"\r\n                            fill=\"url(#rainGradient)\"\r\n                        />\r\n                    </AreaChart>\r\n                </ResponsiveContainer>\r\n               )}\r\n\r\n\r\n                {orderAnalyticsVisitsState.done && !(orderAnalyticsVisitsState.data.length > 0) && (\r\n                    <div style={{\r\n                        marginTop: '00px'\r\n                    }}>\r\n                        <Empty description={`No Visits for this week`} image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n                    </div>\r\n                )}\r\n\r\n            \r\n\r\n        </div>\r\n        <div className=\"overviewContainer__body-footer\">\r\n            <h3>\r\n                <span>\r\n                    <CalendarOutlined />\r\n                </span>\r\n\r\n                            In the last month\r\n                     </h3>\r\n        </div>\r\n\r\n    </div>\r\n\r\n    )\r\n}\r\n\r\nexport default PageVisits\r\n","import React,{useState, useEffect} from 'react'\r\n\r\n\r\n// import hooks\r\nimport { useHandleFetch } from \"../../../hooks\";\r\n\r\n// import components\r\nimport { DataTableSkeleton } from \"../../../components/Placeholders\";\r\n\r\n// \r\n\r\n\r\n// import lib\r\nimport {\r\n    ResponsiveContainer,\r\n    AreaChart,\r\n    CartesianGrid,\r\n    XAxis,\r\n    YAxis,\r\n    Tooltip,\r\n    Legend,\r\n    Area,\r\n    Line\r\n} from \"recharts\";\r\n\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {\r\n    FileOutlined,\r\n    InboxOutlined,\r\n    RadiusUpleftOutlined,\r\n    RadiusUprightOutlined,\r\n    RadiusBottomleftOutlined,\r\n    RadiusBottomrightOutlined,\r\n    PlusOutlined,\r\n    DeleteOutlined,\r\n    EditOutlined,\r\n    CheckCircleOutlined,\r\n    CalendarOutlined\r\n} from '@ant-design/icons';\r\n\r\nimport { Skeleton, Empty, Popconfirm, Upload, message, Switch, Select, Button, notification, Table, Space, Input as CoolInput, Modal, Spin } from 'antd';\r\n\r\n\r\nconst { Option } = Select;\r\n\r\nconst { Column, ColumnGroup } = Table;\r\n\r\n\r\n\r\ninterface Props {\r\n    \r\n}\r\n\r\nconst localOptions = [\r\n    {\r\n        value: 'category',\r\n        name: 'Category'\r\n    },\r\n     {\r\n        value: 'product',\r\n        name: 'Product'\r\n    }\r\n\r\n]\r\n\r\n\r\n\r\nconst WEEEK = [\r\n    \"Sat\",\r\n    \"Sun\",\r\n    \"Mon\",\r\n    \"Tues\",\r\n    \"Wed\",\r\n    \"Thur\",\r\n    \"Fri\"\r\n];\r\n\r\n\r\nexport const getWeekNameByOrder = (order: number): string | undefined =>\r\n    WEEEK[order - 1];\r\n\r\nexport const TooltipContainerStyles = {\r\n    border: 0,\r\n    borderRadius: \"8px\",\r\n    fontSize: 14,\r\n    boxShadow: \"2px 2px 5px 3px rgba(0,0,0,0.15)\"\r\n};\r\n\r\n\r\nconst PageVisits = (props: Props) => {\r\n    const history = useHistory(); \r\n  \r\n    const [orderAnalyticsVisitsState, handleOrderAnalyticsVisitsStateFetch] = useHandleFetch({}, 'getAnalyticsOrders');\r\n    const [orderData, setorderData] = useState([]);\r\n\r\n\r\n    useEffect(()=>{\r\n        const getAnalyticsOrders = async () => {\r\n\r\n            const ordersDataRes =  await handleOrderAnalyticsVisitsStateFetch({\r\n                urlOptions: {\r\n                    params: {\r\n                        metricType: 'date',\r\n                    }\r\n                }\r\n            }); \r\n\r\n           // @ts-ignore\r\n           if(ordersDataRes){\r\n            // @ts-ignore\r\n            setorderData(ordersDataRes);\r\n           }\r\n\r\n           };\r\n           getAnalyticsOrders(); \r\n\r\n    },[]); \r\n\r\n\r\n    console.log('orderAnalyticsVisitsState',orderAnalyticsVisitsState);\r\n\r\n\r\n    return (\r\n\r\n        <div className='overviewContainer__body-apiVisits'>\r\n        <div className='overviewContainer__body-apiVisits-header'>\r\n            <div className='overviewContainer__body-apiVisits-header-info'>\r\n                <h2>\r\n                   BY DATE\r\n                </h2>\r\n                <h3>\r\n                      Order report by date\r\n                </h3>\r\n            </div>\r\n        </div>\r\n\r\n        <div className='overviewContainer__body-body'>    \r\n        {orderAnalyticsVisitsState.isLoading && (\r\n            <>\r\n            <div style={{\r\n                display:'flex',\r\n                justifyContent:'center',\r\n                alignItems:\"center\",\r\n                margin:\"100px 0\"\r\n            }}>\r\n            <Spin\r\n            size='large'\r\n             />\r\n                </div>\r\n\r\n            </>\r\n        )}\r\n\r\n        \r\n             {orderAnalyticsVisitsState.done && orderData && orderData.length > 0 && (\r\n                    <ResponsiveContainer width=\"100%\" height={300}>\r\n                    <AreaChart data={orderData} fontSize={12}>\r\n                        <defs>\r\n                            <linearGradient id=\"rainGradient\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\r\n                                <stop offset=\"0%\" stopColor=\"#1890ff\" />\r\n                                <stop offset=\"100%\" stopColor=\"#3066BE22\" />\r\n                            </linearGradient>\r\n                        </defs>\r\n                        <CartesianGrid\r\n                            vertical={false}\r\n                            strokeDasharray=\"3 3\"\r\n                            stroke=\"#d6d9da\"\r\n                        />\r\n                        <XAxis \r\n                         dataKey={'date'} \r\n                        //  tickFormatter={getWeekNameByOrder}\r\n                         />\r\n                        <YAxis\r\n                            // unit=\"ml\"\r\n                            orientation=\"left\"\r\n                            width={20}\r\n                            axisLine={false}\r\n                            tickLine={false}\r\n                        />\r\n                        <Tooltip\r\n                            cursor={false}\r\n                            contentStyle={TooltipContainerStyles}\r\n                            formatter={(value, name) => [`${value}`, `${name}`]}\r\n                        />\r\n                        <Area\r\n                            dataKey=\"count\"\r\n                            name=\"Count\"\r\n                            type=\"basis\"\r\n                            fill=\"url(#rainGradient)\"\r\n                        />\r\n                    </AreaChart>\r\n                </ResponsiveContainer>\r\n               )}\r\n\r\n\r\n                {orderAnalyticsVisitsState.done && !(orderAnalyticsVisitsState.data.length > 0) && (\r\n                    <div style={{\r\n                        marginTop: '00px'\r\n                    }}>\r\n                        <Empty description={`No Visits for date`} image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n                    </div>\r\n                )}\r\n\r\n            \r\n\r\n        </div>\r\n        <div className=\"overviewContainer__body-footer\">\r\n            <h3>\r\n                <span>\r\n                    <CalendarOutlined />\r\n                </span>\r\n\r\n                            In the last month\r\n                     </h3>\r\n        </div>\r\n\r\n    </div>\r\n\r\n    )\r\n}\r\n\r\nexport default PageVisits\r\n","import React,{useState, useEffect} from 'react'\r\n\r\n\r\n// import hooks\r\nimport { useHandleFetch } from \"../../../hooks\";\r\n\r\n// import components\r\nimport { DataTableSkeleton } from \"../../../components/Placeholders\";\r\n\r\n// \r\n\r\n\r\n// import lib\r\nimport {\r\n    ResponsiveContainer,\r\n    AreaChart,\r\n    CartesianGrid,\r\n    XAxis,\r\n    YAxis,\r\n    Tooltip,\r\n    Legend,\r\n    Area,\r\n    Line\r\n} from \"recharts\";\r\n\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {\r\n    FileOutlined,\r\n    InboxOutlined,\r\n    RadiusUpleftOutlined,\r\n    RadiusUprightOutlined,\r\n    RadiusBottomleftOutlined,\r\n    RadiusBottomrightOutlined,\r\n    PlusOutlined,\r\n    DeleteOutlined,\r\n    EditOutlined,\r\n    CheckCircleOutlined,\r\n    CalendarOutlined\r\n} from '@ant-design/icons';\r\n\r\nimport { Skeleton, Empty, Popconfirm, Upload, message, Switch, Select, Button, notification, Table, Space, Input as CoolInput, Modal, Spin } from 'antd';\r\n\r\n\r\nconst { Option } = Select;\r\n\r\nconst { Column, ColumnGroup } = Table;\r\n\r\n\r\n\r\ninterface Props {\r\n    \r\n}\r\n\r\nconst localOptions = [\r\n    {\r\n        value: 'category',\r\n        name: 'Category'\r\n    },\r\n     {\r\n        value: 'product',\r\n        name: 'Product'\r\n    }\r\n\r\n]\r\n\r\nexport const getHourFormatter = (order: number): string | undefined =>\r\n    `${order}hr`;\r\n\r\n\r\nexport const TooltipContainerStyles = {\r\n    border: 0,\r\n    borderRadius: \"8px\",\r\n    fontSize: 14,\r\n    boxShadow: \"2px 2px 5px 3px rgba(0,0,0,0.15)\"\r\n};\r\n\r\n\r\n\r\nconst PageVisits = (props: Props) => {\r\n    const history = useHistory(); \r\n  \r\n    const [orderAnalyticsVisitsState, handleOrderAnalyticsVisitsStateFetch] = useHandleFetch({}, 'getAnalyticsOrders');\r\n    const [orderData, setorderData] = useState([]);\r\n\r\n\r\n    useEffect(()=>{\r\n        const getAnalyticsOrders = async () => {\r\n\r\n            const ordersDataRes =  await handleOrderAnalyticsVisitsStateFetch({\r\n                urlOptions: {\r\n                    params: {\r\n                        metricType: 'hour',\r\n                    }\r\n                }\r\n            }); \r\n\r\n           // @ts-ignore\r\n           if(ordersDataRes){\r\n            // @ts-ignore\r\n            setorderData(ordersDataRes);\r\n           }\r\n\r\n           };\r\n           getAnalyticsOrders(); \r\n\r\n    },[]); \r\n\r\n\r\n    console.log('orderAnalyticsVisitsState',orderAnalyticsVisitsState);\r\n\r\n\r\n\r\n\r\n    return (\r\n\r\n        <div className='overviewContainer__body-apiVisits'>\r\n        <div className='overviewContainer__body-apiVisits-header'>\r\n            <div className='overviewContainer__body-apiVisits-header-info'>\r\n                <h2>\r\n                    BY HOUR\r\n                </h2>\r\n                <h3>\r\n                      Order report by hours \r\n                </h3>\r\n            </div>\r\n        </div>\r\n\r\n        \r\n        <div className='overviewContainer__body-body'>    \r\n        {orderAnalyticsVisitsState.isLoading && (\r\n            <>\r\n            <div style={{\r\n                display:'flex',\r\n                justifyContent:'center',\r\n                alignItems:\"center\",\r\n                margin:\"100px 0\"\r\n            }}>\r\n            <Spin\r\n            size='large'\r\n             />\r\n                </div>\r\n\r\n            </>\r\n        )}\r\n\r\n        \r\n             {orderAnalyticsVisitsState.done && orderData && orderData.length > 0 && (\r\n                    <ResponsiveContainer width=\"100%\" height={300}>\r\n                    <AreaChart data={orderData} fontSize={12}>\r\n                        <defs>\r\n                            <linearGradient id=\"rainGradient\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\r\n                                <stop offset=\"0%\" stopColor=\"#1890ff\" />\r\n                                <stop offset=\"100%\" stopColor=\"#3066BE22\" />\r\n                            </linearGradient>\r\n                        </defs>\r\n                        <CartesianGrid\r\n                            vertical={false}\r\n                            strokeDasharray=\"3 3\"\r\n                            stroke=\"#d6d9da\"\r\n                        />\r\n                        <XAxis \r\n                         dataKey={'hour'} \r\n                         tickFormatter={getHourFormatter}\r\n                         />\r\n                        <YAxis\r\n                            // unit=\"ml\"\r\n                            orientation=\"left\"\r\n                            width={20}\r\n                            axisLine={false}\r\n                            tickLine={false}\r\n                        />\r\n                        <Tooltip\r\n                            cursor={false}\r\n                            contentStyle={TooltipContainerStyles}\r\n                            formatter={(value, name) => [`${value}`, `${name}`]}\r\n                        />\r\n                        <Area\r\n                            dataKey=\"count\"\r\n                            name=\"Count\"\r\n                            type=\"basis\"\r\n                            fill=\"url(#rainGradient)\"\r\n                        />\r\n                    </AreaChart>\r\n                </ResponsiveContainer>\r\n               )}\r\n\r\n\r\n                {orderAnalyticsVisitsState.done && !(orderAnalyticsVisitsState.data.length > 0) && (\r\n                    <div style={{\r\n                        marginTop: '00px'\r\n                    }}>\r\n                        <Empty description={`No Visits for hours`} image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n                    </div>\r\n                )}\r\n\r\n            \r\n\r\n        </div>\r\n        <div className=\"overviewContainer__body-footer\">\r\n            <h3>\r\n                <span>\r\n                    <CalendarOutlined />\r\n                </span>\r\n\r\n                            In the last month\r\n                     </h3>\r\n        </div>\r\n\r\n    </div>\r\n\r\n    )\r\n}\r\n\r\nexport default PageVisits\r\n","import React,{useState, useEffect} from 'react'\r\n\r\n\r\n// import hooks\r\nimport { useHandleFetch } from \"../../../hooks\";\r\n\r\n// import components\r\nimport { DataTableSkeleton } from \"../../../components/Placeholders\";\r\n\r\n// \r\n\r\n\r\n// import lib\r\nimport {\r\n    ResponsiveContainer,\r\n    AreaChart,\r\n    CartesianGrid,\r\n    XAxis,\r\n    YAxis,\r\n    Tooltip,\r\n    Legend,\r\n    Area,\r\n    Line\r\n} from \"recharts\";\r\n\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {\r\n    FileOutlined,\r\n    InboxOutlined,\r\n    RadiusUpleftOutlined,\r\n    RadiusUprightOutlined,\r\n    RadiusBottomleftOutlined,\r\n    RadiusBottomrightOutlined,\r\n    PlusOutlined,\r\n    DeleteOutlined,\r\n    EditOutlined,\r\n    CheckCircleOutlined,\r\n    CalendarOutlined\r\n} from '@ant-design/icons';\r\n\r\nimport { Skeleton, Empty, Popconfirm, Upload, message, Switch, Select, Button, notification, Table, Space, Input as CoolInput, Modal, Spin } from 'antd';\r\n\r\n\r\nconst { Option } = Select;\r\n\r\nconst { Column, ColumnGroup } = Table;\r\n\r\n\r\n\r\ninterface Props {\r\n    \r\n}\r\n\r\nconst localOptions = [\r\n    {\r\n        value: 'category',\r\n        name: 'Category'\r\n    },\r\n     {\r\n        value: 'product',\r\n        name: 'Product'\r\n    }\r\n\r\n]\r\n\r\n\r\nconst MONTHS = [\r\n    \"Jan\",\r\n    \"Feb\",\r\n    \"Mar\",\r\n    \"Apr\",\r\n    \"May\",\r\n    \"Jun\",\r\n    \"Jul\",\r\n    \"Aug\",\r\n    \"Sep\",\r\n    \"Oct\",\r\n    \"Nov\",\r\n    \"Dec\"\r\n];\r\n\r\n\r\nexport const getMonthNameByOrder = (order: number): string | undefined =>\r\n `${MONTHS[order - 1]}`;\r\n\r\n\r\n\r\nexport const TooltipContainerStyles = {\r\n    border: 0,\r\n    borderRadius: \"8px\",\r\n    fontSize: 14,\r\n    boxShadow: \"2px 2px 5px 3px rgba(0,0,0,0.15)\"\r\n};\r\n\r\n\r\n\r\n\r\n\r\nconst PageVisits = (props: Props) => {\r\n    const history = useHistory(); \r\n  \r\n    const [orderAnalyticsVisitsState, handleOrderAnalyticsVisitsStateFetch] = useHandleFetch({}, 'getAnalyticsOrders');\r\n    const [orderData, setorderData] = useState([]);\r\n\r\n\r\n\r\n\r\n    useEffect(()=>{\r\n        const getAnalyticsOrders = async () => {\r\n\r\n            const ordersDataRes =  await handleOrderAnalyticsVisitsStateFetch({\r\n                urlOptions: {\r\n                    params: {\r\n                        metricType: 'month',\r\n                    }\r\n                }\r\n            }); \r\n\r\n           // @ts-ignore\r\n           if(ordersDataRes){\r\n            // @ts-ignore\r\n            setorderData(ordersDataRes);\r\n           }\r\n\r\n           };\r\n           getAnalyticsOrders(); \r\n\r\n    },[]); \r\n\r\n\r\n    console.log('orderAnalyticsVisitsStateMonth',orderAnalyticsVisitsState);\r\n\r\n\r\n\r\n\r\n    return (\r\n\r\n        <div className='overviewContainer__body-apiVisits'>\r\n        <div className='overviewContainer__body-apiVisits-header'>\r\n            <div className='overviewContainer__body-apiVisits-header-info'>\r\n                <h2>\r\n                   BY MONTH\r\n                </h2>\r\n                <h3>\r\n                   Order report by month\r\n                </h3>\r\n            </div>\r\n        </div>\r\n\r\n        <div className='overviewContainer__body-body'>    \r\n        {orderAnalyticsVisitsState.isLoading && (\r\n            <>\r\n            <div style={{\r\n                display:'flex',\r\n                justifyContent:'center',\r\n                alignItems:\"center\",\r\n                margin:\"100px 0\"\r\n            }}>\r\n            <Spin\r\n            size='large'\r\n             />\r\n                </div>\r\n\r\n            </>\r\n        )}\r\n\r\n        \r\n             {orderAnalyticsVisitsState.done && orderData && orderData.length > 0 && (\r\n                    <ResponsiveContainer width=\"100%\" height={300}>\r\n                    <AreaChart data={orderData} fontSize={12}>\r\n                        <defs>\r\n                            <linearGradient id=\"rainGradient\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\r\n                                <stop offset=\"0%\" stopColor=\"#1890ff\" />\r\n                                <stop offset=\"100%\" stopColor=\"#3066BE22\" />\r\n                            </linearGradient>\r\n                        </defs>\r\n                        <CartesianGrid\r\n                            vertical={false}\r\n                            strokeDasharray=\"3 3\"\r\n                            stroke=\"#d6d9da\"\r\n                        />\r\n                        <XAxis \r\n                         dataKey={'month'} \r\n                         tickFormatter={getMonthNameByOrder}\r\n                         />\r\n                        <YAxis\r\n                            // unit=\"ml\"\r\n                            orientation=\"left\"\r\n                            width={20}\r\n                            axisLine={false}\r\n                            tickLine={false}\r\n                        />\r\n                        <Tooltip\r\n                            cursor={false}\r\n                            contentStyle={TooltipContainerStyles}\r\n                            formatter={(value, name) => [`${value}`, `${name}`]}\r\n                        />\r\n                        <Area\r\n                            dataKey=\"count\"\r\n                            name=\"Count\"\r\n                            type=\"basis\"\r\n                            fill=\"url(#rainGradient)\"\r\n                        />\r\n                    </AreaChart>\r\n                </ResponsiveContainer>\r\n               )}\r\n\r\n\r\n                {orderAnalyticsVisitsState.done && !(orderAnalyticsVisitsState.data.length > 0) && (\r\n                    <div style={{\r\n                        marginTop: '00px'\r\n                    }}>\r\n                        <Empty description={`No Visits for this months`} image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n                    </div>\r\n                )}\r\n\r\n            \r\n\r\n        </div>\r\n        <div className=\"overviewContainer__body-footer\">\r\n            <h3>\r\n                <span>\r\n                    <CalendarOutlined />\r\n                </span>\r\n\r\n                            In the last month\r\n         </h3>\r\n        </div>\r\n\r\n    </div>\r\n\r\n    )\r\n}\r\n\r\nexport default PageVisits\r\n","import React,{useState, useEffect} from 'react'\r\n\r\n\r\n// import hooks\r\nimport { useHandleFetch } from \"../../../hooks\";\r\n\r\n// import components\r\nimport { DataTableSkeleton } from \"../../../components/Placeholders\";\r\n\r\n// \r\n\r\n\r\n// import lib\r\nimport {\r\n    ResponsiveContainer,\r\n    AreaChart,\r\n    CartesianGrid,\r\n    XAxis,\r\n    YAxis,\r\n    Tooltip,\r\n    Legend,\r\n    Area,\r\n    Line\r\n} from \"recharts\";\r\n\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {\r\n    FileOutlined,\r\n    InboxOutlined,\r\n    RadiusUpleftOutlined,\r\n    RadiusUprightOutlined,\r\n    RadiusBottomleftOutlined,\r\n    RadiusBottomrightOutlined,\r\n    PlusOutlined,\r\n    DeleteOutlined,\r\n    EditOutlined,\r\n    CheckCircleOutlined,\r\n    CalendarOutlined\r\n} from '@ant-design/icons';\r\n\r\nimport { Skeleton, Empty, Popconfirm, Upload, message, Switch, Select, Button, notification, Table, Space, Input as CoolInput, Modal, Spin } from 'antd';\r\n\r\n\r\nconst { Option } = Select;\r\n\r\nconst { Column, ColumnGroup } = Table;\r\n\r\n\r\n\r\ninterface Props {\r\n    \r\n}\r\n\r\nconst localOptions = [\r\n    {\r\n        value: 'category',\r\n        name: 'Category'\r\n    },\r\n     {\r\n        value: 'product',\r\n        name: 'Product'\r\n    }\r\n\r\n]\r\n\r\n\r\n\r\nconst WEEEK = [\r\n    \"Sat\",\r\n    \"Sun\",\r\n    \"Mon\",\r\n    \"Tues\",\r\n    \"Wed\",\r\n    \"Thur\",\r\n    \"Fri\"\r\n];\r\n\r\n\r\nexport const getWeekNameByOrder = (order: number): string | undefined =>\r\n    WEEEK[order - 1];\r\n\r\n\r\n\r\n\r\n\r\nexport const TooltipContainerStyles = {\r\n    border: 0,\r\n    borderRadius: \"8px\",\r\n    fontSize: 14,\r\n    boxShadow: \"2px 2px 5px 3px rgba(0,0,0,0.15)\"\r\n};\r\n\r\n\r\n\r\n\r\n\r\nconst PageVisits = (props: Props) => {\r\n    const history = useHistory(); \r\n  \r\n    const [orderAnalyticsVisitsState, handleOrderAnalyticsVisitsStateFetch] = useHandleFetch({}, 'getAnalyticsOrders');\r\n    const [orderData, setorderData] = useState([]);\r\n\r\n\r\n    useEffect(()=>{\r\n        const getAnalyticsOrders = async () => {\r\n\r\n            const ordersDataRes =  await handleOrderAnalyticsVisitsStateFetch({\r\n                urlOptions: {\r\n                    params: {\r\n                        metricType: 'year',\r\n                    }\r\n                }\r\n            }); \r\n\r\n           // @ts-ignore\r\n           if(ordersDataRes){\r\n            // @ts-ignore\r\n            setorderData(ordersDataRes);\r\n           }\r\n\r\n           };\r\n           getAnalyticsOrders(); \r\n\r\n    },[]); \r\n\r\n\r\n    console.log('orderAnalyticsVisitsState',orderAnalyticsVisitsState);\r\n\r\n\r\n\r\n\r\n    return (\r\n\r\n        <div className='overviewContainer__body-apiVisits'>\r\n        <div className='overviewContainer__body-apiVisits-header'>\r\n            <div className='overviewContainer__body-apiVisits-header-info'>\r\n                <h2>\r\n                    By Year\r\n                </h2>\r\n                <h3>\r\n                      Order report by year \r\n                </h3>\r\n            </div>\r\n        </div>\r\n\r\n        <div className='overviewContainer__body-body'>    \r\n        {orderAnalyticsVisitsState.isLoading && (\r\n            <>\r\n            <div style={{\r\n                display:'flex',\r\n                justifyContent:'center',\r\n                alignItems:\"center\",\r\n                margin:\"100px 0\"\r\n            }}>\r\n            <Spin\r\n            size='large'\r\n             />\r\n                </div>\r\n\r\n            </>\r\n        )}\r\n\r\n        \r\n             {orderAnalyticsVisitsState.done && orderData && orderData.length > 0 && (\r\n                    <ResponsiveContainer width=\"100%\" height={300}>\r\n                    <AreaChart data={orderData} fontSize={12}>\r\n                        <defs>\r\n                            <linearGradient id=\"rainGradient\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\r\n                                <stop offset=\"0%\" stopColor=\"#1890ff\" />\r\n                                <stop offset=\"100%\" stopColor=\"#3066BE22\" />\r\n                            </linearGradient>\r\n                        </defs>\r\n                        <CartesianGrid\r\n                            vertical={false}\r\n                            strokeDasharray=\"3 3\"\r\n                            stroke=\"#d6d9da\"\r\n                        />\r\n                        <XAxis \r\n                         dataKey={'year'} \r\n                        //  tickFormatter={getWeekNameByOrder}\r\n                         />\r\n                        <YAxis\r\n                            // unit=\"ml\"\r\n                            orientation=\"left\"\r\n                            width={20}\r\n                            axisLine={false}\r\n                            tickLine={false}\r\n                        />\r\n                        <Tooltip\r\n                            cursor={false}\r\n                            contentStyle={TooltipContainerStyles}\r\n                            formatter={(value, name) => [`${value}`, `${name}`]}\r\n                        />\r\n                        <Area\r\n                            dataKey=\"count\"\r\n                            name=\"Count\"\r\n                            type=\"basis\"\r\n                            fill=\"url(#rainGradient)\"\r\n                        />\r\n                    </AreaChart>\r\n                </ResponsiveContainer>\r\n               )}\r\n\r\n\r\n                {orderAnalyticsVisitsState.done && !(orderAnalyticsVisitsState.data.length > 0) && (\r\n                    <div style={{\r\n                        marginTop: '00px'\r\n                    }}>\r\n                        <Empty description={`No Visits for this year`} image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n                    </div>\r\n                )}\r\n\r\n            \r\n\r\n        </div>\r\n        <div className=\"overviewContainer__body-footer\">\r\n            <h3>\r\n                <span>\r\n                    <CalendarOutlined />\r\n                </span>\r\n\r\n                    In the last year\r\n            </h3>\r\n        </div>\r\n\r\n    </div>\r\n\r\n    )\r\n}\r\n\r\nexport default PageVisits\r\n","import React,{useState, useEffect} from 'react'\r\n\r\n\r\n// import hooks\r\nimport { useHandleFetch } from \"../../../hooks\";\r\n\r\n// import components\r\nimport { DataTableSkeleton } from \"../../../components/Placeholders\";\r\n\r\n// \r\n\r\n\r\n// import lib\r\nimport {\r\n    ResponsiveContainer,\r\n    AreaChart,\r\n    CartesianGrid,\r\n    XAxis,\r\n    YAxis,\r\n    Tooltip,\r\n    Legend,\r\n    Area,\r\n    Line\r\n} from \"recharts\";\r\n\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {\r\n    FileOutlined,\r\n    InboxOutlined,\r\n    RadiusUpleftOutlined,\r\n    RadiusUprightOutlined,\r\n    RadiusBottomleftOutlined,\r\n    RadiusBottomrightOutlined,\r\n    PlusOutlined,\r\n    DeleteOutlined,\r\n    EditOutlined,\r\n    CheckCircleOutlined,\r\n    CalendarOutlined\r\n} from '@ant-design/icons';\r\n\r\nimport { Skeleton, Empty, Popconfirm, Upload, message, Switch, Select, Button, notification, Table, Space, Input as CoolInput, Modal, Spin } from 'antd';\r\n\r\n\r\nconst { Option } = Select;\r\n\r\nconst { Column, ColumnGroup } = Table;\r\n\r\n\r\n\r\ninterface Props {\r\n    \r\n}\r\n\r\nconst localOptions = [\r\n    {\r\n        value: 'category',\r\n        name: 'Category'\r\n    },\r\n     {\r\n        value: 'product',\r\n        name: 'Product'\r\n    }\r\n\r\n]\r\n\r\n\r\n\r\nconst WEEEK = [\r\n    \"Sat\",\r\n    \"Sun\",\r\n    \"Mon\",\r\n    \"Tues\",\r\n    \"Wed\",\r\n    \"Thur\",\r\n    \"Fri\"\r\n];\r\n\r\n\r\nexport const getWeekNameByOrder = (order: number): string | undefined =>\r\n    WEEEK[order - 1];\r\n\r\nexport const TooltipContainerStyles = {\r\n    border: 0,\r\n    borderRadius: \"8px\",\r\n    fontSize: 14,\r\n    boxShadow: \"2px 2px 5px 3px rgba(0,0,0,0.15)\"\r\n};\r\n\r\n\r\nconst DeliveryRegionReport = (props: Props) => {\r\n    const history = useHistory(); \r\n  \r\n    const [orderAnalyticsVisitsState, handleOrderAnalyticsVisitsStateFetch] = useHandleFetch({}, 'getAnalyticsOrders');\r\n    const [orderData, setorderData] = useState([]);\r\n\r\n\r\n    useEffect(()=>{\r\n        const getAnalyticsOrders = async () => {\r\n\r\n            const ordersDataRes =  await handleOrderAnalyticsVisitsStateFetch({\r\n                urlOptions: {\r\n                    params: {\r\n                        metricType: 'deliveryRegion',\r\n                    }\r\n                }\r\n            }); \r\n\r\n           // @ts-ignore\r\n           if(ordersDataRes && ordersDataRes.length > 0){\r\n               // @ts-ignore\r\n               const orderData = ordersDataRes.map(item => {\r\n                   return {\r\n                       ...item,\r\n                       name: item['deliveryRegion'] && Object.keys(item['deliveryRegion']).length > 0 ? item['deliveryRegion']['name'] : 'Region Name'\r\n                   }\r\n               })\r\n            // @ts-ignore\r\n            setorderData(orderData);\r\n           }\r\n           else {\r\n            setorderData([]);\r\n           }\r\n\r\n           };\r\n           getAnalyticsOrders(); \r\n\r\n    },[]); \r\n\r\n\r\n    console.log('orderListByDeliveryRegion',orderAnalyticsVisitsState);\r\n\r\n\r\n    return (\r\n\r\n        <div className='overviewContainer__body-apiVisits'>\r\n        <div className='overviewContainer__body-apiVisits-header'>\r\n            <div className='overviewContainer__body-apiVisits-header-info'>\r\n                <h2>\r\n                  BY DELIVERY REGION\r\n                </h2>\r\n                <h3>\r\n                      Order report by delivery region\r\n                </h3>\r\n            </div>\r\n        </div>\r\n\r\n        <div className='overviewContainer__body-body'>    \r\n        {orderAnalyticsVisitsState.isLoading && (\r\n            <>\r\n            <div style={{\r\n                display:'flex',\r\n                justifyContent:'center',\r\n                alignItems:\"center\",\r\n                margin:\"100px 0\"\r\n            }}>\r\n            <Spin\r\n            size='large'\r\n             />\r\n                </div>\r\n\r\n            </>\r\n        )}\r\n\r\n        \r\n             {orderAnalyticsVisitsState.done && orderData && orderData.length > 0 && (\r\n                    <ResponsiveContainer width=\"100%\" height={300}>\r\n                    <AreaChart data={orderData} fontSize={12}>\r\n                        <defs>\r\n                            <linearGradient id=\"rainGradient\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\r\n                                <stop offset=\"0%\" stopColor=\"#1890ff\" />\r\n                                <stop offset=\"100%\" stopColor=\"#3066BE22\" />\r\n                            </linearGradient>\r\n                        </defs>\r\n                        <CartesianGrid\r\n                            vertical={false}\r\n                            strokeDasharray=\"3 3\"\r\n                            stroke=\"#d6d9da\"\r\n                        />\r\n                        <XAxis \r\n                         dataKey={'name'} \r\n                        //  tickFormatter={getWeekNameByOrder}\r\n                         />\r\n                        <YAxis\r\n                            // unit=\"ml\"\r\n                            orientation=\"left\"\r\n                            width={20}\r\n                            axisLine={false}\r\n                            tickLine={false}\r\n                        />\r\n                        <Tooltip\r\n                            cursor={false}\r\n                            contentStyle={TooltipContainerStyles}\r\n                            formatter={(value, name) => [`${value}`, `${name}`]}\r\n                        />\r\n                        <Area\r\n                            dataKey=\"count\"\r\n                            name=\"Count\"\r\n                            type=\"basis\"\r\n                            fill=\"url(#rainGradient)\"\r\n                        />\r\n                    </AreaChart>\r\n                </ResponsiveContainer>\r\n               )}\r\n\r\n\r\n                {orderAnalyticsVisitsState.done && !(orderAnalyticsVisitsState.data.length > 0) && (\r\n                    <div style={{\r\n                        marginTop: '00px'\r\n                    }}>\r\n                        <Empty description={`No Visits for date`} image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n                    </div>\r\n                )}\r\n\r\n            \r\n\r\n        </div>\r\n        <div className=\"overviewContainer__body-footer\">\r\n            <h3>\r\n                <span>\r\n                    <CalendarOutlined />\r\n                </span>\r\n\r\n                            In the last month\r\n                     </h3>\r\n        </div>\r\n\r\n    </div>\r\n\r\n    )\r\n}\r\n\r\nexport default DeliveryRegionReport\r\n","import OrderOverviewReport from \"./OrderOverviewReport\";\r\nexport default OrderOverviewReport;","import React, { useEffect, useState } from 'react';\r\n\r\n// import components \r\nimport ThisMonthOrderReport from \"./ThisMonthOrderReport\";\r\nimport ThisWeekOrderReport from \"./ThisWeekOrderReport\";\r\nimport DateOrderReport from \"./DateOrderReport\";\r\nimport HourOrderReport from \"./HourOrderReport\";\r\nimport MonthOrderReport from \"./MonthOrderReport\";\r\nimport YearOrderReport from \"./YearOrderReport\";\r\nimport DeliveryRegionReport from \"./DeliveryRegionReport\";\r\n\r\n// import lib \r\nimport { message, Tooltip, Modal, Tabs, Empty, Badge } from 'antd';\r\n\r\nimport {\r\n\tDeleteOutlined,\r\n\tFileAddOutlined,\r\n\tCheckCircleOutlined,\r\n\tFileImageFilled,\r\n\tFileImageOutlined,\r\n\tFileImageTwoTone,\r\n\tPlusOutlined,\r\n\tPlusCircleOutlined,\r\n\tCloseOutlined,\r\n\tCheckOutlined,\r\n\tInfoCircleOutlined,\r\n\tUserOutlined,\r\n\tCalendarOutlined,\r\n\tGoldOutlined,\r\n\tShoppingCartOutlined,\r\n\tTagOutlined\r\n} from '@ant-design/icons';\r\n\r\n// import hooks\r\nimport { useHandleFetch } from \"../../../hooks\";\r\n\r\n\r\ninterface Props { }\r\n\r\nconst Overview = (props: Props) => {\r\n\tconst [analyticsProductVisitCountState, handleAnalyticsProductVisitCountFetch] = useHandleFetch({}, 'getAnalyticsPageVisitCount');\r\n\tconst [analyticsCategoryVisitCountState, handleAnalyticsCategoryVisitCountFetch] = useHandleFetch({}, 'getAnalyticsPageVisitCount');\r\n\tconst [totalUserCountState, handleGetTotalUserCountFetch] = useHandleFetch({}, 'getAnalyticsTotalUserCount');\r\n\r\n\r\n\r\n\tuseEffect(() => {\r\n\r\n\t\tconst getTotalUserCount = async () => {\r\n\t\t\tawait handleGetTotalUserCountFetch({});\r\n\t\t}\r\n\r\n\t\tgetTotalUserCount();\r\n\t}, []);\r\n\r\n\r\n\t\r\n\tuseEffect(()=>{\r\n\t\tconst getProductVisitCount = async () => {\r\n\t\t\tawait handleAnalyticsProductVisitCountFetch({\r\n\t\t\t\tparams: 'product'\r\n\t\t\t})\r\n\t\t}; \r\n\t\tgetProductVisitCount();\r\n\t},[])\r\n\r\n\r\n\r\n\tuseEffect(()=>{\r\n\t\tconst getCategoryVisitCount = async () => {\r\n\t\t\tawait handleAnalyticsCategoryVisitCountFetch({\r\n\t\t\t\tparams: 'category'\r\n\t\t\t})\r\n\t\t}; \r\n\t\tgetCategoryVisitCount();\r\n\t},[])\r\n\r\n\r\n\r\n\r\n\r\n\r\n\treturn (\r\n\t\t<div className='overviewContainer'>\r\n\t\t\t<div className=\"overviewContainer__body\">\r\n\t\t\t\t<DeliveryRegionReport/>\r\n\t\t\t\t<ThisWeekOrderReport />\r\n\t\t\t\t<ThisMonthOrderReport />\r\n\t\t\t</div>\r\n\r\n\t\t\t<div className=\"overviewContainer__body\">\r\n\t\t\t\t<DateOrderReport />\r\n\t\t\t\t<HourOrderReport />\r\n\t\t\t</div>\r\n\r\n\t\t\t<div className=\"overviewContainer__body\">\r\n\t\t\t\t<MonthOrderReport />\r\n\t\t\t\t<YearOrderReport />\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Overview;\r\n","import React from 'react'\r\n\r\ninterface Props {\r\n    \r\n}\r\n\r\nconst ConfigOrderStatus = (props: Props) => {\r\n    return (\r\n        <div>\r\n            ConfigOrderStatus\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ConfigOrderStatus\r\n","import React, { useState, useEffect } from 'react';\r\nimport { AutoComplete, Tooltip } from 'antd';\r\n\r\nimport InputSmall from '../../components/Field/InputSmall';\r\nimport MediaLibrary from '../../components/MediaLibrary';\r\n\r\nimport { useFetch } from \"../../hooks\";\r\nimport {\r\n    DeleteOutlined,\r\n    FileAddOutlined,\r\n    FileImageFilled,\r\n    PlusOutlined,\r\n    CheckCircleOutlined,\r\n    CloseOutlined,\r\n    CheckOutlined,\r\n    InfoCircleOutlined\r\n} from '@ant-design/icons';\r\n\r\n\r\n\r\nconst Complete = ({ setItemsList, itemsList, componentItem }) => {\r\n\r\n\r\n    const [localComponentItem, setlocalComponentItem] = useState({\r\n        title: componentItem.title,\r\n        target: componentItem.target,\r\n        text: componentItem.text,\r\n        image: componentItem.image,\r\n    })\r\n\r\n    const [myImages, setmyImages] = useState([]);\r\n    const [visibleMedia, setvisibleMedia] = useState(false);\r\n\r\n    const handleComponentItemsChange = (e) => {\r\n        const name = e.target.name;\r\n        const value = e.target.value;\r\n\r\n        setlocalComponentItem({\r\n            ...localComponentItem,\r\n            [name]: value\r\n        });\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (myImages.length > 0) {\r\n            const newImages = myImages.map(item => item.id);\r\n            setlocalComponentItem({\r\n                ...localComponentItem,\r\n                image: [...newImages]\r\n            })\r\n        }\r\n        else {\r\n            setlocalComponentItem({\r\n                ...localComponentItem,\r\n                image: []\r\n            })\r\n        }\r\n\r\n    }, [myImages])\r\n\r\n    useEffect(() => {\r\n        const positionInAttribute = () => {\r\n            return itemsList.map(item => item.id).indexOf(componentItem.id);\r\n        }\r\n\r\n        const index = positionInAttribute();\r\n\r\n        const updatedItem = Object.assign({}, itemsList[index], { ...localComponentItem });\r\n        const updateComponentList = [...itemsList.slice(0, index), updatedItem, ...itemsList.slice(index + 1)];\r\n        setItemsList(updateComponentList);\r\n\r\n    }, [localComponentItem])\r\n\r\n\r\n    const handleAttributeDelete = () => {\r\n\r\n        const updateComponentList = itemsList.filter(item => item.id !== componentItem.id);\r\n        setItemsList(updateComponentList);\r\n    }\r\n\r\n\r\n    const handleImagesDelete = (id) => {\r\n        // @ts-ignore\r\n        const newImages = myImages && myImages.filter(image => {\r\n            return image.id !== id;\r\n        })\r\n\r\n        setmyImages(newImages);\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n\r\n\r\n            <div className='componentItemsContainer__item'>\r\n                <InputSmall\r\n                    label='Title'\r\n                    value={localComponentItem.title}\r\n                    name='title'\r\n                    onChange={handleComponentItemsChange}\r\n                />\r\n                <InputSmall\r\n                    label='Text'\r\n                    value={localComponentItem.text}\r\n                    name='text'\r\n                    onChange={handleComponentItemsChange}\r\n                />\r\n\r\n                <InputSmall\r\n                    label='Target'\r\n                    value={localComponentItem.target}\r\n                    name='target'\r\n                    onChange={handleComponentItemsChange}\r\n                />\r\n\r\n\r\n                <h3 className='inputFieldLabel-small'>Images</h3>\r\n                <div style={{\r\n                    marginBottom: \"-1px\"\r\n                }}></div>\r\n\r\n                <div className='aboutToUploadImagesContainer'>\r\n                    {myImages &&\r\n                        // @ts-ignore\r\n                        myImages.length > 0 && myImages.map((image, index) => {\r\n                            return (\r\n                                <div className='aboutToUploadImagesContainer__item aboutToUploadImagesContainer__item-small'>\r\n                                    <div\r\n                                        className='aboutToUploadImagesContainer__item-imgContainer'\r\n                                    >\r\n                                        <img src={image.cover} alt={image.alt} />\r\n                                    </div>\r\n\r\n                                    <span\r\n                                        onClick={() => handleImagesDelete(image.id)}\r\n                                        className='aboutToUploadImagesContainer__item-remove'>\r\n                                        <CloseOutlined />\r\n                                    </span>\r\n                                </div>\r\n                            )\r\n                        })}\r\n\r\n\r\n                    <Tooltip\r\n                        title={'Attach images'}>\r\n\r\n                        <div\r\n                            onClick={() => {\r\n                                setvisibleMedia(true);\r\n                            }}\r\n                            className='aboutToUploadImagesContainer__uploadItem aboutToUploadImagesContainer__uploadItem-small'>\r\n                            {/* <FileAddOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FileImageTwoTone />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FileImageOutlined /> */}\r\n                            <FileImageFilled />\r\n                            {/* <h5>\r\n\t\t\t\t\t\t\t\t\t\t\t\t     Select From Library\r\n\t\t\t\t\t\t\t\t\t\t\t<     /h5> */}\r\n                            <span className='aboutToUploadImagesContainer__uploadItem-plus'>\r\n                                <PlusOutlined />\r\n                            </span>\r\n                        </div>\r\n                    </Tooltip>\r\n\r\n                </div>\r\n\r\n\r\n\r\n            </div>\r\n            <MediaLibrary\r\n                setvisible={setvisibleMedia}\r\n                visible={visibleMedia}\r\n                myImages={myImages}\r\n                setmyImages={setmyImages}\r\n                isModalOpenForImages={true}\r\n\r\n            />\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Complete;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n\r\nimport { useHandleFetch } from '../../hooks';\r\n// import third party ui lib\r\nimport { Upload, message, Switch, Select, Button, notification, Modal } from 'antd';\r\n\r\nimport {\r\n    FileOutlined,\r\n    InboxOutlined,\r\n    FileAddOutlined,\r\n    DeleteOutlined,\r\n    CheckCircleOutlined,\r\n    PlusOutlined\r\n} from '@ant-design/icons';\r\n\r\n\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport MediaLibrary from \"../../components/MediaLibrary\";\r\nimport ComponentItem from \"./ComponentItem\";\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    groupName: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Component Created',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Something Went Wrong',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst initialValues = {\r\n    groupName: '',\r\n    items: [],\r\n}\r\n\r\n\r\n\r\ninterface Props {\r\n    addNewCategoryVisible?: any;\r\n    setAddNewCategoryVisible?: any;\r\n    componentList?: any;\r\n    setComponentList?: any;\r\n\r\n}\r\n\r\nconst AddNewBrand = ({ addNewCategoryVisible, setAddNewCategoryVisible, componentList, setComponentList }: Props) => {\r\n\r\n    const [addComponentState, handleAddComponentFetch] = useHandleFetch({}, 'addComponent');\r\n    const [myImages, setmyImages] = useState(false);\r\n    const [itemsList, setItemsList] = useState([])\r\n\r\n\r\n    const handleSubmit = async (values: any, actions: any) => {\r\n\r\n\r\n        const addComponentRes = await handleAddComponentFetch({\r\n            body: {\r\n                groupName: values.groupName,\r\n                items: itemsList\r\n            },\r\n        });\r\n\r\n        // @ts-ignore\r\n        if (addComponentRes && addComponentRes.status === 'ok') {\r\n            openSuccessNotification();\r\n            setComponentList([...componentList, {\r\n                id: addComponentRes['_id'] || '',\r\n                key: addComponentRes['_id'] || '',\r\n                groupName: addComponentRes['groupName'] || '',\r\n                // @ts-ignore\r\n                ...addComponentRes\r\n            }])\r\n            actions.resetForm();\r\n            setItemsList([])\r\n            setAddNewCategoryVisible(false);\r\n        }\r\n\r\n        else {\r\n            openErrorNotification();\r\n        }\r\n\r\n\r\n\r\n\r\n        actions.setSubmitting(false);\r\n\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (!addComponentState['isLoading']) {\r\n            const error = addComponentState['error'];\r\n            if (error['isError'] && Object.keys(error['error']).length > 0) {\r\n\r\n\r\n                const errors =\r\n                    Object.values(error['error']).length > 0\r\n                        ? Object.values(error['error'])\r\n                        : [];\r\n                errors.forEach((err, i) => {\r\n                    if (typeof err === 'string') {\r\n                        openErrorNotification(err)\r\n                    }\r\n                    else if (typeof err === 'object') {\r\n                        if (err && Object.keys(err).length > 0) {\r\n                            const errs = Object.values(err);\r\n                            errs.forEach(err => {\r\n                                openErrorNotification(err)\r\n                            })\r\n\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n        }\r\n    }, [addComponentState])\r\n\r\n\r\n\r\n\r\n\r\n\r\n    const handleCancel = (e: any) => {\r\n        setAddNewCategoryVisible(false);\r\n    };\r\n\r\n\r\n    const getisSubmitButtonDisabled = (values, isValid) => {\r\n        if (!values.groupName) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n    const handleAddComponentItem = () => {\r\n        setItemsList([...itemsList, {\r\n            title: '',\r\n            target: '',\r\n            text: '',\r\n            image: [],\r\n            id: `${itemsList.length}`\r\n        }])\r\n    }\r\n\r\n\r\n\r\n\r\n    return (\r\n        <Formik\r\n            onSubmit={(values, actions) => handleSubmit(values, actions)}\r\n            validationSchema={validationSchema}\r\n            validateOnBlur={false}\r\n            enableReinitialize={true}\r\n            initialValues={\r\n                { ...initialValues }\r\n            }\r\n        >\r\n            {({\r\n                handleChange,\r\n                values,\r\n                handleSubmit,\r\n                errors,\r\n                isValid,\r\n                isSubmitting,\r\n                touched,\r\n                handleBlur,\r\n                setFieldTouched,\r\n                handleReset,\r\n            }) => (\r\n                    <>\r\n                        <Modal\r\n                            style={{\r\n                                top: '40px'\r\n                            }}\r\n                            title=\"Add New Component\"\r\n                            visible={addNewCategoryVisible}\r\n                            onOk={(e: any) => handleSubmit(e)}\r\n                            onCancel={handleCancel}\r\n                            okText='Create'\r\n                            okButtonProps={{\r\n                                loading: isSubmitting,\r\n                                htmlType: \"submit\",\r\n                                disabled: getisSubmitButtonDisabled(values, isValid)\r\n                            }}\r\n                            width={'50vw'}\r\n                            bodyStyle={{\r\n                                margin: '0',\r\n                                padding: '10px'\r\n                            }}\r\n                        >\r\n                            <Input\r\n                                label='Group Component Name'\r\n                                value={values.groupName}\r\n                                name='groupName'\r\n                                isError={(touched.groupName && errors.groupName) ||\r\n                                    (!isSubmitting && addComponentState.error['error']['name'])}\r\n\r\n                                errorString={(touched.groupName && errors.groupName) ||\r\n                                    (!isSubmitting && addComponentState.error['error']['name'])}\r\n                                onChange={(e: any) => {\r\n                                    handleChange(e);\r\n                                    setFieldTouched('groupName');\r\n                                }}\r\n                            />\r\n                            <div style={{\r\n                                marginTop: '15px',\r\n                            }}></div>\r\n                            <h3 className='inputFieldLabel'>Children</h3>\r\n\r\n                            <div className='componentItemsContainer'>\r\n                                {itemsList.map(itemComponent => {\r\n                                    return <ComponentItem\r\n                                        componentItem={itemComponent}\r\n                                        itemsList={itemsList} setItemsList={setItemsList} />\r\n                                })}\r\n\r\n                                <Button size='small'\r\n                                    onClick={handleAddComponentItem}\r\n                                    style={{\r\n                                        width: '290px',\r\n                                        minHeight: '145px',\r\n                                        marginTop: '0px',\r\n                                        borderRadius: '8px'\r\n                                    }} type=\"dashed\" icon={<PlusOutlined />}>Add Childrens</Button>\r\n                            </div>\r\n\r\n                            <div\r\n                                style={{\r\n                                    marginTop: '20px'\r\n                                }}\r\n                            />\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n                        </Modal>\r\n\r\n\r\n                    </>\r\n                )}\r\n        </Formik>\r\n\r\n\r\n\r\n\r\n    );\r\n};\r\n\r\nexport default AddNewBrand;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { AutoComplete, Button, Tooltip } from 'antd';\r\n\r\n// import configs\r\nimport config from \"../../config.json\";\r\n\r\nimport InputSmall from '../../components/Field/InputSmall';\r\nimport MediaLibrary from '../../components/MediaLibrary';\r\n\r\nimport { useFetch } from \"../../hooks\";\r\nimport {\r\n    DeleteOutlined,\r\n    FileAddOutlined, \r\n    SaveOutlined,\r\n    FileImageFilled,\r\n    PlusOutlined,\r\n    CheckCircleOutlined,\r\n    CloseOutlined,\r\n    CheckOutlined,\r\n    InfoCircleOutlined\r\n} from '@ant-design/icons';\r\n\r\n\r\n\r\nconst Complete = ({ setComponentList, componentList, item, component,componentUpdate, isLoadingUpdate }) => {\r\n\r\n    const [localComponentItem, setlocalComponentItem] = useState({\r\n        title: item.title,\r\n        target: item.target,\r\n        text: item.text,\r\n        image: item.image,\r\n    }); \r\n\r\n\r\n    console.log('localComponentItem',localComponentItem); \r\n    console.log('componentItem',item); \r\n\r\n\r\n\r\n    // useEffect(()=>{\r\n\r\n    //     if(item && item.image && item.image.length > 0){\r\n    //         setlocalComponentItem({\r\n    //             ...localComponentItem,\r\n    //             image: \r\n    //         })\r\n    //     }; \r\n\r\n\r\n    // },item)\r\n\r\n    const [myImages, setmyImages] = useState([]);\r\n    const [visibleMedia, setvisibleMedia] = useState(false);\r\n\r\n    const handleComponentItemsChange = (e) => {\r\n        const name = e.target.name;\r\n        const value = e.target.value;\r\n\r\n        setlocalComponentItem({\r\n            ...localComponentItem,\r\n            [name]: value\r\n        });\r\n    };\r\n\r\n\r\n\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        if (myImages.length > 0) {\r\n            setlocalComponentItem({\r\n                ...localComponentItem,\r\n                // @ts-ignore\r\n                image: [...new Set([...localComponentItem.image, ...myImages])]\r\n            })\r\n        }\r\n        // else {\r\n        //     setlocalComponentItem({\r\n        //         ...localComponentItem,\r\n        //         image: []\r\n        //     })\r\n        // }\r\n\r\n    }, [myImages])\r\n\r\n\r\n\r\n\r\n    useEffect(()=>{\r\n\r\n        if(item && item.image && item.image.length > 0){\r\n            setmyImages(item.image)\r\n        }\r\n\r\n    },[])\r\n\r\n\r\n    const handleImagesDelete = (id) => {\r\n        // @ts-ignore\r\n        const newImages = localComponentItem.image && localComponentItem.image.length > 0 && localComponentItem.image.filter(image => {\r\n            return image.id !== id;\r\n        })\r\n\r\n        setlocalComponentItem({\r\n            ...localComponentItem,\r\n            image: [...newImages]\r\n        })\r\n\r\n        setmyImages(newImages);\r\n    }\r\n\r\n\r\n    const handleComponentItemUpdate = () => {\r\n        componentUpdate(item,component,localComponentItem); \r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <div\r\n                style={{\r\n                    width: '100%',\r\n                    boxShadow: \"none\"\r\n                }}\r\n                className='componentItemsContainer__item'>\r\n                <InputSmall\r\n                    label='Title'\r\n                    value={localComponentItem.title}\r\n                    name='title'\r\n                    onChange={handleComponentItemsChange}\r\n                />\r\n                <InputSmall\r\n                    label='Text'\r\n                    value={localComponentItem.text}\r\n                    name='text'\r\n                    onChange={handleComponentItemsChange}\r\n                />\r\n\r\n                <InputSmall\r\n                    label='Target'\r\n                    value={localComponentItem.target}\r\n                    name='target'\r\n                    onChange={handleComponentItemsChange}\r\n                />\r\n\r\n\r\n                <h3 className='inputFieldLabel-small'>Images</h3>\r\n                <div style={{\r\n                    marginBottom: \"-1px\"\r\n                }}></div>\r\n\r\n\r\n                <div className='aboutToUploadImagesContainer'>\r\n                    {localComponentItem.image &&\r\n                        // @ts-ignore\r\n                        localComponentItem.image.length > 0 && localComponentItem.image.map((image, index) => {\r\n                            return (\r\n                                <div className='aboutToUploadImagesContainer__item aboutToUploadImagesContainer__item-small'>\r\n                                    <div\r\n                                        className='aboutToUploadImagesContainer__item-imgContainer'\r\n                                    >\r\n                                        <img src={image.cover} alt={image.alt} />\r\n                                    </div>\r\n\r\n                                    <span\r\n                                        onClick={() => handleImagesDelete(image.id)}\r\n                                        className='aboutToUploadImagesContainer__item-remove'>\r\n                                        <CloseOutlined />\r\n                                    </span>\r\n                                </div>\r\n                            )\r\n                        })}\r\n\r\n\r\n                    <Tooltip\r\n                        title={'Attach images'}>\r\n\r\n                        <div\r\n                            onClick={() => {\r\n                                setvisibleMedia(true);\r\n                            }}\r\n                            className='aboutToUploadImagesContainer__uploadItem aboutToUploadImagesContainer__uploadItem-small'>\r\n                            {/* <FileAddOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FileImageTwoTone />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FileImageOutlined /> */}\r\n                            <FileImageFilled />\r\n                            {/* <h5>\r\n\t\t\t\t\t\t\t\t\t\t\t\t     Select From Library\r\n\t\t\t\t\t\t\t\t\t\t\t<     /h5> */}\r\n                            <span className='aboutToUploadImagesContainer__uploadItem-plus'>\r\n                                <PlusOutlined />\r\n                            </span>\r\n                        </div>\r\n                    </Tooltip>\r\n\r\n                </div>\r\n                <Button\r\n                style={{\r\n                    marginTop: '15px'\r\n                }}\r\n                    icon={<SaveOutlined />}\r\n          className='btnPrimaryClassNameoutline'\r\n          onClick={() => handleComponentItemUpdate()}\r\n        >\r\n\r\n            {isLoadingUpdate ? \"Saving...\" : \"Save\"}\r\n            \r\n            </Button>\r\n            </div>\r\n            <MediaLibrary\r\n                setvisible={setvisibleMedia}\r\n                visible={visibleMedia}\r\n                myImages={myImages}\r\n                setmyImages={setmyImages}\r\n                isModalOpenForImages={true}\r\n\r\n            />\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Complete;\r\n","import React, { useState, useEffect } from 'react';\r\nimport * as Yup from 'yup';\r\n\r\n\r\nimport { useHandleFetch } from '../../hooks';\r\n// import third party ui lib\r\nimport { Upload, message, Switch, Select, Button, notification, Modal } from 'antd';\r\n\r\nimport {\r\n    FileOutlined,\r\n    InboxOutlined,\r\n    FileAddOutlined,\r\n    DeleteOutlined,\r\n    CheckCircleOutlined,\r\n    PlusOutlined\r\n} from '@ant-design/icons';\r\n\r\n\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport MediaLibrary from \"../../components/MediaLibrary\";\r\nimport ComponentItem from \"./ComponentItem\";\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    groupName: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Component Created',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Something Went Wrong',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst initialValues = {\r\n    groupName: '',\r\n    items: [],\r\n}\r\n\r\n\r\n\r\ninterface Props {\r\n    addNewCategoryVisible?: any;\r\n    setAddNewCategoryVisible?: any;\r\n    componentList?: any;\r\n    setComponentList?: any;\r\n    updateComponentByAddingItem?: any;\r\n    componentId?: any\r\n\r\n}\r\n\r\nconst AddNewBrand = ({ addNewCategoryVisible,\r\n    setAddNewCategoryVisible, componentList,\r\n    setComponentList,\r\n    updateComponentByAddingItem, componentId }: Props) => {\r\n\r\n\r\n    const [localComponentItem, setlocalComponentItem] = useState({\r\n        title: '',\r\n        target: '',\r\n        text: '',\r\n        image: [],\r\n    })\r\n\r\n    const [myImages, setmyImages] = useState([]);\r\n    const [visibleMedia, setvisibleMedia] = useState(false);\r\n\r\n    const handleComponentItemsChange = (e) => {\r\n        const name = e.target.name;\r\n        const value = e.target.value;\r\n\r\n        setlocalComponentItem({\r\n            ...localComponentItem,\r\n            [name]: value\r\n        });\r\n    };\r\n\r\n\r\n    const handleCancel = (e: any) => {\r\n        setAddNewCategoryVisible(false);\r\n    };\r\n\r\n\r\n    const getisSubmitButtonDisabled = (values, isValid) => {\r\n        if (!values.groupName) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        if (myImages.length > 0) {\r\n            const newImages = myImages.map(item => item.id);\r\n            setlocalComponentItem({\r\n                ...localComponentItem,\r\n                image: [...newImages]\r\n            })\r\n        }\r\n        else {\r\n            setlocalComponentItem({\r\n                ...localComponentItem,\r\n                image: []\r\n            })\r\n        }\r\n\r\n    }, [myImages])\r\n\r\n\r\n\r\n\r\n\r\n\r\n    const handleImagesDelete = (id) => {\r\n        // @ts-ignore\r\n        const newImages = myImages && myImages.filter(image => {\r\n            return image.id !== id;\r\n        })\r\n\r\n        setmyImages(newImages);\r\n    }\r\n\r\n\r\n    const handleAddItem = (e) => {\r\n        updateComponentByAddingItem(localComponentItem, componentId)\r\n    }\r\n\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <Modal\r\n                style={{\r\n                    top: '40px'\r\n                }}\r\n                destroyOnClose={true}\r\n                title=\"Add New Component Item\"\r\n                visible={addNewCategoryVisible}\r\n                onOk={(e: any) => handleAddItem(e)}\r\n                onCancel={handleCancel}\r\n                okText='Add'\r\n                okButtonProps={{\r\n                    htmlType: \"submit\",\r\n                }}\r\n                width={'400px'}\r\n                bodyStyle={{\r\n                    margin: '0',\r\n                    padding: '10px'\r\n                }}\r\n            >\r\n                <Input\r\n                    label='Title'\r\n                    value={localComponentItem.title}\r\n                    name='title'\r\n                    onChange={handleComponentItemsChange}\r\n                />\r\n                <Input\r\n                    label='Text'\r\n                    value={localComponentItem.text}\r\n                    name='text'\r\n                    onChange={handleComponentItemsChange}\r\n                />\r\n\r\n                <Input\r\n                    label='Target'\r\n                    value={localComponentItem.target}\r\n                    name='target'\r\n                    onChange={handleComponentItemsChange}\r\n                />\r\n\r\n\r\n                <h3 className='inputFieldLabel-small'>Images</h3>\r\n                <div className='aboutToUploadImagesContainer'>\r\n                    {myImages &&\r\n                        // @ts-ignore\r\n                        myImages.length > 0 && myImages.map(image => {\r\n                            return (\r\n                                <div className='aboutToUploadImagesContainer__item'>\r\n                                    <div\r\n                                        onClick={() => handleImagesDelete(image.id)}\r\n                                        className='aboutToUploadImagesContainer__item-overlay'>\r\n                                        <DeleteOutlined />\r\n                                    </div>\r\n                                    <img src={image.cover} alt={image.alt} />\r\n                                </div>\r\n                            )\r\n                        })}\r\n\r\n                    <div\r\n                        onClick={() => {\r\n                            setvisibleMedia(true);\r\n                        }}\r\n                        className='aboutToUploadImagesContainer__uploadItem'>\r\n                        <FileAddOutlined />\r\n                    </div>\r\n                </div>\r\n                <MediaLibrary\r\n                    setvisible={setvisibleMedia}\r\n                    visible={visibleMedia}\r\n                    myImages={myImages}\r\n                    setmyImages={setmyImages}\r\n                    isModalOpenForImages={true} />\r\n\r\n            </Modal>\r\n        </>\r\n\r\n\r\n    );\r\n};\r\n\r\nexport default AddNewBrand;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Collapse, Button, Tooltip, Upload, Modal,Input, notification, Popconfirm } from 'antd';\r\nimport { CaretRightOutlined,CheckCircleOutlined,  PlusOutlined, DeleteOutlined, EditOutlined } from '@ant-design/icons';\r\n\r\n// import components\r\nimport InputField from '../../components/Field/Input';\r\nimport Empty from '../../components/Empty';\r\nimport ComponentImageUpload from './ComponentImageUpload';\r\nimport {useHandleFetch} from '../../hooks';\r\nimport { DataTableSkeleton } from \"../../components/Placeholders\";\r\nimport AddNewComponent from \"./AddNewComponent\";\r\nimport ComponentListComponentItem from './ComponentListComponentItem';\r\nimport AddNewComponentItem from './AddNewComponentItem';\r\nimport { category } from '../../state/ducks';\r\nimport { truncate } from 'fs';\r\n\r\n\r\n\r\n\r\nconst { Panel } = Collapse;\r\nconst { Search } = Input;\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Component Created',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n    notification.error({\r\n        message: message || 'Something Went Wrong',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n    });\r\n};\r\n\r\n\r\n\r\nconst text = `\r\n  A dog is a type of domesticated animal.\r\n  Known for its loyalty and faithfulness,\r\n  it can be found as a welcome guest in many households across the world.\r\n`;\r\n\r\nfunction getBase64(file: any) {\r\n\treturn new Promise((resolve, reject) => {\r\n\t\tconst reader = new FileReader();\r\n\t\treader.readAsDataURL(file);\r\n\t\treader.onload = () => resolve(reader.result);\r\n\t\treader.onerror = (error) => reject(error);\r\n\t});\r\n}\r\n\r\n\r\nconst genExtra = (updateComponentByDeleting,component,id) => (\r\n\t<div\r\n\t\tstyle={{\r\n\t\t\tdisplay: 'flex'\r\n\t\t}}\r\n\t>\r\n\t\t\r\n\t\t<Tooltip placement='top' title='Edit Component'>\r\n\t\t<a href='##'>\r\n\t<EditOutlined\r\n\t\t\t\tonClick={(event) => {\r\n\t\t\t\t\t// If you don't want click extra trigger collapse, you can prevent this:\r\n\t\t\t\t\t// event.stopPropagation();\r\n\t\t\t\t}}\r\n\t\t\t/>\r\n\t\t</a>\r\n\t\t\r\n\t\t\t\r\n\t\t</Tooltip>\r\n\t\t\r\n\r\n\t\t<div\r\n\t\t\tstyle={{\r\n\t\t\t\tmarginLeft: '15px'\r\n\t\t\t}}\r\n\t\t/>\r\n\t\t   <a href='##' style={{\r\n\t\t\t\t   color:'rgb(241, 67, 67)'\r\n\t\t\t   }}>\r\n\t\t \r\n\t\t\t<Popconfirm \r\n               \r\n               onConfirm={() => updateComponentByDeleting(id,component)}\r\n               title=\"Are you sure？\" okText=\"Yes\" cancelText=\"No\">\r\n       \r\n\t\t   <DeleteOutlined\r\n\t\t\t\tonClick={(event) => {\r\n\t\t\t\t\t// If you don't want click extra trigger collapse, you can prevent this:\r\n\t\t\t\t\tevent.stopPropagation();\r\n\t\t\t\t}}\r\n\t\t\t/>\r\n\t\t\t\r\n           </Popconfirm>\r\n\t\t   </a>\r\n\t</div>\r\n);\r\n\r\nconst genExtraForGroup = (setitemVisible: any, handleDeleteComponent:any, id: any,setComponentId:any) => (\r\n\t<div\r\n\t\tstyle={{\r\n\t\t\tdisplay: 'flex'\r\n\t\t}}\r\n\t>\r\n\t\t<Tooltip placement='top' title='Add new item Component'>\r\n\t\t<a href='##'>\r\n\t\t\t<PlusOutlined\r\n\t\t\t\tonClick={(event) => {\r\n\t\t\t\t\t// If you don't want click extra trigger collapse, you can prevent this:\r\n\t\t\t\t\t// event.stopPropagation();\r\n\t\t\t\t\tsetitemVisible(true);\r\n\t\t\t\t\tsetComponentId(id)\r\n\t\t\t\t}}\r\n\t\t\t/>\r\n\t\t\t</a>\r\n\t\t</Tooltip>\r\n\r\n\t\t<div\r\n\t\t\tstyle={{\r\n\t\t\t\tmarginLeft: '15px'\r\n\t\t\t}}\r\n\t\t/>\r\n\t\t<Tooltip placement='top' title='Edit Component'>\r\n\t\t<a href='##'>\r\n\t\t\t<EditOutlined\r\n\t\t\t\tonClick={(event) => {\r\n\t\t\t\t\t// If you don't want click extra trigger collapse, you can prevent this:\r\n\t\t\t\t\t// event.stopPropagation();\r\n\t\t\t\t}}\r\n\t\t\t/>\r\n\t\t\t</a>\r\n\t\t</Tooltip>\r\n\r\n\t\t<div\r\n\t\t\tstyle={{\r\n\t\t\t\tmarginLeft: '15px'\r\n\t\t\t}}\r\n\t\t/>\r\n\t\t   <a href='##' style={{\r\n\t\t\t\t   color:'rgb(241, 67, 67)'\r\n\t\t\t   }}>\r\n\t\t \r\n\t\t<Popconfirm \r\n               \r\n               onConfirm={() => handleDeleteComponent(id)}\r\n               title=\"Are you sure？\" okText=\"Yes\" cancelText=\"No\">\r\n           \r\n\t\t   <DeleteOutlined\r\n\t\t\t\tonClick={(event) => {\r\n\t\t\t\t\t// If you don't want click extra trigger collapse, you can prevent this:\r\n\t\t\t\t\tevent.stopPropagation();\r\n\t\t\t\t}}\r\n\t\t\t/>\r\n\t\t\t\r\n\t\t\r\n\t\t\r\n           </Popconfirm>\r\n\t\t   </a>\r\n\r\n\t\t\t\r\n\t</div>\r\n);\r\n\r\nconst Component = (props) => {\r\n\r\n\r\n\tconst [visible, setvisible] = useState(false);\r\n\tconst [groupVisible, setgroupVisible] = useState(false);\r\n\tconst [itemVisible, setitemVisible] = useState(false);\r\n\tconst [componentId,setComponentId] = useState(''); \r\n\r\n\r\n\t\r\n\tconst [componentState, handleComponentListFetch] = useHandleFetch({}, 'componentList');\r\n\tconst [deleteComponentState, handleDeleteComponentFetch] = useHandleFetch({}, 'deleteComponent');\r\n\tconst [updateComponentState, handleUpdateComponentFetch] = useHandleFetch({}, 'updateComponent');\r\n\t\r\n\tconst [componentList,setComponentList] = useState([]); \r\n  \r\n\tuseEffect(()=>{\r\n\t const setComponents = async () => {\r\n\t   const components = await handleComponentListFetch({\r\n\t\t   urlOptions: {\r\n\t\t\t   params: {\r\n\t\t\t\t   imageValue : true\r\n\t\t\t   }\r\n\t\t   }\r\n\t   }); \r\n\t   // @ts-ignore\r\n\t   setComponentList(components); \r\n\t }\r\n\t setComponents(); \r\n\t},[])\r\n\r\n\tconsole.log('componentListd',componentList); \r\n\r\n\t\r\n\r\n\tconst handleSearch = (value) => {\r\n\t\tif(componentState.data.length > 0 ){\r\n\t\t  const newComponentList = componentState.data.filter(item => item.name.toLowerCase().includes(value.toLowerCase())); \r\n\t\t  setComponentList(newComponentList); \r\n\t\t}\r\n\t\t \r\n\t  }\r\n\t\r\n\r\n\r\n\r\n\t  \r\n      const handleDeleteComponent = async (id) => {\r\n        const deleteComponentRes = await handleDeleteComponentFetch({\r\n          urlOptions: {\r\n            placeHolders: {\r\n              id,\r\n            }\r\n            }\r\n          });\r\n\r\n            // @ts-ignore\r\n\t\t  if(deleteComponentRes && deleteComponentRes.status === 'ok'){\r\n\t\t\t  openSuccessNotification('Component Deleted'); \r\n\t\t\t  const newComponentList =  componentList.filter(item => item.id !== id);\r\n\t\t\t  setComponentList(newComponentList); \r\n\t\t  }\r\n\t\t  else {\r\n\t\t\topenErrorNotification(\"Couldn't delete, Something went wrong\")\r\n\t\t  }\r\n\t  }\r\n\t  \r\n\r\n\r\n\r\n\tconst handleOk = (e: any) => {\r\n\t\tsetvisible(false);\r\n\r\n\t};\r\n\r\n\tconst handleCancel = (e: any) => {\r\n\t\tsetvisible(false);\r\n\t};\r\n\tconst handleOkGroup = (e: any) => {\r\n\t\tsetgroupVisible(false);\r\n\r\n\t};\r\n\r\n\tconst handleCancelGroup = (e: any) => {\r\n\t\tsetgroupVisible(false);\r\n\t};\r\n\r\n\r\n\tconst componentUpdate = async (item,component,localComponentItem) => {\r\n\t\tconst positionInComponents = () => {\r\n            return componentList.map(item => item.id).indexOf(component.id);\r\n          };\r\n      \r\n          const positionInItemsOfComponent = () => {\r\n            return component.items.map(item => item.id).indexOf(item.id);\r\n          };\r\n      \r\n          const componentIndex = positionInComponents();\r\n      \r\n\t\t  const itemIndex = positionInItemsOfComponent();\r\n\t\t  \r\n\r\n\t\t  const manupulatedLocalComponentForTheReq = localComponentItem.image.length > 0 ? \r\n\t\t  {\r\n\t\t\t...localComponentItem,\r\n\t\t\timage: localComponentItem.image.length > 0 ? localComponentItem.image.map(img => img.id) : []\r\n\t\t}\r\n\t\t  : localComponentItem;\r\n      \r\n          const updatedItems = [\r\n            ...component.items.slice(0, itemIndex),\r\n            localComponentItem,\r\n            ...component.items.slice(itemIndex + 1)\r\n\t\t  ];\r\n\t\t  \r\n\t\t  const manupulatedUpdatedItems = [\r\n            ...component.items.slice(0, itemIndex),\r\n            manupulatedLocalComponentForTheReq,\r\n            ...component.items.slice(itemIndex + 1)\r\n\t\t  ];\r\n\t\t  \r\n\t\t\r\n\t\t  const manupulatedUpdatedItem = Object.assign({}, componentList[componentIndex], {\r\n            ...component,\r\n            items: manupulatedUpdatedItems\r\n          });\r\n      \r\n          const updatedItem = Object.assign({}, componentList[componentIndex], {\r\n            ...component,\r\n            items: updatedItems\r\n          });\r\n      \r\n          const updateComponentList = [\r\n            ...componentList.slice(0, componentIndex),\r\n            updatedItem,\r\n            ...componentList.slice(componentIndex + 1)\r\n          ];\r\n\t\t\r\n\t\t  \r\n\r\n\r\n\t\tconst updateComponentRes = await handleUpdateComponentFetch({\r\n\t\t\turlOptions: {\r\n\t\t\t\tplaceHolders: {\r\n\t\t\t\t  id: component.id,\r\n\t\t\t\t}\r\n\t\t\t  },\r\n\t\t\tbody: {\r\n\t\t\t\t...manupulatedUpdatedItem,\r\n\t\t\t\tgroupName: updatedItem.name\r\n\t\t\t},\r\n\t\t  });\r\n\t\t\r\n\t\t\t   // @ts-ignore\r\n\t\t\t   if(updateComponentRes && updateComponentRes.status === 'ok'){\r\n\t\t\t\topenSuccessNotification(\"Component Updated\"); \r\n\t\t\t\tsetComponentList(updateComponentList);\r\n\t\t\t\t\r\n\t\t\t  }\r\n\t\t\t  else {\r\n\t\t\t\topenErrorNotification();\r\n\t\t\t  }\r\n\t}\r\n\r\n\r\n\tconst updateComponentByDeleting = async (id,component) => {\r\n\r\n\t\tconst positionInComponents = () => {\r\n            return componentList.map(item => item.id).indexOf(component.id);\r\n          };\r\n      \r\n          const positionInItemsOfComponent = () => {\r\n            return component.items.map(item => item.id).indexOf(id);\r\n          };\r\n      \r\n          const componentIndex = positionInComponents();\r\n      \r\n          const itemIndex = positionInItemsOfComponent();\r\n      \r\n          const updatedItems = [\r\n            ...component.items.slice(0, itemIndex),\r\n            ...component.items.slice(itemIndex + 1)\r\n          ];\r\n      \r\n          const updatedItem = Object.assign({}, componentList[componentIndex], {\r\n            ...component,\r\n            items: updatedItems\r\n          });\r\n      \r\n          const updateComponentList = [\r\n            ...componentList.slice(0, componentIndex),\r\n            updatedItem,\r\n            ...componentList.slice(componentIndex + 1)\r\n          ];\r\n\t\t\r\n\t\t  \r\n\r\n\r\n\t\tconst updateComponentRes = await handleUpdateComponentFetch({\r\n\t\t\turlOptions: {\r\n\t\t\t\tplaceHolders: {\r\n\t\t\t\t  id: component.id,\r\n\t\t\t\t}\r\n\t\t\t  },\r\n\t\t\tbody: {\r\n\t\t\t\t...updatedItem,\r\n\t\t\t\tgroupName: updatedItem.name\r\n\t\t\t},\r\n\t\t  });\r\n\t\t\r\n\t\t\t   // @ts-ignore\r\n\t\t\t   if(updateComponentRes && updateComponentRes.status === 'ok'){\r\n\t\t\t\topenSuccessNotification(\"Component Item deleted\"); \r\n\t\t\t\tsetComponentList(updateComponentList);\r\n\t\t\t\t\r\n\t\t\t  }\r\n\t\t\t  else {\r\n\t\t\t\topenErrorNotification();\r\n\t\t\t  }\r\n\t};\r\n\r\n\r\n\tconst updateComponentByAddingItem = async (localComponentItem,id) => {\r\n\t\tconst positionInComponents = () => {\r\n            return componentList.map(item => item.id).indexOf(id);\r\n          };\r\n      \r\n      \r\n          const componentIndex = positionInComponents();\r\n      \r\n    \r\n      \r\n          const updatedItems = [\r\n            ...componentList[componentIndex].items,\r\n            localComponentItem,\r\n          ];\r\n      \r\n          const updatedItem = Object.assign({}, componentList[componentIndex], {\r\n            ...componentList[componentIndex],\r\n            items: updatedItems\r\n          });\r\n      \r\n          const updateComponentList = [\r\n            ...componentList.slice(0, componentIndex),\r\n            updatedItem,\r\n            ...componentList.slice(componentIndex + 1)\r\n          ];\r\n\t\t\r\n\t\t  \r\n\r\n\r\n\t\tconst updateComponentRes = await handleUpdateComponentFetch({\r\n\t\t\turlOptions: {\r\n\t\t\t\tplaceHolders: {\r\n\t\t\t\t  id: id,\r\n\t\t\t\t}\r\n\t\t\t  },\r\n\t\t\tbody: {\r\n\t\t\t\t...updatedItem,\r\n\t\t\t\tgroupName: updatedItem.name\r\n\t\t\t},\r\n\t\t  });\r\n\t\t\r\n\t\t\t   // @ts-ignore\r\n\t\t\t   if(updateComponentRes && updateComponentRes.status === 'ok'){\r\n\t\t\t\topenSuccessNotification(\"Component Item Added\"); \r\n\t\t\t\tsetComponentList(updateComponentList);\r\n\t\t\t\tsetitemVisible(false);\r\n\t\t\t\t\r\n\t\t\t  }\r\n\t\t\t  else {\r\n\t\t\t\topenErrorNotification();\r\n\t\t\t  }\r\n\t};\r\n\r\n\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t    <div className='categoryListContainer'>\r\n            <div className='categoryListContainer__header'>\r\n           \r\n\r\n          <div className='categoryListContainer__header-searchBar'>\r\n          <h2 className='categoryListContainer__header-title'>\r\n            Components\r\n            </h2>\r\n\r\n\r\n          <Search\r\n            enterButton={false}\r\n            className='searchbarClassName'\r\n          placeholder=\"search components..\"\r\n          onSearch={value => handleSearch(value)}\r\n        />\r\n          </div>\r\n            <Button\r\n          // type=\"primary\"\r\n          className='btnPrimaryClassNameoutline'\r\n          icon={<PlusOutlined />}\r\n\t\t  onClick={() => setgroupVisible(true)}\r\n        >\r\n        Add New\r\n            \r\n            </Button>\r\n            </div>\r\n\r\n            <div className='categoryListContainer__afterHeader'>\r\n \r\n            </div>\r\n\r\n     \r\n\t\t\t\r\n\t\t\t<div className='categoryListContainer__categoryList'>\r\n     \r\n        {componentState.isLoading && <DataTableSkeleton />}\r\n\r\n        {componentState.done && !(componentList.length > 0) && (\r\n\t\t\t<div style={{\r\n\t\t\t\tmarginTop: '50px'\r\n\t\t\t}}>\r\n\t\t\t\t<Empty title='No Component found' />\r\n\t\t\t</div>\r\n\t\t)}\r\n\r\n\t\t{componentState.done && componentList.length > 0 && (\r\n\t\t\t\t\t<div className='componentsItemContainer'>\r\n\t\t\t\t\t{componentList.map(component => {\r\n\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t<div className='componentsItemContainer-item'>\r\n\t\t\t\t\t\t\t<Collapse\r\n\t\t\t\t\t\t\t\taccordion={false}\r\n\t\t\t\t\t\t\t\tbordered={false}\r\n\t\t\t\t\t\t\t\texpandIconPosition='left'\r\n\t\t\t\t\t\t\t\texpandIcon={({ isActive }) => <CaretRightOutlined rotate={isActive ? 90 : 0} />}\r\n\t\t\t\t\t\t\t\tclassName='site-collapse-custom-collapse'\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<Panel\r\n\t\t\t\t\t\t\t\t\theader={component.name}\r\n\t\t\t\t\t\t\t\t\tkey='1'\r\n\t\t\t\t\t\t\t\t\tclassName='site-collapse-custom-panel'\r\n\t\t\t\t\t\t\t\t\textra={genExtraForGroup(setitemVisible,handleDeleteComponent, component.id,setComponentId)}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t<div className=' componentsItemContainer-white'>\r\n\t\t\t\t\t\t\t\t\t\t{component.items && component.items.length > 0 && component.items.map(item => {\r\n\t\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div className='componentsItemContainer-item-item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Collapse\r\n\t\t\t\t\t\t\t\t\t\t\t\t\taccordion={false}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tbordered={false}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\texpandIconPosition='left'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\texpandIcon={({ isActive }) => (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<CaretRightOutlined rotate={isActive ? 90 : 0} />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='site-collapse-custom-collapse'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Panel\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\theader={item.title || ''}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tkey='1'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='site-collapse-custom-panel'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\textra={genExtra(updateComponentByDeleting,component,item.id)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<ComponentListComponentItem\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetComponentList={setComponentList}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tcomponentList={componentList}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\titem={item}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tcomponent={component}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tcomponentUpdate={componentUpdate}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tisLoadingUpdate={updateComponentState.isLoading}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Panel>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Collapse>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t\t})}\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t{!(component.items.length > 0 ) && <Empty title='No item Found'/>}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</Panel>\r\n\t\t\t\t\t\t\t</Collapse>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t})}\r\n\t\t\t\t</div>\r\n\t\t)}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\r\n\r\n\t\t<AddNewComponent \r\n          addNewCategoryVisible={groupVisible} \r\n          setAddNewCategoryVisible={setgroupVisible} \r\n          setComponentList={setComponentList}\r\n          componentList={componentList}\r\n          />\r\n\t\t  <AddNewComponentItem \r\n          addNewCategoryVisible={itemVisible} \r\n          setAddNewCategoryVisible={setitemVisible} \r\n          setComponentList={setComponentList}\r\n\t\t  componentList={componentList}\r\n\t\t  updateComponentByAddingItem={updateComponentByAddingItem}\r\n\t\t  componentId={componentId}\r\n          />\r\n\r\n\r\n\t\t  \r\n\r\n\t\t\t<Modal\r\n\t\t\t\ttitle=\"Add New Group Component\"\r\n\t\t\t\tvisible={false}\r\n\t\t\t\tonOk={handleOkGroup}\r\n\t\t\t\tonCancel={handleCancelGroup}\r\n\t\t\t\tfooter={null}\r\n\t\t\t\tokText='Done'\r\n\t\t\t>\r\n\t\t\t\t<InputField label='Group Component Name' />\r\n\t\t\r\n\t\t\t</Modal>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default Component;\r\n","import React, { useState } from 'react';\r\n\r\n// import third libraries\r\nimport { Upload, message, notification, Modal } from 'antd';\r\n// import { Formik } from 'formik';\r\n// import * as Yup from 'yup';\r\nimport reqwest from 'reqwest';\r\n\r\n\r\n\r\n// import hooks\r\nimport { useHandleFetch } from '../../hooks';\r\n\r\n\r\n// import configs\r\nimport config from \"../../config.json\";\r\n\r\n\r\nimport {\r\n    InboxOutlined,\r\n    CheckCircleOutlined,\r\n    LoadingOutlined,\r\n    PlusOutlined\r\n} from '@ant-design/icons';\r\n\r\n\r\n// import ReactQuill from 'react-quill';\r\n// import 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport MediaLibrary from \"../../components/MediaLibrary\";\r\n\r\n\r\nconst { Dragger } = Upload;\r\n\r\n\r\n// const validationSchema = Yup.object().shape({\r\n//     name: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n// });\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n    notification.error({\r\n        message: message || 'Brand Created',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Something Went Wrong',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst initialValues = {\r\n    name: '',\r\n    description: '',\r\n    image: [],\r\n    url: '',\r\n    cover: ''\r\n}\r\n\r\n\r\n\r\ninterface Props {\r\n    addNewCategoryVisible?: any;\r\n    setAddNewCategoryVisible?: any;\r\n    themeList?: any;\r\n    setThemeList?: any;\r\n\r\n}\r\n\r\nconst AddNewBrand = ({ addNewCategoryVisible, setAddNewCategoryVisible, themeList, setThemeList }: Props) => {\r\n\r\n    const [addThemeState, handleAddthemeFetch] = useHandleFetch({}, 'addTheme', 'form');\r\n    const [myImages, setmyImages] = useState(false);\r\n    const [visibleMedia, setvisibleMedia] = useState(false);\r\n    const [myThumbnailImage, setmyThumbnailImage] = useState([]);\r\n    const [isModalOpenForThumbnail, setisModalOpenForThumbnail] = useState(false);\r\n    const [selectedThemeTypeValue, setselectedThemeTypeValue] = useState('');\r\n    const [fileList, setfileList] = useState([]);\r\n    const [uploading, setuploading] = useState(false);\r\n    const [loadingThumnail, setLoadingThumbnail] = useState(false);\r\n    const [imageUrl, setImageUrl] = useState('');\r\n    const [name, setname] = useState('')\r\n    const [thumbnailFile, setThumbnailFile] = useState('')\r\n\r\n\r\n\r\n\r\n\r\n    const handleSubmit = async () => {\r\n        setuploading(true);\r\n\r\n        const formData = new FormData();\r\n        fileList.forEach(file => {\r\n            formData.append('folder', file, file.name);\r\n        });\r\n        formData.append(\"name\", name);\r\n        formData.append('thumbnail', thumbnailFile)\r\n\r\n\r\n        const addThemeRes = await handleAddthemeFetch({\r\n            body: formData,\r\n        });\r\n\r\n\r\n        setuploading(false);\r\n        // @ts-ignore\r\n        if (addThemeRes && addThemeRes.status === 'ok') {\r\n\r\n            setThemeList([...themeList, {\r\n                id: addThemeRes['_id'] || '',\r\n                key: addThemeRes['_id'] || '',\r\n                name: addThemeRes['name'] || '',\r\n                thumbnail: addThemeRes['thumbnail'] || '',\r\n                path: addThemeRes['path'] || '',\r\n                added: addThemeRes['added'] || '',\r\n                // @ts-ignore\r\n                ...addThemeRes\r\n            }]);\r\n\r\n            setfileList([]);\r\n            setuploading(false);\r\n            openSuccessNotification('Theme Uploaded!')\r\n            setAddNewCategoryVisible(false);\r\n            setname('');\r\n            setselectedThemeTypeValue('');\r\n\r\n\r\n\r\n\r\n            setAddNewCategoryVisible(false);\r\n        }\r\n        else {\r\n            openErrorNotification('Theme upload failed, Something went wrong');\r\n        }\r\n\r\n    };\r\n\r\n\r\n\r\n\r\n    const handleCancel = (e: any) => {\r\n        setAddNewCategoryVisible(false);\r\n    };\r\n\r\n\r\n    const getisSubmitButtonDisabled = () => {\r\n        if (addThemeState.isLoading) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n\r\n\r\n\r\n    const handleImagesDelete = (id) => {\r\n        // @ts-ignore\r\n        const newImages = myImages && myImages.filter(image => {\r\n            return image.id !== id;\r\n        })\r\n\r\n        setmyImages(newImages);\r\n    }\r\n\r\n\r\n\r\n    const handleThumbnailImageDelete = (id) => {\r\n        // @ts-ignore\r\n        const newImages = myThumbnailImage && myThumbnailImage.filter(image => {\r\n            return image.id !== id;\r\n        })\r\n\r\n        if (newImages.length > 0) {\r\n            setmyThumbnailImage(newImages);\r\n\r\n        }\r\n        // @ts-ignore\r\n        else setmyThumbnailImage([]);\r\n    }\r\n\r\n\r\n    const onChangeThemeType = (value) => {\r\n        setselectedThemeTypeValue(value);\r\n    }\r\n\r\n\r\n\r\n    const uploadProps = {\r\n        //  listType: 'picture',\r\n        onRemove: file => {\r\n            setfileList(filelist => {\r\n                const index = fileList.indexOf(file);\r\n                const newFileList = fileList.slice();\r\n                newFileList.splice(index, 1);\r\n                return newFileList;\r\n            })\r\n\r\n        },\r\n        beforeUpload: file => {\r\n            setfileList(filelist => {\r\n                return [...fileList, file]\r\n            })\r\n            return false;\r\n        },\r\n        fileList,\r\n    };\r\n\r\n    const handleUpload = async () => {\r\n        const formData = new FormData();\r\n        fileList.forEach(file => {\r\n            formData.append('folder', file, file.name);\r\n        });\r\n        formData.append(\"name\", name);\r\n        formData.append('thumbnail', imageUrl)\r\n\r\n        setuploading(true);\r\n\r\n        //  const addImageToLibraryRes = awAddait handleMediaLibraryFetch({\r\n        // \tbody: formData\r\n        //   });\r\n\r\n        //   console.log('addImageToLibraryRes',addImageToLibraryRes)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n        // You can use any AJAX library you like\r\n        reqwest({\r\n            url: `${config.baseURL}/admin/theme/add`,\r\n            method: 'post',\r\n            processData: false,\r\n            data: formData,\r\n            withCredentials: true,\r\n            success: () => {\r\n                setfileList([]);\r\n                setuploading(false);\r\n                openSuccessNotification('Theme Uploaded!')\r\n                setAddNewCategoryVisible(false);\r\n                setname('');\r\n                setselectedThemeTypeValue('');\r\n                setThemeList([...themeList, {\r\n\r\n                }])\r\n                // setThemeList([...themeList, {\r\n                //     id: addCategoryRes['id'] || '',\r\n                //     key: addCategoryRes['id'] || '',\r\n                //     name: addCategoryRes['name'] || '',\r\n                //     description: addCategoryRes['description'] || '',\r\n                //     // @ts-ignore\r\n                //     ...addCategoryRes\r\n                // }])\r\n            },\r\n            error: () => {\r\n                setuploading(false);\r\n                openErrorNotification('Theme Upload failed!')\r\n                message.error('upload failed.');\r\n            },\r\n        });\r\n    };\r\n\r\n\r\n    function getBase64(img, callback) {\r\n        const reader = new FileReader();\r\n        reader.addEventListener('load', () => callback(reader.result));\r\n        reader.readAsDataURL(img);\r\n    }\r\n\r\n    function beforeUpload(file) {\r\n        const isJpgOrPng = file.type === 'image/jpeg' || file.type === 'image/png';\r\n        if (!isJpgOrPng) {\r\n            message.error('You can only upload JPG/PNG file!');\r\n        }\r\n        const isLt2M = file.size / 1024 / 1024 < 2;\r\n        if (!isLt2M) {\r\n            message.error('Image must smaller than 2MB!');\r\n        }\r\n\r\n\r\n        getBase64(file, imageUrl => {\r\n            setImageUrl(imageUrl)\r\n            setThumbnailFile(file);\r\n            setLoadingThumbnail(false)\r\n        })\r\n\r\n        return false;\r\n    }\r\n\r\n\r\n\r\n    const uploadButton = (\r\n        <div>\r\n            {loadingThumnail ? <LoadingOutlined /> : <PlusOutlined />}\r\n            <div className=\"ant-upload-text\">Upload</div>\r\n        </div>\r\n    );\r\n\r\n    return (\r\n        <>\r\n            <Modal\r\n                style={{\r\n                    top: '40px'\r\n                }}\r\n                title=\"Add New Theme\"\r\n                visible={addNewCategoryVisible}\r\n                onOk={handleSubmit}\r\n                onCancel={handleCancel}\r\n                okText='Upload Theme'\r\n                okButtonProps={{\r\n                    loading: uploading,\r\n                    htmlType: \"submit\",\r\n                    disabled: getisSubmitButtonDisabled()\r\n                }}\r\n\r\n                bodyStyle={{\r\n                    margin: '0',\r\n                    padding: '10px'\r\n                }}\r\n            >\r\n\r\n                <Input\r\n                    label='Name'\r\n                    value={name}\r\n                    name='name'\r\n                    onChange={(e: any) => setname(e.target.value)}\r\n                    isError={addThemeState.error['error']['name']}\r\n\r\n                    errorString={addThemeState.error['error']['name']}\r\n                />\r\n\r\n                <div style={{\r\n                    marginTop: '20px'\r\n                }}></div>\r\n\r\n\r\n                <h3 className='inputFieldLabel'>Thumbnail</h3>\r\n                <Upload\r\n                    name=\"avatar\"\r\n                    listType=\"picture-card\"\r\n                    className=\"avatar-uploader\"\r\n                    showUploadList={false}\r\n                    beforeUpload={beforeUpload}\r\n                    multiple={false}\r\n                >\r\n                    {imageUrl ? <img src={imageUrl} alt=\"avatar\" style={{ width: '100%' }} /> : uploadButton}\r\n                </Upload>\r\n\r\n\r\n\r\n                <div style={{\r\n                    marginTop: '3px'\r\n                }}></div>\r\n                <h3 className='inputFieldLabel'>\r\n                    Theme Folder (.zip)\r\n\t\t\t\t\t\t\t\t\t</h3>\r\n\r\n\r\n                <Dragger\r\n                    multiple={false}\r\n                    className='upload-list-inline'\r\n                    listType='picture'\r\n                    style={{\r\n                        background: '#fff'\r\n                    }}\r\n                    {...uploadProps}\r\n                >\r\n                    <p className='ant-upload-drag-icon'>\r\n                        <InboxOutlined />\r\n                    </p>\r\n                    <p className='ant-upload-text'>Click or drag file to this area to upload</p>\r\n                    <p className='ant-upload-hint'>\r\n                        Support for a single or bulk upload. Strictly prohibit from uploading company data or\r\n                        other band files\r\n\t\t\t\t\t\t\t</p>\r\n                </Dragger>\r\n\r\n                {addThemeState.error['error']['folder'] && (\r\n                    <p style={{\r\n                        color: 'rgba(255, 0, 0, 0.507)'\r\n                    }}>{addThemeState.error['error']['folder']}</p>\r\n                )}\r\n\r\n\r\n\r\n\r\n\r\n            </Modal>\r\n\r\n            <MediaLibrary\r\n                setvisible={setvisibleMedia}\r\n                visible={visibleMedia}\r\n                setmyImages={setmyImages}\r\n                isModalOpenForImages={false}\r\n                setmyThumbnailImage={setmyThumbnailImage}\r\n                isModalOpenForThumbnail={isModalOpenForThumbnail}\r\n                myThumbnailImage={myThumbnailImage}\r\n            />\r\n        </>\r\n    );\r\n};\r\n\r\nexport default AddNewBrand;\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React, {useState, useEffect} from 'react';\r\nimport {withRouter} from 'react-router-dom';\r\nimport { Button, Input,Tooltip, Modal, notification, Popconfirm,Badge} from 'antd';\r\nimport { \r\n  PlusOutlined, EditOutlined, \r\n  DeleteOutlined,EditFilled,\r\n  CheckOutlined,\r\n  CheckCircleOutlined,\r\n  CheckCircleTwoTone } from '@ant-design/icons';\r\n\r\n\r\n/// import hooks\r\nimport { useFetch, useHandleFetch } from \"../../hooks\";\r\n\r\n// import components\r\nimport { DataTableSkeleton } from \"../../components/Placeholders\";\r\nimport AddNewTheme from \"./AddNewTheme\";\r\n\r\nimport Empty from \"../../components/Empty\";\r\n\r\nconst { Search } = Input;\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t  message: message || 'Tag Created',\r\n\t  description: '',\r\n\t  icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n  };\r\n\r\n\r\n  const openErrorNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t  message: message || 'Something Went Wrong',\r\n\t  description: '',\r\n\t  icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n  };\r\n\r\n\r\n\r\ninterface Props {\r\n    history: any; \r\n}\r\n\r\nconst CustomerList = ({history}: Props) => {\r\n\r\n    const [themeList,setThemeList] = useState([]); \r\n\r\n    const [themeState, handleThemeListFetch] = useHandleFetch({}, 'themeList');\r\n    const [activeThemeState, handleActiveThemeFetch] = useHandleFetch({}, 'activeTheme');\r\n    const [updateDeleteThemeState, handleDeleteThemeFetch] = useHandleFetch({}, 'deletetheme');\r\n  \r\n\r\n    \r\n    useEffect(()=>{\r\n     const setThemes = async () => {\r\n       const themes = await handleThemeListFetch({}); \r\n       // @ts-ignore\r\n       setThemeList(themes); \r\n     }\r\n     setThemes(); \r\n    },[])\r\n\r\n\r\n\r\n\r\n  \r\n  const [addNewCategoryVisible,setAddNewCategoryVisible] = useState(false);   \r\n\r\n\r\n\r\n  const handleSearch = (value) => {\r\n    if(themeState.data.length > 0 ){\r\n      const newThemeList = themeState.data.filter(item => item.name.includes(value)); \r\n      setThemeList(newThemeList); \r\n    }\r\n     \r\n  }\r\n\r\n\r\n\r\n\r\n  const handleActiveTheme = async (id) => {\r\n    const activeThemeRes = await handleActiveThemeFetch({\r\n      urlOptions: {\r\n        placeHolders: {\r\n          id,\r\n        }\r\n        }\r\n      });\r\n\r\n        // @ts-ignore\r\n  if(activeThemeRes && activeThemeRes.status === 'ok'){\r\n    openSuccessNotification('Theme activated'); \r\n   \r\n  }\r\n  else {\r\n    openErrorNotification(\"Couldn't activate the theme, Something went wrong\")\r\n  }\r\n     \r\n     \r\n  }\r\n\r\n\r\n  const handleDeleteTheme = async (id) => {\r\n    const deleteThemeRes = await handleDeleteThemeFetch({\r\n      urlOptions: {\r\n        placeHolders: {\r\n          id,\r\n        }\r\n        }\r\n      });\r\n\r\n        // @ts-ignore\r\n  if(deleteThemeRes && deleteThemeRes.status === 'ok'){\r\n    openSuccessNotification('Theme Deleted'); \r\n    const newThemeList =  themeList.filter(item => item.id !== id);\r\n    setThemeList(newThemeList); \r\n  }\r\n  else {\r\n  openErrorNotification(\"Couldn't delete, Something went wrong\")\r\n  }\r\n  }\r\n\r\n\r\n\r\n\r\n\treturn (\r\n\t\t<>\r\n    {/* <h2 className='containerPageTitle'>\r\n      Categories\r\n    </h2> */}\r\n    <div className='categoryListContainer'>\r\n            <div className='categoryListContainer__header'>\r\n           \r\n\r\n          <div className='categoryListContainer__header-searchBar'>\r\n          <h2 className='categoryListContainer__header-title'>\r\n\t\t Themes\r\n \r\n            </h2>\r\n\r\n\r\n          <Search\r\n            enterButton={false}\r\n            className='searchbarClassName'\r\n          placeholder=\"search themes..\"\r\n          onSearch={value => handleSearch(value)}\r\n          // style={{ width: 300 }}\r\n        />\r\n          </div>\r\n            <Button\r\n          // type=\"primary\"\r\n          className='btnPrimaryClassNameoutline'\r\n          icon={<PlusOutlined />}\r\n          onClick={() => setAddNewCategoryVisible(true)}\r\n        >\r\n        Add New\r\n            \r\n            </Button>\r\n            </div>\r\n\r\n            <div className='categoryListContainer__afterHeader'>\r\n\r\n            </div>\r\n\r\n     \r\n\t\t\t\r\n\t\t\t<div className='categoryListContainer__categoryList'>\r\n        {themeState.done && themeList.length > 0 && (\r\n   \r\n   <div className='categoryListContainer__bodyContainerList'>\r\n\t\t\r\n          {themeList.map(theme => {\r\n            return (\r\n              <div className='categoryListContainer__bodyContainerList-item'>\r\n              {/* <Badge count={<CheckCircleTwoTone style={{ color: '#3FA3FF' }} />}>\r\n               \r\n                  </Badge> */}\r\n                  <div className='categoryListContainer__bodyContainerList-item-top'>\r\n                  <img\r\n                    alt='theme img'\r\n                    src={theme.thumbnail}\r\n                  />\r\n                </div>\r\n                <div className='categoryListContainer__bodyContainerList-item-body'>\r\n                  <h3> {theme.name} </h3>\r\n     \r\n                  <div\r\n                    style={{\r\n                      display: 'flex',\r\n                      justifyContent: 'space-between'\r\n                    }}\r\n                  >\r\n                    <Tooltip placement='top' title='Active this theme'>\r\n                    <Button\r\n                  \r\n                   size='small'\r\n                   className='btnPrimaryClassNameoutline'\r\n                   icon={<CheckOutlined />}\r\n                   onClick={() => handleActiveTheme(theme.id)}\r\n                  >\r\n                    <span style={{\r\n                      fontSize:'11px'\r\n                    }}>\r\n                    Set Active\r\n                 \r\n                    </span>\r\n                \r\n                 </Button>\r\n     \r\n     \r\n                      \r\n                    </Tooltip>\r\n     \r\n                    <Tooltip placement='top' title='Delete theme'>\r\n                    <Popconfirm \r\n               \r\n               onConfirm={() => handleDeleteTheme(theme.id)}\r\n               title=\"Are you sure？\" okText=\"Yes\" cancelText=\"No\">\r\n           \r\n           <Button\r\n                        size='small'\r\n                        type='link'\r\n                        danger={true}\r\n                        icon={<DeleteOutlined />}\r\n                      >\r\n                        \r\n                        </Button>\r\n           </Popconfirm>\r\n\r\n\r\n                     \r\n     \r\n                        \r\n                        </Tooltip>\r\n                      </div>\r\n                    </div>\r\n                </div>\r\n            )\r\n          })}\r\n         </div>\r\n\t\t)}\r\n\r\n\r\n        {themeState.isLoading && <DataTableSkeleton />}\r\n\r\n        {themeState.done && !(themeList.length > 0) && (\r\n        <Empty title='No Theme found'  />\r\n        )}\r\n        \r\n\r\n\t\t\t</div>\r\n\t\t</div>\r\n\r\n\r\n    {themeState.done && \r\n    <AddNewTheme \r\n          addNewCategoryVisible={addNewCategoryVisible} \r\n          setAddNewCategoryVisible={setAddNewCategoryVisible}\r\n          themeList={themeState.data}\r\n          setThemeList={setThemeList}\r\n           />}\r\n    </>\r\n\t);\r\n};\r\n\r\nexport default withRouter(CustomerList);\r\n","import React from 'react'\r\n\r\ninterface Props {\r\n    \r\n}\r\n\r\nconst Image = (props: Props) => {\r\n    return (\r\n        <div>\r\n            Image\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Image\r\n","import React from 'react';\r\n\r\ninterface Props {}\r\n\r\nconst Invoice = (props: Props) => {\r\n\treturn <div>Invoice</div>;\r\n};\r\n\r\nexport default Invoice;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n\r\nimport { useHandleFetch } from '../../hooks';\r\n// import third party ui lib\r\nimport { notification, Button } from 'antd';\r\n\r\nimport {\r\n    CheckCircleOutlined\r\n} from '@ant-design/icons';\r\n\r\n\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport MediaLibrary from \"../../components/MediaLibrary\";\r\n\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    title: Yup.string()\r\n        .label('Title')\r\n        .required('Site title can not be empty'),\r\n    adminEmail: Yup.string()\r\n        .label('Admin Email')\r\n        .required('Admin Email can not be empty'),\r\n\r\n});\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Site Info Updated',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Something Went Wrong',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst initialValues = {\r\n    title: '',\r\n    adminName: '',\r\n    adminEmail: '',\r\n}\r\n\r\n\r\n\r\ninterface Props {\r\n\r\n\r\n}\r\n\r\nconst UpdateSiteinfo = ({ }: Props) => {\r\n\r\n    const [UpdateSiteSettingsState, handleUpdateSiteSettingsFetch] = useHandleFetch({}, 'updateSiteSettings');\r\n    const [siteSettingsState, handlSiteSettingsFetch] = useHandleFetch({}, 'siteSettings');\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        const getSiteSettings = async () => {\r\n            const siteSettingsRes = await handlSiteSettingsFetch({});\r\n\r\n            // console.log('siteSettingsRes', siteSettingsRes)\r\n        }\r\n        getSiteSettings();\r\n    }, [UpdateSiteSettingsState])\r\n\r\n\r\n    // console.log('siteSettingsState', siteSettingsState);\r\n\r\n    const handleSubmit = async (values: any, actions: any) => {\r\n\r\n\r\n        const addSiteInfoRes = await handleUpdateSiteSettingsFetch({\r\n\r\n            body: {\r\n                title: values.title,\r\n                adminName: values.adminName,\r\n                adminEmail: values.adminEmail,\r\n            },\r\n        });\r\n\r\n        // @ts-ignore\r\n        if (addSiteInfoRes && addSiteInfoRes.status === 'ok') {\r\n            openSuccessNotification();\r\n\r\n\r\n            // setBrandList([...brandList, {\r\n            //     id: addBrandRes['id'] || '',\r\n            //     key: addBrandRes['id'] || '',\r\n            //     name: addBrandRes['name'] || '',\r\n            //     description: addBrandRes['description'] || '',\r\n            //     // @ts-ignore\r\n            //     ...addBrandRes\r\n            // }]);\r\n\r\n            actions.resetForm();\r\n        }\r\n        else {\r\n            openErrorNotification();\r\n        }\r\n\r\n\r\n\r\n\r\n        actions.setSubmitting(false);\r\n\r\n    };\r\n\r\n\r\n\r\n\r\n\r\n    const getisSubmitButtonDisabled = (values, isValid) => {\r\n        if (!values.title || !values.adminEmail || !isValid) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    const getInitialValues = () => {\r\n        if (siteSettingsState.data && Object.keys(siteSettingsState.data).length > 0) {\r\n            return { ...siteSettingsState.data }\r\n        }\r\n        else {\r\n            return initialValues\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n    return (\r\n        <Formik\r\n            onSubmit={(values, actions) => handleSubmit(values, actions)}\r\n            enableReinitialize={true}\r\n            initialValues={\r\n                getInitialValues()\r\n            }\r\n        >\r\n            {({\r\n                handleChange,\r\n                values,\r\n                handleSubmit,\r\n                errors,\r\n                isValid,\r\n                isSubmitting,\r\n                touched,\r\n                handleBlur,\r\n                setFieldTouched,\r\n                handleReset,\r\n            }) => (\r\n                    <>\r\n                        <div className='siteInfoContainer__item'>\r\n                            <div className='siteInfoContainer__item-item'>\r\n                                <Input\r\n                                    label='Site Title'\r\n                                    value={values.title}\r\n                                    name='title'\r\n                                    isError={(touched.title && errors.title) ||\r\n                                        (!isSubmitting && UpdateSiteSettingsState.error['error']['title'])}\r\n\r\n                                    errorString={(touched.title && errors.title) ||\r\n                                        (!isSubmitting && UpdateSiteSettingsState.error['error']['title'])}\r\n                                    onChange={(e: any) => {\r\n                                        handleChange(e);\r\n                                        setFieldTouched('title');\r\n                                    }}\r\n                                />\r\n                            </div>\r\n                            <div className='siteInfoContainer__item-item'>\r\n                                <Input\r\n                                    label='Admin Name'\r\n                                    value={values.adminName}\r\n                                    name='adminName'\r\n                                    isError={(touched.adminName && errors.adminName) ||\r\n                                        (!isSubmitting && UpdateSiteSettingsState.error['error']['adminName'])}\r\n\r\n                                    errorString={(touched.adminName && errors.adminName) ||\r\n                                        (!isSubmitting && UpdateSiteSettingsState.error['error']['adminName'])}\r\n                                    onChange={(e: any) => {\r\n                                        handleChange(e);\r\n                                        setFieldTouched('adminName');\r\n                                    }}\r\n                                />\r\n                            </div>\r\n                            <div className='siteInfoContainer__item-item-left'>\r\n                                <Input\r\n                                    label='Admin Email'\r\n                                    value={values.adminEmail}\r\n                                    name='adminEmail'\r\n                                    isError={(touched.adminEmail && errors.adminEmail) ||\r\n                                        (!isSubmitting && UpdateSiteSettingsState.error['error']['adminEmail'])}\r\n\r\n                                    errorString={(touched.adminEmail && errors.adminEmail) ||\r\n                                        (!isSubmitting && UpdateSiteSettingsState.error['error']['adminEmail'])}\r\n                                    onChange={(e: any) => {\r\n                                        handleChange(e);\r\n                                        setFieldTouched('adminEmail');\r\n                                    }}\r\n                                />\r\n\r\n                            </div>\r\n\r\n                        </div>\r\n\r\n\r\n                        <div style={{\r\n                            marginTop: '10px'\r\n                        }}></div>\r\n\r\n                        <Button\r\n\r\n                            onClick={(e: any) => handleSubmit(e)}\r\n                            loading={isSubmitting}\r\n                            disabled={getisSubmitButtonDisabled(values, isValid)}\r\n                            className='btnPrimaryClassNameoutline'\r\n                        >\r\n                            Update Admin Info\r\n                            </Button>\r\n\r\n                        <div style={{\r\n                            marginBottom: '10px'\r\n                        }}></div>\r\n\r\n                    </>\r\n                )}\r\n        </Formik >\r\n\r\n\r\n\r\n\r\n    );\r\n};\r\n\r\nexport default UpdateSiteinfo;\r\n//","import React, { useEffect } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n\r\nimport { useHandleFetch } from '../../hooks';\r\n// import third party ui lib\r\nimport { notification, Button } from 'antd';\r\n\r\nimport {\r\n    CheckCircleOutlined\r\n} from '@ant-design/icons';\r\n\r\n\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\n// import MediaLibrary from \"../../components/MediaLibrary\";\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    invoiceTitle: Yup.string().label('Title').required('Invoice title is required')\r\n});\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Site Info Updated',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Something Went Wrong',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst initialValues = {\r\n    invoiceTitle: \"\",\r\n    address: \"\",\r\n    phone: \"\",\r\n    email: \"\",\r\n    additionalText: \"\"\r\n};\r\n\r\n\r\n\r\n\r\ninterface Props {\r\n\r\n\r\n}\r\n\r\nconst UpdateSiteinfo = ({ }: Props) => {\r\n\r\n    const [updateInfovSettingsState, handleUpdateInvoiceSettingsFetch] = useHandleFetch({}, 'updateInvoiceSettings');\r\n    const [InvoiceSettingsState, handlSiteInvoiceSettingsFetch] = useHandleFetch({}, 'invoiceSettingsDetail');\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        const getSiteSettings = async () => {\r\n            const siteSettingsRes = await handlSiteInvoiceSettingsFetch({});\r\n\r\n            // console.log('siteSettingsRes', siteSettingsRes)\r\n        }\r\n        getSiteSettings();\r\n    }, [updateInfovSettingsState])\r\n\r\n\r\n\r\n    const handleSubmit = async (values: any, actions: any) => {\r\n\r\n        const updateInvoiceRes = await handleUpdateInvoiceSettingsFetch({\r\n\r\n            body: {\r\n                invoiceTitle: values.invoiceTitle,\r\n                address: values.address,\r\n                phone: values.phone,\r\n                email: values.email,\r\n                additionalText: values.additionalText\r\n\r\n            },\r\n        });\r\n\r\n        // @ts-ignore\r\n        if (updateInvoiceRes && updateInvoiceRes.status === 'ok') {\r\n            openSuccessNotification();\r\n\r\n\r\n            // setBrandList([...brandList, {\r\n            //     id: addBrandRes['id'] || '',\r\n            //     key: addBrandRes['id'] || '',\r\n            //     name: addBrandRes['name'] || '',\r\n            //     description: addBrandRes['description'] || '',\r\n            //     // @ts-ignore\r\n            //     ...addBrandRes\r\n            // }]);\r\n\r\n            actions.resetForm();\r\n        }\r\n        else {\r\n            openErrorNotification();\r\n        }\r\n\r\n\r\n        actions.setSubmitting(false);\r\n\r\n    };\r\n\r\n\r\n\r\n\r\n\r\n    const getisSubmitButtonDisabled = (values, isValid) => {\r\n        if (!values.invoiceTitle || !isValid) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n\r\n\r\n    const getInitialValues = () => {\r\n        if (InvoiceSettingsState.data && Object.keys(InvoiceSettingsState.data).length > 0) {\r\n            return { ...InvoiceSettingsState.data }\r\n        }\r\n        else {\r\n            return initialValues\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <Formik\r\n            onSubmit={(values, actions) => handleSubmit(values, actions)}\r\n            validationSchema={validationSchema}\r\n            enableReinitialize={true}\r\n            initialValues={\r\n                getInitialValues()\r\n            }\r\n        >\r\n            {({\r\n                handleChange,\r\n                values,\r\n                handleSubmit,\r\n                errors,\r\n                isValid,\r\n                isSubmitting,\r\n                touched,\r\n                handleBlur,\r\n                setFieldTouched,\r\n                handleReset,\r\n            }) => (\r\n                    <>\r\n                        <div className='siteInfoContainer__item'>\r\n                            <div className='siteInfoContainer__item-item'>\r\n                                <Input\r\n                                    label='Company Name'\r\n                                    value={values.invoiceTitle}\r\n                                    name='invoiceTitle'\r\n                                    isError={(touched.invoiceTitle && errors.invoiceTitle) ||\r\n                                        (!isSubmitting && updateInfovSettingsState.error['error']['invoiceTitle'])}\r\n\r\n                                    errorString={(touched.invoiceTitle && errors.invoiceTitle) ||\r\n                                        (!isSubmitting && updateInfovSettingsState.error['error']['invoiceTitle'])}\r\n                                    onChange={(e: any) => {\r\n                                        handleChange(e);\r\n                                        setFieldTouched('invoiceTitle');\r\n                                    }}\r\n                                />\r\n                            </div>\r\n                            <div className='siteInfoContainer__item-item'>\r\n                                <Input\r\n                                    label='Phone Number'\r\n                                    value={values.phone}\r\n                                    name='phone'\r\n                                    isError={(touched.phone && errors.phone) ||\r\n                                        (!isSubmitting && updateInfovSettingsState.error['error']['phone'])}\r\n\r\n                                    errorString={(touched.phone && errors.phone) ||\r\n                                        (!isSubmitting && updateInfovSettingsState.error['error']['phone'])}\r\n                                    onChange={(e: any) => {\r\n                                        handleChange(e);\r\n                                        setFieldTouched('phone');\r\n                                    }}\r\n                                />\r\n                            </div>\r\n                            <div className='siteInfoContainer__item-item'>\r\n                                <Input\r\n                                    label='Email'\r\n                                    value={values.email}\r\n                                    name='email'\r\n                                    isError={(touched.email && errors.email) ||\r\n                                        (!isSubmitting && updateInfovSettingsState.error['error']['email'])}\r\n\r\n                                    errorString={(touched.email && errors.email) ||\r\n                                        (!isSubmitting && updateInfovSettingsState.error['error']['email'])}\r\n                                    onChange={(e: any) => {\r\n                                        handleChange(e);\r\n                                        setFieldTouched('email');\r\n                                    }}\r\n                                />\r\n\r\n                            </div>\r\n\r\n                            <div className='siteInfoContainer__item-item'>\r\n                                <Input\r\n                                    label='Additional Text'\r\n                                    value={values.additionalText}\r\n                                    name='additionalText'\r\n                                    isError={(touched.additionalText && errors.additionalText) ||\r\n                                        (!isSubmitting && updateInfovSettingsState.error['error']['additionalText'])}\r\n\r\n                                    errorString={(touched.additionalText && errors.additionalText) ||\r\n                                        (!isSubmitting && updateInfovSettingsState.error['error']['additionalText'])}\r\n                                    onChange={(e: any) => {\r\n                                        handleChange(e);\r\n                                        setFieldTouched('additionalText');\r\n                                    }}\r\n                                />\r\n\r\n                            </div>\r\n\r\n                            <div className='siteInfoContainer__item-item-left'>\r\n                                <TextArea\r\n                                    label='Address'\r\n                                    value={values.address}\r\n                                    name='address'\r\n                                    isError={(touched.address && errors.address) ||\r\n                                        (!isSubmitting && updateInfovSettingsState.error['error']['address'])}\r\n\r\n                                    errorString={(touched.address && errors.address) ||\r\n                                        (!isSubmitting && updateInfovSettingsState.error['error']['address'])}\r\n                                    onChange={(e: any) => {\r\n                                        handleChange(e);\r\n                                        setFieldTouched('address');\r\n                                    }}\r\n                                />\r\n\r\n                            </div>\r\n\r\n                        </div>\r\n\r\n\r\n                        <div style={{\r\n                            marginTop: '10px'\r\n                        }}></div>\r\n\r\n                        <Button\r\n\r\n                            onClick={(e: any) => handleSubmit(e)}\r\n                            loading={isSubmitting}\r\n                            disabled={getisSubmitButtonDisabled(values, isValid)}\r\n                            className='btnPrimaryClassNameoutline'\r\n                        >\r\n                            Update Admin Info\r\n                            </Button>\r\n\r\n                        <div style={{\r\n                            marginBottom: '10px'\r\n                        }}></div>\r\n                    </>\r\n                )}\r\n        </Formik>\r\n\r\n\r\n\r\n\r\n    );\r\n};\r\n\r\nexport default UpdateSiteinfo;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n\r\nimport { useHandleFetch } from '../../hooks';\r\n// import third party ui lib\r\nimport { notification, Button } from 'antd';\r\n\r\nimport {\r\n    CheckCircleOutlined\r\n} from '@ant-design/icons';\r\n\r\n\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport MediaLibrary from \"../../components/MediaLibrary\";\r\n\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    title: Yup.string()\r\n        .label('Title')\r\n        .required('Site title can not be empty'),\r\n    adminEmail: Yup.string()\r\n        .label('Admin Email')\r\n        .required('Admin Email can not be empty'),\r\n\r\n});\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Site Info Updated',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Something Went Wrong',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst initialValues = {\r\n    metaTitle: '',\r\n    metaTags: '',\r\n    metaDescription: ''\r\n}\r\n\r\n\r\n\r\ninterface Props {\r\n\r\n\r\n}\r\n\r\nconst UpdateSiteSEO = ({ }: Props) => {\r\n\r\n    const [UpdateSiteSettingsState, handleUpdateSiteSettingsFetch] = useHandleFetch({}, 'updateSiteSEO');\r\n    const [siteSettingsState, handlSiteSettingsFetch] = useHandleFetch({}, 'getSiteSEO');\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        const getSiteSettings = async () => {\r\n            const siteSettingsRes = await handlSiteSettingsFetch({});\r\n\r\n        }\r\n        getSiteSettings();\r\n    }, [UpdateSiteSettingsState])\r\n\r\n\r\n    // console.log('siteSettingsState', siteSettingsState);\r\n\r\n    const handleSubmit = async (values: any, actions: any) => {\r\n\r\n\r\n        const addSiteInfoRes = await handleUpdateSiteSettingsFetch({\r\n            body: {\r\n                metaTitle: values.metaTitle,\r\n                metaTags: values.metaTags,\r\n                metaDescription: values.metaDescription\r\n            },\r\n        });\r\n\r\n        // @ts-ignore\r\n        if (addSiteInfoRes && addSiteInfoRes.status === 'ok') {\r\n            openSuccessNotification();\r\n\r\n\r\n            // setBrandList([...brandList, {\r\n            //     id: addBrandRes['id'] || '',\r\n            //     key: addBrandRes['id'] || '',\r\n            //     name: addBrandRes['name'] || '',\r\n            //     description: addBrandRes['description'] || '',\r\n            //     // @ts-ignore\r\n            //     ...addBrandRes\r\n            // }]);\r\n\r\n            actions.resetForm();\r\n        }\r\n        else {\r\n            openErrorNotification();\r\n        }\r\n\r\n\r\n\r\n\r\n        actions.setSubmitting(false);\r\n\r\n    };\r\n\r\n\r\n\r\n\r\n\r\n    const getisSubmitButtonDisabled = (values, isValid) => {\r\n        if (!values.metaTitle || !values.metaTags || !isValid) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    const getInitialValues = () => {\r\n        if (siteSettingsState.data && Object.keys(siteSettingsState.data).length > 0) {\r\n            return { ...siteSettingsState.data }\r\n        }\r\n        else {\r\n            return initialValues\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n    return (\r\n        <Formik\r\n            onSubmit={(values, actions) => handleSubmit(values, actions)}\r\n            enableReinitialize={true}\r\n            initialValues={\r\n                getInitialValues()\r\n            }\r\n        >\r\n            {({\r\n                handleChange,\r\n                values,\r\n                handleSubmit,\r\n                errors,\r\n                isValid,\r\n                isSubmitting,\r\n                touched,\r\n                handleBlur,\r\n                setFieldTouched,\r\n                handleReset,\r\n            }) => (\r\n                    <>\r\n                        <div className='siteInfoContainer__item'>\r\n                            <div className='siteInfoContainer__item-item'>\r\n                                <Input\r\n                                    label='Meta Title'\r\n                                    value={values.metaTitle}\r\n                                    name='metaTitle'\r\n                                    isError={(touched.metaTitle && errors.metaTitle) ||\r\n                                        (!isSubmitting && UpdateSiteSettingsState.error['error']['metaTitle'])}\r\n\r\n                                    errorString={(touched.metaTitle && errors.metaTitle) ||\r\n                                        (!isSubmitting && UpdateSiteSettingsState.error['error']['metaTitle'])}\r\n                                    onChange={(e: any) => {\r\n                                        handleChange(e);\r\n                                        setFieldTouched('metaTitle');\r\n                                    }}\r\n                                />\r\n                            </div>\r\n                            <div className='siteInfoContainer__item-item'>\r\n                                <Input\r\n                                    label='Meta Tags'\r\n                                    value={values.metaTags}\r\n                                    name='metaTags'\r\n                                    isError={(touched.metaTags && errors.metaTags) ||\r\n                                        (!isSubmitting && UpdateSiteSettingsState.error['error']['metaTags'])}\r\n\r\n                                    errorString={(touched.metaTags && errors.metaTags) ||\r\n                                        (!isSubmitting && UpdateSiteSettingsState.error['error']['metaTags'])}\r\n                                    onChange={(e: any) => {\r\n                                        handleChange(e);\r\n                                        setFieldTouched('metaTags');\r\n                                    }}\r\n                                />\r\n                            </div>\r\n                            <div className='siteInfoContainer__item-item-left'>\r\n                            <TextArea\r\n                                    label='Meta Description'\r\n                                    value={values.metaDescription}\r\n                                    name='metaDescription'\r\n                                    isError={(touched.metaDescription && errors.metaDescription) ||\r\n                                        (!isSubmitting && UpdateSiteSettingsState.error['error']['metaDescription'])}\r\n\r\n                                    errorString={(touched.metaDescription && errors.metaDescription) ||\r\n                                        (!isSubmitting && UpdateSiteSettingsState.error['error']['metaDescription'])}\r\n                                    onChange={(e: any) => {\r\n                                        handleChange(e);\r\n                                        setFieldTouched('metaDescription');\r\n                                    }}\r\n                                />\r\n\r\n                            </div>\r\n\r\n                        </div>\r\n\r\n\r\n                        <div style={{\r\n                            marginTop: '10px'\r\n                        }}></div>\r\n\r\n                        <Button\r\n\r\n                            onClick={(e: any) => handleSubmit(e)}\r\n                            loading={isSubmitting}\r\n                            // disabled={getisSubmitButtonDisabled(values, isValid)}\r\n                            className='btnPrimaryClassNameoutline'\r\n                        >\r\n                            Update Site SEO\r\n                            </Button>\r\n\r\n                        <div style={{\r\n                            marginBottom: '10px'\r\n                        }}></div>\r\n\r\n                    </>\r\n                )}\r\n        </Formik >\r\n\r\n\r\n\r\n\r\n    );\r\n};\r\n\r\nexport default UpdateSiteSEO;\r\n//","import React, { useState, useEffect } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n\r\nimport { useHandleFetch } from '../../hooks';\r\n// import third party ui lib\r\nimport { notification, Button } from 'antd';\r\n\r\nimport {\r\n    CheckCircleOutlined\r\n} from '@ant-design/icons';\r\n\r\n\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport MediaLibrary from \"../../components/MediaLibrary\";\r\n\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    newPassword: Yup.string()\r\n    .label('New Password')\r\n    .required()\r\n    .min(6, 'New Password must have at least 6 characters'),\r\n  newPassword2: Yup.string()\r\n    .label('Confirm New password')\r\n    .required()\r\n    .min(6, 'Confirm New password must have at least 6 characters')\r\n    .oneOf(\r\n      [Yup.ref('newPassword'), null],\r\n      'Confirm new password must match to new password'\r\n    ),\r\n});\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Site Info Updated',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Something Went Wrong',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst initialValues = {\r\n    name: '',\r\n    phone: '',\r\n    email: '',\r\n    newPass: '',\r\n    password:'',\r\n    newPassword: '',\r\n    newPassword2: '',\r\n}\r\n\r\n\r\n\r\ninterface Props {\r\n\r\n\r\n}\r\n\r\nconst ChangeAdminPassword = ({ }: Props) => {\r\n\r\n    const [UpdateSiteSettingsState, handleUpdateSiteSettingsFetch] = useHandleFetch({}, 'updateAdminCredential');\r\n    const [siteSettingsState, handlSiteSettingsFetch] = useHandleFetch({}, 'getAdminCredential');\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        const getSiteSettings = async () => {\r\n            const siteSettingsRes = await handlSiteSettingsFetch({});\r\n\r\n        }\r\n        getSiteSettings();\r\n    }, [UpdateSiteSettingsState]);\r\n\r\n\r\n\r\n    console.log('siteSettingsState',siteSettingsState)\r\n\r\n    // console.log('siteSettingsState', siteSettingsState);\r\n\r\n    const handleSubmit = async (values: any, actions: any) => {\r\n\r\n\r\n        const addSiteInfoRes = await handleUpdateSiteSettingsFetch({\r\n            body: {\r\n                name: values.name,\r\n                phone: values.phone,\r\n                email: values.email,\r\n                password: values.password, \r\n                newPass: values.newPassword,\r\n                newPassRepeat: values.newPassword2,\r\n            },\r\n        });\r\n\r\n        // @ts-ignore\r\n        if (addSiteInfoRes && addSiteInfoRes.status === 'ok') {\r\n            openSuccessNotification();\r\n\r\n\r\n            // setBrandList([...brandList, {\r\n            //     id: addBrandRes['id'] || '',\r\n            //     key: addBrandRes['id'] || '',\r\n            //     name: addBrandRes['name'] || '',\r\n            //     description: addBrandRes['description'] || '',\r\n            //     // @ts-ignore\r\n            //     ...addBrandRes\r\n            // }]);\r\n\r\n            actions.resetForm();\r\n        }\r\n        else {\r\n            openErrorNotification();\r\n        }\r\n\r\n\r\n\r\n\r\n        actions.setSubmitting(false);\r\n\r\n    };\r\n\r\n\r\n\r\n\r\n    const getInitialValues = () => {\r\n        if (siteSettingsState.data && Object.keys(siteSettingsState.data).length > 0) {\r\n            return { ...siteSettingsState.data }\r\n        }\r\n        else {\r\n            return initialValues\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <Formik\r\n            onSubmit={(values, actions) => handleSubmit(values, actions)}\r\n            enableReinitialize={true}\r\n            initialValues={\r\n                getInitialValues()\r\n            }\r\n        >\r\n            {({\r\n                handleChange,\r\n                values,\r\n                handleSubmit,\r\n                errors,\r\n                isValid,\r\n                isSubmitting,\r\n                touched,\r\n                handleBlur,\r\n                setFieldTouched,\r\n                handleReset,\r\n            }) => (\r\n                    <>\r\n\r\n                        <div className='siteInfoContainer__item'>\r\n                            <div className='siteInfoContainer__item-item'>\r\n                                <Input\r\n                                    type='text'\r\n                                    label='Name'\r\n                                    value={values.name}\r\n                                    name='name'\r\n                                    isError={(touched.name && errors.name) ||\r\n                                        (!isSubmitting && UpdateSiteSettingsState.error['error']['name'])}\r\n\r\n                                    errorString={(touched.name && errors.name) ||\r\n                                        (!isSubmitting && UpdateSiteSettingsState.error['error']['name'])}\r\n                                    onChange={(e: any) => {\r\n                                        handleChange(e);\r\n                                        setFieldTouched('name');\r\n                                    }}\r\n                                />\r\n                            </div>\r\n                            <div className='siteInfoContainer__item-item'>\r\n                                <Input\r\n                                    type='text'\r\n                                    label='Phone'\r\n                                    value={values.phone}\r\n                                    name='phone'\r\n                                    isError={(touched.phone && errors.phone) ||\r\n                                        (!isSubmitting && UpdateSiteSettingsState.error['error']['phone'])}\r\n\r\n                                    errorString={(touched.phone && errors.phone) ||\r\n                                        (!isSubmitting && UpdateSiteSettingsState.error['error']['phone'])}\r\n                                    onChange={(e: any) => {\r\n                                        handleChange(e);\r\n                                        setFieldTouched('phone');\r\n                                    }}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div style={{\r\n                            width: '90%',\r\n                            paddingRight: '30px'\r\n                        }}>\r\n                                     <Input\r\n                                    type='text'\r\n                                    label='Email'\r\n                                    value={values.email}\r\n                                    name='email'\r\n                                    isError={(touched.email && errors.email) ||\r\n                                        (!isSubmitting && UpdateSiteSettingsState.error['error']['email'])}\r\n\r\n                                    errorString={(touched.email && errors.email) ||\r\n                                        (!isSubmitting && UpdateSiteSettingsState.error['error']['email'])}\r\n                                    onChange={(e: any) => {\r\n                                        handleChange(e);\r\n                                        setFieldTouched('email');\r\n                                    }}\r\n                                />\r\n                        </div>\r\n\r\n\r\n                        <div style={{\r\n                            width: '90%',\r\n                            paddingRight: '30px'\r\n                        }}>\r\n                                    <Input\r\n                                    type='password'\r\n                                    label='Password (Enter current password to update credentials)'\r\n                                    value={values.password}\r\n                                    name='password'\r\n                                    isError={(touched.password && errors.password) ||\r\n                                        (!isSubmitting && UpdateSiteSettingsState.error['error']['password'])}\r\n\r\n                                    errorString={(touched.password && errors.password) ||\r\n                                        (!isSubmitting && UpdateSiteSettingsState.error['error']['password'])}\r\n                                    onChange={(e: any) => {\r\n                                        handleChange(e);\r\n                                        setFieldTouched('password');\r\n                                    }}\r\n                                />\r\n                        </div>\r\n\r\n\r\n                        <div className='siteInfoContainer__item'>\r\n                            <div className='siteInfoContainer__item-item'>\r\n                                <Input\r\n                                    type='password'\r\n                                    label='New Password'\r\n                                    value={values.newPassword}\r\n                                    name='newPassword'\r\n                                    isError={(touched.newPassword && errors.newPassword) ||\r\n                                        (!isSubmitting && UpdateSiteSettingsState.error['error']['newPassword'])}\r\n\r\n                                    errorString={(touched.newPassword && errors.newPassword) ||\r\n                                        (!isSubmitting && UpdateSiteSettingsState.error['error']['newPassword'])}\r\n                                    onChange={(e: any) => {\r\n                                        handleChange(e);\r\n                                        setFieldTouched('newPassword');\r\n                                    }}\r\n                                />\r\n                            </div>\r\n                            <div className='siteInfoContainer__item-item'>\r\n                                <Input\r\n                                    type='password'\r\n                                    label='Confirm New Password'\r\n                                    value={values.newPassword2}\r\n                                    name='newPassword2'\r\n                                    isError={(touched.newPassword2 && errors.newPassword2) ||\r\n                                        (!isSubmitting && UpdateSiteSettingsState.error['error']['newPassword2'])}\r\n\r\n                                    errorString={(touched.newPassword2 && errors.newPassword2) ||\r\n                                        (!isSubmitting && UpdateSiteSettingsState.error['error']['newPassword2'])}\r\n                                    onChange={(e: any) => {\r\n                                        handleChange(e);\r\n                                        setFieldTouched('newPassword2');\r\n                                    }}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n\r\n\r\n                        <div style={{\r\n                            marginTop: '10px'\r\n                        }}></div>\r\n\r\n                        <Button\r\n\r\n                            onClick={(e: any) => handleSubmit(e)}\r\n                            loading={isSubmitting}\r\n                            // disabled={getisSubmitButtonDisabled(values, isValid)}\r\n                            className='btnPrimaryClassNameoutline'\r\n                        >\r\n                          Update Credentials\r\n                            </Button>\r\n\r\n                        <div style={{\r\n                            marginBottom: '10px'\r\n                        }}></div>\r\n\r\n                    </>\r\n                )}\r\n        </Formik >\r\n\r\n\r\n\r\n\r\n    );\r\n};\r\n\r\nexport default ChangeAdminPassword;\r\n//","import React, { useState } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n\r\nimport { useHandleFetch } from '../../hooks';\r\n// import third party ui lib\r\nimport { Upload, message, Switch, Select, Button, notification, Modal, Tabs, Tooltip, } from 'antd';\r\n\r\n\r\nimport {\r\n\tFileOutlined,\r\n\tInboxOutlined,\r\n\tFileAddOutlined,\r\n\tDeleteOutlined,\r\n\tCheckCircleOutlined,\r\n\tPlusOutlined,\r\n\tFileImageFilled,\r\n\tCheckOutlined,\r\n\tCloseOutlined,\r\n\tLoadingOutlined,\r\n\tInfoCircleOutlined\r\n} from '@ant-design/icons';\r\n\r\n\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport MediaLibrary from \"../../components/MediaLibrary\";\r\nimport AdminSiteInfo from \"./AdminSiteInfo\";\r\nimport SiteInfoInvoice from \"./SiteInfoInvoice\";\r\nimport SiteSeo from \"./SiteSeo\";\r\nimport ChangeAdminPassword from \"./ChangeAdminPassword\";\r\n\r\n\r\n// import config\r\nimport config from \"../../config.json\";\r\n\r\nconst validationSchema = Yup.object().shape({\r\n\tname: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\nconst { TabPane } = Tabs;\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t\tmessage: message || 'Brand Created',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t\tmessage: message || 'Something Went Wrong',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n};\r\n\r\n\r\nconst initialValues = {\r\n\tname: '',\r\n\tdescription: '',\r\n\timage: [],\r\n\turl: '',\r\n\tcover: ''\r\n}\r\n\r\n\r\n\r\ninterface Props {\r\n\taddNewCategoryVisible?: any;\r\n\tsetAddNewCategoryVisible?: any;\r\n\tbrandList?: any;\r\n\tsetBrandList?: any;\r\n\r\n}\r\n\r\nconst SiteInfo = ({ addNewCategoryVisible, setAddNewCategoryVisible, brandList, setBrandList }: Props) => {\r\n\r\n\tconst [updateSiteLogoAndIcon, handleUpdateSiteLogoAndIconFetch] = useHandleFetch({}, 'updateSiteLogoAndIcon','form');\r\n\r\n\tconst [imageUrl, setImageUrl] = useState(`${config.baseURL}/images/logo.png`);\r\n\tconst [loadingThumnail, setLoadingThumbnail] = useState(false);\r\n\r\n\t\r\n\tconst [iconimageUrl, setIconImageUrl] = useState(`${config.baseURL}/favicon.ico`);\r\n\tconst [loadingIcon, setloadingIcon] = useState(false);\r\n\r\n\r\n\r\n\t\t\r\n\tconst [appLogo, setAppLogo] = useState(`${config.baseURL}/images/logo-app.png`);\r\n\tconst [loadingAppLogo, setloadingAppLogo] = useState(false);\r\n\r\n\tfunction getBase64(img, callback) {\r\n\t\tconst reader = new FileReader();\r\n\t\treader.addEventListener('load', () => callback(reader.result));\r\n\t\treader.readAsDataURL(img);\r\n\t}\r\n\r\n\r\n\tfunction beforeUpload(file) {\r\n\t\tconst isJpgOrPng = file.type === 'image/jpeg' || file.type === 'image/png';\r\n\t\tif (!isJpgOrPng) {\r\n\t\t\tmessage.error('You can only upload JPG/PNG file!');\r\n\t\t}\r\n\t\tconst isLt2M = file.size / 1024 / 1024 < 2;\r\n\t\tif (!isLt2M) {\r\n\t\t\tmessage.error('Image must smaller than 2MB!');\r\n\t\t}\r\n\r\n\r\n\t\tgetBase64(file, imageUrl => {\r\n\t\t\tsetImageUrl(imageUrl)\r\n\t\t\tconst setNewIcon  = async () => {\r\n\t\t\t\tconst formData = new FormData();\r\n\t\t\t\tformData.append('logo',file); \r\n\r\n\r\n\t\t\t\tconst res = await handleUpdateSiteLogoAndIconFetch({\r\n\t\t\t\t\tbody: formData\r\n\t\t\t\t}); \r\n\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\tif(res && res.status === 'ok'){\r\n\t\t\t\t\topenSuccessNotification('Site Logo updated!')\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\topenErrorNotification(\"Couldn't update site Logo, Something went wrong\")\r\n\t\t\t\t}\r\n\r\n\t\t\t\t\r\n\t\t\t}; \r\n\t\t\t\r\n\t\t\tsetNewIcon();\r\n\t\t\tsetLoadingThumbnail(false)\r\n\t\t})\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\r\n\r\n\tfunction beforeIconUpload(file) {\r\n\t\tconst isJpgOrPng = file.type === 'image/jpeg' || file.type === 'image/png';\r\n\t\tif (!isJpgOrPng) {\r\n\t\t\tmessage.error('You can only upload JPG/PNG file!');\r\n\t\t}\r\n\t\tconst isLt2M = file.size / 1024 / 1024 < 2;\r\n\t\tif (!isLt2M) {\r\n\t\t\tmessage.error('Image must smaller than 2MB!');\r\n\t\t}\r\n\r\n\r\n\t\tgetBase64(file, imageUrl => {\r\n\t\t\tsetIconImageUrl(imageUrl)\r\n\t\t\tconst setNewIcon  = async () => {\r\n\t\t\t\tconst formData = new FormData();\r\n\t\t\t\tformData.append('icon',file); \r\n\r\n\r\n\t\t\t\tconst res = await handleUpdateSiteLogoAndIconFetch({\r\n\t\t\t\t\tbody: formData\r\n\t\t\t\t}); \r\n\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\tif(res && res.status === 'ok'){\r\n\t\t\t\t\topenSuccessNotification('Site Icon updated!')\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\topenErrorNotification(\"Couldn't update site icon, Something went wrong\")\r\n\t\t\t\t}\r\n\r\n\t\t\t\t\r\n\t\t\t}; \r\n\t\t\t\r\n\t\t\tsetNewIcon();\r\n\t\t\tsetloadingIcon(false)\r\n\t\t})\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\r\n\r\n\r\n\tfunction beforeAppIconUpload(file) {\r\n\t\tconst isJpgOrPng = file.type === 'image/jpeg' || file.type === 'image/png';\r\n\t\tif (!isJpgOrPng) {\r\n\t\t\tmessage.error('You can only upload JPG/PNG file!');\r\n\t\t}\r\n\t\tconst isLt2M = file.size / 1024 / 1024 < 2;\r\n\t\tif (!isLt2M) {\r\n\t\t\tmessage.error('Image must smaller than 2MB!');\r\n\t\t}\r\n\r\n\r\n\t\tgetBase64(file, imageUrl => {\r\n\t\t\tsetAppLogo(imageUrl)\r\n\t\t\tconst setNewIcon  = async () => {\r\n\t\t\t\tconst formData = new FormData();\r\n\t\t\t\tformData.append('logoApp',file); \r\n\r\n\r\n\t\t\t\tconst res = await handleUpdateSiteLogoAndIconFetch({\r\n\t\t\t\t\tbody: formData\r\n\t\t\t\t}); \r\n\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\tif(res && res.status === 'ok'){\r\n\t\t\t\t\topenSuccessNotification('App logo updated!')\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\topenErrorNotification(\"Couldn't update App logo, Something went wrong\")\r\n\t\t\t\t}\r\n\r\n\t\t\t\t\r\n\t\t\t}; \r\n\t\t\t\r\n\t\t\tsetNewIcon();\r\n\t\t\tsetloadingAppLogo(false)\r\n\t\t})\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\r\n\t\r\n\tconst uploadButton = (\r\n\t\t<div>\r\n\t\t\t{loadingThumnail ? <LoadingOutlined /> : <PlusOutlined />}\r\n\t\t\t<div className=\"ant-upload-text\">Upload</div>\r\n\t\t</div>\r\n\t);\r\n\r\n\r\n\r\n\r\n\tconst iconUploadButton = (\r\n\t\t<div>\r\n\t\t\t{loadingIcon ? <LoadingOutlined /> : <PlusOutlined />}\r\n\t\t\t<div className=\"ant-upload-text\">Upload</div>\r\n\t\t</div>\r\n\t);\r\n\r\n\r\n\tconst appIconUploadButton = (\r\n\t\t<div>\r\n\t\t\t{loadingAppLogo ? <LoadingOutlined /> : <PlusOutlined />}\r\n\t\t\t<div className=\"ant-upload-text\">Upload</div>\r\n\t\t</div>\r\n\t);\r\n\r\n\r\n\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<div className='siteInfoContainer'>\r\n\r\n\t\t\t\t<Tabs defaultActiveKey=\"1\" >\r\n\t\t\t\t\t<TabPane tab=\"Site Info\" key=\"1\">\r\n\t\t\t\t\t\t<AdminSiteInfo />\r\n\t\t\t\t\t</TabPane>\r\n\t\t\t\t\t<TabPane tab=\"Site logo\" key=\"2\">\r\n\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\tdisplay: 'flex',\r\n\t\t\t\t\t\t\talignItems: 'center',marginTop: '15px'\r\n\t\t\t\t\t\t}}>\r\n\r\n\r\n\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\tmarginRight: '40px'\r\n\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t<div className='addproductSection-left-header' >\r\n\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'> Logo </h3>\r\n\t\t\t\t\t\t\t\t<Tooltip\r\n\t\t\t\t\t\t\t\t\tplacement=\"left\" title={'Update Site Logo image'}>\r\n\t\t\t\t\t\t\t\t\t<a href='###'>\r\n\t\t\t\t\t\t\t\t\t\t<InfoCircleOutlined />\r\n\t\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t<Upload\r\n\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\tborderRadius: \"8px\"\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\tname=\"avatar\"\r\n\t\t\t\t\t\t\t\tlistType=\"picture-card\"\r\n\t\t\t\t\t\t\t\tclassName=\"avatar-uploader\"\r\n\t\t\t\t\t\t\t\tshowUploadList={false}\r\n\t\t\t\t\t\t\t\tbeforeUpload={beforeUpload}\r\n\t\t\t\t\t\t\t\tmultiple={false}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t{imageUrl ? <img \r\n\t\t\t\t\t\t\t\tonError={() => setImageUrl('')}\r\n\t\t\t\t\t\t\t\tsrc={imageUrl} alt=\"avatar\" style={{ width: '100%' }} /> : uploadButton}\r\n\t\t\t\t\t\t\t</Upload>\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\tmarginRight: '40px'\r\n\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t<div className='addproductSection-left-header' >\r\n\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'> Icon </h3>\r\n\t\t\t\t\t\t\t\t<Tooltip\r\n\t\t\t\t\t\t\t\t\tplacement=\"left\" title={'Update Icon image'}>\r\n\t\t\t\t\t\t\t\t\t<a href='###'>\r\n\t\t\t\t\t\t\t\t\t\t<InfoCircleOutlined />\r\n\t\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t<Upload\r\n\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\tborderRadius: \"8px\"\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\tname=\"avatar\"\r\n\t\t\t\t\t\t\t\tlistType=\"picture-card\"\r\n\t\t\t\t\t\t\t\tclassName=\"avatar-uploader\"\r\n\t\t\t\t\t\t\t\tshowUploadList={false}\r\n\t\t\t\t\t\t\t\tbeforeUpload={beforeIconUpload}\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\tmultiple={false}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t{iconimageUrl ? <img\r\n\t\t\t\t\t\t\t\t\tonError={() => setIconImageUrl('')}\r\n\t\t\t\t\t\t\t\t src={iconimageUrl} alt=\"avatar\" style={{ width: '100%' }} /> : iconUploadButton}\r\n\t\t\t\t\t\t\t</Upload>\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\tmarginRight: '20px'\r\n\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t<div className='addproductSection-left-header' >\r\n\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'> App Logo </h3>\r\n\t\t\t\t\t\t\t\t<Tooltip\r\n\t\t\t\t\t\t\t\t\tplacement=\"left\" title={'Update App logo image'}>\r\n\t\t\t\t\t\t\t\t\t<a href='###'>\r\n\t\t\t\t\t\t\t\t\t\t<InfoCircleOutlined />\r\n\t\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t<Upload\r\n\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\tborderRadius: \"8px\"\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\tname=\"avatar\"\r\n\t\t\t\t\t\t\t\tlistType=\"picture-card\"\r\n\t\t\t\t\t\t\t\tclassName=\"avatar-uploader\"\r\n\t\t\t\t\t\t\t\tshowUploadList={false}\r\n\t\t\t\t\t\t\t\tbeforeUpload={beforeAppIconUpload}\r\n\t\t\t\t\t\t\t\tmultiple={false}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t{appLogo ? <img \r\n\t\t\t\t\t\t\t\tonError={() => setAppLogo('')}\r\n\r\n\t\t\t\t\t\t\t\tsrc={appLogo} alt=\"avatar\" style={{ width: '100%' }} /> : appIconUploadButton}\r\n\t\t\t\t\t\t\t</Upload>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\r\n\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\tmarginBottom: '10px'\r\n\t\t\t\t\t\t}}></div>\r\n\t\t\t\t\t</TabPane>\r\n\r\n\t\t\t\t\t<TabPane tab=\"Site SEO\" key=\"3\">\r\n\t\t\t\t\t\t<SiteSeo />\r\n\t\t\t\t\t</TabPane>\r\n\r\n\r\n\r\n\r\n\t\t\t\t\t<TabPane tab=\"Invoice Information\" key=\"4\">\r\n\r\n\t\t\t\t\t\t<SiteInfoInvoice />\r\n\t\t\t\t\t</TabPane>\r\n\r\n\t\t\t\t\t<TabPane tab=\"Change Credentials\" key=\"5\">\r\n\t\t\t\t\t\t<ChangeAdminPassword />\r\n\t\t\t\t\t</TabPane>\r\n\r\n\t\t\t\t</Tabs>\r\n\r\n\t\t\t</div>\r\n\t\t</>\r\n\r\n\r\n\t);\r\n};\r\n\r\nexport default SiteInfo;\r\n\r\n\r\n","import React, { useState, useEffect } from 'react';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\n\r\ninterface Props {\r\n\tsetdeliveryChargeList: any;\r\n\tdeliveryChargeList: any;\r\n\tdeliveryChargeItem: any;\r\n}\r\n\r\nconst DeliveryCharge = ({ deliveryChargeItem, setdeliveryChargeList, deliveryChargeList }: Props) => {\r\n\tconst [ deliveryCharge, setdeliveryCharge ] = useState({\r\n\t\tminimumOrder: deliveryChargeItem.minimumOrder,\r\n\t\tcharge: deliveryChargeItem.charge\r\n\t});\r\n\r\n\tconst handleDeliveryChargeChange = (e) => {\r\n\t\tconst name = e.target.name;\r\n\t\tconst value = e.target.value;\r\n\r\n\t\tsetdeliveryCharge({\r\n\t\t\t...deliveryCharge,\r\n\t\t\t[name]: value\r\n\t\t});\r\n\t};\r\n\r\n\tuseEffect(\r\n\t\t() => {\r\n\t\t\tconst positionInAttribute = () => {\r\n\t\t\t\treturn deliveryChargeList.map((item) => item.id).indexOf(deliveryChargeItem.id);\r\n\t\t\t};\r\n\r\n\t\t\tconst index = positionInAttribute();\r\n\r\n\t\t\tconst updatedItem = Object.assign({}, deliveryChargeList[index], { ...deliveryCharge });\r\n\t\t\tconst updateAttributeList = [\r\n\t\t\t\t...deliveryChargeList.slice(0, index),\r\n\t\t\t\tupdatedItem,\r\n\t\t\t\t...deliveryChargeList.slice(index + 1)\r\n\t\t\t];\r\n\t\t\tsetdeliveryChargeList(updateAttributeList);\r\n\t\t},\r\n\t\t[ deliveryCharge ]\r\n\t);\r\n\r\n\tconst handleAttributeDelete = () => {\r\n\t\tconst updateAttributeList = deliveryChargeList.filter((item) => item.id !== deliveryChargeItem.id);\r\n\t\tsetdeliveryChargeList(updateAttributeList);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className='dubbleRowInputs'>\r\n\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t<Input\r\n\t\t\t\t\ttype='number'\r\n\t\t\t\t\taddonBefore='Minimum Order'\r\n\t\t\t\t\tvalue={deliveryCharge.minimumOrder}\r\n\t\t\t\t\tname='minimumOrder'\r\n\t\t\t\t\tonChange={handleDeliveryChargeChange}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t<Input\r\n\t\t\t\t\ttype='number'\r\n\t\t\t\t\taddonBefore='Charge'\r\n\t\t\t\t\tvalue={deliveryCharge.charge}\r\n\t\t\t\t\tname='charge'\r\n\t\t\t\t\tonChange={handleDeliveryChargeChange}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default DeliveryCharge;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n\r\nimport { useHandleFetch } from '../../hooks';\r\n// import third party ui lib\r\nimport { Upload, message, Switch, Select, Button, notification, Modal, Empty } from 'antd';\r\n\r\nimport {\r\n\tFileOutlined,\r\n\tInboxOutlined,\r\n\tRadiusUpleftOutlined,\r\n\tRadiusUprightOutlined,\r\n\tRadiusBottomleftOutlined,\r\n\tRadiusBottomrightOutlined,\r\n\tDeleteOutlined,\r\n\tFileAddOutlined,\r\n\tPlusOutlined,\r\n\tCheckCircleOutlined\r\n} from '@ant-design/icons';\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport DeliveryCharge from './DeliveryCharge';\r\n\r\n\r\nconst { Option } = Select;\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t\tmessage: message || 'Category Updated',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t\tmessage: message || 'Something Went Wrong',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n\tname: Yup.string()\r\n\t\t.label('Name')\r\n\t\t.required()\r\n\t\t.min(2, 'Name must have at least 2 characters '),\r\n\tpickUpLocation: Yup.string()\r\n\t\t.label('Pick up Location')\r\n\t\t.required()\r\n\t\t.min(2, 'Pick up Location must have at least 2 characters '),\r\n\ttime: Yup.string()\r\n\t\t.label('Time')\r\n\t\t.required()\r\n\t\t.min(2, 'Time must have at least 2 characters '),\r\n\r\n});\r\n\r\n\r\n\r\n\r\nconst initialValues = {\r\n\tname: '',\r\n\tpickUpLocation: '',\r\n\ttime: '',\r\n};\r\n\r\n\r\n\r\n\r\ninterface Props {\r\n\taddNewCategoryVisible: any;\r\n\tsetAddNewCategoryVisible: any;\r\n\tregionList?: any;\r\n\tsetRegionList?: any;\r\n}\r\n\r\nconst AddNewRegion = ({ addNewCategoryVisible, setAddNewCategoryVisible, regionList, setRegionList }: Props) => {\r\n\r\n\tconst [addRegionState, handleRegionFetch] = useHandleFetch({}, 'addRegion');\r\n\tconst [selectedCountryValue, setselectedCountryValue] = useState('');\r\n\tconst [selectedCityValue, setselectedCityValue] = useState('');\r\n\r\n\tconst [countryOptions, setcountryOptions] = useState([]);\r\n\tconst [cityOptions, setcityOptions] = useState([]);\r\n\r\n\tconst [countryListState, handleCountryListFetch] = useHandleFetch(\r\n\t\t[],\r\n\t\t'countryList'\r\n\t);\r\n\r\n\tconst [cityListState, handleCityListFetch] = useHandleFetch([], 'cityList');\r\n\r\n\tconst [countryList, setCountryList] = useState([]);\r\n\tconst [cityList, setCityList] = useState([]);\r\n\r\n\tconst [deliveryChargeList, setdeliveryChargeList] = useState([{\r\n\t\tminimumOrder: '',\r\n\t\tcharge: '',\r\n\t\tid: '0'\r\n\t}]);\r\n\r\n\r\n\tconst handleSubmit = async (values: any, actions: any) => {\r\n\t\t// console.log('selectedCityValue', selectedCityValue)\r\n\r\n\t\tif (deliveryChargeList.length > 0) {\r\n\t\t\tconst charge = {};\r\n\r\n\t\t\tfor (let item of deliveryChargeList) {\r\n\t\t\t\tif (charge[item['minimumOrder']] !== '' && item['charge'] !== '') {\r\n\t\t\t\t\tcharge[item['minimumOrder']] = item['charge']\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tconst addRegionRes = await handleRegionFetch({\r\n\r\n\t\t\t\tbody: {\r\n\t\t\t\t\tname: values.name,\r\n\t\t\t\t\tpickUpLocation: values.pickUpLocation,\r\n\t\t\t\t\ttime: values.time,\r\n\t\t\t\t\tcountry: selectedCountryValue,\r\n\t\t\t\t\tcity: selectedCityValue,\r\n\t\t\t\t\tcharge\r\n\t\t\t\t},\r\n\t\t\t});\r\n\r\n\r\n\t\t\t// @ts-ignore\r\n\t\t\tif (addRegionRes && addRegionRes.status === 'ok') {\r\n\t\t\t\topenSuccessNotification();\r\n\r\n\t\t\t\tsetRegionList([{\r\n\t\t\t\t\tid: addRegionRes['id'] || '',\r\n\t\t\t\t\tkey: addRegionRes['id'] || '',\r\n\t\t\t\t\tname: addRegionRes['name'] || '',\r\n\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\t...addRegionRes\r\n\t\t\t\t},...regionList])\r\n\t\t\t\tsetAddNewCategoryVisible(false)\r\n\t\t\t\tactions.resetForm();\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\topenErrorNotification();\r\n\t\t\t}\r\n\r\n\r\n\r\n\t\t}\r\n\t\telse {\r\n\t\t\tconst addRegionRes = await handleRegionFetch({\r\n\r\n\t\t\t\tbody: {\r\n\t\t\t\t\tname: values.name,\r\n\t\t\t\t\tpickUpLocation: values.pickUpLocation,\r\n\t\t\t\t\ttime: values.time,\r\n\t\t\t\t\tcountry: selectedCountryValue,\r\n\t\t\t\t\tcity: selectedCityValue,\r\n\t\t\t\t\tcharge: {}\r\n\t\t\t\t},\r\n\t\t\t});\r\n\r\n\r\n\t\t\t// @ts-ignore\r\n\t\t\tif (addRegionRes && addRegionRes.status === 'ok') {\r\n\t\t\t\topenSuccessNotification();\r\n\r\n\t\t\t\tsetRegionList([...regionList, {\r\n\t\t\t\t\tid: addRegionRes['id'] || '',\r\n\t\t\t\t\tkey: addRegionRes['id'] || '',\r\n\t\t\t\t\tname: addRegionRes['name'] || '',\r\n\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\t...addRegionRes\r\n\t\t\t\t}])\r\n\t\t\t\tsetAddNewCategoryVisible(false)\r\n\t\t\t\tactions.resetForm();\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\topenErrorNotification();\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\r\n\r\n\t\tactions.setSubmitting(false);\r\n\t};\r\n\r\n\r\n\r\n\tconst onChangeCity = (value) => {\r\n\t\tsetselectedCityValue(value);\r\n\t}\r\n\r\n\tconst onChangeCountry = (value) => {\r\n\t\tsetselectedCountryValue(value);\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tconst setCountries = async () => {\r\n\t\t\tconst CountryListRes = await handleCountryListFetch({});\r\n\r\n\t\t\t// @ts-ignore\r\n\t\t\tif (CountryListRes && CountryListRes.length > 0) {\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\tconst countryOptions = CountryListRes.map((country) => {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tvalue: country.name,\r\n\t\t\t\t\t\tname: country.name\r\n\t\t\t\t\t};\r\n\t\t\t\t});\r\n\t\t\t\tsetcountryOptions(countryOptions);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tsetCountries();\r\n\t}, []);\r\n\r\n\r\n\tuseEffect(() => {\r\n\t\tconst setCities = async () => {\r\n\t\t\tconst cityListRes = await handleCityListFetch({\r\n\t\t\t\turlOptions: {\r\n\t\t\t\t\tplaceHolders: {\r\n\t\t\t\t\t\tcountry: selectedCountryValue,\r\n\t\t\t\t\t},\r\n\t\t\t\t},\r\n\t\t\t});\r\n\r\n\t\t\t// @ts-ignore\r\n\t\t\tif (cityListRes && cityListRes.length > 0) {\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\tconst cityOptions = cityListRes.map((city) => {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tvalue: city.name,\r\n\t\t\t\t\t\tname: city.name\r\n\t\t\t\t\t};\r\n\t\t\t\t});\r\n\t\t\t\tsetcityOptions(cityOptions);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tsetCities();\r\n\t}, [selectedCountryValue]);\r\n\r\n\r\n\r\n\r\n\tconst handleCancel = (e: any) => {\r\n\t\tsetAddNewCategoryVisible(false);\r\n\t};\r\n\r\n\r\n\tconst getisSubmitButtonDisabled = (values, isValid) => {\r\n\t\tif (!isValid ||\r\n\t\t\t!values.name ||\r\n\t\t\t!values.pickUpLocation ||\r\n\t\t\t!values.time) {\r\n\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\r\n\r\n\tconst handleAddDeliveryCharge = () => {\r\n\t\tsetdeliveryChargeList([...deliveryChargeList, {\r\n\t\t\tminimumOrder: '',\r\n\t\t\tcharge: '',\r\n\t\t\tid: `${deliveryChargeList.length}`\r\n\t\t}])\r\n\t};\r\n\r\n\r\n\r\n\r\n\t// console.log('deliveryChargeList', deliveryChargeList)\r\n\treturn (\r\n\t\t<Formik\r\n\t\t\tonSubmit={(values, actions) => handleSubmit(values, actions)}\r\n\t\t\tvalidationSchema={validationSchema}\r\n\t\t\tvalidateOnBlur={false}\r\n\t\t\tenableReinitialize={true}\r\n\t\t\tinitialValues={\r\n\t\t\t\t{ ...initialValues }\r\n\t\t\t}\r\n\t\t>\r\n\t\t\t{({\r\n\t\t\t\thandleChange,\r\n\t\t\t\tvalues,\r\n\t\t\t\thandleSubmit,\r\n\t\t\t\terrors,\r\n\t\t\t\tisValid,\r\n\t\t\t\tisSubmitting,\r\n\t\t\t\ttouched,\r\n\t\t\t\thandleBlur,\r\n\t\t\t\tsetFieldTouched,\r\n\t\t\t\thandleReset,\r\n\t\t\t}) => (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<Modal\r\n\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\ttop: '40px'\r\n\t\t\t\t\t\t\t}}\r\n\r\n\t\t\t\t\t\t\tbodyStyle={{\r\n\t\t\t\t\t\t\t\tmargin: '0',\r\n\t\t\t\t\t\t\t\tpadding: '10px'\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\ttitle=\"Add New Region\"\r\n\t\t\t\t\t\t\tvisible={addNewCategoryVisible}\r\n\t\t\t\t\t\t\tonOk={(e: any) => handleSubmit(e)}\r\n\t\t\t\t\t\t\tonCancel={handleCancel}\r\n\t\t\t\t\t\t\tokText='Create'\r\n\t\t\t\t\t\t\tokButtonProps={{\r\n\t\t\t\t\t\t\t\tloading: isSubmitting,\r\n\t\t\t\t\t\t\t\thtmlType: \"submit\",\r\n\t\t\t\t\t\t\t\tdisabled: getisSubmitButtonDisabled(values, isValid)\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\r\n\r\n\t\t\t\t\t\t\t<div className='dubbleRowInputs'>\r\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\tlabel='Name'\r\n\t\t\t\t\t\t\t\t\t\tvalue={values.name}\r\n\t\t\t\t\t\t\t\t\t\tname='name'\r\n\t\t\t\t\t\t\t\t\t\tisError={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addRegionState.error['error']['name'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\terrorString={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addRegionState.error['error']['name'])}\r\n\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('name');\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\tlabel='Pick up Location'\r\n\t\t\t\t\t\t\t\t\t\tvalue={values.pickUpLocation}\r\n\t\t\t\t\t\t\t\t\t\tname='pickUpLocation'\r\n\t\t\t\t\t\t\t\t\t\tisError={(touched.pickUpLocation && errors.pickUpLocation) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addRegionState.error['error']['pickUpLocation'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\terrorString={(touched.pickUpLocation && errors.pickUpLocation) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addRegionState.error['error']['pickUpLocation'])}\r\n\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('pickUpLocation');\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\tmarginRight: '10px'\r\n\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\tlabel='Time'\r\n\t\t\t\t\t\t\t\t\tvalue={values.time}\r\n\t\t\t\t\t\t\t\t\tname='time'\r\n\t\t\t\t\t\t\t\t\tisError={(touched.time && errors.time) ||\r\n\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addRegionState.error['error']['time'])}\r\n\r\n\t\t\t\t\t\t\t\t\terrorString={(touched.time && errors.time) ||\r\n\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addRegionState.error['error']['time'])}\r\n\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\tsetFieldTouched('time');\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t<div className='dubbleRowInputs'>\r\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\t\t\t\tCountry\r\n            </h3>\r\n\t\t\t\t\t\t\t\t\t<Select\r\n\t\t\t\t\t\t\t\t\t\tnotFoundContent={<Empty description='No Country Found' image={Empty.PRESENTED_IMAGE_SIMPLE} />}\r\n\t\t\t\t\t\t\t\t\t\tshowSearch\r\n\t\t\t\t\t\t\t\t\t\tstyle={{ width: '100%' }}\r\n\t\t\t\t\t\t\t\t\t\tplaceholder='Select a Country'\r\n\t\t\t\t\t\t\t\t\t\toptionFilterProp='children'\r\n\t\t\t\t\t\t\t\t\t\tonChange={onChangeCountry}\r\n\t\t\t\t\t\t\t\t\t\tfilterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t{countryListState.done &&\r\n\t\t\t\t\t\t\t\t\t\t\tcountryListState.data.length > 0 &&\r\n\t\t\t\t\t\t\t\t\t\t\tcountryOptions.map((option) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\treturn <Option value={option.value}>{option.name}</Option>;\r\n\t\t\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t\t</Select>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\t\t\t\tCity\r\n            </h3>\r\n\t\t\t\t\t\t\t\t\t<Select\r\n\t\t\t\t\t\t\t\t\t\tnotFoundContent={<Empty description='First Select a Country' image={Empty.PRESENTED_IMAGE_SIMPLE} />}\r\n\t\t\t\t\t\t\t\t\t\tmode=\"multiple\"\r\n\t\t\t\t\t\t\t\t\t\tshowSearch\r\n\t\t\t\t\t\t\t\t\t\tstyle={{ width: '100%' }}\r\n\t\t\t\t\t\t\t\t\t\tplaceholder='Select a city'\r\n\t\t\t\t\t\t\t\t\t\toptionFilterProp='children'\r\n\t\t\t\t\t\t\t\t\t\tonChange={onChangeCity}\r\n\t\t\t\t\t\t\t\t\t\tfilterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t{cityListState.done &&\r\n\t\t\t\t\t\t\t\t\t\t\tcityListState.data.length > 0 &&\r\n\t\t\t\t\t\t\t\t\t\t\tcityOptions.map((option) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\treturn <Option value={option.value}>{option.name}</Option>;\r\n\t\t\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t\t</Select>\r\n\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\tmarginTop: '12px'\r\n\t\t\t\t\t\t\t}}></div>\r\n\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\t\tDelivery Charges\r\n            </h3>\r\n\r\n\t\t\t\t\t\t\t{deliveryChargeList.map(deliveryChargeItem => {\r\n\t\t\t\t\t\t\t\treturn <DeliveryCharge\r\n\t\t\t\t\t\t\t\t\tdeliveryChargeItem={deliveryChargeItem}\r\n\t\t\t\t\t\t\t\t\tdeliveryChargeList={deliveryChargeList} setdeliveryChargeList={setdeliveryChargeList} />\r\n\t\t\t\t\t\t\t})}\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\tmarginTop: '5px',\r\n\t\t\t\t\t\t\t}}></div>\r\n\t\t\t\t\t\t\t<Button size='middle'\r\n\t\t\t\t\t\t\t\tonClick={handleAddDeliveryCharge}\r\n\t\t\t\t\t\t\t\ttype=\"dashed\" icon={<PlusOutlined />}>Add Charge</Button>\r\n\r\n\t\t\t\t\t\t</Modal>\r\n\r\n\r\n\r\n\r\n\t\t\t\t\t</>\r\n\t\t\t\t)}\r\n\t\t</Formik>\r\n\r\n\r\n\r\n\r\n\t);\r\n};\r\n\r\nexport default AddNewRegion;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Modal, Select, notification } from 'antd';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { CheckCircleOutlined } from '@ant-design/icons';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport { useHandleFetch } from '../../hooks';\r\n\r\n\r\nconst { Option } = Select;\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n\tname: Yup.string()\r\n\t\t.label('Name')\r\n\t\t.required()\r\n\t\t.min(2, 'Name must have at least 2 characters '),\r\n\tpickUpLocation: Yup.string()\r\n\t\t.label('Pick up Location')\r\n\t\t.required()\r\n\t\t.min(2, 'Pick up Location must have at least 2 characters '),\r\n\ttime: Yup.string()\r\n\t\t.label('Time')\r\n\t\t.required()\r\n\t\t.min(2, 'Time must have at least 2 characters '),\r\n\r\n});\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t\tmessage: message || 'Tag Created',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t\tmessage: message || 'Something Went Wrong',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n};\r\n\r\n\r\ninterface Props {\r\n\tcustomer: any;\r\n\tsetvisible: any;\r\n\tvisible: any;\r\n\tregionList?: any;\r\n\tsetRegionList?: any;\r\n}\r\n\r\nconst QuickEdit = ({ customer, setvisible, visible, setRegionList, regionList }: Props) => {\r\n\tconst [updateRegionState, handleUpdateRegionFetch] = useHandleFetch({}, 'updateRegion');\r\n\r\n\r\n\tconsole.log('DeliveryRegion',customer);\r\n\r\n\r\n\tconst [selectedCountryValue, setselectedCountryValue] = useState('');\r\n\tconst [selectedCityValue, setselectedCityValue] = useState('');\r\n\r\n\tconst [countryOptions, setcountryOptions] = useState([]);\r\n\tconst [cityOptions, setcityOptions] = useState([]);\r\n\r\n\tconst [countryListState, handleCountryListFetch] = useHandleFetch(\r\n\t\t[],\r\n\t\t'countryList'\r\n\t);\r\n\r\n\tconst [cityListState, handleCityListFetch] = useHandleFetch([], 'cityList');\r\n\r\n\tconst [countryList, setCountryList] = useState([]);\r\n\tconst [cityList, setCityList] = useState([]);\r\n\r\n\r\n\r\n\tconst handleSubmit = async (values: any, actions: any) => {\r\n\t\t// console.log('selectedCityValue',selectedCityValue)\r\n\r\n\t\tconst addRegionRes = await handleUpdateRegionFetch({\r\n\r\n\t\t\tbody: {\r\n\t\t\t\tname: values.name,\r\n\t\t\t\tpickUpLocation: values.pickUpLocation,\r\n\t\t\t\ttime: values.time,\r\n\t\t\t\tcountry: selectedCountryValue,\r\n\t\t\t\tcity: selectedCityValue,\r\n\t\t\t\tcharge: customer.charge\r\n\t\t\t},\r\n\t\t});\r\n\r\n\t\t// @ts-ignore\r\n\t\tif (addRegionRes && addRegionRes.status === 'ok') {\r\n\t\t\topenSuccessNotification();\r\n\r\n\t\t\tconst positionInTag = () => {\r\n\t\t\t\treturn regionList.map(item => item.id).indexOf(customer.id);\r\n\t\t\t}\r\n\r\n\t\t\tconst index = positionInTag();\r\n\r\n\t\t\t// @ts-ignore\r\n\t\t\tconst updatedItem = Object.assign({}, regionList[index], { ...addRegionRes });\r\n\t\t\tconst updateRegionList = [...regionList.slice(0, index), updatedItem, ...regionList.slice(index + 1)];\r\n\t\t\tsetRegionList(updateRegionList);\r\n\r\n\t\t}\r\n\t\telse {\r\n\t\t\topenErrorNotification();\r\n\t\t}\r\n\r\n\t\tactions.setSubmitting(false);\r\n\t\tsetvisible(false)\r\n\r\n\t};\r\n\r\n\r\n\tconst onChangeCity = (value) => {\r\n\t\tsetselectedCityValue(value);\r\n\t}\r\n\r\n\tconst onChangeCountry = (value) => {\r\n\t\tsetselectedCountryValue(value);\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tconst setCountries = async () => {\r\n\t\t\tconst CountryListRes = await handleCountryListFetch({});\r\n\r\n\t\t\t// @ts-ignore\r\n\t\t\tif (CountryListRes && CountryListRes.length > 0) {\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\tconst countryOptions = CountryListRes.map((country) => {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tvalue: country.name,\r\n\t\t\t\t\t\tname: country.name\r\n\t\t\t\t\t};\r\n\t\t\t\t});\r\n\t\t\t\tsetcountryOptions(countryOptions);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tsetCountries();\r\n\t}, []);\r\n\r\n\r\n\tuseEffect(() => {\r\n\t\tconst setCities = async () => {\r\n\t\t\tconst cityListRes = await handleCityListFetch({\r\n\t\t\t\turlOptions: {\r\n\t\t\t\t\tplaceHolders: {\r\n\t\t\t\t\t\tcountry: selectedCountryValue,\r\n\t\t\t\t\t},\r\n\t\t\t\t},\r\n\t\t\t});\r\n\r\n\t\t\t// @ts-ignore\r\n\t\t\tif (cityListRes && cityListRes.length > 0) {\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\tconst cityOptions = cityListRes.map((city) => {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tvalue: city.name,\r\n\t\t\t\t\t\tname: city.name\r\n\t\t\t\t\t};\r\n\t\t\t\t});\r\n\t\t\t\tsetcityOptions(cityOptions);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tsetCities();\r\n\t}, [selectedCountryValue]);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\tconst handleCancel = (e: any) => {\r\n\t\tsetvisible(false);\r\n\t};\r\n\r\n\r\n\r\n\tconst getisSubmitButtonDisabled = (values, isValid) => {\r\n\t\tif (!isValid ||\r\n\t\t\t!values.name ||\r\n\t\t\t!values.pickUpLocation ||\r\n\t\t\t!values.time) {\r\n\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\treturn (\r\n\t\t<Formik\r\n\t\t\tonSubmit={(values, actions) => handleSubmit(values, actions)}\r\n\t\t\tvalidationSchema={validationSchema}\r\n\t\t\tvalidateOnBlur={false}\r\n\t\t\tenableReinitialize={true}\r\n\t\t\tinitialValues={\r\n\t\t\t\t{ ...customer }\r\n\t\t\t}\r\n\t\t>\r\n\t\t\t{({\r\n\t\t\t\thandleChange,\r\n\t\t\t\tvalues,\r\n\t\t\t\thandleSubmit,\r\n\t\t\t\terrors,\r\n\t\t\t\tisValid,\r\n\t\t\t\tisSubmitting,\r\n\t\t\t\ttouched,\r\n\t\t\t\thandleBlur,\r\n\t\t\t\tsetFieldTouched,\r\n\t\t\t\thandleReset,\r\n\t\t\t}) => (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<Modal\r\n\t\t\t\t\t\t\ttitle=\"Region Edit\"\r\n\t\t\t\t\t\t\tvisible={visible}\r\n\t\t\t\t\t\t\tonOk={(e: any) => handleSubmit(e)}\r\n\t\t\t\t\t\t\tonCancel={handleCancel}\r\n\t\t\t\t\t\t\tokText='Update'\r\n\t\t\t\t\t\t\tokButtonProps={{\r\n\t\t\t\t\t\t\t\tloading: isSubmitting,\r\n\t\t\t\t\t\t\t\thtmlType: \"submit\",\r\n\t\t\t\t\t\t\t\tdisabled: getisSubmitButtonDisabled(values, isValid)\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\tbodyStyle={{\r\n\t\t\t\t\t\t\t\tmargin: '0',\r\n\t\t\t\t\t\t\t\tpadding: '10px'\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\r\n\r\n\t\t\t\t\t\t\t<div className='dubbleRowInputs'>\r\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\tlabel='Name'\r\n\t\t\t\t\t\t\t\t\t\tvalue={values.name}\r\n\t\t\t\t\t\t\t\t\t\tname='name'\r\n\t\t\t\t\t\t\t\t\t\tisError={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateRegionState.error['error']['name'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\terrorString={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateRegionState.error['error']['name'])}\r\n\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('name');\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\tlabel='Pick up Location'\r\n\t\t\t\t\t\t\t\t\t\tvalue={values.pickUpLocation}\r\n\t\t\t\t\t\t\t\t\t\tname='pickUpLocation'\r\n\t\t\t\t\t\t\t\t\t\tisError={(touched.pickUpLocation && errors.pickUpLocation) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateRegionState.error['error']['pickUpLocation'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\terrorString={(touched.pickUpLocation && errors.pickUpLocation) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateRegionState.error['error']['pickUpLocation'])}\r\n\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('pickUpLocation');\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\tmarginRight: '10px'\r\n\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\tlabel='Time'\r\n\t\t\t\t\t\t\t\t\tvalue={values.time}\r\n\t\t\t\t\t\t\t\t\tname='time'\r\n\t\t\t\t\t\t\t\t\tisError={(touched.time && errors.time) ||\r\n\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateRegionState.error['error']['time'])}\r\n\r\n\t\t\t\t\t\t\t\t\terrorString={(touched.time && errors.time) ||\r\n\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateRegionState.error['error']['time'])}\r\n\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\tsetFieldTouched('time');\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t<div className='dubbleRowInputs'>\r\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\t\t\t\tCountry\r\n            </h3>\r\n\t\t\t\t\t\t\t\t\t<Select\r\n\t\t\t\t\t\t\t\t\t\tshowSearch\r\n\t\t\t\t\t\t\t\t\t\tstyle={{ width: '100%' }}\r\n\t\t\t\t\t\t\t\t\t\tplaceholder='Select a Country'\r\n\t\t\t\t\t\t\t\t\t\toptionFilterProp='children'\r\n\t\t\t\t\t\t\t\t\t\tdefaultValue={customer && customer.country}\r\n\t\t\t\t\t\t\t\t\t\tonChange={onChangeCountry}\r\n\t\t\t\t\t\t\t\t\t\tfilterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t{countryListState.done &&\r\n\t\t\t\t\t\t\t\t\t\t\tcountryListState.data.length > 0 &&\r\n\t\t\t\t\t\t\t\t\t\t\tcountryOptions.map((option) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\treturn <Option value={option.value}>{option.name}</Option>;\r\n\t\t\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t\t</Select>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\t\t\t\tCity\r\n            </h3>\r\n\t\t\t\t\t\t\t\t\t<Select\r\n\t\t\t\t\t\t\t\t\t\tshowSearch\r\n\t\t\t\t\t\t\t\t\t\tstyle={{ width: '100%' }}\r\n\t\t\t\t\t\t\t\t\t\tplaceholder='Select a city'\r\n\t\t\t\t\t\t\t\t\t\toptionFilterProp='children'\r\n\t\t\t\t\t\t\t\t\t\tdefaultValue={customer && customer.city}\r\n\t\t\t\t\t\t\t\t\t\tonChange={onChangeCity}\r\n\t\t\t\t\t\t\t\t\t\tfilterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t{cityListState.done &&\r\n\t\t\t\t\t\t\t\t\t\t\tcityListState.data.length > 0 &&\r\n\t\t\t\t\t\t\t\t\t\t\tcityOptions.map((option) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\treturn <Option value={option.value}>{option.name}</Option>;\r\n\t\t\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t\t</Select>\r\n\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\tmarginTop: '12px'\r\n\t\t\t\t\t\t\t}}></div>\r\n\r\n\t\t\t\t\t\t</Modal>\r\n\r\n\t\t\t\t\t</>\r\n\t\t\t\t)}\r\n\t\t</Formik>\r\n\t);\r\n};\r\n\r\n\r\nexport default QuickEdit;\r\n","import React, {useState, useEffect} from 'react';\r\nimport {withRouter} from 'react-router-dom';\r\nimport { Table, Badge, Menu, Dropdown, Space, Tag,Button, Input,Tooltip, Modal, notification, Popconfirm } from 'antd';\r\nimport { PlusOutlined, EditOutlined, DeleteOutlined,EditFilled,CheckCircleOutlined } from '@ant-design/icons';\r\n\r\n\r\n/// import hooks\r\nimport { useFetch, useHandleFetch } from \"../../hooks\";\r\n\r\n// import components\r\nimport { DataTableSkeleton } from \"../../components/Placeholders\";\r\nimport AddNewRegion from \"./AddNewRegion\";\r\nimport QuickEdit from \"./QuickEdit\";\r\nimport Empty from \"../../components/Empty\";\r\n\r\nconst { Column, ColumnGroup } = Table;\r\nconst { Search } = Input;\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t  message: message || 'Region Created',\r\n\t  description: '',\r\n\t  icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n  };\r\n\r\n\r\n  const openErrorNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t  message: message || 'Something Went Wrong',\r\n\t  description: '',\r\n\t  icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n  };\r\n\r\n\r\n\r\n\r\n\r\ninterface myTableProps {\r\n  data: any; \r\n  setRegionList: any; \r\n} \r\n\r\n\r\nconst MyTable = ({data,setRegionList}: myTableProps) => {\r\n    const [visible,setvisible] = useState(false);   \r\n    const [activeCategoryForEdit,setactiveCategoryForEdit] = useState(false); \r\n    const [deleteRegionState, handleDeleteRegioFetch] = useHandleFetch({}, 'deleteRegion');\r\n\r\n\r\n      const handleDeleteRegion = async (id) => {\r\n        const deleteRegionRes = await handleDeleteRegioFetch({\r\n          urlOptions: {\r\n            placeHolders: {\r\n              id,\r\n            }\r\n            }\r\n          });\r\n\r\n            // @ts-ignore\r\n\t\t  if(deleteRegionRes && deleteRegionRes.status === 'ok'){\r\n\t\t\t  openSuccessNotification('Deleted Region'); \r\n\t\t\t  const newRegionList =  data.filter(item => item.id !== id);\r\n\t\t\t  setRegionList(newRegionList); \r\n\t\t  }\r\n\r\n      }\r\n      \r\n\r\n    return (\r\n        <>\r\n        <Table \r\n        // expandable={{\r\n        //     expandedRowRender: record => <p style={{ margin: 0 }}>{record.name}</p>,\r\n        //     rowExpandable: record => record.name !== 'Not Expandable',\r\n        //   }}\r\n        // bordered={true}\r\n        size='small'\r\n        // pagination={false}\r\n        dataSource={data}\r\n        >\r\n         \r\n          <Column\r\n           title=\"Name\" \r\n           dataIndex=\"name\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n         \r\n            />\r\n\r\n\r\n<Column\r\n           title=\"Pick up Location\" \r\n           dataIndex=\"pickUpLocation\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n         \r\n            />\r\n\r\n\r\n\r\n\r\n<Column\r\n           title=\"Country\" \r\n           dataIndex=\"countryName\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n         \r\n            />\r\n\r\n\r\n<Column\r\n           title=\"City\" \r\n           dataIndex=\"city\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n         \r\n            />\r\n\r\n<Column\r\n           title=\"Time\" \r\n           dataIndex=\"time\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n         \r\n            />\r\n\r\n\r\n<Column\r\n           title=\"Charge\" \r\n           dataIndex=\"time\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n         \r\n            />\r\n\r\n\r\n          {/* <Column \r\n          \r\n          className='classnameofthecolumn'\r\n\r\n          title=\"Product\" dataIndex=\"product\" key=\"product\" /> */}\r\n\r\n          {/* <Column \r\n          \r\n          className='classnameofthecolumn'\r\n\r\n          title=\"Sub Category\" dataIndex=\"subCategory\" key=\"subCategory\" /> */}\r\n        \r\n        {/* <Column\r\n          title=\"Tags\"\r\n          dataIndex=\"tags\"\r\n          key=\"tags\"\r\n          render={tags => (\r\n            <>\r\n              {tags.map((tag : any) => (\r\n                <Tag color=\"blue\" key={tag}>\r\n                  {tag}\r\n                </Tag>\r\n              ))}\r\n            </>\r\n          )}\r\n        /> */}\r\n        <Column\r\n        \r\n        className='classnameofthecolumn'\r\n          title=\"\"\r\n          key=\"action\"\r\n          align='right'\r\n          render={(text, record : any) => (\r\n            <Space size=\"middle\">\r\n            \r\n            <a href='##'>\r\n               <Tooltip placement=\"top\" title='Edit Region'>\r\n              <span className='iconSize' onClick={() => {\r\n                setvisible(true)\r\n                setactiveCategoryForEdit(record); \r\n              }}> \r\n              <EditOutlined />\r\n            \r\n              </span>\r\n               </Tooltip>\r\n              </a>\r\n\r\n\r\n   \r\n               <Popconfirm \r\n               \r\n               onConfirm={() => handleDeleteRegion(record.id)}\r\n               title=\"Are you sure？\" okText=\"Yes\" cancelText=\"No\">\r\n           \r\n           <span \r\n             className='iconSize iconSize-danger'\r\n             > \r\n             <DeleteOutlined/>\r\n            </span>\r\n       \r\n           </Popconfirm>\r\n\r\n\r\n             \r\n             \r\n            </Space>\r\n          )}\r\n        />\r\n      </Table>\r\n\r\n    \r\n\r\n    {activeCategoryForEdit &&   <QuickEdit \r\n    setvisible={setvisible}\r\n    visible={visible}\r\n    customer={activeCategoryForEdit}\r\n    regionList={data}\r\n    setRegionList={setRegionList}\r\n\r\n    />\r\n\r\n    }\r\n    \r\n    \r\n    </>\r\n    )\r\n}\r\n\r\n\r\ninterface Props {\r\n    history: any; \r\n}\r\n\r\nconst CustomerList = ({history}: Props) => {\r\n\r\n    const [regionList,setRegionList] = useState([]); \r\n\r\n    const [regionState, handleRegionListFetch] = useHandleFetch({}, 'regionList');\r\n  \r\n  \r\n    useEffect(()=>{\r\n     const setRegions = async () => {\r\n       const regions = await handleRegionListFetch({}); \r\n       // @ts-ignore\r\n       setRegionList(regions); \r\n     }\r\n     setRegions(); \r\n    },[])\r\n\r\n\r\n\r\n\r\n  \r\n  const [addNewCategoryVisible,setAddNewCategoryVisible] = useState(false);   \r\n\r\n  console.log('regionState',regionState)\r\n\r\n\r\n  const handleSearch = (value) => {\r\n    if(regionState.data.length > 0 ){\r\n      const newTagList = regionState.data.filter(item => item.name.toLowerCase().includes(value.toLowerCase())); \r\n      setRegionList(newTagList); \r\n    }\r\n     \r\n  }\r\n\r\n\r\n\r\n\treturn (\r\n\t\t<>\r\n    {/* <h2 className='containerPageTitle'>\r\n      Categories\r\n    </h2> */}\r\n    <div className='categoryListContainer'>\r\n            <div className='categoryListContainer__header'>\r\n           \r\n\r\n          <div className='categoryListContainer__header-searchBar'>\r\n          <h2 className='categoryListContainer__header-title'>\r\n            Regions \r\n            </h2>\r\n\r\n\r\n          <Search\r\n            enterButton={false}\r\n            className='searchbarClassName'\r\n          placeholder=\"search regions..\"\r\n          onSearch={value => handleSearch(value)}\r\n          // style={{ width: 300 }}\r\n        />\r\n          </div>\r\n            <Button\r\n          // type=\"primary\"\r\n          className='btnPrimaryClassNameoutline'\r\n          icon={<PlusOutlined />}\r\n          onClick={() => setAddNewCategoryVisible(true)}\r\n        >\r\n        Add New\r\n            \r\n            </Button>\r\n            </div>\r\n\r\n            <div className='categoryListContainer__afterHeader'>\r\n            {/* <Search\r\n      placeholder=\"search categories..\"\r\n      size=\"large\"\r\n      onSearch={value => console.log(value)}\r\n      style={{ width: 300 }}\r\n    /> */}\r\n            </div>\r\n\r\n     \r\n\t\t\t\r\n\t\t\t<div className='categoryListContainer__categoryList'>\r\n        {regionState.done && regionList.length > 0 && <MyTable \r\n        setRegionList={setRegionList}\r\n        data={regionList} />}\r\n        {regionState.isLoading && <DataTableSkeleton />}\r\n\r\n        {regionState.done && !(regionList.length > 0) && (\r\n\t\t<Empty title='No Region found'  />\r\n\t\t)}\r\n        \r\n\t\t\t</div>\r\n\t\t</div>\r\n\r\n\r\n{regionState.done && \r\n    <AddNewRegion \r\n          addNewCategoryVisible={addNewCategoryVisible} \r\n          setAddNewCategoryVisible={setAddNewCategoryVisible}\r\n          regionList={regionState.data}\r\n          setRegionList={setRegionList}\r\n           />}\r\n\r\n      \r\n\r\n        \r\n    </>\r\n\t);\r\n};\r\n\r\nexport default withRouter(CustomerList);\r\n","import React, { useEffect, useState } from 'react'\r\n\r\n\r\n// import components \r\nimport TextArea from \"../../components/Field/TextArea\";\r\n\r\n// import lib \r\nimport { Select, Button, notification } from 'antd';\r\n\r\nimport {\r\n    SendOutlined,\r\n    CheckCircleOutlined,\r\n    InfoCircleFilled\r\n} from '@ant-design/icons';\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'SMS sent successfully',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n    notification.error({\r\n        message: message || 'Something Went Wrong',\r\n        description: '',\r\n        icon: <InfoCircleFilled style={{ color: 'rgb(241, 67, 67)' }} />,\r\n    });\r\n};\r\n\r\n\r\n\r\n\r\n\r\ninterface Props {\r\n\r\n}\r\n\r\nconst SendCustomSMS = (props: Props) => {\r\n    const [text, setText] = useState('');\r\n    const [recipient, setrecipient] = useState([]);\r\n\r\n\r\n    function handleChange(value) {\r\n        const recipient = `${value}`.split(',');\r\n        setrecipient(recipient)\r\n    }\r\n\r\n\r\n    const handleMsgSend = () => {\r\n\r\n    }\r\n\r\n\r\n    const getMsgSendIsDisabled = () => {\r\n        return !text || !recipient[0]\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div style={{\r\n                width: '450px'\r\n            }}>\r\n                <h3 className='inputFieldLabel'>\r\n                    Recipient\r\n                </h3>\r\n\r\n                <Select\r\n                    style={{\r\n                        height: '30px',\r\n                        borderRadius: '3px',\r\n                        borderColor: '#eee !important',\r\n                        width: '100%'\r\n                    }}\r\n                    mode=\"tags\" onChange={handleChange} tokenSeparators={[',']}>\r\n                </Select>\r\n\r\n                <div style={{\r\n                    marginTop: \"15px\"\r\n                }}></div>\r\n                <TextArea\r\n                    label='Text'\r\n                    value={text}\r\n                    name='text'\r\n                    onChange={(e: any) => {\r\n                        setText(e.target.value);\r\n                    }}\r\n                />\r\n\r\n                <Button\r\n\r\n                    style={{\r\n                        marginTop: '10px'\r\n                    }}\r\n                    onClick={handleMsgSend}\r\n                    disabled={getMsgSendIsDisabled()}\r\n\r\n                    className='btnAddToPrice'\r\n                >\r\n                    Send <span style={{\r\n                        marginLeft: '10px'\r\n                    }}> <SendOutlined /></span>\r\n                </Button>\r\n            </div>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SendCustomSMS\r\n","import React from 'react';\r\n\r\n// import components \r\nimport TextArea from \"../../components/Field/TextArea\";\r\nimport Input from \"../../components/Field/Input\";\r\n\r\n\r\n// import lib \r\nimport { Button, notification } from 'antd';\r\n\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\nimport {\r\n    CheckCircleOutlined,\r\n    InfoCircleFilled\r\n} from '@ant-design/icons';\r\n\r\n\r\n// import hooks\r\nimport { useHandleFetch } from \"../../hooks\";\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'SMS sent successfully',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n    notification.error({\r\n        message: message || 'Something Went Wrong',\r\n        description: '',\r\n        icon: <InfoCircleFilled style={{ color: 'rgb(241, 67, 67)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst initialValues = {\r\n    name: '',\r\n    description: '',\r\n}\r\n\r\n\r\ninterface Props {\r\n\r\n}\r\n\r\nconst SMSConfiguaration = (props: Props) => {\r\n    const [configureSMSStata, handleconfigureSMSFetch] = useHandleFetch({}, 'configureSMS');\r\n\r\n\r\n    const handleSubmit = async (values: any, actions: any) => {\r\n        const addTagRes = await handleconfigureSMSFetch({\r\n            urlOptions: {\r\n                placeHolders: {\r\n                    id: values.id,\r\n                }\r\n            },\r\n            body: {\r\n                name: values.name.trim(),\r\n                description: values.description,\r\n            },\r\n        });\r\n\r\n        // @ts-ignore\r\n        if (addTagRes && addTagRes.status === 'ok') {\r\n            openSuccessNotification();\r\n\r\n\r\n            actions.resetForm();\r\n        }\r\n        else {\r\n            openErrorNotification();\r\n        }\r\n\r\n\r\n        actions.setSubmitting(false);\r\n\r\n    };\r\n\r\n\r\n    const getisSubmitButtonDisabled = (values, isValid) => {\r\n        if (!values.name || !isValid) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    return (\r\n        <Formik\r\n            onSubmit={(values, actions) => handleSubmit(values, actions)}\r\n            // validationSchema={validationSchema}\r\n            validateOnBlur={false}\r\n            enableReinitialize={true}\r\n            initialValues={\r\n                { ...initialValues }\r\n            }\r\n        >\r\n            {({\r\n                handleChange,\r\n                values,\r\n                handleSubmit,\r\n                errors,\r\n                isValid,\r\n                isSubmitting,\r\n                touched,\r\n                handleBlur,\r\n                setFieldTouched,\r\n                handleReset,\r\n            }) => (\r\n                    <>\r\n                        <Input\r\n                            label='Title'\r\n                            value={values.name}\r\n                            name='name'\r\n                            isError={(touched.name && errors.name) ||\r\n                                (!isSubmitting && configureSMSStata.error['error']['name'])}\r\n\r\n                            errorString={(touched.name && errors.name) ||\r\n                                (!isSubmitting && configureSMSStata.error['error']['name'])}\r\n                            onChange={(e: any) => {\r\n                                handleChange(e);\r\n                                setFieldTouched('name');\r\n                            }}\r\n                        />\r\n                        <TextArea\r\n                            label='Description'\r\n                            value={values.description}\r\n                            name='description'\r\n                            isError={(touched.description && errors.description) ||\r\n                                (!isSubmitting && configureSMSStata.error['error']['description'])}\r\n\r\n                            errorString={(touched.description && errors.description) ||\r\n                                (!isSubmitting && configureSMSStata.error['error']['description'])}\r\n                            onChange={(e: any) => {\r\n                                handleChange(e);\r\n                                setFieldTouched('description');\r\n                            }}\r\n                        />\r\n                    </>\r\n                )}\r\n        </Formik>\r\n\r\n    )\r\n}\r\n\r\nexport default SMSConfiguaration\r\n","import React from 'react';\r\n\r\n\r\n// import lib\r\nimport { Upload, message, Switch, Select, Button, notification, Modal, Tabs } from 'antd';\r\n\r\n// import components \r\nimport SendCustomSMS from \"./SendCustomSMS\";\r\nimport SMSConfiguaration from \"./SMSConfiguaration\";\r\n\r\n\r\nconst { TabPane } = Tabs;\r\n\r\n\r\n\r\ninterface Props {\r\n\r\n}\r\n\r\nconst Sms = (props: Props) => {\r\n    return (\r\n        <>\r\n            <div className='siteInfoContainer'>\r\n\r\n                <Tabs defaultActiveKey=\"1\" >\r\n                    <TabPane tab=\"Send custom SMS\" key=\"1\">\r\n                        <SendCustomSMS />\r\n                    </TabPane>\r\n\r\n                    <TabPane tab=\"SMS configuaration\" key=\"2\">\r\n                        <SMSConfiguaration />\r\n                    </TabPane>\r\n\r\n                </Tabs>\r\n\r\n            </div>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Sms\r\n","import Sms from \"./Sms\";\r\nexport default Sms; ","import React, { useState, useEffect } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n\r\nimport { useHandleFetch } from '../../hooks';\r\n// import third party ui lib\r\nimport { Upload, message, Switch, Select, Button, notification, Modal, Tooltip,Checkbox  } from 'antd';\r\n\r\nimport {\r\n    FileOutlined,\r\n    InboxOutlined,\r\n    FileAddOutlined,\r\n    DeleteOutlined,\r\n    CheckCircleOutlined,\r\n    CloseOutlined,\r\n    CheckOutlined,\r\n    InfoCircleOutlined,\r\n    PlusOutlined,\r\n    FileImageFilled\r\n} from '@ant-design/icons';\r\n\r\n\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport MediaLibrary from \"../../components/MediaLibrary\";\r\n\r\nconst validationSchema = Yup.object().shape({\r\n});\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Tag Created',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n    notification.error({\r\n        message: message || 'Something Went Wrong',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst initialValues = {\r\n    \"fromEmail\": \"\",\r\n    \"fromName\": \"\",\r\n    \"host\": \"\",\r\n    \"encryption\":\"\",\r\n    \"port\":'',\r\n    \"smtpUsername\":\"\",\r\n    \"smtpPassword\": \"\"\r\n}\r\n\r\n\r\n\r\ninterface Props {\r\n}\r\n\r\nconst ConfigureSTMP = ({  }: Props) => {\r\n\r\n    const [getEmailConfigurationState, handleGetEmailConfigurationFetch] = useHandleFetch({}, 'getEmailConfiguration');\r\n    const [emailConfigurationState, handleEmailConfigurationFetch] = useHandleFetch({}, 'configureEmailSTMP');\r\n \r\n    const [isAuthenticated,setIsAuthenticated] = useState(true);\r\n    const [configurationData,setConfigurationData] = useState({}); \r\n\r\n\r\n\r\n    useEffect(() => {\r\n      const getEmailConfiguration = async () => {\r\n          const res = await handleGetEmailConfigurationFetch({});\r\n          // @ts-ignore\r\n          if(res){\r\n              // @ts-ignore\r\n            setConfigurationData(res); \r\n            setIsAuthenticated(res['authentication'])\r\n          }\r\n      }; \r\n      getEmailConfiguration(); \r\n    }, [])\r\n\r\n\r\n    console.log('getEmailConfigurationState',getEmailConfigurationState)\r\n\r\n    const handleSubmit = async (values: any, actions: any) => {\r\n        const addTagRes = await handleEmailConfigurationFetch({\r\n            body: {\r\n                \"fromEmail\": values.fromEmail.trim(),\r\n                \"fromName\": values.fromName.trim(),\r\n                \"host\": values.host.trim(),\r\n                \"encryption\":values.encryption.trim(),\r\n                \"port\":values.port,\r\n                \"authentication\": isAuthenticated,\r\n                \"smtpUsername\":values.smtpUsername.trim(),\r\n                \"smtpPassword\": values.smtpPassword.trim()\r\n            },\r\n        });\r\n\r\n        // @ts-ignore\r\n        if (addTagRes && addTagRes.status === 'ok') {\r\n           \r\n        }\r\n        else {\r\n            // openErrorNotification(\"Something went wrong, Couldn't updated STMP configuration\");\r\n        }\r\n\r\n\r\n        actions.setSubmitting(false);\r\n\r\n    };\r\n\r\n\r\n\r\n    const getisSubmitButtonDisabled = (values, isValid) => {\r\n        if (!values.name || !isValid) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n\r\n\r\n    \r\n\tuseEffect(() => {\r\n\t\tif (!emailConfigurationState['isLoading']) {\r\n\t\t\tconst error = emailConfigurationState['error'];\r\n\t\t\tif (error['isError'] && Object.keys(error['error']).length > 0) {\r\n\r\n\t\t\t\tif (error['error']['registerError']) {\r\n\t\t\t\t\t// setServerErrors(error['error']['registerError']);\r\n\t\t\t\t} else if (error['error']['checkoutError']) {\r\n\t\t\t\t\t// setServerErrors(error['error']['checkoutError']);\r\n\t\t\t\t}\r\n\r\n\t\t\t\telse {\r\n\t\t\t\t\t// setServerErrors(error['error']);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst errors =\r\n\t\t\t\t\tObject.values(error['error']).length > 0\r\n\t\t\t\t\t\t? Object.values(error['error'])\r\n\t\t\t\t\t\t: [];\r\n\t\t\t\terrors.forEach((err, i) => {\r\n\t\t\t\t\tif (typeof err === 'string') {\r\n\t\t\t\t\t\topenErrorNotification(err);\r\n\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if (typeof err === 'object') {\r\n\t\t\t\t\t\tif (err && Object.keys(err).length > 0) {\r\n\t\t\t\t\t\t\tconst errs = Object.values(err);\r\n\t\t\t\t\t\t\terrs.forEach(err => {\r\n\t\t\t\t\t\t\t\topenErrorNotification(err);\r\n\t\t\t\t\t\t\t})\r\n\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (\r\n\t\t\t!emailConfigurationState['isLoading'] &&\r\n\t\t\tObject.keys(emailConfigurationState.data).length > 0\r\n\t\t) {\r\n\t\t\tif (emailConfigurationState['data']['status'] === 'ok') {\r\n                openSuccessNotification('STMP Configuration Updated!');\r\n\t\t\t\t// history.push({\r\n\t\t\t\t//   pathname: '/orderDetails',\r\n\t\t\t\t//   state: checkoutState['data']\r\n\t\t\t\t// })\r\n\r\n\t\t\t\t// clearCart();\r\n\t\t\t\t// setIsModalShown(true);\r\n\t\t\t}\r\n\t\t}\r\n\t}, [emailConfigurationState]);\r\n\r\n\r\n\r\n    const handleAuthenticatedChange = (e) => {\r\n        setIsAuthenticated(e.target.checked);\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <Formik\r\n            onSubmit={(values, actions) => handleSubmit(values, actions)}\r\n            validationSchema={validationSchema}\r\n            validateOnBlur={false}\r\n            enableReinitialize={true}\r\n            initialValues={\r\n                { ...initialValues, ...configurationData }\r\n            }\r\n        >\r\n            {({\r\n                handleChange,\r\n                values,\r\n                handleSubmit,\r\n                errors,\r\n                isValid,\r\n                isSubmitting,\r\n                touched,\r\n                handleBlur,\r\n                setFieldTouched,\r\n                handleReset,\r\n            }) => (\r\n                    <>\r\n\r\n                                         \t<div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\tdisplay: 'flex',\r\n\t\t\t\t\t\t\t\t\t\t\t\tjustifyContent: 'space-between'\r\n\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\twidth: '49%',\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t  <Input\r\n                                                    label='From Email'\r\n                                                    value={values.fromEmail}\r\n                                                    name='fromEmail'\r\n                                                    isError={(touched.fromEmail && errors.fromEmail) ||\r\n                                                        (!isSubmitting && emailConfigurationState.error['error']['fromEmail'])}\r\n\r\n                                                    errorString={(touched.fromEmail && errors.fromEmail) ||\r\n                                                        (!isSubmitting && emailConfigurationState.error['error']['fromEmail'])}\r\n                                                    onChange={(e: any) => {\r\n                                                        handleChange(e);\r\n                                                        setFieldTouched('fromEmail');\r\n                                                    }}\r\n                                                     />\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\twidth: '49%'\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\r\n                                                    <Input\r\n                                                    label='From Name'\r\n                                                    value={values.fromName}\r\n                                                    name='fromName'\r\n                                                    isError={(touched.fromName && errors.fromName) ||\r\n                                                        (!isSubmitting && emailConfigurationState.error['error']['fromName'])}\r\n\r\n                                                    errorString={(touched.fromName && errors.fromName) ||\r\n                                                        (!isSubmitting && emailConfigurationState.error['error']['fromName'])}\r\n                                                    onChange={(e: any) => {\r\n                                                        handleChange(e);\r\n                                                        setFieldTouched('fromName');\r\n                                                    }}\r\n                                                />\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\r\n\r\n                                            <div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\tdisplay: 'flex',\r\n\t\t\t\t\t\t\t\t\t\t\t\tjustifyContent: 'space-between'\r\n\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\twidth: '49%',\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}>\r\n                                                      <Input\r\n                                                    label='Host'\r\n                                                    value={values.host}\r\n                                                    name='host'\r\n                                                    isError={(touched.host && errors.host) ||\r\n                                                        (!isSubmitting && emailConfigurationState.error['error']['host'])}\r\n\r\n                                                    errorString={(touched.host && errors.host) ||\r\n                                                        (!isSubmitting && emailConfigurationState.error['error']['host'])}\r\n                                                    onChange={(e: any) => {\r\n                                                        handleChange(e);\r\n                                                        setFieldTouched('host');\r\n                                                    }}\r\n                                                     />\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t  \r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\twidth: '49%'\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\r\n                                                    <Input\r\n                                                    label='Encryption'\r\n                                                    value={values.encryption}\r\n                                                    name='encryption'\r\n                                                    isError={(touched.encryption && errors.encryption) ||\r\n                                                        (!isSubmitting && emailConfigurationState.error['error']['encryption'])}\r\n\r\n                                                    errorString={(touched.encryption && errors.encryption) ||\r\n                                                        (!isSubmitting && emailConfigurationState.error['error']['encryption'])}\r\n                                                    onChange={(e: any) => {\r\n                                                        handleChange(e);\r\n                                                        setFieldTouched('encryption');\r\n                                                    }}\r\n                                                />\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\r\n\r\n\r\n                                            <div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\tdisplay: 'flex',\r\n\t\t\t\t\t\t\t\t\t\t\t\tjustifyContent: 'space-between'\r\n\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\twidth: '49%',\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t  <Input\r\n                                                    label='STMP Username'\r\n                                                    value={values.smtpUsername}\r\n                                                    name='smtpUsername'\r\n                                                    isError={(touched.smtpUsername && errors.smtpUsername) ||\r\n                                                        (!isSubmitting && emailConfigurationState.error['error']['smtpUsername'])}\r\n\r\n                                                    errorString={(touched.smtpUsername && errors.smtpUsername) ||\r\n                                                        (!isSubmitting && emailConfigurationState.error['error']['smtpUsername'])}\r\n                                                    onChange={(e: any) => {\r\n                                                        handleChange(e);\r\n                                                        setFieldTouched('smtpUsername');\r\n                                                    }}\r\n                                                    />\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\twidth: '49%'\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\r\n                                                    <Input\r\n                                                    label='STMP Password'\r\n                                                    value={values.smtpPassword}\r\n                                                    name='smtpPassword'\r\n                                                    isError={(touched.smtpPassword && errors.smtpPassword) ||\r\n                                                        (!isSubmitting && emailConfigurationState.error['error']['smtpPassword'])}\r\n\r\n                                                    errorString={(touched.smtpPassword && errors.smtpPassword) ||\r\n                                                        (!isSubmitting && emailConfigurationState.error['error']['smtpPassword'])}\r\n                                                    onChange={(e: any) => {\r\n                                                        handleChange(e);\r\n                                                        setFieldTouched('smtpPassword');\r\n                                                    }}\r\n                                                />\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\r\n\r\n                                            <div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\twidth: '49%'\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}>\r\n                                                  <Input\r\n                                                     type='number'\r\n                                                    label='Port'\r\n                                                    value={values.port}\r\n                                                    name='port'\r\n                                                    isError={(touched.port && errors.port) ||\r\n                                                        (!isSubmitting && emailConfigurationState.error['error']['port'])}\r\n\r\n                                                    errorString={(touched.port && errors.port) ||\r\n                                                        (!isSubmitting && emailConfigurationState.error['error']['port'])}\r\n                                                    onChange={(e: any) => {\r\n                                                        handleChange(e);\r\n                                                        setFieldTouched('port');\r\n                                                    }}\r\n                                                    />\r\n                                            </div>\r\n\r\n                                        \r\n                                            <Checkbox\r\n                                            value={isAuthenticated}\r\n                                             onChange={handleAuthenticatedChange}>\r\n                                                    <span className='checkBoxFieldLabel'>\r\n                                                        Authentication\r\n                                                    </span>\r\n                                                    \r\n                                                </Checkbox>    \r\n\r\n\r\n\r\n<div style={{\r\n    marginTop:'20px'\r\n}}></div>\r\n                                      <div style={{\r\n                                          display:'block',\r\n                                          marginBottom:'20px',\r\n                                          marginTop:'20px',\r\n                                      }}>\r\n                                                    \r\n                                      <Button\r\n\r\n                                        onClick={(e: any) => handleSubmit(e)}\r\n                                        loading={emailConfigurationState.isLoading}\r\n                                        className='btnPrimaryClassNameoutline'\r\n                                        >\r\n                                        Update Email Configuration\r\n                                        </Button>      \r\n                                          </div>      \r\n                    </>\r\n                )}\r\n        </Formik>\r\n    );\r\n};\r\n\r\nexport default ConfigureSTMP;\r\n","import React, { useState,useEffect } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n\r\nimport { useHandleFetch } from '../../hooks';\r\n// import third party ui lib\r\nimport { Upload, message, Switch, Select, Button, notification, Modal,Tabs } from 'antd';\r\n\r\nimport {\r\n    FileOutlined,\r\n    InboxOutlined,\r\n    FileAddOutlined,\r\n    DeleteOutlined,\r\n    CheckCircleOutlined,\r\n    CloseOutlined,\r\n    CheckOutlined,\r\n    InfoCircleOutlined,\r\n    PlusOutlined,\r\n    FileImageFilled\r\n} from '@ant-design/icons';\r\n\r\n\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport MediaLibrary from \"../../components/MediaLibrary\";\r\nimport CKEditor from '@ckeditor/ckeditor5-react';\r\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\r\n\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    name: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\n\r\nconst { TabPane } = Tabs;\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'New Customer Template Updated',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n    notification.error({\r\n        message: message || 'Something Went Wrong',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst initialValues = {\r\n    name: '',\r\n    description: '',\r\n}\r\n\r\n\r\n\r\ninterface Props {\r\n   visible: boolean;\r\n   setVisible: any;\r\n\r\n}\r\n\r\nconst AddNewBrand = ({ visible, setVisible }: Props) => {\r\n\r\n    const [autoEmailTemplate, handleAutoEmailTemplateFetch] = useHandleFetch({}, 'configureAutoEmailTemplate');\r\n    const [getConfigureAutoEmailTemplate, handleGetConfigureAutoEmailTemplateFetch] = useHandleFetch({}, 'getConfigureAutoEmailTemplate');\r\n    \r\n    \r\n    const [customer, setcustomer] = useState({\r\n        subject:'',\r\n        body:'',\r\n    }); \r\n\r\n    const [admin, setadmin] = useState({\r\n        subject:'',\r\n        body:'',\r\n    }); \r\n\r\n    const handleSubmit = async () => {\r\n        const getConfigurationAutoEmailTemplateRes = await handleAutoEmailTemplateFetch({\r\n            body: {\r\n                \"event\": \"newCustomer\",\r\n                \"customer\":{\r\n                    ...customer\r\n                },\r\n                \"admin\":{\r\n                    ...admin\r\n                }\r\n            \r\n            },\r\n        });\r\n\r\n        // @ts-ignore\r\n        if (getConfigurationAutoEmailTemplateRes && getConfigurationAutoEmailTemplateRes.status === 'ok') {\r\n            openSuccessNotification();\r\n            setVisible(false);\r\n        }\r\n        else {\r\n            openErrorNotification();\r\n        }\r\n\r\n    };\r\n\r\n    useEffect(()=>{\r\n        const getCustomerAutoEmail = async () => {\r\n            const res = await handleAutoEmailTemplateFetch({\r\n                urlOptions: {\r\n                    placeHolders: {\r\n                        eventName: 'newCustomer'\r\n                    }\r\n                }\r\n            }); \r\n\r\n            // set auto email template to customer and admin\r\n        }; \r\n        getCustomerAutoEmail(); \r\n\r\n    },[]);\r\n\r\n\r\n    const handleCancel = (e: any) => {\r\n        setVisible(false);\r\n    };\r\n\r\n\r\n\r\n    return (\r\n        <Modal\r\n        width={'80vw'}\r\n        style={{\r\n            top: '40px'\r\n        }}\r\n        title=\"New Customer Event Template\"\r\n        visible={visible}\r\n        onOk={(e: any) => handleSubmit()}\r\n        onCancel={handleCancel}\r\n        okText='Submit'\r\n        okButtonProps={{\r\n            loading: autoEmailTemplate.isLoading,\r\n            htmlType: \"submit\",\r\n            // disabled: getisSubmitButtonDisabled(values, isValid)\r\n        }}\r\n        bodyStyle={{\r\n            margin: '10px',\r\n            padding: '10px'\r\n        }}\r\n        footer={false}\r\n    >\r\n     <Tabs defaultActiveKey=\"1\" >\r\n     <TabPane tab=\"Customer\" key=\"1\">\r\n        \r\n        <div style={{\r\n            display:'flex',\r\n\r\n        }}>\r\n            <div style={{\r\n                width:'70%'\r\n            }}>\r\n            <Input\r\n            label='Subject'\r\n            value={customer.subject}\r\n            name='subject'\r\n            onChange={(e:any) => {\r\n                setcustomer({\r\n                    ...customer,\r\n                    subject: e.target.value\r\n                })\r\n            }}\r\n        />\r\n\r\n            <h3 className='inputFieldLabel'>\r\n                Body\r\n            </h3>\r\n\r\n\r\n        <CKEditor\r\n        editor={ClassicEditor}\r\n        data={customer.body}\r\n        onInit={editor => {\r\n            // You can store the \"editor\" and use when it is needed.\r\n            console.log('Editor is ready to use!', editor);\r\n        }}\r\n        onChange={(event, editor) => {\r\n            const data = editor.getData();\r\n            setcustomer({\r\n                ...customer,\r\n                body: data\r\n            })\r\n        }}\r\n        onBlur={(event, editor) => {\r\n            console.log('Blur.', editor);\r\n        }}\r\n        onFocus={(event, editor) => {\r\n            console.log('Focus.', editor);\r\n        }}\r\n        />\r\n\r\n<div style={{\r\n                                          display:'block',\r\n                                          marginBottom:'20px',\r\n                                          marginTop:'20px',\r\n                                      }}>   \r\n                                      <Button\r\n                                        onClick={handleSubmit}\r\n                                        loading={autoEmailTemplate.isLoading}\r\n                                        className='btnPrimaryClassNameoutline'\r\n                                        >\r\n                                        Update Template\r\n                                        </Button>      \r\n                                    </div>\r\n\r\n            </div>\r\n\r\n            <div style={{\r\n                width:'30%',\r\n                overflowY:'auto',\r\n                background:\"#f7f7f7\",\r\n                marginLeft:'20px',\r\n                padding:'10px',\r\n                borderRadius:'8px'\r\n            }}>\r\n                <h4>Information Tags</h4>\r\n                <p style={{\r\n                    fontSize:'12px'\r\n                }}>\r\n                    Place the following tags to replace them with actual data while sending email\r\n                </p>\r\n                <ul style={{\r\n                    padding:'15px'\r\n                }}>\r\n                    <li style={{\r\n                        fontSize:'12px',\r\n                        marginBottom:'10px',\r\n                        lineHeight:1.7,\r\n                        fontWeight:500\r\n                    }}><b style={{\r\n                        borderRadius:\"15px\",\r\n                        backgroundColor:'#ddd',\r\n                        padding:\"1px 10px\"\r\n                    }}>&lt;?=order.added?&gt; :</b> Order time</li>\r\n                    <li\r\n                    style={{\r\n                        fontSize:'12px',\r\n                        lineHeight:2,\r\n                        fontWeight:500\r\n                    }}\r\n                    ><b\r\n                    style={{\r\n                        borderRadius:\"15px\",\r\n                        backgroundColor:'#ddd',\r\n                        padding:\"1px 10px\"\r\n                    }}\r\n                    >&lt;?shippingAddress.firstName?&gt; :</b> Shipping first Name</li>\r\n                </ul>\r\n\r\n        </div>\r\n        </div>\r\n\r\n     </TabPane>\r\n\r\n    <TabPane tab=\"Admin\" key=\"2\">\r\n\r\n    <div style={{\r\n        display:'flex'\r\n    }}>\r\n        <div style={{\r\n            width: '70%'\r\n        }}>\r\n\r\n<Input\r\n            label='Subject'\r\n            value={admin.subject}\r\n            name='subject'\r\n            onChange={(e:any) => {\r\n                setadmin({\r\n                    ...admin,\r\n                    subject: e.target.value\r\n                })\r\n            }}\r\n        />\r\n\r\n<h3 className='inputFieldLabel'>\r\n\tBody\r\n</h3>\r\n\r\n\r\n<CKEditor\r\neditor={ClassicEditor}\r\ndata={admin.body}\r\nonInit={editor => {\r\n    // You can store the \"editor\" and use when it is needed.\r\n    console.log('Editor is ready to use!', editor);\r\n}}\r\nonChange={(event, editor) => {\r\n    const data = editor.getData();\r\n    setadmin({\r\n        ...admin,\r\n        body: data\r\n    })\r\n}}\r\nonBlur={(event, editor) => {\r\n    console.log('Blur.', editor);\r\n}}\r\nonFocus={(event, editor) => {\r\n    console.log('Focus.', editor);\r\n}}\r\n/>\r\n\r\n        \r\n<div style={{\r\n            display:'block',\r\n            marginBottom:'20px',\r\n            marginTop:'20px',\r\n        }}>   \r\n        <Button\r\n        onClick={handleSubmit}\r\n        loading={autoEmailTemplate.isLoading}\r\n        className='btnPrimaryClassNameoutline'\r\n        >\r\n        Update Template\r\n        </Button>      \r\n    </div>    \r\n\r\n\r\n        </div>\r\n        <div style={{\r\n                width:'30%',\r\n                overflowY:'auto',\r\n                background:\"#f7f7f7\",\r\n                marginLeft:'20px',\r\n                padding:'10px',\r\n                borderRadius:'8px'\r\n            }}>\r\n                <h4>Information Tags</h4>\r\n                <p style={{\r\n                    fontSize:'12px'\r\n                }}>\r\n                    Place the following tags to replace them with actual data while sending email\r\n                </p>\r\n                <ul style={{\r\n                    padding:'15px'\r\n                }}>\r\n                    <li style={{\r\n                        fontSize:'12px',\r\n                        marginBottom:'10px',\r\n                        lineHeight:1.7,\r\n                        fontWeight:500\r\n                    }}><b style={{\r\n                        borderRadius:\"15px\",\r\n                        backgroundColor:'#ddd',\r\n                        padding:\"1px 10px\"\r\n                    }}>&lt;?=order.added?&gt; :</b> Order time</li>\r\n                    <li\r\n                    style={{\r\n                        fontSize:'12px',\r\n                        lineHeight:2,\r\n                        fontWeight:500\r\n                    }}\r\n                    ><b\r\n                    style={{\r\n                        borderRadius:\"15px\",\r\n                        backgroundColor:'#ddd',\r\n                        padding:\"1px 10px\"\r\n                    }}\r\n                    >&lt;?shippingAddress.firstName?&gt; :</b> Shipping first Name</li>\r\n                </ul>\r\n\r\n        </div>\r\n    </div>\r\n\r\n\r\n\r\n     \r\n    </TabPane>\r\n\r\n</Tabs>\r\n\r\n    </Modal>\r\n    );\r\n};\r\n\r\nexport default AddNewBrand;\r\n","import React, { useState,useEffect } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n\r\nimport { useHandleFetch } from '../../hooks';\r\n// import third party ui lib\r\nimport { Upload, message, Switch, Select, Button, notification, Modal,Tabs } from 'antd';\r\n\r\nimport {\r\n    FileOutlined,\r\n    InboxOutlined,\r\n    FileAddOutlined,\r\n    DeleteOutlined,\r\n    CheckCircleOutlined,\r\n    CloseOutlined,\r\n    CheckOutlined,\r\n    InfoCircleOutlined,\r\n    PlusOutlined,\r\n    FileImageFilled\r\n} from '@ant-design/icons';\r\n\r\n\r\n\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport MediaLibrary from \"../../components/MediaLibrary\";\r\nimport CKEditor from '@ckeditor/ckeditor5-react';\r\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\r\n\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    // name: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\n\r\nconst { TabPane } = Tabs;\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'New Customer Template Updated',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n    notification.error({\r\n        message: message || 'Something Went Wrong',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst initialValues = {\r\n    name: '',\r\n    description: '',\r\n}\r\n\r\n\r\n\r\ninterface Props {\r\n   visible: boolean;\r\n   setVisible: any;\r\n\r\n}\r\n\r\nconst AddNewBrand = ({ visible, setVisible }: Props) => {\r\n\r\n    const [autoEmailTemplate, handleAutoEmailTemplateFetch] = useHandleFetch({}, 'configureAutoEmailTemplate');\r\n\r\n    const [customer, setcustomer] = useState({\r\n        subject:'',\r\n        body:'',\r\n    }); \r\n\r\n    const [admin, setadmin] = useState({\r\n        subject:'',\r\n        body:'',\r\n    }); \r\n\r\n\r\n\r\n    const handleSubmit = async () => {\r\n        const getConfigurationAutoEmailTemplateRes = await handleAutoEmailTemplateFetch({\r\n            body: {\r\n                \"event\": \"orderStatus\",\r\n                \"customer\":{\r\n                    ...customer\r\n                },\r\n                \"admin\":{\r\n                    ...admin\r\n                }\r\n            \r\n            },\r\n        });\r\n\r\n        // @ts-ignore\r\n        if (getConfigurationAutoEmailTemplateRes && getConfigurationAutoEmailTemplateRes.status === 'ok') {\r\n            openSuccessNotification();\r\n            setVisible(false);\r\n        }\r\n        else {\r\n            openErrorNotification();\r\n        }\r\n\r\n    };\r\n\r\n    useEffect(()=>{\r\n        const getCustomerAutoEmail = async () => {\r\n            const res = await handleAutoEmailTemplateFetch({\r\n                urlOptions: {\r\n                    placeHolders: {\r\n                        eventName: 'orderStatus'\r\n                    }\r\n                }\r\n            }); \r\n\r\n            // set auto email template to customer and admin\r\n        }; \r\n        getCustomerAutoEmail(); \r\n\r\n    },[]);\r\n\r\n\r\n    const handleCancel = (e: any) => {\r\n        setVisible(false);\r\n    };\r\n\r\n\r\n\r\n    return (\r\n        <Modal\r\n        width={'70vw'}\r\n        style={{\r\n            top: '40px'\r\n        }}\r\n        title=\"Order Status Template\"\r\n        visible={visible}\r\n        onOk={(e: any) => handleSubmit()}\r\n        onCancel={handleCancel}\r\n        okText='Submit'\r\n        okButtonProps={{\r\n            loading: autoEmailTemplate.isLoading,\r\n            htmlType: \"submit\",\r\n            // disabled: getisSubmitButtonDisabled(values, isValid)\r\n        }}\r\n        bodyStyle={{\r\n            margin: '10px',\r\n            padding: '10px'\r\n        }}\r\n        footer={false}\r\n    >\r\n     <Tabs defaultActiveKey=\"1\" >\r\n     <TabPane tab=\"Customer\" key=\"1\">\r\n        \r\n        <div style={{\r\n            display:'flex',\r\n\r\n        }}>\r\n            <div style={{\r\n                width:'70%'\r\n            }}>\r\n            <Input\r\n            label='Subject'\r\n            value={customer.subject}\r\n            name='subject'\r\n            onChange={(e:any) => {\r\n                setcustomer({\r\n                    ...customer,\r\n                    subject: e.target.value\r\n                })\r\n            }}\r\n        />\r\n\r\n            <h3 className='inputFieldLabel'>\r\n                Body\r\n            </h3>\r\n\r\n\r\n        <CKEditor\r\n        editor={ClassicEditor}\r\n        data={customer.body}\r\n        onInit={editor => {\r\n            // You can store the \"editor\" and use when it is needed.\r\n            console.log('Editor is ready to use!', editor);\r\n        }}\r\n        onChange={(event, editor) => {\r\n            const data = editor.getData();\r\n            setcustomer({\r\n                ...customer,\r\n                body: data\r\n            })\r\n        }}\r\n        onBlur={(event, editor) => {\r\n            console.log('Blur.', editor);\r\n        }}\r\n        onFocus={(event, editor) => {\r\n            console.log('Focus.', editor);\r\n        }}\r\n        />\r\n\r\n        \r\n                                    <div style={{\r\n                                          display:'block',\r\n                                          marginBottom:'20px',\r\n                                          marginTop:'20px',\r\n                                      }}>   \r\n                                      <Button\r\n                                        onClick={handleSubmit}\r\n                                        loading={autoEmailTemplate.isLoading}\r\n                                        className='btnPrimaryClassNameoutline'\r\n                                        >\r\n                                        Update Template\r\n                                        </Button>      \r\n                                    </div>\r\n\r\n            </div>\r\n\r\n            <div style={{\r\n                width:'30%',\r\n                overflowY:'auto',\r\n                background:\"#f7f7f7\",\r\n                marginLeft:'20px',\r\n                padding:'10px',\r\n                borderRadius:'8px'\r\n            }}>\r\n                <h4>Information Tags</h4>\r\n                <p style={{\r\n                    fontSize:'12px'\r\n                }}>\r\n                    Place the following tags to replace them with actual data while sending email\r\n                </p>\r\n                <ul style={{\r\n                    padding:'15px'\r\n                }}>\r\n                    <li style={{\r\n                        fontSize:'12px',\r\n                        marginBottom:'10px',\r\n                        lineHeight:1.7,\r\n                        fontWeight:500\r\n                    }}><b style={{\r\n                        borderRadius:\"15px\",\r\n                        backgroundColor:'#ddd',\r\n                        padding:\"1px 10px\"\r\n                    }}>&lt;?=order.added?&gt; :</b> Order time</li>\r\n                    <li\r\n                    style={{\r\n                        fontSize:'12px',\r\n                        lineHeight:2,\r\n                        fontWeight:500\r\n                    }}\r\n                    ><b\r\n                    style={{\r\n                        borderRadius:\"15px\",\r\n                        backgroundColor:'#ddd',\r\n                        padding:\"1px 10px\"\r\n                    }}\r\n                    >&lt;?shippingAddress.firstName?&gt; :</b> Shipping first Name</li>\r\n                </ul>\r\n\r\n        </div>\r\n        </div>\r\n\r\n     </TabPane>\r\n\r\n    <TabPane tab=\"Admin\" key=\"2\">\r\n\r\n                    <div style={{\r\n                        display: 'flex',\r\n                \r\n                    }}>\r\n\r\n                        <div style={{\r\n                            width: '70%'\r\n                        }}>\r\n   <Input\r\n                            label='Subject'\r\n                            value={admin.subject}\r\n                            name='subject'\r\n                            onChange={(e:any) => {\r\n                                setadmin({\r\n                                    ...admin,\r\n                                    subject: e.target.value\r\n                                })\r\n                            }}\r\n                        />\r\n\r\n                        <h3 className='inputFieldLabel'>\r\n                            Body\r\n                        </h3>\r\n\r\n\r\n                                <CKEditor\r\n                                editor={ClassicEditor}\r\n                                data={admin.body}\r\n                                onInit={editor => {\r\n                                    // You can store the \"editor\" and use when it is needed.\r\n                                    console.log('Editor is ready to use!', editor);\r\n                                }}\r\n                                onChange={(event, editor) => {\r\n                                    const data = editor.getData();\r\n                                    setadmin({\r\n                                        ...admin,\r\n                                        body: data\r\n                                    })\r\n                                }}\r\n                                onBlur={(event, editor) => {\r\n                                    console.log('Blur.', editor);\r\n                                }}\r\n                                onFocus={(event, editor) => {\r\n                                    console.log('Focus.', editor);\r\n                                }}\r\n                                />\r\n\r\n\r\n                                    <div style={{\r\n                                          display:'block',\r\n                                          marginBottom:'20px',\r\n                                          marginTop:'20px',\r\n                                      }}>   \r\n                                      <Button\r\n                                        onClick={handleSubmit}\r\n                                        loading={autoEmailTemplate.isLoading}\r\n                                        className='btnPrimaryClassNameoutline'\r\n                                        >\r\n                                        Update Template\r\n                                        </Button>      \r\n                                    </div>\r\n                        </div>\r\n\r\n                        <div style={{\r\n                width:'30%',\r\n                overflowY:'auto',\r\n                background:\"#f7f7f7\",\r\n                marginLeft:'20px',\r\n                padding:'10px',\r\n                borderRadius:'8px'\r\n            }}>\r\n                <h4>Information Tags</h4>\r\n                <p style={{\r\n                    fontSize:'12px'\r\n                }}>\r\n                    Place the following tags to replace them with actual data while sending email\r\n                </p>\r\n                <ul style={{\r\n                    padding:'15px'\r\n                }}>\r\n                    <li style={{\r\n                        fontSize:'12px',\r\n                        marginBottom:'10px',\r\n                        lineHeight:1.7,\r\n                        fontWeight:500\r\n                    }}><b style={{\r\n                        borderRadius:\"15px\",\r\n                        backgroundColor:'#ddd',\r\n                        padding:\"1px 10px\"\r\n                    }}>&lt;?=order.added?&gt; :</b> Order time</li>\r\n                    <li\r\n                    style={{\r\n                        fontSize:'12px',\r\n                        lineHeight:2,\r\n                        fontWeight:500\r\n                    }}\r\n                    ><b\r\n                    style={{\r\n                        borderRadius:\"15px\",\r\n                        backgroundColor:'#ddd',\r\n                        padding:\"1px 10px\"\r\n                    }}\r\n                    >&lt;?shippingAddress.firstName?&gt; :</b> Shipping first Name</li>\r\n                </ul>\r\n\r\n        </div>\r\n\r\n\r\n                    </div>\r\n\r\n                 \r\n                                    </TabPane>\r\n                                    </Tabs>\r\n\r\n                                    </Modal>\r\n    );\r\n};\r\n\r\nexport default AddNewBrand;\r\n","import React, { useState,useEffect } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n\r\nimport { useHandleFetch } from '../../hooks';\r\n// import third party ui lib\r\nimport { Upload, message, Switch, Select, Button, notification, Modal,Tabs } from 'antd';\r\n\r\nimport {\r\n    FileOutlined,\r\n    InboxOutlined,\r\n    FileAddOutlined,\r\n    DeleteOutlined,\r\n    CheckCircleOutlined,\r\n    CloseOutlined,\r\n    CheckOutlined,\r\n    InfoCircleOutlined,\r\n    PlusOutlined,\r\n    FileImageFilled\r\n} from '@ant-design/icons';\r\n\r\n\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport MediaLibrary from \"../../components/MediaLibrary\";\r\nimport CKEditor from '@ckeditor/ckeditor5-react';\r\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\r\n\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    name: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\n\r\nconst { TabPane } = Tabs;\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'New Customer Template Updated',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n    notification.error({\r\n        message: message || 'Something Went Wrong',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst initialValues = {\r\n    name: '',\r\n    description: '',\r\n}\r\n\r\n\r\n\r\ninterface Props {\r\n   visible: boolean;\r\n   setVisible: any;\r\n\r\n}\r\n\r\nconst AddNewBrand = ({ visible, setVisible }: Props) => {\r\n\r\n    const [autoEmailTemplate, handleAutoEmailTemplateFetch] = useHandleFetch({}, 'configureAutoEmailTemplate');\r\n    const [getConfigureAutoEmailTemplate, handleGetConfigureAutoEmailTemplateFetch] = useHandleFetch({}, 'getConfigureAutoEmailTemplate');\r\n    \r\n    \r\n    const [customer, setcustomer] = useState({\r\n        subject:'',\r\n        body:'',\r\n    }); \r\n\r\n    const [admin, setadmin] = useState({\r\n        subject:'',\r\n        body:'',\r\n    }); \r\n\r\n    const handleSubmit = async () => {\r\n        const getConfigurationAutoEmailTemplateRes = await handleAutoEmailTemplateFetch({\r\n            body: {\r\n                \"event\": \"order\",\r\n                \"customer\":{\r\n                    ...customer\r\n                },\r\n                \"admin\":{\r\n                    ...admin\r\n                }\r\n            \r\n            },\r\n        });\r\n\r\n        // @ts-ignore\r\n        if (getConfigurationAutoEmailTemplateRes && getConfigurationAutoEmailTemplateRes.status === 'ok') {\r\n            openSuccessNotification();\r\n            setVisible(false);\r\n        }\r\n        else {\r\n            openErrorNotification();\r\n        }\r\n\r\n    };\r\n\r\n    useEffect(()=>{\r\n        const getCustomerAutoEmail = async () => {\r\n            const res = await handleAutoEmailTemplateFetch({\r\n                urlOptions: {\r\n                    placeHolders: {\r\n                        eventName: 'order'\r\n                    }\r\n                }\r\n            }); \r\n\r\n            // set auto email template to customer and admin\r\n        }; \r\n        getCustomerAutoEmail(); \r\n\r\n    },[]);\r\n\r\n\r\n    const handleCancel = (e: any) => {\r\n        setVisible(false);\r\n    };\r\n\r\n\r\n\r\n    return (\r\n        <Modal\r\n        width={'80vw'}\r\n        style={{\r\n            top: '40px'\r\n        }}\r\n        title=\"Order Event Template\"\r\n        visible={visible}\r\n        onOk={(e: any) => handleSubmit()}\r\n        onCancel={handleCancel}\r\n        okText='Submit'\r\n        okButtonProps={{\r\n            loading: autoEmailTemplate.isLoading,\r\n            htmlType: \"submit\",\r\n            // disabled: getisSubmitButtonDisabled(values, isValid)\r\n        }}\r\n        bodyStyle={{\r\n            margin: '10px',\r\n            padding: '10px'\r\n        }}\r\n        footer={false}\r\n    >\r\n     <Tabs defaultActiveKey=\"1\" >\r\n     <TabPane tab=\"Customer\" key=\"1\">\r\n        \r\n        <div style={{\r\n            display:'flex',\r\n\r\n        }}>\r\n            <div style={{\r\n                width:'70%'\r\n            }}>\r\n            <Input\r\n            label='Subject'\r\n            value={customer.subject}\r\n            name='subject'\r\n            onChange={(e:any) => {\r\n                setcustomer({\r\n                    ...customer,\r\n                    subject: e.target.value\r\n                })\r\n            }}\r\n        />\r\n\r\n            <h3 className='inputFieldLabel'>\r\n                Body\r\n            </h3>\r\n\r\n\r\n        <CKEditor\r\n        editor={ClassicEditor}\r\n        data={customer.body}\r\n        onInit={editor => {\r\n            // You can store the \"editor\" and use when it is needed.\r\n            console.log('Editor is ready to use!', editor);\r\n        }}\r\n        onChange={(event, editor) => {\r\n            const data = editor.getData();\r\n            setcustomer({\r\n                ...customer,\r\n                body: data\r\n            })\r\n        }}\r\n        onBlur={(event, editor) => {\r\n            console.log('Blur.', editor);\r\n        }}\r\n        onFocus={(event, editor) => {\r\n            console.log('Focus.', editor);\r\n        }}\r\n        />\r\n\r\n<div style={{\r\n                                          display:'block',\r\n                                          marginBottom:'20px',\r\n                                          marginTop:'20px',\r\n                                      }}>   \r\n                                      <Button\r\n                                        onClick={handleSubmit}\r\n                                        loading={autoEmailTemplate.isLoading}\r\n                                        className='btnPrimaryClassNameoutline'\r\n                                        >\r\n                                        Update Template\r\n                                        </Button>      \r\n                                    </div>\r\n\r\n            </div>\r\n\r\n            <div style={{\r\n                width:'30%',\r\n                overflowY:'auto',\r\n                background:\"#f7f7f7\",\r\n                marginLeft:'20px',\r\n                padding:'10px',\r\n                borderRadius:'8px'\r\n            }}>\r\n                <h4>Information Tags</h4>\r\n                <p style={{\r\n                    fontSize:'12px'\r\n                }}>\r\n                    Place the following tags to replace them with actual data while sending email\r\n                </p>\r\n                <ul style={{\r\n                    padding:'15px'\r\n                }}>\r\n                    <li style={{\r\n                        fontSize:'12px',\r\n                        marginBottom:'10px',\r\n                        lineHeight:1.7,\r\n                        fontWeight:500\r\n                    }}><b style={{\r\n                        borderRadius:\"15px\",\r\n                        backgroundColor:'#ddd',\r\n                        padding:\"1px 10px\"\r\n                    }}>&lt;?=order.added?&gt; :</b> Order time</li>\r\n                    <li\r\n                    style={{\r\n                        fontSize:'12px',\r\n                        lineHeight:2,\r\n                        fontWeight:500\r\n                    }}\r\n                    ><b\r\n                    style={{\r\n                        borderRadius:\"15px\",\r\n                        backgroundColor:'#ddd',\r\n                        padding:\"1px 10px\"\r\n                    }}\r\n                    >&lt;?shippingAddress.firstName?&gt; :</b> Shipping first Name</li>\r\n                </ul>\r\n\r\n        </div>\r\n        </div>\r\n\r\n     </TabPane>\r\n\r\n    <TabPane tab=\"Admin\" key=\"2\">\r\n\r\n    <div style={{\r\n        display:'flex'\r\n    }}>\r\n        <div style={{\r\n            width: '70%'\r\n        }}>\r\n\r\n<Input\r\n            label='Subject'\r\n            value={admin.subject}\r\n            name='subject'\r\n            onChange={(e:any) => {\r\n                setadmin({\r\n                    ...admin,\r\n                    subject: e.target.value\r\n                })\r\n            }}\r\n        />\r\n\r\n<h3 className='inputFieldLabel'>\r\n\tBody\r\n</h3>\r\n\r\n\r\n<CKEditor\r\neditor={ClassicEditor}\r\ndata={admin.body}\r\nonInit={editor => {\r\n    // You can store the \"editor\" and use when it is needed.\r\n    console.log('Editor is ready to use!', editor);\r\n}}\r\nonChange={(event, editor) => {\r\n    const data = editor.getData();\r\n    setadmin({\r\n        ...admin,\r\n        body: data\r\n    })\r\n}}\r\nonBlur={(event, editor) => {\r\n    console.log('Blur.', editor);\r\n}}\r\nonFocus={(event, editor) => {\r\n    console.log('Focus.', editor);\r\n}}\r\n/>\r\n\r\n        \r\n<div style={{\r\n            display:'block',\r\n            marginBottom:'20px',\r\n            marginTop:'20px',\r\n        }}>   \r\n        <Button\r\n        onClick={handleSubmit}\r\n        loading={autoEmailTemplate.isLoading}\r\n        className='btnPrimaryClassNameoutline'\r\n        >\r\n        Update Template\r\n        </Button>      \r\n    </div>    \r\n\r\n\r\n        </div>\r\n        <div style={{\r\n                width:'30%',\r\n                overflowY:'auto',\r\n                background:\"#f7f7f7\",\r\n                marginLeft:'20px',\r\n                padding:'10px',\r\n                borderRadius:'8px'\r\n            }}>\r\n                <h4>Information Tags</h4>\r\n                <p style={{\r\n                    fontSize:'12px'\r\n                }}>\r\n                    Place the following tags to replace them with actual data while sending email\r\n                </p>\r\n                <ul style={{\r\n                    padding:'15px'\r\n                }}>\r\n                    <li style={{\r\n                        fontSize:'12px',\r\n                        marginBottom:'10px',\r\n                        lineHeight:1.7,\r\n                        fontWeight:500\r\n                    }}><b style={{\r\n                        borderRadius:\"15px\",\r\n                        backgroundColor:'#ddd',\r\n                        padding:\"1px 10px\"\r\n                    }}>&lt;?=order.added?&gt; :</b> Order time</li>\r\n                    <li\r\n                    style={{\r\n                        fontSize:'12px',\r\n                        lineHeight:2,\r\n                        fontWeight:500\r\n                    }}\r\n                    ><b\r\n                    style={{\r\n                        borderRadius:\"15px\",\r\n                        backgroundColor:'#ddd',\r\n                        padding:\"1px 10px\"\r\n                    }}\r\n                    >&lt;?shippingAddress.firstName?&gt; :</b> Shipping first Name</li>\r\n                </ul>\r\n\r\n        </div>\r\n    </div>\r\n\r\n\r\n\r\n     \r\n    </TabPane>\r\n\r\n</Tabs>\r\n\r\n\r\n    </Modal>\r\n    );\r\n};\r\n\r\nexport default AddNewBrand;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n\r\nimport { useHandleFetch } from '../../hooks';\r\n// import third party ui lib\r\nimport { Upload, message, Switch, Select, Button, notification, Modal, Tooltip,Checkbox  } from 'antd';\r\n\r\nimport {\r\n    FileOutlined,\r\n    InboxOutlined,\r\n    FileAddOutlined,\r\n    DeleteOutlined,\r\n    CheckCircleOutlined,\r\n    CloseOutlined,\r\n    CheckOutlined,\r\n    InfoCircleOutlined,\r\n    PlusOutlined,\r\n    FileImageFilled,\r\n    EditOutlined\r\n} from '@ant-design/icons';\r\n\r\n\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport MediaLibrary from \"../../components/MediaLibrary\";\r\nimport NewCustomerTemplate from \"./NewCustomerTemplate\";\r\nimport OrderStatusTemplateAutoEmail from \"./OrderStatusTemplateAutoEmail\";\r\nimport OrderTemplateAutoEmail from \"./OrderTemplateAutoEmail\";\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    name: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Tag Created',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n    notification.error({\r\n        message: message || 'Something Went Wrong',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n    });\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\r\ninterface Props {\r\n}\r\n\r\nconst ConfigureAutoEmail = ({  }: Props) => {\r\n\r\n    const [getAutoEmailConfigurationState, handleGetAutoEmailConfigurationFetch] = useHandleFetch({}, 'getAutoEmailConfiguration');\r\n    const [configureAutoEmailConfigurationState, handleAutoEmailConfigurationFetch] = useHandleFetch({}, 'configureAutoEmail');\r\n \r\n    \r\n    const [isnewCustomerAdmin,setnewCustomerAdmin] = useState(false);\r\n    const [isnewCustomerCustomer,setnewCustomerCustomer] = useState(false);\r\n    const [isorderAdmin,setorderAdmin] = useState(false);\r\n    const [isorderStatusAdmin,setorderStatusAdmin] = useState(false);\r\n    const [isorderCustomer,setorderCustomer] = useState(false);\r\n    const [isorderStatusCustomer,setIsorderStatusCustomer] = useState(false);\r\n    \r\n\r\n    const [newcustomermodal, setnewcustomermodal] = useState(false);\r\n    const [ordermodal, setordermodal] = useState(false);\r\n    const [orderStatusmodal, setorderStatusmodal] = useState(false);\r\n    const [autoEmailData,setAutoEmailData] = useState({}); \r\n\r\n\r\n    console.log('isnewCustomerAdmin',isnewCustomerAdmin); \r\n    console.log('isnewCustomerCustomer',isnewCustomerCustomer);\r\n    \r\n    \r\n    useEffect(()=>{\r\n\r\n        const getAutoEmailConfiguration = async () => {\r\n            const res = await handleGetAutoEmailConfigurationFetch({})\r\n            //@ts-ignore\r\n            if(res){\r\n                setAutoEmailData(autoEmailData); \r\n                setnewCustomerAdmin(res['newCustomer']['admin']); \r\n                setnewCustomerCustomer(res['newCustomer']['user']); \r\n                setIsorderStatusCustomer(res['orderStatus']['user']); \r\n                setorderStatusAdmin(res['orderStatus']['admin']); \r\n                setorderAdmin(res['order']['admin']); \r\n                setorderCustomer(res['order']['user']); \r\n            }\r\n        }; \r\n        getAutoEmailConfiguration();\r\n    },[]); \r\n\r\n\r\n    console.log('getAutoEmailConfigurationState',getAutoEmailConfigurationState); \r\n\r\n    const handleUpdateAutoEmail = async () => {\r\n        const updateAutoEmailRes = await handleAutoEmailConfigurationFetch({\r\n            body: {\r\n                newCustomer: {\r\n                    admin: isnewCustomerAdmin,\r\n                    user: isnewCustomerCustomer\r\n                },\r\n                order: {\r\n                    admin: isorderAdmin,\r\n                    user: isorderCustomer\r\n                },\r\n                orderStatus : {\r\n                    \"admin\": isorderStatusAdmin,\r\n                    \"user\": isorderStatusCustomer\r\n                },\r\n            },\r\n        });\r\n\r\n        // @ts-ignore\r\n        if (updateAutoEmailRes && updateAutoEmailRes.status === 'ok') {\r\n            openSuccessNotification('Auto email Configuration Updated!');\r\n        }\r\n        else {\r\n            openErrorNotification(\"Something went wrong, Couldn't updated Auto email configuration\");\r\n        }\r\n\r\n    };\r\n\r\n\r\n    return (\r\n        <>\r\n                                <div style={{\r\n                                    display:'flex',\r\n                                    flexDirection:'column'\r\n                                }}>\r\n                                <div style={{\r\n                                }}>\r\n                                    \r\n                                    <div style={{\r\n                                                    display:'flex',\r\n                                                    alignItems:\"center\"\r\n                                                }}>\r\n                                                <div style={{\r\n                                                    marginRight:'15px',\r\n                                                    marginTop:\"10px\"\r\n                                                }}>\r\n                                                <h3 className='checkBoxFieldLabel'>\r\n                                                New Customer\r\n                                                 </h3>\r\n                                                </div>\r\n                                                 <Button\r\n                                                 className='templateEditSmall'\r\n                                                    onClick={() => setnewcustomermodal(true)}\r\n                                                    type='link'\r\n                                                    icon={<EditOutlined />}\r\n                                                >\r\n                                                    configure Template\r\n                                                </Button>\r\n                                                </div>\r\n                                          <div style={{\r\n                                                marginTop:\"15px\"\r\n                                            }}></div>\r\n                                        <div style={{\r\n                                                display: 'flex',\r\n                                                marginTop:'15px'\r\n\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div style={{\r\n                                                        marginRight:'20px',\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}>\r\n                                                    \r\n                                                   <Checkbox\r\n                                                   checked={isnewCustomerAdmin}\r\n                                                   defaultChecked={isnewCustomerAdmin}\r\n                                                    onChange={(e) => setnewCustomerAdmin(e.target.checked)}\r\n                                                    >\r\n                                                    <span className='checkBoxSmallFieldLabel'>\r\n                                                        Admin\r\n                                                   </span>                            \r\n                                                </Checkbox> \r\n                                               </div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\r\n                                                <Checkbox \r\n                                                  checked={isnewCustomerCustomer}\r\n                                                  defaultChecked={isnewCustomerCustomer}\r\n                                                onChange={(e) => setnewCustomerCustomer(e.target.checked)}\r\n                                                   >\r\n                                                    <span className='checkBoxSmallFieldLabel'>\r\n                                                    Customer\r\n                                                    </span>                            \r\n                                               </Checkbox> \r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n                                        </div>\r\n\r\n                                    <div>\r\n\r\n\r\n                                    <div style={{\r\n                                                    display:'flex',\r\n                                                    alignItems:\"center\",\r\n                                                    marginTop:'30px'\r\n                                                }}>\r\n                                                <div style={{\r\n                                                    marginRight:'15px',\r\n                                                    marginTop:\"10px\"\r\n                                                }}>\r\n                                                <h3 className='checkBoxFieldLabel'>\r\n                                                 Order\r\n                                                 </h3>\r\n                                                </div>\r\n                                                 <Button\r\n                                                 className='templateEditSmall'\r\n                                                    onClick={() => setordermodal(true)}\r\n                                                    type='link'\r\n                                                    icon={<EditOutlined />}\r\n                                                >\r\n                                                    configure Template\r\n                                                </Button>\r\n                                                </div>\r\n\r\n\r\n                                     <div style={{\r\n                                                marginTop:\"5px\"\r\n                                            }}></div>\r\n\r\n                                        <div style={{\r\n                                                display: 'flex',\r\n                                                marginTop:'15px',\r\n                                                \r\n\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div style={{\r\n                                                        marginRight:'20px',\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}>\r\n                                                    \r\n                                                   <Checkbox\r\n                                                      checked={isorderAdmin}\r\n                                                      defaultChecked={isorderAdmin}\r\n                                                    onChange={(e) => setorderAdmin(e.target.checked)}\r\n                                                    >\r\n                                                    <span className='checkBoxSmallFieldLabel'>\r\n                                                        Admin\r\n                                                   </span>                            \r\n                                                </Checkbox> \r\n                                               </div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\r\n                                                <Checkbox \r\n                                                  checked={isorderCustomer}\r\n                                                  defaultChecked={isorderCustomer}\r\n                                                onChange={(e) => setorderCustomer(e.target.checked)}\r\n                                                   >\r\n                                                    <span className='checkBoxSmallFieldLabel'>\r\n                                                    Customer\r\n                                                    </span>                            \r\n                                               </Checkbox> \r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n                                                \r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n                                    </div>\r\n\r\n\r\n\r\n                                                <div>\r\n                                                <div style={{\r\n                                                    display:'flex',\r\n                                                    alignItems:\"center\",\r\n                                                    marginTop:\"30px\"\r\n                                                }}>\r\n                                                <div style={{\r\n                                                    marginRight:'15px',\r\n                                                    marginTop:\"10px\"\r\n                                                }}>\r\n                                           <h3 className='checkBoxFieldLabel'>\r\n                                                 Order status\r\n                                                 </h3>\r\n                                                </div>\r\n                                                 <Button\r\n                                                 className='templateEditSmall'\r\n                                                    onClick={() => setorderStatusmodal(true)}\r\n                                                    type='link'\r\n                                                    icon={<EditOutlined />}\r\n                                                >\r\n                                                    configure Template\r\n                                                </Button>\r\n                                                </div>\r\n                                            <div style={{\r\n                                                marginTop:\"15px\"\r\n                                            }}></div>\r\n                                        <div style={{\r\n                                                display: 'flex',\r\n                                                marginTop:'15px'\r\n\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div style={{\r\n                                                        marginRight:'20px',\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}>\r\n                                                    \r\n                                                   <Checkbox\r\n                                                    checked={isorderStatusAdmin}\r\n                                                    defaultChecked={isorderStatusAdmin}\r\n                                                    onChange={(e) => setorderStatusAdmin(e.target.checked)}\r\n                                                    >\r\n                                                    <span className='checkBoxSmallFieldLabel'>\r\n                                                        Admin\r\n                                                   </span>                            \r\n                                                </Checkbox> \r\n                                               </div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\r\n                                                <Checkbox \r\n                                                 checked={isorderStatusCustomer}\r\n                                                 defaultChecked={isorderStatusCustomer}\r\n                                                onChange={(e) => setIsorderStatusCustomer(e.target.checked)}\r\n                                                   >\r\n                                                    <span className='checkBoxSmallFieldLabel'>\r\n                                                    Customer\r\n                                                    </span>                            \r\n                                               </Checkbox> \r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n                                                <div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n                                              \r\n\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n</div>\r\n                                        \r\n\r\n\r\n                                        \r\n\r\n    </div>\r\n\r\n    <div style={{\r\n                                                marginTop:\"25px\"\r\n                                            }}></div>\r\n\r\n    <Button\r\n\r\n                                            onClick={(e: any) => handleUpdateAutoEmail()}\r\n                                            loading={configureAutoEmailConfigurationState.isLoading}\r\n                                            className='btnPrimaryClassNameoutline'\r\n                                            >\r\n                                            Update Auto Email Configuration\r\n                                            </Button>\r\n\r\n                                            \r\n                                            <div style={{\r\n                                                marginTop:\"5px\"\r\n                                            }}></div>\r\n\r\n        \r\n\r\n        <NewCustomerTemplate \r\n        visible={newcustomermodal}\r\n        setVisible={setnewcustomermodal}\r\n        />\r\n\r\n<OrderStatusTemplateAutoEmail \r\n        visible={orderStatusmodal}\r\n        setVisible={setorderStatusmodal}\r\n        />\r\n\r\n\r\n        <OrderTemplateAutoEmail \r\n        visible={ordermodal}\r\n        setVisible={setordermodal}\r\n        />\r\n        \r\n        </>\r\n    );\r\n};\r\n\r\nexport default ConfigureAutoEmail;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n\r\nimport { useHandleFetch } from '../../hooks';\r\n// import third party ui lib\r\nimport { Upload, message, Switch, Select, Button, notification, Modal, Tooltip,Checkbox  } from 'antd';\r\n\r\nimport {\r\n    FileOutlined,\r\n    InboxOutlined,\r\n    FileAddOutlined,\r\n    DeleteOutlined,\r\n    CheckCircleOutlined,\r\n    CloseOutlined,\r\n    CheckOutlined,\r\n    InfoCircleOutlined,\r\n    PlusOutlined,\r\n    FileImageFilled\r\n} from '@ant-design/icons';\r\n\r\n\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport MediaLibrary from \"../../components/MediaLibrary\";\r\n\r\nimport CKEditor from '@ckeditor/ckeditor5-react';\r\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\r\n\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n});\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Tag Created',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n    notification.error({\r\n        message: message || 'Something Went Wrong',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst initialValues = {\r\n    \"recipient\": \"\",\r\n    \"subject\": \"\",\r\n}\r\n\r\n\r\n\r\ninterface Props {\r\n}\r\n\r\nconst ComposeCustomEmail = ({  }: Props) => {\r\n\r\n    const [sendCustomerEmailState, handleSendCustomEmailFetch] = useHandleFetch({}, 'sendCustomEmail');\r\n \r\n    const [html,sethtml] = useState('');\r\n\r\n\r\n    const handleSubmit = async (values: any, actions: any) => {\r\n        const addTagRes = await handleSendCustomEmailFetch({\r\n            body: {\r\n                \"recipient\": values.recipient.trim(),\r\n                \"subject\": values.subject.trim(),\r\n                html : html\r\n            },\r\n        });\r\n\r\n        // @ts-ignore\r\n        if (addTagRes && addTagRes.status === 'ok') {\r\n            sethtml('');\r\n            actions.resetForm();\r\n            openSuccessNotification('Email Sent!');\r\n        }\r\n        else {\r\n            // openErrorNotification(\"Something went wrong, Couldn't send email\");\r\n        }\r\n\r\n        actions.setSubmitting(false);\r\n\r\n    };\r\n\r\n\tuseEffect(() => {\r\n\t\tif (!sendCustomerEmailState['isLoading']) {\r\n\t\t\tconst error = sendCustomerEmailState['error'];\r\n\t\t\tif (error['isError'] && Object.keys(error['error']).length > 0) {\r\n\r\n\t\t\t\tif (error['error']['registerError']) {\r\n\t\t\t\t\t// setServerErrors(error['error']['registerError']);\r\n\t\t\t\t} else if (error['error']['checkoutError']) {\r\n\t\t\t\t\t// setServerErrors(error['error']['checkoutError']);\r\n\t\t\t\t}\r\n\r\n\t\t\t\telse {\r\n\t\t\t\t\t// setServerErrors(error['error']);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst errors =\r\n\t\t\t\t\tObject.values(error['error']).length > 0\r\n\t\t\t\t\t\t? Object.values(error['error'])\r\n\t\t\t\t\t\t: [];\r\n\t\t\t\terrors.forEach((err, i) => {\r\n\t\t\t\t\tif (typeof err === 'string') {\r\n\t\t\t\t\t\topenErrorNotification(err);\r\n\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if (typeof err === 'object') {\r\n\t\t\t\t\t\tif (err && Object.keys(err).length > 0) {\r\n\t\t\t\t\t\t\tconst errs = Object.values(err);\r\n\t\t\t\t\t\t\terrs.forEach(err => {\r\n\t\t\t\t\t\t\t\topenErrorNotification(err);\r\n\t\t\t\t\t\t\t})\r\n\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (\r\n\t\t\t!sendCustomerEmailState['isLoading'] &&\r\n\t\t\tObject.keys(sendCustomerEmailState.data).length > 0\r\n\t\t) {\r\n\t\t\t// if (sendCustomerEmailState['data']['status'] === 'ok') {\r\n            //     openSuccessNotification('Email Sent!');\r\n\t\t\t// }\r\n\t\t}\r\n\t}, [sendCustomerEmailState]);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <Formik\r\n            onSubmit={(values, actions) => handleSubmit(values, actions)}\r\n            validationSchema={validationSchema}\r\n            validateOnBlur={false}\r\n            enableReinitialize={true}\r\n            initialValues={\r\n                { ...initialValues }\r\n            }\r\n        >\r\n            {({\r\n                handleChange,\r\n                values,\r\n                handleSubmit,\r\n                errors,\r\n                isValid,\r\n                isSubmitting,\r\n                touched,\r\n                handleBlur,\r\n                setFieldTouched,\r\n                handleReset,\r\n            }) => (\r\n                    <>\r\n\r\n                                         \t<div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\tdisplay: 'flex',\r\n\t\t\t\t\t\t\t\t\t\t\t\tjustifyContent: 'space-between'\r\n\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\twidth: '49%',\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t  <Input\r\n                                                    label='To'\r\n                                                    value={values.recipient}\r\n                                                    name='recipient'\r\n                                                    isError={(touched.recipient && errors.recipient) ||\r\n                                                        (!isSubmitting && sendCustomerEmailState.error['error']['recipient'])}\r\n\r\n                                                    errorString={(touched.recipient && errors.recipient) ||\r\n                                                        (!isSubmitting && sendCustomerEmailState.error['error']['recipient'])}\r\n                                                    onChange={(e: any) => {\r\n                                                        handleChange(e);\r\n                                                        setFieldTouched('recipient');\r\n                                                    }}\r\n                                                     />\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\twidth: '49%'\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\r\n                                                    <Input\r\n                                                    label='Subject'\r\n                                                    value={values.subject}\r\n                                                    name='subject'\r\n                                                    isError={(touched.subject && errors.subject) ||\r\n                                                        (!isSubmitting && sendCustomerEmailState.error['error']['subject'])}\r\n\r\n                                                    errorString={(touched.subject && errors.subject) ||\r\n                                                        (!isSubmitting && sendCustomerEmailState.error['error']['subject'])}\r\n                                                    onChange={(e: any) => {\r\n                                                        handleChange(e);\r\n                                                        setFieldTouched('subject');\r\n                                                    }}\r\n                                                />\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\r\n\r\n\r\n\r\n            <h3 className='inputFieldLabel'>\r\n                Body\r\n            </h3>\r\n\r\n\r\n        <CKEditor\r\n        editor={ClassicEditor}\r\n        data={html}\r\n        onInit={editor => {\r\n            // You can store the \"editor\" and use when it is needed.\r\n            console.log('Editor is ready to use!', editor);\r\n        }}\r\n        onChange={(event, editor) => {\r\n            const data = editor.getData();\r\n            sethtml(data);\r\n        }}\r\n        onBlur={(event, editor) => {\r\n            console.log('Blur.', editor);\r\n        }}\r\n        onFocus={(event, editor) => {\r\n            console.log('Focus.', editor);\r\n        }}\r\n        />\r\n    \r\n\r\n                                       <div style={{\r\n                                           marginTop:'20px'\r\n                                       }}></div>         \r\n                                          <Button\r\n\r\n                                            onClick={(e: any) => handleSubmit(e)}\r\n                                            loading={sendCustomerEmailState.isLoading}\r\n                                            className='btnPrimaryClassNameoutline'\r\n                                            >\r\n                                            Send\r\n                                            </Button>     \r\n\r\n                                            \r\n                                       <div style={{\r\n                                           marginTop:'10px'\r\n                                       }}></div>       \r\n                    </>\r\n                )}\r\n        </Formik>\r\n    );\r\n};\r\n\r\nexport default ComposeCustomEmail;\r\n","import React, {useEffect} from 'react'\r\n\r\n\r\n// import hooks\r\nimport { useHandleFetch,  } from \"../../hooks\";\r\n\r\nimport {Spin} from 'antd'; \r\nimport moment from \"moment\";\r\nimport ReactHtmlParser from 'react-html-parser';\r\n\r\n\r\nimport {\r\n    LeftOutlined\r\n} from '@ant-design/icons';\r\n\r\n\r\n\r\n\r\ninterface Props {\r\n    id?:any; \r\n    setSelectedEmailId?:any; \r\n}\r\n\r\nconst InboxEmailDetails = ({id,setSelectedEmailId}: Props) => {\r\n    const [getEmailDetailState, handleGetEmailListFetch] = useHandleFetch({}, 'getEmailDetails');\r\n \r\n\r\n    useEffect(() => {\r\n      const getEmailConfiguration = async () => {\r\n          const res = await handleGetEmailListFetch({\r\n              urlOptions: {\r\n                  placeHolders: {\r\n                      id: id\r\n                  }\r\n              }\r\n          });\r\n          // @ts-ignore\r\n      \r\n      }; \r\n      getEmailConfiguration(); \r\n    }, []); \r\n\r\n    console.log('getEmailDetailState',getEmailDetailState)\r\n\r\n\r\n    return (\r\n        <>\r\n              {getEmailDetailState.isLoading && (\r\n                <>\r\n\r\n\r\n        <div style={{\r\n            width: '100%',\r\n            display:'flex',\r\n            justifyContent:'center',\r\n            alignItems:'center',\r\n            margin:'150px 0'\r\n        }}>\r\n             <Spin size='large' />\r\n        </div>\r\n\r\n               \r\n                </>\r\n            )}\r\n\r\n\r\n            {getEmailDetailState.done \r\n            && getEmailDetailState.data\r\n             && Object.keys(getEmailDetailState.data).length > 0 && (\r\n                 <>\r\n                         <div className='inboxEmailDetails'>\r\n            <div \r\n            onClick={() => setSelectedEmailId('')}\r\n            className='inboxEmailDetails__backBtn'>\r\n                    <LeftOutlined />\r\n            </div>\r\n            <div className='inboxEmailDetails__header'>\r\n                <span>\r\n                {getEmailDetailState['data']['subject']}\r\n                </span>\r\n                <h3>\r\n                    {getEmailDetailState['data']['recipient']}\r\n                </h3>\r\n                <h4>\r\n                {getEmailDetailState['data']['time'] && moment(getEmailDetailState['data']['time']).format('MMMM Do YYYY, h:mm:ss a')}\r\n                </h4>\r\n            </div>\r\n            <div className='inboxEmailDetails__body'>\r\n            {getEmailDetailState['data']['html'] && ReactHtmlParser(getEmailDetailState['data']['html'])}\r\n            </div>\r\n        </div>\r\n                 </>\r\n             )}\r\n\r\n        </>\r\n\r\n    )\r\n}\r\n\r\nexport default InboxEmailDetails\r\n","import React, {useEffect, useState} from 'react'\r\n\r\n\r\n// import hoooks\r\nimport { useHandleFetch } from \"../../hooks\";\r\nimport InboxEmailDetails from \"./InboxEmailDetails\";\r\nimport  {Spin} from 'antd'\r\nimport moment from 'moment'; \r\n\r\nimport ReactHtmlParser from 'react-html-parser';\r\n\r\ninterface Props {\r\n    \r\n}\r\n\r\nconst Inbox = (props: Props) => {\r\n    const [getEmailListState, handleGetEmailListFetch] = useHandleFetch({}, 'getSetEmailList');\r\n    const [selectedEmailId,setSelectedEmailId] = useState(''); \r\n\r\n\r\n    useEffect(() => {\r\n      const getEmailConfiguration = async () => {\r\n          const res = await handleGetEmailListFetch({});\r\n          // @ts-ignore\r\n      \r\n      }; \r\n      getEmailConfiguration(); \r\n    }, [])\r\n\r\n\r\n    console.log('getEmailListState',getEmailListState)\r\n\r\n    return (\r\n        <>\r\n            {getEmailListState.isLoading && (\r\n                <>\r\n\r\n\r\n        <div style={{\r\n            width: '100%',\r\n            display:'flex',\r\n            justifyContent:'center',\r\n            alignItems:'center',\r\n            margin:'150px 0'\r\n        }}>\r\n             <Spin size='large' />\r\n        </div>\r\n\r\n               \r\n                </>\r\n            )}\r\n\r\n\r\n{getEmailListState.done && getEmailListState.data && getEmailListState.data.length > 0 && (\r\n    <>\r\n    \r\n    <div className='sentEmailListContainer'>\r\n        \r\n            {!selectedEmailId && (\r\n                <>\r\n                     {getEmailListState.done && getEmailListState.data && getEmailListState.data.length > 0 && (\r\n            <>\r\n            {getEmailListState.data.map(item => {\r\n                return (\r\n                    <div \r\n                    onClick={() => setSelectedEmailId(item.id)}\r\n                    className=\"sentEmailListContainer__item\">\r\n                    <div className='sentEmailListContainer__item-info'>\r\n                        <h3>\r\n                        To: {` ${item.recipient}`}\r\n                      </h3>\r\n                      <span>\r\n                      {`${item.subject}`}\r\n                      </span>\r\n                    </div>\r\n                    \r\n                    <h4>\r\n                    {ReactHtmlParser(item.html.substring(0, 125) + '.....')}\r\n                    </h4>\r\n                    <h3>\r\n                    {item.time && moment(item.time).format('MMMM Do, h a')}\r\n                    </h3>\r\n                </div>\r\n                )\r\n            })}\r\n            </>\r\n        )}\r\n                </>\r\n            )}\r\n\r\n\r\n            {selectedEmailId && (\r\n                <>\r\n                <InboxEmailDetails \r\n                setSelectedEmailId={setSelectedEmailId}\r\n                id={selectedEmailId} />\r\n                </>\r\n            )}\r\n\r\n    </div>\r\n    </>\r\n)}\r\n        </>\r\n\r\n\r\n    )\r\n}\r\n\r\nexport default Inbox\r\n","import React from 'react';\r\n\r\n\r\n// import lib\r\nimport { Upload, message, Switch, Select, Button, notification, Modal, Tabs } from 'antd';\r\n\r\n// import components \r\nimport ConfigureSTMP from \"./ConfigureSTMP\";\r\nimport ConfigureAutoEmail from \"./ConfigureAutoEmail\";\r\nimport ComposeCustomEmail from \"./ComposeCustomEmail\";\r\nimport Inbox from \"./Inbox\";\r\n\r\n\r\nimport {\r\n\tDeleteOutlined,\r\n\tFileAddOutlined,\r\n\tCheckCircleOutlined,\r\n\tFileImageFilled,\r\n\tFileImageOutlined,\r\n\tFileImageTwoTone,\r\n\tPlusOutlined,\r\n\tPlusCircleOutlined,\r\n\tCloseOutlined,\r\n\tCheckOutlined,\r\n    InfoCircleOutlined,\r\n    InboxOutlined,\r\n    SettingOutlined\r\n} from '@ant-design/icons';\r\n\r\n\r\n\r\nconst { TabPane } = Tabs;\r\n\r\n\r\n\r\ninterface Props {\r\n\r\n}\r\n\r\nconst Sms = (props: Props) => {\r\n    return (\r\n        <>\r\n            <div className='siteInfoContainer'>\r\n\r\n                <Tabs defaultActiveKey=\"1\" >\r\n                <TabPane \r\n                    tab={\r\n                        <span>\r\n                        <InboxOutlined />\r\n                        Inbox\r\n                        </span>\r\n                    }\r\n             key=\"1\">\r\n                        <Inbox />\r\n                    </TabPane>\r\n\r\n                    <TabPane \r\n                    \r\n                    tab={\r\n                        <span>\r\n                        <PlusCircleOutlined />\r\n                        Compose Email\r\n                        </span>\r\n                    } key=\"2\">\r\n                        <ComposeCustomEmail />\r\n                    </TabPane>\r\n\r\n                    <TabPane \r\n                     tab={\r\n                        <span>\r\n                        <SettingOutlined />\r\n                        Configure STMP\r\n                        </span>\r\n                    }\r\n                    \r\n                   key=\"3\">\r\n                        <ConfigureSTMP />\r\n                    </TabPane>\r\n\r\n                    <TabPane\r\n                    \r\n                    tab={\r\n                        <span>\r\n                        <SettingOutlined />\r\n                        Configure Auto Email     \r\n                        </span>\r\n                    }\r\n                     key=\"4\">\r\n                        <ConfigureAutoEmail />\r\n                    </TabPane>\r\n\r\n                </Tabs>\r\n\r\n            </div>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Sms\r\n","import React, {useEffect} from 'react'\r\n\r\n\r\n\r\n// import components\r\nimport Empty from \"../../components/Empty\";\r\n\r\n\r\n\r\n// import hooks\r\nimport { useHandleFetch } from \"../../hooks\";\r\n\r\n\r\n\r\n\r\n// import lib\r\nimport { useHistory } from \"react-router\";\r\nimport { LogoutOutlined,\r\n    BellOutlined, \r\n    OrderedListOutlined,\r\n   TwitterSquareFilled,\r\n   ShoppingCartOutlined,\r\n   UserOutlined,\r\n    } from '@ant-design/icons';\r\n\r\nimport Moment from 'react-moment';\r\nimport moment from 'moment';\r\n\r\nimport { Layout, Badge, Dropdown, Menu, Spin } from 'antd';\r\n\r\nconst { Header } = Layout;\r\n\r\n\r\n\r\n\r\ninterface Props {\r\n    \r\n}\r\n\r\nconst NotificationList = (props: Props) => {\r\n\r\n    const history = useHistory();\r\n\r\n    const [getAllNotificationState, handleGetAllNOticationFetch] = useHandleFetch({}, 'getAllNotification');\r\n\r\n\r\n    const handleMenuClick = (e) => {\r\n        if (e.key === '3') {\r\n        }\r\n    };\r\n\r\n\r\n    useEffect(() => {\r\n        const getAllNotification = async () => {\r\n            await handleGetAllNOticationFetch({});\r\n        }\r\n\r\n        getAllNotification();\r\n    }, [])\r\n\r\n\r\n\r\n\r\n    console.log('getAllNotificationState',getAllNotificationState);\r\n\r\n\r\n    const typeIcon = {\r\n        customer: <UserOutlined />,\r\n        order: <ShoppingCartOutlined />\r\n    }\r\n\r\n    const menu = () => {\r\n\r\n        if (getAllNotificationState.isLoading) return (\r\n            <div style={{\r\n                height:'100%',\r\n                display:'flex',\r\n                justifyContent:'center',\r\n                alignItems:'center',\r\n                marginTop:'100px'\r\n            }}>\r\n                <Spin />\r\n            </div>\r\n        );\r\n\r\n\r\n\r\n        if (getAllNotificationState.done && getAllNotificationState.data && !getAllNotificationState.data[0]) {\r\n            return (\r\n                <div style={{\r\n                    height:'100%',\r\n                    display:'flex',\r\n                    justifyContent:'center',\r\n                    alignItems:'center',\r\n                    marginTop:'100px'\r\n                }}>\r\n                     <Empty title='No Notification found' />\r\n                </div>\r\n            )\r\n        }; \r\n\r\n\r\n        return (\r\n            <div className='notificationListItemContainer'>\r\n                        {getAllNotificationState.done\r\n                        && getAllNotificationState.data[0]\r\n                        && getAllNotificationState.data.map((item,index) => {\r\n                        return (\r\n                        <div\r\n                          onClick={() => history.push(`/admin/${item.type}/${item.id}`)}\r\n                          className='notificationListItemContainer__item'>\r\n                            <span className='notificationListItemContainer__item-icon'>\r\n                              {typeIcon[item['type']]}\r\n                            </span>\r\n                            <div className='notificationListItemContainer__item-info'>\r\n                                <h3>\r\n                                    {item.heading}\r\n                                </h3>\r\n                                <h4>\r\n                                    {item.text}\r\n                                </h4>\r\n                                <h2>\r\n                                <Moment >\r\n                                    {item.added}\r\n                                </Moment>\r\n                                </h2>\r\n                            </div>\r\n                        </div>\r\n                    )\r\n                })}\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n    return (\r\n      <>\r\n        <div className='notificationList'>\r\n        <h3 className='notificationList__heading'>\r\n\t\t\tNotification\r\n\t    </h3>\r\n            {menu()}\r\n        </div>\r\n      </>\r\n    )\r\n}\r\n\r\nexport default NotificationList\r\n","import React, { useState } from 'react'; \r\nimport { Checkbox, Row, Col } from 'antd';\r\n\r\n\r\n\r\n\r\n\r\nconst AccessCheckbox = ({checkedList,setCheckedList,plainOptions,defaultValue=[]}) => {\r\n\r\n    const [interminate,setInterminate] = useState(true);\r\n    const [checkAll,setCheckAll] = useState(false); \r\n\r\n    const onChange = checkedList => {\r\n        setCheckedList(checkedList); \r\n        setInterminate(!!checkedList.length && checkedList.length < plainOptions.length); \r\n        setCheckAll(checkedList.length === plainOptions.length); \r\n      };\r\n      \r\n      const onCheckAllChange = e => {\r\n        setCheckedList(e.target.checked ? plainOptions : []); \r\n        setInterminate(false); \r\n        setCheckAll(e.target.checked)\r\n      };\r\n\r\n\r\n      console.log('defaultValue',defaultValue);\r\n\r\n    return (\r\n        <>\r\n        <div\r\n        style={{\r\n            borderBottom:\"1px solid #eee\",\r\n            marginBottom:'10px'\r\n        }}\r\n         className=\"site-checkbox-all-wrapper\">\r\n                <Checkbox\r\n                    style={{\r\n                        marginBottom:\"10px\"\r\n                    }}\r\n                    indeterminate={interminate}\r\n                    onChange={onCheckAllChange}\r\n                    checked={checkAll}\r\n                >\r\n                    Super Admin\r\n                </Checkbox>\r\n        </div>\r\n        <Checkbox.Group \r\n        style={{ width: '100%' }}\r\n         value={checkedList}\r\n         defaultValue={defaultValue}\r\n         onChange={onChange}>\r\n      <Row>\r\n      {plainOptions.map(accessItem => {\r\n          return (\r\n            <Col \r\n            style={{\r\n                marginBottom:\"10px\"\r\n            }}\r\n            span={8}>\r\n            <Checkbox value={accessItem}>\r\n                {accessItem}\r\n            </Checkbox>\r\n          </Col>\r\n          )\r\n      })}\r\n    </Row>\r\n  </Checkbox.Group>\r\n  </>\r\n    )\r\n}\r\n\r\nexport default AccessCheckbox; ","import React, { useState, useEffect } from 'react';\r\nimport { Modal, notification } from 'antd';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport { useHandleFetch } from '../../hooks';\r\nimport { CheckCircleOutlined, PlusOutlined, EditOutlined, DeleteOutlined, EditFilled } from '@ant-design/icons';\r\nimport AccessCheckbox from \"./AccessCheckbox\";\r\n\r\nconst validationSchema = Yup.object().shape({\r\n// \tname: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n//     phone: Yup.string()\r\n//     .required('Please tell us your mobile number.')\r\n//     .max(13, 'Please enter a valid mobile number.'),\r\n//    password: Yup.string()\r\n//     .label('Password')\r\n//     .required()\r\n//     .min(6, 'Password must have at least 6 characters'),\r\n//   passwordConfirmation: Yup.string()\r\n//     .label('Confirm password')\r\n//     .required()\r\n//     .min(6, 'Confirm password must have at least 6 characters')\r\n//     .oneOf([Yup.ref('password'), null], 'Passwords must match'),\r\n});\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t\tmessage: message || 'Admin Updated',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t\tmessage: message || 'Something Went Wrong',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n};\r\n\r\n\r\nconst plainOptions = [\r\n    'getCatalogue', 'postCatalogue', \r\n    'getDelivery', 'postDelivery', \r\n    'getOrder', 'postOrder',\r\n    'getBlog', 'postBlog', \r\n    'getPage', 'postPage',\r\n    'analytics',\r\n    'accounts'\r\n];\r\n\r\n\r\ninterface Props {\r\n\tcategory: any;\r\n\tsetvisible: any;\r\n\tvisible: any;\r\n\ttagList: any;\r\n\tsetTagList: any;\r\n\r\n}\r\n\r\nconst QuickEdit = ({ category, setvisible, visible, tagList, setTagList }: Props) => {\r\n\tconst [updateTagState, handleUpdateCategoryFetch] = useHandleFetch({}, 'updateAdminRole');\r\n\tconst [accesscheckedList,setAccessCheckedList] = useState(category.role && category.role.length ? [...category.role]: [] );\r\n\r\n\r\n\tconst handleSubmit = async (values: any, actions: any) => {\r\n\t\tconsole.log('adminValues',values);\r\n\t\tconst updateTagRes = await handleUpdateCategoryFetch({\r\n\t\t\turlOptions: {\r\n\t\t\t\tplaceHolders: {\r\n\t\t\t\t\tid: category._id,\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tbody: {\r\n\t\t\t\tname: values.name,\r\n\t\t\t\taccess: accesscheckedList,\r\n                phone: values.phone,\r\n                password: values.password,\r\n                password2: values.passwordConfirmation,\r\n\t\t\t},\r\n\t\t});\r\n\r\n\t\t// @ts-ignore\r\n\t\tif (updateTagRes && updateTagRes.status === 'ok') {\r\n\t\t\topenSuccessNotification();\r\n\t\t\tsetvisible(false)\r\n\r\n\t\t\tconst positionInTag = () => {\r\n\t\t\t\treturn tagList.map(item => item.id).indexOf(category.id);\r\n\t\t\t}\r\n\r\n\t\t\tconst index = positionInTag();\r\n\r\n\t\t\t// @ts-ignore\r\n\t\t\tconst updatedItem = Object.assign({}, tagList[index], { ...updateTagRes });\r\n\t\t\tconst updateTagList = [...tagList.slice(0, index), updatedItem, ...tagList.slice(index + 1)];\r\n\t\t\tsetTagList(updateTagList);\r\n\r\n\t\t}\r\n\t\telse {\r\n\t\t\topenErrorNotification();\r\n\t\t}\r\n\r\n\t\tactions.setSubmitting(false);\r\n\t};\r\n\r\n\r\n\tconst handleCancel = (e: any) => {\r\n\t\tsetvisible(false);\r\n\t};\r\n\r\n\r\n\r\n\r\n\t\r\n\tuseEffect(() => {\r\n\t\tif (!updateTagState['isLoading']) {\r\n\t\t\tconst error = updateTagState['error'];\r\n\t\t\tif (error['isError'] && Object.keys(error['error']).length > 0) {\r\n\r\n\t\t\t\tif (error['error']['registerError']) {\r\n\t\t\t\t\t// setServerErrors(error['error']['registerError']);\r\n\t\t\t\t} else if (error['error']['checkoutError']) {\r\n\t\t\t\t\t// setServerErrors(error['error']['checkoutError']);\r\n\t\t\t\t}\r\n\r\n\t\t\t\telse {\r\n\t\t\t\t\t// setServerErrors(error['error']);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst errors =\r\n\t\t\t\t\tObject.values(error['error']).length > 0\r\n\t\t\t\t\t\t? Object.values(error['error'])\r\n\t\t\t\t\t\t: [];\r\n\t\t\t\terrors.forEach((err, i) => {\r\n\t\t\t\t\tif (typeof err === 'string') {\r\n\t\t\t\t\t\topenErrorNotification(err);\r\n\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if (typeof err === 'object') {\r\n\t\t\t\t\t\tif (err && Object.keys(err).length > 0) {\r\n\t\t\t\t\t\t\tconst errs = Object.values(err);\r\n\t\t\t\t\t\t\terrs.forEach(err => {\r\n\t\t\t\t\t\t\t\topenErrorNotification(err);\r\n\t\t\t\t\t\t\t})\r\n\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (\r\n\t\t\t!updateTagState['isLoading'] &&\r\n\t\t\tObject.keys(updateTagState.data).length > 0\r\n\t\t) {\r\n\t\t\tif (updateTagState['data']['status'] === 'ok') {\r\n\t\t\t\t// openSuccessNotification('Order Created Successfully');\r\n\t\t\t\t// history.push({\r\n\t\t\t\t//   pathname: '/orderDetails',\r\n\t\t\t\t//   state: checkoutState['data']\r\n\t\t\t\t// })\r\n\r\n\t\t\t\t// clearCart();\r\n\t\t\t\t// setIsModalShown(true);\r\n\t\t\t}\r\n\t\t}\r\n\t}, [updateTagState]);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\treturn (\r\n\t\t<Formik\r\n\t\t\tonSubmit={(values, actions) => handleSubmit(values, actions)}\r\n\t\t\tvalidationSchema={validationSchema}\r\n\t\t\tvalidateOnBlur={false}\r\n\t\t\tenableReinitialize={true}\r\n\t\t\tinitialValues={\r\n\t\t\t\t{ ...category }\r\n\t\t\t}\r\n\t\t>\r\n\t\t\t{({\r\n\t\t\t\thandleChange,\r\n\t\t\t\tvalues,\r\n\t\t\t\thandleSubmit,\r\n\t\t\t\terrors,\r\n\t\t\t\tisValid,\r\n\t\t\t\tisSubmitting,\r\n\t\t\t\ttouched,\r\n\t\t\t\thandleBlur,\r\n\t\t\t\tsetFieldTouched,\r\n\t\t\t\thandleReset,\r\n\t\t\t}) => (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t{console.log('errors',errors)}\r\n\t\t\t\t\t\t<Modal\r\n\t\t\t\t\t\t\ttitle=\"Edit Admin\"\r\n\t\t\t\t\t\t\tvisible={visible}\r\n\t\t\t\t\t\t\tonOk={(e: any) => handleSubmit(e)}\r\n\t\t\t\t\t\t\tonCancel={handleCancel}\r\n\t\t\t\t\t\t\tokText='Update'\r\n\t\t\t\t\t\t\tokButtonProps={{\r\n\t\t\t\t\t\t\t\tloading: isSubmitting,\r\n\t\t\t\t\t\t\t\thtmlType: \"submit\",\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\tlabel='Title'\r\n\t\t\t\t\t\t\t\tvalue={values.name}\r\n\t\t\t\t\t\t\t\tname='name'\r\n\t\t\t\t\t\t\t\tisError={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateTagState.error['error']['name'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateTagState.error['error']['name'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('name');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\r\n\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n                                Select Admin Access \r\n                            </h3>\r\n\r\n\t\t\t\t\t\t\t<AccessCheckbox \r\n\t\t\t\t\t\t\tdefaultValue={category.role}\r\n                            plainOptions={plainOptions}\r\n                            checkedList={accesscheckedList}\r\n                            setCheckedList={setAccessCheckedList}\r\n                            />\r\n\r\n\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\tmarginTop: '20px',\r\n\t\t\t\t\t\t\tmarginBottom: '20px',\r\n\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\tborderBottom:'1px solid #eee',\r\n\t\t\t\t\t\t\t\tmarginBottom: '15px',\r\n\t\t\t\t\t\t\t\tmarginTop: '15px',\r\n\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n                                Phone and password is required to update admin *\r\n                            </h3>\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t<Input\r\n                                label='Phone'\r\n                                value={values.phone}\r\n                                name='phone'\r\n                                isError={(touched.phone && errors.phone) ||\r\n                                    (!isSubmitting && updateTagState.error['error']['phone'])}\r\n\r\n                                errorString={(touched.phone && errors.phone) ||\r\n                                    (!isSubmitting && updateTagState.error['error']['phone'])}\r\n                                onChange={(e: any) => {\r\n                                    handleChange(e);\r\n                                    setFieldTouched('phone');\r\n                                }}\r\n                            />\r\n\r\n\r\n                      \r\n                           \r\n\r\n                           <Input\r\n                                label='Password'\r\n                                value={values.password}\r\n                                name='password'\r\n                                type='password'\r\n                                isError={(touched.password && errors.password) ||\r\n                                    (!isSubmitting && updateTagState.error['error']['password'])}\r\n\r\n                                errorString={(touched.password && errors.password) ||\r\n                                    (!isSubmitting && updateTagState.error['error']['password'])}\r\n                                onChange={(e: any) => {\r\n                                    handleChange(e);\r\n                                    setFieldTouched('password');\r\n                                }}\r\n                            />\r\n\r\n\r\n                            <Input\r\n                                label='Confirm Password'\r\n                                value={values.passwordConfirmation}\r\n                                name='passwordConfirmation'\r\n                                type='password'\r\n                                isError={(touched.passwordConfirmation && errors.passwordConfirmation) ||\r\n                                    (!isSubmitting && updateTagState.error['error']['password2'])}\r\n\r\n                                errorString={(touched.passwordConfirmation && errors.passwordConfirmation) ||\r\n                                    (!isSubmitting && updateTagState.error['error']['password2'])}\r\n                                onChange={(e: any) => {\r\n                                    handleChange(e);\r\n                                    setFieldTouched('passwordConfirmation');\r\n                                }}\r\n                            />\r\n\t\t\t\t\t\t</div>\r\n                           \r\n\t\t\t\t\t\t</Modal>\r\n\r\n\t\t\t\t\t</>\r\n\t\t\t\t)}\r\n\t\t</Formik>\r\n\t);\r\n};\r\n\r\n\r\nexport default QuickEdit;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n\r\nimport { useHandleFetch } from '../../hooks';\r\n// import third party ui lib\r\nimport { Upload, message, Switch, Select, Button, notification, Modal, Tooltip } from 'antd';\r\n\r\nimport {\r\n    FileOutlined,\r\n    InboxOutlined,\r\n    FileAddOutlined,\r\n    DeleteOutlined,\r\n    CheckCircleOutlined,\r\n    CloseOutlined,\r\n    CheckOutlined,\r\n    InfoCircleOutlined,\r\n    PlusOutlined,\r\n    FileImageFilled\r\n} from '@ant-design/icons';\r\n\r\n\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport MediaLibrary from \"../../components/MediaLibrary\";\r\nimport AccessCheckbox from \"./AccessCheckbox\";\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    name: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n    phone: Yup.string()\r\n    .required('Please tell us your mobile number.')\r\n    .max(13, 'Please enter a valid mobile number.'),\r\n   password: Yup.string()\r\n    .label('Password')\r\n    .required()\r\n    .min(6, 'Password must have at least 6 characters'),\r\n  passwordConfirmation: Yup.string()\r\n    .label('Confirm password')\r\n    .required()\r\n    .min(6, 'Confirm password must have at least 6 characters')\r\n    .oneOf([Yup.ref('password'), null], 'Passwords must match'),\r\n});\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Admin Created',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n    notification.error({\r\n        message: message || 'Something Went Wrong',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst initialValues = {\r\n    name: '',\r\n    phone: '',\r\n    email: '',\r\n    password: '',\r\n    passwordConfirmation: '',\r\n    access: [],\r\n}\r\n\r\n\r\nconst plainOptions = [\r\n    'getCatalogue', 'postCatalogue', \r\n    'getDelivery', 'postDelivery', \r\n    'getOrder', 'postOrder',\r\n    'getBlog', 'postBlog', \r\n    'getPage', 'postPage',\r\n    'analytics',\r\n    'accounts'\r\n];\r\n\r\n\r\ninterface Props {\r\n    addNewCategoryVisible?: any;\r\n    setAddNewCategoryVisible?: any;\r\n    tagList?: any;\r\n    setTagList?: any;\r\n\r\n}\r\n\r\nconst AddNewAdminRoles = ({ addNewCategoryVisible, setAddNewCategoryVisible, tagList, setTagList }: Props) => {\r\n\r\n    const [addTagState, handleAddTagFetch] = useHandleFetch({}, 'adminRoleRegister');\r\n    const [myImages, setmyImages] = useState(false);\r\n    const [visibleMedia, setvisibleMedia] = useState(false);\r\n    const [accesscheckedList,setAccessCheckedList] = useState([]);\r\n\r\n\r\n    const handleSubmit = async (values: any, actions: any) => {\r\n        const addTagRes = await handleAddTagFetch({\r\n            body: {\r\n                name: values.name.trim(),\r\n                email: values.email.trim(),\r\n                phone: values.phone,\r\n                password: values.password,\r\n                password2: values.passwordConfirmation,\r\n                access: accesscheckedList,\r\n\r\n            },\r\n        });\r\n\r\n        // @ts-ignore\r\n        if (addTagRes && addTagRes.status === 'ok') {\r\n            // openSuccessNotification();\r\n\r\n            setTagList([...tagList, {\r\n                id: addTagRes['id'] || '',\r\n                key: addTagRes['id'] || '',\r\n                name: addTagRes['name'] || '',\r\n            }])\r\n            actions.resetForm();\r\n            setAddNewCategoryVisible(false);\r\n        }\r\n        else {\r\n            openErrorNotification();\r\n        }\r\n\r\n\r\n        actions.setSubmitting(false);\r\n\r\n    };\r\n\r\n\r\n    useEffect(() => {\r\n\t\tif (!addTagState['isLoading']) {\r\n\t\t\tconst error = addTagState['error'];\r\n\t\t\tif (error['isError'] && Object.keys(error['error']).length > 0) {\r\n\t\t\t\tif (error['error']['registerError']) {\r\n\t\t\t\t\t// setServerErrors(error['error']['registerError']);\r\n\t\t\t\t} else if (error['error']['checkoutError']) {\r\n\t\t\t\t\t// setServerErrors(error['error']['checkoutError']);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\t// setServerErrors(error['error']);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst errors =\r\n\t\t\t\t\tObject.values(error['error']).length > 0\r\n\t\t\t\t\t\t? Object.values(error['error'])\r\n\t\t\t\t\t\t: [];\r\n\t\t\t\terrors.forEach((err, i) => {\r\n\t\t\t\t\tif (typeof err === 'string') {\r\n\t\t\t\t\t\topenErrorNotification(err);\r\n\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if (typeof err === 'object') {\r\n\t\t\t\t\t\tif (err && Object.keys(err).length > 0) {\r\n\t\t\t\t\t\t\tconst errs = Object.values(err);\r\n\t\t\t\t\t\t\terrs.forEach(err => {\r\n\t\t\t\t\t\t\t\topenErrorNotification(err);\r\n\t\t\t\t\t\t\t})\r\n\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (\r\n\t\t\t!addTagState['isLoading'] &&\r\n\t\t\tObject.keys(addTagState.data).length > 0\r\n\t\t) {\r\n\t\t\tif (addTagState['data']['status'] === 'ok') {\r\n\t\t\t\topenSuccessNotification('Admin Created Successfully');\r\n\t\t\t\t// history.push({\r\n\t\t\t\t//   pathname: '/orderDetails',\r\n\t\t\t\t//   state: checkoutState['data']\r\n\t\t\t\t// })\r\n\r\n\t\t\t\t// clearCart();\r\n\t\t\t\t// setIsModalShown(true);\r\n\t\t\t}\r\n\t\t}\r\n    }, [addTagState]);\r\n    \r\n\r\n\r\n    const handleCancel = (e: any) => {\r\n        setAddNewCategoryVisible(false);\r\n    };\r\n\r\n\r\n    const getisSubmitButtonDisabled = (values, isValid) => {\r\n        if (!values.name || !values.phone || !values.password || !values.passwordConfirmation || !isValid) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n\r\n    return (\r\n        <Formik\r\n            onSubmit={(values, actions) => handleSubmit(values, actions)}\r\n            validationSchema={validationSchema}\r\n            validateOnBlur={false}\r\n            enableReinitialize={true}\r\n            initialValues={\r\n                { ...initialValues }\r\n            }\r\n        >\r\n            {({\r\n                handleChange,\r\n                values,\r\n                handleSubmit,\r\n                errors,\r\n                isValid,\r\n                isSubmitting,\r\n                touched,\r\n                handleBlur,\r\n                setFieldTouched,\r\n                handleReset,\r\n            }) => (\r\n                    <>\r\n                        <Modal\r\n                            style={{\r\n                                top: '40px'\r\n                            }}\r\n                            title=\"Register New Admin\"\r\n                            visible={addNewCategoryVisible}\r\n                            onOk={(e: any) => handleSubmit(e)}\r\n                            onCancel={handleCancel}\r\n                            okText='Create'\r\n                            okButtonProps={{\r\n                                loading: isSubmitting,\r\n                                htmlType: \"submit\",\r\n                                disabled: getisSubmitButtonDisabled(values, isValid)\r\n                            }}\r\n                        >\r\n                            <Input\r\n                                label='Name'\r\n                                value={values.name}\r\n                                name='name'\r\n                                isError={(touched.name && errors.name) ||\r\n                                    (!isSubmitting && addTagState.error['error']['name'])}\r\n\r\n                                errorString={(touched.name && errors.name) ||\r\n                                    (!isSubmitting && addTagState.error['error']['name'])}\r\n                                onChange={(e: any) => {\r\n                                    handleChange(e);\r\n                                    setFieldTouched('name');\r\n                                }}\r\n                            />\r\n\r\n\r\n                            <Input\r\n                                label='Phone'\r\n                                value={values.phone}\r\n                                name='phone'\r\n                                isError={(touched.phone && errors.phone) ||\r\n                                    (!isSubmitting && addTagState.error['error']['phone'])}\r\n\r\n                                errorString={(touched.phone && errors.phone) ||\r\n                                    (!isSubmitting && addTagState.error['error']['phone'])}\r\n                                onChange={(e: any) => {\r\n                                    handleChange(e);\r\n                                    setFieldTouched('phone');\r\n                                }}\r\n                            />\r\n\r\n\r\n                            <Input\r\n                                label='Email'\r\n                                value={values.email}\r\n                                name='email'\r\n                                isError={(touched.email && errors.email) ||\r\n                                    (!isSubmitting && addTagState.error['error']['email'])}\r\n\r\n                                errorString={(touched.email && errors.email) ||\r\n                                    (!isSubmitting && addTagState.error['error']['email'])}\r\n                                onChange={(e: any) => {\r\n                                    handleChange(e);\r\n                                    setFieldTouched('email');\r\n                                }}\r\n                            />\r\n                           \r\n\r\n                           <Input\r\n                                label='Password'\r\n                                value={values.password}\r\n                                name='password'\r\n                                type='password'\r\n                                isError={(touched.password && errors.password) ||\r\n                                    (!isSubmitting && addTagState.error['error']['password'])}\r\n\r\n                                errorString={(touched.password && errors.password) ||\r\n                                    (!isSubmitting && addTagState.error['error']['password'])}\r\n                                onChange={(e: any) => {\r\n                                    handleChange(e);\r\n                                    setFieldTouched('password');\r\n                                }}\r\n                            />\r\n\r\n\r\n                            <Input\r\n                                label='Confirm Password'\r\n                                value={values.passwordConfirmation}\r\n                                name='passwordConfirmation'\r\n                                type='password'\r\n                                isError={(touched.passwordConfirmation && errors.passwordConfirmation) ||\r\n                                    (!isSubmitting && addTagState.error['error']['passwordConfirmation'])}\r\n\r\n                                errorString={(touched.passwordConfirmation && errors.passwordConfirmation) ||\r\n                                    (!isSubmitting && addTagState.error['error']['password2'])}\r\n                                onChange={(e: any) => {\r\n                                    handleChange(e);\r\n                                    setFieldTouched('passwordConfirmation');\r\n                                }}\r\n                            />\r\n\r\n                                <h3 className='inputFieldLabel'>\r\n                                    Select Admin Access \r\n                                </h3>\r\n\r\n                            <AccessCheckbox \r\n                            plainOptions={plainOptions}\r\n                            checkedList={accesscheckedList}\r\n                            setCheckedList={setAccessCheckedList}\r\n                            />\r\n                           \r\n\r\n                        </Modal>\r\n\r\n                        <MediaLibrary\r\n                            setvisible={setvisibleMedia}\r\n                            visible={visibleMedia}\r\n                            setmyImages={setmyImages}\r\n                            myImages={myImages}\r\n                            isModalOpenForImages={true}\r\n\r\n                        />\r\n                    </>\r\n                )}\r\n        </Formik>\r\n\r\n\r\n\r\n\r\n    );\r\n};\r\n\r\nexport default AddNewAdminRoles;\r\n","import React, { useState, useEffect } from 'react';\r\n\r\n// import third party ui lib\r\nimport { Empty, Popconfirm, Upload, message, Switch, Select,Tag, Button, notification, Table, Space, Input as CoolInput, Tooltip, Modal } from 'antd';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { useHistory } from 'react-router';\r\n\r\n\r\n\r\nimport {\r\n\tFileOutlined,\r\n\tInboxOutlined,\r\n\tRadiusUpleftOutlined,\r\n\tRadiusUprightOutlined,\r\n\tRadiusBottomleftOutlined,\r\n\tRadiusBottomrightOutlined,\r\n\tPlusOutlined,\r\n\tDeleteOutlined,\r\n\tEditOutlined,\r\n\tCheckCircleOutlined\r\n} from '@ant-design/icons';\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n\r\n\r\n/// import hooks\r\nimport { useFetch, useHandleFetch } from \"../../hooks\";\r\n\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport { DataTableSkeleton } from \"../../components/Placeholders\";\r\nimport QuickEdit from \"./QuickEdit\"\r\nimport AddNewAdmin from \"./AddNewAdmin\"\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t\tmessage: message || 'Admin Created',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n\tnotification.error({\r\n\t\tmessage: message || 'Something Went Wrong',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n};\r\n\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n\tname: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\n\r\nconst initialValues = {\r\n\tname: '',\r\n\tdescription: ''\r\n}\r\n\r\n\r\nconst { Column, ColumnGroup } = Table;\r\nconst { Search } = CoolInput;\r\n\r\n\r\n\r\nconst MyTable = ({ data, setTagList }) => {\r\n\tconst [visible, setvisible] = useState(false);\r\n\tconst [activeCategoryForEdit, setactiveCategoryForEdit] = useState(false);\r\n\tconst [deleteTagState, handleDeleteTagFetch] = useHandleFetch({}, 'deleteTag');\r\n\r\n\tconst history = useHistory();\r\n\r\n\r\n\tconst handleDeleteTag = async (id) => {\r\n\t\tconst deleteTagRes = await handleDeleteTagFetch({\r\n\t\t\turlOptions: {\r\n\t\t\t\tplaceHolders: {\r\n\t\t\t\t\tid,\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\r\n\r\n\t\t// @ts-ignore\r\n\t\tif (deleteTagRes && deleteTagRes.status === 'ok') {\r\n\t\t\topenSuccessNotification('Deleted Admin');\r\n\t\t\tconst newtagList = data.filter(item => item.id !== id);\r\n\t\t\tsetTagList(newtagList);\r\n\t\t}\r\n\r\n\r\n\t}\r\n\r\n\r\n\tconst handleOk = (e: any) => {\r\n\t\tsetvisible(false);\r\n\r\n\t};\r\n\r\n\tconst handleCancel = (e: any) => {\r\n\t\tsetvisible(false);\r\n\t};\r\n\r\n\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Table\r\n\t\t\t\t// expandable={{\r\n\t\t\t\t//     expandedRowRender: record => <p style={{ margin: 0 }}>{record.name}</p>,\r\n\t\t\t\t//     rowExpandable: record => record.name !== 'Not Expandable',\r\n\t\t\t\t//   }}\r\n\t\t\t\t// bordered={true}\r\n\t\t\t\tsize='small'\r\n\t\t\t\t// pagination={false}\r\n\t\t\t\tdataSource={data}\r\n\t\t\t>\r\n\r\n\t\t\t\t<Column\r\n\t\t\t\t\ttitle=\"Name\"\r\n\t\t\t\t\tdataIndex=\"name\"\r\n\t\t\t\t\tkey=\"id\"\r\n\t\t\t\t\tclassName='classnameofthecolumn'\r\n\t\t\t\t\trender={(text, record: any) => (\r\n\t\t\t\t\t\t<>\r\n\r\n\t\t\t\t\t\t\t<h4\r\n\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\t// history.push(`/admin/tag/${record.id}`)\r\n\t\t\t\t\t\t\t\t\t// setBrandDetailVisible(true);\r\n\t\t\t\t\t\t\t\t\tsetactiveCategoryForEdit(record)\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\tfontWeight: 400,\r\n\t\t\t\t\t\t\t\t\tcolor: '#555',\r\n\t\t\t\t\t\t\t\t\tcursor: 'pointer'\r\n\r\n\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t{text}\r\n\t\t\t\t\t\t\t</h4>\r\n\r\n\r\n\t\t\t\t\t\t</>\r\n\t\t\t\t\t)}\r\n\t\t\t\t/>\r\n\r\n\t\t\t\t<Column\r\n\t\t\t\t\ttitle=\"Email\"\r\n\t\t\t\t\tdataIndex=\"email\"\r\n\t\t\t\t\tkey=\"id\"\r\n\t\t\t\t\tclassName='classnameofthecolumn'\r\n\r\n\t\t\t\t/>\r\n\r\n\r\n\t\t\t\t<Column\r\n\t\t\t\t\ttitle=\"Phone\"\r\n\t\t\t\t\tdataIndex=\"phone\"\r\n\t\t\t\t\tkey=\"id\"\r\n\t\t\t\t\tclassName='classnameofthecolumn'\r\n\t\t\t\t/>\r\n\r\n\r\n\t\t\t\t<Column\r\n\t\t\t\t\ttitle=\"Roles\"\r\n\t\t\t\t\tdataIndex=\"role\"\r\n\t\t\t\t\tkey=\"role\"\r\n\t\t\t\t\tclassName='classnameofthecolumn'\r\n\t\t\t\t\trender={tags => (\r\n\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t{tags && tags.length > 0 && tags.slice(0,3).map((tag) => (\r\n\t\t\t\t\t\t\t<Tag \r\n\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\tborderRadius:\"5px\"\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\tcolor=\"blue\" key={tag}>\r\n\t\t\t\t\t\t\t{tag}\r\n\t\t\t\t\t\t\t</Tag>\r\n\t\t\t\t\t\t))}\r\n\r\n\t\t\t\t\t\t{tags && tags.length === 3 && '.......'}\r\n\t\t\t\t\t\t</>\r\n\t\t\t\t\t)}\r\n\t\t\t\t\t/>\r\n\r\n\r\n\t\t\t\t<Column\r\n\r\n\t\t\t\t\tclassName='classnameofthecolumn'\r\n\t\t\t\t\ttitle=\"\"\r\n\t\t\t\t\tkey=\"action\"\r\n\t\t\t\t\talign='right'\r\n\t\t\t\t\trender={(text, record: any) => (\r\n\t\t\t\t\t\t<Space size=\"middle\">\r\n\t\t\t\t\t\t\t<a href='##'>\r\n\t\t\t\t\t\t\t\t<Tooltip placement=\"top\" title='Edit Admin'>\r\n\t\t\t\t\t\t\t\t\t<span className='iconSize' onClick={() => {\r\n\t\t\t\t\t\t\t\t\t\tsetvisible(true)\r\n\t\t\t\t\t\t\t\t\t\tsetactiveCategoryForEdit(record);\r\n\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t<EditOutlined />\r\n\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t\t</a>\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t<Popconfirm\r\n\t\t\t\t\t\t\t\tonConfirm={() => handleDeleteTag(record.id)}\r\n\t\t\t\t\t\t\t\ttitle=\"Are you sure？\" okText=\"Yes\" cancelText=\"No\">\r\n\t\t\t\t\t\t\t\t<span\r\n\t\t\t\t\t\t\t\t\tclassName='iconSize iconSize-danger'\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t<DeleteOutlined />\r\n\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t</Popconfirm>\r\n\t\t\t\t\t\t</Space>\r\n\t\t\t\t\t)}\r\n\t\t\t\t/>\r\n\t\t\t</Table>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\t\t\t{activeCategoryForEdit && <QuickEdit\r\n\t\t\t\ttagList={data}\r\n\t\t\t\tsetTagList={setTagList}\r\n\t\t\t\tsetvisible={setvisible}\r\n\t\t\t\tvisible={visible}\r\n\t\t\t\tcategory={activeCategoryForEdit} />}\r\n\t\t</>\r\n\t)\r\n}\r\n\r\n\r\n\r\n\r\ninterface Props { }\r\n\r\nconst TagList = ({ }: Props) => {\r\n\r\n\r\n\tconst [tagList, setTagList] = useState([]);\r\n\r\n\tconst [tagState, handleTagListFetch] = useHandleFetch({}, 'adminList');\r\n\r\n\r\n\tuseEffect(() => {\r\n\t\tconst setTags = async () => {\r\n\t\t\tconst tags = await handleTagListFetch({});\r\n\t\t\t// @ts-ignore\r\n\t\t\tsetTagList(tags);\r\n\t\t}\r\n\t\tsetTags();\r\n\t}, [])\r\n\r\n\r\n\r\n\tconst [addTagState, handleAddTagFetch] = useHandleFetch({}, 'addTag');\r\n\tconst [addNewCategoryVisible, setAddNewCategoryVisible] = useState(false);\r\n\r\n\tconst handleSubmit = async (values: any, actions: any) => {\r\n\t\tconst addTagRes = await handleAddTagFetch({\r\n\t\t\turlOptions: {\r\n\t\t\t\tplaceHolders: {\r\n\t\t\t\t\tid: values.id,\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tbody: {\r\n\t\t\t\tname: values.name.trim(),\r\n\t\t\t\tdescription: values.description,\r\n\t\t\t},\r\n\t\t});\r\n\r\n\t\t// @ts-ignore\r\n\t\tif (addTagRes && addTagRes.status === 'ok') {\r\n\t\t\topenSuccessNotification();\r\n\r\n\t\t\tsetTagList([...tagList, {\r\n\t\t\t\tid: addTagRes['id'] || '',\r\n\t\t\t\tkey: addTagRes['id'] || '',\r\n\t\t\t\tname: addTagRes['name'] || '',\r\n\t\t\t\tdescription: addTagRes['description'] || '',\r\n\t\t\t}])\r\n\t\t\tactions.resetForm();\r\n\t\t}\r\n\t\tactions.setSubmitting(false);\r\n\r\n\t};\r\n\r\n\r\n\r\n\tconst getisSubmitButtonDisabled = (values, isValid) => {\r\n\t\tif (!values.name || !isValid) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\r\n\tconst handleOkAddNewCategory = (e: any) => {\r\n\t\tsetAddNewCategoryVisible(false);\r\n\r\n\t};\r\n\r\n\tconst handleCancelAddNewCategory = (e: any) => {\r\n\t\tsetAddNewCategoryVisible(false);\r\n\t};\r\n\r\n\tconst handleSearch = (value) => {\r\n\t\tif (tagState.data.length > 0) {\r\n\t\t\tconst newTagList = tagState.data.filter(item => item.name.toLowerCase().includes(value.toLowerCase()));\r\n\t\t\tsetTagList(newTagList);\r\n\t\t}\r\n\r\n\t}\r\n\r\n\r\n\tconsole.log('adminListState',tagState);\r\n\treturn (\r\n\t\t<>\r\n\r\n\t\t\t<div className='categoryListContainer'>\r\n\t\t\t\t<div className='categoryListContainer__header'>\r\n\t\t\t\t\t<div className='categoryListContainer__header-searchBar-tag'>\r\n\t\t\t\t\t\t<h2 className='categoryListContainer__header-title'>\r\n\t\t\t\t\t\t\tAdmins\r\n            </h2>\r\n\r\n\r\n\t\t\t\t\t\t<Search\r\n\t\t\t\t\t\t\tenterButton={false}\r\n\t\t\t\t\t\t\tclassName='searchbarClassName'\r\n\t\t\t\t\t\t\tplaceholder=\"search admins..\"\r\n\t\t\t\t\t\t\tonSearch={value => handleSearch(value)}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\t// type=\"primary\"\r\n\t\t\t\t\t\tclassName='btnPrimaryClassNameoutline'\r\n\t\t\t\t\t\ticon={<PlusOutlined />}\r\n\t\t\t\t\t\tonClick={() => setAddNewCategoryVisible(true)}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tAdd New\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className='categoryListContainer__categoryList'>\r\n\t\t\t\t\t{tagState.done && tagList.length > 0 && <MyTable\r\n\t\t\t\t\t\tsetTagList={setTagList}\r\n\t\t\t\t\t\tdata={tagList} />}\r\n\t\t\t\t\t{tagState.isLoading && <DataTableSkeleton />}\r\n\r\n\r\n\t\t\t\t\t{tagState.done && !(tagList.length > 0) && (\r\n\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\tmarginTop: '50px'\r\n\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t<Empty description='No Admin found' image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\r\n\t\t\t<AddNewAdmin\r\n\t\t\t\ttagList={tagList}\r\n\t\t\t\tsetTagList={setTagList}\r\n\t\t\t\taddNewCategoryVisible={addNewCategoryVisible}\r\n\t\t\t\tsetAddNewCategoryVisible={setAddNewCategoryVisible}\r\n\t\t\t/>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default TagList;\r\n","import React, { useState } from 'react';\r\nimport { Modal, notification } from 'antd';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport { useHandleFetch } from '../../hooks';\r\nimport { CheckCircleOutlined, PlusOutlined, EditOutlined, DeleteOutlined, EditFilled } from '@ant-design/icons';\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    name: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n    description: Yup.string().label('Description').required('Description is required')\r\n});\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Admin Updated',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Something Went Wrong',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n    });\r\n};\r\n\r\n\r\ninterface Props {\r\n    tagEditVisible?: any;\r\n    setTagEditVisible?: any;\r\n    tagDetailData?: any;\r\n    setTagDetailData?:any; \r\n}\r\n\r\nconst QuickEdit = ({ tagEditVisible, setTagEditVisible, tagDetailData,setTagDetailData }: Props) => {\r\n    const [updateTagState, handleUpdateCategoryFetch] = useHandleFetch({}, 'updateTag');\r\n\r\n    const handleSubmit = async (values: any, actions: any) => {\r\n        const updateTagRes = await handleUpdateCategoryFetch({\r\n            urlOptions: {\r\n                placeHolders: {\r\n                    id: values.id,\r\n                }\r\n            },\r\n            body: {\r\n                name: values.name,\r\n                description: values.description,\r\n            },\r\n        });\r\n\r\n        // @ts-ignore\r\n        if (updateTagRes && updateTagRes.status === 'ok') {\r\n            setTagDetailData({\r\n                id:values.id,\r\n                key:values.id,\r\n                name: values.name,\r\n                description: values.description,\r\n            })\r\n            openSuccessNotification();\r\n\r\n            // const positionInTag = () => {\r\n            //     return tagList.map(item => item.id).indexOf(category.id);\r\n            // }\r\n\r\n            // const index = positionInTag();\r\n\r\n            // const updatedItem = Object.assign({}, tagList[index], { ...updateTagRes });\r\n            // const updateTagList = [...tagList.slice(0, index), updatedItem, ...tagList.slice(index + 1)];\r\n            // setTagList(updateTagList);\r\n\r\n        }\r\n        else {\r\n            openErrorNotification();\r\n        }\r\n\r\n        actions.setSubmitting(false);\r\n        setTagEditVisible(false)\r\n    };\r\n\r\n\r\n    const handleCancel = (e: any) => {\r\n        setTagEditVisible(false);\r\n    };\r\n\r\n\r\n    const getisSubmitButtonDisabled = (values, isValid) => {\r\n        if (!values.name || !values.description || !isValid) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    return (\r\n        <Formik\r\n            onSubmit={(values, actions) => handleSubmit(values, actions)}\r\n            validationSchema={validationSchema}\r\n            validateOnBlur={false}\r\n            enableReinitialize={true}\r\n            initialValues={\r\n                { ...tagDetailData }\r\n            }\r\n        >\r\n            {({\r\n                handleChange,\r\n                values,\r\n                handleSubmit,\r\n                errors,\r\n                isValid,\r\n                isSubmitting,\r\n                touched,\r\n                handleBlur,\r\n                setFieldTouched,\r\n                handleReset,\r\n            }) => (\r\n                    <>\r\n                        <Modal\r\n                            title=\"Admin Edit\"\r\n                            visible={tagEditVisible}\r\n                            onOk={(e: any) => handleSubmit(e)}\r\n                            onCancel={handleCancel}\r\n                            okText='Update'\r\n                            okButtonProps={{\r\n                                loading: isSubmitting,\r\n                                htmlType: \"submit\",\r\n                                disabled: getisSubmitButtonDisabled(values, isValid)\r\n                            }}\r\n                        >\r\n                            <Input\r\n                                label='Title'\r\n                                value={values.name}\r\n                                name='name'\r\n                                isError={(touched.name && errors.name) ||\r\n                                    (!isSubmitting && updateTagState.error['error']['name'])}\r\n\r\n                                errorString={(touched.name && errors.name) ||\r\n                                    (!isSubmitting && updateTagState.error['error']['name'])}\r\n                                onChange={(e: any) => {\r\n                                    handleChange(e);\r\n                                    setFieldTouched('name');\r\n                                }}\r\n                            />\r\n                            <TextArea\r\n                                label='Description'\r\n                                value={values.description}\r\n                                name='description'\r\n                                isError={(touched.description && errors.description) ||\r\n                                    (!isSubmitting && updateTagState.error['error']['description'])}\r\n\r\n                                errorString={(touched.description && errors.description) ||\r\n                                    (!isSubmitting && updateTagState.error['error']['description'])}\r\n                                onChange={(e: any) => {\r\n                                    handleChange(e);\r\n                                    setFieldTouched('description');\r\n                                }}\r\n                            />\r\n                        </Modal>\r\n\r\n                    </>\r\n                )}\r\n        </Formik>\r\n    );\r\n};\r\n\r\n\r\nexport default QuickEdit;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useParams, useHistory } from \"react-router\";\r\n\r\n\r\n// import hooks\r\nimport { useHandleFetch } from \"../../hooks\";\r\n\r\n// import lib\r\nimport {\r\n    FileOutlined,\r\n    InboxOutlined,\r\n    RadiusUpleftOutlined,\r\n    RadiusUprightOutlined,\r\n    RadiusBottomleftOutlined,\r\n    RadiusBottomrightOutlined,\r\n    PlusOutlined,\r\n    DeleteOutlined,\r\n    EditOutlined,\r\n    CheckCircleOutlined\r\n} from '@ant-design/icons';\r\n\r\nimport { Skeleton, Empty, Popconfirm, Upload, message, Switch, Select, Button, notification, Table, Space, Input as CoolInput, Tooltip, Modal } from 'antd';\r\n\r\n\r\n// import components\r\nimport { DataTableSkeleton } from \"../../components/Placeholders\";\r\nimport AdminEdit from \"./AdminEdit\";\r\n\r\n\r\nconst { Column, ColumnGroup } = Table;\r\nconst { Search } = CoolInput;\r\n\r\n\r\ninterface Props {\r\n    productRecord?: any;\r\n}\r\n\r\nconst NewBrandDetail = (props: Props) => {\r\n    const [tagDetailState, handleTagDetailFetch] = useHandleFetch({}, 'adminDetail');\r\n    const [tagProductsState, handleTagProductsFetch] = useHandleFetch({}, 'tagProducts');\r\n    const [tagEditVisible, setTagEditVisible] = useState(false);\r\n    const [tagDetailData,setTagDetailData] = useState({}); \r\n\r\n\r\n    const params = useParams();\r\n    const history = useHistory();\r\n    const tagId = params['id'];\r\n\r\n    useEffect(() => {\r\n\r\n        const getBrandDetail = async () => {\r\n            const tagDetailRes =  await handleTagDetailFetch({\r\n                urlOptions: {\r\n                    placeHolders: {\r\n                        id: tagId\r\n                    }\r\n                }\r\n            }); \r\n\r\n            // @ts-ignore\r\n            if(tagDetailRes){\r\n                console.log('tagDetailRes',tagDetailRes);\r\n                // @ts-ignore\r\n                setTagDetailData(tagDetailRes);\r\n            }\r\n        };\r\n\r\n        getBrandDetail();\r\n\r\n    }, [tagId]);\r\n\r\n    useEffect(() => {\r\n        const getTagProducts = async () => {\r\n            await handleTagProductsFetch({\r\n                urlOptions: {\r\n                    placeHolders: {\r\n                        id: tagId\r\n                    }\r\n                }\r\n            })\r\n        };\r\n\r\n        getTagProducts();\r\n\r\n    }, [tagId]);\r\n\r\n\r\n\r\n\r\n    console.log('tagProductsState', tagProductsState);\r\n\r\n    console.log('brandParams', params);\r\n\r\n\r\n    return (\r\n        <div className='brandDetailContainer'>\r\n            <div className='brandDetailContainer__heading'>\r\n                <h3>\r\n                    Admin Detail\r\n                </h3>\r\n\r\n                {tagDetailState.done && tagDetailData && (Object.keys(tagDetailData).length > 0) && (\r\n                    <>\r\n                        <AdminEdit\r\n                            tagEditVisible={tagEditVisible}\r\n                            setTagEditVisible={setTagEditVisible}\r\n                            tagDetailData={tagDetailData}\r\n                            setTagDetailData={setTagDetailData}\r\n                        />\r\n                        <Button\r\n                            onClick={() => setTagEditVisible(true)}\r\n                            type='link'\r\n                            icon={<EditOutlined />}\r\n                        >\r\n                            Edit\r\n                      </Button>\r\n                    </>\r\n                )}\r\n            </div>\r\n            <Skeleton\r\n                paragraph={{ rows: 2 }}\r\n                loading={tagDetailState.isLoading}>\r\n                {tagDetailState.done && tagDetailData && !(Object.keys(tagDetailData).length > 0) && (\r\n                    <Empty description='No Admin found' image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n                )}\r\n\r\n                {tagDetailState.done && tagDetailData && (Object.keys(tagDetailData).length > 0) && (\r\n                    <div className='brandDetailContainer__header'>\r\n\r\n                        <div className='brandDetailContainer__header-info'>\r\n                            <h2>\r\n                                {tagDetailData['name']}\r\n                            </h2>\r\n                            <h3>\r\n                                {tagDetailData['description']}\r\n                            </h3>\r\n                            {tagDetailData['url'] && (\r\n                                <h3>\r\n                                    URL:\r\n                                    <span>\r\n                                        {tagDetailData['url']}\r\n                                    </span>\r\n\r\n                                </h3>\r\n                            )}\r\n                        </div>\r\n                    </div>\r\n                )}\r\n\r\n            </Skeleton>   \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NewBrandDetail\r\n","import React, { useEffect, useState } from 'react';\r\n\r\n\r\n// import hooks\r\nimport { useHandleFetch } from '../../hooks';\r\n\r\n// import components \r\nimport Empty from \"../../components/Empty\";\r\n\r\n\r\n// import libraries \r\nimport { Button, Tag, Input, Spin } from 'antd';\r\nimport {\r\n  PlusOutlined\r\n} from '@ant-design/icons';\r\n\r\n\r\n\r\n\r\nconst { CheckableTag } = Tag;\r\nconst { Search } = Input;\r\n\r\ninterface Props {\r\n  setTagIds?: any;\r\n  selectedTags?: any;\r\n  setSelectedTags?: any;\r\n}\r\n\r\n\r\nconst Tags = ({\r\n  setTagIds,\r\n  setSelectedTags,\r\n  selectedTags\r\n\r\n}: Props) => {\r\n  const [options, setoptions] = useState([]);\r\n  const [selectedOpions, setselectedOptions] = useState([]);\r\n  const [tagState, handleTagListFetch] = useHandleFetch({}, 'postTagList');\r\n  const [searchValue, setsearchValue] = useState('');\r\n\r\n\r\n  const handleChange = (tag, checked) => {\r\n    const nextSelectedTags = checked ? [...selectedTags, tag] : selectedTags.filter(t => t !== tag);\r\n    setSelectedTags(nextSelectedTags);\r\n\r\n    if (tagState.done && tagState.data.length > 0 && nextSelectedTags.length > 0) {\r\n      const selectedCategoryIds = nextSelectedTags.map((item) => {\r\n        const selectedcategory = tagState.data.find(\r\n          (cat) => cat.name.toLowerCase() === item.toLowerCase()\r\n        );\r\n        if (selectedcategory) {\r\n          return selectedcategory.id;\r\n        }\r\n      });\r\n      setTagIds(selectedCategoryIds);\r\n    }\r\n  }\r\n\r\n\r\n  useEffect(() => {\r\n    if (tagState.done && tagState.data.length > 0 && selectedTags.length > 0) {\r\n      const selectedCategoryIds = selectedTags.map((item) => {\r\n        const selectedcategory = tagState.data.find(\r\n          (cat) => cat.id === item\r\n        );\r\n        if (selectedcategory) {\r\n          return selectedcategory.name;\r\n        }\r\n      });\r\n      setSelectedTags(selectedCategoryIds);\r\n    }\r\n  }, [tagState]);\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    const setTags = async () => {\r\n      const tagListRes = await handleTagListFetch({\r\n        urlOptions: {\r\n          params: {\r\n            isSubCategory: false\r\n          }\r\n        }\r\n      });\r\n\r\n      // @ts-ignoref\r\n      if (tagListRes && tagListRes.length > 0) {\r\n        // @ts-ignore\r\n        const tagOptions = tagListRes.map((tag) => {\r\n          return tag.name\r\n        });\r\n        setoptions(tagOptions);\r\n      }\r\n\r\n    };\r\n\r\n    setTags();\r\n  }, []);\r\n\r\n\r\n\r\n  // const handleChange = (selectItems) => {\r\n  //   setselectedOptions(selectItems)\r\n\r\n  //   if (tagState.done && tagState.data.length > 0 && selectItems.length > 0) {\r\n  //     const selectedCategoryIds = selectItems.map((item) => {\r\n  //       const selectedcategory = tagState.data.find(\r\n  //         (cat) => cat.name.toLowerCase() === item.toLowerCase()\r\n  //       );\r\n  //       if (selectedcategory) {\r\n  //         return selectedcategory.id;\r\n  //       }\r\n  //     });\r\n  //     setTagIds(selectedCategoryIds);\r\n  //   }\r\n\r\n\r\n  // }\r\n\r\n\r\n  const onSearchChange = (e) => {\r\n    setsearchValue(e.target.value);\r\n\r\n    if (e.target.value === '') {\r\n      if (tagState.data && tagState.data.length > 0) {\r\n        // @ts-ignore\r\n        const categoryNames = tagState.data.map((cat) => cat.name);\r\n        setoptions(categoryNames);\r\n      }\r\n    } else {\r\n      const newOptions =\r\n        options.length > 0\r\n          ? options.filter((option) => {\r\n            return option.toLowerCase().includes(searchValue.toLowerCase());\r\n          })\r\n          : [];\r\n\r\n      setoptions(newOptions);\r\n    }\r\n  };\r\n\r\n\r\n  console.log('selectedTags', selectedTags)\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n\r\n      {tagState.isLoading && (\r\n        <div style={{\r\n          padding: '15px 0',\r\n          width: '100%',\r\n          height: \"100%\",\r\n          display: \"flex\",\r\n          justifyContent: 'center',\r\n          alignItems: 'center'\r\n        }}>\r\n          <Spin />\r\n        </div>\r\n      )}\r\n\r\n\r\n\r\n      {tagState.done && !(tagState.data.length > 0) && (\r\n        <div style={{\r\n          width: '100%',\r\n          height: \"100%\",\r\n          display: \"flex\",\r\n          justifyContent: 'center',\r\n          alignItems: 'center'\r\n        }}>\r\n          <Empty title='No Tag found' height={100} />\r\n        </div>\r\n      )}\r\n\r\n\r\n      {/* \r\n      {tagState.done && tagState.data.length > 0 && options.length > 0 && <Select\r\n        mode=\"multiple\"\r\n        placeholder=\"search tags\"\r\n        value={selectedOpions}\r\n        onChange={handleChange}\r\n        style={{ width: '100%' }}\r\n      >\r\n        {options.filter(o => !selectedOpions.includes(o)).map(item => (\r\n          <Select.Option key={item} value={item}>\r\n            {item}\r\n          </Select.Option>\r\n        ))}\r\n      </Select>} */}\r\n\r\n      {tagState.done && tagState.data.length > 0 && options.length > 0 && (\r\n        <>\r\n          <div className='addProduct__categoryBoxContainer-searchBox'>\r\n            <Search\r\n              width={'90%'}\r\n              style={{\r\n                height: '30px',\r\n                borderRadius: '3px !important',\r\n                borderColor: '#eee !important'\r\n              }}\r\n              size='middle'\r\n              placeholder='top, hot'\r\n              onSearch={(value) => console.log(value)}\r\n              onChange={onSearchChange}\r\n            />\r\n          </div>\r\n\r\n          {options.map(tag => (\r\n            <>\r\n              <CheckableTag\r\n                key={tag}\r\n                checked={selectedTags.indexOf(tag) > -1}\r\n                onChange={checked => handleChange(tag, checked)}\r\n              >\r\n                {tag}\r\n              </CheckableTag>\r\n            </>\r\n          ))}\r\n        </>\r\n      )}\r\n\r\n\r\n\r\n\r\n      {/* \r\n      <div style={{\r\n        marginTop: '15px'\r\n      }}>\r\n\r\n      </div>\r\n      <Button\r\n\r\n        // type=\"primary\"\r\n        className='btnSecondaryPlusOutline'\r\n        icon={<PlusOutlined />}\r\n      >\r\n        Add New\r\n      </Button> */}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Tags\r\n","import React, { useState, useEffect } from 'react';\r\n\r\n// import components \r\nimport Empty from \"../../components/Empty\";\r\n\r\n// import hoooks\r\nimport { useHandleFetch } from '../../hooks';\r\n\r\n\r\n// import libraries \r\nimport { Input, Tree, Button, Spin } from 'antd';\r\nimport {\r\n\tPlusOutlined\r\n} from '@ant-design/icons';\r\n\r\n\r\nconst { Search } = Input;\r\n\r\n\r\n\r\ninterface Props {\r\n\tsetcategoryIds?: any;\r\n\tcategoryOptions?: any;\r\n\tsetCategoryOptions?: any;\r\n}\r\n\r\n\r\nconst Categories = ({ setcategoryIds, categoryOptions, setCategoryOptions }: Props) => {\r\n\tconst [options, setoptions] = useState([]);\r\n\tconst [searchValue, setsearchValue] = useState('');\r\n\r\n\tconst [categoryState, handleCategoryListFetch] = useHandleFetch({}, 'postSelectCategoryList');\r\n\r\n\r\n\tuseEffect(() => {\r\n\t\tconst setCategories = async () => {\r\n\t\t\tconst categoryListRes = await handleCategoryListFetch({});\r\n\r\n\t\t\t// @ts-ignore\r\n\t\t\tif (categoryListRes && categoryListRes.length > 0) {\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\tsetoptions(categoryListRes);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tsetCategories();\r\n\t}, []);\r\n\r\n\tconst onSelect = (selectedKeys, info) => {\r\n\t\t// console.log('selectedKeys', selectedKeys, info);\r\n\t};\r\n\r\n\r\n\tconst onCheck = (checkedKeys, info) => {\r\n\t\tconst checkedIds = checkedKeys.checked || [];\r\n\t\tsetcategoryIds(checkedIds);\r\n\t\tsetCategoryOptions(checkedIds);\r\n\t};\r\n\r\n\tconst onSearchChange = (e) => {\r\n\t\tsetsearchValue(e.target.value);\r\n\r\n\t\tif (e.target.value === '') {\r\n\t\t\tif (categoryState.data && categoryState.data.length > 0) {\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\tconst categoryNames = categoryState.data.map((cat) => cat.name);\r\n\t\t\t\tsetoptions(categoryNames);\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tconst newOptions =\r\n\t\t\t\toptions.length > 0\r\n\t\t\t\t\t? options.filter((option) => {\r\n\t\t\t\t\t\treturn option.toLowerCase().includes(searchValue.toLowerCase());\r\n\t\t\t\t\t})\r\n\t\t\t\t\t: [];\r\n\r\n\t\t\tsetoptions(newOptions);\r\n\t\t}\r\n\t};\r\n\r\n\tconsole.log('categoryState', categoryState);\r\n\tconsole.log('optionsCat', options);\r\n\r\n\r\n\treturn (\r\n\t\t<div className='addProduct__categoryBoxContainer'>\r\n\r\n\t\t\t{categoryState.isLoading && (\r\n\t\t\t\t<div style={{\r\n\t\t\t\t\tpadding: '15px 0',\r\n\t\t\t\t\twidth: '100%',\r\n\t\t\t\t\theight: \"100%\",\r\n\t\t\t\t\tdisplay: \"flex\",\r\n\t\t\t\t\tjustifyContent: 'center',\r\n\t\t\t\t\talignItems: 'center'\r\n\t\t\t\t}}>\r\n\t\t\t\t\t<Spin />\r\n\t\t\t\t</div>\r\n\t\t\t)}\r\n\r\n\r\n\t\t\t{categoryState.done && !(categoryState.data.length > 0) && (\r\n\t\t\t\t<div style={{\r\n\t\t\t\t\twidth: '100%',\r\n\t\t\t\t\theight: \"100%\",\r\n\t\t\t\t\tdisplay: \"flex\",\r\n\t\t\t\t\tjustifyContent: 'center',\r\n\t\t\t\t\talignItems: 'center'\r\n\t\t\t\t}}>\r\n\t\t\t\t\t<Empty title='No category found' height={100} />\r\n\t\t\t\t</div>\r\n\t\t\t)}\r\n\r\n\t\t\t{categoryState.done && categoryState.data.length > 0 && options.length > 0 && (\r\n\t\t\t\t<>\r\n\t\t\t\t\t<div className='addProduct__categoryBoxContainer-searchBox'>\r\n\t\t\t\t\t\t<Search\r\n\t\t\t\t\t\t\twidth={'100%'}\r\n\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\theight: '30px',\r\n\t\t\t\t\t\t\t\tborderRadius: '3px !important',\r\n\t\t\t\t\t\t\t\tborderColor: '#eee !important'\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\tsize='middle'\r\n\t\t\t\t\t\t\tplaceholder='cloths, grocery'\r\n\t\t\t\t\t\t\tonSearch={(value) => console.log(value)}\r\n\t\t\t\t\t\t\tonChange={onSearchChange}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t// marginLeft: \"-20px\",\r\n\t\t\t\t\t}}>\r\n\t\t\t\t\t\t{options.length > 0 && (\r\n\t\t\t\t\t\t\t<Tree\r\n\t\t\t\t\t\t\t\tcheckable\r\n\t\t\t\t\t\t\t\tcheckedKeys={categoryOptions}\r\n\t\t\t\t\t\t\t\tonSelect={onSelect}\r\n\t\t\t\t\t\t\t\tonCheck={onCheck}\r\n\t\t\t\t\t\t\t\ttreeData={options}\r\n\t\t\t\t\t\t\t\tdefaultExpandAll={true}\r\n\t\t\t\t\t\t\t\tcheckStrictly={true}\r\n\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</>\r\n\r\n\t\t\t)}\r\n\t\t\t{/* <div style={{\r\n\t\t\t\tmarginTop: '15px'\r\n\t\t\t}}>\r\n\r\n\t\t\t</div>\r\n\t\t\t<Button\r\n\r\n\t\t\t\t// type=\"primary\"\r\n\t\t\t\tclassName='btnSecondaryPlusOutline'\r\n\t\t\t\ticon={<PlusOutlined />}\r\n\t\t\t>\r\n\t\t\t\tAdd New\r\n      </Button> */}\r\n\r\n\t\t\t{/* <CheckboxGroup options={options} value={checkedList} onChange={onChange} /> */}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Categories;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useHandleFetch } from '../../hooks';\r\nimport { Select, Skeleton } from 'antd';\r\n\r\n\r\ninterface Props {\r\n    setProductIds?: any;\r\n    productIds?: any;\r\n}\r\n\r\n\r\nconst Tags = ({\r\n    setProductIds,\r\n    productIds\r\n}: Props) => {\r\n    const [options, setoptions] = useState([]);\r\n    const [selectedOpions, setselectedOptions] = useState([]);\r\n    const [tagState, handleTagListFetch] = useHandleFetch({}, 'productList');\r\n\r\n    useEffect(() => {\r\n        const setTags = async () => {\r\n            const tagListRes = await handleTagListFetch({\r\n                urlOptions: {\r\n                    params: {\r\n                        isSubCategory: false\r\n                    }\r\n                }\r\n            });\r\n\r\n            // @ts-ignore\r\n            if (tagListRes && tagListRes.length > 0) {\r\n                // @ts-ignore\r\n                const tagOptions = tagListRes.map((tag) => {\r\n                    return tag.name\r\n                });\r\n                setoptions(tagOptions);\r\n            }\r\n\r\n        };\r\n\r\n        setTags();\r\n    }, []);\r\n\r\n\r\n\r\n    const handleChange = (selectItems) => {\r\n        setselectedOptions(selectItems);\r\n\r\n        console.log('selectedProducts', selectItems);\r\n\r\n        if (tagState.done && tagState.data.length > 0 && selectItems.length > 0) {\r\n            const selectedCategoryIds = selectItems.map((item) => {\r\n                const selectedcategory = tagState.data.find(\r\n                    (cat) => cat.name.toLowerCase() === item.toLowerCase()\r\n                );\r\n                if (selectedcategory) {\r\n                    return selectedcategory;\r\n                }\r\n            });\r\n            console.log('selectedCategoryIds', selectedCategoryIds);\r\n            setProductIds(selectedCategoryIds);\r\n        }\r\n        else {\r\n            setProductIds([])\r\n        }\r\n\r\n\r\n    }\r\n\r\n\r\n    // console.log('selectedOpions', selectedOpions);\r\n\r\n\r\n    return (\r\n        <>\r\n\r\n            <Skeleton loading={tagState.isLoading}>\r\n                {tagState.done && tagState.data.length > 0 && <Select\r\n                    mode=\"multiple\"\r\n                    placeholder=\"search products\"\r\n                    value={selectedOpions}\r\n                    onChange={handleChange}\r\n                    style={{ width: '100%' }}\r\n                >\r\n                    {options.filter(o => !selectedOpions.includes(o)).map(item => (\r\n                        <Select.Option key={item} value={item}>\r\n                            {item}\r\n                        </Select.Option>\r\n                    ))}\r\n                </Select>}\r\n            </Skeleton>\r\n\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Tags\r\n","import React from 'react'\r\n\r\n\r\n// import components\r\nimport AddNewOrderProductItem from \"../order/AddNewOrderProductItem\";\r\nimport Empty from \"../../components/Empty\";\r\n\r\nimport {\r\n    ShopOutlined\r\n} from '@ant-design/icons';\r\n\r\n\r\ninterface Props {\r\n    productList?: any;\r\n    setProductList?: any;\r\n}\r\n\r\nconst AddNewOrderSummary = ({\r\n    setProductList,\r\n    productList\r\n}: Props) => {\r\n    return (\r\n        <div\r\n            style={{\r\n                // @ts-ignore\r\n                flexDirection: 'flex'\r\n            }}\r\n            className='addOrderContainer__container-orderSummary'>\r\n            <div className='addOrderContainer__container-productItemContainer'>\r\n                {productList && productList.length > 0 && productList.map(item => {\r\n                    return <AddNewOrderProductItem\r\n                        setProductList={setProductList}\r\n                        productList={productList}\r\n                        productId={item._id}\r\n                        quantity={item.quantity}\r\n                        item={item}\r\n                        variation={item.variation}\r\n                    />;\r\n                })}\r\n\r\n                {!(productList.length > 0) && (\r\n                    <div style={{\r\n                        marginLeft: '32px'\r\n                    }}>\r\n                        <Empty title='No Product Added' height={150} />\r\n                    </div>\r\n                )}\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddNewOrderSummary\r\n","import React, { useState, useEffect } from 'react';\r\n\r\n// import hooks \r\nimport { useHandleFetch } from '../../hooks';\r\n\r\n\r\n// import libraries \r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { message, Tooltip, Modal, Tabs, Empty, Badge } from 'antd';\r\nimport CKEditor from '@ckeditor/ckeditor5-react';\r\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\r\n\r\n\r\nimport {\r\n    DeleteOutlined,\r\n    FileAddOutlined,\r\n    CheckCircleOutlined,\r\n    FileImageFilled,\r\n    PlusOutlined,\r\n    PlusCircleOutlined,\r\n    CloseOutlined,\r\n    CheckOutlined,\r\n    InfoCircleOutlined\r\n} from '@ant-design/icons';\r\n\r\n// import ReactQuill from 'react-quill';\r\n// import 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport MediaLibrary from \"../../components/MediaLibrary\";\r\nimport { openSuccessNotification, openErrorNotification } from \"../../components/Notification\";\r\nimport MetaTags from \"../category/MetaTags\";\r\n\r\n\r\nimport Tags from \"./Tags\";\r\nimport Brands from \"./Brands\";\r\nimport Categories from \"./Categories\";\r\nimport SelectProducts from \"./SelectProducts\";\r\nimport SelectedProductItems from \"./SelectedProductItems\";\r\n\r\n\r\n\r\nconst { TabPane } = Tabs;\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    name: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\n\r\nconst initialValues = {\r\n    name: \"\",\r\n    url: \"\",\r\n    preparationTime: \"\",\r\n    servingSize: \"\",\r\n    cookingTime: '',\r\n    body: '',\r\n    bnName: '',\r\n\tbnBody: '',\r\n\tbnPreparationTime: '',\r\n\tbnServingSize: '',\r\n\tbnCookingTime: '',\r\n\tmetaTitle: '',\r\n\tbnMetaTitle: '',\r\n\tmetaDescription: '',\r\n\tbnMetaDescription: '',\r\n\tmetaTags: '',\r\n\tbnMetaTags: '',\r\n}\r\n\r\n\r\n\r\ninterface Props {\r\n    addNewCategoryVisible: any;\r\n    setAddNewCategoryVisible: any;\r\n    productList?: any;\r\n    setProductList?: any;\r\n    productDetailData?:any; \r\n}\r\n\r\nconst AddNewProduct = ({ addNewCategoryVisible, setAddNewCategoryVisible,\r\n     productList: bundleList, setProductList: setBundleList, productDetailData }: Props) => {\r\n\r\n    const [addProductState, handleAddProductFetch] = useHandleFetch({}, 'addproductDetailData');\r\n    const [productDetailState, handleProductDetailFetch] = useHandleFetch({}, 'productDetailDataDetail');\r\n    const [visible, setvisible] = useState(false);\r\n    const [myImages, setmyImages] = useState(false);\r\n    const [myThumbnailImage, setmyThumbnailImage] = useState(false);\r\n    const [isModalOpenForThumbnail, setisModalOpenForThumbnail] = useState(false);\r\n    const [isModalOpenForImages, setisModalOpenForImages] = useState(false);\r\n    const [categoryids, setcategoryIds] = useState([]);\r\n    const [tagIds, setTagIds] = useState([]);\r\n    const [brandId, setBrandId] = useState('');\r\n    const [pricing, setPricing] = useState([]);\r\n    const [coverImageId, setCoverImageId] = useState('');\r\n    const [categoryOptions, setCategoryOptions] = useState([]);\r\n    const [selectedTags, setSelectedTags] = useState([]);\r\n    const [date, setDateFeild] = useState('');\r\n    const [time, setTimeFeild] = useState('');\r\n    const [description, setDescription] = useState('');\r\n    const [body, setBody] = useState('');\r\n    const [bnBody, setBnBody] = useState('');\r\n    const [productIds, setProductIds] = useState([]);\r\n    const [productList, setProductList] = useState([]);\r\n\tconst [bnDescription, setBNDescription] = useState('এই পণ্য...');\r\n\tconst [metaTags,setMetaTags] = useState([]);\r\n\tconst [bnMetaTags,setBnMetaTags] = useState([]);\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        const getProductDetail = async () => {\r\n            await handleProductDetailFetch({\r\n                urlOptions: {\r\n                    placeHolders: {\r\n                        id: productDetailData.id\r\n                    }\r\n                }\r\n            })\r\n        };\r\n\r\n        getProductDetail();\r\n\r\n    }, [productDetailData]);\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        if (productDetailData && productDetailData.brand) {\r\n            setBrandId(productDetailData.brand['id']);\r\n        }\r\n        else {\r\n            setBrandId('');\r\n        }\r\n        if (productDetailData && productDetailData.tags && productDetailData.tags.length > 0) {\r\n            // const tagIds = productDetailData.tags.map(item => item.id);\r\n            setSelectedTags(productDetailData.tags);\r\n        }\r\n        else {\r\n            setSelectedTags([]);\r\n\r\n        }\r\n        if (productDetailData && productDetailData.category && productDetailData.category.length > 0) {\r\n            const categoryIds = productDetailData.category; \r\n            setCategoryOptions(categoryIds);\r\n        }\r\n        else {\r\n            setCategoryOptions([]);\r\n\r\n        }\r\n\r\n\r\n\r\n    }, [productDetailData]);\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        if (productDetailState.done && Object.keys(productDetailState).length > 0) {\r\n\r\n            const images = productDetailState.data.image;\r\n            if (images && images.length > 0) {\r\n                setmyImages(images);\r\n            }\r\n\r\n            if (productDetailState.data.cover && productDetailState.data.cover['id']) {\r\n                // @ts-ignore\r\n                setmyImages([productDetailState.data.cover, ...images]);\r\n                console.log('catcat', [productDetailState.data.cover, ...images]);\r\n                setCoverImageId(productDetailState.data.cover['id']);\r\n            }\r\n        }\r\n    }, [productDetailState])\r\n\r\n\r\n    useEffect(() => {\r\n        console.log('thumnail', myImages);\r\n        // @ts-ignore\r\n        if (myImages && myImages[0] && myImages.length < 2) {\r\n            console.log('thumnail2', myImages);\r\n\r\n            if (coverImageId !== myImages[0].id) {\r\n                setCoverImageId(myImages[0].id);\r\n                // handleSetImageAsThumnail(myImages[0]);\r\n            }\r\n\r\n        }\r\n\r\n    }, [myImages])\r\n\r\n\r\n\r\n\r\n\r\n    const makeEmptyCategoryOptions = (setEmpty) => {\r\n        setEmpty([]);\r\n    }\r\n\r\n    const handleSubmit = async (values: any, actions: any) => {\r\n        // @ts-ignore\r\n        const imagesIds = myImages ? myImages.map(image => {\r\n            return image.id;\r\n        }) : [];\r\n\r\n        const products = productList.length > 0 ? productList.map(product => {\r\n            return {\r\n                _id: product._id,\r\n                variation: product.variation,\r\n                quantity: product.quantity,\r\n            }\r\n        }) : [];\r\n\r\n\r\n        const addProductRes = await handleAddProductFetch({\r\n            body: {\r\n                name: values.name.trim(),\r\n                category: categoryids,\r\n                tags: tagIds,\r\n                brand: [brandId],\r\n                image: imagesIds,\r\n                body: body,\r\n                requiredProducts: products,\r\n                preparationTime: values.preparationTime,\r\n                servingSize: values.servingSize,\r\n                cookingTime: values.cookingTime,\r\n                metaTitle: values.metaTitle,\r\n                metaDescription: values.metaDescription,\r\n                bn: {\r\n\t\t\t\t\tmetaTitle: values.bnMetaTitle,\r\n\t\t\t\t\tmetaDescription: values.bnMetaDescription,\r\n\t\t\t\t\tmetaTags: bnMetaTags.join(','),\r\n\t\t\t\t\tname: values.bnName.trim(),\r\n\t\t\t\t\tpreparationTime: values.bnPreparationTime,\r\n\t\t\t\t\tbody: values.bnBody,\r\n\t\t\t\t\tservingSize: values.bnServingSize,\r\n\t\t\t\t\tcookingTime: values.bnCookingTime,\r\n\t\t\t\t}\r\n            }\r\n        });\r\n\r\n\r\n        // @ts-ignore\r\n        if (addProductRes && addProductRes.status === 'ok') {\r\n            openSuccessNotification('Recipe Created');\r\n            setAddNewCategoryVisible(false)\r\n\r\n            setBundleList([{\r\n                 // @ts-ignore\r\n                 ...addProductRes,\r\n                id: addProductRes['id'] || '',\r\n                key: addProductRes['id'] || '',\r\n                name: addProductRes['name'] || '',\r\n                cover: addProductRes['cover'] || '',\r\n\r\n               \r\n            },...bundleList])\r\n            // @ts-ignore\r\n            setmyImages([]);\r\n            setCoverImageId('');\r\n            setPricing([]);\r\n            setTagIds([]);\r\n            setSelectedTags([]);\r\n            setBrandId(\"\");\r\n            setcategoryIds([]);\r\n            setCategoryOptions([]);\r\n            actions.resetForm();\r\n        }\r\n        else {\r\n            // openErrorNotification();\r\n        }\r\n\r\n        actions.setSubmitting(false);\r\n\r\n\r\n    };\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        if (!addProductState['isLoading']) {\r\n            const error = addProductState['error'];\r\n            if (error['isError'] && Object.keys(error['error']).length > 0) {\r\n\r\n\r\n                const errors =\r\n                    Object.values(error['error']).length > 0\r\n                        ? Object.values(error['error'])\r\n                        : [];\r\n                errors.forEach((err, i) => {\r\n                    if (typeof err === 'string') {\r\n                        openErrorNotification(err)\r\n                    }\r\n                    else if (typeof err === 'object') {\r\n                        if (err && Object.keys(err).length > 0) {\r\n                            const errs = Object.values(err);\r\n                            errs.forEach(err => {\r\n                                openErrorNotification(err)\r\n                            })\r\n\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n        }\r\n    }, [addProductState])\r\n\r\n\r\n\r\n\r\n    useEffect(()=>{\r\n        if(productDetailData && productDetailData['requiredProducts'] && productDetailData['requiredProducts'].length > 0){\r\n            const productIds = productDetailData['requiredProducts'].map(item => {\r\n                return {\r\n                    _id: item.id,\r\n                    variation: item.variation,\r\n                    quantity: item.quantity,\r\n                    totalPrice: item.totalPrice \r\n                }\r\n            }); \r\n            setProductIds(productIds); \r\n            const productList = productDetailData.requiredProducts.map(item => {\r\n                return {\r\n                    _id: item.id,\r\n                    variation: item.variation,\r\n                    quantity: item.quantity,\r\n                    totalPrice: item.totalPrice \r\n                }\r\n            }); \r\n           setProductList(productList); \r\n\r\n        }; \r\n        \r\n        console.log('productDetailDatamy',productDetailData);\r\n    },[productDetailData])\r\n\r\n    \r\n    useEffect(() => {\r\n\r\n        if (productIds && productIds.length > 0) {\r\n            if (productIds.length > (productList && productList.length) ) {\r\n                const variation = productIds[productIds.length - 1]['pricing'].length > 0 && productIds[productIds.length - 1]['pricing'][0]['_id'];\r\n                console.log('variation', variation)\r\n\r\n                setProductList([...productList, {\r\n                    ...productIds[productIds.length - 1],\r\n                    _id: productIds[productIds.length - 1]['id'],\r\n                    variation: variation,\r\n                    quantity: 1\r\n                }]);\r\n            }\r\n\r\n\r\n            else if (productIds.length < productList.length) {\r\n                console.log('productIds', productIds);\r\n                console.log('productList', productList);\r\n\r\n                const newProductList = productList.filter(item => {\r\n                    let isTrue = false;\r\n                    productIds.forEach(product => {\r\n                        if (product.id === item._id) {\r\n                            isTrue = true;\r\n                        }\r\n                    });\r\n                    return isTrue;\r\n                })\r\n                setProductList(newProductList);\r\n\r\n            }\r\n\r\n        }\r\n        else {\r\n            setProductList([]);\r\n        }\r\n        // console.log('productIds', productIds)\r\n\r\n\r\n    }, [productIds])\r\n\r\n\r\n\r\n\r\n\r\n\r\n    const handleCancel = (e: any) => {\r\n        setAddNewCategoryVisible(false);\r\n    };\r\n\r\n\r\n    const getisSubmitButtonDisabled = (values, isValid) => {\r\n        if (!values.name || !(pricing.length > 0) || !isValid) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n\r\n    const handleImagesDelete = (id) => {\r\n        // @ts-ignore\r\n        const newImages = myImages && myImages.filter(image => {\r\n            return image.id !== id;\r\n        })\r\n\r\n        setmyImages(newImages);\r\n    }\r\n\r\n    const handleDeleteFromSelectedImage = () => {\r\n\r\n    };\r\n\r\n    const handleThumbnailImageDelete = (id) => {\r\n        // @ts-ignore\r\n        const newImages = myThumbnailImage && myThumbnailImage.filter(image => {\r\n            return image.id !== id;\r\n        })\r\n\r\n        if (newImages.length > 0) {\r\n            setmyThumbnailImage(newImages);\r\n\r\n        }\r\n        else setmyThumbnailImage(false);\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    const handleAddPricing = (priceItem) => {\r\n        setPricing([{\r\n            ...priceItem,\r\n            id: pricing.length\r\n        }, ...pricing])\r\n        message.info('Product Pricing Added');\r\n    }\r\n\r\n\r\n    const handleDeletePricing = (id) => {\r\n        const newPricing = pricing.filter(item => item.id !== id);\r\n        setPricing(newPricing);\r\n        message.info('Product Pricing Deleted');\r\n    }\r\n\r\n\r\n\r\n    const isCategoryInValid = () => {\r\n        if (addProductState.error['error']['category'] && !categoryids && categoryids.length) {\r\n            return true;\r\n        }\r\n        else if (categoryids && categoryids.length > 0) {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    const handleDateChange = (date, dateString) => {\r\n        setDateFeild(dateString);\r\n        // console.log('date', date, dateString);\r\n    }\r\n\r\n    const handleTimeChange = (date, dateString) => {\r\n        setTimeFeild(dateString);\r\n        // console.log('date', date, dateString);\r\n    }\r\n\r\n\r\n\r\n    useEffect(()=>{\r\n\r\n        if(productDetailData && Object.keys(productDetailData).length > 0){\r\n            const metaTags = productDetailData.metaTags && productDetailData.metaTags.split(','); \r\n\r\n            console.log('localMetaTags',metaTags);\r\n           \r\n            const bnMetaTags = productDetailData.bn && productDetailData.bn['metaTags'] && productDetailData.bn['metaTags'].split(','); \r\n            setMetaTags(metaTags)\r\n            setBnMetaTags(bnMetaTags)\r\n        }\r\n\r\n    },[])\r\n\r\n\r\n\r\n    console.log('postDetailState',productDetailState)\r\n    console.log('postDetailData',productDetailData)\r\n    \r\n\r\n    return (\r\n        <Formik\r\n            onSubmit={(values, actions) => handleSubmit(values, actions)}\r\n            validationSchema={validationSchema}\r\n            validateOnBlur={false}\r\n            enableReinitialize={true}\r\n            initialValues={\r\n                { ...initialValues,\r\n                    ...{\r\n                    ...productDetailData,\r\n                    ...( productDetailState['data'] && Object.keys(productDetailState['data']).length > 0 && productDetailState['data']['bn'] && {\r\n                        bnMetaTitle: productDetailState['data']['bn'].metaTitle,\r\n                        bnMetaDescription: productDetailState['data']['bn'].metaDescription,\r\n                        bnName: productDetailState['data']['bn'].name,\r\n                        metaUnit: productDetailState['data']['bn'].unit,\r\n                        bnDescription: productDetailState['data']['bn'].description,\r\n                      }),\r\n                } }\r\n            }\r\n        >\r\n            {({\r\n                handleChange,\r\n                values,\r\n                handleSubmit,\r\n                errors,\r\n                isValid,\r\n                isSubmitting,\r\n                touched,\r\n                handleBlur,\r\n                setFieldTouched,\r\n                handleReset,\r\n            }) => (\r\n                    <>\r\n                        <Modal\r\n                            style={{\r\n                                top: '40px',\r\n\r\n                            }}\r\n                            bodyStyle={{\r\n                                margin: 0,\r\n                                padding: 0,\r\n                            }}\r\n                            width={'70vw'}\r\n                            title=\"Edit Recipe\"\r\n                            visible={addNewCategoryVisible}\r\n                            onOk={(e: any) => handleSubmit(e)}\r\n                            onCancel={handleCancel}\r\n                            okText='Create'\r\n                            okButtonProps={{\r\n                                loading: isSubmitting,\r\n                                htmlType: \"submit\",\r\n                            }}\r\n                        >\r\n\r\n                            <section className='addProductGridContainer'>\r\n                                <div className='addProductGridContainer__left'>\r\n                                    <div className='addProductGridContainer__name'>\r\n                                        <div className='addProductGridContainer__item-header'>\r\n                                            <h3>\r\n                                             Recipe Information\r\n\t\t\t                                </h3>\r\n\r\n                                            <div className={values.name && values.name.length > 2 ? 'checkicon-active' : 'checkicon'}>\r\n                                                <CheckCircleOutlined />\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className='addProductGridContainer__item-body'>\r\n\r\n                                            <Input\r\n                                                label='Name'\r\n                                                placeHolder='Rafti oxy'\r\n                                                value={values.name}\r\n                                                name='name'\r\n                                                isError={(touched.name && errors.name) ||\r\n                                                    (!isSubmitting && addProductState.error['error']['name'])}\r\n\r\n                                                errorString={(touched.name && errors.name) ||\r\n                                                    (!isSubmitting && addProductState.error['error']['name'])}\r\n                                                onChange={(e: any) => {\r\n                                                    handleChange(e);\r\n                                                    setFieldTouched('name');\r\n                                                }}\r\n                                            />\r\n\r\n\r\n                                            <Input\r\n                                                label='BN Name'\r\n                                                value={values.bnName}\r\n                                                placeHolder={'রাফতি অক্স'}\r\n                                                name='bnName'\r\n                                                isError={(touched.bnName && errors.bnName) ||\r\n                                                    (!isSubmitting && addProductState.error['error']['bnName'])}\r\n\r\n                                                errorString={(touched.bnName && errors.bnName) ||\r\n                                                    (!isSubmitting && addProductState.error['error']['bnName'])}\r\n                                                onChange={(e: any) => {\r\n                                                    handleChange(e);\r\n                                                    setFieldTouched('bnName');\r\n                                                }}\r\n                                            />\r\n\r\n\r\n                                            <Input\r\n                                                label='Preparation Time'\r\n                                                value={values.preparationTime}\r\n                                                placeHolder='15 min'\r\n                                                name='preparationTime'\r\n                                                isError={(touched.preparationTime && errors.preparationTime) ||\r\n                                                    (!isSubmitting && addProductState.error['error']['preparationTime'])}\r\n\r\n                                                errorString={(touched.preparationTime && errors.preparationTime) ||\r\n                                                    (!isSubmitting && addProductState.error['error']['preparationTime'])}\r\n                                                onChange={(e: any) => {\r\n                                                    handleChange(e);\r\n                                                    setFieldTouched('preparationTime');\r\n                                                }}\r\n                                            />\r\n\r\n                                                <Input\r\n                                                label='BN Preparation Time'\r\n                                                value={values.bnPreparationTime}\r\n                                                placeHolder={'১৫ মিনিট'}\r\n                                                name='bnPreparationTime'\r\n                                                isError={(touched.bnPreparationTime && errors.bnPreparationTime) ||\r\n                                                    (!isSubmitting && addProductState.error['error']['bnPreparationTime'])}\r\n\r\n                                                errorString={(touched.bnPreparationTime && errors.bnPreparationTime) ||\r\n                                                    (!isSubmitting && addProductState.error['error']['bnPreparationTime'])}\r\n                                                onChange={(e: any) => {\r\n                                                    handleChange(e);\r\n                                                    setFieldTouched('bnPreparationTime');\r\n                                                }}\r\n                                            />\r\n\r\n                                           \r\n\r\n                                            \r\n                                            <Input\r\n                                                label='Cooking Time'\r\n                                                placeHolder={'30 min'}\r\n                                                value={values.cookingTime}\r\n                                                name='cookingTime'\r\n                                                isError={(touched.cookingTime && errors.cookingTime) ||\r\n                                                    (!isSubmitting && addProductState.error['error']['cookingTime'])}\r\n\r\n                                                errorString={(touched.cookingTime && errors.cookingTime) ||\r\n                                                    (!isSubmitting && addProductState.error['error']['cookingTime'])}\r\n                                                onChange={(e: any) => {\r\n                                                    handleChange(e);\r\n                                                    setFieldTouched('cookingTime');\r\n                                                }}\r\n                                            />\r\n\r\n\r\n                                            <Input\r\n                                                label='BN Cooking Time'\r\n                                                placeHolder={'৩০ মিনিট'}\r\n                                                value={values.bnCookingTime}\r\n                                                name='bnCookingTime'\r\n                                                isError={(touched.bnCookingTime && errors.bnCookingTime) ||\r\n                                                    (!isSubmitting && addProductState.error['error']['bnCookingTime'])}\r\n\r\n                                                errorString={(touched.bnCookingTime && errors.bnCookingTime) ||\r\n                                                    (!isSubmitting && addProductState.error['error']['bnCookingTime'])}\r\n                                                onChange={(e: any) => {\r\n                                                    handleChange(e);\r\n                                                    setFieldTouched('bnCookingTime');\r\n                                                }}\r\n                                            />\r\n\r\n                                            <Input\r\n                                                label='Serving Size'\r\n                                                value={values.servingSize}\r\n                                                name='servingSize'\r\n                                                isError={(touched.servingSize && errors.servingSize) ||\r\n                                                    (!isSubmitting && addProductState.error['error']['servingSize'])}\r\n\r\n                                                errorString={(touched.servingSize && errors.servingSize) ||\r\n                                                    (!isSubmitting && addProductState.error['error']['servingSize'])}\r\n                                                onChange={(e: any) => {\r\n                                                    handleChange(e);\r\n                                                    setFieldTouched('servingSize');\r\n                                                }}\r\n                                            />\r\n\r\n<Input\r\n                                                label='BN Serving Size'\r\n                                                value={values.bnServingSize}\r\n                                                name='bnServingSize'\r\n                                                isError={(touched.bnServingSize && errors.bnServingSize) ||\r\n                                                    (!isSubmitting && addProductState.error['error']['bnServingSize'])}\r\n\r\n                                                errorString={(touched.bnServingSize && errors.bnServingSize) ||\r\n                                                    (!isSubmitting && addProductState.error['error']['bnServingSize'])}\r\n                                                onChange={(e: any) => {\r\n                                                    handleChange(e);\r\n                                                    setFieldTouched('bnServingSize');\r\n                                                }}\r\n                                            />\r\n\r\n                                            <Input\r\n                                                label='URL'\r\n                                                value={values.url}\r\n                                                name='url'\r\n                                                isError={(touched.url && errors.url) ||\r\n                                                    (!isSubmitting && addProductState.error['error']['url'])}\r\n\r\n                                                errorString={(touched.url && errors.url) ||\r\n                                                    (!isSubmitting && addProductState.error['error']['url'])}\r\n                                                onChange={(e: any) => {\r\n                                                    handleChange(e);\r\n                                                    setFieldTouched('url');\r\n                                                }}\r\n                                            />\r\n\r\n\r\n\r\n\r\n                                            <h3 className='inputFieldLabel'>\r\n                                                Body\r\n                                            </h3>\r\n\r\n                                            <div style={{\r\n                                                width: '100%',\r\n                                                maxWidth: '100%'\r\n                                            }}>\r\n                                                <CKEditor\r\n                                                    editor={ClassicEditor}\r\n                                                    data={body}\r\n                                                    onInit={editor => {\r\n                                                        // You can store the \"editor\" and use when it is needed.\r\n                                                        console.log('Editor is ready to use!', editor);\r\n                                                    }}\r\n                                                    onChange={(event, editor) => {\r\n                                                        const data = editor.getData();\r\n                                                        setBody(data);\r\n                                                    }}\r\n                                                    onBlur={(event, editor) => {\r\n                                                        console.log('Blur.', editor);\r\n                                                    }}\r\n                                                    onFocus={(event, editor) => {\r\n                                                        console.log('Focus.', editor);\r\n                                                    }}\r\n                                                />\r\n                                            </div>\r\n\r\n                                            <div style={{\r\n                                                marginTop:'15px'\r\n                                            }}></div>\r\n\r\n                                            <h3 className='inputFieldLabel'>\r\n                                                BN Body\r\n                                            </h3>\r\n\r\n                                            <div style={{\r\n                                                width: '100%',\r\n                                                maxWidth: '100%'\r\n                                            }}>\r\n                                                <CKEditor\r\n                                                    editor={ClassicEditor}\r\n                                                    data={bnBody}\r\n                                                    onInit={editor => {\r\n                                                        // You can store the \"editor\" and use when it is needed.\r\n                                                        console.log('Editor is ready to use!', editor);\r\n                                                    }}\r\n                                                    onChange={(event, editor) => {\r\n                                                        const data = editor.getData();\r\n                                                        setBnBody(data);\r\n                                                    }}\r\n                                                    onBlur={(event, editor) => {\r\n                                                        console.log('Blur.', editor);\r\n                                                    }}\r\n                                                    onFocus={(event, editor) => {\r\n                                                        console.log('Focus.', editor);\r\n                                                    }}\r\n                                                />\r\n                                            </div>\r\n\r\n                                            {/* <div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\tdisplay: 'flex',\r\n\t\t\t\t\t\t\t\t\t\t\t\tjustifyContent: 'space-between'\r\n\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\twidth: '48%',\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<DatePicker\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabel='Date'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={handleDateChange} />\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\twidth: '48%'\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<DatePicker\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tdate={date}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\twithTime={true}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder='Select time'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabel='Time'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={handleTimeChange} />\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t</div> */}\r\n                                            <div style={{\r\n                                                marginBottom: '15px'\r\n                                            }}></div>\r\n                                            {/* \r\n\t\t\t\t\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\t\t\t\t\trows={1}\r\n\t\t\t\t\t\t\t\t\t\t\t\tlabel='Venue'\r\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.venue}\r\n\t\t\t\t\t\t\t\t\t\t\t\tname='venue'\r\n\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.venue && errors.venue) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['venue'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.venue && errors.venue) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['venue'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('venue');\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\t\tlabel='Purchase Limit'\r\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.purchaseLimit}\r\n\t\t\t\t\t\t\t\t\t\t\t\ttype='number'\r\n\t\t\t\t\t\t\t\t\t\t\t\tname='purchaseLimit'\r\n\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.purchaseLimit && errors.purchaseLimit) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['purchaseLimit'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.purchaseLimit && errors.purchaseLimit) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['purchaseLimit'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('purchaseLimit');\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t/> */}\r\n\r\n                                      \r\n\r\n\r\n\r\n                                  \r\n\r\n                                        </div>\r\n\r\n\r\n\r\n                                    </div>\r\n\r\n                                    <div className='addProductGridContainer__price'>\r\n                                        <div className='addProductGridContainer__item-header'>\r\n                                            <h3>\r\n                                                Products\r\n\t\t                                    </h3>\r\n\r\n                                            <div className={pricing && pricing.length > 0 ? 'checkicon-active' : 'checkicon'}>\r\n                                                <CheckCircleOutlined />\r\n                                            </div>\r\n                                        </div>\r\n\r\n\r\n                                        <div className='addProductGridContainer__item-body'>\r\n\r\n                                            <h3 className='inputFieldLabel'>\r\n                                                Products\r\n                                            </h3>\r\n                                            <SelectProducts\r\n                                                setProductIds={setProductIds}\r\n                                                productIds={productIds}\r\n                                            />\r\n\r\n                                            <div style={{\r\n                                                marginTop: \"15px\"\r\n                                            }}></div>\r\n\r\n                                            <h3 className='inputFieldLabel'>\r\n                                                Selcted Products\r\n                                            </h3>\r\n\r\n                                            <SelectedProductItems\r\n                                                productList={productList}\r\n                                                setProductList={setProductList}\r\n                                            />\r\n                                        </div>\r\n                                    </div>\r\n\r\n\r\n\r\n\r\n                                    <div className='addProductGridContainer__image'>\r\n\r\n                                        <div className='addProductGridContainer__item-header'>\r\n                                            <h3>\r\n                                                Image\r\n</h3>\r\n\r\n                                            <Tooltip\r\n                                                placement=\"left\" title={'Click on the image to select cover image, By default 1st image is selected as cover'}>\r\n                                                <a href='###'>\r\n                                                    <InfoCircleOutlined />\r\n                                                </a>\r\n                                            </Tooltip>\r\n                                        </div>\r\n                                        <div className='addProductGridContainer__item-body'>\r\n\r\n\r\n\r\n                                            <div className='aboutToUploadImagesContainer'>\r\n                                                {myImages &&\r\n                                                    // @ts-ignore\r\n                                                    myImages.length > 0 && myImages.map((image, index) => {\r\n                                                        return (\r\n                                                            <div className='aboutToUploadImagesContainer__item'>\r\n                                                                <div\r\n                                                                    className='aboutToUploadImagesContainer__item-imgContainer'\r\n                                                                    onClick={() => setCoverImageId(image.id)}\r\n                                                                >\r\n                                                                    <img src={image.cover} alt={image.alt} />\r\n                                                                </div>\r\n\r\n                                                                <span\r\n                                                                    onClick={() => handleImagesDelete(image.id)}\r\n                                                                    className='aboutToUploadImagesContainer__item-remove'>\r\n                                                                    <CloseOutlined />\r\n                                                                </span>\r\n\r\n\r\n                                                                {coverImageId === image.id ? (\r\n                                                                    <span className='aboutToUploadImagesContainer__item-cover'>\r\n                                                                        <CheckOutlined />\r\n                                                                    </span>\r\n                                                                ) : !coverImageId && index === 0 && (\r\n                                                                    <span className='aboutToUploadImagesContainer__item-cover'>\r\n                                                                        <CheckOutlined />\r\n                                                                    </span>\r\n                                                                )}\r\n                                                            </div>\r\n                                                        )\r\n                                                    })}\r\n\r\n\r\n                                                <Tooltip\r\n                                                    title={'Attach images'}>\r\n\r\n                                                    <div\r\n                                                        onClick={() => {\r\n                                                            setvisible(true);\r\n                                                            setisModalOpenForImages(true);\r\n                                                            setisModalOpenForThumbnail(false);\r\n                                                        }}\r\n                                                        className='aboutToUploadImagesContainer__uploadItem'>\r\n                                                        {/* <FileAddOutlined />\r\n                                                        <FileImageTwoTone />\r\n                                                        <FileImageOutlined /> */}\r\n                                                        <FileImageFilled />\r\n                                                        {/* <h5>\r\n                                                                        Select From Library\r\n                                                                <     /h5> */}\r\n                                                        <span className='aboutToUploadImagesContainer__uploadItem-plus'>\r\n                                                            <PlusOutlined />\r\n                                                        </span>\r\n                                                    </div>\r\n                                                </Tooltip>\r\n\r\n\r\n\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n\r\n\r\n\r\n\r\n                                    <div className='addProductGridContainer__image'>\r\n\r\n<div className='addProductGridContainer__item-header'>\r\n    <h3>\r\n    Meta Data\r\n</h3>\r\n\r\n    <Tooltip\r\n        placement=\"left\" title={\"Meta data will be used to make the user's easy and for search engine optimization.\"}>\r\n        <a href='###'>\r\n            <InfoCircleOutlined />\r\n        </a>\r\n    </Tooltip>\r\n</div>\r\n<div className='addProductGridContainer__item-body'>\r\n\r\n                \r\n<Input\r\nlabel='Meta title'\r\nvalue={values.metaTitle}\r\nplaceHolder={'category...'}\r\nname='metaTitle'\r\nisError={(touched.metaTitle && errors.metaTitle) ||\r\n(!isSubmitting && addProductState.error['error']['metaTitle'])}\r\n\r\nerrorString={(touched.metaTitle && errors.metaTitle) ||\r\n(!isSubmitting && addProductState.error['error']['metaTitle'])}\r\nonChange={(e: any) => {\r\nhandleChange(e);\r\nsetFieldTouched('metaTitle')\r\n}}\r\n/>\r\n\r\n<Input\r\nlabel='BN Meta title'\r\nvalue={values.bnMetaTitle}\r\nplaceHolder={'ক্যাটাগড়ি...'}\r\nname='bnMetaTitle'\r\nisError={(touched.bnMetaTitle && errors.bnMetaTitle) ||\r\n(!isSubmitting && addProductState.error['error']['bnMetaTitle'])}\r\n\r\nerrorString={(touched.bnMetaTitle && errors.bnMetaTitle) ||\r\n(!isSubmitting && addProductState.error['error']['bnMetaTitle'])}\r\nonChange={(e: any) => {\r\nhandleChange(e);\r\nsetFieldTouched('bnMetaTitle');\r\n}}\r\n/>\r\n\r\n<TextArea\r\nlabel='Meta description'\r\nvalue={values.metaDescription}\r\nplaceholder={'meta...'}\r\nname='metaDescription'\r\nisError={(touched.metaDescription && errors.metaDescription) ||\r\n(!isSubmitting && addProductState.error['error']['metaDescription'])}\r\n\r\nerrorString={(touched.metaDescription && errors.metaDescription) ||\r\n(!isSubmitting && addProductState.error['error']['metaDescription'])}\r\nonChange={(e: any) => {\r\nhandleChange(e);\r\nsetFieldTouched('metaDescription');\r\n}}\r\n/>\r\n\r\n<TextArea\r\nlabel='BN Meta Description'\r\nvalue={values.bnMetaDescription}\r\nplaceholder={'এইয় মেট...'}\r\nname='bnMetaDescription'\r\nisError={(touched.bnMetaDescription && errors.bnMetaDescription) ||\r\n(!isSubmitting && addProductState.error['error']['bnMetaDescription'])}\r\n\r\nerrorString={(touched.bnMetaDescription && errors.bnMetaDescription) ||\r\n(!isSubmitting && addProductState.error['error']['bnMetaDescription'])}\r\nonChange={(e: any) => {\r\nhandleChange(e);\r\nsetFieldTouched('bnMetaDescription');\r\n}}\r\n/>\r\n\r\n<h3 className='inputFieldLabel'>\r\nMeta Tags (grocery,fashion)\r\n</h3>\r\n\r\n<MetaTags\r\n// @ts-ignore\r\nsetTags={setMetaTags}\r\ntags={metaTags}\r\n/>\r\n\r\n<div style={{\r\nmarginTop:'15px'\r\n}}></div>\r\n\r\n<h3 className='inputFieldLabel'>\r\nBN Meta Tags (মুদিখানা,ফ্যাশন)\r\n</h3>\r\n\r\n<MetaTags\r\n// @ts-ignore\r\nsetTags={setBnMetaTags}\r\ntags={bnMetaTags}\r\n/>\r\n\r\n\r\n</div>\r\n</div>\r\n\r\n                                </div>\r\n                                <div className='addProductGridContainer__right'>\r\n                                    <div className='addProductGridContainer__category'>\r\n\r\n                                        <div className='addProductGridContainer-rightItemContainer'>\r\n                                            <div className='addProductGridContainer-rightItemContainer-header'>\r\n                                                <h3>\r\n                                                    Recipe Categories\r\n\t\t\t\t                                </h3>\r\n\r\n                                                <Tooltip\r\n                                                    color='red'\r\n                                                    visible={addProductState.error['error']['category'] && !(categoryids.length > 0)}\r\n                                                    placement=\"left\" title={'Select at least one category'}>\r\n                                                    <div className={!(categoryids.length > 0)\r\n                                                        && !addProductState.error['error']['category'] ? 'checkicon' : addProductState.error['error']['category'] ? 'checkicon-error' : 'checkicon-active'}>\r\n                                                        <CheckCircleOutlined />\r\n                                                    </div>\r\n                                                </Tooltip>\r\n\r\n                                            </div>\r\n                                            <div className='addProductGridContainer-rightItemContainer-body'>\r\n                                                <Categories\r\n                                                    setCategoryOptions={setCategoryOptions}\r\n                                                    categoryOptions={categoryOptions}\r\n                                                    setcategoryIds={setcategoryIds} />\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                    </div>\r\n\r\n                                    <div className='addProductGridContainer__tag'>\r\n                                        <div className='addProductGridContainer-rightItemContainer'>\r\n                                            <div className='addProductGridContainer-rightItemContainer-header'>\r\n                                                <h3>\r\n                                                Recipe Tags\r\n\t\t\t\t</h3>\r\n                                            </div>\r\n                                            <div className='addProductGridContainer-rightItemContainer-body'>\r\n                                                <Tags\r\n                                                    setSelectedTags={setSelectedTags}\r\n                                                    selectedTags={selectedTags}\r\n                                                    setTagIds={setTagIds} />\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </section>\r\n\r\n\r\n                        </Modal>\r\n\r\n                        <MediaLibrary\r\n                            setvisible={setvisible}\r\n                            visible={visible}\r\n                            setmyImages={setmyImages}\r\n                            myImages={myImages}\r\n                            setmyThumbnailImage={setmyThumbnailImage}\r\n                            isModalOpenForThumbnail={isModalOpenForThumbnail}\r\n                            isModalOpenForImages={isModalOpenForImages}\r\n\r\n                        />\r\n                    </>\r\n                )}\r\n        </Formik>\r\n\r\n\r\n\r\n\r\n    );\r\n};\r\n\r\nexport default AddNewProduct;\r\n\r\n\r\n\r\n\r\n/*\r\n\r\n\r\nProduct variation ---->\r\n\r\nPrice [title]\r\n\t[regular input field] [offer inputfield]\r\n\r\nStock [title]\r\n\t[available input field] [minimum inputfield]\r\n\r\ndefault [default can be set to true]\r\n\r\nattributes [title]\r\n\t[add attributes name]\r\n\t\t[add attrubutes value]\r\n\r\n\t[add attributes name]\r\n\t\t[add attrubutes value\r\n\r\n*///","import React, { useState, useEffect } from 'react';\r\n\r\n// import hooks \r\nimport { useHandleFetch } from '../../hooks';\r\n\r\n\r\n// import libraries \r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { message, Tooltip, Modal, Tabs, Empty, Badge } from 'antd';\r\nimport CKEditor from '@ckeditor/ckeditor5-react';\r\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\r\n\r\n\r\nimport {\r\n    DeleteOutlined,\r\n    FileAddOutlined,\r\n    CheckCircleOutlined,\r\n    FileImageFilled,\r\n    PlusOutlined,\r\n    PlusCircleOutlined,\r\n    CloseOutlined,\r\n    CheckOutlined,\r\n    InfoCircleOutlined\r\n} from '@ant-design/icons';\r\n\r\n// import ReactQuill from 'react-quill';\r\n// import 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport MediaLibrary from \"../../components/MediaLibrary\";\r\nimport { openSuccessNotification, openErrorNotification } from \"../../components/Notification\";\r\nimport MetaTags from \"../category/MetaTags\";\r\n\r\n\r\nimport Tags from \"./Tags\";\r\nimport Brands from \"./Brands\";\r\nimport Categories from \"./Categories\";\r\nimport SelectProducts from \"./SelectProducts\";\r\nimport SelectedProductItems from \"./SelectedProductItems\";\r\n\r\n\r\n\r\nconst { TabPane } = Tabs;\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    name: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\n\r\nconst initialValues = {\r\n    name: \"\",\r\n    url: \"\",\r\n    preparationTime: \"\",\r\n    servingSize: \"\",\r\n    cookingTime: '',\r\n    body: '',\r\n    bnName: '',\r\n\tbnBody: '',\r\n\tbnPreparationTime: '',\r\n\tbnServingSize: '',\r\n\tbnCookingTime: '',\r\n\tmetaTitle: '',\r\n\tbnMetaTitle: '',\r\n\tmetaDescription: '',\r\n\tbnMetaDescription: '',\r\n\tmetaTags: '',\r\n\tbnMetaTags: '',\r\n}\r\n\r\n\r\n\r\ninterface Props {\r\n    addNewCategoryVisible: any;\r\n    setAddNewCategoryVisible: any;\r\n    productList?: any;\r\n    setProductList?: any;\r\n}\r\n\r\nconst AddNewProduct = ({ addNewCategoryVisible, setAddNewCategoryVisible, productList: bundleList, setProductList: setBundleList }: Props) => {\r\n\r\n    const [addProductState, handleAddProductFetch] = useHandleFetch({}, 'addPost');\r\n    const [visible, setvisible] = useState(false);\r\n    const [myImages, setmyImages] = useState(false);\r\n    const [myThumbnailImage, setmyThumbnailImage] = useState(false);\r\n    const [isModalOpenForThumbnail, setisModalOpenForThumbnail] = useState(false);\r\n    const [isModalOpenForImages, setisModalOpenForImages] = useState(false);\r\n    const [categoryids, setcategoryIds] = useState([]);\r\n    const [tagIds, setTagIds] = useState([]);\r\n    const [brandId, setBrandId] = useState('');\r\n    const [pricing, setPricing] = useState([]);\r\n    const [coverImageId, setCoverImageId] = useState('');\r\n    const [categoryOptions, setCategoryOptions] = useState([]);\r\n    const [selectedTags, setSelectedTags] = useState([]);\r\n    const [date, setDateFeild] = useState('');\r\n    const [time, setTimeFeild] = useState('');\r\n    const [description, setDescription] = useState('');\r\n    const [body, setBody] = useState('');\r\n    const [bnBody, setBnBody] = useState('');\r\n    const [productIds, setProductIds] = useState([]);\r\n    const [productList, setProductList] = useState([]);\r\n\tconst [bnDescription, setBNDescription] = useState('এই পণ্য...');\r\n\tconst [metaTags,setMetaTags] = useState([]);\r\n\tconst [bnMetaTags,setBnMetaTags] = useState([]);\r\n\r\n\r\n    const [price, setPrice] = useState({\r\n        regular: null,\r\n        offer: null,\r\n    });\r\n\r\n\r\n    const makeEmptyCategoryOptions = (setEmpty) => {\r\n        setEmpty([]);\r\n    }\r\n\r\n    const handleSubmit = async (values: any, actions: any) => {\r\n        // @ts-ignore\r\n        const imagesIds = myImages ? myImages.map(image => {\r\n            return image.id;\r\n        }) : [];\r\n\r\n        const products = productList.length > 0 ? productList.map(product => {\r\n            return {\r\n                _id: product._id,\r\n                variation: product.variation,\r\n                quantity: product.quantity,\r\n            }\r\n        }) : [];\r\n\r\n\r\n        const addProductRes = await handleAddProductFetch({\r\n            body: {\r\n                name: values.name.trim(),\r\n                category: categoryids,\r\n                tags: tagIds,\r\n                brand: [brandId],\r\n                image: imagesIds,\r\n                body: body,\r\n                requiredProducts: products,\r\n                preparationTime: values.preparationTime,\r\n                servingSize: values.servingSize,\r\n                cookingTime: values.cookingTime,\r\n                metaTitle: values.metaTitle,\r\n                metaDescription: values.metaDescription,\r\n                bn: {\r\n\t\t\t\t\tmetaTitle: values.bnMetaTitle,\r\n\t\t\t\t\tmetaDescription: values.bnMetaDescription,\r\n\t\t\t\t\tmetaTags: bnMetaTags.join(','),\r\n\t\t\t\t\tname: values.bnName.trim(),\r\n\t\t\t\t\tpreparationTime: values.bnPreparationTime,\r\n\t\t\t\t\tbody: values.bnBody,\r\n\t\t\t\t\tservingSize: values.bnServingSize,\r\n\t\t\t\t\tcookingTime: values.bnCookingTime,\r\n\t\t\t\t}\r\n            }\r\n        });\r\n\r\n\r\n        // @ts-ignore\r\n        if (addProductRes && addProductRes.status === 'ok') {\r\n            openSuccessNotification('Recipe Created');\r\n            setAddNewCategoryVisible(false)\r\n\r\n            setBundleList([{\r\n                 // @ts-ignore\r\n                 ...addProductRes,\r\n                id: addProductRes['_id'] || '',\r\n                key: addProductRes['_id'] || '',\r\n                name: addProductRes['name'] || '',\r\n                cover: addProductRes['cover'] || '',\r\n\r\n               \r\n            },...bundleList])\r\n            // @ts-ignore\r\n            setmyImages([]);\r\n            setCoverImageId('');\r\n            setPricing([]);\r\n            setTagIds([]);\r\n            setSelectedTags([]);\r\n            setBrandId(\"\");\r\n            setcategoryIds([]);\r\n            setCategoryOptions([]);\r\n            actions.resetForm();\r\n        }\r\n        else {\r\n            // openErrorNotification();\r\n        }\r\n\r\n        actions.setSubmitting(false);\r\n\r\n\r\n    };\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        if (!addProductState['isLoading']) {\r\n            const error = addProductState['error'];\r\n            if (error['isError'] && Object.keys(error['error']).length > 0) {\r\n\r\n\r\n                const errors =\r\n                    Object.values(error['error']).length > 0\r\n                        ? Object.values(error['error'])\r\n                        : [];\r\n                errors.forEach((err, i) => {\r\n                    if (typeof err === 'string') {\r\n                        openErrorNotification(err)\r\n                    }\r\n                    else if (typeof err === 'object') {\r\n                        if (err && Object.keys(err).length > 0) {\r\n                            const errs = Object.values(err);\r\n                            errs.forEach(err => {\r\n                                openErrorNotification(err)\r\n                            })\r\n\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n        }\r\n    }, [addProductState])\r\n\r\n\r\n\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        if (productIds.length > 0) {\r\n            if (productIds.length > productList.length) {\r\n                const variation = productIds[productIds.length - 1]['pricing'].length > 0 && productIds[productIds.length - 1]['pricing'][0]['_id'];\r\n                console.log('variation', variation)\r\n\r\n                setProductList([...productList, {\r\n                    ...productIds[productIds.length - 1],\r\n                    _id: productIds[productIds.length - 1]['id'],\r\n                    variation: variation,\r\n                    quantity: 1\r\n                }]);\r\n            }\r\n\r\n\r\n            else if (productIds.length < productList.length) {\r\n                console.log('productIds', productIds);\r\n                console.log('productList', productList);\r\n\r\n                const newProductList = productList.filter(item => {\r\n                    let isTrue = false;\r\n                    productIds.forEach(product => {\r\n                        if (product.id === item._id) {\r\n                            isTrue = true;\r\n                        }\r\n                    });\r\n                    return isTrue;\r\n                })\r\n                setProductList(newProductList);\r\n\r\n            }\r\n\r\n        }\r\n        else {\r\n            setProductList([]);\r\n        }\r\n        // console.log('productIds', productIds)\r\n\r\n\r\n    }, [productIds])\r\n\r\n\r\n\r\n\r\n\r\n\r\n    const handleCancel = (e: any) => {\r\n        setAddNewCategoryVisible(false);\r\n    };\r\n\r\n\r\n    const getisSubmitButtonDisabled = (values, isValid) => {\r\n        if (!values.name || !(pricing.length > 0) || !isValid) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n\r\n    const handleImagesDelete = (id) => {\r\n        // @ts-ignore\r\n        const newImages = myImages && myImages.filter(image => {\r\n            return image.id !== id;\r\n        })\r\n\r\n        setmyImages(newImages);\r\n    }\r\n\r\n    const handleDeleteFromSelectedImage = () => {\r\n\r\n    };\r\n\r\n    const handleThumbnailImageDelete = (id) => {\r\n        // @ts-ignore\r\n        const newImages = myThumbnailImage && myThumbnailImage.filter(image => {\r\n            return image.id !== id;\r\n        })\r\n\r\n        if (newImages.length > 0) {\r\n            setmyThumbnailImage(newImages);\r\n\r\n        }\r\n        else setmyThumbnailImage(false);\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    const handleAddPricing = (priceItem) => {\r\n        setPricing([{\r\n            ...priceItem,\r\n            id: pricing.length\r\n        }, ...pricing])\r\n        message.info('Product Pricing Added');\r\n    }\r\n\r\n\r\n    const handleDeletePricing = (id) => {\r\n        const newPricing = pricing.filter(item => item.id !== id);\r\n        setPricing(newPricing);\r\n        message.info('Product Pricing Deleted');\r\n    }\r\n\r\n\r\n\r\n    const isCategoryInValid = () => {\r\n        if (addProductState.error['error']['category'] && !categoryids && categoryids.length) {\r\n            return true;\r\n        }\r\n        else if (categoryids && categoryids.length > 0) {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    const handleDateChange = (date, dateString) => {\r\n        setDateFeild(dateString);\r\n        // console.log('date', date, dateString);\r\n    }\r\n\r\n    const handleTimeChange = (date, dateString) => {\r\n        setTimeFeild(dateString);\r\n        // console.log('date', date, dateString);\r\n    }\r\n\r\n\r\n\r\n\r\n    return (\r\n        <Formik\r\n            onSubmit={(values, actions) => handleSubmit(values, actions)}\r\n            validationSchema={validationSchema}\r\n            validateOnBlur={false}\r\n            enableReinitialize={true}\r\n            initialValues={\r\n                { ...initialValues }\r\n            }\r\n        >\r\n            {({\r\n                handleChange,\r\n                values,\r\n                handleSubmit,\r\n                errors,\r\n                isValid,\r\n                isSubmitting,\r\n                touched,\r\n                handleBlur,\r\n                setFieldTouched,\r\n                handleReset,\r\n            }) => (\r\n                    <>\r\n                        <Modal\r\n                            style={{\r\n                                top: '40px',\r\n\r\n                            }}\r\n                            bodyStyle={{\r\n                                margin: 0,\r\n                                padding: 0,\r\n                            }}\r\n                            width={'70vw'}\r\n                            title=\"Add New Recipe\"\r\n                            visible={addNewCategoryVisible}\r\n                            onOk={(e: any) => handleSubmit(e)}\r\n                            onCancel={handleCancel}\r\n                            okText='Create'\r\n                            okButtonProps={{\r\n                                loading: isSubmitting,\r\n                                htmlType: \"submit\",\r\n                            }}\r\n                        >\r\n\r\n                            <section className='addProductGridContainer'>\r\n                                <div className='addProductGridContainer__left'>\r\n                                    <div className='addProductGridContainer__name'>\r\n                                        <div className='addProductGridContainer__item-header'>\r\n                                            <h3>\r\n                                             Recipe Information\r\n\t\t\t                                </h3>\r\n\r\n                                            <div className={values.name && values.name.length > 2 ? 'checkicon-active' : 'checkicon'}>\r\n                                                <CheckCircleOutlined />\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className='addProductGridContainer__item-body'>\r\n\r\n                                            <Input\r\n                                                label='Name'\r\n                                                placeHolder='Rafti oxy'\r\n                                                value={values.name}\r\n                                                name='name'\r\n                                                isError={(touched.name && errors.name) ||\r\n                                                    (!isSubmitting && addProductState.error['error']['name'])}\r\n\r\n                                                errorString={(touched.name && errors.name) ||\r\n                                                    (!isSubmitting && addProductState.error['error']['name'])}\r\n                                                onChange={(e: any) => {\r\n                                                    handleChange(e);\r\n                                                    setFieldTouched('name');\r\n                                                }}\r\n                                            />\r\n\r\n\r\n                                            <Input\r\n                                                label='BN Name'\r\n                                                value={values.bnName}\r\n                                                placeHolder={'রাফতি অক্স'}\r\n                                                name='bnName'\r\n                                                isError={(touched.bnName && errors.bnName) ||\r\n                                                    (!isSubmitting && addProductState.error['error']['bnName'])}\r\n\r\n                                                errorString={(touched.bnName && errors.bnName) ||\r\n                                                    (!isSubmitting && addProductState.error['error']['bnName'])}\r\n                                                onChange={(e: any) => {\r\n                                                    handleChange(e);\r\n                                                    setFieldTouched('bnName');\r\n                                                }}\r\n                                            />\r\n\r\n\r\n                                            <Input\r\n                                                label='Preparation Time'\r\n                                                value={values.preparationTime}\r\n                                                placeHolder='15 min'\r\n                                                name='preparationTime'\r\n                                                isError={(touched.preparationTime && errors.preparationTime) ||\r\n                                                    (!isSubmitting && addProductState.error['error']['preparationTime'])}\r\n\r\n                                                errorString={(touched.preparationTime && errors.preparationTime) ||\r\n                                                    (!isSubmitting && addProductState.error['error']['preparationTime'])}\r\n                                                onChange={(e: any) => {\r\n                                                    handleChange(e);\r\n                                                    setFieldTouched('preparationTime');\r\n                                                }}\r\n                                            />\r\n\r\n                                                <Input\r\n                                                label='BN Preparation Time'\r\n                                                value={values.bnPreparationTime}\r\n                                                placeHolder={'১৫ মিনিট'}\r\n                                                name='bnPreparationTime'\r\n                                                isError={(touched.bnPreparationTime && errors.bnPreparationTime) ||\r\n                                                    (!isSubmitting && addProductState.error['error']['bnPreparationTime'])}\r\n\r\n                                                errorString={(touched.bnPreparationTime && errors.bnPreparationTime) ||\r\n                                                    (!isSubmitting && addProductState.error['error']['bnPreparationTime'])}\r\n                                                onChange={(e: any) => {\r\n                                                    handleChange(e);\r\n                                                    setFieldTouched('bnPreparationTime');\r\n                                                }}\r\n                                            />\r\n\r\n                                           \r\n\r\n                                            \r\n                                            <Input\r\n                                                label='Cooking Time'\r\n                                                placeHolder={'30 min'}\r\n                                                value={values.cookingTime}\r\n                                                name='cookingTime'\r\n                                                isError={(touched.cookingTime && errors.cookingTime) ||\r\n                                                    (!isSubmitting && addProductState.error['error']['cookingTime'])}\r\n\r\n                                                errorString={(touched.cookingTime && errors.cookingTime) ||\r\n                                                    (!isSubmitting && addProductState.error['error']['cookingTime'])}\r\n                                                onChange={(e: any) => {\r\n                                                    handleChange(e);\r\n                                                    setFieldTouched('cookingTime');\r\n                                                }}\r\n                                            />\r\n\r\n\r\n                                            <Input\r\n                                                label='BN Cooking Time'\r\n                                                placeHolder={'৩০ মিনিট'}\r\n                                                value={values.bnCookingTime}\r\n                                                name='bnCookingTime'\r\n                                                isError={(touched.bnCookingTime && errors.bnCookingTime) ||\r\n                                                    (!isSubmitting && addProductState.error['error']['bnCookingTime'])}\r\n\r\n                                                errorString={(touched.bnCookingTime && errors.bnCookingTime) ||\r\n                                                    (!isSubmitting && addProductState.error['error']['bnCookingTime'])}\r\n                                                onChange={(e: any) => {\r\n                                                    handleChange(e);\r\n                                                    setFieldTouched('bnCookingTime');\r\n                                                }}\r\n                                            />\r\n\r\n                                            <Input\r\n                                                label='Serving Size'\r\n                                                value={values.servingSize}\r\n                                                name='servingSize'\r\n                                                isError={(touched.servingSize && errors.servingSize) ||\r\n                                                    (!isSubmitting && addProductState.error['error']['servingSize'])}\r\n\r\n                                                errorString={(touched.servingSize && errors.servingSize) ||\r\n                                                    (!isSubmitting && addProductState.error['error']['servingSize'])}\r\n                                                onChange={(e: any) => {\r\n                                                    handleChange(e);\r\n                                                    setFieldTouched('servingSize');\r\n                                                }}\r\n                                            />\r\n\r\n<Input\r\n                                                label='BN Serving Size'\r\n                                                value={values.bnServingSize}\r\n                                                name='bnServingSize'\r\n                                                isError={(touched.bnServingSize && errors.bnServingSize) ||\r\n                                                    (!isSubmitting && addProductState.error['error']['bnServingSize'])}\r\n\r\n                                                errorString={(touched.bnServingSize && errors.bnServingSize) ||\r\n                                                    (!isSubmitting && addProductState.error['error']['bnServingSize'])}\r\n                                                onChange={(e: any) => {\r\n                                                    handleChange(e);\r\n                                                    setFieldTouched('bnServingSize');\r\n                                                }}\r\n                                            />\r\n\r\n                                            <Input\r\n                                                label='URL'\r\n                                                value={values.url}\r\n                                                name='url'\r\n                                                isError={(touched.url && errors.url) ||\r\n                                                    (!isSubmitting && addProductState.error['error']['url'])}\r\n\r\n                                                errorString={(touched.url && errors.url) ||\r\n                                                    (!isSubmitting && addProductState.error['error']['url'])}\r\n                                                onChange={(e: any) => {\r\n                                                    handleChange(e);\r\n                                                    setFieldTouched('url');\r\n                                                }}\r\n                                            />\r\n\r\n\r\n\r\n\r\n                                            <h3 className='inputFieldLabel'>\r\n                                                Body\r\n                                            </h3>\r\n\r\n                                            <div style={{\r\n                                                width: '100%',\r\n                                                maxWidth: '100%'\r\n                                            }}>\r\n                                                <CKEditor\r\n                                                    editor={ClassicEditor}\r\n                                                    data={body}\r\n                                                    onInit={editor => {\r\n                                                        // You can store the \"editor\" and use when it is needed.\r\n                                                        console.log('Editor is ready to use!', editor);\r\n                                                    }}\r\n                                                    onChange={(event, editor) => {\r\n                                                        const data = editor.getData();\r\n                                                        setBody(data);\r\n                                                    }}\r\n                                                    onBlur={(event, editor) => {\r\n                                                        console.log('Blur.', editor);\r\n                                                    }}\r\n                                                    onFocus={(event, editor) => {\r\n                                                        console.log('Focus.', editor);\r\n                                                    }}\r\n                                                />\r\n                                            </div>\r\n\r\n                                            <div style={{\r\n                                                marginTop:'15px'\r\n                                            }}></div>\r\n\r\n                                            <h3 className='inputFieldLabel'>\r\n                                                BN Body\r\n                                            </h3>\r\n\r\n                                            <div style={{\r\n                                                width: '100%',\r\n                                                maxWidth: '100%'\r\n                                            }}>\r\n                                                <CKEditor\r\n                                                    editor={ClassicEditor}\r\n                                                    data={bnBody}\r\n                                                    onInit={editor => {\r\n                                                        // You can store the \"editor\" and use when it is needed.\r\n                                                        console.log('Editor is ready to use!', editor);\r\n                                                    }}\r\n                                                    onChange={(event, editor) => {\r\n                                                        const data = editor.getData();\r\n                                                        setBnBody(data);\r\n                                                    }}\r\n                                                    onBlur={(event, editor) => {\r\n                                                        console.log('Blur.', editor);\r\n                                                    }}\r\n                                                    onFocus={(event, editor) => {\r\n                                                        console.log('Focus.', editor);\r\n                                                    }}\r\n                                                />\r\n                                            </div>\r\n\r\n                                            {/* <div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\tdisplay: 'flex',\r\n\t\t\t\t\t\t\t\t\t\t\t\tjustifyContent: 'space-between'\r\n\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\twidth: '48%',\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<DatePicker\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabel='Date'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={handleDateChange} />\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\twidth: '48%'\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<DatePicker\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tdate={date}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\twithTime={true}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder='Select time'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabel='Time'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={handleTimeChange} />\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t</div> */}\r\n                                            <div style={{\r\n                                                marginBottom: '15px'\r\n                                            }}></div>\r\n                                            {/* \r\n\t\t\t\t\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\t\t\t\t\trows={1}\r\n\t\t\t\t\t\t\t\t\t\t\t\tlabel='Venue'\r\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.venue}\r\n\t\t\t\t\t\t\t\t\t\t\t\tname='venue'\r\n\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.venue && errors.venue) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['venue'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.venue && errors.venue) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['venue'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('venue');\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\t\tlabel='Purchase Limit'\r\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.purchaseLimit}\r\n\t\t\t\t\t\t\t\t\t\t\t\ttype='number'\r\n\t\t\t\t\t\t\t\t\t\t\t\tname='purchaseLimit'\r\n\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.purchaseLimit && errors.purchaseLimit) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['purchaseLimit'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.purchaseLimit && errors.purchaseLimit) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['purchaseLimit'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('purchaseLimit');\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t/> */}\r\n\r\n                                      \r\n\r\n\r\n\r\n                                  \r\n\r\n                                        </div>\r\n\r\n\r\n\r\n                                    </div>\r\n\r\n                                    <div className='addProductGridContainer__price'>\r\n                                        <div className='addProductGridContainer__item-header'>\r\n                                            <h3>\r\n                                                Products\r\n\t\t                                    </h3>\r\n\r\n                                            <div className={pricing && pricing.length > 0 ? 'checkicon-active' : 'checkicon'}>\r\n                                                <CheckCircleOutlined />\r\n                                            </div>\r\n                                        </div>\r\n\r\n\r\n                                        <div className='addProductGridContainer__item-body'>\r\n\r\n                                            <h3 className='inputFieldLabel'>\r\n                                                Products\r\n                                            </h3>\r\n                                            <SelectProducts\r\n                                                setProductIds={setProductIds}\r\n                                                productIds={productIds}\r\n                                            />\r\n\r\n                                            <div style={{\r\n                                                marginTop: \"15px\"\r\n                                            }}></div>\r\n\r\n                                            <h3 className='inputFieldLabel'>\r\n                                                Selcted Products\r\n                                            </h3>\r\n\r\n                                            <SelectedProductItems\r\n                                                productList={productList}\r\n                                                setProductList={setProductList}\r\n                                            />\r\n                                        </div>\r\n                                    </div>\r\n\r\n\r\n\r\n\r\n                                    <div className='addProductGridContainer__image'>\r\n\r\n                                        <div className='addProductGridContainer__item-header'>\r\n                                            <h3>\r\n                                                Image\r\n</h3>\r\n\r\n                                            <Tooltip\r\n                                                placement=\"left\" title={'Click on the image to select cover image, By default 1st image is selected as cover'}>\r\n                                                <a href='###'>\r\n                                                    <InfoCircleOutlined />\r\n                                                </a>\r\n                                            </Tooltip>\r\n                                        </div>\r\n                                        <div className='addProductGridContainer__item-body'>\r\n\r\n\r\n\r\n                                            <div className='aboutToUploadImagesContainer'>\r\n                                                {myImages &&\r\n                                                    // @ts-ignore\r\n                                                    myImages.length > 0 && myImages.map((image, index) => {\r\n                                                        return (\r\n                                                            <div className='aboutToUploadImagesContainer__item'>\r\n                                                                <div\r\n                                                                    className='aboutToUploadImagesContainer__item-imgContainer'\r\n                                                                    onClick={() => setCoverImageId(image.id)}\r\n                                                                >\r\n                                                                    <img src={image.cover} alt={image.alt} />\r\n                                                                </div>\r\n\r\n                                                                <span\r\n                                                                    onClick={() => handleImagesDelete(image.id)}\r\n                                                                    className='aboutToUploadImagesContainer__item-remove'>\r\n                                                                    <CloseOutlined />\r\n                                                                </span>\r\n\r\n\r\n                                                                {coverImageId === image.id ? (\r\n                                                                    <span className='aboutToUploadImagesContainer__item-cover'>\r\n                                                                        <CheckOutlined />\r\n                                                                    </span>\r\n                                                                ) : !coverImageId && index === 0 && (\r\n                                                                    <span className='aboutToUploadImagesContainer__item-cover'>\r\n                                                                        <CheckOutlined />\r\n                                                                    </span>\r\n                                                                )}\r\n                                                            </div>\r\n                                                        )\r\n                                                    })}\r\n\r\n\r\n                                                <Tooltip\r\n                                                    title={'Attach images'}>\r\n\r\n                                                    <div\r\n                                                        onClick={() => {\r\n                                                            setvisible(true);\r\n                                                            setisModalOpenForImages(true);\r\n                                                            setisModalOpenForThumbnail(false);\r\n                                                        }}\r\n                                                        className='aboutToUploadImagesContainer__uploadItem'>\r\n                                                        {/* <FileAddOutlined />\r\n                                                        <FileImageTwoTone />\r\n                                                        <FileImageOutlined /> */}\r\n                                                        <FileImageFilled />\r\n                                                        {/* <h5>\r\n                                                                        Select From Library\r\n                                                                <     /h5> */}\r\n                                                        <span className='aboutToUploadImagesContainer__uploadItem-plus'>\r\n                                                            <PlusOutlined />\r\n                                                        </span>\r\n                                                    </div>\r\n                                                </Tooltip>\r\n\r\n\r\n\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n\r\n\r\n\r\n\r\n                                    <div className='addProductGridContainer__image'>\r\n\r\n<div className='addProductGridContainer__item-header'>\r\n    <h3>\r\n    Meta Data\r\n</h3>\r\n\r\n    <Tooltip\r\n        placement=\"left\" title={\"Meta data will be used to make the user's easy and for search engine optimization.\"}>\r\n        <a href='###'>\r\n            <InfoCircleOutlined />\r\n        </a>\r\n    </Tooltip>\r\n</div>\r\n<div className='addProductGridContainer__item-body'>\r\n\r\n                \r\n<Input\r\nlabel='Meta title'\r\nvalue={values.metaTitle}\r\nplaceHolder={'category...'}\r\nname='metaTitle'\r\nisError={(touched.metaTitle && errors.metaTitle) ||\r\n(!isSubmitting && addProductState.error['error']['metaTitle'])}\r\n\r\nerrorString={(touched.metaTitle && errors.metaTitle) ||\r\n(!isSubmitting && addProductState.error['error']['metaTitle'])}\r\nonChange={(e: any) => {\r\nhandleChange(e);\r\nsetFieldTouched('metaTitle')\r\n}}\r\n/>\r\n\r\n<Input\r\nlabel='BN Meta title'\r\nvalue={values.bnMetaTitle}\r\nplaceHolder={'ক্যাটাগড়ি...'}\r\nname='bnMetaTitle'\r\nisError={(touched.bnMetaTitle && errors.bnMetaTitle) ||\r\n(!isSubmitting && addProductState.error['error']['bnMetaTitle'])}\r\n\r\nerrorString={(touched.bnMetaTitle && errors.bnMetaTitle) ||\r\n(!isSubmitting && addProductState.error['error']['bnMetaTitle'])}\r\nonChange={(e: any) => {\r\nhandleChange(e);\r\nsetFieldTouched('bnMetaTitle');\r\n}}\r\n/>\r\n\r\n<TextArea\r\nlabel='Meta description'\r\nvalue={values.metaDescription}\r\nplaceholder={'meta...'}\r\nname='metaDescription'\r\nisError={(touched.metaDescription && errors.metaDescription) ||\r\n(!isSubmitting && addProductState.error['error']['metaDescription'])}\r\n\r\nerrorString={(touched.metaDescription && errors.metaDescription) ||\r\n(!isSubmitting && addProductState.error['error']['metaDescription'])}\r\nonChange={(e: any) => {\r\nhandleChange(e);\r\nsetFieldTouched('metaDescription');\r\n}}\r\n/>\r\n\r\n<TextArea\r\nlabel='BN Meta Description'\r\nvalue={values.bnMetaDescription}\r\nplaceholder={'এইয় মেট...'}\r\nname='bnMetaDescription'\r\nisError={(touched.bnMetaDescription && errors.bnMetaDescription) ||\r\n(!isSubmitting && addProductState.error['error']['bnMetaDescription'])}\r\n\r\nerrorString={(touched.bnMetaDescription && errors.bnMetaDescription) ||\r\n(!isSubmitting && addProductState.error['error']['bnMetaDescription'])}\r\nonChange={(e: any) => {\r\nhandleChange(e);\r\nsetFieldTouched('bnMetaDescription');\r\n}}\r\n/>\r\n\r\n<h3 className='inputFieldLabel'>\r\nMeta Tags (grocery,fashion)\r\n</h3>\r\n\r\n<MetaTags\r\n// @ts-ignore\r\nsetTags={setMetaTags}\r\ntags={metaTags}\r\n/>\r\n\r\n<div style={{\r\nmarginTop:'15px'\r\n}}></div>\r\n\r\n<h3 className='inputFieldLabel'>\r\nBN Meta Tags (মুদিখানা,ফ্যাশন)\r\n</h3>\r\n\r\n<MetaTags\r\n// @ts-ignore\r\nsetTags={setBnMetaTags}\r\ntags={metaTags}\r\n/>\r\n\r\n\r\n</div>\r\n</div>\r\n\r\n                                </div>\r\n                                <div className='addProductGridContainer__right'>\r\n                                    <div className='addProductGridContainer__category'>\r\n\r\n                                        <div className='addProductGridContainer-rightItemContainer'>\r\n                                            <div className='addProductGridContainer-rightItemContainer-header'>\r\n                                                <h3>\r\n                                                    Recipe Categories\r\n\t\t\t\t                                </h3>\r\n\r\n                                                <Tooltip\r\n                                                    color='red'\r\n                                                    visible={addProductState.error['error']['category'] && !(categoryids.length > 0)}\r\n                                                    placement=\"left\" title={'Select at least one category'}>\r\n                                                    <div className={!(categoryids.length > 0)\r\n                                                        && !addProductState.error['error']['category'] ? 'checkicon' : addProductState.error['error']['category'] ? 'checkicon-error' : 'checkicon-active'}>\r\n                                                        <CheckCircleOutlined />\r\n                                                    </div>\r\n                                                </Tooltip>\r\n\r\n                                            </div>\r\n                                            <div className='addProductGridContainer-rightItemContainer-body'>\r\n                                                <Categories\r\n                                                    setCategoryOptions={setCategoryOptions}\r\n                                                    categoryOptions={categoryOptions}\r\n                                                    setcategoryIds={setcategoryIds} />\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                    </div>\r\n\r\n                                    <div className='addProductGridContainer__tag'>\r\n                                        <div className='addProductGridContainer-rightItemContainer'>\r\n                                            <div className='addProductGridContainer-rightItemContainer-header'>\r\n                                                <h3>\r\n                                                Recipe Tags\r\n\t\t\t\t</h3>\r\n                                            </div>\r\n                                            <div className='addProductGridContainer-rightItemContainer-body'>\r\n                                                <Tags\r\n                                                    setSelectedTags={setSelectedTags}\r\n                                                    selectedTags={selectedTags}\r\n                                                    setTagIds={setTagIds} />\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </section>\r\n\r\n\r\n                        </Modal>\r\n\r\n                        <MediaLibrary\r\n                            setvisible={setvisible}\r\n                            visible={visible}\r\n                            setmyImages={setmyImages}\r\n                            myImages={myImages}\r\n                            setmyThumbnailImage={setmyThumbnailImage}\r\n                            isModalOpenForThumbnail={isModalOpenForThumbnail}\r\n                            isModalOpenForImages={isModalOpenForImages}\r\n\r\n                        />\r\n                    </>\r\n                )}\r\n        </Formik>\r\n\r\n\r\n\r\n\r\n    );\r\n};\r\n\r\nexport default AddNewProduct;\r\n\r\n\r\n\r\n\r\n/*\r\n\r\n\r\nProduct variation ---->\r\n\r\nPrice [title]\r\n\t[regular input field] [offer inputfield]\r\n\r\nStock [title]\r\n\t[available input field] [minimum inputfield]\r\n\r\ndefault [default can be set to true]\r\n\r\nattributes [title]\r\n\t[add attributes name]\r\n\t\t[add attrubutes value]\r\n\r\n\t[add attributes name]\r\n\t\t[add attrubutes value\r\n\r\n*///","import React, { useState, useEffect } from 'react';\r\n\r\n// import third party ui lib\r\nimport { Empty, Popconfirm, Upload, message, Switch, Select, Button, notification, Table, Space, Input as CoolInput, Tooltip, Modal } from 'antd';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { useHistory } from 'react-router';\r\nimport Moment from 'react-moment';\r\n\r\n\r\n\r\nimport {\r\n    FileOutlined,\r\n    InboxOutlined,\r\n    RadiusUpleftOutlined,\r\n    RadiusUprightOutlined,\r\n    RadiusBottomleftOutlined,\r\n    RadiusBottomrightOutlined,\r\n    PlusOutlined,\r\n    DeleteOutlined,\r\n    EditOutlined,\r\n    CheckCircleOutlined\r\n} from '@ant-design/icons';\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n\r\n\r\n/// import hooks\r\nimport { useFetch, useHandleFetch } from \"../../hooks\";\r\n\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport { DataTableSkeleton } from \"../../components/Placeholders\";\r\nimport ProductBundleQuickEdit from \"./PostQuickEdit\"\r\nimport AddNewProductBundle from \"./AddNewPost\"\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Recipe Created',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n    notification.error({\r\n        message: message || 'Something Went Wrong',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n    });\r\n};\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    name: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\n\r\nconst initialValues = {\r\n    name: '',\r\n    description: ''\r\n}\r\n\r\n\r\nconst { Column, ColumnGroup } = Table;\r\nconst { Search } = CoolInput;\r\n\r\n\r\n\r\nconst MyTable = ({ data, setTagList }) => {\r\n    const [visible, setvisible] = useState(false);\r\n    const [activeCategoryForEdit, setactiveCategoryForEdit] = useState(false);\r\n    const [deleteTagState, handleDeleteTagFetch] = useHandleFetch({}, 'deletePost');\r\n\r\n    const history = useHistory();\r\n\r\n\r\n    const handleDeleteTag = async (id) => {\r\n        const deleteTagRes = await handleDeleteTagFetch({\r\n            urlOptions: {\r\n                placeHolders: {\r\n                    id,\r\n                }\r\n            }\r\n        });\r\n\r\n\r\n\r\n        // @ts-ignore\r\n        if (deleteTagRes && deleteTagRes.status === 'ok') {\r\n            openSuccessNotification('Deleted Recipe');\r\n            const newtagList = data.filter(item => item.id !== id);\r\n            setTagList(newtagList);\r\n        }\r\n\r\n\r\n    }\r\n\r\n\r\n    const handleOk = (e: any) => {\r\n        setvisible(false);\r\n\r\n    };\r\n\r\n    const handleCancel = (e: any) => {\r\n        setvisible(false);\r\n    };\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <Table\r\n                // expandable={{\r\n                //     expandedRowRender: record => <p style={{ margin: 0 }}>{record.name}</p>,\r\n                //     rowExpandable: record => record.name !== 'Not Expandable',\r\n                //   }}\r\n                // bordered={true}\r\n                size='small'\r\n                // pagination={false}\r\n                dataSource={data}\r\n            >\r\n\r\n                <Column\r\n                    title=\"\"\r\n                    dataIndex=\"cover\"\r\n                    key=\"id\"\r\n                    width={'80px'}\r\n\r\n                    className='classnameofthecolumn'\r\n\r\n                    render={(cover, record: any) => (\r\n                        <>\r\n                            <img\r\n                                onClick={() => {\r\n                                    history.push(`/admin/posts/${record.id}`)\r\n                                    setactiveCategoryForEdit(record)\r\n                                }}\r\n                                src={cover} alt='cover img' style={{\r\n                                    height: '40px',\r\n                                    width: '40px',\r\n                                    objectFit: \"contain\",\r\n                                    borderRadius: '3px',\r\n                                    cursor: 'pointer'\r\n                                }} />\r\n                        </>\r\n                    )}\r\n                />\r\n\r\n                <Column\r\n                    title=\"Name\"\r\n                    dataIndex=\"name\"\r\n                    key=\"id\"\r\n                    className='classnameofthecolumn'\r\n                    render={(text, record: any) => (\r\n                        <>\r\n\r\n                            <h4\r\n                                onClick={() => {\r\n                                    history.push(`/admin/posts/${record.id}`)\r\n                                    // setBrandDetailVisible(true);\r\n                                    setactiveCategoryForEdit(record)\r\n                                }}\r\n                                style={{\r\n                                    fontWeight: 400,\r\n                                    color: '#555',\r\n                                    cursor: 'pointer'\r\n                                }}>\r\n                                {text}\r\n                            </h4>\r\n\r\n\r\n                        </>\r\n                    )}\r\n                />\r\n\r\n\r\n\r\n                <Column\r\n                    title=\"Preparation Time\"\r\n                    dataIndex=\"preparationTime\"\r\n                    key=\"id\"\r\n                    className='classnameofthecolumn'\r\n\r\n                />\r\n\r\n\r\n                <Column\r\n                    title=\"Cooking Time\"\r\n                    dataIndex=\"cookingTime\"\r\n                    key=\"id\"\r\n                    className='classnameofthecolumn'\r\n                />\r\n\r\n                \r\n                <Column\r\n                    title=\"People\"\r\n                    dataIndex=\"servingSize\"\r\n                    key=\"id\"\r\n                    className='classnameofthecolumn'\r\n                />\r\n\r\n\r\n            \r\n    \r\n                 <Column\r\n                    className='classnameofthecolumn'\r\n                    title=\"\"\r\n                    key=\"action\"\r\n                    align='right'\r\n                    render={(text, record: any) => (\r\n                        <Space size=\"middle\">\r\n                            <a href='##'>\r\n                                <Tooltip placement=\"top\" title='Edit recipe'>\r\n                                    <span className='iconSize' onClick={() => {\r\n                                        setvisible(true)\r\n                                        setactiveCategoryForEdit(record);\r\n                                    }}>\r\n                                        <EditOutlined />\r\n                                    </span>\r\n                                </Tooltip>\r\n                            </a>\r\n\r\n\r\n\r\n                            <Popconfirm\r\n                                onConfirm={() => handleDeleteTag(record.id)}\r\n                                title=\"Are you sure？\" okText=\"Yes\" cancelText=\"No\">\r\n                                <span\r\n                                    className='iconSize iconSize-danger'\r\n                                >\r\n                                    <DeleteOutlined />\r\n                                </span>\r\n                            </Popconfirm>\r\n                        </Space>\r\n                    )}\r\n                />\r\n            </Table>\r\n\r\n\r\n\r\n\r\n\r\n\r\n            {activeCategoryForEdit && <ProductBundleQuickEdit\r\n\r\n                 productList={data}\r\n                 setProductList={setTagList}\r\n                setAddNewCategoryVisible={setvisible}\r\n                addNewCategoryVisible={visible}\r\n                productDetailData={activeCategoryForEdit}\r\n                 />}\r\n        </>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\ninterface Props { }\r\n\r\nconst TagList = ({ }: Props) => {\r\n\r\n\r\n    const [tagList, setTagList] = useState([]);\r\n\r\n    const [tagState, handleTagListFetch] = useHandleFetch({}, 'postList');\r\n\r\n\r\n\r\n    console.log('postListData',tagState);\r\n\r\n\r\n    useEffect(() => {\r\n        const setTags = async () => {\r\n            const tags = await handleTagListFetch({\r\n                urlOptions:{\r\n\t\t\t\t\tparams: {\r\n\t\t\t\t\t  sortItem: 'added',\r\n\t\t\t\t\t  sortOrderValue: '-1'\r\n\t\t\t\t\t}\r\n\t\t\t\t  }\r\n            });\r\n            // @ts-ignore\r\n            setTagList(tags);\r\n        }\r\n        setTags();\r\n    }, [])\r\n\r\n\r\n\r\n    const [addNewCategoryVisible, setAddNewCategoryVisible] = useState(false);\r\n\r\n    const getisSubmitButtonDisabled = (values, isValid) => {\r\n        if (!values.name || !isValid) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n\r\n    const handleOkAddNewCategory = (e: any) => {\r\n        setAddNewCategoryVisible(false);\r\n\r\n    };\r\n\r\n    const handleCancelAddNewCategory = (e: any) => {\r\n        setAddNewCategoryVisible(false);\r\n    };\r\n\r\n    const handleSearch = (value) => {\r\n        if (tagState.data.length > 0) {\r\n            const newTagList = tagState.data.filter(item => item.name.toLowerCase().includes(value.toLowerCase()));\r\n            setTagList(newTagList);\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className='categoryListContainer'>\r\n                <div className='categoryListContainer__header'>\r\n                    <div className='categoryListContainer__header-searchBar-tag'>\r\n                        <h2 className='categoryListContainer__header-title'>\r\n                        Recipes\r\n                       </h2>\r\n                        <Search\r\n                            enterButton={false}\r\n                            className='searchbarClassName'\r\n                            placeholder=\"search recipes..\"\r\n                            onSearch={value => handleSearch(value)}\r\n                        />\r\n                    </div>\r\n                    <Button\r\n                        // type=\"primary\"\r\n                        className='btnPrimaryClassNameoutline'\r\n                        icon={<PlusOutlined />}\r\n                        onClick={() => setAddNewCategoryVisible(true)}\r\n                    >\r\n                        Add New\r\n\t\t\t\t\t</Button>\r\n                </div>\r\n                <div className='categoryListContainer__categoryList'>\r\n                    {tagState.done && tagList.length > 0 && <MyTable\r\n                        setTagList={setTagList}\r\n                        data={tagList} />}\r\n                    {tagState.isLoading && <DataTableSkeleton />}\r\n\r\n\r\n                    {tagState.done && !(tagList.length > 0) && (\r\n                        <div style={{\r\n                            marginTop: '200px'\r\n                        }}>\r\n                            <Empty description='No Recipe found' image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            </div>\r\n\r\n            <AddNewProductBundle\r\n                productList={tagList}\r\n                setProductList={setTagList}\r\n                addNewCategoryVisible={addNewCategoryVisible}\r\n                setAddNewCategoryVisible={setAddNewCategoryVisible}\r\n\r\n            />\r\n        </>\r\n    );\r\n};\r\n\r\nexport default TagList;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useParams, useHistory } from \"react-router\";\r\n\r\n\r\n// import hooks\r\nimport { useHandleFetch } from \"../../hooks\";\r\n\r\n// import lib\r\nimport {\r\n    EditOutlined,\r\n    DeleteOutlined\r\n} from '@ant-design/icons';\r\n\r\nimport { Skeleton, Empty, Button, notification, Table, Space, Input as CoolInput, Tooltip, Modal, Badge } from 'antd';\r\n\r\n\r\n// import moment\r\nimport Moment from \"react-moment\";\r\n\r\n// import components\r\nimport { DataTableSkeleton } from \"../../components/Placeholders\";\r\nimport ProductBundleEdit from \"./PostEdit\";\r\nimport CouponProducts from \"../coupon/CouponProducts\";\r\n\r\n\r\nconst { Column, ColumnGroup } = Table;\r\nconst { Search } = CoolInput;\r\n\r\n\r\ninterface Props {\r\n    productRecord?: any;\r\n}\r\n\r\nconst NewBrandDetail = (props: Props) => {\r\n    const [productDetailState, handleProductDetailFetch] = useHandleFetch({}, 'postDetail');\r\n\r\n    const params = useParams();\r\n    const history = useHistory();\r\n    const productId = params['id'];\r\n\r\n    const [productEditVisible, setProductEditVisible] = useState(false);\r\n\r\n\r\n    useEffect(() => {\r\n        const getProductDetail = async () => {\r\n            console.log('fuckit')\r\n            await handleProductDetailFetch({\r\n                urlOptions: {\r\n                    params: {\r\n                        categoryOne: 1,\r\n                        tagsOne: 1\r\n                    },\r\n                    placeHolders: {\r\n                        id: productId,\r\n                    }\r\n                }\r\n            })\r\n        };\r\n\r\n        getProductDetail();\r\n\r\n    }, [productId]);\r\n\r\n\r\n    \r\n\r\n    console.log('productDetailState', productDetailState);\r\n\r\n    console.log('brandParams', params);\r\n\r\n    const getImagesInCollumn = (imgs) => {\r\n        if (!imgs[0]) return false;\r\n        imgs = imgs.map(item => item.cover);\r\n        const columns = {};\r\n\r\n        let localIndex = 0;\r\n        let columnNumber = 0;\r\n\r\n\r\n        imgs.forEach((item, index) => {\r\n            if (localIndex < 3) {\r\n                if (columns[columnNumber]) {\r\n                    columns[columnNumber] = [...columns[columnNumber], item]\r\n                }\r\n                else columns[columnNumber] = [item];\r\n\r\n                localIndex = localIndex + 1;\r\n                columnNumber = columnNumber + 1;\r\n\r\n            }\r\n            else {\r\n                localIndex = 0;\r\n                columnNumber = 0;\r\n                console.log('localIndex', localIndex)\r\n            }\r\n        });\r\n\r\n        return columns;\r\n    }\r\n\r\n\r\n    const row = productDetailState.done && productDetailState.data && productDetailState.data['image'] ? getImagesInCollumn(productDetailState.data['image']) : [];\r\n\r\n\r\n    console.log('bundleDetail', productDetailState);\r\n    return (\r\n        <div className='brandDetailContainer'>\r\n\r\n            <div className='brandDetailContainer__heading'>\r\n                <h3>\r\n                    Recipe Detail\r\n                </h3>\r\n\r\n                {productDetailState.done && productDetailState.data && (Object.keys(productDetailState.data).length > 0) && (\r\n                    <>\r\n                        {/* <ProductBundleEdit\r\n                            productEditVisible={productEditVisible}\r\n                            setProductEditVisible={setProductEditVisible}\r\n                            productDetailData={productDetailState.data}\r\n                        /> */}\r\n                        {/* <Button\r\n                            onClick={() => setProductEditVisible(true)}\r\n                            type='link'\r\n                            icon={<EditOutlined />}\r\n                        >\r\n                            Edit\r\n                      </Button> */}\r\n                    </>\r\n                )}\r\n\r\n            </div>\r\n            <Skeleton\r\n                avatar paragraph={{ rows: 3 }}\r\n                loading={productDetailState.isLoading}>\r\n                {productDetailState.done && productDetailState.data && !(Object.keys(productDetailState.data).length > 0) && (\r\n                    <Empty description='No Recipe found' image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n                )}\r\n\r\n                {productDetailState.done && productDetailState.data && (Object.keys(productDetailState.data).length > 0) && (\r\n                    <>\r\n                        <div className='brandDetailContainer__header'>\r\n                            <div className='brandDetailContainer__header-coverContainer brandDetailContainer__header-coverContainer-product'>\r\n                                <img src={productDetailState.data['cover'] && productDetailState.data['cover']} alt=\"\" />\r\n                            </div>\r\n                            <div className='brandDetailContainer__header-info'>\r\n                                <h2>\r\n                                    {productDetailState.data['name']}\r\n                                </h2>\r\n                                <h4>\r\n                                    {productDetailState.data['price']}\r\n                                </h4>\r\n                                <h3>\r\n                                    {productDetailState.data['description']}\r\n                                </h3>\r\n\r\n                                {productDetailState.data['startDate'] && (\r\n                                    <h3>\r\n                                        START DATE:\r\n                                        <span>\r\n                                            {productDetailState.data['url']}\r\n                                        </span>\r\n\r\n                                    </h3>\r\n                                )}\r\n\r\n                                {productDetailState.data['endDate'] && (\r\n                                    <h3>\r\n                                        END DATE:\r\n                                        <span>\r\n                                            {productDetailState.data['url']}\r\n                                        </span>\r\n\r\n                                    </h3>\r\n                                )}\r\n\r\n\r\n\r\n                                {productDetailState.data['url'] && (\r\n                                    <h3>\r\n                                        URL:\r\n                                        <span>\r\n                                            {productDetailState.data['url']}\r\n                                        </span>\r\n\r\n                                    </h3>\r\n                                )}\r\n                                {/* \r\n                                {productDetailState.data['tags'] && productDetailState.data['tags'].length > 0 &&\r\n                                    (<>\r\n                                        <h3>\r\n                                            TAGS:\r\n                                        {productDetailState.data['tags'].map(tag => {\r\n                                            return (\r\n                                                <span>\r\n                                                    {tag.name}\r\n                                                </span>\r\n                                            )\r\n                                        })}\r\n                                        </h3>\r\n\r\n                                    </>)\r\n                                } */}\r\n\r\n                                {productDetailState.data['category'] && productDetailState.data['category'].length > 0 &&\r\n                                    (<>\r\n                                        <h3>\r\n                                            CATEGORIES:\r\n                                        {productDetailState.data['category'].map(cat => {\r\n                                            return (\r\n                                                <span\r\n                                                    onClick={() => history.push(`/admin/posts/category/${cat.id}`)}\r\n\r\n                                                >\r\n                                                    {cat.name}\r\n                                                </span>\r\n                                            )\r\n                                        })}\r\n                                        </h3>\r\n                                    </>)\r\n                                }\r\n                            </div>\r\n                        </div>\r\n\r\n\r\n                        {productDetailState.data['icon'] && (\r\n                            <>\r\n                                <div className='brandDetailContainer__heading'>\r\n                                    <h3>\r\n                                        Icon\r\n                            </h3>\r\n                                </div>\r\n\r\n                                <div className='brandDetailContainer__inlineBox'>\r\n                                    <div className='brandDetailContainer__header-coverContainer brandDetailContainer__header-coverContainer-icon'>\r\n                                        <img src={productDetailState.data['icon'] && productDetailState.data['icon']} alt=\"\" />\r\n                                    </div>\r\n\r\n                                </div>\r\n\r\n                                <div style={{\r\n                                    marginBottom: \"25px\"\r\n                                }}></div>\r\n                            </>\r\n                        )}\r\n\r\n\r\n\r\n                        {productDetailState.done && productDetailState.data && Object.keys(productDetailState.data).length > 0 && productDetailState.data['products'] && (\r\n                            <div className='brandDetailContainer__heading'>\r\n                                <h3>\r\n                                    Products\r\n                               </h3>\r\n                            </div>\r\n                        )\r\n                        }\r\n\r\n\r\n                        <div className='brandDetailContainer__body'>\r\n                            {productDetailState.done && productDetailState.data && productDetailState.data['products'] && !(productDetailState.data['products'].length > 0) && (\r\n                                <div style={{\r\n                                    marginTop: '100px'\r\n                                }}>\r\n                                    <Empty description='No Products exists for this Recipe' image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n                                </div>\r\n                            )}\r\n\r\n                            {productDetailState.done && productDetailState.data && Object.keys(productDetailState.data).length > 0 && (\r\n                                <>\r\n                                    {productDetailState.data['products'] && productDetailState.data['products'].length > 0 &&\r\n                                        productDetailState.data['products'].map(product => {\r\n                                            return (\r\n                                                <CouponProducts\r\n                                                    quantity={product.quantity}\r\n                                                    productId={product['_id']} />\r\n                                            )\r\n                                        })}\r\n                                </>\r\n                            )}\r\n                        </div>\r\n\r\n                        {productDetailState.data['image'] && productDetailState.data['image'].length > 0 && (\r\n                            <>\r\n                                <div className='brandDetailContainer__heading'>\r\n                                    <h3>\r\n                                        Image Gallary\r\n                                   </h3>\r\n                                </div>\r\n\r\n                                <div className='brandDetailContainer__imageGallary'>\r\n                                    <div className='imgGallaryContainer'>\r\n\r\n                                        <div className=\"imgGallary-row\">\r\n                                            {row && Object.keys(row).map(column => {\r\n                                                return (\r\n                                                    <div className=\"imgGallary-column\">\r\n                                                        {row[column] && row[column].map(img => {\r\n                                                            return <img src={img} style={{\r\n                                                                width: '100%'\r\n                                                            }} />\r\n                                                        })}\r\n\r\n                                                    </div>\r\n                                                )\r\n                                            })}\r\n\r\n\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                </div>\r\n\r\n                                <div style={{\r\n                                    marginBottom: \"25px\"\r\n                                }}></div>\r\n                            </>\r\n                        )}\r\n\r\n                        {productDetailState.data['brand'] && Object.keys(productDetailState.data['brand']).length > 0 && (\r\n                            <>\r\n                                <div className='brandDetailContainer__heading'>\r\n                                    <h3>\r\n                                        Brand\r\n                                   </h3>\r\n                                </div>\r\n\r\n                                <div\r\n                                    onClick={() => history.push(`/admin/brand/${productDetailState.data['brand']['id']}`)}\r\n\r\n                                    className='brandDetailContainer__brand'>\r\n                                    <div className='brandDetailContainer__brand-coverbox'>\r\n                                        <img src={productDetailState.data['brand']['cover'] && productDetailState.data['brand']['cover']} alt=\"\" />\r\n                                    </div>\r\n                                    <div className='brandDetailContainer__brand-info'>\r\n                                        <h2>\r\n                                            {productDetailState.data['brand']['name']}\r\n                                        </h2>\r\n                                        <h3>\r\n                                            {productDetailState.data['brand']['description']}\r\n                                        </h3>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div style={{\r\n                                    marginBottom: \"25px\"\r\n                                }}></div>\r\n                            </>\r\n                        )}\r\n\r\n\r\n                        {productDetailState.data['primaryCategory'] && Object.keys(productDetailState.data['primaryCategory']).length > 0 && (\r\n                            <>\r\n                                <div className='brandDetailContainer__heading'>\r\n                                    <h3>\r\n                                        Primary Category\r\n                                   </h3>\r\n                                </div>\r\n\r\n                                <div\r\n                                    onClick={() => history.push(`/admin/category/${productDetailState.data['primaryCategory']['id']}`)}\r\n                                    className='brandDetailContainer__brand'>\r\n                                    <div className='brandDetailContainer__brand-coverbox'>\r\n                                        <img src={productDetailState.data['primaryCategory']['cover'] && productDetailState.data['primaryCategory']['cover']} alt=\"\" />\r\n                                    </div>\r\n                                    <div className='brandDetailContainer__brand-info'>\r\n                                        <h2>\r\n                                            {productDetailState.data['primaryCategory']['name']}\r\n                                        </h2>\r\n                                        <h3>\r\n                                            {productDetailState.data['primaryCategory']['description']}\r\n                                        </h3>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div style={{\r\n                                    marginBottom: \"25px\"\r\n                                }}></div>\r\n                            </>\r\n                        )}\r\n\r\n                    </>\r\n                )}\r\n\r\n            </Skeleton>\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NewBrandDetail\r\n","import React, { useState } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n\r\nimport { useHandleFetch } from '../../../hooks';\r\n// import third party ui lib\r\nimport { Upload, message, Switch, Select, Button, notification, Modal, Tooltip } from 'antd';\r\n\r\nimport {\r\n    FileOutlined,\r\n    InboxOutlined,\r\n    FileAddOutlined,\r\n    DeleteOutlined,\r\n    CheckCircleOutlined,\r\n    CloseOutlined,\r\n    CheckOutlined,\r\n    InfoCircleOutlined,\r\n    PlusOutlined,\r\n    FileImageFilled\r\n} from '@ant-design/icons';\r\n\r\n\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../../components/Field/Input';\r\nimport TextArea from '../../../components/Field/TextArea';\r\nimport MediaLibrary from \"../../../components/MediaLibrary\";\r\nimport MetaTags from \"../../../pages/category/MetaTags\";\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    name: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Recipe Tag Updated',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n    notification.error({\r\n        message: message || 'Something Went Wrong',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst initialValues = {\r\n    name: '',\r\n\tbnName: '',\r\n\tdescription: '',\r\n\tbnDescription: '',\r\n\tmetaTitle: '',\r\n\tbnMetaTitle: '',\r\n\tmetaDescription: '',\r\n\tbnMetaDescription: '',\r\n\tmetaTags: '',\r\n\tbnMetaTags: '',\r\n}\r\n\r\n\r\n\r\ninterface Props {\r\n    addNewCategoryVisible?: any;\r\n    setAddNewCategoryVisible?: any;\r\n    tagDetailData?: any;\r\n\ttagList?:any; \r\n\tsetTagList?: any; \r\n\r\n}\r\n\r\nconst AddNewBrand = ({ addNewCategoryVisible, \r\n    setAddNewCategoryVisible, tagDetailData, setTagList,tagList }: Props) => {\r\n\r\n    const [addTagState, handleAddTagFetch] = useHandleFetch({}, 'postAddTag');\r\n    const [myImages, setmyImages] = useState(false);\r\n    const [visibleMedia, setvisibleMedia] = useState(false);\r\n    const [tags,setTags] = useState([]);\r\n\tconst [bnTags,setBnTags] = useState([]);\r\n\r\n    const handleSubmit = async (values: any, actions: any) => {\r\n        const addTagRes = await handleAddTagFetch({\r\n            urlOptions: {\r\n                placeHolders: {\r\n                    id: values.id,\r\n                }\r\n            },\r\n            body: {\r\n                name: values.name.trim(),\r\n                description: values.description,\r\n                metaTitle: values.metaTitle,\r\n                metaDescription: values.metaDescription,\r\n                metaTags: tags.join(','),\r\n\r\n\r\n                \r\n                bn: {\r\n\t\t\t\t\tmetaTitle: values.bnMetaTitle,\r\n\t\t\t\t\tmetaDescription: values.bnMetaDescription,\r\n\t\t\t\t\tmetaTags: bnTags.join(','),\r\n\t\t\t\t\tname: values.bnName.trim(),\r\n\t\t\t\t\tdescription: values.bnDescription,\r\n\t\t\t\t}\r\n            },\r\n        });\r\n\r\n        // @ts-ignore\r\n        if (addTagRes && addTagRes.status === 'ok') {\r\n            openSuccessNotification();\r\n          \r\n\t\t\tconst positionInTag = () => {\r\n\t\t\t\treturn tagList.map(item => item.id).indexOf(values.id);\r\n\t\t\t}\r\n\r\n\t\t\tconst index = positionInTag();\r\n\r\n\t\t\t// @ts-ignore\r\n\t\t\tconst updatedItem = Object.assign({}, tagList[index], { ...addTagRes });\r\n\t\t\tconst updateTagList = [...tagList.slice(0, index), updatedItem, ...tagList.slice(index + 1)];\r\n\t\t\tsetTagList(updateTagList);\r\n\r\n\r\n            setAddNewCategoryVisible(false);\r\n\r\n\t\t\t\r\n            actions.resetForm();\r\n        }\r\n        else {\r\n            openErrorNotification();\r\n        }\r\n\r\n\r\n        actions.setSubmitting(false);\r\n\r\n    };\r\n\r\n\r\n    const handleCancel = (e: any) => {\r\n        setAddNewCategoryVisible(false);\r\n    };\r\n\r\n\r\n    const getisSubmitButtonDisabled = (values, isValid) => {\r\n        if (!values.name || !isValid) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n\r\n\r\n\r\n    const handleImagesDelete = (id) => {\r\n        // @ts-ignore\r\n        const newImages = myImages && myImages.filter(image => {\r\n            return image.id !== id;\r\n        })\r\n\r\n        setmyImages(newImages);\r\n    }\r\n\r\n\r\n\r\n\r\n    return (\r\n        <Formik\r\n            onSubmit={(values, actions) => handleSubmit(values, actions)}\r\n            validationSchema={validationSchema}\r\n            validateOnBlur={false}\r\n            enableReinitialize={true}\r\n            initialValues={\r\n                { ...initialValues, ...tagDetailData }\r\n            }\r\n        >\r\n            {({\r\n                handleChange,\r\n                values,\r\n                handleSubmit,\r\n                errors,\r\n                isValid,\r\n                isSubmitting,\r\n                touched,\r\n                handleBlur,\r\n                setFieldTouched,\r\n                handleReset,\r\n            }) => (\r\n                    <>\r\n                        <Modal\r\n                            style={{\r\n                                top: '40px'\r\n                            }}\r\n                            title=\"Edit Tag\"\r\n                            visible={addNewCategoryVisible}\r\n                            onOk={(e: any) => handleSubmit(e)}\r\n                            onCancel={handleCancel}\r\n                            okText='Update'\r\n                            okButtonProps={{\r\n                                loading: isSubmitting,\r\n                                htmlType: \"submit\",\r\n                                disabled: getisSubmitButtonDisabled(values, isValid)\r\n                            }}\r\n                        >\r\n                  \t\t\t<Input\r\n\t\t\t\t\t\t\t\tlabel='Name'\r\n\t\t\t\t\t\t\t\tvalue={values.name}\r\n\t\t\t\t\t\t\t\tname='name'\r\n\t\t\t\t\t\t\t\tplaceHolder={'new,fresh'}\r\n\t\t\t\t\t\t\t\tisError={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addTagState.error['error']['name'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addTagState.error['error']['name'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('name');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\tlabel='BN Name'\r\n\t\t\t\t\t\t\t\tvalue={values.bnName}\r\n\t\t\t\t\t\t\t\tplaceHolder={'নতুন,ফ্রেশ'}\r\n\t\t\t\t\t\t\t\tname='bnName'\r\n\t\t\t\t\t\t\t\tisError={(touched.bnName && errors.bnName) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addTagState.error['error']['bnName'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.bnName && errors.bnName) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addTagState.error['error']['bnName'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('bnName');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\r\n\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\tlabel='Description'\r\n\t\t\t\t\t\t\t\tvalue={values.description}\r\n                                name='description'\r\n                                placeholder={'This tag...'}\r\n\t\t\t\t\t\t\t\tisError={(touched.description && errors.description) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addTagState.error['error']['description'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.description && errors.description) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addTagState.error['error']['description'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('description');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\tlabel='BN Description'\r\n\t\t\t\t\t\t\t\tvalue={values.bnDescription}\r\n\t\t\t\t\t\t\t\tplaceholder={'এই ট্যাগ...'}\r\n\t\t\t\t\t\t\t\tname='bnDescription'\r\n\t\t\t\t\t\t\t\tisError={(touched.bnDescription && errors.bnDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addTagState.error['error']['bnDescription'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.bnDescription && errors.bnDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addTagState.error['error']['bnDescription'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('bnDescription');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n                                \r\n<Input\r\n\t\t\t\t\t\t\t\tlabel='Meta title'\r\n\t\t\t\t\t\t\t\tvalue={values.metaTitle}\r\n\t\t\t\t\t\t\t\tplaceHolder={'category...'}\r\n\t\t\t\t\t\t\t\tname='metaTitle'\r\n\t\t\t\t\t\t\t\tisError={(touched.metaTitle && errors.metaTitle) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addTagState.error['error']['metaTitle'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.metaTitle && errors.metaTitle) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addTagState.error['error']['metaTitle'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('metaTitle')\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\tlabel='BN Meta title'\r\n\t\t\t\t\t\t\t\tvalue={values.bnMetaTitle}\r\n\t\t\t\t\t\t\t\tplaceHolder={'ক্যাটাগড়ি...'}\r\n\t\t\t\t\t\t\t\tname='bnMetaTitle'\r\n\t\t\t\t\t\t\t\tisError={(touched.bnMetaTitle && errors.bnMetaTitle) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addTagState.error['error']['bnMetaTitle'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.bnMetaTitle && errors.bnMetaTitle) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addTagState.error['error']['bnMetaTitle'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('bnMetaTitle');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\tlabel='Meta description'\r\n\t\t\t\t\t\t\t\tvalue={values.metaDescription}\r\n\t\t\t\t\t\t\t\tplaceholder={'meta...'}\r\n\t\t\t\t\t\t\t\tname='metaDescription'\r\n\t\t\t\t\t\t\t\tisError={(touched.metaDescription && errors.metaDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addTagState.error['error']['metaDescription'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.metaDescription && errors.metaDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addTagState.error['error']['metaDescription'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('metaDescription');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\tlabel='BN Meta Description'\r\n\t\t\t\t\t\t\t\tvalue={values.bnMetaDescription}\r\n\t\t\t\t\t\t\t\tplaceholder={'এইয় মেট...'}\r\n\t\t\t\t\t\t\t\tname='bnMetaDescription'\r\n\t\t\t\t\t\t\t\tisError={(touched.bnMetaDescription && errors.bnMetaDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addTagState.error['error']['bnMetaDescription'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.bnMetaDescription && errors.bnMetaDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addTagState.error['error']['bnMetaDescription'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('bnMetaDescription');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\tMeta Tags (grocery,fashion)\r\n\t\t\t\t\t\t\t</h3>\r\n\r\n\t\t\t\t\t\t\t<MetaTags\r\n\t\t\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\t\t\tsetTags={setTags}\r\n\t\t\t\t\t\t\ttags={tags}\r\n\t\t\t\t\t\t\t />\r\n\r\n\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\tmarginTop:'15px'\r\n\t\t\t\t\t\t\t}}></div>\r\n\r\n\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\tBN Meta Tags (মুদিখানা,ফ্যাশন)\r\n\t\t\t\t\t\t\t</h3>\r\n\r\n\t\t\t\t\t\t\t<MetaTags\r\n\t\t\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\t\t\tsetTags={setBnTags}\r\n\t\t\t\t\t\t\ttags={bnTags}\r\n\t\t\t\t\t\t\t />\r\n\r\n                        </Modal>\r\n\r\n                        <MediaLibrary\r\n                            setvisible={setvisibleMedia}\r\n                            visible={visibleMedia}\r\n                            setmyImages={setmyImages}\r\n                            myImages={myImages}\r\n                            isModalOpenForImages={true}\r\n\r\n                        />\r\n                    </>\r\n                )}\r\n        </Formik>\r\n\r\n\r\n\r\n\r\n    );\r\n};\r\n\r\nexport default AddNewBrand;\r\n","import React, { useState } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n\r\nimport { useHandleFetch } from '../../../hooks';\r\n// import third party ui lib\r\nimport { Upload, message, Switch, Select, Button, notification, Modal, Tooltip } from 'antd';\r\n\r\nimport {\r\n    FileOutlined,\r\n    InboxOutlined,\r\n    FileAddOutlined,\r\n    DeleteOutlined,\r\n    CheckCircleOutlined,\r\n    CloseOutlined,\r\n    CheckOutlined,\r\n    InfoCircleOutlined,\r\n    PlusOutlined,\r\n    FileImageFilled\r\n} from '@ant-design/icons';\r\n\r\n\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../../components/Field/Input';\r\nimport TextArea from '../../../components/Field/TextArea';\r\nimport MediaLibrary from \"../../../components/MediaLibrary\";\r\nimport MetaTags from \"../../../pages/category/MetaTags\";\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    name: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Recipe Tag Created',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n    notification.error({\r\n        message: message || 'Something Went Wrong',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst initialValues = {\r\n    name: '',\r\n\tbnName: '',\r\n\tdescription: '',\r\n\tbnDescription: '',\r\n\tmetaTitle: '',\r\n\tbnMetaTitle: '',\r\n\tmetaDescription: '',\r\n\tbnMetaDescription: '',\r\n\tmetaTags: '',\r\n\tbnMetaTags: '',\r\n}\r\n\r\n\r\n\r\ninterface Props {\r\n    addNewCategoryVisible?: any;\r\n    setAddNewCategoryVisible?: any;\r\n    tagList?: any;\r\n    setTagList?: any;\r\n\r\n}\r\n\r\nconst AddNewBrand = ({ addNewCategoryVisible, setAddNewCategoryVisible, tagList, setTagList }: Props) => {\r\n\r\n    const [addTagState, handleAddTagFetch] = useHandleFetch({}, 'postAddTag');\r\n    const [myImages, setmyImages] = useState(false);\r\n    const [visibleMedia, setvisibleMedia] = useState(false);\r\n    const [coverImageId, setCoverImageId] = useState('');\r\n    const [tags,setTags] = useState([]);\r\n\tconst [bnTags,setBnTags] = useState([]);\r\n\r\n    const handleSubmit = async (values: any, actions: any) => {\r\n        const addTagRes = await handleAddTagFetch({\r\n            urlOptions: {\r\n                placeHolders: {\r\n                    id: values.id,\r\n                }\r\n            },\r\n            body: {\r\n                name: values.name.trim(),\r\n                description: values.description,\r\n                metaTitle: values.metaTitle,\r\n                metaDescription: values.metaDescription,\r\n                metaTags: tags.join(','),\r\n\r\n\r\n                \r\n                bn: {\r\n\t\t\t\t\tmetaTitle: values.bnMetaTitle,\r\n\t\t\t\t\tmetaDescription: values.bnMetaDescription,\r\n\t\t\t\t\tmetaTags: bnTags.join(','),\r\n\t\t\t\t\tname: values.bnName.trim(),\r\n\t\t\t\t\tdescription: values.bnDescription,\r\n\t\t\t\t}\r\n            },\r\n        });\r\n\r\n        // @ts-ignore\r\n        if (addTagRes && addTagRes.status === 'ok') {\r\n            openSuccessNotification();\r\n            setAddNewCategoryVisible(false);\r\n\r\n            setTagList([...tagList, {\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\t...addTagRes,\r\n                id: addTagRes['_id'] || '',\r\n                key: addTagRes['_id'] || '',\r\n                name: addTagRes['name'] || '',\r\n                description: addTagRes['description'] || '',\r\n\t\t\t}])\r\n\t\t\t\r\n            actions.resetForm();\r\n        }\r\n        else {\r\n            openErrorNotification();\r\n        }\r\n\r\n\r\n        actions.setSubmitting(false);\r\n\r\n    };\r\n\r\n\r\n    const handleCancel = (e: any) => {\r\n        setAddNewCategoryVisible(false);\r\n    };\r\n\r\n\r\n    const getisSubmitButtonDisabled = (values, isValid) => {\r\n        if (!values.name || !isValid) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n\r\n\r\n\r\n    const handleImagesDelete = (id) => {\r\n        // @ts-ignore\r\n        const newImages = myImages && myImages.filter(image => {\r\n            return image.id !== id;\r\n        })\r\n\r\n        setmyImages(newImages);\r\n    }\r\n\r\n\r\n\r\n\r\n    return (\r\n        <Formik\r\n            onSubmit={(values, actions) => handleSubmit(values, actions)}\r\n            validationSchema={validationSchema}\r\n            validateOnBlur={false}\r\n            enableReinitialize={true}\r\n            initialValues={\r\n                { ...initialValues }\r\n            }\r\n        >\r\n            {({\r\n                handleChange,\r\n                values,\r\n                handleSubmit,\r\n                errors,\r\n                isValid,\r\n                isSubmitting,\r\n                touched,\r\n                handleBlur,\r\n                setFieldTouched,\r\n                handleReset,\r\n            }) => (\r\n                    <>\r\n                        <Modal\r\n                            style={{\r\n                                top: '40px'\r\n                            }}\r\n                            title=\"Add New Post Tag\"\r\n                            visible={addNewCategoryVisible}\r\n                            onOk={(e: any) => handleSubmit(e)}\r\n                            onCancel={handleCancel}\r\n                            okText='Create'\r\n                            okButtonProps={{\r\n                                loading: isSubmitting,\r\n                                htmlType: \"submit\",\r\n                                disabled: getisSubmitButtonDisabled(values, isValid)\r\n                            }}\r\n                        >\r\n                  \t\t\t<Input\r\n\t\t\t\t\t\t\t\tlabel='Name'\r\n\t\t\t\t\t\t\t\tvalue={values.name}\r\n\t\t\t\t\t\t\t\tname='name'\r\n\t\t\t\t\t\t\t\tplaceHolder={'new,fresh'}\r\n\t\t\t\t\t\t\t\tisError={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addTagState.error['error']['name'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addTagState.error['error']['name'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('name');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\tlabel='BN Name'\r\n\t\t\t\t\t\t\t\tvalue={values.bnName}\r\n\t\t\t\t\t\t\t\tplaceHolder={'নতুন,ফ্রেশ'}\r\n\t\t\t\t\t\t\t\tname='bnName'\r\n\t\t\t\t\t\t\t\tisError={(touched.bnName && errors.bnName) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addTagState.error['error']['bnName'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.bnName && errors.bnName) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addTagState.error['error']['bnName'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('bnName');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\r\n\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\tlabel='Description'\r\n\t\t\t\t\t\t\t\tvalue={values.description}\r\n                                name='description'\r\n                                placeholder={'This tag...'}\r\n\t\t\t\t\t\t\t\tisError={(touched.description && errors.description) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addTagState.error['error']['description'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.description && errors.description) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addTagState.error['error']['description'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('description');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\tlabel='BN Description'\r\n\t\t\t\t\t\t\t\tvalue={values.bnDescription}\r\n\t\t\t\t\t\t\t\tplaceholder={'এই ট্যাগ...'}\r\n\t\t\t\t\t\t\t\tname='bnDescription'\r\n\t\t\t\t\t\t\t\tisError={(touched.bnDescription && errors.bnDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addTagState.error['error']['bnDescription'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.bnDescription && errors.bnDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addTagState.error['error']['bnDescription'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('bnDescription');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n                                \r\n<Input\r\n\t\t\t\t\t\t\t\tlabel='Meta title'\r\n\t\t\t\t\t\t\t\tvalue={values.metaTitle}\r\n\t\t\t\t\t\t\t\tplaceHolder={'category...'}\r\n\t\t\t\t\t\t\t\tname='metaTitle'\r\n\t\t\t\t\t\t\t\tisError={(touched.metaTitle && errors.metaTitle) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addTagState.error['error']['metaTitle'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.metaTitle && errors.metaTitle) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addTagState.error['error']['metaTitle'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('metaTitle')\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\tlabel='BN Meta title'\r\n\t\t\t\t\t\t\t\tvalue={values.bnMetaTitle}\r\n\t\t\t\t\t\t\t\tplaceHolder={'ক্যাটাগড়ি...'}\r\n\t\t\t\t\t\t\t\tname='bnMetaTitle'\r\n\t\t\t\t\t\t\t\tisError={(touched.bnMetaTitle && errors.bnMetaTitle) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addTagState.error['error']['bnMetaTitle'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.bnMetaTitle && errors.bnMetaTitle) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addTagState.error['error']['bnMetaTitle'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('bnMetaTitle');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\tlabel='Meta description'\r\n\t\t\t\t\t\t\t\tvalue={values.metaDescription}\r\n\t\t\t\t\t\t\t\tplaceholder={'meta...'}\r\n\t\t\t\t\t\t\t\tname='metaDescription'\r\n\t\t\t\t\t\t\t\tisError={(touched.metaDescription && errors.metaDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addTagState.error['error']['metaDescription'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.metaDescription && errors.metaDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addTagState.error['error']['metaDescription'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('metaDescription');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\tlabel='BN Meta Description'\r\n\t\t\t\t\t\t\t\tvalue={values.bnMetaDescription}\r\n\t\t\t\t\t\t\t\tplaceholder={'এইয় মেট...'}\r\n\t\t\t\t\t\t\t\tname='bnMetaDescription'\r\n\t\t\t\t\t\t\t\tisError={(touched.bnMetaDescription && errors.bnMetaDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addTagState.error['error']['bnMetaDescription'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.bnMetaDescription && errors.bnMetaDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addTagState.error['error']['bnMetaDescription'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('bnMetaDescription');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\tMeta Tags (grocery,fashion)\r\n\t\t\t\t\t\t\t</h3>\r\n\r\n\t\t\t\t\t\t\t<MetaTags\r\n\t\t\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\t\t\tsetTags={setTags}\r\n\t\t\t\t\t\t\ttags={tags}\r\n\t\t\t\t\t\t\t />\r\n\r\n\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\tmarginTop:'15px'\r\n\t\t\t\t\t\t\t}}></div>\r\n\r\n\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\tBN Meta Tags (মুদিখানা,ফ্যাশন)\r\n\t\t\t\t\t\t\t</h3>\r\n\r\n\t\t\t\t\t\t\t<MetaTags\r\n\t\t\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\t\t\tsetTags={setBnTags}\r\n\t\t\t\t\t\t\ttags={bnTags}\r\n\t\t\t\t\t\t\t />\r\n\r\n                        </Modal>\r\n\r\n                        <MediaLibrary\r\n                            setvisible={setvisibleMedia}\r\n                            visible={visibleMedia}\r\n                            setmyImages={setmyImages}\r\n                            myImages={myImages}\r\n                            isModalOpenForImages={true}\r\n\r\n                        />\r\n                    </>\r\n                )}\r\n        </Formik>\r\n\r\n\r\n\r\n\r\n    );\r\n};\r\n\r\nexport default AddNewBrand;\r\n","import React, { useState, useEffect } from 'react';\r\n\r\n// import third party ui lib\r\nimport { Empty, Popconfirm, Upload, message, Switch, Select, Button, notification, Table, Space, Input as CoolInput, Tooltip, Modal } from 'antd';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { useHistory } from 'react-router';\r\n\r\n\r\n\r\nimport {\r\n\tFileOutlined,\r\n\tInboxOutlined,\r\n\tRadiusUpleftOutlined,\r\n\tRadiusUprightOutlined,\r\n\tRadiusBottomleftOutlined,\r\n\tRadiusBottomrightOutlined,\r\n\tPlusOutlined,\r\n\tDeleteOutlined,\r\n\tEditOutlined,\r\n\tCheckCircleOutlined\r\n} from '@ant-design/icons';\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n\r\n\r\n/// import hooks\r\nimport { useFetch, useHandleFetch } from \"../../../hooks\";\r\n\r\n\r\n// import components\r\nimport Input from '../../../components/Field/Input';\r\nimport TextArea from '../../../components/Field/TextArea';\r\nimport { DataTableSkeleton } from \"../../../components/Placeholders\";\r\nimport QuickEdit from \"./QuickEdit\"\r\nimport AddNewTag from \"./AddNewPostTag\"\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t\tmessage: message || 'Recipe Tag Created',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n\tnotification.error({\r\n\t\tmessage: message || 'Something Went Wrong',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n};\r\n\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n\tname: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\n\r\nconst initialValues = {\r\n\tname: '',\r\n\tdescription: ''\r\n}\r\n\r\n\r\nconst { Column, ColumnGroup } = Table;\r\nconst { Search } = CoolInput;\r\n\r\n\r\n\r\nconst MyTable = ({ data, setTagList }) => {\r\n\tconst [visible, setvisible] = useState(false);\r\n\tconst [activeCategoryForEdit, setactiveCategoryForEdit] = useState(false);\r\n\tconst [deleteTagState, handleDeleteTagFetch] = useHandleFetch({}, 'postDeleteTag');\r\n\r\n\tconst history = useHistory();\r\n\r\n\r\n\tconst handleDeleteTag = async (id) => {\r\n\t\tconst deleteTagRes = await handleDeleteTagFetch({\r\n\t\t\turlOptions: {\r\n\t\t\t\tplaceHolders: {\r\n\t\t\t\t\tid,\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\r\n\r\n\t\t// @ts-ignore\r\n\t\tif (deleteTagRes && deleteTagRes.status === 'ok') {\r\n\t\t\topenSuccessNotification('Deleted Recipe Tag');\r\n\t\t\tconst newtagList = data.filter(item => item.id !== id);\r\n\t\t\tsetTagList(newtagList);\r\n\t\t}\r\n\r\n\t}\r\n\r\n\r\n\tconst handleOk = (e: any) => {\r\n\t\tsetvisible(false);\r\n\r\n\t};\r\n\r\n\tconst handleCancel = (e: any) => {\r\n\t\tsetvisible(false);\r\n\t};\r\n\r\n\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Table\r\n\t\t\t\t// expandable={{\r\n\t\t\t\t//     expandedRowRender: record => <p style={{ margin: 0 }}>{record.name}</p>,\r\n\t\t\t\t//     rowExpandable: record => record.name !== 'Not Expandable',\r\n\t\t\t\t//   }}\r\n\t\t\t\t// bordered={true}\r\n\t\t\t\tsize='small'\r\n\t\t\t\t// pagination={false}\r\n\t\t\t\tdataSource={data}\r\n\t\t\t>\r\n\r\n\t\t\t\t<Column\r\n\t\t\t\t\ttitle=\"Name\"\r\n\t\t\t\t\tdataIndex=\"name\"\r\n\t\t\t\t\tkey=\"id\"\r\n\t\t\t\t\tclassName='classnameofthecolumn'\r\n\t\t\t\t\trender={(text, record: any) => (\r\n\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t<h4\r\n\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\thistory.push(`/admin/posts/tag/${record.id}`)\r\n\t\t\t\t\t\t\t\t\t// setBrandDetailVisible(true);\r\n\t\t\t\t\t\t\t\t\tsetactiveCategoryForEdit(record)\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\tfontWeight: 400,\r\n\t\t\t\t\t\t\t\t\tcolor: '#555',\r\n\t\t\t\t\t\t\t\t\tcursor: 'pointer'\r\n\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t{text}\r\n\t\t\t\t\t\t\t</h4>\r\n\t\t\t\t\t\t</>\r\n\t\t\t\t\t)}\r\n\t\t\t\t/>\r\n\r\n\t\t\t\t<Column\r\n\t\t\t\t\ttitle=\"Description\"\r\n\t\t\t\t\tdataIndex=\"description\"\r\n\t\t\t\t\tkey=\"id\"\r\n\t\t\t\t\tclassName='classnameofthecolumn'\r\n\r\n\t\t\t\t/>\r\n\r\n\t\t\t\t<Column\r\n\r\n\t\t\t\t\tclassName='classnameofthecolumn'\r\n\t\t\t\t\ttitle=\"\"\r\n\t\t\t\t\tkey=\"action\"\r\n\t\t\t\t\talign='right'\r\n\t\t\t\t\trender={(text, record: any) => (\r\n\t\t\t\t\t\t<Space size=\"middle\">\r\n\t\t\t\t\t\t\t<a href='##'>\r\n\t\t\t\t\t\t\t\t<Tooltip placement=\"top\" title='Edit Recipe tag'>\r\n\t\t\t\t\t\t\t\t\t<span className='iconSize' onClick={() => {\r\n\t\t\t\t\t\t\t\t\t\tsetvisible(true)\r\n\t\t\t\t\t\t\t\t\t\tsetactiveCategoryForEdit(record);\r\n\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t<EditOutlined />\r\n\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t\t</a>\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t<Popconfirm\r\n\t\t\t\t\t\t\t\tonConfirm={() => handleDeleteTag(record.id)}\r\n\t\t\t\t\t\t\t\ttitle=\"Are you sure？\" okText=\"Yes\" cancelText=\"No\">\r\n\t\t\t\t\t\t\t\t<span\r\n\t\t\t\t\t\t\t\t\tclassName='iconSize iconSize-danger'\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t<DeleteOutlined />\r\n\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t</Popconfirm>\r\n\t\t\t\t\t\t</Space>\r\n\t\t\t\t\t)}\r\n\t\t\t\t/>\r\n\t\t\t</Table>\r\n\r\n\t\t\t{activeCategoryForEdit && <QuickEdit\r\n\t\t\t\ttagList={data}\r\n\t\t\t\tsetTagList={setTagList}\r\n\t\t\t\tsetAddNewCategoryVisible={setvisible}\r\n\t\t\t\taddNewCategoryVisible={visible}\r\n\t\t\t\ttagDetailData={activeCategoryForEdit} />}\r\n\t\t</>\r\n\t)\r\n}\r\n\r\n\r\n\r\n\r\ninterface Props { }\r\n\r\nconst TagList = ({ }: Props) => {\r\n\r\n\r\n\tconst [tagList, setTagList] = useState([]);\r\n\r\n\tconst [tagState, handleTagListFetch] = useHandleFetch({}, 'postTagList');\r\n\r\n\tconsole.log('recipetaglist',tagState); \r\n\r\n\tuseEffect(() => {\r\n\t\tconst setTags = async () => {\r\n\t\t\tconst tags = await handleTagListFetch({});\r\n\t\t\t// @ts-ignore\r\n\t\t\tsetTagList(tags);\r\n\t\t}\r\n\t\tsetTags();\r\n\t}, [])\r\n\r\n\r\n\r\n\tconst [addNewCategoryVisible, setAddNewCategoryVisible] = useState(false);\r\n\r\n\tconst handleSearch = (value) => {\r\n\t\tif (tagState.data.length > 0) {\r\n\t\t\tconst newTagList = tagState.data.filter(item => item.name.toLowerCase().includes(value.toLowerCase()));\r\n\t\t\tsetTagList(newTagList);\r\n\t\t}\r\n\t}\r\n\r\n\treturn (\r\n\t\t<>\r\n\r\n\t\t\t<div className='categoryListContainer'>\r\n\t\t\t\t<div className='categoryListContainer__header'>\r\n\t\t\t\t\t<div className='categoryListContainer__header-searchBar-tag'>\r\n\t\t\t\t\t\t<h2 className='categoryListContainer__header-title'>\r\n\t\t\t\t\t\t\tRecipe Tags\r\n         \t\t\t\t</h2>\r\n\r\n\t\t\t\t\t\t<Search\r\n\t\t\t\t\t\t\tenterButton={false}\r\n\t\t\t\t\t\t\tclassName='searchbarClassName'\r\n\t\t\t\t\t\t\tplaceholder=\"search recipe tags..\"\r\n\t\t\t\t\t\t\tonSearch={value => handleSearch(value)}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\t// type=\"primary\"\r\n\t\t\t\t\t\tclassName='btnPrimaryClassNameoutline'\r\n\t\t\t\t\t\ticon={<PlusOutlined />}\r\n\t\t\t\t\t\tonClick={() => setAddNewCategoryVisible(true)}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tAdd New\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className='categoryListContainer__categoryList'>\r\n\t\t\t\t\t{tagState.done && tagList.length > 0 && <MyTable\r\n\t\t\t\t\t\tsetTagList={setTagList}\r\n\t\t\t\t\t\tdata={tagList} />}\r\n\t\t\t\t\t{tagState.isLoading && <DataTableSkeleton />}\r\n\r\n\r\n\t\t\t\t\t{tagState.done && !(tagList.length > 0) && (\r\n\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\tmarginTop: '200px'\r\n\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t<Empty description='No Recipe tags found' image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\r\n\t\t\t<AddNewTag\r\n\t\t\t\ttagList={tagList}\r\n\t\t\t\tsetTagList={setTagList}\r\n\t\t\t\taddNewCategoryVisible={addNewCategoryVisible}\r\n\t\t\t\tsetAddNewCategoryVisible={setAddNewCategoryVisible}\r\n\t\t\t/>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default TagList;\r\n","import React, { useState } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n\r\nimport { useHandleFetch } from '../../../hooks';\r\n// import third party ui lib\r\nimport { Upload, message, Switch, Select, Button, notification, Modal, Tooltip } from 'antd';\r\n\r\nimport {\r\n    FileOutlined,\r\n    InboxOutlined,\r\n    FileAddOutlined,\r\n    DeleteOutlined,\r\n    CheckCircleOutlined,\r\n    CloseOutlined,\r\n    CheckOutlined,\r\n    InfoCircleOutlined,\r\n    PlusOutlined,\r\n    FileImageFilled\r\n} from '@ant-design/icons';\r\n\r\n\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../../components/Field/Input';\r\nimport TextArea from '../../../components/Field/TextArea';\r\nimport MediaLibrary from \"../../../components/MediaLibrary\";\r\nimport MetaTags from \"../../../pages/category/MetaTags\";\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    name: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Recipe Tag Updated',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n    notification.error({\r\n        message: message || 'Something Went Wrong',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst initialValues = {\r\n    name: '',\r\n\tbnName: '',\r\n\tdescription: '',\r\n\tbnDescription: '',\r\n\tmetaTitle: '',\r\n\tbnMetaTitle: '',\r\n\tmetaDescription: '',\r\n\tbnMetaDescription: '',\r\n\tmetaTags: '',\r\n\tbnMetaTags: '',\r\n}\r\n\r\n\r\n\r\ninterface Props {\r\n    addNewCategoryVisible?: any;\r\n    setAddNewCategoryVisible?: any;\r\n    tagDetailData?: any;\r\n    setTagDetailData?: any;\r\n\r\n}\r\n\r\nconst AddNewBrand = ({ addNewCategoryVisible, \r\n    setAddNewCategoryVisible, setTagDetailData, tagDetailData }: Props) => {\r\n\r\n    const [addTagState, handleAddTagFetch] = useHandleFetch({}, 'postAddTag');\r\n    const [myImages, setmyImages] = useState(false);\r\n    const [visibleMedia, setvisibleMedia] = useState(false);\r\n    const [tags,setTags] = useState([]);\r\n\tconst [bnTags,setBnTags] = useState([]);\r\n\r\n    const handleSubmit = async (values: any, actions: any) => {\r\n        const addTagRes = await handleAddTagFetch({\r\n            urlOptions: {\r\n                placeHolders: {\r\n                    id: values.id,\r\n                }\r\n            },\r\n            body: {\r\n                name: values.name.trim(),\r\n                description: values.description,\r\n                metaTitle: values.metaTitle,\r\n                metaDescription: values.metaDescription,\r\n                metaTags: tags.join(','),\r\n\r\n\r\n                \r\n                bn: {\r\n\t\t\t\t\tmetaTitle: values.bnMetaTitle,\r\n\t\t\t\t\tmetaDescription: values.bnMetaDescription,\r\n\t\t\t\t\tmetaTags: bnTags.join(','),\r\n\t\t\t\t\tname: values.bnName.trim(),\r\n\t\t\t\t\tdescription: values.bnDescription,\r\n\t\t\t\t}\r\n            },\r\n        });\r\n\r\n        // @ts-ignore\r\n        if (addTagRes && addTagRes.status === 'ok') {\r\n            openSuccessNotification();\r\n            setAddNewCategoryVisible(false);\r\n            setTagDetailData({\r\n                \t// @ts-ignore\r\n\t\t\t\t...addTagRes,\r\n                id: addTagRes['_id'] || '',\r\n                key: addTagRes['_id'] || '',\r\n                name: addTagRes['name'] || '',\r\n                description: addTagRes['description'] || '',\r\n            })\r\n        \r\n\t\t\t\r\n            actions.resetForm();\r\n        }\r\n        else {\r\n            openErrorNotification();\r\n        }\r\n\r\n\r\n        actions.setSubmitting(false);\r\n\r\n    };\r\n\r\n\r\n    const handleCancel = (e: any) => {\r\n        setAddNewCategoryVisible(false);\r\n    };\r\n\r\n\r\n    const getisSubmitButtonDisabled = (values, isValid) => {\r\n        if (!values.name || !isValid) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n\r\n\r\n\r\n    const handleImagesDelete = (id) => {\r\n        // @ts-ignore\r\n        const newImages = myImages && myImages.filter(image => {\r\n            return image.id !== id;\r\n        })\r\n\r\n        setmyImages(newImages);\r\n    }\r\n\r\n\r\n\r\n\r\n    return (\r\n        <Formik\r\n            onSubmit={(values, actions) => handleSubmit(values, actions)}\r\n            validationSchema={validationSchema}\r\n            validateOnBlur={false}\r\n            enableReinitialize={true}\r\n            initialValues={\r\n                { ...initialValues, ...tagDetailData }\r\n            }\r\n        >\r\n            {({\r\n                handleChange,\r\n                values,\r\n                handleSubmit,\r\n                errors,\r\n                isValid,\r\n                isSubmitting,\r\n                touched,\r\n                handleBlur,\r\n                setFieldTouched,\r\n                handleReset,\r\n            }) => (\r\n                    <>\r\n                        <Modal\r\n                            style={{\r\n                                top: '40px'\r\n                            }}\r\n                            title=\"Edit Tag\"\r\n                            visible={addNewCategoryVisible}\r\n                            onOk={(e: any) => handleSubmit(e)}\r\n                            onCancel={handleCancel}\r\n                            okText='Update'\r\n                            okButtonProps={{\r\n                                loading: isSubmitting,\r\n                                htmlType: \"submit\",\r\n                                disabled: getisSubmitButtonDisabled(values, isValid)\r\n                            }}\r\n                        >\r\n                  \t\t\t<Input\r\n\t\t\t\t\t\t\t\tlabel='Name'\r\n\t\t\t\t\t\t\t\tvalue={values.name}\r\n\t\t\t\t\t\t\t\tname='name'\r\n\t\t\t\t\t\t\t\tplaceHolder={'new,fresh'}\r\n\t\t\t\t\t\t\t\tisError={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addTagState.error['error']['name'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addTagState.error['error']['name'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('name');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\tlabel='BN Name'\r\n\t\t\t\t\t\t\t\tvalue={values.bnName}\r\n\t\t\t\t\t\t\t\tplaceHolder={'নতুন,ফ্রেশ'}\r\n\t\t\t\t\t\t\t\tname='bnName'\r\n\t\t\t\t\t\t\t\tisError={(touched.bnName && errors.bnName) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addTagState.error['error']['bnName'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.bnName && errors.bnName) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addTagState.error['error']['bnName'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('bnName');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\r\n\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\tlabel='Description'\r\n\t\t\t\t\t\t\t\tvalue={values.description}\r\n                                name='description'\r\n                                placeholder={'This tag...'}\r\n\t\t\t\t\t\t\t\tisError={(touched.description && errors.description) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addTagState.error['error']['description'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.description && errors.description) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addTagState.error['error']['description'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('description');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\tlabel='BN Description'\r\n\t\t\t\t\t\t\t\tvalue={values.bnDescription}\r\n\t\t\t\t\t\t\t\tplaceholder={'এই ট্যাগ...'}\r\n\t\t\t\t\t\t\t\tname='bnDescription'\r\n\t\t\t\t\t\t\t\tisError={(touched.bnDescription && errors.bnDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addTagState.error['error']['bnDescription'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.bnDescription && errors.bnDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addTagState.error['error']['bnDescription'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('bnDescription');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n                                \r\n<Input\r\n\t\t\t\t\t\t\t\tlabel='Meta title'\r\n\t\t\t\t\t\t\t\tvalue={values.metaTitle}\r\n\t\t\t\t\t\t\t\tplaceHolder={'category...'}\r\n\t\t\t\t\t\t\t\tname='metaTitle'\r\n\t\t\t\t\t\t\t\tisError={(touched.metaTitle && errors.metaTitle) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addTagState.error['error']['metaTitle'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.metaTitle && errors.metaTitle) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addTagState.error['error']['metaTitle'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('metaTitle')\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\tlabel='BN Meta title'\r\n\t\t\t\t\t\t\t\tvalue={values.bnMetaTitle}\r\n\t\t\t\t\t\t\t\tplaceHolder={'ক্যাটাগড়ি...'}\r\n\t\t\t\t\t\t\t\tname='bnMetaTitle'\r\n\t\t\t\t\t\t\t\tisError={(touched.bnMetaTitle && errors.bnMetaTitle) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addTagState.error['error']['bnMetaTitle'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.bnMetaTitle && errors.bnMetaTitle) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addTagState.error['error']['bnMetaTitle'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('bnMetaTitle');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\tlabel='Meta description'\r\n\t\t\t\t\t\t\t\tvalue={values.metaDescription}\r\n\t\t\t\t\t\t\t\tplaceholder={'meta...'}\r\n\t\t\t\t\t\t\t\tname='metaDescription'\r\n\t\t\t\t\t\t\t\tisError={(touched.metaDescription && errors.metaDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addTagState.error['error']['metaDescription'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.metaDescription && errors.metaDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addTagState.error['error']['metaDescription'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('metaDescription');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\tlabel='BN Meta Description'\r\n\t\t\t\t\t\t\t\tvalue={values.bnMetaDescription}\r\n\t\t\t\t\t\t\t\tplaceholder={'এইয় মেট...'}\r\n\t\t\t\t\t\t\t\tname='bnMetaDescription'\r\n\t\t\t\t\t\t\t\tisError={(touched.bnMetaDescription && errors.bnMetaDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addTagState.error['error']['bnMetaDescription'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.bnMetaDescription && errors.bnMetaDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addTagState.error['error']['bnMetaDescription'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('bnMetaDescription');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\tMeta Tags (grocery,fashion)\r\n\t\t\t\t\t\t\t</h3>\r\n\r\n\t\t\t\t\t\t\t<MetaTags\r\n\t\t\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\t\t\tsetTags={setTags}\r\n\t\t\t\t\t\t\ttags={tags}\r\n\t\t\t\t\t\t\t />\r\n\r\n\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\tmarginTop:'15px'\r\n\t\t\t\t\t\t\t}}></div>\r\n\r\n\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\tBN Meta Tags (মুদিখানা,ফ্যাশন)\r\n\t\t\t\t\t\t\t</h3>\r\n\r\n\t\t\t\t\t\t\t<MetaTags\r\n\t\t\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\t\t\tsetTags={setBnTags}\r\n\t\t\t\t\t\t\ttags={bnTags}\r\n\t\t\t\t\t\t\t />\r\n\r\n                        </Modal>\r\n\r\n                        <MediaLibrary\r\n                            setvisible={setvisibleMedia}\r\n                            visible={visibleMedia}\r\n                            setmyImages={setmyImages}\r\n                            myImages={myImages}\r\n                            isModalOpenForImages={true}\r\n\r\n                        />\r\n                    </>\r\n                )}\r\n        </Formik>\r\n\r\n\r\n\r\n\r\n    );\r\n};\r\n\r\nexport default AddNewBrand;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useParams, useHistory } from \"react-router\";\r\n\r\n\r\n// import hooks\r\nimport { useHandleFetch } from \"../../../hooks\";\r\n\r\n// import lib\r\nimport {\r\n    FileOutlined,\r\n    InboxOutlined,\r\n    RadiusUpleftOutlined,\r\n    RadiusUprightOutlined,\r\n    RadiusBottomleftOutlined,\r\n    RadiusBottomrightOutlined,\r\n    PlusOutlined,\r\n    DeleteOutlined,\r\n    EditOutlined,\r\n    CheckCircleOutlined\r\n} from '@ant-design/icons';\r\n\r\nimport { Skeleton, Empty, Popconfirm, Upload, message, Switch, Select, Button, notification, Table, Space, Input as CoolInput, Tooltip, Modal } from 'antd';\r\n\r\n\r\n// import components\r\nimport { DataTableSkeleton } from \"../../../components/Placeholders\";\r\nimport TagEdit from \"./TagEdit\";\r\n\r\n\r\nconst { Column, ColumnGroup } = Table;\r\nconst { Search } = CoolInput;\r\n\r\n\r\ninterface Props {\r\n    productRecord?: any;\r\n}\r\n\r\nconst NewBrandDetail = (props: Props) => {\r\n    const [tagDetailState, handleTagDetailFetch] = useHandleFetch({}, 'postTagDetail');\r\n    const [tagProductsState, handleTagProductsFetch] = useHandleFetch({}, 'tagPostList');\r\n    const [tagEditVisible, setTagEditVisible] = useState(false);\r\n    const [tagDetailData,setTagDetailData] = useState({}); \r\n\r\n    \r\n\r\n    const params = useParams();\r\n    const history = useHistory();\r\n    const tagId = params['id'];\r\n\r\n    useEffect(() => {\r\n\r\n        const getBrandDetail = async () => {\r\n            const tagDetailRes =  await handleTagDetailFetch({\r\n                urlOptions: {\r\n                    placeHolders: {\r\n                        id: tagId\r\n                    }\r\n                }\r\n            }); \r\n\r\n            // @ts-ignore\r\n            if(tagDetailRes){\r\n                console.log('tagDetailRes',tagDetailRes);\r\n                // @ts-ignore\r\n                setTagDetailData(tagDetailRes);\r\n            }\r\n        };\r\n\r\n        getBrandDetail();\r\n\r\n    }, [tagId]);\r\n\r\n    useEffect(() => {\r\n        const getTagProducts = async () => {\r\n            await handleTagProductsFetch({\r\n                urlOptions: {\r\n                    placeHolders: {\r\n                        id: tagId\r\n                    }\r\n                }\r\n            })\r\n        };\r\n\r\n        getTagProducts();\r\n\r\n    }, [tagId]);\r\n\r\n\r\n\r\n\r\n    console.log('tagProductsState', tagProductsState);\r\n\r\n    console.log('brandParams', params);\r\n\r\n\r\n    return (\r\n        <div className='brandDetailContainer'>\r\n            <div className='brandDetailContainer__heading'>\r\n                <h3>\r\n                    Recipe Tag Detail\r\n                </h3>\r\n\r\n                {tagDetailState.done && tagDetailData && (Object.keys(tagDetailData).length > 0) && (\r\n                    <>\r\n                        <TagEdit\r\n                            addNewCategoryVisible={tagEditVisible}\r\n                            setAddNewCategoryVisible={setTagEditVisible}\r\n                            tagDetailData={tagDetailData}\r\n                            setTagDetailData={setTagDetailData}\r\n                        />\r\n                        <Button\r\n                            onClick={() => setTagEditVisible(true)}\r\n                            type='link'\r\n                            icon={<EditOutlined />}\r\n                        >\r\n                            Edit\r\n                      </Button>\r\n                    </>\r\n                )}\r\n            </div>\r\n            <Skeleton\r\n                paragraph={{ rows: 2 }}\r\n                loading={tagDetailState.isLoading}>\r\n                {tagDetailState.done && tagDetailData && !(Object.keys(tagDetailData).length > 0) && (\r\n                    <Empty description='No Recipe Tag found' image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n                )}\r\n\r\n                {tagDetailState.done && tagDetailData && (Object.keys(tagDetailData).length > 0) && (\r\n                    <div className='brandDetailContainer__header'>\r\n\r\n                        <div className='brandDetailContainer__header-info'>\r\n                            <h2>\r\n                                {tagDetailData['name']}\r\n                            </h2>\r\n                            <h3>\r\n                                {tagDetailData['description']}\r\n                            </h3>\r\n                            {tagDetailData['url'] && (\r\n                                <h3>\r\n                                    URL:\r\n                                    <span>\r\n                                        {tagDetailData['url']}\r\n                                    </span>\r\n\r\n                                </h3>\r\n                            )}\r\n                        </div>\r\n                    </div>\r\n                )}\r\n\r\n            </Skeleton>\r\n\r\n            <div className='brandDetailContainer__heading'>\r\n                <h3>\r\n                    Recipes \r\n                </h3>\r\n            </div>\r\n            <div className='brandDetailContainer__body'>\r\n                {tagProductsState.isLoading && <DataTableSkeleton />}\r\n                \r\n                {tagProductsState.done && !(tagProductsState.data.length > 0) && (\r\n                    <div style={{\r\n                        marginTop: '100px'\r\n                    }}>\r\n                        <Empty description='No Recipes found' image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n                    </div>\r\n                )}\r\n\r\n                {tagProductsState.done && tagProductsState.data && tagProductsState.data.length > 0 && (\r\n                    <>\r\n                        <Table\r\n                            style={{\r\n                                paddingTop: '10px',\r\n                                borderRadius: '5px !important',\r\n                                overflow: 'hidden',\r\n                                boxShadow: '0 0.125rem 0.625rem rgba(227, 231, 250, 0.3), 0 0.0625rem 0.125rem rgba(206, 220, 233, 0.4)'\r\n                            }}\r\n                            // expandable={{\r\n                            //     expandedRowRender: record => <p style={{ margin: 0 }}>{record.name}</p>,\r\n                            //     rowExpandable: record => record.name !== 'Not Expandable',\r\n                            //   }}\r\n                            // bordered={true}\r\n                            size='small'\r\n                            // pagination={false}\r\n                            dataSource={tagProductsState.data}\r\n                            tableLayout={'auto'}\r\n                            onHeaderRow={column => {\r\n                                return {\r\n                                    style: {\r\n                                        color: 'red !important'\r\n                                    }\r\n\r\n                                };\r\n                            }}\r\n                        >\r\n                            <Column\r\n                                title=\"\"\r\n                                dataIndex=\"cover\"\r\n                                key=\"id\"\r\n                                width={'80px'}\r\n\r\n                                className='classnameofthecolumn'\r\n\r\n                                render={(cover, record: any) => (\r\n                                    <>\r\n                                        <img\r\n                                            onClick={() => {\r\n                                                history.push(`/admin/posts/${record.id}`)\r\n                                            }}\r\n                                            src={cover} alt='cover img' style={{\r\n                                                height: '40px',\r\n                                                width: '40px',\r\n                                                objectFit: \"contain\",\r\n                                                borderRadius: '3px',\r\n                                                cursor: 'pointer'\r\n                                            }} />\r\n\r\n\r\n\r\n\r\n                                    </>\r\n                                )}\r\n                            />\r\n\r\n                            <Column\r\n                                title=\"Name\"\r\n                                dataIndex=\"name\"\r\n                                key=\"id\"\r\n                                className='classnameofthecolumn'\r\n                                render={(text, record: any) => (\r\n                                    <>\r\n                                        <h4\r\n                                            onClick={() => {\r\n                                                history.push(`/admin/posts/${record.id}`)\r\n                                            }}\r\n                                            style={{\r\n                                                fontWeight: 400,\r\n                                                color: '#555',\r\n                                                cursor: 'pointer'\r\n\r\n                                            }}>\r\n                                            {text}\r\n                                        </h4>\r\n\r\n\r\n                                    </>\r\n                                )}\r\n\r\n                            />\r\n\r\n                            <Column\r\n                                title=\"Offer Price\"\r\n                                dataIndex=\"offerPrice\"\r\n                                key=\"id\"\r\n                                className='classnameofthecolumn'\r\n\r\n                            />\r\n\r\n\r\n                            <Column\r\n                                title=\"Price\"\r\n                                dataIndex=\"price\"\r\n                                key=\"id\"\r\n                                className='classnameofthecolumn'\r\n\r\n                            />\r\n\r\n\r\n                            <Column\r\n                                title=\"Available\"\r\n                                dataIndex=\"available\"\r\n                                key=\"id\"\r\n                                className='classnameofthecolumn'\r\n\r\n                            />\r\n\r\n\r\n                            <Column\r\n                                title=\"Minimum\"\r\n                                dataIndex=\"minimum\"\r\n                                key=\"id\"\r\n                                className='classnameofthecolumn'\r\n\r\n                            />\r\n\r\n                        </Table>\r\n                    </>\r\n                )}\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NewBrandDetail\r\n","// @ts-nocheck\r\nimport React,{useEffect, useState} from 'react'; \r\nimport { Tag, Input, Tooltip } from 'antd';\r\nimport { PlusOutlined } from '@ant-design/icons';\r\n\r\nclass MetaTags extends React.Component {\r\n  state = {\r\n    tags: [],\r\n    inputVisible: false,\r\n    inputValue: '',\r\n    editInputIndex: -1,\r\n    editInputValue: '',\r\n  };\r\n\r\n\r\n\r\n  handleClose = removedTag => {\r\n    const {setTags,tags} = this.props;\r\n    const localTags = tags.filter(tag => tag !== removedTag);\r\n    setTags(localTags);\r\n  };\r\n\r\n  showInput = () => {\r\n    this.setState({ inputVisible: true }, () => this.input.focus());\r\n  };\r\n\r\n  handleInputChange = e => {\r\n    this.setState({ inputValue: e.target.value });\r\n  };\r\n\r\n  handleInputConfirm = () => {\r\n      console.log('handleInputConfirm',this.props);\r\n    const { inputValue } = this.state;\r\n    let { tags, setTags } = this.props;\r\n    if (inputValue && tags && tags.indexOf(inputValue) === -1) {\r\n      tags = [...tags, inputValue];\r\n    }\r\n    setTags(tags);\r\n    this.setState({\r\n      inputVisible: false,\r\n      inputValue: '',\r\n    });\r\n  };\r\n\r\n  handleEditInputChange = e => {\r\n    this.setState({ editInputValue: e.target.value });\r\n    console.log('tagValue',e.target.value);\r\n  };\r\n\r\n  handleEditInputConfirm = () => {\r\n    this.setState(({ editInputIndex, editInputValue }) => {\r\n      return {\r\n        editInputIndex: -1,\r\n        editInputValue: '',\r\n      };\r\n    });\r\n\r\n    const newTags = [...this.props.tags];\r\n    newTags[editInputIndex] = editInputValue;\r\n    this.props.setTags(newTags);\r\n  };\r\n\r\n  saveInputRef = input => {\r\n    this.input = input;\r\n  };\r\n\r\n  saveEditInputRef = input => {\r\n    this.editInput = input;\r\n  };\r\n\r\n\r\n\r\n  render() {\r\n    const { inputVisible, inputValue, editInputIndex, editInputValue } = this.state;\r\n    const { placeholder,tags } = this.props;\r\n\r\n    return (\r\n      <>\r\n        {tags && tags.length > 0 && tags.map((tag, index) => {\r\n          if (editInputIndex === index) {\r\n            return (\r\n              <Input\r\n                ref={this.saveEditInputRef}\r\n                key={tag}\r\n                size=\"small\"\r\n                placeholder={placeholder}\r\n                className=\"tag-input\"\r\n                value={editInputValue}\r\n                onChange={this.handleEditInputChange}\r\n                onBlur={this.handleEditInputConfirm}\r\n                onPressEnter={this.handleEditInputConfirm}\r\n              />\r\n            );\r\n          }\r\n\r\n          const isLongTag = tag.length > 20;\r\n\r\n          const tagElem = (\r\n            <Tag\r\n              className=\"edit-tag\"\r\n              key={tag}\r\n              closable={index !== 0}\r\n              onClose={() => this.handleClose(tag)}\r\n            >\r\n              <span\r\n                onDoubleClick={e => {\r\n                  if (index !== 0) {\r\n                    this.setState({ editInputIndex: index, editInputValue: tag }, () => {\r\n                      this.editInput.focus();\r\n                    });\r\n                    e.preventDefault();\r\n                  }\r\n                }}\r\n              >\r\n                {isLongTag ? `${tag.slice(0, 20)}...` : tag}\r\n              </span>\r\n            </Tag>\r\n          );\r\n          return isLongTag ? (\r\n            <Tooltip title={tag} key={tag}>\r\n              {tagElem}\r\n            </Tooltip>\r\n          ) : (\r\n            tagElem\r\n          );\r\n        })}\r\n        {inputVisible && (\r\n          <Input\r\n          style={{\r\n            margin: \"10px 0\"\r\n          }}\r\n            ref={this.saveInputRef}\r\n            type=\"text\"\r\n            size=\"small\"\r\n            className=\"tag-input\"\r\n            value={inputValue}\r\n            onChange={this.handleInputChange}\r\n            onBlur={this.handleInputConfirm}\r\n            onPressEnter={this.handleInputConfirm}\r\n          />\r\n        )}\r\n        {!inputVisible && (\r\n          <Tag className=\"site-tag-plus edit-tag\" onClick={this.showInput}>\r\n            <PlusOutlined /> New Value\r\n          </Tag>\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MetaTags","import React, { useState, useEffect } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n\r\nimport { useHandleFetch } from '../../../hooks';\r\n// import third party ui lib\r\nimport { Switch, Select, notification, Modal, Tooltip, Upload, message, } from 'antd';\r\n\r\nimport {\r\n\tDeleteOutlined,\r\n\tFileAddOutlined,\r\n\tFileImageFilled,\r\n\tPlusOutlined,\r\n\tCheckCircleOutlined,\r\n\tCloseOutlined,\r\n\tCheckOutlined,\r\n\tInfoCircleOutlined,\r\n\tLoadingOutlined\r\n} from '@ant-design/icons';\r\n\r\n\r\n\r\n// import ReactQuill from 'react-quill';\r\n// import 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../../components/Field/Input';\r\nimport TextArea from '../../../components/Field/TextArea';\r\nimport MediaLibrary from \"../../../components/MediaLibrary\";\r\nimport MetaTags from \"./MetaTags\";\r\n\r\n\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n\t// name: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t\tmessage: message || 'Recipe Category Created',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n\tnotification.error({\r\n\t\tmessage: message || 'Something Went Wrong',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n};\r\n\r\n\r\n\r\n\r\n\r\nconst initialValues = {\r\n\tname: '',\r\n\tbnName: '',\r\n\tdescription: '',\r\n\tbnDescription: '',\r\n\tmetaTitle: '',\r\n\tbnMetaTitle: '',\r\n\tmetaDescription: '',\r\n\tbnMetaDescription: '',\r\n\tmetaTags: '',\r\n\tbnMetaTags: '',\r\n\timage: [],\r\n\turl: '',\r\n\tcover: '',\r\n\tdisplayOrder: null,\r\n}\r\n\r\nconst { Option } = Select;\r\n\r\ninterface Props {\r\n\taddNewCategoryVisible: any;\r\n\tsetAddNewCategoryVisible: any;\r\n\tcategoryList?: any;\r\n\tsetcategoryList?: any;\r\n}\r\n\r\nconst AddNewCategory = ({ addNewCategoryVisible, setAddNewCategoryVisible, categoryList, setcategoryList }: Props) => {\r\n\r\n\tconst [addCategoryState, handleAddCategoryFetch] = useHandleFetch({}, 'postAddCategory','form');\r\n\tconst [visible, setvisible] = useState(false);\r\n\tconst [myImages, setmyImages] = useState(false);\r\n\tconst [myThumbnailImage, setmyThumbnailImage] = useState(false);\r\n\tconst [isparentCategoryChecked, setisparentcategoryChecked] = useState(true);\r\n\tconst [isModalOpenForThumbnail, setisModalOpenForThumbnail] = useState(false);\r\n\tconst [isModalOpenForImages, setisModalOpenForImages] = useState(false);\r\n\tconst [coverImageId, setCoverImageId] = useState('');\r\n\tconst [selectedParentId, setselectedParentId] = useState('');\r\n\tconst [imageUrl, setImageUrl] = useState('');\r\n\tconst [loadingThumnail, setLoadingThumbnail] = useState(false);\r\n\tconst [imageFile, setImagefile] = useState('');\r\n\tconst [tags,setTags] = useState([]);\r\n\tconst [bnTags,setBnTags] = useState([]);\r\n\r\n\r\n\tconst handleSubmit = async (values: any, actions: any) => {\r\n\t\t// @ts-ignore\r\n\t\tconst imagesIds = myImages ? myImages.map(image => {\r\n\t\t\treturn image.id;\r\n\t\t}) : [];\r\n\r\n\t\tconst formData = new FormData();\r\n\r\n\t\tconst bn = {\r\n\t\t\tmetaTitle: values.bnMetaTitle,\r\n\t\t\tmetaDescription: values.bnMetaDescription,\r\n\t\t\tmetaTags: bnTags.join(','),\r\n\t\t\tname: values.bnName.trim(),\r\n\t\t\tdescription: values.bnDescription,\r\n\t\t}; \r\n\r\n\t\tformData.append(\"name\", values.name.trim());\r\n\t\tformData.append(\"description\", values.description);\r\n\t\tformData.append(\"image\", JSON.stringify(imagesIds));\r\n\t\tformData.append(\"cover\", coverImageId || imagesIds[0] ? imagesIds[0] : '');\r\n\t\tformData.append(\"parent\", selectedParentId);\r\n\t\tformData.append('icon', imageFile)\r\n\t\tformData.append('metaTitle', values.metaTitle)\r\n\t\tformData.append('displayOrder', values.displayOrder)\r\n\t\tformData.append('metaDescription', values.metaDescription)\r\n\t\tformData.append('metaTags', values.metaTags)\r\n\r\n\r\n\r\n\t\tconst bnData = JSON.stringify(bn);\r\n\t\tconst bnFormData = new FormData();\r\n\t\tbnFormData.append(\"bn\",bnData);\r\n\r\n\r\n\r\n\t\tformData.append('bn', bnFormData.get('bn'))\r\n\r\n\r\n\r\n\r\n\t\tconsole.log('addcategoryREsBody',{\r\n\t\t\t...formData,\r\n\t\t\t// ...bnFormData\r\n\t\t}); \r\n\r\n\r\n\r\n\t\tconst addCategoryRes = await handleAddCategoryFetch({\r\n\t\t\tbody: formData,\r\n\t\t});\r\n\r\n\r\n\t\t// @ts-ignore\r\n\t\tif (addCategoryRes && addCategoryRes.status === 'ok') {\r\n\t\t\topenSuccessNotification('Recipe Category Created!');\r\n\t\t\tsetAddNewCategoryVisible(false)\r\n\r\n\t\t\tsetcategoryList([{\r\n\t\t\t\tid: addCategoryRes['_id'] || '',\r\n\t\t\t\tkey: addCategoryRes['_id'] || '',\r\n\t\t\t\tname: addCategoryRes['name'] || '',\r\n\t\t\t\tdescription: addCategoryRes['description'] || '',\r\n\t\t\t\tcover: addCategoryRes['cover'] || '',\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\t...addCategoryRes\r\n\t\t\t},...categoryList])\r\n\r\n\t\t\tactions.resetForm();\r\n\t\t\t// @ts-ignore\r\n\t\t\tsetmyImages([]);\r\n\t\t\tsetCoverImageId('')\r\n\t\t\tsetselectedParentId('')\r\n\t\t\tsetisparentcategoryChecked(true);\r\n\t\t\tsetImageUrl('');\r\n\t\t}\r\n\t\telse {\r\n\t\t\topenErrorNotification();\r\n\t\t}\r\n\r\n\r\n\r\n\r\n\t\tactions.setSubmitting(false);\r\n\t};\r\n\r\n\r\n\r\n\tconsole.log('addCategoryState',addCategoryState)\r\n\r\n\t\r\n\tuseEffect(() => {\r\n\t\tif (!addCategoryState['isLoading']) {\r\n\t\t\tconst error = addCategoryState['error'];\r\n\t\t\tif (error['isError'] && Object.keys(error['error']).length > 0) {\r\n\r\n\r\n\t\t\t\tconst errors =\r\n\t\t\t\t\tObject.values(error['error']).length > 0\r\n\t\t\t\t\t\t? Object.values(error['error'])\r\n\t\t\t\t\t\t: [];\r\n\t\t\t\terrors.forEach((err, i) => {\r\n\t\t\t\t\tif (typeof err === 'string') {\r\n\t\t\t\t\t\topenErrorNotification(err)\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if (typeof err === 'object') {\r\n\t\t\t\t\t\tif (err && Object.keys(err).length > 0) {\r\n\t\t\t\t\t\t\tconst errs = Object.values(err);\r\n\t\t\t\t\t\t\terrs.forEach(err => {\r\n\t\t\t\t\t\t\t\topenErrorNotification(err)\r\n\t\t\t\t\t\t\t})\r\n\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t}, [addCategoryState])\r\n\r\n\r\n\r\n\r\n\r\n\tconst onSwitchChange = (checked: any) => {\r\n\t\tsetisparentcategoryChecked(checked)\r\n\t};\r\n\r\n\r\n\tconst handleCancel = (e: any) => {\r\n\t\tsetAddNewCategoryVisible(false);\r\n\t};\r\n\r\n\r\n\tconst getisSubmitButtonDisabled = (values, isValid) => {\r\n\t\tif (!values.name || !isValid) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\r\n\tconst handleImagesDelete = (id) => {\r\n\t\t// @ts-ignore\r\n\t\tconst newImages = myImages && myImages.filter(image => {\r\n\t\t\treturn image.id !== id;\r\n\t\t})\r\n\r\n\t\tsetmyImages(newImages);\r\n\t}\r\n\r\n\r\n\tconst handleThumbnailImageDelete = (id) => {\r\n\t\t// @ts-ignore\r\n\t\tconst newImages = myThumbnailImage && myThumbnailImage.filter(image => {\r\n\t\t\treturn image.id !== id;\r\n\t\t})\r\n\r\n\t\tif (newImages.length > 0) {\r\n\t\t\tsetmyThumbnailImage(newImages);\r\n\r\n\t\t}\r\n\t\telse setmyThumbnailImage(false);\r\n\t}\r\n\r\n\r\n\tconst onChangeSelect = (value) => {\r\n\t\tsetselectedParentId(value);\r\n\t}\r\n\r\n\r\n\r\n\tfunction getBase64(img, callback) {\r\n\t\tconst reader = new FileReader();\r\n\t\treader.addEventListener('load', () => callback(reader.result));\r\n\t\treader.readAsDataURL(img);\r\n\t}\r\n\r\n\r\n\tfunction beforeUpload(file) {\r\n\t\tconst isJpgOrPng = file.type === 'image/jpeg' || file.type === 'image/png';\r\n\t\tif (!isJpgOrPng) {\r\n\t\t\tmessage.error('You can only upload JPG/PNG file!');\r\n\t\t}\r\n\t\tconst isLt2M = file.size / 1024 / 1024 < 2;\r\n\t\tif (!isLt2M) {\r\n\t\t\tmessage.error('Image must smaller than 2MB!');\r\n\t\t}\r\n\r\n\r\n\t\tgetBase64(file, imageUrl => {\r\n\t\t\tsetImageUrl(imageUrl)\r\n\t\t\tsetImagefile(file)\r\n\t\t\tsetLoadingThumbnail(false)\r\n\t\t})\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\r\n\tconst uploadButton = (\r\n\t\t<div>\r\n\t\t\t{loadingThumnail ? <LoadingOutlined /> : <PlusOutlined />}\r\n\t\t\t<div className=\"ant-upload-text\">Upload</div>\r\n\t\t</div>\r\n\t);\r\n\r\n\r\n\r\n\treturn (\r\n\t\t<Formik\r\n\t\t\tonSubmit={(values, actions) => handleSubmit(values, actions)}\r\n\t\t\tvalidationSchema={validationSchema}\r\n\t\t\tvalidateOnBlur={false}\r\n\t\t\tenableReinitialize={true}\r\n\t\t\tinitialValues={\r\n\t\t\t\t{ ...initialValues }\r\n\t\t\t}\r\n\t\t>\r\n\t\t\t{({\r\n\t\t\t\thandleChange,\r\n\t\t\t\tvalues,\r\n\t\t\t\thandleSubmit,\r\n\t\t\t\terrors,\r\n\t\t\t\tisValid,\r\n\t\t\t\tisSubmitting,\r\n\t\t\t\ttouched,\r\n\t\t\t\thandleBlur,\r\n\t\t\t\tsetFieldTouched,\r\n\t\t\t\thandleReset,\r\n\t\t\t}) => (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<Modal\r\n\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\ttop: '40px'\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\ttitle=\"Add New Category\"\r\n\t\t\t\t\t\t\tvisible={addNewCategoryVisible}\r\n\t\t\t\t\t\t\tonOk={(e: any) => handleSubmit(e)}\r\n\t\t\t\t\t\t\tonCancel={handleCancel}\r\n\t\t\t\t\t\t\tokText='Create'\r\n\t\t\t\t\t\t\tokButtonProps={{\r\n\t\t\t\t\t\t\t\tloading: isSubmitting,\r\n\t\t\t\t\t\t\t\thtmlType: \"submit\",\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\tlabel='Name'\r\n\t\t\t\t\t\t\t\tvalue={values.name}\r\n\t\t\t\t\t\t\t\tplaceHolder={'grocery,fashion'}\r\n\t\t\t\t\t\t\t\tname='name'\r\n\t\t\t\t\t\t\t\tisError={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['name'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['name'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('name');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\tlabel='BN Name'\r\n\t\t\t\t\t\t\t\tvalue={values.bnName}\r\n\t\t\t\t\t\t\t\tplaceHolder={'মুদিখানা,ফ্যাশন'}\r\n\t\t\t\t\t\t\t\tname='bnName'\r\n\t\t\t\t\t\t\t\tisError={(touched.bnName && errors.bnName) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['bnName'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.bnName && errors.bnName) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['bnName'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('bnName');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\tlabel='Description'\r\n\t\t\t\t\t\t\t\tvalue={values.description}\r\n\t\t\t\t\t\t\t\tplaceholder={'This category...'}\r\n\t\t\t\t\t\t\t\tname='description'\r\n\t\t\t\t\t\t\t\tisError={(touched.description && errors.description) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['description'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.description && errors.description) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['description'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('description');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\tlabel='BN Description'\r\n\t\t\t\t\t\t\t\tvalue={values.bnDescription}\r\n\t\t\t\t\t\t\t\tplaceholder={'এই ক্যাটাগড়ি...'}\r\n\t\t\t\t\t\t\t\tname='bnDescription'\r\n\t\t\t\t\t\t\t\tisError={(touched.bnDescription && errors.bnDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['bnDescription'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.bnDescription && errors.bnDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['bnDescription'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('bnDescription');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n{/* \r\n<Input\r\n\t\t\t\t\t\t\t\t\t\tlabel='Display Order'\r\n\t\t\t\t\t\t\t\t\t\tvalue={values.displayOrder}\r\n\t\t\t\t\t\t\t\t\t\tplaceHolder={'1,3,7'}\r\n\t\t\t\t\t\t\t\t\t\tname='displayOrder'\r\n\t\t\t\t\t\t\t\t\t\ttype='number'\r\n\t\t\t\t\t\t\t\t\t\tisError={(touched.displayOrder && errors.displayOrder) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['displayOrder'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\terrorString={(touched.displayOrder && errors.displayOrder) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['displayOrder'])}\r\n\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('displayOrder');\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t */}\r\n\r\n\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\tmarginTop: '20px'\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\r\n\t\t\t\t\t\t\t<div className='addproductSection-left-header' >\r\n\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>Icon </h3>\r\n\t\t\t\t\t\t\t\t<Tooltip\r\n\t\t\t\t\t\t\t\t\tplacement=\"left\" title={'Add Icon image for this category'}>\r\n\t\t\t\t\t\t\t\t\t<a href='###'>\r\n\t\t\t\t\t\t\t\t\t\t<InfoCircleOutlined />\r\n\t\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t<Upload\r\n\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\tborderRadius: \"8px\"\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\tname=\"avatar\"\r\n\t\t\t\t\t\t\t\tlistType=\"picture-card\"\r\n\t\t\t\t\t\t\t\tclassName=\"avatar-uploader\"\r\n\t\t\t\t\t\t\t\tshowUploadList={false}\r\n\t\t\t\t\t\t\t\tbeforeUpload={beforeUpload}\r\n\t\t\t\t\t\t\t\tmultiple={false}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t{imageUrl ? <img src={imageUrl} alt=\"avatar\" style={{ width: '100%' }} /> : uploadButton}\r\n\t\t\t\t\t\t\t</Upload>\r\n\r\n\r\n\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\tmarginTop: '10px'\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\r\n\t\t\t\t\t\t\t<div className='addproductSection-left-header' style={{\r\n\t\t\t\t\t\t\t\tmarginBottom: '-5px'\r\n\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>Images</h3>\r\n\t\t\t\t\t\t\t\t<Tooltip\r\n\t\t\t\t\t\t\t\t\tplacement=\"left\" title={'Click on the image to select cover image, By default 1st image is selected as cover'}>\r\n\t\t\t\t\t\t\t\t\t<a href='###'>\r\n\t\t\t\t\t\t\t\t\t\t<InfoCircleOutlined />\r\n\t\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className='aboutToUploadImagesContainer'>\r\n\t\t\t\t\t\t\t\t{myImages &&\r\n\t\t\t\t\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\t\t\t\t\tmyImages.length > 0 && myImages.map((image, index) => {\r\n\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='aboutToUploadImagesContainer__item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='aboutToUploadImagesContainer__item-imgContainer'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => setCoverImageId(image.id)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<img src={image.cover} alt={image.alt} />\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => handleImagesDelete(image.id)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='aboutToUploadImagesContainer__item-remove'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<CloseOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t{coverImageId === image.id ? (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<span className='aboutToUploadImagesContainer__item-cover'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<CheckOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t) : !coverImageId && index === 0 && (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<span className='aboutToUploadImagesContainer__item-cover'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<CheckOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t})}\r\n\r\n\r\n\t\t\t\t\t\t\t\t<Tooltip\r\n\t\t\t\t\t\t\t\t\ttitle={'Attach images'}>\r\n\r\n\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\t\t\tsetvisible(true);\r\n\t\t\t\t\t\t\t\t\t\t\tsetisModalOpenForImages(true);\r\n\t\t\t\t\t\t\t\t\t\t\tsetisModalOpenForThumbnail(false);\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\tclassName='aboutToUploadImagesContainer__uploadItem'>\r\n\t\t\t\t\t\t\t\t\t\t{/* <FileAddOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FileImageTwoTone />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FileImageOutlined /> */}\r\n\t\t\t\t\t\t\t\t\t\t<FileImageFilled />\r\n\t\t\t\t\t\t\t\t\t\t{/* <h5>\r\n\t\t\t\t\t\t\t\t\t\t\t\t     Select From Library\r\n\t\t\t\t\t\t\t\t\t\t\t<     /h5> */}\r\n\t\t\t\t\t\t\t\t\t\t<span className='aboutToUploadImagesContainer__uploadItem-plus'>\r\n\t\t\t\t\t\t\t\t\t\t\t<PlusOutlined />\r\n\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\tlabel='Meta title'\r\n\t\t\t\t\t\t\t\tvalue={values.metaTitle}\r\n\t\t\t\t\t\t\t\tplaceHolder={'category...'}\r\n\t\t\t\t\t\t\t\tname='metaTitle'\r\n\t\t\t\t\t\t\t\tisError={(touched.metaTitle && errors.metaTitle) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['metaTitle'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.metaTitle && errors.metaTitle) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['metaTitle'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('metaTitle')\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\tlabel='BN Meta title'\r\n\t\t\t\t\t\t\t\tvalue={values.bnMetaTitle}\r\n\t\t\t\t\t\t\t\tplaceHolder={'ক্যাটাগড়ি...'}\r\n\t\t\t\t\t\t\t\tname='bnMetaTitle'\r\n\t\t\t\t\t\t\t\tisError={(touched.bnMetaTitle && errors.bnMetaTitle) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['bnMetaTitle'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.bnMetaTitle && errors.bnMetaTitle) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['bnMetaTitle'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('bnMetaTitle');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\tlabel='Meta description'\r\n\t\t\t\t\t\t\t\tvalue={values.metaDescription}\r\n\t\t\t\t\t\t\t\tplaceholder={'meta...'}\r\n\t\t\t\t\t\t\t\tname='metaDescription'\r\n\t\t\t\t\t\t\t\tisError={(touched.metaDescription && errors.metaDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['metaDescription'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.metaDescription && errors.metaDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['metaDescription'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('metaDescription');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\tlabel='BN Meta Description'\r\n\t\t\t\t\t\t\t\tvalue={values.bnMetaDescription}\r\n\t\t\t\t\t\t\t\tplaceholder={'এইয় মেট...'}\r\n\t\t\t\t\t\t\t\tname='bnMetaDescription'\r\n\t\t\t\t\t\t\t\tisError={(touched.bnMetaDescription && errors.bnMetaDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['bnMetaDescription'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.bnMetaDescription && errors.bnMetaDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['bnMetaDescription'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('bnMetaDescription');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\tMeta Tags (grocery,fashion)\r\n\t\t\t\t\t\t\t</h3>\r\n\r\n\t\t\t\t\t\t\t<MetaTags\r\n\t\t\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\t\t\tsetTags={setTags}\r\n\t\t\t\t\t\t\ttags={tags}\r\n\t\t\t\t\t\t\t />\r\n\r\n\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\tmarginTop:'15px'\r\n\t\t\t\t\t\t\t}}></div>\r\n\r\n\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\tBN Meta Tags (মুদিখানা,ফ্যাশন)\r\n\t\t\t\t\t\t\t</h3>\r\n\r\n\t\t\t\t\t\t\t<MetaTags\r\n\t\t\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\t\t\tsetTags={setBnTags}\r\n\t\t\t\t\t\t\ttags={bnTags}\r\n\t\t\t\t\t\t\t />\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t</Modal>\r\n\r\n\t\t\t\t\t\t<MediaLibrary\r\n\t\t\t\t\t\t\tsetvisible={setvisible}\r\n\t\t\t\t\t\t\tvisible={visible}\r\n\t\t\t\t\t\t\tsetmyImages={setmyImages}\r\n\t\t\t\t\t\t\tmyImages={myImages}\r\n\t\t\t\t\t\t\tsetmyThumbnailImage={setmyThumbnailImage}\r\n\t\t\t\t\t\t\tisModalOpenForThumbnail={isModalOpenForThumbnail}\r\n\t\t\t\t\t\t\tisModalOpenForImages={isModalOpenForImages}\r\n\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</>\r\n\t\t\t\t)}\r\n\t\t</Formik>\r\n\r\n\r\n\r\n\r\n\t);\r\n};\r\n\r\nexport default AddNewCategory;\r\n","import React, {useState, useEffect} from 'react';\r\nimport {withRouter} from 'react-router-dom';\r\nimport { Table, notification,  Space, Tag,Button, Input,Tooltip, Popconfirm  } from 'antd';\r\nimport { PlusOutlined, EditOutlined, DeleteOutlined,CheckCircleOutlined } from '@ant-design/icons';\r\n\r\nimport {QuickEdit} from \"../../category\"; \r\nimport AddNewPostCategory from \"./AddNewPostCategory\";\r\n\r\n/// import hooks\r\nimport { useFetch, useHandleFetch } from \"../../../hooks\";\r\n\r\n// import components\r\nimport { DataTableSkeleton } from \"../../../components/Placeholders\";\r\nimport Empty from \"../../../components/Empty\";\r\n\r\nconst { Column, ColumnGroup } = Table;\r\nconst { Search } = Input;\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t  message: message || 'Post Recipe Created',\r\n\t  description: '',\r\n\t  icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n  };\r\n\r\n\r\n  const openErrorNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t  message: message || 'Something Went Wrong',\r\n\t  description: '',\r\n\t  icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n  };\r\n\r\n\r\ninterface myTableProps {\r\n  data: any; \r\n  setcategoryList?:any; \r\n  history?: any; \r\n} \r\n\r\n\r\nconst MyTable = ({data, setcategoryList, history}: myTableProps) => {\r\n    const [visible,setvisible] = useState(false);   \r\n    const [activeCategoryForEdit,setactiveCategoryForEdit] = useState(false); \r\n    const [deleteCategoryState, handleDeleteCategoryFetch] = useHandleFetch({}, 'postCategoryDelete');\r\n      // console.log('activeCategoryForEdit',activeCategoryForEdit); \r\n\r\n\r\n      const handleDeleteCategory = async (id) => {\r\n        const deleteCategoryRes = await handleDeleteCategoryFetch({\r\n          urlOptions: {\r\n            placeHolders: {\r\n              id,\r\n            }\r\n            }\r\n          });\r\n\r\n          \t  // @ts-ignore\r\n\t\t  if(deleteCategoryRes && deleteCategoryRes.status === 'ok'){\r\n\t\t\t  openSuccessNotification('Deleted Recipe Category'); \r\n\t\t\t  const newCategoryList =  data.filter(item => item.id !== id);\r\n\t\t\t  setcategoryList(newCategoryList); \r\n\t\t  }\r\n      }\r\n      \r\n\r\n    return (\r\n        <>\r\n        <Table \r\n        // expandable={{\r\n        //     expandedRowRender: record => <p style={{ margin: 0 }}>{record.name}</p>,\r\n        //     rowExpandable: record => record.name !== 'Not Expandable',\r\n        //   }}\r\n        // bordered={true}\r\n        size='small'\r\n        // pagination={false}\r\n        dataSource={data}\r\n        >\r\n            <Column \r\n          title=\"\"\r\n           dataIndex=\"cover\"\r\n            key=\"id\" \r\n            width={'80px'}\r\n            \r\n           className='classnameofthecolumn'\r\n\r\n            render={(cover,record: any) => (\r\n                <>\r\n                <img src={cover} \r\n                   onClick={() => {\r\n                    history.push(`/admin/posts/category/${record.id}`)\r\n                    // setcategoryDetailVisible(true);\r\n                    setactiveCategoryForEdit(record)\r\n                  }}\r\n                alt='cover img' \r\n                style={{\r\n                    height: '40px',\r\n                    width: '40px',\r\n                    objectFit: \"contain\",\r\n                    borderRadius:'3px',\r\n                    cursor: 'pointer'\r\n                }} />\r\n                </>\r\n              )}\r\n            />\r\n          <Column\r\n           title=\"Name\" \r\n           dataIndex=\"name\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n           render={(text, record: any) => (\r\n            <>\r\n\r\n              <h4\r\n                onClick={() => {\r\n                  history.push(`/admin/posts/category/${record.id}`)\r\n                  // setcategoryDetailVisible(true);\r\n                  setactiveCategoryForEdit(record)\r\n                }}\r\n                style={{\r\n                  fontWeight: 400,\r\n                  color: '#555',\r\n                  cursor: 'pointer'\r\n\r\n                }}>\r\n                {text}\r\n              </h4>\r\n\r\n\r\n            </>\r\n          )}\r\n            />\r\n\r\n\r\n          {/* <Column\r\n           title=\"Description\" \r\n           dataIndex=\"description\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n         \r\n            /> */}\r\n\r\n\r\n         {/* <Column\r\n           title=\"Sub Cateogory\" \r\n           dataIndex=\"subCount\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n         \r\n            /> */}\r\n\r\n        <Column\r\n           title=\"Recipes\" \r\n           dataIndex=\"productCount\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n         \r\n            />\r\n\r\n\r\n\r\n          {/* <Column \r\n          \r\n          className='classnameofthecolumn'\r\n\r\n          title=\"Product\" dataIndex=\"product\" key=\"product\" /> */}\r\n\r\n          {/* <Column \r\n          \r\n          className='classnameofthecolumn'\r\n\r\n          title=\"Sub Category\" dataIndex=\"subCategory\" key=\"subCategory\" /> */}\r\n        \r\n        {/* <Column\r\n          title=\"Tags\"\r\n          dataIndex=\"tags\"\r\n          key=\"tags\"\r\n          render={tags => (\r\n            <>\r\n              {tags.map((tag : any) => (\r\n                <Tag color=\"blue\" key={tag}>\r\n                  {tag}\r\n                </Tag>\r\n              ))}\r\n            </>\r\n          )}\r\n        /> */}\r\n        <Column\r\n        \r\n        className='classnameofthecolumn'\r\n          title=\"\"\r\n          key=\"action\"\r\n          align='right'\r\n          render={(text, record : any) => (\r\n            <Space size=\"middle\">\r\n              <a href='##'>\r\n               <Tooltip placement=\"top\" title='Quick Edit Category'>\r\n              <span className='iconSize' onClick={() => {\r\n                setvisible(true)\r\n                setactiveCategoryForEdit(record); \r\n              }}> \r\n              <EditOutlined />\r\n            \r\n              </span>\r\n               </Tooltip>\r\n               </a>\r\n\r\n\r\n               <Popconfirm \r\n               \r\n               onConfirm={() => handleDeleteCategory(record.id)}\r\n               title=\"Are you sure？\" okText=\"Yes\" cancelText=\"No\">\r\n           \r\n\t\t        <span \r\n             className='iconSize iconSize-danger'\r\n             > \r\n             <DeleteOutlined/>\r\n            </span>\r\n       \r\n           </Popconfirm>\r\n            </Space>\r\n          )}\r\n        />\r\n      </Table>\r\n\r\n    \r\n\r\n    {activeCategoryForEdit &&   <QuickEdit \r\n    setcategoryList={setcategoryList}\r\n    categoryList={data}\r\n    setvisible={setvisible}\r\n    visible={visible}\r\n    category={activeCategoryForEdit}/>}\r\n    \r\n    </>\r\n    )\r\n}\r\n\r\n\r\ninterface Props {\r\n    history: any; \r\n}\r\n\r\nconst CategoryList = ({history}: Props) => {\r\n\r\n  const [categoryState, handleCategoryListFetch] = useHandleFetch({}, 'postCategoryList');\r\n  const [categoryList,setcategoryList] = useState([]); \r\n\r\n\r\n  useEffect(()=>{\r\n   const setCategories = async () => {\r\n     const categories = await handleCategoryListFetch({\r\n      urlOptions: {\r\n        params: {\r\n          isSubCategory: true,\r\n          productCountValue: true \r\n        },\r\n      },\r\n     }); \r\n     // @ts-ignore\r\n     setcategoryList(categories); \r\n   }\r\n   setCategories(); \r\n  },[])\r\n\r\n\r\n  \r\n  const [addNewCategoryVisible,setAddNewCategoryVisible] = useState(false);   \r\n\r\n  const handleOkAddNewCategory = (e: any) => {\r\n    setAddNewCategoryVisible(false);\r\n  };\r\n\r\n  const handleCancelAddNewCategory = (e: any) => {\r\n    setAddNewCategoryVisible(false);\r\n  };\r\n\r\n  // console.log('categoryState',categoryState); \r\n\r\n  \r\n\r\n  const handleSearch = (value) => {\r\n    if(categoryState.data.length > 0 ){\r\n      const newCategoryList = categoryState.data.filter(item => item.name.toLowerCase().includes(value.toLowerCase())); \r\n      setcategoryList(newCategoryList); \r\n    }\r\n     \r\n  }\r\n\r\n\r\n\r\n  console.log('postCategoryList', categoryState);\r\n\r\n\treturn (\r\n\t\t<>\r\n    {/* <h2 className='containerPageTitle'>\r\n      Categories\r\n    </h2> */}\r\n    <div className='categoryListContainer'>\r\n            <div className='categoryListContainer__header'>\r\n           \r\n\r\n          <div className='categoryListContainer__header-searchBar'>\r\n          <h2 className='categoryListContainer__header-title'>\r\n              Recipe Categories\r\n          </h2>\r\n\r\n\r\n          <Search\r\n            enterButton={false}\r\n            className='searchbarClassName'\r\n          placeholder=\"search recipe categories..\"\r\n          onSearch={value => handleSearch(value)}\r\n        />\r\n          </div>\r\n            <Button\r\n          // type=\"primary\"\r\n          className='btnPrimaryClassNameoutline'\r\n          icon={<PlusOutlined />}\r\n          onClick={() => setAddNewCategoryVisible(true)}\r\n        >\r\n            Add New\r\n        </Button>\r\n            </div>\r\n\r\n            <div className='categoryListContainer__afterHeader'>\r\n            {/* <Search\r\n                placeholder=\"search categories..\"\r\n                size=\"large\"\r\n                onSearch={value => console.log(value)}\r\n                style={{ width: 300 }}\r\n           /> */}\r\n            </div>\r\n\r\n     \r\n\t\t\t\r\n\t\t\t<div className='categoryListContainer__categoryList'>\r\n        {categoryState.done && categoryList.length > 0 && <MyTable \r\n        history={history}\r\n        setcategoryList={setcategoryList}\r\n        data={categoryList} />}\r\n        {categoryState.isLoading && <DataTableSkeleton />}\r\n\r\n        {categoryState.done && !(categoryList.length > 0) && (\r\n\t\t\t<div style={{\r\n\t\t\t\tmarginTop: '50px'\r\n\t\t\t}}>\r\n\t\t\t\t<Empty title='No Recipe Category found'   />\r\n\t\t\t</div>\r\n\t\t)}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\r\n\r\n        {categoryState.done && \r\n          <AddNewPostCategory \r\n          addNewCategoryVisible={addNewCategoryVisible} \r\n          setAddNewCategoryVisible={setAddNewCategoryVisible}\r\n          categoryList={categoryList}\r\n          setcategoryList={setcategoryList}\r\n          \r\n           />}\r\n\r\n      \r\n\r\n        \r\n    </>\r\n\t);\r\n};\r\n\r\nexport default withRouter(CategoryList);\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n\r\nimport { useHandleFetch } from '../../../hooks';\r\n// import third party ui lib\r\nimport { Switch, Select, notification, Modal, Tooltip, Upload, message } from 'antd';\r\n\r\nimport {\r\n\tDeleteOutlined,\r\n\tFileAddOutlined,\r\n\tFileImageFilled,\r\n\tPlusOutlined,\r\n\tCheckCircleOutlined,\r\n\tCloseOutlined,\r\n\tCheckOutlined,\r\n\tInfoCircleOutlined,\r\n\tLoadingOutlined\r\n} from '@ant-design/icons';\r\n\r\n\r\n\r\n// import ReactQuill from 'react-quill';\r\n// import 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../../components/Field/Input';\r\nimport TextArea from '../../../components/Field/TextArea';\r\nimport MediaLibrary from \"../../../components/MediaLibrary\";\r\nimport MetaTags from \"./MetaTags\";\r\n\r\n\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n\tname: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t\tmessage: message || 'Category Updated',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n\tnotification.error({\r\n\t\tmessage: message || 'Something Went Wrong',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n};\r\n\r\n\r\n\r\n\r\n\r\nconst initialValues = {\r\n\tname: '',\r\n\tbnName: '',\r\n\tdescription: '',\r\n\tbnDescription: '',\r\n\tmetaTitle: '',\r\n\tbnMetaTitle: '',\r\n\tmetaDescription: '',\r\n\tbnMetaDescription: '',\r\n\tmetaTags: '',\r\n\tbnMetaTags: '',\r\n\timage: [],\r\n\turl: '',\r\n\tcover: '',\r\n\tdisplayOrder: '',\r\n}\r\n\r\nconst { Option } = Select;\r\n\r\ninterface Props {\r\n\taddNewCategoryVisible: any;\r\n\tsetAddNewCategoryVisible: any;\r\n    categoryDetailData?:any; \r\n    setcategoryDetailData?:any; \r\n}\r\n\r\nconst AddNewCategory = ({ \r\n    addNewCategoryVisible, \r\n    setAddNewCategoryVisible, \r\n    categoryDetailData, setcategoryDetailData }: Props) => {\r\n\r\n\tconst [addCategoryState, handleAddCategoryFetch] = useHandleFetch({}, 'postCategoryUpdate');\r\n\tconst [updateCategoryIconState, handleUpdateCategoryIconFetch] = useHandleFetch({}, 'categoryUpdateIcon');\r\n\tconst [attachImageToItemMultipleState, handleAttachImageToItemMultipleFetch] = useHandleFetch({}, 'attachImageToItemMultiple');\r\n    const [attachImageToItemSingleState, handleAttachImageToItemSingleFetch] = useHandleFetch({}, 'attachImageToItemSingle');\r\n    const [detachImageFromItemMultipleState, handleDetachImageFromItemMultipleFetch] = useHandleFetch({}, 'detachImageFromItemMultiple');\r\n    const [detachImageFromItemSingleState, handleDetachImageFromItemSingleFetch] = useHandleFetch({}, 'detachImageFromItemSingle');\r\n    const [setImageAsThumbnailToItemState, handleSetImageAsThumbnailToItemFetch] = useHandleFetch({}, 'setImageAsThumbnailToItem');\r\n\r\n\tconst [visible, setvisible] = useState(false);\r\n\tconst [myThumbnailImage, setmyThumbnailImage] = useState(false);\r\n\tconst [isparentCategoryChecked, setisparentcategoryChecked] = useState(true);\r\n\tconst [isModalOpenForThumbnail, setisModalOpenForThumbnail] = useState(false);\r\n\tconst [isModalOpenForImages, setisModalOpenForImages] = useState(false);\r\n\tconst [selectedParentId, setselectedParentId] = useState('');\r\n\tconst [imageUrl, setImageUrl] = useState('');\r\n\tconst [loadingThumnail, setLoadingThumbnail] = useState(false);\r\n\tconst [imageFile, setImagefile] = useState('');\r\n\tconst [tags,setTags] = useState([]);\r\n\tconst [bnTags,setBnTags] = useState([]);\r\n\tconst [myImages, setmyImages] = useState(false);\r\n    const [coverImageId, setCoverImageId] = useState('');\r\n    const [myGoddamnImages, setMyGoddamnImages] = useState([]);\r\n\r\n\tconst handleSubmit = async (values: any, actions: any) => {\r\n\t\t// @ts-ignore\r\n\t\tconst imagesIds = myImages ? myImages.map(image => {\r\n\t\t\treturn image.id;\r\n\t\t}) : [];\r\n\r\n\t\tconst formData = new FormData();\r\n\r\n\t\tformData.append(\"name\", values.name.trim());\r\n\t\tformData.append(\"description\", values.description);\r\n\t\tformData.append(\"image\", JSON.stringify(imagesIds));\r\n\t\tformData.append(\"cover\", coverImageId || imagesIds[0] ? imagesIds[0] : '');\r\n\t\tformData.append(\"parent\", selectedParentId);\r\n\t\tformData.append('icon', imageFile)\r\n\t\tformData.append('displayOrder', values.displayOrder)\r\n\r\n\r\n\t\tconsole.log('categoryDetailData',categoryDetailData); \r\n\t\tconsole.log('imagesIds',imagesIds); \r\n\t\t\r\n\t\t\r\n\t\tif (categoryDetailData && Object.keys(categoryDetailData).length > 0) {\r\n\t\t\tconst aboutToUpdatedImageIds = []; \r\n\r\n\t\t\tif(imagesIds && imagesIds.length > 0){\r\n\t\t\t\timagesIds.forEach(imageId => {\r\n\t\t\t\t\tif(categoryDetailData && categoryDetailData['image']){\r\n\t\t\t\t\t\tif(!categoryDetailData['image'].includes(imageId)){\r\n\t\t\t\t\t\t\taboutToUpdatedImageIds.push(imageId)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n      \r\n            if (aboutToUpdatedImageIds[0] && aboutToUpdatedImageIds.length > 1) {\r\n                await handleAttachImageToItemMultipleFetch({\r\n                    urlOptions: {\r\n                        placeHolders: {\r\n                            collection: 'category',\r\n                            itemId: categoryDetailData.id\r\n                        }\r\n                    },\r\n                    body: {\r\n                        image: aboutToUpdatedImageIds\r\n                    }\r\n                });\r\n            }\r\n            else if (aboutToUpdatedImageIds[0] && aboutToUpdatedImageIds.length < 1) {\r\n                await handleAttachImageToItemSingleFetch({\r\n                    urlOptions: {\r\n                        placeHolders: {\r\n                            imageId: aboutToUpdatedImageIds[0].id,\r\n                            collection: 'category',\r\n                            itemId: categoryDetailData.id\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n\t\t}\r\n\t\t\r\n\r\n\r\n\t\tconst addCategoryRes = await handleAddCategoryFetch({\r\n            urlOptions: {\r\n                placeHolders: {\r\n                    id: categoryDetailData.id\r\n                },\r\n            },\r\n            body: {\r\n                name: values.name.trim(),\r\n                description: values.description,\r\n                image: imagesIds,\r\n                cover: coverImageId || imagesIds[0] ? imagesIds[0] : '',\r\n                parent: selectedParentId,\r\n                icon: imageFile,\r\n                metaTitle: values.metaTitle,\r\n\t\t\t\tmetaDescription: values.metaDescription,\r\n\t\t\t\tdisplayOrder: values.displayOrder,\r\n                metaTags:  tags && tags.length > 0 ?  tags.join(',') : '',\r\n                bn: {\r\n                    metaTitle: values.bnMetaTitle,\r\n                    metaDescription: values.bnMetaDescription,\r\n\t\t\t\t\tmetaTags:  bnTags && bnTags.length > 0 ?  bnTags.join(',') : '',\r\n                    name: values.bnName.trim(),\r\n                    description: values.bnDescription,\r\n                }\r\n            },\r\n\t\t});\r\n\r\n\t\t// @ts-ignore\r\n\t\tif (addCategoryRes && addCategoryRes.status === 'ok') {\r\n\t\t\topenSuccessNotification('Category Updated!');\r\n\t\t\tsetAddNewCategoryVisible(false)\r\n\r\n\t\t\t// setcategoryList([{\r\n\t\t\t// \tid: addCategoryRes['_id'] || '',\r\n\t\t\t// \tkey: addCategoryRes['_id'] || '',\r\n\t\t\t// \tname: addCategoryRes['name'] || '',\r\n\t\t\t// \tdescription: addCategoryRes['description'] || '',\r\n\t\t\t// \tcover: addCategoryRes['cover'] || '',\r\n\t\t\t// \t// @ts-ignore\r\n\t\t\t// \t...addCategoryRes\r\n\t\t\t// },...categoryList]); \r\n\r\n\t\t\t\r\n\r\n            setcategoryDetailData({\r\n\t\t\t\t...categoryDetailData,\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\t...addCategoryRes\r\n            }); \r\n\r\n            \r\n    \r\n\t\t\tactions.resetForm();\r\n\t\t\t// @ts-ignore\r\n\t\t\tsetmyImages([]);\r\n\t\t\tsetCoverImageId('')\r\n\t\t\tsetselectedParentId('')\r\n\t\t\tsetisparentcategoryChecked(true);\r\n\t\t\tsetImageUrl('');\r\n\t\t}\r\n\t\telse {\r\n\t\t\topenErrorNotification();\r\n\t\t}\r\n\r\n\t\tactions.setSubmitting(false);\r\n\t};\r\n\r\n    useEffect(() => {\r\n        if (categoryDetailData && Object.keys(categoryDetailData).length > 0) {\r\n\r\n            const images = categoryDetailData.image;\r\n            if (images && images.length > 0) {\r\n                setmyImages(images);\r\n                setMyGoddamnImages(images);\r\n            }\r\n\r\n            if (categoryDetailData.cover && categoryDetailData.cover['id']) {\r\n                // @ts-ignore\r\n                setmyImages([categoryDetailData.cover, ...images]);\r\n                setCoverImageId(categoryDetailData.cover['id']);\r\n            }\r\n\r\n        }\r\n    }, [categoryDetailData]); \r\n\r\n\r\n    useEffect(() => {\r\n        // @ts-ignore\r\n        if (myImages && myImages[0] && myImages.length < 2) {\r\n\r\n            if (coverImageId !== myImages[0].id) {\r\n                setCoverImageId(myImages[0].id);\r\n                handleSetImageAsThumnail(myImages[0]);\r\n            }\r\n\r\n        }\r\n\r\n    }, [myImages])\r\n\r\n\r\n    const handleDetachSingleImage = async id => {\r\n        await handleDetachImageFromItemSingleFetch({\r\n            urlOptions: {\r\n                placeHolders: {\r\n                    imageId: id,\r\n                    collection: 'category',\r\n                    itemId: categoryDetailData.id\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n\r\n\r\n    const handleSetImageAsThumnail = async image => {\r\n\r\n        const thumbnailRes = await handleSetImageAsThumbnailToItemFetch({\r\n            urlOptions: {\r\n                placeHolders: {\r\n                    imageId: image.id,\r\n                    collection: 'category',\r\n                    itemId: categoryDetailData.id\r\n                }\r\n            }\r\n        });\r\n\r\n\r\n        // @ts-ignore\r\n        if (thumbnailRes && thumbnailRes.status === 'ok') {\r\n            openSuccessNotification('Set as thumbnail!')\r\n            // const positionInBrand = () => {\r\n            //     return brandList.map(item => item.id).indexOf(categoryDetailData.id);\r\n            // }\r\n\r\n            // const index = positionInBrand();\r\n\r\n            // const prevItem = brandList.find(item => item.id === productRecord.id);\r\n\r\n            // if (prevItem) {\r\n            //     const updatedItem = Object.assign({}, brandList[index], { ...prevItem, cover: image.cover });\r\n            //     const updateBrandList = [...brandList.slice(0, index), updatedItem, ...brandList.slice(index + 1)];\r\n            //     setBrandList(updateBrandList);\r\n            // }\r\n        }\r\n        else {\r\n            openErrorNotification(\"Couldn't set as thumbnail, Something went wrong\")\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n    \r\n    const handleImagesDelete = (id) => {\r\n        // @ts-ignore\r\n        const newImages = myImages && myImages.filter(image => {\r\n            return image.id !== id;\r\n        })\r\n\r\n        setmyImages(newImages);\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\tconst onSwitchChange = (checked: any) => {\r\n\t\tsetisparentcategoryChecked(checked)\r\n\t};\r\n\r\n\r\n\tconst handleCancel = (e: any) => {\r\n\t\tsetAddNewCategoryVisible(false);\r\n\t};\r\n\r\n\r\n\tconst getisSubmitButtonDisabled = (values, isValid) => {\r\n\t\tif (!values.name || !isValid) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\r\n\r\n\r\n\tconst handleThumbnailImageDelete = (id) => {\r\n\t\t// @ts-ignore\r\n\t\tconst newImages = myThumbnailImage && myThumbnailImage.filter(image => {\r\n\t\t\treturn image.id !== id;\r\n\t\t})\r\n\r\n\t\tif (newImages.length > 0) {\r\n\t\t\tsetmyThumbnailImage(newImages);\r\n\r\n\t\t}\r\n\t\telse setmyThumbnailImage(false);\r\n\t}\r\n\r\n\r\n\tconst onChangeSelect = (value) => {\r\n\t\tsetselectedParentId(value);\r\n\t}\r\n\r\n\r\n\r\n\tfunction getBase64(img, callback) {\r\n\t\tconst reader = new FileReader();\r\n\t\treader.addEventListener('load', () => callback(reader.result));\r\n\t\treader.readAsDataURL(img);\r\n\t}\r\n\r\n\r\n\tfunction beforeUpload(file) {\r\n\t\tconst isJpgOrPng = file.type === 'image/jpeg' || file.type === 'image/png';\r\n\t\tif (!isJpgOrPng) {\r\n\t\t\tmessage.error('You can only upload JPG/PNG file!');\r\n\t\t}\r\n\t\tconst isLt2M = file.size / 1024 / 1024 < 2;\r\n\t\tif (!isLt2M) {\r\n\t\t\tmessage.error('Image must smaller than 2MB!');\r\n\t\t}\r\n\r\n\r\n\t\tgetBase64(file, imageUrl => {\r\n\t\t\tsetImageUrl(imageUrl)\r\n\t\t\tsetImagefile(file)\r\n\t\t\tconst setNewIcon  = async () => {\r\n\t\t\t\tconst formData = new FormData();\r\n\t\t\t\tformData.append('icon',file); \r\n\t\t\t\t// const addCategoryRes = await handleAddCategoryFetch({\r\n\t\t\t\t// \tbody: formData,\r\n\t\t\t\t// });\r\n\t\t\t\tconst res = await handleUpdateCategoryIconFetch({\r\n\t\t\t\t\turlOptions: {\r\n\t\t\t\t\t\tplaceHolders: {\r\n\t\t\t\t\t\t\tid: categoryDetailData.id\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t},\r\n\t\t\t\t\tbody: formData\r\n\t\t\t\t}); \r\n\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\tif(res && res.status === 'ok'){\r\n\t\t\t\t\topenSuccessNotification('Category Icon updated!')\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\topenErrorNotification(\"Couldn't update category icon, Something went wrong\")\r\n\t\t\t\t}\r\n\r\n\t\t\t\t\r\n\t\t\t}; \r\n\t\t\t\r\n\t\t\tsetNewIcon();\r\n\t\t\tsetLoadingThumbnail(false)\r\n\t\t})\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\r\n\r\n\tconst uploadButton = (\r\n\t\t<div>\r\n\t\t\t{loadingThumnail ? <LoadingOutlined /> : <PlusOutlined />}\r\n\t\t\t<div className=\"ant-upload-text\">Upload</div>\r\n\t\t</div>\r\n\t);\r\n\r\n\r\n\r\n\tuseEffect(()=>{\r\n\r\n        if(categoryDetailData && Object.keys(categoryDetailData).length > 0){\r\n            const iconUrl = categoryDetailData.icon && categoryDetailData.icon; \r\n\r\n\t\t\tsetImageUrl(iconUrl); \r\n        }\r\n\r\n    },[])\r\n    \r\n    useEffect(()=>{\r\n\r\n        if(categoryDetailData && Object.keys(categoryDetailData).length > 0){\r\n            const metaTags = categoryDetailData.metaTags && categoryDetailData.metaTags.split(','); \r\n\r\n            console.log('localMetaTags',metaTags);\r\n           \r\n            const bnMetaTags = categoryDetailData.bn && categoryDetailData.bn['metaTags'] && categoryDetailData.bn['metaTags'].split(','); \r\n            setTags(metaTags)\r\n            setBnTags(bnMetaTags)\r\n        }\r\n\r\n    },[])\r\n\r\n\r\n\tconsole.log('addnewCategoryTags',tags);\r\n\tconsole.log('categoryDetailData',categoryDetailData);\r\n\tconsole.log('myImages',myImages);\r\n\r\n\treturn (\r\n\t\t<Formik\r\n\t\t\tonSubmit={(values, actions) => handleSubmit(values, actions)}\r\n\t\t\tvalidationSchema={validationSchema}\r\n\t\t\tvalidateOnBlur={false}\r\n\t\t\tenableReinitialize={true}\r\n\t\t\tinitialValues={\r\n                \r\n                { ...initialValues,\r\n                    ...categoryDetailData,\r\n                    ...( categoryDetailData && Object.keys(categoryDetailData).length > 0 && {\r\n                        bnMetaTitle: categoryDetailData['bn']\r\n                        && categoryDetailData['bn'].metaTitle\r\n                        && categoryDetailData['bn'].metaTitle,\r\n                        bnMetaDescription: categoryDetailData['bn'] &&  categoryDetailData['bn'].metaDescription && categoryDetailData['bn'].metaDescription,\r\n                        bnName: categoryDetailData['bn'] && categoryDetailData['bn'].name && categoryDetailData['bn'].name,\r\n                        bnDescription: categoryDetailData['bn'] && categoryDetailData['bn'].description && categoryDetailData['bn'].description,\r\n                    })\r\n                 }\r\n\t\t\t}\r\n\t\t>\r\n\t\t\t{({\r\n\t\t\t\thandleChange,\r\n\t\t\t\tvalues,\r\n\t\t\t\thandleSubmit,\r\n\t\t\t\terrors,\r\n\t\t\t\tisValid,\r\n\t\t\t\tisSubmitting,\r\n\t\t\t\ttouched,\r\n\t\t\t\thandleBlur,\r\n\t\t\t\tsetFieldTouched,\r\n\t\t\t\thandleReset,\r\n\t\t\t}) => (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<Modal\r\n\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\ttop: '40px'\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\ttitle=\"Edit Category\"\r\n\t\t\t\t\t\t\tvisible={addNewCategoryVisible}\r\n\t\t\t\t\t\t\tonOk={(e: any) => handleSubmit(e)}\r\n\t\t\t\t\t\t\tonCancel={handleCancel}\r\n\t\t\t\t\t\t\tokText='Update'\r\n\t\t\t\t\t\t\tokButtonProps={{\r\n\t\t\t\t\t\t\t\tloading: isSubmitting,\r\n\t\t\t\t\t\t\t\thtmlType: \"submit\",\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\tlabel='Name'\r\n\t\t\t\t\t\t\t\tvalue={values.name}\r\n\t\t\t\t\t\t\t\tplaceHolder={'grocery,fashion'}\r\n\t\t\t\t\t\t\t\tname='name'\r\n\t\t\t\t\t\t\t\tisError={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['name'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['name'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('name');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\tlabel='BN Name'\r\n\t\t\t\t\t\t\t\tvalue={values.bnName}\r\n\t\t\t\t\t\t\t\tplaceHolder={'মুদিখানা,ফ্যাশন'}\r\n\t\t\t\t\t\t\t\tname='bnName'\r\n\t\t\t\t\t\t\t\tisError={(touched.bnName && errors.bnName) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['bnName'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.bnName && errors.bnName) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['bnName'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('bnName');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\tlabel='Description'\r\n\t\t\t\t\t\t\t\tvalue={values.description}\r\n\t\t\t\t\t\t\t\tplaceholder={'This category...'}\r\n\t\t\t\t\t\t\t\tname='description'\r\n\t\t\t\t\t\t\t\tisError={(touched.description && errors.description) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['description'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.description && errors.description) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['description'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('description');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\tlabel='BN Description'\r\n\t\t\t\t\t\t\t\tvalue={values.bnDescription}\r\n\t\t\t\t\t\t\t\tplaceholder={'এই ক্যাটাগড়ি...'}\r\n\t\t\t\t\t\t\t\tname='bnDescription'\r\n\t\t\t\t\t\t\t\tisError={(touched.bnDescription && errors.bnDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['bnDescription'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.bnDescription && errors.bnDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['bnDescription'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('bnDescription');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\tmarginTop: '20px'\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\r\n\t\t\t\t\t\t\t<div className='addproductSection-left-header' >\r\n\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>Icon </h3>\r\n\t\t\t\t\t\t\t\t<Tooltip\r\n\t\t\t\t\t\t\t\t\tplacement=\"left\" title={'Add Icon image for this category'}>\r\n\t\t\t\t\t\t\t\t\t<a href='###'>\r\n\t\t\t\t\t\t\t\t\t\t<InfoCircleOutlined />\r\n\t\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t<Upload\r\n\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\tborderRadius: \"8px\"\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\tname=\"avatar\"\r\n\t\t\t\t\t\t\t\tlistType=\"picture-card\"\r\n\t\t\t\t\t\t\t\tclassName=\"avatar-uploader\"\r\n\t\t\t\t\t\t\t\tshowUploadList={false}\r\n\t\t\t\t\t\t\t\tbeforeUpload={beforeUpload}\r\n\t\t\t\t\t\t\t\tmultiple={false}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t{imageUrl ? <img src={imageUrl} alt=\"avatar\" style={{ width: '100%' }} /> : uploadButton}\r\n\t\t\t\t\t\t\t</Upload>\r\n\r\n\r\n\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\tmarginTop: '20px'\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\r\n<div className='addproductSection-left-header'\r\n\r\n                                style={{\r\n                                    marginBottom: '-5px'\r\n                                }}\r\n                            >\r\n                                <h3 className='inputFieldLabel'>Images</h3>\r\n                                {/* <div  >\r\n\t\t\t\t\t<FileOutlined />\r\n\t\t\t\t\t<span>Media Center</span>\r\n\t\t\t\t</div> */}\r\n                            </div>\r\n\r\n\r\n                            <div className='aboutToUploadImagesContainer'>\r\n\r\n                                {categoryDetailData && Object.keys(categoryDetailData).length > 0 && (\r\n                                    <>\r\n                                        {myImages &&\r\n                                            // @ts-ignore\r\n                                            myImages.length > 0 && myImages.map((image, index) => {\r\n                                                return (\r\n                                                    <div className='aboutToUploadImagesContainer__item'>\r\n                                                        <div\r\n                                                            className='aboutToUploadImagesContainer__item-imgContainer'\r\n                                                            onClick={() => {\r\n                                                                setCoverImageId(image.id);\r\n                                                                handleSetImageAsThumnail(image);\r\n                                                            }}\r\n                                                        >\r\n                                                            <img src={image.cover} alt={image.alt} />\r\n                                                        </div>\r\n\r\n                                                        <span\r\n                                                            onClick={() => {\r\n                                                                handleImagesDelete(image.id)\r\n                                                                handleDetachSingleImage(image.id)\r\n                                                            }\r\n\r\n                                                            }\r\n                                                            className='aboutToUploadImagesContainer__item-remove'>\r\n                                                            <CloseOutlined />\r\n                                                        </span>\r\n\r\n\r\n                                                        {coverImageId === image.id ? (\r\n                                                            <span className='aboutToUploadImagesContainer__item-cover'>\r\n                                                                <CheckOutlined />\r\n                                                            </span>\r\n                                                        ) : !coverImageId && index === 0 && (\r\n                                                            <span className='aboutToUploadImagesContainer__item-cover'>\r\n                                                                <CheckOutlined />\r\n                                                            </span>\r\n                                                        )}\r\n\r\n\r\n                                                    </div>\r\n                                                )\r\n                                            })}\r\n\r\n\r\n                                        <Tooltip\r\n                                            title={'Attach images'}>\r\n\r\n                                            <div\r\n                                                onClick={() => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetvisible(true);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetisModalOpenForImages(true);\r\n                                                }}\r\n                                                className='aboutToUploadImagesContainer__uploadItem'>\r\n                                                {/* <FileAddOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FileImageTwoTone />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FileImageOutlined /> */}\r\n                                                <FileImageFilled />\r\n                                                {/* <h5>\r\n\t\t\t\t\t\t\t\t\t\t\t\t     Select From Library\r\n\t\t\t\t\t\t\t\t\t\t\t<     /h5> */}\r\n                                                <span className='aboutToUploadImagesContainer__uploadItem-plus'>\r\n                                                    <PlusOutlined />\r\n                                                </span>\r\n                                            </div>\r\n                                        </Tooltip>\r\n                                    </>\r\n                                )}\r\n\r\n\r\n                            </div>\r\n                            \r\n\r\n\r\n\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\tlabel='Meta title'\r\n\t\t\t\t\t\t\t\tvalue={values.metaTitle}\r\n\t\t\t\t\t\t\t\tplaceHolder={'category...'}\r\n\t\t\t\t\t\t\t\tname='metaTitle'\r\n\t\t\t\t\t\t\t\tisError={(touched.metaTitle && errors.metaTitle) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['metaTitle'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.metaTitle && errors.metaTitle) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['metaTitle'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('metaTitle')\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\tlabel='BN Meta title'\r\n\t\t\t\t\t\t\t\tvalue={values.bnMetaTitle}\r\n\t\t\t\t\t\t\t\tplaceHolder={'ক্যাটাগড়ি...'}\r\n\t\t\t\t\t\t\t\tname='bnMetaTitle'\r\n\t\t\t\t\t\t\t\tisError={(touched.bnMetaTitle && errors.bnMetaTitle) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['bnMetaTitle'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.bnMetaTitle && errors.bnMetaTitle) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['bnMetaTitle'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('bnMetaTitle');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\tlabel='Meta description'\r\n\t\t\t\t\t\t\t\tvalue={values.metaDescription}\r\n\t\t\t\t\t\t\t\tplaceholder={'meta...'}\r\n\t\t\t\t\t\t\t\tname='metaDescription'\r\n\t\t\t\t\t\t\t\tisError={(touched.metaDescription && errors.metaDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['metaDescription'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.metaDescription && errors.metaDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['metaDescription'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('metaDescription');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\tlabel='BN Meta Description'\r\n\t\t\t\t\t\t\t\tvalue={values.bnMetaDescription}\r\n\t\t\t\t\t\t\t\tplaceholder={'এইয় মেট...'}\r\n\t\t\t\t\t\t\t\tname='bnMetaDescription'\r\n\t\t\t\t\t\t\t\tisError={(touched.bnMetaDescription && errors.bnMetaDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['bnMetaDescription'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.bnMetaDescription && errors.bnMetaDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['bnMetaDescription'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('bnMetaDescription');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\tMeta Tags (grocery,fashion)\r\n\t\t\t\t\t\t\t</h3>\r\n\r\n\t\t\t\t\t\t\t<MetaTags\r\n\t\t\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\t\t\tsetTags={setTags}\r\n\t\t\t\t\t\t\ttags={tags}\r\n\t\t\t\t\t\t\t />\r\n\r\n\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\tmarginTop:'15px'\r\n\t\t\t\t\t\t\t}}></div>\r\n\r\n\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\tBN Meta Tags (মুদিখানা,ফ্যাশন)\r\n\t\t\t\t\t\t\t</h3>\r\n\r\n\t\t\t\t\t\t\t<MetaTags\r\n\t\t\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\t\t\tsetTags={setBnTags}\r\n\t\t\t\t\t\t\ttags={bnTags}\r\n\t\t\t\t\t\t\t />\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t</Modal>\r\n\r\n\t\t\t\t\t\t<MediaLibrary\r\n\t\t\t\t\t\t\tsetvisible={setvisible}\r\n\t\t\t\t\t\t\tvisible={visible}\r\n\t\t\t\t\t\t\tsetmyImages={setmyImages}\r\n\t\t\t\t\t\t\tmyImages={myImages}\r\n\t\t\t\t\t\t\tsetmyThumbnailImage={setmyThumbnailImage}\r\n\t\t\t\t\t\t\tisModalOpenForThumbnail={isModalOpenForThumbnail}\r\n\t\t\t\t\t\t\tisModalOpenForImages={isModalOpenForImages}\r\n\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</>\r\n\t\t\t\t)}\r\n\t\t</Formik>\r\n\r\n\t);\r\n};\r\n\r\nexport default AddNewCategory;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n\r\nimport { useHandleFetch } from '../../../hooks';\r\n// import third party ui lib\r\nimport { Switch, Select, notification, Modal, Tooltip, Upload, message } from 'antd';\r\n\r\nimport {\r\n\tDeleteOutlined,\r\n\tFileAddOutlined,\r\n\tFileImageFilled,\r\n\tPlusOutlined,\r\n\tCheckCircleOutlined,\r\n\tCloseOutlined,\r\n\tCheckOutlined,\r\n\tInfoCircleOutlined,\r\n\tLoadingOutlined\r\n} from '@ant-design/icons';\r\n\r\n\r\n// import ReactQuill from 'react-quill';\r\n// import 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../../components/Field/Input';\r\nimport TextArea from '../../../components/Field/TextArea';\r\nimport MediaLibrary from \"../../../components/MediaLibrary\";\r\nimport MetaTags from \"./MetaTags\";\r\n\r\n\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n\tname: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t\tmessage: message || 'Category Updated',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n\tnotification.error({\r\n\t\tmessage: message || 'Something Went Wrong',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n};\r\n\r\n\r\n\r\n\r\n\r\nconst initialValues = {\r\n\tname: '',\r\n\tbnName: '',\r\n\tdescription: '',\r\n\tbnDescription: '',\r\n\tmetaTitle: '',\r\n\tbnMetaTitle: '',\r\n\tmetaDescription: '',\r\n\tbnMetaDescription: '',\r\n\tmetaTags: '',\r\n\tbnMetaTags: '',\r\n\timage: [],\r\n\turl: '',\r\n\tcover: '',\r\n\tdisplayOrder: null\r\n}\r\n\r\nconst { Option } = Select;\r\n\r\ninterface Props {\r\n\taddNewCategoryVisible: any;\r\n\tsetAddNewCategoryVisible: any;\r\n\tcategoryList?: any;\r\n    setcategoryList?: any;\r\n    categoryDetailData?:any; \r\n}\r\n\r\nconst AddNewCategory = ({ \r\n    addNewCategoryVisible, \r\n    setAddNewCategoryVisible, \r\n    categoryList, setcategoryList,\r\n    categoryDetailData }: Props) => {\r\n\r\n\tconst [addCategoryState, handleAddCategoryFetch] = useHandleFetch({}, 'postCategoryUpdate');\r\n\tconst [updateCategoryIconState, handleUpdateCategoryIconFetch] = useHandleFetch({}, 'categoryUpdateIcon', 'form');\r\n\tconst [attachImageToItemMultipleState, handleAttachImageToItemMultipleFetch] = useHandleFetch({}, 'attachImageToItemMultiple');\r\n    const [attachImageToItemSingleState, handleAttachImageToItemSingleFetch] = useHandleFetch({}, 'attachImageToItemSingle');\r\n    const [detachImageFromItemMultipleState, handleDetachImageFromItemMultipleFetch] = useHandleFetch({}, 'detachImageFromItemMultiple');\r\n    const [detachImageFromItemSingleState, handleDetachImageFromItemSingleFetch] = useHandleFetch({}, 'detachImageFromItemSingle');\r\n    const [setImageAsThumbnailToItemState, handleSetImageAsThumbnailToItemFetch] = useHandleFetch({}, 'setImageAsThumbnailToItem');\r\n\r\n\r\n\t\r\n\tconst [visible, setvisible] = useState(false);\r\n\tconst [myImages, setmyImages] = useState(false);\r\n\tconst [myThumbnailImage, setmyThumbnailImage] = useState(false);\r\n\tconst [isparentCategoryChecked, setisparentcategoryChecked] = useState(true);\r\n\tconst [isModalOpenForThumbnail, setisModalOpenForThumbnail] = useState(false);\r\n\tconst [isModalOpenForImages, setisModalOpenForImages] = useState(false);\r\n\tconst [selectedParentId, setselectedParentId] = useState('');\r\n\tconst [imageUrl, setImageUrl] = useState('');\r\n\tconst [loadingThumnail, setLoadingThumbnail] = useState(false);\r\n\tconst [imageFile, setImagefile] = useState('');\r\n\tconst [tags,setTags] = useState([]);\r\n\tconst [bnTags,setBnTags] = useState([]);\r\n\tconst [visibleMedia, setvisibleMedia] = useState(false);\r\n    const [coverImageId, setCoverImageId] = useState('');\r\n    const [myGoddamnImages, setMyGoddamnImages] = useState([]);\r\n\r\n\r\n\tconst handleSubmit = async (values: any, actions: any) => {\r\n\t\t// @ts-ignore\r\n\t\tconst imagesIds = myImages ? myImages.map(image => {\r\n\t\t\treturn image.id;\r\n\t\t}) : [];\r\n\r\n\t\tconst formData = new FormData();\r\n\r\n\t\tformData.append(\"name\", values.name.trim());\r\n\t\tformData.append(\"description\", values.description);\r\n\t\tformData.append(\"image\", JSON.stringify(imagesIds));\r\n\t\tformData.append(\"cover\", coverImageId || imagesIds[0] ? imagesIds[0] : '');\r\n\t\tformData.append(\"parent\", selectedParentId);\r\n\t\tformData.append('icon', imageFile)\r\n\r\n\r\n\t\tconsole.log('categoryDetailData',categoryDetailData); \r\n\t\t\r\n\t\tif (categoryDetailData && Object.keys(categoryDetailData).length > 0) {\r\n\t\t\tconst aboutToUpdatedImageIds = []; \r\n\r\n\t\t\tif(imagesIds && imagesIds.length > 0){\r\n\t\t\t\timagesIds.forEach(imageId => {\r\n\t\t\t\t\tif(categoryDetailData && categoryDetailData['image']){\r\n\t\t\t\t\t\tif(!categoryDetailData['image'].includes(imageId)){\r\n\t\t\t\t\t\t\taboutToUpdatedImageIds.push(imageId)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n      \r\n            if (aboutToUpdatedImageIds[0] && aboutToUpdatedImageIds.length > 1) {\r\n                await handleAttachImageToItemMultipleFetch({\r\n                    urlOptions: {\r\n                        placeHolders: {\r\n                            collection: 'category',\r\n                            itemId: categoryDetailData.id\r\n                        }\r\n                    },\r\n                    body: {\r\n                        image: aboutToUpdatedImageIds\r\n                    }\r\n                });\r\n\t\t\t}\r\n\t\t\t\r\n            else if (aboutToUpdatedImageIds[0] && aboutToUpdatedImageIds.length < 1) {\r\n                await handleAttachImageToItemSingleFetch({\r\n                    urlOptions: {\r\n                        placeHolders: {\r\n                            imageId: aboutToUpdatedImageIds[0].id,\r\n                            collection: 'category',\r\n                            itemId: categoryDetailData.id\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n\t\t}\r\n\r\n\r\n\t\tconst addCategoryRes = await handleAddCategoryFetch({\r\n            urlOptions: {\r\n                placeHolders: {\r\n                    id: categoryDetailData.id\r\n                },\r\n            },\r\n            body: {\r\n                name: values.name.trim(),\r\n                description: values.description,\r\n                displayOrder: values.displayOrder,\r\n                image: imagesIds,\r\n                cover: coverImageId || imagesIds[0] ? imagesIds[0] : '',\r\n                parent: selectedParentId,\r\n                icon: imageFile,\r\n                metaTitle: values.metaTitle,\r\n                metaDescription: values.metaDescription,\r\n                metaTags:  tags && tags.length > 0 ?  tags.join(',') : '',\r\n                bn: {\r\n                    metaTitle: values.bnMetaTitle,\r\n\t\t\t\t\tmetaDescription: values.bnMetaDescription,\r\n\t\t\t\t\tmetaTags:  bnTags && bnTags.length > 0 ?  bnTags.join(',') : '',\r\n                    name: values.bnName.trim(),\r\n                    description: values.bnDescription,\r\n                }\r\n            },\r\n\t\t});\r\n\r\n\t\t// @ts-ignore\r\n\t\tif (addCategoryRes && addCategoryRes.status === 'ok') {\r\n\t\t\topenSuccessNotification('Category Updated!');\r\n\t\t\tsetAddNewCategoryVisible(false)\r\n\r\n\t\t\tsetcategoryList([{\r\n\t\t\t\tid: addCategoryRes['_id'] || '',\r\n\t\t\t\tkey: addCategoryRes['_id'] || '',\r\n\t\t\t\tname: addCategoryRes['name'] || '',\r\n\t\t\t\tdescription: addCategoryRes['description'] || '',\r\n\t\t\t\tcover: addCategoryRes['cover'] || '',\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\t...addCategoryRes\r\n\t\t\t},...categoryList])\r\n\r\n    \r\n            \r\n            \r\n\r\n\t\t\tactions.resetForm();\r\n\t\t\t// @ts-ignore\r\n\t\t\tsetmyImages([]);\r\n\t\t\tsetCoverImageId('')\r\n\t\t\tsetselectedParentId('')\r\n\t\t\tsetisparentcategoryChecked(true);\r\n\t\t\tsetImageUrl('');\r\n\t\t}\r\n\t\telse {\r\n\t\t\topenErrorNotification();\r\n\t\t}\r\n\r\n\r\n\r\n\r\n\t\tactions.setSubmitting(false);\r\n\t};\r\n\r\n\r\n\t\r\n\t\r\n\r\n\r\n    useEffect(() => {\r\n        if (categoryDetailData && Object.keys(categoryDetailData).length > 0) {\r\n\r\n            const images = categoryDetailData.image;\r\n            if (images && images.length > 0) {\r\n                setmyImages(images);\r\n                setMyGoddamnImages(images);\r\n            }\r\n\r\n            if (categoryDetailData.cover && categoryDetailData.cover['id']) {\r\n                // @ts-ignore\r\n                setmyImages([categoryDetailData.cover, ...images]);\r\n                setCoverImageId(categoryDetailData.cover['id']);\r\n            }\r\n\r\n        }\r\n    }, [categoryDetailData]); \r\n\r\n\r\n    useEffect(() => {\r\n        // @ts-ignore\r\n        if (myImages && myImages[0] && myImages.length < 2) {\r\n\r\n            if (coverImageId !== myImages[0].id) {\r\n                setCoverImageId(myImages[0].id);\r\n                handleSetImageAsThumnail(myImages[0]);\r\n            }\r\n\r\n        }\r\n\r\n    }, [myImages])\r\n\r\n\r\n    const handleDetachSingleImage = async id => {\r\n        await handleDetachImageFromItemSingleFetch({\r\n            urlOptions: {\r\n                placeHolders: {\r\n                    imageId: id,\r\n                    collection: 'category',\r\n                    itemId: categoryDetailData.id\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n\r\n\r\n    const handleSetImageAsThumnail = async image => {\r\n\r\n        const thumbnailRes = await handleSetImageAsThumbnailToItemFetch({\r\n            urlOptions: {\r\n                placeHolders: {\r\n                    imageId: image.id,\r\n                    collection: 'category',\r\n                    itemId: categoryDetailData.id\r\n                }\r\n            }\r\n        });\r\n\r\n\r\n        // @ts-ignore\r\n        if (thumbnailRes && thumbnailRes.status === 'ok') {\r\n            openSuccessNotification('Set as thumbnail!')\r\n            // const positionInBrand = () => {\r\n            //     return brandList.map(item => item.id).indexOf(categoryDetailData.id);\r\n            // }\r\n\r\n            // const index = positionInBrand();\r\n\r\n            // const prevItem = brandList.find(item => item.id === productRecord.id);\r\n\r\n            // if (prevItem) {\r\n            //     const updatedItem = Object.assign({}, brandList[index], { ...prevItem, cover: image.cover });\r\n            //     const updateBrandList = [...brandList.slice(0, index), updatedItem, ...brandList.slice(index + 1)];\r\n            //     setBrandList(updateBrandList);\r\n            // }\r\n        }\r\n        else {\r\n            openErrorNotification(\"Couldn't set as thumbnail, Something went wrong\")\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n    \r\n    const handleImagesDelete = (id) => {\r\n        // @ts-ignore\r\n        const newImages = myImages && myImages.filter(image => {\r\n            return image.id !== id;\r\n        })\r\n\r\n        setmyImages(newImages);\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\tconst onSwitchChange = (checked: any) => {\r\n\t\tsetisparentcategoryChecked(checked)\r\n\t};\r\n\r\n\r\n\tconst handleCancel = (e: any) => {\r\n\t\tsetAddNewCategoryVisible(false);\r\n\t};\r\n\r\n\r\n\tconst getisSubmitButtonDisabled = (values, isValid) => {\r\n\t\tif (!values.name || !isValid) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\r\n\r\n\tconst handleThumbnailImageDelete = (id) => {\r\n\t\t// @ts-ignore\r\n\t\tconst newImages = myThumbnailImage && myThumbnailImage.filter(image => {\r\n\t\t\treturn image.id !== id;\r\n\t\t})\r\n\r\n\t\tif (newImages.length > 0) {\r\n\t\t\tsetmyThumbnailImage(newImages);\r\n\r\n\t\t}\r\n\t\telse setmyThumbnailImage(false);\r\n\t}\r\n\r\n\r\n\tconst onChangeSelect = (value) => {\r\n\t\tsetselectedParentId(value);\r\n\t}\r\n\r\n\r\n\r\n\tfunction getBase64(img, callback) {\r\n\t\tconst reader = new FileReader();\r\n\t\treader.addEventListener('load', () => callback(reader.result));\r\n\t\treader.readAsDataURL(img);\r\n\t}\r\n\r\n\r\n\t function beforeUpload(file) {\r\n\t\tconst isJpgOrPng = file.type === 'image/jpeg' || file.type === 'image/png';\r\n\t\tif (!isJpgOrPng) {\r\n\t\t\tmessage.error('You can only upload JPG/PNG file!');\r\n\t\t}\r\n\t\tconst isLt2M = file.size / 1024 / 1024 < 2;\r\n\t\tif (!isLt2M) {\r\n\t\t\tmessage.error('Image must smaller than 2MB!');\r\n\t\t}\r\n\r\n\r\n\t\tgetBase64(file, imageUrl => {\r\n\t\t\tsetImageUrl(imageUrl)\r\n\t\t\tsetImagefile(file)\r\n\t\t\tconst setNewIcon  = async () => {\r\n\t\t\t\tconst formData = new FormData();\r\n\t\t\t\tformData.append('icon',file); \r\n\t\t\t\t// const addCategoryRes = await handleAddCategoryFetch({\r\n\t\t\t\t// \tbody: formData,\r\n\t\t\t\t// });\r\n\t\t\t\tconst res = await handleUpdateCategoryIconFetch({\r\n\t\t\t\t\turlOptions: {\r\n\t\t\t\t\t\tplaceHolders: {\r\n\t\t\t\t\t\t\tid: categoryDetailData.id\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t},\r\n\t\t\t\t\tbody: formData\r\n\t\t\t\t}); \r\n\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\tif(res && res.status === 'ok'){\r\n\t\t\t\t\topenSuccessNotification('Category Icon updated!')\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\topenErrorNotification(\"Couldn't update category icon, Something went wrong\")\r\n\t\t\t\t}\r\n\r\n\r\n\t\t\t}; \r\n\t\t\t\r\n\t\t\tsetNewIcon();\r\n\t\t\tsetLoadingThumbnail(false)\r\n\t\t})\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\r\n\t\r\n\tuseEffect(()=>{\r\n\r\n        if(categoryDetailData && Object.keys(categoryDetailData).length > 0){\r\n            const iconUrl = categoryDetailData.icon && categoryDetailData.icon; \r\n\r\n\t\t\tsetImageUrl(iconUrl); \r\n        }\r\n\r\n    },[])\r\n\r\n\r\n\tconst uploadButton = (\r\n\t\t<div>\r\n\t\t\t{loadingThumnail ? <LoadingOutlined /> : <PlusOutlined />}\r\n\t\t\t<div className=\"ant-upload-text\">Upload</div>\r\n\t\t</div>\r\n\t);\r\n\r\n\r\n\r\n    \r\n    useEffect(()=>{\r\n\r\n        if(categoryDetailData && Object.keys(categoryDetailData).length > 0){\r\n            const metaTags = categoryDetailData.metaTags && categoryDetailData.metaTags.split(','); \r\n\r\n            console.log('localMetaTags',metaTags);\r\n           \r\n            const bnMetaTags = categoryDetailData.bn && categoryDetailData.bn['metaTags'] && categoryDetailData.bn['metaTags'].split(','); \r\n            setTags(metaTags)\r\n            setBnTags(bnMetaTags)\r\n        }\r\n\r\n    },[])\r\n\r\n\r\n\r\n\treturn (\r\n\t\t<Formik\r\n\t\t\tonSubmit={(values, actions) => handleSubmit(values, actions)}\r\n\t\t\tvalidationSchema={validationSchema}\r\n\t\t\tvalidateOnBlur={false}\r\n\t\t\tenableReinitialize={true}\r\n\t\t\tinitialValues={\r\n                \r\n                { ...initialValues,\r\n                    ...categoryDetailData,\r\n                    ...( categoryDetailData && Object.keys(categoryDetailData).length > 0 && {\r\n                        bnMetaTitle: categoryDetailData['bn']\r\n                        && categoryDetailData['bn'].metaTitle\r\n                        && categoryDetailData['bn'].metaTitle,\r\n                        bnMetaDescription: categoryDetailData['bn'] &&  categoryDetailData['bn'].metaDescription && categoryDetailData['bn'].metaDescription,\r\n                        bnName: categoryDetailData['bn'] && categoryDetailData['bn'].name && categoryDetailData['bn'].name,\r\n                        bnDescription: categoryDetailData['bn'] && categoryDetailData['bn'].description && categoryDetailData['bn'].description,\r\n                    })\r\n                 }\r\n\t\t\t}\r\n\t\t>\r\n\t\t\t{({\r\n\t\t\t\thandleChange,\r\n\t\t\t\tvalues,\r\n\t\t\t\thandleSubmit,\r\n\t\t\t\terrors,\r\n\t\t\t\tisValid,\r\n\t\t\t\tisSubmitting,\r\n\t\t\t\ttouched,\r\n\t\t\t\thandleBlur,\r\n\t\t\t\tsetFieldTouched,\r\n\t\t\t\thandleReset,\r\n\t\t\t}) => (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<Modal\r\n\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\ttop: '40px'\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\ttitle=\"Edit Category\"\r\n\t\t\t\t\t\t\tvisible={addNewCategoryVisible}\r\n\t\t\t\t\t\t\tonOk={(e: any) => handleSubmit(e)}\r\n\t\t\t\t\t\t\tonCancel={handleCancel}\r\n\t\t\t\t\t\t\tokText='Update'\r\n\t\t\t\t\t\t\tokButtonProps={{\r\n\t\t\t\t\t\t\t\tloading: isSubmitting,\r\n\t\t\t\t\t\t\t\thtmlType: \"submit\",\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\tlabel='Name'\r\n\t\t\t\t\t\t\t\tvalue={values.name}\r\n\t\t\t\t\t\t\t\tplaceHolder={'grocery,fashion'}\r\n\t\t\t\t\t\t\t\tname='name'\r\n\t\t\t\t\t\t\t\tisError={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['name'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['name'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('name');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\tlabel='BN Name'\r\n\t\t\t\t\t\t\t\tvalue={values.bnName}\r\n\t\t\t\t\t\t\t\tplaceHolder={'মুদিখানা,ফ্যাশন'}\r\n\t\t\t\t\t\t\t\tname='bnName'\r\n\t\t\t\t\t\t\t\tisError={(touched.bnName && errors.bnName) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['bnName'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.bnName && errors.bnName) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['bnName'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('bnName');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\tlabel='Description'\r\n\t\t\t\t\t\t\t\tvalue={values.description}\r\n\t\t\t\t\t\t\t\tplaceholder={'This category...'}\r\n\t\t\t\t\t\t\t\tname='description'\r\n\t\t\t\t\t\t\t\tisError={(touched.description && errors.description) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['description'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.description && errors.description) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['description'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('description');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\tlabel='BN Description'\r\n\t\t\t\t\t\t\t\tvalue={values.bnDescription}\r\n\t\t\t\t\t\t\t\tplaceholder={'এই ক্যাটাগড়ি...'}\r\n\t\t\t\t\t\t\t\tname='bnDescription'\r\n\t\t\t\t\t\t\t\tisError={(touched.bnDescription && errors.bnDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['bnDescription'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.bnDescription && errors.bnDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['bnDescription'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('bnDescription');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n../\r\n\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\tmarginTop: '20px'\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\r\n\t\t\t\t\t\t\t<div className='addproductSection-left-header' >\r\n\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>Icon </h3>\r\n\t\t\t\t\t\t\t\t<Tooltip\r\n\t\t\t\t\t\t\t\t\tplacement=\"left\" title={'Add Icon image for this category'}>\r\n\t\t\t\t\t\t\t\t\t<a href='###'>\r\n\t\t\t\t\t\t\t\t\t\t<InfoCircleOutlined />\r\n\t\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t<Upload\r\n\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\tborderRadius: \"8px\"\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\tname=\"avatar\"\r\n\t\t\t\t\t\t\t\tlistType=\"picture-card\"\r\n\t\t\t\t\t\t\t\tclassName=\"avatar-uploader\"\r\n\t\t\t\t\t\t\t\tshowUploadList={false}\r\n\t\t\t\t\t\t\t\tbeforeUpload={beforeUpload}\r\n\t\t\t\t\t\t\t\tmultiple={false}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t{imageUrl ? <img src={imageUrl} alt=\"avatar\" style={{ width: '100%' }} /> : uploadButton}\r\n\t\t\t\t\t\t\t</Upload>\r\n\r\n\t\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\t\tmarginTop:'20px'\r\n\t\t\t\t\t\t\t\t}}></div>\r\n\r\n\t\t\t\t\t\t\t<div className='addproductSection-left-header'\r\n\r\nstyle={{\r\n\tmarginBottom: '-5px'\r\n}}\r\n>\r\n<h3 className='inputFieldLabel'>Images</h3>\r\n{/* <div  >\r\n<FileOutlined />\r\n<span>Media Center</span>\r\n</div> */}\r\n</div>\r\n\r\n\r\n<div className='aboutToUploadImagesContainer'>\r\n\r\n{categoryDetailData && Object.keys(categoryDetailData).length > 0 && (\r\n\t<>\r\n\t\t{myImages &&\r\n\t\t\t// @ts-ignore\r\n\t\t\tmyImages.length > 0 && myImages.map((image, index) => {\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<div className='aboutToUploadImagesContainer__item'>\r\n\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\tclassName='aboutToUploadImagesContainer__item-imgContainer'\r\n\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\tsetCoverImageId(image.id);\r\n\t\t\t\t\t\t\t\thandleSetImageAsThumnail(image);\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<img src={image.cover} alt={image.alt} />\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t<span\r\n\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\thandleImagesDelete(image.id)\r\n\t\t\t\t\t\t\t\thandleDetachSingleImage(image.id)\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tclassName='aboutToUploadImagesContainer__item-remove'>\r\n\t\t\t\t\t\t\t<CloseOutlined />\r\n\t\t\t\t\t\t</span>\r\n\r\n\r\n\t\t\t\t\t\t{coverImageId === image.id ? (\r\n\t\t\t\t\t\t\t<span className='aboutToUploadImagesContainer__item-cover'>\r\n\t\t\t\t\t\t\t\t<CheckOutlined />\r\n\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t) : !coverImageId && index === 0 && (\r\n\t\t\t\t\t\t\t<span className='aboutToUploadImagesContainer__item-cover'>\r\n\t\t\t\t\t\t\t\t<CheckOutlined />\r\n\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t)}\r\n\r\n\r\n\t\t\t\t\t</div>\r\n\t\t\t\t)\r\n\t\t\t})}\r\n\r\n\r\n\t\t<Tooltip\r\n\t\t\ttitle={'Attach images'}>\r\n\r\n\t\t\t<div\r\n\t\t\t\tonClick={() => {\r\n\t\t\t\t\tsetvisible(true);\r\n\t\t\t\t}}\r\n\t\t\t\tclassName='aboutToUploadImagesContainer__uploadItem'>\r\n\t\t\t\t{/* <FileAddOutlined />\r\n\t\t\t\t\t<FileImageTwoTone />\r\n\t\t\t\t\t<FileImageOutlined /> */}\r\n\t\t\t\t<FileImageFilled />\r\n\t\t\t\t{/* <h5>\r\n\t\t\t\t\t Select From Library\r\n\t\t\t<     /h5> */}\r\n\t\t\t\t<span className='aboutToUploadImagesContainer__uploadItem-plus'>\r\n\t\t\t\t\t<PlusOutlined />\r\n\t\t\t\t</span>\r\n\t\t\t</div>\r\n\t\t</Tooltip>\r\n\t</>\r\n)}\r\n\r\n\r\n</div>\r\n\r\n\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\tlabel='Meta title'\r\n\t\t\t\t\t\t\t\tvalue={values.metaTitle}\r\n\t\t\t\t\t\t\t\tplaceHolder={'category...'}\r\n\t\t\t\t\t\t\t\tname='metaTitle'\r\n\t\t\t\t\t\t\t\tisError={(touched.metaTitle && errors.metaTitle) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['metaTitle'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.metaTitle && errors.metaTitle) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['metaTitle'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('metaTitle')\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\tlabel='BN Meta title'\r\n\t\t\t\t\t\t\t\tvalue={values.bnMetaTitle}\r\n\t\t\t\t\t\t\t\tplaceHolder={'ক্যাটাগড়ি...'}\r\n\t\t\t\t\t\t\t\tname='bnMetaTitle'\r\n\t\t\t\t\t\t\t\tisError={(touched.bnMetaTitle && errors.bnMetaTitle) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['bnMetaTitle'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.bnMetaTitle && errors.bnMetaTitle) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['bnMetaTitle'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('bnMetaTitle');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\tlabel='Meta description'\r\n\t\t\t\t\t\t\t\tvalue={values.metaDescription}\r\n\t\t\t\t\t\t\t\tplaceholder={'meta...'}\r\n\t\t\t\t\t\t\t\tname='metaDescription'\r\n\t\t\t\t\t\t\t\tisError={(touched.metaDescription && errors.metaDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['metaDescription'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.metaDescription && errors.metaDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['metaDescription'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('metaDescription');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\tlabel='BN Meta Description'\r\n\t\t\t\t\t\t\t\tvalue={values.bnMetaDescription}\r\n\t\t\t\t\t\t\t\tplaceholder={'এইয় মেট...'}\r\n\t\t\t\t\t\t\t\tname='bnMetaDescription'\r\n\t\t\t\t\t\t\t\tisError={(touched.bnMetaDescription && errors.bnMetaDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['bnMetaDescription'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.bnMetaDescription && errors.bnMetaDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['bnMetaDescription'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('bnMetaDescription');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\tMeta Tags (grocery,fashion)\r\n\t\t\t\t\t\t\t</h3>\r\n\r\n\t\t\t\t\t\t\t<MetaTags\r\n\t\t\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\t\t\tsetTags={setTags}\r\n\t\t\t\t\t\t\ttags={tags}\r\n\t\t\t\t\t\t\t />\r\n\r\n\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\tmarginTop:'15px'\r\n\t\t\t\t\t\t\t}}></div>\r\n\r\n\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\tBN Meta Tags (মুদিখানা,ফ্যাশন)\r\n\t\t\t\t\t\t\t</h3>\r\n\r\n\t\t\t\t\t\t\t<MetaTags\r\n\t\t\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\t\t\tsetTags={setBnTags}\r\n\t\t\t\t\t\t\ttags={bnTags}\r\n\t\t\t\t\t\t\t />\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t</Modal>\r\n\r\n\t\t\t\t\t\t<MediaLibrary\r\n\t\t\t\t\r\n\t\t\t\t\t\t\tsetvisible={setvisible}\r\n\t\t\t\t\t\t\tvisible={visible}\r\n\t\t\t\t\t\t\tsetmyImages={setmyImages}\r\n\t\t\t\t\t\t\tmyImages={myImages}\r\n\t\t\t\t\t\t\tsetmyThumbnailImage={setmyThumbnailImage}\r\n\t\t\t\t\t\t\tisModalOpenForThumbnail={isModalOpenForThumbnail}\r\n\t\t\t\t\t\t\tisModalOpenForImages={isModalOpenForImages}\r\n\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</>\r\n\t\t\t\t)}\r\n\t\t</Formik>\r\n\r\n\r\n\r\n\r\n\t);\r\n};\r\n\r\nexport default AddNewCategory;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useParams, useHistory } from \"react-router\";\r\n\r\n\r\n// import hooks\r\nimport { useHandleFetch } from \"../../../hooks\";\r\n\r\n// import lib\r\nimport {\r\n    EditOutlined,\r\n} from '@ant-design/icons';\r\n\r\nimport { Skeleton, Empty, Button, notification, Table, Space, Input as CoolInput, Tooltip, Modal } from 'antd';\r\n\r\n\r\n\r\n// import components\r\nimport { DataTableSkeleton } from \"../../../components/Placeholders\";\r\nimport CategoryEdit from \"./PostCategoryEdit\";\r\n\r\n\r\nconst { Column, ColumnGroup } = Table;\r\nconst { Search } = CoolInput;\r\n\r\n\r\ninterface Props {\r\n    productRecord?: any;\r\n}\r\n\r\nconst NewBrandDetail = (props: Props) => {\r\n    const [categoryDetailState, handleCategoryDetailFetch] = useHandleFetch({}, 'postCategoryDetail');\r\n    const [categoryProductsState, handleCategoryProductsFetch] = useHandleFetch({}, 'categoryPostList');\r\n\r\n    const params = useParams();\r\n    const history = useHistory();\r\n    const categoryId = params['id'];\r\n    const [categoryEditVisible, setCategoryEditVisible] = useState(false);\r\n    const [categoryDetail,setcategoryDetail] = useState({}); \r\n\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        const getCategoryDetail = async () => {\r\n            const categoryDetailDataRes =  await handleCategoryDetailFetch({\r\n                urlOptions: {\r\n                    placeHolders: {\r\n                        id: categoryId\r\n                    }\r\n                }\r\n            }); \r\n\r\n            // @ts-ignore\r\n            if(categoryDetailDataRes){\r\n                  // @ts-ignore\r\n                setcategoryDetail(categoryDetailDataRes)\r\n\r\n            }\r\n\r\n        };\r\n\r\n        getCategoryDetail();\r\n\r\n    }, [categoryId]);\r\n\r\n    useEffect(() => {\r\n\r\n        const getCategoryProducts = async () => {\r\n            await handleCategoryProductsFetch({\r\n                urlOptions: {\r\n                    placeHolders: {\r\n                        id: categoryId\r\n                    }\r\n                }\r\n            })\r\n        };\r\n\r\n        getCategoryProducts();\r\n\r\n    }, [categoryId]);\r\n\r\n\r\n\r\n\r\n    console.log('postcategoryDetailState', categoryDetailState);\r\n\r\n    console.log('brandParams', params);\r\n\r\n\r\n    const getImagesInCollumn = (imgs) => {\r\n        if (!imgs[0]) return false;\r\n        imgs = imgs.map(item => item.cover);\r\n        const columns = {};\r\n\r\n        let localIndex = 0;\r\n        let columnNumber = 0;\r\n\r\n\r\n        imgs.forEach((item, index) => {\r\n            if (localIndex < 3) {\r\n                if (columns[columnNumber]) {\r\n                    columns[columnNumber] = [...columns[columnNumber], item]\r\n                }\r\n                else columns[columnNumber] = [item];\r\n\r\n                localIndex = localIndex + 1;\r\n                columnNumber = columnNumber + 1;\r\n\r\n            }\r\n            else {\r\n                localIndex = 0;\r\n                columnNumber = 0;\r\n                console.log('localIndex', localIndex)\r\n            }\r\n        });\r\n\r\n        return columns;\r\n    }\r\n\r\n\r\n    const row = categoryDetailState.done && categoryDetail && categoryDetail['image'] ? getImagesInCollumn(categoryDetail['image']) : [];\r\n\r\n\r\n\r\n    return (\r\n        <div className='brandDetailContainer'>\r\n\r\n            <div className='brandDetailContainer__heading'>\r\n                <h3>\r\n                   Recipe Category Detail\r\n                </h3>\r\n\r\n                {categoryDetailState.done && categoryDetail && (Object.keys(categoryDetail).length > 0) && (\r\n                    <>\r\n                        <CategoryEdit\r\n                            addNewCategoryVisible={categoryEditVisible}\r\n                            setAddNewCategoryVisible={setCategoryEditVisible}\r\n                            categoryDetailData={categoryDetail}\r\n                            setcategoryDetailData={setcategoryDetail}\r\n\r\n                        />\r\n\r\n                        <Button\r\n                            onClick={() => setCategoryEditVisible(true)}\r\n                            type='link'\r\n                            icon={<EditOutlined />}\r\n                        >\r\n                            Edit\r\n                      </Button>\r\n                    </>\r\n                )}\r\n\r\n            </div>\r\n            <Skeleton\r\n                avatar paragraph={{ rows: 3 }}\r\n                loading={categoryDetailState.isLoading}>\r\n                {categoryDetailState.done && categoryDetail && !(Object.keys(categoryDetail).length > 0) && (\r\n                    <Empty description='No Recipe category found' image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n                )}\r\n\r\n\r\n\r\n                {categoryDetailState.done && categoryDetail && (Object.keys(categoryDetail).length > 0) && (\r\n                    <>\r\n                        <div className='brandDetailContainer__header'>\r\n                            <div className='brandDetailContainer__header-coverContainer brandDetailContainer__header-coverContainer-category'>\r\n                                <img src={categoryDetail['cover'] && categoryDetail['cover']['cover']} alt=\"\" />\r\n                            </div>\r\n                            <div className='brandDetailContainer__header-info'>\r\n                                <h2>\r\n                                    {categoryDetail['name']}\r\n                                </h2>\r\n                                <h3>\r\n                                    {categoryDetail['description']}\r\n                                </h3>\r\n                          \r\n                                {categoryDetail['url'] && (\r\n                                    <h3>\r\n                                        URL:\r\n                                        <span>\r\n                                            {categoryDetail['url']}\r\n                                        </span>\r\n\r\n                                    </h3>\r\n                                )}\r\n\r\n                            </div>\r\n                        </div>\r\n\r\n\r\n                        {categoryDetail['icon'] && (\r\n                            <>\r\n                                <div className='brandDetailContainer__heading'>\r\n                                    <h3>\r\n                                        Icon\r\n                                    </h3>\r\n                                </div>\r\n\r\n                                <div className='brandDetailContainer__inlineBox'>\r\n                                    <div className='brandDetailContainer__header-coverContainer brandDetailContainer__header-coverContainer-icon'>\r\n                                        <img src={categoryDetail['icon'] && categoryDetail['icon']} alt=\"\" />\r\n                                    </div>\r\n\r\n                                </div>\r\n\r\n                                <div style={{\r\n                                    marginBottom: \"25px\"\r\n                                }}></div>\r\n                            </>\r\n                        )}\r\n\r\n\r\n                        {categoryDetail['image'] && categoryDetail['image'].length > 0 && (\r\n                            <>\r\n                                <div className='brandDetailContainer__heading'>\r\n                                    <h3>\r\n                                        Image Gallary\r\n                                   </h3>\r\n                                </div>\r\n\r\n                                <div className='brandDetailContainer__imageGallary'>\r\n                                    <div className='imgGallaryContainer'>\r\n\r\n                                        <div className=\"imgGallary-row\">\r\n                                            {row && Object.keys(row).map(column => {\r\n                                                return (\r\n                                                    <div className=\"imgGallary-column\">\r\n                                                        {row[column] && row[column].map(img => {\r\n                                                            return <img \r\n                                                            alt='..'\r\n                                                            src={img} style={{\r\n                                                                width: '100%'\r\n                                                            }} />\r\n                                                        })}\r\n\r\n                                                    </div>\r\n                                                )\r\n                                            })}\r\n\r\n\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                </div>\r\n\r\n                                <div style={{\r\n                                    marginBottom: \"25px\"\r\n                                }}></div>\r\n                            </>\r\n                        )}\r\n\r\n\r\n                    </>\r\n\r\n                )}\r\n\r\n            </Skeleton>\r\n\r\n            <div className='brandDetailContainer__heading'>\r\n                <h3>\r\n                    Recipes\r\n                </h3>\r\n            </div>\r\n            <div className='brandDetailContainer__body'>\r\n                {categoryProductsState.isLoading && <DataTableSkeleton />}\r\n                {categoryProductsState.done && !(categoryProductsState.data.length > 0) && (\r\n                    <div style={{\r\n                        marginTop: '100px'\r\n                    }}>\r\n                        <Empty description='No recipes exists in this category' image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n                    </div>\r\n                )}\r\n\r\n                {categoryProductsState.done && categoryProductsState.data && categoryProductsState.data.length > 0 && (\r\n                    <>\r\n                        <Table\r\n                            style={{\r\n                                paddingTop: '10px',\r\n                                borderRadius: '5px !important',\r\n                                overflow: 'hidden',\r\n                                boxShadow: '0 0.125rem 0.625rem rgba(227, 231, 250, 0.3), 0 0.0625rem 0.125rem rgba(206, 220, 233, 0.4)'\r\n                            }}\r\n\r\n                            size='small'\r\n                            dataSource={categoryProductsState.data}\r\n                            tableLayout={'auto'}\r\n                            onHeaderRow={column => {\r\n                                return {\r\n                                    style: {\r\n                                        color: 'red !important'\r\n                                    }\r\n\r\n                                };\r\n                            }}\r\n                        >\r\n                            <Column\r\n                                title=\"\"\r\n                                dataIndex=\"cover\"\r\n                                key=\"id\"\r\n                                width={'80px'}\r\n\r\n                                className='classnameofthecolumn'\r\n\r\n                                render={(cover, record: any) => (\r\n                                    <>\r\n                                        <img\r\n                                            onClick={() => {\r\n                                                history.push(`/admin/posts/${record.id}`)\r\n                                                // go to product detail\r\n                                            }}\r\n                                            src={cover} alt='cover img' style={{\r\n                                                height: '40px',\r\n                                                width: '40px',\r\n                                                objectFit: \"contain\",\r\n                                                borderRadius: '3px',\r\n                                                cursor: 'pointer'\r\n                                            }} />\r\n                                    </>\r\n                                )}\r\n                            />\r\n\r\n                            <Column\r\n                                title=\"Name\"\r\n                                dataIndex=\"name\"\r\n                                key=\"id\"\r\n                                className='classnameofthecolumn'\r\n                                render={(text, record: any) => (\r\n                                    <>\r\n                                        <h4\r\n                                            onClick={() => {\r\n                                                history.push(`/admin/posts/${record.id}`)\r\n                                            }}\r\n                                            style={{\r\n                                                fontWeight: 400,\r\n                                                color: '#555',\r\n                                                cursor: 'pointer'\r\n\r\n                                            }}>\r\n                                            {text}\r\n                                        </h4>\r\n                                    </>\r\n                                )}\r\n                            />\r\n\r\n                            <Column\r\n                                title=\"Offer Price\"\r\n                                dataIndex=\"offerPrice\"\r\n                                key=\"id\"\r\n                                className='classnameofthecolumn'\r\n                            />\r\n\r\n\r\n                            <Column\r\n                                title=\"Price\"\r\n                                dataIndex=\"price\"\r\n                                key=\"id\"\r\n                                className='classnameofthecolumn'\r\n\r\n                            />\r\n\r\n                            <Column\r\n                                title=\"Available\"\r\n                                dataIndex=\"available\"\r\n                                key=\"id\"\r\n                                className='classnameofthecolumn'\r\n                            />\r\n\r\n                            <Column\r\n                                title=\"Minimum\"\r\n                                dataIndex=\"minimum\"\r\n                                key=\"id\"\r\n                                className='classnameofthecolumn'\r\n                            />\r\n\r\n\r\n                        </Table>\r\n                    </>\r\n                )}\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NewBrandDetail\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n\r\nimport { useHandleFetch } from '../../hooks';\r\n// import third party ui lib\r\nimport { Upload, message, Switch, Select, Button, notification, Modal, Empty, Form } from 'antd';\r\n\r\nimport {\r\n\tFileOutlined,\r\n\tInboxOutlined,\r\n\tRadiusUpleftOutlined,\r\n\tRadiusUprightOutlined,\r\n\tRadiusBottomleftOutlined,\r\n\tRadiusBottomrightOutlined,\r\n\tDeleteOutlined,\r\n\tFileAddOutlined,\r\n\tCheckCircleOutlined\r\n} from '@ant-design/icons';\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\n\r\n\r\nconst { Option } = Select;\r\n\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n\tfirstName: Yup.string()\r\n\t\t.label('First name')\r\n\t\t.required()\r\n\t\t.min(2, 'First name must have at least 2 characters '),\r\n\tlastName: Yup.string()\r\n\t\t.label('Lastname')\r\n\t\t.required()\r\n\t\t.min(2, 'Last name must have at least 2 characters '),\r\n\tphone: Yup.string()\r\n\t\t.required('Please tell us your mobile number.')\r\n\t\t.max(13, 'Please enter a valid mobile number.'),\r\n\tpassword: Yup.string()\r\n\t\t.label('Password')\r\n\t\t.required()\r\n\t\t.min(6, 'Password must have at least 6 characters'),\r\n\taddress1: Yup.string()\r\n\t\t.label('Address line 1')\r\n\t\t.required()\r\n\t\t.min(3, 'Address line 1 must have at least 3 characters '),\r\n\r\n\temail: Yup.string().label('Email').email('Please enter a valid email'),\r\n});\r\n\r\n\r\n\r\n\r\nconst initialValues = {\r\n\tphone: '',\r\n\temail: '',\r\n\tfirstName: '',\r\n\tlastName: '',\r\n\taddress1: '',\r\n\taddress2: '',\r\n\tzipCode: '',\r\n\tpassword: ''\r\n};\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t\tmessage: message || 'Tag Created',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n\tnotification.error({\r\n\t\tmessage: message || 'Something Went Wrong',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n};\r\n\r\n\r\ninterface Props {\r\n\taddNewCategoryVisible: any;\r\n\tsetAddNewCategoryVisible: any;\r\n\tcustomerList?: any;\r\n\tsetCustomerList?: any;\r\n}\r\n\r\nconst AddNewCategory = ({ addNewCategoryVisible, setAddNewCategoryVisible, customerList, setCustomerList }: Props) => {\r\n\r\n\tconst [addCustomerState, handleAddCustomerFetch] = useHandleFetch({}, 'addCustomer');\r\n\tconst [selectedCountryValue, setselectedCountryValue] = useState('');\r\n\tconst [selectedCityValue, setselectedCityValue] = useState('');\r\n\r\n\tconst [countryOptions, setcountryOptions] = useState([]);\r\n\tconst [cityOptions, setcityOptions] = useState([]);\r\n\r\n\tconst [countryListState, handleCountryListFetch] = useHandleFetch(\r\n\t\t[],\r\n\t\t'countryList'\r\n\t);\r\n\r\n\tconst [cityListState, handleCityListFetch] = useHandleFetch([], 'cityList');\r\n\r\n\tconst [countryList, setCountryList] = useState([]);\r\n\tconst [cityList, setCityList] = useState([]);\r\n\r\n\r\n\r\n\r\n\tconst handleSubmit = async (values: any, actions: any) => {\r\n\r\n\t\tconst addCustomerRes = await handleAddCustomerFetch({\r\n\r\n\t\t\tbody: {\r\n\t\t\t\tphone: values.phone,\r\n\t\t\t\temail: values.email,\r\n\t\t\t\tpassword: values.password,\r\n\t\t\t\taddress1: values.address1,\r\n\t\t\t\taddress2: values.address2,\r\n\t\t\t\tfirstName: values.firstName,\r\n\t\t\t\tlastName: values.lastName,\r\n\t\t\t\tcountry: selectedCountryValue,\r\n\t\t\t\tcity: selectedCityValue,\r\n\t\t\t},\r\n\t\t});\r\n\r\n\r\n\t\t// @ts-ignore\r\n\t\tif (addCustomerRes && addCustomerRes.status === 'ok') {\r\n\t\t\topenSuccessNotification();\r\n\r\n\t\t\tsetCustomerList([...customerList, {\r\n\t\t\t\tid: addCustomerRes['id'] || '',\r\n\t\t\t\tkey: addCustomerRes['id'] || '',\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\t...addCustomerRes\r\n\t\t\t}])\r\n\t\t\tsetAddNewCategoryVisible(false);\r\n\t\t\tactions.resetForm();\r\n\t\t}\r\n\t\telse {\r\n\t\t\topenErrorNotification();\r\n\t\t}\r\n\r\n\r\n\r\n\t\tactions.setSubmitting(false);\r\n\t};\r\n\r\n\r\n\r\n\tconst onChangeCity = (value) => {\r\n\t\tsetselectedCityValue(value);\r\n\t}\r\n\r\n\tconst onChangeCountry = (value) => {\r\n\t\tsetselectedCountryValue(value);\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tconst setCountries = async () => {\r\n\t\t\tconst CountryListRes = await handleCountryListFetch({});\r\n\r\n\t\t\t// @ts-ignore\r\n\t\t\tif (CountryListRes && CountryListRes.length > 0) {\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\tconst countryOptions = CountryListRes.map((country) => {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tvalue: country.name,\r\n\t\t\t\t\t\tname: country.name\r\n\t\t\t\t\t};\r\n\t\t\t\t});\r\n\t\t\t\tsetcountryOptions(countryOptions);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tsetCountries();\r\n\t}, []);\r\n\r\n\r\n\tuseEffect(() => {\r\n\t\tconst setCities = async () => {\r\n\t\t\tconst cityListRes = await handleCityListFetch({\r\n\t\t\t\turlOptions: {\r\n\t\t\t\t\tplaceHolders: {\r\n\t\t\t\t\t\tcountry: selectedCountryValue,\r\n\t\t\t\t\t},\r\n\t\t\t\t},\r\n\t\t\t});\r\n\r\n\t\t\t// @ts-ignore\r\n\t\t\tif (cityListRes && cityListRes.length > 0) {\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\tconst cityOptions = cityListRes.map((city) => {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tvalue: city.name,\r\n\t\t\t\t\t\tname: city.name\r\n\t\t\t\t\t};\r\n\t\t\t\t});\r\n\t\t\t\tsetcityOptions(cityOptions);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tsetCities();\r\n\t}, [selectedCountryValue]);\r\n\r\n\r\n\r\n\r\n\tconst handleCancel = (e: any) => {\r\n\t\tsetAddNewCategoryVisible(false);\r\n\t};\r\n\r\n\r\n\tconst getisSubmitButtonDisabled = (values, isValid) => {\r\n\t\tif (!isValid ||\r\n\t\t\t!values.firstName ||\r\n\t\t\t!values.lastName ||\r\n\t\t\t!values.password ||\r\n\t\t\t!values.phone ||\r\n\t\t\t!values.address1) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\r\n\r\n\tconsole.log('cityListState', cityListState)\r\n\r\n\r\n\r\n\r\n\treturn (\r\n\t\t<Formik\r\n\t\t\tonSubmit={(values, actions) => handleSubmit(values, actions)}\r\n\t\t\tvalidationSchema={validationSchema}\r\n\t\t\tvalidateOnBlur={false}\r\n\t\t\tenableReinitialize={true}\r\n\t\t\tinitialValues={\r\n\t\t\t\t{ ...initialValues }\r\n\t\t\t}\r\n\t\t>\r\n\t\t\t{({\r\n\t\t\t\thandleChange,\r\n\t\t\t\tvalues,\r\n\t\t\t\thandleSubmit,\r\n\t\t\t\terrors,\r\n\t\t\t\tisValid,\r\n\t\t\t\tisSubmitting,\r\n\t\t\t\ttouched,\r\n\t\t\t\thandleBlur,\r\n\t\t\t\tsetFieldTouched,\r\n\t\t\t\thandleReset,\r\n\t\t\t}) => (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<Modal\r\n\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\ttop: '40px'\r\n\t\t\t\t\t\t\t}}\r\n\r\n\r\n\r\n\t\t\t\t\t\t\tbodyStyle={{\r\n\t\t\t\t\t\t\t\tmargin: '0',\r\n\t\t\t\t\t\t\t\tpadding: '10px'\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\ttitle=\"Add New Customer\"\r\n\t\t\t\t\t\t\tvisible={addNewCategoryVisible}\r\n\t\t\t\t\t\t\tonOk={(e: any) => handleSubmit(e)}\r\n\t\t\t\t\t\t\tonCancel={handleCancel}\r\n\t\t\t\t\t\t\tokText='Create'\r\n\t\t\t\t\t\t\tokButtonProps={{\r\n\t\t\t\t\t\t\t\tloading: isSubmitting,\r\n\t\t\t\t\t\t\t\thtmlType: \"submit\",\r\n\t\t\t\t\t\t\t\tdisabled: getisSubmitButtonDisabled(values, isValid)\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\r\n\r\n\t\t\t\t\t\t\t<div className='dubbleRowInputs'>\r\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\tlabel='First Name'\r\n\t\t\t\t\t\t\t\t\t\tvalue={values.firstName}\r\n\t\t\t\t\t\t\t\t\t\tname='firstName'\r\n\t\t\t\t\t\t\t\t\t\tisError={(touched.firstName && errors.firstName) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['firstName'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\terrorString={(touched.firstName && errors.firstName) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['firstName'])}\r\n\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('firstName');\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\tlabel='Last Name'\r\n\t\t\t\t\t\t\t\t\t\tvalue={values.lastName}\r\n\t\t\t\t\t\t\t\t\t\tname='lastName'\r\n\t\t\t\t\t\t\t\t\t\tisError={(touched.lastName && errors.lastName) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['lastName'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\terrorString={(touched.lastName && errors.lastName) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['lastName'])}\r\n\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('lastName');\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t<div className='dubbleRowInputs'>\r\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\tlabel='Phone'\r\n\t\t\t\t\t\t\t\t\t\tvalue={values.phone}\r\n\t\t\t\t\t\t\t\t\t\tname='phone'\r\n\t\t\t\t\t\t\t\t\t\tisError={(touched.phone && errors.phone) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['phone'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\terrorString={(touched.phone && errors.phone) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['phone'])}\r\n\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('phone');\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\tlabel='Email'\r\n\t\t\t\t\t\t\t\t\t\tvalue={values.email}\r\n\t\t\t\t\t\t\t\t\t\tname='email'\r\n\t\t\t\t\t\t\t\t\t\tisError={(touched.email && errors.email) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['email'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\terrorString={(touched.email && errors.email) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['email'])}\r\n\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('email');\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\tmarginRight: '10px'\r\n\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\tlabel='Password'\r\n\t\t\t\t\t\t\t\t\tvalue={values.password}\r\n\t\t\t\t\t\t\t\t\tname='password'\r\n\t\t\t\t\t\t\t\t\tisError={(touched.password && errors.password) ||\r\n\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['password'])}\r\n\r\n\t\t\t\t\t\t\t\t\terrorString={(touched.password && errors.password) ||\r\n\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['password'])}\r\n\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\tsetFieldTouched('password');\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t<div className='dubbleRowInputs'>\r\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\t\t\t\tCountry\r\n\t\t\t\t\t\t\t\t\t</h3>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t<Form.Item\r\n\t\t\t\t\t\t\t\t\t\tvalidateStatus={(addCustomerState.error['error']['country']) ? \"error\" : \"\"}\r\n\t\t\t\t\t\t\t\t\t\thelp={addCustomerState.error['error']['country']}\r\n\t\t\t\t\t\t\t\t\t// noStyle={true}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t<Select\r\n\t\t\t\t\t\t\t\t\t\t\tnotFoundContent={<Empty description='No Country Found' image={Empty.PRESENTED_IMAGE_SIMPLE} />}\r\n\t\t\t\t\t\t\t\t\t\t\tshowSearch\r\n\t\t\t\t\t\t\t\t\t\t\tstyle={{ width: '100%' }}\r\n\t\t\t\t\t\t\t\t\t\t\tplaceholder='Select a Country'\r\n\t\t\t\t\t\t\t\t\t\t\toptionFilterProp='children'\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={onChangeCountry}\r\n\t\t\t\t\t\t\t\t\t\t\tfilterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t{countryListState.done &&\r\n\t\t\t\t\t\t\t\t\t\t\t\tcountryListState.data.length > 0 &&\r\n\t\t\t\t\t\t\t\t\t\t\t\tcountryOptions.map((option) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn <Option value={option.value}>{option.name}</Option>;\r\n\t\t\t\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t\t\t</Select>\r\n\r\n\t\t\t\t\t\t\t\t\t</Form.Item>\r\n\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\t\t\t\tCity\r\n                                    </h3>\r\n\t\t\t\t\t\t\t\t\t<Form.Item\r\n\t\t\t\t\t\t\t\t\t\t// noStyle={true}\r\n\t\t\t\t\t\t\t\t\t\tvalidateStatus={(addCustomerState.error['error']['city']) ? \"error\" : \"\"}\r\n\t\t\t\t\t\t\t\t\t\thelp={addCustomerState.error['error']['city']}\r\n\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t<Select\r\n\t\t\t\t\t\t\t\t\t\t\tclassName='selectClassName'\r\n\t\t\t\t\t\t\t\t\t\t\tnotFoundContent={<Empty description='First Select a Country' image={Empty.PRESENTED_IMAGE_SIMPLE} />}\r\n\t\t\t\t\t\t\t\t\t\t\tshowSearch\r\n\t\t\t\t\t\t\t\t\t\t\tstyle={{ width: '100%' }}\r\n\t\t\t\t\t\t\t\t\t\t\tplaceholder='Select a city'\r\n\t\t\t\t\t\t\t\t\t\t\toptionFilterProp='children'\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={onChangeCity}\r\n\t\t\t\t\t\t\t\t\t\t\tfilterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t{cityListState.done &&\r\n\t\t\t\t\t\t\t\t\t\t\t\tcityListState.data.length > 0 &&\r\n\t\t\t\t\t\t\t\t\t\t\t\tcityOptions.map((option) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn <Option value={option.value}>{option.name}</Option>;\r\n\t\t\t\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t\t\t</Select>\r\n\t\t\t\t\t\t\t\t\t</Form.Item>\r\n\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\tmarginTop: '12px'\r\n\t\t\t\t\t\t\t}}></div>\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t<div className='dubbleRowInputs'>\r\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\tlabel='Address'\r\n\t\t\t\t\t\t\t\t\t\tvalue={values.address1}\r\n\t\t\t\t\t\t\t\t\t\tname='address1'\r\n\t\t\t\t\t\t\t\t\t\tisError={(touched.address1 && errors.address1) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['address1'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\terrorString={(touched.address1 && errors.address1) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['address1'])}\r\n\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('address1');\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\tlabel='More specific address'\r\n\t\t\t\t\t\t\t\t\t\tvalue={values.address2}\r\n\t\t\t\t\t\t\t\t\t\tname='address2'\r\n\t\t\t\t\t\t\t\t\t\tisError={(touched.address2 && errors.address2) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['address2'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\terrorString={(touched.address2 && errors.address2) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['address2'])}\r\n\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('address2');\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\t\t\t\t\t\t</Modal>\r\n\r\n\t\t\t\t\t</>\r\n\t\t\t\t)}\r\n\t\t</Formik>\r\n\r\n\r\n\r\n\r\n\t);\r\n};\r\n\r\nexport default AddNewCategory;\r\n","import React,{useState, useEffect} from 'react';\r\nimport { Modal, Select,notification  } from 'antd';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\nimport { PlusOutlined, EditOutlined, DeleteOutlined,EditFilled, CheckCircleOutlined } from '@ant-design/icons';\r\n\r\n\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport {useHandleFetch} from '../../hooks';\r\n\r\n\r\nconst { Option } = Select;\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    firstName: Yup.string()\r\n      .label('Firstname')\r\n      .required()\r\n      .min(2, 'First name must have at least 2 characters '),\r\n    lastName: Yup.string()\r\n      .label('Lastname')\r\n      .required()\r\n      .min(2, 'Lastname must have at least 2 characters '),\r\n    phone: Yup.string()\r\n      .required('Please tell us your mobile number.')\r\n      .max(13, 'Please enter a valid mobile number.'),\r\n    password: Yup.string()\r\n      .label('Password')\r\n      .required()\r\n      .min(6, 'Password must have at least 6 characters'),\r\n    address1: Yup.string()\r\n      .label('Address line 1')\r\n      .required()\r\n      .min(3, 'Address line 1 must have at least 3 characters '),\r\n  \r\n    email: Yup.string().label('Email').email('Please enter a valid email'),\r\n  });\r\n\r\n\r\n\r\n  \r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t  message: message || 'Tag Created',\r\n\t  description: '',\r\n\t  icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n  };\r\n\r\n\r\n  const openErrorNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t  message: message || 'Something Went Wrong',\r\n\t  description: '',\r\n\t  icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n  };\r\n\r\n\r\n\r\n\r\n\r\n\r\ninterface Props {\r\n\tcustomer: any;\r\n\tsetvisible: any; \r\n\tvisible: any;\r\n\tcustomerList?: any; \r\n\tsetCustomerList?:any\r\n\r\n}\r\n\r\nconst QuickEdit = ({ customer, setvisible, visible, customerList, setCustomerList }: Props) => {\r\n\tconst [updateCustomerState, handleUpdateCustomerFetch] = useHandleFetch({}, 'updateCustomer');\r\n\r\n\r\n\tconst [selectedCountryValue,setselectedCountryValue] = useState(''); \r\n    const [selectedCityValue,setselectedCityValue] = useState(''); \r\n\r\n    const [countryOptions,setcountryOptions] = useState([]); \r\n    const [cityOptions,setcityOptions] = useState([]); \r\n\r\n    const [countryListState, handleCountryListFetch] = useHandleFetch(\r\n        [],\r\n        'countryList'\r\n      );\r\n    \r\n      const [cityListState, handleCityListFetch] = useHandleFetch([], 'cityList');\r\n    \r\n      const [countryList, setCountryList] = useState([]);\r\n      const [cityList, setCityList] = useState([]);\r\n\r\n\r\n\r\n\r\n\tconst handleSubmit = async (values : any, actions : any) => {\r\n\t  const updateCustomerRes = await handleUpdateCustomerFetch({\r\n\t\turlOptions: {\r\n\t\t\tplaceHolders: {\r\n\t\t\t  id: values.id,\r\n\t\t\t}\r\n\t\t  },\r\n\t\tbody: {\r\n\t\t\tphone: values.phone,\r\n            email: values.email,\r\n            password: values.password,\r\n            address1: values.address1,\r\n            address2: values.address2,\r\n            firstName: values.firstName,\r\n            lastName: values.lastName,\r\n            country: selectedCountryValue,\r\n            city: selectedCityValue,\r\n\t\t},\r\n\t  });\r\n\t\r\n\r\n\t   \t  // @ts-ignore\r\n\t\t\t if(updateCustomerRes && updateCustomerRes.status === 'ok'){\r\n\t\t\t\topenSuccessNotification(); \r\n\t\t\r\n\t\t\t\tconst positionInTag = () => {\r\n\t\t\t\t\treturn customerList.map(item => item.id).indexOf(customer.id);\r\n\t\t\t\t  }\r\n\t\t\r\n\t\t\t\t  const index = positionInTag();\r\n\t\t\r\n\t\t\t\t  // @ts-ignore\r\n\t\t\t\t  const updatedItem = Object.assign({}, tagList[index], { ...updateCustomerRes });\r\n\t\t\t\t  const updateTagList = [...customerList.slice(0, index), updatedItem, ...customerList.slice(index + 1)];\r\n\t\t\t\t  setCustomerList(updateTagList); \r\n\t\t\t\t\r\n\t\t\t  }\r\n\t\t\t  else {\r\n\t\t\t\topenErrorNotification();\r\n\t\t\t  }\r\n\t\t\t\r\n\t\t\t  actions.setSubmitting(false);\r\n\t\t\t  setvisible(false)\r\n\t};\r\n\t\r\n\r\n\t\r\n    const onChangeCity = (value) => {\r\n        setselectedCityValue(value); \r\n    }\r\n\r\n    const onChangeCountry = (value) => {\r\n        setselectedCountryValue(value); \r\n    }\r\n    \r\n\tuseEffect(() => {\r\n\t\tconst setCountries = async () => {\r\n\t\t\tconst CountryListRes = await handleCountryListFetch({});\r\n\r\n\t\t\t// @ts-ignore\r\n\t\t\tif (CountryListRes && CountryListRes.length > 0) {\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\tconst countryOptions = CountryListRes.map((country) => {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tvalue: country.name,\r\n\t\t\t\t\t\tname: country.name\r\n\t\t\t\t\t};\r\n\t\t\t\t});\r\n\t\t\t\tsetcountryOptions(countryOptions);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tsetCountries();\r\n    }, []);\r\n    \r\n\r\n    useEffect(() => {\r\n\t\tconst setCities = async () => {\r\n\t\t\tconst cityListRes = await handleCityListFetch({\r\n                urlOptions: {\r\n                    placeHolders: {\r\n                      country: selectedCountryValue,\r\n                    },\r\n                  },\r\n            });\r\n\r\n\t\t\t// @ts-ignore\r\n\t\t\tif (cityListRes && cityListRes.length > 0) {\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\tconst cityOptions = cityListRes.map((city) => {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tvalue: city.name,\r\n\t\t\t\t\t\tname: city.name\r\n\t\t\t\t\t};\r\n\t\t\t\t});\r\n\t\t\t\tsetcityOptions(cityOptions);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tsetCities();\r\n    }, [selectedCountryValue]);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\tconst handleCancel = (e: any) => {\r\n        setvisible(false);\r\n      };\r\n\r\n\r\n\r\n\t  const getisSubmitButtonDisabled = (values,isValid) => {\r\n\t\tif(!isValid ||\r\n            !values.firstName ||\r\n            !values.lastName ||\r\n            !values.password ||\r\n            !values.phone ||\r\n            !values.address1){\r\n\t\t\treturn true; \r\n\t\t}\r\n\t\treturn false; \r\n\t  }\r\n\r\n\treturn (\r\n\t\t<Formik\r\n\t\tonSubmit={(values, actions) => handleSubmit(values, actions)}\r\n\t\tvalidationSchema={validationSchema}\r\n\t\tvalidateOnBlur={false}\r\n\t\tenableReinitialize={true}\r\n\t\tinitialValues={\r\n\t\t  {...customer}\r\n\t\t}\r\n\t  >\r\n\t\t{({\r\n\t\t  handleChange,\r\n\t\t  values,\r\n\t\t  handleSubmit,\r\n\t\t  errors,\r\n\t\t  isValid,\r\n\t\t  isSubmitting,\r\n\t\t  touched,\r\n\t\t  handleBlur,\r\n\t\t  setFieldTouched,\r\n\t\t  handleReset,\r\n\t\t}) => (\r\n\t\t\t<>\r\n\t\t\t<Modal\r\n\t\t\ttitle=\"Quick Edit\"\r\n\t\t\tvisible={visible}\r\n\t\t\tonOk={(e : any) => handleSubmit(e)}\r\n\t\t\tonCancel={handleCancel}\r\n\t\t\tokText='Update'\r\n\t\t\tokButtonProps={{\r\n\t\t\tloading: isSubmitting,\r\n\t\t\thtmlType: \"submit\",\r\n\t\t\tdisabled: getisSubmitButtonDisabled(values, isValid)\r\n\t\t\t}}\r\n\t\t\tbodyStyle={{\r\n                margin: '0',\r\n                padding: '10px'\r\n            }}\r\n  >\r\n      <div className='dubbleRowInputs'>\r\n         <div className='dubbleRowInputs__item'>\r\n         <Input \r\n\t\t\t   label='First Name'\r\n\t\t\t   value={values.firstName}\r\n\t\t\t   name='firstName'\r\n\t\t\t   isError={(touched.firstName && errors.firstName) ||\r\n\t\t\t\t  (!isSubmitting && updateCustomerState.error['error']['firstName'])}\r\n\t\t\t  \r\n\t\t\t\t  errorString={(touched.firstName && errors.firstName) ||\r\n\t\t\t\t\t  (!isSubmitting && updateCustomerState.error['error']['firstName'])}\r\n\t\t\t   onChange={(e : any) => {\r\n\t\t\t\t  handleChange(e);\r\n\t\t\t\t  setFieldTouched('firstName');\r\n\t\t\t\t}}\r\n\t\t\t   />\r\n         </div>\r\n         <div className='dubbleRowInputs__item'>\r\n         <Input \r\n\t\t\t   label='Last Name'\r\n\t\t\t   value={values.lastName}\r\n\t\t\t   name='lastName'\r\n\t\t\t   isError={(touched.lastName && errors.lastName) ||\r\n\t\t\t\t  (!isSubmitting && updateCustomerState.error['error']['lastName'])}\r\n\t\t\t  \r\n\t\t\t\t  errorString={(touched.lastName && errors.lastName) ||\r\n\t\t\t\t\t  (!isSubmitting && updateCustomerState.error['error']['lastName'])}\r\n\t\t\t   onChange={(e : any) => {\r\n\t\t\t\t  handleChange(e);\r\n\t\t\t\t  setFieldTouched('lastName');\r\n\t\t\t\t}}\r\n\t\t\t   />\r\n         </div>\r\n\r\n\r\n\r\n\r\n            </div>\r\n\r\n\t\t\t \r\n\r\n            <div className='dubbleRowInputs'>\r\n         <div className='dubbleRowInputs__item'>\r\n         <Input \r\n\t\t\t   label='Phone'\r\n\t\t\t   value={values.phone}\r\n\t\t\t   name='phone'\r\n\t\t\t   isError={(touched.phone && errors.phone) ||\r\n\t\t\t\t  (!isSubmitting && updateCustomerState.error['error']['phone'])}\r\n\t\t\t  \r\n\t\t\t\t  errorString={(touched.phone && errors.phone) ||\r\n\t\t\t\t\t  (!isSubmitting && updateCustomerState.error['error']['phone'])}\r\n\t\t\t   onChange={(e : any) => {\r\n\t\t\t\t  handleChange(e);\r\n\t\t\t\t  setFieldTouched('phone');\r\n\t\t\t\t}}\r\n\t\t\t   />\r\n         </div>\r\n         <div className='dubbleRowInputs__item'>\r\n         <Input \r\n\t\t\t   label='Email'\r\n\t\t\t   value={values.email}\r\n\t\t\t   name='email'\r\n\t\t\t   isError={(touched.email && errors.email) ||\r\n\t\t\t\t  (!isSubmitting && updateCustomerState.error['error']['email'])}\r\n\t\t\t  \r\n\t\t\t\t  errorString={(touched.email && errors.email) ||\r\n\t\t\t\t\t  (!isSubmitting && updateCustomerState.error['error']['email'])}\r\n\t\t\t   onChange={(e : any) => {\r\n\t\t\t\t  handleChange(e);\r\n\t\t\t\t  setFieldTouched('email');\r\n\t\t\t\t}}\r\n\t\t\t   />\r\n         </div>\r\n\r\n\r\n\r\n\r\n            </div>\r\n\r\n            \r\n\r\n\r\n    \r\n<div className='dubbleRowInputs'>\r\n         <div className='dubbleRowInputs__item'>\r\n         <h3 className='inputFieldLabel'>\r\n                Country\r\n            </h3>\r\n         <Select\r\n\t\t\tshowSearch\r\n\t\t\tstyle={{ width: '100%' }}\r\n\t\t\tplaceholder='Select a Country'\r\n\t\t\toptionFilterProp='children'\r\n\t\t\tdefaultValue={customer && customer.country}\r\n\t\t\tonChange={onChangeCountry}\r\n\t\t\tfilterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n\t\t>\r\n\t\t\t{countryListState.done &&\r\n\t\t\t\tcountryListState.data.length > 0 &&\r\n\t\t\t\tcountryOptions.map((option) => {\r\n\t\t\t\t\treturn <Option value={option.value}>{option.name}</Option>;\r\n\t\t\t\t})}\r\n\t\t</Select>\r\n         </div>\r\n         <div className='dubbleRowInputs__item'>\r\n         <h3 className='inputFieldLabel'>\r\n                City\r\n            </h3>\r\n         <Select\r\n\t\t\tdefaultValue={customer && customer.city}\r\n\t\t\tshowSearch\r\n\t\t\tstyle={{ width: '100%' }}\r\n\t\t\tplaceholder='Select a city'\r\n\t\t\toptionFilterProp='children'\r\n\t\t\tonChange={onChangeCity}\r\n\t\t\tfilterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n\t\t>\r\n\t\t\t{cityListState.done &&\r\n\t\t\t\tcityListState.data.length > 0 &&\r\n\t\t\t\tcityOptions.map((option) => {\r\n\t\t\t\t\treturn <Option value={option.value}>{option.name}</Option>;\r\n\t\t\t\t})}\r\n\t\t</Select>\r\n         </div>\r\n\r\n            </div>\r\n\r\n            <div style={{\r\n                marginTop: '12px'\r\n            }}></div>\r\n\r\n\r\n\r\n            <div className='dubbleRowInputs'>\r\n         <div className='dubbleRowInputs__item'>\r\n         <Input \r\n\t\t\t   label='Address'\r\n\t\t\t   value={values.address1}\r\n\t\t\t   name='address1'\r\n\t\t\t   isError={(touched.address1 && errors.address1) ||\r\n\t\t\t\t  (!isSubmitting && updateCustomerState.error['error']['address1'])}\r\n\t\t\t  \r\n\t\t\t\t  errorString={(touched.address1 && errors.address1) ||\r\n\t\t\t\t\t  (!isSubmitting && updateCustomerState.error['error']['address1'])}\r\n\t\t\t   onChange={(e : any) => {\r\n\t\t\t\t  handleChange(e);\r\n\t\t\t\t  setFieldTouched('address1');\r\n\t\t\t\t}}\r\n\t\t\t   />\r\n         </div>\r\n         <div className='dubbleRowInputs__item'>\r\n         <Input \r\n\t\t\t   label='More specific address'\r\n\t\t\t   value={values.address2}\r\n\t\t\t   name='address2'\r\n\t\t\t   isError={(touched.address2 && errors.address2) ||\r\n\t\t\t\t  (!isSubmitting && updateCustomerState.error['error']['address2'])}\r\n\t\t\t  \r\n\t\t\t\t  errorString={(touched.address2 && errors.address2) ||\r\n\t\t\t\t\t  (!isSubmitting && updateCustomerState.error['error']['address2'])}\r\n\t\t\t   onChange={(e : any) => {\r\n\t\t\t\t  handleChange(e);\r\n\t\t\t\t  setFieldTouched('address2');\r\n\t\t\t\t}}\r\n\t\t\t   />\r\n         </div>\r\n\r\n            </div>\r\n\r\n\r\n\r\n\r\n  </Modal>\r\n\t\t\t  \r\n\t\t\t</>\r\n\t\t  )}\r\n\t  </Formik>\r\n\t);\r\n};\r\n\r\n\r\nexport default QuickEdit;\r\n","import React, {useState,useEffect} from 'react';\r\nimport {withRouter, useHistory} from 'react-router-dom';\r\nimport { Table, Badge, Menu, Dropdown, notification, Space, Tag,Button, Input,Tooltip, Modal , Popconfirm} from 'antd';\r\nimport { PlusOutlined, EditOutlined, DeleteOutlined,EditFilled, CheckCircleOutlined } from '@ant-design/icons';\r\nimport Moment from 'react-moment';\r\n\r\n/// import hooks\r\nimport { useFetch, useHandleFetch } from \"../../hooks\";\r\n\r\n// import components\r\nimport { DataTableSkeleton } from \"../../components/Placeholders\";\r\nimport AddNewStaff from \"./AddNewStaff\";\r\nimport QuickEdit from \"./QuickEdit\";\r\nimport Empty from \"../../components/Empty\";\r\nconst { Column, ColumnGroup } = Table;\r\nconst { Search } = Input;\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t  message: message || 'Staffs Created',\r\n\t  description: '',\r\n\t  icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n  };\r\n\r\n\r\n  const openErrorNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t  message: message || 'Something Went Wrong',\r\n\t  description: '',\r\n\t  icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n  };\r\n\r\n\r\n\r\n\r\n\r\ninterface myTableProps {\r\n  data: any; \r\n  setCustomerList?:any; \r\n} \r\n\r\n\r\nconst MyTable = ({data,setCustomerList}: myTableProps) => {\r\n    const [visible,setvisible] = useState(false);   \r\n    const [activeCategoryForEdit,setactiveCategoryForEdit] = useState(false); \r\n\r\n   const history = useHistory(); \r\n\r\n    const [deleteCustomerState, handleDeleteCustomerFetch] = useHandleFetch({}, 'deleteCustomer');\r\n      const handleDeleteCustomer = async (id) => {\r\n        const deleteCustomerRes = await handleDeleteCustomerFetch({\r\n          urlOptions: {\r\n            placeHolders: {\r\n              id,\r\n            }\r\n            }\r\n          });\r\n\r\n\r\n           // @ts-ignore\r\n\t\t  if(deleteCustomerRes && deleteCustomerRes.status === 'ok'){\r\n\t\t\t  openSuccessNotification('Deleted Staffs'); \r\n\t\t\t  const newCustomerList =  data.filter(item => item.id !== id);\r\n\t\t\t  setCustomerList(newCustomerList); \r\n\t\t  }\r\n      }\r\n      \r\n\r\n    return (\r\n        <>\r\n        <Table \r\n        // expandable={{\r\n        //     expandedRowRender: record => <p style={{ margin: 0 }}>{record.name}</p>,\r\n        //     rowExpandable: record => record.name !== 'Not Expandable',\r\n        //   }}\r\n        // bordered={true}\r\n        size='small'\r\n        // pagination={false}\r\n        dataSource={data}\r\n        >\r\n\r\n          <Column\r\n           title=\"Name\" \r\n           dataIndex=\"name\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n           render={(text, record: any) => (\r\n            <>\r\n              <h4\r\n                onClick={() => {\r\n                  history.push(`/admin/customer/${record.id}`)\r\n                  // setcategoryDetailVisible(true);\r\n                  setactiveCategoryForEdit(record)\r\n                }}\r\n                style={{\r\n                  fontWeight: 400,\r\n                  color: '#555',\r\n                  cursor: 'pointer'\r\n                }}>\r\n                {text}\r\n              </h4>\r\n            </>\r\n          )}\r\n            />\r\n\r\n         \r\n          <Column\r\n           title=\"Phone\" \r\n           dataIndex=\"phone\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n         \r\n            />\r\n\r\n\r\n          <Column\r\n           title=\"Country\" \r\n           dataIndex=\"country\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n         \r\n            />\r\n\r\n\r\n          <Column\r\n           title=\"City\" \r\n           dataIndex=\"city\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n         \r\n            />\r\n\r\n           <Column\r\n           title=\"Created\" \r\n           dataIndex=\"created\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n           render={(text, record : any) => (\r\n            <Space size=\"middle\">\r\n            \r\n            <h5>\r\n              <Moment>\r\n                {text}\r\n              </Moment>\r\n            </h5>\r\n             \r\n            </Space>\r\n          )}\r\n            />\r\n\r\n\r\n\r\n          {/* <Column \r\n          \r\n          className='classnameofthecolumn'\r\n\r\n          title=\"Product\" dataIndex=\"product\" key=\"product\" /> */}\r\n\r\n          {/* <Column \r\n          \r\n          className='classnameofthecolumn'\r\n\r\n          title=\"Sub Category\" dataIndex=\"subCategory\" key=\"subCategory\" /> */}\r\n        \r\n        {/* <Column\r\n          title=\"Tags\"\r\n          dataIndex=\"tags\"\r\n          key=\"tags\"\r\n          render={tags => (\r\n            <>\r\n              {tags.map((tag : any) => (\r\n                <Tag color=\"blue\" key={tag}>\r\n                  {tag}\r\n                </Tag>\r\n              ))}\r\n            </>\r\n          )}\r\n        /> */}\r\n        <Column\r\n        \r\n        className='classnameofthecolumn'\r\n          title=\"\"\r\n          key=\"action\"\r\n          align='right'\r\n          render={(text, record : any) => (\r\n            <Space size=\"middle\">\r\n              <a href='##'>\r\n               <Tooltip placement=\"top\" title='Quick Edit Customer'>\r\n              <span className='iconSize' onClick={() => {\r\n                setvisible(true)\r\n                setactiveCategoryForEdit(record); \r\n              }}> \r\n              <EditOutlined />\r\n            \r\n              </span>\r\n               </Tooltip>\r\n               </a>\r\n\r\n             \r\n\r\n              \r\n               <Popconfirm \r\n               \r\n               onConfirm={() => handleDeleteCustomer(record.id)}\r\n               title=\"Are you sure？\" okText=\"Yes\" cancelText=\"No\">\r\n           \r\n           <span \r\n             className='iconSize iconSize-danger'\r\n             > \r\n             <DeleteOutlined/>\r\n            </span>\r\n       \r\n           </Popconfirm>\r\n             \r\n            </Space>\r\n          )}\r\n        />\r\n      </Table>\r\n\r\n    \r\n\r\n    {activeCategoryForEdit &&   <QuickEdit \r\n    customerList={data}\r\n    setCustomerList={setCustomerList}\r\n    setvisible={setvisible}\r\n    visible={visible}\r\n    customer={activeCategoryForEdit}/>}\r\n    \r\n    \r\n    </>\r\n    )\r\n}\r\n\r\n\r\ninterface Props {\r\n    history: any; \r\n}\r\n\r\nconst CustomerList = ({history}: Props) => {\r\n\r\n\r\n    const [customerList,setCustomerList] = useState([]); \r\n\r\n    const [customerState, handleCustomerListFetch] = useHandleFetch({}, 'customerList');\r\n  \r\n  \r\n    useEffect(()=>{\r\n     const setCustomers = async () => {\r\n       const customers = await handleCustomerListFetch({}); \r\n       // @ts-ignore\r\n       setCustomerList(customers); \r\n     }\r\n     setCustomers(); \r\n    },[])\r\n\r\n\r\n    \r\n\r\n  \r\n  const handleSearch = (value) => {\r\n    if(customerState.data.length > 0 ){\r\n      const newCustomerList = customerState.data.filter(item => item.name.toLowerCase().includes(value.toLowerCase())); \r\n      setCustomerList(newCustomerList); \r\n    }\r\n     \r\n  }\r\n\r\n\r\n\r\n    \r\n\r\n  const [addNewCategoryVisible,setAddNewCategoryVisible] = useState(false);   \r\n\r\n  // console.log('customerState',customerState)\r\n\r\n\r\n\r\n\treturn (\r\n\t\t<>\r\n    {/* <h2 className='containerPageTitle'>\r\n      Categories\r\n    </h2> */}\r\n    <div className='categoryListContainer'>\r\n            <div className='categoryListContainer__header'>\r\n           \r\n\r\n          <div className='categoryListContainer__header-searchBar'>\r\n          <h2 className='categoryListContainer__header-title'>\r\n            Staffs\r\n            </h2>\r\n\r\n\r\n          <Search\r\n            enterButton={false}\r\n            className='searchbarClassName'\r\n          placeholder=\"search staffs..\"\r\n          onSearch={value =>handleSearch(value)}\r\n          // style={{ width: 300 }}\r\n        />\r\n          </div>\r\n            <Button\r\n          // type=\"primary\"\r\n          className='btnPrimaryClassNameoutline'\r\n          icon={<PlusOutlined />}\r\n          onClick={() => setAddNewCategoryVisible(true)}\r\n        >\r\n        Add New\r\n            \r\n            </Button>\r\n            </div>\r\n\r\n            <div className='categoryListContainer__afterHeader'>\r\n            {/* <Search\r\n      placeholder=\"search categories..\"\r\n      size=\"large\"\r\n      onSearch={value => console.log(value)}\r\n      style={{ width: 300 }}\r\n    /> */}\r\n            </div>\r\n\r\n     \r\n\t\t\t\r\n\t\t\t<div className='categoryListContainer__categoryList'>\r\n        {customerState.done && customerList.length > 0 && <MyTable\r\n        setCustomerList={setCustomerList}\r\n         data={customerList} />}\r\n        {customerState.isLoading && <DataTableSkeleton />}\r\n        {customerState.done && !(customerList.length > 0) && (\r\n\t\t\t<Empty title='No Staff found'  />\r\n\t\t)}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\r\n\r\n{customerState.done && \r\n    <AddNewStaff \r\n    setCustomerList={setCustomerList}\r\n          addNewCategoryVisible={addNewCategoryVisible} \r\n          setAddNewCategoryVisible={setAddNewCategoryVisible}\r\n          customerList={customerState.data}\r\n          \r\n           />}\r\n\r\n      \r\n\r\n        \r\n    </>\r\n\t);\r\n};\r\n\r\nexport default withRouter(CustomerList);\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Modal, Select, notification } from 'antd';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\nimport { PlusOutlined, EditOutlined, DeleteOutlined, EditFilled, CheckCircleOutlined } from '@ant-design/icons';\r\n\r\n\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport { useHandleFetch } from '../../hooks';\r\n\r\n\r\nconst { Option } = Select;\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    firstName: Yup.string()\r\n        .label('Firstname')\r\n        .required()\r\n        .min(2, 'First name must have at least 2 characters '),\r\n    lastName: Yup.string()\r\n        .label('Lastname')\r\n        .required()\r\n        .min(2, 'Lastname must have at least 2 characters '),\r\n    phone: Yup.string()\r\n        .required('Please tell us your mobile number.')\r\n        .max(13, 'Please enter a valid mobile number.'),\r\n    password: Yup.string()\r\n        .label('Password')\r\n        .required()\r\n        .min(6, 'Password must have at least 6 characters'),\r\n    address1: Yup.string()\r\n        .label('Address line 1')\r\n        .required()\r\n        .min(3, 'Address line 1 must have at least 3 characters '),\r\n\r\n    email: Yup.string().label('Email').email('Please enter a valid email'),\r\n});\r\n\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Tag Created',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Something Went Wrong',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n    });\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\r\ninterface Props {\r\n    customer: any;\r\n    setvisible: any;\r\n    visible: any;\r\n\r\n\r\n}\r\n\r\nconst QuickEdit = ({ customer, setvisible, visible }: Props) => {\r\n    const [updateCustomerState, handleUpdateCustomerFetch] = useHandleFetch({}, 'updateCustomer');\r\n\r\n\r\n    const [selectedCountryValue, setselectedCountryValue] = useState('');\r\n    const [selectedCityValue, setselectedCityValue] = useState('');\r\n\r\n    const [countryOptions, setcountryOptions] = useState([]);\r\n    const [cityOptions, setcityOptions] = useState([]);\r\n\r\n    const [countryListState, handleCountryListFetch] = useHandleFetch(\r\n        [],\r\n        'countryList'\r\n    );\r\n\r\n    const [cityListState, handleCityListFetch] = useHandleFetch([], 'cityList');\r\n\r\n    const [countryList, setCountryList] = useState([]);\r\n    const [cityList, setCityList] = useState([]);\r\n\r\n\r\n\r\n\r\n    const handleSubmit = async (values: any, actions: any) => {\r\n        const updateCustomerRes = await handleUpdateCustomerFetch({\r\n            urlOptions: {\r\n                placeHolders: {\r\n                    id: values.id,\r\n                }\r\n            },\r\n            body: {\r\n                phone: values.phone,\r\n                email: values.email,\r\n                password: values.password,\r\n                address1: values.address1,\r\n                address2: values.address2,\r\n                firstName: values.firstName,\r\n                lastName: values.lastName,\r\n                country: selectedCountryValue,\r\n                city: selectedCityValue,\r\n            },\r\n        });\r\n\r\n\r\n        // @ts-ignore\r\n        if (updateCustomerRes && updateCustomerRes.status === 'ok') {\r\n            openSuccessNotification();\r\n\r\n            // const positionInTag = () => {\r\n            //     return customerList.map(item => item.id).indexOf(customer.id);\r\n            // }\r\n\r\n            // const index = positionInTag();\r\n\r\n            // const updatedItem = Object.assign({}, tagList[index], { ...updateCustomerRes });\r\n            // const updateTagList = [...customerList.slice(0, index), updatedItem, ...customerList.slice(index + 1)];\r\n            // setCustomerList(updateTagList);\r\n\r\n        }\r\n        else {\r\n            openErrorNotification();\r\n        }\r\n\r\n        actions.setSubmitting(false);\r\n        setvisible(false)\r\n    };\r\n\r\n\r\n\r\n    const onChangeCity = (value) => {\r\n        setselectedCityValue(value);\r\n    }\r\n\r\n    const onChangeCountry = (value) => {\r\n        setselectedCountryValue(value);\r\n    }\r\n\r\n    useEffect(() => {\r\n        const setCountries = async () => {\r\n            const CountryListRes = await handleCountryListFetch({});\r\n\r\n            // @ts-ignore\r\n            if (CountryListRes && CountryListRes.length > 0) {\r\n                // @ts-ignore\r\n                const countryOptions = CountryListRes.map((country) => {\r\n                    return {\r\n                        value: country.name,\r\n                        name: country.name\r\n                    };\r\n                });\r\n                setcountryOptions(countryOptions);\r\n            }\r\n        };\r\n\r\n        setCountries();\r\n    }, []);\r\n\r\n\r\n    useEffect(() => {\r\n        const setCities = async () => {\r\n            const cityListRes = await handleCityListFetch({\r\n                urlOptions: {\r\n                    placeHolders: {\r\n                        country: selectedCountryValue,\r\n                    },\r\n                },\r\n            });\r\n\r\n            // @ts-ignore\r\n            if (cityListRes && cityListRes.length > 0) {\r\n                // @ts-ignore\r\n                const cityOptions = cityListRes.map((city) => {\r\n                    return {\r\n                        value: city.name,\r\n                        name: city.name\r\n                    };\r\n                });\r\n                setcityOptions(cityOptions);\r\n            }\r\n        };\r\n\r\n        setCities();\r\n    }, [selectedCountryValue]);\r\n\r\n\r\n    const handleCancel = (e: any) => {\r\n        setvisible(false);\r\n    };\r\n\r\n\r\n\r\n    const getisSubmitButtonDisabled = (values, isValid) => {\r\n        if (!isValid ||\r\n            !values.firstName ||\r\n            !values.lastName ||\r\n            !values.password ||\r\n            !values.phone ||\r\n            !values.address1) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    return (\r\n        <Formik\r\n            onSubmit={(values, actions) => handleSubmit(values, actions)}\r\n            validationSchema={validationSchema}\r\n            validateOnBlur={false}\r\n            enableReinitialize={true}\r\n            initialValues={\r\n                { ...customer }\r\n            }\r\n        >\r\n            {({\r\n                handleChange,\r\n                values,\r\n                handleSubmit,\r\n                errors,\r\n                isValid,\r\n                isSubmitting,\r\n                touched,\r\n                handleBlur,\r\n                setFieldTouched,\r\n                handleReset,\r\n            }) => (\r\n                    <>\r\n                        <Modal\r\n                            title=\"Quick Edit\"\r\n                            visible={visible}\r\n                            onOk={(e: any) => handleSubmit(e)}\r\n                            onCancel={handleCancel}\r\n                            okText='Update'\r\n                            okButtonProps={{\r\n                                loading: isSubmitting,\r\n                                htmlType: \"submit\",\r\n                                disabled: getisSubmitButtonDisabled(values, isValid)\r\n                            }}\r\n                            bodyStyle={{\r\n                                margin: '0',\r\n                                padding: '10px'\r\n                            }}\r\n                        >\r\n                            <div className='dubbleRowInputs'>\r\n                                <div className='dubbleRowInputs__item'>\r\n                                    <Input\r\n                                        label='First Name'\r\n                                        value={values.firstName}\r\n                                        name='firstName'\r\n                                        isError={(touched.firstName && errors.firstName) ||\r\n                                            (!isSubmitting && updateCustomerState.error['error']['firstName'])}\r\n\r\n                                        errorString={(touched.firstName && errors.firstName) ||\r\n                                            (!isSubmitting && updateCustomerState.error['error']['firstName'])}\r\n                                        onChange={(e: any) => {\r\n                                            handleChange(e);\r\n                                            setFieldTouched('firstName');\r\n                                        }}\r\n                                    />\r\n                                </div>\r\n                                <div className='dubbleRowInputs__item'>\r\n                                    <Input\r\n                                        label='Last Name'\r\n                                        value={values.lastName}\r\n                                        name='lastName'\r\n                                        isError={(touched.lastName && errors.lastName) ||\r\n                                            (!isSubmitting && updateCustomerState.error['error']['lastName'])}\r\n\r\n                                        errorString={(touched.lastName && errors.lastName) ||\r\n                                            (!isSubmitting && updateCustomerState.error['error']['lastName'])}\r\n                                        onChange={(e: any) => {\r\n                                            handleChange(e);\r\n                                            setFieldTouched('lastName');\r\n                                        }}\r\n                                    />\r\n                                </div>\r\n\r\n\r\n\r\n\r\n                            </div>\r\n\r\n\r\n\r\n                            <div className='dubbleRowInputs'>\r\n                                <div className='dubbleRowInputs__item'>\r\n                                    <Input\r\n                                        label='Phone'\r\n                                        value={values.phone}\r\n                                        name='phone'\r\n                                        isError={(touched.phone && errors.phone) ||\r\n                                            (!isSubmitting && updateCustomerState.error['error']['phone'])}\r\n\r\n                                        errorString={(touched.phone && errors.phone) ||\r\n                                            (!isSubmitting && updateCustomerState.error['error']['phone'])}\r\n                                        onChange={(e: any) => {\r\n                                            handleChange(e);\r\n                                            setFieldTouched('phone');\r\n                                        }}\r\n                                    />\r\n                                </div>\r\n                                <div className='dubbleRowInputs__item'>\r\n                                    <Input\r\n                                        label='Email'\r\n                                        value={values.email}\r\n                                        name='email'\r\n                                        isError={(touched.email && errors.email) ||\r\n                                            (!isSubmitting && updateCustomerState.error['error']['email'])}\r\n\r\n                                        errorString={(touched.email && errors.email) ||\r\n                                            (!isSubmitting && updateCustomerState.error['error']['email'])}\r\n                                        onChange={(e: any) => {\r\n                                            handleChange(e);\r\n                                            setFieldTouched('email');\r\n                                        }}\r\n                                    />\r\n                                </div>\r\n\r\n\r\n\r\n\r\n                            </div>\r\n\r\n\r\n\r\n\r\n\r\n                            <div className='dubbleRowInputs'>\r\n                                <div className='dubbleRowInputs__item'>\r\n                                    <h3 className='inputFieldLabel'>\r\n                                        Country\r\n            </h3>\r\n                                    <Select\r\n                                        showSearch\r\n                                        style={{ width: '100%' }}\r\n                                        placeholder='Select a Country'\r\n                                        optionFilterProp='children'\r\n                                        defaultValue={customer && customer.country}\r\n                                        onChange={onChangeCountry}\r\n                                        filterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n                                    >\r\n                                        {countryListState.done &&\r\n                                            countryListState.data.length > 0 &&\r\n                                            countryOptions.map((option) => {\r\n                                                return <Option value={option.value}>{option.name}</Option>;\r\n                                            })}\r\n                                    </Select>\r\n                                </div>\r\n                                <div className='dubbleRowInputs__item'>\r\n                                    <h3 className='inputFieldLabel'>\r\n                                        City\r\n            </h3>\r\n                                    <Select\r\n                                        defaultValue={customer && customer.city}\r\n                                        showSearch\r\n                                        style={{ width: '100%' }}\r\n                                        placeholder='Select a city'\r\n                                        optionFilterProp='children'\r\n                                        onChange={onChangeCity}\r\n                                        filterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n                                    >\r\n                                        {cityListState.done &&\r\n                                            cityListState.data.length > 0 &&\r\n                                            cityOptions.map((option) => {\r\n                                                return <Option value={option.value}>{option.name}</Option>;\r\n                                            })}\r\n                                    </Select>\r\n                                </div>\r\n\r\n                            </div>\r\n\r\n                            <div style={{\r\n                                marginTop: '12px'\r\n                            }}></div>\r\n\r\n\r\n\r\n                            <div className='dubbleRowInputs'>\r\n                                <div className='dubbleRowInputs__item'>\r\n                                    <Input\r\n                                        label='Address'\r\n                                        value={values.address1}\r\n                                        name='address1'\r\n                                        isError={(touched.address1 && errors.address1) ||\r\n                                            (!isSubmitting && updateCustomerState.error['error']['address1'])}\r\n\r\n                                        errorString={(touched.address1 && errors.address1) ||\r\n                                            (!isSubmitting && updateCustomerState.error['error']['address1'])}\r\n                                        onChange={(e: any) => {\r\n                                            handleChange(e);\r\n                                            setFieldTouched('address1');\r\n                                        }}\r\n                                    />\r\n                                </div>\r\n                                <div className='dubbleRowInputs__item'>\r\n                                    <Input\r\n                                        label='More specific address'\r\n                                        value={values.address2}\r\n                                        name='address2'\r\n                                        isError={(touched.address2 && errors.address2) ||\r\n                                            (!isSubmitting && updateCustomerState.error['error']['address2'])}\r\n\r\n                                        errorString={(touched.address2 && errors.address2) ||\r\n                                            (!isSubmitting && updateCustomerState.error['error']['address2'])}\r\n                                        onChange={(e: any) => {\r\n                                            handleChange(e);\r\n                                            setFieldTouched('address2');\r\n                                        }}\r\n                                    />\r\n                                </div>\r\n\r\n                            </div>\r\n\r\n\r\n\r\n\r\n                        </Modal>\r\n\r\n                    </>\r\n                )}\r\n        </Formik>\r\n    );\r\n};\r\n\r\n\r\nexport default QuickEdit;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useParams, useHistory } from \"react-router\";\r\n\r\n\r\n// import hooks\r\nimport { useHandleFetch } from \"../../hooks\";\r\n\r\n// import lib\r\nimport {\r\n    FileOutlined,\r\n    InboxOutlined,\r\n    RadiusUpleftOutlined,\r\n    RadiusUprightOutlined,\r\n    RadiusBottomleftOutlined,\r\n    RadiusBottomrightOutlined,\r\n    PlusOutlined,\r\n    DeleteOutlined,\r\n    EditOutlined,\r\n    CheckCircleOutlined\r\n} from '@ant-design/icons';\r\n\r\nimport { Skeleton, Empty, Popconfirm, Upload, message, Switch, Select, Button, notification, Table, Space, Input as CoolInput, Tooltip, Modal } from 'antd';\r\n\r\n\r\n// import components\r\nimport { DataTableSkeleton } from \"../../components/Placeholders\";\r\nimport StaffEdit from \"./StaffEdit\";\r\n\r\n\r\nconst { Column, ColumnGroup } = Table;\r\nconst { Search } = CoolInput;\r\n\r\n\r\ninterface Props {\r\n    productRecord?: any;\r\n}\r\n\r\nconst NewBrandDetail = (props: Props) => {\r\n    const [tagDetailState, handleTagDetailFetch] = useHandleFetch({}, 'tagDetail');\r\n    const [tagProductsState, handleTagProductsFetch] = useHandleFetch({}, 'tagProducts');\r\n    const [tagEditVisible, setTagEditVisible] = useState(false);\r\n\r\n\r\n    const params = useParams();\r\n    const history = useHistory();\r\n    const tagId = params['id'];\r\n\r\n    useEffect(() => {\r\n\r\n        const getBrandDetail = async () => {\r\n            await handleTagDetailFetch({\r\n                urlOptions: {\r\n                    placeHolders: {\r\n                        id: tagId\r\n                    }\r\n                }\r\n            })\r\n        };\r\n\r\n        getBrandDetail();\r\n\r\n    }, [tagId]);\r\n\r\n    useEffect(() => {\r\n        const getTagProducts = async () => {\r\n            await handleTagProductsFetch({\r\n                urlOptions: {\r\n                    placeHolders: {\r\n                        id: tagId\r\n                    }\r\n                }\r\n            })\r\n        };\r\n\r\n        getTagProducts();\r\n\r\n    }, [tagId]);\r\n\r\n\r\n\r\n\r\n    console.log('tagProductsState', tagProductsState);\r\n\r\n    console.log('brandParams', params);\r\n\r\n\r\n    return (\r\n        <div className='brandDetailContainer'>\r\n            <div className='brandDetailContainer__heading'>\r\n                <h3>\r\n                    Staff Detail\r\n                </h3>\r\n\r\n                {tagDetailState.done && tagDetailState.data && (Object.keys(tagDetailState.data).length > 0) && (\r\n                    <>\r\n                        <StaffEdit\r\n                            visible={tagEditVisible}\r\n                            setvisible={setTagEditVisible}\r\n                            customer={tagDetailState.data}\r\n                        />\r\n                        <Button\r\n                            onClick={() => setTagEditVisible(true)}\r\n                            type='link'\r\n                            icon={<EditOutlined />}\r\n                        >\r\n                            Edit\r\n                      </Button>\r\n                    </>\r\n                )}\r\n            </div>\r\n            <Skeleton\r\n                paragraph={{ rows: 2 }}\r\n                loading={tagDetailState.isLoading}>\r\n                {tagDetailState.done && tagDetailState.data && !(Object.keys(tagDetailState.data).length > 0) && (\r\n                    <Empty description='No Staffs found' image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n                )}\r\n\r\n                {tagDetailState.done && tagDetailState.data && (Object.keys(tagDetailState.data).length > 0) && (\r\n                    <div className='brandDetailContainer__header'>\r\n\r\n                        <div className='brandDetailContainer__header-info'>\r\n                            <h2>\r\n                                {tagDetailState.data['name']}\r\n                            </h2>\r\n                            <h3>\r\n                                {tagDetailState.data['description']}\r\n                            </h3>\r\n                            {tagDetailState.data['url'] && (\r\n                                <h3>\r\n                                    URL:\r\n                                    <span>\r\n                                        {tagDetailState.data['url']}\r\n                                    </span>\r\n\r\n                                </h3>\r\n                            )}\r\n                        </div>\r\n                    </div>\r\n                )}\r\n\r\n            </Skeleton>\r\n\r\n            <div className='brandDetailContainer__heading'>\r\n                <h3>\r\n                    Products\r\n                </h3>\r\n            </div>\r\n            <div className='brandDetailContainer__body'>\r\n                {tagProductsState.isLoading && <DataTableSkeleton />}\r\n                {tagProductsState.done && !(tagProductsState.data.length > 0) && (\r\n                    <div style={{\r\n                        marginTop: '100px'\r\n                    }}>\r\n                        <Empty description='No Orderss exists for this Customer ' image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n                    </div>\r\n                )}\r\n\r\n                {tagProductsState.done && tagProductsState.data && tagProductsState.data.length > 0 && (\r\n                    <>\r\n                        <Table\r\n                            style={{\r\n                                paddingTop: '10px',\r\n                                borderRadius: '5px !important',\r\n                                overflow: 'hidden',\r\n                                boxShadow: '0 0.125rem 0.625rem rgba(227, 231, 250, 0.3), 0 0.0625rem 0.125rem rgba(206, 220, 233, 0.4)'\r\n                            }}\r\n                            // expandable={{\r\n                            //     expandedRowRender: record => <p style={{ margin: 0 }}>{record.name}</p>,\r\n                            //     rowExpandable: record => record.name !== 'Not Expandable',\r\n                            //   }}\r\n                            // bordered={true}\r\n                            size='small'\r\n                            // pagination={false}\r\n                            dataSource={tagProductsState.data}\r\n                            tableLayout={'auto'}\r\n                            onHeaderRow={column => {\r\n                                return {\r\n                                    style: {\r\n                                        color: 'red !important'\r\n                                    }\r\n\r\n                                };\r\n                            }}\r\n                        >\r\n                            <Column\r\n                                title=\"\"\r\n                                dataIndex=\"cover\"\r\n                                key=\"id\"\r\n                                width={'80px'}\r\n\r\n                                className='classnameofthecolumn'\r\n\r\n                                render={(cover, record: any) => (\r\n                                    <>\r\n                                        <img\r\n                                            onClick={() => {\r\n                                                history.push(`/admin/product/${record.id}`)\r\n                                            }}\r\n                                            src={cover} alt='cover img' style={{\r\n                                                height: '40px',\r\n                                                width: '40px',\r\n                                                objectFit: \"contain\",\r\n                                                borderRadius: '3px',\r\n                                                cursor: 'pointer'\r\n                                            }} />\r\n\r\n\r\n\r\n\r\n                                    </>\r\n                                )}\r\n                            />\r\n\r\n                            <Column\r\n                                title=\"Name\"\r\n                                dataIndex=\"name\"\r\n                                key=\"id\"\r\n                                className='classnameofthecolumn'\r\n                                render={(text, record: any) => (\r\n                                    <>\r\n                                        <h4\r\n                                            onClick={() => {\r\n                                                history.push(`/admin/product/${record.id}`)\r\n                                            }}\r\n                                            style={{\r\n                                                fontWeight: 400,\r\n                                                color: '#555',\r\n                                                cursor: 'pointer'\r\n\r\n                                            }}>\r\n                                            {text}\r\n                                        </h4>\r\n\r\n\r\n                                    </>\r\n                                )}\r\n\r\n                            />\r\n\r\n                            <Column\r\n                                title=\"Offer Price\"\r\n                                dataIndex=\"offerPrice\"\r\n                                key=\"id\"\r\n                                className='classnameofthecolumn'\r\n\r\n                            />\r\n\r\n\r\n                            <Column\r\n                                title=\"Price\"\r\n                                dataIndex=\"price\"\r\n                                key=\"id\"\r\n                                className='classnameofthecolumn'\r\n\r\n                            />\r\n\r\n                        </Table>\r\n                    </>\r\n                )}\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NewBrandDetail\r\n","import React, { useState } from 'react';\r\nimport { Modal, notification } from 'antd';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport { useHandleFetch } from '../../hooks';\r\nimport { CheckCircleOutlined, PlusOutlined, EditOutlined, DeleteOutlined, EditFilled } from '@ant-design/icons';\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n\tname: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t\tmessage: message || 'Expense Updated',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t\tmessage: message || 'Something Went Wrong',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n};\r\n\r\n\r\n\r\ninterface Props {\r\n\tcategory: any;\r\n\tsetvisible: any;\r\n\tvisible: any;\r\n\ttagList: any;\r\n\tsetTagList: any;\r\n\r\n}\r\n\r\nconst QuickEdit = ({ category, setvisible, visible, tagList, setTagList }: Props) => {\r\n\tconst [updateTagState, handleUpdateCategoryFetch] = useHandleFetch({}, 'updateTag');\r\n\r\n\tconst handleSubmit = async (values: any, actions: any) => {\r\n\t\tconst updateTagRes = await handleUpdateCategoryFetch({\r\n\t\t\turlOptions: {\r\n\t\t\t\tplaceHolders: {\r\n\t\t\t\t\tid: values.id,\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tbody: {\r\n\t\t\t\tname: values.name,\r\n\t\t\t\tdescription: values.description,\r\n\t\t\t},\r\n\t\t});\r\n\r\n\t\t// @ts-ignore\r\n\t\tif (updateTagRes && updateTagRes.status === 'ok') {\r\n\t\t\topenSuccessNotification();\r\n\r\n\t\t\tconst positionInTag = () => {\r\n\t\t\t\treturn tagList.map(item => item.id).indexOf(category.id);\r\n\t\t\t}\r\n\r\n\t\t\tconst index = positionInTag();\r\n\r\n\t\t\t// @ts-ignore\r\n\t\t\tconst updatedItem = Object.assign({}, tagList[index], { ...updateTagRes });\r\n\t\t\tconst updateTagList = [...tagList.slice(0, index), updatedItem, ...tagList.slice(index + 1)];\r\n\t\t\tsetTagList(updateTagList);\r\n\r\n\t\t}\r\n\t\telse {\r\n\t\t\topenErrorNotification();\r\n\t\t}\r\n\r\n\t\tactions.setSubmitting(false);\r\n\t\tsetvisible(false)\r\n\t};\r\n\r\n\r\n\tconst handleCancel = (e: any) => {\r\n\t\tsetvisible(false);\r\n\t};\r\n\r\n\r\n\tconst getisSubmitButtonDisabled = (values, isValid) => {\r\n\t\tif (!values.name || !isValid) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\treturn (\r\n\t\t<Formik\r\n\t\t\tonSubmit={(values, actions) => handleSubmit(values, actions)}\r\n\t\t\tvalidationSchema={validationSchema}\r\n\t\t\tvalidateOnBlur={false}\r\n\t\t\tenableReinitialize={true}\r\n\t\t\tinitialValues={\r\n\t\t\t\t{ ...category }\r\n\t\t\t}\r\n\t\t>\r\n\t\t\t{({\r\n\t\t\t\thandleChange,\r\n\t\t\t\tvalues,\r\n\t\t\t\thandleSubmit,\r\n\t\t\t\terrors,\r\n\t\t\t\tisValid,\r\n\t\t\t\tisSubmitting,\r\n\t\t\t\ttouched,\r\n\t\t\t\thandleBlur,\r\n\t\t\t\tsetFieldTouched,\r\n\t\t\t\thandleReset,\r\n\t\t\t}) => (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<Modal\r\n\t\t\t\t\t\t\ttitle=\"Quick Edit\"\r\n\t\t\t\t\t\t\tvisible={visible}\r\n\t\t\t\t\t\t\tonOk={(e: any) => handleSubmit(e)}\r\n\t\t\t\t\t\t\tonCancel={handleCancel}\r\n\t\t\t\t\t\t\tokText='Update'\r\n\t\t\t\t\t\t\tokButtonProps={{\r\n\t\t\t\t\t\t\t\tloading: isSubmitting,\r\n\t\t\t\t\t\t\t\thtmlType: \"submit\",\r\n\t\t\t\t\t\t\t\tdisabled: getisSubmitButtonDisabled(values, isValid)\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\tlabel='Title'\r\n\t\t\t\t\t\t\t\tvalue={values.name}\r\n\t\t\t\t\t\t\t\tname='name'\r\n\t\t\t\t\t\t\t\tisError={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateTagState.error['error']['name'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateTagState.error['error']['name'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('name');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\tlabel='Description'\r\n\t\t\t\t\t\t\t\tvalue={values.description}\r\n\t\t\t\t\t\t\t\tname='description'\r\n\t\t\t\t\t\t\t\tisError={(touched.description && errors.description) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateTagState.error['error']['description'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.description && errors.description) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateTagState.error['error']['description'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('description');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</Modal>\r\n\r\n\t\t\t\t\t</>\r\n\t\t\t\t)}\r\n\t\t</Formik>\r\n\t);\r\n};\r\n\r\n\r\nexport default QuickEdit;\r\n","import React, { useState } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n\r\nimport { useHandleFetch } from '../../hooks';\r\n// import third party ui lib\r\nimport { Upload, message, Switch, Select, Button, notification, Modal, Tooltip } from 'antd';\r\n\r\nimport {\r\n    FileOutlined,\r\n    InboxOutlined,\r\n    FileAddOutlined,\r\n    DeleteOutlined,\r\n    CheckCircleOutlined,\r\n    CloseOutlined,\r\n    CheckOutlined,\r\n    InfoCircleOutlined,\r\n    PlusOutlined,\r\n    FileImageFilled\r\n} from '@ant-design/icons';\r\n\r\n\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport MediaLibrary from \"../../components/MediaLibrary\";\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    name: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Tag Created',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n    notification.error({\r\n        message: message || 'Something Went Wrong',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst initialValues = {\r\n    name: '',\r\n    description: '',\r\n}\r\n\r\n\r\n\r\ninterface Props {\r\n    addNewCategoryVisible?: any;\r\n    setAddNewCategoryVisible?: any;\r\n    tagList?: any;\r\n    setTagList?: any;\r\n\r\n}\r\n\r\nconst AddNewBrand = ({ addNewCategoryVisible, setAddNewCategoryVisible, tagList, setTagList }: Props) => {\r\n\r\n    const [addTagState, handleAddTagFetch] = useHandleFetch({}, 'addTag');\r\n    const [myImages, setmyImages] = useState(false);\r\n    const [visibleMedia, setvisibleMedia] = useState(false);\r\n    const [coverImageId, setCoverImageId] = useState('');\r\n\r\n\r\n    const handleSubmit = async (values: any, actions: any) => {\r\n        const addTagRes = await handleAddTagFetch({\r\n            urlOptions: {\r\n                placeHolders: {\r\n                    id: values.id,\r\n                }\r\n            },\r\n            body: {\r\n                name: values.name.trim(),\r\n                description: values.description,\r\n            },\r\n        });\r\n\r\n        // @ts-ignore\r\n        if (addTagRes && addTagRes.status === 'ok') {\r\n            openSuccessNotification();\r\n\r\n            setTagList([...tagList, {\r\n                id: addTagRes['id'] || '',\r\n                key: addTagRes['id'] || '',\r\n                name: addTagRes['name'] || '',\r\n                description: addTagRes['description'] || '',\r\n            }])\r\n            actions.resetForm();\r\n            setAddNewCategoryVisible(false);\r\n        }\r\n        else {\r\n            openErrorNotification();\r\n        }\r\n\r\n\r\n        actions.setSubmitting(false);\r\n\r\n    };\r\n\r\n\r\n    const handleCancel = (e: any) => {\r\n        setAddNewCategoryVisible(false);\r\n    };\r\n\r\n\r\n    const getisSubmitButtonDisabled = (values, isValid) => {\r\n        if (!values.name || !isValid) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n\r\n\r\n\r\n    const handleImagesDelete = (id) => {\r\n        // @ts-ignore\r\n        const newImages = myImages && myImages.filter(image => {\r\n            return image.id !== id;\r\n        })\r\n\r\n        setmyImages(newImages);\r\n    }\r\n\r\n\r\n\r\n\r\n    return (\r\n        <Formik\r\n            onSubmit={(values, actions) => handleSubmit(values, actions)}\r\n            validationSchema={validationSchema}\r\n            validateOnBlur={false}\r\n            enableReinitialize={true}\r\n            initialValues={\r\n                { ...initialValues }\r\n            }\r\n        >\r\n            {({\r\n                handleChange,\r\n                values,\r\n                handleSubmit,\r\n                errors,\r\n                isValid,\r\n                isSubmitting,\r\n                touched,\r\n                handleBlur,\r\n                setFieldTouched,\r\n                handleReset,\r\n            }) => (\r\n                    <>\r\n                        <Modal\r\n                            style={{\r\n                                top: '40px'\r\n                            }}\r\n                            title=\"Add New Tag\"\r\n                            visible={addNewCategoryVisible}\r\n                            onOk={(e: any) => handleSubmit(e)}\r\n                            onCancel={handleCancel}\r\n                            okText='Create'\r\n                            okButtonProps={{\r\n                                loading: isSubmitting,\r\n                                htmlType: \"submit\",\r\n                                disabled: getisSubmitButtonDisabled(values, isValid)\r\n                            }}\r\n                        >\r\n                            <Input\r\n                                label='Title'\r\n                                value={values.name}\r\n                                name='name'\r\n                                isError={(touched.name && errors.name) ||\r\n                                    (!isSubmitting && addTagState.error['error']['name'])}\r\n\r\n                                errorString={(touched.name && errors.name) ||\r\n                                    (!isSubmitting && addTagState.error['error']['name'])}\r\n                                onChange={(e: any) => {\r\n                                    handleChange(e);\r\n                                    setFieldTouched('name');\r\n                                }}\r\n                            />\r\n                            <TextArea\r\n                                label='Description'\r\n                                value={values.description}\r\n                                name='description'\r\n                                isError={(touched.description && errors.description) ||\r\n                                    (!isSubmitting && addTagState.error['error']['description'])}\r\n\r\n                                errorString={(touched.description && errors.description) ||\r\n                                    (!isSubmitting && addTagState.error['error']['description'])}\r\n                                onChange={(e: any) => {\r\n                                    handleChange(e);\r\n                                    setFieldTouched('description');\r\n                                }}\r\n                            />\r\n\r\n                        </Modal>\r\n\r\n                        <MediaLibrary\r\n                            setvisible={setvisibleMedia}\r\n                            visible={visibleMedia}\r\n                            setmyImages={setmyImages}\r\n                            myImages={myImages}\r\n                            isModalOpenForImages={true}\r\n\r\n                        />\r\n                    </>\r\n                )}\r\n        </Formik>\r\n\r\n\r\n\r\n\r\n    );\r\n};\r\n\r\nexport default AddNewBrand;\r\n","import React, { useState, useEffect } from 'react';\r\n\r\n// import third party ui lib\r\nimport { Empty, Popconfirm, Upload, message, Switch, Select, Button, notification, Table, Space, Input as CoolInput, Tooltip, Modal } from 'antd';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { useHistory } from 'react-router';\r\n\r\n\r\n\r\nimport {\r\n\tFileOutlined,\r\n\tInboxOutlined,\r\n\tRadiusUpleftOutlined,\r\n\tRadiusUprightOutlined,\r\n\tRadiusBottomleftOutlined,\r\n\tRadiusBottomrightOutlined,\r\n\tPlusOutlined,\r\n\tDeleteOutlined,\r\n\tEditOutlined,\r\n\tCheckCircleOutlined\r\n} from '@ant-design/icons';\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n\r\n\r\n/// import hooks\r\nimport { useFetch, useHandleFetch } from \"../../hooks\";\r\n\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport { DataTableSkeleton } from \"../../components/Placeholders\";\r\nimport QuickEdit from \"./QuickEdit\"\r\nimport AddNewExpense from \"./AddNewExpense\"\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t\tmessage: message || 'Expense Created',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n\tnotification.error({\r\n\t\tmessage: message || 'Something Went Wrong',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n};\r\n\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n\tname: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\n\r\nconst initialValues = {\r\n\tname: '',\r\n\tdescription: ''\r\n}\r\n\r\n\r\nconst { Column, ColumnGroup } = Table;\r\nconst { Search } = CoolInput;\r\n\r\n\r\n\r\nconst MyTable = ({ data, setTagList }) => {\r\n\tconst [visible, setvisible] = useState(false);\r\n\tconst [activeCategoryForEdit, setactiveCategoryForEdit] = useState(false);\r\n\tconst [deleteTagState, handleDeleteTagFetch] = useHandleFetch({}, 'deleteTag');\r\n\r\n\tconst history = useHistory();\r\n\r\n\r\n\tconst handleDeleteTag = async (id) => {\r\n\t\tconst deleteTagRes = await handleDeleteTagFetch({\r\n\t\t\turlOptions: {\r\n\t\t\t\tplaceHolders: {\r\n\t\t\t\t\tid,\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\r\n\r\n\t\t// @ts-ignore\r\n\t\tif (deleteTagRes && deleteTagRes.status === 'ok') {\r\n\t\t\topenSuccessNotification('Deleted Expense');\r\n\t\t\tconst newtagList = data.filter(item => item.id !== id);\r\n\t\t\tsetTagList(newtagList);\r\n\t\t}\r\n\r\n\r\n\t}\r\n\r\n\r\n\tconst handleOk = (e: any) => {\r\n\t\tsetvisible(false);\r\n\r\n\t};\r\n\r\n\tconst handleCancel = (e: any) => {\r\n\t\tsetvisible(false);\r\n\t};\r\n\r\n\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Table\r\n\t\t\t\t// expandable={{\r\n\t\t\t\t//     expandedRowRender: record => <p style={{ margin: 0 }}>{record.name}</p>,\r\n\t\t\t\t//     rowExpandable: record => record.name !== 'Not Expandable',\r\n\t\t\t\t//   }}\r\n\t\t\t\t// bordered={true}\r\n\t\t\t\tsize='small'\r\n\t\t\t\t// pagination={false}\r\n\t\t\t\tdataSource={data}\r\n\t\t\t>\r\n\r\n\t\t\t\t<Column\r\n\t\t\t\t\ttitle=\"Name\"\r\n\t\t\t\t\tdataIndex=\"name\"\r\n\t\t\t\t\tkey=\"id\"\r\n\t\t\t\t\tclassName='classnameofthecolumn'\r\n\t\t\t\t\trender={(text, record: any) => (\r\n\t\t\t\t\t\t<>\r\n\r\n\t\t\t\t\t\t\t<h4\r\n\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\thistory.push(`/admin/tag/${record.id}`)\r\n\t\t\t\t\t\t\t\t\t// setBrandDetailVisible(true);\r\n\t\t\t\t\t\t\t\t\tsetactiveCategoryForEdit(record)\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\tfontWeight: 400,\r\n\t\t\t\t\t\t\t\t\tcolor: '#555',\r\n\t\t\t\t\t\t\t\t\tcursor: 'pointer'\r\n\r\n\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t{text}\r\n\t\t\t\t\t\t\t</h4>\r\n\r\n\r\n\t\t\t\t\t\t</>\r\n\t\t\t\t\t)}\r\n\t\t\t\t/>\r\n\r\n\t\t\t\t<Column\r\n\t\t\t\t\ttitle=\"Description\"\r\n\t\t\t\t\tdataIndex=\"description\"\r\n\t\t\t\t\tkey=\"id\"\r\n\t\t\t\t\tclassName='classnameofthecolumn'\r\n\r\n\t\t\t\t/>\r\n\r\n\r\n\t\t\t\t<Column\r\n\t\t\t\t\ttitle=\"Product\"\r\n\t\t\t\t\tdataIndex=\"productCount\"\r\n\t\t\t\t\tkey=\"id\"\r\n\t\t\t\t\tclassName='classnameofthecolumn'\r\n\t\t\t\t/>\r\n\r\n\t\t\t\t<Column\r\n\r\n\t\t\t\t\tclassName='classnameofthecolumn'\r\n\t\t\t\t\ttitle=\"\"\r\n\t\t\t\t\tkey=\"action\"\r\n\t\t\t\t\talign='right'\r\n\t\t\t\t\trender={(text, record: any) => (\r\n\t\t\t\t\t\t<Space size=\"middle\">\r\n\t\t\t\t\t\t\t<a href='##'>\r\n\t\t\t\t\t\t\t\t<Tooltip placement=\"top\" title='Quick Edit Tag'>\r\n\t\t\t\t\t\t\t\t\t<span className='iconSize' onClick={() => {\r\n\t\t\t\t\t\t\t\t\t\tsetvisible(true)\r\n\t\t\t\t\t\t\t\t\t\tsetactiveCategoryForEdit(record);\r\n\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t<EditOutlined />\r\n\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t\t</a>\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t<Popconfirm\r\n\t\t\t\t\t\t\t\tonConfirm={() => handleDeleteTag(record.id)}\r\n\t\t\t\t\t\t\t\ttitle=\"Are you sure？\" okText=\"Yes\" cancelText=\"No\">\r\n\t\t\t\t\t\t\t\t<span\r\n\t\t\t\t\t\t\t\t\tclassName='iconSize iconSize-danger'\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t<DeleteOutlined />\r\n\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t</Popconfirm>\r\n\t\t\t\t\t\t</Space>\r\n\t\t\t\t\t)}\r\n\t\t\t\t/>\r\n\t\t\t</Table>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\t\t\t{activeCategoryForEdit && <QuickEdit\r\n\t\t\t\ttagList={data}\r\n\t\t\t\tsetTagList={setTagList}\r\n\t\t\t\tsetvisible={setvisible}\r\n\t\t\t\tvisible={visible}\r\n\t\t\t\tcategory={activeCategoryForEdit} />}\r\n\t\t</>\r\n\t)\r\n}\r\n\r\n\r\n\r\n\r\ninterface Props { }\r\n\r\nconst TagList = ({ }: Props) => {\r\n\r\n\r\n\tconst [tagList, setTagList] = useState([]);\r\n\r\n\tconst [tagState, handleTagListFetch] = useHandleFetch({}, 'tagList');\r\n\r\n\r\n\tuseEffect(() => {\r\n\t\tconst setTags = async () => {\r\n\t\t\tconst tags = await handleTagListFetch({});\r\n\t\t\t// @ts-ignore\r\n\t\t\tsetTagList(tags);\r\n\t\t}\r\n\t\tsetTags();\r\n\t}, [])\r\n\r\n\r\n\r\n\tconst [addTagState, handleAddTagFetch] = useHandleFetch({}, 'addTag');\r\n\tconst [addNewCategoryVisible, setAddNewCategoryVisible] = useState(false);\r\n\r\n\tconst handleSubmit = async (values: any, actions: any) => {\r\n\t\tconst addTagRes = await handleAddTagFetch({\r\n\t\t\turlOptions: {\r\n\t\t\t\tplaceHolders: {\r\n\t\t\t\t\tid: values.id,\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tbody: {\r\n\t\t\t\tname: values.name.trim(),\r\n\t\t\t\tdescription: values.description,\r\n\t\t\t},\r\n\t\t});\r\n\r\n\t\t// @ts-ignore\r\n\t\tif (addTagRes && addTagRes.status === 'ok') {\r\n\t\t\topenSuccessNotification();\r\n\r\n\t\t\tsetTagList([...tagList, {\r\n\t\t\t\tid: addTagRes['id'] || '',\r\n\t\t\t\tkey: addTagRes['id'] || '',\r\n\t\t\t\tname: addTagRes['name'] || '',\r\n\t\t\t\tdescription: addTagRes['description'] || '',\r\n\t\t\t}])\r\n\t\t\tactions.resetForm();\r\n\t\t}\r\n\t\tactions.setSubmitting(false);\r\n\r\n\t};\r\n\r\n\r\n\r\n\tconst getisSubmitButtonDisabled = (values, isValid) => {\r\n\t\tif (!values.name || !isValid) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\r\n\tconst handleOkAddNewCategory = (e: any) => {\r\n\t\tsetAddNewCategoryVisible(false);\r\n\r\n\t};\r\n\r\n\tconst handleCancelAddNewCategory = (e: any) => {\r\n\t\tsetAddNewCategoryVisible(false);\r\n\t};\r\n\r\n\tconst handleSearch = (value) => {\r\n\t\tif (tagState.data.length > 0) {\r\n\t\t\tconst newTagList = tagState.data.filter(item => item.name.toLowerCase().includes(value.toLowerCase()));\r\n\t\t\tsetTagList(newTagList);\r\n\t\t}\r\n\r\n\t}\r\n\r\n\treturn (\r\n\t\t<>\r\n\r\n\t\t\t<div className='categoryListContainer'>\r\n\t\t\t\t<div className='categoryListContainer__header'>\r\n\t\t\t\t\t<div className='categoryListContainer__header-searchBar-tag'>\r\n\t\t\t\t\t\t<h2 className='categoryListContainer__header-title'>\r\n\t\t\t\t\t\t\tExpenses\r\n                       </h2>\r\n\r\n\r\n\t\t\t\t\t\t<Search\r\n\t\t\t\t\t\t\tenterButton={false}\r\n\t\t\t\t\t\t\tclassName='searchbarClassName'\r\n\t\t\t\t\t\t\tplaceholder=\"search expense..\"\r\n\t\t\t\t\t\t\tonSearch={value => handleSearch(value)}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\t// type=\"primary\"\r\n\t\t\t\t\t\tclassName='btnPrimaryClassNameoutline'\r\n\t\t\t\t\t\ticon={<PlusOutlined />}\r\n\t\t\t\t\t\tonClick={() => setAddNewCategoryVisible(true)}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tAdd New\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className='categoryListContainer__categoryList'>\r\n\t\t\t\t\t{tagState.done && tagList.length > 0 && <MyTable\r\n\t\t\t\t\t\tsetTagList={setTagList}\r\n\t\t\t\t\t\tdata={tagList} />}\r\n\t\t\t\t\t{tagState.isLoading && <DataTableSkeleton />}\r\n\r\n\r\n\t\t\t\t\t{tagState.done && !(tagList.length > 0) && (\r\n\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\tmarginTop: '50px'\r\n\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t<Empty description='No Expense found' image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\r\n\t\t\t<AddNewExpense\r\n\t\t\t\ttagList={tagList}\r\n\t\t\t\tsetTagList={setTagList}\r\n\t\t\t\taddNewCategoryVisible={addNewCategoryVisible}\r\n\t\t\t\tsetAddNewCategoryVisible={setAddNewCategoryVisible}\r\n\t\t\t/>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default TagList;\r\n","import React, { useState } from 'react';\r\nimport { Modal, notification } from 'antd';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport { useHandleFetch } from '../../hooks';\r\nimport { CheckCircleOutlined, PlusOutlined, EditOutlined, DeleteOutlined, EditFilled } from '@ant-design/icons';\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    name: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n    description: Yup.string().label('Description').required('Description is required')\r\n});\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Expense Updated',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Something Went Wrong',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n    });\r\n};\r\n\r\n\r\ninterface Props {\r\n    tagEditVisible?: any;\r\n    setTagEditVisible?: any;\r\n    tagDetailData?: any;\r\n}\r\n\r\nconst QuickEdit = ({ tagEditVisible, setTagEditVisible, tagDetailData }: Props) => {\r\n    const [updateTagState, handleUpdateCategoryFetch] = useHandleFetch({}, 'updateTag');\r\n\r\n    const handleSubmit = async (values: any, actions: any) => {\r\n        const updateTagRes = await handleUpdateCategoryFetch({\r\n            urlOptions: {\r\n                placeHolders: {\r\n                    id: values.id,\r\n                }\r\n            },\r\n            body: {\r\n                name: values.name,\r\n                description: values.description,\r\n            },\r\n        });\r\n\r\n        // @ts-ignore\r\n        if (updateTagRes && updateTagRes.status === 'ok') {\r\n            openSuccessNotification();\r\n\r\n            // const positionInTag = () => {\r\n            //     return tagList.map(item => item.id).indexOf(category.id);\r\n            // }\r\n\r\n            // const index = positionInTag();\r\n\r\n            // const updatedItem = Object.assign({}, tagList[index], { ...updateTagRes });\r\n            // const updateTagList = [...tagList.slice(0, index), updatedItem, ...tagList.slice(index + 1)];\r\n            // setTagList(updateTagList);\r\n\r\n        }\r\n        else {\r\n            openErrorNotification();\r\n        }\r\n\r\n        actions.setSubmitting(false);\r\n        setTagEditVisible(false)\r\n    };\r\n\r\n\r\n    const handleCancel = (e: any) => {\r\n        setTagEditVisible(false);\r\n    };\r\n\r\n\r\n    const getisSubmitButtonDisabled = (values, isValid) => {\r\n        if (!values.name || !values.description || !isValid) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    return (\r\n        <Formik\r\n            onSubmit={(values, actions) => handleSubmit(values, actions)}\r\n            validationSchema={validationSchema}\r\n            validateOnBlur={false}\r\n            enableReinitialize={true}\r\n            initialValues={\r\n                { ...tagDetailData }\r\n            }\r\n        >\r\n            {({\r\n                handleChange,\r\n                values,\r\n                handleSubmit,\r\n                errors,\r\n                isValid,\r\n                isSubmitting,\r\n                touched,\r\n                handleBlur,\r\n                setFieldTouched,\r\n                handleReset,\r\n            }) => (\r\n                    <>\r\n                        <Modal\r\n                            title=\"Expense Edit\"\r\n                            visible={tagEditVisible}\r\n                            onOk={(e: any) => handleSubmit(e)}\r\n                            onCancel={handleCancel}\r\n                            okText='Update'\r\n                            okButtonProps={{\r\n                                loading: isSubmitting,\r\n                                htmlType: \"submit\",\r\n                                disabled: getisSubmitButtonDisabled(values, isValid)\r\n                            }}\r\n                        >\r\n                            <Input\r\n                                label='Title'\r\n                                value={values.name}\r\n                                name='name'\r\n                                isError={(touched.name && errors.name) ||\r\n                                    (!isSubmitting && updateTagState.error['error']['name'])}\r\n\r\n                                errorString={(touched.name && errors.name) ||\r\n                                    (!isSubmitting && updateTagState.error['error']['name'])}\r\n                                onChange={(e: any) => {\r\n                                    handleChange(e);\r\n                                    setFieldTouched('name');\r\n                                }}\r\n                            />\r\n                            <TextArea\r\n                                label='Description'\r\n                                value={values.description}\r\n                                name='description'\r\n                                isError={(touched.description && errors.description) ||\r\n                                    (!isSubmitting && updateTagState.error['error']['description'])}\r\n\r\n                                errorString={(touched.description && errors.description) ||\r\n                                    (!isSubmitting && updateTagState.error['error']['description'])}\r\n                                onChange={(e: any) => {\r\n                                    handleChange(e);\r\n                                    setFieldTouched('description');\r\n                                }}\r\n                            />\r\n                        </Modal>\r\n\r\n                    </>\r\n                )}\r\n        </Formik>\r\n    );\r\n};\r\n\r\n\r\nexport default QuickEdit;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useParams, useHistory } from \"react-router\";\r\n\r\n\r\n// import hooks\r\nimport { useHandleFetch } from \"../../hooks\";\r\n\r\n// import lib\r\nimport {\r\n    FileOutlined,\r\n    InboxOutlined,\r\n    RadiusUpleftOutlined,\r\n    RadiusUprightOutlined,\r\n    RadiusBottomleftOutlined,\r\n    RadiusBottomrightOutlined,\r\n    PlusOutlined,\r\n    DeleteOutlined,\r\n    EditOutlined,\r\n    CheckCircleOutlined\r\n} from '@ant-design/icons';\r\n\r\nimport { Skeleton, Empty, Popconfirm, Upload, message, Switch, Select, Button, notification, Table, Space, Input as CoolInput, Tooltip, Modal } from 'antd';\r\n\r\n\r\n// import components\r\nimport { DataTableSkeleton } from \"../../components/Placeholders\";\r\nimport ExpenseEdit from \"./ExpenseEdit\";\r\n\r\n\r\nconst { Column, ColumnGroup } = Table;\r\nconst { Search } = CoolInput;\r\n\r\n\r\ninterface Props {\r\n    productRecord?: any;\r\n}\r\n\r\nconst NewBrandDetail = (props: Props) => {\r\n    const [tagDetailState, handleTagDetailFetch] = useHandleFetch({}, 'tagDetail');\r\n    const [tagProductsState, handleTagProductsFetch] = useHandleFetch({}, 'tagProducts');\r\n    const [tagEditVisible, setTagEditVisible] = useState(false);\r\n\r\n\r\n    const params = useParams();\r\n    const history = useHistory();\r\n    const tagId = params['id'];\r\n\r\n    useEffect(() => {\r\n\r\n        const getBrandDetail = async () => {\r\n            await handleTagDetailFetch({\r\n                urlOptions: {\r\n                    placeHolders: {\r\n                        id: tagId\r\n                    }\r\n                }\r\n            })\r\n        };\r\n\r\n        getBrandDetail();\r\n\r\n    }, [tagId]);\r\n\r\n    useEffect(() => {\r\n        const getTagProducts = async () => {\r\n            await handleTagProductsFetch({\r\n                urlOptions: {\r\n                    placeHolders: {\r\n                        id: tagId\r\n                    }\r\n                }\r\n            })\r\n        };\r\n\r\n        getTagProducts();\r\n\r\n    }, [tagId]);\r\n\r\n\r\n\r\n\r\n    console.log('tagProductsState', tagProductsState);\r\n\r\n    console.log('brandParams', params);\r\n\r\n\r\n    return (\r\n        <div className='brandDetailContainer'>\r\n            <div className='brandDetailContainer__heading'>\r\n                <h3>\r\n                    Expense Detail\r\n                </h3>\r\n\r\n                {tagDetailState.done && tagDetailState.data && (Object.keys(tagDetailState.data).length > 0) && (\r\n                    <>\r\n                        <ExpenseEdit\r\n                            tagEditVisible={tagEditVisible}\r\n                            setTagEditVisible={setTagEditVisible}\r\n                            tagDetailData={tagDetailState.data}\r\n                        />\r\n                        <Button\r\n                            onClick={() => setTagEditVisible(true)}\r\n                            type='link'\r\n                            icon={<EditOutlined />}\r\n                        >\r\n                            Edit\r\n                      </Button>\r\n                    </>\r\n                )}\r\n            </div>\r\n            <Skeleton\r\n                paragraph={{ rows: 2 }}\r\n                loading={tagDetailState.isLoading}>\r\n                {tagDetailState.done && tagDetailState.data && !(Object.keys(tagDetailState.data).length > 0) && (\r\n                    <Empty description='No Expense found' image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n                )}\r\n\r\n                {tagDetailState.done && tagDetailState.data && (Object.keys(tagDetailState.data).length > 0) && (\r\n                    <div className='brandDetailContainer__header'>\r\n\r\n                        <div className='brandDetailContainer__header-info'>\r\n                            <h2>\r\n                                {tagDetailState.data['name']}\r\n                            </h2>\r\n                            <h3>\r\n                                {tagDetailState.data['description']}\r\n                            </h3>\r\n                            {tagDetailState.data['url'] && (\r\n                                <h3>\r\n                                    URL:\r\n                                    <span>\r\n                                        {tagDetailState.data['url']}\r\n                                    </span>\r\n\r\n                                </h3>\r\n                            )}\r\n                        </div>\r\n                    </div>\r\n                )}\r\n\r\n            </Skeleton>\r\n\r\n            <div className='brandDetailContainer__heading'>\r\n                <h3>\r\n                    Products\r\n                </h3>\r\n            </div>\r\n            <div className='brandDetailContainer__body'>\r\n                {tagProductsState.isLoading && <DataTableSkeleton />}\r\n                {tagProductsState.done && !(tagProductsState.data.length > 0) && (\r\n                    <div style={{\r\n                        marginTop: '100px'\r\n                    }}>\r\n                        <Empty description='No Products exists for this tag' image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n                    </div>\r\n                )}\r\n\r\n                {tagProductsState.done && tagProductsState.data && tagProductsState.data.length > 0 && (\r\n                    <>\r\n                        <Table\r\n                            style={{\r\n                                paddingTop: '10px',\r\n                                borderRadius: '5px !important',\r\n                                overflow: 'hidden',\r\n                                boxShadow: '0 0.125rem 0.625rem rgba(227, 231, 250, 0.3), 0 0.0625rem 0.125rem rgba(206, 220, 233, 0.4)'\r\n                            }}\r\n                            // expandable={{\r\n                            //     expandedRowRender: record => <p style={{ margin: 0 }}>{record.name}</p>,\r\n                            //     rowExpandable: record => record.name !== 'Not Expandable',\r\n                            //   }}\r\n                            // bordered={true}\r\n                            size='small'\r\n                            // pagination={false}\r\n                            dataSource={tagProductsState.data}\r\n                            tableLayout={'auto'}\r\n                            onHeaderRow={column => {\r\n                                return {\r\n                                    style: {\r\n                                        color: 'red !important'\r\n                                    }\r\n\r\n                                };\r\n                            }}\r\n                        >\r\n                            <Column\r\n                                title=\"\"\r\n                                dataIndex=\"cover\"\r\n                                key=\"id\"\r\n                                width={'80px'}\r\n\r\n                                className='classnameofthecolumn'\r\n\r\n                                render={(cover, record: any) => (\r\n                                    <>\r\n                                        <img\r\n                                            onClick={() => {\r\n                                                history.push(`/admin/product/${record.id}`)\r\n                                            }}\r\n                                            src={cover} alt='cover img' style={{\r\n                                                height: '40px',\r\n                                                width: '40px',\r\n                                                objectFit: \"contain\",\r\n                                                borderRadius: '3px',\r\n                                                cursor: 'pointer'\r\n                                            }} />\r\n\r\n\r\n\r\n\r\n                                    </>\r\n                                )}\r\n                            />\r\n\r\n                            <Column\r\n                                title=\"Name\"\r\n                                dataIndex=\"name\"\r\n                                key=\"id\"\r\n                                className='classnameofthecolumn'\r\n                                render={(text, record: any) => (\r\n                                    <>\r\n                                        <h4\r\n                                            onClick={() => {\r\n                                                history.push(`/admin/product/${record.id}`)\r\n                                            }}\r\n                                            style={{\r\n                                                fontWeight: 400,\r\n                                                color: '#555',\r\n                                                cursor: 'pointer'\r\n\r\n                                            }}>\r\n                                            {text}\r\n                                        </h4>\r\n\r\n\r\n                                    </>\r\n                                )}\r\n\r\n                            />\r\n\r\n                            <Column\r\n                                title=\"Offer Price\"\r\n                                dataIndex=\"offerPrice\"\r\n                                key=\"id\"\r\n                                className='classnameofthecolumn'\r\n\r\n                            />\r\n\r\n\r\n                            <Column\r\n                                title=\"Price\"\r\n                                dataIndex=\"price\"\r\n                                key=\"id\"\r\n                                className='classnameofthecolumn'\r\n\r\n                            />\r\n\r\n                        </Table>\r\n                    </>\r\n                )}\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NewBrandDetail\r\n","import React, { useEffect, useState } from 'react';\r\n\r\n\r\n// import hooks\r\nimport { useHandleFetch } from '../../hooks';\r\n\r\n// import components \r\nimport Empty from \"../../components/Empty\";\r\n\r\n\r\n// import libraries \r\nimport { Button, Tag, Input, Spin } from 'antd';\r\nimport {\r\n  PlusOutlined\r\n} from '@ant-design/icons';\r\n\r\n\r\n\r\n\r\nconst { CheckableTag } = Tag;\r\nconst { Search } = Input;\r\n\r\ninterface Props {\r\n  setTagIds?: any;\r\n  selectedTags?: any;\r\n  setSelectedTags?: any;\r\n}\r\n\r\n\r\nconst Tags = ({\r\n  setTagIds,\r\n  setSelectedTags,\r\n  selectedTags,\r\n\r\n}: Props) => {\r\n  const [options, setoptions] = useState([]);\r\n  const [selectedOpions, setselectedOptions] = useState([]);\r\n  const [tagState, handleTagListFetch] = useHandleFetch({}, 'dealerAreaList');\r\n  const [searchValue, setsearchValue] = useState('');\r\n\r\n\r\n  const handleChange = (tag, checked) => {\r\n    const nextSelectedTags = checked ? [...selectedTags, tag] : selectedTags.filter(t => t !== tag);\r\n    setSelectedTags(nextSelectedTags);\r\n\r\n    if (tagState.done && tagState.data.length > 0 && nextSelectedTags.length > 0) {\r\n      const selectedCategoryIds = nextSelectedTags.map((item) => {\r\n        const selectedcategory = tagState.data.find(\r\n          (cat) => cat.name.toLowerCase() === item.toLowerCase()\r\n        );\r\n        if (selectedcategory) {\r\n          return selectedcategory.id;\r\n        }\r\n      });\r\n      setTagIds(selectedCategoryIds);\r\n    }\r\n  }\r\n\r\n\r\n  useEffect(() => {\r\n    console.log('itwhere')\r\n    if (tagState.data && tagState.data.length > 0 && selectedTags.length > 0) {\r\n      const selectedCategoryIds = selectedTags.map((item) => {\r\n        const selectedcategory = tagState.data.find(\r\n          (cat) => cat.id === item\r\n        );\r\n        if (selectedcategory) {\r\n          return selectedcategory.name;\r\n        }\r\n      });\r\n      setSelectedTags(selectedCategoryIds);\r\n    }\r\n  }, [tagState]);\r\n\r\n\r\n  console.log('areaSelectedTaga',selectedTags)\r\n  useEffect(() => {\r\n    const setTags = async () => {\r\n      const tagListRes = await handleTagListFetch({\r\n        urlOptions: {\r\n          params: {\r\n            isSubCategory: false\r\n          }\r\n        }\r\n      });\r\n\r\n      // @ts-ignoref\r\n      if (tagListRes && tagListRes.length > 0) {\r\n        // @ts-ignore\r\n        const tagOptions = tagListRes.map((tag) => {\r\n          return tag.name\r\n        });\r\n        setoptions(tagOptions);\r\n      }\r\n\r\n    };\r\n\r\n    setTags();\r\n  }, []);\r\n\r\n\r\n\r\n  // const handleChange = (selectItems) => {\r\n  //   setselectedOptions(selectItems)\r\n\r\n  //   if (tagState.done && tagState.data.length > 0 && selectItems.length > 0) {\r\n  //     const selectedCategoryIds = selectItems.map((item) => {\r\n  //       const selectedcategory = tagState.data.find(\r\n  //         (cat) => cat.name.toLowerCase() === item.toLowerCase()\r\n  //       );\r\n  //       if (selectedcategory) {\r\n  //         return selectedcategory.id;\r\n  //       }\r\n  //     });\r\n  //     setTagIds(selectedCategoryIds);\r\n  //   }\r\n\r\n\r\n  // }\r\n\r\n\r\n  const onSearchChange = (e) => {\r\n    setsearchValue(e.target.value);\r\n\r\n    if (e.target.value === '') {\r\n      if (tagState.data && tagState.data.length > 0) {\r\n        // @ts-ignore\r\n        const categoryNames = tagState.data.map((cat) => cat.name);\r\n        setoptions(categoryNames);\r\n      }\r\n    } else {\r\n      const newOptions =\r\n        options.length > 0\r\n          ? options.filter((option) => {\r\n            return option.toLowerCase().includes(searchValue.toLowerCase());\r\n          })\r\n          : [];\r\n\r\n      setoptions(newOptions);\r\n    }\r\n  };\r\n\r\n\r\n  console.log('dealerAreaList', tagState)\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n\r\n      {tagState.isLoading && (\r\n        <div style={{\r\n          padding: '15px 0',\r\n          width: '100%',\r\n          height: \"100%\",\r\n          display: \"flex\",\r\n          justifyContent: 'center',\r\n          alignItems: 'center'\r\n        }}>\r\n          <Spin />\r\n        </div>\r\n      )}\r\n\r\n\r\n\r\n      {tagState.done && !(tagState.data.length > 0) && (\r\n        <div style={{\r\n          width: '100%',\r\n          height: \"100%\",\r\n          display: \"flex\",\r\n          justifyContent: 'center',\r\n          alignItems: 'center'\r\n        }}>\r\n          <Empty title='No Area found' height={100} />\r\n        </div>\r\n      )}\r\n\r\n\r\n\r\n\r\n      {tagState.done && tagState.data.length > 0 && options.length > 0 && (\r\n        <>\r\n          <div className='addProduct__categoryBoxContainer-searchBox'>\r\n            <Search\r\n              width={'90%'}\r\n              style={{\r\n                height: '30px',\r\n                borderRadius: '3px !important',\r\n                borderColor: '#eee !important'\r\n              }}\r\n              size='middle'\r\n              placeholder='Dhanmondi, mirpur'\r\n              onSearch={(value) => console.log(value)}\r\n              onChange={onSearchChange}\r\n            />\r\n          </div>\r\n\r\n          {options.map(tag => (\r\n            <>\r\n              <CheckableTag\r\n                key={tag}\r\n                checked={selectedTags.indexOf(tag) > -1}\r\n                onChange={checked => handleChange(tag, checked)}\r\n              >\r\n                {tag}\r\n              </CheckableTag>\r\n            </>\r\n          ))}\r\n        </>\r\n      )}\r\n\r\n\r\n      {/* \r\n      <div style={{\r\n        marginTop: '15px'\r\n      }}>\r\n\r\n      </div>\r\n      <Button\r\n\r\n        // type=\"primary\"\r\n        className='btnSecondaryPlusOutline'\r\n        icon={<PlusOutlined />}\r\n      >\r\n        Add New\r\n      </Button> */}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Tags\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n\r\nimport { useHandleFetch } from '../../hooks';\r\n// import third party ui lib\r\nimport { Upload, message, Switch, Select, Button, notification, Modal, Empty, Form } from 'antd';\r\n\r\nimport {\r\n\tFileOutlined,\r\n\tInboxOutlined,\r\n\tRadiusUpleftOutlined,\r\n\tRadiusUprightOutlined,\r\n\tRadiusBottomleftOutlined,\r\n\tRadiusBottomrightOutlined,\r\n\tDeleteOutlined,\r\n\tFileAddOutlined,\r\n\tCheckCircleOutlined\r\n} from '@ant-design/icons';\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\n\r\nimport Areas from \"./Areas\";\r\nconst { Option } = Select;\r\n\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n\tfirstName: Yup.string()\r\n\t\t.label('First name')\r\n\t\t.required()\r\n\t\t.min(2, 'First name must have at least 2 characters '),\r\n\tlastName: Yup.string()\r\n\t\t.label('Lastname')\r\n\t\t.required()\r\n\t\t.min(2, 'Last name must have at least 2 characters '),\r\n\tphone: Yup.string()\r\n\t\t.required('Please tell us your mobile number.')\r\n\t\t.max(13, 'Please enter a valid mobile number.'),\r\n\tpassword: Yup.string()\r\n\t\t.label('Password')\r\n\t\t.required()\r\n\t\t.min(6, 'Password must have at least 6 characters'),\r\n\r\n\temail: Yup.string().label('Email').email('Please enter a valid email'),\r\n});\r\n\r\n\r\n\r\n\r\nconst initialValues = {\r\n\tphone: '',\r\n\temail: '',\r\n\tfirstName: '',\r\n\tlastName: '',\r\n\taddress: '',\r\n\tzipCode: '',\r\n\tpassword: '',\r\n\tcode: '',\r\n\tcommission: '',\r\n\tdepositMoney: ''\r\n};\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t\tmessage: message || 'Dealer Created!',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n\tnotification.error({\r\n\t\tmessage: message || 'Something Went Wrong',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n};\r\n\r\n\r\ninterface Props {\r\n\taddNewCategoryVisible: any;\r\n\tsetAddNewCategoryVisible: any;\r\n\tcustomerList?: any;\r\n\tsetCustomerList?: any;\r\n}\r\n\r\nconst AddNewCategory = ({ addNewCategoryVisible, setAddNewCategoryVisible, customerList, setCustomerList }: Props) => {\r\n\r\n\tconst [addCustomerState, handleAddCustomerFetch] = useHandleFetch({}, 'addDealer');\r\n\tconst [selectedCountryValue, setselectedCountryValue] = useState('');\r\n\tconst [selectedCityValue, setselectedCityValue] = useState('');\r\n\r\n\tconst [countryOptions, setcountryOptions] = useState([]);\r\n\tconst [cityOptions, setcityOptions] = useState([]);\r\n\r\n\tconst [countryListState, handleCountryListFetch] = useHandleFetch(\r\n\t\t[],\r\n\t\t'countryList'\r\n\t);\r\n\r\n\tconst [cityListState, handleCityListFetch] = useHandleFetch([], 'cityList');\r\n\r\n\tconst [tagIds, setTagIds] = useState([]);\r\n\tconst [selectedTags, setSelectedTags] = useState([]);\r\n\r\n\r\n\r\n\r\n\tconst handleSubmit = async (values: any, actions: any) => {\r\n\r\n\t\tconst addCustomerRes = await handleAddCustomerFetch({\r\n\r\n\t\t\tbody: {\r\n\t\t\t\tphone: values.phone,\r\n\t\t\t\temail: values.email,\r\n\t\t\t\tpassword: values.password,\r\n\t\t\t\taddress: values.address,\r\n\t\t\t\tfirstName: values.firstName,\r\n\t\t\t\tlastName: values.lastName,\r\n\t\t\t\tcode: values.code,\r\n\t\t\t\tcommission: values.commission,\r\n\t\t\t\tdepositMoney: values.depositMoney,\r\n\t\t\t\tdealerArea: tagIds\r\n\t\t\t},\r\n\t\t});\r\n\r\n\r\n\t\t// @ts-ignore\r\n\t\tif (addCustomerRes && addCustomerRes.status === 'ok') {\r\n\t\t\t// openSuccessNotification();\r\n\r\n\t\t\tsetCustomerList([{\r\n\t\t\t\tid: addCustomerRes['_id'] || '',\r\n\t\t\t\tkey: addCustomerRes['_id'] || '',\r\n\t\t\t\tname: addCustomerRes['firstName'] + ' ' + addCustomerRes['lastName'],\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\t...addCustomerRes\r\n\t\t\t},...customerList])\r\n\t\t\tsetAddNewCategoryVisible(false);\r\n\t\t\tactions.resetForm();\r\n\t\t}\r\n\t\telse {\r\n\t\t\topenErrorNotification();\r\n\t\t}\r\n\r\n\r\n\r\n\t\tactions.setSubmitting(false);\r\n\t};\r\n\r\n\r\n\r\n\tconst onChangeCity = (value) => {\r\n\t\tsetselectedCityValue(value);\r\n\t}\r\n\r\n\tconst onChangeCountry = (value) => {\r\n\t\tsetselectedCountryValue(value);\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tconst setCountries = async () => {\r\n\t\t\tconst CountryListRes = await handleCountryListFetch({});\r\n\r\n\t\t\t// @ts-ignore\r\n\t\t\tif (CountryListRes && CountryListRes.length > 0) {\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\tconst countryOptions = CountryListRes.map((country) => {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tvalue: country.name,\r\n\t\t\t\t\t\tname: country.name\r\n\t\t\t\t\t};\r\n\t\t\t\t});\r\n\t\t\t\tsetcountryOptions(countryOptions);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tsetCountries();\r\n\t}, []);\r\n\r\n\r\n\tuseEffect(() => {\r\n\t\tconsole.log('selectedCountryValue1',selectedCountryValue)\r\n\t\tconst setCities = async () => {\r\n\t\t\tconst cityListRes = await handleCityListFetch({\r\n\t\t\t\turlOptions: {\r\n\t\t\t\t\tplaceHolders: {\r\n\t\t\t\t\t\tcountry: selectedCountryValue,\r\n\t\t\t\t\t},\r\n\t\t\t\t},\r\n\t\t\t});\r\n\r\n\t\t\t// @ts-ignore\r\n\t\t\tif (cityListRes && cityListRes.length > 0) {\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\tconst cityOptions = cityListRes.map((city) => {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tvalue: city.name,\r\n\t\t\t\t\t\tname: city.name\r\n\t\t\t\t\t};\r\n\t\t\t\t});\r\n\t\t\t\tsetcityOptions(cityOptions);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tsetCities();\r\n\t}, [selectedCountryValue]);\r\n\r\n\r\n\r\n\t\r\n\tuseEffect(() => {\r\n\t\tif (!addCustomerState['isLoading']) {\r\n\t\t\tconst error = addCustomerState['error'];\r\n\t\t\tif (error['isError'] && Object.keys(error['error']).length > 0) {\r\n\r\n\t\t\t\tif (error['error']['registerError']) {\r\n\t\t\t\t\t// setServerErrors(error['error']['registerError']);\r\n\t\t\t\t} else if (error['error']['checkoutError']) {\r\n\t\t\t\t\t// setServerErrors(error['error']['checkoutError']);\r\n\t\t\t\t}\r\n\r\n\t\t\t\telse {\r\n\t\t\t\t\t// setServerErrors(error['error']);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst errors =\r\n\t\t\t\t\tObject.values(error['error']).length > 0\r\n\t\t\t\t\t\t? Object.values(error['error'])\r\n\t\t\t\t\t\t: [];\r\n\t\t\t\terrors.forEach((err, i) => {\r\n\t\t\t\t\tif (typeof err === 'string') {\r\n\t\t\t\t\t\topenErrorNotification(err);\r\n\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if (typeof err === 'object') {\r\n\t\t\t\t\t\tif (err && Object.keys(err).length > 0) {\r\n\t\t\t\t\t\t\tconst errs = Object.values(err);\r\n\t\t\t\t\t\t\terrs.forEach(err => {\r\n\t\t\t\t\t\t\t\topenErrorNotification(err);\r\n\t\t\t\t\t\t\t})\r\n\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (\r\n\t\t\t!addCustomerState['isLoading'] &&\r\n\t\t\tObject.keys(addCustomerState.data).length > 0\r\n\t\t) {\r\n\t\t\tif (addCustomerState['data']['status'] === 'ok') {\r\n\t\t\t\topenSuccessNotification('Dealer Created Successfully');\r\n\t\t\t\t// history.push({\r\n\t\t\t\t//   pathname: '/orderDetails',\r\n\t\t\t\t//   state: checkoutState['data']\r\n\t\t\t\t// })\r\n\r\n\t\t\t\t// clearCart();\r\n\t\t\t\t// setIsModalShown(true);\r\n\t\t\t}\r\n\t\t}\r\n\t}, [addCustomerState]);\r\n\r\n\r\n\r\n\r\n\tconst handleCancel = (e: any) => {\r\n\t\tsetAddNewCategoryVisible(false);\r\n\t};\r\n\r\n\r\n\tconst getisSubmitButtonDisabled = (values, isValid) => {\r\n\t\tif (!isValid ||\r\n\t\t\t!values.firstName ||\r\n\t\t\t!values.lastName ||\r\n\t\t\t!values.password ||\r\n\t\t\t!values.phone ||\r\n\t\t\t!values.code \r\n\t\t\t) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\r\n\r\n\tconsole.log('cityListState', cityListState)\r\n\r\n\r\n\r\n\r\n\treturn (\r\n\t\t<Formik\r\n\t\t\tonSubmit={(values, actions) => handleSubmit(values, actions)}\r\n\t\t\tvalidationSchema={validationSchema}\r\n\t\t\tvalidateOnBlur={false}\r\n\t\t\tenableReinitialize={true}\r\n\t\t\tinitialValues={\r\n\t\t\t\t{ ...initialValues }\r\n\t\t\t}\r\n\t\t>\r\n\t\t\t{({\r\n\t\t\t\thandleChange,\r\n\t\t\t\tvalues,\r\n\t\t\t\thandleSubmit,\r\n\t\t\t\terrors,\r\n\t\t\t\tisValid,\r\n\t\t\t\tisSubmitting,\r\n\t\t\t\ttouched,\r\n\t\t\t\thandleBlur,\r\n\t\t\t\tsetFieldTouched,\r\n\t\t\t\thandleReset,\r\n\t\t\t}) => (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<Modal\r\n\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\ttop: '40px',\r\n\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\tbodyStyle={{\r\n\t\t\t\t\t\t\t\tmargin: 0,\r\n\t\t\t\t\t\t\t\tpadding: 0,\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\twidth={'70vw'}\r\n\t\t\t\t\t\t\ttitle=\"Add New Dealer\"\r\n\t\t\t\t\t\t\tvisible={addNewCategoryVisible}\r\n\t\t\t\t\t\t\tonOk={(e: any) => handleSubmit(e)}\r\n\t\t\t\t\t\t\tonCancel={handleCancel}\r\n\t\t\t\t\t\t\tokText='Create'\r\n\t\t\t\t\t\t\tokButtonProps={{\r\n\t\t\t\t\t\t\t\tloading: isSubmitting,\r\n\t\t\t\t\t\t\t\thtmlType: \"submit\",\r\n\t\t\t\t\t\t\t\tdisabled: getisSubmitButtonDisabled(values, isValid)\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\r\n\t\t\t\t\t\t\t\t\r\n\r\n\t\t\t\t\t\t\t<section className='addProductGridContainer'>\r\n\t\t\t\t\t\t\t\t<div className='addProductGridContainer__left'>\r\n\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__name'>\r\n\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__item-header'>\r\n\t\t\t\t\t\t\t\t\t\t\t<h3>\r\n\t\t\t\t\t\t\t\t\t\t\t\tDealer Information *\r\n\t\t\t\t\t\t\t\t\t\t\t</h3>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__item-body'>\r\n\r\n\t\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs'>\r\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\tlabel='First Name'\r\n\t\t\t\t\t\t\t\t\t\tvalue={values.firstName}\r\n\t\t\t\t\t\t\t\t\t\tname='firstName'\r\n\t\t\t\t\t\t\t\t\t\tisError={(touched.firstName && errors.firstName) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['firstName'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\terrorString={(touched.firstName && errors.firstName) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['firstName'])}\r\n\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('firstName');\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\tlabel='Last Name'\r\n\t\t\t\t\t\t\t\t\t\tvalue={values.lastName}\r\n\t\t\t\t\t\t\t\t\t\tname='lastName'\r\n\t\t\t\t\t\t\t\t\t\tisError={(touched.lastName && errors.lastName) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['lastName'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\terrorString={(touched.lastName && errors.lastName) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['lastName'])}\r\n\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('lastName');\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t<div className='dubbleRowInputs'>\r\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\tlabel='Phone'\r\n\t\t\t\t\t\t\t\t\t\tvalue={values.phone}\r\n\t\t\t\t\t\t\t\t\t\tname='phone'\r\n\t\t\t\t\t\t\t\t\t\tisError={(touched.phone && errors.phone) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['phone'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\terrorString={(touched.phone && errors.phone) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['phone'])}\r\n\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('phone');\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\tlabel='Email'\r\n\t\t\t\t\t\t\t\t\t\tvalue={values.email}\r\n\t\t\t\t\t\t\t\t\t\tname='email'\r\n\t\t\t\t\t\t\t\t\t\tisError={(touched.email && errors.email) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['email'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\terrorString={(touched.email && errors.email) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['email'])}\r\n\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('email');\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\t\t\t\t\t\t\t<div className='dubbleRowInputs'>\r\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\tlabel='Dealer Code'\r\n\t\t\t\t\t\t\t\t\ttype='text'\r\n\t\t\t\t\t\t\t\t\tvalue={values.code}\r\n\t\t\t\t\t\t\t\t\tname='code'\r\n\t\t\t\t\t\t\t\t\tisError={(touched.code && errors.code) ||\r\n\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['code'])}\r\n\r\n\t\t\t\t\t\t\t\t\terrorString={(touched.code && errors.code) ||\r\n\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['code'])}\r\n\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\tsetFieldTouched('code');\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\tlabel='Password'\r\n\t\t\t\t\t\t\t\t\ttype='password'\r\n\t\t\t\t\t\t\t\t\tvalue={values.password}\r\n\t\t\t\t\t\t\t\t\tname='password'\r\n\t\t\t\t\t\t\t\t\tisError={(touched.password && errors.password) ||\r\n\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['password'])}\r\n\r\n\t\t\t\t\t\t\t\t\terrorString={(touched.password && errors.password) ||\r\n\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['password'])}\r\n\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\tsetFieldTouched('password');\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t<div className='dubbleRowInputs'>\r\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\tlabel='Deposit Money'\r\n\t\t\t\t\t\t\t\t\ttype='text'\r\n\t\t\t\t\t\t\t\t\tvalue={values.depositMoney}\r\n\t\t\t\t\t\t\t\t\tname='depositMoney'\r\n\t\t\t\t\t\t\t\t\tisError={(touched.depositMoney && errors.depositMoney) ||\r\n\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['depositMoney'])}\r\n\r\n\t\t\t\t\t\t\t\t\terrorString={(touched.depositMoney && errors.depositMoney) ||\r\n\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['depositMoney'])}\r\n\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\tsetFieldTouched('depositMoney');\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\tlabel='Commission'\r\n\t\t\t\t\t\t\t\t\ttype='commission'\r\n\t\t\t\t\t\t\t\t\tvalue={values.commission}\r\n\t\t\t\t\t\t\t\t\tname='commission'\r\n\t\t\t\t\t\t\t\t\tisError={(touched.commission && errors.commission) ||\r\n\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['commission'])}\r\n\r\n\t\t\t\t\t\t\t\t\terrorString={(touched.commission && errors.commission) ||\r\n\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['commission'])}\r\n\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\tsetFieldTouched('commission');\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\tmarginTop: '12px'\r\n\t\t\t\t\t\t\t}}></div>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\tlabel='Address'\r\n\t\t\t\t\t\t\t\t\t\tvalue={values.address}\r\n\t\t\t\t\t\t\t\t\t\tname='address'\r\n\t\t\t\t\t\t\t\t\t\tisError={(touched.address && errors.address) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['address'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\terrorString={(touched.address && errors.address) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['address'])}\r\n\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('address');\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className='addProductGridContainer__right'>\r\n\r\n\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__tag'>\r\n\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer-rightItemContainer'>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer-rightItemContainer-header'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<h3>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tAreas *\r\n\t\t\t\t\t\t\t\t\t\t\t\t</h3>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer-rightItemContainer-body'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Areas\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetSelectedTags={setSelectedTags}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tselectedTags={selectedTags}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetTagIds={setTagIds} />\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</section>\r\n\r\n\t\r\n\r\n\r\n\r\n\r\n\t\t\t\t\t\t</Modal>\r\n\r\n\t\t\t\t\t</>\r\n\t\t\t\t)}\r\n\t\t</Formik>\r\n\r\n\r\n\r\n\r\n\t);\r\n};\r\n\r\nexport default AddNewCategory;\r\n","import React,{useState, useEffect} from 'react';\r\nimport { Modal, Select,notification , Form, Empty } from 'antd';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\nimport { PlusOutlined, EditOutlined, DeleteOutlined,EditFilled, CheckCircleOutlined } from '@ant-design/icons';\r\n\r\n\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport {useHandleFetch} from '../../hooks';\r\nimport Areas from \"./Areas\";\r\n\r\n\r\n\r\nconst { Option } = Select;\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    firstName: Yup.string()\r\n      .label('Firstname')\r\n      .required()\r\n      .min(2, 'First name must have at least 2 characters '),\r\n    lastName: Yup.string()\r\n      .label('Lastname')\r\n      .required()\r\n      .min(2, 'Lastname must have at least 2 characters '),\r\n    phone: Yup.string()\r\n      .required('Please tell us your mobile number.')\r\n      .max(13, 'Please enter a valid mobile number.'),\r\n    password: Yup.string()\r\n      .label('Password')\r\n      .min(6, 'Password must have at least 6 characters'),\r\n    email: Yup.string().label('Email').email('Please enter a valid email'),\r\n  });\r\n\r\n\r\n\r\n  \r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t  message: message || 'Dealer Updated',\r\n\t  description: '',\r\n\t  icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n  };\r\n\r\n\r\n  const openErrorNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t  message: message || 'Something Went Wrong',\r\n\t  description: '',\r\n\t  icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n  };\r\n\r\n\r\n\r\n\r\n\r\n\r\ninterface Props {\r\n\tcustomer: any;\r\n\tsetvisible: any; \r\n\tvisible: any;\r\n\tcustomerList?: any; \r\n\tsetCustomerList?:any\r\n\r\n}\r\n\r\nconst QuickEdit = ({ customer, setvisible, visible, customerList, setCustomerList }: Props) => {\r\n\tconst [updateCustomerState, handleUpdateCustomerFetch] = useHandleFetch({}, 'updateDealer');\r\n\r\n\r\n\tconst [selectedCountryValue,setselectedCountryValue] = useState(''); \r\n    const [selectedCityValue,setselectedCityValue] = useState(''); \r\n\r\n    const [countryOptions,setcountryOptions] = useState([]); \r\n    const [cityOptions,setcityOptions] = useState([]); \r\n\r\n    const [countryListState, handleCountryListFetch] = useHandleFetch(\r\n        [],\r\n        'countryList'\r\n      );\r\n    \r\n      const [cityListState, handleCityListFetch] = useHandleFetch([], 'cityList');\r\n    \r\n\r\n\t  const [tagIds, setTagIds] = useState([]);\r\n\t  const [selectedTags, setSelectedTags] = useState([]);\r\n  \r\n\r\n\r\n\t  useEffect(() => {\r\n\r\n\t\tconsole.log('customerAreaCheck',customer)\r\n\t\tif (customer && customer.area && customer.area.length > 0) {\r\n\t\t\tconst tagIds = customer.area.map(item => item._id);\r\n\t\t\t\r\n\t\t\tsetSelectedTags(tagIds);\r\n\t\t\tsetTagIds(tagIds)\r\n        }\r\n        else {\r\n            setSelectedTags([]);\r\n\r\n        }\r\n\t}, [customer.id]);\r\n\t\r\n\r\n\r\n\r\n\tconst handleSubmit = async (values : any, actions : any) => {\r\n\t  const updateCustomerRes = await handleUpdateCustomerFetch({\r\n\t\turlOptions: {\r\n\t\t\tplaceHolders: {\r\n\t\t\t  id: values.id,\r\n\t\t\t}\r\n\t\t  },\r\n\t\tbody: {\r\n\t\t\tphone: values.phone,\r\n\t\t\temail: values.email,\r\n\t\t\tpassword: values.password,\r\n\t\t\taddress: values.address,\r\n\t\t\tfirstName: values.firstName,\r\n\t\t\tlastName: values.lastName,\r\n\t\t\tcode: values.code,\r\n\t\t\tcommission: values.commission,\r\n\t\t\tdepositMoney: values.depositMoney,\r\n\t\t\tdealerArea: tagIds\r\n\t\t},\r\n\t  });\r\n\t\r\n\r\n\t   \t  // @ts-ignore\r\n\t\t\t if(updateCustomerRes && updateCustomerRes.status === 'ok'){\r\n\t\t\t\t// openSuccessNotification(); \r\n\t\t\r\n\t\t\t\tsetvisible(false); \r\n\r\n\t\t\t\tconst positionInTag = () => {\r\n\t\t\t\t\treturn customerList.map(item => item.id).indexOf(customer.id);\r\n\t\t\t\t  }\r\n\t\t\r\n\t\t\t\t  const index = positionInTag();\r\n\t\t\r\n\t\t\t\t  // @ts-ignore\r\n\t\t\t\t  const updatedItem = Object.assign({}, customerList[index], { \r\n\t\t\t\t\t  // @ts-ignore\r\n\t\t\t\t\t...updateCustomerRes, \r\n\t\t\t\t\t\r\n\t\t\t\t\tid: updateCustomerRes['_id'] || '',\r\n\t\t\t\t\tkey: updateCustomerRes['_id'] || '',\r\n\t\t\t\t\tname: updateCustomerRes['firstName'] + ' ' + updateCustomerRes['lastName'],\r\n\r\n\t\t\t\t   });\r\n\t\t\t\t  const updateTagList = [...customerList.slice(0, index), updatedItem, ...customerList.slice(index + 1)];\r\n\t\t\t\t  setCustomerList(updateTagList); \r\n\t\t\t\t\r\n\t\t\t  }\r\n\t\t\t  else {\r\n\t\t\t\topenErrorNotification();\r\n\t\t\t  }\r\n\t\t\t\r\n\t\t\t  actions.setSubmitting(false);\r\n\t};\r\n\t\r\n\r\n\r\n\tuseEffect(() => {\r\n\t\tif (!updateCustomerState['isLoading']) {\r\n\t\t\tconst error = updateCustomerState['error'];\r\n\t\t\tif (error['isError'] && Object.keys(error['error']).length > 0) {\r\n\r\n\t\t\t\tif (error['error']['registerError']) {\r\n\t\t\t\t\t// setServerErrors(error['error']['registerError']);\r\n\t\t\t\t} else if (error['error']['checkoutError']) {\r\n\t\t\t\t\t// setServerErrors(error['error']['checkoutError']);\r\n\t\t\t\t}\r\n\r\n\t\t\t\telse {\r\n\t\t\t\t\t// setServerErrors(error['error']);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst errors =\r\n\t\t\t\t\tObject.values(error['error']).length > 0\r\n\t\t\t\t\t\t? Object.values(error['error'])\r\n\t\t\t\t\t\t: [];\r\n\t\t\t\terrors.forEach((err, i) => {\r\n\t\t\t\t\tif (typeof err === 'string') {\r\n\t\t\t\t\t\topenErrorNotification(err);\r\n\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if (typeof err === 'object') {\r\n\t\t\t\t\t\tif (err && Object.keys(err).length > 0) {\r\n\t\t\t\t\t\t\tconst errs = Object.values(err);\r\n\t\t\t\t\t\t\terrs.forEach(err => {\r\n\t\t\t\t\t\t\t\topenErrorNotification(err);\r\n\t\t\t\t\t\t\t})\r\n\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (\r\n\t\t\t!updateCustomerState['isLoading'] &&\r\n\t\t\tObject.keys(updateCustomerState.data).length > 0\r\n\t\t) {\r\n\t\t\tif (updateCustomerState['data']['status'] === 'ok') {\r\n\t\t\t\topenSuccessNotification('Dealer Updated Successfully');\r\n\t\t\t\t// history.push({\r\n\t\t\t\t//   pathname: '/orderDetails',\r\n\t\t\t\t//   state: checkoutState['data']\r\n\t\t\t\t// })\r\n\r\n\t\t\t\t// clearCart();\r\n\t\t\t\t// setIsModalShown(true);\r\n\t\t\t}\r\n\t\t}\r\n\t}, [updateCustomerState]);\r\n\r\n\r\n\r\n\r\n\t\r\n    const onChangeCity = (value) => {\r\n        setselectedCityValue(value); \r\n    }\r\n\r\n    const onChangeCountry = (value) => {\r\n        setselectedCountryValue(value); \r\n    }\r\n    \r\n\tuseEffect(() => {\r\n\t\tconst setCountries = async () => {\r\n\t\t\tconst CountryListRes = await handleCountryListFetch({});\r\n\r\n\t\t\t// @ts-ignore\r\n\t\t\tif (CountryListRes && CountryListRes.length > 0) {\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\tconst countryOptions = CountryListRes.map((country) => {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tvalue: country.name,\r\n\t\t\t\t\t\tname: country.name\r\n\t\t\t\t\t};\r\n\t\t\t\t});\r\n\t\t\t\tsetcountryOptions(countryOptions);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tsetCountries();\r\n    }, []);\r\n    \r\n\r\n    useEffect(() => {\r\n\t\tconst setCities = async () => {\r\n\t\t\tconst cityListRes = await handleCityListFetch({\r\n                urlOptions: {\r\n                    placeHolders: {\r\n                      country: selectedCountryValue,\r\n                    },\r\n                  },\r\n            });\r\n\r\n\t\t\t// @ts-ignore\r\n\t\t\tif (cityListRes && cityListRes.length > 0) {\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\tconst cityOptions = cityListRes.map((city) => {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tvalue: city.name,\r\n\t\t\t\t\t\tname: city.name\r\n\t\t\t\t\t};\r\n\t\t\t\t});\r\n\t\t\t\tsetcityOptions(cityOptions);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tsetCities();\r\n    }, [selectedCountryValue]);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\tconst handleCancel = (e: any) => {\r\n        setvisible(false);\r\n      };\r\n\r\n\r\n\r\n\t  const getisSubmitButtonDisabled = (values,isValid) => {\r\n\t\tif(!isValid ||\r\n\t\t\t!values.firstName ||\r\n\t\t\t!values.lastName ||\r\n\t\t\t// !values.password ||\r\n\t\t\t!values.phone ||\r\n\t\t\t!values.code ){\r\n\t\t\treturn true; \r\n\t\t}\r\n\t\treturn false; \r\n\t  }\r\n\r\n\treturn (\r\n\t\t<Formik\r\n\t\tonSubmit={(values, actions) => handleSubmit(values, actions)}\r\n\t\tvalidationSchema={validationSchema}\r\n\t\tvalidateOnBlur={false}\r\n\t\tenableReinitialize={true}\r\n\t\tinitialValues={\r\n\t\t  {...customer}\r\n\t\t}\r\n\t  >\r\n\t\t{({\r\n\t\t  handleChange,\r\n\t\t  values,\r\n\t\t  handleSubmit,\r\n\t\t  errors,\r\n\t\t  isValid,\r\n\t\t  isSubmitting,\r\n\t\t  touched,\r\n\t\t  handleBlur,\r\n\t\t  setFieldTouched,\r\n\t\t  handleReset,\r\n\t\t}) => (\r\n\t\t\t<>\r\n\t\t\t<Modal\r\n\t\t\ttitle=\"Quick Edit\"\r\n\t\t\twidth={'70vw'}\r\n\t\t\tvisible={visible}\r\n\t\t\tonOk={(e : any) => handleSubmit(e)}\r\n\t\t\tonCancel={handleCancel}\r\n\t\t\tokText='Update'\r\n\t\t\tdestroyOnClose={true}\r\n\t\t\tokButtonProps={{\r\n\t\t\tloading: isSubmitting,\r\n\t\t\thtmlType: \"submit\",\r\n\t\t\tdisabled: getisSubmitButtonDisabled(values, isValid)\r\n\t\t\t}}\r\n\t\t\tbodyStyle={{\r\n                margin: '0',\r\n                padding: '10px'\r\n            }}\r\n  >\r\n\r\n\t  {console.log('errorsupdatedealer',errors)}\r\n\r\n<section className='addProductGridContainer'>\r\n\t\t\t\t\t\t\t\t<div className='addProductGridContainer__left'>\r\n\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__name'>\r\n\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__item-header'>\r\n\t\t\t\t\t\t\t\t\t\t\t<h3>\r\n\t\t\t\t\t\t\t\t\t\t\t\tDealer Information *\r\n\t\t\t\t\t\t\t\t\t\t\t</h3>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__item-body'>\r\n\r\n\t\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs'>\r\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\tlabel='First Name'\r\n\t\t\t\t\t\t\t\t\t\tvalue={values.firstName}\r\n\t\t\t\t\t\t\t\t\t\tname='firstName'\r\n\t\t\t\t\t\t\t\t\t\tisError={(touched.firstName && errors.firstName) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateCustomerState.error['error']['firstName'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\terrorString={(touched.firstName && errors.firstName) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateCustomerState.error['error']['firstName'])}\r\n\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('firstName');\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\tlabel='Last Name'\r\n\t\t\t\t\t\t\t\t\t\tvalue={values.lastName}\r\n\t\t\t\t\t\t\t\t\t\tname='lastName'\r\n\t\t\t\t\t\t\t\t\t\tisError={(touched.lastName && errors.lastName) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateCustomerState.error['error']['lastName'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\terrorString={(touched.lastName && errors.lastName) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateCustomerState.error['error']['lastName'])}\r\n\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('lastName');\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t<div className='dubbleRowInputs'>\r\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\tlabel='Phone'\r\n\t\t\t\t\t\t\t\t\t\tvalue={values.phone}\r\n\t\t\t\t\t\t\t\t\t\tname='phone'\r\n\t\t\t\t\t\t\t\t\t\tisError={(touched.phone && errors.phone) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateCustomerState.error['error']['phone'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\terrorString={(touched.phone && errors.phone) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateCustomerState.error['error']['phone'])}\r\n\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('phone');\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\tlabel='Email'\r\n\t\t\t\t\t\t\t\t\t\tvalue={values.email}\r\n\t\t\t\t\t\t\t\t\t\tname='email'\r\n\t\t\t\t\t\t\t\t\t\tisError={(touched.email && errors.email) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateCustomerState.error['error']['email'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\terrorString={(touched.email && errors.email) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateCustomerState.error['error']['email'])}\r\n\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('email');\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\t\t\t\t\t\t\t<div className='dubbleRowInputs'>\r\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\tlabel='Dealer Code'\r\n\t\t\t\t\t\t\t\t\ttype='text'\r\n\t\t\t\t\t\t\t\t\tvalue={values.code}\r\n\t\t\t\t\t\t\t\t\tname='code'\r\n\t\t\t\t\t\t\t\t\tisError={(touched.code && errors.code) ||\r\n\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateCustomerState.error['error']['code'])}\r\n\r\n\t\t\t\t\t\t\t\t\terrorString={(touched.code && errors.code) ||\r\n\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateCustomerState.error['error']['code'])}\r\n\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\tsetFieldTouched('code');\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\tlabel='Password'\r\n\t\t\t\t\t\t\t\t\ttype='password'\r\n\t\t\t\t\t\t\t\t\tvalue={values.password}\r\n\t\t\t\t\t\t\t\t\tname='password'\r\n\t\t\t\t\t\t\t\t\tisError={(touched.password && errors.password) ||\r\n\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateCustomerState.error['error']['password'])}\r\n\r\n\t\t\t\t\t\t\t\t\terrorString={(touched.password && errors.password) ||\r\n\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateCustomerState.error['error']['password'])}\r\n\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\tsetFieldTouched('password');\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t<div className='dubbleRowInputs'>\r\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\tlabel='Deposit Money'\r\n\t\t\t\t\t\t\t\t\ttype='text'\r\n\t\t\t\t\t\t\t\t\tvalue={values.depositMoney}\r\n\t\t\t\t\t\t\t\t\tname='depositMoney'\r\n\t\t\t\t\t\t\t\t\tisError={(touched.depositMoney && errors.depositMoney) ||\r\n\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateCustomerState.error['error']['depositMoney'])}\r\n\r\n\t\t\t\t\t\t\t\t\terrorString={(touched.depositMoney && errors.depositMoney) ||\r\n\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateCustomerState.error['error']['depositMoney'])}\r\n\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\tsetFieldTouched('depositMoney');\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\tlabel='Commission'\r\n\t\t\t\t\t\t\t\t\ttype='commission'\r\n\t\t\t\t\t\t\t\t\tvalue={values.commission}\r\n\t\t\t\t\t\t\t\t\tname='commission'\r\n\t\t\t\t\t\t\t\t\tisError={(touched.commission && errors.commission) ||\r\n\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateCustomerState.error['error']['commission'])}\r\n\r\n\t\t\t\t\t\t\t\t\terrorString={(touched.commission && errors.commission) ||\r\n\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateCustomerState.error['error']['commission'])}\r\n\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\tsetFieldTouched('commission');\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\t\t\t\tmarginTop: '12px'\r\n\t\t\t\t\t\t\t\t\t\t}}></div>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\tlabel='Address'\r\n\t\t\t\t\t\t\t\t\t\tvalue={values.address}\r\n\t\t\t\t\t\t\t\t\t\tname='address'\r\n\t\t\t\t\t\t\t\t\t\tisError={(touched.address && errors.address) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateCustomerState.error['error']['address'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\terrorString={(touched.address && errors.address) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateCustomerState.error['error']['address'])}\r\n\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('address');\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\r\n\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className='addProductGridContainer__right'>\r\n\r\n\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__tag'>\r\n\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer-rightItemContainer'>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer-rightItemContainer-header'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<h3>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tAreas *\r\n\t\t\t\t\t\t\t\t\t\t\t\t</h3>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer-rightItemContainer-body'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Areas\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetSelectedTags={setSelectedTags}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tselectedTags={selectedTags}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetTagIds={setTagIds} />\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</section>\r\n\r\n\t\r\n\r\n\r\n  </Modal>\r\n\t\t\t  \r\n\t\t\t</>\r\n\t\t  )}\r\n\t  </Formik>\r\n\t);\r\n};\r\n\r\n\r\nexport default QuickEdit;\r\n","import React, {useState,useEffect} from 'react';\r\nimport {withRouter, useHistory} from 'react-router-dom';\r\nimport { Table, Badge, Menu, Dropdown, notification, Space, Tag,Button, Input,Tooltip, Modal , Popconfirm} from 'antd';\r\nimport { PlusOutlined, EditOutlined, DeleteOutlined,EditFilled, CheckCircleOutlined } from '@ant-design/icons';\r\nimport Moment from 'react-moment';\r\n\r\n/// import hooks\r\nimport { useFetch, useHandleFetch } from \"../../hooks\";\r\n\r\n// import components\r\nimport { DataTableSkeleton } from \"../../components/Placeholders\";\r\nimport AddNewCustomer from \"./AddNewDealer\";\r\nimport QuickEdit from \"./QuickEdit\";\r\nimport Empty from \"../../components/Empty\";\r\nimport moment from \"moment\";\r\nconst { Column, ColumnGroup } = Table;\r\nconst { Search } = Input;\r\n\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t  message: message || 'Dealer Created',\r\n\t  description: '',\r\n\t  icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n  };\r\n\r\n\r\n  const openErrorNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t  message: message || 'Something Went Wrong',\r\n\t  description: '',\r\n\t  icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n  };\r\n\r\n\r\n\r\n\r\n\r\ninterface myTableProps {\r\n  data: any; \r\n  setCustomerList?:any; \r\n} \r\n\r\n\r\nconst MyTable = ({data,setCustomerList}: myTableProps) => {\r\n    const [visible,setvisible] = useState(false);   \r\n    const [activeCategoryForEdit,setactiveCategoryForEdit] = useState(false); \r\n\r\n   const history = useHistory(); \r\n\r\n    const [deleteCustomerState, handleDeleteCustomerFetch] = useHandleFetch({}, 'deleteDealer');\r\n      const handleDeleteCustomer = async (id) => {\r\n        const deleteCustomerRes = await handleDeleteCustomerFetch({\r\n          urlOptions: {\r\n            placeHolders: {\r\n              id,\r\n            }\r\n            }\r\n          });\r\n\r\n\r\n           // @ts-ignore\r\n\t\t  if(deleteCustomerRes && deleteCustomerRes.status === 'ok'){\r\n\t\t\t  openSuccessNotification('Deleted Dealer'); \r\n\t\t\t  const newCustomerList =  data.filter(item => item.id !== id);\r\n\t\t\t  setCustomerList(newCustomerList); \r\n\t\t  }\r\n      }\r\n      \r\n\r\n    return (\r\n        <>\r\n        <Table \r\n        // expandable={{\r\n        //     expandedRowRender: record => <p style={{ margin: 0 }}>{record.name}</p>,\r\n        //     rowExpandable: record => record.name !== 'Not Expandable',\r\n        //   }}\r\n        // bordered={true}\r\n        size='small'\r\n        // pagination={false}\r\n        dataSource={data}\r\n        >\r\n\r\n\r\n          \r\n      <Column\r\n           title=\"Code\" \r\n           dataIndex=\"code\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n           render={(text, record: any) => (\r\n            <>\r\n              <h4\r\n                onClick={() => {\r\n                  history.push(`/admin/dealer/${record.id}`)\r\n                  // setcategoryDetailVisible(true);\r\n                  setactiveCategoryForEdit(record)\r\n                }}\r\n                style={{\r\n                  fontWeight: 400,\r\n                  color: '#555',\r\n                  cursor: 'pointer'\r\n                }}>\r\n                {text}\r\n              </h4>\r\n            </>\r\n          )}\r\n            />\r\n\r\n            \r\n\r\n          <Column\r\n           title=\"Name\" \r\n           dataIndex=\"name\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n           render={(text, record: any) => (\r\n            <>\r\n              <h4\r\n                onClick={() => {\r\n                  history.push(`/admin/dealer/${record.id}`)\r\n                  // setcategoryDetailVisible(true);\r\n                  setactiveCategoryForEdit(record)\r\n                }}\r\n                style={{\r\n                  fontWeight: 400,\r\n                  color: '#555',\r\n                  cursor: 'pointer'\r\n                }}>\r\n                {text}\r\n              </h4>\r\n            </>\r\n          )}\r\n            />\r\n\r\n         \r\n     \r\n\r\n          {/* <Column\r\n           title=\"City\" \r\n           dataIndex=\"city\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n            /> */}\r\n\r\n  \r\n            \r\n          <Column\r\n           title=\"Commission\" \r\n           dataIndex=\"commission\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n         \r\n            />\r\n\r\n        <Column\r\n           title=\"Deposit Money\" \r\n           dataIndex=\"depositMoney\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n         \r\n            />\r\n\r\n\r\n      <Column\r\n\t\t\t\t\ttitle=\"Areas\"\r\n\t\t\t\t\tdataIndex=\"area\"\r\n\t\t\t\t\tkey=\"role\"\r\n\t\t\t\t\tclassName='classnameofthecolumn'\r\n\t\t\t\t\trender={(areas,record) => (\r\n\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t{areas && areas.length > 0 && areas.slice(0,2).map((tag) => (\r\n              <Tag \r\n\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\tborderRadius:\"5px\"\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\tcolor=\"blue\" key={tag._id}>\r\n\t\t\t\t\t\t\t{tag.name}\r\n\t\t\t\t\t\t\t</Tag>\r\n\t\t\t\t\t\t))}\r\n\r\n          <span \r\n          style={{\r\n            cursor:'pointer'\r\n          }}\r\n          onClick={() => {\r\n             history.push(`/admin/dealer/${record['id']}`)\r\n          }}>\r\n          {areas && areas.length === 2 && '.......'}\r\n          </span>\r\n\t\t\t\t\t\t</>\r\n\t\t\t\t\t)}\r\n\t\t\t\t\t/>\r\n\r\n\r\n      <Column\r\n           width={150}\r\n           title=\"Created\" \r\n           dataIndex=\"created\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n           render={(text, record : any) => (\r\n            <Space size=\"middle\">\r\n            \r\n            <h5>\r\n              {text && moment(text).format('MMMM Do YYYY, h:mm:ss a')}\r\n            </h5>\r\n             \r\n            </Space>\r\n          )}\r\n            />\r\n\r\n\r\n\r\n          {/* <Column \r\n          \r\n          className='classnameofthecolumn'\r\n\r\n          title=\"Product\" dataIndex=\"product\" key=\"product\" /> */}\r\n\r\n          {/* <Column \r\n          \r\n          className='classnameofthecolumn'\r\n\r\n          title=\"Sub Category\" dataIndex=\"subCategory\" key=\"subCategory\" /> */}\r\n        \r\n        {/* <Column\r\n          title=\"Tags\"\r\n          dataIndex=\"tags\"\r\n          key=\"tags\"\r\n          render={tags => (\r\n            <>\r\n              {tags.map((tag : any) => (\r\n                <Tag color=\"blue\" key={tag}>\r\n                  {tag}\r\n                </Tag>\r\n              ))}\r\n            </>\r\n          )}\r\n        /> */}\r\n        <Column\r\n        \r\n        className='classnameofthecolumn'\r\n          title=\"\"\r\n          key=\"action\"\r\n          align='right'\r\n          render={(text, record : any) => (\r\n            <Space size=\"middle\">\r\n              <a href='##'>\r\n               <Tooltip placement=\"top\" title='Edit Dealer'>\r\n              <span className='iconSize' onClick={() => {\r\n                setvisible(true)\r\n                setactiveCategoryForEdit(record); \r\n              }}> \r\n              <EditOutlined />\r\n            \r\n              </span>\r\n               </Tooltip>\r\n               </a>\r\n\r\n             \r\n\r\n              \r\n               <Popconfirm \r\n               \r\n               onConfirm={() => handleDeleteCustomer(record.id)}\r\n               title=\"Are you sure？\" okText=\"Yes\" cancelText=\"No\">\r\n           \r\n           <span \r\n             className='iconSize iconSize-danger'\r\n             > \r\n             <DeleteOutlined/>\r\n            </span>\r\n       \r\n           </Popconfirm>\r\n             \r\n            </Space>\r\n          )}\r\n        />\r\n      </Table>\r\n\r\n    \r\n\r\n    {activeCategoryForEdit &&   <QuickEdit \r\n    customerList={data}\r\n    setCustomerList={setCustomerList}\r\n    setvisible={setvisible}\r\n    visible={visible}\r\n    customer={activeCategoryForEdit}/>}\r\n    \r\n    \r\n    </>\r\n    )\r\n}\r\n\r\n\r\ninterface Props {\r\n    history: any; \r\n}\r\n\r\nconst CustomerList = ({history}: Props) => {\r\n\r\n\r\n    const [customerList,setCustomerList] = useState([]); \r\n\r\n    const [customerState, handleCustomerListFetch] = useHandleFetch({}, 'dealerList');\r\n  \r\n\r\n    console.log('dealerList',customerList); \r\n  \r\n    useEffect(()=>{\r\n     const setCustomers = async () => {\r\n       const customers = await handleCustomerListFetch({\r\n        urlOptions:{\r\n          params: {\r\n            sortItem: 'added',\r\n            sortOrderValue: '-1'\r\n          }\r\n          }\r\n       }); \r\n       // @ts-ignore\r\n       setCustomerList(customers); \r\n     }\r\n     setCustomers(); \r\n    },[])\r\n\r\n\r\n    \r\n\r\n  \r\n  const handleSearch = (value) => {\r\n    if(customerState.data.length > 0 ){\r\n      const newCustomerList = customerState.data.filter(item => item.name.toLowerCase().includes(value.toLowerCase())); \r\n      setCustomerList(newCustomerList); \r\n    }\r\n     \r\n  }\r\n\r\n\r\n\r\n    \r\n\r\n  const [addNewCategoryVisible,setAddNewCategoryVisible] = useState(false);   \r\n\r\n  // console.log('customerState',customerState)\r\n\r\n\r\n\r\n\treturn (\r\n\t\t<>\r\n    {/* <h2 className='containerPageTitle'>\r\n      Categories\r\n    </h2> */}\r\n    <div className='categoryListContainer'>\r\n            <div className='categoryListContainer__header'>\r\n           \r\n\r\n          <div className='categoryListContainer__header-searchBar'>\r\n          <h2 className='categoryListContainer__header-title'>\r\n          Dealers\r\n            </h2>\r\n\r\n\r\n          <Search\r\n            enterButton={false}\r\n            className='searchbarClassName'\r\n          placeholder=\"search dealers..\"\r\n          onSearch={value =>handleSearch(value)}\r\n          // style={{ width: 300 }}\r\n        />\r\n          </div>\r\n            <Button\r\n          // type=\"primary\"\r\n          className='btnPrimaryClassNameoutline'\r\n          icon={<PlusOutlined />}\r\n          onClick={() => setAddNewCategoryVisible(true)}\r\n        >\r\n        Add New\r\n            \r\n            </Button>\r\n            </div>\r\n\r\n            <div className='categoryListContainer__afterHeader'>\r\n            {/* <Search\r\n      placeholder=\"search categories..\"\r\n      size=\"large\"\r\n      onSearch={value => console.log(value)}\r\n      style={{ width: 300 }}\r\n    /> */}\r\n            </div>\r\n\r\n     \r\n\t\t\t\r\n\t\t\t<div className='categoryListContainer__categoryList'>\r\n        {customerState.done && customerList.length > 0 && <MyTable\r\n        setCustomerList={setCustomerList}\r\n         data={customerList} />}\r\n        {customerState.isLoading && <DataTableSkeleton />}\r\n        {customerState.done && !(customerList.length > 0) && (\r\n\t\t\t<Empty title='No Dealer found'  />\r\n\t\t)}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\r\n\r\n{customerState.done && \r\n    <AddNewCustomer \r\n    setCustomerList={setCustomerList}\r\n          addNewCategoryVisible={addNewCategoryVisible} \r\n          setAddNewCategoryVisible={setAddNewCategoryVisible}\r\n          customerList={customerState.data}\r\n          \r\n           />}\r\n\r\n      \r\n\r\n        \r\n    </>\r\n\t);\r\n};\r\n\r\nexport default withRouter(CustomerList);\r\n","import React,{useState, useEffect} from 'react';\r\nimport { Modal, Select,notification , Form, Empty } from 'antd';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\nimport { PlusOutlined, EditOutlined, DeleteOutlined,EditFilled, CheckCircleOutlined } from '@ant-design/icons';\r\n\r\n\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport {useHandleFetch} from '../../hooks';\r\nimport Areas from \"./Areas\";\r\n\r\n\r\n\r\nconst { Option } = Select;\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    firstName: Yup.string()\r\n      .label('Firstname')\r\n      .required()\r\n      .min(2, 'First name must have at least 2 characters '),\r\n    lastName: Yup.string()\r\n      .label('Lastname')\r\n      .required()\r\n      .min(2, 'Lastname must have at least 2 characters '),\r\n    phone: Yup.string()\r\n      .required('Please tell us your mobile number.')\r\n      .max(13, 'Please enter a valid mobile number.'),\r\n    password: Yup.string()\r\n      .label('Password')\r\n      .min(6, 'Password must have at least 6 characters'),\r\n    email: Yup.string().label('Email').email('Please enter a valid email'),\r\n  });\r\n\r\n\r\n\r\n  \r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t  message: message || 'Dealer Updated',\r\n\t  description: '',\r\n\t  icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n  };\r\n\r\n\r\n  const openErrorNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t  message: message || 'Something Went Wrong',\r\n\t  description: '',\r\n\t  icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n  };\r\n\r\n\r\n\r\n\r\n\r\n\r\ninterface Props {\r\n\tcustomer: any;\r\n\tsetvisible: any; \r\n    visible: any;\r\n    setCustomerDetailData?:any; \r\n\r\n}\r\n\r\nconst QuickEdit = ({ customer, setvisible, visible, setCustomerDetailData }: Props) => {\r\n\tconst [updateCustomerState, handleUpdateCustomerFetch] = useHandleFetch({}, 'updateDealer');\r\n\r\n\r\n\tconst [selectedCountryValue,setselectedCountryValue] = useState(''); \r\n    const [selectedCityValue,setselectedCityValue] = useState(''); \r\n\r\n    const [countryOptions,setcountryOptions] = useState([]); \r\n    const [cityOptions,setcityOptions] = useState([]); \r\n\r\n    const [countryListState, handleCountryListFetch] = useHandleFetch(\r\n        [],\r\n        'countryList'\r\n      );\r\n    \r\n      const [cityListState, handleCityListFetch] = useHandleFetch([], 'cityList');\r\n    \r\n\r\n\t  const [tagIds, setTagIds] = useState([]);\r\n\t  const [selectedTags, setSelectedTags] = useState([]);\r\n  \r\n\r\n\r\n\t  useEffect(() => {\r\n\r\n\t\tconsole.log('customerAreaCheck',customer)\r\n\t\tif (customer && customer.area && customer.area.length > 0) {\r\n\t\t\tconst tagIds = customer.area.map(item => item._id);\r\n\t\t\t\r\n\t\t\tsetSelectedTags(tagIds);\r\n\t\t\tsetTagIds(tagIds)\r\n        }\r\n        else {\r\n            setSelectedTags([]);\r\n\r\n        }\r\n\t}, [customer.id]);\r\n\t\r\n\r\n\r\n\r\n\tconst handleSubmit = async (values : any, actions : any) => {\r\n\t  const updateCustomerRes = await handleUpdateCustomerFetch({\r\n\t\turlOptions: {\r\n\t\t\tplaceHolders: {\r\n\t\t\t  id: values.id,\r\n\t\t\t}\r\n\t\t  },\r\n\t\tbody: {\r\n\t\t\tphone: values.phone,\r\n\t\t\temail: values.email,\r\n\t\t\tpassword: values.password,\r\n\t\t\taddress: values.address,\r\n\t\t\tfirstName: values.firstName,\r\n\t\t\tlastName: values.lastName,\r\n\t\t\tcode: values.code,\r\n\t\t\tcommission: values.commission,\r\n\t\t\tdepositMoney: values.depositMoney,\r\n\t\t\tdealerArea: tagIds\r\n\t\t},\r\n\t  });\r\n\t\r\n\r\n\t   \t  // @ts-ignore\r\n\t\t\t if(updateCustomerRes && updateCustomerRes.status === 'ok'){\r\n\t\t\t\t// openSuccessNotification(); \r\n\t\t\r\n                setvisible(false); \r\n                \r\n                setCustomerDetailData({\r\n                    // @ts-ignore\r\n                    ...updateCustomerRes, \r\n\t\t\t\t\tid: updateCustomerRes['_id'] || '',\r\n\t\t\t\t\tkey: updateCustomerRes['_id'] || '',\r\n\t\t\t\t\tname: updateCustomerRes['firstName'] + ' ' + updateCustomerRes['lastName'],\r\n                })\r\n\t\t\t\t\r\n\t\t\t  }\r\n\t\t\t  else {\r\n\t\t\t\topenErrorNotification();\r\n\t\t\t  }\r\n\t\t\t\r\n\t\t\t  actions.setSubmitting(false);\r\n\t};\r\n\t\r\n\r\n\r\n\tuseEffect(() => {\r\n\t\tif (!updateCustomerState['isLoading']) {\r\n\t\t\tconst error = updateCustomerState['error'];\r\n\t\t\tif (error['isError'] && Object.keys(error['error']).length > 0) {\r\n\r\n\t\t\t\tif (error['error']['registerError']) {\r\n\t\t\t\t\t// setServerErrors(error['error']['registerError']);\r\n\t\t\t\t} else if (error['error']['checkoutError']) {\r\n\t\t\t\t\t// setServerErrors(error['error']['checkoutError']);\r\n\t\t\t\t}\r\n\r\n\t\t\t\telse {\r\n\t\t\t\t\t// setServerErrors(error['error']);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst errors =\r\n\t\t\t\t\tObject.values(error['error']).length > 0\r\n\t\t\t\t\t\t? Object.values(error['error'])\r\n\t\t\t\t\t\t: [];\r\n\t\t\t\terrors.forEach((err, i) => {\r\n\t\t\t\t\tif (typeof err === 'string') {\r\n\t\t\t\t\t\topenErrorNotification(err);\r\n\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if (typeof err === 'object') {\r\n\t\t\t\t\t\tif (err && Object.keys(err).length > 0) {\r\n\t\t\t\t\t\t\tconst errs = Object.values(err);\r\n\t\t\t\t\t\t\terrs.forEach(err => {\r\n\t\t\t\t\t\t\t\topenErrorNotification(err);\r\n\t\t\t\t\t\t\t})\r\n\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (\r\n\t\t\t!updateCustomerState['isLoading'] &&\r\n\t\t\tObject.keys(updateCustomerState.data).length > 0\r\n\t\t) {\r\n\t\t\tif (updateCustomerState['data']['status'] === 'ok') {\r\n\t\t\t\topenSuccessNotification('Dealer Updated Successfully');\r\n\t\t\t\t// history.push({\r\n\t\t\t\t//   pathname: '/orderDetails',\r\n\t\t\t\t//   state: checkoutState['data']\r\n\t\t\t\t// })\r\n\r\n\t\t\t\t// clearCart();\r\n\t\t\t\t// setIsModalShown(true);\r\n\t\t\t}\r\n\t\t}\r\n\t}, [updateCustomerState]);\r\n\r\n\r\n\r\n\r\n\t\r\n    const onChangeCity = (value) => {\r\n        setselectedCityValue(value); \r\n    }\r\n\r\n    const onChangeCountry = (value) => {\r\n        setselectedCountryValue(value); \r\n    }\r\n    \r\n\tuseEffect(() => {\r\n\t\tconst setCountries = async () => {\r\n\t\t\tconst CountryListRes = await handleCountryListFetch({});\r\n\r\n\t\t\t// @ts-ignore\r\n\t\t\tif (CountryListRes && CountryListRes.length > 0) {\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\tconst countryOptions = CountryListRes.map((country) => {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tvalue: country.name,\r\n\t\t\t\t\t\tname: country.name\r\n\t\t\t\t\t};\r\n\t\t\t\t});\r\n\t\t\t\tsetcountryOptions(countryOptions);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tsetCountries();\r\n    }, []);\r\n    \r\n\r\n    useEffect(() => {\r\n\t\tconst setCities = async () => {\r\n\t\t\tconst cityListRes = await handleCityListFetch({\r\n                urlOptions: {\r\n                    placeHolders: {\r\n                      country: selectedCountryValue,\r\n                    },\r\n                  },\r\n            });\r\n\r\n\t\t\t// @ts-ignore\r\n\t\t\tif (cityListRes && cityListRes.length > 0) {\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\tconst cityOptions = cityListRes.map((city) => {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tvalue: city.name,\r\n\t\t\t\t\t\tname: city.name\r\n\t\t\t\t\t};\r\n\t\t\t\t});\r\n\t\t\t\tsetcityOptions(cityOptions);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tsetCities();\r\n    }, [selectedCountryValue]);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\tconst handleCancel = (e: any) => {\r\n        setvisible(false);\r\n      };\r\n\r\n\r\n\r\n\t  const getisSubmitButtonDisabled = (values,isValid) => {\r\n\t\tif(!isValid ||\r\n\t\t\t!values.firstName ||\r\n\t\t\t!values.lastName ||\r\n\t\t\t// !values.password ||\r\n\t\t\t!values.phone ||\r\n\t\t\t!values.code ){\r\n\t\t\treturn true; \r\n\t\t}\r\n\t\treturn false; \r\n\t  }\r\n\r\n\treturn (\r\n\t\t<Formik\r\n\t\tonSubmit={(values, actions) => handleSubmit(values, actions)}\r\n\t\tvalidationSchema={validationSchema}\r\n\t\tvalidateOnBlur={false}\r\n\t\tenableReinitialize={true}\r\n\t\tinitialValues={\r\n\t\t  {...customer}\r\n\t\t}\r\n\t  >\r\n\t\t{({\r\n\t\t  handleChange,\r\n\t\t  values,\r\n\t\t  handleSubmit,\r\n\t\t  errors,\r\n\t\t  isValid,\r\n\t\t  isSubmitting,\r\n\t\t  touched,\r\n\t\t  handleBlur,\r\n\t\t  setFieldTouched,\r\n\t\t  handleReset,\r\n\t\t}) => (\r\n\t\t\t<>\r\n\t\t\t<Modal\r\n\t\t\ttitle=\"Quick Edit\"\r\n\t\t\twidth={'70vw'}\r\n\t\t\tvisible={visible}\r\n\t\t\tonOk={(e : any) => handleSubmit(e)}\r\n\t\t\tonCancel={handleCancel}\r\n\t\t\tokText='Update'\r\n\t\t\tdestroyOnClose={true}\r\n\t\t\tokButtonProps={{\r\n\t\t\tloading: isSubmitting,\r\n\t\t\thtmlType: \"submit\",\r\n\t\t\tdisabled: getisSubmitButtonDisabled(values, isValid)\r\n\t\t\t}}\r\n\t\t\tbodyStyle={{\r\n                margin: '0',\r\n                padding: '10px'\r\n            }}\r\n  >\r\n\r\n\t  {console.log('errorsupdatedealer',errors)}\r\n\r\n<section className='addProductGridContainer'>\r\n\t\t\t\t\t\t\t\t<div className='addProductGridContainer__left'>\r\n\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__name'>\r\n\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__item-header'>\r\n\t\t\t\t\t\t\t\t\t\t\t<h3>\r\n\t\t\t\t\t\t\t\t\t\t\t\tDealer Information *\r\n\t\t\t\t\t\t\t\t\t\t\t</h3>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__item-body'>\r\n\r\n\t\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs'>\r\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\tlabel='First Name'\r\n\t\t\t\t\t\t\t\t\t\tvalue={values.firstName}\r\n\t\t\t\t\t\t\t\t\t\tname='firstName'\r\n\t\t\t\t\t\t\t\t\t\tisError={(touched.firstName && errors.firstName) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateCustomerState.error['error']['firstName'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\terrorString={(touched.firstName && errors.firstName) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateCustomerState.error['error']['firstName'])}\r\n\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('firstName');\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\tlabel='Last Name'\r\n\t\t\t\t\t\t\t\t\t\tvalue={values.lastName}\r\n\t\t\t\t\t\t\t\t\t\tname='lastName'\r\n\t\t\t\t\t\t\t\t\t\tisError={(touched.lastName && errors.lastName) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateCustomerState.error['error']['lastName'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\terrorString={(touched.lastName && errors.lastName) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateCustomerState.error['error']['lastName'])}\r\n\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('lastName');\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t<div className='dubbleRowInputs'>\r\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\tlabel='Phone'\r\n\t\t\t\t\t\t\t\t\t\tvalue={values.phone}\r\n\t\t\t\t\t\t\t\t\t\tname='phone'\r\n\t\t\t\t\t\t\t\t\t\tisError={(touched.phone && errors.phone) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateCustomerState.error['error']['phone'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\terrorString={(touched.phone && errors.phone) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateCustomerState.error['error']['phone'])}\r\n\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('phone');\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\tlabel='Email'\r\n\t\t\t\t\t\t\t\t\t\tvalue={values.email}\r\n\t\t\t\t\t\t\t\t\t\tname='email'\r\n\t\t\t\t\t\t\t\t\t\tisError={(touched.email && errors.email) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateCustomerState.error['error']['email'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\terrorString={(touched.email && errors.email) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateCustomerState.error['error']['email'])}\r\n\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('email');\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\t\t\t\t\t\t\t<div className='dubbleRowInputs'>\r\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\tlabel='Dealer Code'\r\n\t\t\t\t\t\t\t\t\ttype='text'\r\n\t\t\t\t\t\t\t\t\tvalue={values.code}\r\n\t\t\t\t\t\t\t\t\tname='code'\r\n\t\t\t\t\t\t\t\t\tisError={(touched.code && errors.code) ||\r\n\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateCustomerState.error['error']['code'])}\r\n\r\n\t\t\t\t\t\t\t\t\terrorString={(touched.code && errors.code) ||\r\n\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateCustomerState.error['error']['code'])}\r\n\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\tsetFieldTouched('code');\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\tlabel='Password'\r\n\t\t\t\t\t\t\t\t\ttype='password'\r\n\t\t\t\t\t\t\t\t\tvalue={values.password}\r\n\t\t\t\t\t\t\t\t\tname='password'\r\n\t\t\t\t\t\t\t\t\tisError={(touched.password && errors.password) ||\r\n\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateCustomerState.error['error']['password'])}\r\n\r\n\t\t\t\t\t\t\t\t\terrorString={(touched.password && errors.password) ||\r\n\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateCustomerState.error['error']['password'])}\r\n\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\tsetFieldTouched('password');\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t<div className='dubbleRowInputs'>\r\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\tlabel='Deposit Money'\r\n\t\t\t\t\t\t\t\t\ttype='text'\r\n\t\t\t\t\t\t\t\t\tvalue={values.depositMoney}\r\n\t\t\t\t\t\t\t\t\tname='depositMoney'\r\n\t\t\t\t\t\t\t\t\tisError={(touched.depositMoney && errors.depositMoney) ||\r\n\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateCustomerState.error['error']['depositMoney'])}\r\n\r\n\t\t\t\t\t\t\t\t\terrorString={(touched.depositMoney && errors.depositMoney) ||\r\n\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateCustomerState.error['error']['depositMoney'])}\r\n\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\tsetFieldTouched('depositMoney');\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\tlabel='Commission'\r\n\t\t\t\t\t\t\t\t\ttype='commission'\r\n\t\t\t\t\t\t\t\t\tvalue={values.commission}\r\n\t\t\t\t\t\t\t\t\tname='commission'\r\n\t\t\t\t\t\t\t\t\tisError={(touched.commission && errors.commission) ||\r\n\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateCustomerState.error['error']['commission'])}\r\n\r\n\t\t\t\t\t\t\t\t\terrorString={(touched.commission && errors.commission) ||\r\n\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateCustomerState.error['error']['commission'])}\r\n\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\tsetFieldTouched('commission');\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\t\t\t\tmarginTop: '12px'\r\n\t\t\t\t\t\t\t\t\t\t}}></div>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\tlabel='Address'\r\n\t\t\t\t\t\t\t\t\t\tvalue={values.address}\r\n\t\t\t\t\t\t\t\t\t\tname='address'\r\n\t\t\t\t\t\t\t\t\t\tisError={(touched.address && errors.address) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateCustomerState.error['error']['address'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\terrorString={(touched.address && errors.address) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateCustomerState.error['error']['address'])}\r\n\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('address');\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\r\n\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className='addProductGridContainer__right'>\r\n\r\n\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__tag'>\r\n\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer-rightItemContainer'>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer-rightItemContainer-header'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<h3>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tAreas *\r\n\t\t\t\t\t\t\t\t\t\t\t\t</h3>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer-rightItemContainer-body'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Areas\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetSelectedTags={setSelectedTags}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tselectedTags={selectedTags}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetTagIds={setTagIds} />\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</section>\r\n\r\n\t\r\n\r\n\r\n  </Modal>\r\n\t\t\t  \r\n\t\t\t</>\r\n\t\t  )}\r\n\t  </Formik>\r\n\t);\r\n};\r\n\r\n\r\nexport default QuickEdit;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useParams, useHistory } from \"react-router\";\r\n\r\n\r\n// import hooks\r\nimport { useHandleFetch } from \"../../hooks\";\r\n\r\n// import \r\nimport Moment from \"react-moment\";\r\n\r\n// import lib\r\nimport {\r\n    FileOutlined,\r\n    InboxOutlined,\r\n    RadiusUpleftOutlined,\r\n    RadiusUprightOutlined,\r\n    RadiusBottomleftOutlined,\r\n    RadiusBottomrightOutlined,\r\n    PlusOutlined,\r\n    DeleteOutlined,\r\n    EditOutlined,\r\n    CheckCircleOutlined\r\n} from '@ant-design/icons';\r\n\r\nimport { Spin, Skeleton, Empty, Popconfirm, Upload, message, Switch, Select, Button, notification, Table, Space, Input as CoolInput, Tooltip, Modal } from 'antd';\r\n\r\n\r\n// import components\r\nimport { DataTableSkeleton } from \"../../components/Placeholders\";\r\nimport CustomerEdit from \"./DealerEdit\";\r\n\r\n\r\nconst { Column, ColumnGroup } = Table;\r\nconst { Search } = CoolInput;\r\n\r\n\r\ninterface Props {\r\n    productRecord?: any;\r\n}\r\n\r\nconst NewBrandDetail = (props: Props) => {\r\n    const [customerDetailState, handleCustomerDetailFetch] = useHandleFetch({}, 'dealerDetail');\r\n    const [orderListState, handleOrderListFetch] = useHandleFetch({}, 'dealerOrderList');\r\n    const [registeredCustomerListState, handleRegisteredCustomerListFetch] = useHandleFetch({}, 'dealerRegisteredCustomerList');\r\n    const [tagEditVisible, setTagEditVisible] = useState(false);\r\n    const [customerDetailData,setCustomerDetailData] = useState({}); \r\n\r\n\r\n\r\n    const params = useParams();\r\n    const history = useHistory();\r\n    const customerId = params['id'];\r\n\r\n    useEffect(() => {\r\n\r\n        const getCustomerDetail = async () => {\r\n            const customerDetailDataRes = await handleCustomerDetailFetch({\r\n                urlOptions: {\r\n                    placeHolders: {\r\n                        id: customerId\r\n                    }\r\n                }\r\n            });\r\n\r\n            // @ts-ignore\r\n            if(customerDetailDataRes){\r\n                // @ts-ignore\r\n                setCustomerDetailData(customerDetailDataRes); \r\n            }\r\n\r\n            console.log('customerDetailDataRes',customerDetailDataRes)\r\n        };\r\n\r\n        getCustomerDetail();\r\n\r\n    }, [customerId]);\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        const getOrderList = async () => {\r\n            await handleOrderListFetch({\r\n                urlOptions: {\r\n                    placeHolders: {\r\n                        id: customerId\r\n                    }\r\n                }\r\n            })\r\n        };\r\n\r\n        getOrderList();\r\n\r\n        const getRegisteredOrderList = async () => {\r\n            await handleRegisteredCustomerListFetch({\r\n                urlOptions: {\r\n                    placeHolders: {\r\n                        id: customerId\r\n                    }\r\n                }\r\n            })\r\n        };\r\n\r\n        getRegisteredOrderList();\r\n\r\n\r\n\r\n\r\n    }, [customerId]);\r\n\r\n\r\n    console.log('dealerDetailData', customerDetailData);\r\n\r\n    \r\n    return (\r\n        <div className='brandDetailContainer'>\r\n            <div className='brandDetailContainer__heading'>\r\n                <h3>\r\n                 Dealer Detail\r\n                </h3>\r\n\r\n                {customerDetailState.done && customerDetailData && (Object.keys(customerDetailData).length > 0) && (\r\n                    <>\r\n                        <CustomerEdit\r\n                            visible={tagEditVisible}\r\n                            setvisible={setTagEditVisible}\r\n                            customer={customerDetailData}\r\n                            setCustomerDetailData={setCustomerDetailData}\r\n                        />\r\n                        <Button\r\n                            onClick={() => setTagEditVisible(true)}\r\n                            type='link'\r\n                            icon={<EditOutlined />}\r\n                        >\r\n                            Edit\r\n                      </Button>\r\n                    </>\r\n                )}\r\n            </div>\r\n            <Skeleton\r\n                paragraph={{ rows: 2 }}\r\n                loading={customerDetailState.isLoading}>\r\n                {customerDetailState.done && customerDetailData && !(Object.keys(customerDetailData).length > 0) && (\r\n                    <Empty description='No Dealer found' image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n                )}\r\n\r\n                {customerDetailState.done && customerDetailData && (Object.keys(customerDetailData).length > 0) && (\r\n                    <div className='brandDetailContainer__header'>\r\n\r\n                        <div className='brandDetailContainer__header-info'>\r\n                            <h2>\r\n                                {customerDetailData['name']}\r\n                            </h2>\r\n                           \r\n\r\n                           \r\n                            {customerDetailData['code'] && (\r\n                                <h3>\r\n                                    CODE:\r\n                                    <span>\r\n                                        {customerDetailData['code']}\r\n                                    </span>\r\n                                </h3>\r\n                            )}\r\n\r\n\r\n\r\n\r\n                            {customerDetailData['commision'] && (\r\n                                <h3>\r\n                                    COMMISSION:\r\n                                    <span>\r\n                                        {customerDetailData['commision']}\r\n                                    </span>\r\n                                </h3>\r\n                            )}\r\n\r\n                            {customerDetailData['depositMoney'] && (\r\n                                <h3>\r\n                                    DEPOSIT MONEY:\r\n                                    <span>\r\n                                        {customerDetailData['depositMoney']}\r\n                                    </span>\r\n                                </h3>\r\n                            )}\r\n\r\n\r\n                            {customerDetailData['city'] && (\r\n                                <h3>\r\n                                    CITY:\r\n                                    <span>\r\n                                        {customerDetailData['city']}\r\n                                    </span>\r\n                                </h3>\r\n                            )}\r\n                        \r\n\r\n\r\n                            {customerDetailData['address1'] && (\r\n                                <h3>\r\n                                    ADDRESS:\r\n                                    <span>\r\n                                        {customerDetailData['address1']}\r\n                                    </span>\r\n                                </h3>\r\n                            )}\r\n                         \r\n\r\n                            {customerDetailData['phone'] && (\r\n                                <h3>\r\n                                    PHONE:\r\n                                    <span>\r\n                                        {customerDetailData['phone']}\r\n                                    </span>\r\n                                </h3>\r\n                            )}\r\n\r\n                             {customerDetailData['email'] && (\r\n                                <h3>\r\n                                    EMAIL:\r\n                                    <span>\r\n                                        {customerDetailData['email']}\r\n                                    </span>\r\n                                </h3>\r\n                            )}\r\n\r\n\r\n                              {customerDetailData['area'] && customerDetailData['area'].length > 0 &&\r\n                                    (<>\r\n                                        <h3>\r\n                                        AREAS:\r\n                                        {customerDetailData['area'].map(cat => {\r\n                                            return (\r\n                                                <span\r\n                                                    // onClick={() => history.push(`/admin/dealer/area/${cat._id}`)}\r\n\r\n                                                >\r\n                                                    {cat.name}\r\n                                                </span>\r\n                                            )\r\n                                        })}\r\n                                        </h3>\r\n\r\n                                    </>)\r\n                                }\r\n\r\n                        </div>\r\n                    </div>\r\n                )}\r\n\r\n            </Skeleton>\r\n\r\n        <div className='dealerDetailBodyContainer'>\r\n            <div className='dealerDetailBodyContainer__item'>\r\n            <div className='brandDetailContainer__heading'>\r\n                <h3>\r\n                     Orders \r\n                </h3>\r\n            </div>\r\n            <div className='brandDetailContainer__body'>\r\n                {orderListState.isLoading && (\r\n                  <>\r\n                  <div style={{\r\n                    margin: '100px'\r\n                  }}>\r\n                  <Spin size='large' />\r\n                  </div>\r\n                  </>\r\n                )}\r\n\r\n                                {orderListState.done && !(orderListState.data.length > 0) && (\r\n\r\n                    <div style={{\r\n                        marginTop: '100px'\r\n                    }}>\r\n                        <Empty description='No Orders found' image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n                    </div>\r\n                )}\r\n\r\n                {orderListState.done && orderListState.data && orderListState.data.length > 0 && (\r\n                    <>\r\n                        <Table\r\n                            style={{\r\n                                paddingTop: '10px',\r\n                                borderRadius: '5px !important',\r\n                                overflow: 'hidden',\r\n                                boxShadow: '0 0.125rem 0.625rem rgba(227, 231, 250, 0.3), 0 0.0625rem 0.125rem rgba(206, 220, 233, 0.4)'\r\n                            }}\r\n                            // expandable={{\r\n                            //     expandedRowRender: record => <p style={{ margin: 0 }}>{record.name}</p>,\r\n                            //     rowExpandable: record => record.name !== 'Not Expandable',\r\n                            //   }}\r\n                            // bordered={true}\r\n                            size='small'\r\n                            // pagination={false}\r\n                            dataSource={orderListState.data}\r\n                            tableLayout={'auto'}\r\n                            onHeaderRow={column => {\r\n                                return {\r\n                                    style: {\r\n                                        color: 'red !important'\r\n                                    }\r\n\r\n                                };\r\n                            }}\r\n                        >\r\n                          \r\n          \r\n          \r\n\r\n        <Column\r\n          title=\"Code\"\r\n          dataIndex=\"shortCode\"\r\n          key=\"id\"\r\n          className='classnameofthecolumn'\r\n          render={(text, record: any) => (\r\n            <>\r\n\r\n              <h4\r\n                onClick={() => {\r\n                  // setvisible(true)\r\n                  history.push(`/admin/order/${record.id}`)\r\n                }}\r\n                style={{\r\n                  fontWeight: 400,\r\n                  color: '#555',\r\n                  cursor: 'pointer'\r\n\r\n                }}>\r\n                #{text}\r\n              </h4>\r\n\r\n\r\n            </>\r\n          )}\r\n\r\n        />\r\n\r\n\r\n        <Column\r\n          title=\"Name\"\r\n          dataIndex=\"name\"\r\n          key=\"id\"\r\n          className='classnameofthecolumn'\r\n          render={(text, record: any) => (\r\n            <>\r\n\r\n              <h4\r\n                onClick={() => {\r\n                  // setvisible(true)\r\n                  history.push(`/admin/order/${record.id}`)\r\n                }}\r\n                style={{\r\n                  fontWeight: 400,\r\n                  color: '#555',\r\n                  cursor: 'pointer'\r\n\r\n                }}>\r\n                {text}\r\n              </h4>\r\n\r\n\r\n            </>\r\n          )}\r\n\r\n        />\r\n\r\n\r\n              <Column\r\n                title=\"Total Price\" \r\n                dataIndex=\"total\" \r\n                key=\"id\" \r\n                className='classnameofthecolumn'\r\n                />\r\n\r\n\r\n\r\n\r\n          <Column\r\n            width={150}\r\n           title=\"Status\" \r\n           dataIndex=\"status\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n           render={(text, record: any) => (\r\n            <>\r\n\r\n             <a href='##'>\r\n              <span\r\n              style={{\r\n                fontSize:'12px'\r\n              }}\r\n                >\r\n                {text}\r\n             </span> \r\n            </a>\r\n            </>\r\n          )}\r\n            />\r\n\r\n\r\n                        </Table>\r\n                    </>\r\n                )}\r\n\r\n            </div>\r\n            </div>\r\n            <div className='dealerDetailBodyContainer__item'>\r\n            <div className='brandDetailContainer__heading'>\r\n                <h3>\r\n                     Customers \r\n                </h3>\r\n            </div>\r\n            <div className='brandDetailContainer__body'>\r\n                {registeredCustomerListState.isLoading && (\r\n                  <>\r\n                  <div style={{\r\n                    margin: '100px'\r\n                  }}>\r\n                  <Spin size='large' />\r\n                  </div>\r\n                  </>\r\n                )}\r\n                {registeredCustomerListState.done && !(registeredCustomerListState.data.length > 0) && (\r\n                    <div style={{\r\n                        marginTop: '100px'\r\n                    }}>\r\n                        <Empty description='No Customer found' image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n                    </div>\r\n                )}\r\n\r\n                {registeredCustomerListState.done && registeredCustomerListState.data && registeredCustomerListState.data.length > 0 && (\r\n                    <>\r\n                        <Table\r\n                            style={{\r\n                                paddingTop: '10px',\r\n                                borderRadius: '5px !important',\r\n                                overflow: 'hidden',\r\n                                boxShadow: '0 0.125rem 0.625rem rgba(227, 231, 250, 0.3), 0 0.0625rem 0.125rem rgba(206, 220, 233, 0.4)'\r\n                            }}\r\n                            // expandable={{\r\n                            //     expandedRowRender: record => <p style={{ margin: 0 }}>{record.name}</p>,\r\n                            //     rowExpandable: record => record.name !== 'Not Expandable',\r\n                            //   }}\r\n                            // bordered={true}\r\n                            size='small'\r\n                            // pagination={false}\r\n                            dataSource={registeredCustomerListState.data}\r\n                            tableLayout={'auto'}\r\n                            onHeaderRow={column => {\r\n                                return {\r\n                                    style: {\r\n                                        color: 'red !important'\r\n                                    }\r\n\r\n                                };\r\n                            }}\r\n                        >\r\n                          \r\n          \r\n          \r\n                          <Column\r\n                      title=\"Name\" \r\n                      dataIndex=\"name\" \r\n                      key=\"id\" \r\n                      className='classnameofthecolumn'\r\n                      render={(text, record: any) => (\r\n                        <>\r\n                          <h4\r\n                            onClick={() => {\r\n                              history.push(`/admin/customer/${record.id}`)\r\n                              // setcategoryDetailVisible(true);\r\n                            }}\r\n                            style={{\r\n                              fontWeight: 400,\r\n                              color: '#555',\r\n                              cursor: 'pointer'\r\n                            }}>\r\n                            {text}\r\n                          </h4>\r\n                        </>\r\n                      )}\r\n                      />\r\n\r\n         \r\n     \r\n\r\n         \r\n\r\n            \r\n          <Column\r\n           title=\"Order\" \r\n           dataIndex=\"orderCount\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n         \r\n            />\r\n\r\n        <Column\r\n           title=\"Total Price\" \r\n           dataIndex=\"totalOrderPrice\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n         \r\n            />\r\n\r\n                        </Table>\r\n                    </>\r\n                )}\r\n\r\n            </div>\r\n            </div>\r\n        </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NewBrandDetail\r\n","import React, { useState,useEffect } from 'react';\r\nimport { Modal, notification } from 'antd';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n// import components\r\nimport Input from '../../../components/Field/Input';\r\nimport { useHandleFetch } from '../../../hooks';\r\nimport { CheckCircleOutlined, PlusOutlined, EditOutlined, DeleteOutlined, EditFilled } from '@ant-design/icons';\r\nimport MetaTags from \"../../../pages/category/MetaTags\";\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    name: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Area Updated',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Something Went Wrong',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst initialValues = {\r\n    name: '',\r\n\tbnName: '',\r\n\tdescription: '',\r\n\tbnDescription: '',\r\n\tmetaTitle: '',\r\n\tbnMetaTitle: '',\r\n\tmetaDescription: '',\r\n\tbnMetaDescription: '',\r\n\tmetaTags: '',\r\n\tbnMetaTags: '',\r\n}\r\n\r\n\r\n\r\n\r\n\r\ninterface Props {\r\n    tagEditVisible?: any;\r\n    setTagEditVisible?: any;\r\n    tagDetailData?: any;\r\n    setTagList?:any; \r\n    tagList?:any; \r\n}\r\n\r\nconst QuickEdit = ({ tagEditVisible, setTagEditVisible, tagDetailData,setTagList,tagList }: Props) => {\r\n    const [updateTagState, handleUpdateCategoryFetch] = useHandleFetch({}, 'updateDealerArea');\r\n\r\n\r\n    const handleSubmit = async (values: any, actions: any) => {\r\n        const updateTagRes = await handleUpdateCategoryFetch({\r\n            urlOptions: {\r\n                placeHolders: {\r\n                    id: values.id,\r\n                }\r\n            },\r\n            body: {\r\n                name: values.name,\r\n            },\r\n        });\r\n\r\n        // @ts-ignore\r\n        if (updateTagRes && updateTagRes.status === 'ok') {\r\n\r\n\r\n\t\t\tconst positionInTag = () => {\r\n\t\t\t\treturn tagList.map(item => item.id).indexOf(values.id);\r\n\t\t\t}\r\n\r\n\t\t\tconst index = positionInTag();\r\n\r\n\t\t\t// @ts-ignore\r\n\t\t\tconst updatedItem = Object.assign({}, tagList[index], { ...updateTagRes });\r\n\t\t\tconst updateTagList = [...tagList.slice(0, index), updatedItem, ...tagList.slice(index + 1)];\r\n\t\t\tsetTagList(updateTagList);\r\n\r\n\r\n            console.log('categoryupdateTagRes',updateTagRes);\r\n\t\t\topenSuccessNotification();\r\n\t\t\tsetTagEditVisible(false)\r\n\t\t\t\r\n        }\r\n        else {\r\n            openErrorNotification();\r\n        }\r\n\r\n        actions.setSubmitting(false);\r\n    };\r\n\r\n\r\n    const handleCancel = (e: any) => {\r\n        setTagEditVisible(false);\r\n    };\r\n\r\n\r\n    const getisSubmitButtonDisabled = (values, isValid) => {\r\n        if (!values.name || !isValid) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }; \r\n \r\n\r\n    return (\r\n        <Formik\r\n            onSubmit={(values, actions) => handleSubmit(values, actions)}\r\n            validationSchema={validationSchema}\r\n            validateOnBlur={false}\r\n            enableReinitialize={true}\r\n            initialValues={{\r\n                ...initialValues, \r\n                ...tagDetailData,\r\n                ...( tagDetailData && Object.keys(tagDetailData).length > 0 && {\r\n                    bnMetaTitle: tagDetailData['bn']\r\n                    && tagDetailData['bn'].metaTitle\r\n                    && tagDetailData['bn'].metaTitle,\r\n                    bnMetaDescription: tagDetailData['bn'] &&  tagDetailData['bn'].metaDescription && tagDetailData['bn'].metaDescription,\r\n                    bnName: tagDetailData['bn'] && tagDetailData['bn'].name && tagDetailData['bn'].name,\r\n                    bnDescription: tagDetailData['bn'] && tagDetailData['bn'].description && tagDetailData['bn'].description,\r\n                  })\r\n            }}\r\n        >\r\n            {({\r\n                handleChange,\r\n                values,\r\n                handleSubmit,\r\n                errors,\r\n                isValid,\r\n                isSubmitting,\r\n                touched,\r\n                handleBlur,\r\n                setFieldTouched,\r\n                handleReset,\r\n            }) => (\r\n                    <>\r\n                        <Modal\r\n                        \tstyle={{\r\n\t\t\t\t\t\t\t\ttop: '40px',\r\n\r\n\t\t\t\t\t\t\t}}\r\n                            title=\"Area Edit\"\r\n                            visible={tagEditVisible}\r\n                            onOk={(e: any) => handleSubmit(e)}\r\n                            onCancel={handleCancel}\r\n                            okText='Update'\r\n                            okButtonProps={{\r\n                                loading: isSubmitting,\r\n                                htmlType: \"submit\",\r\n                                disabled: getisSubmitButtonDisabled(values, isValid)\r\n                            }}\r\n                        >\r\n                            <Input\r\n\t\t\t\t\t\t\t\tlabel='Name'\r\n\t\t\t\t\t\t\t\tvalue={values.name}\r\n\t\t\t\t\t\t\t\tname='name'\r\n\t\t\t\t\t\t\t\tisError={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateTagState.error['error']['name'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateTagState.error['error']['name'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('name');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\r\n\r\n\r\n                        </Modal>\r\n\r\n                    </>\r\n                )}\r\n        </Formik>\r\n    );\r\n};\r\n\r\n\r\nexport default QuickEdit;\r\n","import React, { useState } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n\r\nimport { useHandleFetch } from '../../../hooks';\r\n// import third party ui lib\r\nimport { Upload, message, Switch, Select, Button, notification, Modal, Tooltip } from 'antd';\r\n\r\nimport {\r\n    FileOutlined,\r\n    InboxOutlined,\r\n    FileAddOutlined,\r\n    DeleteOutlined,\r\n    CheckCircleOutlined,\r\n    CloseOutlined,\r\n    CheckOutlined,\r\n    InfoCircleOutlined,\r\n    PlusOutlined,\r\n    FileImageFilled\r\n} from '@ant-design/icons';\r\n\r\n\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../../components/Field/Input';\r\nimport TextArea from '../../../components/Field/TextArea';\r\nimport MediaLibrary from \"../../../components/MediaLibrary\";\r\nimport MetaTags from \"../../../pages/category/MetaTags\";\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    name: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Area Created',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n    notification.error({\r\n        message: message || 'Something Went Wrong',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst initialValues = {\r\n    name: '',\r\n}\r\n\r\n\r\n\r\ninterface Props {\r\n    addNewCategoryVisible?: any;\r\n    setAddNewCategoryVisible?: any;\r\n    tagList?: any;\r\n    setTagList?: any;\r\n\r\n}\r\n\r\nconst AddNewBrand = ({ addNewCategoryVisible, setAddNewCategoryVisible, tagList, setTagList }: Props) => {\r\n\r\n    const [addTagState, handleAddTagFetch] = useHandleFetch({}, 'addDealerArea');\r\n    const [myImages, setmyImages] = useState(false);\r\n    const [visibleMedia, setvisibleMedia] = useState(false);\r\n\r\n    const handleSubmit = async (values: any, actions: any) => {\r\n        const addTagRes = await handleAddTagFetch({\r\n            urlOptions: {\r\n                placeHolders: {\r\n                    id: values.id,\r\n                }\r\n            },\r\n            body: {\r\n                name: values.name.trim(),\r\n            },\r\n        });\r\n\r\n        // @ts-ignore\r\n        if (addTagRes && addTagRes.status === 'ok') {\r\n            openSuccessNotification();\r\n\r\n            setTagList([{\r\n                id: addTagRes['_id'] || '',\r\n                key: addTagRes['_id'] || '',\r\n                name: addTagRes['name'] || '',\r\n            },...tagList])\r\n            actions.resetForm();\r\n            setAddNewCategoryVisible(false);\r\n        }\r\n        else {\r\n            openErrorNotification();\r\n        }\r\n\r\n\r\n        actions.setSubmitting(false);\r\n\r\n    };\r\n\r\n\r\n    const handleCancel = (e: any) => {\r\n        setAddNewCategoryVisible(false);\r\n    };\r\n\r\n\r\n    const getisSubmitButtonDisabled = (values, isValid) => {\r\n        if (!values.name || !isValid) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n\r\n\r\n\r\n    return (\r\n        <Formik\r\n            onSubmit={(values, actions) => handleSubmit(values, actions)}\r\n            validationSchema={validationSchema}\r\n            validateOnBlur={false}\r\n            enableReinitialize={true}\r\n            initialValues={\r\n                { ...initialValues }\r\n            }\r\n        >\r\n            {({\r\n                handleChange,\r\n                values,\r\n                handleSubmit,\r\n                errors,\r\n                isValid,\r\n                isSubmitting,\r\n                touched,\r\n                handleBlur,\r\n                setFieldTouched,\r\n                handleReset,\r\n            }) => (\r\n                    <>\r\n                        <Modal\r\n                            style={{\r\n                                top: '40px'\r\n                            }}\r\n                            title=\"Add New Area\"\r\n                            visible={addNewCategoryVisible}\r\n                            onOk={(e: any) => handleSubmit(e)}\r\n                            onCancel={handleCancel}\r\n                            okText='Create'\r\n                            okButtonProps={{\r\n                                loading: isSubmitting,\r\n                                htmlType: \"submit\",\r\n                                disabled: getisSubmitButtonDisabled(values, isValid)\r\n                            }}\r\n                        >\r\n                  \t\t\t<Input\r\n\t\t\t\t\t\t\t\tlabel='Name'\r\n\t\t\t\t\t\t\t\tvalue={values.name}\r\n\t\t\t\t\t\t\t\tname='name'\r\n\t\t\t\t\t\t\t\tisError={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addTagState.error['error']['name'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addTagState.error['error']['name'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('name');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n                        </Modal>\r\n\r\n                        <MediaLibrary\r\n                            setvisible={setvisibleMedia}\r\n                            visible={visibleMedia}\r\n                            setmyImages={setmyImages}\r\n                            myImages={myImages}\r\n                            isModalOpenForImages={true}\r\n\r\n                        />\r\n                    </>\r\n                )}\r\n        </Formik>\r\n\r\n\r\n\r\n\r\n    );\r\n};\r\n\r\nexport default AddNewBrand;\r\n","import React, { useState, useEffect } from 'react';\r\n\r\n// import third party ui lib\r\nimport { Empty, Popconfirm, Upload, message, Switch, Select, Button, notification, Table, Space, Input as CoolInput, Tooltip, Modal } from 'antd';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { useHistory } from 'react-router';\r\n\r\n\r\n\r\nimport {\r\n\tFileOutlined,\r\n\tInboxOutlined,\r\n\tRadiusUpleftOutlined,\r\n\tRadiusUprightOutlined,\r\n\tRadiusBottomleftOutlined,\r\n\tRadiusBottomrightOutlined,\r\n\tPlusOutlined,\r\n\tDeleteOutlined,\r\n\tEditOutlined,\r\n\tCheckCircleOutlined\r\n} from '@ant-design/icons';\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n\r\n\r\n/// import hooks\r\nimport { useFetch, useHandleFetch } from \"../../../hooks\";\r\n\r\n\r\n// import components\r\nimport { DataTableSkeleton } from \"../../../components/Placeholders\";\r\nimport TagQuickEdit from \"./AreaQuickEdit\"\r\nimport AddNewTag from \"./AddNewArea\"\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t\tmessage: message || 'Area Created',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n\tnotification.error({\r\n\t\tmessage: message || 'Something Went Wrong',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n};\r\n\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n\tname: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\n\r\nconst initialValues = {\r\n\tname: '',\r\n\tdescription: ''\r\n}\r\n\r\n\r\nconst { Column, ColumnGroup } = Table;\r\nconst { Search } = CoolInput;\r\n\r\n\r\n\r\nconst MyTable = ({ data, setTagList }) => {\r\n\tconst [visible, setvisible] = useState(false);\r\n\tconst [activeCategoryForEdit, setactiveCategoryForEdit] = useState(false);\r\n\tconst [deleteTagState, handleDeleteTagFetch] = useHandleFetch({}, 'deleteDealerArea');\r\n\r\n\tconst history = useHistory();\r\n\r\n\r\n\tconst handleDeleteTag = async (id) => {\r\n\t\tconst deleteTagRes = await handleDeleteTagFetch({\r\n\t\t\turlOptions: {\r\n\t\t\t\tplaceHolders: {\r\n\t\t\t\t\tid,\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\r\n\r\n\t\t// @ts-ignore\r\n\t\tif (deleteTagRes && deleteTagRes.status === 'ok') {\r\n\t\t\topenSuccessNotification('Deleted Area');\r\n\t\t\tconst newtagList = data.filter(item => item.id !== id);\r\n\t\t\tsetTagList(newtagList);\r\n\t\t}\r\n\r\n\r\n\t}\r\n\r\n\r\n\tconst handleOk = (e: any) => {\r\n\t\tsetvisible(false);\r\n\r\n\t};\r\n\r\n\tconst handleCancel = (e: any) => {\r\n\t\tsetvisible(false);\r\n\t};\r\n\r\n\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Table\r\n\t\t\t\t// expandable={{\r\n\t\t\t\t//     expandedRowRender: record => <p style={{ margin: 0 }}>{record.name}</p>,\r\n\t\t\t\t//     rowExpandable: record => record.name !== 'Not Expandable',\r\n\t\t\t\t//   }}\r\n\t\t\t\t// bordered={true}\r\n\t\t\t\tsize='small'\r\n\t\t\t\t// pagination={false}\r\n\t\t\t\tdataSource={data}\r\n\t\t\t>\r\n\r\n\t\t\t\t<Column\r\n\t\t\t\t\ttitle=\"Name\"\r\n\t\t\t\t\tdataIndex=\"name\"\r\n\t\t\t\t\tkey=\"id\"\r\n\t\t\t\t\tclassName='classnameofthecolumn'\r\n\t\t\t\t\trender={(text, record: any) => (\r\n\t\t\t\t\t\t<>\r\n\r\n\t\t\t\t\t\t\t<h4\r\n\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\t// history.push(`/admin/dealer/area/${record.id}`)\r\n\t\t\t\t\t\t\t\t\t// setBrandDetailVisible(true);\r\n\t\t\t\t\t\t\t\t\tsetactiveCategoryForEdit(record)\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\tfontWeight: 400,\r\n\t\t\t\t\t\t\t\t\tcolor: '#555',\r\n\t\t\t\t\t\t\t\t\tcursor: 'pointer'\r\n\r\n\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t{text}\r\n\t\t\t\t\t\t\t</h4>\r\n\r\n\r\n\t\t\t\t\t\t</>\r\n\t\t\t\t\t)}\r\n\t\t\t\t/>\r\n\r\n\t\t\t\t<Column\r\n\r\n\t\t\t\t\tclassName='classnameofthecolumn'\r\n\t\t\t\t\ttitle=\"\"\r\n\t\t\t\t\tkey=\"action\"\r\n\t\t\t\t\talign='right'\r\n\t\t\t\t\trender={(text, record: any) => (\r\n\t\t\t\t\t\t<Space size=\"middle\">\r\n\t\t\t\t\t\t\t<a href='##'>\r\n\t\t\t\t\t\t\t\t<Tooltip placement=\"top\" title='Edit Area'>\r\n\t\t\t\t\t\t\t\t\t<span className='iconSize' onClick={() => {\r\n\t\t\t\t\t\t\t\t\t\tsetvisible(true)\r\n\t\t\t\t\t\t\t\t\t\tsetactiveCategoryForEdit(record);\r\n\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t<EditOutlined />\r\n\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t\t</a>\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t<Popconfirm\r\n\t\t\t\t\t\t\t\tonConfirm={() => handleDeleteTag(record.id)}\r\n\t\t\t\t\t\t\t\ttitle=\"Are you sure？\" okText=\"Yes\" cancelText=\"No\">\r\n\t\t\t\t\t\t\t\t<span\r\n\t\t\t\t\t\t\t\t\tclassName='iconSize iconSize-danger'\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t<DeleteOutlined />\r\n\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t</Popconfirm>\r\n\t\t\t\t\t\t</Space>\r\n\t\t\t\t\t)}\r\n\t\t\t\t/>\r\n\t\t\t</Table>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\t\t\t{activeCategoryForEdit && <TagQuickEdit\r\n\t\t\t\ttagList={data}\r\n\t\t\t\tsetTagList={setTagList}\r\n\t\t\t\ttagEditVisible={visible}\r\n\t\t\t\tsetTagEditVisible={setvisible}\r\n\t\t\t\ttagDetailData={activeCategoryForEdit} />}\r\n\t\t</>\r\n\t)\r\n}\r\n\r\n\r\n\r\n\r\ninterface Props { }\r\n\r\nconst TagList = ({ }: Props) => {\r\n\r\n\r\n\tconst [tagList, setTagList] = useState([]);\r\n\r\n\tconst [tagState, handleTagListFetch] = useHandleFetch({}, 'dealerAreaList');\r\n\r\n\r\n\tuseEffect(() => {\r\n\t\tconst setTags = async () => {\r\n\t\t\tconst tags = await handleTagListFetch({\r\n\t\t\t\turlOptions:{\r\n\t\t\t\t\tparams: {\r\n\t\t\t\t\t  sortItem: 'added',\r\n\t\t\t\t\t  sortOrderValue: '-1'\r\n\t\t\t\t\t}\r\n\t\t\t\t  }\r\n\t\t\t});\r\n\t\t\t// @ts-ignore\r\n\t\t\tsetTagList(tags);\r\n\t\t}\r\n\t\tsetTags();\r\n\t}, [])\r\n\r\n\r\n\r\n\tconst [addNewCategoryVisible, setAddNewCategoryVisible] = useState(false);\r\n\r\n\r\n\r\n\r\n\tconst getisSubmitButtonDisabled = (values, isValid) => {\r\n\t\tif (!values.name || !isValid) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\r\n\tconst handleOkAddNewCategory = (e: any) => {\r\n\t\tsetAddNewCategoryVisible(false);\r\n\r\n\t};\r\n\r\n\tconst handleCancelAddNewCategory = (e: any) => {\r\n\t\tsetAddNewCategoryVisible(false);\r\n\t};\r\n\r\n\tconst handleSearch = (value) => {\r\n\t\tif (tagState.data.length > 0) {\r\n\t\t\tconst newTagList = tagState.data.filter(item => item.name.toLowerCase().includes(value.toLowerCase()));\r\n\t\t\tsetTagList(newTagList);\r\n\t\t}\r\n\r\n\t}\r\n\r\n\treturn (\r\n\t\t<>\r\n\r\n\t\t\t<div className='categoryListContainer'>\r\n\t\t\t\t<div className='categoryListContainer__header'>\r\n\t\t\t\t\t<div className='categoryListContainer__header-searchBar-tag'>\r\n\t\t\t\t\t\t<h2 className='categoryListContainer__header-title'>\r\n\t\t\t\t\t\t\tAreas\r\n          \t\t\t\t</h2>\r\n\r\n\r\n\t\t\t\t\t\t<Search\r\n\t\t\t\t\t\t\tenterButton={false}\r\n\t\t\t\t\t\t\tclassName='searchbarClassName'\r\n\t\t\t\t\t\t\tplaceholder=\"search areas..\"\r\n\t\t\t\t\t\t\tonChange={e => handleSearch(e.target.value)}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\t// type=\"primary\"\r\n\t\t\t\t\t\tclassName='btnPrimaryClassNameoutline'\r\n\t\t\t\t\t\ticon={<PlusOutlined />}\r\n\t\t\t\t\t\tonClick={() => setAddNewCategoryVisible(true)}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tAdd New\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className='categoryListContainer__categoryList'>\r\n\t\t\t\t\t{tagState.done && tagList.length > 0 && <MyTable\r\n\t\t\t\t\t\tsetTagList={setTagList}\r\n\t\t\t\t\t\tdata={tagList} />}\r\n\t\t\t\t\t{tagState.isLoading && <DataTableSkeleton />}\r\n\r\n\r\n\t\t\t\t\t{tagState.done && !(tagList.length > 0) && (\r\n\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\tmarginTop: '200px'\r\n\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t<Empty description='No Area found' image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\r\n\t\t\t<AddNewTag\r\n\t\t\t\ttagList={tagList}\r\n\t\t\t\tsetTagList={setTagList}\r\n\t\t\t\taddNewCategoryVisible={addNewCategoryVisible}\r\n\t\t\t\tsetAddNewCategoryVisible={setAddNewCategoryVisible}\r\n\t\t\t/>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default TagList;\r\n","import React, { useState,useEffect } from 'react';\r\nimport { Modal, notification } from 'antd';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n// import components\r\nimport Input from '../../../components/Field/Input';\r\nimport TextArea from '../../../components/Field/TextArea';\r\nimport { useHandleFetch } from '../../../hooks';\r\nimport { CheckCircleOutlined, PlusOutlined, EditOutlined, DeleteOutlined, EditFilled } from '@ant-design/icons';\r\nimport MetaTags from \"../../../pages/category/MetaTags\";\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    name: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Area Updated',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Something Went Wrong',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst initialValues = {\r\n    name: '',\r\n}\r\n\r\n\r\ninterface Props {\r\n    tagEditVisible?: any;\r\n    setTagEditVisible?: any;\r\n    tagDetailData?: any;\r\n    setTagDetailData?:any; \r\n}\r\n\r\nconst QuickEdit = ({ tagEditVisible, setTagEditVisible, tagDetailData,setTagDetailData }: Props) => {\r\n    const [updateTagState, handleUpdateCategoryFetch] = useHandleFetch({}, 'updateDealerArea');\r\n \r\n    \r\n\r\n    const handleSubmit = async (values: any, actions: any) => {\r\n        const updateTagRes = await handleUpdateCategoryFetch({\r\n            urlOptions: {\r\n                placeHolders: {\r\n                    id: values.id,\r\n                }\r\n            },\r\n            body: {\r\n                name: values.name,\r\n            \r\n            },\r\n        });\r\n\r\n        // @ts-ignore\r\n        if (updateTagRes && updateTagRes.status === 'ok') {\r\n            setTagDetailData({\r\n                id:values.id,\r\n                key:values.id,\r\n                name: values.name,\r\n            })\r\n            console.log('categoryupdateTagRes',updateTagRes);\r\n            openSuccessNotification();\r\n\r\n            // const positionInTag = () => {\r\n            //     return tagList.map(item => item.id).indexOf(category.id);\r\n            // }\r\n\r\n            // const index = positionInTag();\r\n\r\n            // const updatedItem = Object.assign({}, tagList[index], { ...updateTagRes });\r\n            // const updateTagList = [...tagList.slice(0, index), updatedItem, ...tagList.slice(index + 1)];\r\n            // setTagList(updateTagList);\r\n\r\n        }\r\n        else {\r\n            openErrorNotification();\r\n        }\r\n\r\n        actions.setSubmitting(false);\r\n        setTagEditVisible(false)\r\n    };\r\n\r\n\r\n    const handleCancel = (e: any) => {\r\n        setTagEditVisible(false);\r\n    };\r\n\r\n\r\n    const getisSubmitButtonDisabled = (values, isValid) => {\r\n        if (!values.name || !isValid) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }; \r\n\r\n\r\n    // useEffect(()=>{\r\n\r\n    //     if(tagDetailData && Object.keys(tagDetailData).length > 0){\r\n    //         const metaTags = tagDetailData.metaTags.split(','); \r\n\r\n    //         console.log('localMetaTags',metaTags);\r\n           \r\n    //         const bnMetaTags = tagDetailData.bn['metaTags'].split(','); \r\n\r\n    //         setTags(metaTags)\r\n    //         setBnTags(bnMetaTags)\r\n    //     }\r\n\r\n    // },[]); \r\n\r\n\r\n    console.log('tagDetailData',tagDetailData);\r\n\r\n\r\n \r\n\r\n    return (\r\n        <Formik\r\n            onSubmit={(values, actions) => handleSubmit(values, actions)}\r\n            validationSchema={validationSchema}\r\n            validateOnBlur={false}\r\n            enableReinitialize={true}\r\n            initialValues={{\r\n                ...initialValues, \r\n                ...tagDetailData,\r\n                ...( tagDetailData && Object.keys(tagDetailData).length > 0 && {\r\n                    bnMetaTitle: tagDetailData['bn']\r\n                    && tagDetailData['bn'].metaTitle\r\n                    && tagDetailData['bn'].metaTitle,\r\n                    bnMetaDescription: tagDetailData['bn'] &&  tagDetailData['bn'].metaDescription && tagDetailData['bn'].metaDescription,\r\n                    bnName: tagDetailData['bn'] && tagDetailData['bn'].name && tagDetailData['bn'].name,\r\n                    bnDescription: tagDetailData['bn'] && tagDetailData['bn'].description && tagDetailData['bn'].description,\r\n                  })\r\n            }}\r\n        >\r\n            {({\r\n                handleChange,\r\n                values,\r\n                handleSubmit,\r\n                errors,\r\n                isValid,\r\n                isSubmitting,\r\n                touched,\r\n                handleBlur,\r\n                setFieldTouched,\r\n                handleReset,\r\n            }) => (\r\n                    <>\r\n                        <Modal\r\n                        \tstyle={{\r\n\t\t\t\t\t\t\t\ttop: '40px',\r\n\r\n\t\t\t\t\t\t\t}}\r\n                            title=\"Area Edit\"\r\n                            visible={tagEditVisible}\r\n                            onOk={(e: any) => handleSubmit(e)}\r\n                            onCancel={handleCancel}\r\n                            okText='Update'\r\n                            okButtonProps={{\r\n                                loading: isSubmitting,\r\n                                htmlType: \"submit\",\r\n                                disabled: getisSubmitButtonDisabled(values, isValid)\r\n                            }}\r\n                        >\r\n                            <Input\r\n\t\t\t\t\t\t\t\tlabel='Name'\r\n\t\t\t\t\t\t\t\tvalue={values.name}\r\n\t\t\t\t\t\t\t\tname='name'\r\n\t\t\t\t\t\t\t\tisError={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateTagState.error['error']['name'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateTagState.error['error']['name'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('name');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n                        </Modal>\r\n\r\n                    </>\r\n                )}\r\n        </Formik>\r\n    );\r\n};\r\n\r\n\r\nexport default QuickEdit;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useParams, useHistory } from \"react-router\";\r\n\r\n\r\n// import hooks\r\nimport { useHandleFetch } from \"../../../hooks\";\r\n\r\n// import lib\r\nimport {\r\n    EditOutlined,\r\n} from '@ant-design/icons';\r\n\r\nimport { Skeleton, Empty, Popconfirm, Upload, message, Switch, Select, Button, notification, Table, Space, Input as CoolInput, Tooltip, Modal } from 'antd';\r\n\r\n\r\n// import components\r\nimport { DataTableSkeleton } from \"../../../components/Placeholders\";\r\nimport TagEdit from \"./AreaEdit\";\r\n\r\n\r\nconst { Column, ColumnGroup } = Table;\r\nconst { Search } = CoolInput;\r\n\r\n\r\ninterface Props {\r\n    productRecord?: any;\r\n}\r\n\r\nconst NewBrandDetail = (props: Props) => {\r\n    const [tagDetailState, handleTagDetailFetch] = useHandleFetch({}, 'dealerAreaDetail');\r\n    const [tagProductsState, handleTagProductsFetch] = useHandleFetch({}, 'dealerListByArea');\r\n    const [tagEditVisible, setTagEditVisible] = useState(false);\r\n    const [tagDetailData,setTagDetailData] = useState({}); \r\n\r\n\r\n    const params = useParams();\r\n    const history = useHistory();\r\n    const tagId = params['id'];\r\n\r\n    useEffect(() => {\r\n\r\n        const getBrandDetail = async () => {\r\n            const tagDetailRes =  await handleTagDetailFetch({\r\n                urlOptions: {\r\n                    placeHolders: {\r\n                        id: tagId\r\n                    }\r\n                }\r\n            }); \r\n\r\n            // @ts-ignore\r\n            if(tagDetailRes){\r\n                console.log('tagDetailRes',tagDetailRes);\r\n                // @ts-ignore\r\n                setTagDetailData(tagDetailRes);\r\n            }\r\n        };\r\n\r\n        getBrandDetail();\r\n\r\n    }, [tagId]);\r\n\r\n    useEffect(() => {\r\n        const getTagProducts = async () => {\r\n            await handleTagProductsFetch({\r\n                urlOptions: {\r\n                    placeHolders: {\r\n                        id: tagId\r\n                    }\r\n                }\r\n            })\r\n        };\r\n\r\n        getTagProducts();\r\n\r\n    }, [tagId]);\r\n\r\n\r\n\r\n\r\n    console.log('tagProductsState', tagProductsState);\r\n\r\n    console.log('brandParams', params);\r\n\r\n\r\n    return (\r\n        <div className='brandDetailContainer'>\r\n            <div className='brandDetailContainer__heading'>\r\n                <h3>\r\n                    Area Detail\r\n                </h3>\r\n\r\n                {tagDetailState.done && tagDetailData && (Object.keys(tagDetailData).length > 0) && (\r\n                    <>\r\n                        <TagEdit\r\n                            tagEditVisible={tagEditVisible}\r\n                            setTagEditVisible={setTagEditVisible}\r\n                            tagDetailData={tagDetailData}\r\n                            setTagDetailData={setTagDetailData}\r\n                        />\r\n                        <Button\r\n                            onClick={() => setTagEditVisible(true)}\r\n                            type='link'\r\n                            icon={<EditOutlined />}\r\n                        >\r\n                            Edit\r\n                      </Button>\r\n                    </>\r\n                )}\r\n            </div>\r\n            <Skeleton\r\n                paragraph={{ rows: 2 }}\r\n                loading={tagDetailState.isLoading}>\r\n                {tagDetailState.done && tagDetailData && !(Object.keys(tagDetailData).length > 0) && (\r\n                    <Empty description='No Area found' image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n                )}\r\n\r\n                {tagDetailState.done && tagDetailData && (Object.keys(tagDetailData).length > 0) && (\r\n                    <div className='brandDetailContainer__header'>\r\n\r\n                        <div className='brandDetailContainer__header-info'>\r\n                            <h2>\r\n                                {tagDetailData['name']}\r\n                            </h2>\r\n                            {tagDetailData['url'] && (\r\n                                <h3>\r\n                                    URL:\r\n                                    <span>\r\n                                        {tagDetailData['url']}\r\n                                    </span>\r\n\r\n                                </h3>\r\n                            )}\r\n                        </div>\r\n                    </div>\r\n                )}\r\n\r\n            </Skeleton>\r\n\r\n            <div className='brandDetailContainer__heading'>\r\n                <h3>\r\n                    Dealers\r\n                </h3>\r\n            </div>\r\n            <div className='brandDetailContainer__body'>\r\n                {tagProductsState.isLoading && <DataTableSkeleton />}\r\n                {tagProductsState.done && !(tagProductsState.data.length > 0) && (\r\n                    <div style={{\r\n                        marginTop: '100px'\r\n                    }}>\r\n                        <Empty description='No Dealer exists for this area' image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n                    </div>\r\n                )}\r\n\r\n                {tagProductsState.done && tagProductsState.data && tagProductsState.data.length > 0 && (\r\n                    <>\r\n                        <Table\r\n                            style={{\r\n                                paddingTop: '10px',\r\n                                borderRadius: '5px !important',\r\n                                overflow: 'hidden',\r\n                                boxShadow: '0 0.125rem 0.625rem rgba(227, 231, 250, 0.3), 0 0.0625rem 0.125rem rgba(206, 220, 233, 0.4)'\r\n                            }}\r\n                            // expandable={{\r\n                            //     expandedRowRender: record => <p style={{ margin: 0 }}>{record.name}</p>,\r\n                            //     rowExpandable: record => record.name !== 'Not Expandable',\r\n                            //   }}\r\n                            // bordered={true}\r\n                            size='small'\r\n                            // pagination={false}\r\n                            dataSource={tagProductsState.data}\r\n                            tableLayout={'auto'}\r\n                            onHeaderRow={column => {\r\n                                return {\r\n                                    style: {\r\n                                        color: 'red !important'\r\n                                    }\r\n\r\n                                };\r\n                            }}\r\n                        >\r\n                            <Column\r\n                                title=\"\"\r\n                                dataIndex=\"cover\"\r\n                                key=\"id\"\r\n                                width={'80px'}\r\n\r\n                                className='classnameofthecolumn'\r\n\r\n                                render={(cover, record: any) => (\r\n                                    <>\r\n                                        <img\r\n                                            onClick={() => {\r\n                                                history.push(`/admin/product/${record.id}`)\r\n                                            }}\r\n                                            src={cover} alt='cover img' style={{\r\n                                                height: '40px',\r\n                                                width: '40px',\r\n                                                objectFit: \"contain\",\r\n                                                borderRadius: '3px',\r\n                                                cursor: 'pointer'\r\n                                            }} />\r\n\r\n\r\n\r\n\r\n                                    </>\r\n                                )}\r\n                            />\r\n\r\n                            <Column\r\n                                title=\"Name\"\r\n                                dataIndex=\"name\"\r\n                                key=\"id\"\r\n                                className='classnameofthecolumn'\r\n                                render={(text, record: any) => (\r\n                                    <>\r\n                                        <h4\r\n                                            onClick={() => {\r\n                                                history.push(`/admin/product/${record.id}`)\r\n                                            }}\r\n                                            style={{\r\n                                                fontWeight: 400,\r\n                                                color: '#555',\r\n                                                cursor: 'pointer'\r\n\r\n                                            }}>\r\n                                            {text}\r\n                                        </h4>\r\n\r\n\r\n                                    </>\r\n                                )}\r\n\r\n                            />\r\n\r\n                            <Column\r\n                                title=\"Offer Price\"\r\n                                dataIndex=\"offerPrice\"\r\n                                key=\"id\"\r\n                                className='classnameofthecolumn'\r\n\r\n                            />\r\n\r\n\r\n                            <Column\r\n                                title=\"Price\"\r\n                                dataIndex=\"price\"\r\n                                key=\"id\"\r\n                                className='classnameofthecolumn'\r\n\r\n                            />\r\n\r\n\r\n                            <Column\r\n                                title=\"Available\"\r\n                                dataIndex=\"available\"\r\n                                key=\"id\"\r\n                                className='classnameofthecolumn'\r\n\r\n                            />\r\n\r\n\r\n                            <Column\r\n                                title=\"Minimum\"\r\n                                dataIndex=\"minimum\"\r\n                                key=\"id\"\r\n                                className='classnameofthecolumn'\r\n\r\n                            />\r\n\r\n                        </Table>\r\n                    </>\r\n                )}\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NewBrandDetail\r\n","import React from 'react'\r\n\r\n\r\n// import pages\r\nimport { Overview } from '../../pages/overview';\r\nimport { CategoryList, NewCategoryDetail } from '../../pages/category';\r\nimport { ProductBundleDetail, ProductBundleList } from '../../pages/productBundle';\r\nimport { BrandList, AddNewBrand, NewBrandDetail } from '../../pages/brand';\r\nimport { ProductList, NewProductDetail } from '../../pages/product';\r\nimport { TagList, AddNewTag, NewTagDetail } from '../../pages/tag';\r\nimport { CouponList, CouponDetail } from '../../pages/coupon';\r\nimport { CustomerList, CustomerDetail } from '../../pages/customer';\r\nimport { PagesList, AddNewPage } from '../../pages/pages';\r\nimport { AttributeList } from '../../pages/attribute';\r\nimport { OrderList, AddNewOrder, OrderDetail,OrderAnalytics, ConfigOrderStatus } from '../../pages/order';\r\nimport { Component, ManageThemes, Image, Invoice, SiteInfo } from '../../pages/settings';\r\nimport { Delivery } from '../../pages/delivery';\r\nimport Sms from '../../pages/sms';\r\nimport {Email} from '../../pages/email';\r\nimport {NotificationList} from '../../pages/notification';\r\nimport {AdminList, AdminDetail} from '../../pages/admins';\r\nimport {PostList, PostDetail } from '../../pages/post';\r\nimport {StaffList, StaffDetail} from '../../pages/staff';\r\nimport {ExpenseList, ExpenseDetail} from '../../pages/expense';\r\nimport {DealerList, DealerDetail} from '../../pages/dealer';\r\nimport {AreaDetail, AreaList} from '../../pages/dealer/Area';\r\nimport {PostTagList, PostCategoryList, NewPostCategoryDetail, NewPostTagDetail} from '../../pages/post';\r\n\r\n\r\n// import Login from '../../pages/auth/login';\r\n\r\n\r\n// import libraries\r\nimport { Layout } from 'antd';\r\nimport { Switch, Route, Redirect } from 'react-router-dom';\r\n\r\n\r\n\r\nconst { Content } = Layout;\r\n\r\ninterface Props {\r\n\r\n}\r\n\r\nconst ContentComponent = (props: Props) => {\r\n    return (\r\n        <Content\r\n            hasSider={true}\r\n            style={{\r\n                backgroundColor: '#fff',\r\n                paddingTop: '20px'\r\n            }}\r\n        >\r\n            <Switch>\r\n                <Route\r\n                    exact\r\n                    path='/'\r\n                    render={() => <Redirect to='/admin/overview' />}\r\n                />\r\n\r\n                <Route\r\n                    exact\r\n                    path='/admin'\r\n                    render={() => <Redirect to='/admin/overview' />}\r\n                />\r\n\r\n                <Route path='/admin/overview' exact>\r\n                    <Overview />\r\n                </Route>\r\n                <Route path='/admin/category' exact>\r\n                    <CategoryList />\r\n                </Route>\r\n                <Route path='/admin/category/:id' exact>\r\n                    <NewCategoryDetail />\r\n                </Route>\r\n                {/* <Route path='/admin/category/:name' exact>\r\n                    <CategoryDetail />\r\n                </Route> */}\r\n\r\n                {/* CategoryDetail */}\r\n                <Route path='/admin/brand/new' exact>\r\n                    <AddNewBrand />\r\n                </Route>\r\n                <Route path='/admin/brand' exact>\r\n                    <BrandList />\r\n                </Route>\r\n                <Route path='/admin/brand/:id' exact>\r\n                    <NewBrandDetail />\r\n                </Route>\r\n                <Route path='/admin/product' exact>\r\n                    <ProductList />\r\n                </Route>\r\n                <Route path='/admin/product/:id' exact>\r\n                    <NewProductDetail />\r\n                </Route>\r\n\r\n                <Route path='/admin/bundle' exact>\r\n                    <ProductBundleList />\r\n                </Route>\r\n\r\n                <Route path='/admin/bundle/:id' exact>\r\n                    <ProductBundleDetail />\r\n                </Route>\r\n\r\n                <Route path='/admin/coupon' exact>\r\n                    <CouponList />\r\n                </Route>\r\n\r\n\r\n                <Route path='/admin/posts' exact>\r\n                    <PostList />\r\n                </Route>\r\n\r\n             \r\n\r\n        \r\n                <Route path='/admin/posts/tag' exact>\r\n                    <PostTagList />\r\n                </Route>\r\n\r\n                <Route path='/admin/posts/category' exact>\r\n                    <PostCategoryList />\r\n                </Route>\r\n\r\n                <Route path='/admin/posts/:id' exact>\r\n                    <PostDetail />\r\n                </Route>\r\n\r\n                <Route path='/admin/posts/tag/:id' exact>\r\n                    <NewPostTagDetail />\r\n                </Route>\r\n\r\n                <Route path='/admin/posts/category/:id' exact>\r\n                     <NewPostCategoryDetail />\r\n                </Route>\r\n                \r\n                <Route path='/admin/coupon/:id' exact>\r\n                    <CouponDetail />\r\n                </Route>\r\n\r\n                <Route path='/admin/notification' exact>\r\n                    <NotificationList />\r\n                </Route>\r\n\r\n                {/* <Route path='/product/new' exact>\r\n                     <AddNewProduct />\r\n                   </Route> */}\r\n\r\n\r\n                <Route path='/admin/tag' exact>\r\n                    <TagList />\r\n                </Route>\r\n                <Route path='/admin/tag/new' exact>\r\n                    <AddNewTag />\r\n                </Route>\r\n                <Route path='/admin/tag/:id' exact>\r\n                    <NewTagDetail />\r\n                </Route>\r\n                <Route path='/admin/attribute' exact>\r\n                    <AttributeList />\r\n                </Route>\r\n                <Route path='/admin/order' exact>\r\n                    <OrderList />\r\n                </Route>\r\n                <Route path='/admin/order/new' exact>\r\n                    <AddNewOrder />\r\n                </Route>\r\n                <Route path='/admin/order/overview' exact>\r\n                    <OrderAnalytics />\r\n                </Route>\r\n                <Route path='/admin/order/config' exact>\r\n                    <ConfigOrderStatus />\r\n                </Route>\r\n                \r\n\r\n                <Route path='/admin/order/:id' exact>\r\n                    <OrderDetail />\r\n                </Route>\r\n               \r\n                <Route path='/admin/dealer' exact>\r\n                    <DealerList />\r\n                </Route>\r\n              \r\n\r\n                <Route path='/admin/dealer/area' exact>\r\n                    <AreaList />\r\n                </Route>\r\n\r\n                \r\n                <Route path='/admin/dealer/area/:id' exact>\r\n                    <AreaDetail />\r\n                </Route>\r\n\r\n                <Route path='/admin/dealer/:id' exact>\r\n                    <DealerDetail />\r\n                </Route>\r\n          \r\n\r\n                <Route path='/admin/staff' exact>\r\n                    <StaffList />\r\n                </Route>\r\n                <Route path='/admin/staff/:id' exact>\r\n                    <StaffDetail />\r\n                </Route>\r\n\r\n                <Route path='/admin/expense' exact>\r\n                    <ExpenseList />\r\n                </Route>\r\n\r\n                <Route path='/admin/expense/:id' exact>\r\n                    <ExpenseDetail />\r\n                </Route>\r\n\r\n                <Route path='/admin/customer' exact>\r\n                    <CustomerList />\r\n                </Route>\r\n                <Route path='/admin/customer/:id' exact>\r\n                    <CustomerDetail />\r\n                </Route>\r\n                <Route path='/admin/page' exact>\r\n                    <PagesList />\r\n                </Route>\r\n                <Route path='/admin/delivery' exact>\r\n                    <Delivery />\r\n                </Route>\r\n                <Route path='/admin/page/new' exact>\r\n                    <AddNewPage />\r\n                </Route>\r\n                <Route path='/admin/settings/components' exact>\r\n                    <Component />\r\n                </Route>\r\n                <Route path='/admin/settings/image' exact>\r\n                    <Image />\r\n                </Route>\r\n                <Route path='/admin/settings/themes' exact>\r\n                    <ManageThemes />\r\n                </Route>\r\n                <Route path='/admin/settings/invoice' exact>\r\n                    <Invoice />\r\n                </Route>\r\n                <Route path='/admin/settings/siteInfo' exact>\r\n                    <SiteInfo />\r\n                </Route>\r\n                <Route path='/admin/settings/admins' exact>\r\n                    <AdminList />\r\n                </Route>\r\n                <Route path='/admin/settings/admins/:id' exact>\r\n                    <AdminDetail />\r\n                </Route>\r\n                <Route path='/admin/sms' exact>\r\n                    <Sms />\r\n                </Route>\r\n\r\n                <Route path='/admin/email' exact>\r\n                    <Email />\r\n                </Route>\r\n\r\n            </Switch>\r\n        </Content>\r\n    )\r\n}\r\n\r\nexport default ContentComponent\r\n","import Content from \"./Content\";\r\nexport default Content; ","import React from 'react';\n\n// import pages\nimport Login from './pages/auth/login';\n\n// import layouts\nimport Sider from './layout/sider';\nimport Header from './layout/header';\nimport Content from './layout/content';\n// import Footer from './layout/footer';\n\n// import libraries\nimport { Layout } from 'antd';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\n\nconst App = () => {\n  return (\n    <Router>\n      <Switch>\n        <Route path='/admin/login' exact>\n          <Login />\n        </Route>\n      </Switch>\n      <Switch>\n        <Layout style={{ minHeight: '100vh' }}>\n          <Header />\n\n          <Layout className='site-layout'>\n            <Sider />\n            <Content />\n          </Layout>\n          {/* <Footer /> */}\n        </Layout>\n      </Switch>\n    </Router>\n  );\n};\n\nexport default App;\n\n/* \n\n#product \n#order\n#category\n#order\n#customer\n#customer\n*/\n\n/*\n\nfix ===>\n\n// # product add -> category name search dile crash kore\n// # add order -> make delivery zone align as horizontal\n// # double notification -> when creating order \n// # customer detail -> customer er order history hobe\n// # customer list => add orderCount and totalOrderPrice field to show\n# customer List =>  user will be able to sort with them (sort=totalOrderPrice&sortOrder=-1) \n// # order analytics -> add metric=deliveryRegion \n# at the footer of analytic charts -> add a show data button -> on clicked show data as table \n# price price field - make input type number \n# delivery region edit\n# email api implementation\n# check if the tag edit works properly \n# on open product quick epit site crashes \n# product bundle detail -> show images in product bundle detail \n# fix the attach image in bundle \n# amount type will be drowpdown\n# add meta tags autofill in all items \n# add porst/add product => categories scrolbar\n# update all the item quick edit to item edit \n# make order edit functionality to quick order edit\n\n\nfeat ===> \n\n# dealer\n# bundle edit\n# coupon edit\n# post edit\n# post category edit\n# post tag edit (maybe)\n# notification\n# admin roles\n# dynamic order status\n# add dealer code at add order. \n# add coupon code at add order. \n*/\n\n/* \n\n*/\n\n/*\n\nissus ====> \n\nerror => product bundle ---> item not defined. \nerror => Cannot read property 'offer' of undefined. \nerror => coupon cover is coming as array in coupon list.\nerror => update post tag => Cannot read property 'name' of undefined. \nerror => add post category => checkMime is not defined probably because of the image.\n\n*/\n","import { fetch } from \"../utils\";\r\n\r\nconst baseUrl = typeof document === \"undefined\" ? \"http://localhost:7777/api\" : \"/api\";\r\n\r\nconst apiService = ( ) => ( next ) => ( action ) => {\r\n    const result = next( action );\r\n    if ( !action.meta || !action.meta.async ) {\r\n        return result;\r\n    }\r\n\r\n    const { path, method = \"GET\", body } = action.meta;\r\n\r\n    if ( !path ) {\r\n        throw new Error( `'path' not specified for async action ${ action.type }` );\r\n    }\r\n\r\n    const url = `${ baseUrl }${ path }`;\r\n\r\n    return fetch( url, method, body ).then(\r\n        res => handleResponse( res, action, next ),\r\n        err => handleErrors( err, action, next ),\r\n    );\r\n};\r\n\r\nexport default apiService;\r\n\r\nfunction handleErrors( err, action, next ) {\r\n    next( {\r\n        type: `${ action.type }_FAILED`,\r\n        payload: err,\r\n        meta: action.meta,\r\n    } );\r\n\r\n    return Promise.reject( err );\r\n}\r\n\r\nfunction handleResponse( res, action, next ) {\r\n    next( {\r\n        type: `${ action.type }_COMPLETED`,\r\n        payload: res,\r\n        meta: action.meta,\r\n    } );\r\n\r\n    return res;\r\n}\r\n","const REGULAR = [\r\n    \"background: blue\",\r\n    \"color: white\",\r\n].join( \";\" );\r\n\r\nconst SUCCESS = [\r\n    \"background: green\",\r\n    \"color: white\",\r\n].join( \";\" );\r\n\r\nconst STARTED = [\r\n    \"background: darkorange\",\r\n    \"color: white\",\r\n].join( \";\" );\r\n\r\nconst FAILURE = [\r\n    \"background: red\",\r\n    \"color: white\",\r\n].join( \";\" );\r\n\r\nconst createLogger = ( active = true ) => ( store ) => ( next ) => ( action ) => {\r\n    if ( !active ) {\r\n        return next( action );\r\n    }\r\n\r\n    const prevState = store.getState( );\r\n    const result = next( action );\r\n    const nextState = store.getState( );\r\n    logGroupCollapsed( `%c ${ action.type } `, determineStyle( action ) );\r\n    logInfo( \"%cprev state\", \"color: darkorange\", prevState );\r\n    logInfo( \"%caction payload\", \"color: blue\", action.payload );\r\n    logInfo( \"%cnext state\", \"color: darkgreen\", nextState );\r\n    logGroupEnd( );\r\n    return result;\r\n};\r\n\r\nexport default createLogger;\r\n\r\nfunction logGroupCollapsed( ...args ) {\r\n    const logFunction = typeof console.groupCollapsed === \"function\" ? console.groupCollapsed : console.info;\r\n    logFunction( ...args );\r\n}\r\n\r\nfunction logGroupEnd( ...args ) {\r\n    const logFunction = typeof console.groupEnd === \"function\" ? console.groupEnd : console.info;\r\n    logFunction( ...args );\r\n}\r\n\r\nfunction logInfo( ...args ) {\r\n    console.info( ...args );\r\n}\r\n\r\nfunction determineStyle( action ) {\r\n    if ( !action.meta || !action.meta.async ) {\r\n        return REGULAR;\r\n    }\r\n\r\n    if ( action.type.indexOf( \"_COMPLETED\" ) > -1 ) {\r\n        return SUCCESS;\r\n    }\r\n\r\n    if ( action.type.indexOf( \"_FAILED\" ) > -1 ) {\r\n        return FAILURE;\r\n    }\r\n\r\n    return STARTED;\r\n}\r\n","import { createStore, applyMiddleware, combineReducers, compose } from 'redux';\r\nimport { persistStore, persistReducer } from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\nimport * as reducers from './ducks';\r\nimport { apiService } from './middlewares';\r\n\r\nconst rootReducer = combineReducers(reducers);\r\n\r\nconst persistConfig = {\r\n  key: 'shop',\r\n  storage: storage,\r\n  whitelist: ['session'], // which reducer want to store\r\n};\r\n\r\nconst pReducer = persistReducer(persistConfig, rootReducer);\r\n\r\nfunction configureStore(initialState) {\r\n  return createStore(\r\n    pReducer,\r\n    initialState,\r\n    compose(\r\n      applyMiddleware(apiService),\r\n      window.__REDUX_DEVTOOLS_EXTENSION__\r\n        ? window.__REDUX_DEVTOOLS_EXTENSION__()\r\n        : (f) => f\r\n    )\r\n  );\r\n}\r\n\r\nconst store = configureStore({});\r\n\r\nconst persistor = persistStore(store);\r\n\r\nexport { persistor, store };\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider as ReduxProvider } from 'react-redux';\nimport App from './App';\n\n// import redux store\nimport { store } from './state/store';\n\n// import the main files of styles\nimport './styles/_main.scss';\n\n\n// importing react hot loader for hot loading\nimport { AppContainer } from 'react-hot-loader';\n\n\n// Wrap the rendering in a function:\nconst render = () => {\n\tReactDOM.render(\n\t\t<ReduxProvider store={store}>\n\t\t\t<AppContainer>\n\t\t\t\t<App />\n\t\t\t</AppContainer>\n\t\t</ReduxProvider>,\n\t\tdocument.getElementById('root')\n\t);\n};\n\n\n// Render once\nrender();\n\n\n\n// Webpack Hot Module Replacement API\nif (module['hot']) {\n\tmodule['hot'].accept('./App', () => {\n\t\trender();\n\t});\n}\n\n\n"],"sourceRoot":""}