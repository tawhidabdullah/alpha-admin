{"version":3,"sources":["components/Field/Input.tsx","lib/utils/manupulateURL.js","lib/connector.js","lib/converter.js","hooks/useFetch.ts","hooks/useHandleFetch.ts","pages/auth/login/Login.tsx","pages/auth/login/index.ts","pages/overview/Overview.tsx","components/Placeholders/DataTableSkeleton.tsx","components/Empty/Empty.tsx","components/Empty/index.ts","pages/category/CategoryList.tsx","pages/category/CategoryDetail.tsx","components/Field/TextArea.tsx","components/MediaLibrary/MediaLibrary.tsx","components/MediaLibrary/index.ts","pages/category/AddNewCategory.tsx","pages/category/QuickEdit.tsx","pages/brand/AddNewBrand.tsx","pages/brand/QuickEdit.tsx","pages/brand/BrandList.tsx","pages/product/Tags.tsx","pages/product/Brands.tsx","pages/product/Categories.tsx","components/Field/InputSmall.tsx","pages/product/Attributes.tsx","pages/product/Pricing.tsx","pages/product/AddNewProduct.tsx","pages/product/QuickEdit.tsx","pages/product/ProductList.tsx","pages/tag/QuickEdit.tsx","pages/tag/TagList.tsx","pages/tag/AddNewTag.tsx","pages/customer/AddNewCustomer.tsx","pages/customer/QuickEdit.tsx","pages/customer/CustomerList.tsx","pages/pages/PagesList.tsx","pages/pages/AddNewPage.tsx","pages/attribute/QuickEdit.tsx","pages/attribute/AddAttributeValues.tsx","pages/attribute/AttributeList.tsx","pages/order/QuickEdit.tsx","pages/order/OrderList.tsx","pages/order/AddNewOrderProductItem.tsx","pages/order/AddNewOrderSummary.tsx","pages/order/CustomersId.tsx","pages/order/AddProducts.tsx","pages/order/AddNewOrder.tsx","pages/settings/ComponentItem.tsx","pages/settings/AddNewComponent.tsx","pages/settings/ComponentListComponentItem.tsx","pages/settings/AddNewComponentItem.tsx","pages/settings/Component.tsx","pages/settings/AddNewTheme.tsx","pages/settings/ManageThemes.tsx","pages/settings/Image.tsx","pages/settings/Invoice.tsx","pages/settings/AdminSiteInfo.tsx","pages/settings/SiteInfoInvoice.tsx","pages/settings/SiteInfo.tsx","pages/delivery/DeliveryCharge.tsx","pages/delivery/AddNewRegion.tsx","pages/delivery/QuickEdit.tsx","pages/delivery/Delivery.tsx","layout/Sider.tsx","App.tsx","state/ducks/busy/utils.js","state/ducks/busy/reducers.js","state/ducks/busy/index.js","state/ducks/cart/utils.js","state/utils/createReducer.js","state/utils/fetch.js","state/ducks/cart/selectors.js","state/ducks/cart/index.js","state/ducks/cart/reducers.js","state/ducks/cart/types.js","state/ducks/wishList/utils.js","state/ducks/wishList/index.js","state/ducks/wishList/reducers.js","state/ducks/wishList/types.js","state/ducks/checkout/selectors.js","state/ducks/checkout/index.js","state/ducks/checkout/reducers.js","state/ducks/checkout/types.js","state/ducks/checkout/utils.js","state/ducks/search/types.js","state/ducks/search/utils.js","state/ducks/search/index.js","state/ducks/search/reducers.js","state/ducks/product/reducers.js","state/ducks/product/types.js","state/ducks/product/index.js","state/ducks/session/reducers.js","state/ducks/session/types.js","state/ducks/session/index.js","state/ducks/category/reducers.js","state/ducks/category/types.js","state/ducks/category/index.js","state/ducks/cache/reducers.js","state/ducks/cache/types.js","state/ducks/cache/index.js","state/ducks/brand/reducers.js","state/ducks/brand/types.js","state/ducks/brand/index.js","state/ducks/tag/reducers.js","state/ducks/tag/types.js","state/ducks/tag/index.js","state/middlewares/apiService.js","state/middlewares/logger.js","state/store.js","index.tsx"],"names":["Demo","Input","TextArea","required","addonBefore","label","type","value","defaultValue","onChange","disabled","isError","errorString","name","className","Item","validateStatus","help","style","borderRadius","isObjectEmpty","Object","keys","length","manupulateURL","url","urlOptions","params","placeHolders","split","map","currentValue","includes","actualPlaceholderValue","replace","param","slice","indexOf","join","converter","resData","data","formatedData","category","id","_id","key","description","cover","config","thumbnail","subCount","subCategory","children","subCat","title","isNext","page","next","convertedData","product","regularPrice","price","offerPrice","parseInt","unit","cartItems","items","cartItem","medium","quantity","cartKey","updated","status","pricing","tag","brand","customer","firstName","lastName","country","city","email","phone","created","theme","added","components","component","region","pickUpLocation","countryCode","countryName","time","charge","image","labels","alt","caption","original","availableStock","minimumStock","cat","b","tags","img","baseURL","success","inserted","productCount","count","item","billingAddress","total","totalPrice","products","date_created","date","paymentMethod","generalFormat","dataMap","line_items","paymentItems","number","text","src","target","navLinkItems","sliderItems","images","sliderRightItems","servicesItems","accountItems","aboutUsItems","Connector","this","options","format","api","apiMap","server","method","credentials","headers","Headers","body","JSON","stringify","fetch","res","formattedData","error","connector","dataFetchReducer","state","action","isLoading","done","payload","Error","useFetch","dependencies","initialData","initialState","useReducer","dispatch","useEffect","didCancel","a","request","fetchData","useHandleFetch","validationSchema","Yup","shape","username","min","password","initialValues","Login","loginState","handleLoginFetch","handleSubmit","values","actions","console","log","setSubmitting","getisSubmitButtonDisabled","isValid","onSubmit","validateOnBlur","enableReinitialize","handleChange","errors","isSubmitting","touched","setFieldTouched","handleBlur","handleReset","maxWidth","margin","e","onClick","loading","Overview","props","DataTable","speed","width","height","viewBox","backgroundColor","foregroundColor","x","y","rx","ry","cx","cy","r","metadata","github","filename","EmptyComponent","display","justifyContent","alignItems","Empty","PRESENTED_IMAGE_SIMPLE","Column","Table","Search","ColumnGroup","MyTable","setcategoryList","history","useState","visible","setvisible","activeCategoryForEdit","setactiveCategoryForEdit","handleDeleteCategoryFetch","handleDeleteCategory","deleteCategoryRes","message","notification","icon","CheckCircleOutlined","color","newCategoryList","filter","size","dataSource","dataIndex","render","record","objectFit","align","placement","EditOutlined","onConfirm","okText","cancelText","DeleteOutlined","categoryList","withRouter","categoryState","handleCategoryListFetch","isSubCategory","categories","setCategories","addNewCategoryVisible","setAddNewCategoryVisible","enterButton","placeholder","onSearch","handleSearch","PlusOutlined","DataTableSkeleton","marginTop","CategoryDetail","autoplay","rows","Dragger","Upload","TabPane","Tabs","openSuccessNotification","MediaLibrary","setmyImages","isModalOpenForImages","setmyThumbnailImage","isModalOpenForThumbnail","myImages","myThumbnailImage","fileList","setfileList","uploading","setuploading","selectedimages","setselectedImages","activeImageItem","setactiveImageItem","updateMediaLibrary","handleUpdateMediaLibraryFetch","imageListFromLibraryState","handleImageListFromLibraryFetch","handleDeleteImageFromLibraryFetch","localImageList","setLocalImageList","isDoneOk","setisDoneOk","handleDeleteImageFromImageLibrary","deleteImageLibraryItemRes","newImageList","getImageList","imageListRes","handleUpload","formData","FormData","forEach","file","append","reqwest","processData","withCredentials","uploadProps","onRemove","filelist","index","newFileList","splice","beforeUpload","handleUpdateSubmit","captoin","updateImageLibraryItemRes","positionInImageList","updatedItem","assign","updateImageList","openErrorNotification","getisUpdateSubmitButtonDisabled","top","onOk","onCancel","bodyStyle","padding","defaultActiveKey","tab","listType","background","InboxOutlined","ArrowUpOutlined","find","newselectedImages","handleAddToSelectedList","CheckOutlined","Option","Select","AddNewCategory","addCategoryState","handleAddCategoryFetch","isparentCategoryChecked","setisparentcategoryChecked","setisModalOpenForThumbnail","setisModalOpenForImages","setselectedParentId","imagesIds","parent","addCategoryRes","resetForm","onSwitchChange","checked","handleCancel","onChangeSelect","okButtonProps","htmlType","defaultChecked","showSearch","optionFilterProp","filterOption","input","option","toLowerCase","newImages","handleImagesDelete","FileAddOutlined","QuickEdit","updateCategoryState","handleUpdateCategoryFetch","updateCategoryRes","positionInTag","updateCategoryList","AddNewBrand","brandList","setBrandList","addBrandState","handleAddBrandFetch","visibleMedia","setvisibleMedia","addBrandRes","updatebrandState","handleUpdateBrandFetch","updateBrandRes","positionInBrand","updateBrandList","handleDeleteBrandFetch","handleDeleteBrand","deleteBrandRes","newBrandList","brandState","handlebrandListFetch","brands","setBrands","Tags","setTagIds","setoptions","selectedOpions","setselectedOptions","tagState","handleTagListFetch","tagListRes","tagOptions","setTags","mode","selectItems","selectedCategoryIds","selectedcategory","o","Brands","setBrandId","setSelectedBrandId","brandListRes","brandOptions","onFocus","onBlur","val","Checkbox","Group","Categories","setcategoryIds","searchValue","setsearchValue","categoryListRes","borderColor","categoryNames","newOptions","marginLeft","checkable","onSelect","selectedKeys","info","onCheck","checkedKeys","treeData","defaultExpandAll","allowClear","Complete","setAttributeList","attributeList","attribute","suggestedOptions","setsuggesteOptions","attributeLisState","attributeItem","setAttributeITem","updateAttributeList","manupulatedOptions","inputValue","suggestedOption","toUpperCase","InputSmall","Pricing","handleAddPricing","regular","offer","setprice","available","minimum","stock","setStock","handlePriceChange","handleStockChange","Attributes","minHeight","preventDefault","priceItem","model","AddNewProduct","productList","setProductList","addProductState","handleAddProductFetch","categoryids","tagIds","brandId","setPricing","addProductRes","err","i","newPricing","handleDeletePricing","updateProductState","handleUpdateProductFetch","updateProductRes","positionInAttribute","updateProductList","handleDeleteProductFetch","handleDeleteProduct","deleteProductRes","newProductList","productState","handleProductListFetch","setProducts","tagList","setTagList","updateTagState","updateTagRes","updateTagList","CoolInput","handleDeleteTagFetch","handleDeleteTag","deleteTagRes","newtagList","TagList","addTagState","handleAddTagFetch","addTagRes","newTagList","AddNewTag","max","address1","address2","zipCode","customerList","setCustomerList","addCustomerState","handleAddCustomerFetch","selectedCountryValue","setselectedCountryValue","selectedCityValue","setselectedCityValue","countryOptions","setcountryOptions","cityOptions","setcityOptions","countryListState","handleCountryListFetch","cityListState","handleCityListFetch","addCustomerRes","onChangeCity","onChangeCountry","CountryListRes","setCountries","cityListRes","setCities","marginRight","notFoundContent","updateCustomerState","handleUpdateCustomerFetch","updateCustomerRes","handleDeleteCustomerFetch","handleDeleteCustomer","deleteCustomerRes","newCustomerList","customerState","handleCustomerListFetch","customers","setCustomers","AddNewCustomer","lastModified","href","push","AddNewPage","EditableTagGroup","inputVisible","editInputIndex","editInputValue","handleClose","removedTag","setState","showInput","focus","handleInputChange","handleInputConfirm","handleEditInputChange","handleEditInputConfirm","newTags","saveInputRef","saveEditInputRef","editInput","ref","onPressEnter","isLongTag","tagElem","closable","onClose","onDoubleClick","React","Component","AttributeList","AddAttributeValues","setOrderList","orderList","updateOrderState","handleUpdateOrderFetch","addRegionRes","updateRegionList","handleDeleteOrderFetch","handleDeleteRegion","deleteOrderRes","newOrderList","orderState","handleRegionListFetch","regions","setOrders","CartOverLayCartItem","productId","productDetailState","handleProductFetch","setProduct","setIsLoading","getAndSetProduct","handleChangeQuantity","cursor","AddNewOrderSummary","ShopOutlined","AddNewOrderProductItem","setCustomerId","setProductIds","Step","Steps","additionalInfo","steps","content","AddNewOrder","addOrderState","handleOrderFetch","productIds","current","setCurrent","variation","isTrue","UserOutlined","CustomersId","AddProducts","CaretLeftOutlined","CaretRightOutlined","setItemsList","itemsList","componentItem","localComponentItem","setlocalComponentItem","handleComponentItemsChange","updateComponentList","groupName","componentList","setComponentList","addComponentState","handleAddComponentFetch","addComponentRes","handleAddComponentItem","itemComponent","ComponentItem","componentUpdate","boxShadow","SaveOutlined","updateComponentByAddingItem","componentId","destroyOnClose","Panel","Collapse","genExtra","updateComponentByDeleting","event","stopPropagation","genExtraForGroup","setitemVisible","handleDeleteComponent","setComponentId","groupVisible","setgroupVisible","itemVisible","componentState","handleComponentListFetch","handleDeleteComponentFetch","handleUpdateComponentFetch","setComponents","deleteComponentRes","newComponentList","positionInItemsOfComponent","componentIndex","positionInComponents","itemIndex","updatedItems","updateComponentRes","accordion","bordered","expandIconPosition","expandIcon","isActive","rotate","header","extra","ComponentListComponentItem","AddNewComponent","AddNewComponentItem","footer","themeList","setThemeList","addThemeState","handleAddthemeFetch","selectedThemeTypeValue","setselectedThemeTypeValue","loadingThumnail","setLoadingThumbnail","imageUrl","setImageUrl","setname","addThemeRes","path","uploadButton","LoadingOutlined","showUploadList","callback","reader","FileReader","addEventListener","result","readAsDataURL","getBase64","multiple","themeState","handleThemeListFetch","handleActiveThemeFetch","handleDeleteThemeFetch","themes","setThemes","handleActiveTheme","activeThemeRes","handleDeleteTheme","deleteThemeRes","newThemeList","danger","AddNewTheme","Image","Invoice","adminEmail","adminName","UpdateSiteinfo","UpdateSiteSettingsState","handleUpdateSiteSettingsFetch","siteSettingsState","handlSiteSettingsFetch","siteSettingsRes","getSiteSettings","addSiteInfoRes","invoiceTitle","address","additionalText","updateInfovSettingsState","handleUpdateInvoiceSettingsFetch","InvoiceSettingsState","handlSiteInvoiceSettingsFetch","updateInvoiceRes","AdminSiteInfo","SiteInfoInvoice","DeliveryCharge","deliveryChargeItem","setdeliveryChargeList","deliveryChargeList","minimumOrder","deliveryCharge","setdeliveryCharge","handleDeliveryChargeChange","AddNewRegion","regionList","setRegionList","addRegionState","handleRegionFetch","handleAddDeliveryCharge","updateRegionState","handleUpdateRegionFetch","handleDeleteRegioFetch","deleteRegionRes","newRegionList","regionState","setRegions","Sider","Layout","Header","Content","Footer","SubMenu","Menu","collapsed","setcollapsed","collapsible","onCollapse","selectable","PieChartOutlined","to","GoldOutlined","onTitleClick","TagsOutlined","TagOutlined","BranchesOutlined","CarOutlined","ShoppingCartOutlined","TeamOutlined","MailOutlined","FileOutlined","SettingOutlined","App","handleLogoutFetch","handleLogout","logoutRes","borderBottom","borderLeft","level","fontWeight","LogoutOutlined","hasSider","exact","BrandList","OrderList","Delivery","ManageThemes","SiteInfo","textAlign","actionShouldBlock","meta","async","blocking","actionFinished","reducer","utils","productPositionInCart","cart","newCartItem","isSelectedForCheckout","reducerMap","Accept","isomorphicFetch","then","Promise","resolve","reject","response","parseStatus","json","createReducer","tempArrayWithOutOldProduct","productPositionInWishList","wishList","wishlist","ADD","queryPositionInQueryList","queryList","query","types","currentItem","oldQuery","tempArrayWithOutOldQueries","detailsReducer","listReducer","combineReducers","details","list","authReducer","redirectAfterLoginReducer","redirectUrl","isAuthenticated","redirectAfterLogin","cartReducer","baseUrl","document","apiService","handleResponse","handleErrors","rootReducer","reducers","persistConfig","storage","whitelist","pReducer","persistReducer","store","createStore","compose","applyMiddleware","window","__REDUX_DEVTOOLS_EXTENSION__","f","persistStore","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.5e126c7a.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Form, Input } from 'antd';\r\n\r\nconst { TextArea } = Input;\r\n\r\n\r\n\r\ninterface Props {\r\n    label?: string;\r\n    type?: string;\r\n    defaultValue?: string;\r\n    value?: string;\r\n    onChange?: any;\r\n    disabled?: boolean;\r\n    isError?: boolean;\r\n    errorString?: string;\r\n    name?: string;\r\n    addonBefore?: string;\r\n    required?: boolean\r\n}\r\n\r\nconst Demo = ({ required, addonBefore, label, type, defaultValue, value, onChange, disabled, isError, errorString, name }: Props) => {\r\n    return (\r\n        <>\r\n            {label && (\r\n                <h3 className='inputFieldLabel'>\r\n                    {label}\r\n                </h3>\r\n            )}\r\n\r\n            <Form.Item\r\n                // hasFeedback={true}\r\n                validateStatus={isError ? \"error\" : \"\"}\r\n                // hasFeedback validateStatus=\"success\"\r\n                help={errorString}\r\n\r\n            // rules={[{ required: true }]}\r\n            >\r\n\r\n                <Input\r\n                    required={required}\r\n                    type={type}\r\n                    addonBefore={addonBefore}\r\n                    style={{\r\n                        borderRadius: '0'\r\n                    }}\r\n                    name={name}\r\n                    disabled={disabled}\r\n                    value={value}\r\n                    onChange={onChange}\r\n                    className='inputclassName' />\r\n\r\n            </Form.Item>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Demo; ","const isObjectEmpty = value => {\r\n  return !value || !Object.keys(value).length > 0;\r\n};\r\n\r\nconst manupulateURL = (url, urlOptions = {}) => {\r\n  if (isObjectEmpty(urlOptions)) return url;\r\n\r\n  const params = urlOptions.params || {};\r\n  const placeHolders = urlOptions.placeHolders || {};\r\n\r\n\r\n\r\n  return url\r\n    .split('/')\r\n    .map(currentValue => {\r\n      if (currentValue.includes(':') && !isObjectEmpty(placeHolders)) {\r\n        let actualPlaceholderValue = placeHolders[currentValue.replace(':', '')];\r\n        currentValue = actualPlaceholderValue;\r\n      }\r\n\r\n      if (currentValue.includes('?')) {\r\n        currentValue = currentValue\r\n          .split('&')\r\n          .map(currentValue => {\r\n            const param = currentValue.slice(currentValue.indexOf('=') + 1);\r\n            return currentValue.replace(param, params[param] || '');\r\n          })\r\n          .join('&');\r\n      }\r\n      return currentValue;\r\n    })\r\n    .join('/');\r\n};\r\n\r\nexport default manupulateURL;\r\n","import config from '../config.json';\r\nimport apiMap from '../apiMap.json';\r\nimport Converter from './converter.js';\r\n\r\n// import utils\r\nimport { manupulateURL } from './utils';\r\n\r\nlet converter = new Converter();\r\n\r\nclass Connector {\r\n  //TODO\r\n  constructor() {\r\n    this.options = {};\r\n  }\r\n\r\n  /**\r\n   * @method request sends request to server\r\n   * this function determines api url and method from config.json\r\n   * and sends request and converts recieved data to general format\r\n   * @param {String} item\r\n   * @param {String} format\r\n   * @param {Object} data optional\r\n   * @returns {Object}  converted data\r\n   */\r\n\r\n  async request(item, format = 'json', options = {}) {\r\n    let api = apiMap[config.server][item]; //api url & method\r\n\r\n    // configuring options for fetch request\r\n\r\n    this.options = {\r\n      ...this.options,\r\n      method: api.method,\r\n      credentials: 'include',\r\n      headers: new Headers({\r\n        'Content-Type': 'application/json',\r\n        // \"Content-Type\": \"application/x-www-form-urlencoded\",\r\n        ...(options.headers && {\r\n          ...options.headers,\r\n        }),\r\n      }),\r\n      body: api.method !== 'get' ? JSON.stringify(options.body) : null,\r\n    };\r\n\r\n    //*replace variable parts in url with actual data if params exists |or| just return the url\r\n\r\n    const url = manupulateURL(api.url, options.urlOptions);\r\n\r\n    // change the formate to text if the server is wooCommerce\r\n    if (config['server'] === 'wooCommerce') {\r\n      // format = 'text';\r\n    }\r\n\r\n    try {\r\n      let res = await fetch(config.baseURL + url, this.options);\r\n\r\n      if (res.status >= 200 && res.status < 300) {\r\n        let formattedData = await res[format](); //await res.json(), res.text()\r\n        if (formattedData.status === 'error') {\r\n          throw formattedData.error;\r\n        }\r\n\r\n        let convertedData = await converter[item](formattedData); //convert recieved data to app general format\r\n        return convertedData;\r\n      } else {\r\n        let error = await res[format]();\r\n\r\n        throw error;\r\n      }\r\n    } catch (err) {\r\n\r\n      throw err;\r\n      //TODO: breakdown errors\r\n    }\r\n  }\r\n}\r\n\r\nexport default Connector;\r\n","import config from '../config.json';\r\nimport dataMap from '../dataMap.json';\r\n\r\nclass Converter {\r\n\t/**\r\n   * @public\r\n   * @method categoryList convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync categoryList(resData) {\r\n\t\tconst data = resData.data || [];\r\n\r\n\t\tconst formatedData =\r\n\t\t\tdata.length > 0 &&\r\n\t\t\tdata.map((category) => {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tid: category._id || '',\r\n\t\t\t\t\tkey: category._id || '',\r\n\t\t\t\t\tname: category.name && category.name,\r\n\t\t\t\t\tdescription: category.description && category.description,\r\n\t\t\t\t\tcover: category.cover ? `${config['baseURL']}${category.cover.thumbnail}` : null,\r\n\t\t\t\t\tsubCount:\r\n\t\t\t\t\t\tcategory.subCategory.length === 1\r\n\t\t\t\t\t\t\t? category.subCategory[0] && category.subCategory[0].name ? category.subCategory.length : 0\r\n\t\t\t\t\t\t\t: category.subCategory.length,\r\n\t\t\t\t\t...(category.subCategory &&\r\n\t\t\t\t\t\tcategory.subCategory.length > 0 &&\r\n\t\t\t\t\t\tcategory.subCategory[0] &&\r\n\t\t\t\t\t\tcategory.subCategory[0]['name'] && {\r\n\t\t\t\t\t\tchildren: category.subCategory.map((subCat) => {\r\n\t\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\t\tid: subCat._id || '',\r\n\t\t\t\t\t\t\t\tkey: subCat._id,\r\n\t\t\t\t\t\t\t\tname: subCat.name && subCat.name,\r\n\t\t\t\t\t\t\t\tdescription: subCat.description && subCat.description,\r\n\t\t\t\t\t\t\t\tcover: subCat.cover ? `${config['baseURL']}${subCat.cover.thumbnail}` : ''\r\n\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t})\r\n\t\t\t\t};\r\n\t\t\t});\r\n\r\n\t\treturn formatedData;\r\n\t}\r\n\r\n\r\n\t/**\r\n* @public\r\n* @method categorySelectist convert api data from API to general format based on config server\r\n* @param {Object} data response objectc from alpha\r\n* @returns {Object}  converted data\r\n*/\r\n\tasync categorySelectist(resData) {\r\n\t\tconst data = resData.data || [];\r\n\r\n\t\tconst formatedData =\r\n\t\t\tdata.length > 0 &&\r\n\t\t\tdata.map((category) => {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tid: category._id || '',\r\n\t\t\t\t\tkey: category._id || '',\r\n\t\t\t\t\ttitle: category.name && category.name,\r\n\t\t\t\t\t...(category.subCategory &&\r\n\t\t\t\t\t\tcategory.subCategory.length > 0 &&\r\n\t\t\t\t\t\tcategory.subCategory[0] &&\r\n\t\t\t\t\t\tcategory.subCategory[0]['name'] && {\r\n\t\t\t\t\t\tchildren: category.subCategory.map((subCat) => {\r\n\t\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\t\tid: subCat._id || '',\r\n\t\t\t\t\t\t\t\tkey: subCat._id,\r\n\t\t\t\t\t\t\t\ttitle: subCat.name && subCat.name,\r\n\t\t\t\t\t\t\t\tcover: subCat.cover ? `${config['baseURL']}${subCat.cover.thumbnail ? subCat.cover.thumbnail : \"\"}` : ''\r\n\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t})\r\n\t\t\t\t};\r\n\t\t\t});\r\n\r\n\t\treturn formatedData;\r\n\t}\r\n\r\n\r\n\r\n\r\n\t/**\r\n   * @public\r\n   * @method categoryProducts convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync categoryProducts(resData) {\r\n\t\tconst data = resData.data || [];\r\n\t\tconst isNext = resData.page.next;\r\n\r\n\t\tconst convertedData =\r\n\t\t\tdata.length > 0 &&\r\n\t\t\tdata.map((product) => {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tid: product._id || '',\r\n\t\t\t\t\tname: product.name && product.name,\r\n\t\t\t\t\tdescription: product.description && product.description,\r\n\t\t\t\t\tcover: `${config['baseURL']}${(product.cover && product.cover['thumbnail']) || ''}`,\r\n\t\t\t\t\tregularPrice: product.price && product.price['regular'],\r\n\t\t\t\t\tofferPrice: product.price && product.price['offer'],\r\n\t\t\t\t\tprice:\r\n\t\t\t\t\t\tparseInt(product.price['offer']) > parseInt(product.price['regular'])\r\n\t\t\t\t\t\t\t? product.price['offer']\r\n\t\t\t\t\t\t\t: product.price['regular'],\r\n\t\t\t\t\turl: product.url,\r\n\t\t\t\t\tunit: product.unit\r\n\t\t\t\t};\r\n\t\t\t});\r\n\r\n\t\treturn {\r\n\t\t\tdata: convertedData,\r\n\t\t\tisNext: isNext\r\n\t\t};\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method getCart convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync getCart(resData) {\r\n\t\tconst cartItems = resData.items || [];\r\n\t\tconst convertedData =\r\n\t\t\tcartItems.length > 0 &&\r\n\t\t\tcartItems.map((cartItem) => {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tid: cartItem._id || '',\r\n\t\t\t\t\tname: cartItem.name && cartItem.name,\r\n\t\t\t\t\tcover: `${config['baseURL']}${cartItem.cover.medium}`,\r\n\t\t\t\t\tregularPrice: cartItem.price && cartItem.price['regular'],\r\n\t\t\t\t\tofferPrice: cartItem.price && cartItem.price['offer'],\r\n\t\t\t\t\tquantity: cartItem.quantity,\r\n\t\t\t\t\turl: cartItem.url,\r\n\t\t\t\t\tcartKey: cartItem.cartKey\r\n\t\t\t\t};\r\n\t\t\t});\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method addtoCart convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync addtoCart(resData) {\r\n\t\tlet data = false;\r\n\r\n\t\tif (resData['inserted']) {\r\n\t\t\tdata = {\r\n\t\t\t\tid: resData['inserted']._id || '',\r\n\t\t\t\tname: resData['inserted'].name && resData['inserted'].name,\r\n\t\t\t\tcover: `${config['baseURL']}${resData['inserted'].cover.medium}`,\r\n\t\t\t\tregularPrice: resData['inserted'].price && resData['inserted'].price['regular'],\r\n\t\t\t\tofferPrice: resData['inserted'].price && resData['inserted'].price['offer'],\r\n\t\t\t\tquantity: resData['inserted'].quantity,\r\n\t\t\t\turl: resData['inserted'].url,\r\n\t\t\t\tcartKey: resData['inserted'].cartKey\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tconst convertedData = data;\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method removeFromCart convert api data from API to general format based on config server\r\n   * @param {Object} resData response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync removeFromCart(resData) {\r\n\t\tlet convertedData = false;\r\n\t\tif (resData) {\r\n\t\t\tconvertedData = true;\r\n\t\t}\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method updateCartItem convert api data from API to general format based on config server\r\n   * @param {Object} resData response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync updateCartItem(resData) {\r\n\t\tlet convertedData = false;\r\n\t\tif (resData['updated']) {\r\n\t\t\tconvertedData = {\r\n\t\t\t\tquantity: resData.updated['quantity']\r\n\t\t\t};\r\n\t\t}\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method clearCart convert api data from API to general format based on config server\r\n   * @param {Object} resData response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync clearCart(data) {\r\n\t\tif (data && data['msg']) {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\t\treturn data;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method getWishlist convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync getWishlist(resData) {\r\n\t\t// const cartItems = resData.items || [];\r\n\t\tconst convertedData = resData;\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method addWishlist convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync addWishlist(resData) {\r\n\t\tif (resData && resData['msg'] === 'wishlist updated') {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method removeFromWishlist convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync removeFromWishlist(resData) {\r\n\t\tif (resData && resData['msg'] === 'wishlist updated') {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method removeAllWishlist convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync removeAllWishlist(resData) {\r\n\t\tif (resData && resData['msg'] === 'wishlist updated') {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method tagProducts convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync tagProducts(resData) {\r\n\t\tconst data = resData.data || [];\r\n\t\tconst isNext = resData.page.next;\r\n\r\n\t\tconst convertedData =\r\n\t\t\tdata.length > 0 &&\r\n\t\t\tdata.map((product) => {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tid: product._id || '',\r\n\t\t\t\t\tname: product.name && product.name,\r\n\t\t\t\t\tdescription: product.description && product.description,\r\n\t\t\t\t\tcover: `${config['baseURL']}${(product.cover && product.cover['thumbnail']) || ''}`,\r\n\t\t\t\t\tregularPrice: product.price && product.price['regular'],\r\n\t\t\t\t\tofferPrice: product.price && product.price['offer'],\r\n\t\t\t\t\tprice:\r\n\t\t\t\t\t\tparseInt(product.price['offer']) > parseInt(product.price['regular'])\r\n\t\t\t\t\t\t\t? product.price['offer']\r\n\t\t\t\t\t\t\t: product.price['regular'],\r\n\t\t\t\t\turl: product.url,\r\n\t\t\t\t\tunit: product.unit\r\n\t\t\t\t};\r\n\t\t\t});\r\n\r\n\t\treturn {\r\n\t\t\tdata: convertedData,\r\n\t\t\tisNext: isNext\r\n\t\t};\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method brandProducts convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync brandProducts(resData) {\r\n\t\tconst data = resData.data || [];\r\n\t\tconst isNext = resData.page.next;\r\n\r\n\t\tconst convertedData =\r\n\t\t\tdata.length > 0 &&\r\n\t\t\tdata.map((product) => {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tid: product._id || '',\r\n\t\t\t\t\tname: product.name && product.name,\r\n\t\t\t\t\tdescription: product.description && product.description,\r\n\t\t\t\t\tcover: `${config['baseURL']}${(product.cover && product.cover['thumbnail']) || ''}`,\r\n\t\t\t\t\tregularPrice: product.price && product.price['regular'],\r\n\t\t\t\t\tofferPrice: product.price && product.price['offer'],\r\n\t\t\t\t\tprice:\r\n\t\t\t\t\t\tparseInt(product.price['offer']) > parseInt(product.price['regular'])\r\n\t\t\t\t\t\t\t? product.price['offer']\r\n\t\t\t\t\t\t\t: product.price['regular'],\r\n\t\t\t\t\turl: product.url,\r\n\t\t\t\t\tunit: product.unit\r\n\t\t\t\t};\r\n\t\t\t});\r\n\r\n\t\treturn {\r\n\t\t\tdata: convertedData,\r\n\t\t\tisNext: isNext\r\n\t\t};\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method productSearch convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync productSearch(resData) {\r\n\t\tconst data = resData.data || [];\r\n\t\tconst isNext = resData.page.next;\r\n\r\n\t\tconst convertedData =\r\n\t\t\t(data.length > 0 &&\r\n\t\t\t\tdata.map((product) => {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tid: product._id || '',\r\n\t\t\t\t\t\tname: product.name && product.name,\r\n\t\t\t\t\t\tdescription: product.description && product.description,\r\n\t\t\t\t\t\tcover: `${config['baseURL']}${product.cover.thumbnail}`,\r\n\t\t\t\t\t\tregularPrice: product.price && product.price['regular'],\r\n\t\t\t\t\t\tofferPrice: product.price && product.price['offer'],\r\n\t\t\t\t\t\turl: product.url,\r\n\t\t\t\t\t\tunit: product.unit\r\n\t\t\t\t\t};\r\n\t\t\t\t})) ||\r\n\t\t\t[];\r\n\r\n\t\treturn {\r\n\t\t\tdata: convertedData,\r\n\t\t\tisNext\r\n\t\t};\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method productList convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync productList(resData) {\r\n\t\tconst data = resData.data || [];\r\n\t\tconst isNext = resData.page.next;\r\n\r\n\t\tlet convertedData =\r\n\t\t\tdata.length > 0 &&\r\n\t\t\tdata.map((product) => {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tid: product._id || '',\r\n\t\t\t\t\tname: product.name && product.name,\r\n\t\t\t\t\tdescription: product.description && product.description,\r\n\t\t\t\t\tcover: `${config['baseURL']}${(product.cover && product.cover['thumbnail']) || ''}`,\r\n\t\t\t\t\tregularPrice: product.price && product.price['regular'],\r\n\t\t\t\t\tofferPrice: product.price && product.price['offer'],\r\n\t\t\t\t\turl: product.url,\r\n\t\t\t\t\tunit: product.unit,\r\n\t\t\t\t\tcategory: product.category,\r\n\t\t\t\t\tpricing: product.pricing\r\n\t\t\t\t};\r\n\t\t\t});\r\n\r\n\t\t// convertedData = {\r\n\t\t// \tdata: convertedData,\r\n\t\t// \tisNext\r\n\t\t// };\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method tagList convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync tagList(resData) {\r\n\t\tconst data = resData.data || [];\r\n\r\n\t\tconst convertedData =\r\n\t\t\tdata.length > 0 &&\r\n\t\t\tdata.map((tag) => {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tid: tag._id || '',\r\n\t\t\t\t\tkey: tag._id || '',\r\n\t\t\t\t\tname: tag.name && tag.name,\r\n\t\t\t\t\tdescription: tag.description && tag.description\r\n\t\t\t\t};\r\n\t\t\t});\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method brandList convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync brandList(resData) {\r\n\t\tconst data = resData.data || [];\r\n\r\n\t\tconst convertedData =\r\n\t\t\tdata.length > 0 &&\r\n\t\t\tdata.map((brand) => {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tid: brand._id || '',\r\n\t\t\t\t\tkey: brand._id || '',\r\n\t\t\t\t\tname: brand.name && brand.name,\r\n\t\t\t\t\tdescription: brand.description && brand.description,\r\n\t\t\t\t\tcover: `${config['baseURL']}${brand.cover ? brand.cover.thumbnail : ''}`\r\n\t\t\t\t};\r\n\t\t\t});\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method customerList convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync customerList(resData) {\r\n\t\tconst data = resData.data || [];\r\n\r\n\t\tconst convertedData =\r\n\t\t\tdata.length > 0 &&\r\n\t\t\tdata.map((customer) => {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tid: customer._id || '',\r\n\t\t\t\t\tkey: customer._id || '',\r\n\t\t\t\t\tfirstName: customer.firstName || '',\r\n\t\t\t\t\tlastName: customer.lastName || '',\r\n\t\t\t\t\tcountry: customer.country || '',\r\n\t\t\t\t\tcity: customer.city || '',\r\n\t\t\t\t\temail: customer.email || '',\r\n\t\t\t\t\tphone: customer.phone || '',\r\n\t\t\t\t\tcreated: customer.created || ''\r\n\t\t\t\t};\r\n\t\t\t});\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\r\n\t/**\r\n* @public\r\n* @method themeList convert api data from API to general format based on config server\r\n* @param {Object} data response objectc from alpha\r\n* @returns {Object}  converted data\r\n*/\r\n\tasync themeList(resData) {\r\n\t\tconst data = resData || [];\r\n\r\n\t\tconst convertedData =\r\n\t\t\tdata.length > 0 &&\r\n\t\t\tdata.map((theme) => {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tid: theme._id || '',\r\n\t\t\t\t\tkey: theme._id || '',\r\n\t\t\t\t\tname: theme.name || '',\r\n\t\t\t\t\tadded: theme.added || '',\r\n\t\t\t\t};\r\n\t\t\t});\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\r\n\t/**\r\n   * @public\r\n   * @method componentList convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync componentList(resData) {\r\n\t\tconst components = resData.components || {};\r\n\r\n\t\tif (components && components.length > 0) {\r\n\t\t\tconst convertedData =\r\n\t\t\t\tcomponents.length > 0 &&\r\n\t\t\t\tcomponents.map((component) => {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tid: component._id || '',\r\n\t\t\t\t\t\tkey: component._id || '',\r\n\t\t\t\t\t\tname: component.name || '',\r\n\t\t\t\t\t\titems: component.items || []\r\n\t\t\t\t\t};\r\n\t\t\t\t});\r\n\r\n\t\t\treturn convertedData;\r\n\t\t}\r\n\r\n\t\treturn [];\r\n\t}\r\n\r\n\r\n\r\n\r\n\r\n\t/**\r\n   * @public\r\n   * @method regionList convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync regionList(data) {\r\n\t\tconst convertedData =\r\n\t\t\tdata.length > 0 &&\r\n\t\t\tdata.map((region) => {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tid: region._id || '',\r\n\t\t\t\t\tkey: region._id || '',\r\n\t\t\t\t\tname: region.name || '',\r\n\t\t\t\t\tpickUpLocation: region.pickUpLocation || '',\r\n\t\t\t\t\tcountry: region.country || '',\r\n\t\t\t\t\tcountryCode: region.countryCode || '',\r\n\t\t\t\t\tcountryName: region.countryName || '',\r\n\t\t\t\t\tcity: region.city || '',\r\n\t\t\t\t\ttime: region.time || '',\r\n\t\t\t\t\tcharge: region.charge || {}\r\n\t\t\t\t};\r\n\t\t\t});\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method attributeList convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync attributeList(data) {\r\n\t\tconst convertedData = Object.keys(data).length > 0 && data;\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method ImageListFromLibrary convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync ImageListFromLibrary(resData) {\r\n\t\tconst data = resData.data || [];\r\n\r\n\t\tconst convertedData =\r\n\t\t\tdata.length > 0 &&\r\n\t\t\tdata.map((image) => {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tid: image._id || '',\r\n\t\t\t\t\tname: image.name && image.name,\r\n\t\t\t\t\tcover: `${config['baseURL']}${image.thumbnail}`,\r\n\t\t\t\t\tadded: image.added,\r\n\t\t\t\t\ttitle: image.title,\r\n\t\t\t\t\tlabels: image.labels,\r\n\t\t\t\t\talt: image.alt,\r\n\t\t\t\t\tcaption: image.caption\r\n\t\t\t\t};\r\n\t\t\t});\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method countryList convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync countryList(resData) {\r\n\t\tconst data = resData || [];\r\n\r\n\t\tconst convertedData =\r\n\t\t\tdata.length > 0 &&\r\n\t\t\tdata.map((country) => {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tid: country._id || '',\r\n\t\t\t\t\tname: country.name && country.name\r\n\t\t\t\t};\r\n\t\t\t});\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method getDeliveryCharge convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync getDeliveryCharge(data) {\r\n\t\tconst convertedData = data;\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method cityList convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync cityList(resData) {\r\n\t\tconst data = resData || [];\r\n\r\n\t\tconst convertedData =\r\n\t\t\tdata.length > 0 &&\r\n\t\t\tdata.map((city) => {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tid: city._id || '',\r\n\t\t\t\t\tname: city.name && city.name\r\n\t\t\t\t};\r\n\t\t\t});\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method forAnalytics convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync forAnalytics(resData) {\r\n\t\treturn resData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method productDetail convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\r\n\tasync productDetail(data) {\r\n\t\tconst convertedData =\r\n\t\t\t(Object.keys(data).length > 0 && {\r\n\t\t\t\tid: data._id || data.id || '',\r\n\t\t\t\tname: data.name || '',\r\n\t\t\t\tdescription: data.description.replace(/<[^>]+>/g, '') || '',\r\n\t\t\t\tregularPrice: data.price && data.price['regular'],\r\n\t\t\t\tofferPrice: data.price && data.price['offer'],\r\n\t\t\t\turl: data.url,\r\n\t\t\t\tcover: `${config['baseURL']}${data.cover.original}`,\r\n\t\t\t\tavailableStock: data.availableStock,\r\n\t\t\t\tminimumStock: data.minimumStock,\r\n\t\t\t\tunit: data.unit,\r\n\t\t\t\tcategory:\r\n\t\t\t\t\t(data.category &&\r\n\t\t\t\t\t\tdata.category.length > 0 &&\r\n\t\t\t\t\t\tdata.category.map((cat) => {\r\n\t\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\t\tid: cat._id,\r\n\t\t\t\t\t\t\t\tname: cat.name\r\n\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t})) ||\r\n\t\t\t\t\tdata.category,\r\n\t\t\t\tbrand:\r\n\t\t\t\t\t(data.brand &&\r\n\t\t\t\t\t\tdata.brand.length > 0 &&\r\n\t\t\t\t\t\tdata.brand.map((b) => {\r\n\t\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\t\tid: b._id,\r\n\t\t\t\t\t\t\t\tname: b.name\r\n\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t})) ||\r\n\t\t\t\t\tdata.brand,\r\n\t\t\t\ttags:\r\n\t\t\t\t\t(data.tags &&\r\n\t\t\t\t\t\tdata.tags.length > 0 &&\r\n\t\t\t\t\t\tdata.tags.map((tag) => {\r\n\t\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\t\tid: tag._id,\r\n\t\t\t\t\t\t\t\tname: tag.name\r\n\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t})) ||\r\n\t\t\t\t\tdata.tags,\r\n\r\n\t\t\t\timage:\r\n\t\t\t\t\t(data.image &&\r\n\t\t\t\t\t\tdata.image.length > 0 &&\r\n\t\t\t\t\t\tdata.image.map((img) => `${config.baseURL}${img.medium}`)) ||\r\n\t\t\t\t\t[]\r\n\t\t\t}) ||\r\n\t\t\t{};\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method productDetailById convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync productDetailById(data) {\r\n\t\tconst convertedData =\r\n\t\t\t(Object.keys(data).length > 0 && {\r\n\t\t\t\tid: data._id || data.id || '',\r\n\t\t\t\tname: data.name || '',\r\n\t\t\t\tdescription: data.description.replace(/<[^>]+>/g, '') || '',\r\n\t\t\t\tregularPrice: data.price && data.price['regular'],\r\n\t\t\t\tofferPrice: data.price && data.price['offer'],\r\n\t\t\t\turl: data.url,\r\n\t\t\t\tcover: `${config['baseURL']}${data.cover.thumbnail && data.cover.thumbnail}`,\r\n\t\t\t\tunit: data.unit,\r\n\t\t\t\tcategory:\r\n\t\t\t\t\t(data.category &&\r\n\t\t\t\t\t\tdata.category.length > 0 &&\r\n\t\t\t\t\t\tdata.category.map((cat) => {\r\n\t\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\t\tid: cat._id,\r\n\t\t\t\t\t\t\t\tname: cat.name\r\n\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t})) ||\r\n\t\t\t\t\tdata.category,\r\n\t\t\t\tbrand:\r\n\t\t\t\t\t(data.brand &&\r\n\t\t\t\t\t\tdata.brand.length > 0 &&\r\n\t\t\t\t\t\tdata.brand.map((b) => {\r\n\t\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\t\tid: b._id,\r\n\t\t\t\t\t\t\t\tname: b.name\r\n\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t})) ||\r\n\t\t\t\t\tdata.brand,\r\n\t\t\t\ttags:\r\n\t\t\t\t\t(data.tags &&\r\n\t\t\t\t\t\tdata.tags.length > 0 &&\r\n\t\t\t\t\t\tdata.tags.map((tag) => {\r\n\t\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\t\tid: tag._id,\r\n\t\t\t\t\t\t\t\tname: tag.name\r\n\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t})) ||\r\n\t\t\t\t\tdata.tags,\r\n\t\t\t\tavailableStock: data.availableStock,\r\n\t\t\t\timage:\r\n\t\t\t\t\t(data.image &&\r\n\t\t\t\t\t\tdata.image.length > 0 &&\r\n\t\t\t\t\t\tdata.image.map((img) => `${config.baseURL}${img.medium}`)) ||\r\n\t\t\t\t\t[]\r\n\t\t\t}) ||\r\n\t\t\t{};\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method updateProduct convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync updateProduct(data) {\r\n\t\tconst convertedData = data;\r\n\r\n\t\tif (data && data.updated) {\r\n\t\t\treturn {\r\n\t\t\t\t...data.updated,\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\r\n\t/**\r\n* @public\r\n* @method updateComponent convert api data from API to general format based on config server\r\n* @param {Object} data response objectc from wc\r\n* @returns {Object}  converted data\r\n*/\r\n\tasync updateComponent(data) {\r\n\t\tconst convertedData = data;\r\n\r\n\t\tif (data && data.updated) {\r\n\t\t\treturn {\r\n\t\t\t\t...data.updated,\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\r\n\t/**\r\n   * @public\r\n   * @method updateImageFromLibrary convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync updateImageFromLibrary(data) {\r\n\t\tconst convertedData = data;\r\n\r\n\t\tif (data && data.updated) {\r\n\t\t\treturn {\r\n\t\t\t\t...data.updated,\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method updateTag convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync updateTag(data) {\r\n\t\tconst convertedData = data;\r\n\r\n\t\tif (data && data.updated) {\r\n\t\t\treturn {\r\n\t\t\t\t...data.updated,\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method updateBrand convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync updateBrand(data) {\r\n\t\tconst convertedData = data;\r\n\r\n\t\tif (data && data.updated) {\r\n\t\t\treturn {\r\n\t\t\t\t...data.updated,\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method updateCategory convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync updateCategory(data) {\r\n\t\tconst convertedData = data;\r\n\r\n\t\tif (data && data.updated) {\r\n\t\t\treturn {\r\n\t\t\t\t...data.updated,\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method updateCustomer convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync updateCustomer(data) {\r\n\t\tconst convertedData = data;\r\n\r\n\t\tif (data && data.updated) {\r\n\t\t\treturn {\r\n\t\t\t\t...data.updated,\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method updateRegion convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync updateRegion(data) {\r\n\t\tconst convertedData = data;\r\n\r\n\t\tif (data && data.updated) {\r\n\t\t\treturn {\r\n\t\t\t\t...data.updated,\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method deleteProduct convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync deleteProduct(data) {\r\n\t\tconst convertedData = data;\r\n\t\tif (data && data.success) {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method deleteImageFromLibrary convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync deleteImageFromLibrary(data) {\r\n\t\tconst convertedData = data;\r\n\t\tif (data && data.success) {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method addTag convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync addTag(data) {\r\n\t\tconst convertedData = data;\r\n\t\tif (data && data.inserted) {\r\n\t\t\treturn {\r\n\t\t\t\t...data.inserted[0],\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method addCategory convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync addCategory(data) {\r\n\t\tconst convertedData = data;\r\n\t\tif (data && data.inserted) {\r\n\t\t\treturn {\r\n\t\t\t\t...data.inserted[0],\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method addProduct convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync addProduct(data) {\r\n\t\tconst convertedData = data;\r\n\t\tif (data && data.inserted) {\r\n\t\t\treturn {\r\n\t\t\t\t...data.inserted[0],\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\r\n\t/**\r\n* @public\r\n* @method addTheme convert api data from API to general format based on config server\r\n* @param {Object} data response objectc from wc\r\n* @returns {Object}  converted data\r\n*/\r\n\tasync addTheme(data) {\r\n\t\tconst convertedData = data;\r\n\t\tif (data && data.inserted) {\r\n\t\t\treturn {\r\n\t\t\t\t...data.inserted[0],\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\r\n\t/**\r\n   * @public\r\n   * @method addBrand convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync addBrand(data) {\r\n\t\tconst convertedData = data;\r\n\t\tif (data && data.inserted) {\r\n\t\t\treturn {\r\n\t\t\t\t...data.inserted[0],\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\t/**\r\n   * @public\r\n   * @method addComponent convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync addComponent(data) {\r\n\t\tconst convertedData = data;\r\n\t\tif (data && data.inserted) {\r\n\t\t\treturn {\r\n\t\t\t\t...data.inserted[0],\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\r\n\r\n\r\n\t/**\r\n   * @public\r\n   * @method addCustomer convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync addCustomer(data) {\r\n\t\tconst convertedData = data;\r\n\t\tif (data && data.inserted) {\r\n\t\t\treturn {\r\n\t\t\t\t...data.inserted[0],\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method addRegion convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync addRegion(data) {\r\n\t\tconst convertedData = data;\r\n\t\tif (data && data.inserted) {\r\n\t\t\treturn {\r\n\t\t\t\t...data.inserted[0],\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method deleteTag convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync deleteTag(data) {\r\n\t\tconst convertedData = data;\r\n\t\tif (data && data.success) {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n   * @public\r\n   * @method logout convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync logout(data) {\r\n\t\tconst convertedData = data;\r\n\t\tif (data && data.success) {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\r\n\t/**\r\n* @public\r\n* @method activeTheme convert api data from API to general format based on config server\r\n* @param {Object} data response objectc from wc\r\n* @returns {Object}  converted data\r\n*/\r\n\tasync activeTheme(data) {\r\n\t\tconst convertedData = data;\r\n\t\tif (data && data.success) {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method deletetheme convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync deletetheme(data) {\r\n\t\tconst convertedData = data;\r\n\t\tif (data && data.success) {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\r\n\t/**\r\n   * @public\r\n   * @method deleteCustomer convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync deleteCustomer(data) {\r\n\t\tconst convertedData = data;\r\n\t\tif (data && data.success) {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\r\n\t/**\r\n* @public\r\n* @method deleteComponent convert api data from API to general format based on config server\r\n* @param {Object} data response objectc from wc\r\n* @returns {Object}  converted data\r\n*/\r\n\tasync deleteComponent(data) {\r\n\t\tconst convertedData = data;\r\n\t\tif (data && data.success) {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\r\n\t/**\r\n   * @public\r\n   * @method deleteBrand convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync deleteBrand(data) {\r\n\t\tconst convertedData = data;\r\n\t\tif (data && data.success) {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method deleteCategory convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync deleteCategory(data) {\r\n\t\tconst convertedData = data;\r\n\t\tif (data && data.success) {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method deleteRegion convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync deleteRegion(data) {\r\n\t\tconst convertedData = data;\r\n\t\tif (data && data.success) {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n   * @public\r\n   * @method siteSettings convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync siteSettings(resData) {\r\n\t\tconst convertedData = resData;\r\n\r\n\t\tif (resData.data) {\r\n\t\t\treturn {\r\n\t\t\t\t...resData.data\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\r\n\t/**\r\n* @public\r\n* @method updateSiteSettings convert api data from API to general format based on config server\r\n* @param {Object} data response objectc from wc\r\n* @returns {Object}  converted data\r\n*/\r\n\tasync updateSiteSettings(data) {\r\n\r\n\t\tif (data['updated']) {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn data;\r\n\t}\r\n\r\n\t/**\r\n* @public\r\n* @method updateInvoiceSettings convert api data from API to general format based on config server\r\n* @param {Object} data response objectc from wc\r\n* @returns {Object}  converted data\r\n*/\r\n\tasync updateInvoiceSettings(data) {\r\n\r\n\t\tif (data['updated']) {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn data;\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n   * @public\r\n   * @method invoiceSettingsDetail convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync invoiceSettingsDetail(resData) {\r\n\t\tconst convertedData = resData;\r\n\r\n\t\tif (resData.data) {\r\n\t\t\treturn {\r\n\t\t\t\t...resData.data\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\t/**\r\n   * @public\r\n   * @method categoryDetail convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync categoryDetail(data) {\r\n\t\tconst convertedData = {\r\n\t\t\tid: data.id || data._id || '',\r\n\t\t\tname: data.name && data.name,\r\n\t\t\tdescription: data.description && data.description,\r\n\t\t\tproductCount: data.count || data.productCount,\r\n\t\t\tsubCategory:\r\n\t\t\t\tdata.subCategory.length > 0 && data.subCategory[0] && data.subCategory[0]['name']\r\n\t\t\t\t\t? data.subCategory.map((subCat) => {\r\n\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\tid: subCat._id || '',\r\n\t\t\t\t\t\t\tname: subCat.name && subCat.name,\r\n\t\t\t\t\t\t\tdescription: subCat.description && subCat.description,\r\n\t\t\t\t\t\t\tcover: subCat.cover ? `${config['baseURL']}${subCat.cover.medium}` : ''\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t})\r\n\t\t\t\t\t: [],\r\n\t\t\timage:\r\n\t\t\t\t(data.image && data.image.length > 0 && data.image.map((img) => `${config.baseURL}${img.medium}`)) || []\r\n\t\t};\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\t/**\r\n   * @public\r\n   * @method createOrder convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync createOrder(data) {\r\n\t\t//map props\r\n\r\n\t\tconst formatedData = {\r\n\t\t\t...data\r\n\t\t};\r\n\r\n\t\treturn formatedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method signup convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync signup(data) {\r\n\t\treturn {\r\n\t\t\tstatus: 'ok'\r\n\t\t};\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method signin convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync signin(data) {\r\n\t\tif (data['msg']) {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method login convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync login(data) {\r\n\t\tif (data['msg']) {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method addImageToLibrary convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync addImageToLibrary(data) {\r\n\t\treturn data;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method getCurrentUserData convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync getCurrentCustomerData(data) {\r\n\t\t//map props\r\n\t\t// let generalFormat = dataMap[config['server']]['getCurrentUserData']; //get genereal format from dataMap\r\n\r\n\t\tconst formatedData = {\r\n\t\t\t...data\r\n\t\t};\r\n\r\n\t\treturn formatedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method currentCustomerData convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync currentCustomerData(data) {\r\n\t\t//map props\r\n\t\t// let generalFormat = dataMap[config['server']]['currentCustomerData']; //get genereal format from dataMap\r\n\r\n\t\tconst convertedData = {\r\n\t\t\t...data\r\n\t\t};\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method updateCurrentCustomerData convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync updateCurrentCustomerData(data) {\r\n\t\t//map props\r\n\t\t// let generalFormat = dataMap[config['server']]['updateCurrentCustomerData']; //get genereal format from dataMap\r\n\r\n\t\tconst convertedData = {\r\n\t\t\tstatus: 'ok'\r\n\t\t};\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method changePassword convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync changePassword(data) {\r\n\t\tif (data['success']) {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn data;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method getCurrentUserOrders convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync getCurrentUserOrders(resData) {\r\n\t\tconst data = resData.data || [];\r\n\t\tconst isNext = resData.page.next;\r\n\r\n\t\tlet convertedData =\r\n\t\t\t(data.length > 0 &&\r\n\t\t\t\tdata.map((item) => {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tid: item.id || item._id,\r\n\t\t\t\t\t\tbillingAddress: item.billingAddress,\r\n\t\t\t\t\t\tstatus: item.status,\r\n\t\t\t\t\t\ttotal: item.totalPrice,\r\n\t\t\t\t\t\tproducts: item.products,\r\n\t\t\t\t\t\tdate_created: item.date,\r\n\t\t\t\t\t\tpaymentMethod: item['payment']['paymentMethod']\r\n\t\t\t\t\t};\r\n\t\t\t\t})) ||\r\n\t\t\t[];\r\n\r\n\t\tconvertedData = {\r\n\t\t\tdata: convertedData,\r\n\t\t\tisNext\r\n\t\t};\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method currentUserOrders convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync currentUserOrders(data) {\r\n\t\t//map props\r\n\t\tlet generalFormat = dataMap[config['server']]['currentUserOrders']; //get genereal format from dataMap\r\n\r\n\t\tconst convertedData =\r\n\t\t\t(data.length > 0 &&\r\n\t\t\t\tdata.map((item) => {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\t...generalFormat,\r\n\t\t\t\t\t\tid: item.id,\r\n\t\t\t\t\t\tstatus: item.status,\r\n\t\t\t\t\t\ttotal: item.total,\r\n\t\t\t\t\t\tline_items: item.line_items,\r\n\t\t\t\t\t\tdate_created: item.date_created\r\n\t\t\t\t\t};\r\n\t\t\t\t})) ||\r\n\t\t\t[];\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method payment convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\r\n\tasync payment(data) {\r\n\t\tconst paymentItems = data.items;\r\n\t\tif (!paymentItems.length > 0) {\r\n\t\t\treturn paymentItems;\r\n\t\t}\r\n\r\n\t\tconst items = paymentItems.map((item) => {\r\n\t\t\treturn {\r\n\t\t\t\tname: item.name || '',\r\n\t\t\t\tnumber: item.text || ''\r\n\t\t\t};\r\n\t\t});\r\n\t\treturn items;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method welcome convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync welcome(data) {\r\n\t\treturn {\r\n\t\t\ttext: data.text\r\n\t\t};\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method logo convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync logo(data) {\r\n\t\tconst src = data.image && data.image.length > 0 ? `${config['baseURL']}${data.image[0]['original']}` : '';\r\n\t\treturn {\r\n\t\t\tsrc,\r\n\t\t\ttarget: data.target\r\n\t\t};\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method hotline convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync hotline(data) {\r\n\t\treturn {\r\n\t\t\ttext: data.text\r\n\t\t};\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method navLinks convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync navLinks(data) {\r\n\t\tconst navLinkItems = data.items;\r\n\t\tif (!navLinkItems.length > 0) {\r\n\t\t\treturn [];\r\n\t\t}\r\n\r\n\t\tconst items = navLinkItems.map((item) => {\r\n\t\t\treturn {\r\n\t\t\t\ttext: item.name || item.text,\r\n\t\t\t\ttarget: item.target\r\n\t\t\t};\r\n\t\t});\r\n\r\n\t\treturn items;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method slider convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync slider(data) {\r\n\t\tconst sliderItems = data.items;\r\n\t\tif (!sliderItems.length > 0) {\r\n\t\t\treturn sliderItems;\r\n\t\t}\r\n\r\n\t\tconst images = sliderItems.map((item) => {\r\n\t\t\treturn {\r\n\t\t\t\ttarget: item.target,\r\n\t\t\t\tsrc: `${config['baseURL']}${item.image[0]['medium']}`\r\n\t\t\t};\r\n\t\t});\r\n\t\treturn images;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method sliderRight convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync sliderRight(data) {\r\n\t\tconst sliderRightItems = data.items;\r\n\t\tif (!sliderRightItems.length > 0) {\r\n\t\t\treturn sliderRightItems;\r\n\t\t}\r\n\r\n\t\tconst images = sliderRightItems.map((item) => {\r\n\t\t\treturn {\r\n\t\t\t\ttarget: item.target,\r\n\t\t\t\tsrc: `${config['baseURL']}${item.image[0]['medium']}`\r\n\t\t\t};\r\n\t\t});\r\n\t\treturn images;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method address convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync address(data) {\r\n\t\treturn {\r\n\t\t\tname: data.name,\r\n\t\t\ttext: data.text\r\n\t\t};\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method Links convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync Links(data) {\r\n\t\tconst servicesItems = data.items;\r\n\t\tif (!servicesItems.length > 0) {\r\n\t\t\treturn servicesItems;\r\n\t\t}\r\n\r\n\t\tconst items = servicesItems.map((item) => {\r\n\t\t\treturn {\r\n\t\t\t\ttarget: item.target,\r\n\t\t\t\tname: item.name || item.text\r\n\t\t\t};\r\n\t\t});\r\n\t\treturn items;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method Account convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync Account(data) {\r\n\t\tconst accountItems = data.items;\r\n\t\tif (!accountItems.length > 0) {\r\n\t\t\treturn accountItems;\r\n\t\t}\r\n\r\n\t\tconst items = accountItems.map((item) => {\r\n\t\t\treturn {\r\n\t\t\t\ttarget: item.target,\r\n\t\t\t\tname: item.name || item.text\r\n\t\t\t};\r\n\t\t});\r\n\t\treturn items;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method 'About Us' convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync 'About Us'(data) {\r\n\t\tconst aboutUsItems = data.items;\r\n\t\tif (!aboutUsItems.length > 0) {\r\n\t\t\treturn aboutUsItems;\r\n\t\t}\r\n\r\n\t\tconst items = aboutUsItems.map((item) => {\r\n\t\t\treturn {\r\n\t\t\t\ttarget: item.target,\r\n\t\t\t\tname: item.name || item.text\r\n\t\t\t};\r\n\t\t});\r\n\t\treturn items;\r\n\t}\r\n}\r\n\r\nexport default Converter;\r\n","import { useEffect, useReducer } from 'react';\r\nimport Connector from '../lib/connector.js';\r\n\r\ntype TInitialData = any;\r\ntype Tdependecies = any[] | [];\r\ntype TItem = string;\r\ntype IFormat = string | undefined;\r\n\r\ntype Actions = {\r\n  type: string;\r\n  payload?: any;\r\n};\r\n\r\ninterface IState {\r\n  readonly isLoading: boolean;\r\n  readonly error: object;\r\n  readonly data: TInitialData;\r\n  readonly done: boolean;\r\n}\r\n\r\nconst connector = new Connector();\r\n\r\nconst dataFetchReducer = (state: IState, action: Actions) => {\r\n  switch (action.type) {\r\n    case 'FETCH_INIT':\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n        error: {\r\n          isError: false,\r\n          error: {},\r\n        },\r\n        done: false,\r\n      };\r\n    case 'FETCH_SUCCESS':\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        data: action.payload,\r\n        done: true,\r\n      };\r\n    case 'FETCH_FAILURE':\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        error: {\r\n          isError: true,\r\n          error: action.payload,\r\n          done: true,\r\n        },\r\n      };\r\n    default:\r\n      throw new Error();\r\n  }\r\n};\r\n\r\nconst useFetch = (\r\n  dependencies: Tdependecies = [],\r\n  initialData: TInitialData,\r\n  item: TItem,\r\n  options?: any,\r\n  format?: IFormat\r\n): IState => {\r\n  const initialState: IState = {\r\n    isLoading: false,\r\n    error: {\r\n      isError: false,\r\n      error: {},\r\n    },\r\n    data: initialData,\r\n    done: false,\r\n  };\r\n  const [state, dispatch] = useReducer(dataFetchReducer, initialState);\r\n\r\n  useEffect(() => {\r\n    let didCancel = false;\r\n    const fetchData = async () => {\r\n      dispatch({ type: 'FETCH_INIT' });\r\n      try {\r\n        // @ts-ignore\r\n        let data = await connector.request(item, format, options);\r\n        if (!didCancel) {\r\n          dispatch({ type: 'FETCH_SUCCESS', payload: data });\r\n        }\r\n      } catch (error) {\r\n        if (!didCancel) {\r\n          dispatch({ type: 'FETCH_FAILURE', payload: error });\r\n        }\r\n      }\r\n    };\r\n    fetchData();\r\n    return () => {\r\n      didCancel = true;\r\n    };\r\n  }, dependencies);\r\n\r\n  return state;\r\n};\r\n\r\nexport default useFetch;\r\n","import { useReducer } from 'react';\r\nimport Connector from '../lib/connector.js';\r\n\r\ntype TInitialData = any;\r\ntype TItem = string;\r\n\r\ntype Actions = {\r\n  type: string;\r\n  payload?: any;\r\n};\r\n\r\ninterface IState {\r\n  readonly isLoading: boolean;\r\n  readonly error: object;\r\n  readonly data: TInitialData;\r\n  readonly done: boolean;\r\n}\r\n\r\nconst connector = new Connector();\r\n\r\nconst dataFetchReducer = (state: IState, action: Actions) => {\r\n  switch (action.type) {\r\n    case 'FETCH_INIT':\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n        error: {\r\n          isError: false,\r\n          error: {},\r\n        },\r\n        done: false,\r\n      };\r\n    case 'FETCH_SUCCESS':\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        data: action.payload,\r\n        done: true,\r\n      };\r\n    case 'FETCH_FAILURE':\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        error: {\r\n          isError: true,\r\n          error: action.payload,\r\n        },\r\n        done: true,\r\n      };\r\n    default:\r\n      throw new Error();\r\n  }\r\n};\r\n\r\nconst useHandleFetch = (\r\n  initialData: TInitialData,\r\n  item: TItem\r\n): [IState, (values: any) => void] => {\r\n  const initialState: IState = {\r\n    isLoading: false,\r\n    error: {\r\n      isError: false,\r\n      error: {},\r\n    },\r\n    data: initialData,\r\n    done: false,\r\n  };\r\n\r\n  const [state, dispatch] = useReducer(dataFetchReducer, initialState);\r\n\r\n  const handlePost = async (options: any) => {\r\n    dispatch({ type: 'FETCH_INIT' });\r\n\r\n    try {\r\n      // @ts-ignore\r\n      let data = await connector.request(item, 'json', options);\r\n      dispatch({ type: 'FETCH_SUCCESS', payload: data });\r\n      return data;\r\n    } catch (error) {\r\n      dispatch({ type: 'FETCH_FAILURE', payload: error });\r\n      return initialData;\r\n    }\r\n  };\r\n\r\n  return [state, handlePost];\r\n};\r\n\r\nexport default useHandleFetch;\r\n","import React, { useState } from 'react';\r\nimport { Button } from 'antd';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n// import components\r\nimport Input from '../../../components/Field/Input';\r\nimport TextArea from '../../../components/Field/TextArea';\r\nimport { useHandleFetch } from '../../../hooks';\r\n\r\nconst validationSchema = Yup.object().shape({\r\n\tusername: Yup.string()\r\n\t\t.label('Username')\r\n\t\t.required('Username is required')\r\n\t\t.min(3, 'Username must have at least 3 characters'),\r\n\r\n\tpassword: Yup.string().label('Password').required('Password is required'),\r\n});\r\n\r\nconst initialValues = {\r\n\tusername: '',\r\n\tpassword: '',\r\n};\r\n\r\ninterface Props {\r\n\r\n}\r\n\r\nconst QuickEdit = ({ }: Props) => {\r\n\tconst [loginState, handleLoginFetch] = useHandleFetch({}, 'login');\r\n\r\n\tconst handleSubmit = async (values: any, actions: any) => {\r\n\t\tconsole.log('fuckLOgin')\r\n\t\tconst updateCategoryRes = await handleLoginFetch({\r\n\t\t\tbody: {\r\n\t\t\t\tusername: values.username,\r\n\t\t\t\tpassword: values.password,\r\n\t\t\t},\r\n\t\t});\r\n\r\n\t\tactions.setSubmitting(false);\r\n\t};\r\n\r\n\r\n\r\n\r\n\tconst getisSubmitButtonDisabled = (values, isValid) => {\r\n\t\tif (!values.username || !values.password || !isValid) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\treturn (\r\n\t\t<Formik\r\n\t\t\tonSubmit={(values, actions) => handleSubmit(values, actions)}\r\n\t\t\tvalidationSchema={validationSchema}\r\n\t\t\tvalidateOnBlur={false}\r\n\t\t\tenableReinitialize={true}\r\n\t\t\tinitialValues={\r\n\t\t\t\t{ ...initialValues }\r\n\t\t\t}\r\n\t\t>\r\n\t\t\t{({\r\n\t\t\t\thandleChange,\r\n\t\t\t\tvalues,\r\n\t\t\t\thandleSubmit,\r\n\t\t\t\terrors,\r\n\t\t\t\tisValid,\r\n\t\t\t\tisSubmitting,\r\n\t\t\t\ttouched,\r\n\t\t\t\thandleBlur,\r\n\t\t\t\tsetFieldTouched,\r\n\t\t\t\thandleReset,\r\n\t\t\t}) => (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\tmaxWidth: '400px',\r\n\t\t\t\t\t\t\tmargin: '20px'\r\n\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\tlabel='Username'\r\n\t\t\t\t\t\t\t\tvalue={values.username}\r\n\t\t\t\t\t\t\t\tname='username'\r\n\t\t\t\t\t\t\t\tisError={(touched.username && errors.username) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && loginState.error['error']['username'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.username && errors.username) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && loginState.error['error']['username'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('username');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\tlabel='Password'\r\n\t\t\t\t\t\t\t\tvalue={values.password}\r\n\t\t\t\t\t\t\t\tname='password'\r\n\t\t\t\t\t\t\t\tisError={(touched.password && errors.password) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && loginState.error['error']['password'])}\r\n\t\t\t\t\t\t\t\terrorString={(touched.password && errors.password) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && loginState.error['error']['password'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('password');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\ttype='primary'\r\n\t\t\t\t\t\t\t\tonClick={(e: any) => handleSubmit(e)}\r\n\t\t\t\t\t\t\t\tdisabled={getisSubmitButtonDisabled(values, isValid)}\r\n\t\t\t\t\t\t\t\tloading={isSubmitting}\r\n\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t// marginTop: '20px'\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\tLogin\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</>\r\n\t\t\t\t)}\r\n\t\t</Formik>\r\n\t);\r\n};\r\n\r\n\r\nexport default QuickEdit;\r\n","import Login from './Login';\r\nexport default Login;\r\n","import React from 'react';\r\nimport Login from '../auth/login';\r\n\r\ninterface Props {}\r\n\r\nconst Overview = (props: Props) => {\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<Login />\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Overview;\r\n","import React from 'react';\r\nimport ContentLoader from 'react-content-loader';\r\n\r\nconst DataTable = (props: any) => (\r\n\t<ContentLoader\r\n\t\tspeed={0.5}\r\n\t\twidth={1300}\r\n\t\theight={400}\r\n\t\tviewBox='0 0 1300 400'\r\n\t\tbackgroundColor='#f3f3f3'\r\n\t\tforegroundColor='#ecebeb'\r\n\t\t{...props}\r\n\t>\r\n\t\t<rect x='27' y='139' rx='4' ry='4' width='20' height='20' />\r\n\t\t<rect x='67' y='140' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='188' y='141' rx='10' ry='10' width='169' height='19' />\r\n\t\t<rect x='402' y='140' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='523' y='141' rx='10' ry='10' width='169' height='19' />\r\n\t\t<rect x='731' y='139' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='852' y='138' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='1424' y='137' rx='10' ry='10' width='68' height='19' />\r\n\t\t<rect x='26' y='196' rx='4' ry='4' width='20' height='20' />\r\n\t\t<rect x='66' y='197' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='187' y='198' rx='10' ry='10' width='169' height='19' />\r\n\t\t<rect x='401' y='197' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='522' y='198' rx='10' ry='10' width='169' height='19' />\r\n\t\t<rect x='730' y='196' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='851' y='195' rx='10' ry='10' width='85' height='19' />\r\n\t\t<circle cx='1456' cy='203' r='12' />\r\n\t\t<rect x='26' y='258' rx='4' ry='4' width='20' height='20' />\r\n\t\t<rect x='66' y='259' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='187' y='260' rx='10' ry='10' width='169' height='19' />\r\n\t\t<rect x='401' y='259' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='522' y='260' rx='10' ry='10' width='169' height='19' />\r\n\t\t<rect x='730' y='258' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='851' y='257' rx='10' ry='10' width='85' height='19' />\r\n\t\t<circle cx='1456' cy='265' r='12' />\r\n\t\t<rect x='26' y='316' rx='4' ry='4' width='20' height='20' />\r\n\t\t<rect x='66' y='317' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='187' y='318' rx='10' ry='10' width='169' height='19' />\r\n\t\t<rect x='401' y='317' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='522' y='318' rx='10' ry='10' width='169' height='19' />\r\n\t\t<rect x='730' y='316' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='851' y='315' rx='10' ry='10' width='85' height='19' />\r\n\t\t<circle cx='1456' cy='323' r='12' />\r\n\t\t<rect x='26' y='379' rx='4' ry='4' width='20' height='20' />\r\n\t\t<rect x='66' y='380' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='187' y='381' rx='10' ry='10' width='169' height='19' />\r\n\t\t<rect x='401' y='380' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='522' y='381' rx='10' ry='10' width='169' height='19' />\r\n\t\t<rect x='730' y='379' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='851' y='378' rx='10' ry='10' width='85' height='19' />\r\n\t\t<circle cx='1456' cy='386' r='12' />\r\n\t\t<rect x='978' y='138' rx='10' ry='10' width='169' height='19' />\r\n\t\t<rect x='977' y='195' rx='10' ry='10' width='169' height='19' />\r\n\t\t<rect x='977' y='257' rx='10' ry='10' width='169' height='19' />\r\n\t\t<rect x='977' y='315' rx='10' ry='10' width='169' height='19' />\r\n\t\t<rect x='977' y='378' rx='10' ry='10' width='169' height='19' />\r\n\t\t<rect x='1183' y='139' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='1182' y='196' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='1182' y='258' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='1182' y='316' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='1182' y='379' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='1305' y='137' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='1304' y='194' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='1304' y='256' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='1304' y='314' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='1304' y='377' rx='10' ry='10' width='85' height='19' />\r\n\t\t<circle cx='37' cy='97' r='11' />\r\n\t\t<rect x='26' y='23' rx='5' ry='5' width='153' height='30' />\r\n\t\t<circle cx='1316' cy='88' r='11' />\r\n\t\t<rect x='1337' y='94' rx='0' ry='0' width='134' height='3' />\r\n\t\t<circle cx='77' cy='96' r='11' />\r\n\t</ContentLoader>\r\n);\r\n\r\nDataTable.metadata = {\r\n\tname: 'Mohd Arif Un',\r\n\tgithub: 'arif-un',\r\n\tdescription: 'Data Table skeleton',\r\n\tfilename: 'DataTable'\r\n};\r\n\r\nexport default DataTable;\r\n","import React from 'react'\r\nimport { Empty } from 'antd';\r\n\r\n\r\ninterface Props {\r\n    title?: string;\r\n    height?: number\r\n}\r\n\r\nconst EmptyComponent = ({\r\n    title = 'No Data found',\r\n    height = 300\r\n}: Props) => {\r\n    return (\r\n        <div style={{\r\n            height: height,\r\n            display: 'flex',\r\n            justifyContent: 'center',\r\n            alignItems: 'center'\r\n        }}>\r\n            <Empty description={title} image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EmptyComponent\r\n","import Empty from \"./Empty\";\r\nexport default Empty; ","import React, {useState, useEffect} from 'react';\r\nimport {withRouter} from 'react-router-dom';\r\nimport { Table, notification,  Space, Tag,Button, Input,Tooltip, Popconfirm  } from 'antd';\r\nimport { PlusOutlined, EditOutlined, DeleteOutlined,CheckCircleOutlined } from '@ant-design/icons';\r\n\r\nimport {AddNewCategory,QuickEdit} from \"../category\"\r\n\r\n/// import hooks\r\nimport { useFetch, useHandleFetch } from \"../../hooks\";\r\n\r\n// import components\r\nimport { DataTableSkeleton } from \"../../components/Placeholders\";\r\nimport Empty from \"../../components/Empty\";\r\n\r\nconst { Column, ColumnGroup } = Table;\r\nconst { Search } = Input;\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t  message: message || 'Tag Created',\r\n\t  description: '',\r\n\t  icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n  };\r\n\r\n\r\n  const openErrorNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t  message: message || 'Something Went Wrong',\r\n\t  description: '',\r\n\t  icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n  };\r\n\r\n\r\n\r\n\r\n\r\ninterface myTableProps {\r\n  data: any; \r\n  setcategoryList?:any; \r\n  history?: any; \r\n} \r\n\r\n\r\nconst MyTable = ({data, setcategoryList, history}: myTableProps) => {\r\n    const [visible,setvisible] = useState(false);   \r\n    const [activeCategoryForEdit,setactiveCategoryForEdit] = useState(false); \r\n    const [deleteCategoryState, handleDeleteCategoryFetch] = useHandleFetch({}, 'deleteCategory');\r\n\r\n      console.log('activeCategoryForEdit',activeCategoryForEdit); \r\n\r\n\r\n      const handleDeleteCategory = async (id) => {\r\n        const deleteCategoryRes = await handleDeleteCategoryFetch({\r\n          urlOptions: {\r\n            placeHolders: {\r\n              id,\r\n            }\r\n            }\r\n          });\r\n\r\n          \t  // @ts-ignore\r\n\t\t  if(deleteCategoryRes && deleteCategoryRes.status === 'ok'){\r\n\t\t\t  openSuccessNotification('Deleted Category'); \r\n\t\t\t  const newCategoryList =  data.filter(item => item.id !== id);\r\n\t\t\t  setcategoryList(newCategoryList); \r\n\t\t  }\r\n      }\r\n      \r\n\r\n    return (\r\n        <>\r\n        <Table \r\n        // expandable={{\r\n        //     expandedRowRender: record => <p style={{ margin: 0 }}>{record.name}</p>,\r\n        //     rowExpandable: record => record.name !== 'Not Expandable',\r\n        //   }}\r\n        // bordered={true}\r\n        size='small'\r\n        // pagination={false}\r\n        dataSource={data}\r\n        >\r\n            <Column \r\n          title=\"\"\r\n           dataIndex=\"cover\"\r\n            key=\"id\" \r\n            // width={'100px'}\r\n            \r\n           className='classnameofthecolumn'\r\n\r\n            render={(cover,record: any) => (\r\n                <>\r\n                <img src={cover} \r\n                // onClick={() => history.push(`/category/${record.name}`)}\r\n                alt='cover img' \r\n                style={{\r\n                    height: '40px',\r\n                    width: '40px',\r\n                    objectFit: \"contain\",\r\n                    borderRadius:'3px'\r\n                }} />\r\n                </>\r\n              )}\r\n            />\r\n          <Column\r\n           title=\"Name\" \r\n           dataIndex=\"name\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n         \r\n            />\r\n\r\n\r\n<Column\r\n           title=\"Desctription\" \r\n           dataIndex=\"desctription\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n         \r\n            />\r\n\r\n\r\n<Column\r\n           title=\"Sub Cateogory\" \r\n           dataIndex=\"subCount\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n         \r\n            />\r\n          {/* <Column \r\n          \r\n          className='classnameofthecolumn'\r\n\r\n          title=\"Product\" dataIndex=\"product\" key=\"product\" /> */}\r\n\r\n          {/* <Column \r\n          \r\n          className='classnameofthecolumn'\r\n\r\n          title=\"Sub Category\" dataIndex=\"subCategory\" key=\"subCategory\" /> */}\r\n        \r\n        {/* <Column\r\n          title=\"Tags\"\r\n          dataIndex=\"tags\"\r\n          key=\"tags\"\r\n          render={tags => (\r\n            <>\r\n              {tags.map((tag : any) => (\r\n                <Tag color=\"blue\" key={tag}>\r\n                  {tag}\r\n                </Tag>\r\n              ))}\r\n            </>\r\n          )}\r\n        /> */}\r\n        <Column\r\n        \r\n        className='classnameofthecolumn'\r\n          title=\"\"\r\n          key=\"action\"\r\n          align='right'\r\n          render={(text, record : any) => (\r\n            <Space size=\"middle\">\r\n            \r\n               <Tooltip placement=\"top\" title='Quick Edit Category'>\r\n              <span className='iconSize' onClick={() => {\r\n                setvisible(true)\r\n                setactiveCategoryForEdit(record); \r\n              }}> \r\n              <EditOutlined />\r\n            \r\n              </span>\r\n               </Tooltip>\r\n\r\n\r\n\r\n               <Popconfirm \r\n               \r\n               onConfirm={() => handleDeleteCategory(record.id)}\r\n               title=\"Are you sure？\" okText=\"Yes\" cancelText=\"No\">\r\n           \r\n\t\t   <span \r\n             className='iconSize iconSize-danger'\r\n             > \r\n             <DeleteOutlined/>\r\n            </span>\r\n       \r\n           </Popconfirm>\r\n\r\n\r\n       \r\n             \r\n            </Space>\r\n          )}\r\n        />\r\n      </Table>\r\n\r\n    \r\n\r\n    {activeCategoryForEdit &&   <QuickEdit \r\n    setcategoryList={setcategoryList}\r\n    categoryList={data}\r\n    setvisible={setvisible}\r\n    visible={visible}\r\n    category={activeCategoryForEdit}/>}\r\n    \r\n    \r\n    </>\r\n    )\r\n}\r\n\r\n\r\ninterface Props {\r\n    history: any; \r\n}\r\n\r\nconst CategoryList = ({history}: Props) => {\r\n\r\n\r\n  \r\n\r\n  const [categoryState, handleCategoryListFetch] = useHandleFetch({}, 'categoryList');\r\n  const [categoryList,setcategoryList] = useState([]); \r\n\r\n  useEffect(()=>{\r\n   const setCategories = async () => {\r\n     const categories = await handleCategoryListFetch({\r\n      urlOptions: {\r\n        params: {\r\n          isSubCategory: true,\r\n        },\r\n      },\r\n     }); \r\n     // @ts-ignore\r\n     setcategoryList(categories); \r\n   }\r\n   setCategories(); \r\n  },[])\r\n\r\n\r\n  \r\n  const [addNewCategoryVisible,setAddNewCategoryVisible] = useState(false);   \r\n\r\n  const handleOkAddNewCategory = (e: any) => {\r\n    setAddNewCategoryVisible(false);\r\n  };\r\n\r\n  const handleCancelAddNewCategory = (e: any) => {\r\n    setAddNewCategoryVisible(false);\r\n  };\r\n\r\n  console.log('categoryState',categoryState)\r\n\r\n\r\n\r\n  \r\n  \r\n  const handleSearch = (value) => {\r\n    if(categoryState.data.length > 0 ){\r\n      const newCategoryList = categoryState.data.filter(item => item.name.includes(value)); \r\n      setcategoryList(newCategoryList); \r\n    }\r\n     \r\n  }\r\n\r\n\r\n\r\n\treturn (\r\n\t\t<>\r\n    {/* <h2 className='containerPageTitle'>\r\n      Categories\r\n    </h2> */}\r\n    <div className='categoryListContainer'>\r\n            <div className='categoryListContainer__header'>\r\n           \r\n\r\n          <div className='categoryListContainer__header-searchBar'>\r\n          <h2 className='categoryListContainer__header-title'>\r\n            Categories\r\n            </h2>\r\n\r\n\r\n          <Search\r\n            enterButton={false}\r\n            className='searchbarClassName'\r\n          placeholder=\"search categories..\"\r\n          onSearch={value => handleSearch(value)}\r\n        />\r\n          </div>\r\n            <Button\r\n          // type=\"primary\"\r\n          className='btnPrimaryClassNameoutline'\r\n          icon={<PlusOutlined />}\r\n          onClick={() => setAddNewCategoryVisible(true)}\r\n        >\r\n        Add New\r\n            \r\n            </Button>\r\n            </div>\r\n\r\n            <div className='categoryListContainer__afterHeader'>\r\n            {/* <Search\r\n      placeholder=\"search categories..\"\r\n      size=\"large\"\r\n      onSearch={value => console.log(value)}\r\n      style={{ width: 300 }}\r\n    /> */}\r\n            </div>\r\n\r\n     \r\n\t\t\t\r\n\t\t\t<div className='categoryListContainer__categoryList'>\r\n        {categoryState.done && categoryList.length > 0 && <MyTable \r\n        history={history}\r\n        setcategoryList={setcategoryList}\r\n        data={categoryList} />}\r\n        {categoryState.isLoading && <DataTableSkeleton />}\r\n\r\n        {categoryState.done && !(categoryList.length > 0) && (\r\n\t\t\t<div style={{\r\n\t\t\t\tmarginTop: '50px'\r\n\t\t\t}}>\r\n\t\t\t\t<Empty title='No Category found'   />\r\n\t\t\t</div>\r\n\t\t)}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\r\n\r\n{categoryState.done && \r\n    <AddNewCategory \r\n          addNewCategoryVisible={addNewCategoryVisible} \r\n          setAddNewCategoryVisible={setAddNewCategoryVisible}\r\n          categoryList={categoryState.data}\r\n          setcategoryList={setcategoryList}\r\n          \r\n           />}\r\n\r\n      \r\n\r\n        \r\n    </>\r\n\t);\r\n};\r\n\r\nexport default withRouter(CategoryList);\r\n","import React from 'react';\r\nimport { Carousel } from 'antd';\r\n\r\ninterface Props {}\r\n\r\nconst CategoryDetail = (props: Props) => {\r\n\treturn (\r\n\t\t<div className='categoryDetailContainer'>\r\n\t\t\t<div className='categoryDetailContainer__item'>\r\n\t\t\t\t<div className='categoryDetailContainer__item-carousel'>\r\n\t\t\t\t\t<Carousel autoplay>\r\n\t\t\t\t\t\t<div className='categoryDetailContainer__item-carousel-item'>\r\n\t\t\t\t\t\t\t<img\r\n\t\t\t\t\t\t\t\talt='category img'\r\n\t\t\t\t\t\t\t\tsrc='https://images-na.ssl-images-amazon.com/images/I/41Leu3gBUFL.jpg'\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<h3>2</h3>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<h3>3</h3>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<h3>4</h3>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</Carousel>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\r\n\t\t\t<div className='categoryDetailContainer__item' />\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default CategoryDetail;\r\n","import React from 'react';\r\nimport { Form, Input } from 'antd';\r\n\r\nconst { TextArea } = Input;\r\n\r\n\r\n\r\ninterface Props {\r\n    label: string;\r\n    type?: string;\r\n    defaultValue?:string;\r\n    value?: string; \r\n    onChange?: any; \r\n    disabled?: boolean; \r\n    isError?: boolean; \r\n    errorString?: string; \r\n    name?:string;\r\n}\r\n\r\nconst Demo = ({ label, type, defaultValue, value, onChange, disabled, isError, errorString,  name}: Props) => {\r\n    return (\r\n        <>\r\n            <h3 className='inputFieldLabel'>\r\n                {label}\r\n            </h3>\r\n            <Form.Item\r\n            validateStatus={isError ? \"error\" : \"\"}\r\n            help={errorString}\r\n            // rules={[{ required: true }]}\r\n                >\r\n                  <TextArea\r\n                      disabled={disabled}\r\n                      onChange={onChange}\r\n                      value={value}\r\n                      name={name}\r\n                    className='inputclassName'\r\n                     rows={4} /> \r\n               \r\n            </Form.Item>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Demo; ","import React, { useState, useEffect } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport Moment from 'react-moment';\r\n// import third party ui lib\r\nimport { Upload, Button, Modal, Tabs, message, notification, Popconfirm } from 'antd';\r\nimport reqwest from 'reqwest';\r\n\r\n\r\n\r\nimport {\r\n\tInboxOutlined,\r\n\tCheckOutlined,\r\n\tArrowUpOutlined,\r\n\tCheckCircleOutlined\r\n\r\n} from '@ant-design/icons';\r\n\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\n\r\n// import hooks\r\nimport { useHandleFetch } from \"../../hooks\";\r\n\r\nconst { Dragger } = Upload;\r\nconst { TabPane } = Tabs;\r\n\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t\tmessage: message || 'Category Updated',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t\tmessage: message || 'Something Went Wrong',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\r\ninterface Props {\r\n\tvisible: boolean;\r\n\tsetvisible: (isVisible: any) => void;\r\n\tsetmyImages?: any;\r\n\tsetmyThumbnailImage?: any;\r\n\tisModalOpenForThumbnail?: boolean;\r\n\tisModalOpenForImages?: boolean;\r\n\tmyImages?: any;\r\n\tmyThumbnailImage?: any\r\n}\r\n\r\nconst MediaLibrary = ({\r\n\tvisible,\r\n\tsetvisible,\r\n\tsetmyImages,\r\n\tisModalOpenForImages,\r\n\tisModalOpenForThumbnail,\r\n\tsetmyThumbnailImage,\r\n\tmyImages,\r\n\tmyThumbnailImage,\r\n\t...rest\r\n}: Props) => {\r\n\r\n\tconst [fileList, setfileList] = useState([]);\r\n\tconst [uploading, setuploading] = useState(false);\r\n\tconst [selectedimages, setselectedImages] = useState([]);\r\n\tconst [activeImageItem, setactiveImageItem] = useState(false);\r\n\tconst [addMediaLibrary, handleAddMediaLibraryFetch] = useHandleFetch({}, 'addImageToLibrary');\r\n\tconst [updateMediaLibrary, handleUpdateMediaLibraryFetch] = useHandleFetch({}, 'updateImageFromLibrary');\r\n\tconst [imageListFromLibraryState, handleImageListFromLibraryFetch] = useHandleFetch({}, 'ImageListFromLibrary');\r\n\tconst [deleteImageFromLibraryFetchState, handleDeleteImageFromLibraryFetch] = useHandleFetch({}, 'deleteImageFromLibrary');\r\n\tconst [localImageList, setLocalImageList] = useState([]);\r\n\tconst [isDoneOk, setisDoneOk] = useState(false);\r\n\r\n\r\n\tconst handleDeleteImageFromImageLibrary = async (id) => {\r\n\r\n\t\tconst deleteImageLibraryItemRes = await handleDeleteImageFromLibraryFetch({\r\n\t\t\turlOptions: {\r\n\t\t\t\tplaceHolders: {\r\n\t\t\t\t\tid,\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\r\n\t\t// @ts-ignore\r\n\t\tif (deleteImageLibraryItemRes && deleteImageLibraryItemRes.status === 'ok') {\r\n\t\t\topenSuccessNotification('Imaged Deleted');\r\n\t\t\tconst newImageList = localImageList.filter(item => item.id !== id);\r\n\t\t\tsetLocalImageList(newImageList);\r\n\t\t}\r\n\t};\r\n\r\n\r\n\tconst getImageList = async () => {\r\n\t\tconst imageListRes = await handleImageListFromLibraryFetch({});\r\n\r\n\r\n\t\t// @ts-ignore\r\n\t\tif (imageListRes) {\r\n\t\t\t// @ts-ignore\r\n\t\t\tsetLocalImageList(imageListRes);\r\n\t\t}\r\n\r\n\t\tconsole.log('imageListRes', imageListRes);\r\n\t}\r\n\r\n\r\n\r\n\tuseEffect(() => {\r\n\r\n\t\tgetImageList();\r\n\t}, [])\r\n\r\n\r\n\r\n\r\n\tconst handleUpload = async () => {\r\n\t\tconst formData = new FormData();\r\n\t\tfileList.forEach(file => {\r\n\t\t\tconsole.log('filt', file.name);\r\n\t\t\tformData.append('images', file, file.name);\r\n\t\t});\r\n\r\n\t\tsetuploading(true);\r\n\r\n\t\t//  const addImageToLibraryRes = awAddait handleMediaLibraryFetch({\r\n\t\t// \tbody: formData\r\n\t\t//   });\r\n\r\n\t\t//   console.log('addImageToLibraryRes',addImageToLibraryRes)\r\n\r\n\r\n\r\n\t\t// You can use any AJAX library you like\r\n\t\treqwest({\r\n\t\t\turl: 'http://localhost:5000/admin/image/add',\r\n\t\t\tmethod: 'post',\r\n\t\t\tprocessData: false,\r\n\t\t\tdata: formData,\r\n\t\t\twithCredentials: true,\r\n\t\t\tsuccess: () => {\r\n\t\t\t\tsetfileList([]);\r\n\t\t\t\tsetuploading(false);\r\n\t\t\t\tgetImageList();\r\n\t\t\t\tmessage.success('upload successfully.');\r\n\t\t\t},\r\n\t\t\terror: () => {\r\n\t\t\t\tsetuploading(false);\r\n\t\t\t\tmessage.error('upload failed.');\r\n\t\t\t},\r\n\t\t});\r\n\t};\r\n\r\n\r\n\r\n\tconst handleOk = (e: any) => {\r\n\r\n\t\tif (isModalOpenForImages) {\r\n\t\t\tsetmyImages(selectedimages);\r\n\t\t\tsetisDoneOk(true);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tsetmyThumbnailImage(selectedimages);\r\n\t\t\tsetisDoneOk(true);\r\n\t\t}\r\n\t\tsetvisible(false);\r\n\r\n\t};\r\n\r\n\tconst handleCancel = (e: any) => {\r\n\t\tsetvisible(false);\r\n\t};\r\n\r\n\r\n\tuseEffect(() => {\r\n\t\tif (isDoneOk && isModalOpenForImages) {\r\n\t\t\tsetselectedImages([...myImages]);\r\n\t\t}\r\n\t}, [myImages, isDoneOk])\r\n\r\n\tuseEffect(() => {\r\n\t\tif (isDoneOk) {\r\n\t\t\tconsole.log('myThumbnail', myThumbnailImage)\r\n\t\t\t// setselectedImages([...myThumbnailImage]);\r\n\t\t}\r\n\t}, [myThumbnailImage, isDoneOk])\r\n\r\n\tconst uploadProps = {\r\n\t\t//  listType: 'picture',\r\n\t\tonRemove: file => {\r\n\t\t\tsetfileList(filelist => {\r\n\t\t\t\tconst index = fileList.indexOf(file);\r\n\t\t\t\tconst newFileList = fileList.slice();\r\n\t\t\t\tnewFileList.splice(index, 1);\r\n\t\t\t\treturn newFileList;\r\n\t\t\t})\r\n\r\n\t\t},\r\n\t\tbeforeUpload: file => {\r\n\t\t\tsetfileList(filelist => {\r\n\t\t\t\treturn [...fileList, file]\r\n\t\t\t})\r\n\t\t\treturn false;\r\n\t\t},\r\n\t\tfileList,\r\n\t};\r\n\r\n\r\n\r\n\r\n\tconst handleAddToSelectedList = (image, id) => {\r\n\r\n\t\tif (selectedimages && selectedimages.length > 0) {\r\n\t\t\tconst isImageExist = selectedimages.find(image => image.id === id);\r\n\t\t\tif (!isImageExist) {\r\n\t\t\t\tsetselectedImages([image, ...selectedimages]);\r\n\t\t\t\tsetactiveImageItem(image);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tconst newselectedImages = selectedimages.filter(image => image.id !== id);\r\n\t\t\t\tsetselectedImages(newselectedImages);\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\tsetselectedImages([image, ...selectedimages]);\r\n\t\t\tsetactiveImageItem(image);\r\n\t\t}\r\n\r\n\t}\r\n\r\n\r\n\tconst getisSelectedImage = (id) => {\r\n\t\tif (selectedimages && selectedimages.length > 0) {\r\n\t\t\tconst isImageExist = selectedimages.find(image => image.id === id);\r\n\t\t\tif (isImageExist) {\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t};\r\n\r\n\r\n\tconst handleUpdateSubmit = async (values, actions) => {\r\n\t\tconst updateImageLibraryItemRes = await handleUpdateMediaLibraryFetch({\r\n\t\t\tbody: {\r\n\t\t\t\tid: values.id,\r\n\t\t\t\talt: values.alt,\r\n\t\t\t\ttitle: values.title,\r\n\t\t\t\tcaptoin: values.captoin,\r\n\t\t\t\tlabels: values.labels,\r\n\r\n\t\t\t},\r\n\t\t});\r\n\r\n\r\n\t\t// @ts-ignore\r\n\t\tif (updateImageLibraryItemRes && updateImageLibraryItemRes.status === 'ok') {\r\n\t\t\topenSuccessNotification('Image Updated');\r\n\r\n\t\t\tconst positionInImageList = () => {\r\n\t\t\t\treturn localImageList.map(item => item.id).indexOf(values.id);\r\n\t\t\t}\r\n\r\n\t\t\tconst index = positionInImageList();\r\n\r\n\t\t\t// @ts-ignore\r\n\t\t\tconst updatedItem = Object.assign({}, localImageList[index], { ...updateImageLibraryItemRes });\r\n\t\t\tconst updateImageList = [...localImageList.slice(0, index), updatedItem, ...localImageList.slice(index + 1)];\r\n\t\t\tsetLocalImageList(updateImageList);\r\n\r\n\t\t}\r\n\t\telse {\r\n\t\t\topenErrorNotification();\r\n\t\t}\r\n\r\n\r\n\r\n\t\tactions.setSubmitting(false);\r\n\t}\r\n\r\n\r\n\tconst getisUpdateSubmitButtonDisabled = (values, isValid) => {\r\n\t\t// if(!values.alt || !values.title || !values.title || !values.caption || !isValid){\r\n\t\t// \treturn true; \r\n\t\t// }\r\n\t\tif (!isValid) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\tconsole.log('selectedimages', selectedimages)\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Modal\r\n\t\t\t\tstyle={{\r\n\t\t\t\t\ttop: '40px'\r\n\t\t\t\t}}\r\n\t\t\t\ttitle=\"Media Library\"\r\n\t\t\t\tvisible={visible}\r\n\t\t\t\tonOk={handleOk}\r\n\t\t\t\tonCancel={handleCancel}\r\n\t\t\t\twidth={'80vw'}\r\n\t\t\t\tbodyStyle={{\r\n\t\t\t\t\tmargin: '0',\r\n\t\t\t\t\tpadding: '0'\r\n\t\t\t\t}}\r\n\t\t\t\tokText='Done'\r\n\t\t\t>\r\n\t\t\t\t<div className='mediaLibraryBodyContainer'>\r\n\t\t\t\t\t<div className='mediaLibraryBodyContainer-left'>\r\n\r\n\t\t\t\t\t\t<Tabs defaultActiveKey=\"2\" type=\"card\" size='middle'>\r\n\t\t\t\t\t\t\t<TabPane tab=\"Upload New Media\" key=\"1\">\r\n\t\t\t\t\t\t\t\t<div className='mediaLibraryBodyContainer-left-header'>\r\n\r\n\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t<Dragger\r\n\t\t\t\t\t\t\t\t\t\t\tclassName='upload-list-inline'\r\n\t\t\t\t\t\t\t\t\t\t\tlistType='picture'\r\n\t\t\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\t\t\tbackground: '#fff'\r\n\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t{...uploadProps}\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t<p className='ant-upload-drag-icon'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<InboxOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t\t\t\t\t<p className='ant-upload-text'>Click or drag file to this area to upload</p>\r\n\t\t\t\t\t\t\t\t\t\t\t<p className='ant-upload-hint'>\r\n\t\t\t\t\t\t\t\t\t\t\t\tSupport for a single or bulk upload. Strictly prohibit from uploading company data or\r\n\t\t\t\t\t\t\t\t\t\t\t\tother band files\r\n\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t\t\t\t</Dragger>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\ttype='primary'\r\n\t\t\t\t\t\t\t\t\tonClick={handleUpload}\r\n\t\t\t\t\t\t\t\t\tdisabled={fileList.length === 0}\r\n\t\t\t\t\t\t\t\t\tloading={uploading}\r\n\t\t\t\t\t\t\t\t\ticon={<ArrowUpOutlined />}\r\n\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\tmarginTop: '20px'\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\tUpload\r\n\t\t\t\t\t</Button>\r\n\r\n\t\t\t\t\t\t\t</TabPane>\r\n\t\t\t\t\t\t\t<TabPane tab=\"Media Library\" key=\"2\">\r\n\t\t\t\t\t\t\t\t<div className='mediaLibraryBodyContainer-left-imageListContainer'>\r\n\r\n\t\t\t\t\t\t\t\t\t{imageListFromLibraryState.done\r\n\t\t\t\t\t\t\t\t\t\t&& localImageList.length > 0\r\n\t\t\t\t\t\t\t\t\t\t&& localImageList.map(image => {\r\n\t\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tkey={image.id}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleAddToSelectedList(image, image.id)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='mediaLibraryBodyContainer-left-imageListContainer-item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t{getisSelectedImage(image.id) ? <div className='mediaLibraryBodyContainer-left-imageListContainer-item-icon'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<CheckOutlined\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div> : ''}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<img src={image.cover} alt='img' />\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t\t})}\r\n\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</TabPane>\r\n\r\n\t\t\t\t\t\t</Tabs>\r\n\r\n\r\n\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className='mediaLibraryBodyContainer-right'>\r\n\r\n\t\t\t\t\t\t{activeImageItem && (\r\n\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t<Formik\r\n\t\t\t\t\t\t\t\t\tonSubmit={(values, actions) => handleUpdateSubmit(values, actions)}\r\n\t\t\t\t\t\t\t\t\tvalidateOnBlur={false}\r\n\t\t\t\t\t\t\t\t\tenableReinitialize={true}\r\n\t\t\t\t\t\t\t\t\tinitialValues={\r\n\t\t\t\t\t\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\t\t\t\t\t\t{ ...activeImageItem }\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t{({\r\n\t\t\t\t\t\t\t\t\t\thandleChange,\r\n\t\t\t\t\t\t\t\t\t\tvalues,\r\n\t\t\t\t\t\t\t\t\t\thandleSubmit,\r\n\t\t\t\t\t\t\t\t\t\terrors,\r\n\t\t\t\t\t\t\t\t\t\tisValid,\r\n\t\t\t\t\t\t\t\t\t\tisSubmitting,\r\n\t\t\t\t\t\t\t\t\t\ttouched,\r\n\t\t\t\t\t\t\t\t\t\thandleBlur,\r\n\t\t\t\t\t\t\t\t\t\tsetFieldTouched,\r\n\t\t\t\t\t\t\t\t\t\thandleReset,\r\n\t\t\t\t\t\t\t\t\t}) => (\r\n\t\t\t\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<h4>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tAttachment Details\r\n\t\t\t\t\t\t\t</h4>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div className='mediaLibraryBodyContainer-right-ImageDetails'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div className='mediaLibraryBodyContainer-right-ImageDetails-imageContainer'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<img src={activeImageItem['cover']} alt='img' />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div className='mediaLibraryBodyContainer-right-ImageDetails-infoContainer'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<h5 className='imageLibnameText'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{activeImageItem['name']}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</h5>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<h5>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Moment>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{activeImageItem['added']}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Moment>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</h5>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* <h5>\r\n\t\t\t\t\t\t\t\t\t\t5000 X 500\r\n\t\t\t\t\t\t\t\t\t</h5> */}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Popconfirm\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonConfirm={() => handleDeleteImageFromImageLibrary(activeImageItem['id'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttitle=\"Are you sure？\" okText=\"Yes\" cancelText=\"No\">\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<h5\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='imageLibdeleteText'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tDelete parmanently\r\n\t\t\t\t\t\t\t\t\t                       </h5>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Popconfirm>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tlabel='Alternate Text'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.alt}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tname='alt'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.alt && errors.alt) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateMediaLibrary.error['error']['alt'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.alt && errors.alt) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateMediaLibrary.error['error']['alt'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('alt');\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tlabel='Title'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.title}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tname='title'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.title && errors.title) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateMediaLibrary.error['error']['title'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.title && errors.title) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateMediaLibrary.error['error']['title'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('title');\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tlabel='Caption'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.caption}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tname='title'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.caption && errors.caption) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateMediaLibrary.error['error']['caption'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.caption && errors.caption) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateMediaLibrary.error['error']['caption'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('caption');\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\t\t\t\ttype='default'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={(e: any) => handleSubmit(e)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tdisabled={getisUpdateSubmitButtonDisabled(values, isValid)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tloading={isSubmitting}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t// marginTop: '20px'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tUpdate\r\n\t\t\t\t\t</Button>\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t</Formik>\r\n\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t)}\r\n\r\n\t\t\t\t\t\t{!activeImageItem && (\r\n\t\t\t\t\t\t\t<h3>\r\n\t\t\t\t\t\t\t\tSelect an image to preview details\r\n\t\t\t\t\t\t\t</h3>\r\n\t\t\t\t\t\t)}\r\n\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t</Modal>\r\n\t\t</>\r\n\t)\r\n};\r\n\r\nexport default MediaLibrary;\r\n","import MediaLibrary from './MediaLibrary';\r\nexport default MediaLibrary;\r\n","import React, { useState } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n\r\nimport { useHandleFetch } from '../../hooks';\r\n// import third party ui lib\r\nimport { Upload, message, Switch, Select, notification, Modal } from 'antd';\r\n\r\nimport {\r\n\tFileOutlined,\r\n\tInboxOutlined,\r\n\tRadiusUpleftOutlined,\r\n\tRadiusUprightOutlined,\r\n\tRadiusBottomleftOutlined,\r\n\tRadiusBottomrightOutlined,\r\n\tDeleteOutlined,\r\n\tFileAddOutlined,\r\n\tCheckCircleOutlined\r\n} from '@ant-design/icons';\r\n\r\n\r\n\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport MediaLibrary from \"../../components/MediaLibrary\";\r\n\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n\tname: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t\tmessage: message || 'Category Updated',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t\tmessage: message || 'Something Went Wrong',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n};\r\n\r\n\r\n\r\n\r\n\r\nconst initialValues = {\r\n\tname: '',\r\n\tdescription: '',\r\n\timage: [],\r\n\turl: '',\r\n\tcover: ''\r\n}\r\n\r\nconst { Dragger } = Upload;\r\nconst { Option } = Select;\r\n\r\nconst props = {\r\n\tname: 'file',\r\n\tmultiple: true,\r\n\taction: 'https://www.mocky.io/v2/5cc8019d300000980a055e76',\r\n\tonChange(info: any) {\r\n\t\tconst { status } = info.file;\r\n\t\tif (status !== 'uploading') {\r\n\t\t\tconsole.log(info.file, info.fileList);\r\n\t\t}\r\n\t\tif (status === 'done') {\r\n\t\t\tmessage.success(`${info.file.name} file uploaded successfully.`);\r\n\t\t} else if (status === 'error') {\r\n\t\t\tmessage.error(`${info.file.name} file upload failed.`);\r\n\t\t}\r\n\t}\r\n};\r\n\r\ninterface Props {\r\n\taddNewCategoryVisible: any;\r\n\tsetAddNewCategoryVisible: any;\r\n\tcategoryList?: any;\r\n\tsetcategoryList?: any;\r\n}\r\n\r\nconst AddNewCategory = ({ addNewCategoryVisible, setAddNewCategoryVisible, categoryList, setcategoryList }: Props) => {\r\n\r\n\tconst [addCategoryState, handleAddCategoryFetch] = useHandleFetch({}, 'addCategory');\r\n\tconst [visible, setvisible] = useState(false);\r\n\tconst [myImages, setmyImages] = useState(false);\r\n\tconst [myThumbnailImage, setmyThumbnailImage] = useState(false);\r\n\tconst [isparentCategoryChecked, setisparentcategoryChecked] = useState(true);\r\n\tconst [isModalOpenForThumbnail, setisModalOpenForThumbnail] = useState(false);\r\n\tconst [isModalOpenForImages, setisModalOpenForImages] = useState(false);\r\n\tconst [selectedParentId, setselectedParentId] = useState('');\r\n\r\n\r\n\r\n\tconst handleSubmit = async (values: any, actions: any) => {\r\n\t\t// @ts-ignore\r\n\t\tconst imagesIds = myImages ? myImages.map(image => {\r\n\t\t\treturn image.id;\r\n\t\t}) : [];\r\n\r\n\t\tconst addCategoryRes = await handleAddCategoryFetch({\r\n\r\n\t\t\tbody: {\r\n\t\t\t\tname: values.name,\r\n\t\t\t\tdescription: values.description,\r\n\t\t\t\timage: imagesIds,\r\n\t\t\t\tcover: imagesIds[0] ? imagesIds[0] : '',\r\n\t\t\t\tparent: setselectedParentId\r\n\t\t\t},\r\n\t\t});\r\n\r\n\r\n\t\t// @ts-ignore\r\n\t\tif (addCategoryRes && addCategoryRes.status === 'ok') {\r\n\t\t\topenSuccessNotification();\r\n\r\n\t\t\tsetcategoryList([...categoryList, {\r\n\t\t\t\tid: addCategoryRes['id'] || '',\r\n\t\t\t\tkey: addCategoryRes['id'] || '',\r\n\t\t\t\tname: addCategoryRes['name'] || '',\r\n\t\t\t\tdescription: addCategoryRes['description'] || '',\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\t...addCategoryRes\r\n\t\t\t}])\r\n\t\t\tactions.resetForm();\r\n\t\t\tsetAddNewCategoryVisible(false)\r\n\t\t}\r\n\t\telse {\r\n\t\t\topenErrorNotification();\r\n\t\t}\r\n\r\n\r\n\r\n\r\n\t\tactions.setSubmitting(false);\r\n\t};\r\n\r\n\r\n\r\n\tconst onSwitchChange = (checked: any) => {\r\n\t\tsetisparentcategoryChecked(checked)\r\n\t\tconsole.log(checked);\r\n\t};\r\n\r\n\r\n\tconst handleCancel = (e: any) => {\r\n\t\tsetAddNewCategoryVisible(false);\r\n\t};\r\n\r\n\r\n\tconst getisSubmitButtonDisabled = (values, isValid) => {\r\n\t\tif (!values.name || !values.description || !isValid) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\r\n\tconst handleImagesDelete = (id) => {\r\n\t\t// @ts-ignore\r\n\t\tconst newImages = myImages && myImages.filter(image => {\r\n\t\t\treturn image.id !== id;\r\n\t\t})\r\n\r\n\t\tsetmyImages(newImages);\r\n\t}\r\n\r\n\r\n\tconst handleThumbnailImageDelete = (id) => {\r\n\t\t// @ts-ignore\r\n\t\tconst newImages = myThumbnailImage && myThumbnailImage.filter(image => {\r\n\t\t\treturn image.id !== id;\r\n\t\t})\r\n\r\n\t\tif (newImages.length > 0) {\r\n\t\t\tsetmyThumbnailImage(newImages);\r\n\r\n\t\t}\r\n\t\telse setmyThumbnailImage(false);\r\n\t}\r\n\r\n\r\n\r\n\r\n\tconsole.log('isparentCategoryChecked', isparentCategoryChecked);\r\n\r\n\r\n\tconst onChangeSelect = (value) => {\r\n\t\tsetselectedParentId(value);\r\n\t\tconsole.log('selectedValue', value);\r\n\t}\r\n\r\n\r\n\treturn (\r\n\t\t<Formik\r\n\t\t\tonSubmit={(values, actions) => handleSubmit(values, actions)}\r\n\t\t\tvalidationSchema={validationSchema}\r\n\t\t\tvalidateOnBlur={false}\r\n\t\t\tenableReinitialize={true}\r\n\t\t\tinitialValues={\r\n\t\t\t\t{ ...initialValues }\r\n\t\t\t}\r\n\t\t>\r\n\t\t\t{({\r\n\t\t\t\thandleChange,\r\n\t\t\t\tvalues,\r\n\t\t\t\thandleSubmit,\r\n\t\t\t\terrors,\r\n\t\t\t\tisValid,\r\n\t\t\t\tisSubmitting,\r\n\t\t\t\ttouched,\r\n\t\t\t\thandleBlur,\r\n\t\t\t\tsetFieldTouched,\r\n\t\t\t\thandleReset,\r\n\t\t\t}) => (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<Modal\r\n\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\ttop: '40px'\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\ttitle=\"Add New Category\"\r\n\t\t\t\t\t\t\tvisible={addNewCategoryVisible}\r\n\t\t\t\t\t\t\tonOk={(e: any) => handleSubmit(e)}\r\n\t\t\t\t\t\t\tonCancel={handleCancel}\r\n\t\t\t\t\t\t\tokText='Create'\r\n\t\t\t\t\t\t\tokButtonProps={{\r\n\t\t\t\t\t\t\t\tloading: isSubmitting,\r\n\t\t\t\t\t\t\t\thtmlType: \"submit\",\r\n\t\t\t\t\t\t\t\tdisabled: getisSubmitButtonDisabled(values, isValid)\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\tlabel='Title'\r\n\t\t\t\t\t\t\t\tvalue={values.name}\r\n\t\t\t\t\t\t\t\tname='name'\r\n\t\t\t\t\t\t\t\tisError={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['name'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['name'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('name');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\tlabel='Description'\r\n\t\t\t\t\t\t\t\tvalue={values.description}\r\n\t\t\t\t\t\t\t\tname='description'\r\n\t\t\t\t\t\t\t\tisError={(touched.description && errors.description) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['description'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.description && errors.description) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['description'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('description');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<div className='switchLabelContainer'>\r\n\t\t\t\t\t\t\t\t<Switch defaultChecked onChange={onSwitchChange} />\r\n\t\t\t\t\t\t\t\t<div className='switchLabelContainer-textContainer'>\r\n\t\t\t\t\t\t\t\t\t<h4 className='switchLabelContainer-label'>Top level Category</h4>\r\n\t\t\t\t\t\t\t\t\t<h5 className='switchLabelContainer-desc'>Disable to select a Parent Category</h5>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t{!isparentCategoryChecked && (\r\n\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>Parent Category</h3>\r\n\t\t\t\t\t\t\t\t\t<Select\r\n\t\t\t\t\t\t\t\t\t\tshowSearch\r\n\t\t\t\t\t\t\t\t\t\tstyle={{ width: 300 }}\r\n\t\t\t\t\t\t\t\t\t\tplaceholder='Select a Parent Category'\r\n\t\t\t\t\t\t\t\t\t\toptionFilterProp='children'\r\n\t\t\t\t\t\t\t\t\t\tonChange={onChangeSelect}\r\n\t\t\t\t\t\t\t\t\t\t// onFocus={onFocus}\r\n\t\t\t\t\t\t\t\t\t\t// onBlur={onBlur}\r\n\t\t\t\t\t\t\t\t\t\t// onSearch={onSearch}\r\n\t\t\t\t\t\t\t\t\t\tfilterOption={(input, option: any) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t{categoryList.length > 0 && categoryList.map(category => {\r\n\t\t\t\t\t\t\t\t\t\t\treturn <Option value={category.id}>{category.name}</Option>\r\n\t\t\t\t\t\t\t\t\t\t})}\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t</Select>\r\n\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\tmarginTop: '20px'\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\r\n\t\t\t\t\t\t\t<div className='addproductSection-left-header'>\r\n\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>Images</h3>\r\n\t\t\t\t\t\t\t\t{/* <div  >\r\n\t\t\t\t\t<FileOutlined />\r\n\t\t\t\t\t<span>Media Center</span>\r\n\t\t\t\t</div> */}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className='aboutToUploadImagesContainer'>\r\n\t\t\t\t\t\t\t\t{myImages &&\r\n\t\t\t\t\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\t\t\t\t\tmyImages.length > 0 && myImages.map(image => {\r\n\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='aboutToUploadImagesContainer__item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => handleImagesDelete(image.id)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='aboutToUploadImagesContainer__item-overlay'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<DeleteOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<img src={image.cover} alt={image.alt} />\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t})}\r\n\r\n\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\t\tsetvisible(true);\r\n\t\t\t\t\t\t\t\t\t\tsetisModalOpenForImages(true);\r\n\t\t\t\t\t\t\t\t\t\tsetisModalOpenForThumbnail(false);\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\tclassName='aboutToUploadImagesContainer__uploadItem'>\r\n\t\t\t\t\t\t\t\t\t<FileAddOutlined />\r\n\t\t\t\t\t\t\t\t\t{/* <h5>\r\n\t\t\t\t\t\t\t\t\t\t\t\tSelect From Library\r\n\t\t\t\t\t\t\t\t\t\t\t</h5> */}\r\n\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\t\t\t\t\t\t</Modal>\r\n\r\n\t\t\t\t\t\t<MediaLibrary\r\n\t\t\t\t\t\t\tsetvisible={setvisible}\r\n\t\t\t\t\t\t\tvisible={visible}\r\n\t\t\t\t\t\t\tsetmyImages={setmyImages}\r\n\t\t\t\t\t\t\tmyImages={myImages}\r\n\t\t\t\t\t\t\tsetmyThumbnailImage={setmyThumbnailImage}\r\n\t\t\t\t\t\t\tisModalOpenForThumbnail={isModalOpenForThumbnail}\r\n\t\t\t\t\t\t\tisModalOpenForImages={isModalOpenForImages}\r\n\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</>\r\n\t\t\t\t)}\r\n\t\t</Formik>\r\n\r\n\r\n\r\n\r\n\t);\r\n};\r\n\r\nexport default AddNewCategory;\r\n","import React,{useState} from 'react';\r\nimport { Modal, notification  } from 'antd';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport {useHandleFetch} from '../../hooks';\r\n\r\nimport { CheckCircleOutlined, PlusOutlined, EditOutlined, DeleteOutlined,EditFilled } from '@ant-design/icons';\r\n\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n\tname: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\n\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t  message: message || 'Category Updated',\r\n\t  description: '',\r\n\t  icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n  };\r\n\r\n\r\n  const openErrorNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t  message: message || 'Something Went Wrong',\r\n\t  description: '',\r\n\t  icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n  };\r\n\r\n\r\n\r\n\r\n\r\ninterface Props {\r\n\tcategory: any;\r\n\tsetvisible: any; \r\n\tvisible: any;\r\n\tsetcategoryList?:any; \r\n\tcategoryList?:any; \r\n}\r\n\r\nconst QuickEdit = ({ category, setvisible, visible, categoryList, setcategoryList }: Props) => {\r\n\tconst [updateCategoryState, handleUpdateCategoryFetch] = useHandleFetch({}, 'updateCategory');\r\n\r\n\tconst handleSubmit = async (values : any, actions : any) => {\r\n\t  const updateCategoryRes = await handleUpdateCategoryFetch({\r\n\t\turlOptions: {\r\n\t\t\tplaceHolders: {\r\n\t\t\t  id: values.id,\r\n\t\t\t}\r\n\t\t  },\r\n\t\tbody: {\r\n\t\t\tname: values.name,\r\n\t\t\tdescription: values.description,\r\n\t\t},\r\n\t  });\r\n\r\n\t  console.log('updateCategoryRes',updateCategoryRes)\r\n\r\n\t  // @ts-ignore\r\n\t  if(updateCategoryRes && updateCategoryRes.status === 'ok'){\r\n\t\topenSuccessNotification(); \r\n\r\n\t\tconst positionInTag = () => {\r\n\t\t\treturn categoryList.map(item => item.id).indexOf(category.id);\r\n\t\t  }\r\n\r\n\t\t  const index = positionInTag();\r\n\r\n\t\t  // @ts-ignore\r\n\t\t  const updatedItem = Object.assign({}, categoryList[index], { ...updateCategoryRes });\r\n\t\t  const updateCategoryList = [...categoryList.slice(0, index), updatedItem, ...categoryList.slice(index + 1)];\r\n\t\t  setcategoryList(updateCategoryList); \r\n\t\t\r\n\t  }\r\n\t  else {\r\n\t\topenErrorNotification();\r\n\t  }\r\n\t\r\n\t  actions.setSubmitting(false);\r\n\t  setvisible(false)\r\n\t\r\n\t};\r\n\t\r\n\r\n\tconst handleCancel = (e: any) => {\r\n        setvisible(false);\r\n      };\r\n\r\n\r\n\r\n\t  const getisSubmitButtonDisabled = (values,isValid) => {\r\n\t\tif(!values.name  || !isValid){\r\n\t\t\treturn true; \r\n\t\t}\r\n\t\treturn false; \r\n\t  }\r\n\r\n\treturn (\r\n\t\t<Formik\r\n\t\tonSubmit={(values, actions) => handleSubmit(values, actions)}\r\n\t\tvalidationSchema={validationSchema}\r\n\t\tvalidateOnBlur={false}\r\n\t\tenableReinitialize={true}\r\n\t\tinitialValues={\r\n\t\t  {...category}\r\n\t\t}\r\n\t  >\r\n\t\t{({\r\n\t\t  handleChange,\r\n\t\t  values,\r\n\t\t  handleSubmit,\r\n\t\t  errors,\r\n\t\t  isValid,\r\n\t\t  isSubmitting,\r\n\t\t  touched,\r\n\t\t  handleBlur,\r\n\t\t  setFieldTouched,\r\n\t\t  handleReset,\r\n\t\t}) => (\r\n\t\t\t<>\r\n\t\t\t<Modal\r\n\t\t\ttitle=\"Quick Edit\"\r\n\t\t\tvisible={visible}\r\n\t\t\tonOk={(e : any) => handleSubmit(e)}\r\n\t\t\tonCancel={handleCancel}\r\n\t\t\tokText='Update'\r\n\t\t\tokButtonProps={{\r\n\t\t\tloading: isSubmitting,\r\n\t\t\thtmlType: \"submit\",\r\n\t\t\tdisabled: getisSubmitButtonDisabled(values, isValid)\r\n\t\t\t}}\r\n  >\r\n  <Input \r\n\t\t\t   label='Title'\r\n\t\t\t   value={values.name}\r\n\t\t\t   name='name'\r\n\t\t\t   isError={(touched.name && errors.name) ||\r\n\t\t\t\t  (!isSubmitting && updateCategoryState.error['error']['name'])}\r\n\t\t\t  \r\n\t\t\t\t  errorString={(touched.name && errors.name) ||\r\n\t\t\t\t\t  (!isSubmitting && updateCategoryState.error['error']['name'])}\r\n\t\t\t   onChange={(e : any) => {\r\n\t\t\t\t  handleChange(e);\r\n\t\t\t\t  setFieldTouched('name');\r\n\t\t\t\t}}\r\n\t\t\t   />\r\n\t\t\t  <TextArea\r\n\t\t\t   label='Description' \r\n\t\t\t   value={values.description}\r\n\t\t\t   name='description'\r\n\t\t\t   isError={(touched.description && errors.description) ||\r\n\t\t\t\t  (!isSubmitting && updateCategoryState.error['error']['description'])}\r\n\t\t\t  \r\n\t\t\t\t  errorString={(touched.description && errors.description) ||\r\n\t\t\t\t\t  (!isSubmitting && updateCategoryState.error['error']['description'])}\r\n\t\t\t   onChange={(e : any) => {\r\n\t\t\t\t  handleChange(e);\r\n\t\t\t\t  setFieldTouched('description');\r\n\t\t\t\t}}\r\n\t\t\t\t />\r\n  </Modal>\r\n\t\t\t  \r\n\t\t\t</>\r\n\t\t  )}\r\n\t  </Formik>\r\n\t);\r\n};\r\n\r\n\r\nexport default QuickEdit;\r\n","import React, { useState } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n\r\nimport { useHandleFetch } from '../../hooks';\r\n// import third party ui lib\r\nimport { Upload, message, Switch, Select, Button, notification, Modal } from 'antd';\r\n\r\nimport {\r\n\tFileOutlined,\r\n\tInboxOutlined,\r\n\tFileAddOutlined,\r\n\tDeleteOutlined,\r\n\tCheckCircleOutlined\r\n} from '@ant-design/icons';\r\n\r\n\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport MediaLibrary from \"../../components/MediaLibrary\";\r\n\r\nconst validationSchema = Yup.object().shape({\r\n\tname: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t\tmessage: message || 'Brand Created',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t\tmessage: message || 'Something Went Wrong',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n};\r\n\r\n\r\nconst initialValues = {\r\n\tname: '',\r\n\tdescription: '',\r\n\timage: [],\r\n\turl: '',\r\n\tcover: ''\r\n}\r\n\r\n\r\n\r\ninterface Props {\r\n\taddNewCategoryVisible?: any;\r\n\tsetAddNewCategoryVisible?: any;\r\n\tbrandList?: any;\r\n\tsetBrandList?: any;\r\n\r\n}\r\n\r\nconst AddNewBrand = ({ addNewCategoryVisible, setAddNewCategoryVisible, brandList, setBrandList }: Props) => {\r\n\r\n\tconst [addBrandState, handleAddBrandFetch] = useHandleFetch({}, 'addBrand');\r\n\tconst [visible, setvisible] = useState(false);\r\n\tconst [myImages, setmyImages] = useState(false);\r\n\tconst [visibleMedia, setvisibleMedia] = useState(false);\r\n\r\n\r\n\tconst handleSubmit = async (values: any, actions: any) => {\r\n\r\n\t\t// @ts-ignore\r\n\t\tconst imagesIds = myImages ? myImages.map(image => {\r\n\t\t\treturn image.id;\r\n\t\t}) : [];\r\n\r\n\r\n\t\tconst addBrandRes = await handleAddBrandFetch({\r\n\r\n\t\t\tbody: {\r\n\t\t\t\tname: values.name,\r\n\t\t\t\tdescription: values.description,\r\n\t\t\t\ttype: values.type,\r\n\t\t\t\timage: imagesIds,\r\n\t\t\t\tcover: imagesIds[0] ? imagesIds[0] : '',\r\n\t\t\t},\r\n\t\t});\r\n\r\n\t\t// @ts-ignore\r\n\t\tif (addBrandRes && addBrandRes.status === 'ok') {\r\n\t\t\topenSuccessNotification();\r\n\r\n\t\t\tsetBrandList([...brandList, {\r\n\t\t\t\tid: addBrandRes['id'] || '',\r\n\t\t\t\tkey: addBrandRes['id'] || '',\r\n\t\t\t\tname: addBrandRes['name'] || '',\r\n\t\t\t\tdescription: addBrandRes['description'] || '',\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\t...addBrandRes\r\n\t\t\t}])\r\n\t\t\tactions.resetForm();\r\n\t\t\tsetAddNewCategoryVisible(false);\r\n\t\t}\r\n\t\telse {\r\n\t\t\topenErrorNotification();\r\n\t\t}\r\n\r\n\r\n\r\n\r\n\t\tactions.setSubmitting(false);\r\n\r\n\t};\r\n\r\n\r\n\r\n\tconst onSwitchChange = (checked: any) => {\r\n\t\tconsole.log(checked);\r\n\t};\r\n\r\n\r\n\tconst handleCancel = (e: any) => {\r\n\t\tsetAddNewCategoryVisible(false);\r\n\t};\r\n\r\n\r\n\tconst getisSubmitButtonDisabled = (values, isValid) => {\r\n\t\tif (!values.name && !values.description || !isValid) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\r\n\r\n\r\n\tconst handleImagesDelete = (id) => {\r\n\t\t// @ts-ignore\r\n\t\tconst newImages = myImages && myImages.filter(image => {\r\n\t\t\treturn image.id !== id;\r\n\t\t})\r\n\r\n\t\tsetmyImages(newImages);\r\n\t}\r\n\r\n\r\n\r\n\r\n\treturn (\r\n\t\t<Formik\r\n\t\t\tonSubmit={(values, actions) => handleSubmit(values, actions)}\r\n\t\t\tvalidationSchema={validationSchema}\r\n\t\t\tvalidateOnBlur={false}\r\n\t\t\tenableReinitialize={true}\r\n\t\t\tinitialValues={\r\n\t\t\t\t{ ...initialValues }\r\n\t\t\t}\r\n\t\t>\r\n\t\t\t{({\r\n\t\t\t\thandleChange,\r\n\t\t\t\tvalues,\r\n\t\t\t\thandleSubmit,\r\n\t\t\t\terrors,\r\n\t\t\t\tisValid,\r\n\t\t\t\tisSubmitting,\r\n\t\t\t\ttouched,\r\n\t\t\t\thandleBlur,\r\n\t\t\t\tsetFieldTouched,\r\n\t\t\t\thandleReset,\r\n\t\t\t}) => (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<Modal\r\n\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\ttop: '40px'\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\ttitle=\"Add New Brand\"\r\n\t\t\t\t\t\t\tvisible={addNewCategoryVisible}\r\n\t\t\t\t\t\t\tonOk={(e: any) => handleSubmit(e)}\r\n\t\t\t\t\t\t\tonCancel={handleCancel}\r\n\t\t\t\t\t\t\tokText='Create'\r\n\t\t\t\t\t\t\tokButtonProps={{\r\n\t\t\t\t\t\t\t\tloading: isSubmitting,\r\n\t\t\t\t\t\t\t\thtmlType: \"submit\",\r\n\t\t\t\t\t\t\t\tdisabled: getisSubmitButtonDisabled(values, isValid)\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\tlabel='Title'\r\n\t\t\t\t\t\t\t\tvalue={values.name}\r\n\t\t\t\t\t\t\t\tname='name'\r\n\t\t\t\t\t\t\t\tisError={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addBrandState.error['error']['name'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addBrandState.error['error']['name'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('name');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\tlabel='Description'\r\n\t\t\t\t\t\t\t\tvalue={values.description}\r\n\t\t\t\t\t\t\t\tname='description'\r\n\t\t\t\t\t\t\t\tisError={(touched.description && errors.description) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addBrandState.error['error']['description'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.description && errors.description) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addBrandState.error['error']['description'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('description');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\tmarginTop: '20px'\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\r\n\t\t\t\t\t\t\t<div className='addproductSection-left-header'>\r\n\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>Images</h3>\r\n\t\t\t\t\t\t\t\t{/* <div  >\r\n\t\t\t\t\t<FileOutlined />\r\n\t\t\t\t\t<span>Media Center</span>\r\n\t\t\t\t</div> */}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className='aboutToUploadImagesContainer'>\r\n\t\t\t\t\t\t\t\t{myImages &&\r\n\t\t\t\t\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\t\t\t\t\tmyImages.length > 0 && myImages.map(image => {\r\n\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='aboutToUploadImagesContainer__item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => handleImagesDelete(image.id)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='aboutToUploadImagesContainer__item-overlay'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<DeleteOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<img src={image.cover} alt={image.alt} />\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t})}\r\n\r\n\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\t\tsetvisibleMedia(true);\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\tclassName='aboutToUploadImagesContainer__uploadItem'>\r\n\t\t\t\t\t\t\t\t\t<FileAddOutlined />\r\n\t\t\t\t\t\t\t\t\t{/* <h5>\r\n\t\t\t\t\t\t\t\t\t\t\t\tSelect From Library\r\n\t\t\t\t\t\t\t\t\t\t\t</h5> */}\r\n\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\r\n\t\t\t\t\t\t</Modal>\r\n\r\n\t\t\t\t\t\t<MediaLibrary\r\n\t\t\t\t\t\t\tsetvisible={setvisibleMedia}\r\n\t\t\t\t\t\t\tvisible={visibleMedia}\r\n\t\t\t\t\t\t\tsetmyImages={setmyImages}\r\n\t\t\t\t\t\t\tmyImages={myImages}\r\n\t\t\t\t\t\t\tisModalOpenForImages={true}\r\n\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</>\r\n\t\t\t\t)}\r\n\t\t</Formik>\r\n\r\n\r\n\r\n\r\n\t);\r\n};\r\n\r\nexport default AddNewBrand;\r\n","import React,{useState} from 'react';\r\nimport { Modal, notification  } from 'antd';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport {useHandleFetch} from '../../hooks';\r\nimport { CheckCircleOutlined } from '@ant-design/icons';\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n\tname: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t  message: message || 'Tag Updated',\r\n\t  description: '',\r\n\t  icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n  };\r\n\r\n\r\n  const openErrorNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t  message: message || 'Something Went Wrong',\r\n\t  description: '',\r\n\t  icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n  };\r\n\r\n\r\n\r\n\r\n\r\ninterface Props {\r\n\tcategory: any;\r\n\tsetvisible: any; \r\n\tvisible: any;\r\n\tbrandList: any; \r\n\tsetBrandList?: any; \r\n\r\n}\r\n\r\nconst QuickEdit = ({ category, setvisible, visible, brandList, setBrandList }: Props) => {\r\n\tconst [updatebrandState, handleUpdateBrandFetch] = useHandleFetch({}, 'updateBrand');\r\n\r\n\tconst handleSubmit = async (values : any, actions : any) => {\r\n\t  const updateBrandRes = await handleUpdateBrandFetch({\r\n\t\turlOptions: {\r\n\t\t\tplaceHolders: {\r\n\t\t\t  id: values.id,\r\n\t\t\t}\r\n\t\t  },\r\n\t\tbody: {\r\n\t\t\tname: values.name,\r\n\t\t\tdescription: values.description,\r\n\t\t},\r\n\t  });\r\n\r\n\t  \r\n\t \t  // @ts-ignore\r\n\t\t   if(updateBrandRes && updateBrandRes.status === 'ok'){\r\n\t\t\topenSuccessNotification(); \r\n\t\r\n\t\t\tconst positionInBrand = () => {\r\n\t\t\t\treturn brandList.map(item => item.id).indexOf(category.id);\r\n\t\t\t  }\r\n\t\r\n\t\t\t  const index = positionInBrand();\r\n\t\r\n\t\t\t  // @ts-ignore\r\n\t\t\t  const updatedItem = Object.assign({}, brandList[index], { ...updateBrandRes });\r\n\t\t\t  const updateBrandList = [...brandList.slice(0, index), updatedItem, ...brandList.slice(index + 1)];\r\n\t\t\t  setBrandList(updateBrandList); \r\n\t\t\t\r\n\t\t  }\r\n\t\t  else {\r\n\t\t\topenErrorNotification();\r\n\t\t  }\r\n\t\t\r\n\t\t  actions.setSubmitting(false);\r\n\t\t  setvisible(false)\r\n\r\n\r\n\t\r\n\t};\r\n\t\r\n\r\n\tconst handleCancel = (e: any) => {\r\n        setvisible(false);\r\n      };\r\n\r\n\r\n\r\n\t  const getisSubmitButtonDisabled = (values,isValid) => {\r\n\t\tif(!values.name || !isValid){\r\n\t\t\treturn true; \r\n\t\t}\r\n\t\treturn false; \r\n\t  }\r\n\r\n\treturn (\r\n\t\t<Formik\r\n\t\tonSubmit={(values, actions) => handleSubmit(values, actions)}\r\n\t\tvalidationSchema={validationSchema}\r\n\t\tvalidateOnBlur={false}\r\n\t\tenableReinitialize={true}\r\n\t\tinitialValues={\r\n\t\t  {...category}\r\n\t\t}\r\n\t  >\r\n\t\t{({\r\n\t\t  handleChange,\r\n\t\t  values,\r\n\t\t  handleSubmit,\r\n\t\t  errors,\r\n\t\t  isValid,\r\n\t\t  isSubmitting,\r\n\t\t  touched,\r\n\t\t  handleBlur,\r\n\t\t  setFieldTouched,\r\n\t\t  handleReset,\r\n\t\t}) => (\r\n\t\t\t<>\r\n\t\t\t<Modal\r\n\t\t\ttitle=\"Quick Edit\"\r\n\t\t\tvisible={visible}\r\n\t\t\tonOk={(e : any) => handleSubmit(e)}\r\n\t\t\tonCancel={handleCancel}\r\n\t\t\tokText='Update'\r\n\t\t\tokButtonProps={{\r\n\t\t\tloading: isSubmitting,\r\n\t\t\thtmlType: \"submit\",\r\n\t\t\tdisabled: getisSubmitButtonDisabled(values, isValid)\r\n\t\t\t}}\r\n  >\r\n  <Input \r\n\t\t\t   label='Title'\r\n\t\t\t   value={values.name}\r\n\t\t\t   name='name'\r\n\t\t\t   isError={(touched.name && errors.name) ||\r\n\t\t\t\t  (!isSubmitting && updatebrandState.error['error']['name'])}\r\n\t\t\t  \r\n\t\t\t\t  errorString={(touched.name && errors.name) ||\r\n\t\t\t\t\t  (!isSubmitting && updatebrandState.error['error']['name'])}\r\n\t\t\t   onChange={(e : any) => {\r\n\t\t\t\t  handleChange(e);\r\n\t\t\t\t  setFieldTouched('name');\r\n\t\t\t\t}}\r\n\t\t\t   />\r\n\t\t\t  <TextArea\r\n\t\t\t   label='Description' \r\n\t\t\t   value={values.description}\r\n\t\t\t   name='description'\r\n\t\t\t   isError={(touched.description && errors.description) ||\r\n\t\t\t\t  (!isSubmitting && updatebrandState.error['error']['description'])}\r\n\t\t\t  \r\n\t\t\t\t  errorString={(touched.description && errors.description) ||\r\n\t\t\t\t\t  (!isSubmitting && updatebrandState.error['error']['description'])}\r\n\t\t\t   onChange={(e : any) => {\r\n\t\t\t\t  handleChange(e);\r\n\t\t\t\t  setFieldTouched('description');\r\n\t\t\t\t}}\r\n\t\t\t\t />\r\n  </Modal>\r\n\t\t\t  \r\n\t\t\t</>\r\n\t\t  )}\r\n\t  </Formik>\r\n\t);\r\n};\r\n\r\n\r\nexport default QuickEdit;\r\n","import React, {useState,useEffect} from 'react';\r\nimport {withRouter} from 'react-router-dom';\r\nimport { Table,Empty, Popconfirm, Space, Tag,Button, Input,Tooltip, Modal, notification  } from 'antd';\r\nimport { PlusOutlined, EditOutlined, DeleteOutlined,EditFilled,CheckCircleOutlined } from '@ant-design/icons';\r\n\r\n\r\n\r\n/// import hooks\r\nimport { useFetch, useHandleFetch } from \"../../hooks\";\r\n\r\n// import components\r\nimport { DataTableSkeleton } from \"../../components/Placeholders\";\r\nimport AddNewBrand from \"./AddNewBrand\"\r\nimport QuickEdit from \"./QuickEdit\"\r\n\r\n\r\n\r\nconst { Column, ColumnGroup } = Table;\r\nconst { Search } = Input;\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t  message: message || 'Tag Created',\r\n\t  description: '',\r\n\t  icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n  };\r\n\r\n\r\n  const openErrorNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t  message: message || 'Something Went Wrong',\r\n\t  description: '',\r\n\t  icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n  };\r\n\r\n\r\n\r\n\r\n\r\ninterface myTableProps {\r\n  data: any; \r\n  setBrandList: any; \r\n} \r\n\r\n\r\nconst MyTable = ({data,setBrandList}: myTableProps) => {\r\n    const [visible,setvisible] = useState(false);   \r\n    const [activeCategoryForEdit,setactiveCategoryForEdit] = useState(false); \r\n    const [deleteBrandState, handleDeleteBrandFetch] = useHandleFetch({}, 'deleteBrand');\r\n\r\n\r\n      \r\n      console.log('activeCategoryForEdit',activeCategoryForEdit)\r\n\r\n \r\n      const handleDeleteBrand = async (id) => {\r\n        const deleteBrandRes = await handleDeleteBrandFetch({\r\n          urlOptions: {\r\n            placeHolders: {\r\n              id,\r\n            }\r\n            }\r\n          });\r\n\r\n            // @ts-ignore\r\n\t\t  if(deleteBrandRes && deleteBrandRes.status === 'ok'){\r\n\t\t\t  openSuccessNotification('Deleted Brand'); \r\n\t\t\t  const newBrandList =  data.filter(item => item.id !== id);\r\n\t\t\t  setBrandList(newBrandList); \r\n\t\t  }\r\n      }\r\n      \r\n\r\n    return (\r\n        <>\r\n        <Table \r\n        // expandable={{\r\n        //     expandedRowRender: record => <p style={{ margin: 0 }}>{record.name}</p>,\r\n        //     rowExpandable: record => record.name !== 'Not Expandable',\r\n        //   }}\r\n        // bordered={true}\r\n        size='small'\r\n        // pagination={false}\r\n        dataSource={data}\r\n        >\r\n            <Column \r\n          title=\"\"\r\n           dataIndex=\"cover\"\r\n            key=\"id\" \r\n            // width={'100px'}\r\n            \r\n           className='classnameofthecolumn'\r\n\r\n            render={cover => (\r\n                <>\r\n                <img src={cover} alt='cover img' style={{\r\n                    height: '40px',\r\n                    width: '40px',\r\n                    objectFit: \"contain\",\r\n                    borderRadius:'3px'\r\n                }} />\r\n                </>\r\n              )}\r\n            />\r\n          <Column\r\n           title=\"Name\" \r\n           dataIndex=\"name\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n         \r\n            />\r\n\r\n<Column\r\n           title=\"Description\" \r\n           dataIndex=\"description\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n         \r\n            />\r\n          {/* <Column \r\n          \r\n          className='classnameofthecolumn'\r\n\r\n          title=\"Product\" dataIndex=\"product\" key=\"product\" /> */}\r\n\r\n          {/* <Column \r\n          \r\n          className='classnameofthecolumn'\r\n\r\n          title=\"Sub Category\" dataIndex=\"subCategory\" key=\"subCategory\" /> */}\r\n        \r\n        {/* <Column\r\n          title=\"Tags\"\r\n          dataIndex=\"tags\"\r\n          key=\"tags\"\r\n          render={tags => (\r\n            <>\r\n              {tags.map((tag : any) => (\r\n                <Tag color=\"blue\" key={tag}>\r\n                  {tag}\r\n                </Tag>\r\n              ))}\r\n            </>\r\n          )}\r\n        /> */}\r\n        <Column\r\n        \r\n        className='classnameofthecolumn'\r\n          title=\"\"\r\n          key=\"action\"\r\n          align='right'\r\n          render={(text, record : any) => (\r\n            <Space size=\"middle\">\r\n            \r\n               <Tooltip placement=\"top\" title='Quick Edit Brand'>\r\n              <span className='iconSize' onClick={() => {\r\n                setvisible(true)\r\n                setactiveCategoryForEdit(record); \r\n              }}> \r\n              <EditOutlined />\r\n            \r\n              </span>\r\n               </Tooltip>\r\n\r\n\r\n\r\n \r\n               <Popconfirm \r\n               \r\n               onConfirm={() => handleDeleteBrand(record.id)}\r\n               title=\"Are you sure？\" okText=\"Yes\" cancelText=\"No\">\r\n           \r\n           <span \r\n             className='iconSize iconSize-danger'\r\n             > \r\n             <DeleteOutlined/>\r\n            </span>\r\n           </Popconfirm>\r\n\r\n\r\n            </Space>\r\n          )}\r\n        />\r\n      </Table>\r\n\r\n    \r\n\r\n    {activeCategoryForEdit &&   <QuickEdit \r\n    brandList={data}\r\n    setBrandList={setBrandList}\r\n    setvisible={setvisible}\r\n    visible={visible}\r\n    category={activeCategoryForEdit}/>}\r\n    \r\n    \r\n    </>\r\n    )\r\n}\r\n\r\n\r\ninterface Props {\r\n    history: any; \r\n}\r\n\r\nconst CategoryList = ({history}: Props) => {\r\n\r\n\r\n  const [brandList,setBrandList] = useState([]);\r\n\r\n  \r\n  const [brandState, handlebrandListFetch] = useHandleFetch({}, 'brandList');\r\n\r\n\r\n  useEffect(()=>{\r\n   const setBrands = async () => {\r\n     const brands = await handlebrandListFetch({}); \r\n     // @ts-ignore\r\n     setBrandList(brands); \r\n   }\r\n   setBrands(); \r\n  },[])\r\n\r\n\r\n  \r\n  const [addNewCategoryVisible,setAddNewCategoryVisible] = useState(false);   \r\n\r\n  const handleOkAddNewCategory = (e: any) => {\r\n    setAddNewCategoryVisible(false);\r\n  \r\n  };\r\n\r\n  const handleCancelAddNewCategory = (e: any) => {\r\n    setAddNewCategoryVisible(false);\r\n  };\r\n\r\n\r\n    \r\n  const handleSearch = (value) => {\r\n    if(brandState.data.length > 0 ){\r\n      const newBrandList = brandState.data.filter(item => item.name.includes(value)); \r\n      setBrandList(newBrandList); \r\n    }\r\n     \r\n  }\r\n\r\n\r\n\r\n\r\n  console.log('brandState',brandState)\r\n\r\n\r\n\r\n\treturn (\r\n\t\t<>\r\n    {/* <h2 className='containerPageTitle'>\r\n      Categories\r\n    </h2> */}\r\n    <div className='categoryListContainer'>\r\n            <div className='categoryListContainer__header'>\r\n           \r\n\r\n          <div className='categoryListContainer__header-searchBar'>\r\n          <h2 className='categoryListContainer__header-title'>\r\n            Brand\r\n            </h2>\r\n\r\n\r\n          <Search\r\n            enterButton={false}\r\n            className='searchbarClassName'\r\n          placeholder=\"search brands..\"\r\n          onSearch={value => console.log(value)}\r\n          // style={{ width: 300 }}\r\n        />\r\n          </div>\r\n            <Button\r\n          // type=\"primary\"\r\n          className='btnPrimaryClassNameoutline'\r\n          icon={<PlusOutlined />}\r\n          onClick={() => setAddNewCategoryVisible(true)}\r\n        >\r\n        Add New\r\n            \r\n            </Button>\r\n            </div>\r\n\r\n            <div className='categoryListContainer__afterHeader'>\r\n            {/* <Search\r\n      placeholder=\"search categories..\"\r\n      size=\"large\"\r\n      onSearch={value => console.log(value)}\r\n      style={{ width: 300 }}\r\n    /> */}\r\n            </div>\r\n\r\n     \r\n\t\t\t\r\n\t\t\t<div className='categoryListContainer__categoryList'>\r\n        {brandState.done && brandList.length > 0 && <MyTable \r\n          setBrandList={setBrandList}\r\n        data={brandList} />}\r\n        {brandState.isLoading && <DataTableSkeleton />}\r\n        {brandState.done && !(brandList.length > 0) && (\r\n\t\t\t<div style={{\r\n\t\t\t\tmarginTop: '100px'\r\n\t\t\t}}>\r\n\t\t\t\t<Empty description='No Brands found'  image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n\t\t\t</div>\r\n\t\t)}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\r\n    <AddNewBrand \r\n          addNewCategoryVisible={addNewCategoryVisible} \r\n          setAddNewCategoryVisible={setAddNewCategoryVisible} \r\n          setBrandList={setBrandList}\r\n          brandList={brandList}\r\n          />\r\n\r\n    </>\r\n\t);\r\n};\r\n\r\nexport default withRouter(CategoryList);\r\n","import React,{useEffect,useState} from 'react'; \r\nimport { useHandleFetch } from '../../hooks';\r\nimport { Select } from 'antd';\r\n\r\nconst { Option } = Select;\r\n\r\ninterface Props {\r\n  setTagIds?: any; \r\n}\r\n\r\n\r\nconst Tags = ({\r\n  setTagIds\r\n}: Props) => {\r\n  const [ options, setoptions ] = useState([]);\r\n  const [selectedOpions,setselectedOptions] = useState([]); \r\n  const [ tagState, handleTagListFetch ] = useHandleFetch({}, 'tagList');\r\n\r\n\tuseEffect(() => {\r\n\t\tconst setTags = async () => {\r\n\t\t\tconst tagListRes = await handleTagListFetch({\r\n\t\t\t\turlOptions: {\r\n\t\t\t\t\tparams: {\r\n\t\t\t\t\t\tisSubCategory: false\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\t// @ts-ignore\r\n\t\t\tif (tagListRes && tagListRes.length > 0) {\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\tconst tagOptions = tagListRes.map((tag) => {\r\n          return tag.name \r\n        });\r\n\t\t\t\tsetoptions(tagOptions);\r\n      }\r\n      \r\n\t\t};\r\n\r\n\t\tsetTags();\r\n  }, []);\r\n\r\n\r\n\r\n  const handleChange = (selectItems) => {\r\n    setselectedOptions(selectItems)\r\n\r\n    if (tagState.done && tagState.data.length > 0 && selectItems.length > 0) {\r\n\t\t\tconst selectedCategoryIds = selectItems.map((item) => {\r\n\t\t\t\tconst selectedcategory = tagState.data.find(\r\n\t\t\t\t\t(cat) => cat.name.toLowerCase() === item.toLowerCase()\r\n\t\t\t\t);\r\n\t\t\t\tif (selectedcategory) {\r\n\t\t\t\t\treturn selectedcategory.id;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\tsetTagIds(selectedCategoryIds);\r\n    }\r\n    \r\n\r\n  }\r\n\r\n\r\n  console.log('selectedOpions',selectedOpions);\r\n\r\n\r\n    return (\r\n        <>\r\n\r\n        {tagState.done && tagState.data.length > 0 && <Select\r\n        mode=\"multiple\"\r\n        placeholder=\"search tags\"\r\n        value={selectedOpions}\r\n        onChange={handleChange}\r\n        style={{ width: '100%' }}\r\n      >\r\n        {options.filter(o => !selectedOpions.includes(o)).map(item => (\r\n          <Select.Option key={item} value={item}>\r\n            {item}\r\n          </Select.Option>\r\n        ))}\r\n      </Select>}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Tags\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useHandleFetch } from '../../hooks';\r\nimport { Select } from 'antd';\r\n\r\ninterface Props {\r\n\tsetBrandId?: any;\r\n}\r\n\r\nconst { Option } = Select;\r\n\r\nconst Brands = ({ setBrandId }: Props) => {\r\n\tconst [ options, setoptions ] = useState([]);\r\n\tconst [ selectedBrandId, setSelectedBrandId ] = useState('');\r\n\tconst [ brandState, handleTagListFetch ] = useHandleFetch({}, 'brandList');\r\n\r\n\tfunction onChange(value) {\r\n\t\tsetSelectedBrandId(value);\r\n\t\tsetBrandId(value);\r\n\t\tconsole.log(`selected ${value}`);\r\n\t}\r\n\r\n\tfunction onBlur() {\r\n\t\tconsole.log('blur');\r\n\t}\r\n\r\n\tfunction onFocus() {\r\n\t\tconsole.log('focus');\r\n\t}\r\n\r\n\tfunction onSearch(val) {\r\n\t\tconsole.log('search:', val);\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tconst setBrands = async () => {\r\n\t\t\tconst brandListRes = await handleTagListFetch({});\r\n\r\n\t\t\t// @ts-ignore\r\n\t\t\tif (brandListRes && brandListRes.length > 0) {\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\tconst brandOptions = brandListRes.map((brand) => {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tvalue: brand.id,\r\n\t\t\t\t\t\tname: brand.name\r\n\t\t\t\t\t};\r\n\t\t\t\t});\r\n\t\t\t\tsetoptions(brandOptions);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tsetBrands();\r\n\t}, []);\r\n\r\n\treturn (\r\n\t\t<Select\r\n\t\t\tshowSearch\r\n\t\t\tstyle={{ width: 200 }}\r\n\t\t\tplaceholder='Select a Brand'\r\n\t\t\toptionFilterProp='children'\r\n\t\t\tonChange={onChange}\r\n\t\t\tonFocus={onFocus}\r\n\t\t\tonBlur={onBlur}\r\n\t\t\tonSearch={onSearch}\r\n\t\t\tfilterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n\t\t>\r\n\t\t\t{brandState.done &&\r\n\t\t\t\tbrandState.data.length > 0 &&\r\n\t\t\t\toptions.map((option) => {\r\n\t\t\t\t\treturn <Option value={option.value}>{option.name}</Option>;\r\n\t\t\t\t})}\r\n\t\t</Select>\r\n\t);\r\n};\r\n\r\nexport default Brands;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useFetch, useHandleFetch } from '../../hooks';\r\nimport { Checkbox, Input, Tree } from 'antd';\r\nconst CheckboxGroup = Checkbox.Group;\r\nconst { Search } = Input;\r\n\r\n\r\n\r\n\r\ninterface Props {\r\n\tsetcategoryIds?: any;\r\n}\r\n\r\nconst Categories = ({ setcategoryIds }: Props) => {\r\n\tconst [options, setoptions] = useState([]);\r\n\tconst [searchValue, setsearchValue] = useState('');\r\n\r\n\tconst [categoryState, handleCategoryListFetch] = useHandleFetch({}, 'categorySelectist');\r\n\r\n\tuseEffect(() => {\r\n\t\tconst setCategories = async () => {\r\n\t\t\tconst categoryListRes = await handleCategoryListFetch({});\r\n\r\n\t\t\t// @ts-ignore\r\n\t\t\tif (categoryListRes && categoryListRes.length > 0) {\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\tsetoptions(categoryListRes);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tsetCategories();\r\n\t}, []);\r\n\r\n\tconst onSelect = (selectedKeys, info) => {\r\n\t\tconsole.log('selectedKeys', selectedKeys, info);\r\n\t};\r\n\r\n\r\n\tconst onCheck = (checkedKeys, info) => {\r\n\t\tsetcategoryIds(checkedKeys);\r\n\t};\r\n\r\n\tconst onSearchChange = (e) => {\r\n\t\tsetsearchValue(e.target.value);\r\n\r\n\t\tif (e.target.value === '') {\r\n\t\t\tif (categoryState.data && categoryState.data.length > 0) {\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\tconst categoryNames = categoryState.data.map((cat) => cat.name);\r\n\t\t\t\tsetoptions(categoryNames);\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tconst newOptions =\r\n\t\t\t\toptions.length > 0\r\n\t\t\t\t\t? options.filter((option) => {\r\n\t\t\t\t\t\treturn option.toLowerCase().includes(searchValue.toLowerCase());\r\n\t\t\t\t\t})\r\n\t\t\t\t\t: [];\r\n\r\n\t\t\tsetoptions(newOptions);\r\n\t\t}\r\n\t};\r\n\r\n\tconsole.log('optons', options);\r\n\r\n\r\n\treturn (\r\n\t\t<div className='addProduct__categoryBoxContainer'>\r\n\t\t\t<div className='addProduct__categoryBoxContainer-searchBox'>\r\n\t\t\t\t<Search\r\n\t\t\t\t\twidth={'100%'}\r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\theight: '30px',\r\n\t\t\t\t\t\tborderRadius: '3px !important',\r\n\t\t\t\t\t\tborderColor: '#eee !important'\r\n\t\t\t\t\t}}\r\n\t\t\t\t\tsize='middle'\r\n\t\t\t\t\tplaceholder='category name'\r\n\t\t\t\t\tonSearch={(value) => console.log(value)}\r\n\t\t\t\t\tonChange={onSearchChange}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\r\n\t\t\t<div style={{\r\n\t\t\t\tmarginLeft: \"-20px\",\r\n\t\t\t}}>\r\n\t\t\t\t<Tree\r\n\r\n\t\t\t\t\tcheckable\r\n\t\t\t\t\tonSelect={onSelect}\r\n\t\t\t\t\tonCheck={onCheck}\r\n\t\t\t\t\ttreeData={options}\r\n\t\t\t\t\tdefaultExpandAll={true}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\r\n\r\n\t\t\t{/* <CheckboxGroup options={options} value={checkedList} onChange={onChange} /> */}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Categories;\r\n","import React from 'react';\r\nimport { Form, Input } from 'antd';\r\n\r\n\r\ninterface Props {\r\n    label?: string;\r\n    type?: string;\r\n    defaultValue?:string;\r\n    value?: string; \r\n    onChange?: any; \r\n    disabled?: boolean; \r\n    isError?: boolean; \r\n    errorString?: string; \r\n    name?:string;\r\n    size?: any; \r\n}\r\n\r\nconst Demo = ({ label, type, defaultValue, value, onChange, disabled, isError, errorString,  name, size='middle'}: Props) => {\r\n    return (\r\n        <>\r\n        {label && <h3 className='inputFieldLabel-small'>\r\n                {label}\r\n            </h3>}\r\n           \r\n            <Form.Item\r\n            validateStatus={isError ? \"error\" : \"\"}\r\n            // hasFeedback validateStatus=\"success\"\r\n            help={errorString}\r\n            // rules={[{ required: true }]}\r\n                >\r\n                     <Input\r\n                     size={size}\r\n                    allowClear \r\n                    name={name}\r\n                    disabled={disabled}\r\n                    value={value}\r\n                    onChange={onChange}\r\n                    className='inputclassName-small' />\r\n               \r\n            </Form.Item>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Demo; ","import React, { useState, useEffect } from 'react';\r\nimport { AutoComplete } from 'antd';\r\n\r\nimport InputSmall from '../../components/Field/InputSmall';\r\nimport { useFetch } from \"../../hooks\";\r\nimport {\r\n    DeleteOutlined\r\n} from '@ant-design/icons';\r\n\r\nconst Complete = ({ setAttributeList, attributeList, attribute }) => {\r\n\r\n    const [suggestedOptions, setsuggesteOptions] = useState([]);\r\n    const attributeLisState = useFetch([], [], 'attributeList', {});\r\n\r\n\r\n    const [attributeItem, setAttributeITem] = useState({\r\n        name: attribute.name,\r\n        value: attribute.value\r\n    })\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        const positionInAttribute = () => {\r\n            return attributeList.map(item => item.id).indexOf(attribute.id);\r\n        }\r\n\r\n        const index = positionInAttribute();\r\n\r\n        const updatedItem = Object.assign({}, attributeList[index], { ...attributeItem });\r\n        const updateAttributeList = [...attributeList.slice(0, index), updatedItem, ...attributeList.slice(index + 1)];\r\n        setAttributeList(updateAttributeList);\r\n\r\n    }, [attributeItem])\r\n\r\n\r\n    const handleAttributeDelete = () => {\r\n\r\n        const updateAttributeList = attributeList.filter(item => item.id !== attribute.id);\r\n        setAttributeList(updateAttributeList);\r\n    }\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        if (attributeLisState.data && Object.keys(attributeLisState.data).length > 0) {\r\n            const options = Object.keys(attributeLisState.data);\r\n            const manupulatedOptions = options.map(option => {\r\n                return {\r\n                    value: option\r\n                }\r\n            })\r\n            setsuggesteOptions(manupulatedOptions);\r\n        };\r\n    }, [attributeLisState.data]);\r\n\r\n\r\n\r\n\r\n\r\n\r\n    const handleAttributeSelect = (value) => {\r\n        console.log('handleAttributeSelect', value);\r\n\r\n        if (attributeLisState && Object.keys(attributeLisState.data).length > 0) {\r\n            if (attributeLisState.data[value]) {\r\n                setAttributeITem({\r\n                    ...attribute,\r\n                    name: value,\r\n                    value: attributeLisState.data[value]\r\n                })\r\n            }\r\n\r\n        }\r\n\r\n        else {\r\n            setAttributeITem({\r\n                ...attribute,\r\n                name: value\r\n            })\r\n        }\r\n\r\n\r\n    }\r\n\r\n    const handleAttributeValueChange = (e) => {\r\n        setAttributeITem({\r\n            ...attribute,\r\n            value: e.target.value\r\n        });\r\n    }\r\n\r\n    return (\r\n        <>\r\n\r\n            <div\r\n                key={attribute.id}\r\n                className='addProductGridContainer__item-body-variationCard-item-attribute-item'>\r\n                <div\r\n                    onClick={handleAttributeDelete}\r\n                    className='addProductGridContainer__item-body-variationCard-item-attribute-item-delete'>\r\n                    <DeleteOutlined />\r\n                </div>\r\n\r\n                <h3 className='inputFieldLabel-small'>\r\n                    Name\r\n                </h3>\r\n                <AutoComplete\r\n                    value={attribute.name}\r\n                    style={{ width: '100%' }}\r\n                    options={suggestedOptions}\r\n                    placeholder=\"attribute\"\r\n                    onChange={handleAttributeSelect}\r\n                    filterOption={(inputValue, suggestedOption) =>\r\n                        suggestedOption.value.toUpperCase().indexOf(inputValue.toUpperCase()) !== -1\r\n                    }\r\n                />\r\n\r\n                {attribute.name && (\r\n                    <>\r\n                        <div style={{ marginTop: '10px' }}></div>\r\n                        <InputSmall\r\n                            label='Value'\r\n                            value={attribute.value}\r\n                            name='value'\r\n                            onChange={handleAttributeValueChange}\r\n                        />\r\n                    </>\r\n                )}\r\n\r\n\r\n            </div>\r\n\r\n\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Complete;\r\n","import React, {useState} from 'react'; \r\nimport Attributes from \"./Attributes\";\r\nimport AddAttributeValues from \"../attribute/AddAttributeValues\";\r\nimport InputSmall from '../../components/Field/InputSmall';\r\nimport {  Button } from 'antd';\r\nimport {\r\n\r\n    PlusOutlined,\r\n    CheckOutlined\r\n} from '@ant-design/icons';\r\n\r\ninterface Props {\r\n    handleAddPricing: any; \r\n}\r\n\r\nconst Pricing = ({\r\n    handleAddPricing\r\n}: Props) => {\r\n\r\n    const [price, setprice] = useState({\r\n        regular: \"\",\r\n        offer: \"\"\r\n      });\r\n      const [stock, setStock] = useState({\r\n        available: \"\",\r\n        minimum: \"\"\r\n      });\r\n\r\n\r\n      const [attributeList, setAttributeList] = useState([]);\r\n\r\n      const handlePriceChange = e => {\r\n        const name = e.target.name;\r\n        const value = e.target.value;\r\n\r\n    \r\n        setprice({\r\n          ...price,\r\n          [name]: value\r\n        });\r\n      };\r\n    \r\n      const handleStockChange = e => {\r\n        const name = e.target.name;\r\n        const value = e.target.value;\r\n    \r\n        setStock({\r\n          ...stock,\r\n          [name]: value\r\n        });\r\n      };\r\n\r\n\r\n      const handleSavePricing = (e) => {\r\n\t\t  e.preventDefault(); \r\n\t\t  \r\n\t\t  if(attributeList.length > 0){\r\n\t\t\tconst attribute = {}; \r\n\r\n\t\t\tfor (let item of attributeList){\r\n\t\t\t\tattribute[item['name']] = item['value']\r\n\t\t\t}\r\n\r\n\r\n\t\t\tconst priceItem = {\r\n\t\t\t\tprice: price,\r\n\t\t\t\tstock: stock,\r\n\t\t\t\tattribute: attribute\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\r\n\t\t\tsetprice({\r\n\t\t\t\tregular: \"\",\r\n\t\t\t\toffer: \"\"\r\n\t\t\t})\r\n\t\t\tsetStock({ available: \"\",minimum: \"\"})\r\n\t\t\thandleAddPricing(priceItem);\r\n\t\t\tsetAttributeList([]);  \r\n\t\t  }\r\n\t\t  else {\r\n\t\t\tconst priceItem = {\r\n\t\t\t\tprice: price,\r\n\t\t\t\tstock: stock,\r\n\t\t\t\tattribute: {}\r\n\t\t\t}\r\n\r\n\t\t\tsetprice({\r\n\t\t\t\tregular: \"\",\r\n\t\t\t\toffer: \"\"\r\n\t\t\t})\r\n\t\t\tsetStock({ available: \"\",minimum: \"\"})\r\n\t\t\tsetAttributeList([]);  \r\n\t\t\thandleAddPricing(priceItem);\r\n\t\t  }\r\n         \r\n\t  }\r\n\t  \r\n\r\n\t  const handleAddAttribute = () => {\r\n\t\tsetAttributeList([...attributeList, {\r\n\t\t\tname: '',\r\n\t\t\tvalue: '',\r\n\t\t\tid: `${attributeList.length}`\r\n\t\t}])\r\n\t  }\r\n\r\n\r\n\t  const getiCreatePricingIsDisabled = () => {\r\n\t\t  if(!price.regular || !stock.available){\r\n\t\t\t  return true; \r\n\t\t  }\r\n\t\t  else return false; \r\n\t  }\r\n\r\n\t  console.log('attributeList',attributeList); \r\n\r\n\r\n    return (\r\n        <>\r\n            \t<div className='addProductGridContainer__item-body-variationCard'>\r\n\t\t\t\t\r\n\t\t\t\t<div className='addProductGridContainer__item-body-variationCard-left'>\r\n\r\n\t\t\t\t<div className='addProductGridContainer__item-body-variationCard-item'>\r\n\t\t\t\t<h4>\r\n\t\t\t\t\tPrice  \r\n\t\t\t\t</h4>\r\n\t\t\t\t<div className='addProductGridContainer__item-body-variationCard-item-container'>\r\n\t\t\t\t\t<div className='addProductGridContainer__item-body-variationCard-item-container-left'>\r\n\t\t\t\t\t<InputSmall \r\n\t\t\t   label='Regular  *'\r\n\t\t\t   value={price.regular}\r\n\t\t\t   name='regular'\r\n\t\t\t   onChange={handlePriceChange}\r\n\t\t\t   />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className='addProductGridContainer__item-body-variationCard-item-container-right'>\r\n                    <InputSmall \r\n                    size='small'\r\n\t\t\t   label='Offer'\r\n\t\t\t   value={price.offer}\r\n\t\t\t   name='offer'\r\n\t\t\t   onChange={handlePriceChange}\r\n\t\t\t   />\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\r\n\r\n\r\n\t\t\t<div className='addProductGridContainer__item-body-variationCard-item'>\r\n\t\t\t\t<h4>\r\n\t\t\t\t\tStock\r\n\t\t\t\t</h4>\r\n\t\t\t\t<div className='addProductGridContainer__item-body-variationCard-item-container'>\r\n\t\t\t\t\t<div className='addProductGridContainer__item-body-variationCard-item-container-left'>\r\n                    <InputSmall \r\n\t\t\t   label='Available  *'\r\n\t\t\t   value={stock.available}\r\n\t\t\t   name='available'\r\n\t\t\t   onChange={handleStockChange}\r\n\t\t\t   />\r\n\r\n\t\t\t\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className='addProductGridContainer__item-body-variationCard-item-container-right'>\r\n\t\t\t\t\r\n\t\t\t\t<InputSmall \r\n\t\t\t   label='Minimum'\r\n\t\t\t   value={stock.minimum}\r\n\t\t\t   name='minimum'\r\n\t\t\t   onChange={handleStockChange}\r\n\t\t\t   />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\r\n\t\t\t\t</div>\r\n\r\n\r\n\r\n\t\t\t\t<div className='addProductGridContainer__item-body-variationCard-right'> \r\n\t\t\t\t<div className='addProductGridContainer__item-body-variationCard-item'>\r\n\t\t\t\t<h4>\r\n\t\t\t\t\tAttributes\r\n\t\t\t\t</h4>\r\n\t\t\t\t<div className='addProductGridContainer__item-body-variationCard-item-attribute'>\r\n\t\t\t\r\n\t\t\t{attributeList.map(attribute => {\r\n\t\t\t\treturn \t<Attributes \r\n\t\t\t\tattribute={attribute}\r\n\t\t\t\t attributeList={attributeList} setAttributeList={setAttributeList}/> \r\n\t\t\t})}\r\n\t\t\t\t<Button size='small' \r\n\t\t\t\tonClick={handleAddAttribute}\r\n                style={{\r\n\t\t\t\t\twidth: '180px',\r\n\t\t\t\t\tminHeight:'75px',\r\n\t\t\t\t\tmarginTop:'0px'\r\n\t\t\t\t}} type=\"dashed\" icon={<PlusOutlined />}>Add Attribute</Button>\r\n\t\t\t\t</div>\r\n\t\t\t\r\n\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t</div>\r\n        </div>\r\n\r\n\r\n\t\t{/* <Button\r\n          // type=\"primary\"\r\n         \r\n          icon={<PlusOutlined />}\r\n          onClick={() => setAddNewCategoryVisible(true)}\r\n        >\r\n        Add New\r\n      </Button> */}\r\n\r\n\r\n\t\t<Button \r\n\t\tstyle={{\r\n\t\t\tmarginLeft: '10px'\r\n\t\t}}\r\n          onClick={handleSavePricing}\r\n\t\tdisabled={getiCreatePricingIsDisabled()}\r\n\t\t icon={<CheckOutlined />}> Add New Pricing </Button>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Pricing\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n\r\nimport { useHandleFetch } from '../../hooks';\r\n// import third party ui lib\r\nimport { Upload, message, Tooltip, notification, Modal, Tabs, Empty } from 'antd';\r\n\r\nimport {\r\n\tFileOutlined,\r\n\tInboxOutlined,\r\n\tRadiusUpleftOutlined,\r\n\tRadiusUprightOutlined,\r\n\tRadiusBottomleftOutlined,\r\n\tRadiusBottomrightOutlined,\r\n\tDeleteOutlined,\r\n\tEditOutlined,\r\n\tFileAddOutlined,\r\n\tPlusCircleOutlined,\r\n\tPlusOutlined,\r\n\tCheckCircleOutlined,\r\n\tCheckOutlined\r\n} from '@ant-design/icons';\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport MediaLibrary from \"../../components/MediaLibrary\";\r\nimport Tags from \"./Tags\";\r\nimport Brands from \"./Brands\";\r\nimport Categories from \"./Categories\";\r\nimport Pricing from \"./Pricing\";\r\n\r\n\r\nconst { TabPane } = Tabs;\r\n\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n\tname: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\n\r\nconst initialValues = {\r\n\tname: '',\r\n\tdescription: '',\r\n\tmodel: '',\r\n\tunit: '',\r\n\tregular: '',\r\n\toffer: '',\r\n\tavailable: '',\r\n\tminimum: '',\r\n\timage: [],\r\n\turl: '',\r\n\tcover: '',\r\n\tpricing: [],\r\n\r\n}\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t\tmessage: message || 'Product Created',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t\tmessage: message || 'Something Went Wrong',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n};\r\n\r\ninterface Props {\r\n\taddNewCategoryVisible: any;\r\n\tsetAddNewCategoryVisible: any;\r\n\tproductList?: any;\r\n\tsetProductList?: any;\r\n}\r\n\r\nconst AddNewProduct = ({ addNewCategoryVisible, setAddNewCategoryVisible, productList, setProductList }: Props) => {\r\n\r\n\tconst [addProductState, handleAddProductFetch] = useHandleFetch({}, 'addProduct');\r\n\tconst [visible, setvisible] = useState(false);\r\n\tconst [myImages, setmyImages] = useState(false);\r\n\tconst [myThumbnailImage, setmyThumbnailImage] = useState(false);\r\n\tconst [isparentCategoryChecked, setisparentcategoryChecked] = useState(true);\r\n\tconst [isModalOpenForThumbnail, setisModalOpenForThumbnail] = useState(false);\r\n\tconst [isModalOpenForImages, setisModalOpenForImages] = useState(false);\r\n\tconst [selectedParentId, setselectedParentId] = useState('');\r\n\tconst [categoryids, setcategoryIds] = useState([]);\r\n\tconst [tagIds, setTagIds] = useState([]);\r\n\tconst [brandId, setBrandId] = useState('');\r\n\tconst [pricing, setPricing] = useState([]);\r\n\r\n\r\n\r\n\r\n\tconst handleSubmit = async (values: any, actions: any) => {\r\n\t\t// @ts-ignore\r\n\t\tconst imagesIds = myImages ? myImages.map(image => {\r\n\t\t\treturn image.id;\r\n\t\t}) : [];\r\n\r\n\r\n\r\n\t\tconst addProductRes = await handleAddProductFetch({\r\n\r\n\t\t\tbody: {\r\n\t\t\t\tname: values.name,\r\n\t\t\t\tdescription: values.description,\r\n\t\t\t\tmodel: values.model,\r\n\t\t\t\tunit: values.unit,\r\n\t\t\t\tcategory: categoryids,\r\n\t\t\t\ttags: tagIds,\r\n\t\t\t\tbrand: brandId,\r\n\t\t\t\timage: imagesIds,\r\n\t\t\t\tcover: imagesIds[0] ? imagesIds[0] : '',\r\n\t\t\t\tpricing: pricing,\r\n\t\t\t\tparent: setselectedParentId\r\n\t\t\t},\r\n\t\t});\r\n\r\n\r\n\r\n\t\t// @ts-ignore\r\n\t\tif (addProductRes && addProductRes.status === 'ok') {\r\n\t\t\topenSuccessNotification();\r\n\r\n\t\t\tsetProductList([...productList, {\r\n\t\t\t\tid: addProductRes['id'] || '',\r\n\t\t\t\tkey: addProductRes['id'] || '',\r\n\t\t\t\tname: addProductRes['name'] || '',\r\n\t\t\t\tdescription: addProductRes['description'] || '',\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\t...addProductRes\r\n\t\t\t}])\r\n\t\t\tsetAddNewCategoryVisible(false)\r\n\t\t\tactions.resetForm();\r\n\t\t}\r\n\t\telse {\r\n\t\t\t// openErrorNotification();\r\n\t\t}\r\n\r\n\r\n\r\n\t\tactions.setSubmitting(false);\r\n\r\n\r\n\t};\r\n\r\n\r\n\r\n\tuseEffect(() => {\r\n\t\tif (!addProductState['isLoading']) {\r\n\t\t\tconst error = addProductState['error'];\r\n\t\t\tif (error['isError'] && Object.keys(error['error']).length > 0) {\r\n\r\n\r\n\t\t\t\tconst errors =\r\n\t\t\t\t\tObject.values(error['error']).length > 0\r\n\t\t\t\t\t\t? Object.values(error['error'])\r\n\t\t\t\t\t\t: [];\r\n\t\t\t\terrors.forEach((err, i) => {\r\n\t\t\t\t\tif (typeof err === 'string') {\r\n\t\t\t\t\t\topenErrorNotification(err)\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if (typeof err === 'object') {\r\n\t\t\t\t\t\tif (err && Object.keys(err).length > 0) {\r\n\t\t\t\t\t\t\tconst errs = Object.values(err);\r\n\t\t\t\t\t\t\terrs.forEach(err => {\r\n\t\t\t\t\t\t\t\topenErrorNotification(err)\r\n\t\t\t\t\t\t\t})\r\n\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t}, [addProductState])\r\n\r\n\r\n\tconst onSwitchChange = (checked: any) => {\r\n\t\tsetisparentcategoryChecked(checked)\r\n\t\tconsole.log(checked);\r\n\t};\r\n\r\n\r\n\tconst handleCancel = (e: any) => {\r\n\t\tsetAddNewCategoryVisible(false);\r\n\t};\r\n\r\n\r\n\tconst getisSubmitButtonDisabled = (values, isValid) => {\r\n\t\tif (!values.name || !(pricing.length > 0) || !isValid) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\r\n\tconst handleImagesDelete = (id) => {\r\n\t\t// @ts-ignore\r\n\t\tconst newImages = myImages && myImages.filter(image => {\r\n\t\t\treturn image.id !== id;\r\n\t\t})\r\n\r\n\t\tsetmyImages(newImages);\r\n\t}\r\n\r\n\tconst handleDeleteFromSelectedImage = () => {\r\n\r\n\t};\r\n\r\n\tconst handleThumbnailImageDelete = (id) => {\r\n\t\t// @ts-ignore\r\n\t\tconst newImages = myThumbnailImage && myThumbnailImage.filter(image => {\r\n\t\t\treturn image.id !== id;\r\n\t\t})\r\n\r\n\t\tif (newImages.length > 0) {\r\n\t\t\tsetmyThumbnailImage(newImages);\r\n\r\n\t\t}\r\n\t\telse setmyThumbnailImage(false);\r\n\t}\r\n\r\n\r\n\r\n\r\n\tconsole.log('addProductState', addProductState);\r\n\r\n\r\n\tconst onChangeSelect = (value) => {\r\n\t\tsetselectedParentId(value);\r\n\t\tconsole.log('selectedValue', value);\r\n\t}\r\n\r\n\r\n\tconst handleAddPricing = (priceItem) => {\r\n\r\n\t\tsetPricing([{\r\n\t\t\t...priceItem,\r\n\t\t\tid: pricing.length\r\n\t\t}, ...pricing])\r\n\t\tmessage.info('Product Pricing Added');\r\n\t}\r\n\r\n\r\n\tconst handleDeletePricing = (id) => {\r\n\t\tconst newPricing = pricing.filter(item => item.id !== id);\r\n\t\tsetPricing(newPricing);\r\n\t\tmessage.info('Product Pricing Deleted');\r\n\t}\r\n\r\n\r\n\tconsole.log('pricing', pricing);\r\n\r\n\tconst isCategoryInValid = () => {\r\n\t\tif (addProductState.error['error']['category'] && !categoryids && categoryids.length) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\telse if (categoryids && categoryids.length > 0) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\r\n\treturn (\r\n\t\t<Formik\r\n\t\t\tonSubmit={(values, actions) => handleSubmit(values, actions)}\r\n\t\t\tvalidationSchema={validationSchema}\r\n\t\t\tvalidateOnBlur={false}\r\n\t\t\tenableReinitialize={true}\r\n\t\t\tinitialValues={\r\n\t\t\t\t{ ...initialValues }\r\n\t\t\t}\r\n\t\t>\r\n\t\t\t{({\r\n\t\t\t\thandleChange,\r\n\t\t\t\tvalues,\r\n\t\t\t\thandleSubmit,\r\n\t\t\t\terrors,\r\n\t\t\t\tisValid,\r\n\t\t\t\tisSubmitting,\r\n\t\t\t\ttouched,\r\n\t\t\t\thandleBlur,\r\n\t\t\t\tsetFieldTouched,\r\n\t\t\t\thandleReset,\r\n\t\t\t}) => (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<Modal\r\n\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\ttop: '40px',\r\n\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\tbodyStyle={{\r\n\t\t\t\t\t\t\t\tmargin: 0,\r\n\t\t\t\t\t\t\t\tpadding: 0,\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\twidth={'70vw'}\r\n\t\t\t\t\t\t\ttitle=\"Add New Product\"\r\n\t\t\t\t\t\t\tvisible={addNewCategoryVisible}\r\n\t\t\t\t\t\t\tonOk={(e: any) => handleSubmit(e)}\r\n\t\t\t\t\t\t\tonCancel={handleCancel}\r\n\t\t\t\t\t\t\tokText='Create'\r\n\t\t\t\t\t\t\tokButtonProps={{\r\n\t\t\t\t\t\t\t\tloading: isSubmitting,\r\n\t\t\t\t\t\t\t\thtmlType: \"submit\",\r\n\t\t\t\t\t\t\t\tdisabled: getisSubmitButtonDisabled(values, isValid)\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\r\n\r\n\t\t\t\t\t\t\t<section className='addProductGridContainer'>\r\n\t\t\t\t\t\t\t\t<div className='addProductGridContainer__left'>\r\n\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__name'>\r\n\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__item-header'>\r\n\t\t\t\t\t\t\t\t\t\t\t<h3>\r\n\t\t\t\t\t\t\t\t\t\t\t\tProduct Information\r\n\t\t\t</h3>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<div className={values.name && values.name.length > 2 ? 'checkicon-active' : 'checkicon'}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<CheckCircleOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__item-body'>\r\n\t\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\t\tlabel='Title'\r\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.name}\r\n\t\t\t\t\t\t\t\t\t\t\t\tname='name'\r\n\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['name'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['name'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('name');\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\t\t\t\t\tlabel='Description'\r\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.description}\r\n\t\t\t\t\t\t\t\t\t\t\t\tname='description'\r\n\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.description && errors.description) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['description'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.description && errors.description) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['description'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('description');\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\t\tlabel='Model Number'\r\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.model}\r\n\t\t\t\t\t\t\t\t\t\t\t\tname='model'\r\n\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.model && errors.model) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['model'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.model && errors.model) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['model'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('model');\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\t\tlabel='Unit'\r\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.unit}\r\n\t\t\t\t\t\t\t\t\t\t\t\tname='unit'\r\n\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.unit && errors.unit) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['unit'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.unit && errors.unit) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['unit'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('unit');\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__price'>\r\n\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__item-header'>\r\n\t\t\t\t\t\t\t\t\t\t\t<h3>\r\n\t\t\t\t\t\t\t\t\t\t\t\tProduct Variation\r\n\t\t\t</h3>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<div className={pricing && pricing.length > 0 ? 'checkicon-active' : 'checkicon'}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<CheckCircleOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__item-body'>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<Tabs\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\ttype='card'\r\n\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<TabPane tab=\"Add Pricing\" key=\"1\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Pricing handleAddPricing={handleAddPricing} />\r\n\t\t\t\t\t\t\t\t\t\t\t\t</TabPane>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<TabPane tab=\"Pricing List\" key=\"2\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__item-body-pricingContainer'>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{pricing.length > 0 && pricing.map(item => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__item-body-pricingContainer-item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__item-body-pricingContainer-item-edit'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* <span>\r\n\t\t\t\t\t\t\t<EditOutlined />\r\n\t\t\t\t\t\t\t</span> */}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className='d' onClick={() => handleDeletePricing(item.id)}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<DeleteOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__item-body-pricingContainer-item-two'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<h3>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tPricing\r\n\t\t\t\t\t\t</h3>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__item-body-pricingContainer-item-body'>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{item.price && item.price.offer && (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<h6>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\toffer\r\n\t\t\t\t\t\t\t\t</h6>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<h4>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{item.price.offer}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</h4>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{item.price && item.price.regular && (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<h6>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tregular\r\n\t\t\t\t\t\t\t\t</h6>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<h4>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{item.price.regular}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</h4>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{item.stock && (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<h3>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tStock\r\n\t\t\t\t\t\t\t\t\t</h3>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__item-body-pricingContainer-item-body'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<h6>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tavailable\r\n\t\t\t\t\t\t\t\t\t\t</h6>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<h4>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{item.stock.available}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</h4>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<h6>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tminimum\r\n\t\t\t\t\t\t\t\t\t\t</h6>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<h4>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{item.stock.minimum}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</h4>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{item.attribute\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&& Object.keys(item.attribute).length > 0 && (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<h3>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tAttributes\r\n\t\t\t\t\t\t</h3>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__item-body-pricingContainer-item-body'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{item.attribute\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&& Object.keys(item.attribute).length > 0\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&& Object.keys(item.attribute).map(attributeItem => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<h6>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{attributeItem}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</h6>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<h4>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{item.attribute[attributeItem]}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</h4>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t})}\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{!(pricing.length > 0) && <div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\twidth: '100%',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdisplay: 'flex',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tjustifyContent: 'center'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Empty description='No Pricing added' image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</TabPane>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t</Tabs>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__item-body-container'>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__image'>\r\n\r\n\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__item-header'>\r\n\t\t\t\t\t\t\t\t\t\t\t<h3>\r\n\t\t\t\t\t\t\t\t\t\t\t\tImage\r\n\t\t\t</h3>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__item-body'>\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='aboutToUploadImagesContainer'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t{myImages &&\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tmyImages.length > 0 && myImages.map(image => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className='aboutToUploadImagesContainer__item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => handleImagesDelete(image.id)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='aboutToUploadImagesContainer__item-overlay'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<DeleteOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<img src={image.cover} alt={image.alt} />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t})}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetvisible(true);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetisModalOpenForImages(true);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetisModalOpenForThumbnail(false);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='aboutToUploadImagesContainer__uploadItem'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FileAddOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t{/* <h5>\r\n\t\t\t\t\t\t\t\t\t\t\t\t     Select From Library\r\n\t\t\t\t\t\t\t\t\t\t\t<     /h5> */}\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className='addProductGridContainer__right'>\r\n\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__category'>\r\n\r\n\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer-rightItemContainer'>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer-rightItemContainer-header'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<h3>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tCategories\r\n\t\t\t\t</h3>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Tooltip\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tcolor='red'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvisible={addProductState.error['error']['category'] && !(categoryids.length > 0)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tplacement=\"left\" title={'Select at least one category'}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div className={!(categoryids.length > 0)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t&& !addProductState.error['error']['category'] ? 'checkicon' : addProductState.error['error']['category'] ? 'checkicon-error' : 'checkicon-active'}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<CheckCircleOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Tooltip>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer-rightItemContainer-body'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Categories\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetcategoryIds={setcategoryIds} />\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__tag'>\r\n\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer-rightItemContainer'>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer-rightItemContainer-header'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<h3>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tTags\r\n\t\t\t\t</h3>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer-rightItemContainer-body'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Tags setTagIds={setTagIds} />\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__brand'>\r\n\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer-rightItemContainer'>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer-rightItemContainer-header'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<h3>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tBrands\r\n\t\t\t\t</h3>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer-rightItemContainer-body'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Brands setBrandId={setBrandId} />\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t</section>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\t\t\t\t\t\t</Modal>\r\n\r\n\t\t\t\t\t\t<MediaLibrary\r\n\t\t\t\t\t\t\tsetvisible={setvisible}\r\n\t\t\t\t\t\t\tvisible={visible}\r\n\t\t\t\t\t\t\tsetmyImages={setmyImages}\r\n\t\t\t\t\t\t\tmyImages={myImages}\r\n\t\t\t\t\t\t\tsetmyThumbnailImage={setmyThumbnailImage}\r\n\t\t\t\t\t\t\tisModalOpenForThumbnail={isModalOpenForThumbnail}\r\n\t\t\t\t\t\t\tisModalOpenForImages={isModalOpenForImages}\r\n\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</>\r\n\t\t\t\t)}\r\n\t\t</Formik>\r\n\r\n\r\n\r\n\r\n\t);\r\n};\r\n\r\nexport default AddNewProduct;\r\n\r\n\r\n\r\n\r\n/*\r\n\r\n\r\nProduct variation ---->\r\n\r\nPrice [title]\r\n\t[regular input field] [offer inputfield]\r\n\r\nStock [title]\r\n\t[available input field] [minimum inputfield]\r\n\r\ndefault [default can be set to true]\r\n\r\nattributes [title]\r\n\t[add attributes name]\r\n\t\t[add attrubutes value]\r\n\r\n\t[add attributes name]\r\n\t\t[add attrubutes value]\r\n\r\n\r\n\r\n*/","import React,{useState} from 'react';\r\nimport { Modal,notification   } from 'antd';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport {useHandleFetch} from '../../hooks';\r\nimport { CheckCircleOutlined } from '@ant-design/icons';\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n\tname: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\n\r\nconst openSuccessNotification = () => {\r\n\tnotification.success({\r\n\t  message: 'Product Updated',\r\n\t  description: '',\r\n\t  icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n  };\r\n\r\n\r\n  const openErrorNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t  message: message || 'Something Went Wrong',\r\n\t  description: '',\r\n\t  icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n  };\r\n\r\n\r\n\r\ninterface Props {\r\n\tcategory: any;\r\n\tsetvisible: any; \r\n\tvisible: any;\r\n\tsetProductList?: any; \r\n\tproductList?: any; \r\n}\r\n\r\nconst QuickEdit = ({ category, setvisible, visible,setProductList , productList}: Props) => {\r\n\tconst [updateProductState, handleUpdateProductFetch] = useHandleFetch({}, 'updateProduct');\r\n\r\n\tconst handleSubmit = async (values : any, actions : any) => {\r\n\t  const updateProductRes = await handleUpdateProductFetch({\r\n\t\turlOptions: {\r\n\t\t\tplaceHolders: {\r\n\t\t\t  id: values.id,\r\n\t\t\t}\r\n\t\t  },\r\n\t\tbody: {\r\n\t\t\tname: values.name,\r\n\t\t\tdescription: values.description,\r\n\t\t\tcategory: category.category,\r\n\t\t\tpricing: category.pricing\r\n\t\t},\r\n\t  });\r\n\r\n\t  // @ts-ignore\r\n\t  if(updateProductRes && updateProductRes.status === 'ok'){\r\n\t\topenSuccessNotification(); \r\n\r\n\t\tconst positionInAttribute = () => {\r\n            return productList.map(item => item.id).indexOf(category.id);\r\n          }\r\n\r\n          const index = positionInAttribute();\r\n\r\n\t\t  // @ts-ignore\r\n          const updatedItem = Object.assign({}, productList[index], { ...updateProductRes });\r\n          const updateProductList = [...productList.slice(0, index), updatedItem, ...productList.slice(index + 1)];\r\n          setProductList(updateProductList); \r\n\t\t\r\n\t  }\r\n\t  else {\r\n\t\topenErrorNotification();\r\n\t  }\r\n\t  console.log('updateProductRes',updateProductRes)\r\n\t\r\n\t  actions.setSubmitting(false);\r\n\t  setvisible(false)\r\n\t};\r\n\t\r\n\r\n\tconst handleCancel = (e: any) => {\r\n        setvisible(false);\r\n      };\r\n\r\n\r\n\t  const getisSubmitButtonDisabled = (values,isValid) => {\r\n\t\tif(!values.name || !isValid){\r\n\t\t\treturn true; \r\n\t\t}\r\n\t\treturn false; \r\n\t  }\r\n\r\n\treturn (\r\n\t\t<Formik\r\n\t\tonSubmit={(values, actions) => handleSubmit(values, actions)}\r\n\t\tvalidationSchema={validationSchema}\r\n\t\tvalidateOnBlur={false}\r\n\t\tenableReinitialize={true}\r\n\t\tinitialValues={\r\n\t\t  {...category}\r\n\t\t}\r\n\t  >\r\n\t\t{({\r\n\t\t  handleChange,\r\n\t\t  values,\r\n\t\t  handleSubmit,\r\n\t\t  errors,\r\n\t\t  isValid,\r\n\t\t  isSubmitting,\r\n\t\t  touched,\r\n\t\t  handleBlur,\r\n\t\t  setFieldTouched,\r\n\t\t  handleReset,\r\n\t\t}) => (\r\n\t\t\t<>\r\n\t\t\t<Modal\r\n\t\t\ttitle=\"Quick Edit\"\r\n\t\t\tvisible={visible}\r\n\t\t\tonOk={(e : any) => handleSubmit(e)}\r\n\t\t\tonCancel={handleCancel}\r\n\t\t\tokText='Update'\r\n\t\t\tokButtonProps={{\r\n\t\t\tloading: isSubmitting,\r\n\t\t\thtmlType: \"submit\",\r\n\t\t\tdisabled: getisSubmitButtonDisabled(values, isValid)\r\n\t\t\t}}\r\n  >\r\n            <Input \r\n\t\t\t   label='Title'\r\n\t\t\t   value={values.name}\r\n\t\t\t   name='name'\r\n\t\t\t   isError={(touched.name && errors.name) ||\r\n\t\t\t\t  (!isSubmitting && updateProductState.error['error']['name'])}\r\n\t\t\t  \r\n\t\t\t\t  errorString={(touched.name && errors.name) ||\r\n\t\t\t\t\t  (!isSubmitting && updateProductState.error['error']['name'])}\r\n\t\t\t   onChange={(e : any) => {\r\n\t\t\t\t  handleChange(e);\r\n\t\t\t\t  setFieldTouched('name');\r\n\t\t\t\t}}\r\n\t\t\t   />\r\n\r\n\r\n\t\t\t  <TextArea\r\n\t\t\t   label='Description' \r\n\t\t\t   value={values.description}\r\n\t\t\t   name='description'\r\n\t\t\t   isError={(touched.description && errors.description) ||\r\n\t\t\t\t  (!isSubmitting && updateProductState.error['error']['description'])}\r\n\t\t\t  \r\n\t\t\t\t  errorString={(touched.description && errors.description) ||\r\n\t\t\t\t\t  (!isSubmitting && updateProductState.error['error']['description'])}\r\n\t\t\t   onChange={(e : any) => {\r\n\t\t\t\t  handleChange(e);\r\n\t\t\t\t  setFieldTouched('description');\r\n\t\t\t\t}}\r\n\t\t\t\t />\r\n              </Modal>\r\n\t\t\t</>\r\n\t\t  )}\r\n\t  </Formik>\r\n\t);\r\n};\r\n\r\n\r\nexport default QuickEdit;\r\n","import React, {useState, useEffect} from 'react';\r\nimport {withRouter} from 'react-router-dom';\r\nimport {notification,Empty, Table, Badge, Menu, Dropdown, Space, Tag,Button, Input,Tooltip, Popconfirm   } from 'antd';\r\nimport { CheckCircleOutlined, PlusOutlined, EditOutlined, DeleteOutlined,EditFilled } from '@ant-design/icons';\r\n\r\n\r\n/// import hooks\r\nimport { useFetch, useHandleFetch } from \"../../hooks\";\r\n\r\n// import components\r\nimport { DataTableSkeleton } from \"../../components/Placeholders\";\r\nimport AddNewProduct from \"./AddNewProduct\";\r\nimport QuickEdit from \"./QuickEdit\";\r\n\r\nconst { Column, ColumnGroup } = Table;\r\nconst { Search } = Input;\r\n\r\n\r\n\r\nconst openSuccessNotification = () => {\r\n\tnotification.success({\r\n\t  message: 'Product Deleted',\r\n\t  description: '',\r\n\t  icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n  };\r\n\r\n\r\n\r\n\r\n\r\ninterface myTableProps {\r\n  data: any; \r\n  setProductList: any; \r\n} \r\n\r\n\r\nconst MyTable = ({data,setProductList}: myTableProps) => {\r\n    const [visible,setvisible] = useState(false);   \r\n    const [activeCategoryForEdit,setactiveCategoryForEdit] = useState(false); \r\n    const [deleteProductState, handleDeleteProductFetch] = useHandleFetch({}, 'deleteProduct');\r\n\r\n\r\n      const handleDeleteProduct = async (id) => {\r\n        const deleteProductRes = await handleDeleteProductFetch({\r\n          urlOptions: {\r\n            placeHolders: {\r\n              id,\r\n            }\r\n            }\r\n          });\r\n\r\n          // @ts-ignore\r\n          if(deleteProductRes && deleteProductRes.status === 'ok'){\r\n            openSuccessNotification(); \r\n            const newProductList =  data.filter(item => item.id !== id);\r\n            setProductList(newProductList); \r\n          }\r\n\r\n          console.log('deleteProductRes',deleteProductRes)\r\n      }\r\n      \r\n\r\n    return (\r\n        <>\r\n        <Table \r\n        // expandable={{\r\n        //     expandedRowRender: record => <p style={{ margin: 0 }}>{record.name}</p>,\r\n        //     rowExpandable: record => record.name !== 'Not Expandable',\r\n        //   }}\r\n        // bordered={true}\r\n        size='small'\r\n        // pagination={false}\r\n        dataSource={data}\r\n        >\r\n            <Column \r\n          title=\"\"\r\n           dataIndex=\"cover\"\r\n            key=\"id\" \r\n            // width={'100px'}\r\n            \r\n           className='classnameofthecolumn'\r\n\r\n            render={cover => (\r\n                <>\r\n                <img src={cover} alt='cover img' style={{\r\n                    height: '40px',\r\n                    width: '40px',\r\n                    objectFit: \"contain\",\r\n                    borderRadius:'3px'\r\n                }} />\r\n                </>\r\n              )}\r\n            />\r\n          <Column\r\n           title=\"Name\" \r\n           dataIndex=\"name\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n         \r\n            />\r\n\r\n<Column\r\n           title=\"Offer Price\" \r\n           dataIndex=\"offerPrice\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n         \r\n            />\r\n\r\n\r\n<Column\r\n           title=\"Price\" \r\n           dataIndex=\"price\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n         \r\n            />\r\n\r\n<Column\r\n           title=\"Unit\" \r\n           dataIndex=\"unit\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n         \r\n            />\r\n          {/* <Column \r\n          \r\n          className='classnameofthecolumn'\r\n\r\n          title=\"Product\" dataIndex=\"product\" key=\"product\" /> */}\r\n\r\n          {/* <Column \r\n          \r\n          className='classnameofthecolumn'\r\n\r\n          title=\"Sub Category\" dataIndex=\"subCategory\" key=\"subCategory\" /> */}\r\n        \r\n        {/* <Column\r\n          title=\"Tags\"\r\n          dataIndex=\"tags\"\r\n          key=\"tags\"\r\n          render={tags => (\r\n            <>\r\n              {tags.map((tag : any) => (\r\n                <Tag color=\"blue\" key={tag}>\r\n                  {tag}\r\n                </Tag>\r\n              ))}\r\n            </>\r\n          )}\r\n        /> */}\r\n        <Column\r\n        \r\n        className='classnameofthecolumn'\r\n          title=\"\"\r\n          key=\"action\"\r\n          align='right'\r\n          render={(text, record : any) => (\r\n            <Space size=\"middle\">\r\n            \r\n               <Tooltip \r\n              \r\n               placement=\"top\" title='Quick Edit Product'>\r\n              <span className='iconSize' onClick={() => {\r\n                setvisible(true)\r\n                setactiveCategoryForEdit(record); \r\n              }}> \r\n              <EditOutlined />\r\n            \r\n              </span>\r\n               </Tooltip>\r\n\r\n\r\n             \r\n               <Popconfirm \r\n               \r\n               onConfirm={() => handleDeleteProduct(record.id)}\r\n               title=\"Are you sure？\" okText=\"Yes\" cancelText=\"No\">\r\n               <span \r\n            className='iconSize iconSize-danger'\r\n            > \r\n            <DeleteOutlined/>\r\n           </span>\r\n       \r\n  </Popconfirm>\r\n\r\n\r\n            \r\n             \r\n            </Space>\r\n          )}\r\n        />\r\n      </Table>\r\n\r\n    \r\n\r\n    {activeCategoryForEdit &&   <QuickEdit \r\n    productList={data}\r\n    setProductList={setProductList}\r\n    setvisible={setvisible}\r\n    visible={visible}\r\n    category={activeCategoryForEdit}/>}\r\n    \r\n    \r\n    </>\r\n    )\r\n}\r\n\r\n\r\ninterface Props {\r\n    history: any; \r\n}\r\n\r\nconst ProductList = ({history}: Props) => {\r\n\r\n\r\n\r\n  const [productList,setProductList] = useState([]); \r\n\r\n  const [productState, handleProductListFetch] = useHandleFetch({}, 'productList');\r\n\r\n\r\n  useEffect(()=>{\r\n   const setProducts = async () => {\r\n     const products = await handleProductListFetch({}); \r\n     // @ts-ignore\r\n     setProductList(products); \r\n   }\r\n   setProducts(); \r\n  },[])\r\n\r\n  \r\n  const [addNewCategoryVisible,setAddNewCategoryVisible] = useState(false);   \r\n\r\n\r\n  console.log('productState',productState)\r\n\r\n\r\n  const handleSearch = (value) => {\r\n    if(productState.data.length > 0 ){\r\n      const newProductList = productState.data.filter(item => item.name.includes(value)); \r\n      setProductList(newProductList); \r\n    }\r\n     \r\n  }\r\n\r\n\r\n\treturn (\r\n\t\t<>\r\n    {/* <h2 className='containerPageTitle'>\r\n      Categories\r\n    </h2> */}\r\n    <div className='categoryListContainer'>\r\n            <div className='categoryListContainer__header'>\r\n           \r\n\r\n          <div className='categoryListContainer__header-searchBar'>\r\n          <h2 className='categoryListContainer__header-title'>\r\n            Products\r\n            </h2>\r\n\r\n\r\n          <Search\r\n            enterButton={false}\r\n            className='searchbarClassName'\r\n          placeholder=\"search products..\"\r\n          onSearch={value => handleSearch(value)}\r\n          // style={{ width: 300 }}\r\n        />\r\n          </div>\r\n            <Button\r\n          // type=\"primary\"\r\n          className='btnPrimaryClassNameoutline'\r\n          icon={<PlusOutlined />}\r\n          onClick={() => setAddNewCategoryVisible(true)}\r\n        >\r\n        Add New\r\n      </Button>\r\n\r\n\r\n            </div>\r\n\r\n            <div className='categoryListContainer__afterHeader'>\r\n            {/* <Search\r\n      placeholder=\"search categories..\"\r\n      size=\"large\"\r\n      onSearch={value => console.log(value)}\r\n      style={{ width: 300 }}\r\n    /> */}\r\n            </div>\r\n\r\n    \r\n\t\t\t<div className='categoryListContainer__categoryList'>\r\n        {productState.done && productList.length > 0 && <MyTable \r\n        setProductList={setProductList}\r\n        data={productList} />}\r\n        {productState.isLoading && <DataTableSkeleton />}\r\n        {productState.done && !(productList.length > 0) && (\r\n\t\t\t<div style={{\r\n\t\t\t\tmarginTop: '200px'\r\n\t\t\t}}>\r\n\t\t\t\t<Empty description='No Products found'  image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n\t\t\t</div>\r\n\t\t)}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\r\n\r\n{productState.done && \r\n    <AddNewProduct \r\n          addNewCategoryVisible={addNewCategoryVisible} \r\n          setAddNewCategoryVisible={setAddNewCategoryVisible}\r\n          productList={productState.data}\r\n          setProductList={setProductList}\r\n\r\n          \r\n           />}\r\n\r\n      \r\n\r\n        \r\n    </>\r\n\t);\r\n};\r\n\r\nexport default withRouter(ProductList);\r\n","import React,{useState} from 'react';\r\nimport { Modal, notification  } from 'antd';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport {useHandleFetch} from '../../hooks';\r\nimport { CheckCircleOutlined, PlusOutlined, EditOutlined, DeleteOutlined,EditFilled } from '@ant-design/icons';\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n\tname: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n\tdescription: Yup.string().label('Description').required('Description is required')\r\n});\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t  message: message || 'Tag Updated',\r\n\t  description: '',\r\n\t  icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n  };\r\n\r\n\r\n  const openErrorNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t  message: message || 'Something Went Wrong',\r\n\t  description: '',\r\n\t  icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n  };\r\n\r\n\r\n\r\n\r\n\r\ninterface Props {\r\n\tcategory: any;\r\n\tsetvisible: any; \r\n\tvisible: any;\r\n\ttagList: any; \r\nsetTagList: any; \r\n\r\n}\r\n\r\nconst QuickEdit = ({ category, setvisible, visible, tagList, setTagList }: Props) => {\r\n\tconst [updateTagState, handleUpdateCategoryFetch] = useHandleFetch({}, 'updateTag');\r\n\r\n\tconst handleSubmit = async (values : any, actions : any) => {\r\n\t  const updateTagRes = await handleUpdateCategoryFetch({\r\n\t\turlOptions: {\r\n\t\t\tplaceHolders: {\r\n\t\t\t  id: values.id,\r\n\t\t\t}\r\n\t\t  },\r\n\t\tbody: {\r\n\t\t\tname: values.name,\r\n\t\t\tdescription: values.description,\r\n\t\t},\r\n\t  });\r\n\t\r\n\t \t  // @ts-ignore\r\n\t\t   if(updateTagRes && updateTagRes.status === 'ok'){\r\n\t\t\topenSuccessNotification(); \r\n\t\r\n\t\t\tconst positionInTag = () => {\r\n\t\t\t\treturn tagList.map(item => item.id).indexOf(category.id);\r\n\t\t\t  }\r\n\t\r\n\t\t\t  const index = positionInTag();\r\n\t\r\n\t\t\t  // @ts-ignore\r\n\t\t\t  const updatedItem = Object.assign({}, tagList[index], { ...updateTagRes });\r\n\t\t\t  const updateTagList = [...tagList.slice(0, index), updatedItem, ...tagList.slice(index + 1)];\r\n\t\t\t  setTagList(updateTagList); \r\n\t\t\t\r\n\t\t  }\r\n\t\t  else {\r\n\t\t\topenErrorNotification();\r\n\t\t  }\r\n\t\t\r\n\t\t  actions.setSubmitting(false);\r\n\t\t  setvisible(false)\r\n\t};\r\n\t\r\n\r\n\tconst handleCancel = (e: any) => {\r\n        setvisible(false);\r\n      };\r\n\r\n\r\n\t  const getisSubmitButtonDisabled = (values,isValid) => {\r\n\t\tif(!values.name || !values.description || !isValid){\r\n\t\t\treturn true; \r\n\t\t}\r\n\t\treturn false; \r\n\t  }\r\n\r\n\treturn (\r\n\t\t<Formik\r\n\t\tonSubmit={(values, actions) => handleSubmit(values, actions)}\r\n\t\tvalidationSchema={validationSchema}\r\n\t\tvalidateOnBlur={false}\r\n\t\tenableReinitialize={true}\r\n\t\tinitialValues={\r\n\t\t  {...category}\r\n\t\t}\r\n\t  >\r\n\t\t{({\r\n\t\t  handleChange,\r\n\t\t  values,\r\n\t\t  handleSubmit,\r\n\t\t  errors,\r\n\t\t  isValid,\r\n\t\t  isSubmitting,\r\n\t\t  touched,\r\n\t\t  handleBlur,\r\n\t\t  setFieldTouched,\r\n\t\t  handleReset,\r\n\t\t}) => (\r\n\t\t\t<>\r\n\t\t\t<Modal\r\n\t\t\ttitle=\"Quick Edit\"\r\n\t\t\tvisible={visible}\r\n\t\t\tonOk={(e : any) => handleSubmit(e)}\r\n\t\t\tonCancel={handleCancel}\r\n\t\t\tokText='Update'\r\n\t\t\tokButtonProps={{\r\n\t\t\tloading: isSubmitting,\r\n\t\t\thtmlType: \"submit\",\r\n\t\t\tdisabled: getisSubmitButtonDisabled(values, isValid)\r\n\t\t\t}}\r\n  >\r\n  <Input \r\n\t\t\t   label='Title'\r\n\t\t\t   value={values.name}\r\n\t\t\t   name='name'\r\n\t\t\t   isError={(touched.name && errors.name) ||\r\n\t\t\t\t  (!isSubmitting && updateTagState.error['error']['name'])}\r\n\t\t\t  \r\n\t\t\t\t  errorString={(touched.name && errors.name) ||\r\n\t\t\t\t\t  (!isSubmitting && updateTagState.error['error']['name'])}\r\n\t\t\t   onChange={(e : any) => {\r\n\t\t\t\t  handleChange(e);\r\n\t\t\t\t  setFieldTouched('name');\r\n\t\t\t\t}}\r\n\t\t\t   />\r\n\t\t\t  <TextArea\r\n\t\t\t   label='Description' \r\n\t\t\t   value={values.description}\r\n\t\t\t   name='description'\r\n\t\t\t   isError={(touched.description && errors.description) ||\r\n\t\t\t\t  (!isSubmitting && updateTagState.error['error']['description'])}\r\n\t\t\t  \r\n\t\t\t\t  errorString={(touched.description && errors.description) ||\r\n\t\t\t\t\t  (!isSubmitting && updateTagState.error['error']['description'])}\r\n\t\t\t   onChange={(e : any) => {\r\n\t\t\t\t  handleChange(e);\r\n\t\t\t\t  setFieldTouched('description');\r\n\t\t\t\t}}\r\n\t\t\t\t />\r\n  </Modal>\r\n\t\t\t  \r\n\t\t\t</>\r\n\t\t  )}\r\n\t  </Formik>\r\n\t);\r\n};\r\n\r\n\r\nexport default QuickEdit;\r\n","import React, { useState, useEffect } from 'react';\r\n\r\n// import third party ui lib\r\nimport { Empty, Popconfirm, Upload, message, Switch, Select, Button, notification, Table, Space, Input as CoolInput, Tooltip, Modal } from 'antd';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n\r\n\r\nimport {\r\n\tFileOutlined,\r\n\tInboxOutlined,\r\n\tRadiusUpleftOutlined,\r\n\tRadiusUprightOutlined,\r\n\tRadiusBottomleftOutlined,\r\n\tRadiusBottomrightOutlined,\r\n\tPlusOutlined,\r\n\tDeleteOutlined,\r\n\tEditOutlined,\r\n\tCheckCircleOutlined\r\n} from '@ant-design/icons';\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n\r\n\r\n/// import hooks\r\nimport { useFetch, useHandleFetch } from \"../../hooks\";\r\n\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport { DataTableSkeleton } from \"../../components/Placeholders\";\r\nimport QuickEdit from \"./QuickEdit\"\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t\tmessage: message || 'Tag Created',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t\tmessage: message || 'Something Went Wrong',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n};\r\n\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n\tname: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\n\r\nconst initialValues = {\r\n\tname: '',\r\n\tdescription: ''\r\n}\r\n\r\n\r\nconst { Column, ColumnGroup } = Table;\r\nconst { Search } = CoolInput;\r\n\r\n\r\n\r\nconst MyTable = ({ data, setTagList }) => {\r\n\tconst [visible, setvisible] = useState(false);\r\n\tconst [activeCategoryForEdit, setactiveCategoryForEdit] = useState(false);\r\n\tconst [deleteTagState, handleDeleteTagFetch] = useHandleFetch({}, 'deleteTag');\r\n\r\n\r\n\r\n\tconst handleDeleteTag = async (id) => {\r\n\t\tconst deleteTagRes = await handleDeleteTagFetch({\r\n\t\t\turlOptions: {\r\n\t\t\t\tplaceHolders: {\r\n\t\t\t\t\tid,\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tconsole.log('deleteTagRes', deleteTagRes)\r\n\r\n\r\n\t\t// @ts-ignore\r\n\t\tif (deleteTagRes && deleteTagRes.status === 'ok') {\r\n\t\t\topenSuccessNotification('Deleted Tag');\r\n\t\t\tconst newtagList = data.filter(item => item.id !== id);\r\n\t\t\tsetTagList(newtagList);\r\n\t\t}\r\n\r\n\r\n\t}\r\n\r\n\r\n\tconst handleOk = (e: any) => {\r\n\t\tsetvisible(false);\r\n\r\n\t};\r\n\r\n\tconst handleCancel = (e: any) => {\r\n\t\tsetvisible(false);\r\n\t};\r\n\r\n\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Table\r\n\t\t\t\t// expandable={{\r\n\t\t\t\t//     expandedRowRender: record => <p style={{ margin: 0 }}>{record.name}</p>,\r\n\t\t\t\t//     rowExpandable: record => record.name !== 'Not Expandable',\r\n\t\t\t\t//   }}\r\n\t\t\t\t// bordered={true}\r\n\t\t\t\tsize='small'\r\n\t\t\t\t// pagination={false}\r\n\t\t\t\tdataSource={data}\r\n\t\t\t>\r\n\r\n\t\t\t\t<Column\r\n\t\t\t\t\ttitle=\"Name\"\r\n\t\t\t\t\tdataIndex=\"name\"\r\n\t\t\t\t\tkey=\"id\"\r\n\t\t\t\t\tclassName='classnameofthecolumn'\r\n\r\n\t\t\t\t/>\r\n\r\n\t\t\t\t<Column\r\n\t\t\t\t\ttitle=\"Description\"\r\n\t\t\t\t\tdataIndex=\"description\"\r\n\t\t\t\t\tkey=\"id\"\r\n\t\t\t\t\tclassName='classnameofthecolumn'\r\n\r\n\t\t\t\t/>\r\n\t\t\t\t<Column\r\n\r\n\t\t\t\t\tclassName='classnameofthecolumn'\r\n\t\t\t\t\ttitle=\"\"\r\n\t\t\t\t\tkey=\"action\"\r\n\t\t\t\t\talign='right'\r\n\t\t\t\t\trender={(text, record: any) => (\r\n\t\t\t\t\t\t<Space size=\"middle\">\r\n\r\n\t\t\t\t\t\t\t<Tooltip placement=\"top\" title='Quick Edit Tag'>\r\n\t\t\t\t\t\t\t\t<span className='iconSize' onClick={() => {\r\n\t\t\t\t\t\t\t\t\tsetvisible(true)\r\n\t\t\t\t\t\t\t\t\tsetactiveCategoryForEdit(record);\r\n\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t<EditOutlined />\r\n\r\n\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t</Tooltip>\r\n\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t<Popconfirm\r\n\r\n\t\t\t\t\t\t\t\tonConfirm={() => handleDeleteTag(record.id)}\r\n\t\t\t\t\t\t\t\ttitle=\"Are you sure？\" okText=\"Yes\" cancelText=\"No\">\r\n\r\n\t\t\t\t\t\t\t\t<span\r\n\t\t\t\t\t\t\t\t\tclassName='iconSize iconSize-danger'\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t<DeleteOutlined />\r\n\t\t\t\t\t\t\t\t</span>\r\n\r\n\t\t\t\t\t\t\t</Popconfirm>\r\n\r\n\r\n\r\n\r\n\r\n\t\t\t\t\t\t</Space>\r\n\t\t\t\t\t)}\r\n\t\t\t\t/>\r\n\t\t\t</Table>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\t\t\t{activeCategoryForEdit && <QuickEdit\r\n\t\t\t\ttagList={data}\r\n\t\t\t\tsetTagList={setTagList}\r\n\t\t\t\tsetvisible={setvisible}\r\n\t\t\t\tvisible={visible}\r\n\t\t\t\tcategory={activeCategoryForEdit} />}\r\n\t\t</>\r\n\t)\r\n}\r\n\r\n\r\n\r\n\r\ninterface Props { }\r\n\r\nconst TagList = ({ }: Props) => {\r\n\r\n\r\n\tconst [tagList, setTagList] = useState([]);\r\n\r\n\tconst [tagState, handleTagListFetch] = useHandleFetch({}, 'tagList');\r\n\r\n\r\n\tuseEffect(() => {\r\n\t\tconst setTags = async () => {\r\n\t\t\tconst tags = await handleTagListFetch({});\r\n\t\t\t// @ts-ignore\r\n\t\t\tsetTagList(tags);\r\n\t\t}\r\n\t\tsetTags();\r\n\t}, [])\r\n\r\n\r\n\tconst [addTagState, handleAddTagFetch] = useHandleFetch({}, 'addTag');\r\n\tconst [addNewCategoryVisible, setAddNewCategoryVisible] = useState(false);\r\n\r\n\r\n\r\n\tconst handleSubmit = async (values: any, actions: any) => {\r\n\t\tconst addTagRes = await handleAddTagFetch({\r\n\t\t\turlOptions: {\r\n\t\t\t\tplaceHolders: {\r\n\t\t\t\t\tid: values.id,\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tbody: {\r\n\t\t\t\tname: values.name,\r\n\t\t\t\tdescription: values.description,\r\n\t\t\t},\r\n\t\t});\r\n\t\tconsole.log('addTagRes', addTagRes)\r\n\r\n\t\t// @ts-ignore\r\n\t\tif (addTagRes && addTagRes.status === 'ok') {\r\n\t\t\topenSuccessNotification();\r\n\r\n\t\t\tsetTagList([...tagList, {\r\n\t\t\t\tid: addTagRes['id'] || '',\r\n\t\t\t\tkey: addTagRes['id'] || '',\r\n\t\t\t\tname: addTagRes['name'] || '',\r\n\t\t\t\tdescription: addTagRes['description'] || '',\r\n\t\t\t}])\r\n\t\t\tactions.resetForm();\r\n\t\t}\r\n\t\tactions.setSubmitting(false);\r\n\r\n\t};\r\n\r\n\r\n\r\n\tconst getisSubmitButtonDisabled = (values, isValid) => {\r\n\t\tif (!values.name || !isValid) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\r\n\tconst handleOkAddNewCategory = (e: any) => {\r\n\t\tsetAddNewCategoryVisible(false);\r\n\r\n\t};\r\n\r\n\tconst handleCancelAddNewCategory = (e: any) => {\r\n\t\tsetAddNewCategoryVisible(false);\r\n\t};\r\n\r\n\r\n\r\n\tconst handleSearch = (value) => {\r\n\t\tif (tagState.data.length > 0) {\r\n\t\t\tconst newTagList = tagState.data.filter(item => item.name.includes(value));\r\n\t\t\tsetTagList(newTagList);\r\n\t\t}\r\n\r\n\t}\r\n\r\n\r\n\r\n\r\n\treturn (\r\n\t\t<div className='site-layout-background' style={{ padding: '30px 20px 30px 20px', minHeight: 360 }}>\r\n\t\t\t<div className='addproductSectionTitleContainer'>\r\n\t\t\t\t<h2 className='addprouctSectionTitle'>Add Tag</h2>\r\n\t\t\t</div>\r\n\t\t\t<div className='addproductSectionContainer addproductSectionContainer-tags'>\r\n\t\t\t\t<div className='addproductSection addproductSection-left'>\r\n\t\t\t\t\t<Formik\r\n\t\t\t\t\t\tonSubmit={(values, actions) => handleSubmit(values, actions)}\r\n\t\t\t\t\t\tvalidationSchema={validationSchema}\r\n\t\t\t\t\t\tvalidateOnBlur={false}\r\n\t\t\t\t\t\tenableReinitialize={true}\r\n\t\t\t\t\t\tinitialValues={\r\n\t\t\t\t\t\t\t{ ...initialValues }\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{({\r\n\t\t\t\t\t\t\thandleChange,\r\n\t\t\t\t\t\t\tvalues,\r\n\t\t\t\t\t\t\thandleSubmit,\r\n\t\t\t\t\t\t\terrors,\r\n\t\t\t\t\t\t\tisValid,\r\n\t\t\t\t\t\t\tisSubmitting,\r\n\t\t\t\t\t\t\ttouched,\r\n\t\t\t\t\t\t\thandleBlur,\r\n\t\t\t\t\t\t\tsetFieldTouched,\r\n\t\t\t\t\t\t\thandleReset,\r\n\r\n\t\t\t\t\t\t}) => (\r\n\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\tlabel='Title'\r\n\t\t\t\t\t\t\t\t\t\tvalue={values.name}\r\n\t\t\t\t\t\t\t\t\t\tname='name'\r\n\t\t\t\t\t\t\t\t\t\tisError={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addTagState.error['error']['name'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\terrorString={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addTagState.error['error']['name'])}\r\n\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('name');\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\t\t\tlabel='Description'\r\n\t\t\t\t\t\t\t\t\t\tvalue={values.description}\r\n\t\t\t\t\t\t\t\t\t\tname='description'\r\n\t\t\t\t\t\t\t\t\t\tisError={(touched.description && errors.description) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addTagState.error['error']['description'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\terrorString={(touched.description && errors.description) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addTagState.error['error']['description'])}\r\n\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('description');\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\ttype='primary'\r\n\t\t\t\t\t\t\t\t\t\tonClick={(e: any) => handleSubmit(e)}\r\n\t\t\t\t\t\t\t\t\t\tdisabled={getisSubmitButtonDisabled(values, isValid)}\r\n\t\t\t\t\t\t\t\t\t\tloading={isSubmitting}\r\n\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\tCreate\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t</Formik>\r\n\r\n\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className='addproductSection addproductSection-right'>\r\n\r\n\t\t\t\t\t<div className='categoryListContainer'>\r\n\t\t\t\t\t\t<div className='categoryListContainer__header'>\r\n\r\n\r\n\t\t\t\t\t\t\t<div className='categoryListContainer__header-searchBar-tag'>\r\n\t\t\t\t\t\t\t\t{/* <h2 className='categoryListContainer__header-title'>\r\n            Brand\r\n            </h2> */}\r\n\r\n\r\n\t\t\t\t\t\t\t\t<Search\r\n\t\t\t\t\t\t\t\t\tenterButton={false}\r\n\t\t\t\t\t\t\t\t\tclassName='searchbarClassName'\r\n\t\t\t\t\t\t\t\t\tplaceholder=\"search tags..\"\r\n\t\t\t\t\t\t\t\t\tonSearch={value => handleSearch(value)}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t{/* <Button\r\n          // type=\"primary\"\r\n          className='btnPrimaryClassNameoutline'\r\n          icon={<PlusOutlined />}\r\n          onClick={() => setAddNewCategoryVisible(true)}\r\n        >\r\n        Add New\r\n            \r\n            </Button> */}\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t<div className='categoryListContainer__afterHeader'>\r\n\t\t\t\t\t\t\t{/* <Search\r\n      placeholder=\"search categories..\"\r\n      size=\"large\"\r\n      onSearch={value => console.log(value)}\r\n      style={{ width: 300 }}\r\n    /> */}\r\n\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\t\t\t\t\t\t<div className='categoryListContainer__categoryList'>\r\n\t\t\t\t\t\t\t{tagState.done && tagList.length > 0 && <MyTable\r\n\t\t\t\t\t\t\t\tsetTagList={setTagList}\r\n\t\t\t\t\t\t\t\tdata={tagList} />}\r\n\t\t\t\t\t\t\t{tagState.isLoading && <DataTableSkeleton />}\r\n\r\n\r\n\t\t\t\t\t\t\t{tagState.done && !(tagList.length > 0) && (\r\n\t\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\t\tmarginTop: '50px'\r\n\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t<Empty description='No Tags found' image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default TagList;\r\n","import React from 'react'\r\n\r\ninterface Props {\r\n\r\n}\r\n\r\nconst AddNewTag = (props: Props) => {\r\n    return (\r\n        <div>\r\n            AddNewTag\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddNewTag\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n\r\nimport { useHandleFetch } from '../../hooks';\r\n// import third party ui lib\r\nimport { Upload, message, Switch, Select, Button, notification, Modal, Empty, Form } from 'antd';\r\n\r\nimport {\r\n\tFileOutlined,\r\n\tInboxOutlined,\r\n\tRadiusUpleftOutlined,\r\n\tRadiusUprightOutlined,\r\n\tRadiusBottomleftOutlined,\r\n\tRadiusBottomrightOutlined,\r\n\tDeleteOutlined,\r\n\tFileAddOutlined,\r\n\tCheckCircleOutlined\r\n} from '@ant-design/icons';\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\n\r\n\r\nconst { Option } = Select;\r\n\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n\tfirstName: Yup.string()\r\n\t\t.label('First name')\r\n\t\t.required()\r\n\t\t.min(2, 'First name must have at least 2 characters '),\r\n\tlastName: Yup.string()\r\n\t\t.label('Lastname')\r\n\t\t.required()\r\n\t\t.min(2, 'Last name must have at least 2 characters '),\r\n\tphone: Yup.string()\r\n\t\t.required('Please tell us your mobile number.')\r\n\t\t.max(13, 'Please enter a valid mobile number.'),\r\n\tpassword: Yup.string()\r\n\t\t.label('Password')\r\n\t\t.required()\r\n\t\t.min(6, 'Password must have at least 6 characters'),\r\n\taddress1: Yup.string()\r\n\t\t.label('Address line 1')\r\n\t\t.required()\r\n\t\t.min(3, 'Address line 1 must have at least 3 characters '),\r\n\r\n\temail: Yup.string().label('Email').email('Please enter a valid email'),\r\n});\r\n\r\n\r\n\r\n\r\nconst initialValues = {\r\n\tphone: '',\r\n\temail: '',\r\n\tfirstName: '',\r\n\tlastName: '',\r\n\taddress1: '',\r\n\taddress2: '',\r\n\tzipCode: '',\r\n\tpassword: ''\r\n};\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t\tmessage: message || 'Tag Created',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t\tmessage: message || 'Something Went Wrong',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n};\r\n\r\n\r\n\r\n\r\n\r\ninterface Props {\r\n\taddNewCategoryVisible: any;\r\n\tsetAddNewCategoryVisible: any;\r\n\tcustomerList?: any;\r\n\tsetCustomerList?: any;\r\n}\r\n\r\nconst AddNewCategory = ({ addNewCategoryVisible, setAddNewCategoryVisible, customerList, setCustomerList }: Props) => {\r\n\r\n\tconst [addCustomerState, handleAddCustomerFetch] = useHandleFetch({}, 'addCustomer');\r\n\tconst [selectedCountryValue, setselectedCountryValue] = useState('');\r\n\tconst [selectedCityValue, setselectedCityValue] = useState('');\r\n\r\n\tconst [countryOptions, setcountryOptions] = useState([]);\r\n\tconst [cityOptions, setcityOptions] = useState([]);\r\n\r\n\tconst [countryListState, handleCountryListFetch] = useHandleFetch(\r\n\t\t[],\r\n\t\t'countryList'\r\n\t);\r\n\r\n\tconst [cityListState, handleCityListFetch] = useHandleFetch([], 'cityList');\r\n\r\n\tconst [countryList, setCountryList] = useState([]);\r\n\tconst [cityList, setCityList] = useState([]);\r\n\r\n\r\n\r\n\r\n\tconst handleSubmit = async (values: any, actions: any) => {\r\n\r\n\t\tconst addCustomerRes = await handleAddCustomerFetch({\r\n\r\n\t\t\tbody: {\r\n\t\t\t\tphone: values.phone,\r\n\t\t\t\temail: values.email,\r\n\t\t\t\tpassword: values.password,\r\n\t\t\t\taddress1: values.address1,\r\n\t\t\t\taddress2: values.address2,\r\n\t\t\t\tfirstName: values.firstName,\r\n\t\t\t\tlastName: values.lastName,\r\n\t\t\t\tcountry: selectedCountryValue,\r\n\t\t\t\tcity: selectedCityValue,\r\n\t\t\t},\r\n\t\t});\r\n\r\n\r\n\t\t// @ts-ignore\r\n\t\tif (addCustomerRes && addCustomerRes.status === 'ok') {\r\n\t\t\topenSuccessNotification();\r\n\r\n\t\t\tsetCustomerList([...customerList, {\r\n\t\t\t\tid: addCustomerRes['id'] || '',\r\n\t\t\t\tkey: addCustomerRes['id'] || '',\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\t...addCustomerRes\r\n\t\t\t}])\r\n\t\t\tsetAddNewCategoryVisible(false);\r\n\t\t\tactions.resetForm();\r\n\t\t}\r\n\t\telse {\r\n\t\t\topenErrorNotification();\r\n\t\t}\r\n\r\n\r\n\r\n\t\tactions.setSubmitting(false);\r\n\t};\r\n\r\n\r\n\r\n\tconst onChangeCity = (value) => {\r\n\t\tsetselectedCityValue(value);\r\n\t}\r\n\r\n\tconst onChangeCountry = (value) => {\r\n\t\tsetselectedCountryValue(value);\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tconst setCountries = async () => {\r\n\t\t\tconst CountryListRes = await handleCountryListFetch({});\r\n\r\n\t\t\t// @ts-ignore\r\n\t\t\tif (CountryListRes && CountryListRes.length > 0) {\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\tconst countryOptions = CountryListRes.map((country) => {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tvalue: country.name,\r\n\t\t\t\t\t\tname: country.name\r\n\t\t\t\t\t};\r\n\t\t\t\t});\r\n\t\t\t\tsetcountryOptions(countryOptions);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tsetCountries();\r\n\t}, []);\r\n\r\n\r\n\tuseEffect(() => {\r\n\t\tconst setCities = async () => {\r\n\t\t\tconst cityListRes = await handleCityListFetch({\r\n\t\t\t\turlOptions: {\r\n\t\t\t\t\tplaceHolders: {\r\n\t\t\t\t\t\tcountry: selectedCountryValue,\r\n\t\t\t\t\t},\r\n\t\t\t\t},\r\n\t\t\t});\r\n\r\n\t\t\t// @ts-ignore\r\n\t\t\tif (cityListRes && cityListRes.length > 0) {\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\tconst cityOptions = cityListRes.map((city) => {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tvalue: city.name,\r\n\t\t\t\t\t\tname: city.name\r\n\t\t\t\t\t};\r\n\t\t\t\t});\r\n\t\t\t\tsetcityOptions(cityOptions);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tsetCities();\r\n\t}, [selectedCountryValue]);\r\n\r\n\r\n\r\n\r\n\tconst handleCancel = (e: any) => {\r\n\t\tsetAddNewCategoryVisible(false);\r\n\t};\r\n\r\n\r\n\tconst getisSubmitButtonDisabled = (values, isValid) => {\r\n\t\tif (!isValid ||\r\n\t\t\t!values.firstName ||\r\n\t\t\t!values.lastName ||\r\n\t\t\t!values.password ||\r\n\t\t\t!values.phone ||\r\n\t\t\t!values.address1) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\treturn (\r\n\t\t<Formik\r\n\t\t\tonSubmit={(values, actions) => handleSubmit(values, actions)}\r\n\t\t\tvalidationSchema={validationSchema}\r\n\t\t\tvalidateOnBlur={false}\r\n\t\t\tenableReinitialize={true}\r\n\t\t\tinitialValues={\r\n\t\t\t\t{ ...initialValues }\r\n\t\t\t}\r\n\t\t>\r\n\t\t\t{({\r\n\t\t\t\thandleChange,\r\n\t\t\t\tvalues,\r\n\t\t\t\thandleSubmit,\r\n\t\t\t\terrors,\r\n\t\t\t\tisValid,\r\n\t\t\t\tisSubmitting,\r\n\t\t\t\ttouched,\r\n\t\t\t\thandleBlur,\r\n\t\t\t\tsetFieldTouched,\r\n\t\t\t\thandleReset,\r\n\t\t\t}) => (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<Modal\r\n\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\ttop: '40px'\r\n\t\t\t\t\t\t\t}}\r\n\r\n\r\n\r\n\t\t\t\t\t\t\tbodyStyle={{\r\n\t\t\t\t\t\t\t\tmargin: '0',\r\n\t\t\t\t\t\t\t\tpadding: '10px'\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\ttitle=\"Add New Customer\"\r\n\t\t\t\t\t\t\tvisible={addNewCategoryVisible}\r\n\t\t\t\t\t\t\tonOk={(e: any) => handleSubmit(e)}\r\n\t\t\t\t\t\t\tonCancel={handleCancel}\r\n\t\t\t\t\t\t\tokText='Create'\r\n\t\t\t\t\t\t\tokButtonProps={{\r\n\t\t\t\t\t\t\t\tloading: isSubmitting,\r\n\t\t\t\t\t\t\t\thtmlType: \"submit\",\r\n\t\t\t\t\t\t\t\tdisabled: getisSubmitButtonDisabled(values, isValid)\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\r\n\r\n\t\t\t\t\t\t\t<div className='dubbleRowInputs'>\r\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\tlabel='First Name'\r\n\t\t\t\t\t\t\t\t\t\tvalue={values.firstName}\r\n\t\t\t\t\t\t\t\t\t\tname='firstName'\r\n\t\t\t\t\t\t\t\t\t\tisError={(touched.firstName && errors.firstName) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['firstName'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\terrorString={(touched.firstName && errors.firstName) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['firstName'])}\r\n\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('firstName');\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\tlabel='Last Name'\r\n\t\t\t\t\t\t\t\t\t\tvalue={values.lastName}\r\n\t\t\t\t\t\t\t\t\t\tname='lastName'\r\n\t\t\t\t\t\t\t\t\t\tisError={(touched.lastName && errors.lastName) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['lastName'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\terrorString={(touched.lastName && errors.lastName) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['lastName'])}\r\n\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('lastName');\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t<div className='dubbleRowInputs'>\r\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\tlabel='Phone'\r\n\t\t\t\t\t\t\t\t\t\tvalue={values.phone}\r\n\t\t\t\t\t\t\t\t\t\tname='phone'\r\n\t\t\t\t\t\t\t\t\t\tisError={(touched.phone && errors.phone) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['phone'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\terrorString={(touched.phone && errors.phone) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['phone'])}\r\n\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('phone');\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\tlabel='Email'\r\n\t\t\t\t\t\t\t\t\t\tvalue={values.email}\r\n\t\t\t\t\t\t\t\t\t\tname='email'\r\n\t\t\t\t\t\t\t\t\t\tisError={(touched.email && errors.email) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['email'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\terrorString={(touched.email && errors.email) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['email'])}\r\n\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('email');\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\tmarginRight: '10px'\r\n\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\tlabel='Password'\r\n\t\t\t\t\t\t\t\t\tvalue={values.password}\r\n\t\t\t\t\t\t\t\t\tname='password'\r\n\t\t\t\t\t\t\t\t\tisError={(touched.password && errors.password) ||\r\n\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['password'])}\r\n\r\n\t\t\t\t\t\t\t\t\terrorString={(touched.password && errors.password) ||\r\n\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['password'])}\r\n\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\tsetFieldTouched('password');\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t<div className='dubbleRowInputs'>\r\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\t\t\t\tCountry\r\n\t\t\t\t\t\t\t\t\t</h3>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t<Form.Item\r\n\t\t\t\t\t\t\t\t\t\tvalidateStatus={(addCustomerState.error['error']['country']) ? \"error\" : \"\"}\r\n\t\t\t\t\t\t\t\t\t\thelp={addCustomerState.error['error']['country']}\r\n\t\t\t\t\t\t\t\t\t// noStyle={true}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t<Select\r\n\t\t\t\t\t\t\t\t\t\t\tnotFoundContent={<Empty description='No Country Found' image={Empty.PRESENTED_IMAGE_SIMPLE} />}\r\n\t\t\t\t\t\t\t\t\t\t\tshowSearch\r\n\t\t\t\t\t\t\t\t\t\t\tstyle={{ width: '100%' }}\r\n\t\t\t\t\t\t\t\t\t\t\tplaceholder='Select a Country'\r\n\t\t\t\t\t\t\t\t\t\t\toptionFilterProp='children'\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={onChangeCountry}\r\n\t\t\t\t\t\t\t\t\t\t\tfilterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t{countryListState.done &&\r\n\t\t\t\t\t\t\t\t\t\t\t\tcountryListState.data.length > 0 &&\r\n\t\t\t\t\t\t\t\t\t\t\t\tcountryOptions.map((option) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn <Option value={option.value}>{option.name}</Option>;\r\n\t\t\t\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t\t\t</Select>\r\n\r\n\t\t\t\t\t\t\t\t\t</Form.Item>\r\n\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\t\t\t\tCity\r\n                                    </h3>\r\n\t\t\t\t\t\t\t\t\t<Form.Item\r\n\t\t\t\t\t\t\t\t\t\t// noStyle={true}\r\n\t\t\t\t\t\t\t\t\t\tvalidateStatus={(addCustomerState.error['error']['city']) ? \"error\" : \"\"}\r\n\t\t\t\t\t\t\t\t\t\thelp={addCustomerState.error['error']['city']}\r\n\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t<Select\r\n\t\t\t\t\t\t\t\t\t\t\tclassName='selectClassName'\r\n\t\t\t\t\t\t\t\t\t\t\tnotFoundContent={<Empty description='First Select a Country' image={Empty.PRESENTED_IMAGE_SIMPLE} />}\r\n\t\t\t\t\t\t\t\t\t\t\tshowSearch\r\n\t\t\t\t\t\t\t\t\t\t\tstyle={{ width: '100%' }}\r\n\t\t\t\t\t\t\t\t\t\t\tplaceholder='Select a city'\r\n\t\t\t\t\t\t\t\t\t\t\toptionFilterProp='children'\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={onChangeCity}\r\n\t\t\t\t\t\t\t\t\t\t\tfilterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t{cityListState.done &&\r\n\t\t\t\t\t\t\t\t\t\t\t\tcityListState.data.length > 0 &&\r\n\t\t\t\t\t\t\t\t\t\t\t\tcityOptions.map((option) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn <Option value={option.value}>{option.name}</Option>;\r\n\t\t\t\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t\t\t</Select>\r\n\t\t\t\t\t\t\t\t\t</Form.Item>\r\n\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\tmarginTop: '12px'\r\n\t\t\t\t\t\t\t}}></div>\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t<div className='dubbleRowInputs'>\r\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\tlabel='Address'\r\n\t\t\t\t\t\t\t\t\t\tvalue={values.address1}\r\n\t\t\t\t\t\t\t\t\t\tname='address1'\r\n\t\t\t\t\t\t\t\t\t\tisError={(touched.address1 && errors.address1) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['address1'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\terrorString={(touched.address1 && errors.address1) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['address1'])}\r\n\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('address1');\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\tlabel='More specific address'\r\n\t\t\t\t\t\t\t\t\t\tvalue={values.address2}\r\n\t\t\t\t\t\t\t\t\t\tname='address2'\r\n\t\t\t\t\t\t\t\t\t\tisError={(touched.address2 && errors.address2) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['address2'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\terrorString={(touched.address2 && errors.address2) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['address2'])}\r\n\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('address2');\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\t\t\t\t\t\t</Modal>\r\n\r\n\t\t\t\t\t</>\r\n\t\t\t\t)}\r\n\t\t</Formik>\r\n\r\n\r\n\r\n\r\n\t);\r\n};\r\n\r\nexport default AddNewCategory;\r\n","import React,{useState, useEffect} from 'react';\r\nimport { Modal, Select,notification  } from 'antd';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\nimport { PlusOutlined, EditOutlined, DeleteOutlined,EditFilled, CheckCircleOutlined } from '@ant-design/icons';\r\n\r\n\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport {useHandleFetch} from '../../hooks';\r\n\r\n\r\nconst { Option } = Select;\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    firstName: Yup.string()\r\n      .label('Firstname')\r\n      .required()\r\n      .min(2, 'First name must have at least 2 characters '),\r\n    lastName: Yup.string()\r\n      .label('Lastname')\r\n      .required()\r\n      .min(2, 'Lastname must have at least 2 characters '),\r\n    phone: Yup.string()\r\n      .required('Please tell us your mobile number.')\r\n      .max(13, 'Please enter a valid mobile number.'),\r\n    password: Yup.string()\r\n      .label('Password')\r\n      .required()\r\n      .min(6, 'Password must have at least 6 characters'),\r\n    address1: Yup.string()\r\n      .label('Address line 1')\r\n      .required()\r\n      .min(3, 'Address line 1 must have at least 3 characters '),\r\n  \r\n    email: Yup.string().label('Email').email('Please enter a valid email'),\r\n  });\r\n\r\n\r\n\r\n  \r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t  message: message || 'Tag Created',\r\n\t  description: '',\r\n\t  icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n  };\r\n\r\n\r\n  const openErrorNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t  message: message || 'Something Went Wrong',\r\n\t  description: '',\r\n\t  icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n  };\r\n\r\n\r\n\r\n\r\n\r\n\r\ninterface Props {\r\n\tcustomer: any;\r\n\tsetvisible: any; \r\n\tvisible: any;\r\n\tcustomerList?: any; \r\n\tsetCustomerList?:any\r\n\r\n}\r\n\r\nconst QuickEdit = ({ customer, setvisible, visible, customerList, setCustomerList }: Props) => {\r\n\tconst [updateCustomerState, handleUpdateCustomerFetch] = useHandleFetch({}, 'updateCustomer');\r\n\r\n\r\n\tconst [selectedCountryValue,setselectedCountryValue] = useState(''); \r\n    const [selectedCityValue,setselectedCityValue] = useState(''); \r\n\r\n    const [countryOptions,setcountryOptions] = useState([]); \r\n    const [cityOptions,setcityOptions] = useState([]); \r\n\r\n    const [countryListState, handleCountryListFetch] = useHandleFetch(\r\n        [],\r\n        'countryList'\r\n      );\r\n    \r\n      const [cityListState, handleCityListFetch] = useHandleFetch([], 'cityList');\r\n    \r\n      const [countryList, setCountryList] = useState([]);\r\n      const [cityList, setCityList] = useState([]);\r\n\r\n\r\n\r\n\r\n\tconst handleSubmit = async (values : any, actions : any) => {\r\n\t  const updateCustomerRes = await handleUpdateCustomerFetch({\r\n\t\turlOptions: {\r\n\t\t\tplaceHolders: {\r\n\t\t\t  id: values.id,\r\n\t\t\t}\r\n\t\t  },\r\n\t\tbody: {\r\n\t\t\tphone: values.phone,\r\n            email: values.email,\r\n            password: values.password,\r\n            address1: values.address1,\r\n            address2: values.address2,\r\n            firstName: values.firstName,\r\n            lastName: values.lastName,\r\n            country: selectedCountryValue,\r\n            city: selectedCityValue,\r\n\t\t},\r\n\t  });\r\n\t\r\n\r\n\t   \t  // @ts-ignore\r\n\t\t\t if(updateCustomerRes && updateCustomerRes.status === 'ok'){\r\n\t\t\t\topenSuccessNotification(); \r\n\t\t\r\n\t\t\t\tconst positionInTag = () => {\r\n\t\t\t\t\treturn customerList.map(item => item.id).indexOf(customer.id);\r\n\t\t\t\t  }\r\n\t\t\r\n\t\t\t\t  const index = positionInTag();\r\n\t\t\r\n\t\t\t\t  // @ts-ignore\r\n\t\t\t\t  const updatedItem = Object.assign({}, tagList[index], { ...updateCustomerRes });\r\n\t\t\t\t  const updateTagList = [...customerList.slice(0, index), updatedItem, ...customerList.slice(index + 1)];\r\n\t\t\t\t  setCustomerList(updateTagList); \r\n\t\t\t\t\r\n\t\t\t  }\r\n\t\t\t  else {\r\n\t\t\t\topenErrorNotification();\r\n\t\t\t  }\r\n\t\t\t\r\n\t\t\t  actions.setSubmitting(false);\r\n\t\t\t  setvisible(false)\r\n\t};\r\n\t\r\n\r\n\t\r\n    const onChangeCity = (value) => {\r\n        setselectedCityValue(value); \r\n    }\r\n\r\n    const onChangeCountry = (value) => {\r\n        setselectedCountryValue(value); \r\n    }\r\n    \r\n\tuseEffect(() => {\r\n\t\tconst setCountries = async () => {\r\n\t\t\tconst CountryListRes = await handleCountryListFetch({});\r\n\r\n\t\t\t// @ts-ignore\r\n\t\t\tif (CountryListRes && CountryListRes.length > 0) {\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\tconst countryOptions = CountryListRes.map((country) => {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tvalue: country.name,\r\n\t\t\t\t\t\tname: country.name\r\n\t\t\t\t\t};\r\n\t\t\t\t});\r\n\t\t\t\tsetcountryOptions(countryOptions);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tsetCountries();\r\n    }, []);\r\n    \r\n\r\n    useEffect(() => {\r\n\t\tconst setCities = async () => {\r\n\t\t\tconst cityListRes = await handleCityListFetch({\r\n                urlOptions: {\r\n                    placeHolders: {\r\n                      country: selectedCountryValue,\r\n                    },\r\n                  },\r\n            });\r\n\r\n\t\t\t// @ts-ignore\r\n\t\t\tif (cityListRes && cityListRes.length > 0) {\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\tconst cityOptions = cityListRes.map((city) => {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tvalue: city.name,\r\n\t\t\t\t\t\tname: city.name\r\n\t\t\t\t\t};\r\n\t\t\t\t});\r\n\t\t\t\tsetcityOptions(cityOptions);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tsetCities();\r\n    }, [selectedCountryValue]);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\tconst handleCancel = (e: any) => {\r\n        setvisible(false);\r\n      };\r\n\r\n\r\n\r\n\t  const getisSubmitButtonDisabled = (values,isValid) => {\r\n\t\tif(!isValid ||\r\n            !values.firstName ||\r\n            !values.lastName ||\r\n            !values.password ||\r\n            !values.phone ||\r\n            !values.address1){\r\n\t\t\treturn true; \r\n\t\t}\r\n\t\treturn false; \r\n\t  }\r\n\r\n\treturn (\r\n\t\t<Formik\r\n\t\tonSubmit={(values, actions) => handleSubmit(values, actions)}\r\n\t\tvalidationSchema={validationSchema}\r\n\t\tvalidateOnBlur={false}\r\n\t\tenableReinitialize={true}\r\n\t\tinitialValues={\r\n\t\t  {...customer}\r\n\t\t}\r\n\t  >\r\n\t\t{({\r\n\t\t  handleChange,\r\n\t\t  values,\r\n\t\t  handleSubmit,\r\n\t\t  errors,\r\n\t\t  isValid,\r\n\t\t  isSubmitting,\r\n\t\t  touched,\r\n\t\t  handleBlur,\r\n\t\t  setFieldTouched,\r\n\t\t  handleReset,\r\n\t\t}) => (\r\n\t\t\t<>\r\n\t\t\t<Modal\r\n\t\t\ttitle=\"Quick Edit\"\r\n\t\t\tvisible={visible}\r\n\t\t\tonOk={(e : any) => handleSubmit(e)}\r\n\t\t\tonCancel={handleCancel}\r\n\t\t\tokText='Update'\r\n\t\t\tokButtonProps={{\r\n\t\t\tloading: isSubmitting,\r\n\t\t\thtmlType: \"submit\",\r\n\t\t\tdisabled: getisSubmitButtonDisabled(values, isValid)\r\n\t\t\t}}\r\n\t\t\tbodyStyle={{\r\n                margin: '0',\r\n                padding: '10px'\r\n            }}\r\n  >\r\n      <div className='dubbleRowInputs'>\r\n         <div className='dubbleRowInputs__item'>\r\n         <Input \r\n\t\t\t   label='First Name'\r\n\t\t\t   value={values.firstName}\r\n\t\t\t   name='firstName'\r\n\t\t\t   isError={(touched.firstName && errors.firstName) ||\r\n\t\t\t\t  (!isSubmitting && updateCustomerState.error['error']['firstName'])}\r\n\t\t\t  \r\n\t\t\t\t  errorString={(touched.firstName && errors.firstName) ||\r\n\t\t\t\t\t  (!isSubmitting && updateCustomerState.error['error']['firstName'])}\r\n\t\t\t   onChange={(e : any) => {\r\n\t\t\t\t  handleChange(e);\r\n\t\t\t\t  setFieldTouched('firstName');\r\n\t\t\t\t}}\r\n\t\t\t   />\r\n         </div>\r\n         <div className='dubbleRowInputs__item'>\r\n         <Input \r\n\t\t\t   label='Last Name'\r\n\t\t\t   value={values.lastName}\r\n\t\t\t   name='lastName'\r\n\t\t\t   isError={(touched.lastName && errors.lastName) ||\r\n\t\t\t\t  (!isSubmitting && updateCustomerState.error['error']['lastName'])}\r\n\t\t\t  \r\n\t\t\t\t  errorString={(touched.lastName && errors.lastName) ||\r\n\t\t\t\t\t  (!isSubmitting && updateCustomerState.error['error']['lastName'])}\r\n\t\t\t   onChange={(e : any) => {\r\n\t\t\t\t  handleChange(e);\r\n\t\t\t\t  setFieldTouched('lastName');\r\n\t\t\t\t}}\r\n\t\t\t   />\r\n         </div>\r\n\r\n\r\n\r\n\r\n            </div>\r\n\r\n\t\t\t \r\n\r\n            <div className='dubbleRowInputs'>\r\n         <div className='dubbleRowInputs__item'>\r\n         <Input \r\n\t\t\t   label='Phone'\r\n\t\t\t   value={values.phone}\r\n\t\t\t   name='phone'\r\n\t\t\t   isError={(touched.phone && errors.phone) ||\r\n\t\t\t\t  (!isSubmitting && updateCustomerState.error['error']['phone'])}\r\n\t\t\t  \r\n\t\t\t\t  errorString={(touched.phone && errors.phone) ||\r\n\t\t\t\t\t  (!isSubmitting && updateCustomerState.error['error']['phone'])}\r\n\t\t\t   onChange={(e : any) => {\r\n\t\t\t\t  handleChange(e);\r\n\t\t\t\t  setFieldTouched('phone');\r\n\t\t\t\t}}\r\n\t\t\t   />\r\n         </div>\r\n         <div className='dubbleRowInputs__item'>\r\n         <Input \r\n\t\t\t   label='Email'\r\n\t\t\t   value={values.email}\r\n\t\t\t   name='email'\r\n\t\t\t   isError={(touched.email && errors.email) ||\r\n\t\t\t\t  (!isSubmitting && updateCustomerState.error['error']['email'])}\r\n\t\t\t  \r\n\t\t\t\t  errorString={(touched.email && errors.email) ||\r\n\t\t\t\t\t  (!isSubmitting && updateCustomerState.error['error']['email'])}\r\n\t\t\t   onChange={(e : any) => {\r\n\t\t\t\t  handleChange(e);\r\n\t\t\t\t  setFieldTouched('email');\r\n\t\t\t\t}}\r\n\t\t\t   />\r\n         </div>\r\n\r\n\r\n\r\n\r\n            </div>\r\n\r\n            \r\n\r\n\r\n    \r\n<div className='dubbleRowInputs'>\r\n         <div className='dubbleRowInputs__item'>\r\n         <h3 className='inputFieldLabel'>\r\n                Country\r\n            </h3>\r\n         <Select\r\n\t\t\tshowSearch\r\n\t\t\tstyle={{ width: '100%' }}\r\n\t\t\tplaceholder='Select a Country'\r\n\t\t\toptionFilterProp='children'\r\n\t\t\tdefaultValue={customer && customer.country}\r\n\t\t\tonChange={onChangeCountry}\r\n\t\t\tfilterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n\t\t>\r\n\t\t\t{countryListState.done &&\r\n\t\t\t\tcountryListState.data.length > 0 &&\r\n\t\t\t\tcountryOptions.map((option) => {\r\n\t\t\t\t\treturn <Option value={option.value}>{option.name}</Option>;\r\n\t\t\t\t})}\r\n\t\t</Select>\r\n         </div>\r\n         <div className='dubbleRowInputs__item'>\r\n         <h3 className='inputFieldLabel'>\r\n                City\r\n            </h3>\r\n         <Select\r\n\t\t\tdefaultValue={customer && customer.city}\r\n\t\t\tshowSearch\r\n\t\t\tstyle={{ width: '100%' }}\r\n\t\t\tplaceholder='Select a city'\r\n\t\t\toptionFilterProp='children'\r\n\t\t\tonChange={onChangeCity}\r\n\t\t\tfilterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n\t\t>\r\n\t\t\t{cityListState.done &&\r\n\t\t\t\tcityListState.data.length > 0 &&\r\n\t\t\t\tcityOptions.map((option) => {\r\n\t\t\t\t\treturn <Option value={option.value}>{option.name}</Option>;\r\n\t\t\t\t})}\r\n\t\t</Select>\r\n         </div>\r\n\r\n            </div>\r\n\r\n            <div style={{\r\n                marginTop: '12px'\r\n            }}></div>\r\n\r\n\r\n\r\n            <div className='dubbleRowInputs'>\r\n         <div className='dubbleRowInputs__item'>\r\n         <Input \r\n\t\t\t   label='Address'\r\n\t\t\t   value={values.address1}\r\n\t\t\t   name='address1'\r\n\t\t\t   isError={(touched.address1 && errors.address1) ||\r\n\t\t\t\t  (!isSubmitting && updateCustomerState.error['error']['address1'])}\r\n\t\t\t  \r\n\t\t\t\t  errorString={(touched.address1 && errors.address1) ||\r\n\t\t\t\t\t  (!isSubmitting && updateCustomerState.error['error']['address1'])}\r\n\t\t\t   onChange={(e : any) => {\r\n\t\t\t\t  handleChange(e);\r\n\t\t\t\t  setFieldTouched('address1');\r\n\t\t\t\t}}\r\n\t\t\t   />\r\n         </div>\r\n         <div className='dubbleRowInputs__item'>\r\n         <Input \r\n\t\t\t   label='More specific address'\r\n\t\t\t   value={values.address2}\r\n\t\t\t   name='address2'\r\n\t\t\t   isError={(touched.address2 && errors.address2) ||\r\n\t\t\t\t  (!isSubmitting && updateCustomerState.error['error']['address2'])}\r\n\t\t\t  \r\n\t\t\t\t  errorString={(touched.address2 && errors.address2) ||\r\n\t\t\t\t\t  (!isSubmitting && updateCustomerState.error['error']['address2'])}\r\n\t\t\t   onChange={(e : any) => {\r\n\t\t\t\t  handleChange(e);\r\n\t\t\t\t  setFieldTouched('address2');\r\n\t\t\t\t}}\r\n\t\t\t   />\r\n         </div>\r\n\r\n            </div>\r\n\r\n\r\n\r\n\r\n  </Modal>\r\n\t\t\t  \r\n\t\t\t</>\r\n\t\t  )}\r\n\t  </Formik>\r\n\t);\r\n};\r\n\r\n\r\nexport default QuickEdit;\r\n","import React, {useState,useEffect} from 'react';\r\nimport {withRouter} from 'react-router-dom';\r\nimport { Table, Badge, Menu, Dropdown, notification, Space, Tag,Button, Input,Tooltip, Modal , Popconfirm} from 'antd';\r\nimport { PlusOutlined, EditOutlined, DeleteOutlined,EditFilled, CheckCircleOutlined } from '@ant-design/icons';\r\nimport Moment from 'react-moment';\r\n\r\n/// import hooks\r\nimport { useFetch, useHandleFetch } from \"../../hooks\";\r\n\r\n// import components\r\nimport { DataTableSkeleton } from \"../../components/Placeholders\";\r\nimport AddNewCustomer from \"./AddNewCustomer\";\r\nimport QuickEdit from \"./QuickEdit\";\r\nimport Empty from \"../../components/Empty\";\r\nconst { Column, ColumnGroup } = Table;\r\nconst { Search } = Input;\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t  message: message || 'Tag Created',\r\n\t  description: '',\r\n\t  icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n  };\r\n\r\n\r\n  const openErrorNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t  message: message || 'Something Went Wrong',\r\n\t  description: '',\r\n\t  icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n  };\r\n\r\n\r\n\r\n\r\n\r\ninterface myTableProps {\r\n  data: any; \r\n  setCustomerList?:any; \r\n} \r\n\r\n\r\nconst MyTable = ({data,setCustomerList}: myTableProps) => {\r\n    const [visible,setvisible] = useState(false);   \r\n    const [activeCategoryForEdit,setactiveCategoryForEdit] = useState(false); \r\n\r\n\r\n    const [deleteCustomerState, handleDeleteCustomerFetch] = useHandleFetch({}, 'deleteCustomer');\r\n      const handleDeleteCustomer = async (id) => {\r\n        const deleteCustomerRes = await handleDeleteCustomerFetch({\r\n          urlOptions: {\r\n            placeHolders: {\r\n              id,\r\n            }\r\n            }\r\n          });\r\n\r\n\r\n           // @ts-ignore\r\n\t\t  if(deleteCustomerRes && deleteCustomerRes.status === 'ok'){\r\n\t\t\t  openSuccessNotification('Deleted Customer'); \r\n\t\t\t  const newCustomerList =  data.filter(item => item.id !== id);\r\n\t\t\t  setCustomerList(newCustomerList); \r\n\t\t  }\r\n      }\r\n      \r\n\r\n    return (\r\n        <>\r\n        <Table \r\n        // expandable={{\r\n        //     expandedRowRender: record => <p style={{ margin: 0 }}>{record.name}</p>,\r\n        //     rowExpandable: record => record.name !== 'Not Expandable',\r\n        //   }}\r\n        // bordered={true}\r\n        size='small'\r\n        // pagination={false}\r\n        dataSource={data}\r\n        >\r\n         \r\n          <Column\r\n           title=\"Phone\" \r\n           dataIndex=\"phone\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n         \r\n            />\r\n\r\n\r\n         <Column\r\n           title=\"First Name\" \r\n           dataIndex=\"firstName\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n         \r\n            />\r\n\r\n         <Column\r\n           title=\"Last Name\" \r\n           dataIndex=\"lastName\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n         \r\n            />\r\n\r\n\r\n\r\n<Column\r\n           title=\"Country\" \r\n           dataIndex=\"country\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n         \r\n            />\r\n\r\n\r\n<Column\r\n           title=\"City\" \r\n           dataIndex=\"city\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n         \r\n            />\r\n\r\n<Column\r\n           title=\"Created\" \r\n           dataIndex=\"created\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n           render={(text, record : any) => (\r\n            <Space size=\"middle\">\r\n            \r\n            <h5>\r\n              <Moment>\r\n                {text}\r\n              </Moment>\r\n            </h5>\r\n             \r\n            </Space>\r\n          )}\r\n            />\r\n\r\n\r\n\r\n          {/* <Column \r\n          \r\n          className='classnameofthecolumn'\r\n\r\n          title=\"Product\" dataIndex=\"product\" key=\"product\" /> */}\r\n\r\n          {/* <Column \r\n          \r\n          className='classnameofthecolumn'\r\n\r\n          title=\"Sub Category\" dataIndex=\"subCategory\" key=\"subCategory\" /> */}\r\n        \r\n        {/* <Column\r\n          title=\"Tags\"\r\n          dataIndex=\"tags\"\r\n          key=\"tags\"\r\n          render={tags => (\r\n            <>\r\n              {tags.map((tag : any) => (\r\n                <Tag color=\"blue\" key={tag}>\r\n                  {tag}\r\n                </Tag>\r\n              ))}\r\n            </>\r\n          )}\r\n        /> */}\r\n        <Column\r\n        \r\n        className='classnameofthecolumn'\r\n          title=\"\"\r\n          key=\"action\"\r\n          align='right'\r\n          render={(text, record : any) => (\r\n            <Space size=\"middle\">\r\n            \r\n               <Tooltip placement=\"top\" title='Quick Edit Customer'>\r\n              <span className='iconSize' onClick={() => {\r\n                setvisible(true)\r\n                setactiveCategoryForEdit(record); \r\n              }}> \r\n              <EditOutlined />\r\n            \r\n              </span>\r\n               </Tooltip>\r\n\r\n\r\n             \r\n\r\n              \r\n               <Popconfirm \r\n               \r\n               onConfirm={() => handleDeleteCustomer(record.id)}\r\n               title=\"Are you sure？\" okText=\"Yes\" cancelText=\"No\">\r\n           \r\n           <span \r\n             className='iconSize iconSize-danger'\r\n             > \r\n             <DeleteOutlined/>\r\n            </span>\r\n       \r\n           </Popconfirm>\r\n             \r\n            </Space>\r\n          )}\r\n        />\r\n      </Table>\r\n\r\n    \r\n\r\n    {activeCategoryForEdit &&   <QuickEdit \r\n    customerList={data}\r\n    setCustomerList={setCustomerList}\r\n    setvisible={setvisible}\r\n    visible={visible}\r\n    customer={activeCategoryForEdit}/>}\r\n    \r\n    \r\n    </>\r\n    )\r\n}\r\n\r\n\r\ninterface Props {\r\n    history: any; \r\n}\r\n\r\nconst CustomerList = ({history}: Props) => {\r\n\r\n\r\n    const [customerList,setCustomerList] = useState([]); \r\n\r\n    const [customerState, handleCustomerListFetch] = useHandleFetch({}, 'customerList');\r\n  \r\n  \r\n    useEffect(()=>{\r\n     const setCustomers = async () => {\r\n       const customers = await handleCustomerListFetch({}); \r\n       // @ts-ignore\r\n       setCustomerList(customers); \r\n     }\r\n     setCustomers(); \r\n    },[])\r\n\r\n\r\n    \r\n\r\n  \r\n  const handleSearch = (value) => {\r\n    if(customerState.data.length > 0 ){\r\n      const newCustomerList = customerState.data.filter(item => item.name.includes(value)); \r\n      setCustomerList(newCustomerList); \r\n    }\r\n     \r\n  }\r\n\r\n\r\n\r\n    \r\n\r\n  const [addNewCategoryVisible,setAddNewCategoryVisible] = useState(false);   \r\n\r\n  console.log('customerState',customerState)\r\n\r\n\r\n\r\n\treturn (\r\n\t\t<>\r\n    {/* <h2 className='containerPageTitle'>\r\n      Categories\r\n    </h2> */}\r\n    <div className='categoryListContainer'>\r\n            <div className='categoryListContainer__header'>\r\n           \r\n\r\n          <div className='categoryListContainer__header-searchBar'>\r\n          <h2 className='categoryListContainer__header-title'>\r\n            Customers\r\n            </h2>\r\n\r\n\r\n          <Search\r\n            enterButton={false}\r\n            className='searchbarClassName'\r\n          placeholder=\"search customer..\"\r\n          onSearch={value =>handleSearch(value)}\r\n          // style={{ width: 300 }}\r\n        />\r\n          </div>\r\n            <Button\r\n          // type=\"primary\"\r\n          className='btnPrimaryClassNameoutline'\r\n          icon={<PlusOutlined />}\r\n          onClick={() => setAddNewCategoryVisible(true)}\r\n        >\r\n        Add New\r\n            \r\n            </Button>\r\n            </div>\r\n\r\n            <div className='categoryListContainer__afterHeader'>\r\n            {/* <Search\r\n      placeholder=\"search categories..\"\r\n      size=\"large\"\r\n      onSearch={value => console.log(value)}\r\n      style={{ width: 300 }}\r\n    /> */}\r\n            </div>\r\n\r\n     \r\n\t\t\t\r\n\t\t\t<div className='categoryListContainer__categoryList'>\r\n        {customerState.done && customerList.length > 0 && <MyTable\r\n        setCustomerList={setCustomerList}\r\n         data={customerList} />}\r\n        {customerState.isLoading && <DataTableSkeleton />}\r\n        {customerState.done && !(customerList.length > 0) && (\r\n\t\t\t<Empty title='No Region found'  />\r\n\t\t)}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\r\n\r\n{customerState.done && \r\n    <AddNewCustomer \r\n    setCustomerList={setCustomerList}\r\n          addNewCategoryVisible={addNewCategoryVisible} \r\n          setAddNewCategoryVisible={setAddNewCategoryVisible}\r\n          customerList={customerState.data}\r\n          \r\n           />}\r\n\r\n      \r\n\r\n        \r\n    </>\r\n\t);\r\n};\r\n\r\nexport default withRouter(CustomerList);\r\n","import React, {useState} from 'react';\r\nimport {withRouter} from 'react-router-dom';\r\nimport { Table, Badge, Menu, Dropdown, Space, Tag,Button, Input,Tooltip, Modal  } from 'antd';\r\nimport { PlusOutlined } from '@ant-design/icons';\r\n\r\nconst { Column, ColumnGroup } = Table;\r\nconst { Search } = Input;\r\n\r\nconst data = [\r\n\t{\r\n\t\tkey: '1',\r\n\t\ttitle: 'Home Page',\r\n        created: 'Sun Apr 26 2020 22:34:13',\r\n        lastModified: 'Sun Apr 26 2020 22:34:13',\r\n      \r\n\r\n\t},\r\n\t{\r\n\t\tkey: '2',\r\n\t\ttitle: 'Product Listing Page',\r\n        created: 'Sun Apr 26 2020 22:34:13',\r\n        lastModified: 'Sun Apr 26 2020 22:34:13',\r\n      \r\n\t},\r\n\t{\r\n\t\tkey: '3',\r\n\t\ttitle: 'Dashboard Page',\r\n        created: 'Sun Apr 26 2020 22:34:13',\r\n        lastModified: 'Sun Apr 26 2020 22:34:13',\r\n      \r\n\t}\r\n];\r\n\r\n\r\n\r\n\r\n\r\nconst MyTable = () => {\r\n    const [visible,setvisible] = useState(false);   \r\n\r\n\r\n\r\n    const handleOk = (e: any) => {\r\n        setvisible(false);\r\n      \r\n      };\r\n    \r\n      const handleCancel = (e: any) => {\r\n        setvisible(false);\r\n      };\r\n\r\n      \r\n\r\n    return (\r\n        <>\r\n        <Table \r\n        // expandable={{\r\n        //     expandedRowRender: record => <p style={{ margin: 0 }}>{record.name}</p>,\r\n        //     rowExpandable: record => record.name !== 'Not Expandable',\r\n        //   }}\r\n        dataSource={data}>\r\n         \r\n          <Column title=\"Title\" dataIndex=\"title\" key=\"title\" />\r\n          <Column title=\"Created\" dataIndex=\"created\" key=\"created\" />\r\n          <Column title=\"Last Modified\" dataIndex=\"lastModified\" key=\"lastModified\" />\r\n        <Column\r\n          title=\"Action\"\r\n          key=\"action\"\r\n          render={(text, record : any) => (\r\n            <Space size=\"middle\">\r\n              <a onClick={() => setvisible(true)} href='##'>Quick Edit</a>\r\n              <Tooltip placement=\"top\" title='Delete Category'>\r\n              <a href='##'>Delete</a>\r\n          </Tooltip>\r\n             \r\n            </Space>\r\n          )}\r\n        />\r\n      </Table>\r\n\r\n      <Modal\r\n          title=\"Quick Edit\"\r\n          visible={visible}\r\n          onOk={handleOk}\r\n          onCancel={handleCancel}\r\n        >\r\n          {/* <p>Some contents...</p>\r\n          <p>Some contents...</p>\r\n          <p>Some contents...</p> */}\r\n        </Modal>\r\n    </>\r\n    )\r\n}\r\n\r\n\r\ninterface Props {\r\n    history: any; \r\n}\r\n\r\nconst PagesList = ({history}: Props) => {\r\n  \r\n    \r\n\treturn (\r\n\t\t<div className='categoryListContainer'>\r\n            <div className='categoryListContainer__header'>\r\n            <h2 className='categoryListContainer__header-title'>Pages</h2>\r\n            <Button\r\n          type=\"primary\"\r\n          icon={<PlusOutlined />}\r\n          onClick={() => history.push('/page/new')}\r\n        >\r\n        Add New\r\n            \r\n            </Button>\r\n            </div>\r\n\r\n            <div className='categoryListContainer__afterHeader'>\r\n            <Search\r\n      placeholder=\"search pages..\"\r\n      size=\"large\"\r\n      onSearch={value => console.log(value)}\r\n      style={{ width: 300 }}\r\n    />\r\n            </div>\r\n\r\n     \r\n\t\t\t\r\n\t\t\t<div className='categoryListContainer__categoryList'>\r\n\t\t\t\t<MyTable />\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default withRouter(PagesList);\r\n","import React from 'react';\r\n\r\ninterface Props {}\r\n\r\nconst AddNewPage = (props: Props) => {\r\n\treturn <div>AddNewPage</div>;\r\n};\r\n\r\nexport default AddNewPage;\r\n","import React,{useState} from 'react';\r\nimport { Modal  } from 'antd';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport {useHandleFetch} from '../../hooks';\r\n\r\nconst validationSchema = Yup.object().shape({\r\n\tname: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n\tdescription: Yup.string().label('Description').required('Description is required')\r\n});\r\n\r\n\r\n\r\n\r\n\r\ninterface Props {\r\n\tcategory: any;\r\n\tsetvisible: any; \r\n\tvisible: any;\r\n}\r\n\r\nconst QuickEdit = ({ category, setvisible, visible }: Props) => {\r\n\tconst [updateCategoryState, handleUpdateCategoryFetch] = useHandleFetch({}, 'updateCategory');\r\n\r\n\tconst handleSubmit = async (values : any, actions : any) => {\r\n\t\tconsole.log('ourDamnValues',values)\r\n\t  const updateCategoryRes = await handleUpdateCategoryFetch({\r\n\t\turlOptions: {\r\n\t\t\tplaceHolders: {\r\n\t\t\t  id: values.id,\r\n\t\t\t}\r\n\t\t  },\r\n\t\tbody: {\r\n\t\t\tname: values.name,\r\n\t\t\tdescription: values.description,\r\n\t\t},\r\n\t  });\r\n\t\r\n\t  actions.setSubmitting(false);\r\n\t};\r\n\t\r\n\r\n\tconst handleCancel = (e: any) => {\r\n        setvisible(false);\r\n      };\r\n\r\n\r\n\r\n\t  const getisSubmitButtonDisabled = (values,isValid) => {\r\n\t\tif(!values.name || !values.description || !isValid){\r\n\t\t\treturn true; \r\n\t\t}\r\n\t\treturn false; \r\n\t  }\r\n\r\n\treturn (\r\n\t\t<Formik\r\n\t\tonSubmit={(values, actions) => handleSubmit(values, actions)}\r\n\t\tvalidationSchema={validationSchema}\r\n\t\tvalidateOnBlur={false}\r\n\t\tenableReinitialize={true}\r\n\t\tinitialValues={\r\n\t\t  {...category}\r\n\t\t}\r\n\t  >\r\n\t\t{({\r\n\t\t  handleChange,\r\n\t\t  values,\r\n\t\t  handleSubmit,\r\n\t\t  errors,\r\n\t\t  isValid,\r\n\t\t  isSubmitting,\r\n\t\t  touched,\r\n\t\t  handleBlur,\r\n\t\t  setFieldTouched,\r\n\t\t  handleReset,\r\n\t\t}) => (\r\n\t\t\t<>\r\n\t\t\t<Modal\r\n\t\t\ttitle=\"Quick Edit\"\r\n\t\t\tvisible={visible}\r\n\t\t\tonOk={(e : any) => handleSubmit(e)}\r\n\t\t\tonCancel={handleCancel}\r\n\t\t\tokText='Update'\r\n\t\t\tokButtonProps={{\r\n\t\t\tloading: isSubmitting,\r\n\t\t\thtmlType: \"submit\",\r\n\t\t\tdisabled: getisSubmitButtonDisabled(values, isValid)\r\n\t\t\t}}\r\n  >\r\n  <Input \r\n\t\t\t   label='Title'\r\n\t\t\t   value={values.name}\r\n\t\t\t   name='name'\r\n\t\t\t   isError={(touched.name && errors.name) ||\r\n\t\t\t\t  (!isSubmitting && updateCategoryState.error['error']['name'])}\r\n\t\t\t  \r\n\t\t\t\t  errorString={(touched.name && errors.name) ||\r\n\t\t\t\t\t  (!isSubmitting && updateCategoryState.error['error']['name'])}\r\n\t\t\t   onChange={(e : any) => {\r\n\t\t\t\t  handleChange(e);\r\n\t\t\t\t  setFieldTouched('name');\r\n\t\t\t\t}}\r\n\t\t\t   />\r\n\t\t\t  <TextArea\r\n\t\t\t   label='Description' \r\n\t\t\t   value={values.description}\r\n\t\t\t   name='description'\r\n\t\t\t   isError={(touched.description && errors.description) ||\r\n\t\t\t\t  (!isSubmitting && updateCategoryState.error['error']['description'])}\r\n\t\t\t  \r\n\t\t\t\t  errorString={(touched.description && errors.description) ||\r\n\t\t\t\t\t  (!isSubmitting && updateCategoryState.error['error']['description'])}\r\n\t\t\t   onChange={(e : any) => {\r\n\t\t\t\t  handleChange(e);\r\n\t\t\t\t  setFieldTouched('description');\r\n\t\t\t\t}}\r\n\t\t\t\t />\r\n  </Modal>\r\n\t\t\t  \r\n\t\t\t</>\r\n\t\t  )}\r\n\t  </Formik>\r\n\t);\r\n};\r\n\r\n\r\nexport default QuickEdit;\r\n","// @ts-nocheck\r\n\r\nimport React from 'react'; \r\nimport { Tag, Input, Tooltip } from 'antd';\r\nimport { PlusOutlined } from '@ant-design/icons';\r\n\r\nclass EditableTagGroup extends React.Component {\r\n  state = {\r\n    tags: [],\r\n    inputVisible: false,\r\n    inputValue: '',\r\n    editInputIndex: -1,\r\n    editInputValue: '',\r\n  };\r\n\r\n  handleClose = removedTag => {\r\n    const tags = this.state.tags.filter(tag => tag !== removedTag);\r\n    console.log(tags);\r\n    this.setState({ tags });\r\n  };\r\n\r\n  showInput = () => {\r\n    this.setState({ inputVisible: true }, () => this.input.focus());\r\n  };\r\n\r\n  handleInputChange = e => {\r\n    this.setState({ inputValue: e.target.value });\r\n  };\r\n\r\n  handleInputConfirm = () => {\r\n    const { inputValue } = this.state;\r\n    let { tags } = this.state;\r\n    if (inputValue && tags.indexOf(inputValue) === -1) {\r\n      tags = [...tags, inputValue];\r\n    }\r\n    console.log(tags);\r\n    this.setState({\r\n      tags,\r\n      inputVisible: false,\r\n      inputValue: '',\r\n    });\r\n  };\r\n\r\n  handleEditInputChange = e => {\r\n    this.setState({ editInputValue: e.target.value });\r\n  };\r\n\r\n  handleEditInputConfirm = () => {\r\n    this.setState(({ tags, editInputIndex, editInputValue }) => {\r\n      const newTags = [...tags];\r\n      newTags[editInputIndex] = editInputValue;\r\n\r\n      return {\r\n        tags: newTags,\r\n        editInputIndex: -1,\r\n        editInputValue: '',\r\n      };\r\n    });\r\n  };\r\n\r\n  saveInputRef = input => {\r\n    this.input = input;\r\n  };\r\n\r\n  saveEditInputRef = input => {\r\n    this.editInput = input;\r\n  };\r\n\r\n  render() {\r\n    const { tags, inputVisible, inputValue, editInputIndex, editInputValue } = this.state;\r\n    return (\r\n      <>\r\n        {tags.map((tag, index) => {\r\n          if (editInputIndex === index) {\r\n            return (\r\n              <Input\r\n                ref={this.saveEditInputRef}\r\n                key={tag}\r\n                size=\"small\"\r\n                className=\"tag-input\"\r\n                value={editInputValue}\r\n                onChange={this.handleEditInputChange}\r\n                onBlur={this.handleEditInputConfirm}\r\n                onPressEnter={this.handleEditInputConfirm}\r\n              />\r\n            );\r\n          }\r\n\r\n          const isLongTag = tag.length > 20;\r\n\r\n          const tagElem = (\r\n            <Tag\r\n              className=\"edit-tag\"\r\n              key={tag}\r\n              closable={index !== 0}\r\n              onClose={() => this.handleClose(tag)}\r\n            >\r\n              <span\r\n                onDoubleClick={e => {\r\n                  if (index !== 0) {\r\n                    this.setState({ editInputIndex: index, editInputValue: tag }, () => {\r\n                      this.editInput.focus();\r\n                    });\r\n                    e.preventDefault();\r\n                  }\r\n                }}\r\n              >\r\n                {isLongTag ? `${tag.slice(0, 20)}...` : tag}\r\n              </span>\r\n            </Tag>\r\n          );\r\n          return isLongTag ? (\r\n            <Tooltip title={tag} key={tag}>\r\n              {tagElem}\r\n            </Tooltip>\r\n          ) : (\r\n            tagElem\r\n          );\r\n        })}\r\n        {inputVisible && (\r\n          <Input\r\n          style={{\r\n            margin: \"10px 0\"\r\n          }}\r\n            ref={this.saveInputRef}\r\n            type=\"text\"\r\n            size=\"small\"\r\n            className=\"tag-input\"\r\n            value={inputValue}\r\n            onChange={this.handleInputChange}\r\n            onBlur={this.handleInputConfirm}\r\n            onPressEnter={this.handleInputConfirm}\r\n          />\r\n        )}\r\n        {!inputVisible && (\r\n          <Tag className=\"site-tag-plus\" onClick={this.showInput}>\r\n            <PlusOutlined /> New Value\r\n          </Tag>\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EditableTagGroup","import React, {useState} from 'react';\r\n\r\n// import third party ui lib\r\nimport { Upload, message, Switch, Select, Button, notification,Table, Space, Input as CoolInput,Tooltip, Modal,\r\n\r\n} from 'antd';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n\r\n\r\nimport {\r\n\tFileOutlined,\r\n\tInboxOutlined,\r\n\tRadiusUpleftOutlined,\r\n\tRadiusUprightOutlined,\r\n\tRadiusBottomleftOutlined,\r\n\tRadiusBottomrightOutlined,\r\n\tPlusOutlined,\r\n\tDeleteOutlined,\r\n\tEditOutlined\r\n} from '@ant-design/icons';\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n\r\n\r\n/// import hooks\r\nimport { useFetch, useHandleFetch } from \"../../hooks\";\r\n\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport { DataTableSkeleton } from \"../../components/Placeholders\";\r\nimport QuickEdit from \"./QuickEdit\"\r\nimport AddAttributeValues from \"./AddAttributeValues\"\r\n\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n\tname: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n\tdescription: Yup.string().label('Description').required('Description is required')\r\n});\r\n\r\n\r\nconst initialValues = {\r\n\tname: '',\r\n\tdescription: ''\r\n}\r\n\r\n\r\nconst { Column, ColumnGroup } = Table;\r\nconst { Search } = CoolInput;\r\n\r\n\r\n\r\nconst MyTable = ({data}) => {\r\n    const [visible,setvisible] = useState(false);   \r\n\tconst [activeCategoryForEdit,setactiveCategoryForEdit] = useState(false); \r\n    const [deleteTagState, handleDeleteTagFetch] = useHandleFetch({}, 'deleteTag');\r\n\r\n\r\n\tconst handleDeleteCategory = async (id) => {\r\n        const deleteTagRes = await handleDeleteTagFetch({\r\n          urlOptions: {\r\n            placeHolders: {\r\n              id,\r\n            }\r\n            }\r\n          });\r\n      }\r\n\r\n\r\n    const handleOk = (e: any) => {\r\n        setvisible(false);\r\n      \r\n      };\r\n    \r\n      const handleCancel = (e: any) => {\r\n        setvisible(false);\r\n      };\r\n\r\n      \r\n\r\n    return (\r\n        <>\r\n         <Table \r\n        // expandable={{\r\n        //     expandedRowRender: record => <p style={{ margin: 0 }}>{record.name}</p>,\r\n        //     rowExpandable: record => record.name !== 'Not Expandable',\r\n        //   }}\r\n        // bordered={true}\r\n        size='small'\r\n        // pagination={false}\r\n        dataSource={data}\r\n        >\r\n\r\n          <Column\r\n           title=\"Name\" \r\n           dataIndex=\"name\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n         \r\n            />\r\n\r\n<Column\r\n           title=\"Description\" \r\n           dataIndex=\"description\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n         \r\n            />\r\n        <Column\r\n        \r\n        className='classnameofthecolumn'\r\n          title=\"\"\r\n          key=\"action\"\r\n          align='right'\r\n          render={(text, record : any) => (\r\n            <Space size=\"middle\">\r\n            \r\n               <Tooltip placement=\"top\" title='Quick Edit Tag'>\r\n              <span className='iconSize' onClick={() => {\r\n                setvisible(true)\r\n                setactiveCategoryForEdit(record); \r\n              }}> \r\n              <EditOutlined />\r\n            \r\n              </span>\r\n               </Tooltip>\r\n\r\n\r\n             \r\n              <Tooltip placement=\"top\" title='Delete Tag'>\r\n            \r\n\r\n             <span \r\n             className='iconSize iconSize-danger'\r\n             onClick={() => handleDeleteCategory(record.id)}\r\n             > \r\n             <DeleteOutlined/>\r\n            </span>\r\n            \r\n          </Tooltip>\r\n             \r\n            </Space>\r\n          )}\r\n        />\r\n      </Table>\r\n\r\n\r\n\r\n     \r\n\r\n\t\t{activeCategoryForEdit &&   <QuickEdit \r\n    setvisible={setvisible}\r\n    visible={visible}\r\n    category={activeCategoryForEdit}/>}\r\n    </>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\n\r\nconst props = {\r\n\tname: 'file',\r\n\tmultiple: true,\r\n\taction: 'https://www.mocky.io/v2/5cc8019d300000980a055e76',\r\n\tonChange(info: any) {\r\n\t\tconst { status } = info.file;\r\n\t\tif (status !== 'uploading') {\r\n\t\t\tconsole.log(info.file, info.fileList);\r\n\t\t}\r\n\t\tif (status === 'done') {\r\n\t\t\tmessage.success(`${info.file.name} file uploaded successfully.`);\r\n\t\t} else if (status === 'error') {\r\n\t\t\tmessage.error(`${info.file.name} file upload failed.`);\r\n\t\t}\r\n\t}\r\n};\r\n\r\ninterface Props {}\r\n\r\nconst AttributeList = ({  }: Props) => {\r\n\tconst tagState = useFetch([], [], 'brandList', {\r\n\t\turlOptions: {\r\n\t\t  params: {\r\n\t\t\tisSubCategory: true,\r\n\t\t  },\r\n\t\t},\r\n\t  });\r\n\r\n\t  const [updateCategoryState, handleUpdateCategoryFetch] = useHandleFetch({}, 'updateCategory');\r\n\t  const [addNewCategoryVisible,setAddNewCategoryVisible] = useState(false);   \r\n\r\n\r\n\r\n\t  const handleSubmit = async (values : any, actions : any) => {\r\n\t\t  console.log('ourDamnValues',values)\r\n\t\tconst updateCategoryRes = await handleUpdateCategoryFetch({\r\n\t\t  urlOptions: {\r\n\t\t\t  placeHolders: {\r\n\t\t\t\tid: values.id,\r\n\t\t\t  }\r\n\t\t\t},\r\n\t\t  body: {\r\n\t\t\t  name: values.name,\r\n\t\t\t  description: values.description,\r\n\t\t  },\r\n\t\t});\r\n\t  \r\n\t\tactions.setSubmitting(false);\r\n\t  };\r\n\t  \r\n \r\n  \r\n  \r\n  \r\n\t\tconst getisSubmitButtonDisabled = (values,isValid) => {\r\n\t\t  if(!values.name || !values.description || !isValid){\r\n\t\t\t  return true; \r\n\t\t  }\r\n\t\t  return false; \r\n\t\t}\r\n\r\n\r\n\r\n\r\n  const handleOkAddNewCategory = (e: any) => {\r\n    setAddNewCategoryVisible(false);\r\n  \r\n  };\r\n\r\n  const handleCancelAddNewCategory = (e: any) => {\r\n    setAddNewCategoryVisible(false);\r\n  };\r\n\r\n\treturn (\r\n\t\t<div className='site-layout-background' style={{ padding: '30px 20px 30px 20px', minHeight: 360 }}>\r\n\t\t\t<div className='addproductSectionTitleContainer'>\r\n\t\t\t\t<h2 className='addprouctSectionTitle'>Add Attribute</h2>\r\n\t\t\t</div>\r\n\t\t\t<div className='addproductSectionContainer addproductSectionContainer-tags'>\r\n\t\t\t\t<div className='addproductSection addproductSection-left'>\r\n\t\t\t\t<Formik\r\n\t\tonSubmit={(values, actions) => handleSubmit(values, actions)}\r\n\t\tvalidationSchema={validationSchema}\r\n\t\tvalidateOnBlur={false}\r\n\t\tenableReinitialize={true}\r\n\t\tinitialValues={\r\n\t\t  {...initialValues}\r\n\t\t}\r\n\t  >\r\n\t\t{({\r\n\t\t  handleChange,\r\n\t\t  values,\r\n\t\t  handleSubmit,\r\n\t\t  errors,\r\n\t\t  isValid,\r\n\t\t  isSubmitting,\r\n\t\t  touched,\r\n\t\t  handleBlur,\r\n\t\t  setFieldTouched,\r\n\t\t  handleReset,\r\n\t\t}) => (\r\n\t\t\t<>\r\n  <Input \r\n\t\t\t   label='Title'\r\n\t\t\t   value={values.name}\r\n\t\t\t   name='name'\r\n\t\t\t   isError={(touched.name && errors.name) ||\r\n\t\t\t\t  (!isSubmitting && updateCategoryState.error['error']['name'])}\r\n\t\t\t  \r\n\t\t\t\t  errorString={(touched.name && errors.name) ||\r\n\t\t\t\t\t  (!isSubmitting && updateCategoryState.error['error']['name'])}\r\n\t\t\t   onChange={(e : any) => {\r\n\t\t\t\t  handleChange(e);\r\n\t\t\t\t  setFieldTouched('name');\r\n\t\t\t\t}}\r\n\t\t\t   />\r\n\r\n\t\t\t   <div style={{\r\n\t\t\t\t   marginTop: '0px'\r\n\t\t\t   }}></div>\r\n\t\t\t  \r\n\r\n\t\t\t  <h3 className='inputFieldLabel'> Values</h3>\r\n\t\t\t\t\r\n\t\t\t\t<AddAttributeValues />\r\n\t\t\t\t\t  <Button \r\n\t\t\t\t\t  style={{\r\n\t\t\t\t\t\t  display: 'block',\r\n\t\t\t\t\t\t  marginTop: '20px'\r\n\t\t\t\t\t  }}\r\n\t\t\t\t\t\t\ttype='primary'\r\n\t\t\t\t\t\t\tonClick={(e: any) => handleSubmit(e)}\r\n\t\t\t\t\t\t\tdisabled={getisSubmitButtonDisabled(values,isValid)}\r\n\t\t\t\t\t\t\tloading={isSubmitting}\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t >\r\n\t\t\t\t\t\tCreate\r\n\t\t\t\t\t</Button>\r\n\t\t\t</>\r\n\t\t  )}\r\n\t  </Formik>\r\n\r\n\r\n\t\t\t\t</div>\r\n                <div className='addproductSection addproductSection-right'> \r\n\r\n\t\t\t\t<div className='categoryListContainer'>\r\n            <div className='categoryListContainer__header'>\r\n           \r\n\r\n          <div className='categoryListContainer__header-searchBar-tag'>\r\n          {/* <h2 className='categoryListContainer__header-title'>\r\n            Brand\r\n            </h2> */}\r\n\r\n\r\n          <Search\r\n            enterButton={false}\r\n            className='searchbarClassName'\r\n          placeholder=\"search categories..\"\r\n          onSearch={value => console.log(value)}\r\n          // style={{ width: 300 }}\r\n        />\r\n          </div>\r\n            {/* <Button\r\n          // type=\"primary\"\r\n          className='btnPrimaryClassNameoutline'\r\n          icon={<PlusOutlined />}\r\n          onClick={() => setAddNewCategoryVisible(true)}\r\n        >\r\n        Add New\r\n            \r\n            </Button> */}\r\n            </div>\r\n\r\n            <div className='categoryListContainer__afterHeader'>\r\n            {/* <Search\r\n      placeholder=\"search categories..\"\r\n      size=\"large\"\r\n      onSearch={value => console.log(value)}\r\n      style={{ width: 300 }}\r\n    /> */}\r\n            </div>\r\n\r\n     \r\n\t\t\t\r\n\t\t\t<div className='categoryListContainer__categoryList'>\r\n\t\t\t\t{tagState.done && tagState.data.length > 0 && <MyTable data={tagState.data} />}\r\n\t\t\t\t{tagState.isLoading && <DataTableSkeleton />}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\r\n                </div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default AttributeList;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Modal, Select, notification } from 'antd';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { CheckCircleOutlined } from '@ant-design/icons';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport { useHandleFetch } from '../../hooks';\r\n\r\n\r\nconst { Option } = Select;\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    name: Yup.string()\r\n        .label('Name')\r\n        .required()\r\n        .min(2, 'Name must have at least 2 characters '),\r\n    pickUpLocation: Yup.string()\r\n        .label('Pick up Location')\r\n        .required()\r\n        .min(2, 'Pick up Location must have at least 2 characters '),\r\n    time: Yup.string()\r\n        .label('Time')\r\n        .required()\r\n        .min(2, 'Time must have at least 2 characters '),\r\n\r\n});\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Tag Created',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Something Went Wrong',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n    });\r\n};\r\n\r\n\r\ninterface Props {\r\n    customer: any;\r\n    setvisible: any;\r\n    visible: any;\r\n    orderList?: any;\r\n    setOrderList?: any;\r\n}\r\n\r\nconst QuickEdit = ({ customer, setvisible, visible, setOrderList, orderList }: Props) => {\r\n    const [updateOrderState, handleUpdateOrderFetch] = useHandleFetch({}, 'updateOrder');\r\n\r\n\r\n    const [selectedCountryValue, setselectedCountryValue] = useState('');\r\n    const [selectedCityValue, setselectedCityValue] = useState('');\r\n\r\n    const [countryOptions, setcountryOptions] = useState([]);\r\n    const [cityOptions, setcityOptions] = useState([]);\r\n\r\n    const [countryListState, handleCountryListFetch] = useHandleFetch(\r\n        [],\r\n        'countryList'\r\n    );\r\n\r\n    const [cityListState, handleCityListFetch] = useHandleFetch([], 'cityList');\r\n\r\n    const [countryList, setCountryList] = useState([]);\r\n    const [cityList, setCityList] = useState([]);\r\n\r\n\r\n\r\n    const handleSubmit = async (values: any, actions: any) => {\r\n        console.log('selectedCityValue', selectedCityValue)\r\n\r\n        const addRegionRes = await handleUpdateOrderFetch({\r\n\r\n            body: {\r\n                name: values.name,\r\n                pickUpLocation: values.pickUpLocation,\r\n                time: values.time,\r\n                country: selectedCountryValue,\r\n                city: selectedCityValue,\r\n                charge: {}\r\n            },\r\n        });\r\n\r\n        // @ts-ignore\r\n        if (addRegionRes && addRegionRes.status === 'ok') {\r\n            openSuccessNotification();\r\n\r\n            const positionInTag = () => {\r\n                return orderList.map(item => item.id).indexOf(customer.id);\r\n            }\r\n\r\n            const index = positionInTag();\r\n\r\n            // @ts-ignore\r\n            const updatedItem = Object.assign({}, orderList[index], { ...addRegionRes });\r\n            const updateRegionList = [...orderList.slice(0, index), updatedItem, ...orderList.slice(index + 1)];\r\n            setOrderList(updateRegionList);\r\n\r\n        }\r\n        else {\r\n            openErrorNotification();\r\n        }\r\n\r\n        actions.setSubmitting(false);\r\n        setvisible(false)\r\n\r\n    };\r\n\r\n\r\n\r\n\r\n    const onChangeCity = (value) => {\r\n        setselectedCityValue(value);\r\n    }\r\n\r\n    const onChangeCountry = (value) => {\r\n        setselectedCountryValue(value);\r\n    }\r\n\r\n    useEffect(() => {\r\n        const setCountries = async () => {\r\n            const CountryListRes = await handleCountryListFetch({});\r\n\r\n            // @ts-ignore\r\n            if (CountryListRes && CountryListRes.length > 0) {\r\n                // @ts-ignore\r\n                const countryOptions = CountryListRes.map((country) => {\r\n                    return {\r\n                        value: country.name,\r\n                        name: country.name\r\n                    };\r\n                });\r\n                setcountryOptions(countryOptions);\r\n            }\r\n        };\r\n\r\n        setCountries();\r\n    }, []);\r\n\r\n\r\n    useEffect(() => {\r\n        const setCities = async () => {\r\n            const cityListRes = await handleCityListFetch({\r\n                urlOptions: {\r\n                    placeHolders: {\r\n                        country: selectedCountryValue,\r\n                    },\r\n                },\r\n            });\r\n\r\n            // @ts-ignore\r\n            if (cityListRes && cityListRes.length > 0) {\r\n                // @ts-ignore\r\n                const cityOptions = cityListRes.map((city) => {\r\n                    return {\r\n                        value: city.name,\r\n                        name: city.name\r\n                    };\r\n                });\r\n                setcityOptions(cityOptions);\r\n            }\r\n        };\r\n\r\n        setCities();\r\n    }, [selectedCountryValue]);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    const handleCancel = (e: any) => {\r\n        setvisible(false);\r\n    };\r\n\r\n\r\n\r\n    const getisSubmitButtonDisabled = (values, isValid) => {\r\n        if (!isValid ||\r\n            !values.name ||\r\n            !values.pickUpLocation ||\r\n            !values.time) {\r\n\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    return (\r\n        <Formik\r\n            onSubmit={(values, actions) => handleSubmit(values, actions)}\r\n            validationSchema={validationSchema}\r\n            validateOnBlur={false}\r\n            enableReinitialize={true}\r\n            initialValues={\r\n                { ...customer }\r\n            }\r\n        >\r\n            {({\r\n                handleChange,\r\n                values,\r\n                handleSubmit,\r\n                errors,\r\n                isValid,\r\n                isSubmitting,\r\n                touched,\r\n                handleBlur,\r\n                setFieldTouched,\r\n                handleReset,\r\n            }) => (\r\n                    <>\r\n                        <Modal\r\n                            title=\"Quick Edit\"\r\n                            visible={visible}\r\n                            onOk={(e: any) => handleSubmit(e)}\r\n                            onCancel={handleCancel}\r\n                            okText='Update'\r\n                            okButtonProps={{\r\n                                loading: isSubmitting,\r\n                                htmlType: \"submit\",\r\n                                disabled: getisSubmitButtonDisabled(values, isValid)\r\n                            }}\r\n                            bodyStyle={{\r\n                                margin: '0',\r\n                                padding: '10px'\r\n                            }}\r\n                        >\r\n\r\n\r\n                            <div className='dubbleRowInputs'>\r\n                                <div className='dubbleRowInputs__item'>\r\n                                    <Input\r\n                                        label='Name'\r\n                                        value={values.name}\r\n                                        name='name'\r\n                                        isError={(touched.name && errors.name) ||\r\n                                            (!isSubmitting && updateOrderState.error['error']['name'])}\r\n\r\n                                        errorString={(touched.name && errors.name) ||\r\n                                            (!isSubmitting && updateOrderState.error['error']['name'])}\r\n                                        onChange={(e: any) => {\r\n                                            handleChange(e);\r\n                                            setFieldTouched('name');\r\n                                        }}\r\n                                    />\r\n                                </div>\r\n                                <div className='dubbleRowInputs__item'>\r\n                                    <Input\r\n                                        label='Pick up Location'\r\n                                        value={values.pickUpLocation}\r\n                                        name='pickUpLocation'\r\n                                        isError={(touched.pickUpLocation && errors.pickUpLocation) ||\r\n                                            (!isSubmitting && updateOrderState.error['error']['pickUpLocation'])}\r\n\r\n                                        errorString={(touched.pickUpLocation && errors.pickUpLocation) ||\r\n                                            (!isSubmitting && updateOrderState.error['error']['pickUpLocation'])}\r\n                                        onChange={(e: any) => {\r\n                                            handleChange(e);\r\n                                            setFieldTouched('pickUpLocation');\r\n                                        }}\r\n                                    />\r\n                                </div>\r\n\r\n\r\n\r\n\r\n                            </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n                            <div style={{\r\n                                marginRight: '10px'\r\n                            }}>\r\n                                <Input\r\n                                    label='Time'\r\n                                    value={values.time}\r\n                                    name='time'\r\n                                    isError={(touched.time && errors.time) ||\r\n                                        (!isSubmitting && updateOrderState.error['error']['time'])}\r\n\r\n                                    errorString={(touched.time && errors.time) ||\r\n                                        (!isSubmitting && updateOrderState.error['error']['time'])}\r\n                                    onChange={(e: any) => {\r\n                                        handleChange(e);\r\n                                        setFieldTouched('time');\r\n                                    }}\r\n                                />\r\n                            </div>\r\n\r\n\r\n\r\n                            <div className='dubbleRowInputs'>\r\n                                <div className='dubbleRowInputs__item'>\r\n                                    <h3 className='inputFieldLabel'>\r\n                                        Country\r\n            </h3>\r\n                                    <Select\r\n                                        showSearch\r\n                                        style={{ width: '100%' }}\r\n                                        placeholder='Select a Country'\r\n                                        optionFilterProp='children'\r\n                                        defaultValue={customer && customer.country}\r\n                                        onChange={onChangeCountry}\r\n                                        filterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n                                    >\r\n                                        {countryListState.done &&\r\n                                            countryListState.data.length > 0 &&\r\n                                            countryOptions.map((option) => {\r\n                                                return <Option value={option.value}>{option.name}</Option>;\r\n                                            })}\r\n                                    </Select>\r\n                                </div>\r\n                                <div className='dubbleRowInputs__item'>\r\n                                    <h3 className='inputFieldLabel'>\r\n                                        City\r\n            </h3>\r\n                                    <Select\r\n                                        showSearch\r\n                                        style={{ width: '100%' }}\r\n                                        placeholder='Select a city'\r\n                                        optionFilterProp='children'\r\n                                        defaultValue={customer && customer.city}\r\n                                        onChange={onChangeCity}\r\n                                        filterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n                                    >\r\n                                        {cityListState.done &&\r\n                                            cityListState.data.length > 0 &&\r\n                                            cityOptions.map((option) => {\r\n                                                return <Option value={option.value}>{option.name}</Option>;\r\n                                            })}\r\n                                    </Select>\r\n                                </div>\r\n\r\n                            </div>\r\n\r\n                            <div style={{\r\n                                marginTop: '12px'\r\n                            }}></div>\r\n\r\n                        </Modal>\r\n\r\n                    </>\r\n                )}\r\n        </Formik>\r\n    );\r\n};\r\n\r\n\r\nexport default QuickEdit;\r\n","import React, {useState, useEffect} from 'react';\r\nimport {withRouter} from 'react-router-dom';\r\nimport { Table, Badge, Menu, Dropdown, Space, Tag,Button, Input,Tooltip, Modal, notification, Popconfirm } from 'antd';\r\nimport { PlusOutlined, EditOutlined, DeleteOutlined,EditFilled,CheckCircleOutlined } from '@ant-design/icons';\r\n\r\n\r\n/// import hooks\r\nimport { useFetch, useHandleFetch } from \"../../hooks\";\r\n\r\n// import components\r\nimport { DataTableSkeleton } from \"../../components/Placeholders\";\r\nimport AddNewOrder from \"./AddNewOrder\";\r\nimport QuickEdit from \"./QuickEdit\";\r\nimport Empty from \"../../components/Empty\";\r\n\r\nconst { Column, ColumnGroup } = Table;\r\nconst { Search } = Input;\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t  message: message || 'Tag Created',\r\n\t  description: '',\r\n\t  icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n  };\r\n\r\n\r\n  const openErrorNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t  message: message || 'Something Went Wrong',\r\n\t  description: '',\r\n\t  icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n  };\r\n\r\n\r\n\r\n\r\n\r\ninterface myTableProps {\r\n  data: any; \r\n  setOrderList: any; \r\n} \r\n\r\n\r\nconst MyTable = ({data,setOrderList}: myTableProps) => {\r\n    const [visible,setvisible] = useState(false);   \r\n    const [activeCategoryForEdit,setactiveCategoryForEdit] = useState(false); \r\n    const [deleteOrderState, handleDeleteOrderFetch] = useHandleFetch({}, 'deleteOrder');\r\n\r\n\r\n      const handleDeleteRegion = async (id) => {\r\n        const deleteOrderRes = await handleDeleteOrderFetch({\r\n          urlOptions: {\r\n            placeHolders: {\r\n              id,\r\n            }\r\n            }\r\n          });\r\n\r\n            // @ts-ignore\r\n\t\t  if(deleteOrderRes && deleteOrderRes.status === 'ok'){\r\n\t\t\t  openSuccessNotification('Deleted Order'); \r\n\t\t\t  const newOrderList =  data.filter(item => item.id !== id);\r\n\t\t\t  setOrderList(newOrderList); \r\n\t\t  }\r\n\r\n      }\r\n      \r\n\r\n    return (\r\n        <>\r\n        <Table \r\n        // expandable={{\r\n        //     expandedRowRender: record => <p style={{ margin: 0 }}>{record.name}</p>,\r\n        //     rowExpandable: record => record.name !== 'Not Expandable',\r\n        //   }}\r\n        // bordered={true}\r\n        size='small'\r\n        // pagination={false}\r\n        dataSource={data}\r\n        >\r\n         \r\n          <Column\r\n           title=\"Name\" \r\n           dataIndex=\"name\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n         \r\n            />\r\n\r\n\r\n<Column\r\n           title=\"Pick up Location\" \r\n           dataIndex=\"pickUpLocation\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n         \r\n            />\r\n\r\n\r\n\r\n\r\n<Column\r\n           title=\"Country\" \r\n           dataIndex=\"countryName\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n         \r\n            />\r\n\r\n\r\n<Column\r\n           title=\"City\" \r\n           dataIndex=\"city\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n         \r\n            />\r\n\r\n<Column\r\n           title=\"Time\" \r\n           dataIndex=\"time\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n         \r\n            />\r\n\r\n\r\n<Column\r\n           title=\"Charge\" \r\n           dataIndex=\"time\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n         \r\n            />\r\n\r\n\r\n          {/* <Column \r\n          \r\n          className='classnameofthecolumn'\r\n\r\n          title=\"Product\" dataIndex=\"product\" key=\"product\" /> */}\r\n\r\n          {/* <Column \r\n          \r\n          className='classnameofthecolumn'\r\n\r\n          title=\"Sub Category\" dataIndex=\"subCategory\" key=\"subCategory\" /> */}\r\n        \r\n        {/* <Column\r\n          title=\"Tags\"\r\n          dataIndex=\"tags\"\r\n          key=\"tags\"\r\n          render={tags => (\r\n            <>\r\n              {tags.map((tag : any) => (\r\n                <Tag color=\"blue\" key={tag}>\r\n                  {tag}\r\n                </Tag>\r\n              ))}\r\n            </>\r\n          )}\r\n        /> */}\r\n        <Column\r\n        \r\n        className='classnameofthecolumn'\r\n          title=\"\"\r\n          key=\"action\"\r\n          align='right'\r\n          render={(text, record : any) => (\r\n            <Space size=\"middle\">\r\n            \r\n               <Tooltip placement=\"top\" title='Quick Edit Region'>\r\n              <span className='iconSize' onClick={() => {\r\n                setvisible(true)\r\n                setactiveCategoryForEdit(record); \r\n              }}> \r\n              <EditOutlined />\r\n            \r\n              </span>\r\n               </Tooltip>\r\n\r\n\r\n\r\n   \r\n               <Popconfirm \r\n               \r\n               onConfirm={() => handleDeleteRegion(record.id)}\r\n               title=\"Are you sure？\" okText=\"Yes\" cancelText=\"No\">\r\n           \r\n           <span \r\n             className='iconSize iconSize-danger'\r\n             > \r\n             <DeleteOutlined/>\r\n            </span>\r\n       \r\n           </Popconfirm>\r\n\r\n\r\n             \r\n             \r\n            </Space>\r\n          )}\r\n        />\r\n      </Table>\r\n\r\n    \r\n\r\n    {activeCategoryForEdit &&   <QuickEdit \r\n    setvisible={setvisible}\r\n    visible={visible}\r\n    customer={activeCategoryForEdit}\r\n    orderList={data}\r\n    setOrderList={setOrderList}\r\n\r\n    />\r\n\r\n    }\r\n    \r\n    \r\n    </>\r\n    )\r\n}\r\n\r\n\r\ninterface Props {\r\n    history: any; \r\n}\r\n\r\nconst CustomerList = ({history}: Props) => {\r\n\r\n    const [orderList,setOrderList] = useState([]); \r\n\r\n    const [orderState, handleRegionListFetch] = useHandleFetch({}, 'orderList');\r\n  \r\n  \r\n    useEffect(()=>{\r\n     const setOrders = async () => {\r\n       const regions = await handleRegionListFetch({}); \r\n       // @ts-ignore\r\n       setOrderList(regions); \r\n     }\r\n     setOrders(); \r\n    },[])\r\n\r\n\r\n\r\n\r\n  \r\n  const [addNewCategoryVisible,setAddNewCategoryVisible] = useState(false);   \r\n\r\n  console.log('orderState',orderState)\r\n\r\n\r\n  const handleSearch = (value) => {\r\n    if(orderState.data.length > 0 ){\r\n      const newOrderList = orderState.data.filter(item => item.name.includes(value)); \r\n      setOrderList(newOrderList); \r\n    }\r\n     \r\n  }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\treturn (\r\n\t\t<>\r\n    {/* <h2 className='containerPageTitle'>\r\n      Categories\r\n    </h2> */}\r\n    <div className='categoryListContainer'>\r\n            <div className='categoryListContainer__header'>\r\n           \r\n\r\n          <div className='categoryListContainer__header-searchBar'>\r\n          <h2 className='categoryListContainer__header-title'>\r\n            Orders \r\n            </h2>\r\n\r\n\r\n          <Search\r\n            enterButton={false}\r\n            className='searchbarClassName'\r\n          placeholder=\"search orders..\"\r\n          onSearch={value => handleSearch(value)}\r\n          // style={{ width: 300 }}\r\n        />\r\n          </div>\r\n            <Button\r\n          // type=\"primary\"\r\n          className='btnPrimaryClassNameoutline'\r\n          icon={<PlusOutlined />}\r\n          onClick={() => history.push('/order/new')}\r\n        >\r\n        Add New\r\n            \r\n            </Button>\r\n            </div>\r\n\r\n            <div className='categoryListContainer__afterHeader'>\r\n            {/* <Search\r\n      placeholder=\"search categories..\"\r\n      size=\"large\"\r\n      onSearch={value => console.log(value)}\r\n      style={{ width: 300 }}\r\n    /> */}\r\n            </div>\r\n\r\n     \r\n\t\t\t\r\n\t\t\t<div className='categoryListContainer__categoryList'>\r\n        {orderState.done && orderList.length > 0 && <MyTable \r\n        setOrderList={orderList}\r\n        data={orderList} />}\r\n        {orderState.isLoading && <DataTableSkeleton />}\r\n\r\n        {orderState.done && !(orderList.length > 0) && (\r\n        <Empty title='No Order found'  />\r\n        )}\r\n        \r\n\t\t\t</div>\r\n\t\t</div>\r\n\r\n\r\n{/* {orderState.done && \r\n    <AddNewOrder \r\n          addNewCategoryVisible={addNewCategoryVisible} \r\n          setAddNewCategoryVisible={setAddNewCategoryVisible}\r\n          orderList={orderState.data}\r\n          setOrderList={setOrderList}\r\n           />} */}\r\n\r\n      \r\n\r\n        \r\n    </>\r\n\t);\r\n};\r\n\r\nexport default withRouter(CustomerList);\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useHandleFetch } from '../../hooks';\r\n\r\ninterface Props {\r\n    setProductList?: any;\r\n    productList?: any;\r\n    productId?: any;\r\n    quantity?: any;\r\n    item?: any\r\n}\r\n\r\nconst CartOverLayCartItem = ({\r\n    productList,\r\n    setProductList,\r\n    productId,\r\n    quantity,\r\n    item\r\n}: Props) => {\r\n\r\n\r\n    const [productDetailState, handleProductFetch] = useHandleFetch(\r\n        {},\r\n        'productDetailById'\r\n    );\r\n    const [product, setProduct] = useState({});\r\n    const [isLoading, setIsLoading] = useState(false);\r\n\r\n\r\n    useEffect(() => {\r\n        setIsLoading(true);\r\n        const getAndSetProduct = async () => {\r\n            const product = await handleProductFetch({\r\n                urlOptions: {\r\n                    placeHolders: {\r\n                        id: productId,\r\n                    },\r\n                },\r\n            });\r\n\r\n            // @ts-ignore\r\n            setProduct(product);\r\n            setIsLoading(false);\r\n        };\r\n        getAndSetProduct()\r\n    }, []);\r\n\r\n\r\n\r\n    // useEffect(() => {\r\n    //     const positionInAttribute = () => {\r\n    //         return attributeList.map(item => item.id).indexOf(attribute.id);\r\n    //     }\r\n\r\n    //     const index = positionInAttribute();\r\n\r\n    //     const updatedItem = Object.assign({}, attributeList[index], { ...attributeItem });\r\n    //     const updateProductList = [...attributeList.slice(0, index), updatedItem, ...attributeList.slice(index + 1)];\r\n    //     setProductList(updateProductList);\r\n\r\n    // }, [attributeItem])\r\n\r\n\r\n    const handleAttributeDelete = () => {\r\n\r\n        const updateProductList = productList.filter(item => item._id !== productId);\r\n        setProductList(updateProductList);\r\n    }\r\n\r\n\r\n\r\n\r\n    const handleChangeQuantity = async (value) => {\r\n        if (value === 'minus') {\r\n            if (quantity === 1) {\r\n                return;\r\n            }\r\n\r\n            const positionInAttribute = () => {\r\n                return productList.map(item => item._id).indexOf(productId);\r\n            }\r\n\r\n            const index = positionInAttribute();\r\n\r\n            const updatedItem = Object.assign({}, productList[index], { ...item, quantity: --quantity });\r\n            const updateAttributeList = [...productList.slice(0, index), updatedItem, ...productList.slice(index + 1)];\r\n            setProductList(updateAttributeList);\r\n\r\n\r\n        } else {\r\n            const positionInAttribute = () => {\r\n                return productList.map(item => item._id).indexOf(productId);\r\n            }\r\n\r\n            const index = positionInAttribute();\r\n\r\n            const updatedItem = Object.assign({}, productList[index], { ...item, quantity: ++quantity });\r\n            const updateAttributeList = [...productList.slice(0, index), updatedItem, ...productList.slice(index + 1)];\r\n            setProductList(updateAttributeList)\r\n\r\n\r\n        }\r\n    };\r\n\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            {productDetailState.done && Object.keys(productDetailState.data).length > 0 && (\r\n                <div className='cart-item' key={''}>\r\n                    <div className='cart-item-quantityCounter'>\r\n                        <i\r\n                            onClick={() => {\r\n                                handleChangeQuantity('plus');\r\n                            }}\r\n                            className='fa fa-chevron-up'\r\n\r\n                        ></i>\r\n                        <p className='item-amount'>{quantity}</p>\r\n                        <i\r\n                            onClick={() => {\r\n                                handleChangeQuantity('minus');\r\n                            }}\r\n                            className='fa fa-chevron-down'\r\n\r\n                        ></i>\r\n                    </div>\r\n\r\n\r\n                    <img\r\n\r\n                        src={product['cover']}\r\n                        alt='productImg'\r\n                        style={{\r\n                            cursor: 'pointer',\r\n                        }}\r\n                    />\r\n                    <div className='cart-item-info'>\r\n                        <h4\r\n\r\n\r\n                        >\r\n                            {product['name']}\r\n                        </h4>\r\n                        <h5\r\n                        >\r\n                            ${product['offerPrice'] ? product['offerPrice'] : product['regularPrice']}\r\n                        </h5>\r\n                        {/* <span\r\n             style={{\r\n               display: 'inline-block',\r\n               background: '#fafafa',\r\n               padding: '3px 3px',\r\n               borderRadius: 1,\r\n               fontSize: '12px',\r\n               marginRight: '5px',\r\n               color: '#777',\r\n               marginTop: '5px'\r\n             }}\r\n           >\r\n             15KG\r\n             </span> */}\r\n\r\n                    </div>\r\n                    {/* <span\r\n                        onClick={handleAttributeDelete}\r\n                        className='remove-item' >\r\n                        <i className='fa fa-times'></i>\r\n                    </span> */}\r\n\r\n                </div>\r\n            )}\r\n        </>\r\n    );\r\n};\r\n\r\n// @ts-ignore\r\nexport default CartOverLayCartItem;\r\n","import React from 'react'\r\n\r\n\r\n// import components\r\nimport AddNewOrderProductItem from \"./AddNewOrderProductItem\";\r\nimport Empty from \"../../components/Empty\";\r\n\r\nimport {\r\n    ShopOutlined\r\n} from '@ant-design/icons';\r\n\r\n\r\n\r\ninterface Props {\r\n    productList?: any;\r\n    setProductList?: any;\r\n}\r\n\r\nconst AddNewOrderSummary = ({\r\n    setProductList,\r\n    productList\r\n}: Props) => {\r\n    return (\r\n        <div className='addOrderContainer__container-orderSummary'>\r\n            <h3>\r\n                <span>\r\n                    <ShopOutlined />\r\n                </span>\r\n                Added Products\r\n            </h3>\r\n            <div className='addOrderContainer__container-productItemContainer'>\r\n                {productList.length > 0 && productList.map(item => {\r\n                    return <AddNewOrderProductItem\r\n                        setProductList={setProductList}\r\n                        productList={productList}\r\n                        productId={item._id}\r\n                        quantity={item.quantity}\r\n                        item={item}\r\n                    />;\r\n                })}\r\n\r\n                {!(productList.length > 0) && (\r\n                    <div style={{\r\n                        marginLeft: '32px'\r\n                    }}>\r\n                        <Empty title='No Product Added' height={150} />\r\n                    </div>\r\n                )}\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddNewOrderSummary\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useHandleFetch } from '../../hooks';\r\nimport { Select } from 'antd';\r\n\r\ninterface Props {\r\n    setCustomerId?: any;\r\n}\r\n\r\nconst { Option } = Select;\r\n\r\nconst Brands = ({ setCustomerId }: Props) => {\r\n    const [options, setoptions] = useState([]);\r\n    const [selectedBrandId, setSelectedBrandId] = useState('');\r\n    const [brandState, handleTagListFetch] = useHandleFetch({}, 'customerList');\r\n\r\n    function onChange(value) {\r\n        setSelectedBrandId(value);\r\n        setCustomerId(value);\r\n        console.log(`selected ${value}`);\r\n    }\r\n\r\n    function onBlur() {\r\n        console.log('blur');\r\n    }\r\n\r\n    function onFocus() {\r\n        console.log('focus');\r\n    }\r\n\r\n    function onSearch(val) {\r\n        console.log('search:', val);\r\n    }\r\n\r\n    useEffect(() => {\r\n        const setBrands = async () => {\r\n            const brandListRes = await handleTagListFetch({});\r\n\r\n            // @ts-ignore\r\n            if (brandListRes && brandListRes.length > 0) {\r\n                // @ts-ignore\r\n                const brandOptions = brandListRes.map((brand) => {\r\n                    return {\r\n                        value: brand.id,\r\n                        name: `${brand.firstName} ${brand.lastName}`\r\n                    };\r\n                });\r\n                setoptions(brandOptions);\r\n            }\r\n        };\r\n\r\n        setBrands();\r\n    }, []);\r\n\r\n    return (\r\n        <Select\r\n            showSearch\r\n            size='middle'\r\n            style={{ width: '100%' }}\r\n            placeholder='Select a Customer'\r\n            optionFilterProp='children'\r\n            onChange={onChange}\r\n            onFocus={onFocus}\r\n            onBlur={onBlur}\r\n            onSearch={onSearch}\r\n            filterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n        >\r\n            {brandState.done &&\r\n                brandState.data.length > 0 &&\r\n                options.map((option) => {\r\n                    return <Option value={option.value}>{option.name}</Option>;\r\n                })}\r\n        </Select>\r\n    );\r\n};\r\n\r\nexport default Brands;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useHandleFetch } from '../../hooks';\r\nimport { Select } from 'antd';\r\n\r\nconst { Option } = Select;\r\n\r\ninterface Props {\r\n    setProductIds?: any;\r\n}\r\n\r\n\r\nconst Tags = ({\r\n    setProductIds\r\n}: Props) => {\r\n    const [options, setoptions] = useState([]);\r\n    const [selectedOpions, setselectedOptions] = useState([]);\r\n    const [tagState, handleTagListFetch] = useHandleFetch({}, 'productList');\r\n\r\n    useEffect(() => {\r\n        const setTags = async () => {\r\n            const tagListRes = await handleTagListFetch({\r\n                urlOptions: {\r\n                    params: {\r\n                        isSubCategory: false\r\n                    }\r\n                }\r\n            });\r\n\r\n            // @ts-ignore\r\n            if (tagListRes && tagListRes.length > 0) {\r\n                // @ts-ignore\r\n                const tagOptions = tagListRes.map((tag) => {\r\n                    return tag.name\r\n                });\r\n                setoptions(tagOptions);\r\n            }\r\n\r\n        };\r\n\r\n        setTags();\r\n    }, []);\r\n\r\n\r\n\r\n    const handleChange = (selectItems) => {\r\n        setselectedOptions(selectItems)\r\n\r\n        if (tagState.done && tagState.data.length > 0 && selectItems.length > 0) {\r\n            const selectedCategoryIds = selectItems.map((item) => {\r\n                const selectedcategory = tagState.data.find(\r\n                    (cat) => cat.name.toLowerCase() === item.toLowerCase()\r\n                );\r\n                if (selectedcategory) {\r\n                    return selectedcategory.id;\r\n                }\r\n            });\r\n            setProductIds(selectedCategoryIds);\r\n        }\r\n        else {\r\n            setProductIds([])\r\n        }\r\n\r\n\r\n    }\r\n\r\n\r\n    console.log('selectedOpions', selectedOpions);\r\n\r\n\r\n    return (\r\n        <>\r\n\r\n            {tagState.done && tagState.data.length > 0 && <Select\r\n                mode=\"multiple\"\r\n                placeholder=\"search products\"\r\n                value={selectedOpions}\r\n                onChange={handleChange}\r\n                style={{ width: '100%' }}\r\n            >\r\n                {options.filter(o => !selectedOpions.includes(o)).map(item => (\r\n                    <Select.Option key={item} value={item}>\r\n                        {item}\r\n                    </Select.Option>\r\n                ))}\r\n            </Select>}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Tags\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n\r\nimport { useHandleFetch } from '../../hooks';\r\n// import third party ui lib\r\nimport { Upload, message, Switch, Select, Button, notification, Modal, Empty, Steps, Form, Checkbox } from 'antd';\r\n\r\nimport {\r\n\tFileOutlined,\r\n\tInboxOutlined,\r\n\tRadiusUpleftOutlined,\r\n\tRadiusUprightOutlined,\r\n\tRadiusBottomleftOutlined,\r\n\tRadiusBottomrightOutlined,\r\n\tDeleteOutlined,\r\n\tFileAddOutlined,\r\n\tPlusOutlined,\r\n\tCheckCircleOutlined,\r\n\tCaretRightOutlined,\r\n\tCaretLeftOutlined,\r\n\tCaretRightFilled,\r\n\tUserOutlined\r\n} from '@ant-design/icons';\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport AddNewOrderSummary from './AddNewOrderSummary';\r\nimport CustomersId from './CustomersId';\r\nimport AddProducts from './AddProducts';\r\nimport { product } from '../../state/ducks';\r\n\r\n\r\nconst { Option } = Select;\r\nconst { Step } = Steps;\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t\tmessage: message || 'Category Updated',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t\tmessage: message || 'Something Went Wrong',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n\tfirstName: Yup.string()\r\n\t\t.label('First name')\r\n\t\t.required()\r\n\t\t.min(2, 'First name must have at least 2 characters '),\r\n\tlastName: Yup.string()\r\n\t\t.label('Last name')\r\n\t\t.required()\r\n\t\t.min(2, 'Last name must have at least 2 characters '),\r\n\tphone: Yup.string()\r\n\t\t.required('Please tell us your mobile number.')\r\n\t\t.max(13, 'Please enter a valid mobile number.'),\r\n\tpassword: Yup.string()\r\n\t\t.label('Password')\r\n\t\t.required()\r\n\t\t.min(6, 'Password must have at least 6 characters'),\r\n\taddress1: Yup.string()\r\n\t\t.label('Address line 1')\r\n\t\t.required()\r\n\t\t.min(3, 'Address line 1 must have at least 3 characters '),\r\n\r\n\temail: Yup.string().label('Email').email('Please enter a valid email'),\r\n\r\n});\r\n\r\n\r\n\r\n\r\nconst initialValues = {\r\n\tphone: '',\r\n\temail: '',\r\n\tfirstName: '',\r\n\tlastName: '',\r\n\taddress1: '',\r\n\taddress2: '',\r\n\tzipCode: '',\r\n\tadditionalInfo: ''\r\n\r\n};\r\n\r\n\r\nconst steps = [\r\n\t{\r\n\t\ttitle: 'Order Information',\r\n\t\tcontent: '',\r\n\t\t// description: 'Add Customer & Products'\r\n\t},\r\n\t{\r\n\t\ttitle: 'Billing Address',\r\n\r\n\t},\r\n\t{\r\n\t\ttitle: 'Shipping Address',\r\n\t\tcontent: '',\r\n\t},\r\n\t{\r\n\t\ttitle: 'Payment Details',\r\n\t\tcontent: '',\r\n\t},\r\n\t{\r\n\t\ttitle: 'Review your Order',\r\n\t\tcontent: '',\r\n\t},\r\n];\r\n\r\n\r\n\r\n\r\ninterface Props {\r\n\r\n}\r\n\r\nconst AddNewOrder = ({ }: Props) => {\r\n\r\n\tconst [addOrderState, handleOrderFetch] = useHandleFetch({}, 'addOrder');\r\n\tconst [selectedCountryValue, setselectedCountryValue] = useState('');\r\n\tconst [selectedCityValue, setselectedCityValue] = useState('');\r\n\tconst [productIds, setProductIds] = useState([]);\r\n\tconst [productList, setProductList] = useState([]);\r\n\tconst [customerId, setCustomerId] = useState([]);\r\n\r\n\tconst [countryOptions, setcountryOptions] = useState([]);\r\n\tconst [cityOptions, setcityOptions] = useState([]);\r\n\r\n\tconst [countryListState, handleCountryListFetch] = useHandleFetch(\r\n\t\t[],\r\n\t\t'countryList'\r\n\t);\r\n\r\n\tconst [cityListState, handleCityListFetch] = useHandleFetch([], 'cityList');\r\n\r\n\tconst [countryList, setCountryList] = useState([]);\r\n\tconst [cityList, setCityList] = useState([]);\r\n\tconst [current, setCurrent] = useState(0);\r\n\r\n\r\n\tconst next = () => {\r\n\t\tconst newCurrent = current + 1;\r\n\t\tsetCurrent(newCurrent);\r\n\t}\r\n\r\n\r\n\tconst prev = () => {\r\n\t\tconst newCurrent = current - 1;\r\n\t\tsetCurrent(newCurrent);\r\n\t}\r\n\r\n\r\n\tconst handleSubmit = async (values: any, actions: any) => {\r\n\t\tconsole.log('selectedCityValue', selectedCityValue)\r\n\r\n\t\tconst addRegionRes = await handleOrderFetch({\r\n\r\n\t\t\tbody: {\r\n\t\t\t\tname: values.name,\r\n\t\t\t\tpickUpLocation: values.pickUpLocation,\r\n\t\t\t\ttime: values.time,\r\n\t\t\t\tcountry: selectedCountryValue,\r\n\t\t\t\tcity: selectedCityValue,\r\n\t\t\t\t// charge\r\n\t\t\t},\r\n\t\t});\r\n\r\n\r\n\t\t// @ts-ignore\r\n\t\tif (addRegionRes && addRegionRes.status === 'ok') {\r\n\t\t\topenSuccessNotification();\r\n\r\n\r\n\t\t\tactions.resetForm();\r\n\t\t}\r\n\t\telse {\r\n\t\t\topenErrorNotification();\r\n\t\t}\r\n\r\n\r\n\t\tactions.setSubmitting(false);\r\n\t};\r\n\r\n\r\n\r\n\tconst onChangeCity = (value) => {\r\n\t\tsetselectedCityValue(value);\r\n\t}\r\n\r\n\tconst onChangeCountry = (value) => {\r\n\t\tsetselectedCountryValue(value);\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tconst setCountries = async () => {\r\n\t\t\tconst CountryListRes = await handleCountryListFetch({});\r\n\r\n\t\t\t// @ts-ignore\r\n\t\t\tif (CountryListRes && CountryListRes.length > 0) {\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\tconst countryOptions = CountryListRes.map((country) => {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tvalue: country.name,\r\n\t\t\t\t\t\tname: country.name\r\n\t\t\t\t\t};\r\n\t\t\t\t});\r\n\t\t\t\tsetcountryOptions(countryOptions);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tsetCountries();\r\n\t}, []);\r\n\r\n\r\n\tuseEffect(() => {\r\n\t\tconst setCities = async () => {\r\n\t\t\tconst cityListRes = await handleCityListFetch({\r\n\t\t\t\turlOptions: {\r\n\t\t\t\t\tplaceHolders: {\r\n\t\t\t\t\t\tcountry: selectedCountryValue,\r\n\t\t\t\t\t},\r\n\t\t\t\t},\r\n\t\t\t});\r\n\r\n\t\t\t// @ts-ignore\r\n\t\t\tif (cityListRes && cityListRes.length > 0) {\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\tconst cityOptions = cityListRes.map((city) => {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tvalue: city.name,\r\n\t\t\t\t\t\tname: city.name\r\n\t\t\t\t\t};\r\n\t\t\t\t});\r\n\t\t\t\tsetcityOptions(cityOptions);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tsetCities();\r\n\t}, [selectedCountryValue]);\r\n\r\n\r\n\r\n\r\n\r\n\tconst getisSubmitButtonDisabled = (values, isValid) => {\r\n\t\tif (!isValid ||\r\n\t\t\t!values.name ||\r\n\t\t\t!values.pickUpLocation ||\r\n\t\t\t!values.time) {\r\n\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\r\n\r\n\tconst handleAddDeliveryCharge = () => {\r\n\r\n\t};\r\n\r\n\r\n\r\n\tuseEffect(() => {\r\n\r\n\t\tif (productIds.length > 0) {\r\n\r\n\t\t\tif (productIds.length > productList.length) {\r\n\t\t\t\tsetProductList([...productList, {\r\n\t\t\t\t\t_id: productIds[productIds.length - 1],\r\n\t\t\t\t\tvariation: '5f0a8f0e10cf2f1dc280d915',\r\n\t\t\t\t\tquantity: 1\r\n\t\t\t\t}]);\r\n\t\t\t}\r\n\r\n\r\n\t\t\telse if (productIds.length < productList.length) {\r\n\t\t\t\tconst newProductList = productList.filter(item => {\r\n\t\t\t\t\tlet isTrue = false;\r\n\t\t\t\t\tproductIds.forEach(productId => {\r\n\t\t\t\t\t\tif (productId === item._id) {\r\n\t\t\t\t\t\t\tisTrue = true;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t\treturn isTrue;\r\n\t\t\t\t})\r\n\t\t\t\tsetProductList(newProductList);\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\t\telse {\r\n\t\t\tsetProductList([]);\r\n\t\t}\r\n\t\tconsole.log('productIds', productIds)\r\n\r\n\r\n\t}, [productIds])\r\n\r\n\r\n\tconsole.log('productList', productList)\r\n\r\n\treturn (\r\n\t\t<Formik\r\n\t\t\tonSubmit={(values, actions) => handleSubmit(values, actions)}\r\n\t\t\tvalidationSchema={validationSchema}\r\n\t\t\tvalidateOnBlur={false}\r\n\t\t\tenableReinitialize={true}\r\n\t\t\tinitialValues={\r\n\t\t\t\t{ ...initialValues }\r\n\t\t\t}\r\n\t\t>\r\n\t\t\t{({\r\n\t\t\t\thandleChange,\r\n\t\t\t\tvalues,\r\n\t\t\t\thandleSubmit,\r\n\t\t\t\terrors,\r\n\t\t\t\tisValid,\r\n\t\t\t\tisSubmitting,\r\n\t\t\t\ttouched,\r\n\t\t\t\thandleBlur,\r\n\t\t\t\tsetFieldTouched,\r\n\t\t\t\thandleReset,\r\n\t\t\t}) => (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<div className='addOrderContainer'>\r\n\t\t\t\t\t\t\t<h3>\r\n\t\t\t\t\t\t\t\tAdd New Order\r\n\t\t\t\t\t\t\t</h3>\r\n\t\t\t\t\t\t\t<div className='addOrderContainer__container'>\r\n\t\t\t\t\t\t\t\t<Steps current={current}>\r\n\t\t\t\t\t\t\t\t\t{steps.map(item => (\r\n\t\t\t\t\t\t\t\t\t\t<Step\r\n\t\t\t\t\t\t\t\t\t\t\tkey={item.title}\r\n\t\t\t\t\t\t\t\t\t\t\ttitle={item.title} />\r\n\t\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t\t</Steps>\r\n\r\n\t\t\t\t\t\t\t\t{current === 0 && (\r\n\t\t\t\t\t\t\t\t\t<div className='addOrderContainer__container-OrderInfoContainer'>\r\n\t\t\t\t\t\t\t\t\t\t<div className='addOrderContainer__container-OrderInfoContainer-left'>\r\n\t\t\t\t\t\t\t\t\t\t\t<h3 className='addOrderContainer-sectionTitle'>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<UserOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n                                            Customers And products\r\n                                           </h3>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<h4 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\t\t\t\t\t\tCustomer\r\n\t\t\t\t\t\t\t\t\t\t\t</h4>\r\n\t\t\t\t\t\t\t\t\t\t\t<CustomersId setCustomerId={setCustomerId} />\r\n\t\t\t\t\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\tmarginTop: '15px'\r\n\t\t\t\t\t\t\t\t\t\t\t}}></div>\r\n\t\t\t\t\t\t\t\t\t\t\t<h4 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\t\t\t\t\t\tProducts\r\n\t\t\t\t\t\t\t\t\t\t\t</h4>\r\n\t\t\t\t\t\t\t\t\t\t\t<AddProducts setProductIds={setProductIds} />\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t<div className='addOrderContainer__container-OrderInfoContainer-right'>\r\n\t\t\t\t\t\t\t\t\t\t\t<AddNewOrderSummary\r\n\t\t\t\t\t\t\t\t\t\t\t\tsetProductList={setProductList}\r\n\t\t\t\t\t\t\t\t\t\t\t\tproductList={productList} />\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t)}\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t{current === 1 && (\r\n\t\t\t\t\t\t\t\t\t<div className='addOrderContainer__container-address'>\r\n\r\n\t\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs'>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tlabel='First Name'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.firstName}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tname='firstName'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.firstName && errors.firstName) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addOrderState.error['error']['firstName'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.firstName && errors.firstName) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addOrderState.error['error']['firstName'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('firstName');\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tlabel='Last Name'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.lastName}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tname='lastName'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.lastName && errors.lastName) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addOrderState.error['error']['lastName'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.lastName && errors.lastName) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addOrderState.error['error']['lastName'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('lastName');\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs'>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tlabel='Phone'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.phone}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tname='phone'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.phone && errors.phone) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addOrderState.error['error']['phone'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.phone && errors.phone) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addOrderState.error['error']['phone'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('phone');\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tlabel='Email'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.email}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tname='email'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.email && errors.email) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addOrderState.error['error']['email'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.email && errors.email) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addOrderState.error['error']['email'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('email');\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs'>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tCountry\r\n\t\t\t\t\t\t\t\t\t</h3>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Form.Item\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalidateStatus={(addOrderState.error['error']['country']) ? \"error\" : \"\"}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\thelp={addOrderState.error['error']['country']}\r\n\t\t\t\t\t\t\t\t\t\t\t\t// noStyle={true}\r\n\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Select\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tnotFoundContent={<Empty description='No Country Found' image={Empty.PRESENTED_IMAGE_SIMPLE} />}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tshowSearch\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{ width: '100%' }}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder='Select a Country'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\toptionFilterProp='children'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={onChangeCountry}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tfilterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{countryListState.done &&\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcountryListState.data.length > 0 &&\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcountryOptions.map((option) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn <Option value={option.value}>{option.name}</Option>;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Select>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Form.Item>\r\n\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tCity\r\n                                    </h3>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Form.Item\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t// noStyle={true}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalidateStatus={(addOrderState.error['error']['city']) ? \"error\" : \"\"}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\thelp={addOrderState.error['error']['city']}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Select\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='selectClassName'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tnotFoundContent={<Empty description='First Select a Country' image={Empty.PRESENTED_IMAGE_SIMPLE} />}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tshowSearch\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{ width: '100%' }}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder='Select a city'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\toptionFilterProp='children'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={onChangeCity}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tfilterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{cityListState.done &&\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcityListState.data.length > 0 &&\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcityOptions.map((option) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn <Option value={option.value}>{option.name}</Option>;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Select>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Form.Item>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\t\t\t\tmarginTop: '12px'\r\n\t\t\t\t\t\t\t\t\t\t}}></div>\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs'>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tlabel='Address'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.address1}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tname='address1'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.address1 && errors.address1) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addOrderState.error['error']['address1'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.address1 && errors.address1) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addOrderState.error['error']['address1'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('address1');\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tlabel='More specific address'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.address2}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tname='address2'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.address2 && errors.address2) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addOrderState.error['error']['address2'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.address2 && errors.address2) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addOrderState.error['error']['address2'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('address2');\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t)}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t{current === 2 && (\r\n\t\t\t\t\t\t\t\t\t<div className='addOrderContainer__container-address'>\r\n\r\n\t\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs'>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tlabel='First Name'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.firstName}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tname='firstName'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.firstName && errors.firstName) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addOrderState.error['error']['firstName'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.firstName && errors.firstName) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addOrderState.error['error']['firstName'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('firstName');\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tlabel='Last Name'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.lastName}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tname='lastName'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.lastName && errors.lastName) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addOrderState.error['error']['lastName'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.lastName && errors.lastName) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addOrderState.error['error']['lastName'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('lastName');\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs'>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tlabel='Phone'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.phone}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tname='phone'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.phone && errors.phone) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addOrderState.error['error']['phone'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.phone && errors.phone) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addOrderState.error['error']['phone'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('phone');\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tlabel='Email'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.email}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tname='email'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.email && errors.email) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addOrderState.error['error']['email'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.email && errors.email) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addOrderState.error['error']['email'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('email');\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs'>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tCountry\r\n\t\t\t\t\t\t\t\t\t</h3>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Form.Item\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalidateStatus={(addOrderState.error['error']['country']) ? \"error\" : \"\"}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\thelp={addOrderState.error['error']['country']}\r\n\t\t\t\t\t\t\t\t\t\t\t\t// noStyle={true}\r\n\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Select\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tnotFoundContent={<Empty description='No Country Found' image={Empty.PRESENTED_IMAGE_SIMPLE} />}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tshowSearch\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{ width: '100%' }}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder='Select a Country'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\toptionFilterProp='children'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={onChangeCountry}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tfilterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{countryListState.done &&\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcountryListState.data.length > 0 &&\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcountryOptions.map((option) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn <Option value={option.value}>{option.name}</Option>;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Select>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Form.Item>\r\n\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tCity\r\n                                    </h3>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Form.Item\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t// noStyle={true}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalidateStatus={(addOrderState.error['error']['city']) ? \"error\" : \"\"}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\thelp={addOrderState.error['error']['city']}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Select\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='selectClassName'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tnotFoundContent={<Empty description='First Select a Country' image={Empty.PRESENTED_IMAGE_SIMPLE} />}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tshowSearch\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{ width: '100%' }}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder='Select a city'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\toptionFilterProp='children'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={onChangeCity}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tfilterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{cityListState.done &&\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcityListState.data.length > 0 &&\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcityOptions.map((option) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn <Option value={option.value}>{option.name}</Option>;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Select>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Form.Item>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\t\t\t\tmarginTop: '12px'\r\n\t\t\t\t\t\t\t\t\t\t}}></div>\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs'>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tlabel='Address'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.address1}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tname='address1'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.address1 && errors.address1) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addOrderState.error['error']['address1'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.address1 && errors.address1) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addOrderState.error['error']['address1'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('address1');\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tlabel='More specific address'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.address2}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tname='address2'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.address2 && errors.address2) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addOrderState.error['error']['address2'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.address2 && errors.address2) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addOrderState.error['error']['address2'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('address2');\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t)}\r\n\r\n\t\t\t\t\t\t\t\t{/* {current === steps.length - 1 && (\r\n\r\n\t\t\t\t\t\t\t\t\t<Button type=\"primary\" onClick={() => message.success('Processing complete!')}>\r\n\t\t\t\t\t\t\t\t\t\tDone\r\n\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t)} */}\r\n\t\t\t\t\t\t\t\t{current > 0 && (\r\n\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\tstyle={{ marginRight: '15px', marginTop: '10px' }}\r\n\t\t\t\t\t\t\t\t\t\t// type=\"primary\"\r\n\t\t\t\t\t\t\t\t\t\tclassName='btnPrimaryClassNameoutline'\r\n\t\t\t\t\t\t\t\t\t\ttype=\"primary\" onClick={() => prev()}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t<CaretLeftOutlined />\tPrevious\r\n\r\n\t\t\t\t\t\t\t\t\t</Button>\r\n\r\n\t\t\t\t\t\t\t\t)}\r\n\r\n\t\t\t\t\t\t\t\t{current < steps.length - 1 && (\r\n\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\t\tmarginTop: '10px'\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\r\n\t\t\t\t\t\t\t\t\t\tclassName='btnPrimaryClassNameoutline'\r\n\t\t\t\t\t\t\t\t\t\ttype=\"primary\" onClick={() => next()}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\tNext< CaretRightOutlined />\r\n\r\n\t\t\t\t\t\t\t\t\t</Button>\r\n\r\n\t\t\t\t\t\t\t\t)}\r\n\r\n\r\n\t\t\t\t\t\t\t\t{/* <div className='addOrderContainer__container-left'>\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className='addOrderContainer__container-right'>\r\n\t\t\t\t\t\t\t\t\t<AddNewOrderSummary />\r\n\t\t\t\t\t\t\t\t</div> */}\r\n\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t</>\r\n\t\t\t\t)}\r\n\t\t</Formik>\r\n\r\n\r\n\r\n\r\n\t);\r\n};\r\n\r\nexport default AddNewOrder;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { AutoComplete } from 'antd';\r\n\r\nimport InputSmall from '../../components/Field/InputSmall';\r\nimport MediaLibrary from '../../components/MediaLibrary';\r\n\r\nimport { useFetch } from \"../../hooks\";\r\nimport {\r\n    DeleteOutlined,\r\n    FileAddOutlined\r\n} from '@ant-design/icons';\r\n\r\n\r\n\r\nconst Complete = ({ setItemsList, itemsList, componentItem }) => {\r\n\r\n\r\n    const [localComponentItem, setlocalComponentItem] = useState({\r\n        title: componentItem.title,\r\n        target: componentItem.target,\r\n        text: componentItem.text,\r\n        image: componentItem.image,\r\n    })\r\n\r\n    const [myImages, setmyImages] = useState([]);\r\n    const [visibleMedia, setvisibleMedia] = useState(false);\r\n\r\n    const handleComponentItemsChange = (e) => {\r\n        const name = e.target.name;\r\n        const value = e.target.value;\r\n\r\n        setlocalComponentItem({\r\n            ...localComponentItem,\r\n            [name]: value\r\n        });\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (myImages.length > 0) {\r\n            const newImages = myImages.map(item => item.id);\r\n            setlocalComponentItem({\r\n                ...localComponentItem,\r\n                image: [...newImages]\r\n            })\r\n        }\r\n        else {\r\n            setlocalComponentItem({\r\n                ...localComponentItem,\r\n                image: []\r\n            })\r\n        }\r\n\r\n    }, [myImages])\r\n\r\n    useEffect(() => {\r\n        const positionInAttribute = () => {\r\n            return itemsList.map(item => item.id).indexOf(componentItem.id);\r\n        }\r\n\r\n        const index = positionInAttribute();\r\n\r\n        const updatedItem = Object.assign({}, itemsList[index], { ...localComponentItem });\r\n        const updateComponentList = [...itemsList.slice(0, index), updatedItem, ...itemsList.slice(index + 1)];\r\n        setItemsList(updateComponentList);\r\n\r\n    }, [localComponentItem])\r\n\r\n\r\n    const handleAttributeDelete = () => {\r\n\r\n        const updateComponentList = itemsList.filter(item => item.id !== componentItem.id);\r\n        setItemsList(updateComponentList);\r\n    }\r\n\r\n\r\n    const handleImagesDelete = (id) => {\r\n        // @ts-ignore\r\n        const newImages = myImages && myImages.filter(image => {\r\n            return image.id !== id;\r\n        })\r\n\r\n        setmyImages(newImages);\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n\r\n\r\n            <div className='componentItemsContainer__item'>\r\n                <InputSmall\r\n                    label='Title'\r\n                    value={localComponentItem.title}\r\n                    name='title'\r\n                    onChange={handleComponentItemsChange}\r\n                />\r\n                <InputSmall\r\n                    label='Text'\r\n                    value={localComponentItem.text}\r\n                    name='text'\r\n                    onChange={handleComponentItemsChange}\r\n                />\r\n\r\n                <InputSmall\r\n                    label='Target'\r\n                    value={localComponentItem.target}\r\n                    name='target'\r\n                    onChange={handleComponentItemsChange}\r\n                />\r\n\r\n\r\n                <h3 className='inputFieldLabel-small'>Images</h3>\r\n                <div className='aboutToUploadImagesContainer'>\r\n                    {myImages &&\r\n                        // @ts-ignore\r\n                        myImages.length > 0 && myImages.map(image => {\r\n                            return (\r\n                                <div className='aboutToUploadImagesContainer__item'>\r\n                                    <div\r\n                                        onClick={() => handleImagesDelete(image.id)}\r\n                                        className='aboutToUploadImagesContainer__item-overlay'>\r\n                                        <DeleteOutlined />\r\n                                    </div>\r\n                                    <img src={image.cover} alt={image.alt} />\r\n                                </div>\r\n                            )\r\n                        })}\r\n\r\n                    <div\r\n                        onClick={() => {\r\n                            setvisibleMedia(true);\r\n                        }}\r\n                        className='aboutToUploadImagesContainer__uploadItem'>\r\n                        <FileAddOutlined />\r\n                        {/* <h5>\r\n\t\t\t\t\t\t\t\t\t\t\t\tSelect From Library\r\n\t\t\t\t\t\t\t\t\t\t\t</h5> */}\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n            <MediaLibrary\r\n                setvisible={setvisibleMedia}\r\n                visible={visibleMedia}\r\n                myImages={myImages}\r\n                setmyImages={setmyImages}\r\n                isModalOpenForImages={true}\r\n\r\n            />\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Complete;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n\r\nimport { useHandleFetch } from '../../hooks';\r\n// import third party ui lib\r\nimport { Upload, message, Switch, Select, Button, notification, Modal } from 'antd';\r\n\r\nimport {\r\n    FileOutlined,\r\n    InboxOutlined,\r\n    FileAddOutlined,\r\n    DeleteOutlined,\r\n    CheckCircleOutlined,\r\n    PlusOutlined\r\n} from '@ant-design/icons';\r\n\r\n\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport MediaLibrary from \"../../components/MediaLibrary\";\r\nimport ComponentItem from \"./ComponentItem\";\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    groupName: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Component Created',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Something Went Wrong',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst initialValues = {\r\n    groupName: '',\r\n    items: [],\r\n}\r\n\r\n\r\n\r\ninterface Props {\r\n    addNewCategoryVisible?: any;\r\n    setAddNewCategoryVisible?: any;\r\n    componentList?: any;\r\n    setComponentList?: any;\r\n\r\n}\r\n\r\nconst AddNewBrand = ({ addNewCategoryVisible, setAddNewCategoryVisible, componentList, setComponentList }: Props) => {\r\n\r\n    const [addComponentState, handleAddComponentFetch] = useHandleFetch({}, 'addComponent');\r\n    const [myImages, setmyImages] = useState(false);\r\n    const [itemsList, setItemsList] = useState([])\r\n\r\n\r\n    const handleSubmit = async (values: any, actions: any) => {\r\n\r\n\r\n        const addComponentRes = await handleAddComponentFetch({\r\n            body: {\r\n                groupName: values.groupName,\r\n                items: itemsList\r\n            },\r\n        });\r\n\r\n        // @ts-ignore\r\n        if (addComponentRes && addComponentRes.status === 'ok') {\r\n            openSuccessNotification();\r\n            setComponentList([...componentList, {\r\n                id: addComponentRes['id'] || '',\r\n                key: addComponentRes['id'] || '',\r\n                groupName: addComponentRes['groupName'] || '',\r\n                // @ts-ignore\r\n                ...addComponentRes\r\n            }])\r\n            actions.resetForm();\r\n            setAddNewCategoryVisible(false);\r\n        }\r\n        else {\r\n            openErrorNotification();\r\n        }\r\n\r\n\r\n\r\n\r\n        actions.setSubmitting(false);\r\n\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (!addComponentState['isLoading']) {\r\n            const error = addComponentState['error'];\r\n            if (error['isError'] && Object.keys(error['error']).length > 0) {\r\n\r\n\r\n                const errors =\r\n                    Object.values(error['error']).length > 0\r\n                        ? Object.values(error['error'])\r\n                        : [];\r\n                errors.forEach((err, i) => {\r\n                    if (typeof err === 'string') {\r\n                        openErrorNotification(err)\r\n                    }\r\n                    else if (typeof err === 'object') {\r\n                        if (err && Object.keys(err).length > 0) {\r\n                            const errs = Object.values(err);\r\n                            errs.forEach(err => {\r\n                                openErrorNotification(err)\r\n                            })\r\n\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n        }\r\n    }, [addComponentState])\r\n\r\n\r\n\r\n\r\n    const onSwitchChange = (checked: any) => {\r\n        console.log(checked);\r\n    };\r\n\r\n\r\n    const handleCancel = (e: any) => {\r\n        setAddNewCategoryVisible(false);\r\n    };\r\n\r\n\r\n    const getisSubmitButtonDisabled = (values, isValid) => {\r\n        if (!values.groupName) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n    const handleAddComponentItem = () => {\r\n        setItemsList([...itemsList, {\r\n            title: '',\r\n            target: '',\r\n            text: '',\r\n            image: [],\r\n            id: `${itemsList.length}`\r\n        }])\r\n    }\r\n\r\n\r\n\r\n\r\n    console.log('itemsList', itemsList)\r\n    return (\r\n        <Formik\r\n            onSubmit={(values, actions) => handleSubmit(values, actions)}\r\n            validationSchema={validationSchema}\r\n            validateOnBlur={false}\r\n            enableReinitialize={true}\r\n            initialValues={\r\n                { ...initialValues }\r\n            }\r\n        >\r\n            {({\r\n                handleChange,\r\n                values,\r\n                handleSubmit,\r\n                errors,\r\n                isValid,\r\n                isSubmitting,\r\n                touched,\r\n                handleBlur,\r\n                setFieldTouched,\r\n                handleReset,\r\n            }) => (\r\n                    <>\r\n                        <Modal\r\n                            style={{\r\n                                top: '40px'\r\n                            }}\r\n                            title=\"Add New Component\"\r\n                            visible={addNewCategoryVisible}\r\n                            onOk={(e: any) => handleSubmit(e)}\r\n                            onCancel={handleCancel}\r\n                            okText='Create'\r\n                            okButtonProps={{\r\n                                loading: isSubmitting,\r\n                                htmlType: \"submit\",\r\n                                disabled: getisSubmitButtonDisabled(values, isValid)\r\n                            }}\r\n                            width={'50vw'}\r\n                            bodyStyle={{\r\n                                margin: '0',\r\n                                padding: '10px'\r\n                            }}\r\n                        >\r\n                            <Input\r\n                                label='Group Component Name'\r\n                                value={values.groupName}\r\n                                name='groupName'\r\n                                isError={(touched.groupName && errors.groupName) ||\r\n                                    (!isSubmitting && addComponentState.error['error']['name'])}\r\n\r\n                                errorString={(touched.groupName && errors.groupName) ||\r\n                                    (!isSubmitting && addComponentState.error['error']['name'])}\r\n                                onChange={(e: any) => {\r\n                                    handleChange(e);\r\n                                    setFieldTouched('groupName');\r\n                                }}\r\n                            />\r\n                            <div style={{\r\n                                marginTop: '15px',\r\n                            }}></div>\r\n                            <h3 className='inputFieldLabel'>Children</h3>\r\n\r\n                            <div className='componentItemsContainer'>\r\n                                {itemsList.map(itemComponent => {\r\n                                    return <ComponentItem\r\n                                        componentItem={itemComponent}\r\n                                        itemsList={itemsList} setItemsList={setItemsList} />\r\n                                })}\r\n\r\n                                <Button size='small'\r\n                                    onClick={handleAddComponentItem}\r\n                                    style={{\r\n                                        width: '290px',\r\n                                        minHeight: '145px',\r\n                                        marginTop: '0px'\r\n                                    }} type=\"dashed\" icon={<PlusOutlined />}>Add Childrens</Button>\r\n                            </div>\r\n\r\n                            <div\r\n                                style={{\r\n                                    marginTop: '20px'\r\n                                }}\r\n                            />\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n                        </Modal>\r\n\r\n\r\n                    </>\r\n                )}\r\n        </Formik>\r\n\r\n\r\n\r\n\r\n    );\r\n};\r\n\r\nexport default AddNewBrand;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { AutoComplete, Button } from 'antd';\r\n\r\nimport InputSmall from '../../components/Field/InputSmall';\r\nimport MediaLibrary from '../../components/MediaLibrary';\r\n\r\nimport { useFetch } from \"../../hooks\";\r\nimport {\r\n    DeleteOutlined,\r\n    FileAddOutlined, \r\n    SaveOutlined\r\n} from '@ant-design/icons';\r\n\r\n\r\n\r\nconst Complete = ({ setComponentList, componentList, item, component,componentUpdate }) => {\r\n\r\n\r\n    const [localComponentItem, setlocalComponentItem] = useState({\r\n        title: item.title,\r\n        target: item.target,\r\n        text: item.text,\r\n        image: item.image,\r\n    })\r\n\r\n    const [myImages, setmyImages] = useState([]);\r\n    const [visibleMedia, setvisibleMedia] = useState(false);\r\n\r\n    const handleComponentItemsChange = (e) => {\r\n        const name = e.target.name;\r\n        const value = e.target.value;\r\n\r\n        setlocalComponentItem({\r\n            ...localComponentItem,\r\n            [name]: value\r\n        });\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (myImages.length > 0) {\r\n            const newImages = myImages.map(item => item.id);\r\n            setlocalComponentItem({\r\n                ...localComponentItem,\r\n                image: [...newImages]\r\n            })\r\n        }\r\n        else {\r\n            setlocalComponentItem({\r\n                ...localComponentItem,\r\n                image: []\r\n            })\r\n        }\r\n\r\n    }, [myImages])\r\n\r\n\r\n\r\n\r\n\r\n\r\n    const handleImagesDelete = (id) => {\r\n        // @ts-ignore\r\n        const newImages = myImages && myImages.filter(image => {\r\n            return image.id !== id;\r\n        })\r\n\r\n        setmyImages(newImages);\r\n    }\r\n\r\n\r\n    const handleComponentItemUpdate = () => {\r\n        componentUpdate(item,component,localComponentItem); \r\n    }\r\n\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n\r\n\r\n            <div\r\n                style={{\r\n                    width: '100%',\r\n                    boxShadow: \"none\"\r\n                }}\r\n                className='componentItemsContainer__item'>\r\n                <InputSmall\r\n                    label='Title'\r\n                    value={localComponentItem.title}\r\n                    name='title'\r\n                    onChange={handleComponentItemsChange}\r\n                />\r\n                <InputSmall\r\n                    label='Text'\r\n                    value={localComponentItem.text}\r\n                    name='text'\r\n                    onChange={handleComponentItemsChange}\r\n                />\r\n\r\n                <InputSmall\r\n                    label='Target'\r\n                    value={localComponentItem.target}\r\n                    name='target'\r\n                    onChange={handleComponentItemsChange}\r\n                />\r\n\r\n\r\n                <h3 className='inputFieldLabel-small'>Images</h3>\r\n                <div className='aboutToUploadImagesContainer'>\r\n                    {myImages &&\r\n                        // @ts-ignore\r\n                        myImages.length > 0 && myImages.map(image => {\r\n                            return (\r\n                                <div className='aboutToUploadImagesContainer__item'>\r\n                                    <div\r\n                                        onClick={() => handleImagesDelete(image.id)}\r\n                                        className='aboutToUploadImagesContainer__item-overlay'>\r\n                                        <DeleteOutlined />\r\n                                    </div>\r\n                                    <img src={image.cover} alt={image.alt} />\r\n                                </div>\r\n                            )\r\n                        })}\r\n\r\n                    <div\r\n                        onClick={() => {\r\n                            setvisibleMedia(true);\r\n                        }}\r\n                        className='aboutToUploadImagesContainer__uploadItem'>\r\n                        <FileAddOutlined />\r\n                        {/* <h5>\r\n\t\t\t\t\t\t\t\t\t\t\t\tSelect From Library\r\n\t\t\t\t\t\t\t\t\t\t\t</h5> */}\r\n                    </div>\r\n\r\n        \r\n\r\n                </div>\r\n                <Button\r\n                style={{\r\n                    marginTop: '15px'\r\n                }}\r\n                    icon={<SaveOutlined />}\r\n          className='btnPrimaryClassNameoutline'\r\n          onClick={() => handleComponentItemUpdate()}\r\n        >\r\n        Save\r\n            \r\n            </Button>\r\n            </div>\r\n            <MediaLibrary\r\n                setvisible={setvisibleMedia}\r\n                visible={visibleMedia}\r\n                myImages={myImages}\r\n                setmyImages={setmyImages}\r\n                isModalOpenForImages={true}\r\n\r\n            />\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Complete;\r\n","import React, { useState, useEffect } from 'react';\r\nimport * as Yup from 'yup';\r\n\r\n\r\nimport { useHandleFetch } from '../../hooks';\r\n// import third party ui lib\r\nimport { Upload, message, Switch, Select, Button, notification, Modal } from 'antd';\r\n\r\nimport {\r\n    FileOutlined,\r\n    InboxOutlined,\r\n    FileAddOutlined,\r\n    DeleteOutlined,\r\n    CheckCircleOutlined,\r\n    PlusOutlined\r\n} from '@ant-design/icons';\r\n\r\n\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport MediaLibrary from \"../../components/MediaLibrary\";\r\nimport ComponentItem from \"./ComponentItem\";\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    groupName: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Component Created',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Something Went Wrong',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst initialValues = {\r\n    groupName: '',\r\n    items: [],\r\n}\r\n\r\n\r\n\r\ninterface Props {\r\n    addNewCategoryVisible?: any;\r\n    setAddNewCategoryVisible?: any;\r\n    componentList?: any;\r\n    setComponentList?: any;\r\n    updateComponentByAddingItem?: any;\r\n    componentId?: any\r\n\r\n}\r\n\r\nconst AddNewBrand = ({ addNewCategoryVisible,\r\n    setAddNewCategoryVisible, componentList,\r\n    setComponentList,\r\n    updateComponentByAddingItem, componentId }: Props) => {\r\n\r\n\r\n    const [localComponentItem, setlocalComponentItem] = useState({\r\n        title: '',\r\n        target: '',\r\n        text: '',\r\n        image: [],\r\n    })\r\n\r\n    const [myImages, setmyImages] = useState([]);\r\n    const [visibleMedia, setvisibleMedia] = useState(false);\r\n\r\n    const handleComponentItemsChange = (e) => {\r\n        const name = e.target.name;\r\n        const value = e.target.value;\r\n\r\n        setlocalComponentItem({\r\n            ...localComponentItem,\r\n            [name]: value\r\n        });\r\n    };\r\n\r\n\r\n    const onSwitchChange = (checked: any) => {\r\n        console.log(checked);\r\n    };\r\n\r\n\r\n    const handleCancel = (e: any) => {\r\n        setAddNewCategoryVisible(false);\r\n    };\r\n\r\n\r\n    const getisSubmitButtonDisabled = (values, isValid) => {\r\n        if (!values.groupName) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        if (myImages.length > 0) {\r\n            const newImages = myImages.map(item => item.id);\r\n            setlocalComponentItem({\r\n                ...localComponentItem,\r\n                image: [...newImages]\r\n            })\r\n        }\r\n        else {\r\n            setlocalComponentItem({\r\n                ...localComponentItem,\r\n                image: []\r\n            })\r\n        }\r\n\r\n    }, [myImages])\r\n\r\n\r\n\r\n\r\n\r\n\r\n    const handleImagesDelete = (id) => {\r\n        // @ts-ignore\r\n        const newImages = myImages && myImages.filter(image => {\r\n            return image.id !== id;\r\n        })\r\n\r\n        setmyImages(newImages);\r\n    }\r\n\r\n\r\n    const handleAddItem = (e) => {\r\n        updateComponentByAddingItem(localComponentItem, componentId)\r\n    }\r\n\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <Modal\r\n                style={{\r\n                    top: '40px'\r\n                }}\r\n                destroyOnClose={true}\r\n                title=\"Add New Component Item\"\r\n                visible={addNewCategoryVisible}\r\n                onOk={(e: any) => handleAddItem(e)}\r\n                onCancel={handleCancel}\r\n                okText='Add'\r\n                okButtonProps={{\r\n                    htmlType: \"submit\",\r\n                }}\r\n                width={'400px'}\r\n                bodyStyle={{\r\n                    margin: '0',\r\n                    padding: '10px'\r\n                }}\r\n            >\r\n                <Input\r\n                    label='Title'\r\n                    value={localComponentItem.title}\r\n                    name='title'\r\n                    onChange={handleComponentItemsChange}\r\n                />\r\n                <Input\r\n                    label='Text'\r\n                    value={localComponentItem.text}\r\n                    name='text'\r\n                    onChange={handleComponentItemsChange}\r\n                />\r\n\r\n                <Input\r\n                    label='Target'\r\n                    value={localComponentItem.target}\r\n                    name='target'\r\n                    onChange={handleComponentItemsChange}\r\n                />\r\n\r\n\r\n                <h3 className='inputFieldLabel-small'>Images</h3>\r\n                <div className='aboutToUploadImagesContainer'>\r\n                    {myImages &&\r\n                        // @ts-ignore\r\n                        myImages.length > 0 && myImages.map(image => {\r\n                            return (\r\n                                <div className='aboutToUploadImagesContainer__item'>\r\n                                    <div\r\n                                        onClick={() => handleImagesDelete(image.id)}\r\n                                        className='aboutToUploadImagesContainer__item-overlay'>\r\n                                        <DeleteOutlined />\r\n                                    </div>\r\n                                    <img src={image.cover} alt={image.alt} />\r\n                                </div>\r\n                            )\r\n                        })}\r\n\r\n                    <div\r\n                        onClick={() => {\r\n                            setvisibleMedia(true);\r\n                        }}\r\n                        className='aboutToUploadImagesContainer__uploadItem'>\r\n                        <FileAddOutlined />\r\n                    </div>\r\n                </div>\r\n                <MediaLibrary\r\n                    setvisible={setvisibleMedia}\r\n                    visible={visibleMedia}\r\n                    myImages={myImages}\r\n                    setmyImages={setmyImages}\r\n                    isModalOpenForImages={true} />\r\n\r\n            </Modal>\r\n        </>\r\n\r\n\r\n    );\r\n};\r\n\r\nexport default AddNewBrand;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Collapse, Button, Tooltip, Upload, Modal,Input, notification, Popconfirm } from 'antd';\r\nimport { CaretRightOutlined,CheckCircleOutlined,  PlusOutlined, DeleteOutlined, EditOutlined } from '@ant-design/icons';\r\n\r\n// import components\r\nimport InputField from '../../components/Field/Input';\r\nimport Empty from '../../components/Empty';\r\nimport ComponentImageUpload from './ComponentImageUpload';\r\nimport {useHandleFetch} from '../../hooks';\r\nimport { DataTableSkeleton } from \"../../components/Placeholders\";\r\nimport AddNewComponent from \"./AddNewComponent\";\r\nimport ComponentListComponentItem from './ComponentListComponentItem';\r\nimport AddNewComponentItem from './AddNewComponentItem';\r\nimport { category } from '../../state/ducks';\r\n\r\n\r\n\r\n\r\nconst { Panel } = Collapse;\r\nconst { Search } = Input;\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Component Created',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Something Went Wrong',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n    });\r\n};\r\n\r\n\r\n\r\nconst text = `\r\n  A dog is a type of domesticated animal.\r\n  Known for its loyalty and faithfulness,\r\n  it can be found as a welcome guest in many households across the world.\r\n`;\r\n\r\nfunction getBase64(file: any) {\r\n\treturn new Promise((resolve, reject) => {\r\n\t\tconst reader = new FileReader();\r\n\t\treader.readAsDataURL(file);\r\n\t\treader.onload = () => resolve(reader.result);\r\n\t\treader.onerror = (error) => reject(error);\r\n\t});\r\n}\r\n\r\n\r\nconst genExtra = (updateComponentByDeleting,component,id) => (\r\n\t<div\r\n\t\tstyle={{\r\n\t\t\tdisplay: 'flex'\r\n\t\t}}\r\n\t>\r\n\t\t<Tooltip placement='top' title='Edit Component'>\r\n\t\t\t<EditOutlined\r\n\t\t\t\tonClick={(event) => {\r\n\t\t\t\t\t// If you don't want click extra trigger collapse, you can prevent this:\r\n\t\t\t\t\t// event.stopPropagation();\r\n\t\t\t\t}}\r\n\t\t\t/>\r\n\t\t</Tooltip>\r\n\r\n\t\t<div\r\n\t\t\tstyle={{\r\n\t\t\t\tmarginLeft: '15px'\r\n\t\t\t}}\r\n\t\t/>\r\n\t\t\t<Popconfirm \r\n               \r\n               onConfirm={() => updateComponentByDeleting(id,component)}\r\n               title=\"Are you sure？\" okText=\"Yes\" cancelText=\"No\">\r\n           \r\n\t\t   <DeleteOutlined\r\n\t\t\t\tonClick={(event) => {\r\n\t\t\t\t\t// If you don't want click extra trigger collapse, you can prevent this:\r\n\t\t\t\t\tevent.stopPropagation();\r\n\t\t\t\t}}\r\n\t\t\t/>\r\n           </Popconfirm>\r\n\t</div>\r\n);\r\n\r\nconst genExtraForGroup = (setitemVisible: any, handleDeleteComponent:any, id: any,setComponentId:any) => (\r\n\t<div\r\n\t\tstyle={{\r\n\t\t\tdisplay: 'flex'\r\n\t\t}}\r\n\t>\r\n\t\t<Tooltip placement='top' title='Add new item Component'>\r\n\t\t\t<PlusOutlined\r\n\t\t\t\tonClick={(event) => {\r\n\t\t\t\t\t// If you don't want click extra trigger collapse, you can prevent this:\r\n\t\t\t\t\t// event.stopPropagation();\r\n\t\t\t\t\tsetitemVisible(true);\r\n\t\t\t\t\tsetComponentId(id)\r\n\t\t\t\t}}\r\n\t\t\t/>\r\n\t\t</Tooltip>\r\n\r\n\t\t<div\r\n\t\t\tstyle={{\r\n\t\t\t\tmarginLeft: '15px'\r\n\t\t\t}}\r\n\t\t/>\r\n\t\t<Tooltip placement='top' title='Edit Component'>\r\n\t\t\t<EditOutlined\r\n\t\t\t\tonClick={(event) => {\r\n\t\t\t\t\t// If you don't want click extra trigger collapse, you can prevent this:\r\n\t\t\t\t\t// event.stopPropagation();\r\n\t\t\t\t}}\r\n\t\t\t/>\r\n\t\t</Tooltip>\r\n\r\n\t\t<div\r\n\t\t\tstyle={{\r\n\t\t\t\tmarginLeft: '15px'\r\n\t\t\t}}\r\n\t\t/>\r\n\t\t<Popconfirm \r\n               \r\n               onConfirm={() => handleDeleteComponent(id)}\r\n               title=\"Are you sure？\" okText=\"Yes\" cancelText=\"No\">\r\n           \r\n\t\t   <DeleteOutlined\r\n\t\t\t\tonClick={(event) => {\r\n\t\t\t\t\t// If you don't want click extra trigger collapse, you can prevent this:\r\n\t\t\t\t\tevent.stopPropagation();\r\n\t\t\t\t}}\r\n\t\t\t/>\r\n           </Popconfirm>\r\n\r\n\r\n\t\t\t\r\n\t</div>\r\n);\r\n\r\nconst Component = (props) => {\r\n\r\n\r\n\tconst [visible, setvisible] = useState(false);\r\n\tconst [groupVisible, setgroupVisible] = useState(false);\r\n\tconst [itemVisible, setitemVisible] = useState(false);\r\n\tconst [componentId,setComponentId] = useState(''); \r\n\r\n\r\n\t\r\n\tconst [componentState, handleComponentListFetch] = useHandleFetch({}, 'componentList');\r\n\tconst [deleteComponentState, handleDeleteComponentFetch] = useHandleFetch({}, 'deleteComponent');\r\n\tconst [updateComponentState, handleUpdateComponentFetch] = useHandleFetch({}, 'updateComponent');\r\n\t\r\n\tconst [componentList,setComponentList] = useState([]); \r\n  \r\n\tuseEffect(()=>{\r\n\t const setComponents = async () => {\r\n\t   const categories = await handleComponentListFetch({}); \r\n\t   // @ts-ignore\r\n\t   setComponentList(categories); \r\n\t }\r\n\t setComponents(); \r\n\t},[])\r\n\r\n\t\r\n\r\n\tconst handleSearch = (value) => {\r\n\t\tif(componentState.data.length > 0 ){\r\n\t\t  const newComponentList = componentState.data.filter(item => item.name.toLowerCase().includes(value.toLowerCase())); \r\n\t\t  setComponentList(newComponentList); \r\n\t\t}\r\n\t\t \r\n\t  }\r\n\t\r\n\r\n\r\n\r\n\t  \r\n      const handleDeleteComponent = async (id) => {\r\n        const deleteComponentRes = await handleDeleteComponentFetch({\r\n          urlOptions: {\r\n            placeHolders: {\r\n              id,\r\n            }\r\n            }\r\n          });\r\n\r\n            // @ts-ignore\r\n\t\t  if(deleteComponentRes && deleteComponentRes.status === 'ok'){\r\n\t\t\t  openSuccessNotification('Component Deleted'); \r\n\t\t\t  const newComponentList =  componentList.filter(item => item.id !== id);\r\n\t\t\t  setComponentList(newComponentList); \r\n\t\t  }\r\n\t\t  else {\r\n\t\t\topenErrorNotification(\"Couldn't delete, Something went wrong\")\r\n\t\t  }\r\n\t  }\r\n\t  \r\n\r\n\r\n\r\n\tconst handleOk = (e: any) => {\r\n\t\tsetvisible(false);\r\n\r\n\t};\r\n\r\n\tconst handleCancel = (e: any) => {\r\n\t\tsetvisible(false);\r\n\t};\r\n\tconst handleOkGroup = (e: any) => {\r\n\t\tsetgroupVisible(false);\r\n\r\n\t};\r\n\r\n\tconst handleCancelGroup = (e: any) => {\r\n\t\tsetgroupVisible(false);\r\n\t};\r\n\r\n\r\n\tconst componentUpdate = async (item,component,localComponentItem) => {\r\n\t\tconst positionInComponents = () => {\r\n            return componentList.map(item => item.id).indexOf(component.id);\r\n          };\r\n      \r\n          const positionInItemsOfComponent = () => {\r\n            return component.items.map(item => item.id).indexOf(item.id);\r\n          };\r\n      \r\n          const componentIndex = positionInComponents();\r\n      \r\n          const itemIndex = positionInItemsOfComponent();\r\n      \r\n          const updatedItems = [\r\n            ...component.items.slice(0, itemIndex),\r\n            localComponentItem,\r\n            ...component.items.slice(itemIndex + 1)\r\n          ];\r\n      \r\n          const updatedItem = Object.assign({}, componentList[componentIndex], {\r\n            ...component,\r\n            items: updatedItems\r\n          });\r\n      \r\n          const updateComponentList = [\r\n            ...componentList.slice(0, componentIndex),\r\n            updatedItem,\r\n            ...componentList.slice(componentIndex + 1)\r\n          ];\r\n\t\t\r\n\t\t  \r\n\r\n\r\n\t\tconst updateComponentRes = await handleUpdateComponentFetch({\r\n\t\t\turlOptions: {\r\n\t\t\t\tplaceHolders: {\r\n\t\t\t\t  id: component.id,\r\n\t\t\t\t}\r\n\t\t\t  },\r\n\t\t\tbody: {\r\n\t\t\t\t...updatedItem,\r\n\t\t\t\tgroupName: updatedItem.name\r\n\t\t\t},\r\n\t\t  });\r\n\t\t\r\n\t\t\t   // @ts-ignore\r\n\t\t\t   if(updateComponentRes && updateComponentRes.status === 'ok'){\r\n\t\t\t\topenSuccessNotification(\"Component Updated\"); \r\n\t\t\t\tsetComponentList(updateComponentList);\r\n\t\t\t\t\r\n\t\t\t  }\r\n\t\t\t  else {\r\n\t\t\t\topenErrorNotification();\r\n\t\t\t  }\r\n\t}\r\n\r\n\r\n\tconst updateComponentByDeleting = async (id,component) => {\r\n\r\n\t\tconst positionInComponents = () => {\r\n            return componentList.map(item => item.id).indexOf(component.id);\r\n          };\r\n      \r\n          const positionInItemsOfComponent = () => {\r\n            return component.items.map(item => item.id).indexOf(id);\r\n          };\r\n      \r\n          const componentIndex = positionInComponents();\r\n      \r\n          const itemIndex = positionInItemsOfComponent();\r\n      \r\n          const updatedItems = [\r\n            ...component.items.slice(0, itemIndex),\r\n            ...component.items.slice(itemIndex + 1)\r\n          ];\r\n      \r\n          const updatedItem = Object.assign({}, componentList[componentIndex], {\r\n            ...component,\r\n            items: updatedItems\r\n          });\r\n      \r\n          const updateComponentList = [\r\n            ...componentList.slice(0, componentIndex),\r\n            updatedItem,\r\n            ...componentList.slice(componentIndex + 1)\r\n          ];\r\n\t\t\r\n\t\t  \r\n\r\n\r\n\t\tconst updateComponentRes = await handleUpdateComponentFetch({\r\n\t\t\turlOptions: {\r\n\t\t\t\tplaceHolders: {\r\n\t\t\t\t  id: component.id,\r\n\t\t\t\t}\r\n\t\t\t  },\r\n\t\t\tbody: {\r\n\t\t\t\t...updatedItem,\r\n\t\t\t\tgroupName: updatedItem.name\r\n\t\t\t},\r\n\t\t  });\r\n\t\t\r\n\t\t\t   // @ts-ignore\r\n\t\t\t   if(updateComponentRes && updateComponentRes.status === 'ok'){\r\n\t\t\t\topenSuccessNotification(\"Component Item deleted\"); \r\n\t\t\t\tsetComponentList(updateComponentList);\r\n\t\t\t\t\r\n\t\t\t  }\r\n\t\t\t  else {\r\n\t\t\t\topenErrorNotification();\r\n\t\t\t  }\r\n\t};\r\n\r\n\r\n\tconst updateComponentByAddingItem = async (localComponentItem,id) => {\r\n\t\tconst positionInComponents = () => {\r\n            return componentList.map(item => item.id).indexOf(id);\r\n          };\r\n      \r\n      \r\n          const componentIndex = positionInComponents();\r\n      \r\n    \r\n      \r\n          const updatedItems = [\r\n            ...componentList[componentIndex].items,\r\n            localComponentItem,\r\n          ];\r\n      \r\n          const updatedItem = Object.assign({}, componentList[componentIndex], {\r\n            ...componentList[componentIndex],\r\n            items: updatedItems\r\n          });\r\n      \r\n          const updateComponentList = [\r\n            ...componentList.slice(0, componentIndex),\r\n            updatedItem,\r\n            ...componentList.slice(componentIndex + 1)\r\n          ];\r\n\t\t\r\n\t\t  \r\n\r\n\r\n\t\tconst updateComponentRes = await handleUpdateComponentFetch({\r\n\t\t\turlOptions: {\r\n\t\t\t\tplaceHolders: {\r\n\t\t\t\t  id: id,\r\n\t\t\t\t}\r\n\t\t\t  },\r\n\t\t\tbody: {\r\n\t\t\t\t...updatedItem,\r\n\t\t\t\tgroupName: updatedItem.name\r\n\t\t\t},\r\n\t\t  });\r\n\t\t\r\n\t\t\t   // @ts-ignore\r\n\t\t\t   if(updateComponentRes && updateComponentRes.status === 'ok'){\r\n\t\t\t\topenSuccessNotification(\"Component Item Added\"); \r\n\t\t\t\tsetComponentList(updateComponentList);\r\n\t\t\t\tsetitemVisible(false);\r\n\t\t\t\t\r\n\t\t\t  }\r\n\t\t\t  else {\r\n\t\t\t\topenErrorNotification();\r\n\t\t\t  }\r\n\t};\r\n\tconsole.log('componentList',componentList); \r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t    <div className='categoryListContainer'>\r\n            <div className='categoryListContainer__header'>\r\n           \r\n\r\n          <div className='categoryListContainer__header-searchBar'>\r\n          <h2 className='categoryListContainer__header-title'>\r\n            Components\r\n            </h2>\r\n\r\n\r\n          <Search\r\n            enterButton={false}\r\n            className='searchbarClassName'\r\n          placeholder=\"search components..\"\r\n          onSearch={value => handleSearch(value)}\r\n        />\r\n          </div>\r\n            <Button\r\n          // type=\"primary\"\r\n          className='btnPrimaryClassNameoutline'\r\n          icon={<PlusOutlined />}\r\n\t\t  onClick={() => setgroupVisible(true)}\r\n        >\r\n        Add New\r\n            \r\n            </Button>\r\n            </div>\r\n\r\n            <div className='categoryListContainer__afterHeader'>\r\n \r\n            </div>\r\n\r\n     \r\n\t\t\t\r\n\t\t\t<div className='categoryListContainer__categoryList'>\r\n     \r\n        {componentState.isLoading && <DataTableSkeleton />}\r\n\r\n        {componentState.done && !(componentList.length > 0) && (\r\n\t\t\t<div style={{\r\n\t\t\t\tmarginTop: '50px'\r\n\t\t\t}}>\r\n\t\t\t\t<Empty title='No Component found' />\r\n\t\t\t</div>\r\n\t\t)}\r\n\r\n\t\t{componentState.done && componentList.length > 0 && (\r\n\t\t\t\t\t<div className='componentsItemContainer'>\r\n\t\t\t\t\t{componentList.map(component => {\r\n\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t<div className='componentsItemContainer-item'>\r\n\t\t\t\t\t\t\t<Collapse\r\n\t\t\t\t\t\t\t\taccordion={false}\r\n\t\t\t\t\t\t\t\tbordered={false}\r\n\t\t\t\t\t\t\t\texpandIconPosition='left'\r\n\t\t\t\t\t\t\t\texpandIcon={({ isActive }) => <CaretRightOutlined rotate={isActive ? 90 : 0} />}\r\n\t\t\t\t\t\t\t\tclassName='site-collapse-custom-collapse'\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<Panel\r\n\t\t\t\t\t\t\t\t\theader={component.name}\r\n\t\t\t\t\t\t\t\t\tkey='1'\r\n\t\t\t\t\t\t\t\t\tclassName='site-collapse-custom-panel'\r\n\t\t\t\t\t\t\t\t\textra={genExtraForGroup(setitemVisible,handleDeleteComponent, component.id,setComponentId)}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t<div className=' componentsItemContainer-white'>\r\n\t\t\t\t\t\t\t\t\t\t{component.items && component.items.length > 0 && component.items.map(item => {\r\n\t\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div className='componentsItemContainer-item-item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Collapse\r\n\t\t\t\t\t\t\t\t\t\t\t\t\taccordion={false}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tbordered={false}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\texpandIconPosition='left'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\texpandIcon={({ isActive }) => (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<CaretRightOutlined rotate={isActive ? 90 : 0} />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='site-collapse-custom-collapse'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Panel\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\theader={item.title || ''}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tkey='1'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='site-collapse-custom-panel'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\textra={genExtra(updateComponentByDeleting,component,item.id)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<ComponentListComponentItem\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetComponentList={setComponentList}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tcomponentList={componentList}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\titem={item}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tcomponent={component}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tcomponentUpdate={componentUpdate}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Panel>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Collapse>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t\t})}\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t{!(component.items.length > 0 ) && <Empty title='No item Found'/>}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</Panel>\r\n\t\t\t\t\t\t\t</Collapse>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t})}\r\n\t\t\t\t</div>\r\n\t\t)}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\r\n\r\n\t\t<AddNewComponent \r\n          addNewCategoryVisible={groupVisible} \r\n          setAddNewCategoryVisible={setgroupVisible} \r\n          setComponentList={setComponentList}\r\n          componentList={componentList}\r\n          />\r\n\t\t  <AddNewComponentItem \r\n          addNewCategoryVisible={itemVisible} \r\n          setAddNewCategoryVisible={setitemVisible} \r\n          setComponentList={setComponentList}\r\n\t\t  componentList={componentList}\r\n\t\t  updateComponentByAddingItem={updateComponentByAddingItem}\r\n\t\t  componentId={componentId}\r\n          />\r\n\r\n\r\n\t\t  \r\n\r\n\t\t\t<Modal\r\n\t\t\t\ttitle=\"Add New Group Component\"\r\n\t\t\t\tvisible={false}\r\n\t\t\t\tonOk={handleOkGroup}\r\n\t\t\t\tonCancel={handleCancelGroup}\r\n\t\t\t\tfooter={null}\r\n\t\t\t\tokText='Done'\r\n\t\t\t>\r\n\t\t\t\t<InputField label='Group Component Name' />\r\n\t\t\r\n\t\t\t</Modal>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default Component;\r\n","import React, { useState } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport reqwest from 'reqwest';\r\n\r\nimport { useHandleFetch } from '../../hooks';\r\n// import third party ui lib\r\nimport { Upload, message, Switch, Select, Button, notification, Modal, Form } from 'antd';\r\n\r\nimport {\r\n    FileOutlined,\r\n    InboxOutlined,\r\n    FileAddOutlined,\r\n    DeleteOutlined,\r\n    CheckCircleOutlined,\r\n    ArrowUpOutlined,\r\n    LoadingOutlined,\r\n    PlusOutlined\r\n} from '@ant-design/icons';\r\n\r\n\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport MediaLibrary from \"../../components/MediaLibrary\";\r\n\r\n\r\nconst { Option } = Select;\r\nconst { Dragger } = Upload;\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    name: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Brand Created',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Something Went Wrong',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst initialValues = {\r\n    name: '',\r\n    description: '',\r\n    image: [],\r\n    url: '',\r\n    cover: ''\r\n}\r\n\r\n\r\n\r\ninterface Props {\r\n    addNewCategoryVisible?: any;\r\n    setAddNewCategoryVisible?: any;\r\n    themeList?: any;\r\n    setThemeList?: any;\r\n\r\n}\r\n\r\nconst AddNewBrand = ({ addNewCategoryVisible, setAddNewCategoryVisible, themeList, setThemeList }: Props) => {\r\n\r\n    const [addThemeState, handleAddthemeFetch] = useHandleFetch({}, 'addTheme');\r\n    const [visible, setvisible] = useState(false);\r\n    const [myImages, setmyImages] = useState(false);\r\n    const [visibleMedia, setvisibleMedia] = useState(false);\r\n    const [myThumbnailImage, setmyThumbnailImage] = useState([]);\r\n    const [isModalOpenForThumbnail, setisModalOpenForThumbnail] = useState(false);\r\n    const [selectedThemeTypeValue, setselectedThemeTypeValue] = useState('');\r\n    const [fileList, setfileList] = useState([]);\r\n    const [uploading, setuploading] = useState(false);\r\n    const [loadingThumnail, setLoadingThumbnail] = useState(false);\r\n    const [imageUrl, setImageUrl] = useState('');\r\n    const [name, setname] = useState('')\r\n\r\n\r\n\r\n\r\n\r\n    const handleSubmit = async () => {\r\n\r\n        const formData = new FormData();\r\n        fileList.forEach(file => {\r\n            formData.append('folder', file, file.name);\r\n        });\r\n        formData.append(\"name\", name);\r\n        formData.append('type', selectedThemeTypeValue)\r\n        formData.append('thumbnail', imageUrl)\r\n\r\n\r\n\r\n        const addThemeRes = await handleAddthemeFetch({\r\n\r\n            body: formData,\r\n        });\r\n\r\n        // @ts-ignore\r\n        if (addThemeRes && addThemeRes.status === 'ok') {\r\n\r\n            setThemeList([...themeList, {\r\n                id: addThemeRes['id'] || '',\r\n                key: addThemeRes['id'] || '',\r\n                name: addThemeRes['name'] || '',\r\n                thumbnail: addThemeRes['thumbnail'] || '',\r\n                path: addThemeRes['path'] || '',\r\n                added: addThemeRes['added'] || '',\r\n                // @ts-ignore\r\n                ...addThemeRes\r\n            }]);\r\n\r\n            setfileList([]);\r\n            setuploading(false);\r\n            openSuccessNotification('Theme Uploaded!')\r\n            setAddNewCategoryVisible(false);\r\n            setname('');\r\n            setselectedThemeTypeValue('');\r\n\r\n\r\n\r\n\r\n            setAddNewCategoryVisible(false);\r\n        }\r\n        else {\r\n            openErrorNotification('Theme upload failed, Something went wrong');\r\n        }\r\n\r\n    };\r\n\r\n\r\n\r\n    const onSwitchChange = (checked: any) => {\r\n        console.log(checked);\r\n    };\r\n\r\n\r\n    const handleCancel = (e: any) => {\r\n        setAddNewCategoryVisible(false);\r\n    };\r\n\r\n\r\n    const getisSubmitButtonDisabled = () => {\r\n        if (addThemeState.isLoading) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n\r\n\r\n\r\n    const handleImagesDelete = (id) => {\r\n        // @ts-ignore\r\n        const newImages = myImages && myImages.filter(image => {\r\n            return image.id !== id;\r\n        })\r\n\r\n        setmyImages(newImages);\r\n    }\r\n\r\n\r\n\r\n    const handleThumbnailImageDelete = (id) => {\r\n        // @ts-ignore\r\n        const newImages = myThumbnailImage && myThumbnailImage.filter(image => {\r\n            return image.id !== id;\r\n        })\r\n\r\n        if (newImages.length > 0) {\r\n            setmyThumbnailImage(newImages);\r\n\r\n        }\r\n        // @ts-ignore\r\n        else setmyThumbnailImage([]);\r\n    }\r\n\r\n\r\n    const onChangeThemeType = (value) => {\r\n        setselectedThemeTypeValue(value);\r\n    }\r\n\r\n\r\n\r\n    const uploadProps = {\r\n        //  listType: 'picture',\r\n        onRemove: file => {\r\n            setfileList(filelist => {\r\n                const index = fileList.indexOf(file);\r\n                const newFileList = fileList.slice();\r\n                newFileList.splice(index, 1);\r\n                return newFileList;\r\n            })\r\n\r\n        },\r\n        beforeUpload: file => {\r\n            console.log('file', file)\r\n            setfileList(filelist => {\r\n                return [...fileList, file]\r\n            })\r\n            return false;\r\n        },\r\n        fileList,\r\n    };\r\n\r\n    const handleUpload = async () => {\r\n        const formData = new FormData();\r\n        fileList.forEach(file => {\r\n            formData.append('folder', file, file.name);\r\n        });\r\n        formData.append(\"name\", name);\r\n        formData.append('type', selectedThemeTypeValue)\r\n        formData.append('thumbnail', imageUrl)\r\n\r\n        setuploading(true);\r\n\r\n        //  const addImageToLibraryRes = awAddait handleMediaLibraryFetch({\r\n        // \tbody: formData\r\n        //   });\r\n\r\n        //   console.log('addImageToLibraryRes',addImageToLibraryRes)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n        // You can use any AJAX library you like\r\n        reqwest({\r\n            url: 'http://localhost:5000/admin/theme/add',\r\n            method: 'post',\r\n            processData: false,\r\n            data: formData,\r\n            withCredentials: true,\r\n            success: () => {\r\n                setfileList([]);\r\n                setuploading(false);\r\n                openSuccessNotification('Theme Uploaded!')\r\n                setAddNewCategoryVisible(false);\r\n                setname('');\r\n                setselectedThemeTypeValue('');\r\n                setThemeList([...themeList, {\r\n\r\n                }])\r\n                // setThemeList([...themeList, {\r\n                //     id: addCategoryRes['id'] || '',\r\n                //     key: addCategoryRes['id'] || '',\r\n                //     name: addCategoryRes['name'] || '',\r\n                //     description: addCategoryRes['description'] || '',\r\n                //     // @ts-ignore\r\n                //     ...addCategoryRes\r\n                // }])\r\n            },\r\n            error: () => {\r\n                setuploading(false);\r\n                openErrorNotification('Theme Upload failed!')\r\n                message.error('upload failed.');\r\n            },\r\n        });\r\n    };\r\n\r\n\r\n    function getBase64(img, callback) {\r\n        const reader = new FileReader();\r\n        reader.addEventListener('load', () => callback(reader.result));\r\n        reader.readAsDataURL(img);\r\n    }\r\n\r\n    function beforeUpload(file) {\r\n        console.log('beforeUpload', file)\r\n        const isJpgOrPng = file.type === 'image/jpeg' || file.type === 'image/png';\r\n        if (!isJpgOrPng) {\r\n            message.error('You can only upload JPG/PNG file!');\r\n        }\r\n        const isLt2M = file.size / 1024 / 1024 < 2;\r\n        if (!isLt2M) {\r\n            message.error('Image must smaller than 2MB!');\r\n        }\r\n\r\n\r\n        getBase64(file, imageUrl => {\r\n            setImageUrl(imageUrl)\r\n            setLoadingThumbnail(false)\r\n        })\r\n\r\n        return false;\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    console.log('imageUrl', imageUrl)\r\n\r\n\r\n\r\n    const uploadButton = (\r\n        <div>\r\n            {loadingThumnail ? <LoadingOutlined /> : <PlusOutlined />}\r\n            <div className=\"ant-upload-text\">Upload</div>\r\n        </div>\r\n    );\r\n\r\n\r\n    console.log('addThemeState', addThemeState)\r\n\r\n    return (\r\n        <>\r\n            <Modal\r\n                style={{\r\n                    top: '40px'\r\n                }}\r\n                title=\"Add New Theme\"\r\n                visible={addNewCategoryVisible}\r\n                onOk={handleSubmit}\r\n                onCancel={handleCancel}\r\n                okText='Upload Theme'\r\n                okButtonProps={{\r\n                    loading: uploading,\r\n                    htmlType: \"submit\",\r\n                    disabled: getisSubmitButtonDisabled()\r\n                }}\r\n\r\n                bodyStyle={{\r\n                    margin: '0',\r\n                    padding: '10px'\r\n                }}\r\n            >\r\n\r\n                <Input\r\n                    label='Name'\r\n                    value={name}\r\n                    name='name'\r\n                    onChange={(e: any) => setname(e.target.value)}\r\n                />\r\n\r\n\r\n                <h3 className='inputFieldLabel'>Thumbnail Image</h3>\r\n                <Upload\r\n                    name=\"avatar\"\r\n                    listType=\"picture-card\"\r\n                    className=\"avatar-uploader\"\r\n                    showUploadList={false}\r\n                    beforeUpload={beforeUpload}\r\n                    multiple={false}\r\n                >\r\n                    {imageUrl ? <img src={imageUrl} alt=\"avatar\" style={{ width: '100%' }} /> : uploadButton}\r\n                </Upload>\r\n\r\n                {/* <div style={{ marginTop: '15px' }}></div> */}\r\n\r\n                <h3 className='inputFieldLabel'>\r\n                    Theme Type\r\n\t\t\t\t\t\t\t\t\t</h3>\r\n\r\n\r\n                <Form.Item\r\n                    validateStatus={(addThemeState.error['error']['type']) ? \"error\" : \"\"}\r\n                    help={addThemeState.error['error']['type']}\r\n                // noStyle={true}\r\n                >\r\n                    <Select\r\n                        style={{ width: '100%' }}\r\n                        placeholder='Select a Theme type'\r\n                        optionFilterProp='children'\r\n                        onChange={onChangeThemeType}\r\n                        filterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n                    >\r\n                        <Option value={'spa'}> API Based Template (React/Angular/Vue) </Option>\r\n                        <Option value={'template'}> Alpha Template </Option>\r\n                    </Select>\r\n\r\n                </Form.Item>\r\n\r\n\r\n\r\n                <div style={{\r\n                    marginTop: '20px'\r\n                }}></div>\r\n                <h3 className='inputFieldLabel'>\r\n                    Theme Folder (.zip)\r\n\t\t\t\t\t\t\t\t\t</h3>\r\n\r\n\r\n                <Dragger\r\n                    multiple={false}\r\n                    className='upload-list-inline'\r\n                    listType='picture'\r\n                    style={{\r\n                        background: '#fff'\r\n                    }}\r\n                    {...uploadProps}\r\n                >\r\n                    <p className='ant-upload-drag-icon'>\r\n                        <InboxOutlined />\r\n                    </p>\r\n                    <p className='ant-upload-text'>Click or drag file to this area to upload</p>\r\n                    <p className='ant-upload-hint'>\r\n                        Support for a single or bulk upload. Strictly prohibit from uploading company data or\r\n                        other band files\r\n\t\t\t\t\t\t\t</p>\r\n                </Dragger>\r\n\r\n                {addThemeState.error['error']['folder'] && (\r\n                    <p style={{\r\n                        color: 'rgba(255, 0, 0, 0.507)'\r\n                    }}>{addThemeState.error['error']['folder']}</p>\r\n                )}\r\n\r\n\r\n\r\n\r\n\r\n            </Modal>\r\n\r\n            <MediaLibrary\r\n                setvisible={setvisibleMedia}\r\n                visible={visibleMedia}\r\n                setmyImages={setmyImages}\r\n                isModalOpenForImages={false}\r\n                setmyThumbnailImage={setmyThumbnailImage}\r\n                isModalOpenForThumbnail={isModalOpenForThumbnail}\r\n                myThumbnailImage={myThumbnailImage}\r\n            />\r\n        </>\r\n    );\r\n};\r\n\r\nexport default AddNewBrand;\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React, {useState, useEffect} from 'react';\r\nimport {withRouter} from 'react-router-dom';\r\nimport { Button, Input,Tooltip, Modal, notification, Popconfirm,Badge} from 'antd';\r\nimport { \r\n  PlusOutlined, EditOutlined, \r\n  DeleteOutlined,EditFilled,\r\n  CheckOutlined,\r\n  CheckCircleOutlined,\r\n  CheckCircleTwoTone } from '@ant-design/icons';\r\n\r\n\r\n/// import hooks\r\nimport { useFetch, useHandleFetch } from \"../../hooks\";\r\n\r\n// import components\r\nimport { DataTableSkeleton } from \"../../components/Placeholders\";\r\nimport AddNewTheme from \"./AddNewTheme\";\r\n\r\nimport Empty from \"../../components/Empty\";\r\n\r\nconst { Search } = Input;\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t  message: message || 'Tag Created',\r\n\t  description: '',\r\n\t  icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n  };\r\n\r\n\r\n  const openErrorNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t  message: message || 'Something Went Wrong',\r\n\t  description: '',\r\n\t  icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n  };\r\n\r\n\r\n\r\ninterface Props {\r\n    history: any; \r\n}\r\n\r\nconst CustomerList = ({history}: Props) => {\r\n\r\n    const [themeList,setThemeList] = useState([]); \r\n\r\n    const [themeState, handleThemeListFetch] = useHandleFetch({}, 'themeList');\r\n    const [activeThemeState, handleActiveThemeFetch] = useHandleFetch({}, 'activeTheme');\r\n    const [updateDeleteThemeState, handleDeleteThemeFetch] = useHandleFetch({}, 'deletetheme');\r\n  \r\n\r\n    \r\n    useEffect(()=>{\r\n     const setThemes = async () => {\r\n       const themes = await handleThemeListFetch({}); \r\n       // @ts-ignore\r\n       setThemeList(themes); \r\n     }\r\n     setThemes(); \r\n    },[])\r\n\r\n\r\n\r\n\r\n  \r\n  const [addNewCategoryVisible,setAddNewCategoryVisible] = useState(false);   \r\n\r\n  console.log('orderState',themeState)\r\n\r\n\r\n  const handleSearch = (value) => {\r\n    if(themeState.data.length > 0 ){\r\n      const newThemeList = themeState.data.filter(item => item.name.includes(value)); \r\n      setThemeList(newThemeList); \r\n    }\r\n     \r\n  }\r\n\r\n\r\n\r\n\r\n  const handleActiveTheme = async (id) => {\r\n    const activeThemeRes = await handleActiveThemeFetch({\r\n      urlOptions: {\r\n        placeHolders: {\r\n          id,\r\n        }\r\n        }\r\n      });\r\n\r\n        // @ts-ignore\r\n  if(activeThemeRes && activeThemeRes.status === 'ok'){\r\n    openSuccessNotification('Theme activated'); \r\n   \r\n  }\r\n  else {\r\n    openErrorNotification(\"Couldn't activate the theme, Something went wrong\")\r\n  }\r\n     \r\n     \r\n  }\r\n\r\n\r\n  const handleDeleteTheme = async (id) => {\r\n    const deleteThemeRes = await handleDeleteThemeFetch({\r\n      urlOptions: {\r\n        placeHolders: {\r\n          id,\r\n        }\r\n        }\r\n      });\r\n\r\n        // @ts-ignore\r\n  if(deleteThemeRes && deleteThemeRes.status === 'ok'){\r\n    openSuccessNotification('Theme Deleted'); \r\n    const newThemeList =  themeList.filter(item => item.id !== id);\r\n    setThemeList(newThemeList); \r\n  }\r\n  else {\r\n  openErrorNotification(\"Couldn't delete, Something went wrong\")\r\n  }\r\n  }\r\n\r\n\r\n\r\n\r\n\treturn (\r\n\t\t<>\r\n    {/* <h2 className='containerPageTitle'>\r\n      Categories\r\n    </h2> */}\r\n    <div className='categoryListContainer'>\r\n            <div className='categoryListContainer__header'>\r\n           \r\n\r\n          <div className='categoryListContainer__header-searchBar'>\r\n          <h2 className='categoryListContainer__header-title'>\r\n\t\t Themes\r\n \r\n            </h2>\r\n\r\n\r\n          <Search\r\n            enterButton={false}\r\n            className='searchbarClassName'\r\n          placeholder=\"search themes..\"\r\n          onSearch={value => handleSearch(value)}\r\n          // style={{ width: 300 }}\r\n        />\r\n          </div>\r\n            <Button\r\n          // type=\"primary\"\r\n          className='btnPrimaryClassNameoutline'\r\n          icon={<PlusOutlined />}\r\n          onClick={() => setAddNewCategoryVisible(true)}\r\n        >\r\n        Add New\r\n            \r\n            </Button>\r\n            </div>\r\n\r\n            <div className='categoryListContainer__afterHeader'>\r\n\r\n            </div>\r\n\r\n     \r\n\t\t\t\r\n\t\t\t<div className='categoryListContainer__categoryList'>\r\n        {themeState.done && themeList.length > 0 && (\r\n   \r\n   <div className='categoryListContainer__bodyContainerList'>\r\n\t\t\r\n          {themeState.data.map(theme => {\r\n            return (\r\n              <div className='categoryListContainer__bodyContainerList-item'>\r\n              {/* <Badge count={<CheckCircleTwoTone style={{ color: '#3FA3FF' }} />}>\r\n               \r\n                  </Badge> */}\r\n                  <div className='categoryListContainer__bodyContainerList-item-top'>\r\n                  <img\r\n                    alt='theme img'\r\n                    src={theme.thumbnail}\r\n                  />\r\n                </div>\r\n                <div className='categoryListContainer__bodyContainerList-item-body'>\r\n                  <h3> {theme.name} </h3>\r\n     \r\n                  <div\r\n                    style={{\r\n                      display: 'flex',\r\n                      justifyContent: 'space-between'\r\n                    }}\r\n                  >\r\n                    <Tooltip placement='top' title='Active this theme'>\r\n                    <Button\r\n                   size='small'\r\n                   className='btnPrimaryClassNameoutline'\r\n                   icon={<CheckOutlined />}\r\n                   onClick={() => handleActiveTheme(theme.id)}\r\n                  >\r\n                  Set Active\r\n                 \r\n                 </Button>\r\n     \r\n     \r\n                      \r\n                    </Tooltip>\r\n     \r\n                    <Tooltip placement='top' title='Delete theme'>\r\n                    <Popconfirm \r\n               \r\n               onConfirm={() => handleDeleteTheme(theme.id)}\r\n               title=\"Are you sure？\" okText=\"Yes\" cancelText=\"No\">\r\n           \r\n           <Button\r\n                        size='small'\r\n                        type='link'\r\n                        danger={true}\r\n                        icon={<DeleteOutlined />}\r\n                      >\r\n                        \r\n                        </Button>\r\n           </Popconfirm>\r\n\r\n\r\n                     \r\n     \r\n                        \r\n                        </Tooltip>\r\n                      </div>\r\n                    </div>\r\n                </div>\r\n            )\r\n          })}\r\n         </div>\r\n\t\t)}\r\n\r\n\r\n        {themeState.isLoading && <DataTableSkeleton />}\r\n\r\n        {themeState.done && !(themeList.length > 0) && (\r\n        <Empty title='No Theme found'  />\r\n        )}\r\n        \r\n\r\n\t\t\t</div>\r\n\t\t</div>\r\n\r\n\r\n    {themeState.done && \r\n    <AddNewTheme \r\n          addNewCategoryVisible={addNewCategoryVisible} \r\n          setAddNewCategoryVisible={setAddNewCategoryVisible}\r\n          themeList={themeState.data}\r\n          setThemeList={setThemeList}\r\n           />}\r\n    </>\r\n\t);\r\n};\r\n\r\nexport default withRouter(CustomerList);\r\n","import React from 'react'\r\n\r\ninterface Props {\r\n    \r\n}\r\n\r\nconst Image = (props: Props) => {\r\n    return (\r\n        <div>\r\n            Image\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Image\r\n","import React from 'react';\r\n\r\ninterface Props {}\r\n\r\nconst Invoice = (props: Props) => {\r\n\treturn <div>Invoice</div>;\r\n};\r\n\r\nexport default Invoice;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n\r\nimport { useHandleFetch } from '../../hooks';\r\n// import third party ui lib\r\nimport { notification, Button } from 'antd';\r\n\r\nimport {\r\n    CheckCircleOutlined\r\n} from '@ant-design/icons';\r\n\r\n\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport MediaLibrary from \"../../components/MediaLibrary\";\r\n\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    title: Yup.string()\r\n        .label('Title')\r\n        .required('Site title can not be empty'),\r\n    adminEmail: Yup.string()\r\n        .label('Admin Email')\r\n        .required('Admin Email can not be empty'),\r\n\r\n});\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Site Info Updated',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Something Went Wrong',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst initialValues = {\r\n    title: '',\r\n    adminName: '',\r\n    adminEmail: '',\r\n}\r\n\r\n\r\n\r\ninterface Props {\r\n\r\n\r\n}\r\n\r\nconst UpdateSiteinfo = ({ }: Props) => {\r\n\r\n    const [UpdateSiteSettingsState, handleUpdateSiteSettingsFetch] = useHandleFetch({}, 'updateSiteSettings');\r\n    const [siteSettingsState, handlSiteSettingsFetch] = useHandleFetch({}, 'siteSettings');\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        const getSiteSettings = async () => {\r\n            const siteSettingsRes = await handlSiteSettingsFetch({});\r\n\r\n            console.log('siteSettingsRes', siteSettingsRes)\r\n        }\r\n        getSiteSettings();\r\n    }, [UpdateSiteSettingsState])\r\n\r\n\r\n    console.log('siteSettingsState', siteSettingsState);\r\n\r\n    const handleSubmit = async (values: any, actions: any) => {\r\n\r\n\r\n        const addSiteInfoRes = await handleUpdateSiteSettingsFetch({\r\n\r\n            body: {\r\n                title: values.title,\r\n                adminName: values.adminName,\r\n                adminEmail: values.adminEmail,\r\n            },\r\n        });\r\n\r\n        // @ts-ignore\r\n        if (addSiteInfoRes && addSiteInfoRes.status === 'ok') {\r\n            openSuccessNotification();\r\n\r\n\r\n            // setBrandList([...brandList, {\r\n            //     id: addBrandRes['id'] || '',\r\n            //     key: addBrandRes['id'] || '',\r\n            //     name: addBrandRes['name'] || '',\r\n            //     description: addBrandRes['description'] || '',\r\n            //     // @ts-ignore\r\n            //     ...addBrandRes\r\n            // }]);\r\n\r\n            actions.resetForm();\r\n        }\r\n        else {\r\n            openErrorNotification();\r\n        }\r\n\r\n\r\n\r\n\r\n        actions.setSubmitting(false);\r\n\r\n    };\r\n\r\n\r\n\r\n\r\n\r\n    const getisSubmitButtonDisabled = (values, isValid) => {\r\n        if (!values.title || !values.adminEmail || !isValid) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    const getInitialValues = () => {\r\n        if (siteSettingsState.data && Object.keys(siteSettingsState.data).length > 0) {\r\n            return { ...siteSettingsState.data }\r\n        }\r\n        else {\r\n            return initialValues\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n    return (\r\n        <Formik\r\n            onSubmit={(values, actions) => handleSubmit(values, actions)}\r\n            enableReinitialize={true}\r\n            initialValues={\r\n                getInitialValues()\r\n            }\r\n        >\r\n            {({\r\n                handleChange,\r\n                values,\r\n                handleSubmit,\r\n                errors,\r\n                isValid,\r\n                isSubmitting,\r\n                touched,\r\n                handleBlur,\r\n                setFieldTouched,\r\n                handleReset,\r\n            }) => (\r\n                    <>\r\n                        {console.log('errors', errors)}\r\n                        <div className='siteInfoContainer__item'>\r\n                            <div className='siteInfoContainer__item-item'>\r\n                                <Input\r\n                                    label='Site Title'\r\n                                    value={values.title}\r\n                                    name='title'\r\n                                    isError={(touched.title && errors.title) ||\r\n                                        (!isSubmitting && UpdateSiteSettingsState.error['error']['title'])}\r\n\r\n                                    errorString={(touched.title && errors.title) ||\r\n                                        (!isSubmitting && UpdateSiteSettingsState.error['error']['title'])}\r\n                                    onChange={(e: any) => {\r\n                                        handleChange(e);\r\n                                        setFieldTouched('title');\r\n                                    }}\r\n                                />\r\n                            </div>\r\n                            <div className='siteInfoContainer__item-item'>\r\n                                <Input\r\n                                    label='Admin Name'\r\n                                    value={values.adminName}\r\n                                    name='adminName'\r\n                                    isError={(touched.adminName && errors.adminName) ||\r\n                                        (!isSubmitting && UpdateSiteSettingsState.error['error']['adminName'])}\r\n\r\n                                    errorString={(touched.adminName && errors.adminName) ||\r\n                                        (!isSubmitting && UpdateSiteSettingsState.error['error']['adminName'])}\r\n                                    onChange={(e: any) => {\r\n                                        handleChange(e);\r\n                                        setFieldTouched('adminName');\r\n                                    }}\r\n                                />\r\n                            </div>\r\n                            <div className='siteInfoContainer__item-item-left'>\r\n                                <Input\r\n                                    label='Admin Email'\r\n                                    value={values.adminEmail}\r\n                                    name='adminEmail'\r\n                                    isError={(touched.adminEmail && errors.adminEmail) ||\r\n                                        (!isSubmitting && UpdateSiteSettingsState.error['error']['adminEmail'])}\r\n\r\n                                    errorString={(touched.adminEmail && errors.adminEmail) ||\r\n                                        (!isSubmitting && UpdateSiteSettingsState.error['error']['adminEmail'])}\r\n                                    onChange={(e: any) => {\r\n                                        handleChange(e);\r\n                                        setFieldTouched('adminEmail');\r\n                                    }}\r\n                                />\r\n\r\n                            </div>\r\n\r\n                        </div>\r\n\r\n                        <Button\r\n                            type='primary'\r\n                            onClick={(e: any) => handleSubmit(e)}\r\n                            loading={isSubmitting}\r\n                            disabled={getisSubmitButtonDisabled(values, isValid)}\r\n\r\n                        >\r\n                            Update\r\n                        </Button>\r\n                    </>\r\n                )}\r\n        </Formik >\r\n\r\n\r\n\r\n\r\n    );\r\n};\r\n\r\nexport default UpdateSiteinfo;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n\r\nimport { useHandleFetch } from '../../hooks';\r\n// import third party ui lib\r\nimport { notification, Button } from 'antd';\r\n\r\nimport {\r\n    CheckCircleOutlined\r\n} from '@ant-design/icons';\r\n\r\n\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport MediaLibrary from \"../../components/MediaLibrary\";\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    invoiceTitle: Yup.string().label('Title').required('Invoice title is required')\r\n});\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Site Info Updated',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Something Went Wrong',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst initialValues = {\r\n    invoiceTitle: \"\",\r\n    address: \"\",\r\n    phone: \"\",\r\n    email: \"\",\r\n    additionalText: \"\"\r\n};\r\n\r\n\r\n\r\n\r\ninterface Props {\r\n\r\n\r\n}\r\n\r\nconst UpdateSiteinfo = ({ }: Props) => {\r\n\r\n    const [updateInfovSettingsState, handleUpdateInvoiceSettingsFetch] = useHandleFetch({}, 'updateInvoiceSettings');\r\n    const [InvoiceSettingsState, handlSiteInvoiceSettingsFetch] = useHandleFetch({}, 'invoiceSettingsDetail');\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        const getSiteSettings = async () => {\r\n            const siteSettingsRes = await handlSiteInvoiceSettingsFetch({});\r\n\r\n            console.log('siteSettingsRes', siteSettingsRes)\r\n        }\r\n        getSiteSettings();\r\n    }, [updateInfovSettingsState])\r\n\r\n\r\n\r\n\r\n\r\n    const handleSubmit = async (values: any, actions: any) => {\r\n        console.log('fuckInvoice')\r\n\r\n        const updateInvoiceRes = await handleUpdateInvoiceSettingsFetch({\r\n\r\n            body: {\r\n                invoiceTitle: values.invoiceTitle,\r\n                address: values.address,\r\n                phone: values.phone,\r\n                email: values.email,\r\n                additionalText: values.additionalText\r\n\r\n            },\r\n        });\r\n\r\n        // @ts-ignore\r\n        if (updateInvoiceRes && updateInvoiceRes.status === 'ok') {\r\n            openSuccessNotification();\r\n\r\n\r\n            // setBrandList([...brandList, {\r\n            //     id: addBrandRes['id'] || '',\r\n            //     key: addBrandRes['id'] || '',\r\n            //     name: addBrandRes['name'] || '',\r\n            //     description: addBrandRes['description'] || '',\r\n            //     // @ts-ignore\r\n            //     ...addBrandRes\r\n            // }]);\r\n\r\n            actions.resetForm();\r\n        }\r\n        else {\r\n            openErrorNotification();\r\n        }\r\n\r\n\r\n        actions.setSubmitting(false);\r\n\r\n    };\r\n\r\n\r\n\r\n\r\n\r\n    const getisSubmitButtonDisabled = (values, isValid) => {\r\n        if (!values.invoiceTitle || !isValid) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n\r\n\r\n    const getInitialValues = () => {\r\n        if (InvoiceSettingsState.data && Object.keys(InvoiceSettingsState.data).length > 0) {\r\n            return { ...InvoiceSettingsState.data }\r\n        }\r\n        else {\r\n            return initialValues\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <Formik\r\n            onSubmit={(values, actions) => handleSubmit(values, actions)}\r\n            validationSchema={validationSchema}\r\n            enableReinitialize={true}\r\n            initialValues={\r\n                getInitialValues()\r\n            }\r\n        >\r\n            {({\r\n                handleChange,\r\n                values,\r\n                handleSubmit,\r\n                errors,\r\n                isValid,\r\n                isSubmitting,\r\n                touched,\r\n                handleBlur,\r\n                setFieldTouched,\r\n                handleReset,\r\n            }) => (\r\n                    <>\r\n                        {console.log('goddamnErrors', errors)}\r\n                        <div className='siteInfoContainer__item'>\r\n                            <div className='siteInfoContainer__item-item'>\r\n                                <Input\r\n                                    label='Company Name'\r\n                                    value={values.invoiceTitle}\r\n                                    name='invoiceTitle'\r\n                                    isError={(touched.invoiceTitle && errors.invoiceTitle) ||\r\n                                        (!isSubmitting && updateInfovSettingsState.error['error']['invoiceTitle'])}\r\n\r\n                                    errorString={(touched.invoiceTitle && errors.invoiceTitle) ||\r\n                                        (!isSubmitting && updateInfovSettingsState.error['error']['invoiceTitle'])}\r\n                                    onChange={(e: any) => {\r\n                                        handleChange(e);\r\n                                        setFieldTouched('invoiceTitle');\r\n                                    }}\r\n                                />\r\n                            </div>\r\n                            <div className='siteInfoContainer__item-item'>\r\n                                <Input\r\n                                    label='Phone Number'\r\n                                    value={values.phone}\r\n                                    name='phone'\r\n                                    isError={(touched.phone && errors.phone) ||\r\n                                        (!isSubmitting && updateInfovSettingsState.error['error']['phone'])}\r\n\r\n                                    errorString={(touched.phone && errors.phone) ||\r\n                                        (!isSubmitting && updateInfovSettingsState.error['error']['phone'])}\r\n                                    onChange={(e: any) => {\r\n                                        handleChange(e);\r\n                                        setFieldTouched('phone');\r\n                                    }}\r\n                                />\r\n                            </div>\r\n                            <div className='siteInfoContainer__item-item'>\r\n                                <Input\r\n                                    label='Email'\r\n                                    value={values.email}\r\n                                    name='email'\r\n                                    isError={(touched.email && errors.email) ||\r\n                                        (!isSubmitting && updateInfovSettingsState.error['error']['email'])}\r\n\r\n                                    errorString={(touched.email && errors.email) ||\r\n                                        (!isSubmitting && updateInfovSettingsState.error['error']['email'])}\r\n                                    onChange={(e: any) => {\r\n                                        handleChange(e);\r\n                                        setFieldTouched('email');\r\n                                    }}\r\n                                />\r\n\r\n                            </div>\r\n\r\n                            <div className='siteInfoContainer__item-item'>\r\n                                <Input\r\n                                    label='Additional Text'\r\n                                    value={values.additionalText}\r\n                                    name='additionalText'\r\n                                    isError={(touched.additionalText && errors.additionalText) ||\r\n                                        (!isSubmitting && updateInfovSettingsState.error['error']['additionalText'])}\r\n\r\n                                    errorString={(touched.additionalText && errors.additionalText) ||\r\n                                        (!isSubmitting && updateInfovSettingsState.error['error']['additionalText'])}\r\n                                    onChange={(e: any) => {\r\n                                        handleChange(e);\r\n                                        setFieldTouched('additionalText');\r\n                                    }}\r\n                                />\r\n\r\n                            </div>\r\n\r\n                            <div className='siteInfoContainer__item-item-left'>\r\n                                <TextArea\r\n                                    label='Address'\r\n                                    value={values.address}\r\n                                    name='address'\r\n                                    isError={(touched.address && errors.address) ||\r\n                                        (!isSubmitting && updateInfovSettingsState.error['error']['address'])}\r\n\r\n                                    errorString={(touched.address && errors.address) ||\r\n                                        (!isSubmitting && updateInfovSettingsState.error['error']['address'])}\r\n                                    onChange={(e: any) => {\r\n                                        handleChange(e);\r\n                                        setFieldTouched('address');\r\n                                    }}\r\n                                />\r\n\r\n                            </div>\r\n\r\n                        </div>\r\n\r\n                        <Button\r\n                            onClick={(e: any) => handleSubmit(e)}\r\n                            loading={isSubmitting}\r\n                            disabled={getisSubmitButtonDisabled(values, isValid)}\r\n                            type='primary'>\r\n                            Update\r\n                        </Button>\r\n                    </>\r\n                )}\r\n        </Formik>\r\n\r\n\r\n\r\n\r\n    );\r\n};\r\n\r\nexport default UpdateSiteinfo;\r\n","import React, { useState } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n\r\nimport { useHandleFetch } from '../../hooks';\r\n// import third party ui lib\r\nimport { Upload, message, Switch, Select, Button, notification, Modal, Tabs } from 'antd';\r\n\r\n\r\nimport {\r\n\tFileOutlined,\r\n\tInboxOutlined,\r\n\tFileAddOutlined,\r\n\tDeleteOutlined,\r\n\tCheckCircleOutlined\r\n} from '@ant-design/icons';\r\n\r\n\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport MediaLibrary from \"../../components/MediaLibrary\";\r\nimport AdminSiteInfo from \"./AdminSiteInfo\";\r\nimport SiteInfoInvoice from \"./SiteInfoInvoice\";\r\n\r\nconst validationSchema = Yup.object().shape({\r\n\tname: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\nconst { TabPane } = Tabs;\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t\tmessage: message || 'Brand Created',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t\tmessage: message || 'Something Went Wrong',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n};\r\n\r\n\r\nconst initialValues = {\r\n\tname: '',\r\n\tdescription: '',\r\n\timage: [],\r\n\turl: '',\r\n\tcover: ''\r\n}\r\n\r\n\r\n\r\ninterface Props {\r\n\taddNewCategoryVisible?: any;\r\n\tsetAddNewCategoryVisible?: any;\r\n\tbrandList?: any;\r\n\tsetBrandList?: any;\r\n\r\n}\r\n\r\nconst AddNewBrand = ({ addNewCategoryVisible, setAddNewCategoryVisible, brandList, setBrandList }: Props) => {\r\n\r\n\tconst [addBrandState, handleAddBrandFetch] = useHandleFetch({}, 'addBrand');\r\n\tconst [visible, setvisible] = useState(false);\r\n\tconst [myImages, setmyImages] = useState(false);\r\n\tconst [visibleMedia, setvisibleMedia] = useState(false);\r\n\r\n\r\n\tconst handleSubmit = async (values: any, actions: any) => {\r\n\r\n\t\t// @ts-ignore\r\n\t\tconst imagesIds = myImages ? myImages.map(image => {\r\n\t\t\treturn image.id;\r\n\t\t}) : [];\r\n\r\n\r\n\t\tconst addBrandRes = await handleAddBrandFetch({\r\n\r\n\t\t\tbody: {\r\n\t\t\t\tname: values.name,\r\n\t\t\t\tdescription: values.description,\r\n\t\t\t\ttype: values.type,\r\n\t\t\t\timage: imagesIds,\r\n\t\t\t\tcover: imagesIds[0] ? imagesIds[0] : '',\r\n\t\t\t},\r\n\t\t});\r\n\r\n\t\t// @ts-ignore\r\n\t\tif (addBrandRes && addBrandRes.status === 'ok') {\r\n\t\t\topenSuccessNotification();\r\n\r\n\t\t\tsetBrandList([...brandList, {\r\n\t\t\t\tid: addBrandRes['id'] || '',\r\n\t\t\t\tkey: addBrandRes['id'] || '',\r\n\t\t\t\tname: addBrandRes['name'] || '',\r\n\t\t\t\tdescription: addBrandRes['description'] || '',\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\t...addBrandRes\r\n\t\t\t}])\r\n\t\t\tactions.resetForm();\r\n\t\t\tsetAddNewCategoryVisible(false);\r\n\t\t}\r\n\t\telse {\r\n\t\t\topenErrorNotification();\r\n\t\t}\r\n\r\n\r\n\r\n\r\n\t\tactions.setSubmitting(false);\r\n\r\n\t};\r\n\r\n\r\n\r\n\tconst onSwitchChange = (checked: any) => {\r\n\t\tconsole.log(checked);\r\n\t};\r\n\r\n\r\n\tconst handleCancel = (e: any) => {\r\n\t\tsetAddNewCategoryVisible(false);\r\n\t};\r\n\r\n\r\n\tconst getisSubmitButtonDisabled = (values, isValid) => {\r\n\t\tif (!values.name && !values.description || !isValid) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\r\n\r\n\r\n\tconst handleImagesDelete = (id) => {\r\n\t\t// @ts-ignore\r\n\t\tconst newImages = myImages && myImages.filter(image => {\r\n\t\t\treturn image.id !== id;\r\n\t\t})\r\n\r\n\t\tsetmyImages(newImages);\r\n\t}\r\n\r\n\r\n\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<div className='siteInfoContainer'>\r\n\t\t\t\t<h2>\r\n\t\t\t\t\tSite Settings\r\n\t\t\t</h2>\r\n\r\n\t\t\t\t<Tabs defaultActiveKey=\"1\" >\r\n\t\t\t\t\t<TabPane tab=\"Site Info\" key=\"1\">\r\n\t\t\t\t\t\t<AdminSiteInfo />\r\n\t\t\t\t\t</TabPane>\r\n\t\t\t\t\t{/* <TabPane tab=\"Logo & Icon\" key=\"2\">\r\n\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\tdisplay: 'flex',\r\n\t\t\t\t\t\t\talignItems: 'center'\r\n\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\tmarginRight: '30px'\r\n\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>Site Logo</h3>\r\n\t\t\t\t\t\t\t\t<div className='aboutToUploadImagesContainer'>\r\n\t\t\t\t\t\t\t\t\t{myImages &&\r\n\t\t\t\t\t\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\t\t\t\t\t\tmyImages.length > 0 && myImages.map(image => {\r\n\t\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div className='aboutToUploadImagesContainer__item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => handleImagesDelete(image.id)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='aboutToUploadImagesContainer__item-overlay'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<DeleteOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<img src={image.cover} alt={image.alt} />\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t\t})}\r\n\r\n\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\t\t\tsetvisibleMedia(true);\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\tclassName='aboutToUploadImagesContainer__uploadItem'>\r\n\t\t\t\t\t\t\t\t\t\t<FileAddOutlined />\r\n\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\t// marginTop: '15px'\r\n\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>Site Icon</h3>\r\n\t\t\t\t\t\t\t\t<div className='aboutToUploadImagesContainer'>\r\n\t\t\t\t\t\t\t\t\t{myImages &&\r\n\t\t\t\t\t\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\t\t\t\t\t\tmyImages.length > 0 && myImages.map(image => {\r\n\t\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div className='aboutToUploadImagesContainer__item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => handleImagesDelete(image.id)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='aboutToUploadImagesContainer__item-overlay'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<DeleteOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<img src={image.cover} alt={image.alt} />\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t\t})}\r\n\r\n\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\t\t\tsetvisibleMedia(true);\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\tclassName='aboutToUploadImagesContainer__uploadItem'>\r\n\t\t\t\t\t\t\t\t\t\t<FileAddOutlined />\r\n\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\r\n\r\n\t\t\t\t\t</TabPane> */}\r\n\r\n\r\n\t\t\t\t\t<TabPane tab=\"Invoice Information\" key=\"2\">\r\n\r\n\t\t\t\t\t\t<SiteInfoInvoice />\r\n\t\t\t\t\t</TabPane>\r\n\r\n\t\t\t\t</Tabs>\r\n\r\n\t\t\t</div>\r\n\r\n\r\n\r\n\t\t\t<MediaLibrary\r\n\t\t\t\tsetvisible={setvisibleMedia}\r\n\t\t\t\tvisible={visibleMedia}\r\n\t\t\t\tsetmyImages={setmyImages}\r\n\t\t\t\tisModalOpenForImages={true}\r\n\r\n\t\t\t/>\r\n\t\t</>\r\n\r\n\r\n\t);\r\n};\r\n\r\nexport default AddNewBrand;\r\n\r\n\r\n\r\n/*\r\n\t<div className='categoryListContainer__bodyContainerList'>\r\n\t\t\t\t<div className='categoryListContainer__bodyContainerList-item'>\r\n\t\t\t\t\t<Badge count={<CheckCircleTwoTone style={{ color: '#3FA3FF' }} />}>\r\n\t\t\t\t\t\t<div className='categoryListContainer__bodyContainerList-item-top'>\r\n\t\t\t\t\t\t\t<img\r\n\t\t\t\t\t\t\t\talt='theme img'\r\n\t\t\t\t\t\t\t\tsrc='https://homebazarshibchar.com/images/homeBazar.zip-thumb-homebazarLogo.jpg'\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className='categoryListContainer__bodyContainerList-item-body'>\r\n\t\t\t\t\t\t\t<h3>Home Bazar</h3>\r\n\r\n\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\tdisplay: 'flex',\r\n\t\t\t\t\t\t\t\t\tjustifyContent: 'space-between'\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<Tooltip placement='top' title='Active this theme'>\r\n\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\tsize='small'\r\n\t\t\t\t\t\t\t\t\t\ttype='primary'\r\n\t\t\t\t\t\t\t\t\t\ticon={<CheckOutlined />}\r\n\t\t\t\t\t\t\t\t\t\tonClick={() => console.log('upload thme')}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\tSet Active\r\n\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t</Tooltip>\r\n\r\n\t\t\t\t\t\t\t\t<Tooltip placement='top' title='Delete theme'>\r\n\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\tsize='small'\r\n\t\t\t\t\t\t\t\t\t\ttype='link'\r\n\t\t\t\t\t\t\t\t\t\tdanger={true}\r\n\t\t\t\t\t\t\t\t\t\ticon={<DeleteOutlined />}\r\n\t\t\t\t\t\t\t\t\t\tonClick={() => console.log('upload thme')}\r\n\t\t\t\t\t\t\t\t\t>\r\n\r\n\t\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</Badge>\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t<div className='categoryListContainer__bodyContainerList-item'>\r\n\t\t\t\t\t\t\t<div className='categoryListContainer__bodyContainerList-item-top'>\r\n\t\t\t\t\t\t\t\t<img\r\n\t\t\t\t\t\t\t\t\talt='theme img'\r\n\t\t\t\t\t\t\t\t\tsrc='https://homebazarshibchar.com/images/homeBazar.zip-thumb-homebazarLogo.jpg'\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className='categoryListContainer__bodyContainerList-item-body'>\r\n\t\t\t\t\t\t\t\t<h3>Home Bazar</h3>\r\n\r\n\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\tdisplay: 'flex',\r\n\t\t\t\t\t\t\t\t\t\tjustifyContent: 'space-between'\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t<Tooltip placement='top' title='Active this theme'>\r\n\t\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\t\tsize='small'\r\n\t\t\t\t\t\t\t\t\t\t\ttype='primary'\r\n\t\t\t\t\t\t\t\t\t\t\ticon={<CheckOutlined />}\r\n\t\t\t\t\t\t\t\t\t\t\tonClick={() => console.log('upload thme')}\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\tSet Active\r\n\t\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t\t</Tooltip>\r\n\r\n\t\t\t\t\t\t\t\t\t<Tooltip placement='top' title='Delete theme'>\r\n\t\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\t\tsize='small'\r\n\t\t\t\t\t\t\t\t\t\t\ttype='link'\r\n\t\t\t\t\t\t\t\t\t\t\tdanger={true}\r\n\t\t\t\t\t\t\t\t\t\t\ticon={<DeleteOutlined />}\r\n\t\t\t\t\t\t\t\t\t\t\tonClick={() => console.log('upload thme')}\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\r\n\r\n*/","import React, { useState, useEffect } from 'react';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\n\r\ninterface Props {\r\n\tsetdeliveryChargeList: any;\r\n\tdeliveryChargeList: any;\r\n\tdeliveryChargeItem: any;\r\n}\r\n\r\nconst DeliveryCharge = ({ deliveryChargeItem, setdeliveryChargeList, deliveryChargeList }: Props) => {\r\n\tconst [ deliveryCharge, setdeliveryCharge ] = useState({\r\n\t\tminimumOrder: deliveryChargeItem.minimumOrder,\r\n\t\tcharge: deliveryChargeItem.charge\r\n\t});\r\n\r\n\tconst handleDeliveryChargeChange = (e) => {\r\n\t\tconst name = e.target.name;\r\n\t\tconst value = e.target.value;\r\n\r\n\t\tsetdeliveryCharge({\r\n\t\t\t...deliveryCharge,\r\n\t\t\t[name]: value\r\n\t\t});\r\n\t};\r\n\r\n\tuseEffect(\r\n\t\t() => {\r\n\t\t\tconst positionInAttribute = () => {\r\n\t\t\t\treturn deliveryChargeList.map((item) => item.id).indexOf(deliveryChargeItem.id);\r\n\t\t\t};\r\n\r\n\t\t\tconst index = positionInAttribute();\r\n\r\n\t\t\tconst updatedItem = Object.assign({}, deliveryChargeList[index], { ...deliveryCharge });\r\n\t\t\tconst updateAttributeList = [\r\n\t\t\t\t...deliveryChargeList.slice(0, index),\r\n\t\t\t\tupdatedItem,\r\n\t\t\t\t...deliveryChargeList.slice(index + 1)\r\n\t\t\t];\r\n\t\t\tsetdeliveryChargeList(updateAttributeList);\r\n\t\t},\r\n\t\t[ deliveryCharge ]\r\n\t);\r\n\r\n\tconst handleAttributeDelete = () => {\r\n\t\tconst updateAttributeList = deliveryChargeList.filter((item) => item.id !== deliveryChargeItem.id);\r\n\t\tsetdeliveryChargeList(updateAttributeList);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className='dubbleRowInputs'>\r\n\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t<Input\r\n\t\t\t\t\ttype='number'\r\n\t\t\t\t\taddonBefore='Minimum Order'\r\n\t\t\t\t\tvalue={deliveryCharge.minimumOrder}\r\n\t\t\t\t\tname='minimumOrder'\r\n\t\t\t\t\tonChange={handleDeliveryChargeChange}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t<Input\r\n\t\t\t\t\ttype='number'\r\n\t\t\t\t\taddonBefore='Charge'\r\n\t\t\t\t\tvalue={deliveryCharge.charge}\r\n\t\t\t\t\tname='charge'\r\n\t\t\t\t\tonChange={handleDeliveryChargeChange}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default DeliveryCharge;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n\r\nimport { useHandleFetch } from '../../hooks';\r\n// import third party ui lib\r\nimport { Upload, message, Switch, Select, Button, notification, Modal, Empty } from 'antd';\r\n\r\nimport {\r\n\tFileOutlined,\r\n\tInboxOutlined,\r\n\tRadiusUpleftOutlined,\r\n\tRadiusUprightOutlined,\r\n\tRadiusBottomleftOutlined,\r\n\tRadiusBottomrightOutlined,\r\n\tDeleteOutlined,\r\n\tFileAddOutlined,\r\n\tPlusOutlined,\r\n\tCheckCircleOutlined\r\n} from '@ant-design/icons';\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport DeliveryCharge from './DeliveryCharge';\r\n\r\n\r\nconst { Option } = Select;\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t\tmessage: message || 'Category Updated',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t\tmessage: message || 'Something Went Wrong',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n\tname: Yup.string()\r\n\t\t.label('Name')\r\n\t\t.required()\r\n\t\t.min(2, 'Name must have at least 2 characters '),\r\n\tpickUpLocation: Yup.string()\r\n\t\t.label('Pick up Location')\r\n\t\t.required()\r\n\t\t.min(2, 'Pick up Location must have at least 2 characters '),\r\n\ttime: Yup.string()\r\n\t\t.label('Time')\r\n\t\t.required()\r\n\t\t.min(2, 'Time must have at least 2 characters '),\r\n\r\n});\r\n\r\n\r\n\r\n\r\nconst initialValues = {\r\n\tname: '',\r\n\tpickUpLocation: '',\r\n\ttime: '',\r\n};\r\n\r\n\r\n\r\n\r\ninterface Props {\r\n\taddNewCategoryVisible: any;\r\n\tsetAddNewCategoryVisible: any;\r\n\tregionList?: any;\r\n\tsetRegionList?: any;\r\n}\r\n\r\nconst AddNewRegion = ({ addNewCategoryVisible, setAddNewCategoryVisible, regionList, setRegionList }: Props) => {\r\n\r\n\tconst [addRegionState, handleRegionFetch] = useHandleFetch({}, 'addRegion');\r\n\tconst [selectedCountryValue, setselectedCountryValue] = useState('');\r\n\tconst [selectedCityValue, setselectedCityValue] = useState('');\r\n\r\n\tconst [countryOptions, setcountryOptions] = useState([]);\r\n\tconst [cityOptions, setcityOptions] = useState([]);\r\n\r\n\tconst [countryListState, handleCountryListFetch] = useHandleFetch(\r\n\t\t[],\r\n\t\t'countryList'\r\n\t);\r\n\r\n\tconst [cityListState, handleCityListFetch] = useHandleFetch([], 'cityList');\r\n\r\n\tconst [countryList, setCountryList] = useState([]);\r\n\tconst [cityList, setCityList] = useState([]);\r\n\r\n\tconst [deliveryChargeList, setdeliveryChargeList] = useState([{\r\n\t\tminimumOrder: '',\r\n\t\tcharge: '',\r\n\t\tid: '0'\r\n\t}]);\r\n\r\n\r\n\tconst handleSubmit = async (values: any, actions: any) => {\r\n\t\tconsole.log('selectedCityValue', selectedCityValue)\r\n\r\n\t\tif (deliveryChargeList.length > 0) {\r\n\t\t\tconst charge = {};\r\n\r\n\t\t\tfor (let item of deliveryChargeList) {\r\n\t\t\t\tif (charge[item['minimumOrder']] !== '' && item['charge'] !== '') {\r\n\t\t\t\t\tcharge[item['minimumOrder']] = item['charge']\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tconst addRegionRes = await handleRegionFetch({\r\n\r\n\t\t\t\tbody: {\r\n\t\t\t\t\tname: values.name,\r\n\t\t\t\t\tpickUpLocation: values.pickUpLocation,\r\n\t\t\t\t\ttime: values.time,\r\n\t\t\t\t\tcountry: selectedCountryValue,\r\n\t\t\t\t\tcity: selectedCityValue,\r\n\t\t\t\t\tcharge\r\n\t\t\t\t},\r\n\t\t\t});\r\n\r\n\r\n\t\t\t// @ts-ignore\r\n\t\t\tif (addRegionRes && addRegionRes.status === 'ok') {\r\n\t\t\t\topenSuccessNotification();\r\n\r\n\t\t\t\tsetRegionList([...regionList, {\r\n\t\t\t\t\tid: addRegionRes['id'] || '',\r\n\t\t\t\t\tkey: addRegionRes['id'] || '',\r\n\t\t\t\t\tname: addRegionRes['name'] || '',\r\n\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\t...addRegionRes\r\n\t\t\t\t}])\r\n\t\t\t\tsetAddNewCategoryVisible(false)\r\n\t\t\t\tactions.resetForm();\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\topenErrorNotification();\r\n\t\t\t}\r\n\r\n\r\n\r\n\t\t}\r\n\t\telse {\r\n\t\t\tconst addRegionRes = await handleRegionFetch({\r\n\r\n\t\t\t\tbody: {\r\n\t\t\t\t\tname: values.name,\r\n\t\t\t\t\tpickUpLocation: values.pickUpLocation,\r\n\t\t\t\t\ttime: values.time,\r\n\t\t\t\t\tcountry: selectedCountryValue,\r\n\t\t\t\t\tcity: selectedCityValue,\r\n\t\t\t\t\tcharge: {}\r\n\t\t\t\t},\r\n\t\t\t});\r\n\r\n\r\n\t\t\t// @ts-ignore\r\n\t\t\tif (addRegionRes && addRegionRes.status === 'ok') {\r\n\t\t\t\topenSuccessNotification();\r\n\r\n\t\t\t\tsetRegionList([...regionList, {\r\n\t\t\t\t\tid: addRegionRes['id'] || '',\r\n\t\t\t\t\tkey: addRegionRes['id'] || '',\r\n\t\t\t\t\tname: addRegionRes['name'] || '',\r\n\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\t...addRegionRes\r\n\t\t\t\t}])\r\n\t\t\t\tsetAddNewCategoryVisible(false)\r\n\t\t\t\tactions.resetForm();\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\topenErrorNotification();\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\r\n\r\n\t\tactions.setSubmitting(false);\r\n\t};\r\n\r\n\r\n\r\n\tconst onChangeCity = (value) => {\r\n\t\tsetselectedCityValue(value);\r\n\t}\r\n\r\n\tconst onChangeCountry = (value) => {\r\n\t\tsetselectedCountryValue(value);\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tconst setCountries = async () => {\r\n\t\t\tconst CountryListRes = await handleCountryListFetch({});\r\n\r\n\t\t\t// @ts-ignore\r\n\t\t\tif (CountryListRes && CountryListRes.length > 0) {\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\tconst countryOptions = CountryListRes.map((country) => {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tvalue: country.name,\r\n\t\t\t\t\t\tname: country.name\r\n\t\t\t\t\t};\r\n\t\t\t\t});\r\n\t\t\t\tsetcountryOptions(countryOptions);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tsetCountries();\r\n\t}, []);\r\n\r\n\r\n\tuseEffect(() => {\r\n\t\tconst setCities = async () => {\r\n\t\t\tconst cityListRes = await handleCityListFetch({\r\n\t\t\t\turlOptions: {\r\n\t\t\t\t\tplaceHolders: {\r\n\t\t\t\t\t\tcountry: selectedCountryValue,\r\n\t\t\t\t\t},\r\n\t\t\t\t},\r\n\t\t\t});\r\n\r\n\t\t\t// @ts-ignore\r\n\t\t\tif (cityListRes && cityListRes.length > 0) {\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\tconst cityOptions = cityListRes.map((city) => {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tvalue: city.name,\r\n\t\t\t\t\t\tname: city.name\r\n\t\t\t\t\t};\r\n\t\t\t\t});\r\n\t\t\t\tsetcityOptions(cityOptions);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tsetCities();\r\n\t}, [selectedCountryValue]);\r\n\r\n\r\n\r\n\r\n\tconst handleCancel = (e: any) => {\r\n\t\tsetAddNewCategoryVisible(false);\r\n\t};\r\n\r\n\r\n\tconst getisSubmitButtonDisabled = (values, isValid) => {\r\n\t\tif (!isValid ||\r\n\t\t\t!values.name ||\r\n\t\t\t!values.pickUpLocation ||\r\n\t\t\t!values.time) {\r\n\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\r\n\r\n\tconst handleAddDeliveryCharge = () => {\r\n\t\tsetdeliveryChargeList([...deliveryChargeList, {\r\n\t\t\tminimumOrder: '',\r\n\t\t\tcharge: '',\r\n\t\t\tid: `${deliveryChargeList.length}`\r\n\t\t}])\r\n\t};\r\n\r\n\r\n\r\n\r\n\tconsole.log('deliveryChargeList', deliveryChargeList)\r\n\treturn (\r\n\t\t<Formik\r\n\t\t\tonSubmit={(values, actions) => handleSubmit(values, actions)}\r\n\t\t\tvalidationSchema={validationSchema}\r\n\t\t\tvalidateOnBlur={false}\r\n\t\t\tenableReinitialize={true}\r\n\t\t\tinitialValues={\r\n\t\t\t\t{ ...initialValues }\r\n\t\t\t}\r\n\t\t>\r\n\t\t\t{({\r\n\t\t\t\thandleChange,\r\n\t\t\t\tvalues,\r\n\t\t\t\thandleSubmit,\r\n\t\t\t\terrors,\r\n\t\t\t\tisValid,\r\n\t\t\t\tisSubmitting,\r\n\t\t\t\ttouched,\r\n\t\t\t\thandleBlur,\r\n\t\t\t\tsetFieldTouched,\r\n\t\t\t\thandleReset,\r\n\t\t\t}) => (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<Modal\r\n\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\ttop: '40px'\r\n\t\t\t\t\t\t\t}}\r\n\r\n\t\t\t\t\t\t\tbodyStyle={{\r\n\t\t\t\t\t\t\t\tmargin: '0',\r\n\t\t\t\t\t\t\t\tpadding: '10px'\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\ttitle=\"Add New Region\"\r\n\t\t\t\t\t\t\tvisible={addNewCategoryVisible}\r\n\t\t\t\t\t\t\tonOk={(e: any) => handleSubmit(e)}\r\n\t\t\t\t\t\t\tonCancel={handleCancel}\r\n\t\t\t\t\t\t\tokText='Create'\r\n\t\t\t\t\t\t\tokButtonProps={{\r\n\t\t\t\t\t\t\t\tloading: isSubmitting,\r\n\t\t\t\t\t\t\t\thtmlType: \"submit\",\r\n\t\t\t\t\t\t\t\tdisabled: getisSubmitButtonDisabled(values, isValid)\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\r\n\r\n\t\t\t\t\t\t\t<div className='dubbleRowInputs'>\r\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\tlabel='Name'\r\n\t\t\t\t\t\t\t\t\t\tvalue={values.name}\r\n\t\t\t\t\t\t\t\t\t\tname='name'\r\n\t\t\t\t\t\t\t\t\t\tisError={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addRegionState.error['error']['name'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\terrorString={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addRegionState.error['error']['name'])}\r\n\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('name');\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\tlabel='Pick up Location'\r\n\t\t\t\t\t\t\t\t\t\tvalue={values.pickUpLocation}\r\n\t\t\t\t\t\t\t\t\t\tname='pickUpLocation'\r\n\t\t\t\t\t\t\t\t\t\tisError={(touched.pickUpLocation && errors.pickUpLocation) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addRegionState.error['error']['pickUpLocation'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\terrorString={(touched.pickUpLocation && errors.pickUpLocation) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addRegionState.error['error']['pickUpLocation'])}\r\n\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('pickUpLocation');\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\tmarginRight: '10px'\r\n\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\tlabel='Time'\r\n\t\t\t\t\t\t\t\t\tvalue={values.time}\r\n\t\t\t\t\t\t\t\t\tname='time'\r\n\t\t\t\t\t\t\t\t\tisError={(touched.time && errors.time) ||\r\n\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addRegionState.error['error']['time'])}\r\n\r\n\t\t\t\t\t\t\t\t\terrorString={(touched.time && errors.time) ||\r\n\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addRegionState.error['error']['time'])}\r\n\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\tsetFieldTouched('time');\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t<div className='dubbleRowInputs'>\r\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\t\t\t\tCountry\r\n            </h3>\r\n\t\t\t\t\t\t\t\t\t<Select\r\n\t\t\t\t\t\t\t\t\t\tnotFoundContent={<Empty description='No Country Found' image={Empty.PRESENTED_IMAGE_SIMPLE} />}\r\n\t\t\t\t\t\t\t\t\t\tshowSearch\r\n\t\t\t\t\t\t\t\t\t\tstyle={{ width: '100%' }}\r\n\t\t\t\t\t\t\t\t\t\tplaceholder='Select a Country'\r\n\t\t\t\t\t\t\t\t\t\toptionFilterProp='children'\r\n\t\t\t\t\t\t\t\t\t\tonChange={onChangeCountry}\r\n\t\t\t\t\t\t\t\t\t\tfilterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t{countryListState.done &&\r\n\t\t\t\t\t\t\t\t\t\t\tcountryListState.data.length > 0 &&\r\n\t\t\t\t\t\t\t\t\t\t\tcountryOptions.map((option) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\treturn <Option value={option.value}>{option.name}</Option>;\r\n\t\t\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t\t</Select>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\t\t\t\tCity\r\n            </h3>\r\n\t\t\t\t\t\t\t\t\t<Select\r\n\t\t\t\t\t\t\t\t\t\tnotFoundContent={<Empty description='First Select a Country' image={Empty.PRESENTED_IMAGE_SIMPLE} />}\r\n\t\t\t\t\t\t\t\t\t\tmode=\"multiple\"\r\n\t\t\t\t\t\t\t\t\t\tshowSearch\r\n\t\t\t\t\t\t\t\t\t\tstyle={{ width: '100%' }}\r\n\t\t\t\t\t\t\t\t\t\tplaceholder='Select a city'\r\n\t\t\t\t\t\t\t\t\t\toptionFilterProp='children'\r\n\t\t\t\t\t\t\t\t\t\tonChange={onChangeCity}\r\n\t\t\t\t\t\t\t\t\t\tfilterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t{cityListState.done &&\r\n\t\t\t\t\t\t\t\t\t\t\tcityListState.data.length > 0 &&\r\n\t\t\t\t\t\t\t\t\t\t\tcityOptions.map((option) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\treturn <Option value={option.value}>{option.name}</Option>;\r\n\t\t\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t\t</Select>\r\n\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\tmarginTop: '12px'\r\n\t\t\t\t\t\t\t}}></div>\r\n\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\t\tDelivery Charges\r\n            </h3>\r\n\r\n\t\t\t\t\t\t\t{deliveryChargeList.map(deliveryChargeItem => {\r\n\t\t\t\t\t\t\t\treturn <DeliveryCharge\r\n\t\t\t\t\t\t\t\t\tdeliveryChargeItem={deliveryChargeItem}\r\n\t\t\t\t\t\t\t\t\tdeliveryChargeList={deliveryChargeList} setdeliveryChargeList={setdeliveryChargeList} />\r\n\t\t\t\t\t\t\t})}\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\tmarginTop: '5px',\r\n\t\t\t\t\t\t\t}}></div>\r\n\t\t\t\t\t\t\t<Button size='middle'\r\n\t\t\t\t\t\t\t\tonClick={handleAddDeliveryCharge}\r\n\t\t\t\t\t\t\t\ttype=\"dashed\" icon={<PlusOutlined />}>Add Charge</Button>\r\n\r\n\t\t\t\t\t\t</Modal>\r\n\r\n\r\n\r\n\r\n\t\t\t\t\t</>\r\n\t\t\t\t)}\r\n\t\t</Formik>\r\n\r\n\r\n\r\n\r\n\t);\r\n};\r\n\r\nexport default AddNewRegion;\r\n","import React,{useState, useEffect} from 'react';\r\nimport { Modal, Select, notification } from 'antd';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport {CheckCircleOutlined } from '@ant-design/icons';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport {useHandleFetch} from '../../hooks';\r\n\r\n\r\nconst { Option } = Select;\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    name: Yup.string()\r\n      .label('Name')\r\n      .required()\r\n      .min(2, 'Name must have at least 2 characters '),\r\n\t  pickUpLocation: Yup.string()\r\n      .label('Pick up Location')\r\n      .required()\r\n\t  .min(2, 'Pick up Location must have at least 2 characters '),\r\n\t  time: Yup.string()\r\n      .label('Time')\r\n      .required()\r\n      .min(2, 'Time must have at least 2 characters '),\r\n  \r\n  });\r\n\r\n\r\n\r\n  const openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t  message: message || 'Tag Created',\r\n\t  description: '',\r\n\t  icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n  };\r\n\r\n\r\n  const openErrorNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t  message: message || 'Something Went Wrong',\r\n\t  description: '',\r\n\t  icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n  };\r\n\r\n\r\ninterface Props {\r\n\tcustomer: any;\r\n\tsetvisible: any; \r\n\tvisible: any;\r\n\tregionList?:any;\r\n\tsetRegionList?:any; \r\n}\r\n\r\nconst QuickEdit = ({ customer, setvisible, visible, setRegionList, regionList }: Props) => {\r\n\tconst [updateRegionState, handleUpdateRegionFetch] = useHandleFetch({}, 'updateRegion');\r\n\r\n\r\n\tconst [selectedCountryValue,setselectedCountryValue] = useState(''); \r\n    const [selectedCityValue,setselectedCityValue] = useState(''); \r\n\r\n    const [countryOptions,setcountryOptions] = useState([]); \r\n    const [cityOptions,setcityOptions] = useState([]); \r\n\r\n    const [countryListState, handleCountryListFetch] = useHandleFetch(\r\n        [],\r\n        'countryList'\r\n      );\r\n    \r\n      const [cityListState, handleCityListFetch] = useHandleFetch([], 'cityList');\r\n    \r\n      const [countryList, setCountryList] = useState([]);\r\n      const [cityList, setCityList] = useState([]);\r\n\r\n\r\n\r\n\t  const handleSubmit = async (values : any, actions : any) => {\r\n\t\tconsole.log('selectedCityValue',selectedCityValue)\r\n\r\n\t\tconst addRegionRes = await handleUpdateRegionFetch({\r\n\t\t\r\n\t\t\tbody: {\r\n\t\t\t\tname: values.name,\r\n\t\t\t\tpickUpLocation: values.pickUpLocation,\r\n\t\t\t\ttime: values.time,\r\n\t\t\t\tcountry: selectedCountryValue,\r\n\t\t\t\tcity: selectedCityValue,\r\n\t\t\t\tcharge : {}\r\n\t\t\t},\r\n\t\t  });\r\n\r\n\t\t   // @ts-ignore\r\n\t\t   if(addRegionRes && addRegionRes.status === 'ok'){\r\n\t\t\topenSuccessNotification(); \r\n\t\r\n\t\t\tconst positionInTag = () => {\r\n\t\t\t\treturn regionList.map(item => item.id).indexOf(customer.id);\r\n\t\t\t  }\r\n\t\r\n\t\t\t  const index = positionInTag();\r\n\t\r\n\t\t\t  // @ts-ignore\r\n\t\t\t  const updatedItem = Object.assign({}, regionList[index], { ...addRegionRes });\r\n\t\t\t  const updateRegionList = [...regionList.slice(0, index), updatedItem, ...regionList.slice(index + 1)];\r\n\t\t\t  setRegionList(updateRegionList); \r\n\t\t\t\r\n\t\t  }\r\n\t\t  else {\r\n\t\t\topenErrorNotification();\r\n\t\t  }\r\n\t\t\r\n\t\t  actions.setSubmitting(false);\r\n\t\t  setvisible(false)\r\n\r\n\t};\r\n\r\n\t\r\n\r\n\t\r\n    const onChangeCity = (value) => {\r\n        setselectedCityValue(value); \r\n    }\r\n\r\n    const onChangeCountry = (value) => {\r\n        setselectedCountryValue(value); \r\n    }\r\n    \r\n\tuseEffect(() => {\r\n\t\tconst setCountries = async () => {\r\n\t\t\tconst CountryListRes = await handleCountryListFetch({});\r\n\r\n\t\t\t// @ts-ignore\r\n\t\t\tif (CountryListRes && CountryListRes.length > 0) {\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\tconst countryOptions = CountryListRes.map((country) => {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tvalue: country.name,\r\n\t\t\t\t\t\tname: country.name\r\n\t\t\t\t\t};\r\n\t\t\t\t});\r\n\t\t\t\tsetcountryOptions(countryOptions);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tsetCountries();\r\n    }, []);\r\n    \r\n\r\n    useEffect(() => {\r\n\t\tconst setCities = async () => {\r\n\t\t\tconst cityListRes = await handleCityListFetch({\r\n                urlOptions: {\r\n                    placeHolders: {\r\n                      country: selectedCountryValue,\r\n                    },\r\n                  },\r\n            });\r\n\r\n\t\t\t// @ts-ignore\r\n\t\t\tif (cityListRes && cityListRes.length > 0) {\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\tconst cityOptions = cityListRes.map((city) => {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tvalue: city.name,\r\n\t\t\t\t\t\tname: city.name\r\n\t\t\t\t\t};\r\n\t\t\t\t});\r\n\t\t\t\tsetcityOptions(cityOptions);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tsetCities();\r\n    }, [selectedCountryValue]);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\tconst handleCancel = (e: any) => {\r\n        setvisible(false);\r\n      };\r\n\r\n\r\n\r\n\t  const getisSubmitButtonDisabled = (values,isValid) => {\r\n\t\tif(!isValid ||\r\n            !values.name ||\r\n            !values.pickUpLocation ||\r\n            !values.time ){ \r\n\t\r\n\t\t\treturn true; \r\n\t\t}\r\n\t\treturn false; \r\n\t  }\r\n\r\n\treturn (\r\n\t\t<Formik\r\n\t\tonSubmit={(values, actions) => handleSubmit(values, actions)}\r\n\t\tvalidationSchema={validationSchema}\r\n\t\tvalidateOnBlur={false}\r\n\t\tenableReinitialize={true}\r\n\t\tinitialValues={\r\n\t\t  {...customer}\r\n\t\t}\r\n\t  >\r\n\t\t{({\r\n\t\t  handleChange,\r\n\t\t  values,\r\n\t\t  handleSubmit,\r\n\t\t  errors,\r\n\t\t  isValid,\r\n\t\t  isSubmitting,\r\n\t\t  touched,\r\n\t\t  handleBlur,\r\n\t\t  setFieldTouched,\r\n\t\t  handleReset,\r\n\t\t}) => (\r\n\t\t\t<>\r\n\t\t\t<Modal\r\n\t\t\ttitle=\"Quick Edit\"\r\n\t\t\tvisible={visible}\r\n\t\t\tonOk={(e : any) => handleSubmit(e)}\r\n\t\t\tonCancel={handleCancel}\r\n\t\t\tokText='Update'\r\n\t\t\tokButtonProps={{\r\n\t\t\tloading: isSubmitting,\r\n\t\t\thtmlType: \"submit\",\r\n\t\t\tdisabled: getisSubmitButtonDisabled(values, isValid)\r\n\t\t\t}}\r\n\t\t\tbodyStyle={{\r\n                margin: '0',\r\n                padding: '10px'\r\n            }}\r\n  >\r\n    \t\t\r\n\r\n            <div className='dubbleRowInputs'>\r\n         <div className='dubbleRowInputs__item'>\r\n         <Input \r\n\t\t\t   label='Name'\r\n\t\t\t   value={values.name}\r\n\t\t\t   name='name'\r\n\t\t\t   isError={(touched.name && errors.name) ||\r\n\t\t\t\t  (!isSubmitting && updateRegionState.error['error']['name'])}\r\n\t\t\t  \r\n\t\t\t\t  errorString={(touched.name && errors.name) ||\r\n\t\t\t\t\t  (!isSubmitting && updateRegionState.error['error']['name'])}\r\n\t\t\t   onChange={(e : any) => {\r\n\t\t\t\t  handleChange(e);\r\n\t\t\t\t  setFieldTouched('name');\r\n\t\t\t\t}}\r\n\t\t\t   />\r\n         </div>\r\n         <div className='dubbleRowInputs__item'>\r\n         <Input \r\n\t\t\t   label='Pick up Location'\r\n\t\t\t   value={values.pickUpLocation}\r\n\t\t\t   name='pickUpLocation'\r\n\t\t\t   isError={(touched.pickUpLocation && errors.pickUpLocation) ||\r\n\t\t\t\t  (!isSubmitting && updateRegionState.error['error']['pickUpLocation'])}\r\n\t\t\t  \r\n\t\t\t\t  errorString={(touched.pickUpLocation && errors.pickUpLocation) ||\r\n\t\t\t\t\t  (!isSubmitting && updateRegionState.error['error']['pickUpLocation'])}\r\n\t\t\t   onChange={(e : any) => {\r\n\t\t\t\t  handleChange(e);\r\n\t\t\t\t  setFieldTouched('pickUpLocation');\r\n\t\t\t\t}}\r\n\t\t\t   />\r\n         </div>\r\n\r\n\r\n\r\n\r\n            </div>\r\n\r\n\t\t\t \r\n\r\n     \r\n            \r\n\r\n\r\n    \r\n          <div style={{\r\n              marginRight: '10px'\r\n          }}>\r\n          <Input \r\n\t\t\t   label='Time'\r\n\t\t\t   value={values.time}\r\n\t\t\t   name='time'\r\n\t\t\t   isError={(touched.time && errors.time) ||\r\n\t\t\t\t  (!isSubmitting && updateRegionState.error['error']['time'])}\r\n\t\t\t  \r\n\t\t\t\t  errorString={(touched.time && errors.time) ||\r\n\t\t\t\t\t  (!isSubmitting && updateRegionState.error['error']['time'])}\r\n\t\t\t   onChange={(e : any) => {\r\n\t\t\t\t  handleChange(e);\r\n\t\t\t\t  setFieldTouched('time');\r\n\t\t\t\t}}\r\n\t\t\t   />\r\n          </div>\r\n\r\n\r\n\r\n<div className='dubbleRowInputs'>\r\n         <div className='dubbleRowInputs__item'>\r\n         <h3 className='inputFieldLabel'>\r\n                Country\r\n            </h3>\r\n         <Select\r\n\t\t\tshowSearch\r\n\t\t\tstyle={{ width: '100%' }}\r\n\t\t\tplaceholder='Select a Country'\r\n\t\t\toptionFilterProp='children'\r\n\t\t\tdefaultValue={customer && customer.country}\r\n\t\t\tonChange={onChangeCountry}\r\n\t\t\tfilterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n\t\t>\r\n\t\t\t{countryListState.done &&\r\n\t\t\t\tcountryListState.data.length > 0 &&\r\n\t\t\t\tcountryOptions.map((option) => {\r\n\t\t\t\t\treturn <Option value={option.value}>{option.name}</Option>;\r\n\t\t\t\t})}\r\n\t\t</Select>\r\n         </div>\r\n         <div className='dubbleRowInputs__item'>\r\n         <h3 className='inputFieldLabel'>\r\n                City\r\n            </h3>\r\n         <Select\r\n\t\t\tshowSearch\r\n\t\t\tstyle={{ width: '100%' }}\r\n\t\t\tplaceholder='Select a city'\r\n\t\t\toptionFilterProp='children'\r\n\t\t\tdefaultValue={customer && customer.city}\r\n\t\t\tonChange={onChangeCity}\r\n\t\t\tfilterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n\t\t>\r\n\t\t\t{cityListState.done &&\r\n\t\t\t\tcityListState.data.length > 0 &&\r\n\t\t\t\tcityOptions.map((option) => {\r\n\t\t\t\t\treturn <Option value={option.value}>{option.name}</Option>;\r\n\t\t\t\t})}\r\n\t\t</Select>\r\n         </div>\r\n\r\n            </div>\r\n\r\n            <div style={{\r\n                marginTop: '12px'\r\n            }}></div>\r\n\r\n  </Modal>\r\n\t\t\t  \r\n\t\t\t</>\r\n\t\t  )}\r\n\t  </Formik>\r\n\t);\r\n};\r\n\r\n\r\nexport default QuickEdit;\r\n","import React, {useState, useEffect} from 'react';\r\nimport {withRouter} from 'react-router-dom';\r\nimport { Table, Badge, Menu, Dropdown, Space, Tag,Button, Input,Tooltip, Modal, notification, Popconfirm } from 'antd';\r\nimport { PlusOutlined, EditOutlined, DeleteOutlined,EditFilled,CheckCircleOutlined } from '@ant-design/icons';\r\n\r\n\r\n/// import hooks\r\nimport { useFetch, useHandleFetch } from \"../../hooks\";\r\n\r\n// import components\r\nimport { DataTableSkeleton } from \"../../components/Placeholders\";\r\nimport AddNewRegion from \"./AddNewRegion\";\r\nimport QuickEdit from \"./QuickEdit\";\r\nimport Empty from \"../../components/Empty\";\r\n\r\nconst { Column, ColumnGroup } = Table;\r\nconst { Search } = Input;\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t  message: message || 'Tag Created',\r\n\t  description: '',\r\n\t  icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n  };\r\n\r\n\r\n  const openErrorNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t  message: message || 'Something Went Wrong',\r\n\t  description: '',\r\n\t  icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n  };\r\n\r\n\r\n\r\n\r\n\r\ninterface myTableProps {\r\n  data: any; \r\n  setRegionList: any; \r\n} \r\n\r\n\r\nconst MyTable = ({data,setRegionList}: myTableProps) => {\r\n    const [visible,setvisible] = useState(false);   \r\n    const [activeCategoryForEdit,setactiveCategoryForEdit] = useState(false); \r\n    const [deleteRegionState, handleDeleteRegioFetch] = useHandleFetch({}, 'deleteRegion');\r\n\r\n\r\n      const handleDeleteRegion = async (id) => {\r\n        const deleteRegionRes = await handleDeleteRegioFetch({\r\n          urlOptions: {\r\n            placeHolders: {\r\n              id,\r\n            }\r\n            }\r\n          });\r\n\r\n            // @ts-ignore\r\n\t\t  if(deleteRegionRes && deleteRegionRes.status === 'ok'){\r\n\t\t\t  openSuccessNotification('Deleted Region'); \r\n\t\t\t  const newRegionList =  data.filter(item => item.id !== id);\r\n\t\t\t  setRegionList(newRegionList); \r\n\t\t  }\r\n\r\n      }\r\n      \r\n\r\n    return (\r\n        <>\r\n        <Table \r\n        // expandable={{\r\n        //     expandedRowRender: record => <p style={{ margin: 0 }}>{record.name}</p>,\r\n        //     rowExpandable: record => record.name !== 'Not Expandable',\r\n        //   }}\r\n        // bordered={true}\r\n        size='small'\r\n        // pagination={false}\r\n        dataSource={data}\r\n        >\r\n         \r\n          <Column\r\n           title=\"Name\" \r\n           dataIndex=\"name\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n         \r\n            />\r\n\r\n\r\n<Column\r\n           title=\"Pick up Location\" \r\n           dataIndex=\"pickUpLocation\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n         \r\n            />\r\n\r\n\r\n\r\n\r\n<Column\r\n           title=\"Country\" \r\n           dataIndex=\"countryName\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n         \r\n            />\r\n\r\n\r\n<Column\r\n           title=\"City\" \r\n           dataIndex=\"city\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n         \r\n            />\r\n\r\n<Column\r\n           title=\"Time\" \r\n           dataIndex=\"time\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n         \r\n            />\r\n\r\n\r\n<Column\r\n           title=\"Charge\" \r\n           dataIndex=\"time\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n         \r\n            />\r\n\r\n\r\n          {/* <Column \r\n          \r\n          className='classnameofthecolumn'\r\n\r\n          title=\"Product\" dataIndex=\"product\" key=\"product\" /> */}\r\n\r\n          {/* <Column \r\n          \r\n          className='classnameofthecolumn'\r\n\r\n          title=\"Sub Category\" dataIndex=\"subCategory\" key=\"subCategory\" /> */}\r\n        \r\n        {/* <Column\r\n          title=\"Tags\"\r\n          dataIndex=\"tags\"\r\n          key=\"tags\"\r\n          render={tags => (\r\n            <>\r\n              {tags.map((tag : any) => (\r\n                <Tag color=\"blue\" key={tag}>\r\n                  {tag}\r\n                </Tag>\r\n              ))}\r\n            </>\r\n          )}\r\n        /> */}\r\n        <Column\r\n        \r\n        className='classnameofthecolumn'\r\n          title=\"\"\r\n          key=\"action\"\r\n          align='right'\r\n          render={(text, record : any) => (\r\n            <Space size=\"middle\">\r\n            \r\n               <Tooltip placement=\"top\" title='Quick Edit Region'>\r\n              <span className='iconSize' onClick={() => {\r\n                setvisible(true)\r\n                setactiveCategoryForEdit(record); \r\n              }}> \r\n              <EditOutlined />\r\n            \r\n              </span>\r\n               </Tooltip>\r\n\r\n\r\n\r\n   \r\n               <Popconfirm \r\n               \r\n               onConfirm={() => handleDeleteRegion(record.id)}\r\n               title=\"Are you sure？\" okText=\"Yes\" cancelText=\"No\">\r\n           \r\n           <span \r\n             className='iconSize iconSize-danger'\r\n             > \r\n             <DeleteOutlined/>\r\n            </span>\r\n       \r\n           </Popconfirm>\r\n\r\n\r\n             \r\n             \r\n            </Space>\r\n          )}\r\n        />\r\n      </Table>\r\n\r\n    \r\n\r\n    {activeCategoryForEdit &&   <QuickEdit \r\n    setvisible={setvisible}\r\n    visible={visible}\r\n    customer={activeCategoryForEdit}\r\n    regionList={data}\r\n    setRegionList={setRegionList}\r\n\r\n    />\r\n\r\n    }\r\n    \r\n    \r\n    </>\r\n    )\r\n}\r\n\r\n\r\ninterface Props {\r\n    history: any; \r\n}\r\n\r\nconst CustomerList = ({history}: Props) => {\r\n\r\n    const [regionList,setRegionList] = useState([]); \r\n\r\n    const [regionState, handleRegionListFetch] = useHandleFetch({}, 'regionList');\r\n  \r\n  \r\n    useEffect(()=>{\r\n     const setRegions = async () => {\r\n       const regions = await handleRegionListFetch({}); \r\n       // @ts-ignore\r\n       setRegionList(regions); \r\n     }\r\n     setRegions(); \r\n    },[])\r\n\r\n\r\n\r\n\r\n  \r\n  const [addNewCategoryVisible,setAddNewCategoryVisible] = useState(false);   \r\n\r\n  console.log('regionState',regionState)\r\n\r\n\r\n  const handleSearch = (value) => {\r\n    if(regionState.data.length > 0 ){\r\n      const newTagList = regionState.data.filter(item => item.name.includes(value)); \r\n      setRegionList(newTagList); \r\n    }\r\n     \r\n  }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\treturn (\r\n\t\t<>\r\n    {/* <h2 className='containerPageTitle'>\r\n      Categories\r\n    </h2> */}\r\n    <div className='categoryListContainer'>\r\n            <div className='categoryListContainer__header'>\r\n           \r\n\r\n          <div className='categoryListContainer__header-searchBar'>\r\n          <h2 className='categoryListContainer__header-title'>\r\n            Regions \r\n            </h2>\r\n\r\n\r\n          <Search\r\n            enterButton={false}\r\n            className='searchbarClassName'\r\n          placeholder=\"search regions..\"\r\n          onSearch={value => handleSearch(value)}\r\n          // style={{ width: 300 }}\r\n        />\r\n          </div>\r\n            <Button\r\n          // type=\"primary\"\r\n          className='btnPrimaryClassNameoutline'\r\n          icon={<PlusOutlined />}\r\n          onClick={() => setAddNewCategoryVisible(true)}\r\n        >\r\n        Add New\r\n            \r\n            </Button>\r\n            </div>\r\n\r\n            <div className='categoryListContainer__afterHeader'>\r\n            {/* <Search\r\n      placeholder=\"search categories..\"\r\n      size=\"large\"\r\n      onSearch={value => console.log(value)}\r\n      style={{ width: 300 }}\r\n    /> */}\r\n            </div>\r\n\r\n     \r\n\t\t\t\r\n\t\t\t<div className='categoryListContainer__categoryList'>\r\n        {regionState.done && regionList.length > 0 && <MyTable \r\n        setRegionList={setRegionList}\r\n        data={regionList} />}\r\n        {regionState.isLoading && <DataTableSkeleton />}\r\n\r\n        {regionState.done && !(regionList.length > 0) && (\r\n\t\t<Empty title='No Region found'  />\r\n\t\t)}\r\n        \r\n\t\t\t</div>\r\n\t\t</div>\r\n\r\n\r\n{regionState.done && \r\n    <AddNewRegion \r\n          addNewCategoryVisible={addNewCategoryVisible} \r\n          setAddNewCategoryVisible={setAddNewCategoryVisible}\r\n          regionList={regionState.data}\r\n          setRegionList={setRegionList}\r\n           />}\r\n\r\n      \r\n\r\n        \r\n    </>\r\n\t);\r\n};\r\n\r\nexport default withRouter(CustomerList);\r\n","import React, { useState } from 'react';\r\nimport { BrowserRouter as Router, Link, Switch, withRouter } from 'react-router-dom';\r\nimport { Layout, Menu, Upload, message } from 'antd';\r\n\r\n\r\nimport {\r\n\tPieChartOutlined,\r\n\tFileOutlined,\r\n\tTeamOutlined,\r\n\tTagOutlined,\r\n\tBranchesOutlined,\r\n\tGoldOutlined,\r\n\tFilterOutlined,\r\n\tTagsOutlined,\r\n\tCarOutlined,\r\n\tShoppingCartOutlined,\r\n\tMailOutlined,\r\n\tSettingOutlined,\r\n\tInboxOutlined\r\n} from '@ant-design/icons';\r\n\r\nconst { Header, Content, Footer, Sider } = Layout;\r\nconst { SubMenu } = Menu;\r\n\r\nconst SiderComponent = (props: any) => {\r\n\tconst [collapsed, setcollapsed] = useState(false);\r\n\tconst onCollapse = (collapsed: any) => {\r\n\t\tconsole.log(collapsed);\r\n\t\tsetcollapsed(collapsed);\r\n\t};\r\n\r\n\r\n\r\n\treturn (\r\n\t\t<Sider collapsible collapsed={collapsed} onCollapse={onCollapse} theme='light'>\r\n\t\t\t<div\r\n\t\t\t\tstyle={{\r\n\t\t\t\t\tmarginLeft: '22px',\r\n\t\t\t\t\tmarginRight: '20px',\r\n\t\t\t\t\tmarginTop: '8px',\r\n\t\t\t\t\twidth: '100%'\r\n\t\t\t\t}}\r\n\t\t\t>\r\n\r\n\t\t\t</div>\r\n\t\t\t<Menu selectable={true} mode='inline'>\r\n\t\t\t\t<Menu.Item key='1' icon={<PieChartOutlined />}>\r\n\t\t\t\t\t<Link to='/'>Dashboard</Link>\r\n\t\t\t\t</Menu.Item>\r\n\r\n\t\t\t\t{/* <SubMenu key='sub1' icon={<TagOutlined />} title='Category'>\r\n\t\t\t\t\t<Menu.Item key='2'>\r\n\t\t\t\t\t\t<Link to='/category'>List Categories</Link>\r\n\t\t\t\t\t</Menu.Item>\r\n\r\n\t\t\t\t</SubMenu> */}\r\n\r\n\t\t\t\t{/* <SubMenu key='sub2' icon={<BranchesOutlined />} title='Brand'>\r\n\r\n\t\t\t\t\t<Menu.Item key='5'>\r\n\t\t\t\t\t\t<Link to='/brand'>List Brand</Link>\r\n\t\t\t\t\t</Menu.Item>\r\n\t\t\t\t</SubMenu> */}\r\n\r\n\t\t\t\t<SubMenu\r\n\t\t\t\t\tkey='sub3'\r\n\t\t\t\t\ticon={<GoldOutlined />}\r\n\t\t\t\t\ttitle='Product'\r\n\t\t\t\t\tonTitleClick={() => props.history.push('/product')}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Menu.Item key='6'>\r\n\t\t\t\t\t\t<Link to='/product'>List Products</Link>\r\n\t\t\t\t\t</Menu.Item>\r\n\r\n\r\n\r\n\r\n\t\t\t\t\t<Menu.Item key='9' icon={<TagsOutlined />}>\r\n\t\t\t\t\t\t<Link to='/tag'>Tags</Link>\r\n\r\n\t\t\t\t\t</Menu.Item>\r\n\r\n\t\t\t\t\t<SubMenu key='sub1' icon={<TagOutlined />} title='Category'>\r\n\t\t\t\t\t\t<Menu.Item key='2'>\r\n\t\t\t\t\t\t\t<Link to='/category'>List Categories</Link>\r\n\t\t\t\t\t\t</Menu.Item>\r\n\r\n\t\t\t\t\t</SubMenu>\r\n\r\n\r\n\t\t\t\t\t<SubMenu key='sub2' icon={<BranchesOutlined />} title='Brand'>\r\n\r\n\t\t\t\t\t\t<Menu.Item key='5'>\r\n\t\t\t\t\t\t\t<Link to='/brand'>List Brand</Link>\r\n\t\t\t\t\t\t</Menu.Item>\r\n\t\t\t\t\t</SubMenu>\r\n\r\n\r\n\t\t\t\t</SubMenu>\r\n\r\n\t\t\t\t{/* <Menu.Item key='9' icon={<TagsOutlined />}>\r\n\t\t\t\t\t<Link to='/tag'>Tags</Link>\r\n\t\t\t\t</Menu.Item> */}\r\n\r\n\t\t\t\t<Menu.Item key='10' icon={<CarOutlined />}>\r\n\t\t\t\t\t<Link to='/delivery'>Delivery</Link>\r\n\t\t\t\t</Menu.Item>\r\n\r\n\t\t\t\t<SubMenu key='sub4' icon={<ShoppingCartOutlined />} title='Orders'>\r\n\t\t\t\t\t<Menu.Item key='11'>\r\n\t\t\t\t\t\t<Link to='/order'>List Orders</Link>\r\n\t\t\t\t\t</Menu.Item>\r\n\t\t\t\t\t<Menu.Item key='12'>\r\n\t\t\t\t\t\t<Link to='/order/new'>Add Order</Link>\r\n\t\t\t\t\t</Menu.Item>\r\n\t\t\t\t</SubMenu>\r\n\r\n\t\t\t\t<Menu.Item key='13' icon={<TeamOutlined />}>\r\n\t\t\t\t\t<Link to='/customer'>Customer</Link>\r\n\t\t\t\t</Menu.Item>\r\n\r\n\t\t\t\t<SubMenu key='sub5' icon={<MailOutlined />} title='Email'>\r\n\t\t\t\t\t<Menu.Item key='14'>STMP Configuration</Menu.Item>\r\n\t\t\t\t\t<Menu.Item key='15'>Auto emails</Menu.Item>\r\n\t\t\t\t\t<Menu.Item key='16'>Compose Email</Menu.Item>\r\n\t\t\t\t\t<Menu.Item key='177'>Sent emails</Menu.Item>\r\n\t\t\t\t</SubMenu>\r\n\r\n\t\t\t\t<SubMenu key='sub6' icon={<FileOutlined />} title='Pages'>\r\n\t\t\t\t\t<Menu.Item key='17'>\r\n\t\t\t\t\t\t<Link to='/page/new'> Add new Page</Link>\r\n\t\t\t\t\t</Menu.Item>\r\n\t\t\t\t\t<Menu.Item key='18'>\r\n\t\t\t\t\t\t<Link to='/page'> List Pages</Link>\r\n\t\t\t\t\t</Menu.Item>\r\n\t\t\t\t</SubMenu>\r\n\r\n\t\t\t\t<SubMenu key='sub7' icon={<SettingOutlined />} title='Settings'>\r\n\t\t\t\t\t<Menu.Item key='19'>\r\n\t\t\t\t\t\t<Link to='/settings/siteInfo'>Site information</Link>\r\n\t\t\t\t\t</Menu.Item>\r\n\t\t\t\t\t<Menu.Item key='20'>\r\n\t\t\t\t\t\t<Link to='/settings/themes'>Manage themes</Link>\r\n\t\t\t\t\t</Menu.Item>\r\n\t\t\t\t\t{/* <Menu.Item key='21'>\r\n\t\t\t\t\t\t<Link to='/settings/image'>Image</Link>\r\n\t\t\t\t\t</Menu.Item> */}\r\n\t\t\t\t\t<Menu.Item key='22'>\r\n\t\t\t\t\t\t<Link to='/settings/invoice'>Invoice</Link>\r\n\t\t\t\t\t</Menu.Item>\r\n\t\t\t\t\t<Menu.Item key='23'>\r\n\t\t\t\t\t\t<Link to='/settings/components'>Components</Link>\r\n\t\t\t\t\t</Menu.Item>\r\n\t\t\t\t</SubMenu>\r\n\t\t\t</Menu>\r\n\t\t</Sider>\r\n\t);\r\n};\r\n\r\nexport default withRouter(SiderComponent);\r\n","import React from 'react';\n\n// import pages\nimport { Overview } from './pages/overview';\nimport { CategoryList, CategoryDetail } from './pages/category';\nimport { BrandList, AddNewBrand } from './pages/brand';\nimport { ProductList, AddNewProduct } from './pages/product';\nimport { TagList, AddNewTag } from './pages/tag';\nimport { CustomerList } from './pages/customer';\nimport { PagesList, AddNewPage } from './pages/pages';\nimport { AttributeList } from './pages/attribute';\nimport { OrderList, AddNewOrder } from './pages/order';\nimport { Component, ManageThemes, Image, Invoice, SiteInfo } from './pages/settings';\nimport { Delivery } from './pages/delivery';\nimport Login from './pages/auth/login';\n// import components\nimport Sider from './layout/Sider';\n\n// import third party ui libraries\nimport { Layout, notification } from 'antd';\nimport { BrowserRouter as Router, Switch, Route, Redirect } from 'react-router-dom';\nimport Title from 'antd/lib/typography/Title';\n\nimport { useHandleFetch } from \"./hooks\";\nimport {\n\tFileOutlined,\n\tInboxOutlined,\n\tRadiusUpleftOutlined,\n\tRadiusUprightOutlined,\n\tRadiusBottomleftOutlined,\n\tRadiusBottomrightOutlined,\n\tDeleteOutlined,\n\tFileAddOutlined,\n\tCheckCircleOutlined,\n\tLogoutOutlined\n} from '@ant-design/icons';\nimport { cursorTo } from 'readline';\nconst { Header, Content, Footer } = Layout;\n\n\nconst openSuccessNotification = (message?: any) => {\n\tnotification.success({\n\t\tmessage: message || 'Category Updated',\n\t\tdescription: '',\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\n\t});\n};\n\n\nconst openErrorNotification = (message?: any) => {\n\tnotification.success({\n\t\tmessage: message || 'Something Went Wrong',\n\t\tdescription: '',\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\n\t});\n};\n\n\n\n\n\nconst App = () => {\n\n\n\tconst [logoutState, handleLogoutFetch] = useHandleFetch({}, 'logout');\n\n\n\tconst handleLogout = async () => {\n\t\tconst logoutRes = await handleLogoutFetch({});\n\n\t\t//@ts-ignore\n\t\tif (logoutRes && logoutRes.status === 'ok') {\n\t\t\topenSuccessNotification('Loged out successfully');\n\n\t\t}\n\t\telse {\n\t\t\topenErrorNotification(\"Couldn't logout, Something went wrong\");\n\t\t}\n\n\t};\n\n\n\n\n\n\treturn (\n\t\t<Router>\n\t\t\t{/* <Switch>\n\t\t\t\t<Route path='/login' exact>\n\t\t\t\t\t<Login />\n\t\t\t\t</Route>\n\t\t\t</Switch> */}\n\t\t\t<Switch>\n\t\t\t\t<Layout style={{ minHeight: '100vh' }}>\n\t\t\t\t\t<Sider />\n\t\t\t\t\t<Layout className='site-layout'>\n\t\t\t\t\t\t<Header\n\t\t\t\t\t\t\tclassName='site-layout-background'\n\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\tbackground: '#fff',\n\t\t\t\t\t\t\t\tborderBottom: '1px solid #fafafa',\n\t\t\t\t\t\t\t\tborderLeft: '1px solid #fafafa',\n\t\t\t\t\t\t\t\theight: '50px',\n\t\t\t\t\t\t\t\tdisplay: 'flex',\n\t\t\t\t\t\t\t\tjustifyContent: 'space-between'\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<Title\n\t\t\t\t\t\t\t\tstyle={{ color: '#0072EA', marginTop: '10px', marginLeft: '-20px' }}\n\t\t\t\t\t\t\t\tlevel={4}>\n\t\t\t\t\t\t\t\tExpress Ticket\n\t\t\t\t          </Title>\n\n\n\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\tonClick={() => handleLogout()}\n\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\tmarginTop: '-8px',\n\t\t\t\t\t\t\t\t\tmarginRight: '-28px'\n\t\t\t\t\t\t\t\t}}>\n\n\t\t\t\t\t\t\t\t<span style={{\n\t\t\t\t\t\t\t\t\tmarginLeft: '10px',\n\t\t\t\t\t\t\t\t\tfontWeight: 600,\n\t\t\t\t\t\t\t\t\t// backgroundColor: 'rgba(28, 39, 152, 0.1)',\n\t\t\t\t\t\t\t\t\tborderRadius: '25px',\n\t\t\t\t\t\t\t\t\tcolor: '#1890ff',\n\t\t\t\t\t\t\t\t\tpadding: '2px 20px',\n\t\t\t\t\t\t\t\t\tcursor: 'pointer'\n\n\n\t\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t\t\t<LogoutOutlined />\n\t\t\t\t\t\t\t\t\t<span style={{\n\t\t\t\t\t\t\t\t\t\tmarginLeft: '10px',\n\n\t\t\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t\t\t\tlogout\n\t\t\t\t\t\t\t\t\t</span>\n\n\t\t\t\t\t\t\t\t</span>\n\n\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</Header>\n\t\t\t\t\t\t<Content\n\t\t\t\t\t\t\thasSider={true}\n\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\tbackgroundColor: '#Fff'\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<Switch>\n\t\t\t\t\t\t\t\t<Route\n\t\t\t\t\t\t\t\t\texact\n\t\t\t\t\t\t\t\t\tpath='/'\n\t\t\t\t\t\t\t\t\trender={() => <Redirect to='/product' />}\n\t\t\t\t\t\t\t\t/>\n\n\n\t\t\t\t\t\t\t\t<Route path='/' exact>\n\t\t\t\t\t\t\t\t\t<Overview />\n\t\t\t\t\t\t\t\t</Route>\n\t\t\t\t\t\t\t\t<Route path='/category' exact>\n\t\t\t\t\t\t\t\t\t<CategoryList />\n\t\t\t\t\t\t\t\t</Route>\n\t\t\t\t\t\t\t\t<Route path='/category/:name' exact>\n\t\t\t\t\t\t\t\t\t<CategoryDetail />\n\t\t\t\t\t\t\t\t</Route>\n\t\t\t\t\t\t\t\tCategoryDetail\n\t\t\t\t\t\t\t\t<Route path='/brand/new' exact>\n\t\t\t\t\t\t\t\t\t<AddNewBrand />\n\t\t\t\t\t\t\t\t</Route>\n\t\t\t\t\t\t\t\t<Route path='/brand' exact>\n\t\t\t\t\t\t\t\t\t<BrandList />\n\t\t\t\t\t\t\t\t</Route>\n\t\t\t\t\t\t\t\t<Route path='/product' exact>\n\t\t\t\t\t\t\t\t\t<ProductList />\n\t\t\t\t\t\t\t\t</Route>\n\t\t\t\t\t\t\t\t{/* <Route path='/product/new' exact>\n\t\t\t\t\t\t\t\t\t<AddNewProduct />\n\t\t\t\t\t\t\t\t</Route> */}\n\t\t\t\t\t\t\t\t<Route path='/tag' exact>\n\t\t\t\t\t\t\t\t\t<TagList />\n\t\t\t\t\t\t\t\t</Route>\n\t\t\t\t\t\t\t\t<Route path='/product/new' exact>\n\t\t\t\t\t\t\t\t\t<AddNewTag />\n\t\t\t\t\t\t\t\t</Route>\n\t\t\t\t\t\t\t\t<Route path='/attribute' exact>\n\t\t\t\t\t\t\t\t\t<AttributeList />\n\t\t\t\t\t\t\t\t</Route>\n\t\t\t\t\t\t\t\t<Route path='/order' exact>\n\t\t\t\t\t\t\t\t\t<OrderList />\n\t\t\t\t\t\t\t\t</Route>\n\t\t\t\t\t\t\t\t<Route path='/order/new' exact>\n\t\t\t\t\t\t\t\t\t<AddNewOrder />\n\t\t\t\t\t\t\t\t</Route>\n\t\t\t\t\t\t\t\t<Route path='/customer' exact>\n\t\t\t\t\t\t\t\t\t<CustomerList />\n\t\t\t\t\t\t\t\t</Route>\n\t\t\t\t\t\t\t\t<Route path='/page' exact>\n\t\t\t\t\t\t\t\t\t<PagesList />\n\t\t\t\t\t\t\t\t</Route>\n\t\t\t\t\t\t\t\t<Route path='/delivery' exact>\n\t\t\t\t\t\t\t\t\t<Delivery />\n\t\t\t\t\t\t\t\t</Route>\n\t\t\t\t\t\t\t\t<Route path='/page/new' exact>\n\t\t\t\t\t\t\t\t\t<AddNewPage />\n\t\t\t\t\t\t\t\t</Route>\n\t\t\t\t\t\t\t\t<Route path='/settings/components' exact>\n\t\t\t\t\t\t\t\t\t<Component />\n\t\t\t\t\t\t\t\t</Route>\n\t\t\t\t\t\t\t\t<Route path='/settings/image' exact>\n\t\t\t\t\t\t\t\t\t<Image />\n\t\t\t\t\t\t\t\t</Route>\n\t\t\t\t\t\t\t\t<Route path='/settings/themes' exact>\n\t\t\t\t\t\t\t\t\t<ManageThemes />\n\t\t\t\t\t\t\t\t</Route>\n\t\t\t\t\t\t\t\t<Route path='/settings/invoice' exact>\n\t\t\t\t\t\t\t\t\t<Invoice />\n\t\t\t\t\t\t\t\t</Route>\n\t\t\t\t\t\t\t\t<Route path='/settings/siteInfo' exact>\n\t\t\t\t\t\t\t\t\t<SiteInfo />\n\t\t\t\t\t\t\t\t</Route>\n\t\t\t\t\t\t\t</Switch>\n\t\t\t\t\t\t</Content>\n\t\t\t\t\t\t<Footer style={{ textAlign: 'center', background: '#fafafa', color: '#1890ff' }}>\n\t\t\t\t\t\t\t© 2020 The Alpha E-commerce Engine - Developed By Lotus Technology Development.\n\t\t\t\t\t\t</Footer>\n\t\t\t\t\t</Layout>\n\t\t\t\t</Layout>\n\t\t\t</Switch>\n\t\t</Router>\n\t);\n};\n\nexport default App;\n","export function actionShouldBlock( meta ) {\r\n    return !meta || !meta.async || !meta.blocking;\r\n}\r\n\r\nexport function actionFinished ( type ) {\r\n    return type.includes( \"_COMPLETED\" ) || type.includes( \"_FAILED\" );\r\n}\r\n","import * as utils from \"./utils\";\r\n\r\nconst busyReducer = ( state = 0, action ) => {\r\n    if ( utils.actionShouldBlock( action.meta ) ) {\r\n        return state;\r\n    }\r\n    if ( utils.actionFinished( action.type ) ) {\r\n        return state - 1;\r\n    }\r\n    return state + 1;\r\n};\r\n\r\nexport default busyReducer;\r\n","import reducer from \"./reducers\";\r\n\r\nexport default reducer;\r\n","export function productPositionInCart(cart, product) {\r\n  return cart.map(item => item.product.id).indexOf(product.id);\r\n}\r\n\r\nexport function newCartItem(product, quantity, isSelectedForCheckout) {\r\n  return {\r\n    product,\r\n    quantity,\r\n    isSelectedForCheckout,\r\n  };\r\n}\r\n","export default ( initialState ) => ( reducerMap ) => ( state = initialState, action ) => {\r\n    const reducer = reducerMap[ action.type ];\r\n    return reducer ? reducer( state, action ) : state;\r\n};\r\n","import isomorphicFetch from 'isomorphic-fetch';\r\n\r\nexport default (url, method, body) => {\r\n\tconst options = {\r\n\t\tmethod,\r\n\t\theaders: requestHeaders(),\r\n\t\tbody: method !== 'GET' ? JSON.stringify(body) : null\r\n\t};\r\n\r\n\treturn isomorphicFetch(url, options).then(res =>\r\n\t\tparseStatus(res.status, res.json())\r\n\t);\r\n};\r\n\r\nfunction parseStatus(status, res) {\r\n\treturn new Promise((resolve, reject) => {\r\n\t\tif (status >= 200 && status < 300) {\r\n\t\t\tres.then(response => resolve(response));\r\n\t\t} else {\r\n\t\t\tres.then(response => reject({ status, response }));\r\n\t\t}\r\n\t});\r\n}\r\n\r\nfunction requestHeaders() {\r\n\treturn {\r\n\t\tAccept: 'application/json',\r\n\t\t'Content-Type': 'application/json'\r\n\t};\r\n}\r\n","export function getCartItemQuantity(cart, id) {\r\n  return cart.find((item) => item.product.id === id).quantity;\r\n}\r\n\r\nexport const getTotalPriceOfCartItems = (cartItems) => {\r\n  if (!cartItems.length > 0) {\r\n    return 0;\r\n  }\r\n\r\n  const prices = cartItems.map((cartItem) => {\r\n    return cartItem.quantity * parseInt(cartItem.product['price']) || 0;\r\n  });\r\n\r\n  const totalPrice = prices.reduce((a, b) => {\r\n    return a + b;\r\n  }, 0);\r\n  return totalPrice;\r\n};\r\n","import reducer from \"./reducers\";\r\n\r\nimport * as cartOperations from \"./operations\";\r\nimport * as cartSelectors from \"./selectors\";\r\n\r\nexport {\r\n    cartOperations,\r\n    cartSelectors,\r\n};\r\n\r\nexport default reducer;\r\n","import * as types from './types';\r\nimport * as utils from './utils';\r\nimport { createReducer } from '../../utils';\r\n\r\n/* State shape\r\n[\r\n    {\r\n        product,\r\n        quantity,\r\n    }\r\n]\r\n*/\r\n\r\nconst initialState = [];\r\n\r\nconst cartReducer = createReducer(initialState)({\r\n  [types.TOGGLE]: (state, action) => {\r\n    const { product, quantity, isSelectedForCheckout } = action.payload;\r\n    const index = utils.productPositionInCart(state, product);\r\n    if (index === -1) {\r\n      return [\r\n        utils.newCartItem(product, quantity, isSelectedForCheckout),\r\n        ...state,\r\n      ];\r\n    }\r\n\r\n    const tempArrayWithOutOldProduct = state.filter(\r\n      (item) => item.product.id !== product.id\r\n    );\r\n\r\n    return tempArrayWithOutOldProduct;\r\n  },\r\n\r\n  [types.ADD_PRODUCTS_TO_CART]: (state, action) => {\r\n    const { cartItems } = action.payload;\r\n\r\n    if (cartItems.length > 0) {\r\n      return cartItems;\r\n    } else {\r\n      return [...state];\r\n    }\r\n  },\r\n\r\n  [types.SELECT_PRODUCT_FOR_CHECKOUT]: (state, action) => {\r\n    const { product } = action.payload;\r\n\r\n    const index = utils.productPositionInCart(state, product.product);\r\n    if (index === -1) {\r\n      return [...state, { ...product, isSelectedForCheckout: true }];\r\n    } else if (index !== -1 && !product.isSelectedForCheckout) {\r\n      const tempArrayWithOutOldProduct = state.filter(\r\n        (item) => item.product.id !== product.product.id\r\n      );\r\n\r\n      return [\r\n        ...tempArrayWithOutOldProduct,\r\n        { ...product, isSelectedForCheckout: true },\r\n      ];\r\n    }\r\n\r\n    const tempArrayWithOutOldProduct = state.filter(\r\n      (item) => item.product.id !== product.product.id\r\n    );\r\n\r\n    return [\r\n      ...tempArrayWithOutOldProduct,\r\n      { ...product, isSelectedForCheckout: false },\r\n    ];\r\n  },\r\n\r\n  [types.CHANGE_QUANTITY]: (state, action) => {\r\n    const { product, quantity } = action.payload;\r\n    const index = utils.productPositionInCart(state, product);\r\n\r\n    const updatedItem = Object.assign({}, state[index], { quantity });\r\n    return [...state.slice(0, index), updatedItem, ...state.slice(index + 1)];\r\n  },\r\n  [types.REMOVE]: (state, action) => {\r\n    const { product } = action.payload;\r\n    const index = utils.productPositionInCart(state, product);\r\n    return [...state.slice(0, index), ...state.slice(index + 1)];\r\n  },\r\n  [types.CLEAR]: () => [],\r\n});\r\n\r\nexport default cartReducer;\r\n","export const SET_CART = 'cart/SET';\r\nexport const TOGGLE = 'cart/TOGGLE';\r\nexport const ADD_PRODUCTS_TO_CART = 'cart/ADD_PRODUCTS_TO_CART';\r\nexport const SELECT_PRODUCT_FOR_CHECKOUT = 'wishList/SELECT_PRODUCT_FOR_CHECKOUT';\r\nexport const CHANGE_QUANTITY = 'cart/CHANGE_QUANTITY';\r\nexport const REMOVE = 'cart/REMOVE';\r\nexport const CLEAR = 'cart/CLEAR';\r\n","export function productPositionInWishList(wishList, productId) {\r\n  return wishList.map(item => item).indexOf(productId);\r\n}\r\n","import reducer from './reducers';\r\n\r\nimport * as wishListOperations from './operations';\r\nimport * as wishListSelectors from './selectors';\r\n\r\nexport { wishListOperations, wishListSelectors };\r\n\r\nexport default reducer;\r\n","import * as types from './types';\r\nimport * as utils from './utils';\r\nimport { createReducer } from '../../utils';\r\n\r\n/* State shape\r\n[\r\n    {\r\n        product\r\n    }\r\n]\r\n*/\r\n\r\nconst initialState = [];\r\n\r\nconst wishListReducer = createReducer(initialState)({\r\n  [types.TOGGLE]: (state, action) => {\r\n    const { productId } = action.payload;\r\n\r\n    const index = utils.productPositionInWishList(state, productId);\r\n    if (index === -1) {\r\n      return [...state, productId];\r\n    }\r\n\r\n    const tempArrayWithOutOldProduct = state.filter(\r\n      (item) => item !== productId\r\n    );\r\n\r\n    return tempArrayWithOutOldProduct;\r\n  },\r\n  [types.ADD_WISHLIST]: (state, action) => {\r\n    const wishlist = action.payload;\r\n    return [...wishlist];\r\n  },\r\n\r\n  [types.REMOVE]: (state, action) => {\r\n    const { productId } = action.payload;\r\n    const index = utils.productPositionInWishList(state, productId);\r\n    return [...state.slice(0, index), ...state.slice(index + 1)];\r\n  },\r\n  [types.CLEAR]: () => [],\r\n});\r\n\r\nexport default wishListReducer;\r\n","export const TOGGLE = 'wishList/TOGGLE';\r\nexport const ADD_WISHLIST = 'wishList/ADD_WISHLIST';\r\nexport const REMOVE = 'wishList/REMOVE';\r\nexport const CLEAR = 'wishList/CLEAR';\r\n","export function getCartItemQuantity( cart, id ) {\r\n    return cart.find( item => item.product.id === id ).quantity;\r\n}\r\n\r\n\r\nexport const getTotalPriceOfCartItems = (cartItems) => {\r\n    if(!cartItems.length > 0){\r\n        return 0; \r\n    }\r\n\r\n    return cartItems.reduce((a,b) => {\r\n        return !(b.quantity > 1) && a + +b.product.price || +b.product.price * b.quantity\r\n    },0); \r\n\r\n}","import reducer from './reducers';\r\n\r\nimport * as checkoutOperations from './operations';\r\nimport * as checkoutSelectors from './selectors';\r\n\r\nexport { checkoutOperations, checkoutSelectors };\r\n\r\nexport default reducer;\r\n","import * as types from './types';\r\nimport * as utils from './utils';\r\nimport { createReducer } from '../../utils';\r\n\r\n/* State shape\r\n[\r\n    {\r\n        product,\r\n        quantity,\r\n    }\r\n]\r\n*/\r\n\r\nconst initialState = [];\r\n\r\nconst checkoutReducer = createReducer(initialState)({\r\n  [types.ADD_PRODUCTS_TO_CHECKOUT]: (state, action) => {\r\n    const { products } = action.payload;\r\n\r\n    if (products.length > 0) {\r\n      const uniqueProductsOfCheckout = products.filter(function(product) {\r\n        return state.indexOf(product) == -1;\r\n      });\r\n      return uniqueProductsOfCheckout;\r\n    } else {\r\n      return [...state];\r\n    }\r\n  },\r\n  [types.REMOVE]: (state, action) => {\r\n    const { product } = action.payload;\r\n    const index = utils.productPositionInCart(state, product);\r\n    return [...state.slice(0, index), ...state.slice(index + 1)];\r\n  },\r\n  [types.CLEAR]: () => [],\r\n});\r\n\r\nexport default checkoutReducer;\r\n","export const SET_CART = 'checkout/SET';\r\nexport const TOGGLE = 'checkout/TOGGLE';\r\nexport const ADD_PRODUCTS_TO_CHECKOUT = 'checkout/ADD_PRODUCTS_TO_CHECKOUT';\r\nexport const CHANGE_QUANTITY = 'checkout/CHANGE_QUANTITY';\r\nexport const REMOVE = 'checkout/REMOVE';\r\nexport const CLEAR = 'checkout/CLEAR';\r\n","export function productPositionInCart( cart, product ) {\r\n    return cart.map( item => item.product.id ).indexOf( product.id );\r\n}\r\n\r\nexport function newCartItem( product, quantity ) {\r\n    return {\r\n        product,\r\n        quantity,\r\n    };\r\n}\r\n","export const ADD = 'serach/ADD';\r\nexport const UPDATE = 'serach/UPDATE';\r\nexport const REMOVE = 'serach/REMOVE';\r\nexport const CLEAR = 'serach/CLEAR';\r\n","export function queryPositionInQueryList(queryList, query) {\r\n  return queryList.map(item => item.key).indexOf(query.key);\r\n}\r\n\r\nexport function newQueryItem(query) {\r\n  return query;\r\n}\r\n","import reducer from './reducers';\r\n\r\nimport * as queryOperations from './operations';\r\nimport * as querySelectors from './selectors';\r\n\r\nexport { queryOperations, querySelectors };\r\n\r\nexport default reducer;\r\n","import * as types from './types';\r\nimport * as utils from './utils';\r\nimport { createReducer } from '../../utils';\r\n\r\n/* State shape\r\n[\r\n    {\r\n       id: uniqueId,\r\n       key: 'searchQuery',\r\n       value: string | product => {name,id,image}\r\n       created: Date,\r\n       lastUpdated: Date\r\n    }\r\n]\r\n*/\r\n\r\nconst initialState = [];\r\n\r\nconst searyQueryReducer = createReducer(initialState)({\r\n  [types.ADD]: (state, action) => {\r\n    const { query } = action.payload;\r\n    const index = utils.queryPositionInQueryList(state, query);\r\n    if (index === -1) {\r\n      return [utils.newQueryItem(query), ...state];\r\n    }\r\n\r\n    const currentItem = state[index];\r\n    const updatedItem = Object.assign({}, currentItem);\r\n    return [...state.slice(0, index), updatedItem, ...state.slice(index + 1)];\r\n  },\r\n  [types.UPDATE]: (state, action) => {\r\n    const { query } = action.payload;\r\n    const oldQuery = state.find(item => item.key !== query.key);\r\n    const tempArrayWithOutOldQueries = state.filter(item => item.key !== query.key);\r\n    return [...tempArrayWithOutOldQueries, { ...oldQuery, ...query }];\r\n  },\r\n  [types.REMOVE]: (state, action) => {\r\n    const { product } = action.payload;\r\n    const index = utils.queryPositionInQueryList(state, product);\r\n    return [...state.slice(0, index), ...state.slice(index + 1)];\r\n  },\r\n  [types.CLEAR]: () => [],\r\n});\r\n\r\nexport default searyQueryReducer;\r\n","import { combineReducers } from \"redux\";\r\nimport * as types from \"./types\";\r\nimport { createReducer } from \"../../utils\";\r\n\r\n/* State shape\r\n{\r\n    details: product,\r\n    list: [ product ],\r\n}\r\n*/\r\n\r\nconst detailsReducer = createReducer( null )( {\r\n    [ types.FETCH_DETAILS_COMPLETED ]: ( state, action ) => action.payload.product,\r\n} );\r\n\r\nconst listReducer = createReducer( [ ] )( {\r\n    [ types.FETCH_LIST_COMPLETED ]: ( state, action ) => action.payload.products,\r\n} );\r\n\r\nexport default combineReducers( {\r\n    details: detailsReducer,\r\n    list: listReducer,\r\n} );\r\n","export const FETCH_DETAILS = \"product/FETCH_DETAILS\";\r\nexport const FETCH_DETAILS_COMPLETED = \"product/FETCH_DETAILS_COMPLETED\";\r\nexport const FETCH_DETAILS_FAILED = \"product/FETCH_DETAILS_FAILED\";\r\n\r\nexport const FETCH_LIST = \"product/FETCH_LIST\";\r\nexport const FETCH_LIST_COMPLETED = \"product/FETCH_LIST_COMPLETED\";\r\nexport const FETCH_LIST_FAILED = \"product/FETCH_LIST_FAILED\";\r\n","import reducer from \"./reducers\";\r\n\r\nimport * as productOperations from \"./operations\";\r\n\r\nexport {\r\n    productOperations,\r\n};\r\n\r\nexport default reducer;\r\n","import { combineReducers } from 'redux';\r\nimport * as types from './types';\r\nimport { createReducer } from '../../utils';\r\n\r\n/* State shape\r\n{\r\n    isAuthenticated: bool,\r\n    redirectAfterLogin: string\r\n}\r\n*/\r\n\r\nconst authReducer = createReducer(false)({\r\n  [types.LOGIN]: () => true,\r\n  [types.LOGOUT]: () => false,\r\n});\r\n\r\nconst redirectAfterLoginReducer = createReducer(null)({\r\n  [types.SET_REDIRECT_AFTER_LOGIN]: (state, action) => action.payload.redirectUrl,\r\n});\r\n\r\nexport default combineReducers({\r\n  isAuthenticated: authReducer,\r\n  redirectAfterLogin: redirectAfterLoginReducer,\r\n});\r\n","export const LOGIN = \"session/LOGIN\";\r\nexport const LOGIN_COMPLETED = \"session/LOGIN_COMPLETED\";\r\nexport const LOGIN_FAILED = \"session/LOGIN_FAILED\";\r\nexport const LOGOUT = \"session/LOGOUT\";\r\nexport const INITIALIZE = \"session/INITIALIZE_SESSION\";\r\nexport const SET_REDIRECT_AFTER_LOGIN = \"session/SET_REDIRECT_AFTER_LOGIN\";\r\nexport const ADD_CUSTOMER_DATA = \"session/ADD_CUSTOMER_DATA\";\r\n","import reducer from \"./reducers\";\r\n\r\nimport * as sessionOperations from \"./operations\";\r\n\r\nexport {\r\n    sessionOperations,\r\n};\r\n\r\nexport default reducer;\r\n","import * as types from './types';\r\nimport { createReducer } from '../../utils';\r\n\r\nconst initialState = [];\r\n\r\nconst cartReducer = createReducer(initialState)({\r\n  [types.ADD_CATEGORIES]: (state, action) => {\r\n    const { categories } = action.payload;\r\n\r\n    if (categories) {\r\n      return categories;\r\n    }\r\n\r\n    return [...state];\r\n  },\r\n\r\n  [types.GET_CATEGORIES]: (state, action) => {\r\n    return [...state];\r\n  },\r\n});\r\n\r\nexport default cartReducer;\r\n","export const ADD_CATEGORIES = 'category/ADD_CATEGORIES';\r\nexport const GET_CATEGORIES = 'category/GET_CATEGORIES';\r\n","import reducer from './reducers';\r\n\r\nimport * as categoryOperations from './operations';\r\nimport * as categorySelectors from './selectors';\r\n\r\nexport { categoryOperations, categorySelectors };\r\n\r\nexport default reducer;\r\n","import * as types from './types';\r\nimport { createReducer } from '../../utils';\r\n\r\nconst initialState = {};\r\n\r\nconst cartReducer = createReducer(initialState)({\r\n  [types.ADD_ITEM_TO_CACHE]: (state, action) => {\r\n    const { response } = action.payload;\r\n\r\n    if (response) {\r\n      return { ...state, ...response };\r\n    }\r\n\r\n    return { ...state };\r\n  },\r\n});\r\n\r\nexport default cartReducer;\r\n","export const ADD_ITEM_TO_CACHE = 'category/ADD_ITEM_TO_CACHE';\r\n","import reducer from './reducers';\r\n\r\nimport * as cacheOperations from './operations';\r\nimport * as cacheSelectors from './selectors';\r\n\r\nexport { cacheOperations, cacheSelectors };\r\n\r\nexport default reducer;\r\n","import * as types from './types';\r\nimport { createReducer } from '../../utils';\r\n\r\nconst initialState = [];\r\n\r\nconst cartReducer = createReducer(initialState)({\r\n  [types.ADD_BRAND]: (state, action) => {\r\n    const { brands } = action.payload;\r\n\r\n    if (brands) {\r\n      return brands;\r\n    }\r\n\r\n    return [...state];\r\n  },\r\n\r\n  [types.GET_BRAND]: (state, action) => {\r\n    return [...state];\r\n  },\r\n});\r\n\r\nexport default cartReducer;\r\n","export const ADD_BRAND = 'category/ADD_BRAND';\r\nexport const GET_BRAND = 'category/GET_BRAND';\r\n","import reducer from './reducers';\r\n\r\nimport * as brandOperations from './operations';\r\nimport * as brandSelectors from './selectors';\r\n\r\nexport { brandOperations, brandSelectors };\r\n\r\nexport default reducer;\r\n","import * as types from './types';\r\nimport { createReducer } from '../../utils';\r\n\r\nconst initialState = [];\r\n\r\nconst cartReducer = createReducer(initialState)({\r\n  [types.ADD_TAGS]: (state, action) => {\r\n    const { tags } = action.payload;\r\n\r\n    if (tags) {\r\n      return tags;\r\n    }\r\n\r\n    return [...state];\r\n  },\r\n\r\n  [types.GET_TAGS]: (state, action) => {\r\n    return [...state];\r\n  },\r\n});\r\n\r\nexport default cartReducer;\r\n","export const ADD_TAGS = 'tag/ADD_TAGS';\r\nexport const GET_TAGS = 'tag/GET_TAGS';\r\n","import reducer from './reducers';\r\n\r\nimport * as tagOperations from './operations';\r\nimport * as tagSelectors from './selectors';\r\n\r\nexport { tagOperations, tagSelectors };\r\n\r\nexport default reducer;\r\n","import { fetch } from \"../utils\";\r\n\r\nconst baseUrl = typeof document === \"undefined\" ? \"http://localhost:7777/api\" : \"/api\";\r\n\r\nconst apiService = ( ) => ( next ) => ( action ) => {\r\n    const result = next( action );\r\n    if ( !action.meta || !action.meta.async ) {\r\n        return result;\r\n    }\r\n\r\n    const { path, method = \"GET\", body } = action.meta;\r\n\r\n    if ( !path ) {\r\n        throw new Error( `'path' not specified for async action ${ action.type }` );\r\n    }\r\n\r\n    const url = `${ baseUrl }${ path }`;\r\n\r\n    return fetch( url, method, body ).then(\r\n        res => handleResponse( res, action, next ),\r\n        err => handleErrors( err, action, next ),\r\n    );\r\n};\r\n\r\nexport default apiService;\r\n\r\nfunction handleErrors( err, action, next ) {\r\n    next( {\r\n        type: `${ action.type }_FAILED`,\r\n        payload: err,\r\n        meta: action.meta,\r\n    } );\r\n\r\n    return Promise.reject( err );\r\n}\r\n\r\nfunction handleResponse( res, action, next ) {\r\n    next( {\r\n        type: `${ action.type }_COMPLETED`,\r\n        payload: res,\r\n        meta: action.meta,\r\n    } );\r\n\r\n    return res;\r\n}\r\n","const REGULAR = [\r\n    \"background: blue\",\r\n    \"color: white\",\r\n].join( \";\" );\r\n\r\nconst SUCCESS = [\r\n    \"background: green\",\r\n    \"color: white\",\r\n].join( \";\" );\r\n\r\nconst STARTED = [\r\n    \"background: darkorange\",\r\n    \"color: white\",\r\n].join( \";\" );\r\n\r\nconst FAILURE = [\r\n    \"background: red\",\r\n    \"color: white\",\r\n].join( \";\" );\r\n\r\nconst createLogger = ( active = true ) => ( store ) => ( next ) => ( action ) => {\r\n    if ( !active ) {\r\n        return next( action );\r\n    }\r\n\r\n    const prevState = store.getState( );\r\n    const result = next( action );\r\n    const nextState = store.getState( );\r\n    logGroupCollapsed( `%c ${ action.type } `, determineStyle( action ) );\r\n    logInfo( \"%cprev state\", \"color: darkorange\", prevState );\r\n    logInfo( \"%caction payload\", \"color: blue\", action.payload );\r\n    logInfo( \"%cnext state\", \"color: darkgreen\", nextState );\r\n    logGroupEnd( );\r\n    return result;\r\n};\r\n\r\nexport default createLogger;\r\n\r\nfunction logGroupCollapsed( ...args ) {\r\n    const logFunction = typeof console.groupCollapsed === \"function\" ? console.groupCollapsed : console.info;\r\n    logFunction( ...args );\r\n}\r\n\r\nfunction logGroupEnd( ...args ) {\r\n    const logFunction = typeof console.groupEnd === \"function\" ? console.groupEnd : console.info;\r\n    logFunction( ...args );\r\n}\r\n\r\nfunction logInfo( ...args ) {\r\n    console.info( ...args );\r\n}\r\n\r\nfunction determineStyle( action ) {\r\n    if ( !action.meta || !action.meta.async ) {\r\n        return REGULAR;\r\n    }\r\n\r\n    if ( action.type.indexOf( \"_COMPLETED\" ) > -1 ) {\r\n        return SUCCESS;\r\n    }\r\n\r\n    if ( action.type.indexOf( \"_FAILED\" ) > -1 ) {\r\n        return FAILURE;\r\n    }\r\n\r\n    return STARTED;\r\n}\r\n","import { createStore, applyMiddleware, combineReducers, compose } from 'redux';\r\nimport { persistStore, persistReducer } from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\nimport * as reducers from './ducks';\r\nimport { apiService } from './middlewares';\r\n\r\nconst rootReducer = combineReducers(reducers);\r\n\r\nconst persistConfig = {\r\n  key: 'shop',\r\n  storage: storage,\r\n  whitelist: ['session'], // which reducer want to store\r\n};\r\n\r\nconst pReducer = persistReducer(persistConfig, rootReducer);\r\n\r\nfunction configureStore(initialState) {\r\n  return createStore(\r\n    pReducer,\r\n    initialState,\r\n    compose(\r\n      applyMiddleware(apiService),\r\n      window.__REDUX_DEVTOOLS_EXTENSION__\r\n        ? window.__REDUX_DEVTOOLS_EXTENSION__()\r\n        : (f) => f\r\n    )\r\n  );\r\n}\r\n\r\nconst store = configureStore({});\r\n\r\nconst persistor = persistStore(store);\r\n\r\nexport { persistor, store };\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider as ReduxProvider } from 'react-redux';\nimport App from './App';\n\n// import redux store\nimport { store } from './state/store';\n\n// import the main files of styles\nimport './styles/_main.scss';\n\n\n// importing react hot loader for hot loading\nimport { AppContainer } from 'react-hot-loader';\n\n\n\n\n// Wrap the rendering in a function:\nconst render = () => {\n\tReactDOM.render(\n\t\t<ReduxProvider store={store}>\n\t\t\t<AppContainer>\n\t\t\t\t<App />\n\t\t\t</AppContainer>\n\t\t</ReduxProvider>,\n\t\tdocument.getElementById('root')\n\t);\n};\n\n\n// Render once\nrender();\n\n\n\n// Webpack Hot Module Replacement API\nif (module['hot']) {\n\tmodule['hot'].accept('./App', () => {\n\t\trender();\n\t});\n}\n\n\n/*\nimport React from 'react';\n\n// import third party ui lib\nimport { Upload, message } from 'antd';\n\nimport { FileOutlined, InboxOutlined } from '@ant-design/icons';\nimport ReactQuill from 'react-quill';\nimport 'react-quill/dist/quill.snow.css';\n\n// import components\nimport Input from '../../components/Field/Input';\n\nconst { Dragger } = Upload;\n\nconst props = {\n\tname: 'file',\n\tmultiple: true,\n\taction: 'https://www.mocky.io/v2/5cc8019d300000980a055e76',\n\tonChange(info: any) {\n\t\tconst { status } = info.file;\n\t\tif (status !== 'uploading') {\n\t\t\tconsole.log(info.file, info.fileList);\n\t\t}\n\t\tif (status === 'done') {\n\t\t\tmessage.success(`${info.file.name} file uploaded successfully.`);\n\t\t} else if (status === 'error') {\n\t\t\tmessage.error(`${info.file.name} file upload failed.`);\n\t\t}\n\t}\n};\n\ninterface Props {}\n\nconst AddNewProduct = ({  }: Props) => {\n\treturn (\n\t\t<div className='site-layout-background' style={{ padding: 60, minHeight: 360 }}>\n\t\t\t<div className='addproductSectionTitleContainer'>\n\t\t\t\t<h2 className='addprouctSectionTitle'>Add Product</h2>\n\t\t\t</div>\n\t\t\t<div className='addproductSectionContainer'>\n\t\t\t\t<div className='addproductSection addproductSection-left'>\n\t\t\t\t\t<Input label='Title' />\n\t\t\t\t\t<h3 className='inputFieldLabel'>Description</h3>\n\t\t\t\t\t<ReactQuill theme='snow' />\n\t\t\t\t</div>\n\t\t\t\t<div className='addproductSection addproductSection-right'>\n\t\t\t\t\t<h3 className='addproductSection-right-title'>Classification</h3>\n\t\t\t\t\t<Input label='Category' />\n\t\t\t\t</div>\n\t\t\t</div>\n\n\t\t\t<div className='addproductSectionContainer'>\n\t\t\t\t<div className='addproductSection addproductSection-left'>\n\t\t\t\t\t<div className='addproductSection-left-header'>\n\t\t\t\t\t\t<h3 className='addproductSection-right-title'>Images</h3>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<FileOutlined />\n\t\t\t\t\t\t\t<span>Media Center</span>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<Dragger\n\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\tbackground: '#fff'\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t{...props}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<p className='ant-upload-drag-icon'>\n\t\t\t\t\t\t\t\t<InboxOutlined />\n\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t<p className='ant-upload-text'>Click or drag file to this area to upload</p>\n\t\t\t\t\t\t\t<p className='ant-upload-hint'>\n\t\t\t\t\t\t\t\tSupport for a single or bulk upload. Strictly prohibit from uploading company data or\n\t\t\t\t\t\t\t\tother band files\n\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t</Dragger>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div className='addproductSection addproductSection-right'>\n\t\t\t\t\t<h3 className='addproductSection-right-title'>Classification</h3>\n\t\t\t\t\t<Input label='Category' />\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default AddNewProduct;\n\n\n\n\n\n\n\n\n\n\n\n\n\n*/\n"],"sourceRoot":""}